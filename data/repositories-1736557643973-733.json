{
  "metadata": {
    "timestamp": 1736557643973,
    "page": 733,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "trailofbits/algo",
      "stars": 29131,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".ansible-lint",
          "type": "blob",
          "size": 0.12,
          "content": "skip_list:\n  - yaml\n  - '204'\nverbosity: 1\n\nwarn_list:\n  - no-changed-when\n  - no-handler\n  - fqcn-builtins\n  - var-spacing\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.19,
          "content": ".dockerignore\n.git\n.github\n.gitignore\n.travis.yml\nCONTRIBUTING.md\nDockerfile\nREADME.md\nconfig.cfg\nconfigs\ndocs\n.env\nlogo.png\ntests\nCHANGELOG.md\nPULL_REQUEST_TEMPLATE.md\nVagrantfile\nMakefile\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1,
          "content": "*.retry\n.idea/\nconfigs/*\ninventory_users\n*.kate-swp\n*env\n.DS_Store\nvenvs/*\n!venvs/.gitinit\n.vagrant\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.33,
          "content": "## 1.2 [(Unreleased)](https://github.com/trailofbits/algo/tree/HEAD)\n\n### Added\n- New provider CloudStack added [\\#1420](https://github.com/trailofbits/algo/pull/1420)\n- Support for Ubuntu 20.04 [\\#1782](https://github.com/trailofbits/algo/pull/1782)\n- Allow WireGuard to listen on port 53 [\\#1594](https://github.com/trailofbits/algo/pull/1594)\n- Introducing Makefile [\\#1553](https://github.com/trailofbits/algo/pull/1553)\n- Option to unblock SMB and Netbios [\\#1558](https://github.com/trailofbits/algo/pull/1558)\n- Allow OnDemand to be toggled later [\\#1557](https://github.com/trailofbits/algo/pull/1557)\n- New provider Hetzner added [\\#1549](https://github.com/trailofbits/algo/pull/1549)\n- Alternative Ingress IP [\\#1605](https://github.com/trailofbits/algo/pull/1605)\n\n### Fixes\n- WSL private SSH key permissions [\\#1584](https://github.com/trailofbits/algo/pull/1584)\n- Scaleway instance creating issue [\\#1549](https://github.com/trailofbits/algo/pull/1549)\n\n### Changed\n- Discontinue use of the WireGuard PPA [\\#1855](https://github.com/trailofbits/algo/pull/1855)\n- SSH changes [\\#1636](https://github.com/trailofbits/algo/pull/1636)\n  - Default port is set to `4160` and can be changed in the config\n  - SSH user for every cloud provider is `algo`\n- EC2: enable EBS encryption by default [\\#1556](https://github.com/trailofbits/algo/pull/1556)\n- Upgrades [\\#1549](https://github.com/trailofbits/algo/pull/1549)\n  - Python 3\n  - Ansible 2.9 [\\#1777](https://github.com/trailofbits/algo/pull/1777)\n  \n ### Breaking changes\n  - Python virtual environment moved to .env [\\#1549](https://github.com/trailofbits/algo/pull/1549)\n\n\n## 1.1 [(Jul 31, 2019)](https://github.com/trailofbits/algo/releases/tag/v1.1)\n\n### Removed\n- IKEv2 for Windows is now deleted, use Wireguard [\\#1493](https://github.com/trailofbits/algo/issues/1493)\n\n### Added\n- Tmpfs for key generation [\\#145](https://github.com/trailofbits/algo/issues/145)\n- Randomly generated pre-shared keys for WireGuard [\\#1465](https://github.com/trailofbits/algo/pull/1465) ([elreydetoda](https://github.com/elreydetoda))\n- Support for Ubuntu 19.04 [\\#1405](https://github.com/trailofbits/algo/pull/1405) ([jackivanov](https://github.com/jackivanov))\n- AWS support for existing EIP [\\#1292](https://github.com/trailofbits/algo/pull/1292) ([statik](https://github.com/statik))\n- Script to support cloud-init and local easy deploy [\\#1366](https://github.com/trailofbits/algo/pull/1366) ([jackivanov](https://github.com/jackivanov))\n- Automatically create cloud firewall rules for installs onto Vultr [\\#1400](https://github.com/trailofbits/algo/pull/1400) ([TC1977](https://github.com/TC1977))\n- Randomly generated IP address for the local dns resolver [\\#1429](https://github.com/trailofbits/algo/pull/1429) ([jackivanov](https://github.com/jackivanov))\n- Update users: add server pick-list [\\#1441](https://github.com/trailofbits/algo/pull/1441) ([TC1977](https://github.com/TC1977))\n- Additional testing [\\#213](https://github.com/trailofbits/algo/issues/213)\n- Add IPv6 support to DNS [\\#1425](https://github.com/trailofbits/algo/pull/1425) ([shapiro125](https://github.com/shapiro125))\n- Additional p12 with the CA cert included [\\#1403](https://github.com/trailofbits/algo/pull/1403) ([jackivanov](https://github.com/jackivanov))\n\n### Fixed\n- Fixes error in 10-algo-lo100.network [\\#1369](https://github.com/trailofbits/algo/pull/1369) ([adamluk](https://github.com/adamluk))\n- Error message is missing for some roles [\\#1364](https://github.com/trailofbits/algo/issues/1364)\n- DNS leak in Linux/Wireguard when LAN gateway/DNS is 172.16.0.1 [\\#1422](https://github.com/trailofbits/algo/issues/1422)\n- Installation error after \\#1397 [\\#1409](https://github.com/trailofbits/algo/issues/1409)\n- EC2 encrypted images bug [\\#1528](https://github.com/trailofbits/algo/issues/1528)\n\n### Changed\n- Upgrade Ansible to 2.7.12 [\\#1536](https://github.com/trailofbits/algo/pull/1536)\n- DNSmasq removed, and the DNS adblocking functionality has been moved to the dnscrypt-proxy\n- Azure: moved to the Standard_B1S image size\n- Refactoring, Linting and additional tests [\\#1397](https://github.com/trailofbits/algo/pull/1397) ([jackivanov](https://github.com/jackivanov))\n- Scaleway modules [\\#1410](https://github.com/trailofbits/algo/pull/1410) ([jackivanov](https://github.com/jackivanov))\n- Use VULTR_API_CONFIG variable if set [\\#1374](https://github.com/trailofbits/algo/pull/1374) ([davidemyers](https://github.com/davidemyers))\n- Simplify Apple Profile Configuration Template [\\#1033](https://github.com/trailofbits/algo/pull/1033) ([faf0](https://github.com/faf0))\n- Include roles as separate tasks [\\#1365](https://github.com/trailofbits/algo/pull/1365) ([jackivanov](https://github.com/jackivanov))\n\n## 1.0 [(Mar 19, 2019)](https://github.com/trailofbits/algo/releases/tag/v1.0)\n\n### Added \n- Tagged releases and changelog [\\#724](https://github.com/trailofbits/algo/issues/724)\n- Add support for custom domain names [\\#759](https://github.com/trailofbits/algo/issues/759)\n\n### Fixed\n- Set the name shown to the user \\(client\\) to be the server name specified in the install script [\\#491](https://github.com/trailofbits/algo/issues/491)\n- AGPLv3 change [\\#1351](https://github.com/trailofbits/algo/pull/1351)\n- Migrate to python3 [\\#1024](https://github.com/trailofbits/algo/issues/1024)\n- Reorganize the project around ipsec + wireguard [\\#1330](https://github.com/trailofbits/algo/issues/1330)\n- Configuration folder reorganization [\\#1330](https://github.com/trailofbits/algo/issues/1330)\n- Remove WireGuard KeepAlive and include as an option in config [\\#1251](https://github.com/trailofbits/algo/issues/1251)\n- Dnscrypt-proxy no longer works after reboot [\\#1356](https://github.com/trailofbits/algo/issues/1356)\n\n## 20 Oct 2018\n### Added\n- AWS Lightsail\n\n## 7 Sep 2018\n### Changed\n- Azure: Deployment via Azure Resource Manager\n\n## 27 Aug 2018\n### Changed\n- Large refactor to support Ansible 2.5. [Details](https://github.com/trailofbits/algo/pull/976)\n- Add a new cloud provider - Vultr\n\n### Upgrade notes\n- If any problems encountered follow the [instructions](https://github.com/trailofbits/algo#deploy-the-algo-server) from scratch\n- You can't update users on your old servers with the new code. Use the old code before this release or rebuild the server from scratch\n- Update AWS IAM permissions for your user as per [issue](https://github.com/trailofbits/algo/issues/1079#issuecomment-416577599)\n\n## 04 Jun 2018\n### Changed\n- Switched to [new cipher suite](https://github.com/trailofbits/algo/issues/981)\n\n## 24 May 2018\n### Changed\n- Switched to Ubuntu 18.04\n\n### Removed\n- Lightsail support until they have Ubuntu 18.04\n\n### Fixed\n- Scaleway API paginagion\n\n## 30 Apr 2018\n### Added\n- WireGuard support\n\n### Removed\n- Android StrongSwan profiles\n\n### Release notes\n- StrongSwan profiles for Android are deprecated now. Use WireGuard\n\n## 25 Apr 2018\n### Added\n- DNScrypt-proxy added\n- Switched to CloudFlare DNS-over-HTTPS by default\n\n## 19 Apr 2018\n### Added\n- IPv6 in subjectAltName of the certificates. This allows connecting to the Algo instance via the main IPv6 address\n\n### Fixed\n- IPv6 DNS addresses were not passing to the client\n\n### Release notes\n- In order to use the IPv6 address as the connection endpoint you need to [reinit](https://github.com/trailofbits/algo/blob/master/config.cfg#L14) the PKI and [reconfigure](https://github.com/trailofbits/algo#configure-the-vpn-clients) your devices with new certificates.\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.01,
          "content": "* @jackivanov\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.74,
          "content": "### Filing New Issues\n\n* Check that your issue is not already described in the [FAQ](docs/faq.md), [troubleshooting](docs/troubleshooting.md) docs, or an [existing issue](https://github.com/trailofbits/algo/issues)\n* Did you remember to install the dependencies for your operating system prior to installing Algo?\n* We only support modern clients, e.g. macOS 10.11+, iOS 9+, Windows 10+, Ubuntu 17.04+, etc.\n* Cloud provider support is limited to DO, AWS, GCE, and Azure. Any others are best effort only.\n* If you need to file a new issue, fill out any relevant fields in the Issue Template.\n\n### Pull Requests\n\n* Run [ansible-lint](https://github.com/willthames/ansible-lint) or [shellcheck](https://github.com/koalaman/shellcheck) on any new scripts\n\nThanks!\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.26,
          "content": "FROM python:3.11-alpine\n\nARG VERSION=\"git\"\nARG PACKAGES=\"bash libffi openssh-client openssl rsync tini gcc libffi-dev linux-headers make musl-dev openssl-dev rust cargo\"\n\nLABEL name=\"algo\" \\\n      version=\"${VERSION}\" \\\n      description=\"Set up a personal IPsec VPN in the cloud\" \\\n      maintainer=\"Trail of Bits <http://github.com/trailofbits/algo>\"\n\nRUN apk --no-cache add ${PACKAGES}\nRUN adduser -D -H -u 19857 algo\nRUN mkdir -p /algo && mkdir -p /algo/configs\n\nWORKDIR /algo\nCOPY requirements.txt .\nRUN python3 -m pip --no-cache-dir install -U pip && \\\n    python3 -m pip --no-cache-dir install virtualenv && \\\n    python3 -m virtualenv .env && \\\n    source .env/bin/activate && \\\n    python3 -m pip --no-cache-dir install -r requirements.txt\nCOPY . .\nRUN chmod 0755 /algo/algo-docker.sh\n\n# Because of the bind mounting of `configs/`, we need to run as the `root` user\n# This may break in cases where user namespacing is enabled, so hopefully Docker\n# sorts out a way to set permissions on bind-mounted volumes (`docker run -v`)\n# before userns becomes default\n# Note that not running as root will break if we don't have a matching userid\n# in the container. The filesystem has also been set up to assume root.\nUSER root\nCMD [ \"/algo/algo-docker.sh\" ]\nENTRYPOINT [ \"/sbin/tini\", \"--\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.71,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.76,
          "content": "## docker-build: Build and tag a docker image\n.PHONY: docker-build\n\nIMAGE          := trailofbits/algo\nTAG\t  \t       := latest\nDOCKERFILE     := Dockerfile\nCONFIGURATIONS := $(shell pwd)\n\ndocker-build:\n\tdocker build \\\n\t-t $(IMAGE):$(TAG) \\\n\t-f $(DOCKERFILE) \\\n\t.\n\n## docker-deploy: Mount config directory and deploy Algo\n.PHONY: docker-deploy\n\n# '--rm' flag removes the container when finished.\ndocker-deploy:\n\tdocker run \\\n\t--cap-drop=all \\\n\t--rm \\\n\t-it \\\n\t-v $(CONFIGURATIONS):/data \\\n\t$(IMAGE):$(TAG)\n\n## docker-clean: Remove images and containers.\n.PHONY: docker-prune\n\ndocker-prune:\n\tdocker images \\\n\t$(IMAGE) |\\\n\tawk '{if (NR>1) print $$3}' |\\\n\txargs docker rmi\n\n## docker-all: Build, Deploy, Prune\n.PHONY: docker-all\n\ndocker-all: docker-build docker-deploy docker-prune\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 1.31,
          "content": "<!--- Provide a general summary of your changes in the Title above -->\n\n## Description\n<!--- Describe your changes in detail -->\n\n## Motivation and Context\n<!--- Why is this change required? What problem does it solve? -->\n<!--- If it fixes an open issue, please link to the issue here. -->\n\n## How Has This Been Tested?\n<!--- Please describe in detail how you tested your changes. -->\n<!--- Include details of your testing environment, tests ran to see how -->\n<!--- your change affects other areas of the code, etc. -->\n\n## Types of changes\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\n- Bug fix (non-breaking change which fixes an issue)\n- New feature (non-breaking change which adds functionality)\n- Breaking change (fix or feature that would cause existing functionality to not work as expected)\n\n## Checklist:\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\n- [] I have read the **CONTRIBUTING** document.\n- [] My code follows the code style of this project.\n- [] My change requires a change to the documentation.\n- [] I have updated the documentation accordingly.\n- [] I have added tests to cover my changes.\n- [] All new and existing tests passed.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.52,
          "content": "# Algo VPN\n\n[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/fold_left.svg?style=social&label=Follow%20%40AlgoVPN)](https://twitter.com/AlgoVPN)\n[![](https://github.com/trailofbits/algo/workflows/Main/badge.svg?branch=master)](https://github.com/trailofbits/algo/actions)\n\nAlgo VPN is a set of Ansible scripts that simplify the setup of a personal WireGuard and IPsec VPN. It uses the most secure defaults available and works with common cloud providers. See our [release announcement](https://blog.trailofbits.com/2016/12/12/meet-algo-the-vpn-that-works/) for more information.\n\n## Features\n\n* Supports only IKEv2 with strong crypto (AES-GCM, SHA2, and P-256) for iOS, macOS, and Linux\n* Supports [WireGuard](https://www.wireguard.com/) for all of the above, in addition to Android and Windows 10\n* Generates .conf files and QR codes for iOS, macOS, Android, and Windows WireGuard clients\n* Generates Apple profiles to auto-configure iOS and macOS devices for IPsec - no client software required\n* Includes a helper script to add and remove users\n* Blocks ads with a local DNS resolver (optional)\n* Sets up limited SSH users for tunneling traffic (optional)\n* Based on current versions of Ubuntu and strongSwan\n* Installs to DigitalOcean, Amazon Lightsail, Amazon EC2, Vultr, Microsoft Azure, Google Compute Engine, Scaleway, OpenStack, CloudStack, Hetzner Cloud, Linode, or [your own Ubuntu server (for more advanced users)](docs/deploy-to-ubuntu.md)\n\n## Anti-features\n\n* Does not support legacy cipher suites or protocols like L2TP, IKEv1, or RSA\n* Does not install Tor, OpenVPN, or other risky servers\n* Does not depend on the security of [TLS](https://tools.ietf.org/html/rfc7457)\n* Does not claim to provide anonymity or censorship avoidance\n* Does not claim to protect you from the [FSB](https://en.wikipedia.org/wiki/Federal_Security_Service), [MSS](https://en.wikipedia.org/wiki/Ministry_of_State_Security_(China)), [DGSE](https://en.wikipedia.org/wiki/Directorate-General_for_External_Security), or [FSM](https://en.wikipedia.org/wiki/Flying_Spaghetti_Monster)\n\n## Deploy the Algo Server\n\nThe easiest way to get an Algo server running is to run it on your local system or from [Google Cloud Shell](docs/deploy-from-cloudshell.md) and let it set up a _new_ virtual machine in the cloud for you.\n\n1. **Setup an account on a cloud hosting provider.** Algo supports [DigitalOcean](https://m.do.co/c/4d7f4ff9cfe4) (most user friendly), [Amazon Lightsail](https://aws.amazon.com/lightsail/), [Amazon EC2](https://aws.amazon.com/), [Vultr](https://www.vultr.com/), [Microsoft Azure](https://azure.microsoft.com/), [Google Compute Engine](https://cloud.google.com/compute/), [Scaleway](https://www.scaleway.com/), [DreamCompute](https://www.dreamhost.com/cloud/computing/), [Linode](https://www.linode.com), or other OpenStack-based cloud hosting, [Exoscale](https://www.exoscale.com) or other CloudStack-based cloud hosting,  or [Hetzner Cloud](https://www.hetzner.com/).\n\n2. **Get a copy of Algo.** The Algo scripts will be installed on your local system. There are two ways to get a copy:\n\n    - Download the [ZIP file](https://github.com/trailofbits/algo/archive/master.zip). Unzip the file to create a directory named `algo-master` containing the Algo scripts.\n\n    - Use `git clone` to create a directory named `algo` containing the Algo scripts:\n        ```bash\n        git clone https://github.com/trailofbits/algo.git\n        ```\n\n3. **Install Algo's core dependencies.** Algo requires that **Python 3.10 or later** and at least one supporting package are installed on your system.\n\n    - **macOS:** Catalina (10.15) and higher includes Python 3 as part of the optional Command Line Developer Tools package. From Terminal run:\n\n        ```bash\n        python3 -m pip install --user --upgrade virtualenv\n        ```\n\n        If prompted, install the Command Line Developer Tools and re-run the above command.\n\n        For macOS versions prior to Catalina, see [Deploy from macOS](docs/deploy-from-macos.md) for information on installing Python 3 .\n\n    - **Linux:** Recent releases of Ubuntu, Debian, and Fedora come with Python 3 already installed. If your Python version is not 3.10, then you will need to use pyenv to install Python 3.10. Make sure your system is up-to-date and install the supporting package(s):\n        * Ubuntu and Debian:\n            ```bash\n            sudo apt install -y --no-install-recommends python3-virtualenv file lookup\n            ```\n            On a Raspberry Pi running Ubuntu also install `libffi-dev` and `libssl-dev`.\n\n        * Fedora:\n            ```bash\n            sudo dnf install -y python3-virtualenv\n            ```\n\n    - **Windows:** Use the Windows Subsystem for Linux (WSL) to create your own copy of Ubuntu running under Windows from which to install and run Algo. See the [Windows documentation](docs/deploy-from-windows.md) for more information.\n\n4. **Install Algo's remaining dependencies.** You'll need to run these commands from the Algo directory each time you download a new copy of Algo. In a Terminal window `cd` into the `algo-master` (ZIP file) or `algo` (`git clone`) directory and run:\n    ```bash\n    python3 -m virtualenv --python=\"$(command -v python3)\" .env &&\n      source .env/bin/activate &&\n      python3 -m pip install -U pip virtualenv &&\n      python3 -m pip install -r requirements.txt\n    ```\n    On Fedora first run `export TMPDIR=/var/tmp`, then add the option `--system-site-packages` to the first command above (after `python3 -m virtualenv`). On macOS install the C compiler if prompted.\n\n5. **Set your configuration options.** Open the file `config.cfg` in your favorite text editor. Specify the users you wish to create in the `users` list. Create a unique user for each device you plan to connect to your VPN. \n > Note: [IKEv2 Only] If you want to add or delete users later, you **must** select `yes` at the `Do you want to retain the keys (PKI)?` prompt during the server deployment. You should also review the other options before deployment, as changing your mind about them later [may require you to deploy a brand new server](https://github.com/trailofbits/algo/blob/master/docs/faq.md#i-deployed-an-algo-server-can-you-update-it-with-new-features).\n\n6. **Start the deployment.** Return to your terminal. In the Algo directory, run `./algo` and follow the instructions. There are several optional features available, none of which are required for a fully functional VPN server. These optional features are described in greater detail in [here](docs/deploy-from-ansible.md).\n\nThat's it! You will get the message below when the server deployment process completes. Take note of the p12 (user certificate) password and the CA key in case you need them later, **they will only be displayed this time**.\n\nYou can now set up clients to connect to your VPN. Proceed to [Configure the VPN Clients](#configure-the-vpn-clients) below.\n\n```\n    \"#                          Congratulations!                            #\"\n    \"#                     Your Algo server is running.                     #\"\n    \"#    Config files and certificates are in the ./configs/ directory.    #\"\n    \"#              Go to https://whoer.net/ after connecting               #\"\n    \"#        and ensure that all your traffic passes through the VPN.      #\"\n    \"#                     Local DNS resolver 172.16.0.1                    #\"\n    \"#        The p12 and SSH keys password for new users is XXXXXXXX       #\"\n    \"#        The CA key password is XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX       #\"\n    \"#      Shell access: ssh -F configs/<server_ip>/ssh_config <hostname>  #\"\n```\n\n## Configure the VPN Clients\n\nCertificates and configuration files that users will need are placed in the `configs` directory. Make sure to secure these files since many contain private keys. All files are saved under a subdirectory named with the IP address of your new Algo VPN server.\n\n### Apple Devices\n\nWireGuard is used to provide VPN services on Apple devices. Algo generates a WireGuard configuration file, `wireguard/<username>.conf`, and a QR code, `wireguard/<username>.png`, for each user defined in `config.cfg`.\n\nOn iOS, install the [WireGuard](https://itunes.apple.com/us/app/wireguard/id1441195209?mt=8) app from the iOS App Store. Then, use the WireGuard app to scan the QR code or AirDrop the configuration file to the device.\n\nOn macOS Mojave or later, install the [WireGuard](https://itunes.apple.com/us/app/wireguard/id1451685025?mt=12) app from the Mac App Store. WireGuard will appear in the menu bar once you run the app. Click on the WireGuard icon, choose **Import tunnel(s) from file...**, then select the appropriate WireGuard configuration file.\n\nOn either iOS or macOS, you can enable \"Connect on Demand\" and/or exclude certain trusted Wi-Fi networks (such as your home or work) by editing the tunnel configuration in the WireGuard app. (Algo can't do this automatically for you.)\n\nInstalling WireGuard is a little more complicated on older version of macOS. See [Using macOS as a Client with WireGuard](docs/client-macos-wireguard.md).\n\nIf you prefer to use the built-in IPSEC VPN on Apple devices, or need \"Connect on Demand\" or excluded Wi-Fi networks automatically configured, then see [Using Apple Devices as a Client with IPSEC](docs/client-apple-ipsec.md).\n\n### Android Devices\n\nWireGuard is used to provide VPN services on Android. Install the [WireGuard VPN Client](https://play.google.com/store/apps/details?id=com.wireguard.android). Import the corresponding `wireguard/<name>.conf` file to your device, then setup a new connection with it. See the [Android setup instructions](/docs/client-android.md) for more detailed walkthrough.\n\n### Windows\n\nWireGuard is used to provide VPN services on Windows. Algo generates a WireGuard configuration file, `wireguard/<username>.conf`, for each user defined in `config.cfg`.\n\nInstall the [WireGuard VPN Client](https://www.wireguard.com/install/#windows-7-8-81-10-2012-2016-2019). Import the generated `wireguard/<username>.conf` file to your device, then setup a new connection with it.\n\n### Linux WireGuard Clients\n\nWireGuard works great with Linux clients. See [this page](docs/client-linux-wireguard.md) for an example of how to configure WireGuard on Ubuntu.\n\n### Linux strongSwan IPsec Clients (e.g., OpenWRT, Ubuntu Server, etc.)\n\nPlease see [this page](docs/client-linux-ipsec.md).\n\n### OpenWrt Wireguard Clients\n\nPlease see [this page](docs/client-openwrt-router-wireguard.md).\n\n### Other Devices\n\nDepending on the platform, you may need one or multiple of the following files.\n\n* ipsec/manual/cacert.pem: CA Certificate\n* ipsec/manual/<user>.p12: User Certificate and Private Key (in PKCS#12 format)\n* ipsec/manual/<user>.conf: strongSwan client configuration\n* ipsec/manual/<user>.secrets: strongSwan client configuration\n* ipsec/apple/<user>.mobileconfig: Apple Profile\n* wireguard/<user>.conf: WireGuard configuration profile\n* wireguard/<user>.png: WireGuard configuration QR code\n\n## Setup an SSH Tunnel\n\nIf you turned on the optional SSH tunneling role, then local user accounts will be created for each user in `config.cfg` and SSH authorized_key files for them will be in the `configs` directory (user.ssh.pem). SSH user accounts do not have shell access, cannot authenticate with a password, and only have limited tunneling options (e.g., `ssh -N` is required). This ensures that SSH users have the least access required to setup a tunnel and can perform no other actions on the Algo server.\n\nUse the example command below to start an SSH tunnel by replacing `<user>` and `<ip>` with your own. Once the tunnel is setup, you can configure a browser or other application to use 127.0.0.1:1080 as a SOCKS proxy to route traffic through the Algo server:\n\n```bash\nssh -D 127.0.0.1:1080 -f -q -C -N <user>@algo -i configs/<ip>/ssh-tunnel/<user>.pem -F configs/<ip>/ssh_config\n```\n\n## SSH into Algo Server\n\nYour Algo server is configured for key-only SSH access for administrative purposes. Open the Terminal app, `cd` into the `algo-master` directory where you originally downloaded Algo, and then use the command listed on the success message:\n\n```\nssh -F configs/<ip>/ssh_config <hostname>\n```\n\nwhere `<ip>` is the IP address of your Algo server. If you find yourself regularly logging into the server then it will be useful to load your Algo ssh key automatically. Add the following snippet to the bottom of `~/.bash_profile` to add it to your shell environment permanently:\n\n```\nssh-add ~/.ssh/algo > /dev/null 2>&1\n```\n\nAlternatively, you can choose to include the generated configuration for any Algo servers created into your SSH config. Edit the file `~/.ssh/config` to include this directive at the top:\n\n```\nInclude <algodirectory>/configs/*/ssh_config\n```\n\nwhere `<algodirectory>` is the directory where you cloned Algo.\n\n## Adding or Removing Users\n\n_If you chose to save the CA key during the deploy process,_ then Algo's own scripts can easily add and remove users from the VPN server.\n\n1. Update the `users` list in your `config.cfg`\n2. Open a terminal, `cd` to the algo directory, and activate the virtual environment with `source .env/bin/activate`\n3. Run the command: `./algo update-users`\n\nAfter this process completes, the Algo VPN server will contain only the users listed in the `config.cfg` file.\n\n## Additional Documentation\n* [FAQ](docs/faq.md)\n* [Troubleshooting](docs/troubleshooting.md)\n* How Algo uses [Firewalls](docs/firewalls.md)\n\n### Setup Instructions for Specific Cloud Providers\n* Configure [Amazon EC2](docs/cloud-amazon-ec2.md)\n* Configure [Azure](docs/cloud-azure.md)\n* Configure [DigitalOcean](docs/cloud-do.md)\n* Configure [Google Cloud Platform](docs/cloud-gce.md)\n* Configure [Vultr](docs/cloud-vultr.md)\n* Configure [CloudStack](docs/cloud-cloudstack.md)\n* Configure [Hetzner Cloud](docs/cloud-hetzner.md)\n\n### Install and Deploy from Common Platforms\n* Deploy from [macOS](docs/deploy-from-macos.md)\n* Deploy from [Windows](docs/deploy-from-windows.md)\n* Deploy from [Google Cloud Shell](docs/deploy-from-cloudshell.md)\n* Deploy from a [Docker container](docs/deploy-from-docker.md)\n\n### Setup VPN Clients to Connect to the Server\n* Setup [Android](docs/client-android.md) clients\n* Setup [Linux](docs/client-linux.md) clients with Ansible\n* Setup Ubuntu clients to use [WireGuard](docs/client-linux-wireguard.md)\n* Setup Linux clients to use [IPsec](docs/client-linux-ipsec.md)\n* Setup Apple devices to use [IPsec](docs/client-apple-ipsec.md)\n* Setup Macs running macOS 10.13 or older to use [WireGuard](docs/client-macos-wireguard.md)\n\n### Advanced Deployment\n* Deploy to your own [Ubuntu](docs/deploy-to-ubuntu.md) server, and road warrior setup\n* Deploy from [Ansible](docs/deploy-from-ansible.md) non-interactively\n* Deploy onto a [cloud server at time of creation with shell script or cloud-init](docs/deploy-from-script-or-cloud-init-to-localhost.md)\n* Deploy to an [unsupported cloud provider](docs/deploy-to-unsupported-cloud.md)\n* Deploy to your own [FreeBSD](docs/deploy-to-freebsd.md) server\n\nIf you've read all the documentation and have further questions, [create a new discussion](https://github.com/trailofbits/algo/discussions).\n\n## Endorsements\n\n> I've been ranting about the sorry state of VPN svcs for so long, probably about\n> time to give a proper talk on the subject. TL;DR: use Algo.\n\n-- [Kenn White](https://twitter.com/kennwhite/status/814166603587788800)\n\n> Before picking a VPN provider/app, make sure you do some research\n> https://research.csiro.au/ng/wp-content/uploads/sites/106/2016/08/paper-1.pdf ... – or consider Algo\n\n-- [The Register](https://twitter.com/TheRegister/status/825076303657177088)\n\n> Algo is really easy and secure.\n\n-- [the grugq](https://twitter.com/thegrugq/status/786249040228786176)\n\n> I played around with Algo VPN, a set of scripts that let you set up a VPN in the cloud in very little time, even if you don’t know much about development. I’ve got to say that I was quite impressed with Trail of Bits’ approach.\n\n-- [Romain Dillet](https://twitter.com/romaindillet/status/851037243728965632) for [TechCrunch](https://techcrunch.com/2017/04/09/how-i-made-my-own-vpn-server-in-15-minutes/)\n\n> If you’re uncomfortable shelling out the cash to an anonymous, random VPN provider, this is the best solution.\n\n-- [Thorin Klosowski](https://twitter.com/kingthor) for [Lifehacker](http://lifehacker.com/how-to-set-up-your-own-completely-free-vpn-in-the-cloud-1794302432)\n\n## Support Algo VPN\n[![Flattr](https://button.flattr.com/flattr-badge-large.png)](https://flattr.com/submit/auto?fid=kxw60j&url=https%3A%2F%2Fgithub.com%2Ftrailofbits%2Falgo)\n[![PayPal](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=CYZZD39GXUJ3E)\n[![Patreon](https://img.shields.io/badge/back_on-patreon-red.svg)](https://www.patreon.com/algovpn)\n[![Bountysource](https://img.shields.io/bountysource/team/trailofbits/activity.svg)](https://www.bountysource.com/teams/trailofbits)\n\nAll donations support continued development. Thanks!\n\n* We accept donations via [PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=CYZZD39GXUJ3E), [Patreon](https://www.patreon.com/algovpn), and [Flattr](https://flattr.com/submit/auto?fid=kxw60j&url=https%3A%2F%2Fgithub.com%2Ftrailofbits%2Falgo).\n* Use our [referral code](https://m.do.co/c/4d7f4ff9cfe4) when you sign up to Digital Ocean for a $10 credit.\n* We also accept and appreciate contributions of new code and bugfixes via Github Pull Requests.\n\nAlgo is licensed and distributed under the AGPLv3. If you want to distribute a closed-source modification or service based on Algo, then please consider <a href=\"mailto:opensource@trailofbits.com\">purchasing an exception</a> . As with the methods above, this will help support continued development.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.72,
          "content": "# Reporting Security Issues\n\nThe Algo team and community take security bugs in Algo seriously. We appreciate your efforts to responsibly disclose your findings, and will make every effort to acknowledge your contributions.\n\nTo report a security issue, please use the GitHub Security Advisory [\"Report a Vulnerability\"](https://github.com/trailofbits/algo/security/) tab.\n\nThe Algo team will send a response indicating the next steps in handling your report. After the initial reply to your report, the security team will keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.\n\nReport security bugs in third-party modules to the person or team maintaining the module.\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 1.04,
          "content": "Vagrant.configure(\"2\") do |config| \n  config.vm.box = \"bento/ubuntu-20.04\" \n  \n  config.vm.provider \"virtualbox\" do |v| \n    v.name = \"algo-20.04\"\n    v.memory = \"512\" \n    v.cpus = \"1\" \n  end\n\n  config.vm.synced_folder \"./\", \"/opt/algo\", create: true\n\n  config.vm.provision \"ansible_local\" do |ansible|\n    ansible.playbook = \"/opt/algo/main.yml\"\n\n    # https://github.com/hashicorp/vagrant/issues/12204\n    ansible.pip_install_cmd = \"sudo apt-get install -y python3-pip python-is-python3 && sudo ln -s -f /usr/bin/pip3 /usr/bin/pip\"\n    ansible.install_mode = \"pip_args_only\"\n    ansible.pip_args = \"-r /opt/algo/requirements.txt\"\n    ansible.inventory_path = \"/opt/algo/inventory\"\n    ansible.limit = \"local\"\n    ansible.verbose = \"-vvvv\"\n    ansible.extra_vars = {\n      provider: \"local\",\n      server: \"localhost\",\n      ssh_user: \"\",\n      endpoint: \"127.0.0.1\",\n      ondemand_cellular: true,\n      ondemand_wifi: false,\n      dns_adblocking: true,\n      ssh_tunneling: true,\n      store_pki: true,\n      tests: true,\n      no_log: false\n    }\n  end\nend\n"
        },
        {
          "name": "algo",
          "type": "blob",
          "size": 0.54,
          "content": "#!/usr/bin/env bash\n\nset -e\n\nif [ -z ${VIRTUAL_ENV+x} ]\nthen\n  ACTIVATE_SCRIPT=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )/.env/bin/activate\"\n  if [ -f \"$ACTIVATE_SCRIPT\" ]\n  then\n    # shellcheck source=/dev/null\n    source \"$ACTIVATE_SCRIPT\"\n  else\n    echo \"$ACTIVATE_SCRIPT not found.  Did you follow documentation to install dependencies?\"\n    exit 1\n  fi\nfi\n\ncase \"$1\" in\n  update-users) PLAYBOOK=users.yml; ARGS=( \"${@:2}\"  -t update-users ) ;;\n  *) PLAYBOOK=main.yml; ARGS=( \"${@}\" ) ;;\nesac\n\nansible-playbook ${PLAYBOOK} \"${ARGS[@]}\"\n"
        },
        {
          "name": "algo-docker.sh",
          "type": "blob",
          "size": 1.19,
          "content": "#!/usr/bin/env bash\n\nset -eEo pipefail\n\nALGO_DIR=\"/algo\"\nDATA_DIR=\"/data\"\n\numask 0077\n\nusage() {\n    retcode=\"${1:-0}\"\n    echo \"To run algo from Docker:\"\n    echo \"\"\n    echo \"docker run --cap-drop=all -it -v <path to configurations>:\"${DATA_DIR}\" ghcr.io/trailofbits/algo:latest\"\n    echo \"\"\n    exit ${retcode}\n}\n\nif [ ! -f \"${DATA_DIR}\"/config.cfg ] ; then\n  echo \"Looks like you're not bind-mounting your config.cfg into this container.\"\n  echo \"algo needs a configuration file to run.\"\n  echo \"\"\n  usage -1\nfi\n\nif [ ! -e /dev/console ] ; then\n  echo \"Looks like you're trying to run this container without a TTY.\"\n  echo \"If you don't pass `-t`, you can't interact with the algo script.\"\n  echo \"\"\n  usage -1\nfi\n\n# To work around problems with bind-mounting Windows volumes, we need to\n# copy files out of ${DATA_DIR}, ensure appropriate line endings and permissions,\n# then copy the algo-generated files into ${DATA_DIR}.\n\ntr -d '\\r' < \"${DATA_DIR}\"/config.cfg > \"${ALGO_DIR}\"/config.cfg\ntest -d \"${DATA_DIR}\"/configs && rsync -qLktr --delete \"${DATA_DIR}\"/configs \"${ALGO_DIR}\"/\n\n\"${ALGO_DIR}\"/algo \"${ALGO_ARGS[@]}\"\nretcode=${?}\n\nrsync -qLktr --delete \"${ALGO_DIR}\"/configs \"${DATA_DIR}\"/\nexit ${retcode}\n"
        },
        {
          "name": "algo-showenv.sh",
          "type": "blob",
          "size": 2.43,
          "content": "#!/usr/bin/env bash\n#\n# Print information about Algo's invocation environment to aid in debugging.\n# This is normally called from Ansible right before a deployment gets underway.\n\n# Skip printing this header if we're just testing with no arguments.\nif [[ $# -gt 0 ]]; then\n    echo \"\"\n    echo \"--> Please include the following block of text when reporting issues:\"\n    echo \"\"\nfi\n\nif [[ ! -f ./algo ]]; then\n    echo \"This should be run from the top level Algo directory\"\nfi\n\n# Determine the operating system.\ncase \"$(uname -s)\" in\n    Linux)\n        OS=\"Linux ($(uname -r) $(uname -v))\"\n        if [[ -f /etc/os-release ]]; then\n            # shellcheck disable=SC1091\n            # I hope this isn't dangerous.\n            . /etc/os-release\n            if [[ ${PRETTY_NAME} ]]; then\n                OS=\"${PRETTY_NAME}\"\n            elif [[ ${NAME} ]]; then\n                OS=\"${NAME} ${VERSION}\"\n            fi\n        fi\n        STAT=\"stat -c %y\"\n        ;;\n    Darwin)\n        OS=\"$(sw_vers -productName) $(sw_vers -productVersion)\"\n        STAT=\"stat -f %Sm\"\n        ;;\n    *)\n        OS=\"Unknown\"\n        ;;\nesac\n\n# Determine if virtualization is being used with Linux.\nVIRTUALIZED=\"\"\nif [[ -x $(command -v systemd-detect-virt) ]]; then\n    DETECT_VIRT=\"$(systemd-detect-virt)\"\n    if [[ ${DETECT_VIRT} != \"none\" ]]; then\n        VIRTUALIZED=\" (Virtualized: ${DETECT_VIRT})\"\n    fi\nelif [[ -f /.dockerenv ]]; then\n    VIRTUALIZED=\" (Virtualized: docker)\"\nfi\n\necho \"Algo running on: ${OS}${VIRTUALIZED}\"\n\n# Determine the currentness of the Algo software.\nif [[ -d .git && -x $(command -v git) ]]; then\n    ORIGIN=\"$(git remote get-url origin)\"\n    COMMIT=\"$(git log --max-count=1 --oneline --no-decorate --no-color)\"\n    if [[ ${ORIGIN} == \"https://github.com/trailofbits/algo.git\" ]]; then\n        SOURCE=\"clone\"\n    else\n        SOURCE=\"fork\"\n    fi\n    echo \"Created from git ${SOURCE}. Last commit: ${COMMIT}\"\nelif [[ -f LICENSE && ${STAT} ]]; then\n    CREATED=\"$(${STAT} LICENSE)\"\n    echo \"ZIP file created: ${CREATED}\"\nfi\n\n# The Python version might be useful to know.\nif [[ -x ./.env/bin/python3 ]]; then\n    ./.env/bin/python3 --version 2>&1\nelif [[ -f ./algo ]]; then\n    echo \".env/bin/python3 not found: has 'python3 -m virtualenv ...' been run?\"\nfi\n\n# Just print out all command line arguments, which are expected\n# to be Ansible variables.\nif [[ $# -gt 0 ]]; then\n    echo \"Runtime variables:\"\n    for VALUE in \"$@\"; do\n        echo \"    ${VALUE}\"\n    done\nfi\n\nexit 0\n"
        },
        {
          "name": "ansible.cfg",
          "type": "blob",
          "size": 0.44,
          "content": "[defaults]\ninventory = inventory\npipelining = True\nretry_files_enabled = False\nhost_key_checking = False\ntimeout = 60\nstdout_callback = default\ndisplay_skipped_hosts = no\nforce_valid_group_names = ignore\n\n[paramiko_connection]\nrecord_host_keys = False\n\n[ssh_connection]\nssh_args = -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null -o ConnectTimeout=6 -o ConnectionAttempts=30 -o IdentitiesOnly=yes\nscp_if_ssh = True\nretries = 30\n"
        },
        {
          "name": "cloud.yml",
          "type": "blob",
          "size": 0.51,
          "content": "---\n- name: Provision the server\n  hosts: localhost\n  tags: always\n  become: false\n  vars_files:\n    - config.cfg\n\n  tasks:\n    - block:\n        - name: Local pre-tasks\n          import_tasks: playbooks/cloud-pre.yml\n\n        - name: Include a provisioning role\n          include_role:\n            name: \"{{ 'local' if algo_provider == 'local' else 'cloud-' + algo_provider }}\"\n\n        - name: Local post-tasks\n          import_tasks: playbooks/cloud-post.yml\n      rescue:\n        - include_tasks: playbooks/rescue.yml\n"
        },
        {
          "name": "config.cfg",
          "type": "blob",
          "size": 8.4,
          "content": "---\n\n# This is the list of users to generate.\n# Every device must have a unique user.\n# You can add up to 65,534 new users over the lifetime of an AlgoVPN.\n# User names with leading 0's or containing only numbers should be escaped in double quotes, e.g. \"000dan\" or \"123\".\n# Email addresses are not allowed.\nusers:\n  - phone\n  - laptop\n  - desktop\n\n### Review these options BEFORE you run Algo, as they are very difficult/impossible to change after the server is deployed.\n\n# Change default SSH port for the cloud roles only\n# It doesn't apply if you deploy to your existing Ubuntu Server\nssh_port: 4160\n\n# Deploy StrongSwan to enable IPsec support\nipsec_enabled: true\n\n# Deploy WireGuard\n# WireGuard will listen on 51820/UDP. You might need to change to another port\n# if your network blocks this one. Be aware that 53/UDP (DNS) is blocked on some\n# mobile data networks.\nwireguard_enabled: true\nwireguard_port: 51820\n\n# This feature allows you to configure the Algo server to send outbound traffic\n# through a different external IP address than the one you are establishing the VPN connection with.\n# More info https://trailofbits.github.io/algo/cloud-alternative-ingress-ip.html\n# Available for the following cloud providers:\n# - DigitalOcean\nalternative_ingress_ip: false\n\n# Reduce the MTU of the VPN tunnel\n# Some cloud and internet providers use a smaller MTU (Maximum Transmission\n# Unit) than the normal value of 1500 and if you don't reduce the MTU of your\n# VPN tunnel some network connections will hang. Algo will attempt to set this\n# automatically based on your server, but if connections hang you might need to\n# adjust this yourself.\n# See: https://github.com/trailofbits/algo/blob/master/docs/troubleshooting.md#various-websites-appear-to-be-offline-through-the-vpn\nreduce_mtu: 0\n\n# Algo will use the following lists to block ads. You can add new block lists\n# after deployment by modifying the line starting \"BLOCKLIST_URLS=\" at:\n# /usr/local/sbin/adblock.sh\n# If you load very large blocklists, you may also have to modify resource limits:\n# /etc/systemd/system/dnsmasq.service.d/100-CustomLimitations.conf\nadblock_lists:\n - \"https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts\"\n\n# Enable DNS encryption.\n# If 'false', 'dns_servers' should be specified below.\n# DNS encryption can not be disabled if DNS adblocking is enabled\ndns_encryption: true\n\n# Block traffic between connected clients. Change this to false to enable\n# connected clients to reach each other, as well as other computers on the\n# same LAN as your Algo server (i.e. the \"road warrior\" setup). In this\n# case, you may also want to enable SMB/CIFS and NETBIOS traffic below.\nBetweenClients_DROP: true\n\n# Block SMB/CIFS traffic\nblock_smb: true\n\n# Block NETBIOS traffic\nblock_netbios: true\n\n# Your Algo server will automatically install security updates. Some updates\n# require a reboot to take effect but your Algo server will not reboot itself\n# automatically unless you change 'enabled' below from 'false' to 'true', in\n# which case a reboot will take place if necessary at the time specified (as\n# HH:MM) in the time zone of your Algo server. The default time zone is UTC.\nunattended_reboot:\n  enabled: false\n  time: 06:00\n\n### Advanced users only below this line ###\n\n# DNS servers which will be used if 'dns_encryption' is 'true'. Multiple\n# providers may be specified, but avoid mixing providers that filter results\n# (like Cisco) with those that don't (like Cloudflare) or you could get\n# inconsistent results. The list of available public providers can be found\n# here:\n# https://github.com/DNSCrypt/dnscrypt-resolvers/blob/master/v2/public-resolvers.md\ndnscrypt_servers:\n  ipv4:\n    - cloudflare\n#   - google\n#   - <YourCustomServer>  # E.g., if using NextDNS, this will be something like NextDNS-abc123.\n                          # You must also fill in custom_server_stamps below. You may specify\n                          # multiple custom servers.\n  ipv6:\n    - cloudflare-ipv6\n\ncustom_server_stamps:\n# YourCustomServer: 'sdns://...'\n\n# DNS servers which will be used if 'dns_encryption' is 'false'.\n# Fallback resolvers for systemd-resolved\n# The default is to use Cloudflare.\ndns_servers:\n  ipv4:\n    - 1.1.1.1\n    - 1.0.0.1\n  ipv6:\n    - 2606:4700:4700::1111\n    - 2606:4700:4700::1001\n\n# Store the PKI in a ram disk. Enabled only if store_pki (retain the PKI) is set to false\n# Supports on MacOS and Linux only (including Windows Subsystem for Linux)\npki_in_tmpfs: true\n\n# Set this to 'true' when running './algo update-users' if you want ALL users to get new certs, not just new users.\nkeys_clean_all: false\n\n# StrongSwan log level\n# https://wiki.strongswan.org/projects/strongswan/wiki/LoggerConfiguration\nstrongswan_log_level: 2\n\n# rightsourceip for ipsec\n# ipv4\nstrongswan_network: 10.48.0.0/16\n# ipv6\nstrongswan_network_ipv6: '2001:db8:4160::/48'\n\n# If you're behind NAT or a firewall and you want to receive incoming connections long after network traffic has gone silent.\n# This option will keep the \"connection\" open in the eyes of NAT.\n# See: https://www.wireguard.com/quickstart/#nat-and-firewall-traversal-persistence\nwireguard_PersistentKeepalive: 0\n\n# WireGuard network configuration\nwireguard_network_ipv4: 10.49.0.0/16\nwireguard_network_ipv6: 2001:db8:a160::/48\n\n# Randomly generated IP address for the local dns resolver\nlocal_service_ip: \"{{ '172.16.0.1' | ipmath(1048573 | random(seed=algo_server_name + ansible_fqdn)) }}\"\nlocal_service_ipv6: \"{{ 'fd00::1' | ipmath(1048573 | random(seed=algo_server_name + ansible_fqdn)) }}\"\n\n# Hide sensitive data\nno_log: true\n\ncongrats:\n  common: |\n    \"#                          Congratulations!                            #\"\n    \"#                     Your Algo server is running.                     #\"\n    \"#    Config files and certificates are in the ./configs/ directory.    #\"\n    \"#              Go to https://whoer.net/ after connecting               #\"\n    \"#        and ensure that all your traffic passes through the VPN.      #\"\n    \"#                     Local DNS resolver {{ local_service_ip }}{{ ', ' + local_service_ipv6 if ipv6_support else '' }}                   #\"\n  p12_pass: |\n    \"#        The p12 and SSH keys password for new users is {{ p12_export_password }}       #\"\n  ca_key_pass: |\n    \"#        The CA key password is {{ CA_password|default(omit) }}       #\"\n  ssh_access: |\n    \"#      Shell access: ssh -F configs/{{ ansible_ssh_host|default(omit) }}/ssh_config {{ algo_server_name }}        #\"\n\nSSH_keys:\n  comment: algo@ssh\n  private: configs/algo.pem\n  private_tmp: /tmp/algo-ssh.pem\n  public: configs/algo.pem.pub\n\ncloud_providers:\n  azure:\n    size: Standard_B1S\n    osDisk:\n      # The storage account type to use for the OS disk. Possible values:\n      # 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS',\n      # 'Premium_ZRS', 'StandardSSD_ZRS', 'PremiumV2_LRS'.\n      type: Standard_LRS\n    image:\n      publisher: Canonical\n      offer: 0001-com-ubuntu-minimal-jammy-daily\n      sku: minimal-22_04-daily-lts\n      version: latest\n  digitalocean:\n    # See docs for extended droplet options, pricing, and availability.\n    # Possible values: 's-1vcpu-512mb-10gb', 's-1vcpu-1gb', ...\n    size: s-1vcpu-1gb\n    image: \"ubuntu-22-04-x64\"\n  ec2:\n    # Change the encrypted flag to \"false\" to disable AWS volume encryption.\n    encrypted: true\n    # Set use_existing_eip to \"true\" if you want to use a pre-allocated Elastic IP\n    # Additional prompt will be raised to determine which IP to use\n    use_existing_eip: false\n    size: t2.micro\n    image:\n      name: \"ubuntu-jammy-22.04\"\n      arch: x86_64\n      owner: \"099720109477\"\n    # Change instance_market_type from \"on-demand\" to \"spot\" to launch a spot\n    # instance. See deploy-from-ansible.md for spot's additional IAM permission\n    instance_market_type: on-demand\n  gce:\n    size: e2-micro\n    image: ubuntu-2204-lts\n    external_static_ip: false\n  lightsail:\n    size: nano_2_0\n    image: ubuntu_22_04\n  scaleway:\n    size: DEV1-S\n    image: Ubuntu 22.04 Jammy Jellyfish\n    arch: x86_64\n  hetzner:\n    server_type: cx22\n    image: ubuntu-22.04\n  openstack:\n    flavor_ram: \">=512\"\n    image:  Ubuntu-22.04\n  cloudstack:\n    size: Micro\n    image: Linux Ubuntu 22.04 LTS 64-bit\n    disk: 10\n  vultr:\n    os: Ubuntu 22.04 LTS x64\n    size: vc2-1c-1gb\n  linode:\n    type: g6-nanode-1\n    image: linode/ubuntu22.04\n  local:\n\nfail_hint:\n  - Sorry, but something went wrong!\n  - Please check the troubleshooting guide.\n  - https://trailofbits.github.io/algo/troubleshooting.html\n\nbooleans_map:\n  Y: true\n  y: true\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy_client.yml",
          "type": "blob",
          "size": 0.66,
          "content": "---\n- name: Configure the client\n  hosts: localhost\n  become: false\n  vars_files:\n    - config.cfg\n\n  tasks:\n    - name: Add the droplet to an inventory group\n      add_host:\n        name: \"{{ client_ip }}\"\n        groups: client-host\n        ansible_ssh_user: \"{{ 'root' if client_ip == 'localhost' else ssh_user }}\"\n        vpn_user: \"{{ vpn_user }}\"\n        IP_subject_alt_name: \"{{ server_ip }}\"\n        ansible_python_interpreter: /usr/bin/python3\n\n- name: Configure the client and install required software\n  hosts: client-host\n  gather_facts: false\n  become: true\n  vars_files:\n    - config.cfg\n    - roles/strongswan/defaults/main.yml\n  roles:\n    - role: client\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "files",
          "type": "tree",
          "content": null
        },
        {
          "name": "input.yml",
          "type": "blob",
          "size": 6.07,
          "content": "---\n- name: Ask user for the input\n  hosts: localhost\n  tags: always\n  vars:\n    defaults:\n      server_name: algo\n      ondemand_cellular: false\n      ondemand_wifi: false\n      dns_adblocking: false\n      ssh_tunneling: false\n      store_pki: false\n    providers_map:\n      - { name: DigitalOcean, alias: digitalocean }\n      - { name: Amazon Lightsail, alias: lightsail }\n      - { name: Amazon EC2, alias: ec2 }\n      - { name: Microsoft Azure, alias: azure }\n      - { name: Google Compute Engine, alias: gce }\n      - { name: Hetzner Cloud, alias: hetzner }\n      - { name: Vultr, alias: vultr }\n      - { name: Scaleway, alias: scaleway }\n      - { name: OpenStack (DreamCompute optimised), alias: openstack }\n      - { name: CloudStack (Exoscale optimised), alias: cloudstack }\n      - { name: Linode, alias: linode }\n      - { name: Install to existing Ubuntu latest LTS server (for more advanced users), alias: local }\n  vars_files:\n    - config.cfg\n\n  tasks:\n    - block:\n        - name: Cloud prompt\n          pause:\n            prompt: |\n              What provider would you like to use?\n                {% for p in providers_map %}\n                {{ loop.index }}. {{ p['name'] }}\n                {% endfor %}\n\n              Enter the number of your desired provider\n          register: _algo_provider\n          when: provider is undefined\n\n        - name: Set facts based on the input\n          set_fact:\n            algo_provider: \"{{ provider | default(providers_map[_algo_provider.user_input|default(omit)|int - 1]['alias']) }}\"\n\n        - name: VPN server name prompt\n          pause:\n            prompt: |\n              Name the vpn server\n              [algo]\n          register: _algo_server_name\n          when:\n            - server_name is undefined\n            - algo_provider != \"local\"\n\n        - name: Cellular On Demand prompt\n          pause:\n            prompt: |\n              Do you want macOS/iOS clients to enable \"Connect On Demand\" when connected to cellular networks?\n              [y/N]\n          register: _ondemand_cellular\n          when: ondemand_cellular is undefined\n\n        - name: Wi-Fi On Demand prompt\n          pause:\n            prompt: |\n              Do you want macOS/iOS clients to enable \"Connect On Demand\" when connected to Wi-Fi?\n              [y/N]\n          register: _ondemand_wifi\n          when: ondemand_wifi is undefined\n\n        - name: Trusted Wi-Fi networks prompt\n          pause:\n            prompt: |\n              List the names of any trusted Wi-Fi networks where macOS/iOS clients should not use \"Connect On Demand\"\n              (e.g., your home network. Comma-separated value, e.g., HomeNet,OfficeWifi,AlgoWiFi)\n          register: _ondemand_wifi_exclude\n          when:\n            - ondemand_wifi_exclude is undefined\n            - (ondemand_wifi|default(false)|bool) or (booleans_map[_ondemand_wifi.user_input|default(omit)]|default(false))\n\n        - name: Retain the PKI prompt\n          pause:\n            prompt: |\n              Do you want to retain the keys (PKI)? (required to add users in the future, but less secure)\n              [y/N]\n          register: _store_pki\n          when:\n            - store_pki is undefined\n            - ipsec_enabled\n\n        - name: DNS adblocking prompt\n          pause:\n            prompt: |\n              Do you want to enable DNS ad blocking on this VPN server?\n              [y/N]\n          register: _dns_adblocking\n          when: dns_adblocking is undefined\n\n        - name: SSH tunneling prompt\n          pause:\n            prompt: |\n              Do you want each user to have their own account for SSH tunneling?\n              [y/N]\n          register: _ssh_tunneling\n          when: ssh_tunneling is undefined\n\n        - name: Set facts based on the input\n          set_fact:\n            algo_server_name: >-\n              {% if server_name is defined %}{% set _server = server_name %}\n              {%- elif _algo_server_name.user_input is defined and _algo_server_name.user_input|length > 0 -%}\n              {%- set _server = _algo_server_name.user_input -%}\n              {%- else %}{% set _server = defaults['server_name'] %}{% endif -%}\n              {{ _server | regex_replace('(?!\\.)(\\W|_)', '-') }}\n            algo_ondemand_cellular: >-\n              {% if ondemand_cellular is defined %}{{ ondemand_cellular | bool }}\n              {%- elif _ondemand_cellular.user_input is defined %}{{ booleans_map[_ondemand_cellular.user_input] | default(defaults['ondemand_cellular']) }}\n              {%- else %}false{% endif %}\n            algo_ondemand_wifi: >-\n              {% if ondemand_wifi is defined %}{{ ondemand_wifi | bool }}\n              {%- elif _ondemand_wifi.user_input is defined %}{{ booleans_map[_ondemand_wifi.user_input] | default(defaults['ondemand_wifi']) }}\n              {%- else %}false{% endif %}\n            algo_ondemand_wifi_exclude: >-\n              {% if ondemand_wifi_exclude is defined %}{{ ondemand_wifi_exclude | b64encode }}\n              {%- elif _ondemand_wifi_exclude.user_input is defined and _ondemand_wifi_exclude.user_input|length > 0 -%}\n              {{ _ondemand_wifi_exclude.user_input | b64encode }}\n              {%- else %}{{ '_null' | b64encode }}{% endif %}\n            algo_dns_adblocking: >-\n              {% if dns_adblocking is defined %}{{ dns_adblocking | bool }}\n              {%- elif _dns_adblocking.user_input is defined %}{{ booleans_map[_dns_adblocking.user_input] | default(defaults['dns_adblocking']) }}\n              {%- else %}false{% endif %}\n            algo_ssh_tunneling: >-\n              {% if ssh_tunneling is defined %}{{ ssh_tunneling | bool }}\n              {%- elif _ssh_tunneling.user_input is defined %}{{ booleans_map[_ssh_tunneling.user_input] | default(defaults['ssh_tunneling']) }}\n              {%- else %}false{% endif %}\n            algo_store_pki: >-\n              {% if ipsec_enabled %}{%- if store_pki is defined %}{{ store_pki | bool }}\n              {%- elif _store_pki.user_input is defined  %}{{ booleans_map[_store_pki.user_input] | default(defaults['store_pki']) }}\n              {%- else %}false{% endif %}{% endif %}\n      rescue:\n        - include_tasks: playbooks/rescue.yml\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 3.52,
          "content": "#!/usr/bin/env sh\n\nset -ex\n\nMETHOD=\"${1:-${METHOD:-cloud}}\"\nONDEMAND_CELLULAR=\"${2:-${ONDEMAND_CELLULAR:-false}}\"\nONDEMAND_WIFI=\"${3:-${ONDEMAND_WIFI:-false}}\"\nONDEMAND_WIFI_EXCLUDE=\"${4:-${ONDEMAND_WIFI_EXCLUDE:-_null}}\"\nSTORE_PKI=\"${5:-${STORE_PKI:-false}}\"\nDNS_ADBLOCKING=\"${6:-${DNS_ADBLOCKING:-false}}\"\nSSH_TUNNELING=\"${7:-${SSH_TUNNELING:-false}}\"\nENDPOINT=\"${8:-${ENDPOINT:-localhost}}\"\nUSERS=\"${9:-${USERS:-user1}}\"\nREPO_SLUG=\"${10:-${REPO_SLUG:-trailofbits/algo}}\"\nREPO_BRANCH=\"${11:-${REPO_BRANCH:-master}}\"\nEXTRA_VARS=\"${12:-${EXTRA_VARS:-placeholder=null}}\"\nANSIBLE_EXTRA_ARGS=\"${13:-${ANSIBLE_EXTRA_ARGS}}\"\n\ncd /opt/\n\ninstallRequirements() {\n  export DEBIAN_FRONTEND=noninteractive\n  apt-get update\n  apt-get install \\\n    python3-virtualenv \\\n    jq -y\n}\n\ngetAlgo() {\n  [ ! -d \"algo\" ] && git clone \"https://github.com/${REPO_SLUG}\" -b \"${REPO_BRANCH}\" algo\n  cd algo\n\n  python3 -m virtualenv --python=\"$(command -v python3)\" .env\n  # shellcheck source=/dev/null\n  . .env/bin/activate\n  python3 -m pip install -U pip virtualenv\n  python3 -m pip install -r requirements.txt\n}\n\npublicIpFromInterface() {\n  echo \"Couldn't find a valid ipv4 address, using the first IP found on the interfaces as the endpoint.\"\n  DEFAULT_INTERFACE=\"$(ip -4 route list match default | grep -Eo \"dev .*\" | awk '{print $2}')\"\n  ENDPOINT=$(ip -4 addr sh dev \"$DEFAULT_INTERFACE\" | grep -w inet | head -n1 | awk '{print $2}' | grep -oE '\\b([0-9]{1,3}\\.){3}[0-9]{1,3}\\b')\n  export ENDPOINT=\"${ENDPOINT}\"\n  echo \"Using ${ENDPOINT} as the endpoint\"\n}\n\npublicIpFromMetadata() {\n  if curl -s http://169.254.169.254/metadata/v1/vendor-data | grep DigitalOcean >/dev/null; then\n    ENDPOINT=\"$(curl -s http://169.254.169.254/metadata/v1/interfaces/public/0/ipv4/address)\"\n  elif test \"$(curl -s http://169.254.169.254/latest/meta-data/services/domain)\" = \"amazonaws.com\"; then\n    ENDPOINT=\"$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\"\n  elif host -t A -W 10 metadata.google.internal 127.0.0.53 >/dev/null; then\n    ENDPOINT=\"$(curl -H \"Metadata-Flavor: Google\" \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\")\"\n  elif test \"$(curl -s -H Metadata:true 'http://169.254.169.254/metadata/instance/compute/publisher/?api-version=2017-04-02&format=text')\" = \"Canonical\"; then\n    ENDPOINT=\"$(curl -H Metadata:true 'http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-04-02&format=text')\"\n  fi\n\n  if echo \"${ENDPOINT}\" | grep -oE \"\\b([0-9]{1,3}\\.){3}[0-9]{1,3}\\b\"; then\n    export ENDPOINT=\"${ENDPOINT}\"\n    echo \"Using ${ENDPOINT} as the endpoint\"\n  else\n    publicIpFromInterface\n  fi\n}\n\ndeployAlgo() {\n  getAlgo\n\n  cd /opt/algo\n  # shellcheck source=/dev/null\n  . .env/bin/activate\n\n  export HOME=/root\n  export ANSIBLE_LOCAL_TEMP=/root/.ansible/tmp\n  export ANSIBLE_REMOTE_TEMP=/root/.ansible/tmp\n\n  # shellcheck disable=SC2086\n  ansible-playbook main.yml \\\n    -e provider=local \\\n    -e \"ondemand_cellular=${ONDEMAND_CELLULAR}\" \\\n    -e \"ondemand_wifi=${ONDEMAND_WIFI}\" \\\n    -e \"ondemand_wifi_exclude=${ONDEMAND_WIFI_EXCLUDE}\" \\\n    -e \"store_pki=${STORE_PKI}\" \\\n    -e \"dns_adblocking=${DNS_ADBLOCKING}\" \\\n    -e \"ssh_tunneling=${SSH_TUNNELING}\" \\\n    -e \"endpoint=$ENDPOINT\" \\\n    -e \"users=$(echo \"$USERS\" | jq -Rc 'split(\",\")')\" \\\n    -e server=localhost \\\n    -e ssh_user=root \\\n    -e \"${EXTRA_VARS}\" \\\n    --skip-tags debug ${ANSIBLE_EXTRA_ARGS} |\n      tee /var/log/algo.log\n}\n\nif test \"$METHOD\" = \"cloud\"; then\n  publicIpFromMetadata\nfi\n\ninstallRequirements\n\ndeployAlgo\n"
        },
        {
          "name": "inventory",
          "type": "blob",
          "size": 0.08,
          "content": "[local]\nlocalhost ansible_connection=local ansible_python_interpreter=python3\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 10.02,
          "content": null
        },
        {
          "name": "main.yml",
          "type": "blob",
          "size": 2.3,
          "content": "---\n- hosts: localhost\n  become: false\n  tasks:\n    - name: Playbook dir stat\n      stat:\n        path: \"{{ playbook_dir }}\"\n      register: _playbook_dir\n\n    - name: Ensure Ansible is not being run in a world writable directory\n      assert:\n        that: _playbook_dir.stat.mode|int <= 775\n        msg: >\n          Ansible is being run in a world writable directory ({{ playbook_dir }}), ignoring it as an ansible.cfg source.\n          For more information see https://docs.ansible.com/ansible/devel/reference_appendices/config.html#cfg-in-world-writable-dir\n\n    - name: Ensure the requirements installed\n      debug:\n        msg: \"{{ '' | ipaddr }}\"\n      ignore_errors: true\n      no_log: true\n      register: ipaddr\n\n    - name: Set required ansible version as a fact\n      set_fact:\n        required_ansible_version: \"{{ item |  regex_replace('^ansible[\\\\s+]?(?P<op>[=,>,<]+)[\\\\s+]?(?P<ver>\\\\d.\\\\d+(.\\\\d+)?)$', '{\\\"op\\\": \\\"\\\\g<op>\\\",\\\"ver\\\"\\\n          : \\\"\\\\g<ver>\\\" }') }}\"\n      when: '\"ansible\" in item'\n      with_items: \"{{ lookup('file', 'requirements.txt').splitlines() }}\"\n\n    - name: Just get the list from default pip\n      community.general.pip_package_info:\n      register: pip_package_info\n\n    - name: Verify Python meets Algo VPN requirements\n      assert:\n        that: (ansible_python.version.major|string + '.' + ansible_python.version.minor|string) is version('3.8', '>=')\n        msg: >\n          Python version is not supported.\n          You must upgrade to at least Python 3.8 to use this version of Algo.\n          See for more details - https://trailofbits.github.io/algo/troubleshooting.html#python-version-is-not-supported\n\n    - name: Verify Ansible meets Algo VPN requirements\n      assert:\n        that:\n          - pip_package_info.packages.pip.ansible.0.version is version(required_ansible_version.ver, required_ansible_version.op)\n          - not ipaddr.failed\n        msg: >\n          Ansible version is {{ pip_package_info.packages.pip.ansible.0.version }}.\n          You must update the requirements to use this version of Algo.\n          Try to run python3 -m pip install -U -r requirements.txt\n\n- name: Include prompts playbook\n  import_playbook: input.yml\n\n- name: Include cloud provisioning playbook\n  import_playbook: cloud.yml\n\n- name: Include server configuration playbook\n  import_playbook: server.yml\n"
        },
        {
          "name": "playbooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.04,
          "content": "ansible==9.1.0\njinja2~=3.0.3\nnetaddr\n"
        },
        {
          "name": "roles",
          "type": "tree",
          "content": null
        },
        {
          "name": "server.yml",
          "type": "blob",
          "size": 4.34,
          "content": "---\n- name: Configure the server and install required software\n  hosts: vpn-host\n  gather_facts: false\n  become: true\n  vars_files:\n    - config.cfg\n  tasks:\n    - block:\n        - name: Wait until the cloud-init completed\n          wait_for:\n            path: /var/lib/cloud/data/result.json\n            delay: 10\n            timeout: 600\n            state: present\n          become: false\n          when: cloudinit\n\n        - block:\n            - name: Ensure the config directory exists\n              file:\n                dest: configs/{{ IP_subject_alt_name }}\n                state: directory\n                mode: \"0700\"\n\n            - name: Dump the ssh config\n              copy:\n                dest: configs/{{ IP_subject_alt_name }}/ssh_config\n                mode: \"0600\"\n                content: |\n                  Host {{ IP_subject_alt_name }} {{ algo_server_name }}\n                    HostName {{ IP_subject_alt_name }}\n                    User {{ ansible_ssh_user }}\n                    Port {{ ansible_ssh_port }}\n                    IdentitiesOnly yes\n                    IdentityFile {{ SSH_keys.private | realpath }}\n                    KeepAlive yes\n                    ServerAliveInterval 30\n          when: inventory_hostname != 'localhost'\n          become: false\n          delegate_to: localhost\n\n        - import_role:\n            name: common\n          tags: common\n\n        - import_role:\n            name: dns\n          when:\n            - algo_dns_adblocking or dns_encryption\n          tags: dns\n\n        - import_role:\n            name: wireguard\n          when: wireguard_enabled\n          tags: wireguard\n\n        - import_role:\n            name: strongswan\n          when: ipsec_enabled\n          tags: ipsec\n\n        - import_role:\n            name: ssh_tunneling\n          when: algo_ssh_tunneling\n          tags: ssh_tunneling\n\n        - block:\n            - name: Dump the configuration\n              copy:\n                dest: configs/{{ IP_subject_alt_name }}/.config.yml\n                content: |\n                  server: {{ 'localhost' if inventory_hostname == 'localhost' else inventory_hostname }}\n                  server_user: {{ ansible_ssh_user }}\n                  ansible_ssh_port: \"{{ ansible_ssh_port|default(22) }}\"\n                  {% if algo_provider != \"local\" %}\n                  ansible_ssh_private_key_file: {{ SSH_keys.private }}\n                  {% endif %}\n                  algo_provider: {{ algo_provider }}\n                  algo_server_name: {{ algo_server_name }}\n                  algo_ondemand_cellular: {{ algo_ondemand_cellular }}\n                  algo_ondemand_wifi: {{ algo_ondemand_wifi }}\n                  algo_ondemand_wifi_exclude: {{ algo_ondemand_wifi_exclude }}\n                  algo_dns_adblocking: {{ algo_dns_adblocking }}\n                  algo_ssh_tunneling: {{ algo_ssh_tunneling }}\n                  algo_store_pki: {{ algo_store_pki }}\n                  IP_subject_alt_name: {{ IP_subject_alt_name }}\n                  ipsec_enabled: {{ ipsec_enabled }}\n                  wireguard_enabled: {{ wireguard_enabled }}\n                  {% if tests|default(false)|bool %}\n                  ca_password: '{{ CA_password }}'\n                  p12_password: '{{ p12_export_password }}'\n                  {% endif %}\n              become: false\n              delegate_to: localhost\n\n            - name: Create a symlink if deploying to localhost\n              file:\n                src: \"{{ IP_subject_alt_name }}\"\n                dest: configs/localhost\n                state: link\n                force: true\n              when: inventory_hostname == 'localhost'\n\n            - name: Import tmpfs tasks\n              import_tasks: playbooks/tmpfs/umount.yml\n              become: false\n              delegate_to: localhost\n              vars:\n                facts: \"{{ hostvars['localhost'] }}\"\n              when:\n                - pki_in_tmpfs\n                - not algo_store_pki\n\n            - debug:\n                msg:\n                  - \"{{ congrats.common.split('\\n') }}\"\n                  - \"    {{ congrats.p12_pass if algo_ssh_tunneling or ipsec_enabled else '' }}\"\n                  - \"    {{ congrats.ca_key_pass if algo_store_pki and ipsec_enabled else '' }}\"\n                  - \"    {{ congrats.ssh_access if algo_provider != 'local' else ''}}\"\n          tags: always\n      rescue:\n        - include_tasks: playbooks/rescue.yml\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "users.yml",
          "type": "blob",
          "size": 3.66,
          "content": "---\n- hosts: localhost\n  gather_facts: false\n  tags: always\n  vars_files:\n    - config.cfg\n\n  tasks:\n    - block:\n        - name: Get list of installed config files\n          find:\n            paths: configs/\n            depth: 2\n            recurse: true\n            hidden: true\n            patterns: .config.yml\n          register: _configs_list\n\n        - name: Verify servers\n          assert:\n            that: _configs_list.matched > 0\n            msg: No servers found, nothing to update.\n\n        - name: Build list of installed servers\n          set_fact:\n            server_list: >-\n              [{% for i in _configs_list.files %}\n                {% set config = lookup('file', i.path) | from_yaml %}\n                {{ {'server': config.server, 'IP_subject_alt_name': config.IP_subject_alt_name} }}\n              {% endfor %}]\n\n        - name: Server address prompt\n          pause:\n            prompt: |\n              Select the server to update user list below: \n                {% for r in server_list %}\n                  {{ loop.index }}. {{ r.server }} ({{ r.IP_subject_alt_name }})\n              {% endfor %}\n          register: _server\n      when: server is undefined\n\n    - block:\n        - name: Set facts based on the input\n          set_fact:\n            algo_server: >-\n              {% if server is defined %}{{ server }}\n              {%- elif _server.user_input %}{{ server_list[_server.user_input | int -1 ].server }}\n              {%- else %}omit{% endif %}\n\n        - name: Import host specific variables\n          include_vars:\n            file: configs/{{ algo_server }}/.config.yml\n\n        - when: ipsec_enabled\n          block:\n            - name: CA password prompt\n              pause:\n                prompt: Enter the password for the private CA key\n                echo: false\n              register: _ca_password\n              when: ca_password is undefined\n\n            - name: Set facts based on the input\n              set_fact:\n                CA_password: >-\n                  {% if ca_password is defined %}{{ ca_password }}\n                  {%- elif _ca_password.user_input %}{{ _ca_password.user_input }}\n                  {%- else %}omit{% endif %}\n\n        - name: Local pre-tasks\n          import_tasks: playbooks/cloud-pre.yml\n          become: false\n\n        - name: Add the server to the vpn-host group\n          add_host:\n            name: \"{{ algo_server }}\"\n            groups: vpn-host\n            ansible_ssh_user: \"{{ server_user|default('root') }}\"\n            ansible_connection: \"{% if algo_server == 'localhost' %}local{% else %}ssh{% endif %}\"\n            ansible_python_interpreter: /usr/bin/python3\n            CA_password: \"{{ CA_password|default(omit) }}\"\n      rescue:\n        - include_tasks: playbooks/rescue.yml\n\n- name: User management\n  hosts: vpn-host\n  gather_facts: true\n  become: true\n  vars_files:\n    - config.cfg\n    - configs/{{ inventory_hostname }}/.config.yml\n\n  tasks:\n    - block:\n        - import_role:\n            name: common\n\n        - import_role:\n            name: wireguard\n          when: wireguard_enabled\n\n        - import_role:\n            name: strongswan\n          when: ipsec_enabled\n          tags: ipsec\n\n        - import_role:\n            name: ssh_tunneling\n          when: algo_ssh_tunneling\n\n        - debug:\n            msg:\n              - \"{{ congrats.common.split('\\n') }}\"\n              - \"    {{ congrats.p12_pass if algo_ssh_tunneling or ipsec_enabled else '' }}\"\n              - \"    {{ congrats.ca_key_pass if algo_store_pki and ipsec_enabled else '' }}\"\n              - \"    {{ congrats.ssh_access if algo_provider != 'local' else ''}}\"\n          tags: always\n      rescue:\n        - include_tasks: playbooks/rescue.yml\n"
        },
        {
          "name": "venvs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}