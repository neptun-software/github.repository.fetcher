{
  "metadata": {
    "timestamp": 1736557360597,
    "page": 328,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "FuelLabs/fuels-ts",
      "stars": 43987,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".changeset",
          "type": "tree",
          "content": null
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.1,
          "content": "DEVNET_WALLET_PVT_KEY=\nTESTNET_WALLET_PVT_KEY=\nPUBLISHED_NPM_TAG=\nNETWORK_TEST_URL=\nNETWORK_TEST_PVT_KEY=\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.55,
          "content": "node_modules/\ncoverage/\ndist/\nout/\n\napps/demo-fuels/src/sway-programs-api\napps/demo-bun-fuels/src/sway-programs-api\napps/demo-typegen/src/contract-types\napps/demo-typegen/src/script-types\napps/demo-typegen/src/predicate-types\napps/demo-nextjs\napps/demo-react-cra\napps/demo-react-vite\napps/create-fuels-counter-guide\napps/docs/src/typegend\napps/docs/src/**/*.test.ts\n\npackages/recipes/src\npackages/fuels/test/fixtures/project\npackages/account/src/providers/__generated__\npackages/account/src/providers/assets\n\nout\nCHANGELOG.md\n\n*.hbs\n\ntemplates/nextjs\ntemplates/vite\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 2.62,
          "content": "module.exports = {\n  root: true,\n  parser: '@typescript-eslint/parser',\n  parserOptions: {\n    project: ['./tsconfig.eslint.json', './packages/*/tsconfig.json'],\n    // https://github.com/typescript-eslint/typescript-eslint/issues/251#issuecomment-567365174\n    tsconfigRootDir: __dirname,\n  },\n  plugins: ['@typescript-eslint', 'eslint-plugin-tsdoc'],\n  extends: [\n    'airbnb-base',\n    'airbnb-typescript/base',\n    'plugin:@typescript-eslint/recommended',\n    'prettier',\n    'plugin:eslint-comments/recommended',\n  ],\n  settings: {\n    'import/core-modules': ['@internal/tsup'],\n    jsdoc: {\n      mode: 'typescript',\n    },\n  },\n  rules: {\n    'no-continue': 'off',\n    'no-restricted-syntax': [\n      'off',\n      {\n        selector: 'ForOfStatement',\n      },\n    ],\n    'no-trailing-spaces': 'error',\n    '@typescript-eslint/no-non-null-assertion': 1,\n    // Disable error on devDependencies importing since this isn't a TS library\n    'require-await': 'off',\n    '@typescript-eslint/require-await': 'error',\n    'import/no-extraneous-dependencies': ['error', { devDependencies: true }],\n    'no-await-in-loop': 0,\n    'prefer-destructuring': 0,\n    'no-bitwise': 0,\n    'no-underscore-dangle': 'off',\n    'class-methods-use-this': 'off',\n    'no-plusplus': 'off',\n    '@typescript-eslint/no-inferrable-types': 'off',\n    '@typescript-eslint/lines-between-class-members': [\n      'error',\n      'always',\n      { exceptAfterSingleLine: true },\n    ],\n    'import/order': [\n      'error',\n      {\n        groups: [['builtin', 'external', 'internal'], ['parent'], ['sibling', 'index']],\n        'newlines-between': 'always',\n        alphabetize: { order: 'asc' },\n      },\n    ],\n    '@typescript-eslint/consistent-type-imports': 2,\n    'eslint-comments/disable-enable-pair': ['error', { allowWholeFile: true }],\n    'eslint-comments/no-unused-disable': 'error',\n    'import/prefer-default-export': 'off',\n    'tsdoc/syntax': 'warn',\n    'require-await': 'off',\n    '@typescript-eslint/require-await': 'error',\n    '@typescript-eslint/no-floating-promises': 'error',\n    '@typescript-eslint/no-unused-vars': [\n      'warn',\n      {\n        argsIgnorePattern: '^_',\n      },\n    ],\n    '@typescript-eslint/no-explicit-any': 'error',\n    curly: ['error', 'all'],\n  },\n  // Disable no-unused-expressions to allow chai 'expect' expressions in testing\n  overrides: [\n    {\n      files: ['*.test.ts'],\n      rules: {\n        '@typescript-eslint/no-unused-expressions': 'off',\n      },\n    },\n    {\n      files: ['**/test/typegen/**/*.ts'],\n      rules: {\n        'eslint-comments/no-unlimited-disable': 'off',\n        'eslint-comments/no-unused-disable': 'off',\n      },\n    },\n  ],\n};\n"
        },
        {
          "name": ".fuel-core",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.45,
          "content": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\nlib-cov\n*.seed\n*.log\n*.csv\n*.dat\n*.out\n*.pid\n*.gz\n*.swp\n*.0x/*\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\ncoverage.json\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Tsup config bundles\ntsup.config.bundled_*\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n\n# Next.js build output\n.next\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and *not* Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Editors\n.idea\n*.iml\n\n# OS metadata\n.DS_Store\nThumbs.db\n\n## Jekyll & gh-pages\n.jekyll-cache\n_site/\n\n# Generated files\n**/__generated__/**\n\n## Turborepo\n.turbo\n.actrc\n\n# Ignore forc\nForc.lock\n\n# Ignore forc builds\n**/out\n**/test-predicate-*/index.ts\n\n## Ignore perf test files\n*clinic*\n.clinic/*\n\n# Ignore typegen test files\n**/test/typegen\n\n# Ignore [local] history directory (VsCode extension)\n.history\n\n# Ignore Husky Cache\n.husky/.lintcache\n\n# dir used by fuel-core for storing db data\n.fuel-core/db\n\n# This chainConfig is copied over from @fuel-ts/utils at runtime, no need to track it\n.fuel-core/configs/chainConfig.json\n.fuel-core/configs/metadata.json\n.fuel-core/configs/stateConfig.json\n/test-results/\n/playwright-report/\n/blob-report/\n/playwright/.cache/\n\nFUELS_VERSION"
        },
        {
          "name": ".knip.json",
          "type": "blob",
          "size": 0.59,
          "content": "{\n  \"entry\": [\n    \"apps/docs/src/versions.data.ts\",\n    \"apps/docs/src/guide/types/snippets/numbers/for-u8-u16-and-u32-2.ts\"\n  ],\n  \"ignore\": [\".github/**\"],\n  \"ignoreDependencies\": [\n    \"fuels\",\n    \"bun\",\n    \"@types/rimraf\",\n    \"@fuel-ts/abi-typegen\",\n    \"@internal/fuel-core\",\n    \"get-graphql-schema\",\n    \"events\",\n    \"eslint-plugin-jsdoc\",\n    \"eslint-plugin-jsx-a11y\",\n    \"eslint-plugin-prettier\",\n    \"eslint-plugin-react\",\n    \"eslint-plugin-react-hooks\",\n    \"dotenv\",\n    \"memfs\",\n    \"open\",\n    \"markdown-link-check\",\n    \"ts-generator\",\n    \"vitepress-plugin-search\",\n    \"vue\"\n  ]\n}\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.07,
          "content": "auto-install-peers=true\nenable-pre-post-scripts=true\nengine-strict=true\n"
        },
        {
          "name": ".nvmrc",
          "type": "blob",
          "size": 0.01,
          "content": "20.14.0\n"
        },
        {
          "name": ".nycrc",
          "type": "blob",
          "size": 0.31,
          "content": "{\n  \"extends\": \"@istanbuljs/nyc-config-typescript\",\n  \"reporter\": [\"json-summary\"],\n  \"include\": [\"packages\", \"internal\", \"apps\"],\n  \"exclude\": [\n    \"**/node_modules/**\",\n    \"**/dist/**\",\n    \"**/test/**\",\n    \"**/*.test.ts\",\n    \"**/*.d.ts\",\n    \"packages/fuel-gauge/**\",\n    \"apps/demo-*\",\n    \"apps/docs\"\n  ]\n}\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.67,
          "content": "dist\n.coverage_*\ncoverage\nnode_modules\ndocs/examples/\n\napps/demo-fuels/src/sway-programs-api\napps/demo-bun-fuels/src/sway-programs-api\napps/demo-nextjs\napps/demo-react-cra\napps/demo-react-vite\napps/demo-typegen/src/contract-types\napps/demo-typegen/src/script-types\napps/demo-typegen/src/predicate-types\napps/docs/.vitepress/cache/\napps/create-fuels-counter-guide\napps/docs/.fuels\napps/docs/.typedoc\napps/docs/src/api\napps/docs/src/typegend\napps/docs/src/**/*.test.ts\npackages/fuels/test/fixtures/project\npackages/account/src/providers/assets\n\n__generated__\nout\nCHANGELOG.md\n.chglog/CHANGELOG.tpl.md\n\n# handlebars templates and transpiled ts\n*.hbs\n*.hbs.ts\n\n*.mjs\nsway-repo\nforc-binaries\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.66,
          "content": "{\n  \"overrides\": [\n    {\n      \"files\": [\"*.js\", \"*.ts\"],\n      \"options\": {\n        \"printWidth\": 100,\n        \"semi\": true,\n        \"tabWidth\": 2,\n        \"useTabs\": false,\n        \"singleQuote\": true,\n        \"bracketSpacing\": true,\n        \"trailingComma\": \"es5\",\n        \"parser\": \"typescript\"\n      }\n    },\n    {\n      \"files\": [\"*.js\", \"*.ts\", \"*.json\"],\n      \"options\": {\n        \"useTabs\": false\n      }\n    },\n    {\n      \"files\": \"*.md\",\n      \"options\": {\n        \"useTabs\": false\n      }\n    },\n    {\n      \"files\": [\"apps/docs/src/**/*.ts\"],\n      \"excludeFiles\": [\"apps/docs/src/**/*.test.ts\"],\n      \"options\": {\n        \"printWidth\": 80\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": ".syncpackrc",
          "type": "blob",
          "size": 0.56,
          "content": "{\n  \"dependencyTypes\": [\n    \"dev\",\n    \"prod\"\n  ],\n  \"versionGroups\": [\n    {\n      \"label\": \"Ignore local dependencies\",\n      \"dependencies\": [\n        \"$LOCAL\"\n      ],\n      \"isIgnored\": true\n    }\n  ],\n  \"sortAz\": [],\n  \"sortFirst\": [\n    \"private\",\n    \"name\",\n    \"description\",\n    \"repository\",\n    \"homepage\",\n    \"bugs\",\n    \"version\",\n    \"author\",\n    \"license\",\n    \"engines\",\n    \"packageManager\",\n    \"bin\",\n    \"main\",\n    \"module\",\n    \"exports\",\n    \"types\",\n    \"typesVersions\",\n    \"files\",\n    \"scripts\",\n    \"dependencies\",\n    \"devDependencies\"\n  ]\n}\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.03,
          "content": "./packages/fuels/CHANGELOG.md"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.38,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe, as members, contributors, and leaders, pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior deemed inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official email address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement on\n[our Discord](https://discord.com/invite/xfpK4Pe).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.81,
          "content": "# Contributing To Fuel TypeScript SDK\n\nThanks for your interest in contributing to the Fuel TypeScript SDK!\n\nThis document outlines the process for installing dependencies, setting up for development and conventions for contributing.\n\n# Finding Something to Work On\n\nThere are many ways in which you may contribute to the project, some of which involve coding knowledge and some which do not. A few examples include:\n\n- Reporting bugs\n- Adding new features or bugfixes for which there is already an open issue\n- Making feature requests\n\nCheck out our [Help Wanted](https://github.com/FuelLabs/fuels-ts/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) or [Good First Issues](https://github.com/FuelLabs/fuels-ts/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) to find a suitable task.\n\nIf you are planning something big, for example, changes related to multiple components or changes to current behaviors, make sure to [open an issue](https://github.com/FuelLabs/fuels-ts/issues/new) to discuss with us before starting on the implementation.\n\nIf you find a vulnerability or suspect it may be a security issue, please read our [Security Policy](./SECURITY.md) and follow the instructions.\n\n# Issue Prioritization\n\nIf you would like to create an issue, please use the relevant [issue template](https://github.com/FuelLabs/fuels-ts/issues/new/choose). This will allow us to correctly triage and prioritize it. Every externally submitted issue goes through the following process:\n\n1. A new issue is created and is given the `triage` label\n1. It is assigned to a core maintainer for investigation\n1. Once the assigned core maintainer has completed their investigation, they remove the `triage` label and assign the relevant label to the issue i.e. `bug` , `feat`, `chore`, `docs`\n1. The issue is assigned a milestone (e.g. `mainnet`, `post-launch`) and a prioritization label where `p0` is the highest priority and `p2` is the lowest priority\n1. The issue is assigned for development and should be moved to `In Progress`\n1. A pull request is made ready and the issue is now `In Review`\n1. The pull request needs approval by 3 core maintainers, these can be found in the [CODEOWNERS file](https://github.com/FuelLabs/fuels-ts/blob/master/.github/CODEOWNERS)\n1. It can then be merged to `master` and included in a release\n1. The issue is closed automatically and it's status is moved to `Done`\n\n> **Note:** If additional information is ever required by the assigned investigator then the `awaiting` label will be added to the issue, these means they require more information from the author. Any `awaiting` issue left unanswered for 2 weeks will go `stale` and will be closed.\n\n# Setting up\n\n```sh\ngit clone git@github.com:FuelLabs/fuels-ts.git\ncd fuels-ts\npnpm install\npnpm build\n```\n\n# Developing\n\nFor building everything in watch-mode, run:\n\n```sh\n# build all projects in watch-mode\npnpm dev\n```\n\nFile watching is done by `nodemon` for increased performance.\n\nCheck `nodemon.config.json` for all settings.\n\n> **Note**: You can `pnpm dev` a single package:\n>\n> ```sh\n> cd packages/abi-coder\n> pnpm dev\n> ```\n\n# Using local sym-linked packages\n\nFirst, we need to link our `fuels` package globally in our local `global pnpm store`:\n\n```sh\ncd fuels-ts/packages/fuels\npnpm link --global\n```\n\nLet's check it out:\n\n```sh\npnpm list --global\n```\n\nCool, now on the root directory of `my-local-project`:\n\n```sh\ncd my-local-project\npnpm link --global fuels\n```\n\nThat's it — `my-local-project` is now using our local version of `fuels`.\n\nThe same can be done with all other packages:\n\n```sh\ncd fuels-ts/packages/wallet\npnpm link --global\n\n# ...\n\npnpm list --global # validating\n\n# ...\n\ncd my-local-project\npnpm link --global @fuel-ts/wallet\n```\n\n> **Warning** When using local symlinked `fuels-ts` in `your-local-project`, remember to `pnpm build` the SDK whenever you change a source file to reflect the changes on `your-local-project`. To automate this, you can use `pnpm dev`, which will keep watching and compiling everything automatically while developing.\n\nSee also:\n\n- [Developing](#developing)\n\n# Working with Unreleased Forc and Fuel-Core Functionality\n\nWhen you need to work with unreleased versions of `forc` or `fuel-core`, you can specify a git branch instead of a version number in the respective `VERSION` file.\n\n## Using Unreleased Forc\n\nTo use an unreleased version of `forc`:\n\n1.  **Edit the `VERSION` File**\n    Open the `internal/forc/VERSION` file and replace the version number (e.g., `0.59.0`) with the desired git branch:\n\n        ```text\n        git:some/branch-name\n        ```\n\n1.  **Install and Build**\n    To download and build `forc` from the specified branch after updating `VERSION` file, run:\n\n        ```sh\n        pnpm install\n        pnpm build\n        ```\n\nThe following directory will be updated or created: `internal/forc/sway-repo`\n\n## Using Unreleased Fuel-Core\n\nSimilarly, to use an unreleased version of `fuel-core`:\n\n1.  **Edit the `VERSION` file:**\n    Open the `internal/fuel-core/VERSION` file and replace the version number with the desired git branch:\n\n        ```text\n        git:some/branch-name\n        ```\n\n1.  **Install and Build**\n    To download and build `fuel-core` from the specified branch after updating `VERSION` file, run:\n\n        ```sh\n        pnpm install\n        pnpm build\n        ```\n\n> [!Note]\n> The `internal/forc/sway-repo` and `internal/fuel-core/fuel-core-repo` directory will contain a local clone of the Sway and Fuel Core repository respectively, at the specific version or git branch you have specified in the `internal/forc/VERSION` and `internal/fuel-core/VERSION` file.\n\n## Unreleased Files and Directories Created After Installation\n\nAfter running `pnpm install` and `pnpm build`, the following files and directories are created:\n\n- Forc Repository:\n\n  - Located at `internal/forc/sway-repo`.\n  - Contains the source code for the version of `forc` you are using.\n\n- Fuel-Core Repository:\n  - Located at `internal/fuel-core/fuel-core-repo`.\n  - Contains the source code for the version of `fuel-core` you are using.\n\n## Switching Back to Standard Binaries\n\nIf you switch back to using standard binaries you might encounter issues where the SDK still uses the previously downloaded unreleased binaries.\n\nTo resolve the issue and ensure the SDK uses the correct binaries:\n\n1. **Delete the downloaded repositories**\n\n   ```sh\n   rm -rf internal/forc/sway-repo\n   rm -rf internal/fuel-core/fuel-core-repo\n   ```\n\n1. **Reinstall and build**\n   ```sh\n   pnpm install\n   pnpm build\n   ```\n\n# Testing\n\nIn order to run tests locally, you can run the following commands:\n\n```sh\n# run pretest to ensure all test dependencies are built\npnpm pretest\n\n# run all tests in a node environment\npnpm test\n\n# you may also run tests in a browser environment\npnpm test:browser\n\n# watch all tests\npnpm test:watch\n\n# run tests for a specific package\npnpm test:filter packages/my-desired-package\n\n# run tests for a specific file\npnpm test:filter packages/my-desired-package/src/my.test.ts\n\n# run tests while passing other flags to sub-program\npnpm test -- --coverage --my-other-flag\n```\n\n# Benchmarking\n\nWe currently use `vitest` 's [bench utility](https://vitest.dev/api/#bench) to run benchmarks. You can run them in both the browser and node environments.\n\n```sh\npnpm bench:node\n```\n\n```sh\n# run benchmarks for a specific package\npnpm bench:node packages/my-desired-package\n```\n\n\n### CI Test\n\nDuring the CI process an automated end-to-end (e2e) test is executed. This test is crucial as it simulates real-world scenarios on the current test-net, ensuring that the changeset maintains the expected functionality and stability.\n\nThe e2e test can be found at:\n`packages/fuel-gauge/src/e2e-script.test.ts`\n\nThe B256 address of this wallet is `0x3463d9064f9128153b00072b4cc543f504372737d5dc04b29c9ebcf1b2a17ee7`. This address can be funded via the [faucet](https://faucet-testnet.fuel.network/).\n\nIf you want to run an e2e test locally, you can provide your own wallet address and private key. For obvious security reasons, the private key should not be shared.\n\nThese can be overridden by generating an environment file:\n\n```sh\ncp .env.example .env.test\n```\n\nAnd changing the below variables:\n\n```sh\nDEVNET_WALLET_PVT_KEY=0x...\nTESTNET_WALLET_PVT_KEY=0x...\n```\n\nThis will enable you to run the e2e test locally against the live network:\n\n```sh\npnpm test:filter e2e-script\n```\n\n# Commit Convention\n\nBefore you create a Pull Request, please check whether your commits comply with\nthe commit conventions used in this repository.\n\nWhen you create a commit we kindly ask you to follow the convention\n`category(scope or module): message` in your commit message while using one of\nthe following categories:\n\n- `feat / feature`: all changes that introduce completely new code or new\n  features\n- `fix`: changes that fix a bug (ideally you will additionally reference an\n  issue if present)\n- `refactor`: any code related change that is not a fix nor a feature\n- `docs`: changing existing or creating new documentation (i.e. README, docs for\n  usage of a lib or cli usage)\n- `build`: all changes regarding the build of the software, changes to\n  dependencies or the addition of new dependencies\n- `test`: all changes regarding tests (adding new tests or changing existing\n  ones)\n- `ci`: all changes regarding the configuration of continuous integration (i.e.\n  github actions, ci system)\n- `chore`: all changes to the repository that do not fit into any of the above\n  categories\n\n# Steps to PR\n\n1. Fork the fuels-ts repository and clone your fork\n\n2. Create a new branch out of the `master` branch with the naming convention `<username>/<fix|feat|chore|build|docs>/<branch-name>`.\n\n3. Make and commit your changes following the\n   [commit convention](https://github.com/FuelLabs/fuels-ts/blob/master/README.md#commit-convention).\n   As you develop, you can run `pnpm build` and\n   `pnpm test` to make sure everything works as expected.\n\n4. Run `pnpm changeset` to create a detailed description of your changes. This\n   will be used to generate a changelog when we publish an update.\n   [Learn more about Changeset](https://github.com/changesets/changesets/tree/main/packages/cli).\n   Please note that you might have to run `git fetch origin master` (where\n   origin will be your fork on GitHub) before `pnpm changeset` works.\n\n5. We adhere to the [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) specification for semantic versioning, and given that we currently do not have a major release yet, only breaking changes would require a `minor` version bump. All other API compatible changes would be a `patch` version bump.\n\n> If you made minor changes like CI config, prettier, etc, you can run\n> `pnpm changeset add --empty` to generate an empty changeset file to document\n> your changes.\n\n# Git Hooks\n\nThe SDK utilizes a pre-push git hook to validate your contribution before review. This is a script that will run automatically before changes are pushed to the remote repository. Within the SDK, the pre-push script will run code linting.\n\n> This can be overridden using the `--no-verify` flag when pushing.\n\n# Updating Forc version\n\nThe following script will upgrade Forc to the latest version on GitHub, remove all lockfiles so the latest stdlib can be used, and rebuild all projects:\n\n```sh\npnpm forc:update\n```\n\nAfter this you should run tests and fix any incompatibilities.\n\n# Updating Fuel Core version\n\nManually edit the `internal/fuel-core/VERSION` file, add the right version, and then:\n\n```sh\npnpm install # will download new binaries\npnpm test\n```\n\nIf all tests pass, that's it.\n\nOtherwise, you have work to do.\n\n# Patching old releases\n\nThe following example is for releasing a patch for `v0.69.0` -> `v0.69.1`.\n\n- Checkout the release commit via its tag and create a release branch based on it (`git checkout -b release/0.69.0 v0.69.0 && git push --set-upstream origin release/0.69.0`)\n- Create PRs with base set to that release branch\n  - When the PR is merged, a changeset PR is created\n  - When the changeset PR is merged into the release branch, the next patch version is released and the commit is tagged (e.g. `v0.69.1`)\n- After release, the release branch will be automatically deleted\n\n# Patching latest release\n\nImagine the scenario:\n\n1. We release `v0.80.0`\n1. One day later, we have a new changesets PR that will bump things to `v0.81.0`\n1. Before releasing `v0.81.0`, we find an issue and need to make a `v0.80.1` patch\n\nWe'd follow the same approach as explained in the [Patching old releases](#patching-old-releases) section above, bearing in mind the following after the release:\n\n- A PR merging the `latest` release's branch into `master` will be automatically created,\n- The automatically-created PR **must** be merged as soon as possible in order to\n  - have the versions of packages on `master` match the `latest` released package versions,\n  - have the released functionality on `master` as well\n\n# Network Testing\n\nThe network test suite is designed to run locally against a specified network for validation purposes.\n\nYou can find the test suite at: `packages/fuel-gauge/src/network.test.ts`.\n\n### Setup Instructions\n\nBefore running the tests, you need to configure the `.env` file:\n\n1. Copy the `.env.example` file:\n\n```sh\ncp .env.example .env\n```\n\n2. Set the values for the following environment variables in the `.env` file:\n\n```env\nNETWORK_TEST_URL=https://testnet.fuel.network/v1/graphql\nNETWORK_TEST_PVT_KEY=0x...\n```\n\n- `NETWORK_TEST_URL`: The URL of which network the test should run (e.g., Fuel Testnet endpoint).\n- `NETWORK_TEST_PVT_KEY`: Your private key for the network.\n\n### Running the Test Suite\n\nOnce the environment is set up, run the network tests using the following command:\n\n```sh\npnpm test:network\n```\n\n# FAQ\n\n### Why is the prefix `fuels` and not `fuel`?\n\nIn order to make the SDK for Fuel feel familiar with those coming from the [ethers.js](https://github.com/ethers-io/ethers.js) ecosystem, this project opted for an `s` at the end.\n\nThe `fuels-*` family of SDKs is inspired by The Ethers Project.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.09,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.32,
          "content": "# fuels-ts\n\nTypescript SDK for Fuel.\n\n[![test](https://github.com/FuelLabs/fuels-ts/actions/workflows/test.yaml/badge.svg)](https://github.com/FuelLabs/fuels-ts/actions/workflows/test.yaml)\n[![docs](https://img.shields.io/badge/docs-fuels.ts-brightgreen.svg?style=flat)](https://docs.fuel.network/docs/fuels-ts/)\n[![npm](https://img.shields.io/npm/v/fuels)](https://www.npmjs.com/package/fuels)\n[![discord](https://img.shields.io/badge/chat%20on-discord-orange?&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/xfpK4Pe)\n\n# Install ([docs](https://docs.fuel.network/docs/fuels-ts/getting-started/installation))\n\n```console\nnpm install fuels --save\n```\n\n# Connect ([docs](https://docs.fuel.network/docs/fuels-ts/getting-started/connecting-to-the-network/))\n\n| Network   | URL                                                                                                              |\n| --------- | --------------------------------------------------------------------------------------------------------------- |\n| Mainnet   | `https://mainnet.fuel.network/v1/graphql`                                                                       |\n| Testnet   | `https://testnet.fuel.network/v1/graphql`                                                                       |\n| Localhost | [Running a local Fuel node](https://docs.fuel.network/docs/fuels-ts/getting-started/running-a-local-fuel-node/) |\n\n```ts\nimport { Provider } from 'fuels';\n\nconst NETWORK_URL = 'https://mainnet.fuel.network/v1/graphql';\n\nconst provider = new Provider(NETWORK_URL);\n\nconst chainId = await provider.getChainId();\nconst gasConfig = await provider.getGasConfig();\nconst baseAssetId = await provider.getBaseAssetId();\n\nconsole.log({ chainId, gasConfig, baseAssetId });\n```\n\n# Create a new dApp ([docs](https://docs.fuel.network/docs/fuels-ts/creating-a-fuel-dapp/))\n\n```console\n$ npm create fuels\n\n◇ What is the name of your project? #\n│ my-fuel-project\n└\n\n⚡️ Success! Created a fullstack Fuel dapp at: my-fuel-project.\n```\n\n# Enjoy the `fuels` CLI ([docs](https://docs.fuel.network/docs/fuels-ts/fuels-cli/))\n\n```console\n$ npm install fuels --save\n$ npm fuels --help\n\nCommands:\n  init [options]      Create a sample `fuel.config.ts` file\n  build [options]     Build Sway programs and generate Typescript for them\n  deploy [options]    Deploy contracts to the Fuel network\n  dev [options]       Start a Fuel node with hot-reload capabilities\n  node [options]      Start a Fuel node using project configs\n  typegen [options]   Generate Typescript from Sway ABI JSON files\n  versions [options]  Check for version incompatibilities\n  help [command]      Display help for command\n```\n\nIn-depth docs:\n- [`fuels init`](https://docs.fuel.network/docs/fuels-ts/fuels-cli/commands#fuels-init) — Creates a new `fuels.config.ts` file\n- [`fuels build`](https://docs.fuel.network/docs/fuels-ts/fuels-cli/commands#fuels-build) — Build `forc` workspace and generate Typescript types for everything\n- [`fuels deploy`](https://docs.fuel.network/docs/fuels-ts/fuels-cli/commands#fuels-deploy) — Deploy workspace contracts and save their IDs to JSON file\n- [`fuels dev`](https://docs.fuel.network/docs/fuels-ts/fuels-cli/commands#fuels-dev) — Start a Fuel node with hot-reload capabilities\n\n\n# Official Docs\n\n- Install The Fuel Toolchain — https://docs.fuel.network/guides/installation/\n---\n- Typescript SDK — https://docs.fuel.network/docs/fuels-ts\n- Fuel Wallet SDK — https://docs.fuel.network/docs/wallet\n- Rust SDK — https://docs.fuel.network/docs/fuels-rs\n- GraphQL Playground — https://docs.fuel.network/docs/graphql\n---\n- Forc — https://docs.fuel.network/docs/forc\n- Sway — https://docs.fuel.network/docs/sway\n- Fuel Core — https://github.com/FuelLabs/fuel-core\n- Fuel VM — https://docs.fuel.network/docs/specs/fuel-vm\n- Fuel Specs — https://docs.fuel.network/docs/specs\n\n# Apps & Ecosystem\n\n- Fuel Bridge — https://app.fuel.network/bridge\n- Block Explorer — https://app.fuel.network\n- Ecosystem Apps — https://app.fuel.network/ecosystem\n\n# Get in Touch\n\n- `Forum` — https://forum.fuel.network\n- `Discord` — https://discord.gg/xfpK4Pe\n\n\n# Contribute\n\n- [./CONTRIBUTING.md](https://github.com/FuelLabs/fuels-ts/blob/master/CONTRIBUTING.md)\n\n\n# License\n\nThe primary license for this repo is `Apache 2.0`, see [`LICENSE`](https://github.com/FuelLabs/fuels-ts/blob/master/LICENSE).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.82,
          "content": "# Fuel Security Policy\n\nThank you for helping make the Fuel ecosystem safe for everyone. The Fuel team take security bugs very seriously. We appreciate your efforts to responsibly disclose your findings, and will make every effort to acknowledge your contributions.\n\n## Reporting Security Issues\n\nIf you believe you have found a security vulnerability in any Fuel-owned repository, please report it to us through coordinated disclosure.\n\n**Please do not report security vulnerabilities through public GitHub issues, discussions, or pull requests.**\n\nInstead, please use the GitHub Security Advisory [\"Report a Vulnerability\"](https://github.com/FuelLabs/fuels-ts/security/advisories/new) tab.\n\nThe Fuel team will send a response indicating the next steps in handling your report. After the initial reply to your report, the team will keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.\n\nPlease include as much of the information listed below as you can to help us better understand and resolve the issue:\n\n* The type of issue (e.g., buffer overflow, SQL injection, or cross-site scripting)\n* Full paths of source file(s) related to the manifestation of the issue\n* The location of the affected source code (tag/branch/commit or direct URL)\n* Any special configuration required to reproduce the issue\n* Step-by-step instructions to reproduce the issue\n* Proof-of-concept or exploit code (if possible)\n* Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nReport security bugs in third-party modules to the person or team maintaining the module.\n\n## Non-Security Issues\n\nIf the issue is not security-related, please report it publicly by opening a [GitHub Issue](https://github.com/FuelLabs/fuels-ts/issues/new).\n"
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "graphql.config.json",
          "type": "blob",
          "size": 0.14,
          "content": "{\n  \"schema\": \"./packages/account/src/providers/fuel-core-schema.graphql\",\n  \"documents\": \"./packages/account/src/providers/operations.graphql\"\n}\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "link-check.config.json",
          "type": "blob",
          "size": 0.43,
          "content": "{\n  \"aliveStatusCodes\": [200, 206],\n  \"timeout\": \"10s\",\n  \"retryOn429\": true,\n  \"retryCount\": 2,\n  \"fallbackRetryDelay\": \"5s\",\n  \"ignorePatterns\": [\n    {\n      \"pattern\": \"^http://localhost:3000\"\n    },\n    {\n      \"pattern\": \"https://docs.fuel.network/docs/fuels-ts/getting-started/connecting-to-the-network\"\n    },\n    {\n      \"pattern\": \"https://docs.fuel.network/docs/fuels-ts/getting-started/running-a-local-fuel-node\"\n    }\n  ]\n}\n"
        },
        {
          "name": "nodemon.config.json",
          "type": "blob",
          "size": 0.44,
          "content": "{\n  \"verbose\": true,\n  \"ext\": \"ts\",\n  \"watch\": \"packages\",\n  \"ignore\": [\n    \"**/__generated__/**\",\n    \"**/*.js\",\n    \"**/*.test.ts\",\n    \"**/*.mjs\",\n    \"**/dist/**\",\n    \"**/Forc.lock\",\n    \"**/getBuiltinVersions.ts\",\n    \"**/out/debug/**\",\n    \"**/out/release/**\",\n    \"apps/demo-typegen/src/contract-types/**\",\n    \"apps/demo-typegen/src/predicate-types/**\",\n    \"apps/demo-typegen/src/script-types/**\",\n    \"packages/recipes/src/types/**\"\n  ]\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 5.38,
          "content": "{\n  \"name\": \"fuels-ts\",\n  \"version\": \"0.0.0\",\n  \"description\": \"Fuel TS SDK\",\n  \"author\": \"Fuel Labs <contact@fuel.sh> (https://fuel.network/)\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \"^18.20.3 || ^20.0.0 || ^22.0.0\",\n    \"pnpm\": \"^9.4.0\"\n  },\n  \"packageManager\": \"pnpm@9.4.0\",\n  \"scripts\": {\n    \"dev\": \"nodemon --config nodemon.config.json -x 'pnpm build:packages'\",\n    \"build\": \"turbo run build --cache-dir=.turbo\",\n    \"build:packages\": \"turbo run build --filter=!docs --filter=!template-*\",\n    \"ci:test\": \"./scripts/tests-ci.sh\",\n    \"pretest\": \"turbo run pretest\",\n    \"depcheck\": \"knip --include-libs --dependencies --tags=-knipignore\",\n    \"knip:fix\": \"knip --fix\",\n    \"depsync:lint\": \"syncpack list-mismatches\",\n    \"depsync:fix\": \"syncpack fix-mismatches\",\n    \"test\": \"vitest --run --coverage --config vitest.node.config.mts $(scripts/tests-find.sh --node)\",\n    \"test:node\": \"vitest --run --coverage --config vitest.node.config.mts $(scripts/tests-find.sh --node)\",\n    \"test:browser\": \"vitest --run --coverage --config vitest.browser.config.mts $(scripts/tests-find.sh --browser)\",\n    \"test:all\": \"run-p test:node test:browser\",\n    \"test:filter\": \"vitest --run --coverage false --config vitest.node.config.mts\",\n    \"test:coverage-merge\": \"tsx ./scripts/tests-coverage-merge.ts\",\n    \"test:coverage-diff\": \"tsx ./scripts/tests-coverage-diff.ts\",\n    \"test:watch\": \"vitest --watch --config vitest.node.config.mts $(scripts/tests-find.sh --node)\",\n    \"test:validate\": \"./scripts/tests-validate.sh\",\n    \"test:browser:filter\": \"vitest --run --coverage false --config vitest.browser.config.mts\",\n    \"test:e2e\": \"vitest --run --config vitest.node.config.mts $(scripts/tests-find.sh --e2e)\",\n    \"test:integration\": \"vitest --run --config vitest.node.config.mts $(scripts/tests-find.sh --integration)\",\n    \"test:network\": \"vitest --run --config vitest.node.config.mts $(scripts/tests-find.sh --network)\",\n    \"lint\": \"run-s type:check-tests lint:check prettier:check type:check\",\n    \"lint:check\": \"eslint . --ext .ts --max-warnings 0\",\n    \"lint:fix\": \"pnpm lint:check --fix\",\n    \"lint:md-links\": \"tsx ./scripts/lint-md-links\",\n    \"lint:package-jsons\": \"tsx ./scripts/lint-package-jsons\",\n    \"type:check\": \"turbo run type:check\",\n    \"type:check-tests\": \"tsc -p tsconfig.test.json\",\n    \"prettier:check\": \"prettier --check packages --check apps/docs\",\n    \"prettier:format\": \"prettier --write packages --write apps/docs\",\n    \"verify:package-exports\": \"tsx ./scripts/verify-package-exports\",\n    \"changeset:publish\": \"tsx ./scripts/changeset/changeset-publish\",\n    \"changeset:next\": \"tsx ./scripts/changeset/changeset-next\",\n    \"changeset:version-with-docs\": \"tsx ./scripts/changeset/changeset-version-with-docs\",\n    \"changeset:update-changelog\": \"tsx ./scripts/changeset/update-changelog.mts\",\n    \"changeset:get-latest-release\": \"tsx ./scripts/changeset/get-latest-release.mts\",\n    \"changeset:dependabot\": \"./scripts/changeset/dependabot-changeset.sh\",\n    \"release:deprecate\": \"tsx ./scripts/release-deprecate.ts\",\n    \"forc:update\": \"tsx ./scripts/forc-update\",\n    \"forc:check\": \"./scripts/forc-check.sh\",\n    \"forc:format\": \"./scripts/forc-format.sh\",\n    \"forc:verify\": \"tsx ./scripts/verify-forc-version\",\n    \"node:run\": \"./scripts/run-node.sh\",\n    \"node:clean\": \"rimraf .fuel-core/db\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/FuelLabs/fuels-ts.git\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/FuelLabs/fuels-ts/issues\"\n  },\n  \"homepage\": \"https://github.com/FuelLabs/fuels-ts#readme\",\n  \"devDependencies\": {\n    \"@actions/core\": \"1.10.1\",\n    \"@actions/github\": \"6.0.0\",\n    \"@changesets/cli\": \"2.27.9\",\n    \"@changesets/get-github-info\": \"0.6.0\",\n    \"@changesets/read\": \"0.6.1\",\n    \"@changesets/types\": \"6.0.0\",\n    \"@fuel-ts/utils\": \"workspace:*\",\n    \"@internal/forc\": \"workspace:*\",\n    \"@internal/fuel-core\": \"workspace:*\",\n    \"@internal/tsup\": \"workspace:*\",\n    \"@istanbuljs/nyc-config-typescript\": \"1.0.2\",\n    \"@playwright/test\": \"1.49.1\",\n    \"@types/node\": \"22.5.5\",\n    \"@types/node-fetch\": \"2.6.11\",\n    \"@types/web\": \"0.0.174\",\n    \"@typescript-eslint/eslint-plugin\": \"6.9.1\",\n    \"@typescript-eslint/parser\": \"6.21.0\",\n    \"@vitest/browser\": \"2.0.5\",\n    \"@vitest/coverage-istanbul\": \"2.0.5\",\n    \"compare-versions\": \"6.1.1\",\n    \"coverage-diff\": \"3.2.0\",\n    \"eslint\": \"8.57.0\",\n    \"eslint-config-airbnb-base\": \"15.0.0\",\n    \"eslint-config-airbnb-typescript\": \"17.1.0\",\n    \"eslint-config-prettier\": \"9.1.0\",\n    \"eslint-plugin-eslint-comments\": \"3.2.0\",\n    \"eslint-plugin-import\": \"2.29.1\",\n    \"eslint-plugin-jsdoc\": \"46.8.2\",\n    \"eslint-plugin-jsx-a11y\": \"6.9.0\",\n    \"eslint-plugin-prettier\": \"5.2.1\",\n    \"eslint-plugin-react\": \"7.37.1\",\n    \"eslint-plugin-react-hooks\": \"4.6.2\",\n    \"eslint-plugin-tsdoc\": \"0.3.0\",\n    \"glob\": \"10.4.5\",\n    \"knip\": \"5.41.1\",\n    \"markdown-link-check\": \"3.12.2\",\n    \"memfs\": \"4.14.0\",\n    \"nodemon\": \"3.1.7\",\n    \"npm-run-all\": \"4.1.5\",\n    \"nyc\": \"17.1.0\",\n    \"open\": \"10.1.0\",\n    \"prettier\": \"3.3.3\",\n    \"rimraf\": \"5.0.10\",\n    \"syncpack\": \"12.3.3\",\n    \"ts-generator\": \"0.1.1\",\n    \"tsup\": \"6.7.0\",\n    \"tsx\": \"4.19.1\",\n    \"turbo\": \"2.1.2\",\n    \"typescript\": \"5.6.3\",\n    \"vite\": \"5.4.9\",\n    \"vite-plugin-json5\": \"1.1.2\",\n    \"vite-plugin-node-polyfills\": \"0.22.0\",\n    \"vite-plugin-plain-text\": \"1.4.2\",\n    \"vitest\": \"2.0.5\"\n  },\n  \"pnpm\": {\n    \"overrides\": {\n      \"whatwg-url\": \"14.1.0\",\n      \"cross-fetch\": \"4.0.0\"\n    }\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "playwright-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "playwright.config.ts",
          "type": "blob",
          "size": 0.97,
          "content": "import { defineConfig, devices } from '@playwright/test';\n\n/**\n * See https://playwright.dev/docs/test-configuration.\n */\nexport default defineConfig({\n  testDir: './playwright-tests',\n  /* Run tests in files in parallel */\n  fullyParallel: true,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: [['html', { open: 'never' }]],\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: 'on-first-retry',\n  },\n  timeout: 60000,\n  projects: [\n    {\n      name: 'chromium',\n      use: { ...devices['Desktop Chrome'] },\n    },\n  ],\n});\n"
        },
        {
          "name": "pnpm-lock.yaml",
          "type": "blob",
          "size": 1041.32,
          "content": null
        },
        {
          "name": "pnpm-workspace.yaml",
          "type": "blob",
          "size": 0.07,
          "content": "packages:\n  - \"apps/*\"\n  - \"internal/*\"\n  - \"packages/*\"\n  - \"templates/*\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.base.json",
          "type": "blob",
          "size": 0.52,
          "content": "{\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\n  \"compilerOptions\": {\n    \"declaration\": true,\n    \"declarationMap\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"ES2022\", \"ESNext.disposable\"],\n    \"module\": \"CommonJS\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"target\": \"ES2022\",\n    \"sourceMap\": true,\n    \"noImplicitOverride\": true,\n    \"types\": [\"vitest/globals\", \"node\", \"node-fetch\", \"web\"]\n  },\n  \"exclude\": [\"**/dist\", \"**/node_modules\"]\n}\n"
        },
        {
          "name": "tsconfig.eslint.json",
          "type": "blob",
          "size": 0.19,
          "content": "{\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"types\": [\"@types/node\"],\n    \"noEmit\": true,\n    \"allowJs\": true\n  }\n}\n"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.05,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"files\": []\n}\n"
        },
        {
          "name": "tsconfig.test.json",
          "type": "blob",
          "size": 0.19,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"noEmit\": true\n  },\n  \"include\": [\"**/*.test.ts\", \"**/*.d.ts\"],\n  \"exclude\": [\"node_modules\", \"apps/docs/src/**/*.test.ts\"]\n}\n"
        },
        {
          "name": "tsdoc.base.json",
          "type": "blob",
          "size": 2.32,
          "content": "{\n  \"$schema\": \"https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json\",\n  \"noStandardTags\": false,\n  \"tagDefinitions\": [\n    {\n      \"tagName\": \"@module\",\n      \"syntaxKind\": \"block\"\n    },\n    {\n      \"tagName\": \"@typedef\",\n      \"syntaxKind\": \"block\"\n    },\n    {\n      \"tagName\": \"@callback\",\n      \"syntaxKind\": \"block\"\n    },\n    {\n      \"tagName\": \"@prop\",\n      \"syntaxKind\": \"block\",\n      \"allowMultiple\": true\n    },\n    {\n      \"tagName\": \"@property\",\n      \"syntaxKind\": \"block\",\n      \"allowMultiple\": true\n    },\n    {\n      \"tagName\": \"@group\",\n      \"syntaxKind\": \"block\",\n      \"allowMultiple\": true\n    },\n    {\n      \"tagName\": \"@category\",\n      \"syntaxKind\": \"block\",\n      \"allowMultiple\": true\n    },\n    {\n      \"tagName\": \"@hidden\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@ignore\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@enum\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@event\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@template\",\n      \"syntaxKind\": \"block\",\n      \"allowMultiple\": true\n    },\n    {\n      \"tagName\": \"@linkcode\",\n      \"syntaxKind\": \"inline\",\n      \"allowMultiple\": true\n    },\n    {\n      \"tagName\": \"@linkplain\",\n      \"syntaxKind\": \"block\",\n      \"allowMultiple\": true\n    },\n    {\n      \"tagName\": \"@private\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@protected\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@satisfies\",\n      \"syntaxKind\": \"block\"\n    },\n    {\n      \"tagName\": \"@overload\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@namespace\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@interface\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@showCategories\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@hideCategories\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@showGroups\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@hideGroups\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@name\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@emits\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@type\",\n      \"syntaxKind\": \"modifier\"\n    },\n    {\n      \"tagName\": \"@knipignore\",\n      \"syntaxKind\": \"modifier\"\n    }\n  ]\n}\n"
        },
        {
          "name": "turbo.json",
          "type": "blob",
          "size": 0.91,
          "content": "{\n  \"$schema\": \"https://turborepo.org/schema.json\",\n  \"tasks\": {\n    \"type:check\": {\n      \"outputLogs\": \"errors-only\"\n    },\n    \"preinstall\": {\n      \"outputLogs\": \"new-only\"\n    },\n    \"prebuild\": {\n      \"dependsOn\": [\"^prebuild\", \"preinstall\"],\n      \"outputLogs\": \"new-only\"\n    },\n    \"build\": {\n      \"dependsOn\": [\"^build\", \"prebuild\"],\n      \"outputs\": [\"dist/**\"],\n      \"outputLogs\": \"new-only\"\n    },\n    \"postbuild\": {\n      \"dependsOn\": [\"^postbuild\", \"build\"],\n      \"outputLogs\": \"new-only\"\n    },\n    \"pretest\": {\n      \"outputLogs\": \"errors-only\",\n      \"inputs\": [\n        \"**/test/fixtures/forc-projects/Forc.toml\",\n        \"**/test/fixtures/forc-projects/**/src/*.sw\",\n        \"**/test/fixtures/forc-projects/**/Forc.toml\"\n      ],\n      \"outputs\": [\"**/test/fixtures/forc-projects/**/out/release/**\"]\n    },\n    \"test\": {\n      \"dependsOn\": [\"^test\", \"pretest\"],\n      \"outputLogs\": \"new-only\"\n    }\n  }\n}\n"
        },
        {
          "name": "typedoc.base.json",
          "type": "blob",
          "size": 0.08,
          "content": "{\n  \"$schema\": \"https://typedoc.org/schema.json\",\n  \"includeVersion\": true,\n}\n"
        },
        {
          "name": "vitest.browser.config.mts",
          "type": "blob",
          "size": 1.23,
          "content": "import { nodePolyfills } from \"vite-plugin-node-polyfills\";\nimport type { UserConfig } from \"vitest/config\";\nimport { mergeConfig, defineProject } from \"vitest/config\";\n\nimport sharedConfig from \"./vitest.shared.config.mts\";\n\nconst config: UserConfig = {\n  plugins: [\n    nodePolyfills({\n      globals: {\n        process: true,\n        Buffer: true,\n        global: true,\n      },\n      include: [\n        \"crypto\",\n        \"buffer\",\n        \"fs\",\n        \"events\",\n        \"timers/promises\",\n        \"util\",\n        \"stream\",\n        \"path\",\n        \"fs\",\n        \"os\",\n      ],\n      overrides: {\n        fs: \"memfs\",\n      },\n    }),\n  ],\n  optimizeDeps: {\n    exclude: [\n      \"fsevents\",\n      \"path-scurry\",\n      \"@vitest/coverage-istanbul\",\n      \"chromium-bidi\",\n    ],\n    include: [\"events\", \"timers/promises\"],\n    entries: [\"**/*.test.ts\"],\n  },\n  test: {\n    env: {\n      LAUNCH_NODE_SERVER_PORT: \"49342\",\n    },\n    globalSetup: [\"./vitest.global-browser-setup.ts\"],\n    coverage: {\n      reportsDirectory: \"coverage/environments/browser\",\n    },\n    browser: {\n      provider: \"playwright\",\n      headless: true,\n      enabled: true,\n      name: \"chromium\",\n    },\n  },\n};\n\nexport default mergeConfig(sharedConfig, defineProject(config));\n"
        },
        {
          "name": "vitest.global-browser-setup.ts",
          "type": "blob",
          "size": 1.59,
          "content": "/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-floating-promises */\nimport { spawn } from 'node:child_process';\n\nexport default function setup() {\n  return new Promise((resolve, reject) => {\n    const server = {\n      closed: false,\n    };\n    const teardown = async () => {\n      if (server.closed) {\n        return;\n      }\n      server.closed = true;\n      const serverUrl = `http://localhost:49342`;\n      try {\n        await fetch(`${serverUrl}/close-server`);\n      } catch (e) {\n        console.log('closing of server failed', e);\n      }\n      process.exit();\n    };\n\n    const cp = spawn('pnpm tsx packages/fuels/src/setup-launch-node-server.ts', {\n      detached: true,\n      shell: 'sh',\n    });\n\n    cp.stderr?.on('data', (chunk) => {\n      console.log(chunk.toString());\n    });\n\n    cp.stdout?.on('data', (data) => {\n      console.log(data.toString());\n      // Return teardown function to be called when tests finish\n      // It will kill the server\n      resolve(teardown);\n    });\n\n    cp.on('error', (err) => {\n      console.log(err);\n      // Ensure server is killed if there's an error\n      teardown();\n      reject(err);\n    });\n\n    cp.on('exit', (code, signal) => {\n      console.log('error code', code, signal);\n      if (code !== 0) {\n        reject(new Error(`Server process exited with code ${code}`));\n      }\n    });\n\n    process.on('SIGINT', teardown);\n    process.on('SIGUSR1', teardown);\n    process.on('SIGUSR2', teardown);\n    process.on('uncaughtException', teardown);\n    process.on('unhandledRejection', teardown);\n    process.on('beforeExit', teardown);\n  });\n}\n"
        },
        {
          "name": "vitest.global-setup.ts",
          "type": "blob",
          "size": 0.08,
          "content": "export default function setup() {\n  process.env.FUEL_CORE_PATH = 'fuels-core';\n}\n"
        },
        {
          "name": "vitest.node.config.mts",
          "type": "blob",
          "size": 0.35,
          "content": "import type { UserConfig } from \"vitest/config\";\nimport { mergeConfig, defineProject } from \"vitest/config\";\n\nimport sharedConfig from \"./vitest.shared.config.mts\";\n\nconst config: UserConfig = {\n  test: {\n    coverage: {\n      reportsDirectory: \"coverage/environments/node\",\n    },\n  },\n};\n\nexport default mergeConfig(sharedConfig, defineProject(config));\n"
        },
        {
          "name": "vitest.setup-files.ts",
          "type": "blob",
          "size": 0.12,
          "content": "import { setupTestMatchers } from '@fuel-ts/utils/test-utils';\nimport { expect } from 'vitest';\n\nsetupTestMatchers(expect);\n"
        },
        {
          "name": "vitest.shared.config.mts",
          "type": "blob",
          "size": 1.21,
          "content": "import { loadEnv } from \"vite\";\nimport json5Plugin from \"vite-plugin-json5\";\nimport plainText from \"vite-plugin-plain-text\";\nimport { defineConfig } from \"vitest/config\";\n\nconst mode = process.env.NODE_ENV || \"test\";\n\nexport default defineConfig({\n  plugins: [\n    json5Plugin(),\n    plainText(\"**/*.hbs\", {\n      namedExport: false,\n    }),\n  ],\n  esbuild: { target: \"es2022\" },\n  test: {\n    globalSetup: [\"vitest.global-setup.ts\"],\n    setupFiles: [\"./vitest.setup-files.ts\"],\n    coverage: {\n      enabled: true,\n      provider: \"istanbul\",\n      reporter: [\"json\", \"text\", \"html\"],\n      include: [\"packages\", \"internal\", \"apps\"],\n      exclude: [\n        \"**/*.js\",\n        \"**/node_modules/**\",\n        \"**/dist/**\",\n        \"**/test/**\",\n        \"**/*.test.ts\",\n        \"**/*.d.ts\",\n        \"**/bin.ts\",\n        \"packages/fuel-gauge/**\",\n        \"apps/demo-*\",\n        \"apps/docs\",\n      ],\n    },\n    exclude: [\n      \"**/node_modules/**\",\n      \"**/dist/**\",\n      \"/apps/demo-nextjs\",\n      \"/apps/demo-react-cra\",\n      \"/apps/demo-react-vite\",\n    ],\n    globals: true,\n    env: loadEnv(mode, process.cwd(), \"\"),\n    poolOptions: {\n      threads: {\n        minThreads: 1,\n        maxThreads: 16,\n      },\n    },\n  },\n});\n"
        },
        {
          "name": "vitest.workspace.ts",
          "type": "blob",
          "size": 0.14,
          "content": "import { defineWorkspace } from 'vitest/config';\n\nexport default defineWorkspace(['./vitest.node.config.mts', './vitest.browser.config.mts']);\n"
        }
      ]
    }
  ]
}