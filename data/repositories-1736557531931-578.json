{
  "metadata": {
    "timestamp": 1736557531931,
    "page": 578,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AFNetworking/AFNetworking",
      "stars": 33355,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cocoadocs.yml",
          "type": "blob",
          "size": 0.19,
          "content": "highlight-color: \"#F89915\"\nhighlight-dark-color: \"#E23B1B\"\ndarker-color: \"#D8A688\"\ndarker-dark-color: \"#E93D1C\"\nbackground-color: \"#E9DFDB\"\nalt-link-color: \"#E23B1B\"\nwarning-color: \"#E23B1B\"\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.02,
          "content": "ignore:\n  - \"Tests\"\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.46,
          "content": "# Xcode\n.DS_Store\nbuild/\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\n*.xcworkspace\n!default.xcworkspace\nxcuserdata\nprofile\n*.moved-aside\nDerivedData\n.idea/\nTests/Pods\nTests/Podfile.lock\nTests/AFNetworking Tests.xcodeproj/xcshareddata/xcschemes/\nAFNetworking.framework.zip\n\n# Fastlane\n/fastlane/report.xml\n/fastlane/.env*private*\nfastlane/test-output/*\n\nCarthage/Build\n\nfastlane/README.md\n.build\n"
        },
        {
          "name": ".ruby-gemset",
          "type": "blob",
          "size": 0.01,
          "content": "afnetworking\n"
        },
        {
          "name": ".ruby-version",
          "type": "blob",
          "size": 0.01,
          "content": "3.2.0\n"
        },
        {
          "name": "AFNetworking.podspec",
          "type": "blob",
          "size": 2.02,
          "content": "Pod::Spec.new do |s|\n  s.name     = 'AFNetworking'\n  s.version  = '4.0.1'\n  s.license  = 'MIT'\n  s.summary  = 'A delightful networking framework for Apple platforms.'\n  s.homepage = 'https://github.com/AFNetworking/AFNetworking'\n  s.social_media_url = 'https://twitter.com/AFNetworking'\n  s.authors  = { 'Mattt Thompson' => 'm@mattt.me' }\n  s.source   = { :git => 'https://github.com/AFNetworking/AFNetworking.git', :tag => s.version }\n\n  s.ios.deployment_target = '9.0'\n  s.osx.deployment_target = '10.10'\n  s.watchos.deployment_target = '2.0'\n  s.tvos.deployment_target = '9.0'\n\n  s.ios.pod_target_xcconfig = { 'PRODUCT_BUNDLE_IDENTIFIER' => 'com.alamofire.AFNetworking' }\n  s.osx.pod_target_xcconfig = { 'PRODUCT_BUNDLE_IDENTIFIER' => 'com.alamofire.AFNetworking' }\n  s.watchos.pod_target_xcconfig = { 'PRODUCT_BUNDLE_IDENTIFIER' => 'com.alamofire.AFNetworking-watchOS' }\n  s.tvos.pod_target_xcconfig = { 'PRODUCT_BUNDLE_IDENTIFIER' => 'com.alamofire.AFNetworking' }\n\n  s.source_files = 'AFNetworking/AFNetworking.h'\n\n  s.subspec 'Serialization' do |ss|\n    ss.source_files = 'AFNetworking/AFURL{Request,Response}Serialization.{h,m}'\n  end\n\n  s.subspec 'Security' do |ss|\n    ss.source_files = 'AFNetworking/AFSecurityPolicy.{h,m}'\n  end\n\n  s.subspec 'Reachability' do |ss|\n    ss.ios.deployment_target = '9.0'\n    ss.osx.deployment_target = '10.10'\n    ss.tvos.deployment_target = '9.0'\n\n    ss.source_files = 'AFNetworking/AFNetworkReachabilityManager.{h,m}'\n  end\n\n  s.subspec 'NSURLSession' do |ss|\n    ss.dependency 'AFNetworking/Serialization'\n    ss.ios.dependency 'AFNetworking/Reachability'\n    ss.osx.dependency 'AFNetworking/Reachability'\n    ss.tvos.dependency 'AFNetworking/Reachability'\n    ss.dependency 'AFNetworking/Security'\n\n    ss.source_files = 'AFNetworking/AF{URL,HTTP}SessionManager.{h,m}', 'AFNetworking/AFCompatibilityMacros.h'\n  end\n\n  s.subspec 'UIKit' do |ss|\n    ss.ios.deployment_target = '9.0'\n    ss.tvos.deployment_target = '9.0'\n    ss.dependency 'AFNetworking/NSURLSession'\n\n    ss.source_files = 'UIKit+AFNetworking'\n  end\nend\n"
        },
        {
          "name": "AFNetworking.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "AFNetworking.xcworkspace",
          "type": "tree",
          "content": null
        },
        {
          "name": "AFNetworking",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 99.96,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\n`AFNetworking` adheres to [Semantic Versioning](https://semver.org/).\n\n--- \n\n## [4.0.1](https://github.com/AFNetworking/AFNetworking/releases/tag/4.0.1) (04/19/2020)\nRelease on Sunday, April 19, 2020. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/milestone/20?closed=1).\n\n#### Updated\n* Project templates and integrations.\n  * Implemented by Kaspik in [#4531](https://github.com/AFNetworking/AFNetworking/pull/4531).\n* Various CocoaPods podspec settings.\n  * Implemented by ElfSundae in [#4528](https://github.com/AFNetworking/AFNetworking/pull/4528), [#4532](https://github.com/AFNetworking/AFNetworking/pull/4532), and [#4533](https://github.com/AFNetworking/AFNetworking/pull/4533).\n\n#### Fixed\n* Crash during authentication delegate method.\n  * Implemented by Kaspik, ElfSundae, and jshier in [#4542](https://github.com/AFNetworking/AFNetworking/pull/4542), [#4552](https://github.com/AFNetworking/AFNetworking/pull/4552), and [#4553](https://github.com/AFNetworking/AFNetworking/pull/4553).\n* SPM integration.\n  * Implemented by jshier in [#4554](https://github.com/AFNetworking/AFNetworking/pull/4554).\n* Improper update instead of replacement of header values.\n  * Implemented by ElfSundae in [#4550](https://github.com/AFNetworking/AFNetworking/pull/4550).\n* Nullability of some methods.\n  * Implemented by ElfSundae in [#4551](https://github.com/AFNetworking/AFNetworking/pull/4551).\n* Typos in CHANGELOG.\n  * Implemented by ElfSundae in [#4537](https://github.com/AFNetworking/AFNetworking/pull/4537).\n* Missing tvOS compatibility for some methods.\n  * Implemented by ElfSundae in [#4536](https://github.com/AFNetworking/AFNetworking/pull/4536).\n* Missing `FOUNDATION_EXPORT` for `AFJSONObjectByRemovingKeysWithNullValues`.\n  * Implemented by ElfSundae in [#4529](https://github.com/AFNetworking/AFNetworking/pull/4529).\n  \n#### Removed\n* Unused UIImage+AFNetworking.h file.\n  * Implemented by ElfSundae in [#4535](https://github.com/AFNetworking/AFNetworking/pull/4535).\n\n## [4.0.0](https://github.com/AFNetworking/AFNetworking/releases/tag/4.0.0) (03/29/2020)\nReleased on Sunday, March 29, 2020. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/milestone/16?closed=1).\n\n#### Added\n* Notificate when a downloaded file has been moved successfully.\n  * Implemented by xingheng in [#4393](https://github.com/AFNetworking/AFNetworking/pull/4393).\n* Specific error for certificate pinning failure.\n  * Implemented by 0xced in [#3425](https://github.com/AFNetworking/AFNetworking/pull/3425).\n* `WKWebView` extensions.\n  * Implemented by tjanela in [#4439](https://github.com/AFNetworking/AFNetworking/pull/4439).\n* Automatic location of certificates in the main bundle for certificate pinning.\n  * Implemented by 0xced in [#3752](https://github.com/AFNetworking/AFNetworking/pull/3752).\n* User-Agent support for tvOS.\n  * Implemented by ghking in [#4014](https://github.com/AFNetworking/AFNetworking/pull/4014).\n* Ability for `AFHTTPSessionManager` to recreate its underlying `NSURLSession`.\n  * Implemented by Kaspik in [#4256](https://github.com/AFNetworking/AFNetworking/pull/4256).\n* Ability to set HTTP headers per request.\n  * Implemented by stnslw in [#4113](https://github.com/AFNetworking/AFNetworking/pull/4113).\n* Ability to capture `NSURLSessionTaskMetrics`.\n  * Implemented by Caelink in [#4237](https://github.com/AFNetworking/AFNetworking/pull/4237).\n\n#### Updated\n* `dataTaskWithHTTPMethod` to be public.\n  * Implemented by smartinspereira in [#4007](https://github.com/AFNetworking/AFNetworking/pull/4007).\n* Reachability notification to include the instance which issued the notification.\n  * Implemented by LMsgSendNilSelf in [#4051](https://github.com/AFNetworking/AFNetworking/pull/4051).\n* `AFJSONObjectByRemovingKeysWithNullValues` to be public.\n  * Implemented by ashfurrow in [#4051](https://github.com/AFNetworking/AFNetworking/pull/4051).\n* `AFJSONObjectByRemovingKeysWithNullValues` to remove `NSNull` values from `NSArray`s.\n  * Implemented by ashfurrow in [#4052](https://github.com/AFNetworking/AFNetworking/pull/4052).\n\n#### Changed\n* Automated CI to GitHub Actions.\n  * Implemented by jshier in [#4523](https://github.com/AFNetworking/AFNetworking/pull/4523).\n\n#### Fixed\n* Explicit `NSSecureCoding` support.\n  * Implemented by jshier in [#4523](https://github.com/AFNetworking/AFNetworking/pull/4523).\n* Deprecated API usage on Catalyst.\n  * Implemented by jshier in [#4523](https://github.com/AFNetworking/AFNetworking/pull/4523).\n* Nullability annotations.\n  * Implemented by jshier in [#4523](https://github.com/AFNetworking/AFNetworking/pull/4523).\n* `AFImageDownloader` to more accurately cancel downloads.\n  * Implemented by kinarobin in [#4407](https://github.com/AFNetworking/AFNetworking/pull/4407).\n* Double KVO notifications in `AFNetworkActivityManager`.\n  * Implemented by kinarobin in [#4406](https://github.com/AFNetworking/AFNetworking/pull/4406).\n* Availability annotations around `NSURLSessionTaskMetrics`.\n  * Implemented by ElfSundae in [#4516](https://github.com/AFNetworking/AFNetworking/pull/4516).\n* Issues with `associated_object` and subclasses.\n  * Implemented by welcommand in [#3872](https://github.com/AFNetworking/AFNetworking/pull/3872).\n* Memory leak in example application.\n  * Implemented by svoit in [#4196](https://github.com/AFNetworking/AFNetworking/pull/4196).\n* Crashes in multithreaded scenarios and `dispatch_barrier`.\n  * Implemented by streeter in [#4474](https://github.com/AFNetworking/AFNetworking/pull/4474).\n* Issues with `NSSecureCoding`.\n  * Implemented by ElfSudae in [#4409](https://github.com/AFNetworking/AFNetworking/pull/4409).\n* Code style issues.\n  * Implemented by svoit in [#4200](https://github.com/AFNetworking/AFNetworking/pull/4200).\n* Race condition in `AFImageDownloader`.\n  * Implemented by bbeversdorf in [#4246](https://github.com/AFNetworking/AFNetworking/pull/4246).\n* Coding style issues.\n  * Implemented by LeeHongHwa in [#4002](https://github.com/AFNetworking/AFNetworking/pull/4002).\n\n#### Removed\n* Support for iOS < 9, macOS < 10.10.\n  * Implemented by jshier in [#4523](https://github.com/AFNetworking/AFNetworking/pull/4523).\n* All previously deprecated APIs.\n  * Implemented by jshier in [#4523](https://github.com/AFNetworking/AFNetworking/pull/4523).\n* Unnecessary `__block` capture.\n  * Implemented by kinarobin in [#4526](https://github.com/AFNetworking/AFNetworking/pull/4526).\n* Workaround for `NSURLSessionUploadTask` creation on iOS 7.\n  * Implemented by kinarobin in [#4525](https://github.com/AFNetworking/AFNetworking/pull/4525).\n* Workaround for safe `NSURLSessionTask` creation on iOS < 8.\n  * Implemented by kinarobin in [#4401](https://github.com/AFNetworking/AFNetworking/pull/4401).\n* `UIWebView` extensions.\n  * Implemented by tjanela in [#4439](https://github.com/AFNetworking/AFNetworking/pull/4439).\n\n---\n\n## [3.2.1](https://github.com/AFNetworking/AFNetworking/releases/tag/3.2.1) (05/04/2018)\nReleased on Friday, May 04, 2018. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A3.2.1+is%3Aclosed).\n\n#### Updated\n* Xcode 9.3 Support\n\t* Implemented by Jeff Kelley in [#4199](https://github.com/AFNetworking/AFNetworking/pull/4199).\n* Update HTTPBin certificates for April 2018.\n\t* Implemented by Jeff Kelley in [#4198](https://github.com/AFNetworking/AFNetworking/pull/4198).\n\n#### Additional Changes\n* Remove conflicting nullable specifier on init\n\t* Implemented by Nick Brook and Jeff Kelley in [#4182](https://github.com/AFNetworking/AFNetworking/pull/4182).\n* Use @available if available to silence a warning.\n\t* Implemented by Jeff Kelley in [#4138](https://github.com/AFNetworking/AFNetworking/pull/4138).\n* UIImageView+AFNetworking: Prevent stuck state for malformed urlRequest\n\t* Implemented by Adam Duflo and aduflo in [#4131](https://github.com/AFNetworking/AFNetworking/pull/4131).\n* add the link for LICENSE\n\t* Implemented by Liao Malin in [#4125](https://github.com/AFNetworking/AFNetworking/pull/4125).\n* Fix analyzer warning for upload task creation\n\t* Implemented by Jeff Kelley in [#4122](https://github.com/AFNetworking/AFNetworking/pull/4122).\n \n\n## [3.2.0](https://github.com/AFNetworking/AFNetworking/releases/tag/3.2.0) (12/15/2017)\nReleased on Friday, December 15, 2017. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A3.2.0+is%3Aclosed).\n\n#### Added\n* Config `AFImageDownloader` `NSURLCache` and ask `AFImageRequestCache` implementer if an image should be cached\n\t* Implemented by wjehenddher in [#4010](https://github.com/AFNetworking/AFNetworking/pull/4010).\n* Add `XMLParser`/`XMLDocument` serializer tests\n\t* Implemented by skyline75489 in [#3753](https://github.com/AFNetworking/AFNetworking/pull/3753).\n* Enable custom httpbin URL with `HTTPBIN_BASE_URL` environment variable\n\t* Implemented by 0xced in [#3748](https://github.com/AFNetworking/AFNetworking/pull/3748).\n* `AFHTTPSessionManager` now throws exception if SSL pinning mode is set for non https sessions\n\t* Implemented by 0xced in [#3687](https://github.com/AFNetworking/AFNetworking/pull/3687).\n\n#### Updated\n* Update security policy test certificates\n\t* Implemented by SlaunchaMan in [#4103](https://github.com/AFNetworking/AFNetworking/pull/4103).\n* Allow return value of HTTP redirection block to be `NULL`\n\t* Implemented by TheDom in [#3975](https://github.com/AFNetworking/AFNetworking/pull/3975).\n* Clarify documentation for supported encodings in `AFJSONResponseSerializer`\n\t* Implemented by skyline75489 in [#3750](https://github.com/AFNetworking/AFNetworking/pull/3750).\n* Handle Error Pointers according to Cocoa Convention\n\t* Implemented by tclementdev in [#3653](https://github.com/AFNetworking/AFNetworking/pull/3653).\n* Updates `AFHTTPSessionManager` documentation to reflect v3.x change\n\t* Implemented by ecaselles in [#3476](https://github.com/AFNetworking/AFNetworking/pull/3476).\n* Improved code base to generate fewer warnings when using stricter compiler settings\n\t* Implemented by 0xced in [3431](https://github.com/AFNetworking/AFNetworking/pull/3431).\n\n#### Changed\n* Change “Mac OS X” and “OS X” references to “macOS”\n\t* Implemented by SlaunchaMan in [#4104](https://github.com/AFNetworking/AFNetworking/pull/4104).\n\n#### Fixed\n* Fixed crash around customizing `NSURLCache` size for < iOS 8.2\n\t* Implemented by kcharwood in [#3735](https://github.com/AFNetworking/AFNetworking/pull/3735).\n* Fixed issue where `UIWebView` extension did not preserve all of the request information\n\t* Implemented by skyline75489 in [#3733](https://github.com/AFNetworking/AFNetworking/pull/3733).\n* Fixed bug with webview delegate callback\n\t* Implemented by kcharwood in [#3727](https://github.com/AFNetworking/AFNetworking/pull/3727).\n* Fixed crash when passing invalid JSON to request serialization\n\t* Implemented by 0xced in [#3719](https://github.com/AFNetworking/AFNetworking/pull/3719).\n* Fixed potential KVO crasher for URL Session Task delegates\n\t* Implemented by 0xced in [#3718](https://github.com/AFNetworking/AFNetworking/pull/3718).\n* Removed ambiguous array creation in `AFSecurityPolicy`\n\t* Implemented by sgl0v in [#3679](https://github.com/AFNetworking/AFNetworking/pull/3679).\n* Fixed issue where `NS_UNAVAILABLE` is not reported for `AFNetworkReachabilityManager`\n\t* Implemented by Microbee23 in [#3649](https://github.com/AFNetworking/AFNetworking/pull/3649).\n* Require app extension api only on watchOS\n\t* Implemented by ethansinjin in [#3612](https://github.com/AFNetworking/AFNetworking/pull/3612).\n* Remove KVO of progress in favor of using the NSURLSession delegate APIs\n\t* Implemented by coreyfloyd in [#3607](https://github.com/AFNetworking/AFNetworking/pull/3607).\n* Fixed an issue where registering a `UIProgessView` to a task that was causing a crash\n\t* Implemented by Starscream27 in [#3604](https://github.com/AFNetworking/AFNetworking/pull/3604).\n* Moved `[self didChangeValueForKey:@\"currentState\"]` into correct scope\n\t* Implemented by chenxin0123 in [#3565](https://github.com/AFNetworking/AFNetworking/pull/3565).\n* Fixed issue where response serializers did not inherit super class copying\n\t* Implemented by kcharwood in [#3559](https://github.com/AFNetworking/AFNetworking/pull/3559).\n* Fixed crashes due to race conditions with `NSMutableDictionary` access in `AFHTTPRequestSerializer`\n\t* Implemented by alexbird in [#3526](https://github.com/AFNetworking/AFNetworking/pull/3526).\n* Updated dash character to improve markdown parsing for license\n\t* Implemented by gemmakbarlow in [#3488](https://github.com/AFNetworking/AFNetworking/pull/3488).\n\n#### Removed\n* Deprecate the unused stringEncoding property of `AFHTTPResponseSerializer`\n\t* Implemented by 0xced in [#3751](https://github.com/AFNetworking/AFNetworking/pull/3751).\n* Removed unused `AFTaskStateChangedContext`\n\t* Implemented by yulingtianxia in [#3432](https://github.com/AFNetworking/AFNetworking/pull/3432).\n \n\n## [3.1.0](https://github.com/AFNetworking/AFNetworking/releases/tag/3.1.0) (03/31/2016)\nReleased on Thursday, March 31, 2016. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A3.1.0+is%3Aclosed).\n\n#### Added\n* Improved `AFImageResponseSerializer` test coverage\n * Implemented by quellish in [#3367](https://github.com/AFNetworking/AFNetworking/pull/3367).\n* Exposed `AFQueryStringFromParameters` and `AFPercentEscapedStringFromString` for public use.\n * Implemented by Kevin Harwood in [#3160](https://github.com/AFNetworking/AFNetworking/pull/3160).\n\n#### Updated\n* Updated Test Suite to run on Xcode 7.3\n * Implemented by Kevin Harwood in [#3418](https://github.com/AFNetworking/AFNetworking/pull/3418).\n* Added white space to URLs in code comment to allow Xcode to properly parse them\n * Implemented by Draveness in [#3384](https://github.com/AFNetworking/AFNetworking/pull/3384).\n* Updated documentation to match method names and correct compiler warnings\n * Implemented by Hakon Hanesand in [#3369](https://github.com/AFNetworking/AFNetworking/pull/3369).\n* Use `NSKeyValueChangeNewKey` constant in change dictionary rather than hardcoded string.\n * Implemented by Wenbin Zhang in [#3360](https://github.com/AFNetworking/AFNetworking/pull/3360).\n* Resolved compiler warnings for documentation errors\n * Implemented by Ricardo Santos in [#3336](https://github.com/AFNetworking/AFNetworking/pull/3336).\n\n#### Changed\n* Reverted `NSURLSessionAuthChallengeDisposition` to `NSURLSessionAuthChallengeCancelAuthenticationChallenge` for SSL Pinning\n * Implemented by Kevin Harwood in [#3417](https://github.com/AFNetworking/AFNetworking/pull/3417).\n\n#### Fixed\n* Removed trailing question mark in query string if parameters are empty\n * Implemented by Kevin Harwood in [#3386](https://github.com/AFNetworking/AFNetworking/pull/3386).\n* Fixed crash if bad URL was passed into the image downloader\n * Implemented by Christian Wen and Kevin Harwood in [#3385](https://github.com/AFNetworking/AFNetworking/pull/3385).\n* Fixed image memory calculation\n * Implemented by 周明宇 in [#3344](https://github.com/AFNetworking/AFNetworking/pull/3344).\n* Fixed issue where UIButton image downloading called wrong cancel method\n * Implemented by duanhong in [#3332](https://github.com/AFNetworking/AFNetworking/pull/3332).\n* Fixed image downloading cancellation race condition\n * Implemented by Kevin Harwood in [#3325](https://github.com/AFNetworking/AFNetworking/pull/3325).\n* Fixed static analyzer warnings on AFNetworkReachabilityManager\n * Implemented by Jeff Kelley in [#3315](https://github.com/AFNetworking/AFNetworking/pull/3315).\n* Fixed issue where download progress would not be reported in iOS 7\n * Implemented by zwm in [#3294](https://github.com/AFNetworking/AFNetworking/pull/3294).\n* Fixed status code 204/205 handling\n * Implemented by Kevin Harwood in [#3292](https://github.com/AFNetworking/AFNetworking/pull/3292).\n* Fixed crash when passing nil/null for progress in UIWebView extension\n * Implemented by Kevin Harwood in [#3289](https://github.com/AFNetworking/AFNetworking/pull/3289).\n\n#### Removed\n* Removed workaround for NSJSONSerialization bug that was fixed in iOS 7\n * Implemented by Cédric Luthi in [#3253](https://github.com/AFNetworking/AFNetworking/pull/3253).\n \n\n## [3.0.4](https://github.com/AFNetworking/AFNetworking/releases/tag/3.0.4) (12/18/2015)\nReleased on Friday, December 18, 2015. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A3.0.4+is%3Aclosed).\n\n#### Fixed\n* Fixed issue where `AFNSURLSessionTaskDidResumeNotification` was removed twice\n * Implemented by Kevin Harwood in [#3236](https://github.com/AFNetworking/AFNetworking/pull/3236).\n \n\n## [3.0.3](https://github.com/AFNetworking/AFNetworking/releases/tag/3.0.3) (12/16/2015)\nReleased on Wednesday, December 16, 2015. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A3.0.3+is%3Aclosed).\n\n#### Added\n* Added tests for response serializers to increase test coverage\n * Implemented by Kevin Harwood in [#3233](https://github.com/AFNetworking/AFNetworking/pull/3233).\n\n#### Fixed\n* Fixed `AFImageResponseSerializer` serialization macros on watchOS and tvOS\n * Implemented by Charles Joseph in [#3229](https://github.com/AFNetworking/AFNetworking/pull/3229).\n \n\n## [3.0.2](https://github.com/AFNetworking/AFNetworking/releases/tag/3.0.2) (12/14/2015)\nReleased on Monday, December 14, 2015. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A3.0.2+is%3Aclosed).\n\n#### Fixed\n* Fixed a crash in `AFURLSessionManager` when resuming download tasks\n * Implemented by Chongyu Zhu in [#3222](https://github.com/AFNetworking/AFNetworking/pull/3222).\n* Fixed issue where background button image would not be updated\n * Implemented by eofs in [#3220](https://github.com/AFNetworking/AFNetworking/pull/3220).\n \n\n## [3.0.1](https://github.com/AFNetworking/AFNetworking/releases/tag/3.0.1) (12/11/2015)\nReleased on Friday, December 11, 2015. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A3.0.1+is%3Aclosed).\n\n#### Added\n* Added Xcode 7.2 support to Travis\n * Implemented by Kevin Harwood in [#3216](https://github.com/AFNetworking/AFNetworking/pull/3216).\n\n#### Fixed\n* Fixed race condition with ImageView/Button image downloading when starting/cancelling/starting the same request\n * Implemented by Kevin Harwood in [#3215](https://github.com/AFNetworking/AFNetworking/pull/3215).\n \n\n## [3.0.0](https://github.com/AFNetworking/AFNetworking/releases/tag/3.0.0) (12/10/2015)\nReleased on Thursday, December 10, 2015. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A3.0.0+is%3Aclosed).\n\nFor detailed information about migrating to AFNetworking 3.0.0, please reference the [migration guide](https://github.com/AFNetworking/AFNetworking/wiki/AFNetworking-3.0-Migration-Guide). All 3.0.0 beta changes will be tracked with this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A3.0.0+is%3Aclosed).\n\n#### Added\n* Added support for older versions of Xcode to Travis\n * Implemented by Kevin Harwood in [#3209](https://github.com/AFNetworking/AFNetworking/pull/3209).\n* Added support for [Codecov.io](https://codecov.io/github/AFNetworking/AFNetworking/AFNetworking?branch=master#sort=coverage&dir=desc)\n * Implemented by Cédric Luthi and Kevin Harwood in [#3196](https://github.com/AFNetworking/AFNetworking/pull/3196).\n *  * **Please help us increase overall coverage by submitting a pull request!**\n* Added support for IPv6 to Reachability\n * Implemented by SAMUKEI and Kevin Harwood in [#3174](https://github.com/AFNetworking/AFNetworking/pull/3174).\n* Added support for Objective-C light weight generics\n * Implemented by Kevin Harwood in [#3166](https://github.com/AFNetworking/AFNetworking/pull/3166).\n* Added nullability attributes to response object in success block\n * Implemented by Nathan Racklyeft in [#3154](https://github.com/AFNetworking/AFNetworking/pull/3154).\n* Migrated to Fastlane for CI and Deployment\n * Implemented by Kevin Harwood in [#3148](https://github.com/AFNetworking/AFNetworking/pull/3148).\n* Added support for tvOS\n * Implemented by Kevin Harwood in [#3128](https://github.com/AFNetworking/AFNetworking/issues/3128).\n* New image downloading architecture\n * Implemented by Kevin Harwood in [#3122](https://github.com/AFNetworking/AFNetworking/issues/3122).\n* Added Carthage Support\n * Implemented by Kevin Harwood in [#3121](https://github.com/AFNetworking/AFNetworking/issues/3121).\n* Added a method to create a unique reachability manager\n * Implemented by Mo Bitar in [#3111](https://github.com/AFNetworking/AFNetworking/pull/3111).\n* Added a initial delay to the network indicator per the Apple HIG\n * Implemented by Kevin Harwood in [#3094](https://github.com/AFNetworking/AFNetworking/pull/3094).\n\n#### Updated\n* Improved testing reliability for continuous integration\n * Implemented by Kevin Harwood in [#3124](https://github.com/AFNetworking/AFNetworking/pull/3124).\n* Example project now consumes AFNetworking as a library.\n * Implemented by Kevin Harwood in [#3068](https://github.com/AFNetworking/AFNetworking/pull/3068).\n* Migrated to using `instancetype` where applicable\n * Implemented by Kyle Fuller in [#3064](https://github.com/AFNetworking/AFNetworking/pull/3064).\n* Tweaks to project to support Framework Project\n * Implemented by Christian Noon in [#3062](https://github.com/AFNetworking/AFNetworking/pull/3062).\n\n#### Changed\n* Split the iOS and OS X AppDelegate classes in the Example Project\n * Implemented by Cédric Luthi in [#3193](https://github.com/AFNetworking/AFNetworking/pull/3193).\n* Changed SSL Pinning Error to be `NSURLErrorServerCertificateUntrusted`\n * Implemented by Cédric Luthi and Kevin Harwood in [#3191](https://github.com/AFNetworking/AFNetworking/pull/3191).\n* New Progress Reporting API using `NSProgress`\n * Implemented by Kevin Harwood in [#3187](https://github.com/AFNetworking/AFNetworking/pull/3187).\n* Changed `pinnedCertificates` type in `AFSecurityPolicy` from `NSArray` to `NSSet`\n * Implemented by Cédric Luthi in [#3164](https://github.com/AFNetworking/AFNetworking/pull/3164).\n\n#### Fixed\n* Improved task creation performance for iOS 8+\n * Implemented by nikitahils, Nikita G and Kevin Harwood in [#3208](https://github.com/AFNetworking/AFNetworking/pull/3208).\n* Fixed certificate validation for servers providing incomplete chains\n * Implemented by André Pacheco Neves in [#3159](https://github.com/AFNetworking/AFNetworking/pull/3159).\n* Fixed bug in `AFMultipartBodyStream` that may cause the input stream to read more bytes than required.\n * Implemented by bang in [#3153](https://github.com/AFNetworking/AFNetworking/pull/3153).\n* Fixed race condition crash from Resume/Suspend task notifications\n * Implemented by Kevin Harwood in [#3152](https://github.com/AFNetworking/AFNetworking/pull/3152).\n* Fixed `AFImageDownloader` stalling after numerous failures\n * Implemented by Rick Silva in [#3150](https://github.com/AFNetworking/AFNetworking/pull/3150).\n* Fixed warnings generated in UIWebView category\n * Implemented by Kevin Harwood in [#3126](https://github.com/AFNetworking/AFNetworking/pull/3126).\n\n#### Removed\n* Removed AFBase64EncodedStringFromString static function\n * Implemented by Cédric Luthi in [#3188](https://github.com/AFNetworking/AFNetworking/pull/3188).\n* Removed code supporting conditional compilation for unsupported development configurations.\n * Implemented by Cédric Luthi in [#3177](https://github.com/AFNetworking/AFNetworking/pull/3177).\n* Removed deprecated methods, properties, and notifications from AFN 2.x\n * Implemented by Kevin Harwood in [#3168](https://github.com/AFNetworking/AFNetworking/pull/3168).\n* Removed support for `NSURLConnection`\n * Implemented by Kevin Harwood in [#3120](https://github.com/AFNetworking/AFNetworking/issues/3120).\n* Removed `UIAlertView` category support since it is now deprecated\n * Implemented by Kevin Harwood in [#3034](https://github.com/AFNetworking/AFNetworking/pull/3034).\n\n\n## [2.6.3](https://github.com/AFNetworking/AFNetworking/releases/tag/2.6.3) (11/11/2015)\nReleased on Wednesday, November 11, 2015. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A2.6.3+is%3Aclosed).\n\n#### Fixed\n* Fixed clang analyzer warning suppression that prevented building under some project configurations\n * Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#3142](https://github.com/AFNetworking/AFNetworking/pull/3142).\n* Restored Xcode 6 compatibility \n * Fixed by [jcayzac](https://github.com/jcayzac) in [#3139](https://github.com/AFNetworking/AFNetworking/pull/3139).\n \n\n## [2.6.2](https://github.com/AFNetworking/AFNetworking/releases/tag/2.6.2) (11/06/2015)\nReleased on Friday, November 06, 2015. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A2.6.2+is%3Aclosed).\n\n### Important Upgrade Note for Swift\n* [#3130](https://github.com/AFNetworking/AFNetworking/pull/3130) fixes a swift interop error that does have a breaking API change if you are using Swift. This was [identified](https://github.com/AFNetworking/AFNetworking/issues/3137) after 2.6.2 was released. It changes the method from `throws` to an error pointer, since that method does return an object and also handles an error pointer, which does not play nicely with the Swift/Objective-C error conversion. See [#2810](https://github.com/AFNetworking/AFNetworking/issues/2810) for additional notes. This affects `AFURLRequestionSerializer` and `AFURLResponseSerializer`.\n\n#### Added\n* `AFHTTPSessionManager` now copies its `securityPolicy`\n * Fixed by [mohamede1945](https://github.com/mohamede1945) in [#2887](https://github.com/AFNetworking/AFNetworking/pull/2887).\n\n#### Updated\n* Updated travis to run on 7.1\n * Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#3132](https://github.com/AFNetworking/AFNetworking/pull/3132).\n* Simplifications of if and return statements in `AFSecurityPolicy`\n * Fixed by [TorreyBetts](https://github.com/TorreyBetts) in [#3063](https://github.com/AFNetworking/AFNetworking/pull/3063).\n\n#### Fixed\n* Fixed swift interop issue that prevented returning a nil NSURL for a download task\n * Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#3133](https://github.com/AFNetworking/AFNetworking/pull/3133).\n* Suppressed false positive memory leak warning in Reachability Manager\n * Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#3131](https://github.com/AFNetworking/AFNetworking/pull/3131).\n* Fixed swift interop issue with throws and Request/Response serialization. \n * Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#3130](https://github.com/AFNetworking/AFNetworking/pull/3130).\n* Fixed race condition in reachability callback delivery\n * Fixed by [MichaelHackett](https://github.com/MichaelHackett) in [#3117](https://github.com/AFNetworking/AFNetworking/pull/3117).\n* Fixed URLs that were redirecting in the README\n * Fixed by [frankenbot](https://github.com/frankenbot) in [#3109](https://github.com/AFNetworking/AFNetworking/pull/3109).\n* Fixed Project Warnings\n * Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#3102](https://github.com/AFNetworking/AFNetworking/pull/3102).\n* Fixed README link to WWDC session\n * Fixed by [wrtsprt](https://github.com/wrtsprt) in [#3099](https://github.com/AFNetworking/AFNetworking/pull/3099).\n* Switched from `OS_OBJECT_HAVE_OBJC_SUPPORT` to `OS_OBJECT_USE_OBJC` for watchOS 2 support.\n * Fixed by [kylef](https://github.com/kylef) in [#3065](https://github.com/AFNetworking/AFNetworking/pull/3065).\n* Added missing __nullable attributes to failure blocks in `AFHTTPRequestOperationManager` and `AFHTTPSessionManager`\n * Fixed by [hoppenichu](https://github.com/hoppenichu) in [#3057](https://github.com/AFNetworking/AFNetworking/pull/3057).\n* Fixed memory leak in NSURLSession handling\n * Fixed by [olegnaumenko](https://github.com/olegnaumenko) in [#2794](https://github.com/AFNetworking/AFNetworking/pull/2794).\n\n\n## [2.6.1](https://github.com/AFNetworking/AFNetworking/releases/tag/2.6.1) (10-13-2015)\nReleased on Tuesday, October 13th, 2015. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A2.6.1+is%3Aclosed).\n\n### Future Compatibility Note\nNote that AFNetworking 3.0 will soon be released, and will drop support for all `NSURLConnection` based API's (`AFHTTPRequestOperationManager`, `AFHTTPRequestOperation`, and `AFURLConnectionOperation`. If you have not already migrated to `NSURLSession` based API's, please do so soon. For more information, please see the [3.0 migration guide](https://github.com/AFNetworking/AFNetworking/wiki/AFNetworking-3.0-Migration-Guide).\n\n#### Fixed\n* Fixed a bug that prevented empty x-www-form-urlencoded bodies.\n\t* Fixed by [Julien Cayzac](https://github.com/jcayzac) in [#2868](https://github.com/AFNetworking/AFNetworking/pull/2868).\n* Fixed bug that prevented AFNetworking from being installed for watchOS via Cocoapods.\n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2909](https://github.com/AFNetworking/AFNetworking/issues/2909).\n* Added missing nullable attributes to `AFURLRequestSerialization` and `AFURLSessionManager`.\n\t* Fixed by [andrewtoth](https://github.com/andrewtoth) in [#2911](https://github.com/AFNetworking/AFNetworking/pull/2911).\n* Migrated to `OS_OBJECT_USE_OBJC`.\n\t* Fixed by [canius](https://github.com/canius) in [#2930](https://github.com/AFNetworking/AFNetworking/pull/2930).\n* Added missing nullable tags to UIKit extensions.\n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#3000](https://github.com/AFNetworking/AFNetworking/pull/3000).\n* Fixed potential infinite recursion loop if multiple versions of AFNetworking are loaded in a target.\n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2743](https://github.com/AFNetworking/AFNetworking/issues/2743). \n* Updated Travis CI test script\n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#3032](https://github.com/AFNetworking/AFNetworking/issues/3032). \n* Migrated to `FOUNDATION_EXPORT` from `extern`.\n\t* Fixed by [Andrey Mikhaylov](https://github.com/pronebird) in [#3041](https://github.com/AFNetworking/AFNetworking/pull/3041).\n* Fixed issue where `AFURLConnectionOperation` could get stuck in an infinite loop.\n\t* Fixed by [Mattt Thompson](https://github.com/mattt) in [#2496](https://github.com/AFNetworking/AFNetworking/pull/2496).\n* Fixed regression where URL request serialization would crash on iOS 8 for long URLs.\n\t* Fixed by [softenhard](https://github.com/softenhard) in [#3028](https://github.com/AFNetworking/AFNetworking/pull/3028).\n\n## [2.6.0](https://github.com/AFNetworking/AFNetworking/releases/tag/2.6.0) (08-19-2015)\nReleased on Wednesday, August 19th, 2015. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A2.6.0+is%3Aclosed).\n\n### Important Upgrade Notes\nPlease note the following API/project changes have been made:\n\n* iOS 6 and OS X 10.8 support has been dropped from the project to facilitate support for watchOS 2. The final release supporting iOS 6 and OS X 10.8 is 2.5.4.\n* **Full Certificate Chain Validation has been removed** from `AFSecurityPolicy`. As discussed in [#2744](https://github.com/AFNetworking/AFNetworking/issues/2744), there was no documented security advantage to pinning against an entire certificate chain. If you were using full certificate chain, please determine and select the most ideal certificate in your chain to pin against.\n\t* Implemented by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2856](https://github.com/AFNetworking/AFNetworking/pull/2856).\n* **The request url will now be returned by the `UIImageView` category if the image is returned from cache.** In previous releases, both the request and the response were nil. Going forward, only the response will be nil.\n\t* Implemented by [Chris Gibbs](https://github.com/chrisgibbs) in [#2771](https://github.com/AFNetworking/AFNetworking/pull/2771).\n* **Support for App Extension Targets is now baked in using `NS_EXTENSION_UNAVAILABLE_IOS`.** You no longer need to define `AF_APP_EXTENSIONS` in order to include code in a extension target.\n\t* Implemented by [bnickel](https://github.com/bnickel) in [#2737](https://github.com/AFNetworking/AFNetworking/pull/2737).\n* This release now supports watchOS 2.0, which relys on target conditionals that are only present in Xcode 7 and iOS 9/watchOS 2.0/OS X 10.10. If you install the library using CocoaPods, AFNetworking will define these target conditionals for on older platforms, allowing your code to compile. If you do not use Cocoapods, you will need to add the following code your to PCH file.\n\n```\n#ifndef TARGET_OS_IOS\n  #define TARGET_OS_IOS TARGET_OS_IPHONE\n#endif\n#ifndef TARGET_OS_WATCH\n  #define TARGET_OS_WATCH 0\n#endif\n```\n* This release migrates query parameter serialization to model AlamoFire and adhere to RFC standards. Note that `/` and `?` are no longer encoded by default.\n\t* Implemented by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2908](https://github.com/AFNetworking/AFNetworking/pull/2908).\n\n\n\n**Note** that support for `NSURLConnection` based API's will be removed in a future update. If you have not already done so, it is recommended that you transition to the `NSURLSession` APIs in the very near future.\n\n#### Added\n* Added watchOS 2.0 support. `AFNetworking` can now be added to watchOS targets using CocoaPods.\n\t* Added by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2837](https://github.com/AFNetworking/AFNetworking/issues/2837).\n* Added nullability annotations to all of the header files to improve Swift interoperability.\n\t* Added by [Frank LSF](https://github.com/franklsf95) and [Kevin Harwood](https://github.com/Kevin Harwood) in [#2814](https://github.com/AFNetworking/AFNetworking/pull/2814).\n* Converted source to Modern Objective-C Syntax.\n\t* Implemented by [Matt Shedlick](https://github.com/mattshedlick) and [Kevin Harwood](https://github.com/Kevin Harwood) in [#2688](https://github.com/AFNetworking/AFNetworking/pull/2688).\n* Improved memory performance when download large objects.\n\t* Fixed by [Gabe Zabrino](https://github.com/gfzabarino) and [Kevin Harwood](https://github.com/Kevin Harwood) in [#2672](https://github.com/AFNetworking/AFNetworking/pull/2672).\n\n#### Fixed\n* Fixed a crash related for objects that observe notifications but don't properly unregister.\n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) and [bnickle](https://github.com/bnickel) in [#2741](https://github.com/AFNetworking/AFNetworking/pull/2741).\n* Fixed a race condition crash that occured with `AFImageResponseSerialization`.\n\t* Fixed by [Paulo Ferreria](https://github.com/paulosotu) and [Kevin Harwood](https://github.com/Kevin Harwood) in [#2815](https://github.com/AFNetworking/AFNetworking/pull/2815).\n* Fixed an issue where tests failed to run on CI due to unavailable simulators.\n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2834](https://github.com/AFNetworking/AFNetworking/pull/2834).\n* Fixed \"method override not found\" warnings in Xcode 7 Betas\n\t* Fixed by [Ben Guo](https://github.com/benzguo) in [#2822](https://github.com/AFNetworking/AFNetworking/pull/2822)\n* Removed Duplicate Import and UIKit Header file.\n\t* Fixed by [diehardest](https://github.com/diehardest) in [#2813](https://github.com/AFNetworking/AFNetworking/pull/2813)\n* Removed the ability to include duplicate certificates in the pinned certificate chain.\n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2756](https://github.com/AFNetworking/AFNetworking/pull/2756).\n* Fixed potential memory leak in `AFNetworkReachabilityManager`.\n\t* Fixed by [Julien Cayzac](https://github.com/jcayzac) in [#2867](https://github.com/AFNetworking/AFNetworking/pull/2867).\n\n#### Documentation Improvements\n* Clarified best practices for Reachability per Apple recommendations.\n\t* Fixed by [Steven Fisher](https://github.com/tewha) in [#2704](https://github.com/AFNetworking/AFNetworking/pull/2704).\n* Added `startMonitoring` call to the Reachability section of the README\n\t* Added by [Jawwad Ahmad](https://github.com/jawwad) in [#2831](https://github.com/AFNetworking/AFNetworking/pull/2831).\n* Fixed documentation error around how `baseURL` is used for reachability monitoring.\n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2761](https://github.com/AFNetworking/AFNetworking/pull/2761).\n* Numerous spelling corrections in the documentation.\n\t* Fixed by [Antoine Cœur](https://github.com/Coeur) in [#2732](https://github.com/AFNetworking/AFNetworking/pull/2732) and [#2898](https://github.com/AFNetworking/AFNetworking/pull/2898).\n\n## [2.5.4](https://github.com/AFNetworking/AFNetworking/releases/tag/2.5.4) (2015-05-14)\nReleased on 2015-05-14. All issues associated with this milestone can be found using this [filter](https://github.com/AFNetworking/AFNetworking/issues?q=milestone%3A2.5.4+is%3Aclosed).\n\n#### Updated\n* Updated the CI test script to run iOS tests on all versions of iOS that are installed on the build machine.\n\t* Updated by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2716](https://github.com/AFNetworking/AFNetworking/pull/2716).\n\t\n#### Fixed\n\n* Fixed an issue where `AFNSURLSessionTaskDidResumeNotification` and `AFNSURLSessionTaskDidSuspendNotification` were not being properly called due to implementation differences in `NSURLSessionTask` in iOS 7 and iOS 8, which also affects the `AFNetworkActivityIndicatorManager`. \n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2702](https://github.com/AFNetworking/AFNetworking/pull/2702).\n* Fixed an issue where the OS X test linker would throw a warning during tests.\n\t* Fixed by [Christian Noon](https://github.com/cnoon) in [#2719](https://github.com/AFNetworking/AFNetworking/pull/2719).\n* Fixed an issue where tests would randomly fail due to mocked objects not being cleaned up.\n\t* Fixed by [Kevin Harwood](https://github.com/Kevin Harwood) in [#2717](https://github.com/AFNetworking/AFNetworking/pull/2717).\n\n\n## [2.5.3](https://github.com/AFNetworking/AFNetworking/releases/tag/2.5.3) (2015-04-20)\n\n* Add security policy tests for default policy\n\n* Add network reachability tests\n\n* Change `validatesDomainName` property to default to `YES` under all * security policies\n\n* Fix `NSURLSession` subspec compatibility with iOS 6 / OS X 10.8\n\n* Fix leak of data task used in `NSURLSession` swizzling\n\n* Fix leak for observers from `addObserver:...:withBlock:`\n\n* Fix issue with network reachability observation on domain name\n\n## [2.5.2](https://github.com/AFNetworking/AFNetworking/releases/tag/2.5.2) (2015-03-26)\n**NOTE** This release contains a security vulnerabilty. **All users should upgrade to a 2.5.3 or greater**. Please reference this [statement](https://gist.github.com/AlamofireSoftwareFoundation/f784f18f949b95ab733a) if you have any further questions about this release.\n\n* Add guards for unsupported features in iOS 8 App Extensions\n\n* Add missing delegate callbacks to \t`UIWebView` category\n \n* Add test and implementation of strict default certificate validation\n\n* Add #define for `NS_DESIGNATED_INITIALIZER` for unsupported versions of Xcode\n\n* Fix `AFNetworkActivityIndicatorManager` for iOS 7\n\n* Fix `AFURLRequestSerialization` property observation\n\n* Fix `testUploadTasksProgressBecomesPartOfCurrentProgress`\n\n* Fix warnings from Xcode 6.3 Beta\n\n* Fix `AFImageWithDataAtScale` handling of animated images\n\n* Remove `AFNetworkReachabilityAssociation` enumeration\n\n* Update to conditional use assign semantics for GCD properties based on `OS_OBJECT_HAVE_OBJC_SUPPORT` for better Swift support\n\n## [2.5.1](https://github.com/AFNetworking/AFNetworking/releases/tag/2.5.1) (2015-02-09)\n**NOTE** This release contains a security vulnerabilty. **All users should upgrade to a 2.5.3 or greater**. Please reference this [statement](https://gist.github.com/AlamofireSoftwareFoundation/f784f18f949b95ab733a) if you have any further questions about this release.\n\n * Add `NS_DESIGNATED_INITIALIZER` macros. (Samir Guerdah)\n\n * Fix and clarify documentation for `stringEncoding` property. (Mattt\nThompson)\n\n * Fix for NSProgress bug where two child NSProgress instances are added to a\nparent NSProgress. (Edward Povazan)\n\n * Fix incorrect file names in headers. (Steven Fisher)\n\n * Fix KVO issue when running testing target caused by lack of\n`automaticallyNotifiesObserversForKey:` implementation. (Mattt Thompson)\n\n * Fix use of variable arguments for UIAlertView category.  (Kenta Tokumoto)\n\n * Fix `genstrings` warning for `NSLocalizedString` usage in\n`UIAlertView+AFNetworking`. (Adar Porat)\n\n * Fix `NSURLSessionManager` task observation for network activity indicator\nmanager. (Phil Tang)\n\n * Fix `UIButton` category method caching of background image (Fernanda G.\nGeraissate)\n\n * Fix `UIButton` category method failure handling. (Maxim Zabelin)\n\n * Update multipart upload method requirements to ensure `request.HTTPBody`\nis non-nil. (Mattt Thompson)\n\n * Update to use builtin `__Require` macros from AssertMacros.h. (Cédric\nLuthi)\n\n * Update `parameters` parameter to accept `id` for custom serialization\nblock. (@mooosu)\n\n## [2.5.0](https://github.com/AFNetworking/AFNetworking/releases/tag/2.5.0) (2014-11-17)\n\n * Add documentation for expected background session manager usage (Aaron\nBrager)\n\n * Add missing documentation for `AFJSONRequestSerializer` and\n`AFPropertyListSerializer` (Mattt Thompson)\n\n * Add tests for requesting HTTPS endpoints (Mattt Thompson)\n\n * Add `init` method declarations of `AFURLResponseSerialization` classes for\nSwift compatibility (Allen Rohner)\n\n * Change default User-Agent to use the version number instead of the build\nnumber (Tim Watson)\n\n * Change `validatesDomainName` to readonly property (Mattt Thompson, Brian\nKing)\n\n * Fix checks when observing `AFHTTPRequestSerializerObservedKeyPaths` (Jacek\nSuliga)\n\n * Fix crash caused by attempting to set nil `NSURLResponse -URL` as key for\n`userInfo` dictionary (Elvis Nuñez)\n\n * Fix crash for multipart streaming requests in XPC services (Mattt Thompson)\n\n * Fix minor aspects of response serializer documentation (Mattt Thompson)\n\n * Fix potential race condition for `AFURLConnectionOperation -description`\n\n * Fix widespread crash related to key-value observing of `NSURLSessionTask\n-state` (Phil Tang)\n\n * Fix `UIButton` category associated object keys (Kristian Bauer, Mattt\nThompson)\n\n * Remove `charset` parameter from Content-Type HTTP header field values for\n`AFJSONRequestSerializer` and `AFPropertyListSerializer` (Mattt Thompson)\n\n * Update CocoaDocs color scheme (@Orta)\n\n * Update Podfile to explicitly define sources (Kyle Fuller)\n\n * Update to relay `downloadFileURL` to the delegate if the manager picks a\n`fileURL` (Brian King)\n\n * Update `AFSSLPinningModeNone` to not validate domain name (Brian King)\n\n * Update `UIButton` category to cache images in `sharedImageCache` (John\nBushnell)\n\n * Update `UIRefreshControl` category to set control state to current state\nof request (Elvis Nuñez)\n\n## [2.4.1](https://github.com/AFNetworking/AFNetworking/releases/tag/2.4.1) (2014-09-04)\n\n * Fix compiler warning generated on 32-bit architectures (John C. Daub)\n\n * Fix potential crash caused by failed validation with nil responseData\n (Mattt Thompson)\n\n * Fix to suppress compiler warnings for out-of-range enumerated type\n value assignment (Mattt Thompson)\n\n## [2.4.0](https://github.com/AFNetworking/AFNetworking/releases/tag/2.4.0) (2014-09-03)\n\n * Add CocoaDocs color scheme (Orta)\n\n * Add image cache to `UIButton` category (Kristian Bauer, Mattt Thompson)\n\n * Add test for success block on 204 response (Mattt Thompson)\n\n * Add tests for encodable and re-encodable query string parameters (Mattt\nThompson)\n\n * Add `AFHTTPRequestSerializer -valueForHTTPHeaderField:` (Kyle Fuller)\n\n * Add `AFNetworkingOperationFailingURLResponseDataErrorKey` key to user info\nof serialization error (Yannick Heinrich)\n\n * Add `imageResponseSerializer` property to `UIButton` category (Kristian\nBauer, Mattt Thompson)\n\n * Add `removesKeysWithNullValues` setting to serialization and copying (Jon\nShier)\n\n * Change request and response serialization tests to be factored out into\nseparate files (Mattt Thompson)\n\n * Change signature of success parameters in `UIButton` category methods to\nmatch those in `UIImageView` (Mattt Thompson)\n\n * Change to remove charset parameter from\n`application/x-www-form-urlencoded` content type (Mattt Thompson)\n\n * Change `AFImageCache` to conform to `NSObject` protocol ( Marcelo Fabri)\n\n * Change `AFMaximumNumberOfToRecreateBackgroundSessionUploadTask` to\n`AFMaximumNumberOfAttemptsToRecreateBackgroundSessionUploadTask` (Mattt\nThompson)\n\n * Fix documentation error for NSSecureCoding (Robert Ryan)\n\n * Fix documentation for `URLSessionDidFinishEventsForBackgroundURLSession`\ndelegate method (Mattt Thompson)\n\n * Fix expired ADN certificate in example project (Carson McDonald)\n\n * Fix for interoperability within Swift project (Stephan Krusche)\n\n * Fix for potential deadlock due to KVO subscriptions within a lock\n(Alexander Skvortsov)\n\n * Fix iOS 7 bug where session tasks can have duplicate identifiers if\ncreated from different threads (Mattt Thompson)\n\n * Fix iOS 8 bug by adding explicit synthesis for `delegate` of\n`AFMultipartBodyStream` (Mattt Thompson)\n\n * Fix issue caused by passing `nil` as body of multipart form part (Mattt\nThompson)\n\n * Fix issue caused by passing `nil` as destination in download task method\n(Mattt Thompson)\n\n * Fix issue with `AFHTTPRequestSerializer` returning a request and silently\nhandling an error from a `queryStringSerialization` block (Kyle Fuller, Mattt\nThompson)\n\n * Fix potential issues by ensuring `invalidateSessionCancelingTasks` only\nexecutes on main thread (Mattt Thompson)\n\n * Fix potential memory leak caused by deferred opening of output stream\n(James Tomson)\n\n * Fix properties on session managers such that default values will not trump\nvalues set in the session configuration (Mattt Thompson)\n\n * Fix README to include explicit call to start reachability manager (Mattt\nThompson)\n\n * Fix request serialization error handling in `AFHTTPSessionManager`\nconvenience methods (Kyle Fuller, Lars Anderson, Mattt Thompson)\n\n * Fix stray localization macro (Devin McKaskle)\n\n * Fix to ensure connection operation `-copyWithZone:` calls super\nimplementation (Chris Streeter)\n\n * Fix `UIButton` category to only cancel request for specified state\n(@xuzhe, Mattt Thompson)\n\n## [2.3.1](https://github.com/AFNetworking/AFNetworking/releases/tag/2.3.1) (2014-06-13)\n\n * Fix issue with unsynthesized `streamStatus` & `streamError` properties\non `AFMultipartBodyStream` (Mattt Thompson)\n\n## [2.3.0](https://github.com/AFNetworking/AFNetworking/releases/tag/2.3.0) (2014-06-11)\n\n * Add check for `AF_APP_EXTENSIONS` macro to conditionally compile\nbackground  method that makes API call unavailable to App Extensions in iOS 8\n/ OS X 10.10\n\n * Add further explanation for network reachability in documentation (Steven\nFisher)\n\n * Add notification for initial change from\n`AFNetworkReachabilityStatusUnknown` to any other state (Jason Pepas,\nSebastian S.A., Mattt Thompson)\n\n * Add tests for AFNetworkActivityIndicatorManager (Dave Weston, Mattt\nThompson)\n\n * Add tests for AFURLSessionManager task progress (Ullrich Schäfer)\n\n * Add `attemptsToRecreateUploadTasksForBackgroundSessions` property, which\nattempts Apple's recommendation of retrying a failed upload task if initial\ncreation did not succeed (Mattt Thompson)\n\n * Add `completionQueue` and `completionGroup` properties to\n`AFHTTPRequestOperationManager` (Robert Ryan)\n\n * Change deprecating `AFErrorDomain` in favor of\n`AFRequestSerializerErrorDomain` & `AFResponseSerializerErrorDomain` (Mattt\nThompson)\n\n * Change serialization tests to be split over two different files (Mattt\nThompson)\n\n * Change to make NSURLSession subspec not depend on NSURLConnection subspec\n(Mattt Thompson)\n\n * Change to make Serialization subspec not depend on NSURLConnection subspec\n(Nolan Waite, Mattt Thompson)\n\n * Change `completionHandler` of\n`application:handleEventsForBackgroundURLSession:completion:` to be run on\nmain thread (Padraig Kennedy)\n\n * Change `UIImageView` category to accept any object conforming to\n`AFURLResponseSerialization`, rather than just `AFImageResponseSerializer`\n(Romans Karpelcevs)\n\n * Fix calculation and behavior of `NSProgress` (Padraig Kennedy, Ullrich\nSchäfer)\n\n * Fix deprecation warning for `backgroundSessionConfiguration:` in iOS 8 /\nOS X 10.10 (Mattt Thompson)\n\n * Fix implementation of `copyWithZone:` in serializer subclasses (Chris\nStreeter)\n\n * Fix issue in Xcode 6 caused by implicit synthesis of overridden `NSStream`\nproperties (Clay Bridges, Johan Attali)\n\n * Fix KVO handling for `NSURLSessionTask` on iOS 8 / OS X 10.10 (Mattt\nThompson)\n\n * Fix KVO leak for `NSURLSessionTask` (@Zyphrax)\n\n * Fix potential crash caused by attempting to use non-existent error of\nfailing requests due to URLs exceeding a certain length (Boris Bügling)\n\n * Fix to check existence of `uploadProgress` block inside a referencing\n`dispatch_async` to avoid potential race condition (Kyungkoo Kang)\n\n * Fix `UIImageView` category race conditions (Sunny)\n\n * Remove unnecessary default operation response serializer setters (Mattt\nThompson)\n\n## [2.2.4](https://github.com/AFNetworking/AFNetworking/releases/tag/2.2.4) (2014-05-13)\n\n * Add NSSecureCoding support to all AFNetworking classes (Kyle Fuller, Mattt\nThompson)\n\n * Change behavior of request operation `NSOutputStream` property to only nil\nout if `responseData` is non-nil, meaning that no custom object was set\n(Mattt Thompson)\n\n * Fix data tasks to not attempt to track progress, and rare related crash\n(Padraig Kennedy)\n\n * Fix issue with `-downloadTaskDidFinishDownloading:` not being called\n(Andrej Mihajlov)\n\n * Fix KVO leak on invalidated session tasks (Mattt Thompson)\n\n * Fix missing import of `UIRefreshControl+AFNetworking\" (@BB9z)\n\n * Fix potential compilation errors on Mac OS X, caused by import order of\n`<AssertionMacros.h>`, which signaled an incorrect deprecation warning (Mattt\nThompson)\n\n * Fix race condition in UIImageView+AFNetworking when making several image\nrequests in quick succession (Alexander Crettenand)\n\n * Update documentation for `-downloadTaskWithRequest:` to warn about blocks\nbeing disassociated on app termination and backgrounding (Robert Ryan)\n\n## [2.2.3](https://github.com/AFNetworking/AFNetworking/releases/tag/2.2.3) (2014-04-18)\n\n  * Fix `AFErrorOrUnderlyingErrorHasCodeInDomain` function declaration for\nAFXMLDocumentResponseSerializer (Mattt Thompson)\n\n  * Fix error domain check in `AFErrorOrUnderlyingErrorHasCodeInDomain`\n(Mattt Thompson)\n\n  * Fix `UIImageView` category to only `nil` out request operation properties\nbelonging to completed request (Mattt Thompson)\n\n  * Fix `removesKeysWithNullValues` to respect\n`NSJSONReadingMutableContainers` option (Mattt Thompson)\n\n  * Change `removesKeysWithNullValues` property to recursively remove null\nvalues from dictionaries nested in arrays (@jldagon)\n\n  * Change to not override `Content-Type` header field values set by\n`HTTPRequestHeaders` property (Aaron Brager, Mattt Thompson)\n\n## [2.2.2](https://github.com/AFNetworking/AFNetworking/releases/tag/2.2.2) (2014-04-15)\n\n  * Add `removesKeysWithNullValues` property to `AFJSONResponsSerializer` to\nautomatically remove `NSNull` values in dictionaries serialized from JSON\n(Mattt Thompson)\n\n  * Add unit test for checking content type (Diego Torres)\n\n  * Add `boundary` property to `AFHTTPBodyPart -copyWithZone:`\n\n  * Change to accept `id` parameter type in HTTP manager convenience methods\n(Mattt Thompson)\n\n  * Change to deprecate `setAuthorizationHeaderFieldWithToken:`, in favor of\nusers specifying an `Authorization` header field value themselves (Mattt\nThompson)\n\n  * Change to use `long long` type to prevent a difference in stream size\ncaps on 32-bit and 64-bit architectures (Yung-Luen Lan, Cédric Luthi)\n\n  * Fix calculation of Content-Length in `taskDidSendBodyData` (Christos\nVasilakis)\n\n  * Fix for comparison of image view request operations (Mattt Thompson)\n\n  * Fix for SSL certificate validation to check status codes at runtime (Dave\nAnderson)\n\n  * Fix to add missing call to delegate in\n`URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:`\n\n  * Fix to call `taskDidComplete` if delegate is missing (Jeff Ward)\n\n  * Fix to implement `respondsToSelector:` for `NSURLSession` delegate\nmethods to conditionally respond to conditionally respond to optional\nselectors if and only if a custom block has been set (Mattt Thompson)\n\n  * Fix to prevent illegal state values from being assigned for\n`AFURLConnectionOperation` (Kyle Fuller)\n\n  * Fix to re-establish `AFNetworkingURLSessionTaskDelegate` objects after\nrestoring from a background configuration (Jeff Ward)\n\n  * Fix to reduce memory footprint by `nil`-ing out request operation\n`outputStream` after closing, as well as image view request operation after\nsetting image (Teun van Run, Mattt Thompson)\n\n  * Remove unnecessary call in class constructor (Bernhard Loibl)\n\n  * Remove unnecessary check for `respondsToSelector:` for `UIScreen scale`\nin User-Agent string (Samuel Goodwin)\n\n  * Update App.net certificate and API base URL (Cédric Luthi)\n\n  * Update examples in README (@petard, @orta, Mattt Thompson)\n\n  * Update Travis CI icon to use SVG format (Maximilian Tagher)\n\n## [2.2.1](https://github.com/AFNetworking/AFNetworking/releases/tag/2.2.1) (2014-03-14)\n\n  * Fix `-Wsign-conversion` warning in AFURLConnectionOperation (Jesse Collis)\n\n  * Fix `-Wshorten-64-to-32` warning (Jesse Collis)\n\n  * Remove unnecessary #imports in `UIImageView` & `UIWebView` categories\n(Jesse Collis)\n\n  * Fix call to `CFStringTransform()` by checking return value before setting\nas `User-Agent` (Kevin Cassidy Jr)\n\n  * Update `AFJSONResponseSerializer` adding `@autorelease` to relieve memory\npressure (Mattt Thompson, Michal Pietras)\n\n  * Update `AFJSONRequestSerializer` to accept `id` (Daren Desjardins)\n\n  * Fix small documentation bug (@jkoepcke)\n\n  * Fix behavior of SSL pinning. In case of `validatesDomainName == YES`, it\nnow explicitly uses `SecPolicyCreateSSL`, which also validates the domain\nname. Otherwise, `SecPolicyCreateBasicX509` is used.\n`AFSSLPinningModeCertificate` now uses `SecTrustSetAnchorCertificates`, which\nallows explicit specification of all trusted certificates. For\n`AFSSLPinningModePublicKey`, the number of trusted public keys determines if\nthe server should be trusted. (Oliver Letterer, Eric Allam)\n\n## [2.2.0](https://github.com/AFNetworking/AFNetworking/releases/tag/2.2.0) (2014-02-25)\n\n  * Add default initializer to make `AFHTTPRequestOperationManager`\nconsistent with `AFHTTPSessionManager` (Marcelo Fabri)\n\n  * Add documentation about `UIWebView` category and implementing\n`UIWebViewDelegate` (Mattt Thompson)\n\n  * Add missing `NSCoding` and `NSCopying` implementations for\n`AFJSONRequestSerializer` (Mattt Thompson)\n\n  * Add note about use of `-startMonitoring` in\n`AFNetworkReachabilityManager` (Mattt Thompson)\n\n  * Add setter for needsNewBodyStream block (Carmen Cerino)\n\n  * Add support for specifying a response serializer on a per-instance of\n`AFURLSessionManagerTaskDelegate` (Blake Watters)\n\n  * Add `AFHTTPRequestSerializer\n-requestWithMultipartFormRequest:writingStreamContentsToFile:completionHandler\n:` as a workaround for a bug in NSURLSession that removes the Content-Length\nheader from streamed requests (Mattt Thompson)\n\n  * Add `NSURLRequest` factory properties on `AFHTTPRequestSerializer` (Mattt\nThompson)\n\n  * Add `UIRefreshControl+AFNetworking` (Mattt Thompson)\n\n  * Change example project to enable certificate pinning (JP Simard)\n\n  * Change to allow self-signed certificates (Frederic Jacobs)\n\n  * Change to make `reachabilityManager` property readwrite (Mattt Thompson)\n\n  * Change to sort `NSSet` members during query string parameter\nserialization (Mattt Thompson)\n\n  * Change to use case sensitive compare when sorting keys in query string\nserialization (Mattt Thompson)\n\n  * Change to use xcpretty instead of xctool for automated testing (Kyle\nFuller, Marin Usalj, Carson McDonald)\n\n  * Change to use `@selector` values as keys for associated objects (Mattt\nThompson)\n\n  * Change `setImageWithURL:placeholder:`, et al. to only set placeholder\nimage if not `nil` (Alejandro Martinez)\n\n  * Fix auto property synthesis warnings (Oliver Letterer)\n\n  * Fix domain name validation for SSL certificates (Oliver Letterer)\n\n  * Fix issue with session task delegate KVO observation (Kyle Fuller)\n\n  * Fix placement of `baseURL` method declaration (Oliver Letterer)\n\n  * Fix podspec linting error (Ari Braginsky)\n\n  * Fix potential concurrency issues by adding lock around setting\n`isFinished` state in `AFURLConnectionOperation` (Mattt Thompson)\n\n  * Fix potential vulnerability caused by hard-coded multipart form data\nboundary (Mathias Bynens, Tom Van Goethem, Mattt Thompson)\n\n  * Fix protocol name in #pragma mark declaration (@sevntine)\n\n  * Fix regression causing inflated images to have incorrect orientation\n(Mattt Thompson)\n\n  * Fix to `AFURLSessionManager` `NSCoding` implementation, to accommodate\n`NSURLSessionConfiguration` no longer conforming to `NSCoding`.\n\n  * Fix Travis CI integration (Kyle Fuller, Marin Usalj, Carson McDonald)\n\n  * Fix various static analyzer warnings (Philippe Casgrain, Jim Young,\nSteven Fisher, Mattt Thompson)\n\n  * Fix with download progress calculation of completion units (Kyle Fuller)\n\n  * Fix Xcode 5.1 compiler warnings (Nick Banks)\n\n  * Fix `AFHTTPRequestOperationManager` to default\n`shouldUseCredentialStorage` to `YES`, as documented (Mattt Thompson)\n\n  * Remove Unused format property in `AFJSONRequestSerializer` (Mattt\nThompson)\n\n  * Remove unused `acceptablePathExtensions` class method in\n`AFJSONRequestSerializer` (Mattt Thompson)\n\n  * Update #ifdef declarations in UIKit categories to be simpler (Mattt\nThompson)\n\n  * Update podspec to includ social_media_url (Kyle Fuller)\n\n  * Update types for 64 bit architecture (Bruno Tortato Furtado, Mattt\nThompson)\n\n## [2.1.0](https://github.com/AFNetworking/AFNetworking/releases/tag/2.1.0) (2014-01-16)\n\n  * Add CONTRIBUTING (Kyle Fuller)\n\n  * Add domain name verification for SSL certificates (Oliver Letterer)\n\n  * Add leaf certificate checking (Alex Leverington, Carson McDonald, Mattt\nThompson)\n\n  * Add test case for stream failure handling (Kyle Fuller)\n\n  * Add underlying error properties to response serializers to forward errors\nto subsequent validation steps (Mattt Thompson)\n\n  * Add `AFImageCache` protocol, to allow for custom image caches to be\nspecified for `UIImageView` (Mattt Thompson)\n\n  * Add `error` out parameter for request serializer, deprecating existing\nrequest constructor methods (Adam Becevello)\n\n  * Change request serializer protocol to take id type for parameters (Mattt\nThompson)\n\n  * Change to add validation of download task responses (Mattt Thompson)\n\n  * Change to force upload progress, by using original request Content-Length\n(Mateusz Malczak)\n\n  * Change to use `NSDictionary` object literals for `NSError` `userInfo`\nconstruction (Mattt Thompson)\n\n  * Fix #pragma declaration to be NSURLConnectionDataDelegate, rather than\nNSURLConnectionDelegate (David Paschich)\n\n  * Fix a bug when appending a file part to multipart request from a URL\n(Kyle Fuller)\n\n  * Fix analyzer warning about weak receiver being set to nil, capture strong\nreference (Stewart Gleadow)\n\n  * Fix appending file part to multipart request to use suggested file name,\nrather than temporary one (Kyle Fuller)\n\n  * Fix availability macros for network activity indicator (Mattt Thompson)\n\n  * Fix crash in iOS 6.1 caused by KVO on `isCancelled` property of\n`AFURLConnectionOperation` (Sam Page)\n\n  * Fix dead store issues in `AFSecurityPolicy` (Andrew Hershberger)\n\n  * Fix incorrect documentation for `-HTTPRequestOperationWithRequest:...`\n(Kyle Fuller)\n\n  * Fix issue in reachability callbacks, where reachability managers created\nfor a particular domain would initially report no reachability (Mattt\nThompson)\n\n  * Fix logic for handling data task turning into download task (Kyle Fuller)\n\n  * Fix property list response serializer to handle 204 response (Kyle Fuller)\n\n  * Fix README multipart example (Johan Forssell)\n\n  * Fix to add check for non-nil delegate in\n`URLSession:didCompleteWithError:` (Kaom Te)\n\n  * Fix to dramatically improve creation of images in\n`AFInflatedImageFromResponseWithDataAtScale`, including handling of CMYK, 16\n/ 32 bpc images, and colorspace alpha settings (Robert Ryan)\n\n  * Fix Travis CI integration and unit testing (Kyle Fuller, Carson McDonald)\n\n  * Fix typo in comments (@palringo)\n\n  * Fix UIWebView category to use supplied success callback (Mattt Thompson)\n\n  * Fix various static analyzer warnings (Kyle Fuller, Jesse Collis, Mattt\nThompson)\n\n  * Fix `+batchOfRequestOperations:...` completion block to execute in\n`dispatch_async` (Mattt Thompson)\n\n  * Remove synchronous `SCNetworkReachabilityGetFlags` call when initializing\nmanagers, which had the potential to block in certain network conditions\n(Yury Korolev, Mattt Thompson)\n\n  * Remove unnecessary check for completionHandler in HTTP manager (Mattt\nThompson)\n\n  * Remove unused conditional clauses (Luka Bratos)\n\n  * Update documentation for `AFCompoundResponseSerializer` (Mattt Thompson)\n\n  * Update httpbin certificates (Carson McDonald)\n\n  * Update notification constant names to be consistent with `NSURLSession`\nterminology (Mattt Thompson)\n\n## [2.0.3](https://github.com/AFNetworking/AFNetworking/releases/tag/2.0.3) (2013-11-18)\n\n  * Fix a bug where `AFURLConnectionOperation -pause` did not correctly reset\nthe state of `AFURLConnectionOperation`, causing the Network Thread to enter\nan infinite loop (Erik Chen)\n\n  * Fix a bug where `AFURLConnectionOperation -cancel` does not set the\nappropriate error on the `NSOperation` (Erik Chen)\n\n  * Fix to post `AFNetworkingTaskDidFinishNotification` only on main queue\n(Jakub Hladik)\n\n  * Fix issue where the query string serialization block was not used (Kevin\nHarwood)\n\n  * Fix project file and repository directory items (Andrew Newdigate)\n\n  * Fix `NSURLSession` subspec (Mattt Thompson)\n\n  * Fix to session task delegate KVO by moving observer removal to\n`-didCompleteWithError:` (Mattt Thompson)\n\n  * Add AFNetworking 1.x behavior for image construction in inflation to\nensure correct orientation (Mattt Thompson)\n\n  * Add `NSParameterAssert` for internal task constructors in order to catch\ninvalid constructions early (Mattt Thompson)\n\n  * Update replacing `NSParameterAssert` with early `nil` return if session\nwas unable to create a task (Mattt Thompson)\n\n  * Update `AFHTTPRequestOperationManager` and `AFHTTPSessionManager` to use\nrelative `self class` to create class constructor instances (Bogdan\nPoplauschi)\n\n  * Update to break out of loop if output stream does not have space to write\nbytes (Mattt Thompson)\n\n  * Update documentation and README with various fixes (Max Goedjen, Mattt\nThompson)\n\n  * Remove unnecessary willChangeValueForKey and didChangeValueForKey method\ncalls (Mindaugas Vaičiūnas)\n\n  * Remove deletion of all task delegates in\n`URLSessionDidFinishEventsForBackgroundURLSession:` (Jeremy Mailen)\n\n  * Remove empty, unused `else` branch (Luka Bratos)\n\n## [2.0.2](https://github.com/AFNetworking/AFNetworking/releases/tag/2.0.2) (2013-10-29)\n\n  * Add `UIWebView\n -loadRequest:MIMEType:textEncodingName:progress:success:failure:` (Mattt\n Thompson)\n\n  * Fix iOS 6 compatibility in `AFHTTPSessionManager` &\n `UIProgressView+AFNetworking` (Olivier Halligon, Mattt Thompson)\n\n  * Fix issue writing partial data to output stream (Kyle Fuller)\n\n  * Fix behavior for `nil` response in request operations (Marcelo Fabri)\n\n  * Fix implementation of\n batchOfRequestOperations:progressBlock:completionBlock: for nil when passed\n empty operations parameter (Mattt Thompson)\n\n  * Update `AFHTTPSessionManager` to allow `-init` and `initWithConfig:` to\n work (Ben Scheirman)\n\n  * Update `AFRequestOperation` to default to `AFHTTPResponseSerializer` (Jiri\n Techet)\n\n  * Update `AFHTTPResponseSerializer` to remove check for nonzero responseData\n length (Mattt Thompson)\n\n  * Update `NSCoding` methods to use NSStringFromSelector(@selector()) pattern\n instead of `NSString` literals (Mattt Thompson)\n\n  * Update multipart form stream to set Content-Length after setting request\n stream (Mattt Thompson)\n\n  * Update documentation with outdated references to `AFHTTPSerializer` (Bruno\n Koga)\n\n  * Update documentation and README with various fixes (Jon Chambers, Mattt\n Thompson)\n\n  * Update files to remove executable privilege (Kyle Fuller)\n\n## [2.0.1](https://github.com/AFNetworking/AFNetworking/releases/tag/2.0.1) (2013-10-10)\n\n * Fix iOS 6 compatibility (Matt Baker, Mattt Thompson)\n\n * Fix example applications (Sam Soffes, Kyle Fuller)\n\n * Fix usage of `NSSearchPathForDirectoriesInDomains` in README (Leo Lou)\n\n * Fix names of exposed private methods `downloadProgress` and\n`uploadProgress` (Hermes Pique)\n\n * Fix initial upload/download task progress updates (Vlas Voloshin)\n\n * Fix podspec to include `AFNetworking.h` `#import` (@haikusw)\n\n * Fix request serializers to not override existing header field values with\ndefaults (Mattt Thompson)\n\n * Fix unused format string placeholder (Thorsten Lockert)\n\n * Fix `AFHTTPRequestOperation -initWithCoder:` to call `super` (Josh Avant)\n\n * Fix `UIProgressView` selector name (Allen Tu)\n\n * Fix `UIButton` response serializer (Sam Grossberg)\n\n * Fix `setPinnedCertificates:` and pinned public keys (Kyle Fuller)\n\n * Fix timing of batched operation completion block (Denys Telezhkin)\n\n * Fix `GCC_WARN_ABOUT_MISSING_NEWLINE` compiler warning (Chuck Shnider)\n\n * Fix a format string missing argument issue in tests (Kyle Fuller)\n\n * Fix location of certificate chain bundle location (Kyle Fuller)\n\n * Fix memory leaks in AFSecurityPolicyTests (Kyle Fuller)\n\n * Fix potential concurrency issues in `AFURLSessionManager` by adding locks\naround access to mutiple delegates dictionary (Mattt Thompson)\n\n * Fix unused variable compiler warnings by wrapping `OSStatus` and\n`NSCAssert` with NS_BLOCK_ASSERTIONS macro (Mattt Thompson)\n\n * Fix compound serializer error handling (Mattt Thompson)\n\n * Fix string encoding for responseString (Juan Enrique)\n\n * Fix `UIImageView -setBackgroundImageWithRequest:` (Taichiro Yoshida)\n\n * Fix regressions nested multipart parameters (Mattt Thompson)\n\n * Add `responseObject` property to `AFHTTPRequestOperation` (Mattt Thompson)\n\n * Add support for automatic network reachability monitoring for request\noperation and session managers (Mattt Thompson)\n\n * Update documentation and README with various corrections and fixes\n(@haikusw, Chris Hellmuth, Dave Caunt, Mattt Thompson)\n\n * Update default User-Agent such that only ASCII character set is used\n(Maximillian Dornseif)\n\n * Update SSL pinning mode to have default pinned certificates by default\n(Kevin Harwood)\n\n * Update `AFSecurityPolicy` to use default authentication handling unless a\ncredential exists for the server trust (Mattt Thompson)\n\n * Update Prefix.pch (Steven Fisher)\n\n * Update minimum iOS test target to iOS 6\n\n * Remove unused protection space block type (Kyle Fuller)\n\n * Remove unnecessary Podfile.lock (Kyle Fuller)\n\n## [2.0.0](https://github.com/AFNetworking/AFNetworking/releases/tag/2.0.0) (2013-09-27)\n\n* Initial 2.0.0 Release\n\n====================\n#AFNetworking 1.0 Change Log\n--\n\n## [1.3.4](https://github.com/AFNetworking/AFNetworking/releases/tag/1.3.4) (2014-04-15)\n\n * Fix `AFHTTPMultipartBodyStream` to randomly generate form boundary, to\nprevent attack based on a known value (Mathias Bynens, Tom Van Goethem, Mattt\nThompson)\n\n * Fix potential non-terminating loop in `connection:didReceiveData:` (Mattt\nThompson)\n\n * Fix SSL certificate validation to provide a human readable Warning when\nSSL Pinning fails (Maximillian Dornseif)\n\n * Fix SSL certificate validation  to assert that no impossible pinning\nconfiguration exists (Maximillian Dornseif)\n\n * Fix to check `CFStringTransform()` call for success before using result\n(Kevin Cassidy Jr)\n\n * Fix to prevent unused assertion results with macros (Indragie Karunaratne)\n\n * Fix to call call `SecTrustEvaluate` before calling\n`SecTrustGetCertificateCount` in SSL certificate validation (Josh Chung)\n\n * Fix to add explicit cast to `NSUInteger` in format string (Alexander\nKempgen)\n\n * Remove unused variable `kAFStreamToStreamBufferSize` (Alexander Kempgen)\n\n## [1.3.3](https://github.com/AFNetworking/AFNetworking/releases/tag/1.3.3) (2013-09-25)\n\n * Add stream error handling to `AFMultipartBodyStream` (Nicolas Bachschmidt,\nMattt Thompson)\n\n * Add stream error handling to `AFURLConnectionOperation\n-connection:didReceiveData:` (Ian Duggan, Mattt Thompson)\n\n * Fix parameter query string encoding of square brackets according to RFC\n3986 (Kra Larivain)\n\n * Fix AFHTTPBodyPart determination of end of input stream data (Brian Croom)\n\n * Fix unit test timeouts (Carson McDonald)\n\n * Fix truncated `User-Agent` header field when app contained non-ASCII\ncharacters (Diego Torres)\n\n * Fix outdated link in documentation (Jonas Schmid)\n\n * Fix `AFHTTPRequestOperation` `HTTPError` property to be thread-safe\n(Oliver Letterer, Mattt Thompson)\n\n * Fix API compatibility with iOS 5 (Blake Watters, Mattt Thompson)\n\n * Fix potential race condition in `AFURLConnectionOperation\n-cancelConnection` (@mm-jkolb, Mattt Thompson)\n\n * Remove implementation of `connection:needNewBodyStream:` delegate method\nin `AFURLConnectionOperation`, which fixes stream errors on authentication\nchallenges (Mattt Thompson)\n\n * Fix calculation of network reachability from flags (Tracy Pesin, Mattt\nThompson)\n\n * Update AFHTTPClient documentation to clarify scope of `parameterEncoding`\nproperty (Thomas Catterall)\n\n * Update `UIImageView` category to allow for nested calls to\n`setImageWithURLRequest:` (Philippe Converset)\n\n  * Change `UIImageView` category to accept invalid SSL certificates when\n`_AFNETWORKING_ALLOW_INVALID_SSL_CERTIFICATES_` is defined (Flávio Caetano)\n\n * Change to replace #pragma clang with cast (Cédric Luthi)\n\n## [1.3.2](https://github.com/AFNetworking/AFNetworking/releases/tag/1.3.2) (2013-08-08)\n\n * Add return status checks when building list of pinned public keys (Sylvain\nGuillope)\n\n * Add return status checks when handling connection authentication challenges\n(Sylvain Guillope)\n\n * Add tests around `AFHTTPClient initWithBaseURL:` (Kyle Fuller)\n\n * Change to remove all `_AFNETWORKING_PIN_SSL_CERTIFICATES_` conditional\ncompilation (Dustin Barker)\n\n * Change to allow fallback to generic image loading when PNG/JPEG data\nprovider methods fail (Darryl H. Thomas)\n\n * Change to only set placeholder image if not `nil` (Mattt Thompson)\n\n * Change to use `response.MIMEType` rather than (potentially nonexistent)\nContent-Type headers to determine image data provider (Mattt Thompson)\n\n * Fix image request test endpoint (Carson McDonald)\n\n * Fix compiler warning caused by `size_t` value defaulted to `NULL` (Darryl H.\nThomas)\n\n * Fix mutable headers property in `AFHTTPClient -copyWithZone:` (Oliver\nLetterer)\n\n * Fix documentation and asset references in README (Romain Pouclet, Peter\nGoldsmith)\n\n * Fix bug in examples always using `AFSSLPinningModeNone` (Dustin Barker)\n\n * Fix execution of tests under Travis (Blake Watters)\n\n * Fix static analyzer warnings about CFRelease calls to NULL pointer (Mattt\nThompson)\n\n * Change to return early in `AFGetMediaTypeAndSubtypeWithString` if string is\n`nil` (Mattt Thompson)\n\n * Change to opimize network thread creation (Mattt Thompson)\n\n## [1.3.1](https://github.com/AFNetworking/AFNetworking/releases/tag/1.3.1) (2013-06-18)\n\n * Add `automaticallyInflatesResponseImage` property to\n`AFImageRequestOperation`, which when enabled, offers significant performance\nimprovements for drawing images loaded through `UIImageView+AFNetworking` by\ninflating compressed image data in the background (Mattt Thompson, Peter\nSteinberger)\n\n * Add `NSParameterAssert` check for `nil` `urlRequest` parameter in\n`AFURLConnectionOperation` initializer (Kyle Fuller)\n\n * Fix reachability to detect the case where a connection is required but can\nbe automatically established (Joshua Vickery)\n\n * Fix to Test target Podfile (Kyle Fuller)\n\n## [1.3.0](https://github.com/AFNetworking/AFNetworking/releases/tag/1.3.0)  (2013-06-01)\n\n * Change in `AFURLConnectionOperation` `NSURLConnection` authentication\ndelegate methods and associated block setters. If\n`_AFNETWORKING_PIN_SSL_CERTIFICATES_` is defined,\n`-setWillSendRequestForAuthenticationChallengeBlock:` will be available, and\n`-connection:willSendRequestForAuthenticationChallenge:` will be implemented.\nOtherwise, `-setAuthenticationAgainstProtectionSpaceBlock:` &\n`-setAuthenticationChallengeBlock:` will be available, and\n`-connection:canAuthenticateAgainstProtectionSpace:` &\n`-connection:didReceiveAuthenticationChallenge:` will be implemented instead\n(Oliver Letterer)\n\n * Change in AFNetworking podspec to include Security framework (Kevin Harwood,\nOliver Letterer, Sam Soffes)\n\n * Change in AFHTTPClient to @throw exception when non-designated intializer is\nused (Kyle Fuller)\n\n * Change in behavior of connection:didReceiveAuthenticationChallenge: to not\nuse URL-encoded credentials, which should already have been applied (@xjdrew)\n\n * Change to set AFJSONRequestOperation error when unable to decode response\nstring (Chris Pickslay, Geoff Nix)\n\n * Change AFURLConnectionOperation to lazily initialize outputStream property\n(@fumoboy007)\n\n * Change instances of (CFStringRef)NSRunLoopCommonModes to\nkCFRunLoopCommonModes\n\n * Change #warning to #pragma message for dynamic framework linking warnings\n(@michael_r_may)\n\n * Add unit testing and continuous integration system (Blake Watters, Oliver\nLetterer, Kevin Harwood, Cédric Luthi, Adam Fraser, Carson McDonald, Mattt\nThompson)\n\n * Fix multipart input stream implementation (Blake Watters, OliverLetterer,\nAleksey Kononov, @mattyohe, @mythodeia, @JD-)\n\n * Fix implementation of authentication delegate methods (Oliver Letterer,\nKevin Harwood)\n\n * Fix implementation of AFSSLPinningModePublicKey on Mac OS X (Oliver Letterer)\n\n * Fix error caused by loading file:// requests with AFHTTPRequestOperation\nsubclasses (Dave Anderson, Oliver Letterer)\n\n * Fix threading-related crash in AFNetworkActivityIndicatorManager (Dave Keck)\n\n * Fix to suppress GNU expression and enum assignment warnings from Clang\n(Henrik Hartz)\n\n * Fix leak caused by CFStringConvertEncodingToIANACharSetName in AFHTTPClient\n-requestWithMethod:path:parameters: (Daniel Demiss)\n\n * Fix missing __bridge casts in AFHTTPClient (@apouche, Mattt Thompson)\n\n * Fix Objective-C++ compatibility (Audun Holm Ellertsen)\n\n * Fix to not escape tildes (@joein3d)\n\n * Fix warnings caused by unsynthesized properties (Jeff Hunter)\n\n * Fix to network reachability calls to provide correct  status on\ninitialization (@djmadcat, Mattt Thompson)\n\n * Fix to suppress warnings about implicit signedness conversion (Matt Rubin)\n\n * Fix AFJSONRequestOperation -responseJSON failing cases (Andrew Vyazovoy,\nMattt Thompson)\n\n * Fix use of object subscripting to avoid incompatibility with iOS < 6 and OS\nX < 10.8 (Paul Melnikow)\n\n * Various fixes to reverted multipart stream provider implementation (Yaron\nInger, Alex Burgel)\n\n## [1.2.1](https://github.com/AFNetworking/AFNetworking/releases/tag/1.2.1) (2013-04-18)\n\n * Add `allowsInvalidSSLCertificate` property to `AFURLConnectionOperation` and\n`AFHTTPClient`, replacing `_AFNETWORKING_ALLOW_INVALID_SSL_CERTIFICATES_` macro\n(Kevin Harwood)\n\n * Add SSL pinning mode to example project (Kevin Harwood)\n\n * Add name to AFNetworking network thread (Peter Steinberger)\n\n * Change pinned certificates to trust all derived certificates (Oliver\nLetterer)\n\n * Fix documentation about SSL pinning (Kevin Harwood, Mattt Thompson)\n\n * Fix certain enumerated loops to use fast enumeration, resulting in better\nperformance (Oliver Letterer)\n\n * Fix macro to work correctly under Mac OS X 10.7 and iOS 4 SDK (Paul Melnikow)\n\n * Fix documentation, removing unsupported `@discussion` tags (Michele Titolo)\n\n * Fix `SecTrustCreateWithCertificates` expecting an array as first argument\n(Oliver Letterer)\n\n * Fix to use `errSecSuccess` instead of `noErr` for Security frameworks\nOSStatus (Oliver Letterer)\n\n * Fix `AFImageRequestOperation` to use `[self alloc]` instead of explicit\nclass, which allows for subclassing (James Clarke)\n\n * Fix for `numberOfFinishedOperations` calculations (Rune Madsen)\n\n * Fix calculation of data length in `-connection:didReceiveData:`\n(Jean-Francois Morin)\n\n * Fix to encode JSON only with UTF-8, following recommendation of\n`NSJSONSerialiation` (Sebastian Utz)\n\n## [1.2.0](https://github.com/AFNetworking/AFNetworking/releases/tag/1.2.0) (2013-03-24)\n\n * Add `SSLPinningMode` property to `AFHTTPClient` (Oliver Letterer, Kevin\nHarwood, Adam Becevello, Dustin Barker, Mattt Thompson)\n\n * Add single quote (\"'\"), comma (\",\"), and asterix (\"*\") to escaped URL\nencoding characters (Eric Florenzano, Marc Nijdam, Garrett Murray)\n\n * Add `credential` property to `AFURLConnectionOperation` (Mattt Thompson)\n\n * Add `-setDefaultCredential:` to `AFHTTPClient`\n\n * Add `shouldUseCredentialStorage` property to `AFURLConnectionOperation`\n(Mattt Thompson)\n\n * Add support for repeated key value pairs in `AFHTTPClient` URL query string\n(Nick Dawson)\n\n * Add `AFMultipartFormData -\nappendPartWithFileURL:name:fileName:mimeType:error` (Daniel Rodríguez Troitiño)\n\n * Add `AFMultipartFormData -\nappendPartWithInputStream:name:fileName:mimeType:` (@joein3d)\n\n * Change SSL pinning to be runtime property on `AFURLConnectionOperation`\nrather than defined by macro (Oliver Letterer)\n\n * Change `AFMultipartBodyStream` to `AFMultipartBodyStreamProvider`, vending\none side of a bound CFStream pair rather than subclassing `NSInputStream` (Mike\nAsh)\n\n * Change default `Accept-Language` header in `AFHTTPClient` (@therigu, Mattt\nThompson)\n\n * Change `AFHTTPClient` operation cancellation to be based on request URL path\nrather than absolute URL string (Mattt Thompson)\n\n * Change request operation subclass processing queues to use\n`DISPATCH_QUEUE_CONCURRENT` (Mattt Thompson)\n\n * Change `UIImageView+AFNetworking` to resolve asymmetry in cached image case\nbetween success block provided and not provided (@Eveets, Mattt Thompson)\n\n * Change `UIImageView+AFNetworking` to compare `NSURLRequest` instead of\n`NSURL` to determine if previous request was equivalent (Cédric Luthi)\n\n * Change `UIImageView+AFNetworking` to only set image if non-`nil` (Sean\nKovacs)\n\n * Change indentation settings to four spaces at the project level (Cédric\nLuthi)\n\n * Change `AFNetworkActivityIndicatorManager` to only update if requests have a\nnon-`nil` URL (Cédric Luthi)\n\n * Change `UIImageView+AFNetworking` to not do `setHTTPShouldHandleCookies`\n(Konstantinos Vaggelakos)\n\n * Fix request stream exhaustion error on authentication challenges (Alex\nBurgel)\n\n * Fix implementation to use `NSURL` methods instead of `CFURL` functions where\napplicable (Cédric Luthi)\n\n * Fix race condition in `UIImageView+AFNetworking` (Peyman)\n\n * Fix `responseJSON`, `responseString`, and `responseStringEncoding` to be\nthreadsafe (Jon Parise, Mattt Thompson)\n\n * Fix `AFContentTypeForPathExtension` to ensure non-`NULL` content return\nvalue (Zach Waugh)\n\n * Fix documentation for `appendPartWithFileURL:name:error:`\n (Daniel Rodríguez Troitiño)\n\n * Fix request operation subclass processing queues to initialize with\n`dispatch_once` (Sasmito Adibowo)\n\n * Fix posting of `AFNetworkingOperationDidStartNotification` and\n`AFNetworkingOperationDidFinishNotification` to avoid crashes when logging in\nresponse to notifications (Blake Watters)\n\n * Fix ordering of registered operation consultation in `AFHTTPClient` (Joel\nParsons)\n\n * Fix warning: multiple methods named 'postNotificationName:object:' found\n[-Wstrict-selector-match] (Oliver Jones)\n\n * Fix warning: multiple methods named 'objectForKey:' found\n[-Wstrict-selector-match] (Oliver Jones)\n\n * Fix warning: weak receiver may be unpredictably set to nil\n[-Wreceiver-is-weak] (Oliver Jones)\n\n * Fix missing #pragma clang diagnostic pop (Steven Fisher)\n\n## [1.1.0](https://github.com/AFNetworking/AFNetworking/releases/tag/1.1.0) (2012-12-27)\n\n * Add optional SSL certificate pinning with `#define\n_AFNETWORKING_PIN_SSL_CERTIFICATES_` (Dustin Barker)\n\n * Add `responseStringEncoding` property to `AFURLConnectionOperation` (Mattt\nThompson)\n\n * Add `userInfo` property to `AFURLConnectionOperation` (Mattt Thompson,\nSteven Fisher)\n\n * Change behavior to cause a failure when an operation is cancelled (Daniel\nTull)\n\n * Change return type of class constructors to `instancetype` (@guykogus)\n\n * Change notifications to always being posted on an asynchronously-dispatched\nblock run on the main queue (Evadne Wu, Mattt Thompson)\n\n * Change from NSLocalizedString to NSLocalizedStringFromTable with\nAFNetworking.strings table for localized strings (Cédric Luthi)\n\n * Change `-appendPartWithHeaders:body:` to add assertion handler for existence\nof body data parameter (Jonathan Beilin)\n\n * Change `AFHTTPRequestOperation -responseString` to follow guidelines from\nRFC 2616 regarding the use of string encoding when none is specified in the\nresponse (Jorge Bernal)\n\n * Change AFHTTPClient parameter serialization dictionary keys with\n`caseInsensitiveCompare:` to ensure\n deterministic ordering of query string parameters, which may otherwise\n cause ambiguous representations of nested parameters (James Coleman,\n Mattt Thompson)\n\n * Fix -Wstrict-selector-match warnings raised by Xcode 4.6DP3 (Jesse Collis,\nCédric Luthi)\n\n * Fix NSJSONSerialization crash with Unicode character escapes in JSON\nresponse (Mathijs Kadijk)\n\n * Fix issue with early return in -startMonitoringNetworkReachability if\nnetwork reachability object could not be created (i.e. invalid hostnames)\n(Basil Shkara)\n\n * Fix retain cycles in AFImageRequestOperation.m and AFHTTPClient.m caused by\nstrong references within blocks (Nick Forge)\n\n * Fix issue caused by Rails behavior of returning a single space in head :ok\nresponses, which is interpreted as invalid (Sebastian Ludwig)\n\n * Fix issue in streaming multipart upload, where final encapsulation boundary\nwould not be appended if it was larger than the available buffer, causing a\npotential timeout (Tomohisa Takaoka, David Kasper)\n\n * Fix memory leak of network reachability callback block (Mattt Thompson)\n\n * Fix `-initWithCoder:` for `AFURLConnectionOperation` and `AFHTTPClient` to\ncast scalar types (Mattt Thompson)\n\n * Fix bug in `-enqueueBatchOfHTTPRequestOperations:...` to by using\n`addOperations:waitUntilFinished:` instead of adding each operation\nindividually. (Mattt Thompson)\n\n * Change `#warning` messages of checks for `CoreServices` and\n`MobileCoreServices` to message according to the build target platform (Mattt\nThompson)\n\n * Change `AFQueryStringFromParametersWithEncoding` to create keys string\nrepresentations using the description method as specified in documentation\n(Cédric Luthi)\n\n * Fix __unused keywords for better Xcode indexing (Christian Rasmussen)\n\n * Fix warning: unused parameter 'x' [-Werror,-Wunused-parameter] (Oliver Jones)\n\n * Fix warning: property is assumed atomic by default\n[-Werror,-Wimplicit-atomic-properties] (Oliver Jones)\n\n * Fix warning: weak receiver may be unpredictably null in ARC mode\n[-Werror,-Wreceiver-is-weak] (Oliver Jones)\n\n * Fix warning: multiple methods named 'selector' found\n[-Werror,-Wstrict-selector-match] (Oliver Jones)\n\n * Fix warning: 'macro' is not defined, evaluates to 0 (Oliver Jones)\n\n * Fix warning: atomic by default property 'X' has a user (Oliver Jones)defined\ngetter (property should be marked 'atomic' if this is intended) [-Werror,\n-Wcustom-atomic-properties] (Oliver Jones)\n\n * Fix warning: 'response' was marked unused but was used\n[-Werror,-Wused-but-marked-unused] (Oliver Jones)\n\n * Fix warning: enumeration value 'AFFinalBoundaryPhase' not explicitly handled\nin switch [-Werror,-Wswitch-enum] (Oliver Jones)\n\n## [1.0.1](https://github.com/AFNetworking/AFNetworking/releases/tag/1.0.1) / 2012-11-01\n\n * Fix error in multipart upload streaming, where byte range at boundaries\nwas not correctly calculated (Stan Chang Khin Boon)\n\n * If a success block is specified to `UIImageView -setImageWithURLRequest:\nplaceholderImage:success:failure`:, it is now the responsibility of the\nblock to set the image of the image view (Mattt Thompson)\n\n * Add `JSONReadingOptions` property to `AFJSONRequestOperation` (Jeremy\n Foo, Mattt Thompson)\n\n * Using __weak self / __strong self pattern to break retain cycles in\n background task and network reachability blocks (Jerry Beers, Dan Weeks)\n\n * Fix parameter encoding to leave period (`.`) unescaped (Diego Torres)\n\n * Fixing last file component in multipart form part creation (Sylver\n Bruneau)\n\n * Remove executable permission on AFHTTPClient source files (Andrew\n Sardone)\n\n * Fix warning (error with -Werror) on implicit 64 to 32 conversion (Dan\n Weeks)\n\n * Add GitHub's .gitignore file (Nate Stedman)\n\n * Updates to README (@ckmcc)\n\n## [1.0](https://github.com/AFNetworking/AFNetworking/releases/tag/1.0) / 2012-10-15\n\n * AFNetworking now requires iOS 5 / Mac OSX 10.7 or higher (Mattt Thompson)\n\n * AFNetworking now uses Automatic Reference Counting (ARC) (Mattt Thompson)\n\n * AFNetworking raises compiler warnings for missing features when\nSystemConfiguration or  CoreServices / MobileCoreServices frameworks are not\nincluded in the project and imported in the precompiled headers (Mattt\nThompson)\n\n * AFNetworking now raises compiler error when not compiled with ARC (Steven\nFisher)\n\n * Add `NSCoding` and `NSCopying` protocol conformance to\n`AFURLConnectionOperation` and `AFHTTPClient` (Mattt Thompson)\n\n * Add substantial improvements HTTP multipart streaming support, having\nfiles streamed directly from disk and read sequentially from a custom input\nstream (Max Lansing, Stan Chang Khin Boon, Mattt Thompson)\n\n * Add `AFMultipartFormData -throttleBandwidthWithPacketSize:delay:` as\nworkaround to issues when uploading over 3G (Mattt Thompson)\n\n * Add request and response to `userInfo` of errors returned from failing\n`AFHTTPRequestOperation` (Mattt Thompson)\n\n * Add `userInfo` dictionary with current status in reachability changes\n(Mattt Thompson)\n\n * Add `Accept` header for image requests in `UIImageView` category (Bratley\nLower)\n\n * Add explicit declaration of `NSURLConnection` delegate methods so that\nthey can be overridden in subclasses (Mattt Thompson, Evan Grim)\n\n * Add parameter validation to match conditions specified in documentation\n(Jason Brennan, Mattt Thompson)\n\n * Add import to `UIKit` to avoid build errors from `UIDevice` references in\n`User-Agent` default header (Blake Watters)\n\n * Remove `AFJSONUtilities` in favor of `NSJSONSerialization` (Mattt Thompson)\n\n * Remove `extern` declaration of `AFURLEncodedStringFromStringWithEncoding`\nfunction (`CFURLCreateStringByAddingPercentEscapes` should be used instead)\n(Mattt Thompson)\n\n * Remove `setHTTPShouldHandleCookies:NO` from `AFHTTPClient` (@phamsonha,\nMattt Thompson)\n\n * Remove `dispatch_retain` / `dispatch_release` with ARC in iOS 6 (Benoit\nBourdon)\n\n * Fix threading issue with `AFNetworkActivityIndicatorManager` (Eric Patey)\n\n * Fix issue where `AFNetworkActivityIndicatorManager` count could become\nnegative (@ap4y)\n\n * Fix properties to explicitly set options to suppress warnings (Wen-Hao\nLue, Mattt Thompson)\n\n * Fix compiler warning caused by mismatched types in upload / download\nprogress blocks (Gareth du Plooy, tomas.a)\n\n * Fix weak / strong variable relationships in `completionBlock` (Peter\nSteinberger)\n\n * Fix string formatting syntax warnings caused by type mismatch (David\nKeegan, Steven Fisher, George Cox)\n\n * Fix minor potential security vulnerability by explicitly using string\nformat in NSError localizedDescription value in userInfo (Steven Fisher)\n\n * Fix `AFURLConnectionOperation -pause` by adding state checks to prevent\nlikely memory issues when resuming (Mattt Thompson)\n\n * Fix warning caused by miscast of type when\n`CLANG_WARN_IMPLICIT_SIGN_CONVERSION` is set (Steven Fisher)\n\n * Fix incomplete implementation warning in example code (Steven Fisher)\n\n * Fix warning caused by using `==` comparator on floats (Steven Fisher)\n\n * Fix iOS 4 bug where file URLs return `NSURLResponse` rather than\n`NSHTTPURLResponse` objects (Leo Lobato)\n\n * Fix calculation of finished operations in batch operation progress\ncallback (Mattt Thompson)\n\n * Fix documentation typos (Steven Fisher, Matthias Wessendorf,\njorge@miv.uk.com)\n\n * Fix `hasAcceptableStatusCode` to return true after a network failure (Tony\nMillion)\n\n * Fix warning about missing prototype for private static method (Stephan\nDiederich)\n\n * Fix issue where `nil` content type resulted in unacceptable content type\n(Mattt Thompson)\n\n * Fix bug related to setup and scheduling of output stream (Stephen Tramer)\n\n * Fix AFContentTypesFromHTTPHeader to correctly handle comma-delimited\ncontent types (Peyman, Mattt Thompson, @jsm174)\n\n * Fix crash caused by `_networkReachability` not being set to `NULL` after\nreleasing (Blake Watters)\n\n * Fix Podspec to correctly import required headers and use ARC (Eloy Durán,\nBlake Watters)\n\n * Fix query string parameter escaping to leave square brackets unescaped\n(Mattt Thompson)\n\n * Fix query string parameter encoding of `NSNull` values (Daniel Rinser)\n\n * Fix error caused by referencing `__IPHONE_OS_VERSION_MIN_REQUIRED` without\nimporting `Availability.h` (Blake Watters)\n\n * Update example to use App.net API, as Twitter shut off its unauthorized\naccess to the public timeline (Mattt Thompson)\n\n * Update `AFURLConnectionOperation` to replace `NSAutoReleasePool` with\n`@autoreleasepool` (Mattt Thompson)\n\n * Update `AFHTTPClient` operation queue to specify\n`NSOperationQueueDefaultMaxConcurrentOperationCount` rather than\npreviously-defined constant (Mattt Thompson)\n\n * Update `AFHTTPClient -initWithBaseURL` to automatically append trailing\nslash, so as to fix common issue where default path is not respected without\ntrailing slash (Steven Fisher)\n\n * Update default `AFHTTPClient` `User-Agent` header strings (Mattt Thompson,\nSteven Fisher)\n\n * Update icons for iOS example application (Mattt Thompson)\n\n * Update `numberOfCompletedOperations` variable in progress block to be\nrenamed to `numberOfFinishedOperations` (Mattt Thompson)\n\n\n## [0.10.0](https://github.com/AFNetworking/AFNetworking/releases/tag/0.10.0) / 2012-06-26\n\n * Add Twitter Mac Example application (Mattt Thompson)\n\n * Add note in README about how to set `-fno-objc-arc` flag for multiple files\n at once (Pål Brattberg)\n\n * Add note in README about 64-bit architecture requirement (@rmuginov, Mattt\n Thompson)\n\n * Add note in `AFNetworkActivityIndicatorManager` about not having to manually\n manage animation state (Mattt Thompson)\n\n * Add missing block parameter name for `imageProcessingBlock` (Francois\n Lambert)\n\n * Add NextiveJson to list of supported JSON libraries (Mattt Thompson)\n\n * Restore iOS 4.0 compatibility with `addAcceptableStatusCodes:` and\n `addAcceptableContentTypes:` (Zachary Waldowski)\n\n * Update `AFHTTPClient` to use HTTP pipelining for `GET` and `HEAD` requests by\n default (Mattt Thompson)\n\n * Remove @private ivar declaration in headers (Peter Steinberger, Mattt\n Thompson)\n\n * Fix potential premature deallocation of _skippedCharacterSet (Tom Wanielista,\n Mattt Thompson)\n\n * Fix potential issue in `setOutputStream` by closing any existing\n `outputStream` (Mattt Thompson)\n\n * Fix filename in AFHTTPClient header (Steven Fisher)\n\n * Fix documentation for UIImageView+AFNetworking (Mattt Thompson)\n\n * Fix HTTP multipart form format, which caused issues with Tornado web server\n (Matt Chen)\n\n * Fix `AFHTTPClient` to not append empty data into multipart form data (Jon\n Parise)\n\n * Fix URL encoding normalization to not conditionally escape percent-encoded\n strings (João Prado Maia, Kendall Helmstetter Gelner, @cysp, Mattt Thompson)\n\n * Fix `AFHTTPClient` documentation reference of\n `HTTPRequestOperationWithRequest:success:failure` (Shane Vitarana)\n\n * Add `AFURLRequestOperation -setRedirectResponseBlock:` (Kevin Harwood)\n\n * Fix `AFURLConnectionOperation` compilation error by conditionally importing\n UIKit framework (Steven Fisher)\n\n * Fix issue where image processing block is not called correctly with success\n block in `AFImageRequestOperation` (Sergey Gavrilyuk)\n\n * Fix leaked dispatch group in batch operations (@andyegorov, Mattt Thompson)\n\n * Fix support for non-LLVM compilers in `AFNetworkActivityIndicatorManager`\n (Abraham Vegh, Bill Williams, Mattt Thompson)\n\n * Fix AFHTTPClient to not add unnecessary data when constructing multipart form\n request with nil parameters (Taeho Kim)\n\n## [1.0RC1](https://github.com/AFNetworking/AFNetworking/releases/tag/1.0RC1) / 2012-04-25\n\n * Add `AFHTTPRequestOperation +addAcceptableStatusCodes /\n+addAcceptableContentTypes` to dynamically add acceptable status codes and\ncontent types on the class level (Mattt Thompson)\n\n * Add support for compound and complex `Accept` headers that include multiple\ncontent types and / or specify a particular character encoding (Mattt Thompson)\n\n * Add `AFURLConnectionOperation\n-setShouldExecuteAsBackgroundTaskWithExpirationHandler:` to have operations\nfinish once an app becomes inactive (Mattt Thompson)\n\n * Add support for pausing / resuming request operations (Peter Steinberger,\nMattt Thompson)\n\n * Improve network reachability functionality in `AFHTTPClient`, including a\ndistinction between WWan and WiFi reachability (Kevin Harwood, Mattt Thompson)\n\n\n## [0.9.2](https://github.com/AFNetworking/AFNetworking/releases/tag/0.9.2) / 2012-04-25\n\n * Add thread safety to `AFNetworkActivityIndicator` (Peter Steinberger, Mattt\nThompson)\n\n * Document requirement of available JSON libraries for decoding responses in\n`AFJSONRequestOperation` and parameter encoding in `AFHTTPClient` (Mattt\nThompson)\n\n * Fix `AFHTTPClient` parameter encoding (Mattt Thompson)\n\n * Fix `AFJSONEncode` and `AFJSONDecode` to use `SBJsonWriter` and\n`SBJsonParser` instead of `NSObject+SBJson` (Oliver Eikemeier)\n\n * Fix bug where `AFJSONDecode` does not return errors (Alex Michaud)\n\n * Fix compiler warning for undeclared\n`AFQueryStringComponentFromKeyAndValueWithEncoding` function (Mattt Thompson)\n\n * Fix cache policy for URL requests (Peter Steinberger)\n\n * Fix race condition bug in `UIImageView+AFNetworking` caused by incorrectly\nnil-ing request operations (John Wu)\n\n * Fix reload button in Twitter example (Peter Steinberger)\n\n * Improve batched operation by deferring execution of batch completion block\nuntil all component request completion blocks have finished (Patrick Hernandez,\nKevin Harwood, Mattt Thompson)\n\n * Improve performance of image request decoding by dispatching to background\n queue (Mattt Thompson)\n\n * Revert `AFImageCache` to cache image objects rather than `NSPurgeableData`\n(Tony Million, Peter Steinberger, Mattt Thompson)\n\n * Remove unnecessary KVO `willChangeValueForKey:` / `didChangeValueForKey:`\ncalls (Peter Steinberger)\n\n * Remove unnecessary @private ivar declarations in headers (Peter Steinberger,\nMattt Thompson)\n\n * Remove @try-@catch block wrapping network thread entry point (Charles T. Ahn)\n\n\n## [0.9.1](https://github.com/AFNetworking/AFNetworking/releases/tag/0.9.1) / 2012-03-19\n\n * Create Twitter example application (Mattt Thompson)\n\n * Add support for nested array and dictionary parameters for query string and\nform-encoded requests (Mathieu Hausherr, Josh Chung, Mattt Thompson)\n\n * Add `AFURLConnectionOperation -setCacheResponseBlock:`, which allows the\nbehavior of the `NSURLConnectionDelegate` method\n`-connection:willCacheResponse:` to be overridden without subclassing (Mattt\nThompson)\n\n * Add `_AFNETWORKING_ALLOW_INVALID_SSL_CERTIFICATES_` macros for\nNSURLConnection authentication delegate methods (Mattt Thompson)\n\n * Add properties for custom success / failure callback queues (Peter\nSteinberger)\n\n * Add notifications for network reachability changes to `AFHTTPClient` (Mattt\nThompson)\n\n * Add `AFHTTPClient -patchPath:` convenience method (Mattt Thompson)\n\n * Add support for NextiveJson (Adrian Kosmaczewski)\n\n * Improve network reachability checks (C. Bess)\n\n * Improve NSIndexSet formatting in error strings (Jon Parise)\n\n * Document crashing behavior in iOS 4 loading a file:// URL (Mattt Thompson)\n\n * Fix crash caused by `AFHTTPClient -cancelAllHTTPOperationsWithMethod:` not\nchecking operation to be instance of `AFHTTPRequestOperation` (Mattt Thompson)\n\n * Fix crash caused by passing `nil` URL in requests (Sam Soffes)\n\n * Fix errors caused by connection property not being nil'd out after an\noperation finishes (Kevin Harwood, @zdzisiekpu)\n\n * Fix crash caused by passing `NULL` error pointer when setting `NSInvocation`\nin `AFJSONEncode` and `AFJSONDecode` (Tyler Stromberg)\n\n * Fix batch operation completion block returning on background thread (Patrick\nHernandez)\n\n * Fix documentation for UIImageView+AFNetworking (Dominic Dagradi)\n\n * Fix race condition caused by `AFURLConnectionOperation` being cancelled on\nmain thread, rather than network thread (Erik Olsson)\n\n * Fix `AFURLEncodedStringFromStringWithEncoding` to correctly handle cases\nwhere % is used as a literal rather than as part of a percent escape code\n(Mattt Thompson)\n\n * Fix missing comma in `+defaultAcceptableContentTypes` for\n`AFImageRequestOperation` (Michael Schneider)\n\n\n## [0.9.0](https://github.com/AFNetworking/AFNetworking/releases/tag/0.9.0) / 2012-01-23\n\n * Add thread-safe behavior to `AFURLConnectionOperation` (Mattt Thompson)\n\n * Add batching of operations for `AFHTTPClient` (Mattt Thompson)\n\n * Add authentication challenge callback block to override default\n implementation of `connection:didReceiveAuthenticationChallenge:` in\n `AFURLConnectionOperation` (Mattt Thompson)\n\n * Add `_AFNETWORKING_PREFER_NSJSONSERIALIZATION_`, which, when defined,\n short-circuits the standard preference ordering used in `AFJSONEncode` and\n `AFJSONDecode` to use `NSJSONSerialization` when available, falling back on\n third-party-libraries. (Mattt Thompson, Shane Vitarana)\n\n * Add custom `description` for `AFURLConnectionOperation` and `AFHTTPClient`\n (Mattt Thompson)\n\n * Add `text/javascript` to default acceptable content types for\n `AFJSONRequestOperation` (Jake Boxer)\n\n * Add `imageScale` property to change resolution of images constructed from\n cached data (Štěpán Petrů)\n\n * Add note about third party JSON libraries in README (David Keegan)\n\n * `AFQueryStringFromParametersWithEncoding` formats `NSArray` values in the\n form `key[]=value1&key[]=value2` instead of `key=(value1,value2)` (Dan Thorpe)\n\n * `AFImageRequestOperation -responseImage` on OS X uses `NSBitmapImageRep` to\n determine the correct pixel dimensions of the image (David Keegan)\n\n * `AFURLConnectionOperation` `connection` has memory management policy `assign`\n to avoid retain cycles caused by `NSURLConnection` retaining its delegate\n (Mattt Thompson)\n\n * `AFURLConnectionOperation` calls super implementation for `-isReady`,\n following the guidelines for `NSOperation` subclasses (Mattt Thompson)\n\n * `UIImageView -setImageWithURL:` and related methods call success callback\n after setting image (Cameron Boehmer)\n\n * Cancel request if an authentication challenge has no suitable credentials in\n `AFURLConnectionOperation -connection:didReceiveAuthenticationChallenge:`\n (Jorge Bernal)\n\n * Remove exception from\n `multipartFormRequestWithMethod:path:parameters:constructing BodyWithBlock:`\n raised when certain HTTP methods are used. (Mattt Thompson)\n\n * Remove `AFImageCache` from public API, moving it into private implementation\n of `UIImageView+AFNetworking` (Mattt Thompson)\n\n * Mac example application makes better use of AppKit technologies and\n conventions (Mattt Thompson)\n\n * Fix issue with multipart form boundaries in `AFHTTPClient\n -multipartFormRequestWithMethod:path:parameters:constructing BodyWithBlock:`\n (Ray Morgan, Mattt Thompson, Sam Soffes)\n\n * Fix \"File Upload with Progress Callback\" code snippet in README (Larry\nLegend)\n\n * Fix to SBJSON invocations in `AFJSONEncode` and `AFJSONDecode` (Matthias\n Tretter, James Frye)\n\n * Fix documentation for `AFHTTPClient requestWithMethod:path:parameters:`\n (Michael Parker)\n\n * Fix `Content-Disposition` headers used for multipart form construction\n (Michael Parker)\n\n * Add network reachability status change callback property to `AFHTTPClient`.\n (Mattt Thompson, Kevin Harwood)\n\n * Fix exception handling in `AFJSONEncode` and `AFJSONDecode` (David Keegan)\n\n * Fix `NSData` initialization with string in `AFBase64EncodedStringFromString`\n (Adam Ernst, Mattt Thompson)\n\n * Fix error check in `appendPartWithFileURL:name:error:` (Warren Moore,\n Baldoph, Mattt Thompson)\n\n * Fix compiler warnings for certain configurations (Charlie Williams)\n\n * Fix bug caused by passing zero-length `responseData` to response object\n initializers (Mattt Thompson, Serge Paquet)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.08,
          "content": "# Contributing Guidelines\n\nThis document contains information and guidelines about contributing to this project.\nPlease read it before you start participating.\n\n**Topics**\n\n* [Asking Questions](#asking-questions)\n* [Reporting Security Issues](#reporting-security-issues)\n* [Reporting Issues](#reporting-other-issues)\n* [Submitting Pull Requests](#submitting-pull-requests)\n* [Developers Certificate of Origin](#developers-certificate-of-origin)\n* [Code of Conduct](#code-of-conduct)\n\n## Asking Questions\n\nWe don't use GitHub as a support forum.\nFor any usage questions that are not specific to the project itself,\nplease ask on [Stack Overflow](https://stackoverflow.com) instead.\nBy doing so, you'll be more likely to quickly solve your problem,\nand you'll allow anyone else with the same question to find the answer.\nThis also allows maintainers to focus on improving the project for others.\n\n## Reporting Security Issues\n\nThe Alamofire Software Foundation takes security seriously.\nIf you discover a security issue, please bring it to our attention right away!\n\nPlease **DO NOT** file a public issue,\ninstead send your report privately to <security@alamofire.org>.\nThis will help ensure that any vulnerabilities that _are_ found\ncan be [disclosed responsibly](http://en.wikipedia.org/wiki/Responsible_disclosure)\nto any affected parties.\n\n## Reporting Other Issues\n\nA great way to contribute to the project\nis to send a detailed issue when you encounter an problem.\nWe always appreciate a well-written, thorough bug report.\n\nCheck that the project issues database\ndoesn't already include that problem or suggestion before submitting an issue.\nIf you find a match, add a quick \"+1\" or \"I have this problem too.\"\nDoing this helps prioritize the most common problems and requests.\n\nWhen reporting issues, please include the following:\n\n* The version of Xcode you're using\n* The version of iOS or OS X you're targeting\n* The full output of any stack trace or compiler error\n* A code snippet that reproduces the described behavior, if applicable\n* Any other details that would be useful in understanding the problem\n\nThis information will help us review and fix your issue faster.\n\n## Submitting Pull Requests\n\nPull requests are welcome, and greatly encouraged. When submitting a pull request, please create proper test cases demonstrating the issue to be fixed or the new feature.\n\n## Developer's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n- (a) The contribution was created in whole or in part by me and I\n      have the right to submit it under the open source license\n      indicated in the file; or\n\n- (b) The contribution is based upon previous work that, to the best\n      of my knowledge, is covered under an appropriate open source\n      license and I have the right under that license to submit that\n      work with modifications, whether created in whole or in part\n      by me, under the same open source license (unless I am\n      permitted to submit under a different license), as indicated\n      in the file; or\n\n- (c) The contribution was provided directly to me by some other\n      person who certified (a), (b) or (c) and I have not modified\n      it.\n\n- (d) I understand and agree that this project and the contribution\n      are public and that a record of the contribution (including all\n      personal information I submit with it, including my sign-off) is\n      maintained indefinitely and may be redistributed consistent with\n      this project or the open source license(s) involved.\n\n## Code of Conduct\n\nThe Code of Conduct governs how we behave in public or in private\nwhenever the project will be judged by our actions.\nWe expect it to be honored by everyone who contributes to this project.\n\nSee [CONDUCT.md](https://github.com/Alamofire/Foundation/blob/master/CONDUCT.md) for details.\n\n---\n\n*Some of the ideas and wording for the statements above were based on work by the [Docker](https://github.com/docker/docker/blob/master/CONTRIBUTING.md) and [Linux](http://elinux.org/Developer_Certificate_Of_Origin) communities. We commend them for their efforts to facilitate collaboration in their projects.*\n"
        },
        {
          "name": "CONTRIBUTING_CH.md",
          "type": "blob",
          "size": 3.64,
          "content": "# 贡献指南\n本文档包含有关为此项目做出贡献的信息和指南。\n请在开始参加之前阅读。\n\n**主题**\n\n* [提问](#提问)\n* [报告安全问题](#报告安全问题)\n* [报告其他问题](#报告其他问题)\n* [提交拉取请求](#提交拉取请求)\n* [开发人员原产地证书](#开发人员原产地证书-1.1)\n* [行为守则](#行为守则)\n\n## 提问\n\n我们不使用GitHub的论坛发表问题\n对于任何非特定于项目本身的使用问题，\n请直接在[Stack Overflow](https://stackoverflow.com)上询问。\n通过此方法，你可以快速解决您的问题，\n并且任何有相同问题的人可以找到答案。\n这也使维护人员能够专注于为其他人改进项目。\n\n## 报告安全问题\n\nAlamofire Software Foundation 认真对待安全问题。\n如果您发现任何关于安全的问题，请立即通知我们！\n\n请**不要**公然公开发布问题，\n而是将您的问题私下发送到<security@alamofire.org>。\n这将有于帮助确保发现的任何漏洞\n可以[披露制度](http://en.wikipedia.org/wiki/Responsible_disclosure)\n对任何受影响的各方\n\n## 报告其他问题\n\n为此项目贡献的方法\n是当遇到问题时，请发送一篇详细的错误报告。\n我们会感谢您写出的一份精心编写的详尽错误报告。\n\n在提交问题之前，请检查项目里的问题数据库是否已存在此问题。\n如果您找到匹配项，请添加“+1”或“我也遇到此问题”。\n这样做有助于确定最常见问题和请求的优先级。\n\n报告问题时，请包含以下内容：\n\n* 您正在使用的Xcode版本\n* 您的iOS或OS X版本\n* 任何堆栈轨迹或编译器错误的完整输出\n* 如果代码段可再现所描述的行为\n* 任何其他有助于理解问题的细节\n\n此信息有助于我们更快地查看和修复您的问题。\n\n## 提交拉取请求\n\n大力鼓励和欢迎拉取请求。在提交拉取请求时，请创建适当的测试用例，说明修复的问题或新功能。\n\n## 开发人员原产地证书 1.1\n\n为了项目做出贡献，我保证:\n\n- (a) The contribution was created in whole or in part by me and I\n      have the right to submit it under the open source license\n      indicated in the file; or\n\n- (b) The contribution is based upon previous work that, to the best\n      of my knowledge, is covered under an appropriate open source\n      license and I have the right under that license to submit that\n      work with modifications, whether created in whole or in part\n      by me, under the same open source license (unless I am\n      permitted to submit under a different license), as indicated\n      in the file; or\n\n- (c) The contribution was provided directly to me by some other\n      person who certified (a), (b) or (c) and I have not modified\n      it.\n\n- (d) I understand and agree that this project and the contribution\n      are public and that a record of the contribution (including all\n      personal information I submit with it, including my sign-off) is\n      maintained indefinitely and may be redistributed consistent with\n      this project or the open source license(s) involved.\n\n## 行为守则\n\n该项目采取贡献者公约为准则。\n\n这项目的成果将会被我们的行为或行动影响。\n\n我们期望每个为此项目做出贡献的人都会对此表示敬意。\n\n详情请阅读 [CONDUCT.md](https://github.com/Alamofire/Foundation/blob/master/CONDUCT.md)。\n\n----\n\n*上述陈述的一些想法和措辞是基于 [Docker](https://github.com/docker/docker/blob/master/CONTRIBUTING.md) 和 [Linux](http://elinux.org/Developer_Certificate_Of_Origin) 社区. \n我们表彰和感激他们为促进项目合作所做的付出。*\n"
        },
        {
          "name": "Example",
          "type": "tree",
          "content": null
        },
        {
          "name": "Framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.08,
          "content": "source \"https://rubygems.org\"\n\ngem \"fastlane\"\ngem \"cocoapods\"\ngem \"xcode-install\""
        },
        {
          "name": "Gemfile.lock",
          "type": "blob",
          "size": 7.65,
          "content": "GEM\n  remote: https://rubygems.org/\n  specs:\n    CFPropertyList (3.0.5)\n      rexml\n    activesupport (6.1.7)\n      concurrent-ruby (~> 1.0, >= 1.0.2)\n      i18n (>= 1.6, < 2)\n      minitest (>= 5.1)\n      tzinfo (~> 2.0)\n      zeitwerk (~> 2.3)\n    addressable (2.8.1)\n      public_suffix (>= 2.0.2, < 6.0)\n    algoliasearch (1.27.5)\n      httpclient (~> 2.8, >= 2.8.3)\n      json (>= 1.5.1)\n    artifactory (3.0.15)\n    atomos (0.1.3)\n    aws-eventstream (1.2.0)\n    aws-partitions (1.693.0)\n    aws-sdk-core (3.168.4)\n      aws-eventstream (~> 1, >= 1.0.2)\n      aws-partitions (~> 1, >= 1.651.0)\n      aws-sigv4 (~> 1.5)\n      jmespath (~> 1, >= 1.6.1)\n    aws-sdk-kms (1.61.0)\n      aws-sdk-core (~> 3, >= 3.165.0)\n      aws-sigv4 (~> 1.1)\n    aws-sdk-s3 (1.117.2)\n      aws-sdk-core (~> 3, >= 3.165.0)\n      aws-sdk-kms (~> 1)\n      aws-sigv4 (~> 1.4)\n    aws-sigv4 (1.5.2)\n      aws-eventstream (~> 1, >= 1.0.2)\n    babosa (1.0.4)\n    claide (1.1.0)\n    cocoapods (1.11.3)\n      addressable (~> 2.8)\n      claide (>= 1.0.2, < 2.0)\n      cocoapods-core (= 1.11.3)\n      cocoapods-deintegrate (>= 1.0.3, < 2.0)\n      cocoapods-downloader (>= 1.4.0, < 2.0)\n      cocoapods-plugins (>= 1.0.0, < 2.0)\n      cocoapods-search (>= 1.0.0, < 2.0)\n      cocoapods-trunk (>= 1.4.0, < 2.0)\n      cocoapods-try (>= 1.1.0, < 2.0)\n      colored2 (~> 3.1)\n      escape (~> 0.0.4)\n      fourflusher (>= 2.3.0, < 3.0)\n      gh_inspector (~> 1.0)\n      molinillo (~> 0.8.0)\n      nap (~> 1.0)\n      ruby-macho (>= 1.0, < 3.0)\n      xcodeproj (>= 1.21.0, < 2.0)\n    cocoapods-core (1.11.3)\n      activesupport (>= 5.0, < 7)\n      addressable (~> 2.8)\n      algoliasearch (~> 1.0)\n      concurrent-ruby (~> 1.1)\n      fuzzy_match (~> 2.0.4)\n      nap (~> 1.0)\n      netrc (~> 0.11)\n      public_suffix (~> 4.0)\n      typhoeus (~> 1.0)\n    cocoapods-deintegrate (1.0.5)\n    cocoapods-downloader (1.6.3)\n    cocoapods-plugins (1.0.0)\n      nap\n    cocoapods-search (1.0.1)\n    cocoapods-trunk (1.6.0)\n      nap (>= 0.8, < 2.0)\n      netrc (~> 0.11)\n    cocoapods-try (1.2.0)\n    colored (1.2)\n    colored2 (3.1.2)\n    commander (4.6.0)\n      highline (~> 2.0.0)\n    concurrent-ruby (1.1.10)\n    declarative (0.0.20)\n    digest-crc (0.6.4)\n      rake (>= 12.0.0, < 14.0.0)\n    domain_name (0.5.20190701)\n      unf (>= 0.0.5, < 1.0.0)\n    dotenv (2.8.1)\n    emoji_regex (3.2.3)\n    escape (0.0.4)\n    ethon (0.16.0)\n      ffi (>= 1.15.0)\n    excon (0.97.1)\n    faraday (1.10.2)\n      faraday-em_http (~> 1.0)\n      faraday-em_synchrony (~> 1.0)\n      faraday-excon (~> 1.1)\n      faraday-httpclient (~> 1.0)\n      faraday-multipart (~> 1.0)\n      faraday-net_http (~> 1.0)\n      faraday-net_http_persistent (~> 1.0)\n      faraday-patron (~> 1.0)\n      faraday-rack (~> 1.0)\n      faraday-retry (~> 1.0)\n      ruby2_keywords (>= 0.0.4)\n    faraday-cookie_jar (0.0.7)\n      faraday (>= 0.8.0)\n      http-cookie (~> 1.0.0)\n    faraday-em_http (1.0.0)\n    faraday-em_synchrony (1.0.0)\n    faraday-excon (1.1.0)\n    faraday-httpclient (1.0.1)\n    faraday-multipart (1.0.4)\n      multipart-post (~> 2)\n    faraday-net_http (1.0.1)\n    faraday-net_http_persistent (1.2.0)\n    faraday-patron (1.0.0)\n    faraday-rack (1.0.0)\n    faraday-retry (1.0.3)\n    faraday_middleware (1.2.0)\n      faraday (~> 1.0)\n    fastimage (2.2.6)\n    fastlane (2.211.0)\n      CFPropertyList (>= 2.3, < 4.0.0)\n      addressable (>= 2.8, < 3.0.0)\n      artifactory (~> 3.0)\n      aws-sdk-s3 (~> 1.0)\n      babosa (>= 1.0.3, < 2.0.0)\n      bundler (>= 1.12.0, < 3.0.0)\n      colored\n      commander (~> 4.6)\n      dotenv (>= 2.1.1, < 3.0.0)\n      emoji_regex (>= 0.1, < 4.0)\n      excon (>= 0.71.0, < 1.0.0)\n      faraday (~> 1.0)\n      faraday-cookie_jar (~> 0.0.6)\n      faraday_middleware (~> 1.0)\n      fastimage (>= 2.1.0, < 3.0.0)\n      gh_inspector (>= 1.1.2, < 2.0.0)\n      google-apis-androidpublisher_v3 (~> 0.3)\n      google-apis-playcustomapp_v1 (~> 0.1)\n      google-cloud-storage (~> 1.31)\n      highline (~> 2.0)\n      json (< 3.0.0)\n      jwt (>= 2.1.0, < 3)\n      mini_magick (>= 4.9.4, < 5.0.0)\n      multipart-post (~> 2.0.0)\n      naturally (~> 2.2)\n      optparse (~> 0.1.1)\n      plist (>= 3.1.0, < 4.0.0)\n      rubyzip (>= 2.0.0, < 3.0.0)\n      security (= 0.1.3)\n      simctl (~> 1.6.3)\n      terminal-notifier (>= 2.0.0, < 3.0.0)\n      terminal-table (>= 1.4.5, < 2.0.0)\n      tty-screen (>= 0.6.3, < 1.0.0)\n      tty-spinner (>= 0.8.0, < 1.0.0)\n      word_wrap (~> 1.0.0)\n      xcodeproj (>= 1.13.0, < 2.0.0)\n      xcpretty (~> 0.3.0)\n      xcpretty-travis-formatter (>= 0.0.3)\n    ffi (1.15.5)\n    fourflusher (2.3.1)\n    fuzzy_match (2.0.4)\n    gh_inspector (1.1.3)\n    google-apis-androidpublisher_v3 (0.32.0)\n      google-apis-core (>= 0.9.1, < 2.a)\n    google-apis-core (0.9.5)\n      addressable (~> 2.5, >= 2.5.1)\n      googleauth (>= 0.16.2, < 2.a)\n      httpclient (>= 2.8.1, < 3.a)\n      mini_mime (~> 1.0)\n      representable (~> 3.0)\n      retriable (>= 2.0, < 4.a)\n      rexml\n      webrick\n    google-apis-iamcredentials_v1 (0.16.0)\n      google-apis-core (>= 0.9.1, < 2.a)\n    google-apis-playcustomapp_v1 (0.12.0)\n      google-apis-core (>= 0.9.1, < 2.a)\n    google-apis-storage_v1 (0.19.0)\n      google-apis-core (>= 0.9.0, < 2.a)\n    google-cloud-core (1.6.0)\n      google-cloud-env (~> 1.0)\n      google-cloud-errors (~> 1.0)\n    google-cloud-env (1.6.0)\n      faraday (>= 0.17.3, < 3.0)\n    google-cloud-errors (1.3.0)\n    google-cloud-storage (1.44.0)\n      addressable (~> 2.8)\n      digest-crc (~> 0.4)\n      google-apis-iamcredentials_v1 (~> 0.1)\n      google-apis-storage_v1 (~> 0.19.0)\n      google-cloud-core (~> 1.6)\n      googleauth (>= 0.16.2, < 2.a)\n      mini_mime (~> 1.0)\n    googleauth (1.3.0)\n      faraday (>= 0.17.3, < 3.a)\n      jwt (>= 1.4, < 3.0)\n      memoist (~> 0.16)\n      multi_json (~> 1.11)\n      os (>= 0.9, < 2.0)\n      signet (>= 0.16, < 2.a)\n    highline (2.0.3)\n    http-cookie (1.0.5)\n      domain_name (~> 0.5)\n    httpclient (2.8.3)\n    i18n (1.12.0)\n      concurrent-ruby (~> 1.0)\n    jmespath (1.6.2)\n    json (2.6.3)\n    jwt (2.6.0)\n    memoist (0.16.2)\n    mini_magick (4.12.0)\n    mini_mime (1.1.2)\n    minitest (5.17.0)\n    molinillo (0.8.0)\n    multi_json (1.15.0)\n    multipart-post (2.0.0)\n    nanaimo (0.3.0)\n    nap (1.1.0)\n    naturally (2.2.1)\n    netrc (0.11.0)\n    optparse (0.1.1)\n    os (1.1.4)\n    plist (3.6.0)\n    public_suffix (4.0.7)\n    rake (13.0.6)\n    representable (3.2.0)\n      declarative (< 0.1.0)\n      trailblazer-option (>= 0.1.1, < 0.2.0)\n      uber (< 0.2.0)\n    retriable (3.1.2)\n    rexml (3.2.5)\n    rouge (2.0.7)\n    ruby-macho (2.5.1)\n    ruby2_keywords (0.0.5)\n    rubyzip (2.3.2)\n    security (0.1.3)\n    signet (0.17.0)\n      addressable (~> 2.8)\n      faraday (>= 0.17.5, < 3.a)\n      jwt (>= 1.5, < 3.0)\n      multi_json (~> 1.10)\n    simctl (1.6.8)\n      CFPropertyList\n      naturally\n    terminal-notifier (2.0.0)\n    terminal-table (1.8.0)\n      unicode-display_width (~> 1.1, >= 1.1.1)\n    trailblazer-option (0.1.2)\n    tty-cursor (0.7.1)\n    tty-screen (0.8.1)\n    tty-spinner (0.9.3)\n      tty-cursor (~> 0.7)\n    typhoeus (1.4.0)\n      ethon (>= 0.9.0)\n    tzinfo (2.0.5)\n      concurrent-ruby (~> 1.0)\n    uber (0.1.0)\n    unf (0.1.4)\n      unf_ext\n    unf_ext (0.0.8.2)\n    unicode-display_width (1.8.0)\n    webrick (1.7.0)\n    word_wrap (1.0.0)\n    xcode-install (2.8.1)\n      claide (>= 0.9.1)\n      fastlane (>= 2.1.0, < 3.0.0)\n    xcodeproj (1.22.0)\n      CFPropertyList (>= 2.3.3, < 4.0)\n      atomos (~> 0.1.3)\n      claide (>= 1.0.2, < 2.0)\n      colored2 (~> 3.1)\n      nanaimo (~> 0.3.0)\n      rexml (~> 3.2.4)\n    xcpretty (0.3.0)\n      rouge (~> 2.0.7)\n    xcpretty-travis-formatter (1.0.1)\n      xcpretty (~> 0.2, >= 0.0.7)\n    zeitwerk (2.6.6)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  cocoapods\n  fastlane\n  xcode-install\n\nBUNDLED WITH\n   2.4.1\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.08,
          "content": "Copyright (c) 2011-2020 Alamofire Software Foundation (http://alamofire.org/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Package.swift",
          "type": "blob",
          "size": 1.77,
          "content": "// swift-tools-version:5.0\n//\n//  Package.swift\n//\n//  Copyright (c) 2020 Alamofire Software Foundation (http://alamofire.org/)\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n//\n\nimport PackageDescription\n\nlet package = Package(name: \"AFNetworking\",\n                      platforms: [.macOS(.v10_10),\n                                  .iOS(.v9),\n                                  .tvOS(.v9),\n                                  .watchOS(.v2)],\n                      products: [.library(name: \"AFNetworking\",\n                                          targets: [\"AFNetworking\"])],\n                      targets: [.target(name: \"AFNetworking\",\n                                        path: \"AFNetworking\",\n                                        publicHeadersPath: \"\")])\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.7,
          "content": "# AFNetworking is Deprecated\n\nAs of Jan. 17, 2023, AFNetworking is deprecated and there will be no further releases. This repo will remain online in perpetuity as an archive. There are a couple options for continued AFNetworking use:\n\n1. Copy AFNetworking into your project and compile it directly. This gives you full control over the code.\n2. Fork AFNetworking and use the fork in your dependency manager. There will be no official forks but anyone can fork at any time and can even publish those forks under a different name, in accordance with AFNetworking's license.\n\nMoving forward, Alamofire is the suggested migration path for networking in modern Swift. Anyone who needs help making that migration is welcome to ask on [StackOverflow](https://stackoverflow.com) and tag `alamofire` and `afnetworking`, or open a discussion on Alamofire's [GitHub Discussions](https://github.com/Alamofire/Alamofire/discussions) regarding any migration issues or missing features.\n\n---\n\n<p align=\"center\" >\n  <img src=\"https://raw.github.com/AFNetworking/AFNetworking/assets/afnetworking-logo.png\" alt=\"AFNetworking\" title=\"AFNetworking\">\n</p>\n\n[![Build Status](https://github.com/AFNetworking/AFNetworking/workflows/AFNetworking%20CI/badge.svg?branch=master)](https://github.com/AFNetworking/AFNetworking/actions)\n[![CocoaPods Compatible](https://img.shields.io/cocoapods/v/AFNetworking.svg)](https://img.shields.io/cocoapods/v/AFNetworking.svg)\n[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![Platform](https://img.shields.io/cocoapods/p/AFNetworking.svg?style=flat)](http://cocoadocs.org/docsets/AFNetworking)\n[![Twitter](https://img.shields.io/badge/twitter-@AFNetworking-blue.svg?style=flat)](http://twitter.com/AFNetworking)\n\nAFNetworking is a delightful networking library for iOS, macOS, watchOS, and tvOS. It's built on top of the [Foundation URL Loading System](https://developer.apple.com/documentation/foundation/url_loading_system), extending the powerful high-level networking abstractions built into Cocoa. It has a modular architecture with well-designed, feature-rich APIs that are a joy to use.\n\nPerhaps the most important feature of all, however, is the amazing community of developers who use and contribute to AFNetworking every day. AFNetworking powers some of the most popular and critically-acclaimed apps on the iPhone, iPad, and Mac.\n\n## How To Get Started\n\n- [Download AFNetworking](https://github.com/AFNetworking/AFNetworking/archive/master.zip) and try out the included Mac and iPhone example apps\n- Read the [\"Getting Started\" guide](https://github.com/AFNetworking/AFNetworking/wiki/Getting-Started-with-AFNetworking), [FAQ](https://github.com/AFNetworking/AFNetworking/wiki/AFNetworking-FAQ), or [other articles on the Wiki](https://github.com/AFNetworking/AFNetworking/wiki)\n\n## Communication\n\n- If you **need help**, use [Stack Overflow](http://stackoverflow.com/questions/tagged/afnetworking). (Tag 'afnetworking')\n- If you'd like to **ask a general question**, use [Stack Overflow](http://stackoverflow.com/questions/tagged/afnetworking).\n- If you **found a bug**, _and can provide steps to reliably reproduce it_, open an issue.\n- If you **have a feature request**, open an issue.\n- If you **want to contribute**, submit a pull request.\n\n## Installation\n\nAFNetworking supports multiple methods for installing the library in a project.\n\n## Installation with CocoaPods\n\nTo integrate AFNetworking into your Xcode project using CocoaPods, specify it in your `Podfile`:\n\n```ruby\npod 'AFNetworking', '~> 4.0'\n```\n\n### Installation with Swift Package Manager\n\nOnce you have your Swift package set up, adding AFNetworking as a dependency is as easy as adding it to the `dependencies` value of your `Package.swift`.\n\n```swift\ndependencies: [\n    .package(url: \"https://github.com/AFNetworking/AFNetworking.git\", .upToNextMajor(from: \"4.0.0\"))\n]\n```\n\n> Note: AFNetworking's Swift package does not include it's UIKit extensions.\n\n### Installation with Carthage\n\n[Carthage](https://github.com/Carthage/Carthage) is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate AFNetworking, add the following to your `Cartfile`.\n\n```ogdl\ngithub \"AFNetworking/AFNetworking\" ~> 4.0\n```\n\n## Requirements\n\n| AFNetworking Version | Minimum iOS Target | Minimum macOS Target | Minimum watchOS Target | Minimum tvOS Target |                                   Notes                                    |\n| :------------------: | :----------------: | :------------------: | :--------------------: | :-----------------: | :------------------------------------------------------------------------: |\n|         4.x          |       iOS 9        |     macOS 10.10      |      watchOS 2.0       |      tvOS 9.0       |                           Xcode 11+ is required.                           |\n|         3.x          |       iOS 7        |      OS X 10.9       |      watchOS 2.0       |      tvOS 9.0       | Xcode 7+ is required. `NSURLConnectionOperation` support has been removed. |\n|     2.6 -> 2.6.3     |       iOS 7        |      OS X 10.9       |      watchOS 2.0       |         n/a         |                           Xcode 7+ is required.                            |\n|     2.0 -> 2.5.4     |       iOS 6        |      OS X 10.8       |          n/a           |         n/a         | Xcode 5+ is required. `NSURLSession` subspec requires iOS 7 or OS X 10.9.  |\n|         1.x          |       iOS 5        |    Mac OS X 10.7     |          n/a           |         n/a         |\n|        0.10.x        |       iOS 4        |    Mac OS X 10.6     |          n/a           |         n/a         |\n\n(macOS projects must support [64-bit with modern Cocoa runtime](https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtVersionsPlatforms.html)).\n\n> Programming in Swift? Try [Alamofire](https://github.com/Alamofire/Alamofire) for a more conventional set of APIs.\n\n## Architecture\n\n### NSURLSession\n\n- `AFURLSessionManager`\n- `AFHTTPSessionManager`\n\n### Serialization\n\n- `<AFURLRequestSerialization>`\n  - `AFHTTPRequestSerializer`\n  - `AFJSONRequestSerializer`\n  - `AFPropertyListRequestSerializer`\n- `<AFURLResponseSerialization>`\n  - `AFHTTPResponseSerializer`\n  - `AFJSONResponseSerializer`\n  - `AFXMLParserResponseSerializer`\n  - `AFXMLDocumentResponseSerializer` _(macOS)_\n  - `AFPropertyListResponseSerializer`\n  - `AFImageResponseSerializer`\n  - `AFCompoundResponseSerializer`\n\n### Additional Functionality\n\n- `AFSecurityPolicy`\n- `AFNetworkReachabilityManager`\n\n## Usage\n\n### AFURLSessionManager\n\n`AFURLSessionManager` creates and manages an `NSURLSession` object based on a specified `NSURLSessionConfiguration` object, which conforms to `<NSURLSessionTaskDelegate>`, `<NSURLSessionDataDelegate>`, `<NSURLSessionDownloadDelegate>`, and `<NSURLSessionDelegate>`.\n\n#### Creating a Download Task\n\n```objective-c\nNSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];\nAFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];\n\nNSURL *URL = [NSURL URLWithString:@\"http://example.com/download.zip\"];\nNSURLRequest *request = [NSURLRequest requestWithURL:URL];\n\nNSURLSessionDownloadTask *downloadTask = [manager downloadTaskWithRequest:request progress:nil destination:^NSURL *(NSURL *targetPath, NSURLResponse *response) {\n    NSURL *documentsDirectoryURL = [[NSFileManager defaultManager] URLForDirectory:NSDocumentDirectory inDomain:NSUserDomainMask appropriateForURL:nil create:NO error:nil];\n    return [documentsDirectoryURL URLByAppendingPathComponent:[response suggestedFilename]];\n} completionHandler:^(NSURLResponse *response, NSURL *filePath, NSError *error) {\n    NSLog(@\"File downloaded to: %@\", filePath);\n}];\n[downloadTask resume];\n```\n\n#### Creating an Upload Task\n\n```objective-c\nNSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];\nAFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];\n\nNSURL *URL = [NSURL URLWithString:@\"http://example.com/upload\"];\nNSURLRequest *request = [NSURLRequest requestWithURL:URL];\n\nNSURL *filePath = [NSURL fileURLWithPath:@\"file://path/to/image.png\"];\nNSURLSessionUploadTask *uploadTask = [manager uploadTaskWithRequest:request fromFile:filePath progress:nil completionHandler:^(NSURLResponse *response, id responseObject, NSError *error) {\n    if (error) {\n        NSLog(@\"Error: %@\", error);\n    } else {\n        NSLog(@\"Success: %@ %@\", response, responseObject);\n    }\n}];\n[uploadTask resume];\n```\n\n#### Creating an Upload Task for a Multi-Part Request, with Progress\n\n```objective-c\nNSMutableURLRequest *request = [[AFHTTPRequestSerializer serializer] multipartFormRequestWithMethod:@\"POST\" URLString:@\"http://example.com/upload\" parameters:nil constructingBodyWithBlock:^(id<AFMultipartFormData> formData) {\n        [formData appendPartWithFileURL:[NSURL fileURLWithPath:@\"file://path/to/image.jpg\"] name:@\"file\" fileName:@\"filename.jpg\" mimeType:@\"image/jpeg\" error:nil];\n    } error:nil];\n\nAFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:[NSURLSessionConfiguration defaultSessionConfiguration]];\n\nNSURLSessionUploadTask *uploadTask;\nuploadTask = [manager\n              uploadTaskWithStreamedRequest:request\n              progress:^(NSProgress * _Nonnull uploadProgress) {\n                  // This is not called back on the main queue.\n                  // You are responsible for dispatching to the main queue for UI updates\n                  dispatch_async(dispatch_get_main_queue(), ^{\n                      //Update the progress view\n                      [progressView setProgress:uploadProgress.fractionCompleted];\n                  });\n              }\n              completionHandler:^(NSURLResponse * _Nonnull response, id  _Nullable responseObject, NSError * _Nullable error) {\n                  if (error) {\n                      NSLog(@\"Error: %@\", error);\n                  } else {\n                      NSLog(@\"%@ %@\", response, responseObject);\n                  }\n              }];\n\n[uploadTask resume];\n```\n\n#### Creating a Data Task\n\n```objective-c\nNSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];\nAFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];\n\nNSURL *URL = [NSURL URLWithString:@\"http://httpbin.org/get\"];\nNSURLRequest *request = [NSURLRequest requestWithURL:URL];\n\nNSURLSessionDataTask *dataTask = [manager dataTaskWithRequest:request completionHandler:^(NSURLResponse *response, id responseObject, NSError *error) {\n    if (error) {\n        NSLog(@\"Error: %@\", error);\n    } else {\n        NSLog(@\"%@ %@\", response, responseObject);\n    }\n}];\n[dataTask resume];\n```\n\n---\n\n### Request Serialization\n\nRequest serializers create requests from URL strings, encoding parameters as either a query string or HTTP body.\n\n```objective-c\nNSString *URLString = @\"http://example.com\";\nNSDictionary *parameters = @{@\"foo\": @\"bar\", @\"baz\": @[@1, @2, @3]};\n```\n\n#### Query String Parameter Encoding\n\n```objective-c\n[[AFHTTPRequestSerializer serializer] requestWithMethod:@\"GET\" URLString:URLString parameters:parameters error:nil];\n```\n\n    GET http://example.com?foo=bar&baz[]=1&baz[]=2&baz[]=3\n\n#### URL Form Parameter Encoding\n\n```objective-c\n[[AFHTTPRequestSerializer serializer] requestWithMethod:@\"POST\" URLString:URLString parameters:parameters error:nil];\n```\n\n    POST http://example.com/\n    Content-Type: application/x-www-form-urlencoded\n\n    foo=bar&baz[]=1&baz[]=2&baz[]=3\n\n#### JSON Parameter Encoding\n\n```objective-c\n[[AFJSONRequestSerializer serializer] requestWithMethod:@\"POST\" URLString:URLString parameters:parameters error:nil];\n```\n\n    POST http://example.com/\n    Content-Type: application/json\n\n    {\"foo\": \"bar\", \"baz\": [1,2,3]}\n\n---\n\n### Network Reachability Manager\n\n`AFNetworkReachabilityManager` monitors the reachability of domains, and addresses for both WWAN and WiFi network interfaces.\n\n- Do not use Reachability to determine if the original request should be sent.\n  - You should try to send it.\n- You can use Reachability to determine when a request should be automatically retried.\n  - Although it may still fail, a Reachability notification that the connectivity is available is a good time to retry something.\n- Network reachability is a useful tool for determining why a request might have failed.\n  - After a network request has failed, telling the user they're offline is better than giving them a more technical but accurate error, such as \"request timed out.\"\n\nSee also [WWDC 2012 session 706, \"Networking Best Practices.\"](https://developer.apple.com/videos/play/wwdc2012-706/).\n\n#### Shared Network Reachability\n\n```objective-c\n[[AFNetworkReachabilityManager sharedManager] setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {\n    NSLog(@\"Reachability: %@\", AFStringFromNetworkReachabilityStatus(status));\n}];\n\n[[AFNetworkReachabilityManager sharedManager] startMonitoring];\n```\n\n---\n\n### Security Policy\n\n`AFSecurityPolicy` evaluates server trust against pinned X.509 certificates and public keys over secure connections.\n\nAdding pinned SSL certificates to your app helps prevent man-in-the-middle attacks and other vulnerabilities. Applications dealing with sensitive customer data or financial information are strongly encouraged to route all communication over an HTTPS connection with SSL pinning configured and enabled.\n\n#### Allowing Invalid SSL Certificates\n\n```objective-c\nAFHTTPSessionManager *manager = [AFHTTPSessionManager manager];\nmanager.securityPolicy.allowInvalidCertificates = YES; // not recommended for production\n```\n\n---\n\n## Unit Tests\n\nAFNetworking includes a suite of unit tests within the Tests subdirectory. These tests can be run simply be executed the test action on the platform framework you would like to test.\n\n## Credits\n\nAFNetworking is owned and maintained by the [Alamofire Software Foundation](http://alamofire.org).\n\nAFNetworking was originally created by [Scott Raymond](https://github.com/sco/) and [Mattt Thompson](https://github.com/mattt/) in the development of [Gowalla for iPhone](http://en.wikipedia.org/wiki/Gowalla).\n\nAFNetworking's logo was designed by [Alan Defibaugh](http://www.alandefibaugh.com/).\n\nAnd most of all, thanks to AFNetworking's [growing list of contributors](https://github.com/AFNetworking/AFNetworking/contributors).\n\n### Security Disclosure\n\nIf you believe you have identified a security vulnerability with AFNetworking, you should report it as soon as possible via email to security@alamofire.org. Please do not post it to a public issue tracker.\n\n## License\n\nAFNetworking is released under the MIT license. See [LICENSE](https://github.com/AFNetworking/AFNetworking/blob/master/LICENSE) for details.\n"
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "UIKit+AFNetworking",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastlane",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}