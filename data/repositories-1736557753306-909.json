{
  "metadata": {
    "timestamp": 1736557753306,
    "page": 909,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rxhanson/Rectangle",
      "stars": 26275,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.41,
          "content": ".idea\n**/.DS_Store\n*/xcuserdata/\nxcuserdata/\n**.xcuserstate\n*.xcworkspace\nPods\n\n## Xcode per-user config\n*.mode1\n*.mode1v3\n*.mode2v3\n*.perspective\n*.perspectivev3\n*.pbxuser\n\n## Xcode Patch\n*.xcodeproj/*\n!*.xcodeproj/project.pbxproj\n!*.xcodeproj/xcshareddata/\n!*.xcworkspace/contents.xcworkspacedata\n/*.gcno\n\n## Build products\nbuild/\n*.o\n*.LinkFileList\n*.hmap\n\n## Automatic backup files\n*~.nib/\n*.swp\n*~\n*.dat\n*.dep\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at ryan@ryanhanson.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.17,
          "content": "# Contributing\n\n## Feature Requests\n\nRectangle is not accepting any new feature requests at this time, sorry. You can file a feature request for a feature that you plan to implement and submit a pull request for, so that the feature can be reviewed and you will know ahead of time if the feature will be rejected.  \n\n## Bugs\n\nPlease search through the existing issues, open and closed, before filing a new bug.\nAdd the version of Rectangle, the version of the OS, and screenshots or videos as necessary.\n\n## Coding Style\n\nPlease match the existing coding style as much as possible.\n\n## License\n\nBy contributing to Rectangle you agree that your contributions will be licensed under its MIT license.\n\n## Incentives\n\nLogic from Rectangle is used in the [Multitouch](https://multitouch.app) app. The [Rectangle Pro](https://rectangleapp.com/pro) app is entirely built on top of Rectangle. If you contribute significant code or localizations that get merged into Rectangle, you get a free license of Multitouch or Rectangle Pro. Contributors to Sparkle, MASShortcut, or Spectacle can also receive free Multitouch or Rectangle Pro licenses (just send me a direct message on [Gitter](https://gitter.im)).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.12,
          "content": "MIT License\n\nCopyright (c) 2019-2025 Ryan Hanson\nBased on the Spectacle app, Copyright (c) 2017 Eric Czarny eczarny@gmail.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.26,
          "content": "# Rectangle\n\n[![Build](https://github.com/rxhanson/Rectangle/actions/workflows/build.yml/badge.svg)](https://github.com/rxhanson/Rectangle/actions/workflows/build.yml)\n\nRectangle is a window management app based on Spectacle, written in Swift.\n\n![Screenshot](https://user-images.githubusercontent.com/13651296/183785536-a67a2e2a-7c55-4c19-9bf8-482e734b1632.png)\n\n## System Requirements\n\nRectangle supports macOS v10.15+. The last version that is supported for macOS 10.13 and 10.14 is https://github.com/rxhanson/Rectangle/releases/tag/v0.73.\n\n## Installation\n\nYou can download the latest dmg from <https://rectangleapp.com> or the [Releases page](https://github.com/rxhanson/Rectangle/releases).\n\nOr install with brew cask:\n\n```bash\nbrew install --cask rectangle\n```\n\n## How to use it\n\nThe [keyboard shortcuts](https://support.apple.com/guide/mac-help/what-are-those-symbols-shown-in-menus-cpmh0011/mac) are self explanatory, but the snap areas can use some explanation if you've never used them on Windows or other window management apps.\n\nDrag a window to the edge of the screen. When the mouse cursor reaches the edge of the screen, you'll see a footprint that Rectangle will attempt to resize and move the window to when the click is released.\n\n| Snap Area                                              | Resulting Action                       |\n|--------------------------------------------------------|----------------------------------------|\n| Left or right edge                                     | Left or right half                     |\n| Top                                                    | Maximize                               |\n| Corners                                                | Quarter in respective corner           |\n| Left or right edge, just above or below a corner       | Top or bottom half                     |\n| Bottom left, center, or right third                    | Respective third                       |\n| Bottom left or right third, then drag to bottom center | First or last two thirds, respectively |\n\n### Ignore an app\n\n1. Focus the app that you want to ignore (make a window from that app frontmost).\n1. Open the Rectangle menu and select \"Ignore app\"\n\n## Execute an action by URL\n\nOpen the URL `rectangle://execute-action?name=[name]`. Do not activate Rectangle if possible.\n\nAvailable values for `[name]`: `left-half`, `right-half`, `center-half`, `top-half`, `bottom-half`, `top-left`, `top-right`, `bottom-left`, `bottom-right`, `first-third`, `center-third`, `last-third`, `first-two-thirds`, `last-two-thirds`, `maximize`, `almost-maximize`, `maximize-height`, `smaller`, `larger`, `center`, `center-prominently`, `restore`, `next-display`, `previous-display`, `move-left`, `move-right`, `move-up`, `move-down`, `first-fourth`, `second-fourth`, `third-fourth`, `last-fourth`, `first-three-fourths`, `last-three-fourths`, `top-left-sixth`, `top-center-sixth`, `top-right-sixth`, `bottom-left-sixth`, `bottom-center-sixth`, `bottom-right-sixth`, `specified`, `reverse-all`, `top-left-ninth`, `top-center-ninth`, `top-right-ninth`, `middle-left-ninth`, `middle-center-ninth`, `middle-right-ninth`, `bottom-left-ninth`, `bottom-center-ninth`, `bottom-right-ninth`, `top-left-third`, `top-right-third`, `bottom-left-third`, `bottom-right-third`, `top-left-eighth`, `top-center-left-eighth`, `top-center-right-eighth`, `top-right-eighth`, `bottom-left-eighth`, `bottom-center-left-eighth`, `bottom-center-right-eighth`, `bottom-right-eighth`, `tile-all`, `cascade-all`, `cascade-active-app`\n\nExample, from a shell: `open -g \"rectangle://execute-action?name=left-half\"`\n\nURLs can also be used to ignore/unignore apps. \n\n```\nrectangle://execute-task?name=ignore-app\nrectangle://execute-task?name=unignore-app\n```\nA bundle identifier can also be specified, for example:\n```\nrectangle://execute-task?name=ignore-app&app-bundle-id=com.apple.Safari\n```\n\n## Terminal Commands for Hidden Preferences\n\nSee [TerminalCommands.md](TerminalCommands.md)\n\n## Differences with Spectacle\n\n* Rectangle uses [MASShortcut](https://github.com/shpakovski/MASShortcut) for keyboard shortcut recording. Spectacle used its own shortcut recorder.\n* Rectangle has additional window actions: move windows to each edge without resizing, maximize only the height of a window, almost maximizing a window.\n* Next/prev screen thirds is replaced with explicitly first third, first two thirds, center third, last two thirds, and last third. Screen orientation is taken into account, as in first third will be left third on landscape and top third on portrait.\n  * You can however emulate Spectacle's third cycling using first and last third actions. So, if you repeatedly execute first third, it will cycle through thirds (first, center, last) and vice-versa with the last third.\n* There's an option to have windows traverse across displays on subsequent left or right executions.\n* Windows will snap when dragged to edges/corners of the screen. This can be disabled.\n\n## Common Known Issues\n\n### Rectangle doesn't have the ability to move to other desktops/spaces\n\nApple never released a public API for doing this. Rectangle Pro has next/prev Space actions, but there are no plans to add those into Rectangle at this time.\n\n### Window resizing is off slightly for iTerm2\n\nBy default iTerm2 will only resize in increments of character widths. There might be a setting inside iTerm2 to disable this, but you can change it with the following command.\n\n```bash\ndefaults write com.googlecode.iterm2 DisableWindowSizeSnap -integer 1\n```\n\n### Rectangle appears to cause Notification Center to freeze\n\nThis appears to affect only a small amount of users. To prevent this from happening, uncheck the box for \"Snap windows by dragging\".\nSee issue [317](https://github.com/rxhanson/Rectangle/issues/317).\n\n### Troubleshooting\n\nIf windows aren't resizing or moving as you expect, here's some initial steps to get to the bottom of it. Most issues of this type have been caused by other apps.\n\n1. Make sure macOS is up to date.\n1. Restart your machine (this often fixes things right after a macOS update).\n1. Make sure there are no other window manager applications running.\n1. Make sure that the app whose windows are not behaving properly does not have any conflicting keyboard shortcuts.\n1. Try using the menu items to execute a window action or changing the keyboard shortcut to something different so we can tell if it's a keyboard shortcut issue or not.\n1. Enable debug logging, as per the instructions in the following section.\n1. The logs are pretty straightforward. If your calculated rect and your resulting rect are identical, chances are that there is another application causing issues. Save your logs if needed to attach to an issue if you create one.\n1. If you suspect there may be another application causing issues, try creating and logging in as a new macOS user.\n\n#### Try resetting the macOS accessibility permissions for Rectangle:\n\n```bash\ntccutil reset All com.knollsoft.Rectangle\n```\n\nOr, this can be done with the following steps instead of the tccutil terminal command.\n1. Close Rectangle if it's running\n2. In System Settings -> Privacy & Security -> Accessibility, first disable Rectangle, then remove it with the minus button. (it's important to do both of those steps in that order)\n3. Restart your mac.\n4. Launch Rectangle and enable settings for it as prompted.\n\n## View Debug Logging\n\n1. Hold down the alt (option) key with the Rectangle menu open.\n1. Select the \"View Logging...\" menu item, which is in place of the \"About\" menu item.\n1. Logging will appear in the window as you perform Rectangle commands.\n\n## Import & export JSON config\n\nThere are buttons for importing and exporting the config as a JSON file in the settings tab of the preferences window. \n\nUpon launch, Rectangle will load a config file at `~/Library/Application Support/Rectangle/RectangleConfig.json` if it is present and will rename that file with a time/date stamp so that it isn't read on subsequent launches.\n\n## Preferences Storage\n\nThe configuration for Rectangle is stored using NSUserDefaults, meaning it is stored in the following location:\n`~/Library/Preferences/com.knollsoft.Rectangle.plist`\nNote that shortcuts in v0.41+ are stored in a different format and will not load in prior versions.\n\nThat file can be backed up or transferred to other machines.\n\nIf you are using Rectangle v0.44+, you can also use the import/export button in the Preferences pane to share to your preferences and keyboard shortcuts across machines using a JSON file.\n\n> [!NOTE]  \n> If you are having issues with configuration options persisting after an application restart and you've installed using Homebrew, you will need to uninstall and reinstall with the `--zap` flag.\n\n```\nbrew uninstall --zap rectangle\nbrew install rectangle\n```\n\n## Uninstallation\n\nRectangle can be uninstalled by quitting the app and moving it to the trash. You can remove the Rectangle defaults from your machine with the following terminal command:\n\n```bash\ndefaults delete com.knollsoft.Rectangle\n```\n\n> [!TIP]  \n> If you are uninstalling after installing with Homebrew, you should include the `--zap` flag to ensure it removes the plist entries too. \n\n```\nbrew uninstall --zap rectangle\n```\n\n---\n\n## Contributing\n\nLogic from Rectangle is used in the [Multitouch](https://multitouch.app) app. The [Rectangle Pro](https://rectangleapp.com/pro) app is entirely built on top of Rectangle. If you contribute significant code or localizations that get merged into Rectangle, send me an email for a free license of Multitouch or Rectangle Pro. Contributors to Sparkle, MASShortcut, or Spectacle can also receive free Multitouch or Rectangle Pro licenses.\n\n### Localization\n\nIf you would like to contribute to localization, all of the translations are held in the Main.strings per language. If you would like to add a localization but one doesn't currently exist and you don't know how to create one, create an issue and a translation file can be initialized.\n\nPull requests for new localizations or improvements on existing localizations are welcome.\n\n### Running the app in Xcode (for developers)\n\nRectangle uses [Swift Package Manager](https://www.swift.org/package-manager/) to install Sparkle and MASShortcut.\n\nThe original repository for MASShortcut was archived, so Rectangle uses my [fork](https://github.com/rxhanson/MASShortcut). If you want to make any changes that involve MASShortcut, please make a pull request on my fork.\n"
        },
        {
          "name": "Rectangle.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "Rectangle",
          "type": "tree",
          "content": null
        },
        {
          "name": "RectangleLauncher",
          "type": "tree",
          "content": null
        },
        {
          "name": "RectangleTests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TerminalCommands.md",
          "type": "blob",
          "size": 18.06,
          "content": "# Rectangle Terminal Commands for Hidden Preferences\n\nThe preferences window is purposefully slim, but there's a lot that can be modified via Terminal. After executing a terminal command, restart the app as these values are loaded on application startup. For Rectangle Pro, please replace `com.knollsoft.Rectangle` with `com.knollsoft.Hookshot` for the following commands. A number of the commands below are for configuring keyboard shortcuts, and you'll need to know the key code and modifier flags integer values. You can use the free [key codes app](https://apps.apple.com/us/app/key-codes/id414568915) to help with this.\n\n## Contents\n\n- [Keyboard Shortcuts](#keyboard-shortcuts)\n- [Adjust Behavior on Repeated Commands](#adjust-behavior-on-repeated-commands)\n- [Cycle thirds on repeated Center Half commands](#cycle-thirds-on-repeated-center-half-commands)\n- [Resize on Directional Move](#resize-on-directional-move)\n- [Adjust macOS Ventura Stage Manager size](#adjust-macos-ventura-stage-manager-size)\n- [Enable Todo Mode](#enable-todo-mode)\n- [Only allow drag-to-snap when modifier keys are pressed](#only-allow-drag-to-snap-when-modifier-keys-are-pressed)\n- [Almost Maximize](#almost-maximize)\n- [Add an extra centering command with custom size](#add-an-extra-centering-command-with-custom-size)\n- [Add extra \"ninths\" sizing commands](#add-extra-ninths-sizing-commands)\n- [Add extra \"eighths\" sizing commands](#add-extra-eighths-sizing-commands)\n- [Add additional \"thirds\" sizing commands](#add-additional-thirds-sizing-commands)\n- [Add doubling/halving window sizing commands](#add-doublinghalving-window-sizing-commands)\n- [Add additional tiling and cascading commands](#add-additional-tiling-and-cascading-commands)\n- [Modify the \"footprint\" displayed for drag to snap area](#modify-the-footprint-displayed-for-drag-to-snap-area)\n- [Move Up/Down/Left/Right: Don't center on edge](#move-updownleftright-dont-center-on-edge)\n- [Make Smaller limits](#make-smaller-limits)\n- [Make Smaller/Make Larger size increments](#make-smallermake-larger-size-increments)\n- [Make Smaller/Make Larger \"curtain resize\" with gaps](#make-smallermake-larger-curtain-resize-with-gaps)\n- [Make Smaller/Make Larger width only](#make-smallermake-larger-width-only)\n- [Disabling window restore when moving windows](#disabling-window-restore-when-moving-windows)\n- [Changing the margin for the snap areas](#changing-the-margin-for-the-snap-areas)\n- [Setting gaps at the screen edges](#setting-gaps-at-the-screen-edges)\n- [Ignore specific drag to snap areas](#ignore-specific-drag-to-snap-areas)\n- [Disabling gaps when maximizing](#disabling-gaps-when-maximizing)\n- [Enabling snap areas for sixths](#enabling-snap-areas-for-sixths)\n- [Move cursor with window](#move-cursor-with-window)\n- [Prevent a window that is quickly dragged above the menu bar from going into Mission Control](#prevent-a-window-that-is-quickly-dragged-above-the-menu-bar-from-going-into-mission-control)\n- [Change the behavior of double-click window title bar](#change-the-behavior-of-double-click-window-title-bar)\n\n## Keyboard Shortcuts\n\nIf you wish to change the default shortcuts after first launch click \"Restore Default Shortcuts\" in the settings tab of the preferences window. Alternatively, you can set it with the following terminal command followed by app restart. True is for the recommended shortcuts, false is for Spectacle's.\n\n```bash\ndefaults write com.knollsoft.Rectangle alternateDefaultShortcuts -bool true\n```\n\n## Adjust Behavior on Repeated Commands\n\nThis is now in the preferences window, but there's an option in the preferences for \"Move to adjacent display on repeated left or right commands\".\nIf this setting is not checked, then each time you execute a half or quarter action, the width of the window will cycle through the following sizes: 1/2 -> 2/3 -> 1/3.\n\nThe cycling behavior can be disabled entirely with:\n\n```bash\ndefaults write com.knollsoft.Rectangle subsequentExecutionMode -int 2\n```\n\n`subsequentExecutionMode` accepts the following values:\n0: halves to thirds Spectacle behavior (box unchecked)\n1: cycle displays (box checked) for left/right actions\n2: disabled\n3: cycle displays for left/right actions, halves to thirds for the rest (old Rectangle behavior)\n4: repeat same action on next display\n\n## Cycle thirds on repeated Center Half commands\n\nSet Center Half to cycle thirds sizes: 1/2 -> 2/3 -> 1/3 with:\n\n```bash\ndefaults write com.knollsoft.Rectangle centerHalfCycles -int 1\n```\n\n## Resize on Directional Move\n\nBy default, the commands to move to certain edges will not resize the window.\nIf `resizeOnDirectionalMove` is enabled, the _halves to thirds_ mode is instead used.\nThis means that when moving to the left/right, the width will be changed, and when moving to the top/bottom, the height will be changed.\nThis size will cycle between 1/2 -> 2/3 -> 1/3 of the screen’s width/height.\n\nNote that if subsequent execution mode is set to cycle displays when this is enabled, Move Left and Move Right will always resize to 1/2, and pressing it again will move to the next display.\n\n```bash\ndefaults write com.knollsoft.Rectangle resizeOnDirectionalMove -bool true\n```\n\n## Adjust macOS Ventura Stage Manager size\n\nBy default, the Stage Manager area will be set to 190, if enabled.\n\n```bash\ndefaults write com.knollsoft.Rectangle stageSize -float <VALUE>\n```\n\nTo set it to a proportion of your screen's width, set it to a value between 0 and 1.\n\n```bash\ndefaults write com.knollsoft.Rectangle stageSize -float <VALUE_BETWEEN_0_AND_1>\n```\n\n## Enable Todo Mode\n\nSee the [wiki](https://github.com/rxhanson/Rectangle/wiki/Todo-Mode) for more info.\n\n```bash\ndefaults write com.knollsoft.Rectangle todo -int 1\n```\n\n## Only allow drag-to-snap when modifier keys are pressed\n\nModifier keys can be combined by adding the sum of Integer Values together.\n\n| Modifier Key | Integer Value |\n|--------------|---------------|\n| cmd          | 1048576       |\n| option       | 524288        |\n| ctrl         | 262144        |\n| shift        | 131072        |\n| fn           | 8388608       |\n\nThis command would be for restricting snap to the cmd key:\n\n```bash\ndefaults write com.knollsoft.Rectangle snapModifiers -int 1048576\n```\n\n## Almost Maximize\n\nBy default, \"Almost Maximize\" will resize the window to 90% of the screen (width & height).\n\n```bash\ndefaults write com.knollsoft.Rectangle almostMaximizeHeight -float <VALUE_BETWEEN_0_&_1>\n```\n\n```bash\ndefaults write com.knollsoft.Rectangle almostMaximizeWidth -float <VALUE_BETWEEN_0_&_1>\n```\n\n## Add an extra centering command with custom size\n\nThis extra command is not available in the UI. You'll need to know which keycode and modifier flags you want.\n\n```bash\ndefaults write com.knollsoft.Rectangle specified -dict-add keyCode -float 8 modifierFlags -float 1966080\n```\n\n```bash\ndefaults write com.knollsoft.Rectangle specifiedHeight -float 1050\ndefaults write com.knollsoft.Rectangle specifiedWidth -float 1680\n```\n\n## Add an extra centering with prominence command\n\nThere is an extra command that horizontally centers the window but moves up the window vertically slightly from the center to add visual weight. Similar to extra centering you will need to know which keycode and modifier flags you want.\n\nThe key code is:\n\n* centerProminently\n\nFor example, the command for setting the shortcut to `ctrl option command C` would be:\n\n```bash\ndefaults write com.knollsoft.Rectangle centerProminently -dict-add keyCode -float 8 modifierFlags -float 1835305\n```\n\n\n## Add extra \"ninths\" sizing commands\n\nCommands for resizing to screen ninths are not available in the UI.\n\nThe key codes are:\n\n* topLeftNinth\n* topCenterNinth\n* topRightNinth\n* middleLeftNinth\n* middleCenterNinth\n* middleRightNinth\n* bottomLeftNinth\n* bottomCenterNinth\n* bottomRightNinth\n\nFor example, the command for setting the top left ninth shortcut to `ctrl opt shift 1` would be:\n\n```bash\ndefaults write com.knollsoft.Rectangle topLeftNinth -dict-add keyCode -float 18 modifierFlags -float 917504\n```\n\n## Add extra \"eighths\" sizing commands\n\nCommands for resizing to screen eighths are not available in the UI. This divides the screen up into a 4x2 grid.\n\nThe key codes are:\n\n* topLeftEighth\n* topCenterLeftEighth\n* topCenterRightEighth\n* topRightEighth\n* bottomLeftEighth\n* bottomCenterLeftEighth\n* bottomCenterRightEighth\n* bottomRightEighth\n\nFor example, the command for setting the top left eighth shortcut to `ctrl opt shift 1` would be:\n\n```bash\ndefaults write com.knollsoft.Rectangle topLeftEighth -dict-add keyCode -float 18 modifierFlags -float 917504\n```\n\n## Add additional \"thirds\" sizing commands \n\nThese commands for resizing to corner two-thirds are not available in the UI but can be configured via CLI.\n\nThe key codes are:\n\n* topLeftThird\n* topRightThird\n* bottomLeftThird\n* bottomRightThird\n\n(these correspond to two-thirds, and when repeated will cycle through each of the calculations)\n\nFor example, the command for setting the top left two-thirds shortcut to `ctrl opt shift 1` would be:\n\n```bash\ndefaults write com.knollsoft.Rectangle topLeftThird -dict-add keyCode -float 18 modifierFlags -float 917504\n```\n\n## Add doubling/halving window sizing commands\n\nThese commands for doubling/halving the window width/height are not available in the UI but can be configured via CLI. \n\nThe key codes are:\n\n* doubleHeightUp\n* doubleHeightDown\n* doubleWidthLeft\n* doubleWidthRight\n* halveHeightUp\n* halveHeightDown\n* halveWidthLeft\n* halveWidthRight\n\nThe action direction (e.g., \"Right\") is the direction that the center of the window will move towards as a result of resizing. \n\nFor example, the command for setting the doubleWidthRight shortcut to `ctrl option shift right` would be:\n\n```bash\ndefaults write com.knollsoft.Rectangle doubleWidthRight -dict-add keyCode -float 124 modifierFlags -float 11403555\n```\n\n## Add additional tiling and cascading commands\n\nCommands for tiling and cascading the visible windows are not available in the UI but can be configured via CLI.\n\nThe key codes are:\n\n* tileAll\n* cascadeAll\n* cascadeActiveApp\n\n_tileAll_ and _cascadeAll_ act on all visible windows.\n\n_cascadeActiveApp_ cascades and brings to the front only windows belonging to the currently active (foremost) app, leaving all other windows alone.\n\nFor example, the command for setting the cascadeActiveApp shortcut to `ctrl shift 2` would be:\n\n```bash\ndefaults write com.knollsoft.Rectangle cascadeActiveApp -dict-add keyCode -float 2 modifierFlags -float 393475\n```\n\n## Modify the \"footprint\" displayed for drag to snap area\n\nAdjust the alpha (transparency). Default is 0.3.\n\n```bash\ndefaults write com.knollsoft.Rectangle footprintAlpha -float <VALUE_BETWEEN_0_&_1>\n```\n\nChange the border width. Default is 2 (used to be 1).\n\n```bash\ndefaults write com.knollsoft.Rectangle footprintBorderWidth -float <NUM_PIXELS>\n```\n\nDisable the fade.\n\n```bash\ndefaults write com.knollsoft.Rectangle footprintFade -int 2\n```\n\nChange the color.\n\n```bash\ndefaults write com.knollsoft.Rectangle footprintColor -string \"{\\\"red\\\":0,\\\"blue\\\":0.5,\\\"green\\\":0.5}\"\n```\n\nChange the animation duration. The value is a multiplier. Default is 0 (no animation).\n\n```bash\ndefaults write com.knollsoft.Rectangle footprintAnimationDurationMultiplier -float <MULTIPLIER>\n```\n\n## Move Up/Down/Left/Right: Don't center on edge\n\nBy default, the directional move will center the window along the edge that the window is being moved to.\n\n```bash\ndefaults write com.knollsoft.Rectangle centeredDirectionalMove -int 2\n```\n\n## Make Smaller limits\n\nBy default, \"Make Smaller\" will decrease the window until it reaches 25% of the screen (width & height).\n\n```bash\ndefaults write com.knollsoft.Rectangle minimumWindowWidth -float <VALUE_BETWEEN_0_&_1>\n```\n\n```bash\ndefaults write com.knollsoft.Rectangle minimumWindowHeight -float <VALUE_BETWEEN_0_&_1>\n```\n\n## Make Smaller/Make Larger size increments\n\nBy default, \"Make Smaller\" and \"Make Larger\" change the window height/width by 30 pixels.\n\n```bash\ndefaults write com.knollsoft.Rectangle sizeOffset -float <NUM_PIXELS>\n```\n\n## Make Smaller/Make Larger \"curtain resize\" with gaps\n\nBy default, windows touching the edge of the screen will keep those shared edges the same while only resizing the non-shared edge. With window gaps, this is a little ambiguous since the edges don't actually touch the screen, so you can disable it for traditional, floating resizing:\n\n```bash\ndefaults write com.knollsoft.Rectangle curtainChangeSize -int 2\n```\n\n## Make Smaller/Make Larger width only\n\nBy default, \"Make Smaller\" and \"Make Larger\" change both, the window height and the window width. If you only want to change the window width without changing window height, configure shortcuts for the _largerWidth_ and _smallerWidth_ commands.\n\nFor example, if you want to assign `ctrl option ]` to _largerWidth_ and `ctrl option [` to _smallerWidth_, the commands would be:\n\n```bash\ndefaults write com.knollsoft.Rectangle largerWidth -dict-add keyCode -float 30 modifierFlags -float 786432\ndefaults write com.knollsoft.Rectangle smallerWidth -dict-add keyCode -float 33 modifierFlags -float 786432\n```\n\n## Disabling window restore when moving windows\n\n```bash\ndefaults write com.knollsoft.Rectangle unsnapRestore -int 2\n```\n\n## Changing the margin for the snap areas\n\nEach margin is configured separately, and has a default value of 5\n\n```bash\ndefaults write com.knollsoft.Rectangle snapEdgeMarginTop -int 10\ndefaults write com.knollsoft.Rectangle snapEdgeMarginBottom -int 10\ndefaults write com.knollsoft.Rectangle snapEdgeMarginLeft -int 10\ndefaults write com.knollsoft.Rectangle snapEdgeMarginRight -int 10\n```\n\n## Setting gaps at the screen edges\n\nYou can specify gaps at the edges of your screen that will be left uncovered by window resizing operations. This is useful if, for example, you use a dock replacement that should not have windows overlapping it.\n\n```bash\ndefaults write com.knollsoft.Rectangle screenEdgeGapTop -int 10\ndefaults write com.knollsoft.Rectangle screenEdgeGapBottom -int 10\ndefaults write com.knollsoft.Rectangle screenEdgeGapLeft -int 10\ndefaults write com.knollsoft.Rectangle screenEdgeGapRight -int 10\n```\n\nYou can also separately specify the gap for a screen with a notch. Useful for multi display setups if you are using a menubar replacement.\n\n```bash\ndefaults write com.knollsoft.Rectangle screenEdgeGapTopNotch -int 5\n```\n\nIf you want these gaps to be applied on your main screen only you can set screenEdgeGapsOnMainScreenOnly. Useful for multi display setups where only one screen has some dock replacement.\n\n```bash\ndefaults write com.knollsoft.Rectangle screenEdgeGapsOnMainScreenOnly -bool true\n```\n\n## Ignore specific drag to snap areas\n\nEach drag to snap area on the edge of a screen can be ignored with a single Terminal command, but it's a bit field setting so you'll have to determine the bit field for which ones you want to disable.\n\n| Bit | Snap Area                 | Window Action       |\n|-----|---------------------------|---------------------|\n| 0   | Top                       | Maximize            |\n| 1   | Bottom                    | Thirds              |\n| 2   | Left                      | Left Half           |\n| 3   | Right                     | Right Half          |\n| 4   | Top Left                  | Top Left Corner     |\n| 5   | Top Right                 | Top Right Corner    |\n| 6   | Bottom Left               | Bottom Left Corner  |\n| 7   | Bottom Right              | Bottom Right Corner |\n| 8   | Top Left Below Corner     | Top Half            |\n| 9   | Top Right Below Corner    | Top Half            |\n| 10  | Bottom Left Above Corner  | Bottom Half         |\n| 11  | Bottom Right Above Corner | Bottom Half         |\n\nTo disable the top (maximize) snap area, execute:\n\n```bash\ndefaults write com.knollsoft.Rectangle ignoredSnapAreas -int 1\n```\n\nTo disable the Top Half and Bottom Half snap areas, the bit field would be 1111 0000 0000, or 3840\n\n```bash\ndefaults write com.knollsoft.Rectangle ignoredSnapAreas -int 3840\n```\n\n## Disabling gaps when maximizing\n\nBy default, the \"Gaps between windows\" setting applies to \"Maximize\" and \"Maximize Height\".\n\nTo disable the gaps for \"Maximize\", execute:\n\n```bash\ndefaults write com.knollsoft.Rectangle applyGapsToMaximize -int 2\n```\n\nTo disable the gaps for \"Maximize Height\", execute:\n\n```bash\ndefaults write com.knollsoft.Rectangle applyGapsToMaximizeHeight -int 2\n```\n\n## Enabling snap areas for sixths\n\nTo enable snap areas for sixths corners, execute: \n\n```bash\ndefaults write com.knollsoft.Rectangle sixthsSnapArea -bool true\n```\n\nOnce enabled, you can drag a window to the corner, then move it along the edge towards the thirds area to snap to a sixth.\n\n## Move cursor with window\n\nThere's an option in the UI for moving the cursor with the window when going across displays, but here's an option for moving it with any shortcut:\n\n```bash\ndefaults write com.knollsoft.Rectangle moveCursor -int 1\n```\n\n## Prevent a window that is quickly dragged above the menu bar from going into Mission Control\n\nImportant: This can cause issues with dragging and dropping in certain apps like Adobe Illustrator, and can affect text selection in a select few apps as well. \n\nWindows that are slowly moved above the menu bar will still go into Mission Control.\n\nOnce this is enabled, the checkbox for it is visible in the Snap Areas tab of the Preferences window.\n\n```bash\ndefaults write com.knollsoft.Rectangle missionControlDragging -int 2\n```\n\nChange the allowed off-screen distance. The value is in pixels and is tied to the speed. Default is 25.\n\n```bash\ndefaults write com.knollsoft.Rectangle missionControlDraggingAllowedOffscreenDistance -float <DISTANCE>\n```\n\nChange the disallowed duration. The value is in milliseconds. Default is 250.\n\n```bash\ndefaults write com.knollsoft.Rectangle missionControlDraggingDisallowedDuration -int <DURATION>\n```\n\n## Change the behavior of double-click window title bar\n\nTo change the action ([list](https://github.com/rxhanson/Rectangle/blob/master/Rectangle/WindowAction.swift)):\n\n```bash\ndefaults write com.knollsoft.Rectangle doubleClickTitleBar -int <ACTION_ID + 1>\n```\n\nTo disable restore when double-clicked again:\n\n```bash\ndefaults write com.knollsoft.Rectangle doubleClickTitleBarRestore -int 2\n```\n\nTo disable double-click window title bar only for specific bundle ids (in example, Outlook):\n\n```bash\ndefaults write com.knollsoft.Rectangle doubleClickTitleBarIgnoredApps -string \"[\\\"com.microsoft.Outlook\\\"]\"\n```\n"
        }
      ]
    }
  ]
}