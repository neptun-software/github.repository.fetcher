{
  "metadata": {
    "timestamp": 1736557401670,
    "page": 401,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Kong/kong",
      "stars": 39736,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bazelignore",
          "type": "blob",
          "size": 0.69,
          "content": "# NB: sematics here are not the same as .gitignore\n# see https://github.com/bazelbuild/bazel/issues/8106\n# Ignore backup files.\n*~\n# Ignore Vim swap files.\n.*.swp\n# Ignore files generated by IDEs.\n/.aswb/\n/.cache/\n/.classpath\n/.clwb/\n/.factorypath\n/.idea/\n/.ijwb/\n/.project\n/.settings\n/.vscode/\n/bazel.iml\n# Ignore all bazel-* symlinks. There is no full list since this can change\n# based on the name of the directory bazel is cloned into.\n/bazel-*\n# Ignore outputs generated during Bazel bootstrapping.\n/output/\n# Ignore jekyll build output.\n/production\n/.sass-cache\n# Bazelisk version file\n.bazelversion\n# User-specific .bazelrc\nuser.bazelrc\n\n/t/\n/spec/\n/spec-ee/\n/servroot/\n/autodoc/\n/.github/\n\n.DS_Store\n"
        },
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 1.71,
          "content": "# Bazel doesn't need more than 200MB of memory for local build based on memory profiling:\n# https://docs.bazel.build/versions/master/skylark/performance.html#memory-profiling\n# The default JVM max heapsize is 1/4 of physical memory up to 32GB which could be large\n# enough to consume all memory constrained by cgroup in large host.\n# Limiting JVM heapsize here to let it do GC more when approaching the limit to\n# leave room for compiler/linker.\n# The number 3G is chosen heuristically to both support large VM and small VM with RBE.\n# Startup options cannot be selected via config.\nstartup --host_jvm_args=-Xmx512m\n\nrun --color=yes\n\ncommon --color=yes\ncommon --curses=auto\n\n# TODO: remove after bump to bazel >= 8\ncommon --enable_workspace\n\nbuild --experimental_ui_max_stdouterr_bytes=10485760\n\nbuild --show_progress_rate_limit=0\nbuild --show_timestamps\nbuild --worker_verbose\n\nbuild --incompatible_strict_action_env\n\n# make output files and directories 0755 instead of 0555\nbuild --experimental_writable_outputs\n\n\n# Pass PATH, CC, CXX variables from the environment.\nbuild --action_env=CC --host_action_env=CC\nbuild --action_env=CXX --host_action_env=CXX\nbuild --action_env=PATH --host_action_env=PATH\n\n# temporary fix for https://github.com/bazelbuild/bazel/issues/12905 on macOS\nbuild --features=-debug_prefix_map_pwd_is_dot\n\n# Build flags.\nbuild --action_env=BUILD_NAME=kong-dev\nbuild --action_env=INSTALL_DESTDIR=MANAGED\nbuild --strip=never\n\n# Release flags\nbuild:release --//:debug=false\nbuild:release --//:licensing=true\nbuild:release --action_env=BUILD_NAME=kong-dev\nbuild:release --action_env=INSTALL_DESTDIR=/usr/local\nbuild:release --compilation_mode=opt\nbuild:release --copt=\"-g\"\nbuild:release --strip=never\n\nbuild --spawn_strategy=local\n\n"
        },
        {
          "name": ".bazelversion",
          "type": "blob",
          "size": 0.01,
          "content": "7.3.1\n"
        },
        {
          "name": ".busted",
          "type": "blob",
          "size": 0.19,
          "content": "return {\n  default = {\n    lpath = \"./?.lua;./?/init.lua;\",\n    -- make setup() and teardown() behave like their lazy_ variants\n    lazy = true,\n    helper = \"./spec/busted-ci-helper.lua\",\n  }\n}\n"
        },
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.66,
          "content": "root                     = true\n\n[*]\nend_of_line              = lf\ninsert_final_newline     = true\ntrim_trailing_whitespace = true\ncharset                  = utf-8\n\n[*.lua]\nindent_style             = space\nindent_size              = 2\n\n[kong/templates/nginx*]\nindent_style             = space\nindent_size              = 4\n\n[*.template]\nindent_style             = space\nindent_size              = 4\n\n[Makefile]\nindent_style             = tab\n\n[bin/kong]\nindent_style             = space\nindent_size              = 2\n\n[bin/busted]\nindent_style             = space\nindent_size              = 2\n\n[bin/kong-health]\nindent_style             = space\nindent_size              = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.49,
          "content": ".DS_Store\n.vagrant/\n.buildpath\n.project\n.idea\n.env\n.vscode\n.VSCodeCounter\n\nservroot*\nmockserver\n\n# kong\nnginx_tmp/\nkong*.yml\n\n# luacov\nluacov.*\n/doc\n\n# autodoc\nautodoc/output\n\n# ldoc\nspec/docs\n\nkong-build-tools\nbin/grpcurl\n\n*.so\n*.bak\n*.rock\n\nworktree/\nbin/bazel\nbin/h2client\n\n# wasm\n*.wasm\nspec/fixtures/proxy_wasm_filters/build\nspec/fixtures/proxy_wasm_filters/target\n\n# bazel\nbazel-*\n# remove it after migrating from WORKSPACE to Bzlmod\nMODULE.bazel.lock\nspec/fixtures/external_plugins/go/go-hello\n"
        },
        {
          "name": ".luacheckrc",
          "type": "blob",
          "size": 1.08,
          "content": "std             = \"ngx_lua\"\nunused_args     = false\nredefined       = false\nmax_line_length = false\n\n\nglobals = {\n    \"_KONG\",\n    \"kong\",\n    \"ngx.IS_CLI\",\n}\n\n\nnot_globals = {\n    \"string.len\",\n    \"table.getn\",\n}\n\n\nignore = {\n    \"6.\", -- ignore whitespace warnings\n}\n\n\nexclude_files = {\n    \"spec/fixtures/invalid-module.lua\",\n    \"spec-old-api/fixtures/invalid-module.lua\",\n    \"bazel-bin\",\n    \"bazel-out\",\n    \"bazel-kong\",\n}\n\nfiles[\"kong/tools/sandbox/kong.lua\"] = {\n     read_globals = {\n        \"_ENV\",\n        \"table.pack\",\n        \"table.unpack\",\n     }\n}\n\n\nfiles[\"kong/hooks.lua\"] = {\n    read_globals = {\n        \"table.pack\",\n        \"table.unpack\",\n    }\n}\n\n\nfiles[\"kong/db/schema/entities/workspaces.lua\"] = {\n    read_globals = {\n        \"table.unpack\",\n    }\n}\n\n\nfiles[\"kong/plugins/ldap-auth/*.lua\"] = {\n    read_globals = {\n        \"bit.mod\",\n        \"string.pack\",\n        \"string.unpack\",\n    },\n}\n\n\nfiles[\"spec/**/*.lua\"] = {\n    std = \"ngx_lua+busted\",\n}\n\nfiles[\"**/*_test.lua\"] = {\n    std = \"ngx_lua+busted\",\n}\n\nfiles[\"spec-old-api/**/*.lua\"] = {\n    std = \"ngx_lua+busted\",\n}\n"
        },
        {
          "name": ".luacov",
          "type": "blob",
          "size": 0.18,
          "content": "return {\n\n  includeuntestedfiles = {\n    \"kong/\",\n  },\n  runreport = true,\n\n  include = {\n    \"kong$\",\n    \"kong%/.+$\",\n  },\n\n  exclude = {\n    \"bazel%-bin/build\",\n    \"^spec/\",\n  }\n\n}\n"
        },
        {
          "name": ".requirements",
          "type": "blob",
          "size": 1.35,
          "content": "KONG_PACKAGE_NAME=kong\n\nOPENRESTY=1.25.3.2\nOPENRESTY_SHA256=2d564022b06e33b45f7e5cfaf1e5dc571d38d61803af9fa2754dfff353c28d9c\nLUAROCKS=3.11.1\nLUAROCKS_SHA256=c3fb3d960dffb2b2fe9de7e3cb004dc4d0b34bb3d342578af84f84325c669102\nOPENSSL=3.2.3\nOPENSSL_SHA256=52b5f1c6b8022bc5868c308c54fb77705e702d6c6f4594f99a0df216acf46239\nPCRE=10.44\nPCRE_SHA256=86b9cb0aa3bcb7994faa88018292bc704cdbb708e785f7c74352ff6ea7d3175b\nADA=2.9.2\nADA_SHA256=b2cce630590b490d79ea4f4460ba77efd5fb29c5a87a4e8cb7ebc4859bc4b564\nLIBEXPAT=2.6.2\nLIBEXPAT_SHA256=d4cf38d26e21a56654ffe4acd9cd5481164619626802328506a2869afab29ab3\n\n# Note: git repositories can be loaded from local path if path is set as value\n\nLUA_KONG_NGINX_MODULE=c967e8326179c86680c0f34d82ee087765aed19a # 0.15.0\nLUA_RESTY_LMDB=9da0e9f3313960d06e2d8e718b7ac494faa500f1 # 1.6.0\nLUA_RESTY_EVENTS=bc85295b7c23eda2dbf2b4acec35c93f77b26787 # 0.3.1\nLUA_RESTY_SIMDJSON=7e6466ce91b2bc763b45701a4f055e94b1e8143b # 1.1.0\nLUA_RESTY_WEBSOCKET=966c69c39f03029b9b42ec0f8e55aaed7d6eebc0 # 0.4.0.1\nATC_ROUTER=ffd11db657115769bf94f0c4f915f98300bc26b6 # 1.6.2\nSNAPPY=23b3286820105438c5dbb9bc22f1bb85c5812c8a # 1.2.0\n\nKONG_MANAGER=nightly\nNGX_WASM_MODULE=9136e463a6f1d80755ce66c88c3ddecd0eb5e25d\nWASMER=3.1.1\nWASMTIME=26.0.0\nV8=12.0.267.17\n\nNGX_BROTLI=a71f9312c2deb28875acc7bacfdd5695a111aa53 # master branch of Oct 9, 2023\nBROTLI=ed738e842d2fbdf2d6459e39267a633c4a9b2f5d # 1.1.0\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 6.99,
          "content": "load(\"@bazel_skylib//lib:selects.bzl\", \"selects\")\nload(\"@bazel_skylib//rules:common_settings.bzl\", \"bool_flag\", \"string_flag\")\nload(\"//build/nfpm:rules.bzl\", \"nfpm_pkg\")\nload(\"//build/toolchain:managed_toolchain.bzl\", \"aarch64_glibc_distros\")\n\nfilegroup(\n    name = \"distribution_srcs\",\n    srcs = glob([\"distribution/**\"]),\n    visibility = [\"//visibility:public\"],\n)\n\nfilegroup(\n    name = \"rockspec_srcs\",\n    srcs = glob([\n        \"kong/**\",\n        \"*.rockspec\",\n    ]),\n    visibility = [\"//visibility:public\"],\n)\n\nfilegroup(\n    name = \"plugins_ee_rockspec_srcs\",\n    srcs = glob([\"plugins-ee/**/*.rockspec\"]),\n    visibility = [\"//visibility:public\"],\n)\n\nnfpm_env = {\n    \"KONG_NAME\": \"kong\",\n    \"KONG_REPLACES_1\": \"kong-community-edition\",\n    \"KONG_REPLACES_2\": \"kong-enterprise-edition-fips\",\n    \"KONG_CONFLICTS_1\": \"kong-community-edition\",\n    \"KONG_CONFLICTS_2\": \"kong-enterprise-edition-fips\",\n}\n\nnfpm_pkg(\n    name = \"kong_deb\",\n    config = \"//build:package/nfpm.yaml\",\n    env = nfpm_env,\n    packager = \"deb\",\n    pkg_name = \"kong\",\n    visibility = [\"//visibility:public\"],\n)\n\nnfpm_pkg(\n    name = \"kong_el9\",\n    config = \"//build:package/nfpm.yaml\",\n    env = nfpm_env,\n    packager = \"rpm\",\n    pkg_name = \"kong.el9\",\n    visibility = [\"//visibility:public\"],\n)\n\nnfpm_pkg(\n    name = \"kong_el8\",\n    config = \"//build:package/nfpm.yaml\",\n    env = nfpm_env,\n    packager = \"rpm\",\n    pkg_name = \"kong.el8\",\n    visibility = [\"//visibility:public\"],\n)\n\nnfpm_pkg(\n    name = \"kong_aws2\",\n    config = \"//build:package/nfpm.yaml\",\n    env = nfpm_env,\n    extra_env = {\n        \"RPM_EXTRA_DEPS\": \"/usr/sbin/useradd\",\n        \"RPM_EXTRA_DEPS_2\": \"/usr/sbin/groupadd\",\n    },\n    packager = \"rpm\",\n    pkg_name = \"kong.aws2\",\n    visibility = [\"//visibility:public\"],\n)\n\nnfpm_pkg(\n    name = \"kong_aws2023\",\n    config = \"//build:package/nfpm.yaml\",\n    env = nfpm_env,\n    extra_env = {\n        \"RPM_EXTRA_DEPS\": \"/usr/sbin/useradd\",\n        \"RPM_EXTRA_DEPS_2\": \"/usr/sbin/groupadd\",\n        \"RPM_EXTRA_DEPS_3\": \"libxcrypt-compat\",\n    },\n    packager = \"rpm\",\n    pkg_name = \"kong.aws2023\",\n    visibility = [\"//visibility:public\"],\n)\n\n###### flags\n\n# --//:debug=true\nbool_flag(\n    name = \"debug\",\n    build_setting_default = True,\n)\n\nconfig_setting(\n    name = \"debug_flag\",\n    flag_values = {\n        \":debug\": \"true\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\nconfig_setting(\n    name = \"debug_linux_flag\",\n    constraint_values = [\n        \"@platforms//os:linux\",\n    ],\n    flag_values = {\n        \":debug\": \"true\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\n# --//:brotli=true\nbool_flag(\n    name = \"brotli\",\n    build_setting_default = True,\n)\n\nconfig_setting(\n    name = \"brotli_flag\",\n    flag_values = {\n        \":brotli\": \"true\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\n# --//:simdjson=true\nbool_flag(\n    name = \"simdjson\",\n    build_setting_default = True,\n)\n\nconfig_setting(\n    name = \"simdjson_flag\",\n    flag_values = {\n        \":simdjson\": \"true\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\n# --//:licensing=false\nbool_flag(\n    name = \"licensing\",\n    build_setting_default = False,\n)\n\nconfig_setting(\n    name = \"licensing_flag\",\n    flag_values = {\n        \":licensing\": \"true\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\n# --//:fips=false\nbool_flag(\n    name = \"fips\",\n    build_setting_default = False,\n)\n\nconfig_setting(\n    name = \"fips_flag\",\n    flag_values = {\n        \":fips\": \"true\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\n# --//:skip_webui=false\nbool_flag(\n    name = \"skip_webui\",\n    build_setting_default = False,\n)\n\nconfig_setting(\n    name = \"skip_webui_flags\",\n    flag_values = {\n        \":skip_webui\": \"true\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\n# --//:wasmx=true\nbool_flag(\n    name = \"wasmx\",\n    build_setting_default = True,\n    visibility = [\"//visibility:public\"],\n)\n\n# --//:wasmx_module_flag=dynamic\nstring_flag(\n    name = \"wasmx_module_flag\",\n    build_setting_default = \"dynamic\",\n    values = [\n        \"dynamic\",\n        \"static\",\n    ],\n)\n\nconfig_setting(\n    name = \"wasmx_flag\",\n    flag_values = {\n        \":wasmx\": \"true\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\nconfig_setting(\n    name = \"wasmx_static_mod\",\n    flag_values = {\n        \":wasmx\": \"true\",\n        \":wasmx_module_flag\": \"static\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\nconfig_setting(\n    name = \"wasmx_dynamic_mod\",\n    flag_values = {\n        \":wasmx\": \"true\",\n        \":wasmx_module_flag\": \"dynamic\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\n# --//:wasm_runtime=wasmtime\nstring_flag(\n    name = \"wasm_runtime\",\n    build_setting_default = \"wasmtime\",\n    values = [\n        \"v8\",\n        \"wasmer\",\n        \"wasmtime\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\n# --//:skip_tools=false\nbool_flag(\n    name = \"skip_tools\",\n    build_setting_default = False,\n)\n\nconfig_setting(\n    name = \"skip_tools_flag\",\n    flag_values = {\n        \":skip_tools\": \"true\",\n    },\n    visibility = [\"//visibility:public\"],\n)\n\n##### constraints, platforms and config_settings for cross-compile\n\nconstraint_setting(name = \"cross_build_setting\")\n\nconstraint_value(\n    name = \"cross_build\",\n    constraint_setting = \":cross_build_setting\",\n)\n\n# platform sets the constraint values based on user input (--platform=//:PLATFOTM)\nplatform(\n    name = \"generic-crossbuild-x86_64\",\n    constraint_values = [\n        \"@platforms//os:linux\",\n        \"@platforms//cpu:x86_64\",\n        \"//build/platforms/distro:generic\",\n        \":cross_build\",\n    ],\n)\n\nplatform(\n    name = \"generic-crossbuild-aarch64\",\n    constraint_values = [\n        \"@platforms//os:linux\",\n        \"@platforms//cpu:aarch64\",\n        \"//build/platforms/distro:generic\",\n        \":cross_build\",\n    ],\n)\n\n[\n    platform(\n        name = vendor + \"-crossbuild-aarch64\",\n        constraint_values = [\n            \"@platforms//os:linux\",\n            \"@platforms//cpu:aarch64\",\n            \"//build/platforms/distro:\" + vendor,\n            \":cross_build\",\n        ],\n    )\n    for vendor in aarch64_glibc_distros\n]\n\nplatform(\n    name = \"aws2-crossbuild-x86_64\",\n    constraint_values = [\n        \"@platforms//os:linux\",\n        \"@platforms//cpu:x86_64\",\n        \"//build/platforms/distro:aws2\",\n        \":cross_build\",\n    ],\n)\n\n# config_settings define a select() condition based on user-set constraint_values\n# see https://bazel.build/docs/configurable-attributes\nconfig_setting(\n    name = \"aarch64-linux-glibc-cross\",\n    constraint_values = [\n        \"@platforms//os:linux\",\n        \"@platforms//cpu:aarch64\",\n        \":cross_build\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\nconfig_setting(\n    name = \"x86_64-linux-glibc-cross\",\n    constraint_values = [\n        \"@platforms//os:linux\",\n        \"@platforms//cpu:x86_64\",\n        \":cross_build\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\nselects.config_setting_group(\n    # matches all cross build platforms\n    name = \"any-cross\",\n    match_any = [\n        \":aarch64-linux-glibc-cross\",\n        \":x86_64-linux-glibc-cross\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n"
        },
        {
          "name": "CHANGELOG-OLD.md",
          "type": "blob",
          "size": 326.74,
          "content": "# Table of Contents\n\nLooking for recent releases? Please see [CHANGELOG.md](CHANGELOG.md) instead.\n\n- [2.8.5](#285)\n- [2.8.4](#284)\n- [2.8.3](#283)\n- [2.8.2](#282)\n- [2.8.1](#281)\n- [2.8.0](#280)\n- [2.7.1](#271)\n- [2.7.0](#270)\n- [2.6.0](#260)\n- [2.5.1](#251)\n- [2.5.0](#250)\n- [2.4.1](#241)\n- [2.4.0](#240)\n- [2.3.3](#233)\n- [2.3.2](#232)\n- [2.3.1](#231)\n- [2.3.0](#230)\n- [2.2.2](#222)\n- [2.2.1](#221)\n- [2.2.0](#220)\n- [2.1.4](#214)\n- [2.1.3](#213)\n- [2.1.2](#212)\n- [2.1.1](#211)\n- [2.1.0](#210)\n- [2.0.5](#205)\n- [2.0.4](#204)\n- [2.0.3](#203)\n- [2.0.2](#202)\n- [2.0.1](#201)\n- [2.0.0](#200)\n- [1.5.1](#151)\n- [1.5.0](#150)\n- [1.4.3](#143)\n- [1.4.2](#142)\n- [1.4.1](#141)\n- [1.4.0](#140)\n- [1.3.0](#130)\n- [1.2.2](#122)\n- [1.2.1](#121)\n- [1.2.0](#120)\n- [1.1.2](#112)\n- [1.1.1](#111)\n- [1.1.0](#110)\n- [1.0.3](#103)\n- [1.0.2](#102)\n- [1.0.1](#101)\n- [1.0.0](#100)\n- [0.15.0](#0150)\n- [0.14.1](#0141)\n- [0.14.0](#0140---20180705)\n- [0.13.1](#0131---20180423)\n- [0.13.0](#0130---20180322)\n- [0.12.3](#0123---20180312)\n- [0.12.2](#0122---20180228)\n- [0.12.1](#0121---20180118)\n- [0.12.0](#0120---20180116)\n- [0.11.2](#0112---20171129)\n- [0.11.1](#0111---20171024)\n- [0.10.4](#0104---20171024)\n- [0.11.0](#0110---20170816)\n- [0.10.3](#0103---20170524)\n- [0.10.2](#0102---20170501)\n- [0.10.1](#0101---20170327)\n- [0.10.0](#0100---20170307)\n- [0.9.9 and prior](#099---20170202)\n\n## [2.8.5]\n\n### Kong\n\n#### Performance\n##### Performance\n\n- Fixed an inefficiency issue in the Luajit hashing algorithm\n [#13269](https://github.com/Kong/kong/issues/13269)\n\n\n#### Fixes\n##### Default\n\n- Added zlib1g-dev dependency to Ubuntu packages.\n [#13269](https://github.com/Kong/kong/issues/13269)\n\n\n## [2.8.4]\n\n### Fixes\n\n- Fixed a bug where internal redirects (i.e. those produced by the error_page directive) could interfere with worker process handling the request when buffered proxying is being used.\n\n## [2.8.3]\n\n### Fixes\n\n##### Plugins\n\n- **HTTP Log**: fix internal error during validating the schema if http_endpoint contains\n  userinfo but headers is empty [#9574](https://github.com/Kong/kong/pull/9574)\n- Update the batch queues module so that queues no longer grow without bounds if\n  their consumers fail to process the entries.  Instead, old batches are now dropped\n  and an error is logged.\n  [#10247](https://github.com/Kong/kong/pull/10247)\n\n##### CLI\n\n- Fixed a packaging problem affecting a subset of releases where the `kong version`\n  command was incorrect\n\n## [2.8.2]\n\n### Dependencies\n\n- Bumped `OpenSSL` from 1.1.1n to 1.1.1o\n  [#8635](https://github.com/Kong/kong/pull/8809)\n\n## [2.8.1]\n\n### Dependencies\n\n- Bumped lua-resty-healthcheck from 1.5.0 to 1.5.1\n  [#8584](https://github.com/Kong/kong/pull/8584)\n- Bumped `OpenSSL` from 1.1.1l to 1.1.1n\n  [#8635](https://github.com/Kong/kong/pull/8635)\n\n### Fixes\n\n#### Core\n\n- Only reschedule router and plugin iterator timers after finishing previous\n  execution, avoiding unnecessary concurrent executions.\n  [#8634](https://github.com/Kong/kong/pull/8634)\n- Implements conditional rebuilding of router, plugins iterator and balancer on\n  data planes. This means that DPs will not rebuild router if there were no\n  changes in routes or services. Similarly, the plugins iterator will not be\n  rebuilt if there were no changes to plugins, and, finally, the balancer will not be\n  reinitialized if there are no changes to upstreams or targets.\n  [#8639](https://github.com/Kong/kong/pull/8639)\n\n\n## [2.8.0]\n\n### Deprecations\n\n- The external [go-pluginserver](https://github.com/Kong/go-pluginserver) project\nis considered deprecated in favor of the embedded server approach described in\nthe [docs](https://docs.konghq.com/gateway/2.7.x/reference/external-plugins/).\n\n### Dependencies\n\n- OpenSSL bumped to 1.1.1m\n  [#8191](https://github.com/Kong/kong/pull/8191)\n- Bumped resty.session from 3.8 to 3.10\n  [#8294](https://github.com/Kong/kong/pull/8294)\n- Bumped lua-resty-openssl to 0.8.5\n  [#8368](https://github.com/Kong/kong/pull/8368)\n\n### Additions\n\n#### Core\n\n- Customizable transparent dynamic TLS SNI name.\n  Thanks, [@zhangshuaiNB](https://github.com/zhangshuaiNB)!\n  [#8196](https://github.com/Kong/kong/pull/8196)\n- Routes now support matching headers with regular expressions\n  Thanks, [@vanhtuan0409](https://github.com/vanhtuan0409)!\n  [#6079](https://github.com/Kong/kong/pull/6079)\n\n#### Beta\n\n- Secrets Management and Vault support as been introduced as a Beta feature.\n  This means it is intended for testing in staging environments. It not intended\n  for use in Production environments.\n  You can read more about Secrets Management in\n  [our docs page](https://docs.konghq.com/gateway/latest/plan-and-deploy/security/secrets-management/backends-overview).\n  [#8403](https://github.com/Kong/kong/pull/8403)\n\n#### Performance\n\n- Improved the calculation of declarative configuration hash for big configurations\n  The new method is faster and uses less memory\n  [#8204](https://github.com/Kong/kong/pull/8204)\n- Multiple improvements in the Router. Amongst others:\n  - The router builds twice as fast compared to prior Kong versions\n  - Failures are cached and discarded faster (negative caching)\n  - Routes with header matching are cached\n  These changes should be particularly noticeable when rebuilding on db-less environments\n  [#8087](https://github.com/Kong/kong/pull/8087)\n  [#8010](https://github.com/Kong/kong/pull/8010)\n- **Prometheus** plugin export performance is improved, it now has less impact to proxy\n  side traffic when being scrapped.\n  [#9028](https://github.com/Kong/kong/pull/9028)\n\n#### Plugins\n\n- **Response-ratelimiting**: Redis ACL support,\n  and genenarized Redis connection support for usernames.\n  Thanks, [@27ascii](https://github.com/27ascii) for the original contribution!\n  [#8213](https://github.com/Kong/kong/pull/8213)\n- **ACME**: Add rsa_key_size config option\n  Thanks, [lodrantl](https://github.com/lodrantl)!\n  [#8114](https://github.com/Kong/kong/pull/8114)\n- **Prometheus**: Added gauges to track `ngx.timer.running_count()` and\n  `ngx.timer.pending_count()`\n  [#8387](https://github.com/Kong/kong/pull/8387)\n\n#### Clustering\n\n- `CLUSTERING_MAX_PAYLOAD` is now configurable in kong.conf\n  Thanks, [@andrewgkew](https://github.com/andrewgkew)!\n  [#8337](https://github.com/Kong/kong/pull/8337)\n\n#### Admin API\n\n- The current declarative configuration hash is now returned by the `status`\n  endpoint when Kong node is running in dbless or data-plane mode.\n  [#8214](https://github.com/Kong/kong/pull/8214)\n  [#8425](https://github.com/Kong/kong/pull/8425)\n\n### Fixes\n\n#### Core\n\n- When the Router encounters an SNI FQDN with a trailing dot (`.`),\n  the dot will be ignored, since according to\n  [RFC-3546](https://datatracker.ietf.org/doc/html/rfc3546#section-3.1)\n  said dot is not part of the hostname.\n  [#8269](https://github.com/Kong/kong/pull/8269)\n- Fixed a bug in the Router that would not prioritize the routes with\n  both a wildcard and a port (`route.*:80`) over wildcard-only routes (`route.*`),\n  which have less specificity\n  [#8233](https://github.com/Kong/kong/pull/8233)\n- The internal DNS client isn't confused by the single-dot (`.`) domain\n  which can appear in `/etc/resolv.conf` in special cases like `search .`\n  [#8307](https://github.com/Kong/kong/pull/8307)\n- Cassandra connector now records migration consistency level.\n  Thanks, [@mpenick](https://github.com/mpenick)!\n  [#8226](https://github.com/Kong/kong/pull/8226)\n\n#### Balancer\n\n- Targets keep their health status when upstreams are updated.\n  [#8394](https://github.com/Kong/kong/pull/8394)\n- One debug message which was erroneously using the `error` log level\n  has been downgraded to the appropiate `debug` log level.\n  [#8410](https://github.com/Kong/kong/pull/8410)\n\n#### Clustering\n\n- Replaced cryptic error message with more useful one when\n  there is a failure on SSL when connecting with CP:\n  [#8260](https://github.com/Kong/kong/pull/8260)\n\n#### Admin API\n\n- Fix incorrect `next` field in when paginating Upstreams\n  [#8249](https://github.com/Kong/kong/pull/8249)\n\n#### PDK\n\n- Phase names are correctly selected when performing phase checks\n  [#8208](https://github.com/Kong/kong/pull/8208)\n- Fixed a bug in the go-PDK where if `kong.request.getrawbody` was\n  big enough to be buffered into a temporary file, it would return an\n  an empty string.\n  [#8390](https://github.com/Kong/kong/pull/8390)\n\n#### Plugins\n\n- **External Plugins**: Fixed incorrect handling of the Headers Protobuf Structure\n  and representation of null values, which provoked an error on init with the go-pdk.\n  [#8267](https://github.com/Kong/kong/pull/8267)\n- **External Plugins**: Unwrap `ConsumerSpec` and `AuthenticateArgs`.\n  Thanks, [@raptium](https://github.com/raptium)!\n  [#8280](https://github.com/Kong/kong/pull/8280)\n- **External Plugins**: Fixed a problem in the stream subsystem would attempt to load\n  HTTP headers.\n  [#8414](https://github.com/Kong/kong/pull/8414)\n- **CORS**: The CORS plugin does not send the `Vary: Origin` header any more when\n  the header `Access-Control-Allow-Origin` is set to `*`.\n  Thanks, [@jkla-dr](https://github.com/jkla-dr)!\n  [#8401](https://github.com/Kong/kong/pull/8401)\n- **AWS-Lambda**: Fixed incorrect behavior when configured to use an http proxy\n  and deprecated the `proxy_scheme` config attribute for removal in 3.0\n  [#8406](https://github.com/Kong/kong/pull/8406)\n- **oauth2**: The plugin clears the `X-Authenticated-UserId` and\n  `X-Authenticated-Scope` headers when it configured in logical OR and\n  is used in conjunction with another authentication plugin.\n  [#8422](https://github.com/Kong/kong/pull/8422)\n- **Datadog**: The plugin schema now lists the default values\n  for configuration options in a single place instead of in two\n  separate places.\n  [#8315](https://github.com/Kong/kong/pull/8315)\n\n\n## [2.7.1]\n\n### Fixes\n\n- Reschedule resolve timer only when the previous one has finished.\n  [#8344](https://github.com/Kong/kong/pull/8344)\n- Plugins, and any entities implemented with subchemas, now can use the `transformations`\n  and `shorthand_fields` properties, which were previously only available for non-subschema entities.\n  [#8146](https://github.com/Kong/kong/pull/8146)\n\n## [2.7.0]\n\n### Dependencies\n\n- Bumped `kong-plugin-session` from 0.7.1 to 0.7.2\n  [#7910](https://github.com/Kong/kong/pull/7910)\n- Bumped `resty.openssl` from 0.7.4 to 0.7.5\n  [#7909](https://github.com/Kong/kong/pull/7909)\n- Bumped `go-pdk` used in tests from v0.6.0 to v0.7.1 [#7964](https://github.com/Kong/kong/pull/7964)\n- Cassandra support is deprecated with 2.7 and will be fully removed with 4.0.\n\n### Additions\n\n#### Configuration\n\n-  Deprecated the `worker_consistency` directive, and changed its default to `eventual`. Future versions of Kong will remove the option and act with `eventual` consistency only.\n\n#### Performance\n\nIn this release we continued our work on better performance:\n\n- Improved the plugin iterator performance and JITability\n  [#7912](https://github.com/Kong/kong/pull/7912)\n  [#7979](https://github.com/Kong/kong/pull/7979)\n- Simplified the Kong core context read and writes for better performance\n  [#7919](https://github.com/Kong/kong/pull/7919)\n- Reduced proxy long tail latency while reloading DB-less config\n  [#8133](https://github.com/Kong/kong/pull/8133)\n\n#### Core\n\n- DAOs in plugins must be listed in an array, so that their loading order is explicit. Loading them in a\n  hash-like table is now **deprecated**.\n  [#7942](https://github.com/Kong/kong/pull/7942)\n- Postgres credentials `pg_user` and `pg_password`, and `pg_ro_user` and `pg_ro_password` now support\n  automatic secret rotation when used together with\n  [Kong Secrets Management](https://docs.konghq.com/gateway/latest/plan-and-deploy/security/secrets-management/)\n  vault references.\n  [#8967](https://github.com/Kong/kong/pull/8967)\n\n#### PDK\n\n- New functions: `kong.response.get_raw_body` and `kong.response.set_raw_body`\n  [#7887](https://github.com/Kong/kong/pull/7877)\n\n#### Plugins\n\n- **IP-Restriction**: response status and message can now be customized\n  through configurations `status` and `message`.\n  [#7728](https://github.com/Kong/kong/pull/7728)\n  Thanks [timmkelley](https://github.com/timmkelley) for the patch!\n- **Datadog**: add support for the `distribution` metric type.\n  [#6231](https://github.com/Kong/kong/pull/6231)\n  Thanks [onematchfox](https://github.com/onematchfox) for the patch!\n- **Datadog**: allow service, consumer, and status tags to be customized through\n  plugin configurations `service_tag`, `consumer_tag`, and `status_tag`.\n  [#6230](https://github.com/Kong/kong/pull/6230)\n  Thanks [onematchfox](https://github.com/onematchfox) for the patch!\n- **gRPC Gateway** and **gRPC Web**: Now share most of the ProtoBuf definitions.\n  Both plugins now share the Timestamp transcoding and included `.proto` files features.\n  [#7950](https://github.com/Kong/kong/pull/7950)\n- **gRPC Gateway**: processes services and methods defined in imported\n  `.proto` files.\n  [#8107](https://github.com/Kong/kong/pull/8107)\n- **Rate-Limiting**: add support for Redis SSL, through configuration properties\n  `redis_ssl` (can be set to `true` or `false`), `ssl_verify`, and `ssl_server_name`.\n  [#6737](https://github.com/Kong/kong/pull/6737)\n  Thanks [gabeio](https://github.com/gabeio) for the patch!\n- **LDAP**: basic authentication header was not parsed correctly when\n  the password contained colon (`:`).\n  [#7977](https://github.com/Kong/kong/pull/7977)\n  Thanks [beldahanit](https://github.com/beldahanit) for reporting the issue!\n- Old `BasePlugin` is deprecated and will be removed in a future version of Kong.\n  Porting tips in the [documentation](https://docs.konghq.com/gateway-oss/2.3.x/plugin-development/custom-logic/#porting-from-old-baseplugin-style)\n- The deprecated **BasePlugin** has been removed. [#7961](https://github.com/Kong/kong/pull/7961)\n\n### Configuration\n\n- Removed the following config options, which had been deprecated in previous versions, in favor of other config names. If you have any of these options in your config you will have to rename them: (removed option -> current option).\n  - upstream_keepalive -> nginx_upstream_keepalive + nginx_http_upstream_keepalive\n  - nginx_http_upstream_keepalive -> nginx_upstream_keepalive\n  - nginx_http_upstream_keepalive_requests -> nginx_upstream_keepalive_requests\n  - nginx_http_upstream_keepalive_timeout -> nginx_upstream_keepalive_timeout\n  - nginx_http_upstream_directives -> nginx_upstream_directives\n  - nginx_http_status_directives -> nginx_status_directives\n  - nginx_upstream_keepalive -> upstream_keepalive_pool_size\n  - nginx_upstream_keepalive_requests -> upstream_keepalive_max_requests\n  - nginx_upstream_keepalive_timeout -> upstream_keepalive_idle_timeout\n  - client_max_body_size -> nginx_http_client_max_body_size\n  - client_body_buffer_size -> nginx_http_client_max_buffer_size\n  - cassandra_consistency -> cassandra_write_consistency / cassandra_read_consistency\n  - router_update_frequency -> worker_state_update_frequency\n- Removed the nginx_optimizations config option. If you have it in your configuration, please remove it before updating to 3.0.\n\n### Fixes\n\n#### Core\n\n- Balancer caches are now reset on configuration reload.\n  [#7924](https://github.com/Kong/kong/pull/7924)\n- Configuration reload no longer causes a new DNS-resolving timer to be started.\n  [#7943](https://github.com/Kong/kong/pull/7943)\n- Fixed problem when bootstrapping multi-node Cassandra clusters, where migrations could attempt\n  insertions before schema agreement occurred.\n  [#7667](https://github.com/Kong/kong/pull/7667)\n- Fixed intermittent botting error which happened when a custom plugin had inter-dependent entity schemas\n  on its custom DAO and they were loaded in an incorrect order\n  [#7911](https://github.com/Kong/kong/pull/7911)\n- Fixed problem when the consistent hash header is not found, the balancer tries to hash a nil value.\n  [#8141](https://github.com/Kong/kong/pull/8141)\n- Fixed DNS client fails to resolve unexpectedly in `ssl_cert` and `ssl_session_fetch` phases.\n  [#8161](https://github.com/Kong/kong/pull/8161)\n\n#### PDK\n\n- `kong.log.inspect` log level is now debug instead of warn. It also renders text\n  boxes more cleanly now [#7815](https://github.com/Kong/kong/pull/7815)\n\n#### Plugins\n\n- **Prometheus**: Control Plane does not show Upstream Target health metrics\n  [#7992](https://github.com/Kong/kong/pull/7922)\n\n\n### Dependencies\n\n- Bumped `lua-pack` from 1.0.5 to 2.0.0\n  [#8004](https://github.com/Kong/kong/pull/8004)\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.6.0]\n\n> Release date: 2021/10/04\n\n### Dependencies\n\n- Bumped `openresty` from 1.19.3.2 to [1.19.9.1](https://openresty.org/en/changelog-1019009.html)\n  [#7430](https://github.com/Kong/kong/pull/7727)\n- Bumped `openssl` from `1.1.1k` to `1.1.1l`\n  [7767](https://github.com/Kong/kong/pull/7767)\n- Bumped `lua-resty-http` from 0.15 to 0.16.1\n  [#7797](https://github.com/kong/kong/pull/7797)\n- Bumped `Penlight` to 1.11.0\n  [#7736](https://github.com/Kong/kong/pull/7736)\n- Bumped `lua-resty-http` from 0.15 to 0.16.1\n  [#7797](https://github.com/kong/kong/pull/7797)\n- Bumped `lua-protobuf` from 0.3.2 to 0.3.3\n  [#7656](https://github.com/Kong/kong/pull/7656)\n- Bumped `lua-resty-openssl` from 0.7.3 to 0.7.4\n  [#7657](https://github.com/Kong/kong/pull/7657)\n- Bumped `lua-resty-acme` from 0.6 to 0.7.1\n  [#7658](https://github.com/Kong/kong/pull/7658)\n- Bumped `grpcurl` from 1.8.1 to 1.8.2\n  [#7659](https://github.com/Kong/kong/pull/7659)\n- Bumped `luasec` from 1.0.1 to 1.0.2\n  [#7750](https://github.com/Kong/kong/pull/7750)\n- Bumped `lua-resty-ipmatcher` to 0.6.1\n  [#7703](https://github.com/Kong/kong/pull/7703)\n  Thanks [EpicEric](https://github.com/EpicEric) for the patch!\n\nAll Kong Gateway OSS plugins will be moved from individual repositories and centralized\ninto the main Kong Gateway (OSS) repository. We are making a gradual transition. On this\nrelease:\n\n- Moved AWS-Lambda inside the Kong repo\n  [#7464](https://github.com/Kong/kong/pull/7464).\n- Moved ACME inside the Kong repo\n  [#7464](https://github.com/Kong/kong/pull/7464).\n- Moved Prometheus inside the Kong repo\n  [#7666](https://github.com/Kong/kong/pull/7666).\n- Moved Session inside the Kong repo\n  [#7738](https://github.com/Kong/kong/pull/7738).\n- Moved GRPC-web inside the Kong repo\n  [#7782](https://github.com/Kong/kong/pull/7782).\n- Moved Serverless functions inside the Kong repo\n  [#7792](https://github.com/Kong/kong/pull/7792).\n\n### Additions\n\n#### Core\n\n- New schema entity validator: `mutually_exclusive`. It accepts a list of fields. If more than 1 of those fields\n  is set simultaneously, the entity is considered invalid.\n  [#7765](https://github.com/Kong/kong/pull/7765)\n\n#### Performance\n\nOn this release we've done some special efforts with regards to performance.\n\nThere's a new performance workflow which periodically checks new code additions against some\ntypical scenarios [#7030](https://github.com/Kong/kong/pull/7030) [#7547](https://github.com/Kong/kong/pull/7547)\n\nIn addition to that, the following changes were specifically included to improve performance:\n\n- Reduced unnecessary reads of `ngx.var`\n  [#7840](https://github.com/Kong/kong/pull/7840)\n- Loaded more indexed variables\n  [#7849](https://github.com/Kong/kong/pull/7849)\n- Optimized table creation in Balancer\n  [#7852](https://github.com/Kong/kong/pull/7852)\n- Reduce calls to `ngx.update_time`\n  [#7853](https://github.com/Kong/kong/pull/7853)\n- Use read-only replica for PostgreSQL meta-schema reading\n  [#7454](https://github.com/Kong/kong/pull/7454)\n- URL escaping detects cases when it's not needed and early-exits\n  [#7742](https://github.com/Kong/kong/pull/7742)\n- Accelerated variable loading via indexes\n  [#7818](https://github.com/Kong/kong/pull/7818)\n- Removed unnecessary call to `get_phase` in balancer\n  [#7854](https://github.com/Kong/kong/pull/7854)\n\n#### Configuration\n\n- Enable IPV6 on `dns_order` as unsupported experimental feature. Please\n  give it a try and report back any issues\n  [#7819](https://github.com/Kong/kong/pull/7819).\n- The template renderer can now use `os.getenv`\n  [#6872](https://github.com/Kong/kong/pull/6872).\n\n#### Hybrid Mode\n\n- Data plane is able to eliminate some unknown fields when Control Plane is using a more modern version\n  [#7827](https://github.com/Kong/kong/pull/7827).\n\n#### Admin API\n\n- Added support for the HTTP HEAD method for all Admin API endpoints\n  [#7796](https://github.com/Kong/kong/pull/7796)\n- Added better support for OPTIONS requests. Previously, the Admin API replied the same on all OPTIONS requests, where as now OPTIONS request will only reply to routes that our Admin API has. Non-existing routes will have a 404 returned. It also adds Allow header to responses, both Allow and Access-Control-Allow-Methods now contain only the methods that the specific API supports. [#7830](https://github.com/Kong/kong/pull/7830)\n\n#### Plugins\n\n- **AWS-Lambda**: The plugin will now try to detect the AWS region by using `AWS_REGION` and\n  `AWS_DEFAULT_REGION` environment variables (when not specified with the plugin configuration).\n  This allows to specify a 'region' on a per Kong node basis, hence adding the ability to invoke the\n  Lamda in the same region where Kong is located.\n  [#7765](https://github.com/Kong/kong/pull/7765)\n- **Datadog**: `host` and `port` config options can be configured from environment variables\n  `KONG_DATADOG_AGENT_HOST` and `KONG_DATADOG_AGENT_PORT`. This allows to set different\n  destinations on a per Kong node basis, which makes multi-DC setups easier and in Kubernetes allows to\n  run the datadog agents as a daemon-set.\n  [#7463](https://github.com/Kong/kong/pull/7463)\n  Thanks [rallyben](https://github.com/rallyben) for the patch!\n- **Prometheus:** A new metric `data_plane_cluster_cert_expiry_timestamp` is added to expose the Data Plane's cluster_cert expiry timestamp for improved monitoring in Hybrid Mode. [#7800](https://github.com/Kong/kong/pull/7800).\n\n**Request Termination**:\n\n- New `trigger` config option, which makes the plugin only activate for any requests with a header or query parameter\n  named like the trigger. This can be a great debugging aid, without impacting actual traffic being processed.\n  [#6744](https://github.com/Kong/kong/pull/6744).\n- The `request-echo` config option was added. If set, the plugin responds with a copy of the incoming request.\n  This eases troubleshooting when Kong is behind one or more other proxies or LB's, especially when combined with\n  the new 'trigger' option.\n  [#6744](https://github.com/Kong/kong/pull/6744).\n\n**GRPC-Gateway**:\n\n- Fields of type `.google.protobuf.Timestamp` on the gRPC side are now\n  transcoded to and from ISO8601 strings in the REST side.\n  [#7538](https://github.com/Kong/kong/pull/7538)\n- URI arguments like `..?foo.bar=x&foo.baz=y` are interpreted as structured\n  fields, equivalent to `{\"foo\": {\"bar\": \"x\", \"baz\": \"y\"}}`\n  [#7564](https://github.com/Kong/kong/pull/7564)\n  Thanks [git-torrent](https://github.com/git-torrent) for the patch!\n\n### Fixes\n\n#### Core\n\n- Balancer retries now correctly set the `:authority` pseudo-header on balancer retries\n  [#7725](https://github.com/Kong/kong/pull/7725).\n- Healthchecks are now stopped while the Balancer is being recreated\n  [#7549](https://github.com/Kong/kong/pull/7549).\n- Fixed an issue in which a malformed `Accept` header could cause unexpected HTTP 500\n  [#7757](https://github.com/Kong/kong/pull/7757).\n- Kong no longer removes `Proxy-Authentication` request header and `Proxy-Authenticate` response header\n  [#7724](https://github.com/Kong/kong/pull/7724).\n- Fixed an issue where Kong would not sort correctly Routes with both regex and prefix paths\n  [#7695](https://github.com/Kong/kong/pull/7695)\n  Thanks [jiachinzhao](https://github.com/jiachinzhao) for the patch!\n\n#### Hybrid Mode\n\n- Ensure data plane config thread is terminated gracefully, preventing a semi-deadlocked state\n  [#7568](https://github.com/Kong/kong/pull/7568)\n  Thanks [flrgh](https://github.com/flrgh) for the patch!\n- Older data planes using `aws-lambda`, `grpc-web` or `request-termination` plugins can now talk\n  with newer control planes by ignoring new plugin fields.\n  [#7881](https://github.com/Kong/kong/pull/7881)\n\n##### CLI\n\n- `kong config parse` no longer crashes when there's a Go plugin server enabled\n  [#7589](https://github.com/Kong/kong/pull/7589).\n\n##### Configuration\n\n- Declarative Configuration parser now prints more correct errors when pointing unknown foreign references\n  [#7756](https://github.com/Kong/kong/pull/7756).\n- YAML anchors in Declarative Configuration are properly processed\n  [#7748](https://github.com/Kong/kong/pull/7748).\n\n##### Admin API\n\n- `GET /upstreams/:upstreams/targets/:target` no longer returns 404 when target weight is 0\n  [#7758](https://github.com/Kong/kong/pull/7758).\n\n##### PDK\n\n- `kong.response.exit` now uses customized \"Content-Length\" header when found\n  [#7828](https://github.com/Kong/kong/pull/7828).\n\n##### Plugins\n\n- **ACME**: Dots in wildcard domains are escaped\n  [#7839](https://github.com/Kong/kong/pull/7839).\n- **Prometheus**: Upstream's health info now includes previously missing `subsystem` field\n  [#7802](https://github.com/Kong/kong/pull/7802).\n- **Proxy-Cache**: Fixed an issue where the plugin would sometimes fetch data from the cache but not return it\n  [#7775](https://github.com/Kong/kong/pull/7775)\n  Thanks [agile6v](https://github.com/agile6v) for the patch!\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.5.1]\n\n> Release date: 2021/09/07\n\nThis is the first patch release in the 2.5 series. Being a patch release,\nit strictly contains bugfixes. There are no new features or breaking changes.\n\n### Dependencies\n\n- Bumped `grpcurl` from 1.8.1 to 1.8.2 [#7659](https://github.com/Kong/kong/pull/7659)\n- Bumped `lua-resty-openssl` from 0.7.3 to 0.7.4 [#7657](https://github.com/Kong/kong/pull/7657)\n- Bumped `penlight` from 1.10.0 to 1.11.0 [#7736](https://github.com/Kong/kong/pull/7736)\n- Bumped `luasec` from 1.0.1 to 1.0.2 [#7750](https://github.com/Kong/kong/pull/7750)\n- Bumped `OpenSSL` from 1.1.1k to 1.1.1l [#7767](https://github.com/Kong/kong/pull/7767)\n\n### Fixes\n\n##### Core\n\n- You can now successfully delete workspaces after deleting all entities associated with that workspace.\n  Previously, Kong Gateway was not correctly cleaning up parent-child relationships. For example, creating\n  an Admin also creates a Consumer and RBAC user. When deleting the Admin, the Consumer and RBAC user are\n  also deleted, but accessing the `/workspaces/workspace_name/meta` endpoint would show counts for Consumers\n  and RBAC users, which prevented the workspace from being deleted. Now deleting entities correctly updates\n  the counts, allowing an empty workspace to be deleted. [#7560](https://github.com/Kong/kong/pull/7560)\n- When an upstream event is received from the DAO, `handler.lua` now gets the workspace ID from the request\n  and adds it to the upstream entity that will be used in the worker and cluster events. Before this change,\n  when posting balancer CRUD events, the workspace ID was lost and the balancer used the default\n  workspace ID as a fallback. [#7778](https://github.com/Kong/kong/pull/7778)\n\n##### CLI\n\n- Fixes regression that included an issue where Go plugins prevented CLI commands like `kong config parse`\n  or `kong config db_import` from working as expected. [#7589](https://github.com/Kong/kong/pull/7589)\n\n##### CI / Process\n\n- Improves tests reliability. ([#7578](https://github.com/Kong/kong/pull/7578) [#7704](https://github.com/Kong/kong/pull/7704))\n- Adds Github Issues template forms. [#7774](https://github.com/Kong/kong/pull/7774)\n- Moves \"Feature Request\" link from Github Issues to Discussions. [#7777](https://github.com/Kong/kong/pull/7777)\n\n##### Admin API\n\n- Kong Gateway now validates workspace names, preventing the use of reserved names on workspaces.\n  [#7380](https://github.com/Kong/kong/pull/7380)\n\n\n[Back to TOC](#table-of-contents)\n\n## [2.5.0]\n\n> Release date: 2021-07-13\n\nThis is the final release of Kong 2.5.0, with no breaking changes with respect to the 2.x series.\n\nThis release includes Control Plane resiliency to database outages and the new\n`declarative_config_string` config option, among other features and fixes.\n\n### Distribution\n\n- :warning: Since 2.4.1, Kong packages are no longer distributed\n  through Bintray. Please visit [the installation docs](https://konghq.com/install/#kong-community)\n  for more details.\n\n### Dependencies\n\n- Bumped `openresty` from 1.19.3.1 to 1.19.3.2 [#7430](https://github.com/kong/kong/pull/7430)\n- Bumped `luasec` from 1.0 to 1.0.1 [#7126](https://github.com/kong/kong/pull/7126)\n- Bumped `luarocks` from 3.5.0 to 3.7.0 [#7043](https://github.com/kong/kong/pull/7043)\n- Bumped `grpcurl` from 1.8.0 to 1.8.1 [#7128](https://github.com/kong/kong/pull/7128)\n- Bumped `penlight` from 1.9.2 to 1.10.0 [#7127](https://github.com/Kong/kong/pull/7127)\n- Bumped `lua-resty-dns-client` from 6.0.0 to 6.0.2 [#7539](https://github.com/Kong/kong/pull/7539)\n- Bumped `kong-plugin-prometheus` from 1.2 to 1.3 [#7415](https://github.com/Kong/kong/pull/7415)\n- Bumped `kong-plugin-zipkin` from 1.3 to 1.4 [#7455](https://github.com/Kong/kong/pull/7455)\n- Bumped `lua-resty-openssl` from 0.7.2 to 0.7.3 [#7509](https://github.com/Kong/kong/pull/7509)\n- Bumped `lua-resty-healthcheck` from 1.4.1 to 1.4.2 [#7511](https://github.com/Kong/kong/pull/7511)\n- Bumped `hmac-auth` from 2.3.0 to 2.4.0 [#7522](https://github.com/Kong/kong/pull/7522)\n- Pinned `lua-protobuf` to 0.3.2 (previously unpinned) [#7079](https://github.com/kong/kong/pull/7079)\n\nAll Kong Gateway OSS plugins will be moved from individual repositories and centralized\ninto the main Kong Gateway (OSS) repository. We are making a gradual transition, starting with the\ngrpc-gateway plugin first:\n\n- Moved grpc-gateway inside the Kong repo. [#7466](https://github.com/Kong/kong/pull/7466)\n\n### Additions\n\n#### Core\n\n- Control Planes can now send updates to new data planes even if the control planes lose connection to the database.\n  [#6938](https://github.com/kong/kong/pull/6938)\n- Kong now automatically adds `cluster_cert`(`cluster_mtls=shared`) or `cluster_ca_cert`(`cluster_mtls=pki`) into\n  `lua_ssl_trusted_certificate` when operating in Hybrid mode. Before, Hybrid mode users needed to configure\n  `lua_ssl_trusted_certificate` manually as a requirement for Lua to verify the Control Plane’s certificate.\n  See [Starting Data Plane Nodes](https://docs.konghq.com/gateway-oss/2.5.x/hybrid-mode/#starting-data-plane-nodes)\n  in the Hybrid Mode guide for more information. [#7044](https://github.com/kong/kong/pull/7044)\n- New `declarative_config_string` option allows loading a declarative config directly from a string. See the\n  [Loading The Declarative Configuration File](https://docs.konghq.com/2.5.x/db-less-and-declarative-config/#loading-the-declarative-configuration-file)\n  section of the DB-less and Declarative Configuration guide for more information.\n  [#7379](https://github.com/kong/kong/pull/7379)\n\n#### PDK\n\n- The Kong PDK now accepts tables in the response body for Stream subsystems, just as it does for the HTTP subsystem.\n  Before developers had to check the subsystem if they wrote code that used the `exit()` function before calling it,\n  because passing the wrong argument type would break the request response.\n  [#7082](https://github.com/kong/kong/pull/7082)\n\n#### Plugins\n\n- **hmac-auth**: The HMAC Authentication plugin now includes support for the `@request-target` field in the signature\n  string. Before, the plugin used the `request-line` parameter, which contains the HTTP request method, request URI, and\n  the HTTP version number. The inclusion of the HTTP version number in the signature caused requests to the same target\n  but using different request methods(such as HTTP/2) to have different signatures. The newly added request-target field\n  only includes the lowercase request method and request URI when calculating the hash, avoiding those issues.\n  See the [HMAC Authentication](https://docs.konghq.com/hub/kong-inc/hmac-auth) documentation for more information.\n  [#7037](https://github.com/kong/kong/pull/7037)\n- **syslog**: The Syslog plugin now includes facility configuration options, which are a way for the plugin to group\n  error messages from different sources. See the description for the facility parameter in the\n  [Parameters](https://docs.konghq.com/hub/kong-inc/syslog/#parameters) section of the Syslog documentation for more\n  information. [#6081](https://github.com/kong/kong/pull/6081). Thanks, [jideel](https://github.com/jideel)!\n- **Prometheus**: The Prometheus plugin now exposes connected data planes' status on the control plane. New metrics include the\n  following:  `data_plane_last_seen`, `data_plane_config_hash` and `data_plane_version_compatible`. These\n  metrics can be useful for troubleshooting when data planes have inconsistent configurations across the cluster. See the\n  [Available metrics](https://docs.konghq.com/hub/kong-inc/prometheus) section of the Prometheus plugin documentation\n  for more information. [98](https://github.com/Kong/kong-plugin-prometheus/pull/98)\n- **Zipkin**: The Zipkin plugin now includes the following tags: `kong.route`,`kong.service_name` and `kong.route_name`.\n  See the [Spans](https://docs.konghq.com/hub/kong-inc/zipkin/#spans) section of the Zipkin plugin documentation for more information.\n  [115](https://github.com/Kong/kong-plugin-zipkin/pull/115)\n\n#### Hybrid Mode\n\n- Kong now exposes an upstream health checks endpoint (using the status API) on the data plane for better\n  observability. [#7429](https://github.com/Kong/kong/pull/7429)\n- Control Planes are now more lenient when checking Data Planes' compatibility in Hybrid mode. See the\n  [Version compatibility](https://docs.konghq.com/gateway-oss/2.5.x/hybrid-mode/#version_compatibility)\n  section of the Hybrid Mode guide for more information. [#7488](https://github.com/Kong/kong/pull/7488)\n- This release starts the groundwork for Hybrid Mode 2.0 Protocol. This code isn't active by default in Kong 2.5,\n  but it allows future development. [#7462](https://github.com/Kong/kong/pull/7462)\n\n### Fixes\n\n#### Core\n\n- When using DB-less mode, `select_by_cache_key` now finds entities by using the provided `field` directly\n  in ` select_by_key` and does not complete unnecessary cache reads. [#7146](https://github.com/kong/kong/pull/7146)\n- Kong can now finish initialization even if a plugin’s `init_worker` handler fails, improving stability.\n  [#7099](https://github.com/kong/kong/pull/7099)\n- TLS keepalive requests no longer share their context. Before when two calls were made to the same \"server+hostname\"\n  but different routes and using a keepalive connection, plugins that were active in the first call were also sometimes\n  (incorrectly) active in the second call. The wrong plugin was active because Kong was passing context in the SSL phase\n  to the plugin iterator, creating connection-wide structures in that context, which was then shared between different\n  keepalive requests. With this fix, Kong does not pass context to plugin iterators with the `certificate` phase,\n  avoiding plugin mixups.[#7102](https://github.com/kong/kong/pull/7102)\n- The HTTP status 405 is now handled by Kong's error handler. Before accessing Kong using the TRACE method returned\n  a standard NGINX error page because the 405 wasn’t included in the error page settings of the NGINX configuration.\n  [#6933](https://github.com/kong/kong/pull/6933).\n  Thanks, [yamaken1343](https://github.com/yamaken1343)!\n- Custom `ngx.sleep` implementation in `init_worker` phase now invokes `update_time` in order to prevent time-based deadlocks\n  [#7532](https://github.com/Kong/kong/pull/7532)\n- `Proxy-Authorization` header is removed when it is part of the original request **or** when a plugin sets it to the\n  same value as the original request\n  [#7533](https://github.com/Kong/kong/pull/7533)\n- `HEAD` requests don't provoke an error when a Plugin implements the `response` phase\n  [#7535](https://github.com/Kong/kong/pull/7535)\n\n#### Hybrid Mode\n\n- Control planes no longer perform health checks on CRUD upstreams’ and targets’ events.\n  [#7085](https://github.com/kong/kong/pull/7085)\n- To prevent unnecessary cache flips on data planes, Kong now checks `dao:crud` events more strictly and has\n  a new cluster event, `clustering:push_config` for configuration pushes. These updates allow Kong to filter\n  invalidation events that do not actually require a database change. Furthermore, the clustering module does\n  not subscribe to the generic `invalidations` event, which has a more broad scope than database entity invalidations.\n  [#7112](https://github.com/kong/kong/pull/7112)\n- Data Planes ignore null fields coming from Control Planes when doing schema validation.\n  [#7458](https://github.com/Kong/kong/pull/7458)\n- Kong now includes the source in error logs produced by Control Planes.\n  [#7494](https://github.com/Kong/kong/pull/7494)\n- Data Plane config hash calculation and checking is more consistent now: it is impervious to changes in table iterations,\n  hashes are calculated in both CP and DP, and DPs send pings more immediately and with the new hash now\n  [#7483](https://github.com/Kong/kong/pull/7483)\n\n\n#### Balancer\n\n- All targets are returned by the Admin API now, including targets with a `weight=0`, or disabled targets.\n  Before disabled targets were not included in the output when users attempted to list all targets. Then\n  when users attempted to add the targets again, they received an error message telling them the targets already existed.\n  [#7094](https://github.com/kong/kong/pull/7094)\n- Upserting existing targets no longer fails.  Before, because of updates made to target configurations since Kong v2.2.0,\n  upserting older configurations would fail. This fix allows older configurations to be imported.\n  [#7052](https://github.com/kong/kong/pull/7052)\n- The last balancer attempt is now correctly logged. Before balancer tries were saved when retrying, which meant the last\n  retry state was not saved since there were no more retries. This update saves the failure state so it can be correctly logged.\n  [#6972](https://github.com/kong/kong/pull/6972)\n- Kong now ensures that the correct upstream event is removed from the queue when updating the balancer state.\n  [#7103](https://github.com/kong/kong/pull/7103)\n\n#### CLI\n\n- The `prefix` argument in the `kong stop` command now takes precedence over environment variables, as it does in the `kong start` command.\n  [#7080](https://github.com/kong/kong/pull/7080)\n\n#### Configuration\n\n- Declarative configurations now correctly parse custom plugin entities schemas with attributes called \"plugins\". Before\n  when using declarative configurations, users with custom plugins that included a \"plugins\" field would encounter startup\n  exceptions. With this fix, the declarative configuration can now distinguish between plugins schema and custom plugins fields.\n  [#7412](https://github.com/kong/kong/pull/7412)\n- The stream access log configuration options are now properly separated from the HTTP access log. Before when users\n  used Kong with TCP, they couldn’t use a custom log format. With this fix, `proxy_stream_access_log` and `proxy_stream_error_log`\n  have been added to differentiate stream access log from the HTTP subsystem. See\n  [`proxy_stream_access_log`](https://docs.konghq.com/gateway-oss/2.5.x/configuration/#proxy_stream_access_log)\n  and [`proxy_stream_error`](https://docs.konghq.com/gateway-oss/2.5.x/configuration/#proxy_stream_error) in the Configuration\n  Property Reference for more information. [#7046](https://github.com/kong/kong/pull/7046)\n\n#### Migrations\n\n- Kong no longer assumes that `/?/init.lua` is in the Lua path when doing migrations. Before, when users created\n  a custom plugin in a non-standard location and set `lua_package_path = /usr/local/custom/?.lua`, migrations failed.\n  Migrations failed because the Kong core file is `init.lua` and it is required as part of `kong.plugins.<name>.migrations`.\n  With this fix, migrations no longer expect `init.lua` to be a part of the path. [#6993](https://github.com/kong/kong/pull/6993)\n- Kong no longer emits errors when doing `ALTER COLUMN` operations in Apache Cassandra 4.0.\n  [#7490](https://github.com/Kong/kong/pull/7490)\n\n#### PDK\n\n- With this update, `kong.response.get_XXX()` functions now work in the log phase on external plugins. Before\n  `kong.response.get_XXX()` functions required data from the response object, which was not accessible in the\n  post-log timer used to call log handlers in external plugins. Now these functions work by accessing the required\n  data from the set saved at the start of the log phase. See [`kong.response`](https://docs.konghq.com/gateway-oss/{{page.kong_version}}/kong.response)\n  in the Plugin Development Kit for more information. [#7048](https://github.com/kong/kong/pull/7048)\n- External plugins handle certain error conditions better while the Kong balancer is being refreshed. Before\n  when an `instance_id` of an external plugin changed, and the plugin instance attempted to reset and retry,\n  it was failing because of a typo in the comparison. [#7153](https://github.com/kong/kong/pull/7153).\n  Thanks, [ealogar](https://github.com/ealogar)!\n- With this release, `kong.log`'s phase checker now accounts for the existence of the new `response` pseudo-phase.\n  Before users may have erroneously received a safe runtime error for using a function out-of-place in the PDK.\n  [#7109](https://github.com/kong/kong/pull/7109)\n- Kong no longer sandboxes the `string.rep` function. Before `string.rep` was sandboxed to disallow a single operation\n  from allocating too much memory. However, a single operation allocating too much memory is no longer an issue\n  because in LuaJIT there are no debug hooks and it is trivial to implement a loop to allocate memory on every single iteration.\n  Additionally, since the `string` table is global and obtainable by any sandboxed string, its sandboxing provoked issues on global state.\n  [#7167](https://github.com/kong/kong/pull/7167)\n- The `kong.pdk.node` function can now correctly iterates over all the shared dict metrics. Before this fix,\n  users using the `kong.pdk.node` function could not see all shared dict metrics under the Stream subsystem.\n  [#7078](https://github.com/kong/kong/pull/7078)\n\n#### Plugins\n\n- All custom plugins that are using the deprecated `BasePlugin` class have to remove this inheritance.\n- **LDAP-auth**: The LDAP Authentication schema now includes a default value for the `config.ldap_port` parameter\n  that matches the documentation. Before the plugin documentation [Parameters](https://docs.konghq.com/hub/kong-inc/ldap-auth/#parameters)\n  section included a reference to a default value for the LDAP port; however, the default value was not included in the plugin schema.\n  [#7438](https://github.com/kong/kong/pull/7438)\n- **Prometheus**: The Prometheus plugin exporter now attaches subsystem labels to memory stats. Before, the HTTP\n  and Stream subsystems were not distinguished, so their metrics were interpreted as duplicate entries by Prometheus.\n  https://github.com/Kong/kong-plugin-prometheus/pull/118\n- **External Plugins**: the return code 127 (command not found) is detected and appropriate error is returned\n  [#7523](https://github.com/Kong/kong/pull/7523)\n\n\n## [2.4.1]\n\n\n> Released 2021/05/11\n\nThis is a patch release in the 2.4 series. Being a patch release, it\nstrictly contains bugfixes. There are no new features or breaking changes.\n\n### Distribution\n\n- :warning: Starting with this release, Kong packages are no longer distributed\n  through Bintray. Please download from [download.konghq.com](https://download.konghq.com).\n\n### Dependencies\n\n- Bump `luasec` from 1.0.0 to 1.0.1\n  [#7126](https://github.com/Kong/kong/pull/7126)\n- Bump `prometheus` plugin from 1.2.0 to 1.2.1\n  [#7061](https://github.com/Kong/kong/pull/7061)\n\n### Fixes\n\n##### Core\n\n- Ensure healthchecks and balancers are not created on control plane nodes.\n  [#7085](https://github.com/Kong/kong/pull/7085)\n- Optimize URL normalization code.\n  [#7100](https://github.com/Kong/kong/pull/7100)\n- Fix issue where control plane nodes would needlessly invalidate and send new\n  configuration to data plane nodes.\n  [#7112](https://github.com/Kong/kong/pull/7112)\n- Ensure HTTP code `405` is handled by Kong's error page.\n  [#6933](https://github.com/Kong/kong/pull/6933)\n- Ensure errors in plugins `init_worker` do not break Kong's worker initialization.\n  [#7099](https://github.com/Kong/kong/pull/7099)\n- Fix issue where two subsequent TLS keepalive requests would lead to incorrect\n  plugin execution.\n  [#7102](https://github.com/Kong/kong/pull/7102)\n- Ensure Targets upsert operation behaves similarly to other entities' upsert method.\n  [#7052](https://github.com/Kong/kong/pull/7052)\n- Ensure failed balancer retry is saved and accounted for in log data.\n  [#6972](https://github.com/Kong/kong/pull/6972)\n\n\n##### CLI\n\n- Ensure `kong start` and `kong stop` prioritize CLI flag `--prefix` over environment\n  variable `KONG_PREFIX`.\n  [#7080](https://github.com/Kong/kong/pull/7080)\n\n##### Configuration\n\n- Ensure Stream subsystem allows for configuration of access logs format.\n  [#7046](https://github.com/Kong/kong/pull/7046)\n\n##### Admin API\n\n- Ensure targets with weight 0 are displayed in the Admin API.\n  [#7094](https://github.com/Kong/kong/pull/7094)\n\n##### PDK\n\n- Ensure new `response` phase is accounted for in phase checkers.\n  [#7109](https://github.com/Kong/kong/pull/7109)\n\n##### Plugins\n\n- Ensure plugins written in languages other than Lua can use `kong.response.get_*`\n  methods - e.g., `kong.response.get_status`.\n  [#7048](https://github.com/Kong/kong/pull/7048)\n- `hmac-auth`: enable JIT compilation of authorization header regex.\n  [#7037](https://github.com/Kong/kong/pull/7037)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.4.0]\n\n> Released 2021/04/06\n\nThis is the final release of Kong 2.4.0, with no breaking changes with respect to the 2.x series.\nThis release includes JavaScript PDK, improved CP/DP updates and UTF-8 Tags, amongst other improvements\nand fixes.\n\n### Dependencies\n\n- :warning: For Kong 2.4, the required OpenResty version has been bumped to\n  [1.19.3.1](http://openresty.org/en/changelog-1019003.html), and the set of\n  patches included has changed, including the latest release of\n  [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\n  If you are installing Kong from one of our distribution\n  packages, you are not affected by this change.\n\n**Note:** if you are not using one of our distribution packages and compiling\nOpenResty from source, you must still apply Kong's [OpenResty\npatches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/patches)\n(and, as highlighted above, compile OpenResty with the new\nlua-kong-nginx-module). Our [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository will allow you to do both easily.\n\n- Bump luarocks from 3.4.0 to 3.5.0.\n  [#6699](https://github.com/Kong/kong/pull/6699)\n- Bump luasec from 0.9 to 1.0.\n  [#6814](https://github.com/Kong/kong/pull/6814)\n- Bump lua-resty-dns-client from 5.2.1 to 6.0.0.\n  [#6999](https://github.com/Kong/kong/pull/6999)\n- Bump kong-lapis from 1.8.1.2 to 1.8.3.1.\n  [#6925](https://github.com/Kong/kong/pull/6925)\n- Bump pgmoon from 1.11.0 to 1.12.0.\n  [#6741](https://github.com/Kong/kong/pull/6741)\n- Bump lua-resty-openssl from 0.6.9 to 0.7.2.\n  [#6967](https://github.com/Kong/kong/pull/6967)\n- Bump kong-plugin-zipkin from 1.2 to 1.3.\n  [#6936](https://github.com/Kong/kong/pull/6936)\n- Bump kong-prometheus-plugin from 1.0 to 1.2.\n  [#6958](https://github.com/Kong/kong/pull/6958)\n- Bump lua-cassandra from 1.5.0 to 1.5.1\n  [#6857](https://github.com/Kong/kong/pull/6857)\n- Bump luasyslog from 1.0.0 to 2.0.1\n  [#6957](https://github.com/Kong/kong/pull/6957)\n\n### Additions\n\n##### Core\n\n- Relaxed version check between Control Planes and Data Planes, allowing\n  Data Planes that are missing minor updates to still connect to the\n  Control Plane. Also, now Data Plane is allowed to have a superset of Control\n  Plane plugins.\n  [6932](https://github.com/Kong/kong/pull/6932)\n- Allowed UTF-8 in Tags\n  [6784](https://github.com/Kong/kong/pull/6784)\n- Added support for Online Certificate Status Protocol responder found in cluster.\n  [6887](https://github.com/Kong/kong/pull/6887)\n\n##### PDK\n\n- [JavaScript Plugin Development Kit (PDK)](https://github.com/Kong/kong-js-pdk)\n  is released alongside with Kong 2.4. It allows users to write Kong plugins in\n  JavaScript and TypeScript.\n- Beta release of Protobuf plugin communication protocol, which can be used in\n  place of MessagePack to communicate with non-Lua plugins.\n  [6941](https://github.com/Kong/kong/pull/6941)\n- Enabled `ssl_certificate` phase on plugins with stream module.\n  [6873](https://github.com/Kong/kong/pull/6873)\n\n##### Plugins\n\n- Zipkin: support for Jaeger style uber-trace-id headers.\n  [101](https://github.com/Kong/kong-plugin-zipkin/pull/101)\n  Thanks [nvx](https://github.com/nvx) for the patch!\n- Zipkin: support for OT headers.\n  [103](https://github.com/Kong/kong-plugin-zipkin/pull/103)\n  Thanks [ishg](https://github.com/ishg) for the patch!\n- Zipkin: allow insertion of custom tags on the Zipkin request trace.\n  [102](https://github.com/Kong/kong-plugin-zipkin/pull/102)\n- Zipkin: creation of baggage items on child spans is now possible.\n  [98](https://github.com/Kong/kong-plugin-zipkin/pull/98)\n  Thanks [Asafb26](https://github.com/Asafb26) for the patch!\n- JWT: Add ES384 support\n  [6854](https://github.com/Kong/kong/pull/6854)\n  Thanks [pariviere](https://github.com/pariviere) for the patch!\n- Several plugins: capability to set new log fields, or unset existing fields,\n  by executing custom Lua code in the Log phase.\n  [6944](https://github.com/Kong/kong/pull/6944)\n\n### Fixes\n\n##### Core\n\n- Changed default values and validation rules for plugins that were not\n  well-adjusted for dbless or hybrid modes.\n  [6885](https://github.com/Kong/kong/pull/6885)\n- Kong 2.4 ensures that all the Core entities are loaded before loading\n  any plugins. This fixes an error in which Plugins to could not link to\n  or modify Core entities because they would not be loaded yet\n  [6880](https://github.com/Kong/kong/pull/6880)\n- If needed, `Host` header is now updated between balancer retries, using the\n  value configured in the correct upstream entity.\n  [6796](https://github.com/Kong/kong/pull/6796)\n- Schema validations now log more descriptive error messages when types are\n  invalid.\n  [6593](https://github.com/Kong/kong/pull/6593)\n  Thanks [WALL-E](https://github.com/WALL-E) for the patch!\n- Kong now ignores tags in Cassandra when filtering by multiple entities, which\n  is the expected behavior and the one already existent when using Postgres\n  databases.\n  [6931](https://github.com/Kong/kong/pull/6931)\n- `Upgrade` header is not cleared anymore when response `Connection` header\n  contains `Upgrade`.\n  [6929](https://github.com/Kong/kong/pull/6929)\n- Accept fully-qualified domain names ending in dots.\n  [6864](https://github.com/Kong/kong/pull/6864)\n- Kong does not try to warmup upstream names when warming up DNS entries.\n  [6891](https://github.com/Kong/kong/pull/6891)\n- Migrations order is now guaranteed to be always the same.\n  [6901](https://github.com/Kong/kong/pull/6901)\n- Buffered responses are disabled on connection upgrades.\n  [6902](https://github.com/Kong/kong/pull/6902)\n- Make entity relationship traverse-order-independent.\n  [6743](https://github.com/Kong/kong/pull/6743)\n- The host header is updated between balancer retries.\n  [6796](https://github.com/Kong/kong/pull/6796)\n- The router prioritizes the route with most matching headers when matching\n  headers.\n  [6638](https://github.com/Kong/kong/pull/6638)\n- Fixed an edge case on multipart/form-data boundary check.\n  [6638](https://github.com/Kong/kong/pull/6638)\n- Paths are now properly normalized inside Route objects.\n  [6976](https://github.com/Kong/kong/pull/6976)\n- Do not cache empty upstream name dictionary.\n  [7002](https://github.com/Kong/kong/pull/7002)\n- Do not assume upstreams do not exist after init phase.\n  [7010](https://github.com/Kong/kong/pull/7010)\n- Do not overwrite configuration files when running migrations.\n  [7017](https://github.com/Kong/kong/pull/7017)\n\n##### PDK\n\n- Now Kong does not leave plugin servers alive after exiting and does not try to\n  start them in the unsupported stream subsystem.\n  [6849](https://github.com/Kong/kong/pull/6849)\n- Go does not cache `kong.log` methods\n  [6701](https://github.com/Kong/kong/pull/6701)\n- The `response` phase is included on the list of public phases\n  [6638](https://github.com/Kong/kong/pull/6638)\n- Config file style and options case are now consistent all around.\n  [6981](https://github.com/Kong/kong/pull/6981)\n- Added right protobuf MacOS path to enable external plugins in Homebrew\n  installations.\n  [6980](https://github.com/Kong/kong/pull/6980)\n- Auto-escape upstream path to avoid proxying errors.\n  [6978](https://github.com/Kong/kong/pull/6978)\n- Ports are now declared as `Int`.\n  [6994](https://github.com/Kong/kong/pull/6994)\n\n##### Plugins\n\n- oauth2: better handling more cases of client invalid token generation.\n  [6594](https://github.com/Kong/kong/pull/6594)\n  Thanks [jeremyjpj0916](https://github.com/jeremyjpj0916) for the patch!\n- Zipkin: the w3c parsing function was returning a non-used extra value, and it\n  now early-exits.\n  [100](https://github.com/Kong/kong-plugin-zipkin/pull/100)\n  Thanks [nvx](https://github.com/nvx) for the patch!\n- Zipkin: fixed a bug in which span timestamping could sometimes raise an error.\n  [105](https://github.com/Kong/kong-plugin-zipkin/pull/105)\n  Thanks [Asafb26](https://github.com/Asafb26) for the patch!\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.3.3]\n\n> Released 2021/03/05\n\nThis is a patch release in the 2.3 series. Being a patch release, it\nstrictly contains bugfixes. The are no new features or breaking changes.\n\n### Dependencies\n\n- Bump OpenSSL from `1.1.1i` to `1.1.1j`.\n  [6859](https://github.com/Kong/kong/pull/6859)\n\n### Fixes\n\n##### Core\n\n- Ensure control plane nodes do not execute healthchecks.\n  [6805](https://github.com/Kong/kong/pull/6805)\n- Ensure only one worker executes active healthchecks.\n  [6844](https://github.com/Kong/kong/pull/6844)\n- Declarative config can be now loaded as an inline yaml file by `kong config`\n  (previously it was possible only as a yaml string inside json). JSON declarative\n  config is now parsed with the `cjson` library, instead of with `libyaml`.\n  [6852](https://github.com/Kong/kong/pull/6852)\n- When using eventual worker consistency now every Nginx worker deals with its\n  upstreams changes, avoiding unnecessary synchronization among workers.\n  [6833](https://github.com/Kong/kong/pull/6833)\n\n##### Admin API\n\n- Remove `prng_seed` from the Admin API and add PIDs instead.\n  [6842](https://github.com/Kong/kong/pull/6842)\n\n##### PDK\n\n- Ensure `kong.log.serialize` properly calculates reported latencies.\n  [6869](https://github.com/Kong/kong/pull/6869)\n\n##### Plugins\n\n- HMAC-Auth: fix issue where the plugin would check if both a username and\n  signature were specified, rather than either.\n  [6826](https://github.com/Kong/kong/pull/6826)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.3.2]\n\n> Released 2021/02/09\n\nThis is a patch release in the 2.3 series. Being a patch release, it\nstrictly contains bugfixes. The are no new features or breaking changes.\n\n### Fixes\n\n##### Core\n\n- Fix an issue where certain incoming URI may make it possible to\n  bypass security rules applied on Route objects. This fix make such\n  attacks more difficult by always normalizing the incoming request's\n  URI before matching against the Router.\n  [#6821](https://github.com/Kong/kong/pull/6821)\n- Properly validate Lua input in sandbox module.\n  [#6765](https://github.com/Kong/kong/pull/6765)\n- Mark boolean fields with default values as required.\n  [#6785](https://github.com/Kong/kong/pull/6785)\n\n\n##### CLI\n\n- `kong migrations` now accepts a `-p`/`--prefix` flag.\n  [#6819](https://github.com/Kong/kong/pull/6819)\n\n##### Plugins\n\n- JWT: disallow plugin on consumers.\n  [#6777](https://github.com/Kong/kong/pull/6777)\n- rate-limiting: improve counters accuracy.\n  [#6802](https://github.com/Kong/kong/pull/6802)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.3.1]\n\n> Released 2021/01/26\n\nThis is a patch release in the 2.3 series. Being a patch release, it\nstrictly contains bugfixes. The are no new features or breaking changes.\n\n### Fixes\n\n##### Core\n\n- lua-resty-dns-client was bumped to 5.2.1, which fixes an issue that could\n  lead to a busy loop when renewing addresses.\n  [#6760](https://github.com/Kong/kong/pull/6760)\n- Fixed an issue that made Kong return HTTP 500 Internal Server Error instead\n  of HTTP 502 Bad Gateway on upstream connection errors when using buffered\n  proxying. [#6735](https://github.com/Kong/kong/pull/6735)\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.3.0]\n\n> Released 2021/01/08\n\nThis is a new release of Kong, with no breaking changes with respect to the 2.x series,\nwith **Control Plane/Data Plane version checks**, **UTF-8 names for Routes and Services**,\nand **a Plugin Servers**.\n\n\n### Distributions\n\n- :warning: Support for Centos 6 has been removed, as said distro entered\n  EOL on Nov 30.\n  [#6641](https://github.com/Kong/kong/pull/6641)\n\n### Dependencies\n\n- Bump kong-plugin-serverless-functions from 1.0 to 2.1.\n  [#6715](https://github.com/Kong/kong/pull/6715)\n- Bump lua-resty-dns-client from 5.1.0 to 5.2.0.\n  [#6711](https://github.com/Kong/kong/pull/6711)\n- Bump lua-resty-healthcheck from 1.3.0 to 1.4.0.\n  [#6711](https://github.com/Kong/kong/pull/6711)\n- Bump OpenSSL from 1.1.1h to 1.1.1i.\n  [#6639](https://github.com/Kong/kong/pull/6639)\n- Bump `kong-plugin-zipkin` from 1.1 to 1.2.\n  [#6576](https://github.com/Kong/kong/pull/6576)\n- Bump `kong-plugin-request-transformer` from 1.2 to 1.3.\n  [#6542](https://github.com/Kong/kong/pull/6542)\n\n### Additions\n\n##### Core\n\n- Introduce version checks between Control Plane and Data Plane nodes\n  in Hybrid Mode. Sync will be stopped if the major/minor version differ\n  or if installed plugin versions differ between Control Plane and Data\n  Plane nodes.\n  [#6612](https://github.com/Kong/kong/pull/6612)\n- Kong entities with a `name` field now support utf-8 characters.\n  [#6557](https://github.com/Kong/kong/pull/6557)\n- The certificates entity now has `cert_alt` and `key_alt` fields, used\n  to specify an alternative certificate and key pair.\n  [#6536](https://github.com/Kong/kong/pull/6536)\n- The go-pluginserver `stderr` and `stdout` are now written into Kong's\n  logs.\n  [#6503](https://github.com/Kong/kong/pull/6503)\n- Introduce support for multiple pluginservers. This feature is\n  backwards-compatible with the existing single Go pluginserver.\n  [#6600](https://github.com/Kong/kong/pull/6600)\n\n##### PDK\n\n- Introduce a `kong.node.get_hostname` method that returns current's\n  node host name.\n  [#6613](https://github.com/Kong/kong/pull/6613)\n- Introduce a `kong.cluster.get_id` method that returns a unique ID\n  for the current Kong cluster. If Kong is running in DB-less mode\n  without a cluster ID explicitly defined, then this method returns nil.\n  For Hybrid mode, all Control Planes and Data Planes belonging to the\n  same cluster returns the same cluster ID. For traditional database\n  based deployments, all Kong nodes pointing to the same database will\n  also return the same cluster ID.\n  [#6576](https://github.com/Kong/kong/pull/6576)\n- Introduce a `kong.log.set_serialize_value`, which allows for customizing\n  the output of `kong.log.serialize`.\n  [#6646](https://github.com/Kong/kong/pull/6646)\n\n##### Plugins\n\n- `http-log`: the plugin now has a `headers` configuration, so that\n  custom headers can be specified for the log request.\n  [#6449](https://github.com/Kong/kong/pull/6449)\n- `key-auth`: the plugin now has two additional boolean configurations:\n  * `key_in_header`: if `false`, the plugin will ignore keys passed as\n    headers.\n  * `key_in_query`: if `false`, the plugin will ignore keys passed as\n    query arguments.\n  Both default to `true`.\n  [#6590](https://github.com/Kong/kong/pull/6590)\n- `request-size-limiting`: add new configuration `require_content_length`,\n  which causes the plugin to ensure a valid `Content-Length` header exists\n  before reading the request body.\n  [#6660](https://github.com/Kong/kong/pull/6660)\n- `serverless-functions`: introduce a sandboxing capability, and it has been\n  *enabled* by default, where only Kong PDK, OpenResty `ngx` APIs, and Lua standard libraries are allowed.\n  [#32](https://github.com/Kong/kong-plugin-serverless-functions/pull/32/)\n\n##### Configuration\n\n- `client_max_body_size` and `client_body_buffer_size`, that previously\n  hardcoded to 10m, are now configurable through `nginx_admin_client_max_body_size` and `nginx_admin_client_body_buffer_size`.\n  [#6597](https://github.com/Kong/kong/pull/6597)\n- Kong-generated SSL privates keys now have `600` file system permission.\n  [#6509](https://github.com/Kong/kong/pull/6509)\n- Properties `ssl_cert`, `ssl_cert_key`, `admin_ssl_cert`,\n  `admin_ssl_cert_key`, `status_ssl_cert`, and `status_ssl_cert_key`\n  is now an array: previously, only an RSA certificate was generated\n  by default; with this change, an ECDSA is also generated. On\n  intermediate and modern cipher suites, the ECDSA certificate is set\n  as the default fallback certificate; on old cipher suite, the RSA\n  certificate remains as the default. On custom certificates, the first\n  certificate specified in the array is used.\n  [#6509](https://github.com/Kong/kong/pull/6509)\n- Kong now runs as a `kong` user if it exists; it said user does not exist\n  in the system, the `nobody` user is used, as before.\n  [#6421](https://github.com/Kong/kong/pull/6421)\n\n### Fixes\n\n##### Core\n\n- Fix issue where a Go plugin would fail to read kong.ctx.shared values set by Lua plugins.\n  [#6490](https://github.com/Kong/kong/pull/6490)\n- Properly trigger `dao:delete_by:post` hook.\n  [#6567](https://github.com/Kong/kong/pull/6567)\n- Fix issue where a route that supports both http and https (and has a hosts and snis match criteria) would fail to proxy http requests, as it does not contain an SNI.\n  [#6517](https://github.com/Kong/kong/pull/6517)\n- Fix issue where a `nil` request context would lead to errors `attempt to index local 'ctx'` being shown in the logs\n- Reduced the number of needed timers to active health check upstreams and to resolve hosts.\n- Schemas for full-schema validations are correctly cached now, avoiding memory\n  leaks when reloading declarative configurations. [#6713](https://github.com/Kong/kong/pull/6713)\n- The schema for the upstream entities now limits the highest configurable\n  number of successes and failures to 255, respecting the limits imposed by\n  lua-resty-healthcheck. [#6705](https://github.com/Kong/kong/pull/6705)\n- Certificates for database connections now are loaded in the right order\n  avoiding failures to connect to Postgres databases.\n  [#6650](https://github.com/Kong/kong/pull/6650)\n\n##### CLI\n\n- Fix issue where `kong reload -c <config>` would fail.\n  [#6664](https://github.com/Kong/kong/pull/6664)\n- Fix issue where the Kong configuration cache would get corrupted.\n  [#6664](https://github.com/Kong/kong/pull/6664)\n\n##### PDK\n\n- Ensure the log serializer encodes the `tries` field as an array when\n  empty, rather than an object.\n  [#6632](https://github.com/Kong/kong/pull/6632)\n\n##### Plugins\n\n- request-transformer plugin does not allow `null` in config anymore as they can\n  lead to runtime errors. [#6710](https://github.com/Kong/kong/pull/6710)\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.2.2]\n\n> Released 2021/03/01\n\nThis is a patch release in the 2.2 series. Being a patch release, it\nstrictly contains bugfixes. The are no new features or breaking changes.\n\n### Fixes\n\n##### Plugins\n\n- `serverless-functions`: introduce a sandboxing capability, *enabled* by default,\n  where only Kong PDK, OpenResty `ngx` APIs, and some Lua standard libraries are\n  allowed. Read the documentation [here](https://docs.konghq.com/hub/kong-inc/serverless-functions/#sandboxing).\n  [#32](https://github.com/Kong/kong-plugin-serverless-functions/pull/32/)\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.2.1]\n\n> Released 2020/12/01\n\nThis is a patch release in the 2.2 series. Being a patch release, it\nstrictly contains bugfixes. The are no new features or breaking changes.\n\n### Fixes\n\n##### Distribution\n\n##### Core\n\n- Fix issue where Kong would fail to start a Go plugin instance with a\n  `starting instance: nil` error.\n  [#6507](https://github.com/Kong/kong/pull/6507)\n- Fix issue where a route that supports both `http` and `https` (and has\n  a `hosts` and `snis` match criteria) would fail to proxy `http`\n  requests, as it does not contain an SNI.\n  [#6517](https://github.com/Kong/kong/pull/6517)\n- Fix issue where a Go plugin would fail to read `kong.ctx.shared` values\n  set by Lua plugins.\n  [#6426](https://github.com/Kong/kong/issues/6426)\n- Fix issue where gRPC requests would fail to set the `:authority`\n  pseudo-header in upstream requests.\n  [#6603](https://github.com/Kong/kong/pull/6603)\n\n##### CLI\n\n- Fix issue where `kong config db_import` and `kong config db_export`\n  commands would fail if Go plugins were enabled.\n  [#6596](https://github.com/Kong/kong/pull/6596)\n  Thanks [daniel-shuy](https://github.com/daniel-shuy) for the patch!\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.2.0]\n\n> Released 2020/10/23\n\nThis is a new major release of Kong, including new features such as **UDP support**,\n**Configurable Request and Response Buffering**, **Dynamically Loading of OS\nCertificates**, and much more.\n\n### Distributions\n\n- Added support for running Kong as the non-root user kong on distributed systems.\n\n\n### Dependencies\n\n- :warning: For Kong 2.2, the required OpenResty version has been bumped to\n  [1.17.8.2](http://openresty.org/en/changelog-1017008.html), and the\n  the set of patches included has changed, including the latest release of\n  [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\n  If you are installing Kong from one of our distribution\n  packages, you are not affected by this change.\n- Bump OpenSSL version from `1.1.1g` to `1.1.1h`.\n  [#6382](https://github.com/Kong/kong/pull/6382)\n\n**Note:** if you are not using one of our distribution packages and compiling\nOpenResty from source, you must still apply Kong's [OpenResty\npatches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\n(and, as highlighted above, compile OpenResty with the new\nlua-kong-nginx-module). Our [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository will allow you to do both easily.\n\n- :warning: Cassandra 2.x support is now deprecated. If you are still\n  using Cassandra 2.x with Kong, we recommend you to upgrade, since this\n  series of Cassandra is about to be EOL with the upcoming release of\n  Cassandra 4.0.\n\n### Additions\n\n##### Core\n\n- :fireworks: **UDP support**: Kong now features support for UDP proxying\n  in its stream subsystem. The `\"udp\"` protocol is now accepted in the `protocols`\n  attribute of Routes and the `protocol` attribute of Services.\n  Load balancing and logging plugins support UDP as well.\n  [#6215](https://github.com/Kong/kong/pull/6215)\n- **Configurable Request and Response Buffering**: The buffering of requests\n  or responses can now be enabled or disabled on a per-route basis, through\n  setting attributes `Route.request_buffering` or `Route.response_buffering`\n  to `true` or `false`. Default behavior remains the same: buffering is enabled\n  by default for requests and responses.\n  [#6057](https://github.com/Kong/kong/pull/6057)\n- **Option to Automatically Load OS Certificates**: The configuration\n  attribute `lua_ssl_trusted_certificate` was extended to accept a\n  comma-separated list of certificate paths, as well as a special `system`\n  value, which expands to the \"system default\" certificates file installed\n  by the operating system. This follows a very simple heuristic to try to\n  use the most common certificate file in most popular distros.\n  [#6342](https://github.com/Kong/kong/pull/6342)\n- Consistent-Hashing load balancing algorithm does not require to use the entire\n  target history to build the same proxying destinations table on all Kong nodes\n  anymore. Now deleted targets are actually removed from the database and the\n  targets entities can be manipulated by the Admin API as any other entity.\n  [#6336](https://github.com/Kong/kong/pull/6336)\n- Add `X-Forwarded-Path` header: if a trusted source provides a\n  `X-Forwarded-Path` header, it is proxied as-is. Otherwise, Kong will set\n  the content of said header to the request's path.\n  [#6251](https://github.com/Kong/kong/pull/6251)\n- Hybrid mode synchronization performance improvements: Kong now uses a\n  new internal synchronization method to push changes from the Control Plane\n  to the Data Plane, drastically reducing the amount of communication between\n  nodes during bulk updates.\n  [#6293](https://github.com/Kong/kong/pull/6293)\n- The `Upstream.client_certificate` attribute can now be used from proxying:\n  This allows `client_certificate` setting used for mTLS handshaking with\n  the `Upstream` server to be shared easily among different Services.\n  However, `Service.client_certificate` will take precedence over\n  `Upstream.client_certificate` if both are set simultaneously.\n  In previous releases, `Upstream.client_certificate` was only used for\n  mTLS in active health checks.\n  [#6348](https://github.com/Kong/kong/pull/6348)\n- New `shorthand_fields` top-level attribute in schema definitions, which\n  deprecates `shorthands` and includes type definitions in addition to the\n  shorthand callback.\n  [#6364](https://github.com/Kong/kong/pull/6364)\n- Hybrid Mode: the table of Data Plane nodes at the Control Plane is now\n  cleaned up automatically, according to a delay value configurable via\n  the `cluster_data_plane_purge_delay` attribute, set to 14 days by default.\n  [#6376](https://github.com/Kong/kong/pull/6376)\n- Hybrid Mode: Data Plane nodes now apply only the last config when receiving\n  several updates in sequence, improving the performance when large configs are\n  in use. [#6299](https://github.com/Kong/kong/pull/6299)\n\n##### Admin API\n\n- Hybrid Mode: new endpoint `/clustering/data-planes` which returns complete\n  information about all Data Plane nodes that are connected to the Control\n  Plane cluster, regardless of the Control Plane node to which they connected.\n  [#6308](https://github.com/Kong/kong/pull/6308)\n  * :warning: The `/clustering/status` endpoint is now deprecated, since it\n    returns only information about Data Plane nodes directly connected to the\n    Control Plane node to which the Admin API request was made, and is\n    superseded by `/clustering/data-planes`.\n- Admin API responses now honor the `headers` configuration setting for\n  including or removing the `Server` header.\n  [#6371](https://github.com/Kong/kong/pull/6371)\n\n##### PDK\n\n- New function `kong.request.get_forwarded_prefix`: returns the prefix path\n  component of the request's URL that Kong stripped before proxying to upstream,\n  respecting the value of `X-Forwarded-Prefix` when it comes from a trusted source.\n  [#6251](https://github.com/Kong/kong/pull/6251)\n- `kong.response.exit` now honors the `headers` configuration setting for\n  including or removing the `Server` header.\n  [#6371](https://github.com/Kong/kong/pull/6371)\n- `kong.log.serialize` function now can be called using the stream subsystem,\n  allowing various logging plugins to work under TCP and TLS proxy modes.\n  [#6036](https://github.com/Kong/kong/pull/6036)\n- Requests with `multipart/form-data` MIME type now can use the same part name\n  multiple times. [#6054](https://github.com/Kong/kong/pull/6054)\n\n##### Plugins\n\n- **New Response Phase**: both Go and Lua pluggins now support a new plugin\n  phase called `response` in Lua plugins and `Response` in Go. Using it\n  automatically enables response buffering, which allows you to manipulate\n  both the response headers and the response body in the same phase.\n  This enables support for response handling in Go, where header and body\n  filter phases are not available, allowing you to use PDK functions such\n  as `kong.Response.GetBody()`, and provides an equivalent simplified\n  feature for handling buffered responses from Lua plugins as well.\n  [#5991](https://github.com/Kong/kong/pull/5991)\n- aws-lambda: bump to version 3.5.0:\n  [#6379](https://github.com/Kong/kong/pull/6379)\n  * support for 'isBase64Encoded' flag in Lambda function responses\n- grpc-web: introduce configuration pass_stripped_path, which, if set to true,\n  causes the plugin to pass the stripped request path (see the `strip_path` Route\n  attribute) to the upstream gRPC service.\n- rate-limiting: Support for rate limiting by path, by setting the\n  `limit_by = \"path\"` configuration attribute.\n  Thanks [KongGuide](https://github.com/KongGuide) for the patch!\n  [#6286](https://github.com/Kong/kong/pull/6286)\n- correlation-id: the plugin now generates a correlation-id value by default\n  if the correlation id header arrives but is empty.\n  [#6358](https://github.com/Kong/kong/pull/6358)\n\n\n## [2.1.4]\n\n> Released 2020/09/18\n\nThis is a patch release in the 2.0 series. Being a patch release, it strictly\ncontains bugfixes. The are no new features or breaking changes.\n\n### Fixes\n\n##### Core\n\n- Improve graceful exit of Control Plane and Data Plane nodes in Hybrid Mode.\n  [#6306](https://github.com/Kong/kong/pull/6306)\n\n##### Plugins\n\n- datadog, loggly, statsd: fixes for supporting logging TCP/UDP services.\n  [#6344](https://github.com/Kong/kong/pull/6344)\n- Logging plugins: request and response sizes are now reported\n  by the log serializer as number attributes instead of string.\n  [#6356](https://github.com/Kong/kong/pull/6356)\n- prometheus: Remove unnecessary `WARN` log that was seen in the Kong 2.1\n  series.\n  [#6258](https://github.com/Kong/kong/pull/6258)\n- key-auth: no longer trigger HTTP 400 error when the body cannot be decoded.\n  [#6357](https://github.com/Kong/kong/pull/6357)\n- aws-lambda: respect `skip_large_bodies` config setting even when not using\n  AWS API Gateway compatibility.\n  [#6379](https://github.com/Kong/kong/pull/6379)\n\n\n[Back to TOC](#table-of-contents)\n- Fix issue where `kong reload` would occasionally leave stale workers locked\n  at 100% CPU.\n  [#6300](https://github.com/Kong/kong/pull/6300)\n- Hybrid Mode: more informative error message when the Control Plane cannot\n  be reached.\n  [#6267](https://github.com/Kong/kong/pull/6267)\n\n##### CLI\n\n- `kong hybrid gen_cert` now reports \"permission denied\" errors correctly\n  when it fails to write the certificate files.\n  [#6368](https://github.com/Kong/kong/pull/6368)\n\n##### Plugins\n\n- acl: bumped to 3.0.1\n  * Fix regression in a scenario where an ACL plugin with a `deny` clause\n    was configured for a group that does not exist would cause a HTTP 401\n    when an authenticated plugin would match the anonymous consumer. The\n    behavior is now restored to that seen in Kong 1.x and 2.0.\n    [#6354](https://github.com/Kong/kong/pull/6354)\n- request-transformer: bumped to 1.2.7\n  * Fix the construction of the error message when a template throws a Lua error.\n    [#26](https://github.com/Kong/kong-plugin-request-transformer/pull/26)\n\n\n## [2.1.3]\n\n> Released 2020/08/19\n\nThis is a patch release in the 2.0 series. Being a patch release, it strictly\ncontains bugfixes. The are no new features or breaking changes.\n\n### Fixes\n\n##### Core\n\n- Fix behavior of `X-Forwarded-Prefix` header with stripped path prefixes:\n  the stripped portion of path is now added in `X-Forwarded-Prefix`,\n  except if it is `/` or if it is received from a trusted client.\n  [#6222](https://github.com/Kong/kong/pull/6222)\n\n##### Migrations\n\n- Avoid creating unnecessary an index for Postgres.\n  [#6250](https://github.com/Kong/kong/pull/6250)\n\n##### Admin API\n\n- DB-less: fix concurrency issues with `/config` endpoint. It now waits for\n  the configuration to update across workers before returning, and returns\n  HTTP 429 on attempts to perform concurrent updates and HTTP 504 in case\n  of update timeouts.\n  [#6121](https://github.com/Kong/kong/pull/6121)\n\n##### Plugins\n\n- request-transformer: bump from v1.2.5 to v1.2.6\n  * Fix an issue where query parameters would get incorrectly URL-encoded.\n    [#24](https://github.com/Kong/kong-plugin-request-transformer/pull/24)\n- acl: Fix migration of ACLs table for the Kong 2.1 series.\n  [#6250](https://github.com/Kong/kong/pull/6250)\n\n\n## [2.1.2]\n\n> Released 2020/08/13\n\n:white_check_mark: **Update (2020/08/13)**: This release fixed a balancer\nbug that may cause incorrect request payloads to be sent to unrelated\nupstreams during balancer retries, potentially causing responses for\nother requests to be returned. Therefore it is **highly recommended**\nthat Kong users running versions `2.1.0` and `2.1.1` to upgrade to this\nversion as soon as possible, or apply mitigation from the\n[2.1.0](#210) section below.\n\n### Fixes\n\n##### Core\n\n- Fix a bug that balancer retries causes incorrect requests to be sent to\n  subsequent upstream connections of unrelated requests.\n  [#6224](https://github.com/Kong/kong/pull/6224)\n- Fix an issue where plugins iterator was being built before setting the\n  default workspace id, therefore indexing the plugins under the wrong workspace.\n  [#6206](https://github.com/Kong/kong/pull/6206)\n\n##### Migrations\n\n- Improve reentrancy of Cassandra migrations.\n  [#6206](https://github.com/Kong/kong/pull/6206)\n\n##### PDK\n\n- Make sure the `kong.response.error` PDK function respects gRPC related\n  content types.\n  [#6214](https://github.com/Kong/kong/pull/6214)\n\n\n## [2.1.1]\n\n> Released 2020/08/05\n\n:red_circle: **Post-release note (as of 2020/08/13)**: A faulty behavior\nhas been observed with this change. When Kong proxies using the balancer\nand a request to one of the upstream `Target` fails, Kong might send the\nsame request to another healthy `Target` in a different request later,\ncausing response for the failed request to be returned.\n\nThis bug could be mitigated temporarily by disabling upstream keepalive pools.\nIt can be achieved by either:\n\n1. In `kong.conf`, set `upstream_keepalive_pool_size=0`, or\n2. Setting the environment `KONG_UPSTREAM_KEEPALIVE_POOL_SIZE=0` when starting\n   Kong with the CLI.\n\nThen restart/reload the Kong instance.\n\nThanks Nham Le (@nhamlh) for reporting it in [#6212](https://github.com/Kong/kong/issues/6212).\n\n:white_check_mark: **Update (2020/08/13)**: A fix to this regression has been\nreleased as part of [2.1.2](#212). See the section of the Changelog related to this\nrelease for more details.\n\n### Dependencies\n\n- Bump [lua-multipart](https://github.com/Kong/lua-multipart) to `0.5.9`.\n  [#6148](https://github.com/Kong/kong/pull/6148)\n\n### Fixes\n\n##### Core\n\n- No longer reject valid characters (as specified in the RFC 3986) in the `path` attribute of the\n  Service entity.\n  [#6183](https://github.com/Kong/kong/pull/6183)\n\n##### Migrations\n\n- Fix issue in Cassandra migrations where empty values in some entities would be incorrectly migrated.\n  [#6171](https://github.com/Kong/kong/pull/6171)\n\n##### Admin API\n\n- Fix issue where consumed worker memory as reported by the `kong.node.get_memory_stats()` PDK method would be incorrectly reported in kilobytes, rather than bytes, leading to inaccurate values in the `/status` Admin API endpoint (and other users of said PDK method).\n  [#6170](https://github.com/Kong/kong/pull/6170)\n\n##### Plugins\n\n- rate-limiting: fix issue where rate-limiting by Service would result in a global limit, rather than per Service.\n  [#6157](https://github.com/Kong/kong/pull/6157)\n- rate-limiting: fix issue where a TTL would not be set to some Redis keys.\n  [#6150](https://github.com/Kong/kong/pull/6150)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.1.0]\n\n> Released 2020/07/16\n\n:red_circle: **Post-release note (as of 2020/08/13)**: A faulty behavior\nhas been observed with this change. When Kong proxies using the balancer\nand a request to one of the upstream `Target` fails, Kong might send the\nsame request to another healthy `Target` in a different request later,\ncausing response for the failed request to be returned.\n\nThis bug could be mitigated temporarily by disabling upstream keepalive pools.\nIt can be achieved by either:\n\n1. In `kong.conf`, set `upstream_keepalive_pool_size=0`, or\n2. Setting the environment `KONG_UPSTREAM_KEEPALIVE_POOL_SIZE=0` when starting\n   Kong with the CLI.\n\nThen restart/reload the Kong instance.\n\nThanks Nham Le (@nhamlh) for reporting it in [#6212](https://github.com/Kong/kong/issues/6212).\n\n:white_check_mark: **Update (2020/08/13)**: A fix to this regression has been\nreleased as part of [2.1.2](#212). See the section of the Changelog related to this\nrelease for more details.\n\n### Distributions\n\n- :gift: Introduce package for Ubuntu 20.04.\n  [#6006](https://github.com/Kong/kong/pull/6006)\n- Add `ca-certificates` to the Alpine Docker image.\n  [#373](https://github.com/Kong/docker-kong/pull/373)\n- :warning: The [go-pluginserver](https://github.com/Kong/go-pluginserver) no\n  longer ships with Kong packages; users are encouraged to build it along with\n  their Go plugins. For more info, check out the [Go Guide](https://docs.konghq.com/latest/go/).\n\n### Dependencies\n\n- :warning: In order to use all Kong features, including the new\n  dynamic upstream keepalive behavior, the required OpenResty version is\n  [1.15.8.3](http://openresty.org/en/changelog-1015008.html).\n  If you are installing Kong from one of our distribution\n  packages, this version and all required patches and modules are included.\n  If you are building from source, you must apply\n  Kong's [OpenResty patches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\n  as well as include [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\n  Our [kong-build-tools](https://github.com/Kong/kong-build-tools)\n  repository allows you to do both easily.\n- Bump OpenSSL version from `1.1.1f` to `1.1.1g`.\n  [#5820](https://github.com/Kong/kong/pull/5810)\n- Bump [lua-resty-dns-client](https://github.com/Kong/lua-resty-dns-client) from `4.1.3`\n  to `5.0.1`.\n  [#5499](https://github.com/Kong/kong/pull/5499)\n- Bump [lyaml](https://github.com/gvvaughan/lyaml) from `0.2.4` to `0.2.5`.\n  [#5984](https://github.com/Kong/kong/pull/5984)\n- Bump [lua-resty-openssl](https://github.com/fffonion/lua-resty-openssl)\n  from `0.6.0` to `0.6.2`.\n  [#5941](https://github.com/Kong/kong/pull/5941)\n\n### Changes\n\n##### Core\n\n- Increase maximum allowed payload size in hybrid mode.\n  [#5654](https://github.com/Kong/kong/pull/5654)\n- Targets now support a weight range of 0-65535.\n  [#5871](https://github.com/Kong/kong/pull/5871)\n\n##### Configuration\n\n- :warning: The configuration properties `router_consistency` and\n  `router_update_frequency` have been renamed to `worker_consistency` and\n  `worker_state_update_frequency`, respectively. The new properties allow for\n  configuring the consistency settings of additional internal structures, see\n  below for details.\n  [#5325](https://github.com/Kong/kong/pull/5325)\n- :warning: The `nginx_upstream_keepalive_*` configuration properties have been\n  renamed to `upstream_keepalive_*`. This is due to the introduction of dynamic\n  upstream keepalive pools, see below for details.\n  [#5771](https://github.com/Kong/kong/pull/5771)\n- :warning: The default value of `worker_state_update_frequency` (previously\n  `router_update_frequency`) was changed from `1` to `5`.\n  [#5325](https://github.com/Kong/kong/pull/5325)\n\n##### Plugins\n\n- :warning: Change authentication plugins to standardize on `allow` and\n  `deny` as terms for access control. Previous nomenclature is deprecated and\n  support will be removed in Kong 3.0.\n  * ACL: use `allow` and `deny` instead of `whitelist` and `blacklist`\n  * bot-detection: use `allow` and `deny` instead of `whitelist` and `blacklist`\n  * ip-restriction: use `allow` and `deny` instead of `whitelist` and `blacklist`\n  [#6014](https://github.com/Kong/kong/pull/6014)\n\n### Additions\n\n##### Core\n\n- :fireworks: **Asynchronous upstream updates**: Kong's load balancer is now able to\n  update its internal structures asynchronously instead of onto the request/stream\n  path.\n\n  This change required the introduction of new configuration properties and the\n  deprecation of older ones:\n    - New properties:\n      * `worker_consistency`\n      * `worker_state_update_frequency`\n    - Deprecated properties:\n      * `router_consistency`\n      * `router_update_frequency`\n\n  The new `worker_consistency` property is similar to `router_consistency` and accepts\n  either of `strict` (default, synchronous) or `eventual` (asynchronous). Unlike its\n  deprecated counterpart, this new property aims at configuring the consistency of *all*\n  internal structures of Kong, and not only the router.\n  [#5325](https://github.com/Kong/kong/pull/5325)\n- :fireworks: **Read-Only Postgres**: Kong users are now able to configure\n  a read-only Postgres replica. When configured, Kong will attempt to fulfill\n  read operations through the read-only replica instead of the main Postgres\n  connection.\n  [#5584](https://github.com/Kong/kong/pull/5584)\n- Introducing **dynamic upstream keepalive pools**. This change prevents virtual\n  host confusion when Kong proxies traffic to virtual services (hosted on the\n  same IP/port) over TLS.\n  Keepalive pools are now created by the `upstream IP/upstream port/SNI/client\n  certificate` tuple instead of `IP/port` only. Users running Kong in front of\n  virtual services should consider adjusting their keepalive settings\n  appropriately.\n\n  This change required the introduction of new configuration properties and\n  the deprecation of older ones:\n    - New properties:\n        * `upstream_keepalive_pool_size`\n        * `upstream_keepalive_max_requests`\n        * `upstream_keepalive_idle_timeout`\n    - Deprecated properties:\n        * `nginx_upstream_keepalive`\n        * `nginx_upstream_keepalive_requests`\n        * `nginx_upstream_keepalive_timeout`\n\n  Additionally, this change allows for specifying an indefinite amount of max\n  requests and idle timeout threshold for upstream keepalive connections, a\n  capability that was previously removed by Nginx 1.15.3.\n  [#5771](https://github.com/Kong/kong/pull/5771)\n- The default certificate for the proxy can now be configured via Admin API\n  using the `/certificates` endpoint. A special `*` SNI has been introduced\n  which stands for the default certificate.\n  [#5404](https://github.com/Kong/kong/pull/5404)\n- Add support for PKI in Hybrid Mode mTLS.\n  [#5396](https://github.com/Kong/kong/pull/5396)\n- Add `X-Forwarded-Prefix` to set of headers forwarded to upstream requests.\n  [#5620](https://github.com/Kong/kong/pull/5620)\n- Introduce a `_transform` option to declarative configuration, which allows\n  importing basicauth credentials with and without hashed passwords. This change\n  is only supported in declarative configuration format version `2.1`.\n  [#5835](https://github.com/Kong/kong/pull/5835)\n- Add capability to define different consistency levels for read and write\n  operations in Cassandra. New configuration properties `cassandra_write_consistency`\n  and `cassandra_read_consistency` were introduced and the existing\n  `cassandra_consistency` property was deprecated.\n  Thanks [Abhishekvrshny](https://github.com/Abhishekvrshny) for the patch!\n  [#5812](https://github.com/Kong/kong/pull/5812)\n- Introduce certificate expiry and CA constraint checks to Hybrid Mode\n  certificates (`cluster_cert` and `cluster_ca_cert`).\n  [#6000](https://github.com/Kong/kong/pull/6000)\n- Introduce new attributes to the Services entity, allowing for customizations\n  in TLS verification parameters:\n  [#5976](https://github.com/Kong/kong/pull/5976)\n  * `tls_verify`: whether TLS verification is enabled while handshaking\n    with the upstream Service\n  * `tls_verify_depth`: the maximum depth of verification when validating\n    upstream Service's TLS certificate\n  * `ca_certificates`: the CA trust store to use when validating upstream\n    Service's TLS certificate\n- Introduce new attribute `client_certificate` in Upstreams entry, used\n  for supporting mTLS in active health checks.\n  [#5838](https://github.com/Kong/kong/pull/5838)\n\n##### CLI\n\n- Migrations: add a new `--force` flag to `kong migrations bootstrap`.\n  [#5635](https://github.com/Kong/kong/pull/5635)\n\n##### Configuration\n\n- Introduce configuration property `db_cache_neg_ttl`, allowing the configuration\n  of negative TTL for DB entities.\n  Thanks [ealogar](https://github.com/ealogar) for the patch!\n  [#5397](https://github.com/Kong/kong/pull/5397)\n\n##### PDK\n\n- Support `kong.response.exit` in Stream (L4) proxy mode.\n  [#5524](https://github.com/Kong/kong/pull/5524)\n- Introduce `kong.request.get_forwarded_path` method, which returns\n  the path component of the request's URL, but also considers\n  `X-Forwarded-Prefix` if it comes from a trusted source.\n  [#5620](https://github.com/Kong/kong/pull/5620)\n- Introduce `kong.response.error` method, that allows PDK users to exit with\n  an error while honoring the Accept header or manually forcing a content-type.\n  [#5562](https://github.com/Kong/kong/pull/5562)\n- Introduce `kong.client.tls` module, which provides the following methods for\n  interacting with downstream mTLS:\n  * `kong.client.tls.request_client_certificate()`: request client to present its\n    client-side certificate to initiate mutual TLS authentication between server\n    and client.\n  * `kong.client.tls.disable_session_reuse()`: prevent the TLS session for the current\n    connection from being reused by disabling session ticket and session ID for\n    the current TLS connection.\n  * `kong.client.tls.get_full_client_certificate_chain()`: return the PEM encoded\n    downstream client certificate chain with the client certificate at the top\n    and intermediate certificates (if any) at the bottom.\n  [#5890](https://github.com/Kong/kong/pull/5890)\n- Introduce `kong.log.serialize` method.\n  [#5995](https://github.com/Kong/kong/pull/5995)\n- Introduce new methods to the `kong.service` PDK module:\n  * `kong.service.set_tls_verify()`: set whether TLS verification is enabled while\n    handshaking with the upstream Service\n  * `kong.service.set_tls_verify_depth()`: set the maximum depth of verification\n    when validating upstream Service's TLS certificate\n  * `kong.service.set_tls_verify_store()`: set the CA trust store to use when\n    validating upstream Service's TLS certificate\n\n##### Plugins\n\n- :fireworks: **New Plugin**: introduce the [grpc-web plugin](https://github.com/Kong/kong-plugin-grpc-web), allowing clients\n  to consume gRPC services via the gRPC-Web protocol.\n  [#5607](https://github.com/Kong/kong/pull/5607)\n- :fireworks: **New Plugin**: introduce the [grpc-gateway plugin](https://github.com/Kong/kong-plugin-grpc-gateway), allowing\n  access to upstream gRPC services through a plain HTTP request.\n  [#5939](https://github.com/Kong/kong/pull/5939)\n- Go: add getter and setter methods for `kong.ctx.shared`.\n  [#5496](https://github.com/Kong/kong/pull/5496/)\n- Add `X-Credential-Identifier` header to the following authentication plugins:\n  * basic-auth\n  * key-auth\n  * ldap-auth\n  * oauth2\n  [#5516](https://github.com/Kong/kong/pull/5516)\n- Rate-Limiting: auto-cleanup expired rate-limiting metrics in Postgres.\n  [#5498](https://github.com/Kong/kong/pull/5498)\n- OAuth2: add ability to persist refresh tokens throughout their life cycle.\n  Thanks [amberheilman](https://github.com/amberheilman) for the patch!\n  [#5264](https://github.com/Kong/kong/pull/5264)\n- IP-Restriction: add support for IPv6.\n  [#5640](https://github.com/Kong/kong/pull/5640)\n- OAuth2: add support for PKCE.\n  Thanks [amberheilman](https://github.com/amberheilman) for the patch!\n  [#5268](https://github.com/Kong/kong/pull/5268)\n- OAuth2: allow optional hashing of client secrets.\n  [#5610](https://github.com/Kong/kong/pull/5610)\n- aws-lambda: bump from v3.1.0 to v3.4.0\n  * Add `host` configuration to allow for custom Lambda endpoints.\n    [#35](https://github.com/Kong/kong-plugin-aws-lambda/pull/35)\n- zipkin: bump from 0.2 to 1.1.0\n  * Add support for B3 single header\n    [#66](https://github.com/Kong/kong-plugin-zipkin/pull/66)\n  * Add `traceid_byte_count` config option\n    [#74](https://github.com/Kong/kong-plugin-zipkin/pull/74)\n  * Add support for W3C header\n    [#75](https://github.com/Kong/kong-plugin-zipkin/pull/75)\n  * Add new option `header_type`\n    [#75](https://github.com/Kong/kong-plugin-zipkin/pull/75)\n- serverless-functions: bump from 0.3.1 to 1.0.0\n  * Add ability to run functions in each request processing phase.\n    [#21](https://github.com/Kong/kong-plugin-serverless-functions/pull/21)\n- prometheus: bump from 0.7.1 to 0.9.0\n  * Performance: significant improvements in throughput and CPU usage.\n    [#79](https://github.com/Kong/kong-plugin-prometheus/pull/79)\n  * Expose healthiness of upstreams targets.\n    Thanks [carnei-ro](https://github.com/carnei-ro) for the patch!\n    [#88](https://github.com/Kong/kong-plugin-prometheus/pull/88)\n- rate-limiting: allow rate-limiting by custom header.\n  Thanks [carnei-ro](https://github.com/carnei-ro) for the patch!\n  [#5969](https://github.com/Kong/kong/pull/5969)\n- session: bumped from 2.3.0 to 2.4.0.\n  [#5868](https://github.com/Kong/kong/pull/5868)\n\n### Fixes\n\n##### Core\n\n- Fix memory leak when loading a declarative configuration that fails\n  schema validation.\n  [#5759](https://github.com/Kong/kong/pull/5759)\n- Fix migration issue where the index for the `ca_certificates` table would\n  fail to be created.\n  [#5764](https://github.com/Kong/kong/pull/5764)\n- Fix issue where DNS resolution would fail in DB-less mode.\n  [#5831](https://github.com/Kong/kong/pull/5831)\n\n##### Admin API\n\n- Disallow `PATCH` on `/upstreams/:upstreams/targets/:targets`\n\n##### Plugins\n\n- Go: fix issue where instances of the same Go plugin applied to different\n  Routes would get mixed up.\n  [#5597](https://github.com/Kong/kong/pull/5597)\n- Strip `Authorization` value from logged headers. Values are now shown as\n  `REDACTED`.\n  [#5628](https://github.com/Kong/kong/pull/5628).\n- ACL: respond with HTTP 401 rather than 403 if credentials are not provided.\n  [#5452](https://github.com/Kong/kong/pull/5452)\n- ldap-auth: set credential ID upon authentication, allowing subsequent\n  plugins (e.g., rate-limiting) to act on said value.\n  [#5497](https://github.com/Kong/kong/pull/5497)\n- ldap-auth: hash the cache key generated by the plugin.\n  [#5497](https://github.com/Kong/kong/pull/5497)\n- zipkin: bump from 0.2 to 1.1.0\n  * Stopped tagging non-erroneous spans with `error=false`.\n    [#63](https://github.com/Kong/kong-plugin-zipkin/pull/63)\n  * Changed the structure of `localEndpoint` and `remoteEndpoint`.\n    [#63](https://github.com/Kong/kong-plugin-zipkin/pull/63)\n  * Store annotation times in microseconds.\n    [#71](https://github.com/Kong/kong-plugin-zipkin/pull/71)\n  * Prevent an error triggered when timing-related kong variables\n    were not present.\n    [#71](https://github.com/Kong/kong-plugin-zipkin/pull/71)\n- aws-lambda: AWS regions are no longer validated against a hardcoded list; if an\n  invalid region name is provided, a proxy Internal Server Error is raised,\n  and a DNS resolution error message is logged.\n  [#33](https://github.com/Kong/kong-plugin-aws-lambda/pull/33)\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.0.5]\n\n> Released 2020/06/30\n\n### Dependencies\n\n- Bump OpenSSL version from `1.1.1f` to `1.1.1g`.\n  [#5820](https://github.com/Kong/kong/pull/5810)\n- Bump [go-pluginserver](https://github.com/Kong/go-pluginserver) from version\n  from `0.2.0` to `0.3.2`, leveraging [go-pdk](https://github.com/Kong/go-pdk) `0.3.1`.\n  See the [go-pdk changelog](https://github.com/Kong/go-pdk/blob/master/CHANGELOG.md#v031).\n\n### Fixes\n\n##### Core\n\n- Fix a race condition leading to random config fetching failure in DB-less mode.\n  [#5833](https://github.com/Kong/kong/pull/5833)\n- Fix issue where a respawned worker would not use the existing configuration\n  in DB-less mode.\n  [#5850](https://github.com/Kong/kong/pull/5850)\n- Fix issue where declarative configuration would fail with the error:\n  `Cannot serialise table: excessively sparse array`.\n  [#5768](https://github.com/Kong/kong/pull/5865)\n- Targets now support a weight range of 0-65535.\n  [#5871](https://github.com/Kong/kong/pull/5871)\n- Make kong.ctx.plugin light-thread safe\n  Thanks [tdelaune](https://github.com/tdelaune) for the assistance!\n  [#5873](https://github.com/Kong/kong/pull/5873)\n- Go: fix issue with Go plugins where the plugin instance would be\n  intermittently killed.\n  Thanks [primableatom](https://github.com/primableatom) for the patch!\n  [#5903](https://github.com/Kong/kong/pull/5903)\n- Auto-convert `config.anonymous` from empty string to the `ngx.null` value.\n  [#5906](https://github.com/Kong/kong/pull/5906)\n- Fix issue where DB-less wouldn't correctly validate input with missing IDs,\n  names, or cache key.\n  [#5929](https://github.com/Kong/kong/pull/5929)\n- Fix issue where a request to the upstream health endpoint would fail with\n  HTTP 500 Internal Server Error.\n  [#5943](https://github.com/Kong/kong/pull/5943)\n- Fix issue where providing a declarative configuration file containing\n  fields with explicit null values would result in an error.\n  [#5999](https://github.com/Kong/kong/pull/5999)\n- Fix issue where the balancer wouldn't be built for all workers.\n  [#5931](https://github.com/Kong/kong/pull/5931)\n- Fix issue where a declarative configuration file with primary keys specified\n  as numbers would result in an error.\n  [#6005](https://github.com/Kong/kong/pull/6005)\n\n##### CLI\n\n##### Configuration\n\n- Fix issue where the Postgres password from the Kong configuration file\n  would be truncated if it contained a `#` character.\n  [#5822](https://github.com/Kong/kong/pull/5822)\n\n##### Admin API\n\n- Fix issue where a `PUT` request on `/upstreams/:upstreams/targets/:targets`\n  would result in HTTP 500 Internal Server Error.\n  [#6012](https://github.com/Kong/kong/pull/6012)\n\n##### PDK\n\n- Stop request processing flow if body encoding fails.\n  [#5829](https://github.com/Kong/kong/pull/5829)\n- Ensure `kong.service.set_target()` includes the port number if a non-default\n  port is used.\n  [#5996](https://github.com/Kong/kong/pull/5996)\n\n##### Plugins\n\n- Go: fix issue where the go-pluginserver would not reload Go plugins'\n  configurations.\n  Thanks [wopol](https://github.com/wopol) for the patch!\n  [#5866](https://github.com/Kong/kong/pull/5866)\n- basic-auth: avoid fetching credentials when password is not given.\n  Thanks [Abhishekvrshny](https://github.com/Abhishekvrshny) for the patch!\n  [#5880](https://github.com/Kong/kong/pull/5880)\n- cors: avoid overwriting upstream response `Vary` header; new values are now\n  added as additional `Vary` headers.\n  Thanks [aldor007](https://github.com/aldor007) for the patch!\n  [#5794](https://github.com/Kong/kong/pull/5794)\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.0.4]\n\n> Released 2020/04/22\n\n### Fixes\n\n##### Core\n\n  - Disable JIT mlcache:get_bulk() on ARM64\n    [#5797](https://github.com/Kong/kong/pull/5797)\n  - Don't incrementing log counters on unexpected errors\n    [#5783](https://github.com/Kong/kong/pull/5783)\n  - Invalidate target history at cleanup so balancers stay synced\n    [#5775](https://github.com/Kong/kong/pull/5775)\n  - Set a log prefix with the upstream name\n    [#5773](https://github.com/Kong/kong/pull/5773)\n  - Fix memory leaks when loading a declarative config that fails schema validation\n    [#5766](https://github.com/Kong/kong/pull/5766)\n  - Fix some balancer and cluster_events issues\n    [#5804](https://github.com/Kong/kong/pull/5804)\n\n##### Configuration\n\n  - Send declarative config updates to stream subsystem via Unix domain\n    [#5786](https://github.com/Kong/kong/pull/5786)\n  - Now when using declarative configurations the cache is purged on reload, cleaning any references to removed entries\n    [#5769](https://github.com/Kong/kong/pull/5769)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.0.3]\n\n> Released 2020/04/06\n\nThis is a patch release in the 2.0 series. Being a patch release, it strictly\ncontains performance improvements and bugfixes. The are no new features or\nbreaking changes.\n\n### Fixes\n\n##### Core\n\n  - Setting the target weight to 0 does not automatically remove the upstream.\n    [#5710](https://github.com/Kong/kong/pull/5710).\n  - The plugins iterator is now always fully built, even if the initialization\n    of any of them fails.\n    [#5692](https://github.com/Kong/kong/pull/5692).\n  - Fixed the load of `dns_not_found_ttl` and `dns_error_ttl` configuration\n    options.\n    [#5684](https://github.com/Kong/kong/pull/5684).\n  - Consumers and tags are properly warmed-up from the plugins' perspective,\n    i.e. they are loaded to the cache space that plugins access.\n    [#5669](https://github.com/Kong/kong/pull/5669).\n  - Customized error messages don't affect subsequent default error responses\n    now.\n    [#5673](https://github.com/Kong/kong/pull/5673).\n\n##### CLI\n\n  - Fixed the `lua_package_path` option precedence over `LUA_PATH` environment\n    variable.\n    [#5729](https://github.com/Kong/kong/pull/5729).\n  - Support to Nginx binary upgrade by correctly handling the `USR2` signal.\n    [#5657](https://github.com/Kong/kong/pull/5657).\n\n##### Configuration\n\n  - Fixed the logrotate configuration file with the right line terminators.\n    [#243](https://github.com/Kong/kong-build-tools/pull/243).\n    Thanks, [WALL-E](https://github.com/WALL-E)\n\n##### Admin API\n\n  - Fixed the `sni is duplicated` error when sending multiple `SNIs` as body\n    arguments and an `SNI` on URL that matched one from the body.\n    [#5660](https://github.com/Kong/kong/pull/5660).\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.0.2]\n\n> Released 2020/02/27\n\nThis is a patch release in the 2.0 series. Being a patch release, it strictly\ncontains performance improvements and bugfixes. The are no new features or\nbreaking changes.\n\n### Fixes\n\n##### Core\n\n  - Fix issue related to race condition in Cassandra select each method\n    [#5564](https://github.com/Kong/kong/pull/5564).\n    Thanks, [vasuharish](https://github.com/vasuharish)!\n  - Fix issue related to running control plane under multiple Nginx workers\n    [#5612](https://github.com/Kong/kong/pull/5612).\n  - Don't change route paths when marshaling\n    [#5587](https://github.com/Kong/kong/pull/5587).\n  - Fix propagation of posted health across workers\n    [#5539](https://github.com/Kong/kong/pull/5539).\n  - Use proper units for timeouts with cassandra\n    [#5571](https://github.com/Kong/kong/pull/5571).\n  - Fix broken SNI based routing in L4 proxy mode\n    [#5533](https://github.com/Kong/kong/pull/5533).\n\n##### Plugins\n\n  - Enable the ACME plugin by default\n    [#5555](https://github.com/Kong/kong/pull/5555).\n  - Accept consumer username in anonymous field\n    [#5552](https://github.com/Kong/kong/pull/5552).\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.0.1]\n\n> Released 2020/02/04\n\nThis is a patch release in the 2.0 series. Being a patch release, it strictly\ncontains performance improvements and bugfixes. The are no new features or\nbreaking changes.\n\n\n### Fixes\n\n##### Core\n\n  - Migrations include the configured Lua path now\n    [#5509](https://github.com/Kong/kong/pull/5509).\n  - Hop-by-hop headers to not clear upgrade header on upgrade\n    [#5495](https://github.com/Kong/kong/pull/5495).\n  - Balancers now properly check if a response is produced by an upstream\n    [#5493](https://github.com/Kong/kong/pull/5493).\n    Thanks, [onematchfox](https://github.com/onematchfox)!\n  - Kong correctly logs an error message when the Lua VM cannot allocate memory\n    [#5479](https://github.com/Kong/kong/pull/5479)\n    Thanks, [pamiel](https://github.com/pamiel)!\n  - Schema validations work again in DB-less mode\n    [#5464](https://github.com/Kong/kong/pull/5464).\n\n##### Plugins\n\n  - oauth2: handle `Authorization` headers with missing `access_token` correctly.\n    [#5514](https://github.com/Kong/kong/pull/5514).\n    Thanks, [jeremyjpj0916](https://github.com/jeremyjpj0916)!\n  - oauth2: hash oauth2_tokens cache key via the DAO\n    [#5507](https://github.com/Kong/kong/pull/5507)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [2.0.0]\n\n> Released 2020/01/20\n\nThis is a new major release of Kong, including new features such as **Hybrid\nmode**, **Go language support for plugins** and **buffered proxying**, and\nmuch more.\n\nKong 2.0.0 removes the deprecated service mesh functionality, which was\nbeen retired in favor of [Kuma](https://kuma.io), as Kong continues to\nfocus on its core gateway capabilities.\n\nPlease note that Kong 2.0.0 also removes support for migrating from versions\nbelow 1.0.0. If you are running Kong 0.x versions below 0.14.1, you need to\nmigrate to 0.14.1 first, and once you are running 0.14.1, you can migrate to\nKong 1.5.0, which includes special provisions for migrating from Kong 0.x,\nsuch as the `kong migrations migrate-apis` command, and then finally to Kong\n2.0.0.\n\n### Dependencies\n\n- :warning: The required OpenResty version is\n  [1.15.8.2](http://openresty.org/en/changelog-1015008.html), and the\n  the set of patches included has changed, including the latest release of\n  [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\n  If you are installing Kong from one of our distribution\n  packages, you are not affected by this change.\n\n**Note:** if you are not using one of our distribution packages and compiling\nOpenResty from source, you must still apply Kong's [OpenResty\npatches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\n(and, as highlighted above, compile OpenResty with the new\nlua-kong-nginx-module). Our [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository will allow you to do both easily.\n\n### Packaging\n\n- RPM packages are now signed with our own GPG keys. You can download our public\n  key at https://bintray.com/user/downloadSubjectPublicKey?username=kong\n- Kong now ships with a systemd unit file\n\n### Additions\n\n##### Core\n\n  - :fireworks: **Hybrid mode** for management of control-plane and\n    data-plane nodes. This allows running control-plane nodes using a\n    database and have them deliver configuration updates to DB-less\n    data-plane nodes.\n    [#5294](https://github.com/Kong/kong/pull/5294)\n  - :fireworks: **Buffered proxying** - plugins can now request buffered\n    reading of the service response (as opposed to the streaming default),\n    allowing them to modify headers based on the contents of the body\n    [#5234](https://github.com/Kong/kong/pull/5234)\n  - The `transformations` in DAO schemas now also support `on_read`,\n    allowing for two-way (read/write) data transformations between\n    Admin API input/output and database storage.\n    [#5100](https://github.com/Kong/kong/pull/5100)\n  - Added `threshold` attribute for health checks\n    [#5206](https://github.com/Kong/kong/pull/5206)\n  - Caches for core entities and plugin-controlled entities (such as\n    credentials, etc.) are now separated, protecting the core entities\n    from cache eviction caused by plugin behavior.\n    [#5114](https://github.com/Kong/kong/pull/5114)\n  - Cipher suite was updated to the Mozilla v5 release.\n    [#5342](https://github.com/Kong/kong/pull/5342)\n  - Better support for using already existing Cassandra keyspaces\n    when migrating\n    [#5361](https://github.com/Kong/kong/pull/5361)\n  - Better log messages when plugin modules fail to load\n    [#5357](https://github.com/Kong/kong/pull/5357)\n  - `stream_listen` now supports the `backlog` option.\n    [#5346](https://github.com/Kong/kong/pull/5346)\n  - The internal cache was split into two independent segments,\n    `kong.core_cache` and `kong.cache`. The `core_cache` region is\n    used by the Kong core to store configuration data that doesn't\n    change often. The other region is used to store plugin\n    runtime data that is dependent on traffic pattern and user\n    behavior. This change should decrease the cache contention\n    between Kong core and plugins and result in better performance\n    overall.\n    - :warning: Note that both structures rely on the already existent\n      `mem_cache_size` configuration option to set their size,\n      so when upgrading from a previous Kong version, the cache\n      memory consumption might double if this value is not adjusted\n      [#5114](https://github.com/Kong/kong/pull/5114)\n\n##### CLI\n\n  - `kong config init` now accepts a filename argument\n    [#4451](https://github.com/Kong/kong/pull/4451)\n\n##### Configuration\n\n  - :fireworks: **Extended support for Nginx directive injections**\n    via Kong configurations, reducing the needs for custom Nginx\n    templates. New injection contexts were added: `nginx_main_`,\n    `nginx_events` and `nginx_supstream_` (`upstream` in `stream`\n    mode).\n    [#5390](https://github.com/Kong/kong/pull/5390)\n  - Enable `reuseport` option in the listen directive by default\n    and allow specifying both `reuseport` and `backlog=N` in the\n    listener flags.\n    [#5332](https://github.com/Kong/kong/pull/5332)\n  - Check existence of `lua_ssl_trusted_certificate` at startup\n    [#5345](https://github.com/Kong/kong/pull/5345)\n\n##### Admin API\n\n  - Added `/upstreams/<id>/health?balancer_health=1` attribute for\n    detailed information about balancer health based on health\n    threshold configuration\n    [#5206](https://github.com/Kong/kong/pull/5206)\n\n##### PDK\n\n  - New functions `kong.service.request.enable_buffering`,\n    `kong.service.response.get_raw_body` and\n    `kong.service.response.get_body` for use with buffered proxying\n    [#5315](https://github.com/Kong/kong/pull/5315)\n\n##### Plugins\n\n  - :fireworks: **Go plugin support** - plugins can now be written in\n    Go as well as Lua, through the use of an out-of-process Go plugin server.\n    [#5326](https://github.com/Kong/kong/pull/5326)\n  - The lifecycle of the Plugin Server daemon for Go language support is\n    managed by Kong itself.\n    [#5366](https://github.com/Kong/kong/pull/5366)\n  - :fireworks: **New plugin: ACME** - Let's Encrypt and ACMEv2 integration with Kong\n    [#5333](https://github.com/Kong/kong/pull/5333)\n  - :fireworks: aws-lambda: bumped version to 3.0.1, with a number of new features!\n    [#5083](https://github.com/Kong/kong/pull/5083)\n  - :fireworks: prometheus: bumped to version 0.7.0 including major performance improvements\n    [#5295](https://github.com/Kong/kong/pull/5295)\n  - zipkin: bumped to version 0.2.1\n    [#5239](https://github.com/Kong/kong/pull/5239)\n  - session: bumped to version 2.2.0, adding `authenticated_groups` support\n    [#5108](https://github.com/Kong/kong/pull/5108)\n  - rate-limiting: added experimental support for standardized headers based on the\n    ongoing [RFC draft](https://tools.ietf.org/html/draft-polli-ratelimit-headers-01)\n    [#5335](https://github.com/Kong/kong/pull/5335)\n  - rate-limiting: added Retry-After header on HTTP 429 responses\n    [#5329](https://github.com/Kong/kong/pull/5329)\n  - datadog: report metrics with tags --\n    Thanks [mvanholsteijn](https://github.com/mvanholsteijn) for the patch!\n    [#5154](https://github.com/Kong/kong/pull/5154)\n  - request-size-limiting: added `size_unit` configuration option.\n    [#5214](https://github.com/Kong/kong/pull/5214)\n  - request-termination: add extra check for `conf.message` before sending\n    response back with body object included.\n    [#5202](https://github.com/Kong/kong/pull/5202)\n  - jwt: add `X-Credential-Identifier` header in response --\n    Thanks [davinwang](https://github.com/davinwang) for the patch!\n    [#4993](https://github.com/Kong/kong/pull/4993)\n\n### Fixes\n\n##### Core\n\n  - Correct detection of update upon deleting Targets --\n    Thanks [pyrl247](https://github.com/pyrl247) for the patch!\n  - Fix declarative config loading of entities with abstract records\n    [#5343](https://github.com/Kong/kong/pull/5343)\n  - Fix sort priority when matching routes by longest prefix\n    [#5430](https://github.com/Kong/kong/pull/5430)\n  - Detect changes in Routes that happen halfway through a router update\n    [#5431](https://github.com/Kong/kong/pull/5431)\n\n##### Admin API\n\n  - Corrected the behavior when overwriting a Service configuration using\n    the `url` shorthand\n    [#5315](https://github.com/Kong/kong/pull/5315)\n\n##### Core\n\n  - :warning: **Removed Service Mesh support** - That has been deprecated in\n    Kong 1.4 and made off-by-default already, and the code is now gone in 2.0.\n    For Service Mesh, we now have [Kuma](https://kuma.io), which is something\n    designed for Mesh patterns from day one, so we feel at peace with removing\n    Kong's native Service Mesh functionality and focus on its core capabilities\n    as a gateway.\n\n##### Configuration\n\n  - Routes using `tls` are now supported in stream mode by adding an\n    entry in `stream_listen` with the `ssl` keyword enabled.\n    [#5346](https://github.com/Kong/kong/pull/5346)\n  - As part of service mesh removal, serviceless proxying was removed.\n    You can still set `service = null` when creating a route for use with\n    serverless plugins such as `aws-lambda`, or `request-termination`.\n    [#5353](https://github.com/Kong/kong/pull/5353)\n  - Removed the `origins` property which was used for service mesh.\n    [#5351](https://github.com/Kong/kong/pull/5351)\n  - Removed the `transparent` property which was used for service mesh.\n    [#5350](https://github.com/Kong/kong/pull/5350)\n  - Removed the `nginx_optimizations` property; the equivalent settings\n    can be performed via Nginx directive injections.\n    [#5390](https://github.com/Kong/kong/pull/5390)\n  - The Nginx directive injection prefixes `nginx_http_upstream_`\n    and `nginx_http_status_` were renamed to `nginx_upstream_` and\n    `nginx_status_` respectively.\n    [#5390](https://github.com/Kong/kong/pull/5390)\n\n##### Plugins\n\n  - Removed the Sidecar Injector plugin which was used for service mesh.\n    [#5199](https://github.com/Kong/kong/pull/5199)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [1.5.1]\n\n> Released 2020/02/19\n\nThis is a patch release over 1.5.0, fixing a minor issue in the `kong migrations migrate-apis`\ncommand, which assumed execution in a certain order in the migration process. This now\nallows the command to be executed prior to running the migrations from 0.x to 1.5.1.\n\n### Fixes\n\n##### CLI\n\n  - Do not assume new fields are already available when running `kong migrations migrate-apis`\n    [#5572](https://github.com/Kong/kong/pull/5572)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [1.5.0]\n\n> Released 2020/01/20\n\nKong 1.5.0 is the last release in the Kong 1.x series, and it was designed to\nhelp Kong 0.x users upgrade out of that series and into more current releases.\nKong 1.5.0 includes two features designed to ease the transition process: the\nnew `kong migrations migrate-apis` commands, to help users migrate away from\nold `apis` entities which were deprecated in Kong 0.13.0 and removed in Kong\n1.0.0, and a compatibility flag to provide better router compatibility across\nKong versions.\n\n### Additions\n\n##### Core\n\n  - New `path_handling` attribute in Routes entities, which selects the behavior\n    the router will have when combining the Service Path, the Route Path, and\n    the Request path into a single path sent to the upstream. This attribute\n    accepts two values, `v0` or `v1`, making the router behave as in Kong 0.x or\n    Kong 1.x, respectively. [#5360](https://github.com/Kong/kong/pull/5360)\n\n##### CLI\n\n  - New command `kong migrations migrate-apis`, which converts any existing\n    `apis` from an old Kong 0.x installation and generates Route, Service and\n    Plugin entities with equivalent configurations. The converted routes are\n    set to use `path_handling = v0`, to ensure compatibility.\n    [#5176](https://github.com/Kong/kong/pull/5176)\n\n### Fixes\n\n##### Core\n\n  - Fixed the routing prioritization that could lead to a match in a lower\n    priority path. [#5443](https://github.com/Kong/kong/pull/5443)\n  - Changes in router or plugins entities while the rebuild is in progress now\n    are treated in the next rebuild, avoiding to build invalid iterators.\n    [#5431](https://github.com/Kong/kong/pull/5431)\n  - Fixed invalid incorrect calculation of certificate validity period.\n    [#5449](https://github.com/Kong/kong/pull/5449) -- Thanks\n    [Bevisy](https://github.com/Bevisy) for the patch!\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [1.4.3]\n\n> Released 2020/01/09\n\n:warning: This release includes a security fix to address potentially\nsensitive information being written to the error log file. This affects\ncertain uses of the Admin API for DB-less mode, described below.\n\nThis is a patch release in the 1.4 series, and as such, strictly contains\nbugfixes. There are no new features nor breaking changes.\n\n### Fixes\n\n##### Core\n\n  - Fix the detection of the need for balancer updates\n    when deleting targets\n    [#5352](https://github.com/kong/kong/issues/5352) --\n    Thanks [zeeshen](https://github.com/zeeshen) for the patch!\n  - Fix behavior of longest-path criteria when matching routes\n    [#5383](https://github.com/kong/kong/issues/5383)\n  - Fix incorrect use of cache when using header-based routing\n    [#5267](https://github.com/kong/kong/issues/5267) --\n    Thanks [marlonfan](https://github.com/marlonfan) for the patch!\n\n##### Admin API\n\n  - Do not make a debugging dump of the declarative config input into\n    `error.log` when posting it with `/config` and using `_format_version`\n    as a top-level parameter (instead of embedded in the `config` parameter).\n    [#5411](https://github.com/kong/kong/issues/5411)\n  - Fix incorrect behavior of PUT for /certificates\n    [#5321](https://github.com/kong/kong/issues/5321)\n\n##### Plugins\n\n  - acl: fixed an issue where getting ACLs by group failed when multiple\n    consumers share the same group\n    [#5322](https://github.com/kong/kong/issues/5322)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [1.4.2]\n\n> Released 2019/12/10\n\nThis is another patch release in the 1.4 series, and as such, strictly\ncontains bugfixes. There are no new features nor breaking changes.\n\n### Fixes\n\n##### Core\n\n  - Fixes some corner cases in the balancer behavior\n    [#5318](https://github.com/Kong/kong/pull/5318)\n\n##### Plugins\n\n  - http-log: disable queueing when using the default\n    settings, to avoid memory consumption issues\n    [#5323](https://github.com/Kong/kong/pull/5323)\n  - prometheus: restore compatibility with version 0.6.0\n    [#5303](https://github.com/Kong/kong/pull/5303)\n\n\n[Back to TOC](#table-of-contents)\n\n\n## [1.4.1]\n\n> Released 2019/12/03\n\nThis is a patch release in the 1.4 series, and as such, strictly contains\nbugfixes. There are no new features nor breaking changes.\n\n### Fixes\n\n##### Core\n\n  - Fixed a memory leak in the balancer\n    [#5229](https://github.com/Kong/kong/pull/5229) --\n    Thanks [zeeshen](https://github.com/zeeshen) for the patch!\n  - Removed arbitrary limit on worker connections.\n    [#5148](https://github.com/Kong/kong/pull/5148)\n  - Fixed `preserve_host` behavior for gRPC routes\n    [#5225](https://github.com/Kong/kong/pull/5225)\n  - Fix migrations for ttl for OAuth2 tokens\n    [#5253](https://github.com/Kong/kong/pull/5253)\n  - Improve handling of errors when creating balancers\n    [#5284](https://github.com/Kong/kong/pull/5284)\n\n##### CLI\n\n  - Fixed an issue with `kong config db_export` when reading\n    entities that are ttl-enabled and whose ttl value is `null`.\n    [#5185](https://github.com/Kong/kong/pull/5185)\n\n##### Admin API\n\n  - Various fixes for Admin API behavior\n    [#5174](https://github.com/Kong/kong/pull/5174),\n    [#5178](https://github.com/Kong/kong/pull/5178),\n    [#5191](https://github.com/Kong/kong/pull/5191),\n    [#5186](https://github.com/Kong/kong/pull/5186)\n\n##### Plugins\n\n  - http-log: do not impose a retry delay on successful sends\n    [#5282](https://github.com/Kong/kong/pull/5282)\n\n\n[Back to TOC](#table-of-contents)\n\n## [1.4.0]\n\n> Released on 2019/10/22\n\n### Installation\n\n  - :warning: All Bintray assets have been renamed from `.all.` / `.noarch.` to be\n    architecture specific namely `.arm64.` and `.amd64.`\n\n### Additions\n\n##### Core\n\n  - :fireworks: New configuration option `cassandra_refresh_frequency` to set\n    the frequency that Kong will check for Cassandra cluster topology changes,\n    avoiding restarts when Cassandra nodes are added or removed.\n    [#5071](https://github.com/Kong/kong/pull/5071)\n  - New `transformations` property in DAO schemas, which allows adding functions\n    that run when database rows are inserted or updated.\n    [#5047](https://github.com/Kong/kong/pull/5047)\n  - The new attribute `hostname` has been added to `upstreams` entities. This\n    attribute is used as the `Host` header when proxying requests through Kong\n    to servers that are listening on server names that are different from the\n    names to which they resolve.\n    [#4959](https://github.com/Kong/kong/pull/4959)\n  - New status interface has been introduced. It exposes insensitive health,\n    metrics and error read-only information from Kong, which can be consumed by\n    other services in the infrastructure to monitor Kong's health.\n    This removes the requirement of the long-used workaround to monitor Kong's\n    health by injecting a custom server block.\n    [#4977](https://github.com/Kong/kong/pull/4977)\n  - New Admin API response header `X-Kong-Admin-Latency`, reporting the time\n    taken by Kong to process an Admin API request.\n    [#4966](https://github.com/Kong/kong/pull/4996/files)\n\n##### Configuration\n\n  - :warning: New configuration option `service_mesh` which enables or disables\n    the Service Mesh functionality. The Service Mesh is being deprecated and\n    will not be available in the next releases of Kong.\n    [#5124](https://github.com/Kong/kong/pull/5124)\n  - New configuration option `router_update_frequency` that allows setting the\n    frequency that router and plugins will be checked for changes. This new\n    option avoids performance degradation when Kong routes or plugins are\n    frequently changed. [#4897](https://github.com/Kong/kong/pull/4897)\n\n##### Plugins\n\n  - rate-limiting: in addition to consumer, credential, and IP levels, now\n    rate-limiting plugin has service-level support. Thanks\n    [wuguangkuo](https://github.com/wuguangkuo) for the patch!\n    [#5031](https://github.com/Kong/kong/pull/5031)\n  - Now rate-limiting `local` policy counters expire using the shared\n    dictionary's TTL, avoiding to keep unnecessary counters in memory. Thanks\n    [cb372](https://github.com/cb372) for the patch!\n    [#5029](https://github.com/Kong/kong/pull/5029)\n  - Authentication plugins have support for tags now.\n    [#4945](https://github.com/Kong/kong/pull/4945)\n  - response-transformer plugin now supports renaming response headers. Thanks\n    [aalmazanarbs](https://github.com/aalmazanarbs) for the patch!\n    [#5040](https://github.com/Kong/kong/pull/5040)\n\n### Fixes\n\n##### Core\n\n  - :warning: Service Mesh is known to cause HTTPS requests to upstream to\n    ignore `proxy_ssl*` directives, so it is being discontinued in the next\n    major release of Kong. In this release it is disabled by default, avoiding\n    this issue, and it can be enabled as aforementioned in the configuration\n    section. [#5124](https://github.com/Kong/kong/pull/5124)\n  - Fixed an issue on reporting the proper request method and URL arguments on\n    NGINX-produced errors in logging plugins.\n    [#5073](https://github.com/Kong/kong/pull/5073)\n  - Fixed an issue where targets were not properly updated in all Kong workers\n    when they were removed. [#5041](https://github.com/Kong/kong/pull/5041)\n  - Deadlocks cases in database access functions when using Postgres and\n    cleaning up `cluster_events` in high-changing scenarios were fixed.\n    [#5118](https://github.com/Kong/kong/pull/5118)\n  - Fixed issues with tag-filtered GETs on Cassandra-backed nodes.\n    [#5105](https://github.com/Kong/kong/pull/5105)\n\n##### Configuration\n\n  - Fixed Lua parsing and error handling in declarative configurations.\n    [#5019](https://github.com/Kong/kong/pull/5019)\n  - Automatically escape any unescaped `#` characters in parsed `KONG_*`\n    environment variables. [#5062](https://github.com/Kong/kong/pull/5062)\n\n##### Plugins\n\n  - file-log: creates log file with proper permissions when Kong uses\n    declarative config. [#5028](https://github.com/Kong/kong/pull/5028)\n  - basic-auth: fixed credentials parsing when using DB-less\n    configurations. [#5080](https://github.com/Kong/kong/pull/5080)\n  - jwt: plugin handles empty claims and return the correct error message.\n    [#5123](https://github.com/Kong/kong/pull/5123)\n    Thanks to [@jeremyjpj0916](https://github.com/jeremyjpj0916) for the patch!\n  - serverless-functions: Lua code in declarative configurations is validated\n    and loaded correctly.\n    [#24](https://github.com/Kong/kong-plugin-serverless-functions/pull/24)\n  - request-transformer: fixed bug on removing and then adding request headers\n    with the same name.\n    [#9](https://github.com/Kong/kong-plugin-request-transformer/pull/9)\n\n\n[Back to TOC](#table-of-contents)\n\n## [1.3.0]\n\n> Released on 2019/08/21\n\nKong 1.3 is the first version to officially support **gRPC proxying**!\n\nFollowing our vision for Kong to proxy modern Web services protocols, we are\nexcited for this newest addition to the family of protocols already supported\nby Kong (HTTP(s), WebSockets, and TCP). As we have recently stated in our\nlatest [Community Call](https://konghq.com/community-call/), more protocols are\nto be expected in the future.\n\nAdditionally, this release includes several highly-requested features such as\nsupport for upstream **mutual TLS**, **header-based routing** (not only\n`Host`), **database export**, and **configurable upstream keepalive\ntimeouts**.\n\n### Changes\n\n##### Dependencies\n\n- :warning: The required OpenResty version has been bumped to\n  [1.15.8.1](http://openresty.org/en/changelog-1015008.html). If you are\n  installing Kong from one of our distribution packages, you are not affected\n  by this change. See [#4382](https://github.com/Kong/kong/pull/4382).\n  With this new version comes a number of improvements:\n  1. The new [ngx\\_http\\_grpc\\_module](https://nginx.org/en/docs/http/ngx_http_grpc_module.html).\n  2. Configurable of upstream keepalive connections by timeout or number of\n     requests.\n  3. Support for ARM64 architectures.\n  4. LuaJIT GC64 mode for x86_64 architectures, raising the LuaJIT GC-managed\n     memory limit from 2GB to 128TB and producing more predictable GC\n     performance.\n- :warning: From this version on, the new\n  [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module) Nginx\n  module is **required** to be built into OpenResty for Kong to function\n  properly. This new module allows Kong to support new features such as mutual\n  TLS authentication. If you are installing Kong from one of our distribution\n  packages, you are not affected by this change.\n  [openresty-build-tools#26](https://github.com/Kong/openresty-build-tools/pull/26)\n\n**Note:** if you are not using one of our distribution packages and compiling\nOpenResty from source, you must still apply Kong's [OpenResty\npatches](https://github.com/kong/openresty-patches) (and, as highlighted above,\ncompile OpenResty with the new lua-kong-nginx-module). Our new\n[openresty-build-tools](https://github.com/Kong/openresty-build-tools)\nrepository will allow you to do both easily.\n\n##### Core\n\n- :warning: Bugfixes in the router *may, in some edge-cases*, result in\n  different Routes being matched. It was reported to us that the router behaved\n  incorrectly in some cases when configuring wildcard Hosts and regex paths\n  (e.g. [#3094](https://github.com/Kong/kong/issues/3094)). It may be so that\n  you are subject to these bugs without realizing it. Please ensure that\n  wildcard Hosts and regex paths Routes you have configured are matching as\n  expected before upgrading.\n  See [9ca4dc0](https://github.com/Kong/kong/commit/9ca4dc09fdb12b340531be8e0f9d1560c48664d5),\n  [2683b86](https://github.com/Kong/kong/commit/2683b86c2f7680238e3fe85da224d6f077e3425d), and\n  [6a03e1b](https://github.com/Kong/kong/commit/6a03e1bd95594716167ccac840ff3e892ed66215)\n  for details.\n- Upstream connections are now only kept-alive for 100 requests or 60 seconds\n  (idle) by default. Previously, upstream connections were not actively closed\n  by Kong. This is a (non-breaking) change in behavior, inherited from Nginx\n  1.15, and configurable via new configuration properties (see below).\n\n##### Configuration\n\n- :warning: The `upstream_keepalive` configuration property is deprecated, and\n  replaced by the new `nginx_http_upstream_keepalive` property. Its behavior is\n  almost identical, but the notable difference is that the latter leverages the\n  [injected Nginx\n  directives](https://konghq.com/blog/kong-ce-nginx-injected-directives/)\n  feature added in Kong 0.14.0.\n  In future releases, we will gradually increase support for injected Nginx\n  directives. We have high hopes that this will remove the occasional need for\n  custom Nginx configuration templates.\n  [#4382](https://github.com/Kong/kong/pull/4382)\n\n### Additions\n\n##### Core\n\n- :fireworks: **Native gRPC proxying.** Two new protocol types; `grpc` and\n  `grpcs` correspond to gRPC over h2c and gRPC over h2. They can be specified\n  on a Route or a Service's `protocol` attribute (e.g. `protocol = grpcs`).\n  When an incoming HTTP/2 request matches a Route with a `grpc(s)` protocol,\n  the request will be handled by the\n  [ngx\\_http\\_grpc\\_module](https://nginx.org/en/docs/http/ngx_http_grpc_module.html),\n  and proxied to the upstream Service according to the gRPC protocol\n  specifications.  :warning: Note that not all Kong plugins are compatible with\n  gRPC requests yet.  [#4801](https://github.com/Kong/kong/pull/4801)\n- :fireworks: **Mutual TLS** handshake with upstream services. The Service\n  entity now has a new `client_certificate` attribute, which is a foreign key\n  to a Certificate entity. If specified, Kong will use the Certificate as a\n  client TLS cert during the upstream TLS handshake.\n  [#4800](https://github.com/Kong/kong/pull/4800)\n- :fireworks: **Route by any request header**. The router now has the ability\n  to match Routes by any request header (not only `Host`). The Route entity now\n  has a new `headers` attribute, which is a map of headers names and values.\n  E.g. `{ \"X-Forwarded-Host\": [\"example.org\"], \"Version\": [\"2\", \"3\"] }`.\n  [#4758](https://github.com/Kong/kong/pull/4758)\n- :fireworks: **Least-connection load-balancing**. A new `algorithm` attribute\n  has been added to the Upstream entity. It can be set to `\"round-robin\"`\n  (default), `\"consistent-hashing\"`, or `\"least-connections\"`.\n  [#4528](https://github.com/Kong/kong/pull/4528)\n- A new core entity, \"CA Certificates\" has been introduced and can be accessed\n  via the new `/ca_certificates` Admin API endpoint. CA Certificates entities\n  will be used as CA trust store by Kong. Certificates stored by this entity\n  need not include their private key.\n  [#4798](https://github.com/Kong/kong/pull/4798)\n- Healthchecks now use the combination of IP + Port + Hostname when storing\n  upstream health information. Previously, only IP + Port were used. This means\n  that different virtual hosts served behind the same IP/port will be treated\n  differently with regards to their health status. New endpoints were added to\n  the Admin API to manually set a Target's health status.\n  [#4792](https://github.com/Kong/kong/pull/4792)\n\n##### Configuration\n\n- :fireworks: A new section in the `kong.conf` file describes [injected Nginx\n  directives](https://konghq.com/blog/kong-ce-nginx-injected-directives/)\n  (added to Kong 0.14.0) and specifies a few default ones.\n  In future releases, we will gradually increase support for injected Nginx\n  directives. We have high hopes that this will remove the occasional need for\n  custom Nginx configuration templates.\n  [#4382](https://github.com/Kong/kong/pull/4382)\n- :fireworks: New configuration properties allow for controlling the behavior of\n  upstream keepalive connections. `nginx_http_upstream_keepalive_requests` and\n  `nginx_http_upstream_keepalive_timeout` respectively control the maximum\n  number of proxied requests and idle timeout of an upstream connection.\n  [#4382](https://github.com/Kong/kong/pull/4382)\n- New flags have been added to the `*_listen` properties: `deferred`, `bind`,\n  and `reuseport`.\n  [#4692](https://github.com/Kong/kong/pull/4692)\n\n##### CLI\n\n- :fireworks: **Database export** via the new `kong config db_export` CLI\n  command. This command will export the configuration present in the database\n  Kong is connected to (Postgres or Cassandra) as a YAML file following Kong's\n  declarative configuration syntax. This file can thus be imported later on\n  in a DB-less Kong node or in another database via `kong config db_import`.\n  [#4809](https://github.com/Kong/kong/pull/4809)\n\n##### Admin API\n\n- Many endpoints now support more levels of nesting for ease of access.\n  For example: `/services/:services/routes/:routes` is now a valid API\n  endpoint.\n  [#4713](https://github.com/Kong/kong/pull/4713)\n- The API now accepts `form-urlencoded` payloads with deeply nested data\n  structures. Previously, it was only possible to send such data structures\n  via JSON payloads.\n  [#4768](https://github.com/Kong/kong/pull/4768)\n\n##### Plugins\n\n- :fireworks: **New bundled plugin**: the [session\n  plugin](https://github.com/Kong/kong-plugin-session) is now bundled in Kong.\n  It can be used to manage browser sessions for APIs proxied and authenticated\n  by Kong.\n  [#4685](https://github.com/Kong/kong/pull/4685)\n- ldap-auth: A new `config.ldaps` property allows configuring the plugin to\n  connect to the LDAP server via TLS. It provides LDAPS support instead of only\n  relying on STARTTLS.\n  [#4743](https://github.com/Kong/kong/pull/4743)\n- jwt-auth: The new `header_names` property accepts an array of header names\n  the JWT plugin should inspect when authenticating a request. It defaults to\n  `[\"Authorization\"]`.\n  [#4757](https://github.com/Kong/kong/pull/4757)\n- [azure-functions](https://github.com/Kong/kong-plugin-azure-functions):\n  Bumped to 0.4 for minor fixes and performance improvements.\n- [kubernetes-sidecar-injector](https://github.com/Kong/kubernetes-sidecar-injector):\n  The plugin is now more resilient to Kubernetes schema changes.\n- [serverless-functions](https://github.com/Kong/kong-plugin-serverless-functions):\n    - Bumped to 0.3 for minor performance improvements.\n    - Functions can now have upvalues.\n- [prometheus](https://github.com/Kong/kong-plugin-prometheus): Bumped to\n  0.4.1 for minor performance improvements.\n- cors: add OPTIONS, TRACE and CONNECT to default allowed methods\n  [#4899](https://github.com/Kong/kong/pull/4899)\n  Thanks to [@eshepelyuk](https://github.com/eshepelyuk) for the patch!\n\n##### PDK\n\n- New function `kong.service.set_tls_cert_key()`. This functions sets the\n  client TLS certificate used while handshaking with the upstream service.\n  [#4797](https://github.com/Kong/kong/pull/4797)\n\n### Fixes\n\n##### Core\n\n- Fix WebSocket protocol upgrades in some cases due to case-sensitive\n  comparisons of the `Upgrade` header.\n  [#4780](https://github.com/Kong/kong/pull/4780)\n- Router: Fixed a bug causing invalid matches when configuring two or more\n  Routes with a plain `hosts` attribute shadowing another Route's wildcard\n  `hosts` attribute. Details of the issue can be seen in\n  [01b1cb8](https://github.com/Kong/kong/pull/4775/commits/01b1cb871b1d84e5e93c5605665b68c2f38f5a31).\n  [#4775](https://github.com/Kong/kong/pull/4775)\n- Router: Ensure regex paths always have priority over plain paths. Details of\n  the issue can be seen in\n  [2683b86](https://github.com/Kong/kong/commit/2683b86c2f7680238e3fe85da224d6f077e3425d).\n  [#4775](https://github.com/Kong/kong/pull/4775)\n- Cleanup of expired rows in PostgreSQL is now much more efficient thanks to a\n  new query plan.\n  [#4716](https://github.com/Kong/kong/pull/4716)\n- Improved various query plans against Cassandra instances by increasing the\n  default page size.\n  [#4770](https://github.com/Kong/kong/pull/4770)\n\n##### Plugins\n\n- cors: ensure non-preflight OPTIONS requests can be proxied.\n  [#4899](https://github.com/Kong/kong/pull/4899)\n  Thanks to [@eshepelyuk](https://github.com/eshepelyuk) for the patch!\n- Consumer references in various plugin entities are now\n  properly marked as required, avoiding credentials that map to no Consumer.\n  [#4879](https://github.com/Kong/kong/pull/4879)\n- hmac-auth: Correct the encoding of HTTP/1.0 requests.\n  [#4839](https://github.com/Kong/kong/pull/4839)\n- oauth2: empty client_id wasn't checked, causing a server error.\n  [#4884](https://github.com/Kong/kong/pull/4884)\n- response-transformer: preserve empty arrays correctly.\n  [#4901](https://github.com/Kong/kong/pull/4901)\n\n##### CLI\n\n- Fixed an issue when running `kong restart` and Kong was not running,\n  causing stdout/stderr logging to turn off.\n  [#4772](https://github.com/Kong/kong/pull/4772)\n\n##### Admin API\n\n- Ensure PUT works correctly when applied to plugin configurations.\n  [#4882](https://github.com/Kong/kong/pull/4882)\n\n##### PDK\n\n- Prevent PDK calls from failing in custom content blocks.\n  This fixes a misbehavior affecting the Prometheus plugin.\n  [#4904](https://github.com/Kong/kong/pull/4904)\n- Ensure `kong.response.add_header` works in the `rewrite` phase.\n  [#4888](https://github.com/Kong/kong/pull/4888)\n\n[Back to TOC](#table-of-contents)\n\n## [1.2.2]\n\n> Released on 2019/08/14\n\n:warning: This release includes patches to the NGINX core (1.13.6) fixing\nvulnerabilities in the HTTP/2 module (CVE-2019-9511 CVE-2019-9513\nCVE-2019-9516).\n\nThis is a patch release in the 1.2 series, and as such, strictly contains\nbugfixes. There are no new features nor breaking changes.\n\n### Fixes\n\n##### Core\n\n- Case sensitivity fix when clearing the Upgrade header.\n  [#4779](https://github.com/kong/kong/issues/4779)\n\n### Performance\n\n##### Core\n\n- Speed up cascade deletes in Cassandra.\n  [#4770](https://github.com/kong/kong/pull/4770)\n\n## [1.2.1]\n\n> Released on 2019/06/26\n\nThis is a patch release in the 1.2 series, and as such, strictly contains\nbugfixes. There are no new features nor breaking changes.\n\n### Fixes\n\n##### Core\n\n- Fix an issue preventing WebSocket connections from being established by\n  clients. This issue was introduced in Kong 1.1.2, and would incorrectly clear\n  the `Upgrade` response header.\n  [#4719](https://github.com/Kong/kong/pull/4719)\n- Fix a memory usage growth issue in the `/config` endpoint when configuring\n  Upstream entities. This issue was mostly observed by users of the [Kong\n  Ingress Controller](https://github.com/Kong/kubernetes-ingress-controller).\n  [#4733](https://github.com/Kong/kong/pull/4733)\n- Cassandra: ensure serial consistency is `LOCAL_SERIAL` when a\n  datacenter-aware load balancing policy is in use. This fixes unavailability\n  exceptions sometimes experienced when connecting to a multi-datacenter\n  cluster with cross-datacenter connectivity issues.\n  [#4734](https://github.com/Kong/kong/pull/4734)\n- Schemas: fix an issue in the schema validator that would not allow specifying\n  `false` in some schema rules, such a `{ type = \"boolean\", eq = false }`.\n  [#4708](https://github.com/Kong/kong/pull/4708)\n  [#4727](https://github.com/Kong/kong/pull/4727)\n- Fix an underlying issue with regards to database entities cache keys\n  generation.\n  [#4717](https://github.com/Kong/kong/pull/4717)\n\n##### Configuration\n\n- Ensure the `cassandra_local_datacenter` configuration property is specified\n  when a datacenter-aware Cassandra load balancing policy is in use.\n  [#4734](https://github.com/Kong/kong/pull/4734)\n\n##### Plugins\n\n- request-transformer: fix an issue that would prevent adding a body to\n  requests without one.\n  [Kong/kong-plugin-request-transformer#4](https://github.com/Kong/kong-plugin-request-transformer/pull/4)\n- kubernetes-sidecar-injector: fix an issue causing mutating webhook calls to\n  fail.\n  [Kong/kubernetes-sidecar-injector#9](https://github.com/Kong/kubernetes-sidecar-injector/pull/9)\n\n[Back to TOC](#table-of-contents)\n\n## [1.2.0]\n\n> Released on: 2019/06/07\n\nThis release brings **improvements to reduce long latency tails**,\n**consolidates declarative configuration support**, and comes with **newly open\nsourced plugins** previously only available to Enterprise customers. It also\nships with new features improving observability and usability.\n\nThis release includes database migrations. Please take a few minutes to read\nthe [1.2 Upgrade Path](https://github.com/Kong/kong/blob/master/UPGRADE.md)\nfor more details regarding changes and migrations before planning to upgrade\nyour Kong cluster.\n\n### Installation\n\n- :warning: All Bintray repositories have been renamed from\n  `kong-community-edition-*` to `kong-*`.\n- :warning: All Kong packages have been renamed from `kong-community-edition`\n  to `kong`.\n\nFor more details about the updated installation, please visit the official docs:\n[https://konghq.com/install](https://konghq.com/install/).\n\n### Additions\n\n##### Core\n\n- :fireworks: Support for **wildcard SNI matching**: the\n  `ssl_certificate_by_lua` phase and the stream `preread` phase) is now able to\n  match a client hello SNI against any registered wildcard SNI. This is\n  particularly helpful for deployments serving a certificate for multiple\n  subdomains.\n  [#4457](https://github.com/Kong/kong/pull/4457)\n- :fireworks: **HTTPS Routes can now be matched by SNI**: the `snis` Route\n  attribute (previously only available for `tls` Routes) can now be set for\n  `https` Routes and is evaluated by the HTTP router.\n  [#4633](https://github.com/Kong/kong/pull/4633)\n- :fireworks: **Native support for HTTPS redirects**: Routes have a new\n  `https_redirect_status_code` attribute specifying the status code to send\n  back to the client if a plain text request was sent to an `https` Route.\n  [#4424](https://github.com/Kong/kong/pull/4424)\n- The loading of declarative configuration is now done atomically, and with a\n  safety check to verify that the new configuration fits in memory.\n  [#4579](https://github.com/Kong/kong/pull/4579)\n- Schema fields can now be marked as immutable.\n  [#4381](https://github.com/Kong/kong/pull/4381)\n- Support for loading custom DAO strategies from plugins.\n  [#4518](https://github.com/Kong/kong/pull/4518)\n- Support for IPv6 to `tcp` and `tls` Routes.\n  [#4333](https://github.com/Kong/kong/pull/4333)\n\n##### Configuration\n\n- :fireworks: **Asynchronous router updates**: a new configuration property\n  `router_consistency` accepts two possible values: `strict` and `eventual`.\n  The former is the default setting and makes router rebuilds highly\n  consistent between Nginx workers. It can result in long tail latency if\n  frequent Routes and Services updates are expected. The latter helps\n  preventing long tail latency issues by instructing Kong to rebuild the router\n  asynchronously (with eventual consistency between Nginx workers).\n  [#4639](https://github.com/Kong/kong/pull/4639)\n- :fireworks: **Database cache warmup**: Kong can now preload entities during\n  its initialization. A new configuration property (`db_cache_warmup_entities`)\n  was introduced, allowing users to specify which entities should be preloaded.\n  DB cache warmup allows for ahead-of-time DNS resolution for Services with a\n  hostname. This feature reduces first requests latency, improving the overall\n  P99 latency tail.\n  [#4565](https://github.com/Kong/kong/pull/4565)\n- Improved PostgreSQL connection management: two new configuration properties\n  have been added: `pg_max_concurrent_queries` sets the maximum number of\n  concurrent queries to the database, and `pg_semaphore_timeout` allows for\n  tuning the timeout when acquiring access to a database connection. The\n  default behavior remains the same, with no concurrency limitation.\n  [#4551](https://github.com/Kong/kong/pull/4551)\n\n##### Admin API\n\n- :fireworks: Add declarative configuration **hash checking** avoiding\n  reloading if the configuration has not changed. The `/config` endpoint now\n  accepts a `check_hash` query argument. Hash checking only happens if this\n  argument's value is set to `1`.\n  [#4609](https://github.com/Kong/kong/pull/4609)\n- :fireworks: Add a **schema validation endpoint for entities**: a new\n  endpoint `/schemas/:entity_name/validate` can be used to validate an instance\n  of any entity type in Kong without creating the entity itself.\n  [#4413](https://github.com/Kong/kong/pull/4413)\n- :fireworks: Add **memory statistics** to the `/status` endpoint. The response\n  now includes a `memory` field, which contains the `lua_shared_dicts` and\n  `workers_lua_vms` fields with statistics on shared dictionaries and workers\n  Lua VM memory usage.\n  [#4592](https://github.com/Kong/kong/pull/4592)\n\n##### PDK\n\n- New function `kong.node.get_memory_stats()`. This function returns statistics\n  on shared dictionaries and workers Lua VM memory usage, and powers the memory\n  statistics newly exposed by the `/status` endpoint.\n  [#4632](https://github.com/Kong/kong/pull/4632)\n\n##### Plugins\n\n- :fireworks: **Newly open-sourced plugin**: the HTTP [proxy-cache\n  plugin](https://github.com/kong/kong-plugin-proxy-cache) (previously only\n  available in Enterprise) is now bundled in Kong.\n  [#4650](https://github.com/Kong/kong/pull/4650)\n- :fireworks: **Newly open-sourced plugin capabilities**: The\n  [request-transformer\n  plugin](https://github.com/Kong/kong-plugin-request-transformer) now includes\n  capabilities previously only available in Enterprise, among which templating\n  and variables interpolation.\n  [#4658](https://github.com/Kong/kong/pull/4658)\n- Logging plugins: log request TLS version, cipher, and verification status.\n  [#4581](https://github.com/Kong/kong/pull/4581)\n  [#4626](https://github.com/Kong/kong/pull/4626)\n- Plugin development: inheriting from `BasePlugin` is now optional. Avoiding\n  the inheritance paradigm improves plugins' performance.\n  [#4590](https://github.com/Kong/kong/pull/4590)\n\n### Fixes\n\n##### Core\n\n- Active healthchecks: `http` checks are not performed for `tcp` and `tls`\n  Services anymore; only `tcp` healthchecks are performed against such\n  Services.\n  [#4616](https://github.com/Kong/kong/pull/4616)\n- Fix an issue where updates in migrations would not correctly populate default\n  values.\n  [#4635](https://github.com/Kong/kong/pull/4635)\n- Improvements in the reentrancy of Cassandra migrations.\n  [#4611](https://github.com/Kong/kong/pull/4611)\n- Fix an issue causing the PostgreSQL strategy to not bootstrap the schema when\n  using a PostgreSQL account with limited permissions.\n  [#4506](https://github.com/Kong/kong/pull/4506)\n\n##### CLI\n\n- Fix `kong db_import` to support inserting entities without specifying a UUID\n  for their primary key. Entities with a unique identifier (e.g. `name` for\n  Services) can have their primary key omitted.\n  [#4657](https://github.com/Kong/kong/pull/4657)\n- The `kong migrations [up|finish] -f` commands does not run anymore if there\n  are no previously executed migrations.\n  [#4617](https://github.com/Kong/kong/pull/4617)\n\n##### Plugins\n\n- ldap-auth: ensure TLS connections are reused.\n  [#4620](https://github.com/Kong/kong/pull/4620)\n- oauth2: ensured access tokens preserve their `token_expiration` value when\n  migrating from previous Kong versions.\n  [#4572](https://github.com/Kong/kong/pull/4572)\n\n[Back to TOC](#table-of-contents)\n\n## [1.1.2]\n\n> Released on: 2019/04/24\n\nThis is a patch release in the 1.0 series. Being a patch release, it strictly\ncontains bugfixes. The are no new features or breaking changes.\n\n### Fixes\n\n- core: address issue where field type \"record\" nested values reset on update\n  [#4495](https://github.com/Kong/kong/pull/4495)\n- core: correctly manage primary keys of type \"foreign\"\n  [#4429](https://github.com/Kong/kong/pull/4429)\n- core: declarative config is not parsed on db-mode anymore\n  [#4487](https://github.com/Kong/kong/pull/4487)\n  [#4509](https://github.com/Kong/kong/pull/4509)\n- db-less: Fixed a problem in Kong balancer timing out.\n  [#4534](https://github.com/Kong/kong/pull/4534)\n- db-less: Accept declarative config directly in JSON requests.\n  [#4527](https://github.com/Kong/kong/pull/4527)\n- db-less: do not mis-detect mesh mode\n  [#4498](https://github.com/Kong/kong/pull/4498)\n- db-less: fix crash when field has same name as entity\n  [#4478](https://github.com/Kong/kong/pull/4478)\n- basic-auth: ignore password if nil on basic auth credential patch\n  [#4470](https://github.com/Kong/kong/pull/4470)\n- http-log: Simplify queueing mechanism. Fixed a bug where traces were lost\n  in some cases.\n  [#4510](https://github.com/Kong/kong/pull/4510)\n- request-transformer: validate header values in plugin configuration.\n  Thanks, [@rune-chan](https://github.com/rune-chan)!\n  [#4512](https://github.com/Kong/kong/pull/4512).\n- rate-limiting: added index on rate-limiting metrics.\n  Thanks, [@mvanholsteijn](https://github.com/mvanholsteijn)!\n  [#4486](https://github.com/Kong/kong/pull/4486)\n\n[Back to TOC](#table-of-contents)\n\n## [1.1.1]\n\n> Released on: 2019/03/28\n\nThis release contains a fix for 0.14 Kong clusters using Cassandra to safely\nmigrate to Kong 1.1.\n\n### Fixes\n\n- Ensure the 0.14 -> 1.1 migration path for Cassandra does not corrupt the\n  database schema.\n  [#4450](https://github.com/Kong/kong/pull/4450)\n- Allow the `kong config init` command to run without a pointing to a prefix\n  directory.\n  [#4451](https://github.com/Kong/kong/pull/4451)\n\n[Back to TOC](#table-of-contents)\n\n## [1.1.0]\n\n> Released on: 2019/03/27\n\nThis release introduces new features such as **Declarative\nConfiguration**, **DB-less Mode**, **Bulk Database Import**, **Tags**, as well\nas **Transparent Proxying**. It contains a large number of other features and\nfixes, listed below. Also, the Plugin Development kit also saw a minor\nupdated, bumped to version 1.1.\n\nThis release includes database migrations. Please take a few minutes to read\nthe [1.1 Upgrade Path](https://github.com/Kong/kong/blob/master/UPGRADE.md)\nfor more details regarding changes and migrations before planning to upgrade\nyour Kong cluster.\n\n:large_orange_diamond: **Post-release note (as of 2019/03/28):** an issue has\nbeen found when migrating from a 0.14 Kong cluster to 1.1.0 when running on top\nof Cassandra. Kong 1.1.1 has been released to address this issue. Kong clusters\nrunning on top of PostgreSQL are not affected by this issue, and can migrate to\n1.1.0 or 1.1.1 safely.\n\n### Additions\n\n##### Core\n\n- :fireworks: Kong can now run **without a database**, using in-memory\n  storage only. When running Kong in DB-less mode, entities are loaded via a\n  **declarative configuration** file, specified either through Kong's\n  configuration file, or uploaded via the Admin API.\n  [#4315](https://github.com/Kong/kong/pull/4315)\n- :fireworks: **Transparent proxying** - the `service` attribute on\n  Routes is now optional; a Route without an assigned Service will\n  proxy transparently\n  [#4286](https://github.com/Kong/kong/pull/4286)\n- Support for **tags** in entities\n  [#4275](https://github.com/Kong/kong/pull/4275)\n  - Every core entity now adds a `tags` field\n- New `protocols` field in the Plugin entity, allowing plugin instances\n  to be set for specific protocols only (`http`, `https`, `tcp` or `tls`).\n  [#4248](https://github.com/Kong/kong/pull/4248)\n  - It filters out plugins during execution according to their `protocols` field\n  - It throws an error when trying to associate a Plugin to a Route\n    which is not compatible, protocols-wise, or to a Service with no\n    compatible routes.\n\n##### Configuration\n\n- New option in `kong.conf`: `database=off` to start Kong without\n  a database\n- New option in `kong.conf`: `declarative_config=kong.yml` to\n  load a YAML file using Kong's new [declarative config\n  format](https://discuss.konghq.com/t/rfc-kong-native-declarative-config-format/2719)\n- New option in `kong.conf`: `pg_schema` to specify Postgres schema\n  to be used\n- The Stream subsystem now supports Nginx directive injections\n  [#4148](https://github.com/Kong/kong/pull/4148)\n  - `nginx_stream_*` (or `KONG_NGINX_STREAM_*` environment variables)\n    for injecting entries to the `stream` block\n  - `nginx_sproxy_*` (or `KONG_NGINX_SPROXY_*` environment variables)\n    for injecting entries to the `server` block inside `stream`\n\n##### CLI\n\n- :fireworks: **Bulk database import** using the same declarative\n  configuration format as the in-memory mode, using the new command:\n  `kong config db_import kong.yml`. This command upserts all\n  entities specified in the given `kong.yml` file in bulk\n  [#4284](https://github.com/Kong/kong/pull/4284)\n- New command: `kong config init` to generate a template `kong.yml`\n  file to get you started\n- New command: `kong config parse kong.yml` to verify the syntax of\n  the `kong.yml` file before using it\n- New option `--wait` in `kong quit` to ease graceful termination when using orchestration tools\n  [#4201](https://github.com/Kong/kong/pull/4201)\n\n##### Admin API\n\n- New Admin API endpoint: `/config` to replace the configuration of\n  Kong entities entirely, replacing it with the contents of a new\n  declarative config file\n  - When using the new `database=off` configuration option,\n    the Admin API endpoints for entities (such as `/routes` and\n    `/services`) are read-only, since the configuration can only\n    be updated via `/config`\n    [#4308](https://github.com/Kong/kong/pull/4308)\n- Admin API endpoints now support searching by tag\n  (for example, `/consumers?tags=example_tag`)\n  - You can search by multiple tags:\n     - `/services?tags=serv1,mobile` to search for services matching tags `serv1` and `mobile`\n     - `/services?tags=serv1/serv2` to search for services matching tags `serv1` or `serv2`\n- New Admin API endpoint `/tags/` for listing entities by tag: `/tags/example_tag`\n\n##### PDK\n\n- New PDK function: `kong.client.get_protocol` for obtaining the protocol\n  in use during the current request\n  [#4307](https://github.com/Kong/kong/pull/4307)\n- New PDK function: `kong.nginx.get_subsystem`, so plugins can detect whether\n  they are running on the HTTP or Stream subsystem\n  [#4358](https://github.com/Kong/kong/pull/4358)\n\n##### Plugins\n\n- :fireworks: Support for ACL **authenticated groups**, so that authentication plugins\n  that use a 3rd party (other than Kong) to store credentials can benefit\n  from using a central ACL plugin to do authorization for them\n  [#4013](https://github.com/Kong/kong/pull/4013)\n- The Kubernetes Sidecar Injection plugin is now bundled into Kong for a smoother K8s experience\n  [#4304](https://github.com/Kong/kong/pull/4304)\n- aws-lambda: includes AWS China region.\n  Thanks [@wubins](https://github.com/wubins) for the patch!\n  [#4176](https://github.com/Kong/kong/pull/4176)\n\n### Changes\n\n##### Dependencies\n\n- The required OpenResty version is still 1.13.6.2, but for a full feature set\n  including stream routing and Service Mesh abilities with mutual TLS, Kong's\n  [openresty-patches](https://github.com/kong/openresty-patches) must be\n  applied (those patches are already bundled with our official distribution\n  packages). The openresty-patches bundle was updated in Kong 1.1.0 to include\n  the `stream_realip_module` as well.\n  Kong in HTTP(S) Gateway scenarios does not require these patches.\n  [#4163](https://github.com/Kong/kong/pull/4163)\n- Service Mesh abilities require at least OpenSSL version 1.1.1. In our\n  official distribution packages, OpenSSL has been bumped to 1.1.1b.\n  [#4345](https://github.com/Kong/kong/pull/4345),\n  [#4440](https://github.com/Kong/kong/pull/4440)\n\n### Fixes\n\n##### Core\n\n- Resolve hostnames properly during initialization of Cassandra contact points\n  [#4296](https://github.com/Kong/kong/pull/4296),\n  [#4378](https://github.com/Kong/kong/pull/4378)\n- Fix health checks for Targets that need two-level DNS resolution\n  (e.g. SRV → A → IP) [#4386](https://github.com/Kong/kong/pull/4386)\n- Fix serialization of map types in the Cassandra backend\n  [#4383](https://github.com/Kong/kong/pull/4383)\n- Fix target cleanup and cascade-delete for Targets\n  [#4319](https://github.com/Kong/kong/pull/4319)\n- Avoid crash when failing to obtain list of Upstreams\n  [#4301](https://github.com/Kong/kong/pull/4301)\n- Disallow invalid timeout value of 0ms for attributes in Services\n  [#4430](https://github.com/Kong/kong/pull/4430)\n- DAO fix for foreign fields used as primary keys\n  [#4387](https://github.com/Kong/kong/pull/4387)\n\n##### Admin API\n\n- Proper support for `PUT /{entities}/{entity}/plugins/{plugin}`\n  [#4288](https://github.com/Kong/kong/pull/4288)\n- Fix Admin API inferencing of map types using form-encoded\n  [#4368](https://github.com/Kong/kong/pull/4368)\n- Accept UUID-like values in `/consumers?custom_id=`\n  [#4435](https://github.com/Kong/kong/pull/4435)\n\n##### Plugins\n\n- basic-auth, ldap-auth, key-auth, jwt, hmac-auth: fixed\n  status code for unauthorized requests: they now return HTTP 401\n  instead of 403\n  [#4238](https://github.com/Kong/kong/pull/4238)\n- tcp-log: remove spurious trailing carriage return\n  Thanks [@cvuillemez](https://github.com/cvuillemez) for the patch!\n  [#4158](https://github.com/Kong/kong/pull/4158)\n- jwt: fix `typ` handling for supporting JOSE (JSON Object\n  Signature and Validation)\n  Thanks [@cdimascio](https://github.com/cdimascio) for the patch!\n  [#4256](https://github.com/Kong/kong/pull/4256)\n- Fixes to the best-effort auto-converter for legacy plugin schemas\n  [#4396](https://github.com/Kong/kong/pull/4396)\n\n[Back to TOC](#table-of-contents)\n\n## [1.0.3]\n\n> Released on: 2019/01/31\n\nThis is a patch release addressing several regressions introduced some plugins,\nand improving the robustness of our migrations and core components.\n\n### Core\n\n- Improve Cassandra schema consensus logic when running migrations.\n  [#4233](https://github.com/Kong/kong/pull/4233)\n- Ensure Routes that don't have a `regex_priority` (e.g. if it was removed as\n  part of a `PATCH`) don't prevent the router from being built.\n  [#4255](https://github.com/Kong/kong/pull/4255)\n- Reduce rebuild time of the load balancer by retrieving larger sized pages of\n  Target entities.\n  [#4206](https://github.com/Kong/kong/pull/4206)\n- Ensure schema definitions of Arrays and Sets with `default = {}` are\n  JSON-encoded as `[]`.\n  [#4257](https://github.com/Kong/kong/pull/4257)\n\n##### Plugins\n\n- request-transformer: fix a regression causing the upstream Host header to be\n  unconditionally set to that of the client request (effectively, as if the\n  Route had `preserve_host` enabled).\n  [#4253](https://github.com/Kong/kong/pull/4253)\n- cors: fix a regression that prevented regex origins from being matched.\n  Regexes such as `(.*[.])?example\\.org` can now be used to match all\n  sub-domains, while regexes containing `:` will be evaluated against the\n  scheme and port of an origin (i.e.\n  `^https?://(.*[.])?example\\.org(:8000)?$`).\n  [#4261](https://github.com/Kong/kong/pull/4261)\n- oauth2: fix a runtime error when using a global token against a plugin\n  not configured as global (i.e. with `global_credentials = false`).\n  [#4262](https://github.com/Kong/kong/pull/4262)\n\n##### Admin API\n\n- Improve performance of the `PUT` method in auth plugins endpoints (e.g.\n  `/consumers/:consumers/basic-auth/:basicauth_credentials`) by preventing\n  a unnecessary read-before-write.\n  [#4206](https://github.com/Kong/kong/pull/4206)\n\n[Back to TOC](#table-of-contents)\n\n## [1.0.2]\n\n> Released on: 2019/01/18\n\nThis is a hotfix release mainly addressing an issue when connecting to the\ndatastore over TLS (Cassandra and PostgreSQL).\n\n### Fixes\n\n##### Core\n\n- Fix an issue that would prevent Kong from starting when connecting to\n  its datastore over TLS. [#4214](https://github.com/Kong/kong/pull/4214)\n  [#4218](https://github.com/Kong/kong/pull/4218)\n- Ensure plugins added via `PUT` get enabled without requiring a restart.\n  [#4220](https://github.com/Kong/kong/pull/4220)\n\n##### Plugins\n\n- zipkin\n  - Fix a logging failure when DNS is not resolved.\n    [kong-plugin-zipkin@a563f51](https://github.com/Kong/kong-plugin-zipkin/commit/a563f513f943ba0a30f3c69373d9092680a8f670)\n  - Avoid sending redundant tags.\n    [kong-plugin-zipkin/pull/28](https://github.com/Kong/kong-plugin-zipkin/pull/28)\n  - Move `run_on` field to top level plugin schema instead of its config.\n    [kong-plugin-zipkin/pull/38](https://github.com/Kong/kong-plugin-zipkin/pull/38)\n\n[Back to TOC](#table-of-contents)\n\n## [1.0.1]\n\n> Released on: 2019/01/16\n\nThis is a patch release in the 1.0 series. Being a patch release, it strictly\ncontains performance improvements and bugfixes. The are no new features or\nbreaking changes.\n\n:red_circle: **Post-release note (as of 2019/01/17)**: A regression has been\nobserved with this version, preventing Kong from starting when connecting to\nits datastore over TLS. Installing this version is discouraged; consider\nupgrading to [1.0.2](#102).\n\n### Changes\n\n##### Core\n\n- :rocket: Assorted changes for warmup time improvements over Kong 1.0.0\n  [#4138](https://github.com/kong/kong/issues/4138),\n  [#4164](https://github.com/kong/kong/issues/4164),\n  [#4178](https://github.com/kong/kong/pull/4178),\n  [#4179](https://github.com/kong/kong/pull/4179),\n  [#4182](https://github.com/kong/kong/pull/4182)\n\n### Fixes\n\n##### Configuration\n\n- Ensure `lua_ssl_verify_depth` works even when `lua_ssl_trusted_certificate`\n  is not set\n  [#4165](https://github.com/kong/kong/pull/4165).\n  Thanks [@rainest](https://github.com/rainest) for the patch.\n- Ensure Kong starts when only a `stream` listener is enabled\n  [#4195](https://github.com/kong/kong/pull/4195)\n- Ensure Postgres works with non-`public` schemas\n  [#4198](https://github.com/kong/kong/pull/4198)\n\n##### Core\n\n- Fix an artifact in upstream migrations where `created_at`\n  timestamps would occasionally display fractional values\n  [#4183](https://github.com/kong/kong/issues/4183),\n  [#4204](https://github.com/kong/kong/pull/4204)\n- Fixed issue with HTTP/2 support advertisement\n  [#4203](https://github.com/kong/kong/pull/4203)\n\n##### Admin API\n\n- Fixed handling of invalid targets in `/upstreams` endpoints\n  for health checks\n  [#4132](https://github.com/kong/kong/issues/4132),\n  [#4205](https://github.com/kong/kong/pull/4205)\n- Fixed the `/plugins/schema/:name` endpoint, as it was failing in\n  some cases (e.g. the `datadog` plugin) and producing incorrect\n  results in others (e.g. `request-transformer`).\n  [#4136](https://github.com/kong/kong/issues/4136),\n  [#4137](https://github.com/kong/kong/issues/4137)\n  [#4151](https://github.com/kong/kong/pull/4151),\n  [#4162](https://github.com/kong/kong/pull/4151)\n\n##### Plugins\n\n- Fix PDK memory leaks in `kong.service.response` and `kong.ctx`\n  [#4143](https://github.com/kong/kong/pull/4143),\n  [#4172](https://github.com/kong/kong/pull/4172)\n\n[Back to TOC](#table-of-contents)\n\n## [1.0.0]\n\n> Released on: 2018/12/18\n\nThis is a major release, introducing new features such as **Service Mesh** and\n**Stream Routing** support, as well as a **New Migrations** framework. It also\nincludes version 1.0.0 of the **Plugin Development Kit**. It contains a large\nnumber of other features and fixes, listed below. Also, all plugins included\nwith Kong 1.0 are updated to use version 1.0 of the PDK.\n\nAs usual, major version upgrades require database migrations and changes to the\nNginx configuration file (if you customized the default template). Please take\na few minutes to read the [1.0 Upgrade\nPath](https://github.com/Kong/kong/blob/master/UPGRADE.md) for more details\nregarding breaking changes and migrations before planning to upgrade your Kong\ncluster.\n\nBeing a major version, all entities and concepts that were marked as deprecated\nin Kong 0.x are now removed in Kong 1.0. The deprecated features are retained\nin [Kong 0.15](#0150), the final entry in the Kong 0.x series, which is being\nreleased simultaneously to Kong 1.0.\n\n### Changes\n\nKong 1.0 includes all breaking changes from 0.15, as well as the removal\nof deprecated concepts.\n\n##### Dependencies\n\n- The required OpenResty version is still 1.13.6.2, but for a full feature set\n  including stream routing and Service Mesh abilities with mutual TLS, Kong's\n  [openresty-patches](https://github.com/kong/openresty-patches) must be\n  applied (those patches are already bundled with our official distribution\n  packages). Kong in HTTP(S) Gateway scenarios does not require these patches.\n- Service Mesh abilities require at least OpenSSL version 1.1.1. In our\n  official distribution packages, OpenSSL has been bumped to 1.1.1.\n  [#4005](https://github.com/Kong/kong/pull/4005)\n\n##### Configuration\n\n- :warning: The `custom_plugins` directive is removed (deprecated since 0.14.0,\n  July 2018). Use `plugins` instead.\n- Modifications must be applied to the Nginx configuration. You are not\n  affected by this change if you do not use a custom Nginx template. See the\n  [1.0 Upgrade Path](https://github.com/Kong/kong/blob/master/UPGRADE.md) for\n  a diff of changes to apply.\n- The default value for `cassandra_lb_policy` changed from `RoundRobin` to\n  `RequestRoundRobin`. This helps reducing the amount of new connections being\n  opened during a request when using the Cassandra strategy.\n  [#4004](https://github.com/Kong/kong/pull/4004)\n\n##### Core\n\n- :warning: The **API** entity and related concepts such as the `/apis`\n  endpoint, are removed (deprecated since 0.13.0, March 2018). Use **Routes**\n  and **Services** instead.\n- :warning: The **old DAO** implementation is removed, along with the\n  **old schema** validation library (`apis` was the last entity using it).\n  Use the new schema format instead in custom plugins.\n  To ease the transition of plugins, the plugin loader in 1.0 includes\n  a _best-effort_ schema auto-translator, which should be sufficient for many\n  plugins.\n- Timestamps now bear millisecond precision in their decimal part.\n  [#3660](https://github.com/Kong/kong/pull/3660)\n- The PDK function `kong.request.get_body` will now return `nil, err, mime`\n  when the body is valid JSON but neither an object nor an array.\n  [#4063](https://github.com/Kong/kong/pull/4063)\n\n##### CLI\n\n- :warning: The new migrations framework (detailed below) has a different usage\n  (and subcommands) compared to its predecessor.\n  [#3802](https://github.com/Kong/kong/pull/3802)\n\n##### Admin API\n\n- :warning: In the 0.14.x release, Upstreams, Targets, and Plugins were still\n  implemented using the old DAO and Admin API. In 0.15.0 and 1.0.0, all core\n  entities use the new `kong.db` DAO, and their endpoints have been upgraded to\n  the new Admin API (see below for details).\n  [#3689](https://github.com/Kong/kong/pull/3689)\n  [#3739](https://github.com/Kong/kong/pull/3739)\n  [#3778](https://github.com/Kong/kong/pull/3778)\n\nA summary of the changes introduced in the new Admin API:\n\n- Pagination has been included in all \"multi-record\" endpoints, and pagination\n  control fields are different than in 0.14.x.\n- Filtering now happens via URL path changes (`/consumers/x/plugins`) instead\n  of querystring fields (`/plugins?consumer_id=x`).\n- Array values can't be coerced from comma-separated strings anymore. They must\n  now be \"proper\" JSON values on JSON requests, or use a new syntax on\n  form-url-encoded or multipart requests.\n- Error messages have been been reworked from the ground up to be more\n  consistent, precise and informative.\n- The `PUT` method has been reimplemented with idempotent behavior and has\n  been added to some entities that didn't have it.\n\nFor more details about the new Admin API, please visit the official docs:\nhttps://docs.konghq.com/\n\n##### Plugins\n\n- :warning: The `galileo` plugin has been removed (deprecated since 0.13.0).\n  [#3960](https://github.com/Kong/kong/pull/3960)\n- :warning: Some internal modules that were occasionally used by plugin authors\n  before the introduction of the Plugin Development Kit (PDK) in 0.14.0 are now\n  removed:\n  - The `kong.tools.ip` module was removed. Use `kong.ip` from the PDK instead.\n  - The `kong.tools.public` module was removed. Use the various equivalent\n    features from the PDK instead.\n  - The `kong.tools.responses` module was removed. Please use\n    `kong.response.exit` from the PDK instead. You might want to use\n    `kong.log.err` to log internal server errors as well.\n  - The `kong.api.crud_helpers` module was removed (deprecated since the\n    introduction of the new DAO in 0.13.0). Use `kong.api.endpoints` instead\n    if you need to customize the auto-generated endpoints.\n- All bundled plugins' schemas and custom entities have been updated to the new\n  `kong.db` module, and their APIs have been updated to the new Admin API,\n  which is described in the above section.\n  [#3766](https://github.com/Kong/kong/pull/3766)\n  [#3774](https://github.com/Kong/kong/pull/3774)\n  [#3778](https://github.com/Kong/kong/pull/3778)\n  [#3839](https://github.com/Kong/kong/pull/3839)\n- :warning: All plugins migrations have been converted to the new migration\n  framework. Custom plugins must use the new migration framework from 0.15\n  onwards.\n\n### Additions\n\n##### :fireworks: Service Mesh and Stream Routes\n\nKong's Service Mesh support resulted in a number of additions to Kong's\nconfiguration, Admin API, and plugins that deserve their own section in\nthis changelog.\n\n- **Support for TCP & TLS Stream Routes** via the new `stream_listen` config\n  option. [#4009](https://github.com/Kong/kong/pull/4009)\n- A new `origins` config property allows overriding hosts from Kong.\n  [#3679](https://github.com/Kong/kong/pull/3679)\n- A `transparent` suffix added to stream listeners allows for setting up a\n  dynamic Service Mesh with `iptables`.\n  [#3884](https://github.com/Kong/kong/pull/3884)\n- Kong instances can now create a shared internal Certificate Authority, which\n  is used for Service Mesh TLS traffic.\n  [#3906](https://github.com/Kong/kong/pull/3906)\n  [#3861](https://github.com/Kong/kong/pull/3861)\n- Plugins get a new `run_on` field to control how they behave in a Service Mesh\n  environment.\n  [#3930](https://github.com/Kong/kong/pull/3930)\n  [#4066](https://github.com/Kong/kong/pull/4066)\n- There is a new phase called `preread`. This is where stream traffic routing\n  is done.\n\n##### Configuration\n\n- A new `dns_valid_ttl` property can be set to forcefully override the TTL\n  value of all resolved DNS records.\n  [#3730](https://github.com/Kong/kong/pull/3730)\n- A new `pg_timeout` property can be set to configure the timeout of PostgreSQL\n  connections. [#3808](https://github.com/Kong/kong/pull/3808)\n- `upstream_keepalive` can now be disabled when set to 0.\n  Thanks [@pryorda](https://github.com/pryorda) for the patch.\n  [#3716](https://github.com/Kong/kong/pull/3716)\n- The new `transparent` suffix also applies to the `proxy_listen` directive.\n\n##### CLI\n\n- :fireworks: **New migrations framework**. This new implementation supports\n  no-downtime, Blue/Green migrations paths that will help sustain Kong 1.0's\n  stability. It brings a considerable number of other improvements, such as new\n  commands, better support for automation, improved CLI logging, and many\n  more. Additionally, this new framework alleviates the old limitation around\n  multiple nodes running concurrent migrations. See the related PR for a\n  complete list of improvements.\n  [#3802](https://github.com/Kong/kong/pull/3802)\n\n##### Core\n\n- :fireworks: **Support for TLS 1.3**. The support for OpenSSL 1.1.1 (bumped in our\n  official distribution packages) not only enabled Service Mesh features, but\n  also unlocks support for the latest version of the TLS protocol.\n- :fireworks: **Support for HTTPS in active healthchecks**.\n  [#3815](https://github.com/Kong/kong/pull/3815)\n- :fireworks: Improved router rebuilds resiliency by reducing database accesses\n  in high concurrency scenarios.\n  [#3782](https://github.com/Kong/kong/pull/3782)\n- :fireworks: Significant performance improvements in the core's plugins\n  runloop. [#3794](https://github.com/Kong/kong/pull/3794)\n- PDK improvements:\n  - New `kong.node` module. [#3826](https://github.com/Kong/kong/pull/3826)\n  - New functions `kong.response.get_path_with_query()` and\n    `kong.request.get_start_time()`.\n    [#3842](https://github.com/Kong/kong/pull/3842)\n  - Getters and setters for Service, Route, Consumer, and Credential.\n    [#3916](https://github.com/Kong/kong/pull/3916)\n  - `kong.response.get_source()` returns `error` on nginx-produced errors.\n    [#4006](https://github.com/Kong/kong/pull/4006)\n  - `kong.response.exit()` can be used in the `header_filter` phase, but only\n    without a body. [#4039](https://github.com/Kong/kong/pull/4039)\n- Schema improvements:\n  - New field validators: `distinct`, `ne`, `is_regex`, `contains`, `gt`.\n  - Adding a new field which has a default value to a schema no longer requires\n    a migration.\n    [#3756](https://github.com/Kong/kong/pull/3756)\n\n##### Admin API\n\n- :fireworks: **Routes now have a `name` field (like Services)**.\n  [#3764](https://github.com/Kong/kong/pull/3764)\n- Multipart parsing support. [#3776](https://github.com/Kong/kong/pull/3776)\n- Admin API errors expose the name of the current strategy.\n  [#3612](https://github.com/Kong/kong/pull/3612)\n\n##### Plugins\n\n- :fireworks: aws-lambda: **Support for Lambda Proxy Integration** with the new\n  `is_proxy_integration` property.\n  Thanks [@aloisbarreras](https://github.com/aloisbarreras) for the patch!\n  [#3427](https://github.com/Kong/kong/pull/3427/).\n- http-log: Support for buffering logging messages in a configurable logging\n  queue. [#3604](https://github.com/Kong/kong/pull/3604)\n- Most plugins' logic has been rewritten with the PDK instead of using internal\n  Kong functions or ngx_lua APIs.\n\n### Fixes\n\n##### Core\n\n- Fix an issue which would insert an extra `/` in the upstream URL when the\n  request path was longer than the configured Route's `path` attribute.\n  [#3780](https://github.com/kong/kong/pull/3780)\n- Ensure better backwards-compatibility between the new DAO and existing core\n  runloop code regarding null values.\n  [#3772](https://github.com/Kong/kong/pull/3772)\n  [#3710](https://github.com/Kong/kong/pull/3710)\n- Ensure support for Datastax Enterprise 6.x. Thanks\n  [@gchristidis](https://github.com/gchristidis) for the patch!\n  [#3873](https://github.com/Kong/kong/pull/3873)\n- Various issues with the PostgreSQL DAO strategy were addressed.\n- Various issues related to the new schema library bundled with the new DAO\n  were addressed.\n- PDK improvements:\n    - `kong.request.get_path()` and other functions now properly handle cases\n      when `$request_uri` is nil.\n      [#3842](https://github.com/Kong/kong/pull/3842)\n\n##### Admin API\n\n- Ensure the `/certificates` endpoints properly returns all SNIs configured on\n  a given certificate. [#3722](https://github.com/Kong/kong/pull/3722)\n- Ensure the `upstreams/:upstream/targets/...` endpoints returns an empty JSON\n  array (`[]`) instead of an empty object (`{}`) when no targets exist.\n  [#4058](https://github.com/Kong/kong/pull/4058)\n- Improved inferring of arguments with `application/x-www-form-urlencoded`.\n  [#3770](https://github.com/Kong/kong/pull/3770)\n- Fix the handling of defaults values in some cases when using `PATCH`.\n  [#3910](https://github.com/Kong/kong/pull/3910)\n\n##### Plugins\n\n- cors:\n  - Ensure `Vary: Origin` is set when `config.credentials` is enabled.\n    Thanks [@marckhouzam](https://github.com/marckhouzam) for the patch!\n    [#3765](https://github.com/Kong/kong/pull/3765)\n  - Return HTTP 200 instead of 204 for preflight requests. Thanks\n    [@aslafy-z](https://github.com/aslafy-z) for the patch!\n    [#4029](https://github.com/Kong/kong/pull/4029)\n  - Ensure request origins specified as flat strings are safely validated.\n    [#3872](https://github.com/Kong/kong/pull/3872)\n- acl: Minor performance improvements by ensuring proper caching of computed\n  values.\n  [#4040](https://github.com/Kong/kong/pull/4040)\n- correlation-id: Prevent an error to be thrown when the access phase was\n  skipped, such as on nginx-produced errors.\n  [#4006](https://github.com/Kong/kong/issues/4006)\n- aws-lambda: When the client uses HTTP/2, strip response headers that are\n  disallowed by the protocols.\n  [#4032](https://github.com/Kong/kong/pull/4032)\n- rate-limiting & response-ratelimiting: Improve efficiency by avoiding\n  unnecessary Redis `SELECT` operations.\n  [#3973](https://github.com/Kong/kong/pull/3973)\n\n[Back to TOC](#table-of-contents)\n\n## [0.15.0]\n\n> Released on: 2018/12/18\n\nThis is the last release in the 0.x series, giving users one last chance to\nupgrade while still using some of the options and concepts that were marked as\ndeprecated in Kong 0.x and were removed in Kong 1.0.\n\nFor a list of additions and fixes in Kong 0.15, see the [1.0.0](#100)\nchangelog. This release includes all new features included in 1.0 (Service\nMesh, Stream Routes and New Migrations), but unlike Kong 1.0, it retains a lot\nof the deprecated functionality, like the **API** entity, around. Still, Kong\n0.15 does have a number of breaking changes related to functionality that has\nchanged since version 0.14 (see below).\n\nIf you are starting with Kong, we recommend you to use 1.0.0 instead of this\nrelease.\n\nIf you are already using Kong 0.14, our recommendation is to plan to move to\n1.0 -- see the [1.0 Upgrade\nPath](https://github.com/kong/kong/blob/master/UPGRADE.md) document for\ndetails. Upgrading to 0.15.0 is only recommended if you can't do away with the\ndeprecated features but you need some fixes or new features right now.\n\n### Changes\n\n##### Dependencies\n\n- The required OpenResty version is still 1.13.6.2, but for a full feature set\n  including stream routing and Service Mesh abilities with mutual TLS, Kong's\n  [openresty-patches](https://github.com/kong/openresty-patches) must be\n  applied (those patches are already bundled with our official distribution\n  packages). Kong in HTTP(S) Gateway scenarios does not require these patches.\n- Service Mesh abilities require at least OpenSSL version 1.1.1. In our\n  official distribution packages, OpenSSL has been bumped to 1.1.1.\n  [#4005](https://github.com/Kong/kong/pull/4005)\n\n##### Configuration\n\n- The default value for `cassandra_lb_policy` changed from `RoundRobin` to\n  `RequestRoundRobin`. This helps reducing the amount of new connections being\n  opened during a request when using the Cassandra strategy.\n  [#4004](https://github.com/Kong/kong/pull/4004)\n\n##### Core\n\n- Timestamps now bear millisecond precision in their decimal part.\n  [#3660](https://github.com/Kong/kong/pull/3660)\n- The PDK function `kong.request.get_body` will now return `nil, err, mime`\n  when the body is valid JSON but neither an object nor an array.\n  [#4063](https://github.com/Kong/kong/pull/4063)\n\n##### CLI\n\n- :warning: The new migrations framework (detailed in the [1.0.0\n  changelog](#100)) has a different usage (and subcommands) compared to its\n  predecessor.\n  [#3802](https://github.com/Kong/kong/pull/3802)\n\n##### Admin API\n\n- :warning: In the 0.14.x release, Upstreams, Targets, and Plugins were still\n  implemented using the old DAO and Admin API. In 0.15.0 and 1.0.0, all core\n  entities use the new `kong.db` DAO, and their endpoints have been upgraded to\n  the new Admin API (see below for details).\n  [#3689](https://github.com/Kong/kong/pull/3689)\n  [#3739](https://github.com/Kong/kong/pull/3739)\n  [#3778](https://github.com/Kong/kong/pull/3778)\n\nA summary of the changes introduced in the new Admin API:\n\n- Pagination has been included in all \"multi-record\" endpoints, and pagination\n  control fields are different than in 0.14.x.\n- Filtering now happens via URL path changes (`/consumers/x/plugins`) instead\n  of querystring fields (`/plugins?consumer_id=x`).\n- Array values can't be coherced from comma-separated strings. They must be\n  \"proper\" JSON values on JSON requests, or use a new syntax on\n  form-url-encoded or multipart requests.\n- Error messages have been been reworked from the ground up to be more\n  consistent, precise and informative.\n- The `PUT` method has been reimplemented with idempotent behavior and has\n  been added to some entities that didn't have it.\n\nFor more details about the new Admin API, please visit the official docs:\nhttps://docs.konghq.com/\n\n##### Plugins\n\n- All bundled plugins' schemas and custom entities have been updated to the new\n  `kong.db` module, and their APIs have been updated to the new Admin API,\n  which is described in the above section.\n  [#3766](https://github.com/Kong/kong/pull/3766)\n  [#3774](https://github.com/Kong/kong/pull/3774)\n  [#3778](https://github.com/Kong/kong/pull/3778)\n  [#3839](https://github.com/Kong/kong/pull/3839)\n- :warning: All plugins migrations have been converted to the new migration\n  framework. Custom plugins must use the new migration framework from 0.15\n  onwards.\n\n### Additions\n\nKong 0.15.0 contains the same additions as 1.0.0. See the [1.0.0\nchangelog](#100) for a complete list.\n\n### Fixes\n\nKong 0.15.0 contains the same fixes as 1.0.0. See the [1.0.0 changelog](#100)\nfor a complete list.\n\n[Back to TOC](#table-of-contents)\n\n## [0.14.1]\n\n> Released on: 2018/08/21\n\n### Additions\n\n##### Plugins\n\n- jwt: Support for tokens signed with HS384 and HS512.\n  Thanks [@kepkin](https://github.com/kepkin) for the patch.\n  [#3589](https://github.com/Kong/kong/pull/3589)\n- acl: Add a new `hide_groups_header` configuration option. If enabled, this\n  option prevents the plugin from injecting the `X-Consumer-Groups` header\n  into the upstream request.\n  Thanks [@jeremyjpj0916](https://github.com/jeremyjpj0916) for the patch!\n  [#3703](https://github.com/Kong/kong/pull/3703)\n\n### Fixes\n\n##### Core\n\n- Prevent some plugins from breaking in subtle ways when manipulating some\n  entities and their attributes. An example of such breaking behavior could be\n  observed when Kong was wrongly injecting `X-Consumer-Username: userdata:\n  NULL` in upstream requests headers, instead of not injecting this header at\n  all.\n  [#3714](https://github.com/Kong/kong/pull/3714)\n- Fix an issue which, in some cases, prevented the use of Kong with Cassandra\n  in environments where DNS load-balancing is in effect for contact points\n  provided as hostnames (e.g. Kubernetes with `cassandra_contact_points =\n  cassandra`).\n  [#3693](https://github.com/Kong/kong/pull/3693)\n- Fix an issue which prevented the use of UNIX domain sockets in some logging\n  plugins, and custom plugins making use of such sockets.\n  Thanks [@rucciva](https://github.com/rucciva) for the patch.\n  [#3633](https://github.com/Kong/kong/pull/3633)\n- Avoid logging false-negative error messages related to worker events.\n  [#3692](https://github.com/Kong/kong/pull/3692)\n\n##### CLI\n\n- Database connectivity errors are properly prefixed with the database name\n  again (e.g. `[postgres]`).\n  [#3648](https://github.com/Kong/kong/pull/3648)\n\n##### Plugins\n\n- zipkin\n  - Allow usage of the plugin with the deprecated \"API\" entity, and introduce\n    a new `kong.api` tag.\n    [kong-plugin-zipkin/commit/4a645e9](https://github.com/Kong/kong-plugin-zipkin/commit/4a645e940e560f2e50567e0360b5df3b38f74853)\n  - Properly report the `kong.credential` tag.\n    [kong-plugin-zipkin/commit/c627c36](https://github.com/Kong/kong-plugin-zipkin/commit/c627c36402c9a14cc48011baa773f4ee08efafcf)\n  - Ensure the plugin does not throw errors when no Route was matched.\n    [kong-plugin-zipkin#19](https://github.com/Kong/kong-plugin-zipkin/issues/19)\n- basic-auth: Passwords with whitespaces are not trimmed anymore.\n  Thanks [@aloisbarreras](https://github.com/aloisbarreras) for the patch.\n  [#3650](https://github.com/Kong/kong/pull/3650)\n- hmac-auth: Ensure backward compatibility for clients generating signatures\n  without the request's querystring, as is the case for Kong versions prior to\n  0.14.0, which broke this behavior. Users of this plugin on previous versions\n  of Kong can now safely upgrade to the 0.14 family.\n  Thanks [@mlehner616](https://github.com/mlehner616) for the patch!\n  [#3699](https://github.com/Kong/kong/pull/3699)\n- ldap-auth\n    - Set the WWW-Authenticate header authentication scheme accordingly with\n      the `conf.header_type` property, which allows browsers to show the\n      authentication popup automatically. Thanks\n      [@francois-maillard](https://github.com/francois-maillard) for the patch.\n      [#3656](https://github.com/Kong/kong/pull/3656)\n    - Invalid authentication attempts do not block subsequent valid attempts\n      anymore.\n      [#3677](https://github.com/Kong/kong/pull/3677)\n\n[Back to TOC](#table-of-contents)\n\n## [0.14.0] - 2018/07/05\n\nThis release introduces the first version of the **Plugin Development Kit**: a\nLua SDK, comprised of a set of functions to ease the development of\ncustom plugins.\n\nAdditionally, it contains several major improvements consolidating Kong's\nfeature set and flexibility, such as the support for `PUT` endpoints on the\nAdmin API for idempotent workflows, the execution of plugins during\nNginx-produced errors, and the injection of **Nginx directives** without having\nto rely on the custom Nginx configuration pattern!\n\nFinally, new bundled plugins allow Kong to better integrate with **Cloud\nNative** environments, such as Zipkin and Prometheus.\n\nAs usual, major version upgrades require database migrations and changes to the\nNginx configuration file (if you customized the default template). Please take\na few minutes to read the [0.14 Upgrade\nPath](https://github.com/Kong/kong/blob/master/UPGRADE.md#upgrade-to-014x) for\nmore details regarding breaking changes and migrations before planning to\nupgrade your Kong cluster.\n\n### Breaking Changes\n\n##### Dependencies\n\n- :warning: The required OpenResty version has been bumped to 1.13.6.2. If you\n  are installing Kong from one of our distribution packages, you are not\n  affected by this change.\n  [#3498](https://github.com/Kong/kong/pull/3498)\n- :warning: Support for PostgreSQL 9.4 (deprecated in 0.12.0) is now dropped.\n  [#3490](https://github.com/Kong/kong/pull/3490)\n- :warning: Support for Cassandra 2.1 (deprecated in 0.12.0) is now dropped.\n  [#3490](https://github.com/Kong/kong/pull/3490)\n\n##### Configuration\n\n- :warning: The `server_tokens` and `latency_tokens` configuration properties\n  have been removed. Instead, a new `headers` configuration properties replaces\n  them and allows for more granular settings of injected headers (e.g.\n  `Server`, `Via`, `X-Kong-*-Latency`, etc...).\n  [#3300](https://github.com/Kong/kong/pull/3300)\n- :warning: New required `lua_shared_dict` entries must be added to the Nginx\n  configuration. You are not affected by this change if you do not use a custom\n  Nginx template.\n  [#3557](https://github.com/Kong/kong/pull/3557)\n- :warning: Other important modifications must be applied to the Nginx\n  configuration. You are not affected by this change if you do not use a custom\n  Nginx template.\n  [#3533](https://github.com/Kong/kong/pull/3533)\n\n##### Plugins\n\n- :warning: The Runscope plugin has been dropped, based on the EoL announcement\n  made by Runscope about their Traffic Inspector product.\n  [#3495](https://github.com/Kong/kong/pull/3495)\n\n##### Admin API\n\n- :warning: The SSL Certificates and SNI entities have moved to the new DAO\n  implementation. As such, the `/certificates` and `/snis` endpoints have\n  received notable usability improvements, but suffer from a few breaking\n  changes.\n  [#3386](https://github.com/Kong/kong/pull/3386)\n- :warning: The Consumers entity has moved to the new DAO implementation. As\n  such, the `/consumers` endpoint has received notable usability improvements,\n  but suffers from a few breaking changes.\n  [#3437](https://github.com/Kong/kong/pull/3437)\n\n### Changes\n\n##### Configuration\n\n- The default value of `db_cache_ttl` is now `0` (disabled). Now that our level\n  of confidence around the new caching mechanism introduced in 0.11.0 is high\n  enough, we consider `0` (no TTL) to be an appropriate default for production\n  environments, as it offers a smoother cache consumption behavior and reduces\n  database pressure.\n  [#3492](https://github.com/Kong/kong/pull/3492)\n\n##### Core\n\n- :fireworks: Serve stale data from the database cache when the datastore\n  cannot be reached. Such stale items are \"resurrected\" for `db_resurrect_ttl`\n  seconds (see configuration section).\n  [#3579](https://github.com/Kong/kong/pull/3579)\n- Reduce LRU churning in the database cache against some workloads.\n  [#3550](https://github.com/Kong/kong/pull/3550)\n\n### Additions\n\n##### Configuration\n\n- :fireworks: **Support for injecting Nginx directives via configuration\n  properties** (in the `kong.conf` file or via environment variables)! This new\n  way of customizing the Nginx configuration should render obsolete the old way\n  of maintaining a custom Nginx template in most cases!\n  [#3530](https://github.com/Kong/kong/pull/3530)\n- :fireworks: **Support for selectively disabling bundled plugins**. A new\n  `plugins` configuration property is introduced, and is used to specify which\n  plugins should be loaded by the node. Custom plugins should now be specified\n  in this new property, and the `custom_plugins` property is **deprecated**.\n  If desired, Kong administrators can specify a minimal set of plugins to load\n  (instead of the default, bundled plugins), and **improve P99 latency**\n  thanks to the resulting decrease in database traffic.\n  [#3387](https://github.com/Kong/kong/pull/3387)\n- The new `headers` configuration property allows for specifying the injection\n  of a new header: `X-Kong-Upstream-Status`. When enabled, Kong will inject\n  this header containing the HTTP status code of the upstream response in the\n  client response. This is particularly useful for clients to distinguish\n  upstream statuses upon rewriting of the response by Kong.\n  [#3263](https://github.com/Kong/kong/pull/3263)\n- A new `db_resurrect_ttl` configuration property can be set to customize\n  the amount of time stale data can be resurrected for when it cannot be\n  refreshed. Defaults to 30 seconds.\n  [#3579](https://github.com/Kong/kong/pull/3579)\n- Two new Cassandra load balancing policies are available: `RequestRoundRobin`\n  and `RequestDCAwareRoundRobin`. Both policies guarantee that the same peer\n  will be reused across several queries during the lifetime of a request, thus\n  guaranteeing no new connection will be opened against a peer during this\n  request.\n  [#3545](https://github.com/Kong/kong/pull/3545)\n\n##### Core\n\n- :fireworks: **Execute plugins on Nginx-produced errors.** Now, when Nginx\n  produces a 4xx error (upon invalid requests) or 5xx (upon failure from the\n  load balancer to connect to a Service), Kong will execute the response phases\n  of its plugins (`header_filter`, `body_filter`, `log`). As such, Kong logging\n  plugins are not blind to such Nginx-produced errors anymore, and will start\n  properly reporting them. Plugins should be built defensively against cases\n  where their `rewrite` or `access` phases were not executed.\n  [#3533](https://github.com/Kong/kong/pull/3533)\n- :fireworks: **Support for cookie-based load balancing!**\n  [#3472](https://github.com/Kong/kong/pull/3472)\n\n##### Plugins\n\n- :fireworks: **Introduction of the Plugin Development Kit!** A set of Lua\n  functions and variables that will greatly ease and speed up the task of\n  developing custom plugins.\n  The Plugin Development Kit (PDK) allows the retrieval and manipulation of the\n  request and response objects, as well as interacting with various core\n  components (e.g. logging, load balancing, DAO, etc...) without having to rely\n  on OpenResty functions, and with the guarantee of their forward-compatibility\n  with future versions of Kong.\n  [#3556](https://github.com/Kong/kong/pull/3556)\n- :fireworks: **New bundled plugin: Zipkin**! This plugin allows Kong to sample\n  traces and report them to a running Zipkin instance.\n  (See: https://github.com/Kong/kong-plugin-zipkin)\n  [#3434](https://github.com/Kong/kong/pull/3434)\n- :fireworks: **New bundled plugin: Prometheus**! This plugin allows Kong to\n  expose metrics in the Prometheus Exposition format. Available metrics include\n  HTTP status codes, latencies histogram, bandwidth, and more...\n  (See: https://github.com/Kong/kong-plugin-prometheus)\n  [#3547](https://github.com/Kong/kong/pull/3547)\n- :fireworks: **New bundled plugin: Azure Functions**! This plugin can be used\n  to invoke [Microsoft Azure\n  Functions](https://azure.microsoft.com/en-us/services/functions/), similarly\n  to the already existing AWS Lambda and OpenWhisk plugins.\n  (See: https://github.com/Kong/kong-plugin-azure-functions)\n  [#3428](https://github.com/Kong/kong/pull/3428)\n- :fireworks: **New bundled plugin: Serverless Functions**! Dynamically run Lua\n  without having to write a full-fledged plugin. Lua code snippets can be\n  uploaded via the Admin API and be executed during Kong's `access` phase.\n  (See: https://github.com/Kong/kong-plugin-serverless-functions)\n  [#3551](https://github.com/Kong/kong/pull/3551)\n- jwt: Support for limiting the allowed expiration period of JWT tokens. A new\n  `config.maximum_expiration` property can be set to indicate the maximum\n  number of seconds the `exp` claim may be ahead in the future.\n  Thanks [@mvanholsteijn](https://github.com/mvanholsteijn) for the patch!\n  [#3331](https://github.com/Kong/kong/pull/3331)\n- aws-lambda: Add `us-gov-west-1` to the list of allowed regions.\n  [#3529](https://github.com/Kong/kong/pull/3529)\n\n##### Admin API\n\n- :fireworks: Support for `PUT` in new endpoints (e.g. `/services/{id or\n  name}`, `/routes/{id}`, `/consumers/{id or username}`), allowing the\n  development of idempotent configuration workflows when scripting the Admin\n  API.\n  [#3416](https://github.com/Kong/kong/pull/3416)\n- Support for `PATCH` and `DELETE` on the `/services/{name}`,\n  `/consumers/{username}`, and `/snis/{name}` endpoints.\n  [#3416](https://github.com/Kong/kong/pull/3416)\n\n### Fixes\n\n##### Configuration\n\n- Properly support IPv6 addresses in `proxy_listen` and `admin_listen`\n  configuration properties.\n  [#3508](https://github.com/Kong/kong/pull/3508)\n\n##### Core\n\n- IPv6 nameservers with a scope are now ignored by the DNS resolver.\n  [#3478](https://github.com/Kong/kong/pull/3478)\n- SRV records without a port number now returns the default port instead of\n  `0`.\n  [#3478](https://github.com/Kong/kong/pull/3478)\n- Ensure DNS-based round robin load balancing starts at a randomized position\n  to prevent all Nginx workers from starting with the same peer.\n  [#3478](https://github.com/Kong/kong/pull/3478)\n- Properly report timeouts in passive health checks. Previously, connection\n  timeouts were counted as `tcp_failures`, and upstream timeouts were ignored.\n  Health check users should ensure that their `timeout` settings reflect their\n  intended behavior.\n  [#3539](https://github.com/Kong/kong/pull/3539)\n- Ensure active health check probe requests send the `Host` header.\n  [#3496](https://github.com/Kong/kong/pull/3496)\n- Overall, more reliable health checks healthiness counters behavior.\n  [#3496](https://github.com/Kong/kong/pull/3496)\n- Do not set `Content-Type` headers on HTTP 204 No Content responses.\n  [#3351](https://github.com/Kong/kong/pull/3351)\n- Ensure the PostgreSQL connector of the new DAO (used by Services, Routes,\n  Consumers, and SSL certs/SNIs) is now fully re-entrant and properly behaves\n  in busy workloads (e.g. scripting requests to the Admin API).\n  [#3423](https://github.com/Kong/kong/pull/3423)\n- Properly route HTTP/1.0 requests without a Host header when using the old\n  deprecated \"API\" entity.\n  [#3438](https://github.com/Kong/kong/pull/3438)\n- Ensure that all Kong-produced errors respect the `headers` configuration\n  setting (previously `server_tokens`) and do not include the `Server` header\n  if not configured.\n  [#3511](https://github.com/Kong/kong/pull/3511)\n- Harden an existing Cassandra migration.\n  [#3532](https://github.com/Kong/kong/pull/3532)\n- Prevent the load balancer from needlessly rebuilding its state when creating\n  Targets.\n  [#3477](https://github.com/Kong/kong/pull/3477)\n- Prevent some harmless error logs to be printed during startup when\n  initialization takes more than a few seconds.\n  [#3443](https://github.com/Kong/kong/pull/3443)\n\n##### Plugins\n\n- hmac: Ensure that empty request bodies do not pass validation if there is no\n  digest header.\n  Thanks [@mvanholsteijn](https://github.com/mvanholsteijn) for the patch!\n  [#3347](https://github.com/Kong/kong/pull/3347)\n- response-transformer: Prevent the plugin from throwing an error when its\n  `access` handler did not get a chance to run (e.g. on short-circuited,\n  unauthorized requests).\n  [#3524](https://github.com/Kong/kong/pull/3524)\n- aws-lambda: Ensure logging plugins subsequently run when this plugin\n  terminates.\n  [#3512](https://github.com/Kong/kong/pull/3512)\n- request-termination: Ensure logging plugins subsequently run when this plugin\n  terminates.\n  [#3513](https://github.com/Kong/kong/pull/3513)\n\n##### Admin API\n\n- Requests to `/healthy` and `/unhealthy` endpoints for upstream health checks\n  now properly propagate the new state to other nodes of a Kong cluster.\n  [#3464](https://github.com/Kong/kong/pull/3464)\n- Do not produce an HTTP 500 error when POST-ing to `/services` with an empty\n  `url` argument.\n  [#3452](https://github.com/Kong/kong/pull/3452)\n- Ensure foreign keys are required when creating child entities (e.g.\n  `service.id` when creating a Route). Previously some rows could have an empty\n  `service_id` field.\n  [#3548](https://github.com/Kong/kong/pull/3548)\n- Better type inference in new endpoints (e.g. `/services`, `/routes`,\n  `/consumers`) when using `application/x-www-form-urlencoded` MIME type.\n  [#3416](https://github.com/Kong/kong/pull/3416)\n\n[Back to TOC](#table-of-contents)\n\n## [0.13.1] - 2018/04/23\n\nThis release contains numerous bug fixes and a few convenience features.\nNotably, a best-effort/backwards-compatible approach is followed to resolve\n`no memory` errors caused by the fragmentation of shared memory between the\ncore and plugins.\n\n### Added\n\n##### Core\n\n- Cache misses are now stored in a separate shared memory zone from hits if\n  such a zone is defined. This reduces cache turnover and can increase the\n  cache hit ratio quite considerably.\n  Users with a custom Nginx template are advised to define such a zone to\n  benefit from this behavior:\n  `lua_shared_dict kong_db_cache_miss 12m;`.\n- We now ensure that the Cassandra or PostgreSQL instance Kong is connecting\n  to falls within the supported version range. Deprecated versions result in\n  warning logs. As a reminder, Kong 0.13.x supports Cassandra 2.2+,\n  and PostgreSQL 9.5+. Cassandra 2.1 and PostgreSQL 9.4 are supported, but\n  deprecated.\n  [#3310](https://github.com/Kong/kong/pull/3310)\n- HTTP 494 errors thrown by Nginx are now caught by Kong and produce a native,\n  Kong-friendly response.\n  Thanks [@ti-mo](https://github.com/ti-mo) for the contribution!\n  [#3112](https://github.com/Kong/kong/pull/3112)\n\n##### CLI\n\n- Report errors when compiling custom Nginx templates.\n  [#3294](https://github.com/Kong/kong/pull/3294)\n\n##### Admin API\n\n- Friendlier behavior of Routes schema validation: PATCH requests can be made\n  without specifying all three of `methods`, `hosts`, or `paths` if at least\n  one of the three is specified in the body.\n  [#3364](https://github.com/Kong/kong/pull/3364)\n\n##### Plugins\n\n- jwt: Support for identity providers using JWKS by ensuring the\n  `config.key_claim_name` values is looked for in the token header.\n  Thanks [@brycehemme](https://github.com/brycehemme) for the contribution!\n  [#3313](https://github.com/Kong/kong/pull/3313)\n- basic-auth: Allow specifying empty passwords.\n  Thanks [@zhouzhuojie](https://github.com/zhouzhuojie) and\n  [@perryao](https://github.com/perryao) for the contributions!\n  [#3243](https://github.com/Kong/kong/pull/3243)\n\n### Fixed\n\n##### Core\n\n- Numerous users have reported `no memory` errors which were caused by\n  circumstantial memory fragmentation. Such errors, while still possible if\n  plugin authors are not careful, should now mostly be addressed.\n  [#3311](https://github.com/Kong/kong/pull/3311)\n\n  **If you are using a custom Nginx template, be sure to define the following\n  shared memory zones to benefit from these fixes**:\n\n  ```\n  lua_shared_dict kong_db_cache_miss 12m;\n  lua_shared_dict kong_rate_limiting_counters 12m;\n  ```\n\n##### CLI\n\n- Redirect Nginx's stdout and stderr output to `kong start` when\n  `nginx_daemon` is enabled (such as when using the Kong Docker image). This\n  also prevents growing log files when Nginx redirects logs to `/dev/stdout`\n  and `/dev/stderr` but `nginx_daemon` is disabled.\n  [#3297](https://github.com/Kong/kong/pull/3297)\n\n##### Admin API\n\n- Set a Service's `port` to `443` when the `url` convenience parameter uses\n  the `https://` scheme.\n  [#3358](https://github.com/Kong/kong/pull/3358)\n- Ensure PATCH requests do not return an error when un-setting foreign key\n  fields with JSON `null`.\n  [#3355](https://github.com/Kong/kong/pull/3355)\n- Ensure the `/plugin/schema/:name` endpoint does not corrupt plugins' schemas.\n  [#3348](https://github.com/Kong/kong/pull/3348)\n- Properly URL-decode path segments of plugins endpoints accepting spaces\n  (e.g. `/consumers/<consumer>/basic-auth/John%20Doe/`).\n  [#3250](https://github.com/Kong/kong/pull/3250)\n- Properly serialize boolean filtering values when using Cassandra.\n  [#3362](https://github.com/Kong/kong/pull/3362)\n\n##### Plugins\n\n- rate-limiting/response-rate-limiting:\n  - If defined in the Nginx configuration, will use a dedicated\n    `lua_shared_dict` instead of using the `kong_cache` shared memory zone.\n    This prevents memory fragmentation issues resulting in `no memory` errors\n    observed by numerous users. Users with a custom Nginx template are advised\n    to define such a zone to benefit from this fix:\n    `lua_shared_dict kong_rate_limiting_counters 12m;`.\n    [#3311](https://github.com/Kong/kong/pull/3311)\n  - When using the Redis strategy, ensure the correct Redis database is\n    selected. This issue could occur when several request and response\n    rate-limiting were configured using different Redis databases.\n    Thanks [@mengskysama](https://github.com/mengskysama) for the patch!\n    [#3293](https://github.com/Kong/kong/pull/3293)\n- key-auth: Respect request MIME type when re-encoding the request body\n  if both `config.key_in_body` and `config.hide_credentials` are enabled.\n  Thanks [@p0pr0ck5](https://github.com/p0pr0ck5) for the patch!\n  [#3213](https://github.com/Kong/kong/pull/3213)\n- oauth2: Return HTTP 400 on invalid `scope` type.\n  Thanks [@Gman98ish](https://github.com/Gman98ish) for the patch!\n  [#3206](https://github.com/Kong/kong/pull/3206)\n- ldap-auth: Ensure the plugin does not throw errors when configured as a\n  global plugin.\n  [#3354](https://github.com/Kong/kong/pull/3354)\n- hmac-auth: Verify signature against non-normalized (`$request_uri`) request\n  line (instead of `$uri`).\n  [#3339](https://github.com/Kong/kong/pull/3339)\n- aws-lambda: Fix a typo in upstream headers sent to the function. We now\n  properly send the `X-Amz-Log-Type` header.\n  [#3398](https://github.com/Kong/kong/pull/3398)\n\n[Back to TOC](#table-of-contents)\n\n## [0.13.0] - 2018/03/22\n\nThis release introduces two new core entities that will improve the way you\nconfigure Kong: **Routes** & **Services**. Those entities replace the \"API\"\nentity and simplify the setup of non-naive use-cases by providing better\nseparation of concerns and allowing for plugins to be applied to specific\n**endpoints**.\n\nAs usual, major version upgrades require database migrations and changes to\nthe Nginx configuration file (if you customized the default template).\nPlease take a few minutes to read the [0.13 Upgrade\nPath](https://github.com/Kong/kong/blob/master/UPGRADE.md#upgrade-to-013x) for\nmore details regarding breaking changes and migrations before planning to\nupgrade your Kong cluster.\n\n### Breaking Changes\n\n##### Configuration\n\n- :warning: The `proxy_listen` and `admin_listen` configuration values have a\n  new syntax. This syntax is more aligned with that of NGINX and is more\n  powerful while also simpler. As a result, the following configuration values\n  have been removed because superfluous: `ssl`, `admin_ssl`, `http2`,\n  `admin_http2`, `proxy_listen_ssl`, and `admin_listen_ssl`.\n  [#3147](https://github.com/Kong/kong/pull/3147)\n\n##### Plugins\n\n- :warning: galileo: As part of the Galileo deprecation path, the galileo\n  plugin is not enabled by default anymore, although still bundled with 0.13.\n  Users are advised to stop using the plugin, but for the time being can keep\n  enabling it by adding it to the `custom_plugin` configuration value.\n  [#3233](https://github.com/Kong/kong/pull/3233)\n- :warning: rate-limiting (Cassandra): The default migration for including\n  Routes and Services in plugins will remove and re-create the Cassandra\n  rate-limiting counters table. This means that users that were rate-limited\n  because of excessive API consumption will be able to consume the API until\n  they reach their limit again. There is no such data deletion in PostgreSQL.\n  [def201f](https://github.com/Kong/kong/commit/def201f566ccf2dd9b670e2f38e401a0450b1cb5)\n\n### Changes\n\n##### Dependencies\n\n- **Note to Docker users**: The `latest` tag on Docker Hub now points to the\n  **alpine** image instead of CentOS. This also applies to the `0.13.0` tag.\n- The OpenResty version shipped with our default packages has been bumped to\n  `1.13.6.1`. The 0.13.0 release should still be compatible with the OpenResty\n  `1.11.2.x` series for the time being.\n- Bumped [lua-resty-dns-client](https://github.com/Kong/lua-resty-dns-client)\n  to `2.0.0`.\n  [#3220](https://github.com/Kong/kong/pull/3220)\n- Bumped [lua-resty-http](https://github.com/pintsized/lua-resty-http) to\n  `0.12`.\n  [#3196](https://github.com/Kong/kong/pull/3196)\n- Bumped [lua-multipart](https://github.com/Kong/lua-multipart) to `0.5.5`.\n  [#3318](https://github.com/Kong/kong/pull/3318)\n- Bumped [lua-resty-healthcheck](https://github.com/Kong/lua-resty-healthcheck)\n  to `0.4.0`.\n  [#3321](https://github.com/Kong/kong/pull/3321)\n\n### Additions\n\n##### Configuration\n\n- :fireworks: Support for **control-plane** and **data-plane** modes. The new\n  syntax of `proxy_listen` and `admin_listen` supports `off`, which\n  disables either one of those interfaces. It is now simpler than ever to\n  make a Kong node \"Proxy only\" (data-plane) or \"Admin only\" (control-plane).\n  [#3147](https://github.com/Kong/kong/pull/3147)\n\n##### Core\n\n- :fireworks: This release introduces two new entities: **Routes** and\n  **Services**. Those entities will provide a better separation of concerns\n  than the \"API\" entity offers. Routes will define rules for matching a\n  client's request (e.g., method, host, path...), and Services will represent\n  upstream services (or backends) that Kong should proxy those requests to.\n  Plugins can also be added to both Routes and Services, enabling use-cases to\n  apply plugins more granularly (e.g., per endpoint).\n  Following this addition, the API entity and related Admin API endpoints are\n  now deprecated. This release is backwards-compatible with the previous model\n  and all of your currently defined APIs and matching rules are still\n  supported, although we advise users to migrate to Routes and Services as soon\n  as possible.\n  [#3224](https://github.com/Kong/kong/pull/3224)\n\n##### Admin API\n\n- :fireworks: New endpoints: `/routes` and `/services` to interact with the new\n  core entities. More specific endpoints are also available such as\n  `/services/{service id or name}/routes`,\n  `/services/{service id or name}/plugins`, and `/routes/{route id}/plugins`.\n  [#3224](https://github.com/Kong/kong/pull/3224)\n- :fireworks: Our new endpoints (listed above) provide much better responses\n  with regards to producing responses for incomplete entities, errors, etc...\n  In the future, existing endpoints will gradually be moved to using this new\n  Admin API content producer.\n  [#3224](https://github.com/Kong/kong/pull/3224)\n- :fireworks: Improved argument parsing in form-urlencoded requests to the new\n  endpoints as well.\n  Kong now expects the following syntaxes for representing\n  arrays: `hosts[]=a.com&hosts[]=b.com`, `hosts[1]=a.com&hosts[2]=b.com`, which\n  avoid comma-separated arrays and related issues that can arise.\n  In the future, existing endpoints will gradually be moved to using this new\n  Admin API content parser.\n  [#3224](https://github.com/Kong/kong/pull/3224)\n\n##### Plugins\n\n- jwt: `ngx.ctx.authenticated_jwt_token` is available for other plugins to use.\n  [#2988](https://github.com/Kong/kong/pull/2988)\n- statsd: The fields `host`, `port` and `metrics` are no longer marked as\n  \"required\", since they have a default value.\n  [#3209](https://github.com/Kong/kong/pull/3209)\n\n### Fixes\n\n##### Core\n\n- Fix an issue causing nodes in a cluster to use the default health checks\n  configuration when the user configured them from another node (event\n  propagated via the cluster).\n  [#3319](https://github.com/Kong/kong/pull/3319)\n- Increase the default load balancer wheel size from 100 to 10.000. This allows\n  for a better distribution of the load between Targets in general.\n  [#3296](https://github.com/Kong/kong/pull/3296)\n\n##### Admin API\n\n- Fix several issues with application/multipart MIME type parsing of payloads.\n  [#3318](https://github.com/Kong/kong/pull/3318)\n- Fix several issues with the parsing of health checks configuration values.\n  [#3306](https://github.com/Kong/kong/pull/3306)\n  [#3321](https://github.com/Kong/kong/pull/3321)\n\n[Back to TOC](#table-of-contents)\n\n## [0.12.3] - 2018/03/12\n\n### Fixed\n\n- Suppress a memory leak in the core introduced in 0.12.2.\n  Thanks [@mengskysama](https://github.com/mengskysama) for the report.\n  [#3278](https://github.com/Kong/kong/pull/3278)\n\n[Back to TOC](#table-of-contents)\n\n## [0.12.2] - 2018/02/28\n\n### Added\n\n##### Core\n\n- Load balancers now log DNS errors to facilitate debugging.\n  [#3177](https://github.com/Kong/kong/pull/3177)\n- Reports now can include custom immutable values.\n  [#3180](https://github.com/Kong/kong/pull/3180)\n\n##### CLI\n\n- The `kong migrations reset` command has a new `--yes` flag. This flag makes\n  the command run non-interactively, and ensures no confirmation prompt will\n  occur.\n  [#3189](https://github.com/Kong/kong/pull/3189)\n\n##### Admin API\n\n- A new endpoint `/upstreams/:upstream_id/health` will return the health of the\n  specified upstream.\n  [#3232](https://github.com/Kong/kong/pull/3232)\n- The `/` endpoint in the Admin API now exposes the `node_id` field.\n  [#3234](https://github.com/Kong/kong/pull/3234)\n\n### Fixed\n\n##### Core\n\n- HTTP/1.0 requests without a Host header are routed instead of being rejected.\n  HTTP/1.1 requests without a Host are considered invalid and will still be\n  rejected.\n  Thanks to [@rainiest](https://github.com/rainest) for the patch!\n  [#3216](https://github.com/Kong/kong/pull/3216)\n- Fix the load balancer initialization when some Targets would contain\n  hostnames.\n  [#3187](https://github.com/Kong/kong/pull/3187)\n- Fix incomplete handling of errors when initializing DAO objects.\n  [637532e](https://github.com/Kong/kong/commit/637532e05d8ed9a921b5de861cc7f463e96c6e04)\n- Remove bogus errors in the logs provoked by healthcheckers between the time\n  they are unregistered and the time they are garbage-collected\n  ([#3207](https://github.com/Kong/kong/pull/3207)) and when receiving an HTTP\n  status not tracked by healthy or unhealthy lists\n  ([c8eb5ae](https://github.com/Kong/kong/commit/c8eb5ae28147fc02473c05a7b1dbf502fbb64242)).\n- Fix soft errors not being handled correctly inside the Kong cache.\n  [#3150](https://github.com/Kong/kong/pull/3150)\n\n##### Migrations\n\n- Better handling of already existing Cassandra keyspaces in migrations.\n  [#3203](https://github.com/Kong/kong/pull/3203).\n  Thanks to [@pamiel](https://github.com/pamiel) for the patch!\n\n##### Admin API\n\n- Ensure `GET /certificates/{uuid}` does not return HTTP 500 when the given\n  identifier does not exist.\n  Thanks to [@vdesjardins](https://github.com/vdesjardins) for the patch!\n  [#3148](https://github.com/Kong/kong/pull/3148)\n\n[Back to TOC](#table-of-contents)\n\n## [0.12.1] - 2018/01/18\n\nThis release addresses a few issues encountered with 0.12.0, including one\nwhich would prevent upgrading from a previous version. The [0.12 Upgrade\nPath](https://github.com/Kong/kong/blob/master/UPGRADE.md)\nis still relevant for upgrading existing clusters to 0.12.1.\n\n### Fixed\n\n- Fix a migration between previous Kong versions and 0.12.0.\n  [#3159](https://github.com/Kong/kong/pull/3159)\n- Ensure Lua errors are propagated when thrown in the `access` handler by\n  plugins.\n  [38580ff](https://github.com/Kong/kong/commit/38580ff547cbd4a557829e3ad135cd6a0f821f7c)\n\n[Back to TOC](#table-of-contents)\n\n## [0.12.0] - 2018/01/16\n\nThis major release focuses on two new features we are very excited about:\n**health checks** and **hash based load balancing**!\n\nWe also took this as an opportunity to fix a few prominent issues, sometimes\nat the expense of breaking changes but overall improving the flexibility and\nusability of Kong! Do keep in mind that this is a major release, and as such,\nthat we require of you to run the **migrations step**, via the\n`kong migrations up` command.\n\nPlease take a few minutes to thoroughly read the [0.12 Upgrade\nPath](https://github.com/Kong/kong/blob/master/UPGRADE.md#upgrade-to-012x)\nfor more details regarding breaking changes and migrations before planning to\nupgrade your Kong cluster.\n\n### Deprecation notices\n\nStarting with 0.12.0, we are announcing the deprecation of older versions\nof our supported databases:\n\n- Support for PostgreSQL 9.4 is deprecated. Users are advised to upgrade to\n  9.5+\n- Support for Cassandra 2.1 and below is deprecated. Users are advised to\n  upgrade to 2.2+\n\nNote that the above deprecated versions are still supported in this release,\nbut will be dropped in subsequent ones.\n\n### Breaking changes\n\n##### Core\n\n- :warning: The required OpenResty version has been bumped to 1.11.2.5. If you\n  are installing Kong from one of our distribution packages, you are not\n  affected by this change.\n  [#3097](https://github.com/Kong/kong/pull/3097)\n- :warning: As Kong now executes subsequent plugins when a request is being\n  short-circuited (e.g. HTTP 401 responses from auth plugins), plugins that\n  run in the header or body filter phases will be run upon such responses\n  from the access phase. We consider this change a big improvement in the\n  Kong run-loop as it allows for more flexibility for plugins. However, it is\n  unlikely, but possible that some of these plugins (e.g. your custom plugins)\n  now run in scenarios where they were not previously expected to run.\n  [#3079](https://github.com/Kong/kong/pull/3079)\n\n##### Admin API\n\n- :warning: By default, the Admin API now only listens on the local interface.\n  We consider this change to be an improvement in the default security policy\n  of Kong. If you are already using Kong, and your Admin API still binds to all\n  interfaces, consider updating it as well. You can do so by updating the\n  `admin_listen` configuration value, like so: `admin_listen = 127.0.0.1:8001`.\n  Thanks [@pduldig-at-tw](https://github.com/pduldig-at-tw) for the suggestion\n  and the patch.\n  [#3016](https://github.com/Kong/kong/pull/3016)\n\n  :red_circle: **Note to Docker users**: Beware of this change as you may have\n  to ensure that your Admin API is reachable via the host's interface.\n  You can use the `-e KONG_ADMIN_LISTEN` argument when provisioning your\n  container(s) to update this value; for example,\n  `-e KONG_ADMIN_LISTEN=0.0.0.0:8001`.\n\n- :warning: To reduce confusion, the `/upstreams/:upstream_name_or_id/targets/`\n  has been updated to not show the full list of Targets anymore, but only\n  the ones that are currently active in the load balancer. To retrieve the full\n  history of Targets, you can now query\n  `/upstreams/:upstream_name_or_id/targets/all`. The\n  `/upstreams/:upstream_name_or_id/targets/active` endpoint has been removed.\n  Thanks [@hbagdi](https://github.com/hbagdi) for tackling this backlog item!\n  [#3049](https://github.com/Kong/kong/pull/3049)\n- :warning: The `orderlist` property of Upstreams has been removed, along with\n  any confusion it may have brought. The balancer is now able to fully function\n  without it, yet with the same level of entropy in its load distribution.\n  [#2748](https://github.com/Kong/kong/pull/2748)\n\n##### CLI\n\n- :warning: The `$ kong compile` command which was deprecated in 0.11.0 has\n  been removed.\n  [#3069](https://github.com/Kong/kong/pull/3069)\n\n##### Plugins\n\n- :warning: In logging plugins, the `request.request_uri` field has been\n  renamed to `request.url`.\n  [#2445](https://github.com/Kong/kong/pull/2445)\n  [#3098](https://github.com/Kong/kong/pull/3098)\n\n### Added\n\n##### Core\n\n- :fireworks: Support for **health checks**! Kong can now short-circuit some\n  of your upstream Targets (replicas) from its load balancer when it encounters\n  too many TCP or HTTP errors. You can configure the number of failures, or the\n  HTTP status codes that should be considered invalid, and Kong will monitor\n  the failures and successes of proxied requests to each upstream Target. We\n  call this feature **passive health checks**.\n  Additionally, you can configure **active health checks**, which will make\n  Kong perform periodic HTTP test requests to actively monitor the health of\n  your upstream services, and pre-emptively short-circuit them.\n  Upstream Targets can be manually taken up or down via two new Admin API\n  endpoints: `/healthy` and `/unhealthy`.\n  [#3096](https://github.com/Kong/kong/pull/3096)\n- :fireworks: Support for **hash based load balancing**! Kong now offers\n  consistent hashing/sticky sessions load balancing capabilities via the new\n  `hash_*` attributes of the Upstream entity. Hashes can be based off client\n  IPs, request headers, or Consumers!\n  [#2875](https://github.com/Kong/kong/pull/2875)\n- :fireworks: Logging plugins now log requests that were short-circuited by\n  Kong! (e.g. HTTP 401 responses from auth plugins or HTTP 429 responses from\n  rate limiting plugins, etc.) Kong now executes any subsequent plugins once a\n  request has been short-circuited. Your plugin must be using the\n  `kong.tools.responses` module for this behavior to be respected.\n  [#3079](https://github.com/Kong/kong/pull/3079)\n- Kong is now compatible with OpenResty up to version 1.13.6.1. Be aware that\n  the recommended (and default) version shipped with this release is still\n  1.11.2.5.\n  [#3070](https://github.com/Kong/kong/pull/3070)\n\n##### CLI\n\n- `$ kong start` now considers the commonly used `/opt/openresty` prefix when\n  searching for the `nginx` executable.\n  [#3074](https://github.com/Kong/kong/pull/3074)\n\n##### Admin API\n\n- Two new endpoints, `/healthy` and `/unhealthy` can be used to manually bring\n  upstream Targets up or down, as part of the new health checks feature of the\n  load balancer.\n  [#3096](https://github.com/Kong/kong/pull/3096)\n\n##### Plugins\n\n- logging plugins: A new field `upstream_uri` now logs the value of the\n  upstream request's path. This is useful to help debugging plugins or setups\n  that aim at rewriting a request's URL during proxying.\n  Thanks [@shiprabehera](https://github.com/shiprabehera) for the patch!\n  [#2445](https://github.com/Kong/kong/pull/2445)\n- tcp-log: Support for TLS handshake with the logs recipients for secure\n  transmissions of logging data.\n  [#3091](https://github.com/Kong/kong/pull/3091)\n- jwt: Support for JWTs passed in cookies. Use the new `config.cookie_names`\n  property to configure the behavior to your liking.\n  Thanks [@mvanholsteijn](https://github.com/mvanholsteijn) for the patch!\n  [#2974](https://github.com/Kong/kong/pull/2974)\n- oauth2\n    - New `config.auth_header_name` property to customize the authorization\n      header's name.\n      Thanks [@supraja93](https://github.com/supraja93)\n      [#2928](https://github.com/Kong/kong/pull/2928)\n    - New `config.refresh_ttl` property to customize the TTL of refresh tokens,\n      previously hard-coded to 14 days.\n      Thanks [@bob983](https://github.com/bob983) for the patch!\n      [#2942](https://github.com/Kong/kong/pull/2942)\n    - Avoid an error in the logs when trying to retrieve an access token from\n      a request without a body.\n      Thanks [@WALL-E](https://github.com/WALL-E) for the patch.\n      [#3063](https://github.com/Kong/kong/pull/3063)\n- ldap: New `config.header_type` property to customize the authorization method\n  in the `Authorization` header.\n  Thanks [@francois-maillard](https://github.com/francois-maillard) for the\n  patch!\n  [#2963](https://github.com/Kong/kong/pull/2963)\n\n### Fixed\n\n##### CLI\n\n- Fix a potential vulnerability in which an attacker could read the Kong\n  configuration file with insufficient permissions for a short window of time\n  while Kong is being started.\n  [#3057](https://github.com/Kong/kong/pull/3057)\n- Proper log message upon timeout in `$ kong quit`.\n  [#3061](https://github.com/Kong/kong/pull/3061)\n\n##### Admin API\n\n- The `/certificates` endpoint now properly supports the `snis` parameter\n  in PUT and PATCH requests.\n  Thanks [@hbagdi](https://github.com/hbagdi) for the contribution!\n  [#3040](https://github.com/Kong/kong/pull/3040)\n- Avoid sending the `HTTP/1.1 415 Unsupported Content Type` response when\n  receiving a request with a valid `Content-Type`, but with an empty payload.\n  [#3077](https://github.com/Kong/kong/pull/3077)\n\n##### Plugins\n\n- basic-auth:\n    - Accept passwords containing `:`.\n      Thanks [@nico-acidtango](https://github.com/nico-acidtango) for the patch!\n      [#3014](https://github.com/Kong/kong/pull/3014)\n    - Performance improvements, courtesy of\n      [@nico-acidtango](https://github.com/nico-acidtango)\n      [#3014](https://github.com/Kong/kong/pull/3014)\n\n[Back to TOC](#table-of-contents)\n\n## [0.11.2] - 2017/11/29\n\n### Added\n\n##### Plugins\n\n- key-auth: New endpoints to manipulate API keys.\n  Thanks [@hbagdi](https://github.com/hbagdi) for the contribution.\n  [#2955](https://github.com/Kong/kong/pull/2955)\n    - `/key-auths/` to paginate through all keys.\n    - `/key-auths/:credential_key_or_id/consumer` to retrieve the Consumer\n      associated with a key.\n- basic-auth: New endpoints to manipulate basic-auth credentials.\n  Thanks [@hbagdi](https://github.com/hbagdi) for the contribution.\n  [#2998](https://github.com/Kong/kong/pull/2998)\n    - `/basic-auths/` to paginate through all basic-auth credentials.\n    - `/basic-auths/:credential_username_or_id/consumer` to retrieve the\n      Consumer associated with a credential.\n- jwt: New endpoints to manipulate JWTs.\n  Thanks [@hbagdi](https://github.com/hbagdi) for the contribution.\n  [#3003](https://github.com/Kong/kong/pull/3003)\n    - `/jwts/` to paginate through all JWTs.\n    - `/jwts/:jwt_key_or_id/consumer` to retrieve the Consumer\n      associated with a JWT.\n- hmac-auth: New endpoints to manipulate hmac-auth credentials.\n  Thanks [@hbagdi](https://github.com/hbagdi) for the contribution.\n  [#3009](https://github.com/Kong/kong/pull/3009)\n    - `/hmac-auths/` to paginate through all hmac-auth credentials.\n    - `/hmac-auths/:hmac_username_or_id/consumer` to retrieve the Consumer\n      associated with a credential.\n- acl: New endpoints to manipulate ACLs.\n  Thanks [@hbagdi](https://github.com/hbagdi) for the contribution.\n  [#3039](https://github.com/Kong/kong/pull/3039)\n    - `/acls/` to paginate through all ACLs.\n    - `/acls/:acl_id/consumer` to retrieve the Consumer\n      associated with an ACL.\n\n### Fixed\n\n##### Core\n\n- Avoid logging some unharmful error messages related to clustering.\n  [#3002](https://github.com/Kong/kong/pull/3002)\n- Improve performance and memory footprint when parsing multipart request\n  bodies.\n  [Kong/lua-multipart#13](https://github.com/Kong/lua-multipart/pull/13)\n\n##### Configuration\n\n- Add a format check for the `admin_listen_ssl` property, ensuring it contains\n  a valid port.\n  [#3031](https://github.com/Kong/kong/pull/3031)\n\n##### Admin API\n\n- PUT requests with payloads containing non-existing primary keys for entities\n  now return HTTP 404 Not Found, instead of HTTP 200 OK without a response\n  body.\n  [#3007](https://github.com/Kong/kong/pull/3007)\n- On the `/` endpoint, ensure `enabled_in_cluster` shows up as an empty JSON\n  Array (`[]`), instead of an empty JSON Object (`{}`).\n  Thanks [@hbagdi](https://github.com/hbagdi) for the patch!\n  [#2982](https://github.com/Kong/kong/issues/2982)\n\n##### Plugins\n\n- hmac-auth: Better parsing of the `Authorization` header to avoid internal\n  errors resulting in HTTP 500.\n  Thanks [@mvanholsteijn](https://github.com/mvanholsteijn) for the patch!\n  [#2996](https://github.com/Kong/kong/pull/2996)\n- Improve the performance of the rate-limiting and response-rate-limiting\n  plugins when using the Redis policy.\n  [#2956](https://github.com/Kong/kong/pull/2956)\n- Improve the performance of the response-transformer plugin.\n  [#2977](https://github.com/Kong/kong/pull/2977)\n\n## [0.11.1] - 2017/10/24\n\n### Changed\n\n##### Configuration\n\n- Drop the `lua_code_cache` configuration property. This setting has been\n  considered harmful since 0.11.0 as it interferes with Kong's internals.\n  [#2854](https://github.com/Kong/kong/pull/2854)\n\n### Fixed\n\n##### Core\n\n- DNS: SRV records pointing to an A record are now properly handled by the\n  load balancer when `preserve_host` is disabled. Such records used to throw\n  Lua errors on the proxy code path.\n  [Kong/lua-resty-dns-client#19](https://github.com/Kong/lua-resty-dns-client/pull/19)\n- Fixed an edge-case where `preserve_host` would sometimes craft an upstream\n  request with a Host header from a previous client request instead of the\n  current one.\n  [#2832](https://github.com/Kong/kong/pull/2832)\n- Ensure APIs with regex URIs are evaluated in the order that they are created.\n  [#2924](https://github.com/Kong/kong/pull/2924)\n- Fixed a typo that caused the load balancing components to ignore the Upstream\n  slots property.\n  [#2747](https://github.com/Kong/kong/pull/2747)\n\n##### CLI\n\n- Fixed the verification of self-signed SSL certificates for PostgreSQL and\n  Cassandra in the `kong migrations` command. Self-signed SSL certificates are\n  now properly verified during migrations according to the\n  `lua_ssl_trusted_certificate` configuration property.\n  [#2908](https://github.com/Kong/kong/pull/2908)\n\n##### Admin API\n\n- The `/upstream/{upstream}/targets/active` endpoint used to return HTTP\n  `405 Method Not Allowed` when called with a trailing slash. Both notations\n  (with and without the trailing slash) are now supported.\n  [#2884](https://github.com/Kong/kong/pull/2884)\n\n##### Plugins\n\n- bot-detection: Fixed an issue which would prevent the plugin from running and\n  result in an HTTP `500` error if configured globally.\n  [#2906](https://github.com/Kong/kong/pull/2906)\n- ip-restriction: Fixed support for the `0.0.0.0/0` CIDR block. This block is\n  now supported and won't trigger an error when used in this plugin's properties.\n  [#2918](https://github.com/Kong/kong/pull/2918)\n\n### Added\n\n##### Plugins\n\n- aws-lambda: Added support to forward the client request's HTTP method,\n  headers, URI, and body to the Lambda function.\n  [#2823](https://github.com/Kong/kong/pull/2823)\n- key-auth: New `run_on_preflight` configuration option to control\n  authentication on preflight requests.\n  [#2857](https://github.com/Kong/kong/pull/2857)\n- jwt: New `run_on_preflight` configuration option to control authentication\n  on preflight requests.\n  [#2857](https://github.com/Kong/kong/pull/2857)\n\n##### Plugin development\n\n- Ensure migrations have valid, unique names to avoid conflicts between custom\n  plugins.\n  Thanks [@ikogan](https://github.com/ikogan) for the patch!\n  [#2821](https://github.com/Kong/kong/pull/2821)\n\n### Improved\n\n##### Migrations & Deployments\n\n- Improve migrations reliability for future major releases.\n  [#2869](https://github.com/Kong/kong/pull/2869)\n\n##### Plugins\n\n- Improve the performance of the acl and oauth2 plugins.\n  [#2736](https://github.com/Kong/kong/pull/2736)\n  [#2806](https://github.com/Kong/kong/pull/2806)\n\n[Back to TOC](#table-of-contents)\n\n## [0.10.4] - 2017/10/24\n\n### Fixed\n\n##### Core\n\n- DNS: SRV records pointing to an A record are now properly handled by the\n  load balancer when `preserve_host` is disabled. Such records used to throw\n  Lua errors on the proxy code path.\n  [Kong/lua-resty-dns-client#19](https://github.com/Kong/lua-resty-dns-client/pull/19)\n- HTTP `400` errors thrown by Nginx are now correctly caught by Kong and return\n  a native, Kong-friendly response.\n  [#2476](https://github.com/Mashape/kong/pull/2476)\n- Fix an edge-case where an API with multiple `uris` and `strip_uri = true`\n  would not always strip the client URI.\n  [#2562](https://github.com/Mashape/kong/issues/2562)\n- Fix an issue where Kong would match an API with a shorter URI (from its\n  `uris` value) as a prefix instead of a longer, matching prefix from\n  another API.\n  [#2662](https://github.com/Mashape/kong/issues/2662)\n- Fixed a typo that caused the load balancing components to ignore the\n  Upstream `slots` property.\n  [#2747](https://github.com/Mashape/kong/pull/2747)\n\n##### Configuration\n\n- Octothorpes (`#`) can now be escaped (`\\#`) and included in the Kong\n  configuration values such as your datastore passwords or usernames.\n  [#2411](https://github.com/Mashape/kong/pull/2411)\n\n##### Admin API\n\n- The `data` response field of the `/upstreams/{upstream}/targets/active`\n  Admin API endpoint now returns a list (`[]`) instead of an object (`{}`)\n  when no active targets are present.\n  [#2619](https://github.com/Mashape/kong/pull/2619)\n\n##### Plugins\n\n- datadog: Avoid a runtime error if the plugin is configured as a global plugin\n  but the downstream request did not match any configured API.\n  Thanks [@kjsteuer](https://github.com/kjsteuer) for the fix!\n  [#2702](https://github.com/Mashape/kong/pull/2702)\n- ip-restriction: Fixed support for the `0.0.0.0/0` CIDR block. This block is\n  now supported and won't trigger an error when used in this plugin's properties.\n  [#2918](https://github.com/Mashape/kong/pull/2918)\n\n[Back to TOC](#table-of-contents)\n\n## [0.11.0] - 2017/08/16\n\nThe latest and greatest version of Kong features improvements all over the\nboard for a better and easier integration with your infrastructure!\n\nThe highlights of this release are:\n\n- Support for **regex URIs** in routing, one of the oldest requested\n  features from the community.\n- Support for HTTP/2 traffic from your clients.\n- Kong does not depend on Serf anymore, which makes deployment and networking\n  requirements **considerably simpler**.\n- A better integration with orchestration tools thanks to the support for **non\n  FQDNs** in Kong's DNS resolver.\n\nAs per usual, our major releases include datastore migrations which are\nconsidered **breaking changes**. Additionally, this release contains numerous\nbreaking changes to the deployment process and proxying behavior that you\nshould be familiar with.\n\nWe strongly advise that you read this changeset thoroughly, as well as the\n[0.11 Upgrade Path](https://github.com/Kong/kong/blob/master/UPGRADE.md#upgrade-to-011x)\nif you are planning to upgrade a Kong cluster.\n\n### Breaking changes\n\n##### Configuration\n\n- :warning: Numerous updates were made to the Nginx configuration template.\n  If you are using a custom template, you **must** apply those\n  modifications. See the [0.11 Upgrade\n  Path](https://github.com/Kong/kong/blob/master/UPGRADE.md#upgrade-to-011x)\n  for a complete list of changes to apply.\n\n##### Migrations & Deployment\n\n- :warning: Migrations are **not** executed automatically by `kong start`\n  anymore. Migrations are now a **manual** process, which must be executed via\n  the `kong migrations` command. In practice, this means that you have to run\n  `kong migrations up [-c kong.conf]` in one of your nodes **before** starting\n  your Kong nodes. This command should be run from a **single** node/container\n  to avoid several nodes running migrations concurrently and potentially\n  corrupting your database. Once the migrations are up-to-date, it is\n  considered safe to start multiple Kong nodes concurrently.\n  [#2421](https://github.com/Kong/kong/pull/2421)\n- :warning: :fireworks: Serf is **not** a dependency anymore. Kong nodes now\n  handle cache invalidation events via a built-in database polling mechanism.\n  See the new \"Datastore Cache\" section of the configuration file which\n  contains 3 new documented properties: `db_update_frequency`,\n  `db_update_propagation`, and `db_cache_ttl`. If you are using Cassandra, you\n  **should** pay a particular attention to the `db_update_propagation` setting,\n  as you **should not** use the default value of `0`.\n  [#2561](https://github.com/Kong/kong/pull/2561)\n\n##### Core\n\n- :warning: Kong now requires OpenResty `1.11.2.4`. OpenResty's LuaJIT can\n  now be built with Lua 5.2 compatibility.\n  [#2489](https://github.com/Kong/kong/pull/2489)\n  [#2790](https://github.com/Kong/kong/pull/2790)\n- :warning: Previously, the `X-Forwarded-*` and `X-Real-IP` headers were\n  trusted from any client by default, and forwarded upstream. With the\n  introduction of the new `trusted_ips` property (see the below \"Added\"\n  section) and to enforce best security practices, Kong *does not* trust\n  any client IP address by default anymore. This will make Kong *not*\n  forward incoming `X-Forwarded-*` headers if not coming from configured,\n  trusted IP addresses blocks. This setting also affects the API\n  `check_https` field, which itself relies on *trusted* `X-Forwarded-Proto`\n  headers **only**.\n  [#2236](https://github.com/Kong/kong/pull/2236)\n- :warning: The API Object property `http_if_terminated` is now set to `false`\n  by default. For Kong to evaluate the client `X-Forwarded-Proto` header, you\n  must now configure Kong to trust the client IP (see above change), **and**\n  you must explicitly set this value to `true`. This affects you if you are\n  doing SSL termination somewhere before your requests hit Kong, and if you\n  have configured `https_only` on the API, or if you use a plugin that requires\n  HTTPS traffic (e.g. OAuth2).\n  [#2588](https://github.com/Kong/kong/pull/2588)\n- :warning: The internal DNS resolver now honours the `search` and `ndots`\n  configuration options of your `resolv.conf` file. Make sure that DNS\n  resolution is still consistent in your environment, and consider\n  eventually not using FQDNs anymore.\n  [#2425](https://github.com/Kong/kong/pull/2425)\n\n##### Admin API\n\n- :warning: As a result of the Serf removal, Kong is now entirely stateless,\n  and as such, the `/cluster` endpoint has disappeared.\n  [#2561](https://github.com/Kong/kong/pull/2561)\n- :warning: The Admin API `/status` endpoint does not return a count of the\n  database entities anymore. Instead, it now returns a `database.reachable`\n  boolean value, which reflects the state of the connection between Kong\n  and the underlying database. Please note that this flag **does not**\n  reflect the health of the database itself.\n  [#2567](https://github.com/Kong/kong/pull/2567)\n\n##### Plugin development\n\n- :warning: The upstream URI is now determined via the Nginx\n  `$upstream_uri` variable. Custom plugins using the `ngx.req.set_uri()`\n  API will not be taken into consideration anymore. One must now set the\n  `ngx.var.upstream_uri` variable from the Lua land.\n  [#2519](https://github.com/Kong/kong/pull/2519)\n- :warning: The `hooks.lua` module for custom plugins is dropped, along\n  with the `database_cache.lua` module. Database entities caching and\n  eviction has been greatly improved to simplify and automate most caching\n  use-cases. See the [Plugins Development\n  Guide](https://getkong.org/docs/0.11.x/plugin-development/entities-cache/)\n  and the [0.11 Upgrade\n  Path](https://github.com/Kong/kong/blob/master/UPGRADE.md#upgrade-to-011x)\n  for more details.\n  [#2561](https://github.com/Kong/kong/pull/2561)\n- :warning: To ensure that the order of execution of plugins is still the same\n  for vanilla Kong installations, we had to update the `PRIORITY` field of some\n  of our bundled plugins. If your custom plugin must run after or before a\n  specific bundled plugin, you might have to update your plugin's `PRIORITY`\n  field as well. The complete list of plugins and their priorities is available\n  on the [Plugins Development\n  Guide](https://getkong.org/docs/0.11.x/plugin-development/custom-logic/).\n  [#2489](https://github.com/Kong/kong/pull/2489)\n  [#2813](https://github.com/Kong/kong/pull/2813)\n\n### Deprecated\n\n##### CLI\n\n- The `kong compile` command has been deprecated. Instead, prefer using\n  the new `kong prepare` command.\n  [#2706](https://github.com/Kong/kong/pull/2706)\n\n### Changed\n\n##### Core\n\n- Performance around DNS resolution has been greatly improved in some\n  cases.\n  [#2625](https://github.com/Kong/kong/pull/2425)\n- Secret values are now generated with a kernel-level, Cryptographically\n  Secure PRNG.\n  [#2536](https://github.com/Kong/kong/pull/2536)\n- The `.kong_env` file created by Kong in its running prefix is now written\n  without world-read permissions.\n  [#2611](https://github.com/Kong/kong/pull/2611)\n\n##### Plugin development\n\n- The `marshall_event` function on schemas is now ignored by Kong, and can be\n  safely removed as the new cache invalidation mechanism natively handles\n  safer events broadcasting.\n  [#2561](https://github.com/Kong/kong/pull/2561)\n\n### Added\n\n##### Core\n\n- :fireworks: Support for regex URIs! You can now define regexes in your\n  APIs `uris` property. Those regexes can have capturing groups which can\n  be extracted by Kong during a request, and accessed later in the plugins\n  (useful for URI rewriting). See the [Proxy\n  Guide](https://getkong.org/docs/0.11.x/proxy/#using-regexes-in-uris) for\n  documentation on how to use regex URIs.\n  [#2681](https://github.com/Kong/kong/pull/2681)\n- :fireworks: Support for HTTP/2. A new `http2` directive now enables\n  HTTP/2 traffic on the `proxy_listen_ssl` address.\n  [#2541](https://github.com/Kong/kong/pull/2541)\n- :fireworks: Support for the `search` and `ndots` configuration options of\n  your `resolv.conf` file.\n  [#2425](https://github.com/Kong/kong/pull/2425)\n- Kong now forwards new headers to your upstream services:\n  `X-Forwarded-Host`, `X-Forwarded-Port`, and `X-Forwarded-Proto`.\n  [#2236](https://github.com/Kong/kong/pull/2236)\n- Support for the PROXY protocol. If the new `real_ip_header` configuration\n  property is set to `real_ip_header = proxy_protocol`, then Kong will\n  append the `proxy_protocol` parameter to the Nginx `listen` directive of\n  the Kong proxy port.\n  [#2236](https://github.com/Kong/kong/pull/2236)\n- Support for BDR compatibility in the PostgreSQL migrations.\n  Thanks [@AlexBloor](https://github.com/AlexBloor) for the patch!\n  [#2672](https://github.com/Kong/kong/pull/2672)\n\n##### Configuration\n\n- Support for DNS nameservers specified in IPv6 format.\n  [#2634](https://github.com/Kong/kong/pull/2634)\n- A few new DNS configuration properties allow you to tweak the Kong DNS\n  resolver, and in particular, how it handles the resolution of different\n  record types or the eviction of stale records.\n  [#2625](https://github.com/Kong/kong/pull/2625)\n- A new `trusted_ips` configuration property allows you to define a list of\n  trusted IP address blocks that are known to send trusted `X-Forwarded-*`\n  headers. Requests from trusted IPs will make Kong forward those headers\n  upstream. Requests from non-trusted IP addresses will make Kong override\n  the `X-Forwarded-*` headers with its own values. In addition, this\n  property also sets the ngx_http_realip_module `set_real_ip_from`\n  directive(s), which makes Kong trust the incoming `X-Real-IP` header as\n  well, which is used for operations such as rate-limiting by IP address,\n  and that Kong forwards upstream as well.\n  [#2236](https://github.com/Kong/kong/pull/2236)\n- You can now configure the ngx_http_realip_module from the Kong\n  configuration.  In addition to `trusted_ips` which sets the\n  `set_real_ip_from` directives(s), two new properties, `real_ip_header`\n  and `real_ip_recursive` allow you to configure the ngx_http_realip_module\n  directives bearing the same name.\n  [#2236](https://github.com/Kong/kong/pull/2236)\n- Ability to hide Kong-specific response headers. Two new configuration\n  fields: `server_tokens` and `latency_tokens` will respectively toggle\n  whether the `Server` and `X-Kong-*-Latency` headers should be sent to\n  downstream clients.\n  [#2259](https://github.com/Kong/kong/pull/2259)\n- New configuration property to tune handling request body data via the\n  `client_max_body_size` and `client_body_buffer_size` directives\n  (mirroring their Nginx counterparts). Note these settings are only\n  defined for proxy requests; request body handling in the Admin API\n  remains unchanged.\n  [#2602](https://github.com/Kong/kong/pull/2602)\n- New `error_default_type` configuration property. This setting is to\n  specify a MIME type that will be used as the error response body format\n  when Nginx encounters an error, but no `Accept` header was present in the\n  request. The default value is `text/plain` for backwards compatibility.\n  Thanks [@therealgambo](https://github.com/therealgambo) for the\n  contribution!\n  [#2500](https://github.com/Kong/kong/pull/2500)\n- New `nginx_user` configuration property, which interfaces with the Nginx\n  `user` directive.\n  Thanks [@depay](https://github.com/depay) for the contribution!\n  [#2180](https://github.com/Kong/kong/pull/2180)\n\n##### CLI\n\n- New `kong prepare` command to prepare the Kong running prefix (creating\n  log files, SSL certificates, etc...) and allow for Kong to be started via\n  the `nginx` binary. This is useful for environments like containers,\n  where the foreground process should be the Nginx master process. The\n  `kong compile` command has been deprecated as a result of this addition.\n  [#2706](https://github.com/Kong/kong/pull/2706)\n\n##### Admin API\n\n- Ability to retrieve plugins added to a Consumer via two new endpoints:\n  `/consumers/:username_or_id/plugins/` and\n  `/consumers/:username_or_id/plugins/:plugin_id`.\n  [#2714](https://github.com/Kong/kong/pull/2714)\n- Support for JSON `null` in `PATCH` requests to unset a value on any\n  entity.\n  [#2700](https://github.com/Kong/kong/pull/2700)\n\n##### Plugins\n\n- jwt: Support for RS512 signed tokens.\n  Thanks [@sarraz1](https://github.com/sarraz1) for the patch!\n  [#2666](https://github.com/Kong/kong/pull/2666)\n- rate-limiting/response-ratelimiting: Optionally hide informative response\n  headers.\n  [#2087](https://github.com/Kong/kong/pull/2087)\n- aws-lambda: Define a custom response status when the upstream\n  `X-Amz-Function-Error` header is \"Unhandled\".\n  Thanks [@erran](https://github.com/erran) for the contribution!\n  [#2587](https://github.com/Kong/kong/pull/2587)\n- aws-lambda: Add new AWS regions that were previously unsupported.\n  [#2769](https://github.com/Kong/kong/pull/2769)\n- hmac: New option to validate the client-provided SHA-256 of the request\n  body.\n  Thanks [@vaibhavatul47](https://github.com/vaibhavatul47) for the\n  contribution!\n  [#2419](https://github.com/Kong/kong/pull/2419)\n- hmac: Added support for `enforce_headers` option and added HMAC-SHA256,\n  HMAC-SHA384, and HMAC-SHA512 support.\n  [#2644](https://github.com/Kong/kong/pull/2644)\n- statsd: New metrics and more flexible configuration. Support for\n  prefixes, configurable stat type, and added metrics.\n  [#2400](https://github.com/Kong/kong/pull/2400)\n- datadog: New metrics and more flexible configuration. Support for\n  prefixes, configurable stat type, and added metrics.\n  [#2394](https://github.com/Kong/kong/pull/2394)\n\n### Fixed\n\n##### Core\n\n- Kong now ensures that your clients URIs are transparently proxied\n  upstream.  No percent-encoding/decoding or querystring stripping will\n  occur anymore.\n  [#2519](https://github.com/Kong/kong/pull/2519)\n- Fix an issue where Kong would match an API with a shorter URI (from its\n  `uris` value) as a prefix instead of a longer, matching prefix from\n  another API.\n  [#2662](https://github.com/Kong/kong/issues/2662)\n- Fix an edge-case where an API with multiple `uris` and `strip_uri = true`\n  would not always strip the client URI.\n  [#2562](https://github.com/Kong/kong/issues/2562)\n- HTTP `400` errors thrown by Nginx are now correctly caught by Kong and return\n  a native, Kong-friendly response.\n  [#2476](https://github.com/Kong/kong/pull/2476)\n\n##### Configuration\n\n- Octothorpes (`#`) can now be escaped (`\\#`) and included in the Kong\n  configuration values such as your datastore passwords or usernames.\n  [#2411](https://github.com/Kong/kong/pull/2411)\n\n##### Admin API\n\n- The `data` response field of the `/upstreams/{upstream}/targets/active`\n  Admin API endpoint now returns a list (`[]`) instead of an object (`{}`)\n  when no active targets are present.\n  [#2619](https://github.com/Kong/kong/pull/2619)\n\n##### Plugins\n\n- The `unique` constraint on OAuth2 `client_secrets` has been removed.\n  [#2447](https://github.com/Kong/kong/pull/2447)\n- The `unique` constraint on JWT Credentials `secrets` has been removed.\n  [#2548](https://github.com/Kong/kong/pull/2548)\n- oauth2: When requesting a token from `/oauth2/token`, one can now pass the\n  `client_id` as a request body parameter, while `client_id:client_secret` is\n  passed via the Authorization header. This allows for better integration\n  with some OAuth2 flows proposed out there, such as from Cloudflare Apps.\n  Thanks [@cedum](https://github.com/cedum) for the patch!\n  [#2577](https://github.com/Kong/kong/pull/2577)\n- datadog: Avoid a runtime error if the plugin is configured as a global plugin\n  but the downstream request did not match any configured API.\n  Thanks [@kjsteuer](https://github.com/kjsteuer) for the fix!\n  [#2702](https://github.com/Kong/kong/pull/2702)\n- Logging plugins: the produced logs `latencies.kong` field used to omit the\n  time Kong spent in its Load Balancing logic, which includes DNS resolution\n  time. This latency is now included in `latencies.kong`.\n  [#2494](https://github.com/Kong/kong/pull/2494)\n\n[Back to TOC](#table-of-contents)\n\n## [0.10.3] - 2017/05/24\n\n### Changed\n\n- We noticed that some distribution packages were not\n  building OpenResty against a JITable PCRE library. This\n  happened on Ubuntu and RHEL environments where OpenResty was\n  built against the system's PCRE installation.\n  We now compile OpenResty against a JITable PCRE source for\n  those platforms, which should result in significant performance\n  improvements in regex matching.\n  [Mashape/kong-distributions #9](https://github.com/Kong/kong-distributions/pull/9)\n- TLS connections are now handled with a modern list of\n  accepted ciphers, as per the Mozilla recommended TLS\n  ciphers list.\n  See https://wiki.mozilla.org/Security/Server_Side_TLS.\n  This behavior is configurable via the newly\n  introduced configuration properties described in the\n  below \"Added\" section.\n- Plugins:\n  - rate-limiting: Performance improvements when using the\n    `cluster` policy. The number of round trips to the\n    database has been limited to the number of configured\n    limits.\n    [#2488](https://github.com/Kong/kong/pull/2488)\n\n### Added\n\n- New `ssl_cipher_suite` and `ssl_ciphers` configuration\n  properties to configure the desired set of accepted ciphers,\n  based on the Mozilla recommended TLS ciphers list.\n  [#2555](https://github.com/Kong/kong/pull/2555)\n- New `proxy_ssl_certificate` and `proxy_ssl_certificate_key`\n  configuration properties. These properties configure the\n  Nginx directives bearing the same name, to set client\n  certificates to Kong when connecting to your upstream services.\n  [#2556](https://github.com/Kong/kong/pull/2556)\n- Proxy and Admin API access and error log paths are now\n  configurable. Access logs can be entirely disabled if\n  desired.\n  [#2552](https://github.com/Kong/kong/pull/2552)\n- Plugins:\n  - Logging plugins: The produced logs include a new `tries`\n    field which contains, which includes the upstream\n    connection successes and failures of the load-balancer.\n    [#2429](https://github.com/Kong/kong/pull/2429)\n  - key-auth: Credentials can now be sent in the request body.\n    [#2493](https://github.com/Kong/kong/pull/2493)\n  - cors: Origins can now be defined as regular expressions.\n    [#2482](https://github.com/Kong/kong/pull/2482)\n\n### Fixed\n\n- APIs matching: prioritize APIs with longer `uris` when said\n  APIs also define `hosts` and/or `methods` as well. Thanks\n  [@leonzz](https://github.com/leonzz) for the patch.\n  [#2523](https://github.com/Kong/kong/pull/2523)\n- SSL connections to Cassandra can now properly verify the\n  certificate in use (when `cassandra_ssl_verify` is enabled).\n  [#2531](https://github.com/Kong/kong/pull/2531)\n- The DNS resolver no longer sends a A or AAAA DNS queries for SRV\n  records. This should improve performance by avoiding unnecessary\n  lookups.\n  [#2563](https://github.com/Kong/kong/pull/2563) &\n  [Mashape/lua-resty-dns-client #12](https://github.com/Kong/lua-resty-dns-client/pull/12)\n- Plugins\n  - All authentication plugins don't throw an error anymore when\n    invalid credentials are given and the `anonymous` user isn't\n    configured.\n    [#2508](https://github.com/Kong/kong/pull/2508)\n  - rate-limiting: Effectively use the desired Redis database when\n    the `redis` policy is in use and the `config.redis_database`\n    property is set.\n    [#2481](https://github.com/Kong/kong/pull/2481)\n  - cors: The regression introduced in 0.10.1 regarding not\n    sending the `*` wildcard when `conf.origin` was not specified\n    has been fixed.\n    [#2518](https://github.com/Kong/kong/pull/2518)\n  - oauth2: properly check the client application ownership of a\n    token before refreshing it.\n    [#2461](https://github.com/Kong/kong/pull/2461)\n\n[Back to TOC](#table-of-contents)\n\n## [0.10.2] - 2017/05/01\n\n### Changed\n\n- The Kong DNS resolver now honors the `MAXNS` setting (3) when parsing the\n  nameservers specified in `resolv.conf`.\n  [#2290](https://github.com/Kong/kong/issues/2290)\n- Kong now matches incoming requests via the `$request_uri` property, instead\n  of `$uri`, in order to better handle percent-encoded URIS. A more detailed\n  explanation will be included in the below \"Fixed\" section.\n  [#2377](https://github.com/Kong/kong/pull/2377)\n- Upstream calls do not unconditionally include a trailing `/` anymore. See the\n  below \"Added\" section for more details.\n  [#2315](https://github.com/Kong/kong/pull/2315)\n- Admin API:\n  - The \"active targets\" endpoint now only return the most recent nonzero\n    weight Targets, instead of all nonzero weight targets. This is to provide\n    a better picture of the Targets currently in use by the Kong load balancer.\n    [#2310](https://github.com/Kong/kong/pull/2310)\n\n### Added\n\n- :fireworks: Plugins can implement a new `rewrite` handler to execute code in\n  the Nginx rewrite phase. This phase is executed prior to matching a\n  registered Kong API, and prior to any authentication plugin. As such, only\n  global plugins (neither tied to an API or Consumer) will execute this phase.\n  [#2354](https://github.com/Kong/kong/pull/2354)\n- Ability for the client to chose whether the upstream request (Kong <->\n  upstream) should contain a trailing slash in its URI. Prior to this change,\n  Kong 0.10 would unconditionally append a trailing slash to all upstream\n  requests. The added functionality is described in\n  [#2211](https://github.com/Kong/kong/issues/2211), and was implemented in\n  [#2315](https://github.com/Kong/kong/pull/2315).\n- Ability to hide Kong-specific response headers. Two new configuration fields:\n  `server_tokens` and `latency_tokens` will respectively toggle whether the\n  `Server` and `X-Kong-*-Latency` headers should be sent to downstream clients.\n  [#2259](https://github.com/Kong/kong/pull/2259)\n- New `cassandra_schema_consensus_timeout` configuration property, to allow for\n  Kong to wait for the schema consensus of your Cassandra cluster during\n  migrations.\n  [#2326](https://github.com/Kong/kong/pull/2326)\n- Serf commands executed by a running Kong node are now logged in the Nginx\n  error logs with a `DEBUG` level.\n  [#2410](https://github.com/Kong/kong/pull/2410)\n- Ensure the required shared dictionaries are defined in the Nginx\n  configuration. This will prevent custom Nginx templates from potentially\n  resulting in a breaking upgrade for users.\n  [#2466](https://github.com/Kong/kong/pull/2466)\n- Admin API:\n  - Target Objects can now be deleted with their ID as well as their name. The\n    endpoint becomes: `/upstreams/:name_or_id/targets/:target_or_id`.\n    [#2304](https://github.com/Kong/kong/pull/2304)\n- Plugins:\n  - :fireworks: **New Request termination plugin**. This plugin allows to\n    temporarily disable an API and return a pre-configured response status and\n    body to your client. Useful for use-cases such as maintenance mode for your\n    upstream services. Thanks to [@pauldaustin](https://github.com/pauldaustin)\n    for the contribution.\n    [#2051](https://github.com/Kong/kong/pull/2051)\n  - Logging plugins: The produced logs include two new fields: a `consumer`\n    field, which contains the properties of the authenticated Consumer\n    (`id`, `custom_id`, and `username`), if any, and a `tries` field, which\n    includes the upstream connection successes and failures of the load-\n    balancer.\n    [#2367](https://github.com/Kong/kong/pull/2367)\n    [#2429](https://github.com/Kong/kong/pull/2429)\n  - http-log: Now set an upstream HTTP basic access authentication header if\n    the configured `conf.http_endpoint` parameter includes an authentication\n    section. Thanks [@amir](https://github.com/amir) for the contribution.\n    [#2432](https://github.com/Kong/kong/pull/2432)\n  - file-log: New `config.reopen` property to close and reopen the log file on\n    every request, in order to effectively rotate the logs.\n    [#2348](https://github.com/Kong/kong/pull/2348)\n  - jwt: Returns `401 Unauthorized` on invalid claims instead of the previous\n    `403 Forbidden` status.\n    [#2433](https://github.com/Kong/kong/pull/2433)\n  - key-auth: Allow setting API key header names with an underscore.\n    [#2370](https://github.com/Kong/kong/pull/2370)\n  - cors: When `config.credentials = true`, we do not send an ACAO header with\n    value `*`. The ACAO header value will be that of the request's `Origin: `\n    header.\n    [#2451](https://github.com/Kong/kong/pull/2451)\n\n### Fixed\n\n- Upstream connections over TLS now set their Client Hello SNI field. The SNI\n  value is taken from the upstream `Host` header value, and thus also depends\n  on the `preserve_host` setting of your API. Thanks\n  [@konrade](https://github.com/konrade) for the original patch.\n  [#2225](https://github.com/Kong/kong/pull/2225)\n- Correctly match APIs with percent-encoded URIs in their `uris` property.\n  Generally, this change also avoids normalizing (and thus, potentially\n  altering) the request URI when trying to match an API's `uris` value. Instead\n  of relying on the Nginx `$uri` variable, we now use `$request_uri`.\n  [#2377](https://github.com/Kong/kong/pull/2377)\n- Handle a routing edge-case under some conditions with the `uris` matching\n  rule of APIs that would falsely lead Kong into believing no API was matched\n  for what would actually be a valid request.\n  [#2343](https://github.com/Kong/kong/pull/2343)\n- If no API was configured with a `hosts` matching rule, then the\n  `preserve_host` flag would never be honored.\n  [#2344](https://github.com/Kong/kong/pull/2344)\n- The `X-Forwarded-For` header sent to your upstream services by Kong is not\n  set from the Nginx `$proxy_add_x_forwarded_for` variable anymore. Instead,\n  Kong uses the `$realip_remote_addr` variable to append the real IP address\n  of a client, instead of `$remote_addr`, which can come from a previous proxy\n  hop.\n  [#2236](https://github.com/Kong/kong/pull/2236)\n- CNAME records are now properly being cached by the DNS resolver. This results\n  in a performance improvement over previous 0.10 versions.\n  [#2303](https://github.com/Kong/kong/pull/2303)\n- When using Cassandra, some migrations would not be performed on the same\n  coordinator as the one originally chosen. The same migrations would also\n  require a response from other replicas in a cluster, but were not waiting\n  for a schema consensus beforehand, causing indeterministic failures in the\n  migrations, especially if the cluster's inter-nodes communication is slow.\n  [#2326](https://github.com/Kong/kong/pull/2326)\n- The `cassandra_timeout` configuration property is now correctly taken into\n  consideration by Kong.\n  [#2326](https://github.com/Kong/kong/pull/2326)\n- Correctly trigger plugins configured on the anonymous Consumer for anonymous\n  requests (from auth plugins with the new `config.anonymous` parameter).\n  [#2424](https://github.com/Kong/kong/pull/2424)\n- When multiple auth plugins were configured with the recent `config.anonymous`\n  parameter for \"OR\" authentication, such plugins would override each other's\n  results and response headers, causing false negatives.\n  [#2222](https://github.com/Kong/kong/pull/2222)\n- Ensure the `cassandra_contact_points` property does not contain any port\n  information. Those should be specified in `cassandra_port`. Thanks\n  [@Vermeille](https://github.com/Vermeille) for the contribution.\n  [#2263](https://github.com/Kong/kong/pull/2263)\n- Prevent an upstream or legitimate internal error in the load balancing code\n  from throwing a Lua-land error as well.\n  [#2327](https://github.com/Kong/kong/pull/2327)\n- Allow backwards compatibility with custom Nginx configurations that still\n  define the `resolver ${{DNS_RESOLVER}}` directive. Vales from the Kong\n  `dns_resolver` property will be flattened to a string and appended to the\n  directive.\n  [#2386](https://github.com/Kong/kong/pull/2386)\n- Plugins:\n  - hmac: Better handling of invalid base64-encoded signatures. Previously Kong\n    would return an HTTP 500 error. We now properly return HTTP 403 Forbidden.\n    [#2283](https://github.com/Kong/kong/pull/2283)\n- Admin API:\n  - Detect conflicts between SNI Objects in the `/snis` and `/certificates`\n    endpoint.\n    [#2285](https://github.com/Kong/kong/pull/2285)\n  - The `/certificates` route used to not return the `total` and `data` JSON\n    fields. We now send those fields back instead of a root list of certificate\n    objects.\n    [#2463](https://github.com/Kong/kong/pull/2463)\n  - Endpoints with path parameters like `/xxx_or_id` will now also yield the\n    proper result if the `xxx` field is formatted as a UUID. Most notably, this\n    fixes a problem for Consumers whose `username` is a UUID, that could not be\n    found when requesting `/consumers/{username_as_uuid}`.\n    [#2420](https://github.com/Kong/kong/pull/2420)\n  - The \"active targets\" endpoint does not require a trailing slash anymore.\n    [#2307](https://github.com/Kong/kong/pull/2307)\n  - Upstream Objects can now be deleted properly when using Cassandra.\n    [#2404](https://github.com/Kong/kong/pull/2404)\n\n[Back to TOC](#table-of-contents)\n\n## [0.10.1] - 2017/03/27\n\n### Changed\n\n- :warning: Serf has been downgraded to version 0.7 in our distributions,\n  although versions up to 0.8.1 are still supported. This fixes a problem when\n  automatically detecting the first non-loopback private IP address, which was\n  defaulted to `127.0.0.1` in Kong 0.10.0. Greater versions of Serf can still\n  be used, but the IP address needs to be manually specified in the\n  `cluster_advertise` configuration property.\n- :warning: The [CORS Plugin](https://getkong.org/plugins/cors/) parameter\n  `config.origin` is now `config.origins`.\n  [#2203](https://github.com/Kong/kong/pull/2203)\n\n   :red_circle: **Post-release note (as of 2017/05/12)**: A faulty behavior\n   has been observed with this change. Previously, the plugin would send the\n   `*` wildcard when `config.origin` was not specified. With this change, the\n   plugin **does not** send the `*` wildcard by default anymore. You will need\n   to specify it manually when configuring the plugin, with `config.origins=*`.\n   This behavior is to be fixed in a future release.\n\n   :white_check_mark: **Update (2017/05/24)**: A fix to this regression has been\n   released as part of 0.10.3. See the section of the Changelog related to this\n   release for more details.\n- Admin API:\n  - Disable support for TLS/1.0.\n    [#2212](https://github.com/Kong/kong/pull/2212)\n\n### Added\n\n- Admin API:\n  - Active targets can be pulled with `GET /upstreams/{name}/targets/active`.\n    [#2230](https://github.com/Kong/kong/pull/2230)\n  - Provide a convenience endpoint to disable targets at:\n    `DELETE /upstreams/{name}/targets/{target}`.\n    Under the hood, this creates a new target with `weight = 0` (the\n    correct way of disabling targets, which used to cause confusion).\n    [#2256](https://github.com/Kong/kong/pull/2256)\n- Plugins:\n  - cors: Support for configuring multiple Origin domains.\n    [#2203](https://github.com/Kong/kong/pull/2203)\n\n### Fixed\n\n- Use an LRU cache for Lua-land entities caching to avoid exhausting the Lua\n  VM memory in long-running instances.\n  [#2246](https://github.com/Kong/kong/pull/2246)\n- Avoid potential deadlocks upon callback errors in the caching module for\n  database entities.\n  [#2197](https://github.com/Kong/kong/pull/2197)\n- Relax multipart MIME type parsing. A space is allowed in between values\n  of the Content-Type header.\n  [#2215](https://github.com/Kong/kong/pull/2215)\n- Admin API:\n  - Better handling of non-supported HTTP methods on endpoints of the Admin\n    API. In some cases this used to throw an internal error. Calling any\n    endpoint with a non-supported HTTP method now always returns `405 Method\n    Not Allowed` as expected.\n    [#2213](https://github.com/Kong/kong/pull/2213)\n- CLI:\n  - Better error handling when missing Serf executable.\n    [#2218](https://github.com/Kong/kong/pull/2218)\n  - Fix a bug in the `kong migrations` command that would prevent it to run\n    correctly.\n    [#2238](https://github.com/Kong/kong/pull/2238)\n  - Trim list values specified in the configuration file.\n    [#2206](https://github.com/Kong/kong/pull/2206)\n  - Align the default configuration file's values to the actual, hard-coded\n    default values to avoid confusion.\n    [#2254](https://github.com/Kong/kong/issues/2254)\n- Plugins:\n  - hmac: Generate an HMAC secret value if none is provided.\n    [#2158](https://github.com/Kong/kong/pull/2158)\n  - oauth2: Don't try to remove credential values from request bodies if the\n    MIME type is multipart, since such attempts would result in an error.\n    [#2176](https://github.com/Kong/kong/pull/2176)\n  - ldap: This plugin should not be applied to a single Consumer, however, this\n    was not properly enforced. It is now impossible to apply this plugin to a\n    single Consumer (as per all authentication plugin).\n    [#2237](https://github.com/Kong/kong/pull/2237)\n  - aws-lambda: Support for `us-west-2` region in schema.\n    [#2257](https://github.com/Kong/kong/pull/2257)\n\n[Back to TOC](#table-of-contents)\n\n## [0.10.0] - 2017/03/07\n\nKong 0.10 is one of most significant releases to this day. It ships with\nexciting new features that have been heavily requested for the last few months,\nsuch as load balancing, Cassandra 3.0 compatibility, Websockets support,\ninternal DNS resolution (A and SRV records without Dnsmasq), and more flexible\nmatching capabilities for APIs routing.\n\nOn top of those new features, this release received a particular attention to\nperformance, and brings many improvements and refactors that should make it\nperform significantly better than any previous version.\n\n### Changed\n\n- :warning: API Objects (as configured via the Admin API) do **not** support\n  the `request_host` and `request_uri` fields anymore. The 0.10 migrations\n  should upgrade your current API Objects, but make sure to read the new [0.10\n  Proxy Guide](https://getkong.org/docs/0.10.x/proxy) to learn the new routing\n  capabilities of Kong. On the good side, this means that Kong can now route\n  incoming requests according to a combination of Host headers, URIs, and HTTP\n  methods.\n- :warning: Final slashes in `upstream_url` are no longer allowed.\n  [#2115](https://github.com/Kong/kong/pull/2115)\n- :warning: The SSL plugin has been removed and dynamic SSL capabilities have\n  been added to Kong core, and are configurable via new properties on the API\n  entity. See the related PR for a detailed explanation of this change.\n  [#1970](https://github.com/Kong/kong/pull/1970)\n- :warning: Drop the Dnsmasq dependency. We now internally resolve both A and\n  SRV DNS records.\n  [#1587](https://github.com/Kong/kong/pull/1587)\n- :warning: Dropping support for insecure `TLS/1.0` and defaulting `Upgrade`\n  responses to `TLS/1.2`.\n  [#2119](https://github.com/Kong/kong/pull/2119)\n- Bump the compatible OpenResty version to `1.11.2.1` and `1.11.2.2`. Support\n  for OpenResty `1.11.2.2` requires the `--without-luajit-lua52` compilation\n  flag.\n- Separate Admin API and Proxy error logs. Admin API logs are now written to\n  `logs/admin_access.log`.\n  [#1782](https://github.com/Kong/kong/pull/1782)\n- Auto-generates stronger SHA-256 with RSA encryption SSL certificates.\n  [#2117](https://github.com/Kong/kong/pull/2117)\n\n### Added\n\n- :fireworks: Support for Cassandra 3.x.\n  [#1709](https://github.com/Kong/kong/pull/1709)\n- :fireworks: SRV records resolution.\n  [#1587](https://github.com/Kong/kong/pull/1587)\n- :fireworks: Load balancing. When an A or SRV record resolves to multiple\n  entries, Kong now rotates those upstream targets with a Round-Robin\n  algorithm. This is a first step towards implementing more load balancing\n  algorithms.\n  Another way to specify multiple upstream targets is to use the newly\n  introduced `/upstreams` and `/targets` entities of the Admin API.\n  [#1587](https://github.com/Kong/kong/pull/1587)\n  [#1735](https://github.com/Kong/kong/pull/1735)\n- :fireworks: Multiple hosts and paths per API. Kong can now route incoming\n  requests to your services based on a combination of Host headers, URIs and\n  HTTP methods. See the related PR for a detailed explanation of the new\n  properties and capabilities of the new router.\n  [#1970](https://github.com/Kong/kong/pull/1970)\n- :fireworks: Maintain upstream connection pools which should greatly improve\n  performance, especially for HTTPS upstream connections.  We now use HTTP/1.1\n  for upstream connections as well as an nginx `upstream` block with a\n  configurable`keepalive` directive, thanks to the new `nginx_keepalive`\n  configuration property.\n  [#1587](https://github.com/Kong/kong/pull/1587)\n  [#1827](https://github.com/Kong/kong/pull/1827)\n- :fireworks: Websockets support. Kong can now upgrade client connections to\n  use the `ws` protocol when `Upgrade: websocket` is present.\n  [#1827](https://github.com/Kong/kong/pull/1827)\n- Use an in-memory caching strategy for database entities in order to reduce\n  CPU load during requests proxying.\n  [#1688](https://github.com/Kong/kong/pull/1688)\n- Provide negative-caching for missed database entities. This should improve\n  performance in some cases.\n  [#1914](https://github.com/Kong/kong/pull/1914)\n- Support for serving the Admin API over SSL. This introduces new properties in\n  the configuration file: `admin_listen_ssl`, `admin_ssl`, `admin_ssl_cert` and\n  `admin_ssl_cert_key`.\n  [#1706](https://github.com/Kong/kong/pull/1706)\n- Support for upstream connection timeouts. APIs now have 3 new fields:\n  `upstream_connect_timeout`, `upstream_send_timeout`, `upstream_read_timeout`\n  to specify, in milliseconds, a timeout value for requests between Kong and\n  your APIs.\n  [#2036](https://github.com/Kong/kong/pull/2036)\n- Support for clustering key rotation in the underlying Serf process:\n  - new `cluster_keyring_file` property in the configuration file.\n  - new `kong cluster keys ..` CLI commands that expose the underlying\n    `serf keys ..` commands.\n  [#2069](https://github.com/Kong/kong/pull/2069)\n- Support for `lua_socket_pool_size` property in configuration file.\n  [#2109](https://github.com/Kong/kong/pull/2109)\n- Plugins:\n  - :fireworks: **New AWS Lambda plugin**. Thanks Tim Erickson for his\n    collaboration on this new addition.\n    [#1777](https://github.com/Kong/kong/pull/1777)\n    [#1190](https://github.com/Kong/kong/pull/1190)\n  - Anonymous authentication for auth plugins. When such plugins receive the\n    `config.anonymous=<consumer_id>` property, even non-authenticated requests\n    will be proxied by Kong, with the traditional Consumer headers set to the\n    designated anonymous consumer, but also with a `X-Anonymous-Consumer`\n    header. Multiple auth plugins will work in a logical `OR` fashion.\n    [#1666](https://github.com/Kong/kong/pull/1666) and\n    [#2035](https://github.com/Kong/kong/pull/2035)\n  - request-transformer: Ability to change the HTTP method of the upstream\n    request. [#1635](https://github.com/Kong/kong/pull/1635)\n  - jwt: Support for ES256 signatures.\n    [#1920](https://github.com/Kong/kong/pull/1920)\n  - rate-limiting: Ability to select the Redis database to use via the new\n    `config.redis_database` plugin property.\n    [#1941](https://github.com/Kong/kong/pull/1941)\n\n### Fixed\n\n- Looking for Serf in known installation paths.\n  [#1997](https://github.com/Kong/kong/pull/1997)\n- Including port in upstream `Host` header.\n  [#2045](https://github.com/Kong/kong/pull/2045)\n- Clarify the purpose of the `cluster_listen_rpc` property in\n  the configuration file. Thanks Jeremy Monin for the patch.\n  [#1860](https://github.com/Kong/kong/pull/1860)\n- Admin API:\n  - Properly Return JSON responses (instead of HTML) on HTTP 409 Conflict\n    when adding Plugins.\n    [#2014](https://github.com/Kong/kong/issues/2014)\n- CLI:\n  - Avoid double-prefixing migration error messages with the database name\n    (PostgreSQL/Cassandra).\n- Plugins:\n  - Fix fault tolerance logic and error reporting in rate-limiting plugins.\n  - CORS: Properly return `Access-Control-Allow-Credentials: false` if\n    `Access-Control-Allow-Origin: *`.\n    [#2104](https://github.com/Kong/kong/pull/2104)\n  - key-auth: enforce `key_names` to be proper header names according to Nginx.\n    [#2142](https://github.com/Kong/kong/pull/2142)\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.9] - 2017/02/02\n\n### Fixed\n\n- Correctly put Cassandra sockets into the Nginx connection pool for later\n  reuse. This greatly improves the performance for rate-limiting and\n  response-ratelimiting plugins.\n  [f8f5306](https://github.com/Kong/kong/commit/f8f53061207de625a29bbe5d80f1807da468a1bc)\n- Correct length of a year in seconds for rate-limiting and\n  response-ratelimiting plugins. A year was wrongly assumed to only be 360\n  days long.\n  [e4fdb2a](https://github.com/Kong/kong/commit/e4fdb2a3af4a5f2bf298c7b6488d88e67288c98b)\n- Prevent misinterpretation of the `%` character in proxied URLs encoding.\n  Thanks Thomas Jouannic for the patch.\n  [#1998](https://github.com/Kong/kong/pull/1998)\n  [#2040](https://github.com/Kong/kong/pull/2040)\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.8] - 2017/01/19\n\n### Fixed\n\n- Properly set the admin IP in the Serf script.\n\n### Changed\n\n- Provide negative-caching for missed database entities. This should improve\n  performance in some cases.\n  [#1914](https://github.com/Kong/kong/pull/1914)\n\n### Fixed\n\n- Plugins:\n  - Fix fault tolerance logic and error reporting in rate-limiting plugins.\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.7] - 2016/12/21\n\n### Fixed\n\n- Fixed a performance issue in Cassandra by removing an old workaround that was\n  forcing Cassandra to use LuaSocket instead of cosockets.\n  [#1916](https://github.com/Kong/kong/pull/1916)\n- Fixed an issue that was causing a recursive attempt to stop Kong's services\n  when an error was occurring.\n  [#1877](https://github.com/Kong/kong/pull/1877)\n- Custom plugins are now properly loaded again.\n  [#1910](https://github.com/Kong/kong/pull/1910)\n- Plugins:\n  - Galileo: properly encode empty arrays.\n    [#1909](https://github.com/Kong/kong/pull/1909)\n  - OAuth 2: implements a missing Postgres migration for `redirect_uri` in\n    every OAuth 2 credential. [#1911](https://github.com/Kong/kong/pull/1911)\n  - OAuth 2: safely parse the request body even when no data has been sent.\n    [#1915](https://github.com/Kong/kong/pull/1915)\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.6] - 2016/11/29\n\n### Fixed\n\n- Resolve support for PostgreSQL SSL connections.\n  [#1720](https://github.com/Kong/kong/issues/1720)\n- Ensure `kong start` honors the `--conf` flag is a config file already exists\n  at one of the default locations (`/etc/kong.conf`, `/etc/kong/kong.conf`).\n  [#1681](https://github.com/Kong/kong/pull/1681)\n- Obfuscate sensitive properties from the `/` Admin API route which returns\n  the current node's configuration.\n  [#1650](https://github.com/Kong/kong/pull/1650)\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.5] - 2016/11/07\n\n### Changed\n\n- Dropping support for OpenResty 1.9.15.1 in favor of 1.11.2.1\n  [#1797](https://github.com/Kong/kong/pull/1797)\n\n### Fixed\n\n- Fixed an error (introduced in 0.9.4) in the auto-clustering event\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.4] - 2016/11/02\n\n### Fixed\n\n- Fixed the random string generator that was causing some problems, especially\n  in Serf for clustering. [#1754](https://github.com/Kong/kong/pull/1754)\n- Seed random number generator in CLI.\n  [#1641](https://github.com/Kong/kong/pull/1641)\n- Reducing log noise in the Admin API.\n  [#1781](https://github.com/Kong/kong/pull/1781)\n- Fixed the reports lock implementation that was generating a periodic error\n  message. [#1783](https://github.com/Kong/kong/pull/1783)\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.3] - 2016/10/07\n\n### Added\n\n- Added support for Serf 0.8. [#1693](https://github.com/Kong/kong/pull/1693)\n\n### Fixed\n\n- Properly invalidate global plugins.\n  [#1723](https://github.com/Kong/kong/pull/1723)\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.2] - 2016/09/20\n\n### Fixed\n\n- Correctly report migrations errors. This was caused by an error being thrown\n  from the error handler, and superseding the actual error. [#1605]\n  (https://github.com/Kong/kong/pull/1605)\n- Prevent Kong from silently failing to start. This would be caused by an\n  erroneous error handler. [28f5d10]\n  (https://github.com/Kong/kong/commit/28f5d10)\n- Only report a random number generator seeding error when it is not already\n  seeded. [#1613](https://github.com/Kong/kong/pull/1613)\n- Reduce intra-cluster noise by not propagating keepalive requests events.\n  [#1660](https://github.com/Kong/kong/pull/1660)\n- Admin API:\n  - Obfuscates sensitive configuration settings from the `/` route.\n    [#1650](https://github.com/Kong/kong/pull/1650)\n- CLI:\n  - Prevent a failed `kong start` to stop an already running Kong node.\n    [#1645](https://github.com/Kong/kong/pull/1645)\n  - Remove unset configuration placeholders from the nginx configuration\n    template. This would occur when no Internet connection would be\n    available and would cause Kong to compile an erroneous nginx config.\n    [#1606](https://github.com/Kong/kong/pull/1606)\n  - Properly count the number of executed migrations.\n    [#1649](https://github.com/Kong/kong/pull/1649)\n- Plugins:\n  - OAuth2: remove the \"Kong\" mentions in missing `provision_key` error\n    messages. [#1633](https://github.com/Kong/kong/pull/1633)\n  - OAuth2: allow to correctly delete applications when using Cassandra.\n    [#1659](https://github.com/Kong/kong/pull/1659)\n  - galileo: provide a default `bodySize` value when `log_bodies=true` but the\n    current request/response has no body.\n    [#1657](https://github.com/Kong/kong/pull/1657)\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.1] - 2016/09/02\n\n### Added\n\n- Plugins:\n  - ACL: allow to retrieve/update/delete an ACL by group name.\n    [#1544](https://github.com/Kong/kong/pull/1544)\n  - Basic Authentication: allow to retrieve/update/delete a credential by `username`.\n    [#1570](https://github.com/Kong/kong/pull/1570)\n  - HMAC Authentication: allow to retrieve/update/delete a credential by `username`.\n    [#1570](https://github.com/Kong/kong/pull/1570)\n  - JWT Authentication: allow to retrieve/update/delete a credential by `key`.\n    [#1570](https://github.com/Kong/kong/pull/1570)\n  - Key Authentication: allow to retrieve/update/delete a credential by `key`.\n    [#1570](https://github.com/Kong/kong/pull/1570)\n  - OAuth2 Authentication: allow to retrieve/update/delete a credential by `client_id` and tokens by `access_token`.\n    [#1570](https://github.com/Kong/kong/pull/1570)\n\n### Fixed\n\n- Correctly parse configuration file settings containing comments.\n  [#1569](https://github.com/Kong/kong/pull/1569)\n- Prevent third-party Lua modules (and plugins) to override the seed for random\n  number generation. This prevents the creation of conflicting UUIDs.\n  [#1558](https://github.com/Kong/kong/pull/1558)\n- Use [pgmoon-mashape](https://github.com/Kong/pgmoon) `2.0.0` which\n  properly namespaces our fork, avoiding conflicts with other versions of\n  pgmoon, such as the one installed by Lapis.\n  [#1582](https://github.com/Kong/kong/pull/1582)\n- Avoid exposing OpenResty's information on HTTP `4xx` errors.\n  [#1567](https://github.com/Kong/kong/pull/1567)\n- ulimit with `unlimited` value is now properly handled.\n  [#1545](https://github.com/Kong/kong/pull/1545)\n- CLI:\n  - Stop third-party services (Dnsmasq/Serf) when Kong could not start.\n    [#1588](https://github.com/Kong/kong/pull/1588)\n  - Prefix database migration errors (such as Postgres' `connection refused`)\n    with the database name (`postgres`/`cassandra`) to avoid confusions.\n    [#1583](https://github.com/Kong/kong/pull/1583)\n- Plugins:\n  - galileo: Use `Content-Length` header to get request/response body size when\n    `log_bodies` is disabled.\n    [#1584](https://github.com/Kong/kong/pull/1584)\n- Admin API:\n  - Revert the `/plugins/enabled` endpoint's response to be a JSON array, and\n    not an Object. [#1529](https://github.com/Kong/kong/pull/1529)\n\n[Back to TOC](#table-of-contents)\n\n## [0.9.0] - 2016/08/18\n\nThe main focus of this release is Kong's new CLI. With a simpler configuration file, new settings, environment variables support, new commands as well as a new interpreter, the new CLI gives more power and flexibility to Kong users and allow for an easier integration in your deployment workflow, as well as better testing for developers and plugins authors. Additionally, some new plugins and performance improvements are included as well as the regular bug fixes.\n\n### Changed\n\n- :warning: PostgreSQL is the new default datastore for Kong. If you were using Cassandra and you are upgrading, you need to explicitly set `cassandra` as your `database`.\n- :warning: New CLI, with new commands and refined arguments. This new CLI uses the `resty-cli` interpreter (see [lua-resty-cli](https://github.com/openresty/resty-cli)) instead of LuaJIT. As a result, the `resty` executable must be available in your `$PATH` (resty-cli is shipped in the OpenResty bundle) as well as the `bin/kong` executable. Kong does not rely on Luarocks installing the `bin/kong` executable anymore. This change of behavior is taken care of if you are using one of the official Kong packages.\n- :warning: Kong uses a new configuration file, with an easier syntax than the previous YAML file.\n- New arguments for the CLI, such as verbose, debug and tracing flags. We also avoid requiring the configuration file as an argument to each command as per the previous CLI.\n- Customization of the Nginx configuration can now be taken care of using two different approaches: with a custom Nginx configuration template and using `kong start --template <file>`, or by using `kong compile` to generate the Kong Nginx sub-configuration, and `include` it in a custom Nginx instance.\n- Plugins:\n  - Rate Limiting: the `continue_on_error` property is now called `fault_tolerant`.\n  - Response Rate Limiting: the `continue_on_error` property is now called `fault_tolerant`.\n\n### Added\n\n- :fireworks: Support for overriding configuration settings with environment variables.\n- :fireworks: Support for SSL connections between Kong and PostgreSQL. [#1425](https://github.com/Kong/kong/pull/1425)\n- :fireworks: Ability to apply plugins with more granularity: per-consumer, and global plugins are now possible. [#1403](https://github.com/Kong/kong/pull/1403)\n- New `kong check` command: validates a Kong configuration file.\n- Better version check for third-party dependencies (OpenResty, Serf, Dnsmasq). [#1307](https://github.com/Kong/kong/pull/1307)\n- Ability to configure the validation depth of database SSL certificates from the configuration file. [#1420](https://github.com/Kong/kong/pull/1420)\n- `request_host`: internationalized url support; utf-8 domain names through punycode support and paths through %-encoding. [#1300](https://github.com/Kong/kong/issues/1300)\n- Implements caching locks when fetching database configuration (APIs, Plugins...) to avoid dog pile effect on cold nodes. [#1402](https://github.com/Kong/kong/pull/1402)\n- Plugins:\n  - :fireworks: **New bot-detection plugin**: protect your APIs by detecting and rejecting common bots and crawlers. [#1413](https://github.com/Kong/kong/pull/1413)\n  - correlation-id: new \"tracker\" generator, identifying requests per worker and connection. [#1288](https://github.com/Kong/kong/pull/1288)\n  - request/response-transformer: ability to add strings including colon characters. [#1353](https://github.com/Kong/kong/pull/1353)\n  - rate-limiting: support for new rate-limiting policies (`cluster`, `local` and `redis`), and for a new `limit_by` property to force rate-limiting by `consumer`, `credential` or `ip`.\n  - response-rate-limiting: support for new rate-limiting policies (`cluster`, `local` and `redis`), and for a new `limit_by` property to force rate-limiting by `consumer`, `credential` or `ip`.\n  - galileo: performance improvements of ALF serialization. ALFs are not discarded when exceeding 20MBs anymore. [#1463](https://github.com/Kong/kong/issues/1463)\n  - statsd: new `upstream_stream` latency metric. [#1466](https://github.com/Kong/kong/pull/1466)\n  - datadog: new `upstream_stream` latency metric and tagging support for each metric. [#1473](https://github.com/Kong/kong/pull/1473)\n\n### Removed\n\n- We now use [lua-resty-jit-uuid](https://github.com/thibaultCha/lua-resty-jit-uuid) for UUID generation, which is a pure Lua implementation of [RFC 4122](https://www.ietf.org/rfc/rfc4122.txt). As a result, libuuid is not a dependency of Kong anymore.\n\n### Fixed\n\n- Sensitive configuration settings are not printed to stdout anymore. [#1256](https://github.com/Kong/kong/issues/1256)\n- Fixed bug that caused nodes to remove themselves from the database when they attempted to join the cluster. [#1437](https://github.com/Kong/kong/pull/1437)\n- Plugins:\n  - request-size-limiting: use proper constant for MB units while setting the size limit. [#1416](https://github.com/Kong/kong/pull/1416)\n  - OAuth2: security and config validation fixes. [#1409](https://github.com/Kong/kong/pull/1409) [#1112](https://github.com/Kong/kong/pull/1112)\n  - request/response-transformer: better validation of fields provided without a value. [#1399](https://github.com/Kong/kong/pull/1399)\n  - JWT: handle some edge-cases that could result in HTTP 500 errors. [#1362](https://github.com/Kong/kong/pull/1362)\n\n> **internal**\n> - new test suite using resty-cli and removing the need to monkey-patch the `ngx` global.\n> - custom assertions and new helper methods (`wait_until()`) to gracefully fail in case of timeout.\n> - increase atomicity of the testing environment.\n> - lighter testing instance, only running 1 worker and not using Dnsmasq by default.\n\n[Back to TOC](#table-of-contents)\n\n## [0.8.3] - 2016/06/01\n\nThis release includes some bugfixes:\n\n### Changed\n\n- Switched the log level of the \"No nodes found in cluster\" warning to `INFO`, that was printed when starting up the first Kong node in a new cluster.\n- Kong now requires OpenResty `1.9.7.5`.\n\n### Fixed\n\n- New nodes are now properly registered into the `nodes` table when running on the same machine. [#1281](https://github.com/Kong/kong/pull/1281)\n- Fixed a failed error parsing on Postgres. [#1269](https://github.com/Kong/kong/pull/1269)\n- Plugins:\n  - Response Transformer: Slashes are now encoded properly, and fixed a bug that hang the execution of the plugin. [#1257](https://github.com/Kong/kong/pull/1257) and [#1263](https://github.com/Kong/kong/pull/1263)\n  - JWT: If a value for `algorithm` is missing, it's now `HS256` by default. This problem occurred when migrating from older versions of Kong.\n  - OAuth 2.0: Fixed a Postgres problem that was preventing an application from being created, and fixed a check on the `redirect_uri` field. [#1264](https://github.com/Kong/kong/pull/1264) and [#1267](https://github.com/Kong/kong/issues/1267)\n\n[Back to TOC](#table-of-contents)\n\n## [0.8.2] - 2016/05/25\n\nThis release includes bugfixes and minor updates:\n\n### Added\n\n- Support for a simple slash in `request_path`. [#1227](https://github.com/Kong/kong/pull/1227)\n- Plugins:\n  - Response Rate Limiting: it now appends usage headers to the upstream requests in the form of `X-Ratelimit-Remaining-{limit_name}` and introduces a new `config.block_on_first_violation` property. [#1235](https://github.com/Kong/kong/pull/1235)\n\n#### Changed\n\n- Plugins:\n  - **Mashape Analytics: The plugin is now called \"Galileo\", and added support for Galileo v3. [#1159](https://github.com/Kong/kong/pull/1159)**\n\n#### Fixed\n\n- Postgres now relies on the `search_path` configured on the database and its default value `$user, public`. [#1196](https://github.com/Kong/kong/issues/1196)\n- Kong now properly encodes an empty querystring parameter like `?param=` when proxying the request. [#1210](https://github.com/Kong/kong/pull/1210)\n- The configuration now checks that `cluster.ttl_on_failure` is at least 60 seconds. [#1199](https://github.com/Kong/kong/pull/1199)\n- Plugins:\n  - Loggly: Fixed an issue that was triggering 400 and 500 errors. [#1184](https://github.com/Kong/kong/pull/1184)\n  - JWT: The `TYP` value in the header is not optional and case-insensitive. [#1192](https://github.com/Kong/kong/pull/1192)\n  - Request Transformer: Fixed a bug when transforming request headers. [#1202](https://github.com/Kong/kong/pull/1202)\n  - OAuth 2.0: Multiple redirect URIs are now supported. [#1112](https://github.com/Kong/kong/pull/1112)\n  - IP Restriction: Fixed that prevented the plugin for working properly when added on an API. [#1245](https://github.com/Kong/kong/pull/1245)\n  - CORS: Fixed an issue when `config.preflight_continue` was enabled. [#1240](https://github.com/Kong/kong/pull/1240)\n\n[Back to TOC](#table-of-contents)\n\n## [0.8.1] - 2016/04/27\n\nThis release includes some fixes and minor updates:\n\n### Added\n\n- Adds `X-Forwarded-Host` and `X-Forwarded-Prefix` to the upstream request headers. [#1180](https://github.com/Kong/kong/pull/1180)\n- Plugins:\n  - Datadog: Added two new metrics, `unique_users` and `request_per_user`, that log the consumer information. [#1179](https://github.com/Kong/kong/pull/1179)\n\n### Fixed\n\n- Fixed a DAO bug that affected full entity updates. [#1163](https://github.com/Kong/kong/pull/1163)\n- Fixed a bug when setting the authentication provider in Cassandra.\n- Updated the Cassandra driver to v0.5.2.\n- Properly enforcing required fields in PUT requests. [#1177](https://github.com/Kong/kong/pull/1177)\n- Fixed a bug that prevented to retrieve the hostname of the local machine on certain systems. [#1178](https://github.com/Kong/kong/pull/1178)\n\n[Back to TOC](#table-of-contents)\n\n## [0.8.0] - 2016/04/18\n\nThis release includes support for PostgreSQL as Kong's primary datastore!\n\n### Breaking changes\n\n- Remove support for the long deprecated `/consumers/:consumer/keyauth/` and `/consumers/:consumer/basicauth/` routes (deprecated in `0.5.0`). The new routes (available since `0.5.0` too) use the real name of the plugin: `/consumers/:consumer/key-auth` and `/consumers/:consumer/basic-auth`.\n\n### Added\n\n- Support for PostgreSQL 9.4+ as Kong's primary datastore. [#331](https://github.com/Kong/kong/issues/331) [#1054](https://github.com/Kong/kong/issues/1054)\n- Configurable Cassandra reading/writing consistency. [#1026](https://github.com/Kong/kong/pull/1026)\n- Admin API: including pending and running timers count in the response to `/`. [#992](https://github.com/Kong/kong/pull/992)\n- Plugins\n  - **New correlation-id plugin**: assign unique identifiers to the requests processed by Kong. Courtesy of [@opyate](https://github.com/opyate). [#1094](https://github.com/Kong/kong/pull/1094)\n  - LDAP: add support for LDAP authentication. [#1133](https://github.com/Kong/kong/pull/1133)\n  - StatsD: add support for StatsD logging. [#1142](https://github.com/Kong/kong/pull/1142)\n  - JWT: add support for RS256 signed tokens thanks to [@kdstew](https://github.com/kdstew)! [#1053](https://github.com/Kong/kong/pull/1053)\n  - ACL: appends `X-Consumer-Groups` to the request, so the upstream service can check what groups the consumer belongs to. [#1154](https://github.com/Kong/kong/pull/1154)\n  - Galileo (mashape-analytics): increase batch sending timeout to 30s. [#1091](https://github.com/Kong/kong/pull/1091)\n- Added `ttl_on_failure` option in the cluster configuration, to configure the TTL of failed nodes. [#1125](https://github.com/Kong/kong/pull/1125)\n\n### Fixed\n\n- Introduce a new `port` option when connecting to your Cassandra cluster instead of using the CQL default (9042). [#1139](https://github.com/Kong/kong/issues/1139)\n- Plugins\n  - Request/Response Transformer: add missing migrations for upgrades from ` <= 0.5.x`. [#1064](https://github.com/Kong/kong/issues/1064)\n  - OAuth2\n    - Error responses comply to RFC 6749. [#1017](https://github.com/Kong/kong/issues/1017)\n    - Handle multipart requests. [#1067](https://github.com/Kong/kong/issues/1067)\n    - Make access_tokens correctly expire. [#1089](https://github.com/Kong/kong/issues/1089)\n\n> **internal**\n> - replace globals with singleton pattern thanks to [@mars](https://github.com/mars).\n> - fixed resolution mismatches when using deep paths in the path resolver.\n\n[Back to TOC](#table-of-contents)\n\n## [0.7.0] - 2016/02/24\n\n### Breaking changes\n\nDue to the NGINX security fixes (CVE-2016-0742, CVE-2016-0746, CVE-2016-0747), OpenResty was bumped to `1.9.7.3` which is not backwards compatible, and thus requires changes to be made to the `nginx` property of Kong's configuration file. See the [0.7 upgrade path](https://github.com/Kong/kong/blob/master/UPGRADE.md#upgrade-to-07x) for instructions.\n\nHowever by upgrading the underlying OpenResty version, source installations do not have to patch the NGINX core and use the old `ssl-cert-by-lua` branch of ngx_lua anymore. This will make source installations much easier.\n\n### Added\n\n- Support for OpenResty `1.9.7.*`. This includes NGINX security fixes (CVE-2016-0742, CVE-2016-0746, CVE-2016-0747). [#906](https://github.com/Kong/kong/pull/906)\n- Plugins\n  - **New Runscope plugin**: Monitor your APIs from Kong with Runscope. Courtesy of [@mansilladev](https://github.com/mansilladev). [#924](https://github.com/Kong/kong/pull/924)\n  - Datadog: New `response.size` metric. [#923](https://github.com/Kong/kong/pull/923)\n  - Rate-Limiting and Response Rate-Limiting\n    - New `config.async` option to asynchronously increment counters to reduce latency at the cost of slightly reducing the accuracy. [#912](https://github.com/Kong/kong/pull/912)\n    - New `config.continue_on_error` option to keep proxying requests in case the datastore is unreachable. rate-limiting operations will be disabled until the datastore is responsive again. [#953](https://github.com/Kong/kong/pull/953)\n- CLI\n  - Perform a simple permission check on the NGINX working directory when starting, to prevent errors during execution. [#939](https://github.com/Kong/kong/pull/939)\n- Send 50x errors with the appropriate format. [#927](https://github.com/Kong/kong/pull/927) [#970](https://github.com/Kong/kong/pull/970)\n\n### Fixed\n\n- Plugins\n  - OAuth2\n    - Better handling of `redirect_uri` (prevent the use of fragments and correctly handle querystrings). Courtesy of [@PGBI](https://github.com/PGBI). [#930](https://github.com/Kong/kong/pull/930)\n    - Add `PUT` support to the `/auth2_tokens` route. [#897](https://github.com/Kong/kong/pull/897)\n    - Better error message when the `access_token` is missing. [#1003](https://github.com/Kong/kong/pull/1003)\n  - IP restriction: Fix an issue that could arise when restarting Kong. Now Kong does not need to be restarted for the ip-restriction configuration to take effect. [#782](https://github.com/Kong/kong/pull/782) [#960](https://github.com/Kong/kong/pull/960)\n  - ACL: Properly invalidating entities when assigning a new ACL group. [#996](https://github.com/Kong/kong/pull/996)\n  - SSL: Replace shelled out openssl calls with native `ngx.ssl` conversion utilities, which preserve the certificate chain. [#968](https://github.com/Kong/kong/pull/968)\n- Avoid user warning on start when the user is not root. [#964](https://github.com/Kong/kong/pull/964)\n- Store Serf logs in NGINX working directory to prevent eventual permission issues. [#975](https://github.com/Kong/kong/pull/975)\n- Allow plugins configured on a Consumer *without* being configured on an API to run. [#978](https://github.com/Kong/kong/issues/978) [#980](https://github.com/Kong/kong/pull/980)\n- Fixed an edge-case where Kong nodes would not be registered in the `nodes` table. [#1008](https://github.com/Kong/kong/pull/1008)\n\n[Back to TOC](#table-of-contents)\n\n## [0.6.1] - 2016/02/03\n\nThis release contains tiny bug fixes that were especially annoying for complex Cassandra setups and power users of the Admin API!\n\n### Added\n\n- A `timeout` property for the Cassandra configuration. In ms, this timeout is effective as a connection and a reading timeout. [#937](https://github.com/Kong/kong/pull/937)\n\n### Fixed\n\n- Correctly set the Cassandra SSL certificate in the Nginx configuration while starting Kong. [#921](https://github.com/Kong/kong/pull/921)\n- Rename the `user` Cassandra property to `username` (Kong looks for `username`, hence `user` would fail). [#922](https://github.com/Kong/kong/pull/922)\n- Allow Cassandra authentication with arbitrary plain text auth providers (such as Instaclustr uses), fixing authentication with them. [#937](https://github.com/Kong/kong/pull/937)\n- Admin API\n  - Fix the `/plugins/:id` route for `PATCH` method. [#941](https://github.com/Kong/kong/pull/941)\n- Plugins\n  - HTTP logging: remove the additional `\\r\\n` at the end of the logging request body. [#926](https://github.com/Kong/kong/pull/926)\n  - Galileo: catch occasional internal errors happening when a request was cancelled by the client and fix missing shm for the retry policy. [#931](https://github.com/Kong/kong/pull/931)\n\n[Back to TOC](#table-of-contents)\n\n## [0.6.0] - 2016/01/22\n\n### Breaking changes\n\n We would recommended to consult the suggested [0.6 upgrade path](https://github.com/Kong/kong/blob/master/UPGRADE.md#upgrade-to-06x) for this release.\n\n- [Serf](https://www.serf.io/) is now a Kong dependency. It allows Kong nodes to communicate between each other opening the way to many features and improvements.\n- The configuration file changed. Some properties were renamed, others were moved, and some are new. We would recommend checking out the new default configuration file.\n- Drop the Lua 5.1 dependency which was only used by the CLI. The CLI now runs with LuaJIT, which is consistent with other Kong components (Luarocks and OpenResty) already relying on LuaJIT. Make sure the LuaJIT interpreter is included in your `$PATH`. [#799](https://github.com/Kong/kong/pull/799)\n\n### Added\n\nOne of the biggest new features of this release is the cluster-awareness added to Kong in [#729](https://github.com/Kong/kong/pull/729), which deserves its own section:\n\n- Each Kong node is now aware of belonging to a cluster through Serf. Nodes automatically join the specified cluster according to the configuration file's settings.\n- The datastore cache is not invalidated by expiration time anymore, but following an invalidation strategy between the nodes of a same cluster, leading to improved performance.\n- Admin API\n  - Expose a `/cache` endpoint for retrieving elements stored in the in-memory cache of a node.\n  - Expose a `/cluster` endpoint used to add/remove/list members of the cluster, and also used internally for data propagation.\n- CLI\n  - New `kong cluster` command for cluster management.\n  - New `kong status` command for cluster healthcheck.\n\nOther additions include:\n\n- New Cassandra driver which makes Kong aware of the Cassandra cluster. Kong is now unaffected if one of your Cassandra nodes goes down as long as a replica is available on another node. Load balancing policies also improve the performance along with many other smaller improvements. [#803](https://github.com/Kong/kong/pull/803)\n- Admin API\n  - A new `total` field in API responses, that counts the total number of entities in the datastore. [#635](https://github.com/Kong/kong/pull/635)\n- Configuration\n  - Possibility to configure the keyspace replication strategy for Cassandra. It will be taken into account by the migrations when the configured keyspace does not already exist. [#350](https://github.com/Kong/kong/issues/350)\n  - Dnsmasq is now optional. You can specify a custom DNS resolver address that Kong will use when resolving hostnames. This can be configured in `kong.yml`. [#625](https://github.com/Kong/kong/pull/625)\n- Plugins\n  - **New \"syslog\" plugin**: send logs to local system log. [#698](https://github.com/Kong/kong/pull/698)\n  - **New \"loggly\" plugin**: send logs to Loggly over UDP. [#698](https://github.com/Kong/kong/pull/698)\n  - **New \"datadog\" plugin**: send logs to Datadog server. [#758](https://github.com/Kong/kong/pull/758)\n  - OAuth2\n    - Add support for `X-Forwarded-Proto` header. [#650](https://github.com/Kong/kong/pull/650)\n    - Expose a new `/oauth2_tokens` endpoint with the possibility to retrieve, update or delete OAuth 2.0 access tokens. [#729](https://github.com/Kong/kong/pull/729)\n  - JWT\n    - Support for base64 encoded secrets. [#838](https://github.com/Kong/kong/pull/838) [#577](https://github.com/Kong/kong/issues/577)\n    - Support to configure the claim in which the key is given into the token (not `iss` only anymore). [#838](https://github.com/Kong/kong/pull/838)\n  - Request transformer\n    - Support for more transformation options: `remove`, `replace`, `add`, `append` motivated by [#393](https://github.com/Kong/kong/pull/393). See [#824](https://github.com/Kong/kong/pull/824)\n    - Support JSON body transformation. [#569](https://github.com/Kong/kong/issues/569)\n  - Response transformer\n    - Support for more transformation options: `remove`, `replace`, `add`, `append` motivated by [#393](https://github.com/Kong/kong/pull/393). See [#822](https://github.com/Kong/kong/pull/822)\n\n### Changed\n\n- As mentioned in the breaking changes section, a new configuration file format and validation. All properties are now documented and commented out with their default values. This allows for a lighter configuration file and more clarity as to what properties relate to. It also catches configuration mistakes. [#633](https://github.com/Kong/kong/pull/633)\n- Replace the UUID generator library with a new implementation wrapping lib-uuid, fixing eventual conflicts happening in cases such as described in [#659](https://github.com/Kong/kong/pull/659). See [#695](https://github.com/Kong/kong/pull/695)\n- Admin API\n  - Increase the maximum body size to 10MB in order to handle configuration requests with heavy payloads. [#700](https://github.com/Kong/kong/pull/700)\n  - Disable access logs for the `/status` endpoint.\n  - The `/status` endpoint now includes `database` statistics, while the previous stats have been moved to a `server` response field. [#635](https://github.com/Kong/kong/pull/635)\n\n### Fixed\n\n- Behaviors described in [#603](https://github.com/Kong/kong/issues/603) related to the failure of Cassandra nodes thanks to the new driver. [#803](https://github.com/Kong/kong/issues/803)\n- Latency headers are now properly included in responses sent to the client. [#708](https://github.com/Kong/kong/pull/708)\n- `strip_request_path` does not add a trailing slash to the API's `upstream_url` anymore before proxying. [#675](https://github.com/Kong/kong/issues/675)\n- Do not URL decode querystring before proxying the request to the upstream service. [#749](https://github.com/Kong/kong/issues/749)\n- Handle cases when the request would be terminated prior to the Kong execution (that is, before ngx_lua reaches the `access_by_lua` context) in cases such as the use of a custom nginx module. [#594](https://github.com/Kong/kong/issues/594)\n- Admin API\n  - The PUT method now correctly updates boolean fields (such as `strip_request_path`). [#765](https://github.com/Kong/kong/pull/765)\n  - The PUT method now correctly resets a plugin configuration. [#720](https://github.com/Kong/kong/pull/720)\n  - PATCH correctly set previously unset fields. [#861](https://github.com/Kong/kong/pull/861)\n  - In the responses, the `next` link is not being displayed anymore if there are no more entities to be returned. [#635](https://github.com/Kong/kong/pull/635)\n  - Prevent the update of `created_at` fields. [#820](https://github.com/Kong/kong/pull/820)\n  - Better `request_path` validation for APIs. \"/\" is not considered a valid path anymore. [#881](https://github.com/Kong/kong/pull/881)\n- Plugins\n  - Galileo: ensure the `mimeType` value is always a string in ALFs. [#584](https://github.com/Kong/kong/issues/584)\n  - JWT: allow to update JWT credentials using the PATCH method. It previously used to reply with `405 Method not allowed` because the PATCH method was not implemented. [#667](https://github.com/Kong/kong/pull/667)\n  - Rate limiting: fix a warning when many periods are configured. [#681](https://github.com/Kong/kong/issues/681)\n  - Basic Authentication: do not re-hash the password field when updating a credential. [#726](https://github.com/Kong/kong/issues/726)\n  - File log: better permissions for on file creation for file-log plugin. [#877](https://github.com/Kong/kong/pull/877)\n  - OAuth2\n    - Implement correct responses when the OAuth2 challenges are refused. [#737](https://github.com/Kong/kong/issues/737)\n    - Handle querystring on `/authorize` and `/token` URLs. [#687](https://github.com/Kong/kong/pull/667)\n    - Handle punctuation in scopes on `/authorize` and `/token` endpoints. [#658](https://github.com/Kong/kong/issues/658)\n\n> ***internal***\n> - Event bus for local and cluster-wide events propagation. Plans for this event bus is to be widely used among Kong in the future.\n> - The Kong Public Lua API (Lua helpers integrated in Kong such as DAO and Admin API helpers) is now documented with [ldoc](http://stevedonovan.github.io/ldoc/).\n> - Work has been done to restore the reliability of the CI platforms.\n> - Migrations can now execute DML queries (instead of DDL queries only). Handy for migrations implying plugin configuration changes, plugins renamings etc... [#770](https://github.com/Kong/kong/pull/770)\n\n[Back to TOC](#table-of-contents)\n\n## [0.5.4] - 2015/12/03\n\n### Fixed\n\n- Mashape Analytics plugin (renamed Galileo):\n  - Improve stability under heavy load. [#757](https://github.com/Kong/kong/issues/757)\n  - base64 encode ALF request/response bodies, enabling proper support for Galileo bodies inspection capabilities. [#747](https://github.com/Kong/kong/pull/747)\n  - Do not include JSON bodies in ALF `postData.params` field. [#766](https://github.com/Kong/kong/pull/766)\n\n[Back to TOC](#table-of-contents)\n\n## [0.5.3] - 2015/11/16\n\n### Fixed\n\n- Avoids additional URL encoding when proxying to an upstream service. [#691](https://github.com/Kong/kong/pull/691)\n- Potential timing comparison bug in HMAC plugin. [#704](https://github.com/Kong/kong/pull/704)\n\n### Added\n\n- The Galileo plugin now supports arbitrary host, port and path values. [#721](https://github.com/Kong/kong/pull/721)\n\n[Back to TOC](#table-of-contents)\n\n## [0.5.2] - 2015/10/21\n\nA few fixes requested by the community!\n\n### Fixed\n\n- Kong properly search the `nginx` in your $PATH variable.\n- Plugins:\n  - OAuth2: can detect that the originating protocol for a request was HTTPS through the `X-Forwarded-Proto` header and work behind another reverse proxy (load balancer). [#650](https://github.com/Kong/kong/pull/650)\n  - HMAC signature: support for `X-Date` header to sign the request for usage in browsers (since the `Date` header is protected). [#641](https://github.com/Kong/kong/issues/641)\n\n[Back to TOC](#table-of-contents)\n\n## [0.5.1] - 2015/10/13\n\nFixing a few glitches we let out with 0.5.0!\n\n### Added\n\n- Basic Authentication and HMAC Authentication plugins now also send the `X-Credential-Username` to the upstream server.\n- Admin API now accept JSON when receiving a CORS request. [#580](https://github.com/Kong/kong/pull/580)\n- Add a `WWW-Authenticate` header for HTTP 401 responses for basic-auth and key-auth. [#588](https://github.com/Kong/kong/pull/588)\n\n### Changed\n\n- Protect Kong from POODLE SSL attacks by omitting SSLv3 (CVE-2014-3566). [#563](https://github.com/Kong/kong/pull/563)\n- Remove support for key-auth key in body. [#566](https://github.com/Kong/kong/pull/566)\n\n### Fixed\n\n- Plugins\n  - HMAC\n    - The migration for this plugin is now correctly being run. [#611](https://github.com/Kong/kong/pull/611)\n    - Wrong username doesn't return HTTP 500 anymore, but 403. [#602](https://github.com/Kong/kong/pull/602)\n  - JWT: `iss` not being found doesn't return HTTP 500 anymore, but 403. [#578](https://github.com/Kong/kong/pull/578)\n  - OAuth2: client credentials flow does not include a refresh token anymore. [#562](https://github.com/Kong/kong/issues/562)\n- Fix an occasional error when updating a plugin without a config. [#571](https://github.com/Kong/kong/pull/571)\n\n[Back to TOC](#table-of-contents)\n\n## [0.5.0] - 2015/09/25\n\nWith new plugins, many improvements and bug fixes, this release comes with breaking changes that will require your attention.\n\n### Breaking changes\n\nSeveral breaking changes are introduced. You will have to slightly change your configuration file and a migration script will take care of updating your database cluster. **Please follow the instructions in [UPGRADE.md](/UPGRADE.md#update-to-kong-050) for an update without downtime.**\n- Many plugins were renamed due to new naming conventions for consistency. [#480](https://github.com/Kong/kong/issues/480)\n- In the configuration file, the Cassandra `hosts` property was renamed to `contact_points`. [#513](https://github.com/Kong/kong/issues/513)\n- Properties belonging to APIs entities have been renamed for clarity. [#513](https://github.com/Kong/kong/issues/513)\n  - `public_dns` -> `request_host`\n  - `path` -> `request_path`\n  - `strip_path` -> `strip_request_path`\n  - `target_url` -> `upstream_url`\n- `plugins_configurations` have been renamed to `plugins`, and their `value` property has been renamed to `config` to avoid confusions. [#513](https://github.com/Kong/kong/issues/513)\n- The database schema has been updated to handle the separation of plugins outside of the core repository.\n- The Key authentication and Basic authentication plugins routes have changed:\n\n```\nOld route                             New route\n/consumers/:consumer/keyauth       -> /consumers/:consumer/key-auth\n/consumers/:consumer/keyauth/:id   -> /consumers/:consumer/key-auth/:id\n/consumers/:consumer/basicauth     -> /consumers/:consumer/basic-auth\n/consumers/:consumer/basicauth/:id -> /consumers/:consumer/basic-auth/:id\n```\n\nThe old routes are still maintained but will be removed in upcoming versions. Consider them **deprecated**.\n\n- Admin API\n  - The route to retrieve enabled plugins is now under `/plugins/enabled`.\n  - The route to retrieve a plugin's configuration schema is now under `/plugins/schema/{plugin name}`.\n\n#### Added\n\n- Plugins\n  - **New Response Rate Limiting plugin**: Give a usage quota to your users based on a parameter in your response. [#247](https://github.com/Kong/kong/pull/247)\n  - **New ACL (Access Control) plugin**: Configure authorizations for your Consumers. [#225](https://github.com/Kong/kong/issues/225)\n  - **New JWT (JSON Web Token) plugin**: Verify and authenticate JWTs. [#519](https://github.com/Kong/kong/issues/519)\n  - **New HMAC signature plugin**: Verify and authenticate HMAC signed HTTP requests. [#549](https://github.com/Kong/kong/pull/549)\n  - Plugins migrations. Each plugin can now have its own migration scripts if it needs to store data in your cluster. This is a step forward to improve Kong's pluggable architecture. [#443](https://github.com/Kong/kong/pull/443)\n  - Basic Authentication: the password field is now sha1 encrypted. [#33](https://github.com/Kong/kong/issues/33)\n  - Basic Authentication: now supports credentials in the `Proxy-Authorization` header. [#460](https://github.com/Kong/kong/issues/460)\n\n#### Changed\n\n- Basic Authentication and Key Authentication now require authentication parameters even when the `Expect: 100-continue` header is being sent. [#408](https://github.com/Kong/kong/issues/408)\n- Key Auth plugin does not support passing the key in the request payload anymore. [#566](https://github.com/Kong/kong/pull/566)\n- APIs' names cannot contain characters from the RFC 3986 reserved list. [#589](https://github.com/Kong/kong/pull/589)\n\n#### Fixed\n\n- Resolver\n  - Making a request with a querystring will now correctly match an API's path. [#496](https://github.com/Kong/kong/pull/496)\n- Admin API\n  - Data associated to a given API/Consumer will correctly be deleted if related Consumer/API is deleted. [#107](https://github.com/Kong/kong/issues/107) [#438](https://github.com/Kong/kong/issues/438) [#504](https://github.com/Kong/kong/issues/504)\n  - The `/api/{api_name_or_id}/plugins/{plugin_name_or_id}` changed to `/api/{api_name_or_id}/plugins/{plugin_id}` to avoid requesting the wrong plugin if two are configured for one API. [#482](https://github.com/Kong/kong/pull/482)\n  - APIs created without a `name` but with a `request_path` will now have a name which defaults to the set `request_path`. [#547](https://github.com/Kong/kong/issues/547)\n- Plugins\n  - Mashape Analytics: More robust buffer and better error logging. [#471](https://github.com/Kong/kong/pull/471)\n  - Mashape Analytics: Several ALF (API Log Format) serialization fixes. [#515](https://github.com/Kong/kong/pull/515)\n  - Oauth2: A response is now returned on `http://kong:8001/consumers/{consumer}/oauth2/{oauth2_id}`. [#469](https://github.com/Kong/kong/issues/469)\n  - Oauth2: Saving `authenticated_userid` on Password Grant. [#476](https://github.com/Kong/kong/pull/476)\n  - Oauth2: Proper handling of the `/oauth2/authorize` and `/oauth2/token` endpoints in the OAuth 2.0 Plugin when an API with a `path` is being consumed using the `public_dns` instead. [#503](https://github.com/Kong/kong/issues/503)\n  - OAuth2: Properly returning `X-Authenticated-UserId` in the `client_credentials` and `password` flows. [#535](https://github.com/Kong/kong/issues/535)\n  - Response-Transformer: Properly handling JSON responses that have a charset specified in their `Content-Type` header.\n\n[Back to TOC](#table-of-contents)\n\n## [0.4.2] - 2015/08/10\n\n#### Added\n\n- Cassandra authentication and SSL encryption. [#405](https://github.com/Kong/kong/pull/405)\n- `preserve_host` flag on APIs to preserve the Host header when a request is proxied. [#444](https://github.com/Kong/kong/issues/444)\n- Added the Resource Owner Password Credentials Grant to the OAuth 2.0 Plugin. [#448](https://github.com/Kong/kong/issues/448)\n- Auto-generation of default SSL certificate. [#453](https://github.com/Kong/kong/issues/453)\n\n#### Changed\n\n- Remove `cassandra.port` property in configuration. Ports are specified by having `cassandra.hosts` addresses using the `host:port` notation (RFC 3986). [#457](https://github.com/Kong/kong/pull/457)\n- Default SSL certificate is now auto-generated and stored in the `nginx_working_dir`.\n- OAuth 2.0 plugin now properly forces HTTPS.\n\n#### Fixed\n\n- Better handling of multi-nodes Cassandra clusters. [#450](https://github.com/Kong/kong/pull/405)\n- mashape-analytics plugin: handling of numerical values in querystrings. [#449](https://github.com/Kong/kong/pull/405)\n- Path resolver `strip_path` option wrongfully matching the `path` property multiple times in the request URI. [#442](https://github.com/Kong/kong/issues/442)\n- File Log Plugin bug that prevented the file creation in some environments. [#461](https://github.com/Kong/kong/issues/461)\n- Clean output of the Kong CLI. [#235](https://github.com/Kong/kong/issues/235)\n\n[Back to TOC](#table-of-contents)\n\n## [0.4.1] - 2015/07/23\n\n#### Fixed\n\n- Issues with the Mashape Analytics plugin. [#425](https://github.com/Kong/kong/pull/425)\n- Handle hyphens when executing path routing with `strip_path` option enabled. [#431](https://github.com/Kong/kong/pull/431)\n- Adding the Client Credentials OAuth 2.0 flow. [#430](https://github.com/Kong/kong/issues/430)\n- A bug that prevented \"dnsmasq\" from being started on some systems, including Debian. [f7da790](https://github.com/Kong/kong/commit/f7da79057ce29c7d1f6d90f4bc160cc3d9c8611f)\n- File Log plugin: optimizations by avoiding the buffered I/O layer. [20bb478](https://github.com/Kong/kong/commit/20bb478952846faefec6091905bd852db24a0289)\n\n[Back to TOC](#table-of-contents)\n\n## [0.4.0] - 2015/07/15\n\n#### Added\n\n- Implement wildcard subdomains for APIs' `public_dns`. [#381](https://github.com/Kong/kong/pull/381) [#297](https://github.com/Kong/kong/pull/297)\n- Plugins\n  - **New OAuth 2.0 plugin.** [#341](https://github.com/Kong/kong/pull/341) [#169](https://github.com/Kong/kong/pull/169)\n  - **New Mashape Analytics plugin.** [#360](https://github.com/Kong/kong/pull/360) [#272](https://github.com/Kong/kong/pull/272)\n  - **New IP restriction plugin.** [#379](https://github.com/Kong/kong/pull/379)\n  - Ratelimiting: support for multiple limits. [#382](https://github.com/Kong/kong/pull/382) [#205](https://github.com/Kong/kong/pull/205)\n  - HTTP logging: support for HTTPS endpoint. [#342](https://github.com/Kong/kong/issues/342)\n  - Logging plugins: new properties for logs timing. [#351](https://github.com/Kong/kong/issues/351)\n  - Key authentication: now auto-generates a key if none is specified. [#48](https://github.com/Kong/kong/pull/48)\n- Resolver\n  - `path` property now accepts arbitrary depth. [#310](https://github.com/Kong/kong/issues/310)\n- Admin API\n  - Enable CORS by default. [#371](https://github.com/Kong/kong/pull/371)\n  - Expose a new endpoint to get a plugin configuration's schema. [#376](https://github.com/Kong/kong/pull/376) [#309](https://github.com/Kong/kong/pull/309)\n  - Expose a new endpoint to retrieve a node's status. [417c137](https://github.com/Kong/kong/commit/417c1376c08d3562bebe0c0816c6b54df045f515)\n- CLI\n  - `$ kong migrations reset` now asks for confirmation. [#365](https://github.com/Kong/kong/pull/365)\n\n#### Fixed\n\n- Plugins\n  - Basic authentication not being executed if added to an API with default configuration. [6d732cd](https://github.com/Kong/kong/commit/6d732cd8b0ec92ef328faa843215d8264f50fb75)\n  - SSL plugin configuration parsing. [#353](https://github.com/Kong/kong/pull/353)\n  - SSL plugin doesn't accept a `consumer_id` anymore, as this wouldn't make sense. [#372](https://github.com/Kong/kong/pull/372) [#322](https://github.com/Kong/kong/pull/322)\n  - Authentication plugins now return `401` when missing credentials. [#375](https://github.com/Kong/kong/pull/375) [#354](https://github.com/Kong/kong/pull/354)\n- Admin API\n  - Non supported HTTP methods now return `405` instead of `500`. [38f1b7f](https://github.com/Kong/kong/commit/38f1b7fa9f45f60c4130ef5ff9fe2c850a2ba586)\n  - Prevent PATCH requests from overriding a plugin's configuration if partially updated. [9a7388d](https://github.com/Kong/kong/commit/9a7388d695c9de105917cde23a684a7d6722a3ca)\n- Handle occasionally missing `schema_migrations` table. [#365](https://github.com/Kong/kong/pull/365) [#250](https://github.com/Kong/kong/pull/250)\n\n> **internal**\n> - DAO:\n>   - Complete refactor. No more need for hard-coded queries. [#346](https://github.com/Kong/kong/pull/346)\n> - Schemas:\n>   - New `self_check` test for schema definitions. [5bfa7ca](https://github.com/Kong/kong/commit/5bfa7ca13561173161781f872244d1340e4152c1)\n\n[Back to TOC](#table-of-contents)\n\n## [0.3.2] - 2015/06/08\n\n#### Fixed\n\n- Uppercase Cassandra keyspace bug that prevented Kong to work with [kongdb.org](http://kongdb.org/)\n- Multipart requests not properly parsed in the admin API. [#344](https://github.com/Kong/kong/issues/344)\n\n[Back to TOC](#table-of-contents)\n\n## [0.3.1] - 2015/06/07\n\n#### Fixed\n\n- Schema migrations are now automatic, which was missing from previous releases. [#303](https://github.com/Kong/kong/issues/303)\n\n[Back to TOC](#table-of-contents)\n\n## [0.3.0] - 2015/06/04\n\n#### Added\n\n- Support for SSL.\n- Plugins\n  - New HTTP logging plugin. [#226](https://github.com/Kong/kong/issues/226) [#251](https://github.com/Kong/kong/pull/251)\n  - New SSL plugin.\n  - New request size limiting plugin. [#292](https://github.com/Kong/kong/pull/292)\n  - Default logging format improvements. [#226](https://github.com/Kong/kong/issues/226) [#262](https://github.com/Kong/kong/issues/262)\n  - File logging now logs to a custom file. [#202](https://github.com/Kong/kong/issues/202)\n  - Keyauth plugin now defaults `key_names` to \"apikey\".\n- Admin API\n  - RESTful routing. Much nicer Admin API routing. Ex: `/apis/{name_or_id}/plugins`. [#98](https://github.com/Kong/kong/issues/98) [#257](https://github.com/Kong/kong/pull/257)\n  - Support `PUT` method for endpoints such as `/apis/`, `/apis/plugins/`, `/consumers/`\n  - Support for `application/json` and `x-www-form-urlencoded` Content Types for all `PUT`, `POST` and `PATCH` endpoints by passing a `Content-Type` header. [#236](https://github.com/Kong/kong/pull/236)\n- Resolver\n  - Support resolving APIs by Path as well as by Header. [#192](https://github.com/Kong/kong/pull/192) [#282](https://github.com/Kong/kong/pull/282)\n  - Support for `X-Host-Override` as an alternative to `Host` for browsers. [#203](https://github.com/Kong/kong/issues/203) [#246](https://github.com/Kong/kong/pull/246)\n- Auth plugins now send user informations to your upstream services. [#228](https://github.com/Kong/kong/issues/228)\n- Invalid `target_url` value are now being caught when creating an API. [#149](https://github.com/Kong/kong/issues/149)\n\n#### Fixed\n\n- Uppercase Cassandra keyspace causing migration failure. [#249](https://github.com/Kong/kong/issues/249)\n- Guarantee that ratelimiting won't allow requests in case the atomicity of the counter update is not guaranteed. [#289](https://github.com/Kong/kong/issues/289)\n\n> **internal**\n> - Schemas:\n>   - New property type: `array`. [#277](https://github.com/Kong/kong/pull/277)\n>   - Entities schemas now live in their own files and are starting to be unit tested.\n>   - Subfields are handled better: (notify required subfields and auto-vivify is subfield has default values).\n> - Way faster unit tests. Not resetting the DB anymore between tests.\n> - Improved coverage computation (exclude `vendor/`).\n> - Travis now lints `kong/`.\n> - Way faster Travis setup.\n> - Added a new HTTP client for in-nginx usage, using the cosocket API.\n> - Various refactorings.\n> - Fix [#196](https://github.com/Kong/kong/issues/196).\n> - Disabled ipv6 in resolver.\n\n[Back to TOC](#table-of-contents)\n\n## [0.2.1] - 2015/05/12\n\nThis is a maintenance release including several bug fixes and usability improvements.\n\n#### Added\n- Support for local DNS resolution. [#194](https://github.com/Kong/kong/pull/194)\n- Support for Debian 8 and Ubuntu 15.04.\n- DAO\n  - Cassandra version bumped to 2.1.5\n  - Support for Cassandra downtime. If Cassandra goes down and is brought back up, Kong will not need to restart anymore, statements will be re-prepared on-the-fly. This is part of an ongoing effort from [jbochi/lua-resty-cassandra#47](https://github.com/jbochi/lua-resty-cassandra/pull/47), [#146](https://github.com/Kong/kong/pull/146) and [#187](https://github.com/Kong/kong/pull/187).\nQueries effectuated during the downtime will still be lost. [#11](https://github.com/Kong/kong/pull/11)\n  - Leverage reused sockets. If the DAO reuses a socket, it will not re-set their keyspace. This should give a small but appreciable performance improvement. [#170](https://github.com/Kong/kong/pull/170)\n  - Cascade delete plugins configurations when deleting a Consumer or an API associated with it. [#107](https://github.com/Kong/kong/pull/107)\n  - Allow Cassandra hosts listening on different ports than the default. [#185](https://github.com/Kong/kong/pull/185)\n- CLI\n  - Added a notice log when Kong tries to connect to Cassandra to avoid user confusion. [#168](https://github.com/Kong/kong/pull/168)\n  - The CLI now tests if the ports are already being used before starting and warns.\n- Admin API\n  - `name` is now an optional property for APIs. If none is being specified, the name will be the API `public_dns`. [#181](https://github.com/Kong/kong/pull/181)\n- Configuration\n  - The memory cache size is now configurable. [#208](https://github.com/Kong/kong/pull/208)\n\n#### Fixed\n- Resolver\n  - More explicit \"API not found\" message from the resolver if the Host was not found in the system. \"API not found with Host: %s\".\n  - If multiple hosts headers are being sent, Kong will test them all to see if one of the API is in the system. [#186](https://github.com/Kong/kong/pull/186)\n- Admin API: responses now have a new line after the body. [#164](https://github.com/Kong/kong/issues/164)\n- DAO: keepalive property is now properly passed when Kong calls `set_keepalive` on Cassandra sockets.\n- Multipart dependency throwing error at startup. [#213](https://github.com/Kong/kong/pull/213)\n\n> **internal**\n> - Separate Migrations from the DAO factory.\n> - Update dev config + Makefile rules (`run` becomes `start`).\n> - Introducing an `ngx` stub for unit tests and CLI.\n> - Switch many PCRE regexes to using patterns.\n\n[Back to TOC](#table-of-contents)\n\n## [0.2.0-2] - 2015/04/27\n\nFirst public release of Kong. This version brings a lot of internal improvements as well as more usability and a few additional plugins.\n\n#### Added\n- Plugins\n  - CORS plugin.\n  - Request transformation plugin.\n  - NGINX plus monitoring plugin.\n- Configuration\n  - New properties: `proxy_port` and `api_admin_port`. [#142](https://github.com/Kong/kong/issues/142)\n- CLI\n  - Better info, help and error messages. [#118](https://github.com/Kong/kong/issues/118) [#124](https://github.com/Kong/kong/issues/124)\n  - New commands: `kong reload`, `kong quit`. [#114](https://github.com/Kong/kong/issues/114) Alias of `version`: `kong --version` [#119](https://github.com/Kong/kong/issues/119)\n  - `kong restart` simply starts Kong if not previously running + better pid file handling. [#131](https://github.com/Kong/kong/issues/131)\n- Package distributions: .rpm, .deb and .pkg for easy installs on most common platforms.\n\n#### Fixed\n- Admin API: trailing slash is not necessary anymore for core resources such as `/apis` or `/consumers`.\n- Leaner default configuration. [#156](https://github.com/Kong/kong/issues/156)\n\n> **internal**\n> - All scripts moved to the CLI as \"hidden\" commands (`kong db`, `kong config`).\n> - More tests as always, and they are structured better. The coverage went down mainly because of plugins which will later move to their own repos. We are all eagerly waiting for that!\n> - `src/` was renamed to `kong/` for ease of development\n> - All system dependencies versions for package building and travis-ci are now listed in `versions.sh`\n> - DAO doesn't need to `:prepare()` prior to run queries. Queries can be prepared at runtime. [#146](https://github.com/Kong/kong/issues/146)\n\n[Back to TOC](#table-of-contents)\n\n## [0.1.1beta-2] - 2015/03/30\n\n#### Fixed\n\n- Wrong behavior of auto-migration in `kong start`.\n\n[Back to TOC](#table-of-contents)\n\n## [0.1.0beta-3] - 2015/03/25\n\nFirst public beta. Includes caching and better usability.\n\n#### Added\n- Required Openresty is now `1.7.10.1`.\n- Freshly built CLI, rewritten in Lua\n- `kong start` using a new DB keyspace will automatically migrate the schema. [#68](https://github.com/Kong/kong/issues/68)\n- Anonymous error reporting on Proxy and API. [#64](https://github.com/Kong/kong/issues/64)\n- Configuration\n  - Simplified configuration file (unified in `kong.yml`).\n  - In configuration, `plugins_installed` was renamed to `plugins_available`. [#59](https://github.com/Kong/kong/issues/59)\n  - Order of `plugins_available` doesn't matter anymore. [#17](https://github.com/Kong/kong/issues/17)\n  - Better handling of plugins: Kong now detects which plugins are configured and if they are installed on the current machine.\n  - `bin/kong` now defaults on `/etc/kong.yml` for config and `/var/logs/kong` for output. [#71](https://github.com/Kong/kong/issues/71)\n- Proxy: APIs/Consumers caching with expiration for faster authentication.\n- Admin API: Plugins now use plain form parameters for configuration. [#70](https://github.com/Kong/kong/issues/70)\n- Keep track of already executed migrations. `rollback` now behaves as expected. [#8](https://github.com/Kong/kong/issues/8)\n\n#### Fixed\n- `Server` header now sends Kong. [#57](https://github.com/Kong/kong/issues/57)\n- migrations not being executed in order on Linux. This issue wasn't noticed until unit testing the migrations because for now we only have 1 migration file.\n- Admin API: Errors responses are now sent as JSON. [#58](https://github.com/Kong/kong/issues/58)\n\n> **internal**\n> - We now have code linting and coverage.\n> - Faker and Migrations instances don't live in the DAO Factory anymore, they are only used in scripts and tests.\n> - `scripts/config.lua` allows environment based configurations. `make dev` generates a `kong.DEVELOPMENT.yml` and `kong_TEST.yml`. Different keyspaces and ports.\n> - `spec_helpers.lua` allows tests to not rely on the `Makefile` anymore. Integration tests can run 100% from `busted`.\n> - Switch integration testing from [httpbin.org] to [mockbin.com].\n> - `core` plugin was renamed to `resolver`.\n\n[Back to TOC](#table-of-contents)\n\n## [0.0.1alpha-1] - 2015/02/25\n\nFirst version running with Cassandra.\n\n#### Added\n- Basic proxying.\n- Built-in authentication plugin (api key, HTTP basic).\n- Built-in ratelimiting plugin.\n- Built-in TCP logging plugin.\n- Configuration API (for consumers, apis, plugins).\n- CLI `bin/kong` script.\n- Database migrations (using `db.lua`).\n\n[2.8.1]: https://github.com/Kong/kong/compare/2.8.0...2.8.1\n[2.8.0]: https://github.com/Kong/kong/compare/2.7.0...2.8.0\n[2.7.1]: https://github.com/Kong/kong/compare/2.7.0...2.7.1\n[2.7.0]: https://github.com/Kong/kong/compare/2.6.0...2.7.0\n[2.6.0]: https://github.com/Kong/kong/compare/2.5.1...2.6.0\n[2.5.1]: https://github.com/Kong/kong/compare/2.5.0...2.5.1\n[2.5.0]: https://github.com/Kong/kong/compare/2.4.1...2.5.0\n[2.4.1]: https://github.com/Kong/kong/compare/2.4.0...2.4.1\n[2.4.0]: https://github.com/Kong/kong/compare/2.3.3...2.4.0\n[2.3.3]: https://github.com/Kong/kong/compare/2.3.2...2.3.3\n[2.3.2]: https://github.com/Kong/kong/compare/2.3.1...2.3.2\n[2.3.1]: https://github.com/Kong/kong/compare/2.3.0...2.3.1\n[2.3.0]: https://github.com/Kong/kong/compare/2.2.0...2.3.0\n[2.2.2]: https://github.com/Kong/kong/compare/2.2.1...2.2.2\n[2.2.1]: https://github.com/Kong/kong/compare/2.2.0...2.2.1\n[2.2.0]: https://github.com/Kong/kong/compare/2.1.3...2.2.0\n[2.1.4]: https://github.com/Kong/kong/compare/2.1.3...2.1.4\n[2.1.3]: https://github.com/Kong/kong/compare/2.1.2...2.1.3\n[2.1.2]: https://github.com/Kong/kong/compare/2.1.1...2.1.2\n[2.1.1]: https://github.com/Kong/kong/compare/2.1.0...2.1.1\n[2.1.0]: https://github.com/Kong/kong/compare/2.0.5...2.1.0\n[2.0.5]: https://github.com/Kong/kong/compare/2.0.4...2.0.5\n[2.0.4]: https://github.com/Kong/kong/compare/2.0.3...2.0.4\n[2.0.3]: https://github.com/Kong/kong/compare/2.0.2...2.0.3\n[2.0.2]: https://github.com/Kong/kong/compare/2.0.1...2.0.2\n[2.0.1]: https://github.com/Kong/kong/compare/2.0.0...2.0.1\n[2.0.0]: https://github.com/Kong/kong/compare/1.5.0...2.0.0\n[1.5.1]: https://github.com/Kong/kong/compare/1.5.0...1.5.1\n[1.5.0]: https://github.com/Kong/kong/compare/1.4.3...1.5.0\n[1.4.3]: https://github.com/Kong/kong/compare/1.4.2...1.4.3\n[1.4.2]: https://github.com/Kong/kong/compare/1.4.1...1.4.2\n[1.4.1]: https://github.com/Kong/kong/compare/1.4.0...1.4.1\n[1.4.0]: https://github.com/Kong/kong/compare/1.3.0...1.4.0\n[1.3.0]: https://github.com/Kong/kong/compare/1.2.2...1.3.0\n[1.2.2]: https://github.com/Kong/kong/compare/1.2.1...1.2.2\n[1.2.1]: https://github.com/Kong/kong/compare/1.2.0...1.2.1\n[1.2.0]: https://github.com/Kong/kong/compare/1.1.2...1.2.0\n[1.1.2]: https://github.com/Kong/kong/compare/1.1.1...1.1.2\n[1.1.1]: https://github.com/Kong/kong/compare/1.1.0...1.1.1\n[1.1.0]: https://github.com/Kong/kong/compare/1.0.3...1.1.0\n[1.0.3]: https://github.com/Kong/kong/compare/1.0.2...1.0.3\n[1.0.2]: https://github.com/Kong/kong/compare/1.0.1...1.0.2\n[1.0.1]: https://github.com/Kong/kong/compare/1.0.0...1.0.1\n[1.0.0]: https://github.com/Kong/kong/compare/0.15.0...1.0.0\n[0.15.0]: https://github.com/Kong/kong/compare/0.14.1...0.15.0\n[0.14.1]: https://github.com/Kong/kong/compare/0.14.0...0.14.1\n[0.14.0]: https://github.com/Kong/kong/compare/0.13.1...0.14.0\n[0.13.1]: https://github.com/Kong/kong/compare/0.13.0...0.13.1\n[0.13.0]: https://github.com/Kong/kong/compare/0.12.3...0.13.0\n[0.12.3]: https://github.com/Kong/kong/compare/0.12.2...0.12.3\n[0.12.2]: https://github.com/Kong/kong/compare/0.12.1...0.12.2\n[0.12.1]: https://github.com/Kong/kong/compare/0.12.0...0.12.1\n[0.12.0]: https://github.com/Kong/kong/compare/0.11.2...0.12.0\n[0.11.2]: https://github.com/Kong/kong/compare/0.11.1...0.11.2\n[0.11.1]: https://github.com/Kong/kong/compare/0.11.0...0.11.1\n[0.10.4]: https://github.com/Kong/kong/compare/0.10.3...0.10.4\n[0.11.0]: https://github.com/Kong/kong/compare/0.10.3...0.11.0\n[0.10.3]: https://github.com/Kong/kong/compare/0.10.2...0.10.3\n[0.10.2]: https://github.com/Kong/kong/compare/0.10.1...0.10.2\n[0.10.1]: https://github.com/Kong/kong/compare/0.10.0...0.10.1\n[0.10.0]: https://github.com/Kong/kong/compare/0.9.9...0.10.0\n[0.9.9]: https://github.com/Kong/kong/compare/0.9.8...0.9.9\n[0.9.8]: https://github.com/Kong/kong/compare/0.9.7...0.9.8\n[0.9.7]: https://github.com/Kong/kong/compare/0.9.6...0.9.7\n[0.9.6]: https://github.com/Kong/kong/compare/0.9.5...0.9.6\n[0.9.5]: https://github.com/Kong/kong/compare/0.9.4...0.9.5\n[0.9.4]: https://github.com/Kong/kong/compare/0.9.3...0.9.4\n[0.9.3]: https://github.com/Kong/kong/compare/0.9.2...0.9.3\n[0.9.2]: https://github.com/Kong/kong/compare/0.9.1...0.9.2\n[0.9.1]: https://github.com/Kong/kong/compare/0.9.0...0.9.1\n[0.9.0]: https://github.com/Kong/kong/compare/0.8.3...0.9.0\n[0.8.3]: https://github.com/Kong/kong/compare/0.8.2...0.8.3\n[0.8.2]: https://github.com/Kong/kong/compare/0.8.1...0.8.2\n[0.8.1]: https://github.com/Kong/kong/compare/0.8.0...0.8.1\n[0.8.0]: https://github.com/Kong/kong/compare/0.7.0...0.8.0\n[0.7.0]: https://github.com/Kong/kong/compare/0.6.1...0.7.0\n[0.6.1]: https://github.com/Kong/kong/compare/0.6.0...0.6.1\n[0.6.0]: https://github.com/Kong/kong/compare/0.5.4...0.6.0\n[0.5.4]: https://github.com/Kong/kong/compare/0.5.3...0.5.4\n[0.5.3]: https://github.com/Kong/kong/compare/0.5.2...0.5.3\n[0.5.2]: https://github.com/Kong/kong/compare/0.5.1...0.5.2\n[0.5.1]: https://github.com/Kong/kong/compare/0.5.0...0.5.1\n[0.5.0]: https://github.com/Kong/kong/compare/0.4.2...0.5.0\n[0.4.2]: https://github.com/Kong/kong/compare/0.4.1...0.4.2\n[0.4.1]: https://github.com/Kong/kong/compare/0.4.0...0.4.1\n[0.4.0]: https://github.com/Kong/kong/compare/0.3.2...0.4.0\n[0.3.2]: https://github.com/Kong/kong/compare/0.3.1...0.3.2\n[0.3.1]: https://github.com/Kong/kong/compare/0.3.0...0.3.1\n[0.3.0]: https://github.com/Kong/kong/compare/0.2.1...0.3.0\n[0.2.1]: https://github.com/Kong/kong/compare/0.2.0-2...0.2.1\n[0.2.0-2]: https://github.com/Kong/kong/compare/0.1.1beta-2...0.2.0-2\n[0.1.1beta-2]: https://github.com/Kong/kong/compare/0.1.0beta-3...0.1.1beta-2\n[0.1.0beta-3]: https://github.com/Kong/kong/compare/2236374d5624ad98ea21340ca685f7584ec35744...0.1.0beta-3\n[0.0.1alpha-1]: https://github.com/Kong/kong/compare/ffd70b3101ba38d9acc776038d124f6e2fccac3c...2236374d5624ad98ea21340ca685f7584ec35744\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 148.35,
          "content": "# Table of Contents\n\n- [3.9.0](#390)\n- [3.8.1](#381)\n- [3.8.0](#380)\n- [3.7.1](#371)\n- [3.7.0](#370)\n- [3.6.1](#361)\n- [3.6.0](#360)\n- [3.5.0](#350)\n- [3.4.2](#342)\n- [3.4.1](#341)\n- [3.4.0](#340)\n- [3.3.0](#330)\n- [3.2.0](#320)\n- [3.1.0](#310)\n- [3.0.1](#301)\n- [3.0.0](#300)\n- [Previous releases](#previous-releases)\n\n## Unreleased\n\nIndividual unreleased changelog entries can be located at [changelog/unreleased](changelog/unreleased). They will be assembled into [CHANGELOG.md](CHANGELOG.md) once released.\n\n## 3.9.0\n\n### Kong\n\n#### Deprecations\n##### Core\n\n- `node_id` in configuration has been deprecated.\n [#13687](https://github.com/Kong/kong/issues/13687)\n\n#### Dependencies\n##### Core\n\n- Bumped lua-kong-nginx-module from 0.11.0 to 0.11.1 to fix an issue where the upstream cert chain wasn't properly set.\n [#12752](https://github.com/Kong/kong/issues/12752)\n\n- Bumped lua-resty-events to 0.3.1. Optimized the memory usage.\n [#13097](https://github.com/Kong/kong/issues/13097)\n\n- Bumped lua-resty-lmdb to 1.6.0. Allowing page_size to be 1.\n [#13908](https://github.com/Kong/kong/issues/13908)\n\n- Bumped lua-resty-lmdb to 1.5.0. Added page_size parameter to allow overriding page size from caller side.\n [#12786](https://github.com/Kong/kong/issues/12786)\n\n##### Default\n\n- Kong Gateway now supports Ubuntu 24.04 (Noble Numbat) with both open-source and Enterprise packages.\n [#13626](https://github.com/Kong/kong/issues/13626)\n\n- Bumped rpm dockerfile default base UBI 8 -> 9\n [#13574](https://github.com/Kong/kong/issues/13574)\n\n- Bumped lua-resty-aws to 1.5.4 to fix a bug inside region prefix generation.\n [#12846](https://github.com/Kong/kong/issues/12846)\n\n- Bumped lua-resty-ljsonschema to 1.2.0, adding support for `null` as a valid option in `enum` types and properly calculation of utf8 string length instead of byte count\n [#13783](https://github.com/Kong/kong/issues/13783)\n\n- Bumped `ngx_wasm_module` to `9136e463a6f1d80755ce66c88c3ddecd0eb5e25d`\n [#12011](https://github.com/Kong/kong/issues/12011)\n\n\n- Bumped `Wasmtime` version to `26.0.0`\n [#12011](https://github.com/Kong/kong/issues/12011)\n\n- Bumped OpenSSL to 3.2.3 to fix unbounded memory growth with session handling in TLSv1.3 and other CVEs.\n [#13448](https://github.com/Kong/kong/issues/13448)\n\n - **Wasm**: Removed the experimental datakit Wasm filter\n [#14012](https://github.com/Kong/kong/issues/14012)\n\n#### Features\n##### CLI Command\n- Added the `kong drain` CLI command to make the `/status/ready` endpoint return a `503 Service Unavailable` response.\n [#13838](https://github.com/Kong/kong/issues/13838)\n##### Core\n\n- Added a new feature for Kong Manager that supports multiple domains, enabling dynamic cross-origin access for Admin API requests.\n [#13664](https://github.com/Kong/kong/issues/13664)\n\n- Added an ADA dependency: WHATWG-compliant and fast URL parser.\n [#13120](https://github.com/Kong/kong/issues/13120)\n\n- Addded a new LLM driver for interfacing with the Hugging Face inference API.\nThe driver supports both serverless and dedicated LLM instances hosted by\nHugging Face for conversational and text generation tasks.\n [#13484](https://github.com/Kong/kong/issues/13484)\n\n\n- Increased the priority order of the correlation id to 100001 from 1 so that the plugin can be used\nwith other plugins especially custom auth plugins.\n [#13581](https://github.com/Kong/kong/issues/13581)\n\n- Added a `tls.disable_http2_alpn()` function patch for disabling HTTP/2 ALPN when performing a TLS handshake.\n [#13709](https://github.com/Kong/kong/issues/13709)\n\n\n- Improved the output of the request debugger:\n  - The resolution of field `total_time` is now in microseconds.\n  - A new field, `total_time_without_upstream`,  shows the latency only introduced by Kong.\n [#13460](https://github.com/Kong/kong/issues/13460)\n- **proxy-wasm**: Added support for Wasm filters to be configured via the `/plugins` Admin API.\n [#13843](https://github.com/Kong/kong/issues/13843)\n##### PDK\n\n- Added `kong.service.request.clear_query_arg(name)` to PDK.\n [#13619](https://github.com/Kong/kong/issues/13619)\n\n- Array and Map type span attributes are now supported by the tracing PDK\n [#13818](https://github.com/Kong/kong/issues/13818)\n##### Plugin\n- **Prometheus**: Increased the upper limit of `KONG_LATENCY_BUCKETS` to 6000 to enhance latency tracking precision.\n [#13588](https://github.com/Kong/kong/issues/13588)\n\n- **ai-proxy**: Disabled HTTP/2 ALPN handshake for connections on routes configured with AI-proxy.\n [#13735](https://github.com/Kong/kong/issues/13735)\n\n- **Redirect**: Added a new plugin to redirect requests to another location.\n [#13900](https://github.com/Kong/kong/issues/13900)\n\n\n- **Prometheus**: Added support for Proxy-Wasm metrics.\n [#13681](https://github.com/Kong/kong/issues/13681)\n\n##### Admin API\n- **Admin API**: Added support for official YAML media-type (`application/yaml`) to the `/config` endpoint.\n [#13713](https://github.com/Kong/kong/issues/13713)\n##### Clustering\n\n- Added a remote procedure call (RPC) framework for Hybrid mode deployments.\n [#12320](https://github.com/Kong/kong/issues/12320)\n\n#### Fixes\n##### Core\n\n- Fixed an issue where the `ngx.balancer.recreate_request` API did not refresh the body buffer when `ngx.req.set_body_data` is used in the balancer phase.\n [#13882](https://github.com/Kong/kong/issues/13882)\n\n- Fix to always pass `ngx.ctx` to `log_init_worker_errors` as otherwise it may runtime crash.\n [#13731](https://github.com/Kong/kong/issues/13731)\n\n- Fixed an issue where the workspace ID was not included in the plugin config in the plugins iterator.\n [#13377](https://github.com/Kong/kong/issues/13377)\n\n- Fixed an issue where the workspace id was not included in the plugin config in the plugins iterator.\n [#13872](https://github.com/Kong/kong/issues/13872)\n\n- Fixed a 500 error triggered by unhandled nil fields during schema validation.\n [#13861](https://github.com/Kong/kong/issues/13861)\n\n- **Vault**: Fixed an issue where array-like configuration fields cannot contain vault reference.\n [#13953](https://github.com/Kong/kong/issues/13953)\n\n- **Vault**: Fixed an issue where updating a vault entity in a non-default workspace wouldn't take effect.\n [#13610](https://github.com/Kong/kong/issues/13610)\n\n- **Vault**: Fixed an issue where vault reference in kong configuration cannot be dereferenced when both http and stream subsystems are enabled.\n [#13953](https://github.com/Kong/kong/issues/13953)\n\n- **proxy-wasm:** Added a check that prevents Kong from starting when the\ndatabase contains invalid Wasm filters.\n [#13764](https://github.com/Kong/kong/issues/13764)\n\n- Fixed an issue where the `kong.request.enable_buffering` couldn't be used when the downstream used HTTP/2.\n [#13614](https://github.com/Kong/kong/issues/13614)\n##### PDK\n\n- Lined up the `kong.log.inspect` function to log at `notice` level as documented\n [#13642](https://github.com/Kong/kong/issues/13642)\n\n- Fix error message for invalid retries variable\n [#13605](https://github.com/Kong/kong/issues/13605)\n\n##### Plugin\n\n- **ai-proxy**: Fixed a bug where tools (function) calls to Anthropic would return empty results.\n [#13760](https://github.com/Kong/kong/issues/13760)\n\n\n- **ai-proxy**: Fixed a bug where tools (function) calls to Bedrock would return empty results.\n [#13760](https://github.com/Kong/kong/issues/13760)\n\n\n- **ai-proxy**: Fixed a bug where Bedrock Guardrail config was ignored.\n [#13760](https://github.com/Kong/kong/issues/13760)\n\n\n- **ai-proxy**: Fixed a bug where tools (function) calls to Cohere would return empty results.\n [#13760](https://github.com/Kong/kong/issues/13760)\n\n\n- **ai-proxy**: Fixed a bug where Gemini provider would return an error if content safety failed in AI Proxy.\n [#13760](https://github.com/Kong/kong/issues/13760)\n\n\n- **ai-proxy**: Fixed a bug where tools (function) calls to Gemini (or via Vertex) would return empty results.\n [#13760](https://github.com/Kong/kong/issues/13760)\n\n\n- **ai-proxy**: Fixed an issue where AI Transformer plugins always returned a 404 error when using 'Google One' Gemini subscriptions.\n [#13703](https://github.com/Kong/kong/issues/13703)\n\n\n- **ai-transformers**: Fixed a bug where the correct LLM error message was not propagated to the caller.\n [#13703](https://github.com/Kong/kong/issues/13703)\n\n- **AI-Proxy**: Fixed an issue where multi-modal requests were blocked on the Azure AI provider.\n [#13702](https://github.com/Kong/kong/issues/13702)\n\n\n- Fixed an bug that AI semantic cache can't use request provided models\n [#13627](https://github.com/Kong/kong/issues/13627)\n\n- **AWS-Lambda**: Fixed an issue in proxy integration mode that caused an internal server error when the `multiValueHeaders` was null.\n [#13533](https://github.com/Kong/kong/issues/13533)\n\n- **jwt**: ensure `rsa_public_key` isn't base64-decoded.\n [#13717](https://github.com/Kong/kong/issues/13717)\n\n- **key-auth**: Fixed an issue with the order of query arguments, ensuring that arguments retain order when hiding the credentials.\n [#13619](https://github.com/Kong/kong/issues/13619)\n\n- **rate-limiting**: Fixed a bug where the returned values from `get_redis_connection()` were incorrect.\n [#13613](https://github.com/Kong/kong/issues/13613)\n\n- **rate-limiting**: Fixed an issue that caused an HTTP 500 error when `hide_client_headers` was set to `true` and the request exceeded the rate limit.\n [#13722](https://github.com/Kong/kong/issues/13722)\n##### Admin API\n\n- Fix for querying admin API entities with empty tags\n [#13723](https://github.com/Kong/kong/issues/13723)\n\n- Fixed an issue where nested parameters couldn't be parsed correctly when using `form-urlencoded` requests.\n [#13668](https://github.com/Kong/kong/issues/13668)\n##### Clustering\n\n- **Clustering**: Adjusted error log levels for control plane connections.\n [#13863](https://github.com/Kong/kong/issues/13863)\n##### Default\n\n- **Loggly**: Fixed an issue where `/bin/hostname` missing caused an error warning on startup.\n [#13788](https://github.com/Kong/kong/issues/13788)\n\n### Kong-Manager\n\n#### Fixes\n##### Default\n\n- Kong Manager will now hide the scope change field when creating/editing a scoped plugin from another entity.\n [#297](https://github.com/Kong/kong-manager/issues/297)\n\n\n- Improved the user experience in Kong Manager by fixing various UI-related issues.\n [#277](https://github.com/Kong/kong-manager/issues/277) [#283](https://github.com/Kong/kong-manager/issues/283) [#286](https://github.com/Kong/kong-manager/issues/286) [#287](https://github.com/Kong/kong-manager/issues/287) [#288](https://github.com/Kong/kong-manager/issues/288) [#291](https://github.com/Kong/kong-manager/issues/291) [#293](https://github.com/Kong/kong-manager/issues/293) [#295](https://github.com/Kong/kong-manager/issues/295) [#298](https://github.com/Kong/kong-manager/issues/298) [#302](https://github.com/Kong/kong-manager/issues/302) [#304](https://github.com/Kong/kong-manager/issues/304) [#306](https://github.com/Kong/kong-manager/issues/306) [#309](https://github.com/Kong/kong-manager/issues/309) [#317](https://github.com/Kong/kong-manager/issues/317) [#319](https://github.com/Kong/kong-manager/issues/319) [#322](https://github.com/Kong/kong-manager/issues/322) [#325](https://github.com/Kong/kong-manager/issues/325) [#329](https://github.com/Kong/kong-manager/issues/329) [#330](https://github.com/Kong/kong-manager/issues/330)\n\n\n- Unified the redirection logic in Kong Manager upon entity operations.\n [#289](https://github.com/Kong/kong-manager/issues/289)\n\n\n## 3.8.1\n\n## Kong\n\n#### Dependencies\n##### Core\n\n- Bumped lua-kong-nginx-module from 0.11.0 to 0.11.1 to fix an issue where the upstream cert chain wasn't properly set.\n [#12752](https://github.com/Kong/kong/issues/12752)\n##### Default\n\n- Bumped lua-resty-aws to 1.5.4, to fix a bug inside region prefix generating\n [#12846](https://github.com/Kong/kong/issues/12846)\n\n#### Features\n##### Plugin\n\n- **Prometheus**: Bumped KONG_LATENCY_BUCKETS bucket's maximal capacity to 6000\n [#13797](https://github.com/Kong/kong/issues/13797)\n\n#### Fixes\n##### Core\n\n- **Vault**: Fixed an issue where updating a vault entity in a non-default workspace will not take effect.\n [#13670](https://github.com/Kong/kong/issues/13670)\n##### Plugin\n\n- **ai-proxy**: Fixed an issue where AI Transformer plugins always returned a 404 error when using 'Google One' Gemini subscriptions.\n [#13753](https://github.com/Kong/kong/issues/13753)\n\n\n- **ai-transformers**: Fixed a bug where the correct LLM error message was not propagated to the caller.\n [#13753](https://github.com/Kong/kong/issues/13753)\n\n\n- Fixed an bug that AI semantic cache can't use request provided models\n [#13633](https://github.com/Kong/kong/issues/13633)\n\n\n- **Rate-Limiting**: Fixed an issue that caused a 500 error when using the rate-limiting plugin. When the `hide_client_headers` option is set to true and a 429 error is triggered,\nit should return a 429 error code instead of a 500 error code.\n [#13759](https://github.com/Kong/kong/issues/13759)\n##### Admin API\n\n- Fixed an issue where sending `tags= `(empty parameter) resulted in 500 error. Now, Kong returns a 400 error, as empty explicit tags are not allowed.\n [#13813](https://github.com/Kong/kong/issues/13813)\n\n## 3.8.0\n\n### Kong\n\n\n#### Performance\n##### Performance\n\n- Fixed an inefficiency issue in the Luajit hashing algorithm\n [#13240](https://github.com/Kong/kong/issues/13240)\n\n##### Core\n\n- Removed unnecessary DNS client initialization\n [#13479](https://github.com/Kong/kong/issues/13479)\n\n\n- Improved latency performance when gzipping/gunzipping large data (such as CP/DP config data).\n [#13338](https://github.com/Kong/kong/issues/13338)\n\n\n\n#### Deprecations\n##### Default\n\n- Debian 10, CentOS 7, and RHEL 7 reached their End of Life (EOL) dates on June 30, 2024. As of version 3.8.0.0 onward, Kong is not building installation packages or Docker images for these operating systems. Kong is no longer providing official support for any Kong version running on these systems.\n [#13468](https://github.com/Kong/kong/issues/13468)\n\n\n\n\n\n#### Dependencies\n##### Core\n\n- Bumped lua-resty-acme to 0.15.0 to support username/password auth with redis.\n [#12909](https://github.com/Kong/kong/issues/12909)\n\n\n- Bumped lua-resty-aws to 1.5.3 to fix a bug related to STS regional endpoint.\n [#12846](https://github.com/Kong/kong/issues/12846)\n\n\n- Bumped lua-resty-healthcheck from 3.0.1 to 3.1.0 to fix an issue that was causing high memory usage\n [#13038](https://github.com/Kong/kong/issues/13038)\n\n\n- Bumped lua-resty-lmdb to 1.4.3 to get fixes from the upstream (lmdb 0.9.33), which resolved numerous race conditions and fixed a cursor issue.\n [#12786](https://github.com/Kong/kong/issues/12786)\n\n\n- Bumped lua-resty-openssl to 1.5.1 to fix some issues including a potential use-after-free issue.\n [#12665](https://github.com/Kong/kong/issues/12665)\n\n\n- Bumped OpenResty to 1.25.3.2 to improve the performance of the LuaJIT hash computation.\n [#12327](https://github.com/Kong/kong/issues/12327)\n\n\n- Bumped PCRE2 to 10.44 to fix some bugs and tidy-up the release (nothing important)\n [#12366](https://github.com/Kong/kong/issues/12366)\n\n\n\n\n- Introduced a yieldable JSON library `lua-resty-simdjson`,\nwhich would improve the latency significantly.\n [#13421](https://github.com/Kong/kong/issues/13421)\n\n##### Default\n\n- Bumped lua-protobuf 0.5.2\n [#12834](https://github.com/Kong/kong/issues/12834)\n\n\n- Bumped LuaRocks from 3.11.0 to 3.11.1\n [#12662](https://github.com/Kong/kong/issues/12662)\n\n\n- Bumped `ngx_wasm_module` to `96b4e27e10c63b07ed40ea88a91c22f23981db35`\n [#12011](https://github.com/Kong/kong/issues/12011)\n\n\n- Bumped `Wasmtime` version to `23.0.2`\n [#13567](https://github.com/Kong/kong/pull/13567)\n\n\n\n- Made the RPM package relocatable with the default prefix set to `/`.\n [#13468](https://github.com/Kong/kong/issues/13468)\n\n\n#### Features\n##### Configuration\n\n- Configure Wasmtime module cache when Wasm is enabled\n  [#12930](https://github.com/Kong/kong/issues/12930)\n\n##### Core\n\n- **prometheus**: Added `ai_requests_total`, `ai_cost_total` and `ai_tokens_total` metrics in the Prometheus plugin to start counting AI usage.\n [#13148](https://github.com/Kong/kong/issues/13148)\n\n\n- Added a new configuration `concurrency_limit`(integer, default to 1) for Queue to specify the number of delivery timers.\nNote that setting `concurrency_limit` to `-1` means no limit at all, and each HTTP log entry would create an individual timer for sending.\n [#13332](https://github.com/Kong/kong/issues/13332)\n\n\n- Append gateway info to upstream `Via` header like `1.1 kong/3.8.0`, and optionally to\nresponse `Via` header if it is present in the `headers` config of \"kong.conf\", like `2 kong/3.8.0`,\naccording to `RFC7230` and `RFC9110`.\n [#12733](https://github.com/Kong/kong/issues/12733)\n\n\n- Starting from this version, a new DNS client library has been implemented and added into Kong, which is disabled by default. The new DNS client library has the following changes - Introduced global caching for DNS records across workers, significantly reducing the query load on DNS servers. - Introduced observable statistics for the new DNS client, and a new Status API `/status/dns` to retrieve them. - Simplified the logic and make it more standardized\n [#12305](https://github.com/Kong/kong/issues/12305)\n\n##### PDK\n\n- Added `0` to support unlimited body size. When parameter `max_allowed_file_size` is `0`, `get_raw_body` will return the entire body, but the size of this body will still be limited by Nginx's `client_max_body_size`.\n [#13431](https://github.com/Kong/kong/issues/13431)\n\n\n- Extend kong.request.get_body and kong.request.get_raw_body to read from buffered file\n [#13158](https://github.com/Kong/kong/issues/13158)\n\n- Added a new PDK module `kong.telemetry` and function: `kong.telemetry.log`\nto generate log entries to be reported via the OpenTelemetry plugin.\n [#13329](https://github.com/Kong/kong/issues/13329)\n\n##### Plugin\n\n- **acl:** Added a new config `always_use_authenticated_groups` to support using authenticated groups even when an authenticated consumer already exists.\n [#13184](https://github.com/Kong/kong/issues/13184)\n\n\n- AI plugins: retrieved latency data and pushed it to logs and metrics.\n [#13428](https://github.com/Kong/kong/issues/13428)\n\n- Allow AI plugin to read request from buffered file\n [#13158](https://github.com/Kong/kong/pull/13158)\n\n\n- **AI-proxy-plugin**: Add `allow_override` option to allow overriding the upstream model auth parameter or header from the caller's request.\n [#13158](https://github.com/Kong/kong/issues/13158)\n\n\n- **AI-proxy-plugin**: Replace the lib and use cycle_aware_deep_copy for the `request_table` object.\n [#13582](https://github.com/Kong/kong/issues/13582)\n\n\n- Kong AI Gateway (AI Proxy and associated plugin family) now supports\nall AWS Bedrock \"Converse API\" models.\n [#12948](https://github.com/Kong/kong/issues/12948)\n\n\n- Kong AI Gateway (AI Proxy and associated plugin family) now supports\nthe Google Gemini \"chat\" (generateContent) interface.\n [#12948](https://github.com/Kong/kong/issues/12948)\n\n\n- **ai-proxy**: Allowed mistral provider to use mistral.ai managed service by omitting upstream_url\n [#13481](https://github.com/Kong/kong/issues/13481)\n\n- **ai-proxy**: Added a new response header X-Kong-LLM-Model that displays the name of the language model used in the AI-Proxy plugin.\n [#13472](https://github.com/Kong/kong/issues/13472)\n\n- **AI-Prompt-Guard**: add `match_all_roles` option to allow match all roles in addition to `user`.\n [#13183](https://github.com/Kong/kong/issues/13183)\n\n- \"**AWS-Lambda**: Added support for a configurable STS endpoint with the new configuration field `aws_sts_endpoint_url`.\n [#13388](https://github.com/Kong/kong/issues/13388)\n\n\n- **AWS-Lambda**: A new configuration field `empty_arrays_mode` is now added to control whether Kong should send `[]` empty arrays (returned by Lambda function) as `[]` empty arrays or `{}` empty objects in JSON responses.`\n [#13084](https://github.com/Kong/kong/issues/13084)\n\n\n\n\n- Added support for json_body rename in response-transformer plugin\n [#13131](https://github.com/Kong/kong/issues/13131)\n\n\n- **OpenTelemetry:** Added support for OpenTelemetry formatted logs.\n [#13291](https://github.com/Kong/kong/issues/13291)\n\n\n- **standard-webhooks**: Added standard webhooks plugin.\n [#12757](https://github.com/Kong/kong/issues/12757)\n\n- **Request-Transformer**: Fixed an issue where renamed query parameters, url-encoded body parameters, and json body parameters were not handled properly when target name is the same as the source name in the request.\n [#13358](https://github.com/Kong/kong/issues/13358)\n\n##### Admin API\n\n- Added support for brackets syntax for map fields configuration via the Admin API\n [#13313](https://github.com/Kong/kong/issues/13313)\n\n\n#### Fixes\n##### CLI Command\n\n- Fixed an issue where some debug level error logs were not being displayed by the CLI.\n [#13143](https://github.com/Kong/kong/issues/13143)\n\n##### Configuration\n\n- Re-enabled the Lua DNS resolver from proxy-wasm by default.\n [#13424](https://github.com/Kong/kong/issues/13424)\n\n##### Core\n\n- Fixed an issue where luarocks-admin was not available in /usr/local/bin.\n [#13372](https://github.com/Kong/kong/issues/13372)\n\n\n- Fixed an issue where 'read' was not always passed to Postgres read-only database operations.\n [#13530](https://github.com/Kong/kong/issues/13530)\n\n\n- Deprecated shorthand fields don't take precedence over replacement fields when both are specified.\n [#13486](https://github.com/Kong/kong/issues/13486)\n\n\n- Fixed an issue where `lua-nginx-module` context was cleared when `ngx.send_header()` triggered `filter_finalize` [openresty/lua-nginx-module#2323](https://github.com/openresty/lua-nginx-module/pull/2323).\n [#13316](https://github.com/Kong/kong/issues/13316)\n\n\n- Changed the way deprecated shorthand fields are used with new fields.\nIf the new field contains null it allows for deprecated field to overwrite it if both are present in the request.\n [#13592](https://github.com/Kong/kong/issues/13592)\n\n\n- Fixed an issue where unnecessary uninitialized variable error log is reported when 400 bad requests were received.\n [#13201](https://github.com/Kong/kong/issues/13201)\n\n\n- Fixed an issue where the URI captures are unavailable when the first capture group is absent.\n [#13024](https://github.com/Kong/kong/issues/13024)\n\n\n- Fixed an issue where the priority field can be set in a traditional mode route\nWhen 'router_flavor' is configured as 'expressions'.\n [#13142](https://github.com/Kong/kong/issues/13142)\n\n\n- Fixed an issue where setting `tls_verify` to `false` didn't override the global level `proxy_ssl_verify`.\n [#13470](https://github.com/Kong/kong/issues/13470)\n\n\n- Fixed an issue where the sni cache isn't invalidated when a sni is updated.\n [#13165](https://github.com/Kong/kong/issues/13165)\n\n\n- The kong.logrotate configuration file will no longer be overwritten during upgrade.\nWhen upgrading, set the environment variable `DEBIAN_FRONTEND=noninteractive` on Debian/Ubuntu to avoid any interactive prompts and enable fully automatic upgrades.\n [#13348](https://github.com/Kong/kong/issues/13348)\n\n\n- Fixed an issue where the Vault secret cache got refreshed during `resurrect_ttl` time and could not be fetched by other workers.\n [#13561](https://github.com/Kong/kong/issues/13561)\n\n\n- Error logs during Vault secret rotation are now logged at the `notice` level instead of `warn`.\n [#13540](https://github.com/Kong/kong/issues/13540)\n\n\n- Fix a bug that the `host_header` attribute of upstream entity can not be set correctly in requests to upstream as Host header when retries to upstream happen.\n [#13135](https://github.com/Kong/kong/issues/13135)\n\n\n- Moved internal Unix sockets to a subdirectory (`sockets`) of the Kong prefix.\n [#13409](https://github.com/Kong/kong/issues/13409)\n\n\n- Changed the behaviour of shorthand fields that are used to describe deprecated fields. If\nboth fields are sent in the request and their values mismatch - the request will be rejected.\n [#13594](https://github.com/Kong/kong/issues/13594)\n\n\n- Reverted DNS client to original behaviour of ignoring ADDITIONAL SECTION in DNS responses.\n [#13278](https://github.com/Kong/kong/issues/13278)\n\n\n- Shortened names of internal Unix sockets to avoid exceeding the socket name limit.\n [#13571](https://github.com/Kong/kong/issues/13571)\n\n##### PDK\n\n- **PDK**: Fixed a bug that log serializer will log `upstream_status` as nil in the requests that contains subrequest\n [#12953](https://github.com/Kong/kong/issues/12953)\n\n\n- **Vault**: Reference ending with slash when parsed should not return a key.\n [#13538](https://github.com/Kong/kong/issues/13538)\n\n\n- Fixed an issue that pdk.log.serialize() will throw an error when JSON entity set by serialize_value contains json.null\n [#13376](https://github.com/Kong/kong/issues/13376)\n\n##### Plugin\n\n- **AI-proxy-plugin**: Fixed a bug where certain Azure models would return partial tokens/words\nwhen in response-streaming mode.\n [#13000](https://github.com/Kong/kong/issues/13000)\n\n\n- **AI-Transformer-Plugins**: Fixed a bug where cloud identity authentication\nwas not used in `ai-request-transformer` and `ai-response-transformer` plugins.\n [#13487](https://github.com/Kong/kong/issues/13487)\n\n\n- **AI-proxy-plugin**: Fixed a bug where Cohere and Anthropic providers don't read the `model` parameter properly\nfrom the caller's request body.\n [#13000](https://github.com/Kong/kong/issues/13000)\n\n\n- **AI-proxy-plugin**: Fixed a bug where using \"OpenAI Function\" inference requests would log a\nrequest error, and then hang until timeout.\n [#13000](https://github.com/Kong/kong/issues/13000)\n\n\n- **AI-proxy-plugin**: Fixed a bug where AI Proxy would still allow callers to specify their own model,\nignoring the plugin-configured model name.\n [#13000](https://github.com/Kong/kong/issues/13000)\n\n\n- **AI-proxy-plugin**: Fixed a bug where AI Proxy would not take precedence of the\nplugin's configured model tuning options, over those in the user's LLM request.\n [#13000](https://github.com/Kong/kong/issues/13000)\n\n\n- **AI-proxy-plugin**: Fixed a bug where setting OpenAI SDK model parameter \"null\" caused analytics\nto not be written to the logging plugin(s).\n [#13000](https://github.com/Kong/kong/issues/13000)\n\n\n- **ACME**: Fixed an issue of DP reporting that deprecated config fields are used when configuration from CP is pushed\n [#13069](https://github.com/Kong/kong/issues/13069)\n\n\n- **ACME**: Fixed an issue where username and password were not accepted as valid authentication methods.\n [#13496](https://github.com/Kong/kong/issues/13496)\n\n\n- **AI-Proxy**: Fixed issue when response is gzipped even if client doesn't accept.\n [#13155](https://github.com/Kong/kong/issues/13155)\n\n- **Prometheus**: Fixed an issue where CP/DP compatibility check was missing for the new configuration field `ai_metrics`.\n [#13417](https://github.com/Kong/kong/issues/13417)\n\n\n- Fixed certain AI plugins cannot be applied per consumer or per service.\n [#13209](https://github.com/Kong/kong/issues/13209)\n\n- **AI-Prompt-Guard**: Fixed an issue when `allow_all_conversation_history` is set to false, the first user request is selected instead of the last one.\n [#13183](https://github.com/Kong/kong/issues/13183)\n\n- **AI-Proxy**: Resolved a bug where the object constructor would set data on the class instead of the instance\n [#13028](https://github.com/Kong/kong/issues/13028)\n\n- **AWS-Lambda**: Fixed an issue that the plugin does not work with multiValueHeaders defined in proxy integration and legacy empty_arrays_mode.\n [#12971](https://github.com/Kong/kong/issues/12971)\n\n- **AWS-Lambda**: Fixed an issue that the `version` field is not set in the request payload when `awsgateway_compatible` is enabled.\n [#13018](https://github.com/Kong/kong/issues/13018)\n\n\n- **correlation-id**: Fixed an issue where the plugin would not work if we explicitly set the `generator` to `null`.\n [#13439](https://github.com/Kong/kong/issues/13439)\n\n\n- **CORS**: Fixed an issue where the `Access-Control-Allow-Origin` header was not sent when `conf.origins` has multiple entries but includes `*`.\n [#13334](https://github.com/Kong/kong/issues/13334)\n\n\n- **grpc-gateway**: When there is a JSON decoding error, respond with status 400 and error information in the body instead of status 500.\n [#12971](https://github.com/Kong/kong/issues/12971)\n\n\n- **HTTP-Log**: Fix an issue where the plugin doesn't include port information in the HTTP host header when sending requests to the log server.\n [#13116](https://github.com/Kong/kong/issues/13116)\n\n- \"**AI Plugins**: Fixed an issue for multi-modal inputs are not properly validated and calculated.\n [#13445](https://github.com/Kong/kong/issues/13445)\n\n\n- **OpenTelemetry:** Fixed an issue where migration fails when upgrading from below version 3.3 to 3.7.\n [#13391](https://github.com/Kong/kong/issues/13391)\n\n\n- **OpenTelemetry / Zipkin**: remove redundant deprecation warnings\n [#13220](https://github.com/Kong/kong/issues/13220)\n\n\n- **Basic-Auth**: Fix an issue of realm field not recognized for older kong versions (before 3.6)\n [#13042](https://github.com/Kong/kong/issues/13042)\n\n\n- **Key-Auth**: Fix an issue of realm field not recognized for older kong versions (before 3.7)\n [#13042](https://github.com/Kong/kong/issues/13042)\n\n\n- **Request Size Limiting**: Fixed an issue where the body size doesn't get checked when the request body is buffered to a temporary file.\n [#13303](https://github.com/Kong/kong/issues/13303)\n\n\n- **Response-RateLimiting**: Fixed an issue of DP reporting that deprecated config fields are used when configuration from CP is pushed\n [#13069](https://github.com/Kong/kong/issues/13069)\n\n\n- **Rate-Limiting**: Fixed an issue of DP reporting that deprecated config fields are used when configuration from CP is pushed\n [#13069](https://github.com/Kong/kong/issues/13069)\n\n\n- **OpenTelemetry:** Improved accuracy of sampling decisions.\n [#13275](https://github.com/Kong/kong/issues/13275)\n\n\n- **hmac-auth**: Add WWW-Authenticate headers to 401 responses.\n [#11791](https://github.com/Kong/kong/issues/11791)\n\n\n- **Prometheus**: Improved error logging when having inconsistent labels count.\n [#13020](https://github.com/Kong/kong/issues/13020)\n\n\n- **jwt**: Add WWW-Authenticate headers to 401 responses.\n [#11792](https://github.com/Kong/kong/issues/11792)\n\n\n- **ldap-auth**: Add WWW-Authenticate headers to all 401 responses.\n [#11820](https://github.com/Kong/kong/issues/11820)\n\n\n- **OAuth2**: Add WWW-Authenticate headers to all 401 responses and realm option.\n [#11833](https://github.com/Kong/kong/issues/11833)\n\n\n- **proxy-cache**: Fixed an issue where the Age header was not being updated correctly when serving cached responses.\n [#13387](https://github.com/Kong/kong/issues/13387)\n\n\n- Fixed an bug that AI semantic cache can't use request provided models\n [#13633](https://github.com/Kong/kong/issues/13633)\n\n##### Admin API\n\n- Fixed an issue where validation of the certificate schema failed if the `snis` field was present in the request body.\n [#13357](https://github.com/Kong/kong/issues/13357)\n\n##### Clustering\n\n- Fixed an issue where hybrid mode not working if the forward proxy password contains special character(#). Note that the `proxy_server` configuration parameter still needs to be url-encoded.\n [#13457](https://github.com/Kong/kong/issues/13457)\n\n##### Default\n\n- **AI-proxy**: A configuration validation is added to prevent from enabling `log_statistics` upon\nproviders not supporting statistics. Accordingly, the default of `log_statistics` is changed from\n`true` to `false`, and a database migration is added as well for disabling `log_statistics` if it\nhas already been enabled upon unsupported providers.\n [#12860](https://github.com/Kong/kong/issues/12860)\n\n### Kong-Manager\n\n\n\n\n\n\n#### Features\n##### Default\n\n- Improved accessibility in Kong Manager.\n [#13522](https://github.com/Kong/kong-manager/issues/13522)\n\n\n- Enhanced entity lists so that you can resize or hide list columns.\n [#13522](https://github.com/Kong/kong-manager/issues/13522)\n\n\n- Added an SNIs field to the certificate form.\n [#264](https://github.com/Kong/kong-manager/issues/264)\n\n\n#### Fixes\n##### Default\n\n- Improved the user experience in Kong Manager by fixing various UI-related issues.\n [#232](https://github.com/Kong/kong-manager/issues/232) [#233](https://github.com/Kong/kong-manager/issues/233) [#234](https://github.com/Kong/kong-manager/issues/234) [#237](https://github.com/Kong/kong-manager/issues/237) [#238](https://github.com/Kong/kong-manager/issues/238) [#240](https://github.com/Kong/kong-manager/issues/240) [#244](https://github.com/Kong/kong-manager/issues/244) [#250](https://github.com/Kong/kong-manager/issues/250) [#252](https://github.com/Kong/kong-manager/issues/252) [#255](https://github.com/Kong/kong-manager/issues/255) [#257](https://github.com/Kong/kong-manager/issues/257) [#263](https://github.com/Kong/kong-manager/issues/263) [#264](https://github.com/Kong/kong-manager/issues/264) [#267](https://github.com/Kong/kong-manager/issues/267) [#272](https://github.com/Kong/kong-manager/issues/272)\n\n\n\n\n## 3.7.1\n### Kong\n\n#### Performance\n\n##### Performance\n\n - Fixed an inefficiency issue in the Luajit hashing algorithm\n [#13240](https://github.com/Kong/kong/issues/13240)\n\n## 3.7.0\n### Kong\n\n\n#### Performance\n##### Performance\n\n- Improved proxy performance by refactoring internal hooking mechanism.\n [#12784](https://github.com/Kong/kong/issues/12784)\n\n- Sped up the router matching when the `router_flavor` is `traditional_compatible` or `expressions`.\n [#12467](https://github.com/Kong/kong/issues/12467)\n##### Plugin\n\n- **Opentelemetry**: Increased queue max batch size to 200.\n [#12488](https://github.com/Kong/kong/issues/12488)\n\n#### Breaking Changes\n##### Plugin\n\n- **AI Proxy**: To support the new messages API of `Anthropic`, the upstream path of the `Anthropic` for `llm/v1/chat` route type has changed from `/v1/complete` to `/v1/messages`.\n [#12699](https://github.com/Kong/kong/issues/12699)\n\n\n#### Dependencies\n##### Core\n\n- Bumped atc-router from v1.6.0 to v1.6.2\n [#12231](https://github.com/Kong/kong/issues/12231)\n\n- Bumped libexpat to 2.6.2\n [#12910](https://github.com/Kong/kong/issues/12910)\n\n- Bumped lua-kong-nginx-module from 0.8.0 to 0.11.0\n [#12752](https://github.com/Kong/kong/issues/12752)\n\n- Bumped lua-protobuf to 0.5.1\n [#12834](https://github.com/Kong/kong/issues/12834)\n\n\n- Bumped lua-resty-acme to 0.13.0\n [#12909](https://github.com/Kong/kong/issues/12909)\n\n- Bumped lua-resty-aws from 1.3.6 to 1.4.1\n [#12846](https://github.com/Kong/kong/issues/12846)\n\n- Bumped lua-resty-lmdb from 1.4.1 to 1.4.2\n [#12786](https://github.com/Kong/kong/issues/12786)\n\n\n- Bumped lua-resty-openssl from 1.2.0 to 1.3.1\n [#12665](https://github.com/Kong/kong/issues/12665)\n\n\n- Bumped lua-resty-timer-ng to 0.2.7\n [#12756](https://github.com/Kong/kong/issues/12756)\n\n- Bumped PCRE from the legacy libpcre 8.45 to libpcre2 10.43\n [#12366](https://github.com/Kong/kong/issues/12366)\n\n- Bumped penlight to 1.14.0\n [#12862](https://github.com/Kong/kong/issues/12862)\n\n##### Default\n\n- Added package `tzdata` to DEB Docker image for convenient timezone setting.\n [#12609](https://github.com/Kong/kong/issues/12609)\n\n- Bumped lua-resty-http to 0.17.2.\n [#12908](https://github.com/Kong/kong/issues/12908)\n\n\n- Bumped LuaRocks from 3.9.2 to 3.11.0\n [#12662](https://github.com/Kong/kong/issues/12662)\n\n- Bumped `ngx_wasm_module` to `91d447ffd0e9bb08f11cc69d1aa9128ec36b4526`\n [#12011](https://github.com/Kong/kong/issues/12011)\n\n\n- Bumped `V8` version to `12.0.267.17`\n [#12704](https://github.com/Kong/kong/issues/12704)\n\n\n- Bumped `Wasmtime` version to `19.0.0`\n [#12011](https://github.com/Kong/kong/issues/12011)\n\n\n- Improved the robustness of lua-cjson when handling unexpected input.\n [#12904](https://github.com/Kong/kong/issues/12904)\n\n#### Features\n##### Configuration\n\n- TLSv1.1 and lower versions are disabled by default in OpenSSL 3.x.\n [#12420](https://github.com/Kong/kong/issues/12420)\n\n- Introduced `nginx_wasm_main_shm_kv` configuration parameter, which enables\nWasm filters to use the Proxy-Wasm operations `get_shared_data` and\n`set_shared_data` without namespaced keys.\n [#12663](https://github.com/Kong/kong/issues/12663)\n\n\n- **Schema**: Added a deprecation field attribute to identify deprecated fields\n [#12686](https://github.com/Kong/kong/issues/12686)\n\n- Added the `wasm_filters` configuration parameter for enabling individual filters\n [#12843](https://github.com/Kong/kong/issues/12843)\n##### Core\n\n- Added `events:ai:response_tokens`, `events:ai:prompt_tokens` and `events:ai:requests` to the anonymous report to start counting AI usage\n [#12924](https://github.com/Kong/kong/issues/12924)\n\n\n- Improved config handling when the CP runs with the router set to the `expressions` flavor:\n  - If mixed config is detected and a lower DP is attached to the CP, no config will be sent at all\n  - If the expression is invalid on the CP, no config will be sent at all\n  - If the expression is invalid on a lower DP, it will be sent to the DP and DP validation will catch this and communicate back to the CP (this could result in partial config application)\n [#12967](https://github.com/Kong/kong/issues/12967)\n\n- The route entity now supports the following fields when the\n`router_flavor` is `expressions`: `methods`, `hosts`, `paths`, `headers`,\n`snis`, `sources`, `destinations`, and `regex_priority`.\nThe meaning of these fields are consistent with the traditional route entity.\n [#12667](https://github.com/Kong/kong/issues/12667)\n##### PDK\n\n- Added the `latencies.receive` property to the log serializer\n [#12730](https://github.com/Kong/kong/issues/12730)\n##### Plugin\n\n- AI Proxy now reads most prompt tuning parameters from the client,\nwhile the plugin config parameters under `model_options` are now just defaults.\nThis fixes support for using the respective provider's native SDK.\n [#12903](https://github.com/Kong/kong/issues/12903)\n\n- AI Proxy now has a `preserve` option for `route_type`, where the requests and responses\nare passed directly to the upstream LLM. This is to enable compatibility with any\nand all models and SDKs that may be used when calling the AI services.\n [#12903](https://github.com/Kong/kong/issues/12903)\n\n- **Prometheus**: Added workspace label to Prometheus plugin metrics.\n [#12836](https://github.com/Kong/kong/issues/12836)\n\n- **AI Proxy**: Added support for streaming event-by-event responses back to the client on supported providers.\n [#12792](https://github.com/Kong/kong/issues/12792)\n\n- **AI Prompt Guard**: Increased the maximum length of regex expressions to 500 for the allow and deny parameters.\n [#12731](https://github.com/Kong/kong/issues/12731)\n\n- Addded support for EdDSA algorithms in JWT plugin\n [#12726](https://github.com/Kong/kong/issues/12726)\n\n\n- Added support for ES512, PS256, PS384, PS512 algorithms in JWT plugin\n [#12638](https://github.com/Kong/kong/issues/12638)\n\n- **OpenTelemetry, Zipkin**: The propagation module has been reworked. The new\noptions allow better control over the configuration of tracing headers propagation.\n [#12670](https://github.com/Kong/kong/issues/12670)\n##### Default\n\n- Added support for debugging with EmmyLuaDebugger.  This feature is a\ntech preview and not officially supported by Kong Inc. for now.\n [#12899](https://github.com/Kong/kong/issues/12899)\n\n#### Fixes\n##### CLI Command\n\n- Fixed an issue where the `pg_timeout` was overridden to `60s` even if `--db-timeout`\nwas not explicitly passed in CLI arguments.\n [#12981](https://github.com/Kong/kong/issues/12981)\n##### Configuration\n\n- Fixed the default value in kong.conf.default documentation from 1000 to 10000\nfor the `upstream_keepalive_max_requests` option.\n [#12643](https://github.com/Kong/kong/issues/12643)\n\n- Fixed an issue where an external plugin (Go, Javascript, or Python) would fail to\napply a change to the plugin config via the Admin API.\n [#12718](https://github.com/Kong/kong/issues/12718)\n\n- Disabled usage of the Lua DNS resolver from proxy-wasm by default.\n [#12825](https://github.com/Kong/kong/issues/12825)\n\n- Set security level of gRPC's TLS to 0 when `ssl_cipher_suite` is set to `old`.\n [#12613](https://github.com/Kong/kong/issues/12613)\n##### Core\n\n- Fixed an issue where `POST /config?flatten_errors=1` could not return a proper response if the input included duplicate upstream targets.\n [#12797](https://github.com/Kong/kong/issues/12797)\n\n- **DNS Client**: Ignore a non-positive values on resolv.conf for options timeout, and use a default value of 2 seconds instead.\n [#12640](https://github.com/Kong/kong/issues/12640)\n\n- Updated the file permission of `kong.logrotate` to 644.\n [#12629](https://github.com/Kong/kong/issues/12629)\n\n- Fixed a problem on hybrid mode DPs, where a certificate entity configured with a vault reference may not get refreshed on time.\n [#12868](https://github.com/Kong/kong/issues/12868)\n\n- Fixed the missing router section for the output of the request-debugging.\n [#12234](https://github.com/Kong/kong/issues/12234)\n\n- Fixed an issue in the internal caching logic where mutexes could get never unlocked.\n [#12743](https://github.com/Kong/kong/issues/12743)\n\n\n- Fixed an issue where the router didn't work correctly\nwhen the route's configuration changed.\n [#12654](https://github.com/Kong/kong/issues/12654)\n\n- Fixed an issue where SNI-based routing didn't work\nusing `tls_passthrough` and the `traditional_compatible` router flavor.\n [#12681](https://github.com/Kong/kong/issues/12681)\n\n- Fixed a bug that `X-Kong-Upstream-Status` didn't appear in the response headers even if it was set in the `headers` parameter in the `kong.conf` file when the response was hit and returned by the Proxy Cache plugin.\n [#12744](https://github.com/Kong/kong/issues/12744)\n\n- Fixed vault initialization by postponing vault reference resolving on init_worker\n [#12554](https://github.com/Kong/kong/issues/12554)\n\n- Fixed a bug that allowed vault secrets to refresh even when they had no TTL set.\n [#12877](https://github.com/Kong/kong/issues/12877)\n\n- **Vault**: do not use incorrect (default) workspace identifier when retrieving vault entity by prefix\n [#12572](https://github.com/Kong/kong/issues/12572)\n\n- **Core**: Fixed unexpected table nil panic in the balancer's stop_healthchecks function\n [#12865](https://github.com/Kong/kong/issues/12865)\n\n\n- Use `-1` as the worker ID of privileged agent to avoid access issues.\n [#12385](https://github.com/Kong/kong/issues/12385)\n\n- **Plugin Server**: Fixed an issue where Kong failed to properly restart MessagePack-based pluginservers (used in Python and Javascript plugins, for example).\n [#12582](https://github.com/Kong/kong/issues/12582)\n\n- Reverted the hard-coded limitation of the `ngx.read_body()` API in OpenResty upstreams' new versions when downstream connections are in HTTP/2 or HTTP/3 stream modes.\n [#12658](https://github.com/Kong/kong/issues/12658)\n\n- Each Kong cache instance now utilizes its own cluster event channel. This approach isolates cache invalidation events and reducing the generation of unnecessary worker events.\n [#12321](https://github.com/Kong/kong/issues/12321)\n\n- Updated telemetry collection for AI Plugins to allow multiple plugins data to be set for the same request.\n [#12583](https://github.com/Kong/kong/issues/12583)\n##### PDK\n\n- **PDK:** Fixed `kong.request.get_forwarded_port` to always return a number,\nwhich was caused by an incorrectly stored string value in `ngx.ctx.host_port`.\n [#12806](https://github.com/Kong/kong/issues/12806)\n\n- The value of `latencies.kong` in the log serializer payload no longer includes\nthe response receive time, so it now has the same value as the\n`X-Kong-Proxy-Latency` response header. Response receive time is recorded in\nthe new `latencies.receive` metric, so if desired, the old value can be\ncalculated as `latencies.kong + latencies.receive`. **Note:** this also\naffects payloads from all logging plugins that use the log serializer:\n`file-log`, `tcp-log`, `udp-log`,`http-log`, `syslog`, and `loggly`, e.g.\n[descriptions of JSON objects for the HTTP Log Plugin's log format](https://docs.konghq.com/hub/kong-inc/http-log/log-format/#json-object-descriptions).\n [#12795](https://github.com/Kong/kong/issues/12795)\n\n- **Tracing**: enhanced robustness of trace ID parsing\n [#12848](https://github.com/Kong/kong/issues/12848)\n##### Plugin\n\n- **AI-proxy-plugin**: Fixed the bug that the `route_type` `/llm/v1/chat` didn't include the analytics in the responses.\n [#12781](https://github.com/Kong/kong/issues/12781)\n\n- **ACME**: Fixed an issue where the certificate was not successfully renewed during ACME renewal.\n [#12773](https://github.com/Kong/kong/issues/12773)\n\n- **AWS-Lambda**: Fixed an issue where the latency attributed to AWS Lambda API requests was counted as part of the latency in Kong.\n [#12835](https://github.com/Kong/kong/issues/12835)\n\n- **Jwt**: Fixed an issue where the plugin would fail when using invalid public keys for ES384 and ES512 algorithms.\n [#12724](https://github.com/Kong/kong/issues/12724)\n\n\n- Added WWW-Authenticate headers to all 401 responses in the Key Auth plugin.\n [#11794](https://github.com/Kong/kong/issues/11794)\n\n- **Opentelemetry**: Fixed an OTEL sampling mode Lua panic bug, which happened when the `http_response_header_for_traceid` option was enabled.\n [#12544](https://github.com/Kong/kong/issues/12544)\n\n- Improve error handling in AI plugins.\n [#12991](https://github.com/Kong/kong/issues/12991)\n\n- **ACME**: Fixed migration of redis configuration.\n [#12989](https://github.com/Kong/kong/issues/12989)\n\n- **Response-RateLimiting**: Fixed migration of redis configuration.\n [#12989](https://github.com/Kong/kong/issues/12989)\n\n- **Rate-Limiting**: Fixed migration of redis configuration.\n [#12989](https://github.com/Kong/kong/issues/12989)\n##### Admin API\n\n- **Admin API**: fixed an issue where calling the endpoint `POST /schemas/vaults/validate` was conflicting with the endpoint `/schemas/vaults/:name` which only has GET implemented, hence resulting in a 405.\n [#12607](https://github.com/Kong/kong/issues/12607)\n##### Default\n\n- Fixed a bug where, if the the ulimit setting (open files) was low, Kong would fail to start as the `lua-resty-timer-ng` exhausted the available `worker_connections`. Decreased the concurrency range of the `lua-resty-timer-ng` library from `[512, 2048]` to `[256, 1024]` to fix this bug.\n [#12606](https://github.com/Kong/kong/issues/12606)\n\n- Fix an issue where external plugins using the protobuf-based protocol would fail to call the `kong.Service.SetUpstream` method with an error `bad argument #2 to 'encode' (table expected, got boolean)`.\n [#12727](https://github.com/Kong/kong/issues/12727)\n\n### Kong-Manager\n\n\n\n\n\n\n#### Features\n##### Default\n\n- Kong Manager now supports creating and editing Expressions routes with an interactive in-browser editor with syntax highlighting and autocompletion features for Kong's Expressions language.\n [#217](https://github.com/Kong/kong-manager/issues/217)\n\n\n- Kong Manager now groups the parameters to provide a better user experience while configuring plugins. Meanwhile, several issues with the plugin form page were fixed.\n [#195](https://github.com/Kong/kong-manager/issues/195) [#199](https://github.com/Kong/kong-manager/issues/199) [#201](https://github.com/Kong/kong-manager/issues/201) [#202](https://github.com/Kong/kong-manager/issues/202) [#207](https://github.com/Kong/kong-manager/issues/207) [#208](https://github.com/Kong/kong-manager/issues/208) [#209](https://github.com/Kong/kong-manager/issues/209) [#213](https://github.com/Kong/kong-manager/issues/213) [#216](https://github.com/Kong/kong-manager/issues/216)\n\n\n#### Fixes\n##### Default\n\n- Improved the user experience in Kong Manager by fixing various UI-related issues.\n [#185](https://github.com/Kong/kong-manager/issues/185) [#188](https://github.com/Kong/kong-manager/issues/188) [#190](https://github.com/Kong/kong-manager/issues/190) [#195](https://github.com/Kong/kong-manager/issues/195) [#199](https://github.com/Kong/kong-manager/issues/199) [#201](https://github.com/Kong/kong-manager/issues/201) [#202](https://github.com/Kong/kong-manager/issues/202) [#207](https://github.com/Kong/kong-manager/issues/207) [#208](https://github.com/Kong/kong-manager/issues/208) [#209](https://github.com/Kong/kong-manager/issues/209) [#213](https://github.com/Kong/kong-manager/issues/213) [#216](https://github.com/Kong/kong-manager/issues/216)\n\n## 3.6.1\n\n### Kong\n\n\n#### Performance\n##### Plugin\n\n- **Opentelemetry**: increase queue max batch size to 200\n [#12542](https://github.com/Kong/kong/issues/12542)\n\n\n\n#### Dependencies\n##### Core\n\n- Bumped lua-resty-openssl to 1.2.1\n [#12669](https://github.com/Kong/kong/issues/12669)\n\n\n#### Features\n##### Configuration\n\n- now TLSv1.1 and lower is by default disabled in OpenSSL 3.x\n [#12556](https://github.com/Kong/kong/issues/12556)\n\n#### Fixes\n##### Configuration\n\n- Fixed default value in kong.conf.default documentation from 1000 to 10000\nfor upstream_keepalive_max_requests option.\n [#12648](https://github.com/Kong/kong/issues/12648)\n\n- Set security level of gRPC's TLS to 0 when ssl_cipher_suite is set to old\n [#12616](https://github.com/Kong/kong/issues/12616)\n\n##### Core\n\n- Fix the missing router section for the output of the request-debugging\n [#12649](https://github.com/Kong/kong/issues/12649)\n\n- revert the hard-coded limitation of the ngx.read_body() API in OpenResty upstreams' new versions when downstream connections are in HTTP/2 or HTTP/3 stream modes.\n [#12666](https://github.com/Kong/kong/issues/12666)\n##### Default\n\n- Fix a bug where the ulimit setting (open files) is low Kong will fail to start as the lua-resty-timer-ng exhausts the available worker_connections. Decrease the concurrency range of the lua-resty-timer-ng library from [512, 2048] to [256, 1024] to fix this bug.\n [#12608](https://github.com/Kong/kong/issues/12608)\n### Kong-Manager\n\n## 3.6.0\n\n### Kong\n\n\n#### Performance\n##### Performance\n\n- Bumped the concurrency range of the lua-resty-timer-ng library from [32, 256] to [512, 2048].\n [#12275](https://github.com/Kong/kong/issues/12275)\n\n- Cooperatively yield when building statistics of routes to reduce the impact to proxy path latency.\n [#12013](https://github.com/Kong/kong/issues/12013)\n\n##### Configuration\n\n- Bump `dns_stale_ttl` default to 1 hour so stale DNS record can be used for longer time in case of resolver downtime.\n [#12087](https://github.com/Kong/kong/issues/12087)\n\n- Bumped default values of `nginx_http_keepalive_requests` and `upstream_keepalive_max_requests` to `10000`. These changes are optimized to work better in systems with high throughput. In a low-throughput setting, these new settings may have visible effects in loadbalancing - it can take more requests to start using all the upstreams than before.\n [#12223](https://github.com/Kong/kong/issues/12223)\n##### Core\n\n- Reuse match context between requests to avoid frequent memory allocation/deallocation\n [#12258](https://github.com/Kong/kong/issues/12258)\n##### PDK\n\n- Performance optimization to avoid unnecessary creations and garbage-collections of spans\n [#12080](https://github.com/Kong/kong/issues/12080)\n\n#### Breaking Changes\n##### Core\n\n- **BREAKING:** To avoid ambiguity with other Wasm-related nginx.conf directives, the prefix for Wasm `shm_kv` nginx.conf directives was changed from `nginx_wasm_shm_` to `nginx_wasm_shm_kv_`\n [#11919](https://github.com/Kong/kong/issues/11919)\n\n- In OpenSSL 3.2, the default SSL/TLS security level has been changed from 1 to 2.\n  Which means security level set to 112 bits of security. As a result\n  RSA, DSA and DH keys shorter than 2048 bits and ECC keys shorter than\n  224 bits are prohibited. In addition to the level 1 exclusions any cipher\n  suite using RC4 is also prohibited. SSL version 3 is also not allowed.\n  Compression is disabled.\n  [#7714](https://github.com/Kong/kong/issues/7714)\n\n##### Plugin\n\n- **azure-functions**: azure-functions plugin now eliminates upstream/request URI and only use `routeprefix` configuration field to construct request path when requesting Azure API\n [#11850](https://github.com/Kong/kong/issues/11850)\n\n#### Deprecations\n##### Plugin\n\n- **ACME**: Standardize redis configuration across plugins. The redis configuration right now follows common schema that is shared across other plugins.\n [#12300](https://github.com/Kong/kong/issues/12300)\n\n- **Rate Limiting**: Standardize redis configuration across plugins. The redis configuration right now follows common schema that is shared across other plugins.\n [#12301](https://github.com/Kong/kong/issues/12301)\n\n- **Response-RateLimiting**: Standardize redis configuration across plugins. The redis configuration right now follows common schema that is shared across other plugins.\n [#12301](https://github.com/Kong/kong/issues/12301)\n\n#### Dependencies\n##### Core\n\n- Bumped atc-router from 1.2.0 to 1.6.0\n [#12231](https://github.com/Kong/kong/issues/12231)\n\n- Bumped kong-lapis from 1.14.0.3 to 1.16.0.1\n [#12064](https://github.com/Kong/kong/issues/12064)\n\n\n- Bumped LPEG from 1.0.2 to 1.1.0\n [#11955](https://github.com/Kong/kong/issues/11955)\n [UTF-8](https://konghq.atlassian.net/browse/UTF-8)\n\n- Bumped lua-messagepack from 0.5.2 to 0.5.3\n [#11956](https://github.com/Kong/kong/issues/11956)\n\n\n- Bumped lua-messagepack from 0.5.3 to 0.5.4\n [#12076](https://github.com/Kong/kong/issues/12076)\n\n\n- Bumped lua-resty-aws from 1.3.5 to 1.3.6\n [#12439](https://github.com/Kong/kong/issues/12439)\n\n\n- Bumped lua-resty-healthcheck from 3.0.0 to 3.0.1\n [#12237](https://github.com/Kong/kong/issues/12237)\n\n- Bumped lua-resty-lmdb from 1.3.0 to 1.4.1\n [#12026](https://github.com/Kong/kong/issues/12026)\n\n- Bumped lua-resty-timer-ng from 0.2.5 to 0.2.6\n [#12275](https://github.com/Kong/kong/issues/12275)\n\n- Bumped OpenResty from 1.21.4.2 to 1.25.3.1\n [#12327](https://github.com/Kong/kong/issues/12327)\n\n- Bumped OpenSSL from 3.1.4 to 3.2.1\n [#12264](https://github.com/Kong/kong/issues/12264)\n\n- Bump resty-openssl from 0.8.25 to 1.2.0\n [#12265](https://github.com/Kong/kong/issues/12265)\n\n\n- Bumped ngx_brotli to master branch, and disabled it on rhel7 rhel9-arm64 and amazonlinux-2023-arm64 due to toolchain issues\n [#12444](https://github.com/Kong/kong/issues/12444)\n\n- Bumped lua-resty-healthcheck from 1.6.3 to 3.0.0\n [#11834](https://github.com/Kong/kong/issues/11834)\n##### Default\n\n- Bump `ngx_wasm_module` to `a7087a37f0d423707366a694630f1e09f4c21728`\n [#12011](https://github.com/Kong/kong/issues/12011)\n\n\n- Bump `Wasmtime` version to `14.0.3`\n [#12011](https://github.com/Kong/kong/issues/12011)\n\n\n#### Features\n##### Configuration\n\n- display a warning message when Kong Manager is enabled but the Admin API is not enabled\n [#12071](https://github.com/Kong/kong/issues/12071)\n\n- add DHE-RSA-CHACHA20-POLY1305 cipher to the intermediate configuration\n [#12133](https://github.com/Kong/kong/issues/12133)\n\n- The default value of `dns_no_sync` option has been changed to `off`\n [#11869](https://github.com/Kong/kong/issues/11869)\n\n- Allow to inject Nginx directives into Kong's proxy location block\n [#11623](https://github.com/Kong/kong/issues/11623)\n\n\n- Validate LMDB cache by Kong's version (major + minor),\nwiping the content if tag mismatch to avoid compatibility issues\nduring minor version upgrade.\n [#12026](https://github.com/Kong/kong/issues/12026)\n##### Core\n\n- Adds telemetry collection for AI Proxy, AI Request Transformer, and AI Response Transformer, pertaining to model and provider usage.\n [#12495](https://github.com/Kong/kong/issues/12495)\n\n\n- add ngx_brotli module to kong prebuild nginx\n [#12367](https://github.com/Kong/kong/issues/12367)\n\n- Allow primary key passed as a full entity to DAO functions.\n [#11695](https://github.com/Kong/kong/issues/11695)\n\n\n- Build deb packages for Debian 12. The debian variant of kong docker image is built using Debian 12 now.\n [#12218](https://github.com/Kong/kong/issues/12218)\n\n- The expressions route now supports the `!` (not) operator, which allows creating routes like\n`!(http.path =^ \"/a\")` and `!(http.path == \"/a\" || http.path == \"/b\")`\n [#12419](https://github.com/Kong/kong/issues/12419)\n\n- Add `source` property to log serializer, indicating the response is generated by `kong` or `upstream`.\n [#12052](https://github.com/Kong/kong/issues/12052)\n\n- Ensure Kong-owned directories are cleaned up after an uninstall using the system's package manager.\n [#12162](https://github.com/Kong/kong/issues/12162)\n\n- Support `http.path.segments.len` and `http.path.segments.*` fields in the expressions router\nwhich allows matching incoming (normalized) request path by individual segment or ranges of segments,\nplus checking the total number of segments.\n [#12283](https://github.com/Kong/kong/issues/12283)\n\n- `net.src.*` and `net.dst.*` match fields are now accessible in HTTP routes defined using expressions.\n [#11950](https://github.com/Kong/kong/issues/11950)\n\n- Extend support for getting and setting Gateway values via proxy-wasm properties in the `kong.*` namespace.\n [#11856](https://github.com/Kong/kong/issues/11856)\n\n##### PDK\n\n- Increase the precision of JSON number encoding from 14 to 16 decimals\n [#12019](https://github.com/Kong/kong/issues/12019)\n##### Plugin\n\n- Introduced the new **AI Prompt Decorator** plugin that enables prepending and appending llm/v1/chat messages onto consumer LLM requests, for prompt tuning.\n [#12336](https://github.com/Kong/kong/issues/12336)\n\n\n- Introduced the new **AI Prompt Guard** which can allow and/or block  LLM requests based on pattern matching.\n [#12427](https://github.com/Kong/kong/issues/12427)\n\n\n- Introduced the new **AI Prompt Template** which can offer consumers and array of LLM prompt templates, with variable substitutions.\n [#12340](https://github.com/Kong/kong/issues/12340)\n\n\n- Introduced the new **AI Proxy** plugin that enables simplified integration with various AI provider Large Language Models.\n [#12323](https://github.com/Kong/kong/issues/12323)\n\n\n- Introduced the new **AI Request Transformer** plugin that enables passing mid-flight consumer requests to an LLM for transformation or sanitization.\n [#12426](https://github.com/Kong/kong/issues/12426)\n\n\n- Introduced the new **AI Response Transformer** plugin that enables passing mid-flight upstream responses to an LLM for transformation or sanitization.\n [#12426](https://github.com/Kong/kong/issues/12426)\n\n\n- Tracing Sampling Rate can now be set via the `config.sampling_rate` property of the OpenTelemetry plugin instead of it just being a global setting for the gateway.\n [#12054](https://github.com/Kong/kong/issues/12054)\n##### Admin API\n\n- add gateway edition to the root endpoint of the admin api\n [#12097](https://github.com/Kong/kong/issues/12097)\n\n- Enable `status_listen` on `127.0.0.1:8007` by default\n [#12304](https://github.com/Kong/kong/issues/12304)\n##### Clustering\n\n- **Clustering**: Expose data plane certificate expiry date on the control plane API.\n [#11921](https://github.com/Kong/kong/issues/11921)\n\n#### Fixes\n##### Configuration\n\n- fix error data loss caused by weakly typed of function in declarative_config_flattened function\n [#12167](https://github.com/Kong/kong/issues/12167)\n\n- respect custom `proxy_access_log`\n [#12073](https://github.com/Kong/kong/issues/12073)\n##### Core\n\n- prevent ca to be deleted when it's still referenced by other entities and invalidate the related ca store caches when a ca cert is updated.\n [#11789](https://github.com/Kong/kong/issues/11789)\n\n- Now cookie names are validated against RFC 6265, which allows more characters than the previous validation.\n [#11881](https://github.com/Kong/kong/issues/11881)\n\n\n- Remove nulls only if the schema has transformations definitions.\nImprove performance as most schemas does not define transformations.\n [#12284](https://github.com/Kong/kong/issues/12284)\n\n- Fix a bug that the error_handler can not provide the meaningful response body when the internal error code 494 is triggered.\n [#12114](https://github.com/Kong/kong/issues/12114)\n\n- Header value matching (`http.headers.*`) in `expressions` router flavor are now case sensitive.\nThis change does not affect on `traditional_compatible` mode\nwhere header value match are always performed ignoring the case.\n [#11905](https://github.com/Kong/kong/issues/11905)\n\n- print error message correctly when plugin fails\n [#11800](https://github.com/Kong/kong/issues/11800)\n\n- fix ldoc intermittent failure caused by LuaJIT error.\n [#11983](https://github.com/Kong/kong/issues/11983)\n\n- use NGX_WASM_MODULE_BRANCH environment variable to set ngx_wasm_module repository branch when building Kong.\n [#12241](https://github.com/Kong/kong/issues/12241)\n\n- Eliminate asynchronous timer in syncQuery() to prevent hang risk\n [#11900](https://github.com/Kong/kong/issues/11900)\n\n- **tracing:** Fixed an issue where a DNS query failure would cause a tracing failure.\n [#11935](https://github.com/Kong/kong/issues/11935)\n\n- Expressions route in `http` and `stream` subsystem now have stricter validation.\nPreviously they share the same validation schema which means admin can configure expressions\nroute using fields like `http.path` even for stream routes. This is no longer allowed.\n [#11914](https://github.com/Kong/kong/issues/11914)\n\n- **Tracing**: dns spans are now correctly generated for upstream dns queries (in addition to cosocket ones)\n [#11996](https://github.com/Kong/kong/issues/11996)\n\n- Validate private and public key for `keys` entity to ensure they match each other.\n [#11923](https://github.com/Kong/kong/issues/11923)\n\n- **proxy-wasm**: Fixed \"previous plan already attached\" error thrown when a filter triggers re-entrancy of the access handler.\n [#12452](https://github.com/Kong/kong/issues/12452)\n##### PDK\n\n- response.set_header support header argument with table array of string\n [#12164](https://github.com/Kong/kong/issues/12164)\n\n- Fix an issue that when using kong.response.exit, the Transfer-Encoding header set by user is not removed\n [#11936](https://github.com/Kong/kong/issues/11936)\n\n- **Plugin Server**: fix an issue where every request causes a new plugin instance to be created\n [#12020](https://github.com/Kong/kong/issues/12020)\n##### Plugin\n\n- Add missing WWW-Authenticate headers to 401 response in basic auth plugin.\n [#11795](https://github.com/Kong/kong/issues/11795)\n\n- Enhance error responses for authentication failures in the Admin API\n [#12456](https://github.com/Kong/kong/issues/12456)\n\n- Expose metrics for serviceless routes\n [#11781](https://github.com/Kong/kong/issues/11781)\n\n- **Rate Limiting**: fix to provide better accuracy in counters when sync_rate is used with the redis policy.\n [#11859](https://github.com/Kong/kong/issues/11859)\n\n- **Rate Limiting**: fix an issuer where all counters are synced to the same DB at the same rate.\n [#12003](https://github.com/Kong/kong/issues/12003)\n\n- **Datadog**: Fix a bug that datadog plugin is not triggered for serviceless routes. In this fix, datadog plugin is always triggered, and the value of tag `name`(service_name) is set as an empty value.\n [#12068](https://github.com/Kong/kong/issues/12068)\n##### Clustering\n\n- Fix a bug causing data-plane status updates to fail when an empty PING frame is received from a data-plane\n [#11917](https://github.com/Kong/kong/issues/11917)\n### Kong-Manager\n\n\n\n\n\n\n#### Features\n##### Default\n\n- Added a JSON/YAML format preview for all entity forms.\n [#157](https://github.com/Kong/kong-manager/issues/157)\n\n\n- Adopted resigned basic components for better UI/UX.\n [#131](https://github.com/Kong/kong-manager/issues/131) [#166](https://github.com/Kong/kong-manager/issues/166)\n\n\n- Kong Manager and Konnect now share the same UI for plugin selection page and plugin form page.\n [#143](https://github.com/Kong/kong-manager/issues/143) [#147](https://github.com/Kong/kong-manager/issues/147)\n\n\n#### Fixes\n##### Default\n\n- Standardized notification text format.\n [#140](https://github.com/Kong/kong-manager/issues/140)\n\n## 3.5.0\n### Kong\n\n\n#### Performance\n##### Configuration\n\n- Bumped the default value of `upstream_keepalive_pool_size` to `512` and `upstream_keepalive_max_requests` to `1000`\n  [#11515](https://github.com/Kong/kong/issues/11515)\n##### Core\n\n- refactor workspace id and name retrieval\n  [#11442](https://github.com/Kong/kong/issues/11442)\n\n#### Breaking Changes\n##### Plugin\n\n- **Session**: a new configuration field `read_body_for_logout` was added with a default value of `false`, that changes behavior of `logout_post_arg` in a way that it is not anymore considered if the `read_body_for_logout` is not explicitly set to `true`. This is to avoid session plugin from reading request bodies by default on e.g. `POST` request for logout detection.\n  [#10333](https://github.com/Kong/kong/issues/10333)\n\n\n#### Dependencies\n##### Core\n\n- Bumped resty.openssl from 0.8.23 to 0.8.25\n  [#11518](https://github.com/Kong/kong/issues/11518)\n\n- Fix incorrect LuaJIT register allocation for IR_*LOAD on ARM64\n  [#11638](https://github.com/Kong/kong/issues/11638)\n\n- Fix LDP/STP fusing for unaligned accesses on ARM64\n  [#11639](https://github.com/Kong/kong/issues/11639)\n\n\n- Bump lua-kong-nginx-module from 0.6.0 to 0.8.0\n  [#11663](https://github.com/Kong/kong/issues/11663)\n\n- Fix incorrect LuaJIT LDP/STP fusion on ARM64 which may sometimes cause incorrect logic\n  [#11537](https://github.com/Kong/kong/issues/11537)\n\n##### Default\n\n- Bumped lua-resty-healthcheck from 1.6.2 to 1.6.3\n  [#11360](https://github.com/Kong/kong/issues/11360)\n\n- Bumped OpenResty from 1.21.4.1 to 1.21.4.2\n  [#11360](https://github.com/Kong/kong/issues/11360)\n\n- Bumped LuaSec from 1.3.1 to 1.3.2\n  [#11553](https://github.com/Kong/kong/issues/11553)\n\n\n- Bumped lua-resty-aws from 1.3.1 to 1.3.5\n  [#11613](https://github.com/Kong/kong/issues/11613)\n\n\n- bump OpenSSL from 3.1.1 to 3.1.4\n  [#11844](https://github.com/Kong/kong/issues/11844)\n\n\n- Bumped kong-lapis from 1.14.0.2 to 1.14.0.3\n  [#11849](https://github.com/Kong/kong/issues/11849)\n\n\n- Bumped ngx_wasm_module to latest rolling release version.\n  [#11678](https://github.com/Kong/kong/issues/11678)\n\n- Bump Wasmtime version to 12.0.2\n  [#11738](https://github.com/Kong/kong/issues/11738)\n\n- Bumped lua-resty-aws from 1.3.0 to 1.3.1\n  [#11419](https://github.com/Kong/kong/pull/11419)\n\n- Bumped lua-resty-session from 4.0.4 to 4.0.5\n  [#11416](https://github.com/Kong/kong/pull/11416)\n\n\n#### Features\n##### Core\n\n- Add a new endpoint `/schemas/vaults/:name` to retrieve the schema of a vault.\n  [#11727](https://github.com/Kong/kong/issues/11727)\n\n- rename `privileged_agent` to `dedicated_config_processing. Enable `dedicated_config_processing` by default\n  [#11784](https://github.com/Kong/kong/issues/11784)\n\n- Support observing the time consumed by some components in the given request.\n  [#11627](https://github.com/Kong/kong/issues/11627)\n\n- Plugins can now implement `Plugin:configure(configs)` function that is called whenever there is a change in plugin entities. An array of current plugin configurations is passed to the function, or `nil` in case there is no active configurations for the plugin.\n  [#11703](https://github.com/Kong/kong/issues/11703)\n\n- Add a request-aware table able to detect accesses from different requests.\n  [#11017](https://github.com/Kong/kong/issues/11017)\n\n- A unique Request ID is now populated in the error log, access log, error templates, log serializer, and in a new X-Kong-Request-Id header (configurable for upstream/downstream using the `headers` and `headers_upstream` configuration options).\n  [#11663](https://github.com/Kong/kong/issues/11663)\n\n- Add support for optional Wasm filter configuration schemas\n  [#11568](https://github.com/Kong/kong/issues/11568)\n\n- Support JSON in Wasm filter configuration\n  [#11697](https://github.com/Kong/kong/issues/11697)\n\n- Support HTTP query parameters in expression routes.\n  [#11348](https://github.com/Kong/kong/pull/11348)\n\n##### Plugin\n\n- **response-ratelimiting**: add support for secret rotation with redis connection\n  [#10570](https://github.com/Kong/kong/issues/10570)\n\n\n- **CORS**: Support the `Access-Control-Request-Private-Network` header in crossing-origin pre-light requests\n  [#11523](https://github.com/Kong/kong/issues/11523)\n\n- add scan_count to redis storage schema\n  [#11532](https://github.com/Kong/kong/issues/11532)\n\n\n- **AWS-Lambda**: the AWS-Lambda plugin has been refactored by using `lua-resty-aws` as an\n  underlying AWS library. The refactor simplifies the AWS-Lambda plugin code base and\n  adding support for multiple IAM authenticating scenarios.\n  [#11350](https://github.com/Kong/kong/pull/11350)\n\n- **OpenTelemetry** and **Zipkin**: Support GCP X-Cloud-Trace-Context header\n  The field `header_type` now accepts the value `gcp` to propagate the\n  Google Cloud trace header\n  [#11254](https://github.com/Kong/kong/pull/11254)\n\n##### Clustering\n\n- **Clustering**: Allow configuring DP metadata labels for on-premise CP Gateway\n  [#11625](https://github.com/Kong/kong/issues/11625)\n\n#### Fixes\n##### Configuration\n\n- The default value of `dns_no_sync` option has been changed to `on`\n  [#11871](https://github.com/Kong/kong/issues/11871)\n\n##### Core\n\n- Fix an issue that the TTL of the key-auth plugin didnt work in DB-less and Hybrid mode.\n  [#11464](https://github.com/Kong/kong/issues/11464)\n\n- Fix a problem that abnormal socket connection will be reused when querying Postgres database.\n  [#11480](https://github.com/Kong/kong/issues/11480)\n\n- Fix upstream ssl failure when plugins use response handler\n  [#11502](https://github.com/Kong/kong/issues/11502)\n\n- Fix an issue that protocol `tls_passthrough` can not work with expressions flavor\n  [#11538](https://github.com/Kong/kong/issues/11538)\n\n- Fix a bug that will cause a failure of sending tracing data to datadog when value of x-datadog-parent-id header in requests is a short dec string\n  [#11599](https://github.com/Kong/kong/issues/11599)\n\n- Apply Nginx patch for detecting HTTP/2 stream reset attacks early (CVE-2023-44487)\n  [#11743](https://github.com/Kong/kong/issues/11743)\n\n- fix the building failure when applying patches\n  [#11696](https://github.com/Kong/kong/issues/11696)\n\n- Vault references can be used in Dbless mode in declarative config\n  [#11845](https://github.com/Kong/kong/issues/11845)\n\n\n- Properly warmup Vault caches on init\n  [#11827](https://github.com/Kong/kong/issues/11827)\n\n\n- Vault resurrect time is respected in case a vault secret is deleted from a vault\n  [#11852](https://github.com/Kong/kong/issues/11852)\n\n- Fixed critical level logs when starting external plugin servers. Those logs cannot be suppressed due to the limitation of OpenResty. We choose to remove the socket availability detection feature.\n  [#11372](https://github.com/Kong/kong/pull/11372)\n\n- Fix an issue where a crashing Go plugin server process would cause subsequent\n  requests proxied through Kong to execute Go plugins with inconsistent configurations.\n  The issue only affects scenarios where the same Go plugin is applied to different Route\n  or Service entities.\n  [#11306](https://github.com/Kong/kong/pull/11306)\n\n- Fix an issue where cluster_cert or cluster_ca_cert is inserted into lua_ssl_trusted_certificate before being base64 decoded.\n  [#11385](https://github.com/Kong/kong/pull/11385)\n\n- Fix cache warmup mechanism not working in `acls` plugin groups config entity scenario.\n  [#11414](https://github.com/Kong/kong/pull/11414)\n\n- Fix an issue that queue stops processing when a hard error is encountered in the handler function.\n  [#11423](https://github.com/Kong/kong/pull/11423)\n\n- Fix an issue that query parameters are not forwarded in proxied request.\n  Thanks [@chirag-manwani](https://github.com/chirag-manwani) for contributing this change.\n  [#11328](https://github.com/Kong/kong/pull/11328)\n\n- Fix an issue that response status code is not real upstream status when using kong.response function.\n  [#11437](https://github.com/Kong/kong/pull/11437)\n\n- Removed a hardcoded proxy-wasm isolation level setting that was preventing the\n  `nginx_http_proxy_wasm_isolation` configuration value from taking effect.\n  [#11407](https://github.com/Kong/kong/pull/11407)\n\n##### PDK\n\n- Fix several issues in Vault and refactor the Vault code base: - Make DAOs to fallback to empty string when resolving Vault references fail - Use node level mutex when rotation references  - Refresh references on config changes - Update plugin referenced values only once per request - Pass only the valid config options to vault implementations - Resolve multi-value secrets only once when rotating them - Do not start vault secrets rotation timer on control planes - Re-enable negative caching - Reimplement the kong.vault.try function - Remove references from rotation in case their configuration has changed\n  [#11652](https://github.com/Kong/kong/issues/11652)\n\n- Fix response body gets repeated when `kong.response.get_raw_body()` is called multiple times in a request lifecycle.\n  [#11424](https://github.com/Kong/kong/issues/11424)\n\n- Tracing: fix an issue that resulted in some parent spans to end before their children due to different precision of their timestamps\n  [#11484](https://github.com/Kong/kong/issues/11484)\n\n- Fix a bug related to data interference between requests in the kong.log.serialize function.\n  [#11566](https://github.com/Kong/kong/issues/11566)\n##### Plugin\n\n- **Opentelemetry**: fix an issue that resulted in invalid parent IDs in the propagated tracing headers\n  [#11468](https://github.com/Kong/kong/issues/11468)\n\n- **AWS-Lambda**: let plugin-level proxy take effect on EKS IRSA credential provider\n  [#11551](https://github.com/Kong/kong/issues/11551)\n\n- Cache the AWS lambda service by those lambda service related fields\n  [#11821](https://github.com/Kong/kong/issues/11821)\n\n- **Opentelemetry**: fix an issue that resulted in traces with invalid parent IDs when `balancer` instrumentation was enabled\n  [#11830](https://github.com/Kong/kong/issues/11830)\n\n\n- **tcp-log**: fix an issue of unnecessary handshakes when reusing TLS connection\n  [#11848](https://github.com/Kong/kong/issues/11848)\n\n- **OAuth2**: For OAuth2 plugin, `scope` has been taken into account as a new criterion of the request validation. When refreshing token with `refresh_token`, the scopes associated with the `refresh_token` provided in the request must be same with or a subset of the scopes configured in the OAuth2 plugin instance hit by the request.\n  [#11342](https://github.com/Kong/kong/pull/11342)\n\n- When the worker is in shutdown mode and more data is immediately available without waiting for `max_coalescing_delay`, queues are now cleared in batches.\n  Thanks [@JensErat](https://github.com/JensErat) for contributing this change.\n  [#11376](https://github.com/Kong/kong/pull/11376)\n\n- A race condition in the plugin queue could potentially crash the worker when `max_entries` was set to `max_batch_size`.\n  [#11378](https://github.com/Kong/kong/pull/11378)\n\n- **AWS-Lambda**: fix an issue that the AWS-Lambda plugin cannot extract a json encoded proxy integration response.\n  [#11413](https://github.com/Kong/kong/pull/11413)\n\n##### Default\n\n- Restore lapis & luarocks-admin bins\n  [#11578](https://github.com/Kong/kong/issues/11578)\n### Kong-Manager\n\n\n\n\n\n\n#### Features\n##### Default\n\n- Add `JSON` and `YAML` formats in entity config cards.\n  [#111](https://github.com/Kong/kong-manager/issues/111)\n\n\n- Plugin form fields now display descriptions from backend schema.\n  [#66](https://github.com/Kong/kong-manager/issues/66)\n\n\n- Add the `protocols` field in plugin form.\n  [#93](https://github.com/Kong/kong-manager/issues/93)\n\n\n- The upstream target list shows the `Mark Healthy` and `Mark Unhealthy` action items when certain conditions are met.\n  [#86](https://github.com/Kong/kong-manager/issues/86)\n\n\n#### Fixes\n##### Default\n\n- Fix incorrect port number in Port Details.\n  [#103](https://github.com/Kong/kong-manager/issues/103)\n\n\n- Fix a bug where the `proxy-cache` plugin cannot be installed.\n  [#104](https://github.com/Kong/kong-manager/issues/104)\n\n## 3.4.2\n\n### Kong\n\n#### Fixes\n##### Core\n\n- Apply Nginx patch for detecting HTTP/2 stream reset attacks early (CVE-2023-44487)\n [#11743](https://github.com/Kong/kong/issues/11743)\n [CVE-2023](https://konghq.atlassian.net/browse/CVE-2023) [nginx-1](https://konghq.atlassian.net/browse/nginx-1) [SIR-435](https://konghq.atlassian.net/browse/SIR-435)\n\n## 3.4.1\n\n### Kong\n\n\n#### Additions\n\n##### Core\n\n- Support HTTP query parameters in expression routes.\n  [#11348](https://github.com/Kong/kong/pull/11348)\n\n\n#### Dependencies\n\n##### Core\n\n- Fix incorrect LuaJIT LDP/STP fusion on ARM64 which may sometimes cause incorrect logic\n  [#11537](https://github.com/Kong/kong-ee/issues/11537)\n\n\n\n#### Fixes\n\n##### Core\n\n- Removed a hardcoded proxy-wasm isolation level setting that was preventing the\n  `nginx_http_proxy_wasm_isolation` configuration value from taking effect.\n  [#11407](https://github.com/Kong/kong/pull/11407)\n- Fix an issue that the TTL of the key-auth plugin didnt work in DB-less and Hybrid mode.\n  [#11464](https://github.com/Kong/kong-ee/issues/11464)\n- Fix a problem that abnormal socket connection will be reused when querying Postgres database.\n  [#11480](https://github.com/Kong/kong-ee/issues/11480)\n- Fix upstream ssl failure when plugins use response handler\n  [#11502](https://github.com/Kong/kong-ee/issues/11502)\n- Fix an issue that protocol `tls_passthrough` can not work with expressions flavor\n  [#11538](https://github.com/Kong/kong-ee/issues/11538)\n\n##### PDK\n\n- Fix several issues in Vault and refactor the Vault code base: - Make DAOs to fallback to empty string when resolving Vault references fail - Use node level mutex when rotation references  - Refresh references on config changes - Update plugin referenced values only once per request - Pass only the valid config options to vault implementations - Resolve multi-value secrets only once when rotating them - Do not start vault secrets rotation timer on control planes - Re-enable negative caching - Reimplement the kong.vault.try function - Remove references from rotation in case their configuration has changed\n\n[#11402](https://github.com/Kong/kong-ee/issues/11402)\n- Tracing: fix an issue that resulted in some parent spans to end before their children due to different precision of their timestamps\n  [#11484](https://github.com/Kong/kong-ee/issues/11484)\n\n##### Plugin\n\n- **Opentelemetry**: fix an issue that resulted in invalid parent IDs in the propagated tracing headers\n  [#11468](https://github.com/Kong/kong-ee/issues/11468)\n\n### Kong Manager\n\n#### Fixes\n\n- Fixed entity docs link.\n  [#92](https://github.com/Kong/kong-manager/pull/92)\n\n## 3.4.0\n\n### Breaking Changes\n\n- :warning: Alpine packages and Docker images based on Alpine are no longer supported\n  [#10926](https://github.com/Kong/kong/pull/10926)\n- :warning: Cassandra as a datastore for Kong is no longer supported\n  [#10931](https://github.com/Kong/kong/pull/10931)\n- Ubuntu 18.04 artifacts are no longer supported as it's EOL\n- AmazonLinux 2022 artifacts are renamed to AmazonLinux 2023 according to AWS's decision\n\n### Deprecations\n\n- **CentOS packages are now removed from the release and are no longer supported in future versions.**\n\n### Additions\n\n#### Core\n\n- Enable `expressions` and `traditional_compatible` router flavor in stream subsystem.\n  [#11071](https://github.com/Kong/kong/pull/11071)\n- Make upstream `host_header` and router `preserve_host` config work in stream tls proxy.\n  [#11244](https://github.com/Kong/kong/pull/11244)\n- Add beta support for WebAssembly/proxy-wasm\n  [#11218](https://github.com/Kong/kong/pull/11218)\n- '/schemas' endpoint returns additional information about cross-field validation as part of the schema.\n  This should help tools that use the Admin API to perform better client-side validation.\n  [#11108](https://github.com/Kong/kong/pull/11108)\n\n#### Kong Manager\n- First release of the Kong Manager Open Source Edition.\n  [#11131](https://github.com/Kong/kong/pull/11131)\n\n#### Plugins\n\n- **OpenTelemetry**: Support AWS X-Ray propagation header\n  The field `header_type`now accepts the `aws` value to handle this specific\n  propagation header.\n  [11075](https://github.com/Kong/kong/pull/11075)\n- **Opentelemetry**: Support the `endpoint` parameter as referenceable.\n  [#11220](https://github.com/Kong/kong/pull/11220)\n- **Ip-Restriction**: Add TCP support to the plugin.\n  Thanks [@scrudge](https://github.com/scrudge) for contributing this change.\n  [#10245](https://github.com/Kong/kong/pull/10245)\n\n#### Performance\n\n- In dbless mode, the declarative schema is now fully initialized at startup\n  instead of on-demand in the request path. This is most evident in decreased\n  response latency when updating configuration via the `/config` API endpoint.\n  [#10932](https://github.com/Kong/kong/pull/10932)\n- The Prometheus plugin has been optimized to reduce proxy latency impacts during scraping.\n  [#10949](https://github.com/Kong/kong/pull/10949)\n  [#11040](https://github.com/Kong/kong/pull/11040)\n  [#11065](https://github.com/Kong/kong/pull/11065)\n\n### Fixes\n\n#### Core\n\n- Declarative config now performs proper uniqueness checks against its inputs:\n  previously, it would silently drop entries with conflicting primary/endpoint\n  keys, or accept conflicting unique fields silently.\n  [#11199](https://github.com/Kong/kong/pull/11199)\n- Fixed a bug that causes `POST /config?flatten_errors=1` to throw an exception\n  and return a 500 error under certain circumstances.\n  [#10896](https://github.com/Kong/kong/pull/10896)\n- Fix a bug when worker consuming dynamic log level setting event and using a wrong reference for notice logging\n  [#10897](https://github.com/Kong/kong/pull/10897)\n- Added a `User=` specification to the systemd unit definition so that\n  Kong can be controlled by systemd again.\n  [#11066](https://github.com/Kong/kong/pull/11066)\n- Fix a bug that caused sampling rate to be applied to individual spans producing split traces.\n  [#11135](https://github.com/Kong/kong/pull/11135)\n- Fix a bug that caused spans to not be instrumented with http.status_code when the request was not proxied to an upstream.\n  Thanks [@backjo](https://github.com/backjo) for contributing this change.\n  [#11152](https://github.com/Kong/kong/pull/11152),\n  [#11406](https://github.com/Kong/kong/pull/11406)\n- Fix a bug that caused the router to fail in `traditional_compatible` mode when a route with multiple paths and no service was created.\n  [#11158](https://github.com/Kong/kong/pull/11158)\n- Fix an issue where the router of flavor `expressions` can not work correctly\n  when `route.protocols` is set to `grpc` or `grpcs`.\n  [#11082](https://github.com/Kong/kong/pull/11082)\n- Fix an issue where the router of flavor `expressions` can not configure https redirection.\n  [#11166](https://github.com/Kong/kong/pull/11166)\n- Added new span attribute `net.peer.name` if balancer_data.hostname is available.\n  Thanks [@backjo](https://github.com/backjo) for contributing this change.\n  [#10723](https://github.com/Kong/kong/pull/10729)\n- Make `kong vault get` CLI command work in dbless mode by injecting the necessary directives into the kong cli nginx.conf.\n  [#11127](https://github.com/Kong/kong/pull/11127)\n  [#11291](https://github.com/Kong/kong/pull/11291)\n- Fix an issue where a crashing Go plugin server process would cause subsequent\n  requests proxied through Kong to execute Go plugins with inconsistent configurations.\n  The issue only affects scenarios where the same Go plugin is applied to different Route\n  or Service entities.\n  [#11306](https://github.com/Kong/kong/pull/11306)\n- Fix an issue where cluster_cert or cluster_ca_cert is inserted into lua_ssl_trusted_certificate before being base64 decoded.\n  [#11385](https://github.com/Kong/kong/pull/11385)\n- Update the DNS client to follow configured timeouts in a more predictable manner.  Also fix a corner case in its\n  behavior that could cause it to resolve incorrectly during transient network and DNS server failures.\n  [#11386](https://github.com/Kong/kong/pull/11386)\n\n#### Admin API\n\n- Fix an issue where `/schemas/plugins/validate` endpoint fails to validate valid plugin configuration\n  when the key of `custom_fields_by_lua` contains dot character(s).\n  [#11091](https://github.com/Kong/kong/pull/11091)\n- Fix an issue with the `/tags/:tag` Admin API returning a JSON object (`{}`) instead of an array (`[]`) for empty data sets.\n  [#11213](https://github.com/Kong/kong/pull/11213)\n\n#### Plugins\n\n- **Response Transformer**: fix an issue that plugin does not transform the response body while upstream returns a Content-Type with +json suffix at subtype.\n  [#10656](https://github.com/Kong/kong/pull/10656)\n- **grpc-gateway**: Fixed an issue that empty (all default value) messages can not be unframed correctly.\n  [#10836](https://github.com/Kong/kong/pull/10836)\n- **ACME**: Fixed sanity test can't work with \"kong\" storage in Hybrid mode\n  [#10852](https://github.com/Kong/kong/pull/10852)\n- **rate-limiting**: Fixed an issue that impact the accuracy with the `redis` policy.\n  Thanks [@giovanibrioni](https://github.com/giovanibrioni) for contributing this change.\n  [#10559](https://github.com/Kong/kong/pull/10559)\n- **Zipkin**: Fixed an issue that traces not being generated correctly when instrumentations are enabled.\n  [#10983](https://github.com/Kong/kong/pull/10983)\n- **Acme**: Fixed string concatenation on cert renewal errors\n  [#11364](https://github.com/Kong/kong/pull/11364)\n- Validation for queue related parameters has been\n  improved. `max_batch_size`, `max_entries` and `max_bytes` are now\n  `integer`s instead of `number`s.  `initial_retry_delay` and\n  `max_retry_delay` must now be `number`s greater than 0.001\n  (seconds).\n  [#10840](https://github.com/Kong/kong/pull/10840)\n\n### Changed\n\n#### Core\n\n- Tracing: new attribute `http.route` added to http request spans.\n  [#10981](https://github.com/Kong/kong/pull/10981)\n- The default value of `lmdb_map_size` config has been bumped to `2048m`\n  from `128m` to accommodate most commonly deployed config sizes in DB-less\n  and Hybrid mode.\n  [#11047](https://github.com/Kong/kong/pull/11047)\n- The default value of `cluster_max_payload` config has been bumped to `16m`\n  from `4m` to accommodate most commonly deployed config sizes in Hybrid mode.\n  [#11090](https://github.com/Kong/kong/pull/11090)\n- Remove kong branding from kong HTML error template.\n  [#11150](https://github.com/Kong/kong/pull/11150)\n- Drop luasocket in cli\n  [#11177](https://github.com/Kong/kong/pull/11177)\n\n#### Status API\n\n- Remove the database information from the status API when operating in dbless\n  mode or data plane.\n  [#10995](https://github.com/Kong/kong/pull/10995)\n\n### Dependencies\n\n- Bumped lua-resty-openssl from 0.8.20 to 0.8.23\n  [#10837](https://github.com/Kong/kong/pull/10837)\n  [#11099](https://github.com/Kong/kong/pull/11099)\n- Bumped kong-lapis from 1.8.3.1 to 1.14.0.2\n  [#10841](https://github.com/Kong/kong/pull/10841)\n- Bumped lua-resty-events from 0.1.4 to 0.2.0\n  [#10883](https://github.com/Kong/kong/pull/10883)\n  [#11083](https://github.com/Kong/kong/pull/11083)\n  [#11214](https://github.com/Kong/kong/pull/11214)\n- Bumped lua-resty-session from 4.0.3 to 4.0.4\n  [#11011](https://github.com/Kong/kong/pull/11011)\n- Bumped OpenSSL from 1.1.1t to 3.1.1\n  [#10180](https://github.com/Kong/kong/pull/10180)\n  [#11140](https://github.com/Kong/kong/pull/11140)\n- Bumped pgmoon from 1.16.0 to 1.16.2 (Kong's fork)\n  [#11181](https://github.com/Kong/kong/pull/11181)\n  [#11229](https://github.com/Kong/kong/pull/11229)\n- Bumped atc-router from 1.0.5 to 1.2.0\n  [#10100](https://github.com/Kong/kong/pull/10100)\n  [#11071](https://github.com/Kong/kong/pull/11071)\n- Bumped lua-resty-lmdb from 1.1.0 to 1.3.0\n  [#11227](https://github.com/Kong/kong/pull/11227)\n- Bumped lua-ffi-zlib from 0.5 to 0.6\n  [#11373](https://github.com/Kong/kong/pull/11373)\n\n### Known Issues\n- Some referenceable configuration fields, such as the `http_endpoint` field\n  of the `http-log` plugin and the `endpoint` field of the `opentelemetry` plugin,\n  do not accept reference values due to incorrect field validation.\n\n## 3.3.0\n\n### Breaking Changes\n\n#### Core\n\n- The `traditional_compatible` router mode has been made more compatible with the\n  behavior of `traditional` mode by splitting routes with multiple paths into\n  multiple atc routes with separate priorities.  Since the introduction of the new\n  router in Kong Gateway 3.0, `traditional_compatible` mode assigned only one priority\n  to each route, even if different prefix path lengths and regular expressions\n  were mixed in a route. This was not how multiple paths were handled in the\n  `traditional` router and the behavior has now been changed so that a separate\n  priority value is assigned to each path in a route.\n  [#10615](https://github.com/Kong/kong/pull/10615)\n\n#### Plugins\n\n- **http-log, statsd, opentelemetry, datadog**: The queueing system\n  has been reworked, causing some plugin parameters to not function as expected\n  anymore. If you use queues on these plugin, new parameters must be configured.\n  The module `kong.tools.batch_queue` has been renamed to `kong.tools.queue` in\n  the process and the API was changed.  If your custom plugin uses queues, it must\n  be updated to use the new API.\n  See\n  [this blog post](https://konghq.com/blog/product-releases/reworked-plugin-queues-in-kong-gateway-3-3)\n  for a tour of the new queues and how they are parametrized.\n  [#10172](https://github.com/Kong/kong/pull/10172)\n- **http-log**: If the log server responds with a 3xx HTTP status code, the\n  plugin will consider it to be an error and retry according to the retry\n  configuration.  Previously, 3xx status codes would be interpreted as success,\n  causing the log entries to be dropped.\n  [#10172](https://github.com/Kong/kong/pull/10172)\n- **Serverless Functions**: `kong.cache` now points to a cache instance that is dedicated to the\n  Serverless Functions plugins: it does not provide access to the global kong cache. Access to\n  certain fields in kong.configuration has also been restricted.\n  [#10417](https://github.com/Kong/kong/pull/10417)\n- **Zipkin**: The zipkin plugin now uses queues for internal\n  buffering.  The standard queue parameter set is available to\n  control queuing behavior.\n  [#10753](https://github.com/Kong/kong/pull/10753)\n- Tracing: tracing_sampling_rate defaults to 0.01 (trace one of every 100 requests) instead of the previous 1\n  (trace all requests). Tracing all requests is inappropriate for most production systems\n  [#10774](https://github.com/Kong/kong/pull/10774)\n- **Proxy Cache**: Add option to remove the proxy cache headers from the response\n  [#10445](https://github.com/Kong/kong/pull/10445)\n\n### Additions\n\n#### Core\n\n- Make runloop and init error response content types compliant with Accept header value\n  [#10366](https://github.com/Kong/kong/pull/10366)\n- Add a new field `updated_at` for core entities ca_certificates, certificates, consumers,\n  targets, upstreams, plugins, workspaces, clustering_data_planes and snis.\n  [#10400](https://github.com/Kong/kong/pull/10400)\n- Allow configuring custom error templates\n  [#10374](https://github.com/Kong/kong/pull/10374)\n- The maximum number of request headers, response headers, uri args, and post args that are\n  parsed by default can now be configured with a new configuration parameters:\n  `lua_max_req_headers`, `lua_max_resp_headers`, `lua_max_uri_args` and `lua_max_post_args`\n  [#10443](https://github.com/Kong/kong/pull/10443)\n- Allow configuring Labels for data planes to provide metadata information.\n  Labels are only compatible with hybrid mode deployments with Kong Konnect (SaaS)\n  [#10471](https://github.com/Kong/kong/pull/10471)\n- Add Postgres triggers on the core entites and entities in bundled plugins to delete the\n  expired rows in an efficient and timely manner.\n  [#10389](https://github.com/Kong/kong/pull/10389)\n- Support for configurable Node IDs\n  [#10385](https://github.com/Kong/kong/pull/10385)\n- Request and response buffering options are now enabled for incoming HTTP 2.0 requests too.\n  Thanks [@PidgeyBE](https://github.com/PidgeyBE) for contributing this change.\n  [#10595](https://github.com/Kong/kong/pull/10595)\n  [#10204](https://github.com/Kong/kong/pull/10204)\n- Add `KONG_UPSTREAM_DNS_TIME` to `kong.ctx` so that we can record the time it takes for DNS\n  resolution when Kong proxies to upstream.\n  [#10355](https://github.com/Kong/kong/pull/10355)\n- Tracing: rename spans to simplify filtering on tracing backends.\n  [#10577](https://github.com/Kong/kong/pull/10577)\n- Support timeout for dynamic log level\n  [#10288](https://github.com/Kong/kong/pull/10288)\n- Added new span attribute `http.client_ip` to capture the client IP when behind a proxy.\n  Thanks [@backjo](https://github.com/backjo) for this contribution!\n  [#10723](https://github.com/Kong/kong/pull/10723)\n\n#### Admin API\n\n- The `/upstreams/<upstream>/health?balancer_health=1` endpoint always shows the balancer health,\n  through a new attribute balancer_health, which always returns HEALTHY or UNHEALTHY (reporting\n  the true state of the balancer), even if the overall upstream health status is HEALTHCHECKS_OFF.\n  This is useful for debugging.\n  [#5885](https://github.com/Kong/kong/pull/5885)\n\n#### Status API\n\n- The `status_listen` server has been enhanced with the addition of the\n  `/status/ready` API for monitoring Kong's health.\n  This endpoint provides a `200` response upon receiving a `GET` request,\n  but only if a valid, non-empty configuration is loaded and Kong is\n  prepared to process user requests.\n  Load balancers frequently utilize this functionality to ascertain\n  Kong's availability to distribute incoming requests.\n  [#10610](https://github.com/Kong/kong/pull/10610)\n  [#10787](https://github.com/Kong/kong/pull/10787)\n\n#### Plugins\n\n- **ACME**: acme plugin now supports configuring an `account_key` in `keys` and `key_sets`\n  [#9746](https://github.com/Kong/kong/pull/9746)\n- **Proxy-Cache**: add `ignore_uri_case` to configuring cache-key uri to be handled as lowercase\n  [#10453](https://github.com/Kong/kong/pull/10453)\n- **HTTP-Log**: add `application/json; charset=utf-8` option for the `Content-Type` header\n  in the http-log plugin, for log collectors that require that character set declaration.\n  [#10533](https://github.com/Kong/kong/pull/10533)\n- **DataDog**: supports value of `host` to be referenceable.\n  [#10484](https://github.com/Kong/kong/pull/10484)\n- **Zipkin&Opentelemetry**: convert traceid in http response headers to hex format\n  [#10534](https://github.com/Kong/kong/pull/10534)\n- **ACME**: acme plugin now supports configuring `namespace` for redis storage\n  which is default to empty string for backward compatibility.\n  [#10562](https://github.com/Kong/kong/pull/10562)\n- **AWS Lambda**: add a new field `disable_https` to support scheme config on lambda service api endpoint\n  [#9799](https://github.com/Kong/kong/pull/9799)\n- **OpenTelemetry**: spans are now correctly correlated in downstream Datadog traces.\n  [10531](https://github.com/Kong/kong/pull/10531)\n- **OpenTelemetry**: add `header_type` field in OpenTelemetry plugin.\n  Previously, the `header_type` was hardcoded to `preserve`, now it can be set to one of the\n  following values: `preserve`, `ignore`, `b3`, `b3-single`, `w3c`, `jaeger`, `ot`.\n  [#10620](https://github.com/Kong/kong/pull/10620)\n\n#### PDK\n\n- PDK now supports getting plugins' ID with `kong.plugin.get_id`.\n  [#9903](https://github.com/Kong/kong/pull/9903)\n\n### Fixes\n\n#### Core\n\n- Fixed an issue where upstream keepalive pool has CRC32 collision.\n  [#9856](https://github.com/Kong/kong/pull/9856)\n- Fix an issue where control plane does not downgrade config for `aws_lambda` and `zipkin` for older version of data planes.\n  [#10346](https://github.com/Kong/kong/pull/10346)\n- Fix an issue where control plane does not rename fields correctly for `session` for older version of data planes.\n  [#10352](https://github.com/Kong/kong/pull/10352)\n- Fix an issue where validation to regex routes may be skipped when the old-fashioned config is used for DB-less Kong.\n  [#10348](https://github.com/Kong/kong/pull/10348)\n- Fix and issue where tracing may cause unexpected behavior.\n  [#10364](https://github.com/Kong/kong/pull/10364)\n- Fix an issue where balancer passive healthcheck would use wrong status code when kong changes status code\n  from upstream in `header_filter` phase.\n  [#10325](https://github.com/Kong/kong/pull/10325)\n  [#10592](https://github.com/Kong/kong/pull/10592)\n- Fix an issue where schema validations failing in a nested record did not propagate the error correctly.\n  [#10449](https://github.com/Kong/kong/pull/10449)\n- Fixed an issue where dangling Unix sockets would prevent Kong from restarting in\n  Docker containers if it was not cleanly stopped.\n  [#10468](https://github.com/Kong/kong/pull/10468)\n- Fix an issue where sorting function for traditional router sources/destinations lead to \"invalid order\n  function for sorting\" error.\n  [#10514](https://github.com/Kong/kong/pull/10514)\n- Fix the UDP socket leak caused by frequent DNS queries.\n  [#10691](https://github.com/Kong/kong/pull/10691)\n- Fix a typo of mlcache option `shm_set_tries`.\n  [#10712](https://github.com/Kong/kong/pull/10712)\n- Fix an issue where slow start up of Go plugin server causes dead lock.\n  [#10561](https://github.com/Kong/kong/pull/10561)\n- Tracing: fix an issue that caused the `sampled` flag of incoming propagation\n  headers to be handled incorrectly and only affect some spans.\n  [#10655](https://github.com/Kong/kong/pull/10655)\n- Tracing: fix an issue that was preventing `http_client` spans to be created for OpenResty HTTP client requests.\n  [#10680](https://github.com/Kong/kong/pull/10680)\n- Tracing: fix an approximation issue that resulted in reduced precision of the balancer span start and end times.\n  [#10681](https://github.com/Kong/kong/pull/10681)\n- Tracing: tracing_sampling_rate defaults to 0.01 (trace one of every 100 requests) instead of the previous 1\n  (trace all requests). Tracing all requests is inappropriate for most production systems\n  [#10774](https://github.com/Kong/kong/pull/10774)\n- Fix issue when stopping a Kong could error out if using Vault references\n  [#10775](https://github.com/Kong/kong/pull/10775)\n- Fix issue where Vault configuration stayed sticky and cached even when configurations were changed.\n  [#10776](https://github.com/Kong/kong/pull/10776)\n- Backported the openresty `ngx.print` chunk encoding buffer double free bug fix that\n  leads to the corruption of chunk-encoded response data.\n  [#10816](https://github.com/Kong/kong/pull/10816)\n  [#10824](https://github.com/Kong/kong/pull/10824)\n\n\n#### Admin API\n\n- Fix an issue where empty value of URI argument `custom_id` crashes `/consumer`.\n  [#10475](https://github.com/Kong/kong/pull/10475)\n\n#### Plugins\n\n- **Request-Transformer**: fix an issue where requests would intermittently\n  be proxied with incorrect query parameters.\n  [10539](https://github.com/Kong/kong/pull/10539)\n- **Request Transformer**: honor value of untrusted_lua configuration parameter\n  [#10327](https://github.com/Kong/kong/pull/10327)\n- **OAuth2**: fix an issue that OAuth2 token was being cached to nil while access to the wrong service first.\n  [#10522](https://github.com/Kong/kong/pull/10522)\n- **OpenTelemetry**: fix an issue that reconfigure of OpenTelemetry does not take effect.\n  [#10172](https://github.com/Kong/kong/pull/10172)\n- **OpenTelemetry**: fix an issue that caused spans to be propagated incorrectly\n  resulting in a wrong hierarchy being rendered on tracing backends.\n  [#10663](https://github.com/Kong/kong/pull/10663)\n- **gRPC gateway**: `null` in the JSON payload caused an uncaught exception to be thrown during pb.encode.\n  [#10687](https://github.com/Kong/kong/pull/10687)\n- **Oauth2**: prevent an authorization code created by one plugin instance to be exchanged for an access token by a different plugin instance.\n  [#10011](https://github.com/Kong/kong/pull/10011)\n- **gRPC gateway**: fixed an issue that empty arrays in JSON are incorrectly encoded as `\"{}\"`; they are\nnow encoded as `\"[]\"` to comply with standard.\n  [#10790](https://github.com/Kong/kong/pull/10790)\n\n#### PDK\n\n- Fixed an issue for tracing PDK where sample rate does not work.\n  [#10485](https://github.com/Kong/kong/pull/10485)\n\n### Changed\n\n#### Core\n\n- Postgres TTL cleanup timer will now only run on traditional and control plane nodes that have enabled the Admin API.\n  [#10405](https://github.com/Kong/kong/pull/10405)\n- Postgres TTL cleanup timer now runs a batch delete loop on each ttl enabled table with a number of 50.000 rows per batch.\n  [#10407](https://github.com/Kong/kong/pull/10407)\n- Postgres TTL cleanup timer now runs every 5 minutes instead of every 60 seconds.\n  [#10389](https://github.com/Kong/kong/pull/10389)\n- Postgres TTL cleanup timer now deletes expired rows based on database server-side timestamp to avoid potential\n  problems caused by the difference of clock time between Kong and database server.\n  [#10389](https://github.com/Kong/kong/pull/10389)\n\n#### PDK\n\n- `request.get_uri_captures` now returns the unnamed part tagged as an array (for jsonification).\n  [#10390](https://github.com/Kong/kong/pull/10390)\n\n#### Plugins\n\n- **Request-Termination**: If the echo option was used, it would not return the uri-captures.\n  [#10390](https://github.com/Kong/kong/pull/10390)\n- **OpenTelemetry**: add `http_response_header_for_traceid` field in OpenTelemetry plugin.\n  The plugin will set the corresponding header in the response\n  if the field is specified with a string value.\n  [#10379](https://github.com/Kong/kong/pull/10379)\n\n### Dependencies\n\n- Bumped lua-resty-session from 4.0.2 to 4.0.3\n  [#10338](https://github.com/Kong/kong/pull/10338)\n- Bumped lua-protobuf from 0.3.3 to 0.5.0\n  [#10137](https://github.com/Kong/kong/pull/10413)\n  [#10790](https://github.com/Kong/kong/pull/10790)\n- Bumped lua-resty-timer-ng from 0.2.3 to 0.2.5\n  [#10419](https://github.com/Kong/kong/pull/10419)\n  [#10664](https://github.com/Kong/kong/pull/10664)\n- Bumped lua-resty-openssl from 0.8.17 to 0.8.20\n  [#10463](https://github.com/Kong/kong/pull/10463)\n  [#10476](https://github.com/Kong/kong/pull/10476)\n- Bumped lua-resty-http from 0.17.0.beta.1 to 0.17.1\n  [#10547](https://github.com/Kong/kong/pull/10547)\n- Bumped LuaSec from 1.2.0 to 1.3.1\n  [#10528](https://github.com/Kong/kong/pull/10528)\n- Bumped lua-resty-acme from 0.10.1 to 0.11.0\n  [#10562](https://github.com/Kong/kong/pull/10562)\n- Bumped lua-resty-events from 0.1.3 to 0.1.4\n  [#10634](https://github.com/Kong/kong/pull/10634)\n- Bumped lua-kong-nginx-module from 0.5.1 to 0.6.0\n  [#10288](https://github.com/Kong/kong/pull/10288)\n- Bumped lua-resty-lmdb from 1.0.0 to 1.1.0\n  [#10766](https://github.com/Kong/kong/pull/10766)\n\n## 3.2.0\n\n### Breaking Changes\n\n#### Plugins\n\n- **JWT**: JWT plugin now denies a request that has different tokens in the jwt token search locations.\n  [#9946](https://github.com/Kong/kong/pull/9946)\n- **Session**: for sessions to work as expected it is required that all nodes run Kong >= 3.2.x.\n  For that reason it is advisable that during upgrades mixed versions of proxy nodes run for\n  as little as possible. During that time, the invalid sessions could cause failures and partial downtime.\n  All existing sessions are invalidated when upgrading to this version.\n  The parameter `idling_timeout` now has a default value of `900`: unless configured differently,\n  sessions expire after 900 seconds (15 minutes) of idling.\n  The parameter `absolute_timeout` has a default value of `86400`: unless configured differently,\n  sessions expire after 86400 seconds (24 hours).\n  [#10199](https://github.com/Kong/kong/pull/10199)\n- **Proxy Cache**: Add wildcard and parameter match support for content_type\n  [#10209](https://github.com/Kong/kong/pull/10209)\n\n### Additions\n\n#### Core\n\n- Expose postgres connection pool configuration.\n  [#9603](https://github.com/Kong/kong/pull/9603)\n- When `router_flavor` is `traditional_compatible`, verify routes created using the\n  Expression router instead of the traditional router to ensure created routes\n  are actually compatible.\n  [#9987](https://github.com/Kong/kong/pull/9987)\n- Nginx charset directive can now be configured with Nginx directive injections\n  [#10111](https://github.com/Kong/kong/pull/10111)\n- Services upstream TLS config is extended to stream subsystem.\n  [#9947](https://github.com/Kong/kong/pull/9947)\n- New configuration option `ssl_session_cache_size` to set the Nginx directive `ssl_session_cache`.\n  This config defaults to `10m`.\n  Thanks [Michael Kotten](https://github.com/michbeck100) for contributing this change.\n  [#10021](https://github.com/Kong/kong/pull/10021)\n\n#### Balancer\n\n- Add a new load-balancing `algorithm` option `latency` to the `Upstream` entity.\n  This algorithm will choose a target based on the response latency of each target\n  from prior requests.\n  [#9787](https://github.com/Kong/kong/pull/9787)\n\n#### Plugins\n\n- **Plugin**: add an optional field `instance_name` that identifies a\n  particular plugin entity.\n  [#10077](https://github.com/Kong/kong/pull/10077)\n- **Zipkin**: Add support to set the durations of Kong phases as span tags\n  through configuration property `config.phase_duration_flavor`.\n  [#9891](https://github.com/Kong/kong/pull/9891)\n- **HTTP logging**: Suppport value of `headers` to be referenceable.\n  [#9948](https://github.com/Kong/kong/pull/9948)\n- **AWS Lambda**: Add `aws_imds_protocol_version` configuration\n  parameter that allows the selection of the IMDS protocol version.\n  Defaults to `v1`, can be set to `v2` to enable IMDSv2.\n  [#9962](https://github.com/Kong/kong/pull/9962)\n- **OpenTelemetry**: Support scoping with services, routes and consumers.\n  [#10096](https://github.com/Kong/kong/pull/10096)\n- **Statsd**: Add `tag_style` configuration\n  parameter that allows to send metrics with [tags](https://github.com/prometheus/statsd_exporter#tagging-extensions).\n  Defaults to `nil` which means do not add any tags\n  to the metrics.\n  [#10118](https://github.com/Kong/kong/pull/10118)\n- **Session**: now uses lua-resty-session v4.0.0\n  [#10199](https://github.com/Kong/kong/pull/10199)\n\n#### Admin API\n\n- In dbless mode, `/config` API endpoint can now flatten entity-related schema\n  validation errors to a single array via the optional `flatten_errors` query\n  parameter. Non-entity errors remain unchanged in this mode.\n  [#10161](https://github.com/Kong/kong/pull/10161)\n  [#10256](https://github.com/Kong/kong/pull/10256)\n\n#### PDK\n\n- Support for `upstream_status` field in log serializer.\n  [#10296](https://github.com/Kong/kong/pull/10296)\n\n### Fixes\n\n#### Core\n\n- Add back Postgres `FLOOR` function when calculating `ttl`, so the returned `ttl` is always a whole integer.\n  [#9960](https://github.com/Kong/kong/pull/9960)\n- Fix an issue where after a valid declarative configuration is loaded,\n  the configuration hash is incorrectly set to the value: `00000000000000000000000000000000`.\n  [#9911](https://github.com/Kong/kong/pull/9911)\n- Update the batch queues module so that queues no longer grow without bounds if\n  their consumers fail to process the entries.  Instead, old batches are now dropped\n  and an error is logged.\n  [#10247](https://github.com/Kong/kong/pull/10247)\n- Fix an issue where 'X-Kong-Upstream-Status' cannot be emitted when response is buffered.\n  [#10056](https://github.com/Kong/kong/pull/10056)\n\n#### Plugins\n\n- **Zipkin**: Fix an issue where the global plugin's sample ratio overrides route-specific.\n  [#9877](https://github.com/Kong/kong/pull/9877)\n- **JWT**: Deny requests that have different tokens in the jwt token search locations. Thanks Jackson 'Che-Chun' Kuo from Latacora for reporting this issue.\n  [#9946](https://github.com/Kong/kong/pull/9946)\n- **Statsd**: Fix a bug in the StatsD plugin batch queue processing where metrics are published multiple times.\n  [#10052](https://github.com/Kong/kong/pull/10052)\n- **Datadog**: Fix a bug in the Datadog plugin batch queue processing where metrics are published multiple times.\n  [#10044](https://github.com/Kong/kong/pull/10044)\n- **OpenTelemetry**: Fix non-compliances to specification:\n  - For `http.uri` in spans. The field should be full HTTP URI.\n    [#10069](https://github.com/Kong/kong/pull/10069)\n  - For `http.status_code`. It should be present on spans for requests that have a status code.\n    [#10160](https://github.com/Kong/kong/pull/10160)\n  - For `http.flavor`. It should be a string value, not a double.\n    [#10160](https://github.com/Kong/kong/pull/10160)\n- **OpenTelemetry**: Fix a bug that when getting the trace of other formats, the trace ID reported and propagated could be of incorrect length.\n    [#10332](https://github.com/Kong/kong/pull/10332)\n- **OAuth2**: `refresh_token_ttl` is now limited between `0` and `100000000` by schema validator. Previously numbers that are too large causes requests to fail.\n  [#10068](https://github.com/Kong/kong/pull/10068)\n\n### Changed\n\n#### Core\n\n- Improve error message for invalid JWK entities.\n  [#9904](https://github.com/Kong/kong/pull/9904)\n- Renamed two configuration properties:\n    * `opentelemetry_tracing` => `tracing_instrumentations`\n    * `opentelemetry_tracing_sampling_rate` => `tracing_sampling_rate`\n\n  The old `opentelemetry_*` properties are considered deprecated and will be\n  fully removed in a future version of Kong.\n  [#10122](https://github.com/Kong/kong/pull/10122)\n  [#10220](https://github.com/Kong/kong/pull/10220)\n\n#### Hybrid Mode\n\n- Revert the removal of WebSocket protocol support for configuration sync,\n  and disable the wRPC protocol.\n  [#9921](https://github.com/Kong/kong/pull/9921)\n\n### Dependencies\n\n- Bumped luarocks from 3.9.1 to 3.9.2\n  [#9942](https://github.com/Kong/kong/pull/9942)\n- Bumped atc-router from 1.0.1 to 1.0.5\n  [#9925](https://github.com/Kong/kong/pull/9925)\n  [#10143](https://github.com/Kong/kong/pull/10143)\n  [#10208](https://github.com/Kong/kong/pull/10208)\n- Bumped lua-resty-openssl from 0.8.15 to 0.8.17\n  [#9583](https://github.com/Kong/kong/pull/9583)\n  [#10144](https://github.com/Kong/kong/pull/10144)\n- Bumped lua-kong-nginx-module from 0.5.0 to 0.5.1\n  [#10181](https://github.com/Kong/kong/pull/10181)\n- Bumped lua-resty-session from 3.10 to 4.0.2\n  [#10199](https://github.com/Kong/kong/pull/10199)\n  [#10230](https://github.com/Kong/kong/pull/10230)\n  [#10308](https://github.com/Kong/kong/pull/10308)\n- Bumped OpenSSL from 1.1.1s to 1.1.1t\n  [#10266](https://github.com/Kong/kong/pull/10266)\n- Bumped lua-resty-timer-ng from 0.2.0 to 0.2.3\n  [#10265](https://github.com/Kong/kong/pull/10265)\n\n\n## 3.1.0\n\n### Breaking Changes\n\n#### Core\n\n- Change the reponse body for a TRACE method from `The upstream server responded with 405`\n  to `Method not allowed`, make the reponse to show more clearly that Kong do not support\n  TRACE method.\n  [#9448](https://github.com/Kong/kong/pull/9448)\n- Add `allow_debug_header` Kong conf to allow use of the `Kong-Debug` header for debugging.\n  This option defaults to `off`.\n  [#10054](https://github.com/Kong/kong/pull/10054)\n  [#10125](https://github.com/Kong/kong/pull/10125)\n\n\n### Additions\n\n#### Core\n\n- Allow `kong.conf` ssl properties to be stored in vaults or environment\n  variables. Allow such properties to be configured directly as content\n  or base64 encoded content.\n  [#9253](https://github.com/Kong/kong/pull/9253)\n- Add support for full entity transformations in schemas\n  [#9431](https://github.com/Kong/kong/pull/9431)\n- Allow schema `map` type field being marked as referenceable.\n  [#9611](https://github.com/Kong/kong/pull/9611)\n- Add support for dynamically changing the log level\n  [#9744](https://github.com/Kong/kong/pull/9744)\n- Add `keys` entity to store and manage asymmetric keys.\n  [#9737](https://github.com/Kong/kong/pull/9737)\n- Add `key-sets` entity to group and manage `keys`\n  [#9737](https://github.com/Kong/kong/pull/9737)\n\n#### Plugins\n\n- **Rate-limiting**: The HTTP status code and response body for rate-limited\n  requests can now be customized. Thanks, [@utix](https://github.com/utix)!\n  [#8930](https://github.com/Kong/kong/pull/8930)\n- **Zipkin**: add `response_header_for_traceid` field in Zipkin plugin.\n  The plugin will set the corresponding header in the response\n  if the field is specified with a string value.\n  [#9173](https://github.com/Kong/kong/pull/9173)\n- **AWS Lambda**: add `requestContext` field into `awsgateway_compatible` input data\n  [#9380](https://github.com/Kong/kong/pull/9380)\n- **ACME**: add support for Redis SSL, through configuration properties\n  `config.storage_config.redis.ssl`, `config.storage_config.redis.ssl_verify`,\n  and `config.storage_config.redis.ssl_server_name`.\n  [#9626](https://github.com/Kong/kong/pull/9626)\n- **Session**: Add new config `cookie_persistent` that allows browser to persist\n  cookies even if browser is closed. This defaults to `false` which means\n  cookies are not persistend across browser restarts. Thanks [@tschaume](https://github.com/tschaume)\n  for this contribution!\n  [#8187](https://github.com/Kong/kong/pull/8187)\n- **Response-rate-limiting**: add support for Redis SSL, through configuration properties\n  `redis_ssl` (can be set to `true` or `false`), `ssl_verify`, and `ssl_server_name`.\n  [#8595](https://github.com/Kong/kong/pull/8595)\n  Thanks [@dominikkukacka](https://github.com/dominikkukacka)!\n- **OpenTelemetry**: add referenceable attribute to the `headers` field\n  that could be stored in vaults.\n  [#9611](https://github.com/Kong/kong/pull/9611)\n- **HTTP-Log**: Support `http_endpoint` field to be referenceable\n  [#9714](https://github.com/Kong/kong/pull/9714)\n- **rate-limiting**: Add a new configuration `sync_rate` to the `redis` policy,\n  which synchronizes metrics to redis periodically instead of on every request.\n  [#9538](https://github.com/Kong/kong/pull/9538)\n\n\n#### Hybrid Mode\n\n- Data plane node IDs will now persist across restarts.\n  [#9067](https://github.com/Kong/kong/pull/9067)\n- Add HTTP CONNECT forward proxy support for Hybrid Mode connections. New configuration\n  options `cluster_use_proxy`, `proxy_server` and `proxy_server_ssl_verify` are added.\n  [#9758](https://github.com/Kong/kong/pull/9758)\n  [#9773](https://github.com/Kong/kong/pull/9773)\n\n#### Performance\n\n- Increase the default value of `lua_regex_cache_max_entries`, a warning will be thrown\n  when there are too many regex routes and `router_flavor` is `traditional`.\n  [#9624](https://github.com/Kong/kong/pull/9624)\n- Add batch queue into the Datadog and StatsD plugin to reduce timer usage.\n  [#9521](https://github.com/Kong/kong/pull/9521)\n\n#### PDK\n\n- Extend `kong.client.tls.request_client_certificate` to support setting\n  the Distinguished Name (DN) list hints of the accepted CA certificates.\n  [#9768](https://github.com/Kong/kong/pull/9768)\n\n### Fixes\n\n#### Core\n\n- Fix issue where external plugins crashing with unhandled exceptions\n  would cause high CPU utilization after the automatic restart.\n  [#9384](https://github.com/Kong/kong/pull/9384)\n- Fix issue where Zipkin plugin cannot parse OT baggage headers\n  due to invalid OT baggage pattern. [#9280](https://github.com/Kong/kong/pull/9280)\n- Add `use_srv_name` options to upstream for balancer.\n  [#9430](https://github.com/Kong/kong/pull/9430)\n- Fix issue in `header_filter` instrumentation where the span was not\n  correctly created.\n  [#9434](https://github.com/Kong/kong/pull/9434)\n- Fix issue in router building where when field contains an empty table,\n  the generated expression is invalid.\n  [#9451](https://github.com/Kong/kong/pull/9451)\n- Fix issue in router rebuilding where when paths field is invalid,\n  the router's mutex is not released properly.\n  [#9480](https://github.com/Kong/kong/pull/9480)\n- Fixed an issue where `kong docker-start` would fail if `KONG_PREFIX` was set to\n  a relative path.\n  [#9337](https://github.com/Kong/kong/pull/9337)\n- Fixed an issue with error-handling and process cleanup in `kong start`.\n  [#9337](https://github.com/Kong/kong/pull/9337)\n\n#### Hybrid Mode\n\n- Fixed a race condition that can cause configuration push events to be dropped\n  when the first data-plane connection is established with a control-plane\n  worker.\n  [#9616](https://github.com/Kong/kong/pull/9616)\n\n#### CLI\n\n- Fix slow CLI performance due to pending timer jobs\n  [#9536](https://github.com/Kong/kong/pull/9536)\n\n#### Admin API\n\n- Increase the maximum request argument number from `100` to `1000`,\n  and return `400` error if request parameters reach the limitation to\n  avoid being truncated.\n  [#9510](https://github.com/Kong/kong/pull/9510)\n- Paging size parameter is now propogated to next page if specified\n  in current request.\n  [#9503](https://github.com/Kong/kong/pull/9503)\n- Non-normalized prefix route path is now rejected. It will also suggest\n  how to write the path in normalized form.\n  [#9760](https://github.com/Kong/kong/pull/9760)\n\n#### PDK\n\n- Added support for `kong.request.get_uri_captures`\n  (`kong.request.getUriCaptures`)\n  [#9512](https://github.com/Kong/kong/pull/9512)\n- Fixed parameter type of `kong.service.request.set_raw_body`\n  (`kong.service.request.setRawBody`), return type of\n  `kong.service.response.get_raw_body`(`kong.service.request.getRawBody`),\n  and body parameter type of `kong.response.exit` to bytes. Note that old\n  version of go PDK is incompatible after this change.\n  [#9526](https://github.com/Kong/kong/pull/9526)\n- Vault will not call `semaphore:wait` in `init` or `init_worker` phase.\n  [#9851](https://github.com/Kong/kong/pull/9851)\n\n#### Plugins\n\n- Add missing `protocols` field to various plugin schemas.\n  [#9525](https://github.com/Kong/kong/pull/9525)\n- **AWS Lambda**: Fix an issue that is causing inability to\n  read environment variables in ECS environment.\n  [#9460](https://github.com/Kong/kong/pull/9460)\n- **Request-Transformer**: fix a bug when header renaming will override\n  existing header and cause unpredictable result.\n  [#9442](https://github.com/Kong/kong/pull/9442)\n- **OpenTelemetry**:\n  - Fix an issue that the default propagation header\n    is not configured to `w3c` correctly.\n    [#9457](https://github.com/Kong/kong/pull/9457)\n  - Replace the worker-level table cache with\n    `BatchQueue` to avoid data race.\n    [#9504](https://github.com/Kong/kong/pull/9504)\n  - Fix an issue that the `parent_id` is not set\n    on the span when propagating w3c traceparent.\n    [#9628](https://github.com/Kong/kong/pull/9628)\n- **Response-Transformer**: Fix the bug that Response-Transformer plugin\n  breaks when receiving an unexcepted body.\n  [#9463](https://github.com/Kong/kong/pull/9463)\n- **HTTP-Log**: Fix an issue where queue id serialization\n  does not include `queue_size` and `flush_timeout`.\n  [#9789](https://github.com/Kong/kong/pull/9789)\n\n### Changed\n\n#### Hybrid Mode\n\n- The legacy hybrid configuration protocol has been removed in favor of the wRPC\n  protocol introduced in 3.0.\n  [#9740](https://github.com/Kong/kong/pull/9740)\n\n### Dependencies\n\n- Bumped openssl from 1.1.1q to 1.1.1s\n  [#9674](https://github.com/Kong/kong/pull/9674)\n- Bumped atc-router from 1.0.0 to 1.0.1\n  [#9558](https://github.com/Kong/kong/pull/9558)\n- Bumped lua-resty-openssl from 0.8.10 to 0.8.15\n  [#9583](https://github.com/Kong/kong/pull/9583)\n  [#9600](https://github.com/Kong/kong/pull/9600)\n  [#9675](https://github.com/Kong/kong/pull/9675)\n- Bumped lyaml from 6.2.7 to 6.2.8\n  [#9607](https://github.com/Kong/kong/pull/9607)\n- Bumped lua-resty-acme from 0.8.1 to 0.9.0\n  [#9626](https://github.com/Kong/kong/pull/9626)\n- Bumped resty.healthcheck from 1.6.1 to 1.6.2\n  [#9778](https://github.com/Kong/kong/pull/9778)\n- Bumped pgmoon from 1.15.0 to 1.16.0\n  [#9815](https://github.com/Kong/kong/pull/9815)\n\n\n## [3.0.1]\n\n### Fixes\n\n#### Core\n\n- Fix issue where Zipkin plugin cannot parse OT baggage headers\n  due to invalid OT baggage pattern. [#9280](https://github.com/Kong/kong/pull/9280)\n- Fix issue in `header_filter` instrumentation where the span was not\n  correctly created.\n  [#9434](https://github.com/Kong/kong/pull/9434)\n- Fix issue in router building where when field contains an empty table,\n  the generated expression is invalid.\n  [#9451](https://github.com/Kong/kong/pull/9451)\n- Fix issue in router rebuilding where when paths field is invalid,\n  the router's mutex is not released properly.\n  [#9480](https://github.com/Kong/kong/pull/9480)\n- Fixed an issue where `kong docker-start` would fail if `KONG_PREFIX` was set to\n  a relative path.\n  [#9337](https://github.com/Kong/kong/pull/9337)\n- Fixed an issue with error-handling and process cleanup in `kong start`.\n  [#9337](https://github.com/Kong/kong/pull/9337)\n\n\n## [3.0.0]\n\n> Released 2022/09/12\n\nThis major release adds a new router written in Rust and a tracing API\nthat is compatible with the OpenTelemetry API spec.  Furthermore,\nvarious internal changes have been made to improve Kong's performance\nand memory consumption.  As it is a major release, users are advised\nto review the list of braking changes to determine whether\nconfiguration changes are needed when upgrading.\n\n### Breaking Changes\n\n#### Deployment\n\n- Blue-green deployment from Kong earlier than `2.1.0` is not supported, upgrade to\n  `2.1.0` or later before upgrading to `3.0.0` to have blue-green deployment.\n  Thank you [@marc-charpentier]((https://github.com/charpentier)) for reporting issue\n  and proposing a pull-request.\n  [#8896](https://github.com/Kong/kong/pull/8896)\n- Deprecate/stop producing Amazon Linux (1) containers and packages (EOLed December 31, 2020)\n  [Kong/docs.konghq.com #3966](https://github.com/Kong/docs.konghq.com/pull/3966)\n- Deprecate/stop producing Debian 8 \"Jessie\" containers and packages (EOLed June 2020)\n  [Kong/kong-build-tools #448](https://github.com/Kong/kong-build-tools/pull/448)\n  [Kong/kong-distributions #766](https://github.com/Kong/kong-distributions/pull/766)\n\n#### Core\n\n\n- Kong schema library's `process_auto_fields` function will not any more make a deep\n  copy of data that is passed to it when the given context is `\"select\"`. This was\n  done to avoid excessive deep copying of tables where we believe the data most of\n  the time comes from a driver like `pgmoon` or `lmdb`. If a custom plugin relied\n  on `process_auto_fields` not overriding the given table, it must make its own copy\n  before passing it to the function now.\n  [#8796](https://github.com/Kong/kong/pull/8796)\n- The deprecated `shorthands` field in Kong Plugin or DAO schemas was removed in favor\n  or the typed `shorthand_fields`. If your custom schemas still use `shorthands`, you\n  need to update them to use `shorthand_fields`.\n  [#8815](https://github.com/Kong/kong/pull/8815)\n- The support for `legacy = true/false` attribute was removed from Kong schemas and\n  Kong field schemas.\n  [#8958](https://github.com/Kong/kong/pull/8958)\n- The deprecated alias of `Kong.serve_admin_api` was removed. If your custom Nginx\n  templates still use it, please change it to `Kong.admin_content`.\n  [#8815](https://github.com/Kong/kong/pull/8815)\n- The Kong singletons module `\"kong.singletons\"` was removed in favor of the PDK `kong.*`.\n  [#8874](https://github.com/Kong/kong/pull/8874)\n- The dataplane config cache was removed. The config persistence is now done automatically with LMDB.\n  [#8704](https://github.com/Kong/kong/pull/8704)\n- `ngx.ctx.balancer_address` does not exist anymore, please use `ngx.ctx.balancer_data` instead.\n  [#9043](https://github.com/Kong/kong/pull/9043)\n- We have changed the normalization rules for `route.path`: Kong stores the unnormalized path, but\n  regex path always pattern matches with the normalized URI. We used to replace percent-encoding\n  in regex path pattern to ensure different forms of URI matches.\n  That is no longer supported. Except for reserved characters defined in\n  [rfc3986](https://datatracker.ietf.org/doc/html/rfc3986#section-2.2),\n  we should write all other characters without percent-encoding.\n  [#9024](https://github.com/Kong/kong/pull/9024)\n- Kong will no longer use an heuristic to guess whether a `route.path` is a regex pattern. From now 3.0 onwards,\n  all regex paths must start with the `\"~\"` prefix, and all paths that don't start with `\"~\"` will be considered plain text.\n  The migration process should automatically convert the regex paths when upgrading from 2.x to 3.0\n  [#9027](https://github.com/Kong/kong/pull/9027)\n- Bumping version number (`_format_version`) of declarative configuration to \"3.0\" for changes on `route.path`.\n  Declaritive configuration with older version are upgraded to \"3.0\" on the fly.\n  [#9078](https://github.com/Kong/kong/pull/9078)\n- Removed deprecated `config.functions` from serverless-functions plugin's schema,\n  please use `config.access` phase instead.\n  [#8559](https://github.com/Kong/kong/pull/8559)\n- Tags may now contain space characters.\n  [#9143](https://github.com/Kong/kong/pull/9143)\n- The [Secrets Management](https://docs.konghq.com/gateway/latest/plan-and-deploy/security/secrets-management/)\n  feature, which has been in beta since release 2.8.0, is now included as a regular feature.\n  [#8871](https://github.com/Kong/kong/pull/8871)\n  [#9217](https://github.com/Kong/kong/pull/9217)\n\n#### Admin API\n\n- `POST` requests on Targets endpoint are no longer able to update\n  existing entities, they are only able to create new ones.\n  [#8596](https://github.com/Kong/kong/pull/8596),\n  [#8798](https://github.com/Kong/kong/pull/8798). If you have scripts that use\n  `POST` requests to modify Targets, you should change them to `PUT`\n  requests to the appropriate endpoints before updating to Kong 3.0.\n- Insert and update operations on duplicated Targets returns 409.\n  [#8179](https://github.com/Kong/kong/pull/8179),\n  [#8768](https://github.com/Kong/kong/pull/8768)\n- The list of reported plugins available on the server now returns a table of\n  metadata per plugin instead of a boolean `true`.\n  [#8810](https://github.com/Kong/kong/pull/8810)\n\n#### PDK\n\n- The `kong.request.get_path()` PDK function now performs path normalization\n  on the string that is returned to the caller. The raw, non-normalized version\n  of the request path can be fetched via `kong.request.get_raw_path()`.\n  [#8823](https://github.com/Kong/kong/pull/8823)\n- `pdk.response.set_header()`, `pdk.response.set_headers()`, `pdk.response.exit()` now ignore and emit warnings for manually set `Transfer-Encoding` headers.\n  [#8698](https://github.com/Kong/kong/pull/8698)\n- The PDK is no longer versioned\n  [#8585](https://github.com/Kong/kong/pull/8585)\n- The JavaScript PDK now returns `Uint8Array` for `kong.request.getRawBody`,\n  `kong.response.getRawBody` and `kong.service.response.getRawBody`. The Python PDK returns `bytes` for `kong.request.get_raw_body`,\n  `kong.response.get_raw_body`, `kong.service.response.get_raw_body`. All these funtions used to return strings in the past.\n  [#8623](https://github.com/Kong/kong/pull/8623)\n\n#### Plugins\n\n- DAOs in plugins must be listed in an array, so that their loading order is explicit. Loading them in a\n  hash-like table is no longer supported.\n  [#8988](https://github.com/Kong/kong/pull/8988)\n- Plugins MUST now have a valid `PRIORITY` (integer) and `VERSION` (\"x.y.z\" format)\n  field in their `handler.lua` file, otherwise the plugin will fail to load.\n  [#8836](https://github.com/Kong/kong/pull/8836)\n- The old `kong.plugins.log-serializers.basic` library was removed in favor of the PDK\n  function `kong.log.serialize`, please upgrade your plugins to use PDK.\n  [#8815](https://github.com/Kong/kong/pull/8815)\n- The support for deprecated legacy plugin schemas was removed. If your custom plugins\n  still use the old (`0.x era`) schemas, you are now forced to upgrade them.\n  [#8815](https://github.com/Kong/kong/pull/8815)\n- Some plugins received new priority values.\n  This is important for those who run custom plugins as it may affect the sequence your plugins are executed.\n  Note that this does not change the order of execution for plugins in a standard kong installation.\n  List of plugins and their old and new priority value:\n  - `acme` changed from 1007 to 1705\n  - `basic-auth` changed from 1001 to 1100\n  - `hmac-auth` changed from 1000 to 1030\n  - `jwt` changed from 1005 to 1450\n  - `key-auth` changed from 1003 to 1250\n  - `ldap-auth` changed from 1002 to 1200\n  - `oauth2` changed from 1004 to 1400\n  - `rate-limiting` changed from 901 to 910\n- **HTTP-log**: `headers` field now only takes a single string per header name,\n  where it previously took an array of values\n  [#6992](https://github.com/Kong/kong/pull/6992)\n- **AWS Lambda**: `aws_region` field must be set through either plugin config or environment variables,\n  allow both `host` and `aws_region` fields, and always apply SigV4 signature.\n  [#8082](https://github.com/Kong/kong/pull/8082)\n- **Serverless Functions** Removed deprecated `config.functions`,\n  please use `config.access` instead.\n  [#8559](https://github.com/Kong/kong/pull/8559)\n- **Serverless Functions**: The pre-functions plugin changed priority from `+inf` to `1000000`.\n  [#8836](https://github.com/Kong/kong/pull/8836)\n- **JWT**: The authenticated JWT is no longer put into the nginx\n  context (ngx.ctx.authenticated_jwt_token).  Custom plugins which depend on that\n  value being set under that name must be updated to use Kong's shared context\n  instead (kong.ctx.shared.authenticated_jwt_token) before upgrading to 3.0\n- **Prometheus**: The prometheus metrics have been reworked extensively for 3.0.\n  - Latency has been split into 4 different metrics: kong_latency_ms, upstream_latency_ms and request_latency_ms (http) /tcp_session_duration_ms (stream). Buckets details below.\n  - Separate out Kong Latency Bucket values and Upstream Latency Bucket values.\n  - `consumer_status` removed.\n  - `request_count` and `consumer_status` have been merged into just `http_requests_total`. If the `per_consumer` config is set false, the consumer label will be empty.\n     If the `per_consumer` config is true, it will be filled.\n  - `http_requests_total` has a new label `source`, set to either `exit`, `error` or `service`.\n  - New Metric: `node_info`. Single gauge set to 1 that outputs the node's id and kong version.\n  - All Memory metrics have a new label `node_id`\n  - `nginx_http_current_connections` merged with `nginx_stream_current_connection` into `nginx_current_connections`\n  [#8712](https://github.com/Kong/kong/pull/8712)\n- **Prometheus**: The plugin doesn't export status codes, latencies, bandwidth and upstream\n  healthcheck metrics by default. They can still be turned on manually by setting `status_code_metrics`,\n  `latency_metrics`, `bandwidth_metrics` and `upstream_health_metrics` respectively. Enabling those metrics will impact the performance if you have a large volume of Kong entities, we recommend using the [statsd](https://github.com/Kong/kong/tree/master/kong/plugins/statsd) plugin with the push model if that is the case. And now `prometheus` plugin new grafana [dashboard](https://grafana.com/grafana/dashboards/7424-kong-official/) updated\n  [#9028](https://github.com/Kong/kong/pull/9028)\n- **ACME**: `allow_any_domain` field added. It is default to false and if set to true, the gateway will\n  ignore the `domains` field.\n  [#9047](https://github.com/Kong/kong/pull/9047)\n- **Statsd**:\n  - The metric name that is related to the service has been renamed by adding a `service.` prefix. e.g. `kong.service.<service_identifier>.request.count` [#9046](https://github.com/Kong/kong/pull/9046)\n  - The metric `kong.<service_identifier>.request.status.<status>` and `kong.<service_identifier>.user.<consumer_identifier>.request.status.<status>` has been renamed to `kong.service.<service_identifier>.status.<status>` and  `kong.service.<service_identifier>.user.<consumer_identifier>.status.<status>` [#9046](https://github.com/Kong/kong/pull/9046)\n  - The metric `*.status.<status>.total` from metrics `status_count` and `status_count_per_user` has been removed [#9046](https://github.com/Kong/kong/pull/9046)\n- **Proxy-cache**: The plugin does not store the response data in\n  `ngx.ctx.proxy_cache_hit` anymore. Logging plugins that need the response data\n  must read it from `kong.ctx.shared.proxy_cache_hit` from Kong 3.0 on.\n  [#8607](https://github.com/Kong/kong/pull/8607)\n- **Rate-limiting**: The default policy is now `local` for all deployment modes.\n  [#9344](https://github.com/Kong/kong/pull/9344)\n- **Response-rate-limiting**: The default policy is now `local` for all deployment modes.\n  [#9344](https://github.com/Kong/kong/pull/9344)\n\n### Deprecations\n\n- The `go_pluginserver_exe` and `go_plugins_dir` directives are no longer supported.\n  [#8552](https://github.com/Kong/kong/pull/8552). If you are using\n  [Go plugin server](https://github.com/Kong/go-pluginserver), please migrate your plugins to use the\n  [Go PDK](https://github.com/Kong/go-pdk) before upgrading.\n- The migration helper library (mostly used for Cassandra migrations) is no longer supplied with Kong\n  [#8781](https://github.com/Kong/kong/pull/8781)\n- The path_handling algorithm `v1` is deprecated and only supported when `router_flavor` config option\n  is set to `traditional`.\n  [#9290](https://github.com/Kong/kong/pull/9290)\n\n#### Configuration\n\n- The Kong constant `CREDENTIAL_USERNAME` with value of `X-Credential-Username` was\n  removed. Kong plugins in general have moved (since [#5516](https://github.com/Kong/kong/pull/5516))\n  to use constant `CREDENTIAL_IDENTIFIER` with value of `X-Credential-Identifier` when\n  setting  the upstream headers for a credential.\n  [#8815](https://github.com/Kong/kong/pull/8815)\n- Change the default of `lua_ssl_trusted_certificate` to `system`\n  [#8602](https://github.com/Kong/kong/pull/8602) to automatically load trusted CA list from system CA store.\n- Remove a warning of `AAAA` being experimental with `dns_order`.\n- It is no longer possible to use a .lua format to import a declarative config from the `kong`\n  command-line tool, only json and yaml are supported. If your update procedure with kong involves\n  executing `kong config db_import config.lua`, please create a `config.json` or `config.yml` and\n  use that before upgrading.\n  [#8898](https://github.com/Kong/kong/pull/8898)\n- We bumped the version number (`_format_version`) of declarative configuration to \"3.0\" because of changes on `route.path`.\n  Declarative configuration with older version should be upgraded to \"3.0\" on the fly.\n  [#9078](https://github.com/Kong/kong/pull/9078)\n\n#### Migrations\n\n- Postgres migrations can now have an `up_f` part like Cassandra\n  migrations, designating a function to call.  The `up_f` part is\n  invoked after the `up` part has been executed against the database\n  for both Postgres and Cassandra.\n- A new CLI command, `kong migrations status`, generates the status on a JSON file.\n\n### Dependencies\n\n- Bumped OpenResty from 1.19.9.1 to [1.21.4.1](https://openresty.org/en/changelog-1021004.html)\n  [#8850](https://github.com/Kong/kong/pull/8850)\n- Bumped pgmoon from 1.13.0 to 1.15.0\n  [#8908](https://github.com/Kong/kong/pull/8908)\n  [#8429](https://github.com/Kong/kong/pull/8429)\n- Bumped OpenSSL from 1.1.1n to 1.1.1q\n  [#9074](https://github.com/Kong/kong/pull/9074)\n  [#8544](https://github.com/Kong/kong/pull/8544)\n  [#8752](https://github.com/Kong/kong/pull/8752)\n  [#8994](https://github.com/Kong/kong/pull/8994)\n- Bumped resty.openssl from 0.8.8 to 0.8.10\n  [#8592](https://github.com/Kong/kong/pull/8592)\n  [#8753](https://github.com/Kong/kong/pull/8753)\n  [#9023](https://github.com/Kong/kong/pull/9023)\n- Bumped inspect from 3.1.2 to 3.1.3\n  [#8589](https://github.com/Kong/kong/pull/8589)\n- Bumped resty.acme from 0.7.2 to 0.8.1\n  [#8680](https://github.com/Kong/kong/pull/8680)\n  [#9165](https://github.com/Kong/kong/pull/9165)\n- Bumped luarocks from 3.8.0 to 3.9.1\n  [#8700](https://github.com/Kong/kong/pull/8700)\n  [#9204](https://github.com/Kong/kong/pull/9204)\n- Bumped luasec from 1.0.2 to 1.2.0\n  [#8754](https://github.com/Kong/kong/pull/8754)\n  [#8754](https://github.com/Kong/kong/pull/9205)\n- Bumped resty.healthcheck from 1.5.0 to 1.6.1\n  [#8755](https://github.com/Kong/kong/pull/8755)\n  [#9018](https://github.com/Kong/kong/pull/9018)\n  [#9150](https://github.com/Kong/kong/pull/9150)\n- Bumped resty.cassandra from 1.5.1 to 1.5.2\n  [#8845](https://github.com/Kong/kong/pull/8845)\n- Bumped penlight from 1.12.0 to 1.13.1\n  [#9206](https://github.com/Kong/kong/pull/9206)\n- Bumped lua-resty-mlcache from 2.5.0 to 2.6.0\n  [#9287](https://github.com/Kong/kong/pull/9287)\n\n### Additions\n\n#### Performance\n\n- Do not register unnecessary event handlers on Hybrid mode Control Plane\n  nodes [#8452](https://github.com/Kong/kong/pull/8452).\n- Use the new timer library to improve performance,\n  except for the plugin server.\n  [#8912](https://github.com/Kong/kong/pull/8912)\n- Increased use of caching for DNS queries by activating `additional_section` by default\n  [#8895](https://github.com/Kong/kong/pull/8895)\n- `pdk.request.get_header` changed to a faster implementation, not to fetch all headers every time it's called\n  [#8716](https://github.com/Kong/kong/pull/8716)\n- Conditional rebuilding of router, plugins iterator and balancer on DP\n  [#8519](https://github.com/Kong/kong/pull/8519),\n  [#8671](https://github.com/Kong/kong/pull/8671)\n- Made config loading code more cooperative by yielding\n  [#8888](https://github.com/Kong/kong/pull/8888)\n- Use LuaJIT encoder instead of JSON to serialize values faster in LMDB\n  [#8942](https://github.com/Kong/kong/pull/8942)\n- Move inflating and JSON decoding non-concurrent, which avoids blocking and makes DP reloads faster\n  [#8959](https://github.com/Kong/kong/pull/8959)\n- Stop duplication of some events\n  [#9082](https://github.com/Kong/kong/pull/9082)\n- Improve performance of config hash calculation by using string buffer and tablepool\n  [#9073](https://github.com/Kong/kong/pull/9073)\n- Reduce cache usage in dbless by not using the kong cache for Routes and Services in LMDB\n  [#8972](https://github.com/Kong/kong/pull/8972)\n\n\n#### Core\n\n- Implemented delayed response in stream mode\n  [#6878](https://github.com/Kong/kong/pull/6878)\n- Added `cache_key` on target entity for uniqueness detection.\n  [#8179](https://github.com/Kong/kong/pull/8179)\n- Introduced the tracing API which compatible with OpenTelemetry API spec and\n  add build-in instrumentations.\n  The tracing API is intend to be used with a external exporter plugin.\n  Build-in instrumentation types and sampling rate are configuable through\n  `opentelemetry_tracing` and `opentelemetry_tracing_sampling_rate` options.\n  [#8724](https://github.com/Kong/kong/pull/8724)\n- Added `path`, `uri_capture`, and `query_arg` options to upstream `hash_on`\n  for load balancing.\n  [#8701](https://github.com/Kong/kong/pull/8701)\n- Introduced unix domain socket based `lua-resty-events` to\n  replace shared memory based `lua-resty-worker-events`.\n  [#8890](https://github.com/Kong/kong/pull/8890)\n- Introduced a new router implementation `atc-router`,\n  which is written in Rust.\n  [#8938](https://github.com/Kong/kong/pull/8938)\n- Introduce a new field for entities `table_name` that allows to specify a\n  table name. Before the name was deduced by the entity `name` attribute.\n  [#9182](https://github.com/Kong/kong/pull/9182)\n- Added `headers` on active healthcheck for upstreams.\n  [#8255](https://github.com/Kong/kong/pull/8255)\n- Target entities using hostnames were resolved when they were not needed. Now\n  when a target is removed or updated, the DNS record associated with it is\n  removed from the list of hostnames to be resolved.\n  [#8497](https://github.com/Kong/kong/pull/8497) [9265](https://github.com/Kong/kong/pull/9265)\n- Improved error handling and debugging info in the DNS code\n  [#8902](https://github.com/Kong/kong/pull/8902)\n- Kong will now attempt to recover from an unclean shutdown by detecting and\n  removing dangling unix sockets in the prefix directory\n  [#9254](https://github.com/Kong/kong/pull/9254)\n\n#### Admin API\n\n- Added a new API `/timers` to get the timer statistics.\n  [#8912](https://github.com/Kong/kong/pull/8912)\n  and worker info\n  [#8999](https://github.com/Kong/kong/pull/8999)\n- `/` endpoint now includes plugin priority\n  [#8821](https://github.com/Kong/kong/pull/8821)\n\n#### Hybrid Mode\n\n- Add wRPC protocol support. Now configuration synchronization is over wRPC.\n  wRPC is an RPC protocol that encodes with ProtoBuf and transports\n  with WebSocket.\n  [#8357](https://github.com/Kong/kong/pull/8357)\n- To keep compatibility with earlier versions,\n  add support for CP to fall back to the previous protocol to support old DP.\n  [#8834](https://github.com/Kong/kong/pull/8834)\n- Add support to negotiate services supported with wRPC protocol.\n  We will support more services than config sync over wRPC in the future.\n  [#8926](https://github.com/Kong/kong/pull/8926)\n- Declarative config exports happen inside a transaction in Postgres\n  [#8586](https://github.com/Kong/kong/pull/8586)\n\n#### Plugins\n\n- Sync all plugin versions to the Kong version\n  [#8772](https://github.com/Kong/kong/pull/8772)\n- Introduced the new **OpenTelemetry** plugin that export tracing instrumentations\n  to any OTLP/HTTP compatible backend.\n  `opentelemetry_tracing` configuration should be enabled to collect\n  the core tracing spans of Kong.\n  [#8826](https://github.com/Kong/kong/pull/8826)\n- **Zipkin**: add support for including HTTP path in span name\n  through configuration property `http_span_name`.\n  [#8150](https://github.com/Kong/kong/pull/8150)\n- **Zipkin**: add support for socket connect and send/read timeouts\n  through configuration properties `connect_timeout`, `send_timeout`,\n  and `read_timeout`. This can help mitigate `ngx.timer` saturation\n  when upstream collectors are unavailable or slow.\n  [#8735](https://github.com/Kong/kong/pull/8735)\n- **AWS-Lambda**: add support for cross account invocation through\n  configuration properties `aws_assume_role_arn` and\n  `aws_role_session_name`.[#8900](https://github.com/Kong/kong/pull/8900)\n  [#8900](https://github.com/Kong/kong/pull/8900)\n- **AWS-Lambda**: accept string type `statusCode` as valid return when\n  working in proxy integration mode.\n  [#8765](https://github.com/Kong/kong/pull/8765)\n- **AWS-Lambda**: separate aws credential cache by IAM role ARN\n  [#8907](https://github.com/Kong/kong/pull/8907)\n- **Statsd**: :fireworks: **Newly open-sourced plugin capabilities**: All capabilities of [Statsd Advanced](https://docs.konghq.com/hub/kong-inc/statsd-advanced/) are now bundled in [Statsd](https://docs.konghq.com/hub/kong-inc/statsd).\n  [#9046](https://github.com/Kong/kong/pull/9046)\n\n#### Configuration\n\n- A new configuration item (`openresty_path`) has been added to allow\n  developers/operators to specify the OpenResty installation to use when\n  running Kong (instead of using the system-installed OpenResty)\n  [#8412](https://github.com/Kong/kong/pull/8412)\n- Add `ipv6only` to listen options (e.g. `KONG_PROXY_LISTEN`)\n  [#9225](https://github.com/Kong/kong/pull/9225)\n- Add `so_keepalive` to listen options (e.g. `KONG_PROXY_LISTEN`)\n  [#9225](https://github.com/Kong/kong/pull/9225)\n- Add LMDB dbless config persistence and removed the JSON based\n  config cache for faster startup time\n  [#8670](https://github.com/Kong/kong/pull/8670)\n- `nginx_events_worker_connections=auto` has a lower bound of 1024\n  [#9276](https://github.com/Kong/kong/pull/9276)\n- `nginx_main_worker_rlimit_nofile=auto` has a lower bound of 1024\n  [#9276](https://github.com/Kong/kong/pull/9276)\n\n#### PDK\n\n- Added new PDK function: `kong.request.get_start_time()`\n  [#8688](https://github.com/Kong/kong/pull/8688)\n- `kong.db.*.cache_key()` falls back to `.id` if nothing from `cache_key` is found\n  [#8553](https://github.com/Kong/kong/pull/8553)\n\n### Fixes\n\n#### Core\n\n- The schema validator now correctly converts `null` from declarative\n  configurations to `nil`.\n  [#8483](https://github.com/Kong/kong/pull/8483)\n- Only reschedule router and plugin iterator timers after finishing previous\n  execution, avoiding unnecessary concurrent executions.\n  [#8567](https://github.com/Kong/kong/pull/8567)\n- External plugins now handle returned JSON with null member correctly.\n  [#8611](https://github.com/Kong/kong/pull/8611)\n- Fixed an issue where the address of the environ variable could change but the code didn't\n  assumed it was fixed after init\n  [#8581](https://github.com/Kong/kong/pull/8581)\n- Fix issue where the Go plugin server instance would not be updated after\n  a restart (e.g., upon a plugin server crash).\n  [#8547](https://github.com/Kong/kong/pull/8547)\n- Fixed an issue on trying to reschedule the DNS resolving timer when Kong was\n  being reloaded.\n  [#8702](https://github.com/Kong/kong/pull/8702)\n- The private stream API has been rewritten to allow for larger message payloads\n  [#8641](https://github.com/Kong/kong/pull/8641)\n- Fixed an issue that the client certificate sent to upstream was not updated when calling PATCH Admin API\n  [#8934](https://github.com/Kong/kong/pull/8934)\n- Fixed an issue where the CP and wRPC modules would cause Kong to crash when calling `export_deflated_reconfigure_payload` without a pcall\n  [#8668](https://github.com/Kong/kong/pull/8668)\n- Moved all `.proto` files to `/usr/local/kong/include` and ordered by priority.\n  [#8914](https://github.com/Kong/kong/pull/8914)\n- Fixed an issue that cause unexpected 404 error on creating/updating configs with invalid options\n  [#8831](https://github.com/Kong/kong/pull/8831)\n- Fixed an issue that causes crashes when calling some PDK APIs\n  [#8604](https://github.com/Kong/kong/pull/8604)\n- Fixed an issue that cause crashes when go PDK calls return arrays\n  [#8891](https://github.com/Kong/kong/pull/8891)\n- Plugin servers now shutdowns gracefully when Kong exits\n  [#8923](https://github.com/Kong/kong/pull/8923)\n- CLI now prompts with `[y/n]` instead of `[Y/n]`, as it does not take `y` as default\n  [#9114](https://github.com/Kong/kong/pull/9114)\n- Improved the error message when Kong cannot connect to Cassandra on init\n  [#8847](https://github.com/Kong/kong/pull/8847)\n- Fixed an issue where Vault Subschema wasn't loaded in `off` strategy\n  [#9174](https://github.com/Kong/kong/pull/9174)\n- The Schema now runs select transformations before process_auto_fields\n  [#9049](https://github.com/Kong/kong/pull/9049)\n- Fixed an issue where Kong would use too many timers to keep track of upstreams when `worker_consistency`=`eventual`\n  [#8694](https://github.com/Kong/kong/pull/8694),\n  [#8858](https://github.com/Kong/kong/pull/8858)\n- Fixed an issue where it wasn't possible to set target status using only a hostname for targets set only by their hostname\n  [#8797](https://github.com/Kong/kong/pull/8797)\n- Fixed pagination issue when getting to the second page while iterationg over a foreign key field using the DAO\n  [#9255](https://github.com/Kong/kong/pull/9255)\n- Fixed an issue where cache entries of some entities were not being properly invalidated after a cascade delete\n  [#9261](https://github.com/Kong/kong/pull/9261)\n- Running `kong start` when Kong is already running will no longer clobber\n  the existing `.kong_env` file [#9254](https://github.com/Kong/kong/pull/9254)\n\n\n#### Admin API\n\n- Support HTTP/2 when requesting `/status`\n  [#8690](https://github.com/Kong/kong/pull/8690)\n\n#### Plugins\n\n- Plugins with colliding priorities have now deterministic sorting based on their name\n  [#8957](https://github.com/Kong/kong/pull/8957)\n- External Plugins: better handling of the logging when a plugin instance loses the instances_id in an event handler\n  [#8652](https://github.com/Kong/kong/pull/8652)\n- **ACME**: `auth_method` default value is set to `token`\n  [#8565](https://github.com/Kong/kong/pull/8565)\n- **ACME**: Added cache for `domains_matcher`\n  [#9048](https://github.com/Kong/kong/pull/9048)\n- **syslog**: `conf.facility` default value is now set to `user`\n  [#8564](https://github.com/Kong/kong/pull/8564)\n- **AWS-Lambda**: Removed `proxy_scheme` field from schema\n  [#8566](https://github.com/Kong/kong/pull/8566)\n- **AWS-Lambda**: Change path from request_uri to upstream_uri, fix uri can not follow the rule defined in the request-transformer configuration\n  [#9058](https://github.com/Kong/kong/pull/9058) [#9129](https://github.com/Kong/kong/pull/9129)\n- **hmac-auth**: Removed deprecated signature format using `ngx.var.uri`\n  [#8558](https://github.com/Kong/kong/pull/8558)\n- Remove deprecated `blacklist`/`whitelist` config fields from bot-detection, ip-restriction and ACL plugins.\n  [#8560](https://github.com/Kong/kong/pull/8560)\n- **Zipkin**: Correct the balancer spans' duration to include the connection time\n  from Nginx to the upstream.\n  [#8848](https://github.com/Kong/kong/pull/8848)\n- **Zipkin**: Correct the calculation of the header filter start time\n  [#9230](https://github.com/Kong/kong/pull/9230)\n- **Zipkin**: Compatibility with the latest Jaeger header spec, which makes `parent_id` optional\n  [#8352](https://github.com/Kong/kong/pull/8352)\n- **LDAP-Auth**: Refactored ASN.1 parser using OpenSSL API through FFI.\n  [#8663](https://github.com/Kong/kong/pull/8663)\n- **Rate-Limiting** and **Response-ratelimiting**: Fix a disordered behaviour caused by `pairs` function\n  which may cause Postgres DEADLOCK problem [#8968](https://github.com/Kong/kong/pull/8968)\n- **Response-rate-Limiting**: Fix a disordered behaviour caused by `pairs` function\n  which may cause Postgres DEADLOCK problem [#8968](https://github.com/Kong/kong/pull/8968)\n- **gRPC gateway**: Fix the handling of boolean fields from URI arguments\n  [#9180](https://github.com/Kong/kong/pull/9180)\n- **Serverless Functions**: Fix problem that could result in a crash\n  [#9269](https://github.com/Kong/kong/pull/9269)\n- **Azure-functions**: Support working without dummy service\n  [#9177](https://github.com/Kong/kong/pull/9177)\n\n\n#### Clustering\n\n- The cluster listener now uses the value of `admin_error_log` for its log file\n  instead of `proxy_error_log` [#8583](https://github.com/Kong/kong/pull/8583)\n- Fixed a typo in some business logic that checks the Kong role before setting a\n  value in cache at startup [#9060](https://github.com/Kong/kong/pull/9060)\n- Fixed DP get zero size config while service with plugin-enabled route is disabled\n  [#8816](https://github.com/Kong/kong/pull/8816)\n- Localize `config_version` to avoid a race condition from the new yielding config loading code\n  [#8188](https://github.com/Kong/kong/pull/8818)\n\n#### PDK\n\n- `kong.response.get_source()` now return an error instead of an exit when plugin throws\n  runtime exception on access phase [#8599](https://github.com/Kong/kong/pull/8599)\n- `kong.tools.uri.normalize()` now does escaping of reserved and unreserved characters more correctly\n  [#8140](https://github.com/Kong/kong/pull/8140)\n\n## Previous releases\n\nPlease see [CHANGELOG-OLD.md](CHANGELOG-OLD.md) file for < 3.0 releases.\n\n[Back to TOC](#table-of-contents)\n\n[3.3.0]: https://github.com/Kong/kong/compare/3.2.0...3.3.0\n[3.2.0]: https://github.com/Kong/kong/compare/3.1.0...3.2.0\n[3.1.0]: https://github.com/Kong/kong/compare/3.0.1...3.1.0\n[3.0.1]: https://github.com/Kong/kong/compare/3.0.0...3.0.1\n[3.0.0]: https://github.com/Kong/kong/compare/2.8.1...3.0.0\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.15,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at support@konghq.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "COMMUNITY_PLEDGE.md",
          "type": "blob",
          "size": 1.59,
          "content": "# Our pledge to the open source community\n\nKong Gateway is not only an awesome open source project, but also part\nof the product offering of Kong Inc.  We have a large team of product\npeople, software developers, testers and release engineers working on\nKong Gateway.  We make many of the enhancements to Kong Gateway in the\nCommunity Edition, so our open source community directly benefits from\nthe commercial work that we do.\n\nRecognizing that we operate as a commercial entity, we face the\nchallenge of balancing our commercial interests with the desire to\naccommodate and support open source users and contributors\neffectively.\n\n## Response time to GitHub issues and pull requests\n\nIn the Kong Gateway team, we're committed to maintaining a rapid and\ntimely response to community contributions, promising to acknowledge\nand engage within a dedicated timeframe of 10 working days. It is\nimportant to note, however, that while we strive to be as responsive\nas possible, we may not always be able to offer immediate solutions to\nevery reported problem or incorporate every submitted pull request\ninto the product.\n\n## Maintaining an active working set\n\nWe will be closing pull requests or issue reports when we made the\ndecision that we will not be able to merge or resolve them in the\nforeseeable future.  We do that in the interest of keeping our working\nset manageable, as accumulating pull requests and issues which don't\nmake progress does not help improving Kong Gateway in the long run.\n\nWe automatically close issues and pull requests for which we do not\nget responses to our questions or update requests within 3 weeks.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 26.58,
          "content": "# Contributing to Kong :monkey_face:\n\nHello, and welcome! Whether you are looking for help, trying to report a bug,\nthinking about getting involved in the project, or about to submit a patch, this\ndocument is for you! It intends to be both an entry point for newcomers to\nthe community (with various technical backgrounds), and a guide/reference for\ncontributors and maintainers.\n\nPlease have a look at our [Community Pledge](./COMMUNITY_PLEDGE.md) to\nunderstand how we work with our open-source contributors!\n\nConsult the Table of Contents below, and jump to the desired section.\n\n# Table of Contents\n\n* [Contributing to Kong :monkey_face:](#contributing-to-kong-monkey_face)\n    * [Where to seek for help?](#where-to-seek-for-help)\n        * [Enterprise Edition](#enterprise-edition)\n        * [Community Edition](#community-edition)\n    * [Where to report bugs?](#where-to-report-bugs)\n    * [Where to submit feature requests?](#where-to-submit-feature-requests)\n    * [Contributing](#contributing)\n        * [Improving the documentation](#improving-the-documentation)\n        * [Proposing a new plugin](#proposing-a-new-plugin)\n        * [Submitting a patch](#submitting-a-patch)\n            * [Git branches](#git-branches)\n            * [Commit atomicity](#commit-atomicity)\n            * [Commit message format](#commit-message-format)\n                * [Type](#type)\n                * [Scope](#scope)\n                * [Subject](#subject)\n                * [Body](#body)\n                * [Footer](#footer)\n                * [Examples](#examples)\n            * [Static linting](#static-linting)\n            * [Writing tests](#writing-tests)\n            * [Writing changelog](#writing-changelog)\n            * [Writing performant code](#writing-performant-code)\n            * [Adding Changelog](#adding-changelog)\n        * [Contributor Badge](#contributor-badge)\n    * [Code style](#code-style)\n        * [Table of Contents - Code style](#table-of-contents---code-style)\n        * [Modules](#modules)\n        * [Variables](#variables)\n        * [Tables](#tables)\n        * [Strings](#strings)\n        * [Functions](#functions)\n        * [Conditional expressions](#conditional-expressions)\n\n## Where to seek for help?\n\n### Enterprise Edition\n\nIf you are a Kong Enterprise customer, you may contact the Enterprise Support channels\nby opening an Enterprise support ticket on\n[https://support.konghq.com](https://support.konghq.com/).\n\nIf you are experiencing a P1 issue, please call the [24/7 Enterprise Support\nphone line](https://support.konghq.com/hc/en-us/articles/115004921808-Telephone-Support)\nfor immediate assistance, as published in the Customer Success Reference Guide.\n\nIf you are interested in becoming a Kong Enterprise customer, please visit\nhttps://konghq.com/kong-enterprise-edition/ or contact us at\n[sales@konghq.com](mailto:sales@konghq.com).\n\n[Back to TOC](#table-of-contents)\n\n### Community Edition\n\nFor questions about the use of the Community Edition, please use\n[GitHub Discussions](https://github.com/Kong/kong/discussions).  You\ncan also join our [Community Slack](http://kongcommunity.slack.com/)\nfor real-time conversations around Kong Gateway.\n\n**Please avoid opening GitHub issues for general questions or help**, as those\nshould be reserved for actual bug reports. The Kong community is welcoming and\nmore than willing to assist you on those channels!\n\nOur public forum, [Kong Nation](https://discuss.konghq.com) is great\nfor asking questions, giving advice, and staying up-to-date with the\nlatest announcements.\n\n[Back to TOC](#table-of-contents)\n\n## Where to report bugs?\n\nFeel free to [submit an issue](https://github.com/Kong/kong/issues/new/choose) on\nthe GitHub repository, we would be grateful to hear about it! Please make sure that you\nrespect the GitHub issue template, and include:\n\n1. A summary of the issue\n2. A list of steps to help reproduce the issue\n3. The version of Kong that you encountered the issue with\n4. Your Kong configuration, or the parts that are relevant to your issue\n\nIf you wish, you are more than welcome to propose a patch to fix the issue!\nSee the [Submit a patch](#submitting-a-patch) section for more information\non how to best do so.\n\n[Back to TOC](#table-of-contents)\n\n## Where to submit feature requests?\n\nYou can [submit an issue](https://github.com/Kong/kong/issues/new/choose) for feature\nrequests. Please make sure to add as much detail as you can when doing so.\n\nYou are also welcome to propose patches adding new features. See the section\non [Submitting a patch](#submitting-a-patch) for details.\n\n[Back to TOC](#table-of-contents)\n\n## Contributing\n\nIn addition to code enhancements and bug fixes, you can contribute by\n\n- Reporting a bug (see the [report bugs](#where-to-report-bugs) section)\n- Helping other members of the community on the support channels\n- Fixing a typo in the code\n- Fixing a typo in the documentation at https://docs.konghq.com (see\n  the [documentation contribution](#improving-the-documentation) section)\n- Providing your feedback on the proposed features and designs\n- Reviewing Pull Requests\n\nIf you wish to contribute code (features or bug fixes), see the [Submitting a\npatch](#submitting-a-patch) section.\n\n[Back to TOC](#table-of-contents)\n\n### Improving the documentation\n\nThe documentation hosted at https://docs.konghq.com is open source and built\nwith [Jekyll](https://jekyllrb.com/). You are very welcome to propose changes to it\n(correct typos, add examples or clarifications...) and contribute to the\n[Kong Hub](https://docs.konghq.com/hub/)!\n\nThe repository is also hosted on GitHub at:\nhttps://github.com/Kong/docs.konghq.com/\n\n[Back to TOC](#table-of-contents)\n\n### Proposing a new plugin\n\nWe **do not** generally accept new plugins into this repository. The\nplugins that are currently part of it form the foundational set of\nplugins which is available to all installations of Kong Gateway.\nSpecialized functionality should be implemented in plugins residing in\nseparate repository.\n\nIf you are interested in writing a new plugin for your own needs, you\nshould begin by reading the\n[Plugin Development Guide](https://docs.konghq.com/latest/plugin-development).\n\nIf you already wrote a plugin, and are thinking about making it available to\nthe community, we strongly encourage you to host it on a publicly available\nrepository (like GitHub), and distribute it via\n[LuaRocks](https://luarocks.org/search?q=kong). A good resource on how to do\nso is the [Distribution\nSection](https://docs.konghq.com/latest/plugin-development/distribution/#distributing-your-plugin)\nof the Plugin Development Guide.\n\nTo give visibility to your plugin, we advise that you:\n\n1. Add your plugin to the [Kong Hub](https://docs.konghq.com/hub/)\n2. Create a post in the [Announcements category of Kong\n   Nation](https://discuss.konghq.com/c/announcements)\n\n[Back to TOC](#table-of-contents)\n\n### Submitting a patch\n\nFeel free to contribute fixes or minor features by opening a Pull\nRequest.  Small contributions are more likely to be merged quicker\nthan changes which require a lot of time to review.  If you are\nplanning to develop a larger feature, please talk to us first in the\n[GitHub Discussions](https://github.com/Kong/kong/discussions)\nsection!\n\nWhen contributing, please follow the guidelines provided in this document. They\nwill cover topics such as the different Git branches we use, the commit message\nformat to use, or the appropriate code style.\n\nOnce you have read them, and you feel that you are ready to submit your Pull Request, be sure\nto verify a few things:\n\n- Your commit history is clean: changes are atomic and the git message format\n  was respected\n- Rebase your work on top of the base branch (seek help online on how to use\n  `git rebase`; this is important to ensure your commit history is clean and\n   linear)\n- The static linting is succeeding: run `make lint`, or `luacheck .` (see the\n  development documentation for additional details)\n- The tests are passing: run `make test`, `make test-all`, or whichever is\n  appropriate for your change\n- Do not update `CHANGELOG.md` inside your Pull Request. This file is automatically regenerated\n  and maintained during the release process.\n\nIf the above guidelines are respected, your Pull Request has all its chances\nto be considered and will be reviewed by a maintainer.\n\nIf you are asked to update your patch by a reviewer, please do so! Remember:\n**You are responsible for pushing your patch forward**. If you contributed it,\nyou are probably the one in need of it. You must be ready to apply changes\nto it if necessary.\n\nIf your Pull Request was accepted and fixes a bug, adds functionality, or\nmakes it significantly easier to use or understand Kong, congratulations!\nYou are now an official contributor to Kong. Get in touch with us to receive\nyour very own [Contributor Badge](#contributor-badge)!\n\nYour change will be included in the subsequent release and its changelog, and we will\nnot forget to include your name if you are an external contributor. :wink:\n\n[Back to TOC](#table-of-contents)\n\n#### Git branches\n\nIf you have write access to the GitHub repository, please follow the following\nnaming scheme when pushing your branch(es):\n\n- `feat/foo-bar` for new features\n- `fix/foo-bar` for bug fixes\n- `tests/foo-bar` when the change concerns only the test suite\n- `refactor/foo-bar` when refactoring code without any behavior change\n- `style/foo-bar` when addressing some style issue\n- `docs/foo-bar` for updates to the README.md, this file, or similar documents\n- `chore/foo-bar` when the change does not concern the functional source\n- `perf/foo-bar` for performance improvements\n\n[Back to TOC](#table-of-contents)\n\n#### Commit atomicity\n\nWhen submitting patches, it is important that you organize your commits in\nlogical units of work. You are free to propose a patch with one or many\ncommits, as long as their atomicity is respected. This means that no unrelated\nchanges should be included in a commit.\n\nFor example: you are writing a patch to fix a bug, but in your endeavour, you\nspot another bug. **Do not fix both bugs in the same commit!** Finish your\nwork on the initial bug, propose your patch, and come back to the second bug\nlater on. This is also valid for unrelated style fixes, refactors, etc...\n\nYou should use your best judgment when facing such decisions. A good approach\nfor this is to put yourself in the shoes of the person who will review your\npatch: will they understand your changes and reasoning just by reading your\ncommit history? Will they find unrelated changes in a particular commit? They\nshouldn't!\n\nWriting meaningful commit messages that follow our commit message format will\nalso help you respect this mantra (see the below section).\n\n[Back to TOC](#table-of-contents)\n\n#### Commit message format\n\nTo maintain a healthy Git history, we ask of you that you write your commit\nmessages as follows:\n\n- The tense of your message must be **present**\n- Your message must be prefixed by a type, and a scope\n- The header of your message should not be longer than 50 characters\n- A blank line should be included between the header and the body\n- The body of your message should not contain lines longer than 72 characters\n\nWe strive to adapt the [conventional-commits](https://www.conventionalcommits.org/en/v1.0.0/)\nformat.\n\nHere is a template of what your commit message should look like:\n\n```\n<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n\n[Back to TOC](#table-of-contents)\n\n##### Type\n\nThe type of your commit indicates what type of change this commit is about. The\naccepted types are:\n\n- **feat**: A new feature\n- **fix**: A bug fix\n- **hotfix**: An urgent bug fix during a release process\n- **tests**: A change that is purely related to the test suite only (fixing\n  a test, adding a test, improving its reliability, etc...)\n- **docs**: Changes to the README.md, this file, or other such documents\n- **style**: Changes that do not affect the meaning of the code (white-space\n  trimming, formatting, etc...)\n- **perf**: A code change that significantly improves performance\n- **refactor**: A code change that neither fixes a bug nor adds a feature, and\n  is too big to be considered just `perf`\n- **chore**: Maintenance changes related to code cleaning that isn't\n  considered part of a refactor, build process updates, dependency bumps, or\n  auxiliary tools and libraries updates (LuaRocks, GitHub Actions, etc...).\n\n[Back to TOC](#table-of-contents)\n\n##### Scope\n\nThe scope is the part of the codebase that is affected by your change. Choosing\nit is at your discretion, but here are some of the most frequent ones:\n\n- **proxy**: A change that affects the proxying of requests\n- **router**: A change that affects the router, which matches a request to the\n  desired configured API\n- **admin**: A change to the Admin API\n- **balancer**: Changes related to the internal Load Balancer\n- **core**: Changes affecting a large part of the core, and touching many parts\n  such as `proxy`, `balancer`, `dns`\n- **dns**: Changes related to internal DNS resolution\n- **dao**: A change related to the DAO, the interface to the datastores\n- **cli**: Changes to the CLI\n- **cache**: Changes to the configuration entities caching (datastore entities)\n- **deps**: When updating dependencies (to be used with the `chore` prefix)\n- **conf**: Configuration-related changes (new values, improvements...)\n- **`<plugin-name>`**: This could be `basic-auth`, or `ldap` for example\n- `*`: When the change affects too many parts of the codebase at once (this\n  should be rare and avoided)\n\n[Back to TOC](#table-of-contents)\n\n##### Subject\n\nYour subject should contain a succinct description of the change. It should be\nwritten so that:\n\n- It uses the present, imperative tense: \"fix typo\", and not \"fixed\" or \"fixes\"\n- It is **not** capitalized: \"fix typo\", and not \"Fix typo\"\n- It does **not** include a period. :smile:\n\n[Back to TOC](#table-of-contents)\n\n##### Body\n\nThe body of your commit message should contain a detailed description of your\nchanges. Ideally, if the change is significant, you should explain its\nmotivation and the chosen implementation, and justify it.\n\nAs previously mentioned, lines in the commit messages should not exceed 72\ncharacters.\n\n[Back to TOC](#table-of-contents)\n\n##### Footer\n\nThe footer is the ideal place to link to related material about the change:\nrelated GitHub issues, Pull Requests, fixed bug reports, etc...\n\n[Back to TOC](#table-of-contents)\n\n##### Examples\n\nHere are a few examples of good commit messages to take inspiration from:\n\n```\nfix(admin): send HTTP 405 on unsupported method\n\nThe appropriate status code when the request method is not supported\non an endpoint is 405. We previously used to send HTTP 404, which\nis not appropriate. This updates the Admin API helpers to properly\nreturn 405 on such user errors.\n\n* return 405 when the method is not supported in the Admin API helpers\n* add a new test case in the Admin API test suite\n\nFix #678\n```\n\nOr:\n\n```\ntests(proxy): add a new test case for URI encoding\n\nWhen proxying upstream, the URI sent by Kong should be the one\nreceived from the client, even if it was percent-encoded.\n\nThis adds a new test case which was missing, to ensure it is\nthe case.\n```\n\n[Back to TOC](#table-of-contents)\n\n#### Static linting\n\nAs mentioned in the guidelines to submit a patch, the linter must succeed. We\nuse [Luacheck](https://github.com/mpeterv/luacheck) to statically lint our Lua\ncode. You can lint the code like so:\n\n```\n$ make lint\n```\n\nOr:\n\n```\n$ luacheck .\n```\n\n[Back to TOC](#table-of-contents)\n\n#### Writing tests\n\nWe use [busted](https://lunarmodules.github.io/busted/) to write our tests. Your patch\nmust include the related test updates or additions, in the appropriate test\nsuite.\n\n- `spec/01-unit` gathers our unit tests (to test a given Lua module or\n  function)\n- `spec/02-integration` contains tests that start Kong (connected to a running\n  database), execute Admin API and proxy requests against it, and verify the\n  output\n- `spec/03-plugins` contains tests (both unit and integration) for the bundled\n  plugins (those plugins still live in the core repository as of now, but will\n  eventually be externalized.)\n\nA few guidelines when writing tests:\n\n- Make sure to use appropriate `describe` and `it` blocks, so it's obvious what is being\n  tested exactly\n- Ensure the atomicity of your tests: no test should be asserting two\n  unrelated behaviors at the same time\n- Run tests related to the datastore against all supported databases\n\nAnd a few recommendations, when asserting types:\n\n```lua\n-- bad\nassert.Nil(foo)\nassert.True(bar)\n\n-- good\nassert.is_nil(foo)\nassert.is_true(bar)\n```\n\nComparing tables:\n\n```lua\n-- bad (most of the time)\nassert.equal(t1, t2)\n\n-- good\nassert.same(t1, t2)\n```\n\n[Back to TOC](#table-of-contents)\n\n#### Writing changelog\n\nPlease follow the guidelines in [Changelog Readme](https://github.com/Kong/kong/blob/master/changelog/README.md)\non how to write a changelog for your change.\n\n[Back to TOC](#table-of-contents)\n\n#### Writing performant code\n\nWe write code for the [LuaJIT](https://github.com/Kong/kong/issues/new)\ninterpreter, **not** Lua-PUC. As such, you should follow the LuaJIT best\npractices:\n\n- Do **not** instantiate global variables\n- Consult the [LuaJIT wiki](http://wiki.luajit.org/Home)\n- Follow the [Performance\n  Guide](https://www.freelists.org/post/luajit/Tuning-numerical-computations-for-LuaJIT-was-Re-ANN-Sci10beta1)\n  recommendations\n- Do **not** use [NYI functions](http://wiki.luajit.org/NYI) on hot code paths\n- Prefer using the FFI over traditional bindings via the Lua C API\n- Avoid table rehash by pre-allocating the slots of your tables when possible\n\n  ```lua\n  -- bad\n  local t = {}\n  for i = 1, 100 do\n    t[i] = i\n  end\n\n  -- good\n  local new_tab = require \"table.new\"\n  local t = new_tab(100, 0)\n  for i = 1, 100 do\n    t[i] = i\n  end\n  ```\n\n- Cache the globals used by your hot code paths,\n  the cached name should be the original name replaced `.` by `_`\n\n  ```lua\n  -- bad\n  for i = 1, 100 do\n    t[i] = math.random()\n  end\n\n  -- good\n  local math_random = math.random\n  for i = 1, 100 do\n    t[i] = math_random()\n  end\n  ```\n\n  For OpenResty built-in APIs, we may drop `ngx.` in the localized version\n\n  ```lua\n  local req_get_post_args = ngx.req.get_post_args\n  ```\n\n  Non-hot paths are localization-optional\n\n  ```lua\n  if err then\n    ngx.log(ngx.ERR, ...) -- this is fine as the error condition is not on the hot path\n  end\n  ```\n\n- Cache the length and indices of your tables to avoid unnecessary CPU cycles\n\n  ```lua\n  -- bad\n  for i = 1, 100 do\n    t[#t + 1] = other_tab[#other_tab]\n  end\n\n  -- good\n  local n = 0\n  local n_other_tab = #other_tab\n  for i = 1, 100 do\n    n = n + 1\n    t[n] = other_tab[n_other_tab]\n  end\n  ```\n\nAnd finally, most importantly: use your best judgment to design an\nefficient algorithm. Doing so will always be more performant than a\npoorly designed algorithm, even following all the performance tricks of the\nlanguage you are using. :smile:\n\n[Back to TOC](#table-of-contents)\n\n#### Adding Changelog\n\nPlease follow [the changelog instructions](https://github.com/Kong/gateway-changelog)\nto create the appropriate changelog file for your Pull Request.\n\n[Back to TOC](#table-of-contents)\n\n### Contributor Badge\n\nIf your Pull Request to [Kong/kong](https://github.com/Kong/kong) was\naccepted, and it fixes a bug, adds functionality, or makes it significantly\neasier to use or understand Kong, congratulations! You are eligible to\nreceive the very special digital Contributor Badge! Go ahead and fill out the\n[Contributors Submissions form](https://goo.gl/forms/5w6mxLaE4tz2YM0L2).\n\nProudly display your Badge and show it to us by tagging\n[@thekonginc](https://twitter.com/thekonginc) on Twitter!\n\n*Badges expire after 1 year, at which point you may submit a new contribution\nto renew the badge.*\n\n[Back to TOC](#table-of-contents)\n\n## Code style\n\nIn order to ensure a healthy and consistent codebase, we ask of you that you\nrespect the adopted code style. This section contains a non-exhaustive list\nof preferred styles for writing Lua. It is opinionated, but follows the\ncode styles of OpenResty and, by association, Nginx. OpenResty or Nginx\ncontributors should find themselves at ease when contributing to Kong.\n\n- No line should be longer than 80 characters\n- Indentation should consist of 2 spaces\n\nWhen you are unsure about the style to adopt, please browse other parts of the\ncodebase to find a similar case, and stay consistent with it.\n\nYou might also notice places in the codebase where the described style is not\nrespected. This is due to legacy code. **Contributions to update the code to\nthe recommended style are welcome!**\n\n[Back to TOC](#table-of-contents)\n\n### Table of Contents - Code style\n\n- [Modules](#modules)\n- [Variables](#variables)\n- [Tables](#tables)\n- [Strings](#strings)\n- [Functions](#functions)\n- [Conditional expressions](#conditional-expressions)\n\n[Back to TOC](#table-of-contents)\n\n### Modules\n\nWhen writing a module (a Lua file), separate logical blocks of code with\n**two** blank lines:\n\n```lua\nlocal foo = require \"kong.foo\"\n\n\nlocal _M = {}\n\n\nfunction _M.bar()\n  -- do thing...\nend\n\n\nfunction _M.baz()\n  -- do thing...\nend\n\n\nreturn _M\n```\n\n[Back to code style TOC](#table-of-contents---code-style)\n\n[Back to TOC](#table-of-contents)\n\n### Variables\n\nWhen naming a variable or function, **do** use snake_case:\n\n```lua\n-- bad\nlocal myString = \"hello world\"\n\n-- good\nlocal my_string = \"hello world\"\n```\n\nWhen assigning a constant variable, **do** give it an uppercase name:\n\n```lua\n-- bad\nlocal max_len = 100\n\n-- good\nlocal MAX_LEN = 100\n```\n\n[Back to code style TOC](#table-of-contents---code-style)\n\n[Back to TOC](#table-of-contents)\n\n### Tables\n\nUse the constructor syntax, and **do** include a trailing comma:\n\n```lua\n-- bad\nlocal t = {}\nt.foo = \"hello\"\nt.bar = \"world\"\n\n-- good\nlocal t = {\n  foo = \"hello\",\n  bar = \"world\", -- note the trailing comma\n}\n```\n\nOn single-line constructors, **do** include spaces around curly-braces and\nassignments:\n\n```lua\n-- bad\nlocal t = {foo=\"hello\",bar=\"world\"}\n\n-- good\nlocal t = { foo = \"hello\", bar = \"world\" }\n```\n\nPrefer `ipairs()` to `for` loop when iterating an array,\nwhich gives us more readability:\n\n```lua\n-- bad\nfor i = 1, #t do\n  ...\nend\n\n-- good\nfor _, v in ipairs(t) do\n  ...\nend\n```\n\n[Back to code style TOC](#table-of-contents---code-style)\n\n[Back to TOC](#table-of-contents)\n\n### Strings\n\n**Do** favor the use of double quotes in all Lua code (plain files and\n`*_by_lua_block` directives):\n\n```lua\n-- bad\nlocal str = 'hello'\n\n-- good\nlocal str = \"hello\"\n```\n\nIf a string contains double quotes, **do** favor long bracket strings:\n\n```lua\n-- bad\nlocal str = \"message: \\\"hello\\\"\"\n\n-- good\nlocal str = [[message: \"hello\"]]\n```\n\nWhen using the concatenation operator, **do** insert spaces around it:\n\n```lua\n-- bad\nlocal str = \"hello \"..\"world\"\n\n-- good\nlocal str = \"hello \" .. \"world\"\n```\n\nIf a string is too long, **do** break it into multiple lines,\nand join them with the concatenation operator:\n\n```lua\n-- bad\nlocal str = \"It is a very very very long string, that should be broken into multiple lines.\"\n\n-- good\nlocal str = \"It is a very very very long string, \" ..\n            \"that should be broken into multiple lines.\"\n```\n\n[Back to code style TOC](#table-of-contents---code-style)\n\n[Back to TOC](#table-of-contents)\n\n### Functions\n\nPrefer the function syntax over variable syntax:\n\n```lua\n-- bad\nlocal foo = function()\n\nend\n\n-- good\nlocal function foo()\n\nend\n```\n\nPerform validation early and return as early as possible:\n\n```lua\n-- bad\nlocal function check_name(name)\n  local valid = #name > 3\n  valid = valid and #name < 30\n\n  -- other validations\n\n  return valid\nend\n\n-- good\nlocal function check_name(name)\n  if #name <= 3 or #name >= 30 then\n    return false\n  end\n\n  -- other validations\n\n  return true\nend\n```\n\nFollow the return values conventions: Lua supports multiple return values, and\nby convention, handles recoverable errors by returning `nil` plus a `string`\ndescribing the error:\n\n```lua\n-- bad\nlocal function check()\n  local ok, err = do_thing()\n  if not ok then\n    return false, { message = err }\n  end\n\n  return true\nend\n\n-- good\nlocal function check()\n  local ok, err = do_thing()\n  if not ok then\n    return nil, \"could not do thing: \" .. err\n  end\n\n  return true\nend\n```\n\nWhen a function call makes a line go over 80 characters, **do** align the\noverflowing arguments to the first one:\n\n```lua\n-- bad\nlocal str = string.format(\"SELECT * FROM users WHERE first_name = '%s'\", first_name)\n\n-- good\nlocal str = string.format(\"SELECT * FROM users WHERE first_name = '%s'\",\n                          first_name)\n```\n\n[Back to code style TOC](#table-of-contents---code-style)\n\n[Back to TOC](#table-of-contents)\n\n### Conditional expressions\n\nAvoid writing 1-line conditions, **do** indent the child branch:\n\n```lua\n-- bad\nif err then return nil, err end\n\n-- good\nif err then\n  return nil, err\nend\n```\n\nWhen testing the assignment of a value, **do** use shortcuts, unless you\ncare about the difference between `nil` and `false`:\n\n```lua\n-- bad\nif str ~= nil then\n\nend\n\n-- good\nif str then\n\nend\n```\n\nWhen creating multiple branches that span multiple lines, **do** include a\nblank line above the `elseif` and `else` statements:\n\n```lua\n-- bad\nif foo then\n  do_stuff()\n  keep_doing_stuff()\nelseif bar then\n  do_other_stuff()\n  keep_doing_other_stuff()\nelse\n  error()\nend\n\n-- good\nif thing then\n  do_stuff()\n  keep_doing_stuff()\n\nelseif bar then\n  do_other_stuff()\n  keep_doing_other_stuff()\n\nelse\n  error()\nend\n```\n\nFor one-line blocks, blank lines are not necessary:\n\n```lua\n--- good\nif foo then\n  do_stuff()\nelse\n  error(\"failed!\")\nend\n```\n\nNote in the correct \"long\" example that if some branches are long, then all\nbranches are created with the preceding blank line (including the one-liner\n`else` case).\n\nWhen a branch returns, **do not** create subsequent branches, but write the\nrest of your logic on the parent branch:\n\n```lua\n-- bad\nif not str then\n  return nil, \"bad value\"\nelse\n  do_thing(str)\nend\n\n-- good\nif not str then\n  return nil, \"bad value\"\nend\n\ndo_thing(str)\n```\n\nWhen assigning a value or returning from a function, **do** use ternaries if\nit makes the code more readable:\n\n```lua\n-- bad\nlocal foo\nif bar then\n  foo = \"hello\"\n\nelse\n  foo = \"world\"\nend\n\n-- good\nlocal foo = bar and \"hello\" or \"world\"\n```\n\nWhen an expression makes a line longer than 80 characters, **do** align the\nexpression on the following lines:\n\n```lua\n-- bad\nif thing_one < 1 and long_and_complicated_function(arg1, arg2) < 10 or thing_two > 10 then\n\nend\n\n-- good\nif thing_one < 1 and long_and_complicated_function(arg1, arg2) < 10\n   or thing_two > 10\nthen\n\nend\n```\n\nWhen invoking `ngx.log()` with some variable as input, prefer vararg-style\ncalls rather than using the string concatenation operator (`..`):\n\n```lua\n-- bad\nngx.log(ngx.DEBUG, \"if `my_var` is nil, this code throws an exception: \" .. my_var)\n\n-- good\nngx.log(ngx.DEBUG, \"if `my_var` is nil, this code is fine: \", my_var)\n```\n\n[Back to code style TOC](#table-of-contents---code-style)\n\n[Back to TOC](#table-of-contents)\n"
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 136.03,
          "content": "%%%%%%%%%\n\nLibrary\n\nLibrary URL\nLicense URL\n\nLicense text\n\n\n%%%%%%%%%\n\nansicolors\n\nhttps://github.com/kikito/ansicolors.lua\nhttps://github.com/kikito/ansicolors.lua/blob/master/COPYING\n\nCopyright (c) 2009 Rob Hoelz <rob@hoelzro.net>\nCopyright (c) 2011 Enrique García Cota <enrique.garcia.cota@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n%%%%%%%%%\n\nbinaryheap\n\nhttps://github.com/Tieske/binaryheap.lua\nhttps://github.com/Tieske/binaryheap.lua/blob/master/LICENSE\n\nCopyright © 2015-2019 Thijs Schreijer.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\ndate\n\nhttps://github.com/Tieske/date\nhttps://github.com/Tieske/date/blob/master/LICENSE\n\nThe MIT License (MIT) http://opensource.org/licenses/MIT\n\nCopyright (c) 2013-2021 Thijs Schreijer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n%%%%%%%%%\n\netlua\n\nhttps://github.com/leafo/etlua\nhttps://github.com/leafo/etlua#license\n\nMIT, Copyright (C) 2014 by Leaf Corcoran\n\n%%%%%%%%%\n\ngo-codec\n\nhttps://github.com/ugorji/go\nhttps://github.com/ugorji/go/blob/master/LICENSE\n\nThe MIT License (MIT)\n\nCopyright (c) 2012-2020 Ugorji Nwoke.\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\ngo-difflib\n\nhttps://github.com/pmezard/go-difflib\nhttps://github.com/pmezard/go-difflib/blob/master/LICENSE\n\nCopyright (c) 2013, Patrick Mezard\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n    The names of its contributors may not be used to endorse or promote\nproducts derived from this software without specific prior written\npermission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n%%%%%%%%%\n\ngo-spew\n\nhttps://github.com/davecgh/go-spew\nhttps://github.com/davecgh/go-spew/blob/master/LICENSE\n\nISC License\n\nCopyright (c) 2012-2016 Dave Collins <dave@davec.name>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n\n%%%%%%%%%\n\ninspect\n\nhttps://github.com/kikito/inspect.lua\nhttps://github.com/kikito/inspect.lua/blob/master/MIT-LICENSE.txt\n\nCopyright (c) 2013 Enrique García Cota\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n%%%%%%%%%\n\nkong-lapis\n\nhttps://github.com/Kong/lapis\nhttps://github.com/Kong/lapis/blob/master/LICENSE\n\nMIT License\n\nCopyright (c) 2023 Leaf Corcoran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nkong-pgmoon\n\nhttps://github.com/Kong/pgmoon\nhttps://github.com/Kong/pgmoon/blob/master/LICENSE\n\nCopyright (C) 2018 by Leaf Corcoran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nloadkit\n\nhttps://github.com/leafo/loadkit\nhttps://github.com/leafo/loadkit/blob/master/LICENSE\n\nMIT License\n\nCopyright (c) 2023 Leaf Corcoran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nLPeg\n\nhttp://www.inf.puc-rio.br/~roberto/lpeg.html\nhttp://www.inf.puc-rio.br/~roberto/lpeg/lpeg.html#license\n\nCopyright © 2007-2019 Lua.org, PUC-Rio.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n%%%%%%%%%\n\nlua-ffi-zlib\n\nhttps://github.com/hamishforbes/lua-ffi-zlib\nhttps://github.com/hamishforbes/lua-ffi-zlib/blob/master/LICENSE.txt\n\nMIT License\n\nCopyright (c) 2016 Hamish Forbes\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nlua-MessagePack\n\nhttps://fperrad.frama.io/lua-MessagePack/\nhttps://fperrad.frama.io/lua-MessagePack/#copyright-and-license\n\nCopyright © 2012-2019 François Perrad\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n%%%%%%%%%\n\nlua-protobuf\n\nhttps://github.com/starwing/lua-protobuf\nhttps://github.com/starwing/lua-protobuf/blob/master/LICENSE\n\nMIT License\n\nCopyright (c) 2018 Xavier Wang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nlua-resty-acme\n\nhttps://github.com/fffonion/lua-resty-acme\nhttps://github.com/fffonion/lua-resty-acme#copyright-and-license\n\nThis module is licensed under the BSD license.\n\nCopyright (C) 2019, by fffonion <fffonion@gmail.com>.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n%%%%%%%%%\n\nlua-resty-aws\n\nhttps://Kong.github.io/lua-resty-aws/topics/README.md.html\nhttps://github.com/Kong/lua-resty-aws/blob/master/LICENSE\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2020-2024 Kong Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n%%%%%%%%%\n\nlua-resty-counter\n\nhttps://github.com/Kong/lua-resty-counter\nhttps://github.com/Kong/lua-resty-counter#copyright-and-license\n\nThis module is licensed under the Apache 2.0 license.\n\nCopyright (C) 2019, Kong Inc.\n\nAll rights reserved.\n\n\n%%%%%%%%%\n\nlua-resty-healthcheck\n\nhttps://github.com/Kong/lua-resty-healthcheck\nhttps://github.com/Kong/lua-resty-healthcheck/blob/master/LICENSE\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n%%%%%%%%%\n\nlua-resty-http\n\nhttps://github.com/ledgetech/lua-resty-http\nhttps://github.com/ledgetech/lua-resty-http/blob/master/LICENSE\n\nCopyright (c) 2013, James Hurst\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n  Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n%%%%%%%%%\n\nlua-resty-ipmatcher\n\nhttps://github.com/api7/lua-resty-ipmatcher\nhttps://github.com/api7/lua-resty-ipmatcher/blob/master/LICENSE\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n%%%%%%%%%\n\nlua-resty-jit-uuid\n\nhttp://thibaultcha.github.io/lua-resty-jit-uuid/\nhttps://github.com/thibaultcha/lua-resty-jit-uuid/blob/master/LICENSE\n\nThe MIT License (MIT)\n\nCopyright (c) 2016-2019 Thibault Charbonnier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n%%%%%%%%%\n\nlua-resty-ljsonschema\n\nhttps://github.com/Tieske/lua-resty-ljsonschema\nhttps://github.com/Tieske/lua-resty-ljsonschema/blob/master/LICENSE.md\n\n# MIT License\n\n### Copyright (c) 2017 Julien Desgats, 2019-2023 Thijs Schreijer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nlua-resty-luasocket\n\nhttps://github.com/Tieske/lua-resty-luasocket\nhttps://github.com/Tieske/lua-resty-luasocket/blob/master/LICENSE.md\n\n# The MIT License (MIT)\n\n### Copyright (c) 2016-2019 Thibault Charbonnier, 2021-2024 Thijs Schreijer.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n%%%%%%%%%\n\nlua-resty-openssl\n\nhttps://github.com/fffonion/lua-resty-openssl\nhttps://github.com/fffonion/lua-resty-openssl/blob/master/LICENSE\n\nBSD 2-Clause License\n\nCopyright (c) 2020, Wangchong Zhou\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n%%%%%%%%%\n\nlua-resty-session\n\nhttps://github.com/bungle/lua-resty-session\nhttps://github.com/bungle/lua-resty-session/blob/master/LICENSE\n\nCopyright (c) 2014 – 2023 Aapo Talvensaari, 2022 – 2023 Samuele Illuminati\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n%%%%%%%%%\n\nlua-resty-snappy\n\nhttps://github.com/bungle/lua-resty-snappy\nhttps://github.com/bungle/lua-resty-snappy/blob/master/LICENSE\n\nCopyright (c) 2014, Aapo Talvensaari\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n%%%%%%%%%\n\nlua-resty-timer\n\nhttps://github.com/kong/lua-resty-timer\nhttps://github.com/kong/lua-resty-timer/blob/master/LICENSE\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n%%%%%%%%%\n\nlua-resty-timer-ng\n\nhttps://github.com/kong/lua-resty-timer-ng\nhttps://github.com/kong/lua-resty-timer-ng/blob/master/LICENSE\n\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\nCopyright 2016-2022 Kong Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n%%%%%%%%%\n\nlua_pack\n\nhttps://github.com/mashape/lua-pack\nhttps://github.com/mashape/lua-pack/blob/master/LICENSE\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Mashape, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n%%%%%%%%%\n\nlua_system_constants\n\nhttps://github.com/kong/lua-system-constants\nhttps://github.com/kong/lua-system-constants/blob/master/LICENSE\n\nThe MIT License (MIT)\n\nCopyright (c) 2015-2019 Kong, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n%%%%%%%%%\n\nluaexpat\n\nhttps://lunarmodules.github.io/luaexpat\nhttps://github.com/lunarmodules/luaexpat/blob/master/LICENSE\n\nCopyright (C) 2003-2007 The Kepler Project, 2013-2022 Matthew Wild\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n%%%%%%%%%\n\nLuaFileSystem\n\nhttps://github.com/keplerproject/luafilesystem\nhttps://github.com/keplerproject/luafilesystem/blob/master/LICENSE\n\nCopyright © 2003-2010 Kepler Project.\nCopyright © 2010-2022 The LuaFileSystem authors.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nlualogging\n\nhttps://github.com/lunarmodules/lualogging\nhttps://github.com/lunarmodules/lualogging/blob/master/COPYRIGHT\n\nCopyright (c) 2004-2010 Kepler Project, 2011-2013 Neopallium, 2020-2023 Thijs Schreijer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n%%%%%%%%%\n\nLuaRocks\n\nhttps://luarocks.org\nhttps://github.com/luarocks/luarocks/blob/master/COPYING\n\nCopyright 2007-2011, Kepler Project.\nCopyright 2011-2022, the LuaRocks project authors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nLuaSec\n\nhttps://github.com/brunoos/luasec/wiki\nhttps://github.com/brunoos/luasec/blob/master/LICENSE\n\nLuaSec 1.3.2 license\nCopyright (C) 2006-2023 Bruno Silvestre, UFG\n\nPermission is hereby granted, free  of charge, to any person obtaining\na  copy  of this  software  and  associated  documentation files  (the\n\"Software\"), to  deal in  the Software without  restriction, including\nwithout limitation  the rights to  use, copy, modify,  merge, publish,\ndistribute,  sublicense, and/or sell  copies of  the Software,  and to\npermit persons to whom the Software  is furnished to do so, subject to\nthe following conditions:\n\nThe  above  copyright  notice  and  this permission  notice  shall  be\nincluded in all copies or substantial portions of the Software.\n\nTHE  SOFTWARE IS  PROVIDED  \"AS  IS\", WITHOUT  WARRANTY  OF ANY  KIND,\nEXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF\nMERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n%%%%%%%%%\n\nLuaSocket\n\nhttp://luaforge.net/projects/luasocket/\nhttps://github.com/diegonehab/luasocket/blob/master/LICENSE\n\nCopyright © 2004-2013 Diego Nehab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n%%%%%%%%%\n\nluasyslog\n\nhttps://github.com/lunarmodules/luasyslog\nhttps://github.com/lunarmodules/luasyslog/blob/master/COPYING\n\nCopyright � 1994-2021 Nicolas Casalini (DarkGod).\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to\ndo so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nluatz\n\nhttps://github.com/daurnimator/luatz\nhttps://github.com/daurnimator/luatz/blob/master/COPYING\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2017 Daurnimator\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n%%%%%%%%%\n\nluaxxhash\n\nhttps://github.com/szensk/luaxxhash\nhttps://github.com/szensk/luaxxhash/blob/master/LICENSE\n\nluaxxhash License\n--------------------------\n\nluaxxhash is licensed under the terms of the MIT/X11 license reproduced below.\n\n===============================================================================\n\nCopyright (C) 2014 szensk.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n===============================================================================\n\n(end of COPYRIGHT)\n\n%%%%%%%%%\n\nlyaml\n\nhttp://github.com/gvvaughan/lyaml\nhttps://github.com/gvvaughan/lyaml/blob/master/LICENSE\n\nThis software comprises files that are copyright their respective\nauthors (see the AUTHORS file for details), and distributed under\nthe terms of the MIT license (the same license as Lua itself),\nunless noted otherwise in the body of that file.\n\n====================================================================\nCopyright (C) 2013-2023 Gary V. Vaughan\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of the Software,\nand to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in  all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGE-\nMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE\nFOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n====================================================================\n\n\n%%%%%%%%%\n\nmultipart\n\nhttps://github.com/Kong/lua-multipart\nhttps://github.com/Kong/lua-multipart/blob/master/LICENSE\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Mashape (https://www.mashape.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n%%%%%%%%%\n\nnet-url\n\nhttps://github.com/golgote/neturl\nhttps://github.com/golgote/neturl/blob/master/LICENSE.txt\n\nCopyright (c) 2011-2023 Bertrand Mansion\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n%%%%%%%%%\n\nOpenResty\n\nhttps://openresty.org\nhttps://github.com/openresty/openresty/blob/master/COPYRIGHT\n\nCopyright (C) 2009-2015, by Yichun \"agentzh\" Zhang, OpenResty Inc.\n\nCopyright (C) 2009-2014, by Xiaozhe Wang (chaoslawful) <chaoslawful@gmail.\ncom>.\n\nCopyright (C) 2010-2014, by FRiCKLE Piotr Sikora <info@frickle.com>.\n\nCopyright (C) 2015, by Shuxin Yang.\n\nCopyright (c) 2010, 2011, Jiale \"calio\" Zhi <vipcalio@gmail.com>.\n\nCopyright (C) Guanlan Dai\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\nCopyright (c) 2010, Marcus Clyne, Simpl (simpl.it)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of the organization (Simpl) nor the\n      names of its contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL MARCUS CLYNE OR SIMPL BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED\nAND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n-----------------------------------------------------------------------------\n\nCopyright (C) 2002-2015 Igor Sysoev\nCopyright (C) 2011-2015 Nginx, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n-----------------------------------------------------------------------------\n\nNGINX License\n\nCopyright (C) 2002-2009 Igor Sysoev\nCopyright (C) 2009-2013 Sergey A. Osokin\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n-----------------------------------------------------------------------------\n\nLuaJIT -- a Just-In-Time Compiler for Lua. http://luajit.org/\n\nCopyright (C) 2005-2015 Mike Pall. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy\nof this software and associated documentation files (the \"Software\"), to\ndeal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN\nTHE SOFTWARE.\n\n[ MIT license: http://www.opensource.org/licenses/mit-license.php ]\n\n-----------------------------------------------------------------------------\n\nLua License\n\nCopyright (C) 1994-2012 Lua.org, PUC-Rio.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy\nof this software and associated documentation files (the \"Software\"), to\ndeal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN\nTHE SOFTWARE.\n\n-----------------------------------------------------------------------------\n\nLua-cjson License\n\nCopyright (c) 2010-2012  Mark Pulford <mark@kyne.com.au>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n-----------------------------------------------------------------------------\n\nSHA-1 implementation in NDK\n\nCopyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\nAll rights reserved.\n\nThis package is an SSL implementation written\nby Eric Young (eay@cryptsoft.com).\nThe implementation was written so as to conform with Netscapes SSL.\n\nThis library is free for commercial and non-commercial use as long as\nthe following conditions are aheared to.  The following conditions\napply to all code found in this distribution, be it the RC4, RSA,\nlhash, DES, etc., code; not just the SSL code.  The SSL documentation\nincluded with this distribution is covered by the same copyright terms\nexcept that the holder is Tim Hudson (tjh@cryptsoft.com).\n\nCopyright remains Eric Young's, and as such any Copyright notices in\nthe code are not to be removed.\nIf this package is used in a product, Eric Young should be given attribution\nas the author of the parts of the library used.\nThis can be in the form of a textual message at program startup or\nin documentation (online or textual) provided with the package.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. All advertising materials mentioning features or use of this software\n   must display the following acknowledgement:\n   \"This product includes cryptographic software written by\n    Eric Young (eay@cryptsoft.com)\"\n   The word 'cryptographic' can be left out if the rouines from the library\n   being used are not cryptographic related :-).\n4. If you include any Windows specific code (or a derivative thereof) from\n   the apps directory (application code) you must include an acknowledgement:\n   \"This product includes software written by Tim Hudson (tjh@cryptsoft.com)\"\n\nTHIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\nThe licence and distribution terms for any publically available version\nor\nderivative of this code cannot be changed.  i.e. this code cannot simply\nbe\ncopied and put under another distribution licence\n\n-----------------------------------------------------------------------------\n\nOpenSSL\n\nCopyright (c) 1998-2016 The OpenSSL Project.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in\n   the documentation and/or other materials provided with the\n   distribution.\n\n3. All advertising materials mentioning features or use of this\n   software must display the following acknowledgment:\n   \"This product includes software developed by the OpenSSL Project\n   for use in the OpenSSL Toolkit. (http://www.openssl.org/)\"\n\n4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to\n   endorse or promote products derived from this software without\n   prior written permission. For written permission, please contact\n   openssl-core@openssl.org.\n\n5. Products derived from this software may not be called \"OpenSSL\"\n   nor may \"OpenSSL\" appear in their names without prior written\n   permission of the OpenSSL Project.\n\n6. Redistributions of any form whatsoever must retain the following\n   acknowledgment:\n   \"This product includes software developed by the OpenSSL Project\n   for use in the OpenSSL Toolkit (http://www.openssl.org/)\"\n\nTHIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY\nEXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR\nITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\nOF THE POSSIBILITY OF SUCH DAMAGE.\n\nThis product includes cryptographic software written by Eric Young\n(eay@cryptsoft.com).  This product includes software written by Tim\nHudson (tjh@cryptsoft.com).\n\nCopyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\nAll rights reserved.\n\nThis package is an SSL implementation written\nby Eric Young (eay@cryptsoft.com).\nThe implementation was written so as to conform with Netscapes SSL.\n\nThis library is free for commercial and non-commercial use as long as\nthe following conditions are aheared to.  The following conditions\napply to all code found in this distribution, be it the RC4, RSA,\nlhash, DES, etc., code; not just the SSL code.  The SSL documentation\nincluded with this distribution is covered by the same copyright terms\nexcept that the holder is Tim Hudson (tjh@cryptsoft.com).\n\nCopyright remains Eric Young's, and as such any Copyright notices in\nthe code are not to be removed.\nIf this package is used in a product, Eric Young should be given attribution\nas the author of the parts of the library used.\nThis can be in the form of a textual message at program startup or\nin documentation (online or textual) provided with the package.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\n3. All advertising materials mentioning features or use of this software\n   must display the following acknowledgement:\n   \"This product includes cryptographic software written by\n    Eric Young (eay@cryptsoft.com)\"\n   The word 'cryptographic' can be left out if the rouines from the library\n   being used are not cryptographic related :-).\n\n4. If you include any Windows specific code (or a derivative thereof) from\n   the apps directory (application code) you must include an acknowledgement:\n   \"This product includes software written by Tim Hudson (tjh@cryptsoft.com)\"\n\nTHIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\nThe licence and distribution terms for any publically available version or\nderivative of this code cannot be changed.  i.e. this code cannot simply be\ncopied and put under another distribution licence\n[including the GNU Public Licence.]\n\n-----------------------------------------------------------------------------\n\nPCRE LICENCE\n------------\n\nPCRE is a library of functions to support regular expressions whose syntax\nand semantics are as close as possible to those of the Perl 5 language.\n\nRelease 8 of PCRE is distributed under the terms of the \"BSD\" licence, as\nspecified below. The documentation for PCRE, supplied in the \"doc\"\ndirectory, is distributed under the same terms as the software itself. The data\nin the testdata directory is not copyrighted and is in the public domain.\n\nThe basic library functions are written in C and are freestanding. Also\nincluded in the distribution is a set of C++ wrapper functions, and a\njust-in-time compiler that can be used to optimize pattern matching. These\nare both optional features that can be omitted when the library is built.\n\n\nTHE BASIC LIBRARY FUNCTIONS\n---------------------------\n\nWritten by:       Philip Hazel\nEmail local part: ph10\nEmail domain:     cam.ac.uk\n\nUniversity of Cambridge Computing Service,\nCambridge, England.\n\nCopyright (c) 1997-2017 University of Cambridge\nAll rights reserved.\n\n\nPCRE JUST-IN-TIME COMPILATION SUPPORT\n-------------------------------------\n\nWritten by:       Zoltan Herczeg\nEmail local part: hzmester\nEmain domain:     freemail.hu\n\nCopyright(c) 2010-2017 Zoltan Herczeg\nAll rights reserved.\n\n\nSTACK-LESS JUST-IN-TIME COMPILER\n--------------------------------\n\nWritten by:       Zoltan Herczeg\nEmail local part: hzmester\nEmain domain:     freemail.hu\n\nCopyright(c) 2009-2017 Zoltan Herczeg\nAll rights reserved.\n\n\nTHE C++ WRAPPER FUNCTIONS\n-------------------------\n\nContributed by:   Google Inc.\n\nCopyright (c) 2007-2012, Google Inc.\nAll rights reserved.\n\n\nTHE \"BSD\" LICENCE\n-----------------\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the name of the University of Cambridge nor the name of Google\n      Inc. nor the names of their contributors may be used to endorse or\n      promote products derived from this software without specific prior\n      written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n-----------------------------------------------------------------------------\n\nzlib\n\n (C) 1995-2013 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n  Jean-loup Gailly        Mark Adler\n  jloup@gzip.org          madler@alumni.caltech.edu\n\nIf you use the zlib library in a product, we would appreciate *not* receiving\nlengthy legal documents to sign.  The sources are provided for free but without\nwarranty of any kind.  The library has been entirely written by Jean-loup\nGailly and Mark Adler; it does not include third-party code.\n\nIf you redistribute modified sources, we would appreciate that you include in\nthe file ChangeLog history information documenting your changes.  Please read\nthe FAQ for more information on the distribution of modified source versions.\n\n\n%%%%%%%%%\n\nOpenSSL\n\nhttps://github.com/openssl/openssl\nhttps://github.com/openssl/openssl/blob/master/LICENSE.txt\n\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n\n%%%%%%%%%\n\npenlight\n\nhttps://lunarmodules.github.io/penlight\nhttps://github.com/lunarmodules/penlight/blob/master/LICENSE.md\n\nCopyright (C) 2009-2016 Steve Donovan, David Manura.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\nANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n\n\n%%%%%%%%%\n\ntestify\n\nhttps://github.com/stretchr/testify\nhttps://github.com/stretchr/testify/blob/master/LICENSE\n\nMIT License\n\nCopyright (c) 2012-2020 Mat Ryer, Tyler Bunnell and contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n%%%%%%%%%\n\nversion\n\nhttps://github.com/Kong/version.lua\nundefined\n\nundefined\n\n"
        },
        {
          "name": "DEVELOPER.md",
          "type": "blob",
          "size": 23.66,
          "content": "\n## Development\n\nWe encourage community contributions to Kong. To make sure it is a smooth\nexperience (both for you and for the Kong team), please read\n[CONTRIBUTING.md](CONTRIBUTING.md), [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md),\nand [COPYRIGHT](COPYRIGHT) before you start.\n\nIf you are planning on developing on Kong, you'll need a development\ninstallation. The `master` branch holds the latest unreleased source code.\n\nYou can read more about writing your own plugins in the [Plugin Development\nGuide](https://docs.konghq.com/gateway/latest/plugin-development/), or browse an\nonline version of Kong's source code documentation in the [Plugin Development\nKit (PDK) Reference](https://docs.konghq.com/latest/pdk/).\n\nFor a quick start with custom plugin development, check out [Pongo](https://github.com/Kong/kong-pongo)\nand the [plugin template](https://github.com/Kong/kong-plugin) explained in detail below.\n\n\n## Distributions\n\nKong comes in many shapes. While this repository contains its core's source\ncode, other repos are also under active development:\n\n- [Kubernetes Ingress Controller for Kong](https://github.com/Kong/kubernetes-ingress-controller):\n  Use Kong for Kubernetes Ingress.\n- [Binary packages](https://docs.konghq.com/gateway/latest/install/)\n- [Kong Docker](https://github.com/Kong/docker-kong): A Dockerfile for\n  running Kong in Docker.\n- [Kong Packages](https://github.com/Kong/kong/releases): Pre-built packages\n  for Debian, Red Hat, and OS X distributions (shipped with each release).\n- [Kong Homebrew](https://github.com/Kong/homebrew-kong): Homebrew Formula\n  for Kong.\n- [Kong AWS AMI](https://aws.amazon.com/marketplace/pp/B06WP4TNKL): Kong AMI on\n  the AWS Marketplace.\n- [Kong on Microsoft Azure](https://github.com/Kong/kong-dist-azure): Run Kong\n  using Azure Resource Manager.\n- [Kong on Heroku](https://github.com/heroku/heroku-kong): Deploy Kong on\n  Heroku in one click.\n- [Kong on IBM Cloud](https://github.com/andrew40404/installing-kong-IBM-cloud) - How to deploy Kong on IBM Cloud\n- [Kong and Instaclustr](https://www.instaclustr.com/solutions/managed-cassandra-for-kong/): Let\n  Instaclustr manage your Cassandra cluster.\n- [Master Builds](https://hub.docker.com/r/kong/kong): Docker images for each commit in the `master` branch.\n\nYou can find every supported distribution on the [official installation page](https://konghq.com/install/#kong-community).\n\n#### Kong Pongo\n\n[Pongo](https://github.com/Kong/kong-pongo) is a CLI tool that are\nspecific for plugin development. It is docker-compose based and will\ncreate local test environments including all dependencies. Core features\nare running tests, integrated linter, config initialization, CI support,\nand custom dependencies.\n\n#### Kong Plugin Template\n\nThe [plugin template](https://github.com/Kong/kong-plugin) provides a basic\nplugin and is considered a best-practices plugin repository. When writing\ncustom plugins, we strongly suggest you start by using this repository as a\nstarting point. It contains the proper file structures, configuration files,\nand CI setup to get up and running quickly. This repository seamlessly\nintegrates with [Pongo](https://github.com/Kong/kong-pongo).\n\n## Build and Install from source\n\nThis is the hard way to build a development environment, and also a good start\nfor beginners to understand how everything fits together.\n\nKong is mostly an OpenResty application made of Lua source files, but also\nrequires some additional third-party dependencies, some of which are compiled\nwith tweaked options, and kong runs on a modified version of OpenResty with\npatches.\n\nTo install from the source, first, we clone the repository:\n\n```shell\ngit clone https://github.com/Kong/kong\n\ncd kong\n# You might want to switch to the development branch. See CONTRIBUTING.md\ngit checkout master\n\n```\n\nThen we will install the dependencies:\n\nUbuntu/Debian:\n\n```shell\nsudo apt update \\\n&& sudo apt install -y \\\n    automake \\\n    build-essential \\\n    curl \\\n    file \\\n    git \\\n    libyaml-dev \\\n    libprotobuf-dev \\\n    m4 \\\n    perl \\\n    pkg-config \\\n    procps \\\n    unzip \\\n    valgrind \\\n    zlib1g-dev\n\n```\n\nFedora/RHEL:\n\n```shell\ndnf install \\\n    automake \\\n    gcc \\\n    gcc-c++ \\\n    git \\\n    libyaml-devel \\\n    make \\\n    patch \\\n    perl \\\n    perl-IPC-Cmd \\\n    protobuf-devel \\\n    unzip \\\n    valgrind \\\n    valgrind-devel \\\n    zlib-devel\n```\n\nmacOS\n\n```shell\n# Install Xcode from App Store (Command Line Tools is not supported)\n\n# Install HomeBrew\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n# Build dependencies\nbrew install libyaml\n```\n\nNow, you have to authenticate with GitHub to download some essential repos\nusing either one of the following ways:\n* Download [`gh cli`](https://cli.github.com/) and run `gh auth login` once.\n* Use a [Personal Access Token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token). This token does not need to have any other permission than `Public Repositories (read-only)`, and set it as `GITHUB_TOKEN` environment variable.\n* Use [git credential helper](https://git-scm.com/docs/gitcredentials).\n\nThen you have to make the Rust build system also authenticate with GitHub,\nthere is nothing you need to do if you were authenticated using `gh` or `git credential helper`,\notherwise, you can set the[`CARGO_NET_GIT_FETCH_WITH_CLI`](https://doc.rust-lang.org/cargo/reference/config.html)\nenvironment variable to `true`.\n\n```shell\nexport CARGO_NET_GIT_FETCH_WITH_CLI=true\n```\n\nAn alternative is to edit the `~/.cargo/config` file and add the following lines:\n\n```toml\n[net]\ngit-fetch-with-cli = true\n```\n\nYou also have to make sure the `git` CLI is using the proper protocol to fetch the dependencies\nif you are authenticated with\n[Personal Access Token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\n\n```shell\n# If you are using the HTTPS protocol to clone the repository\n# YOU ONLY NEED TO DO THIS ONLY ONCE FOR THIS DIRECTORY\ngit config --local url.\"https://${GITHUB_TOKEN}@github.com/\".insteadOf 'git@github.com:'\ngit config --local url.\"https://${GITHUB_TOKEN}@github.com\".insteadOf 'https://github.com'\n\n\n# If you are using the SSH protocol to clone the repository\n# YOU ONLY NEED TO DO THIS ONLY ONCE FOR THIS DIRECTORY\ngit config --local url.'git@github.com:'.insteadOf 'https://github.com'\ngit config --local url.'ssh://git@github.com/'.insteadOf 'https://github.com/'\n```\n\nFinally, we start the build process:\n\n```\n# Build the virtual environment for developing Kong\nmake build-venv\n```\n\n[The build guide](https://github.com/Kong/kong/blob/master/build/README.md) contains a troubleshooting section if\nyou face any problems. It also describes the build process in detail, if you want to development on the build\nsystem itself.\n\n### Start Kong\n\nNow you can start Kong:\n\n```shell\n# Activate the venv by adding some environment variables and populate helper functions\n# into your current shell session, following functions are exported:\n# `start_services`, `stop_services` and `deactivate`\n# For Zsh/Bash:\n. bazel-bin/build/kong-dev-venv.sh\n# For Fish Shell:\n. bazel-bin/build/kong-dev-venv.fish\n\n# Use the pre-defined docker-compose file to bring up databases etc\nstart_services\n\n# Start Kong!\nkong start\n\n# Stop Kong\nkong stop\n\n# Cleanup\ndeactivate\n```\n\n### Install Development Dependencies\n\n#### Running for development\n\nBy default, the development environment adds current directory to Lua files search path.\n\nModifying the [`lua_package_path`](https://github.com/openresty/lua-nginx-module#lua_package_path)\nand [`lua_package_cpath`](https://github.com/openresty/lua-nginx-module#lua_package_cpath)\ndirectives will allow Kong to find your custom plugin's source code wherever it\nmight be in your system.\n\n#### Tests\n\nInstall the development dependencies ([busted](https://lunarmodules.github.io/busted/),\n[luacheck](https://github.com/mpeterv/luacheck)) with:\n\n```shell\nmake dev\n```\n\nIf Rust/Cargo doesn't work, try setting `export KONG_TEST_USER_CARGO_DISABLED=1` first.\n\nKong relies on three test suites using the [busted](https://lunarmodules.github.io/busted/) testing library:\n\n* Unit tests\n* Integration tests, which require Postgres and Cassandra to be up and running\n* Plugins tests, which require Postgres to be running\n\nThe first can simply be run after installing busted and running:\n\n```\nmake test\n```\n\nHowever, the integration and plugins tests will spawn a Kong instance and\nperform their tests against it. Because these test suites perform their tests\nagainst the Kong instance, you may need to edit the `spec/kong_tests.conf`\nconfiguration file to make your test instance point to your Postgres/Cassandra\nservers, depending on your needs.\n\nYou can run the integration tests (assuming **both** Postgres and Cassandra are\nrunning and configured according to `spec/kong_tests.conf`) with:\n\n```\nmake test-integration\n```\n\nAnd the plugins tests with:\n\n```\nmake test-plugins\n```\n\nFinally, all suites can be run at once by simply using:\n\n```\nmake test-all\n```\n\nConsult the [run_tests.sh](.ci/run_tests.sh) script for more advanced example\nusage of the test suites and the Makefile.\n\nFinally, a very useful tool in Lua development (as with many other dynamic\nlanguages) is performing static linting of your code. You can use\n[luacheck](https://github.com/mpeterv/luacheck)\n\\(installed with `make dev`\\) for this:\n\n```\nmake lint\n```\n\n#### Upgrade tests\n\nKong Gateway supports no-downtime upgrades through its database schema\nmigration mechanism (see [UPGRADE.md](./UPGRADE.md)).  Each schema\nmigration needs to be written in a way that allows the previous and\nthe current version of Kong Gateway run against the same database\nduring upgrades.  Once all nodes have been upgraded to the current\nversion of Kong Gateway, additional changes to the database can be\nmade that are incompatible with the previous version.  To support\nthat, each migration is split into two parts, an `up` part that can\nonly make backwards-compatible changes, and a `teardown` part that\nruns after all nodes have been upgraded to the current version.\n\nEach migration that is contained in Kong Gateway needs to be\naccompanied with a test that verifies the correct operation of both\nthe previous and the current version during an upgrade.  These tests\nare located in the [spec/05-migration/](spec/05-migration/) directory\nand must be named after the migration they test such that the\nmigration `kong/**/*.lua` has a test in\n`spec/05-migration/**/*_spec.lua`.  The presence of a test is enforced\nby the [upgrade testing](scripts/upgrade-tests/test-upgrade-path.sh) shell script\nwhich is [automatically run](.github/workflows/upgrade-tests.yml)\nthrough a GitHub Action.\n\nThe [upgrade testing](scripts/upgrade-tests/test-upgrade-path.sh) shell script works\nas follows:\n\n * A new Kong Gateway installation is brought up using\n   [Gojira](https://github.com/Kong/gojira), consisting of one node\n   containing the previous version of Kong Gateway (\"OLD\"), one node\n   containing the current version of Kong Gateway (\"NEW\") and a shared\n   database server (PostgreSQL or Cassandra).\n * NEW: The database is initialized using `kong migrations bootstrap`.\n * OLD: The `setup` phase of all applicable migration tests is run.\n * NEW: `kong migrations up` is run to run the `up` part of all\n   applicable migrations.\n * OLD: The `old_after_up` phase of all applicable migration tests is\n   run.\n * NEW: The `new_after_up` phase of all applicable migration tests is\n   run.\n * NEW: `kong migrations finish` is run to invoke the `teardown` part\n   of all applicable migrations.\n * NEW: The `new_after_finish` phase of all applicable migration tests\n   is run.\n\nUpgrade tests are run using [busted](https://github.com/lunarmodules/busted).\nTo support the specific testing\nmethod of upgrade testing, a number of helper functions are defined in\nthe [spec/upgrade_helpers.lua](spec/upgrade_helpers.lua) module.\nMigration tests use functions from this module to define test cases\nand associate them with phases of the upgrade testing process.\nConsequently, they are named `setup`, `old_after_up`, `new_after_up`\nand `new_after_finish`.  Additionally, the function `all_phases` can be\nused to run a certain test in the three phases `old_after_up`,\n`new_after_up` and `new_after_finish`.  These functions replace the\nuse of busted's `it` function and accept a descriptive string and a\nfunction as argument.\n\nIt is important to note that upgrade tests need to run on both the old\nand the new version of Kong.  Thus, they can only use features that\nare available in both versions (i.e. from helpers.lua).  The module\n[spec/upgrade_helpers.lua](spec/upgrade_helpers.lua) is copied from\nthe new version into the container of the old version and it can be\nused to make new library functionality available to migration tests.\n\n#### Makefile\n\nWhen developing, you can use the `Makefile` for doing the following operations:\n\n| Name               | Description                                            |\n| ------------------:| -------------------------------------------------------|\n| `install`          | Install the Kong luarock globally                      |\n| `dev`              | Install development dependencies                       |\n| `lint`             | Lint Lua files in `kong/` and `spec/`                  |\n| `test`             | Run the unit tests suite                               |\n| `test-integration` | Run the integration tests suite                        |\n| `test-plugins`     | Run the plugins test suite                             |\n| `test-all`         | Run all unit + integration + plugins tests at once     |\n\n### Setup Hybrid Mode Development Environment\n\nYou can follow the steps given below to setup a hybrid mode environment.\n\n1. Activate the venv\n\n   ```bash\n   # . bazel-bin/build/kong-dev-venv.sh\n   ```\n\n2. Following [Deploy Kong Gateway in Hybrid Mode: Generate certificate/key pair](https://docs.konghq.com/gateway/latest/production/deployment-topologies/hybrid-mode/setup/#generate-a-certificatekey-pair) to generate a certificate/key pair.\n\n3. Create CP and DP configuration files, such as `kong-cp.conf` and `kong-dp.conf`.\n\n4. Following [Deploy Kong Gateway in Hybrid Mode: CP Configuration](https://docs.konghq.com/gateway/latest/production/deployment-topologies/hybrid-mode/setup/#set-up-the-control-plane) to configure CP using `kong.conf`.\n\n5. Following [Deploy Kong Gateway in Hybrid Mode: DP Configuration](https://docs.konghq.com/gateway/latest/production/deployment-topologies/hybrid-mode/setup/#install-and-start-data-planes) to configure DP using `kong.conf`.\n\n6. Unset environment variable `KONG_PREFIX` to ensure configuration directive `prefix` in configuration file is enabled.\n\n7. Modify or add the directive `prefix` to `kong-cp.conf` and `kong-dp.conf`\nto be `prefix=servroot-cp` and `prefix=servroot-dp`,\nor other names you want, but make sure they are different.\n\n8. Use the pre-defined docker-compose file to bring up databases, etc.\n\n   ```bash\n   # start_services\n   ```\n\n9. If it is the first time to start Kong, you have to execute the following command to CP node.\n\n   ```bash\n   # kong migrations bootstrap -c kong-cp.conf\n   ```\n\n10. Start CP and DP. `kong start -c kong-cp.conf` and `kong start -c kong-dp.conf`.\n\n11. To stop CP and DP, you can execute `kong stop -p servroot-cp` and\n`kong stop -p servroot-dp` in this example.\nNames `servroot-cp` and `servroot-dp` are set in configuration file in step 7.\n\n\n\n## Dev on Linux (Host/VM)\n\nIf you have a Linux development environment (either virtual or bare metal), the build is done in four separate steps:\n\n1. Development dependencies and runtime libraries, including:\n   1. Prerequisite packages.  Mostly compilers, tools, and libraries required to compile everything else.\n   2. OpenResty system, including Nginx, LuaJIT, PCRE, etc.\n2. Databases. Kong uses Postgres, Cassandra, and Redis.  We have a handy setup with docker-compose to keep each on its container.\n3. Kong itself.\n\n### Virtual Machine (Optional)\n\nFinal deployments are typically on a Linux machine or container, so even if all components are multiplatform,\nit's easier to use it for development too. If you use macOS or Windows machines, setting up a virtual machine\nis easy enough now. Most of us use the freely available VirtualBox without any trouble.\n\nIf you use Linux for your desktop, you can skip this section.\n\nThere are no \"hard\" requirements on any Linux distro, but RHEL and CentOS can be more of a challenge\nto get recent versions of many packages; Fedora, Debian, or Ubuntu are easier for this.\n\nTo avoid long compilation times, give the VM plenty of RAM (8GB recommended) and all the CPU cores you can.\n\n#### Virtual Box setup\n\nYou will need to setup port forwarding on VirtualBox to be able to ssh into the box which can be done as follows:\n\n1. Select the virtual machine you want to use and click \"Settings\"\n1. Click the \"Network\" tab\n1. Click the \"Advanced\" dropdown\n1. Click \"Port Forwarding\"\n1. Add a new rule in the popup. The only thing you will need is \"Host Port\" to be 22222 and \"Guest Port\" to be 22. Everything else can be left default (see screenshot below)\n1. Click \"Ok\"\n\nNow you should be able to `ssh <your_name>@127.1 -p 22222` to get SSH prompt. However, this requires us to type a long command and password every time we sign in. It is recommended you set up a public key and SSH alias to make this process simpler:\n\n1. On your host machine, generate a keypair for SSH into the guest: `ssh-keygen -t ed25519`.\nJust keep hitting Enter until the key is generated. You do not need a password for this key file since it is only used for SSH into your guest\n1. Type `cat .ssh/id_ed25519.pub` and copy the public key\n1. SSH into the guest using the command above\n1. Create the ssh config directory (if it doesn't exist) `$ mkdir -p .ssh`\n1. Edit the authorized keys list: `vim .ssh/authorized_keys`\n1. Paste in the content of .ssh/id_ed25519.pub\n1. Adjust the required privileges: `chmod 700 .ssh/`  and `chmod 400 .ssh/authorized_keys`\n1. Logout of guest and make sure you are not promoted password when SSH again\n1. Edit the .ssh/config file on your host and put in the following content:\n\n```\n    Host dev\n        HostName 127.1\n        Port 22222\n        User <your_user_name>\n```\n\nNow try `ssh dev` on your host, you should be able to get into the guest directly.\n\n## Dev on VSCode Container / GitHub Codespaces\n\nThe `devcontainer.json` file in Kong's project tells VS Code\nhow to access (or create) a development container with a well-defined tool and runtime stack.\n\n- See [How to create a GitHub codespace](https://docs.github.com/en/codespaces/developing-in-codespaces/creating-a-codespace#creating-a-codespace).\n- See [How to create a VSCode development container](https://code.visualstudio.com/docs/remote/containers#_quick-start-try-a-development-container).\n\n## Debugging Kong Gateway with EmmyLua and IntelliJ IDEA/VSCode\n\n[EmmyLua](https://emmylua.github.io/) is a plugin for IntelliJ IDEA and VSCode that provides Lua language\nsupport.  It comes with debugger support that makes it possible to set breakpoints in Lua code\nand inspect variables.  Kong Gateway can be debugged using EmmyLua by following these steps:\n\n### Install the IDE\n\n#### IntelliJ IDEA\n\nDownload and install IntelliJ IDEA from [here](https://www.jetbrains.com/idea/download/).  Note\nthat IntelliJ is a commercial product and requires a paid license after the trial period.\n\n#### VSCode\n\nDownload and install MS Visual Studio Code from [here](https://code.visualstudio.com/download).\n\n### Install EmmyLua\n\n#### IntelliJ IDEA\n\nGo to the `Settings`->`Plugins`->`Marketplace` and search for `EmmyLua`.\nInstall the plugin.\n\n#### VSCode\n\nGo to the `Settings`->`Extensions` and search for `EmmyLua`.\nInstall the plugin (publisher is `Tangzx`).\n\n### Download and install the EmmyLua debugging server\n\nThe [EmmyLuaDebugger](https://github.com/EmmyLua/EmmyLuaDebugger) is a standalone C++ program\nthat runs on the same machine as Kong Gateway and that mediates between the IDE's\ndebugger and the Lua code running in Kong Gateway.  It can be downloaded from\n[GitHub](https://github.com/EmmyLua/EmmyLuaDebugger/releases).  The release\nZIP file contains a single shared library named emmy_core.so (Linux) or emmy_core.dylib (macOS).\nPlace this file in a directory that is convenient for you and remember the path.\n\nDepending on your Linux version, you may need to compile\n[EmmyLuaDebugger](https://github.com/EmmyLua/EmmyLuaDebugger) on your\nown system as the release binaries published on GitHub assume a pretty\nrecent version of GLIBC to be present.\n\n### Start Kong Gateway with the EmmyLua debugger\n\nTo enable the EmmyLua debugger, the `KONG_EMMY_DEBUGGER` environment variable must be set to\nthe absolute path of the debugger shared library file when Kong Gateway is started.  It is\nalso advisable to start Kong Gateway with only one worker process, as debugging multiple worker\nprocesses requires special care.  For example:\n\n```shell\nKONG_EMMY_DEBUGGER=/path/to/emmy_core.so KONG_NGINX_WORKER_PROCESSES=1 kong start\n```\n\n### Create debugger configuration\n\n#### IntelliJ IDEA\n\nGo to `Run`->`Edit Configurations` and click the `+` button to add a new\nconfiguration.  Select `Emmy Debugger(NEW)` as the configuration type.  Enter a descriptive\nname for the configuration, e.g. \"Kong Gateway Debug\".  Click `OK` to save the configuration.\n\n#### VSCode\n\nGo to `Run`->`Add Configuration` and choose `EmmyLua New Debugger`. Enter a descriptive name\nfor the configuration, e.g. \"Kong Gateway Debug\". Save `launch.json`.\n\n### Start the EmmyLua debugger\n\nTo connect the EmmyLua debugger to Kong Gateway, click the `Run`->`Debug` menu item in IntelliJ\n(`Run`->`Start Debugging` in VSCode) and select the configuration that you've just created.  You\nwill notice that the restart and stop buttons on the top of your IDE will change to solid green\nand red colors.  You can now set breakpoints in your Lua code and start debugging.  Try setting\na breakpoint in the global `access` function that is defined `runloop/handler.lua` and send\na proxy request to the Gateway.  The debugger should stop at the breakpoint and you can\ninspect the variables in the request context.\n\n### Debugging `busted` tests\n\nTo debug `busted` tests, you can set the `BUSTED_EMMY_DEBUGGER` environment variable to the path\nto the EmmyLua debugger shared library.  When debugging is enabled, `busted` will always wait for\nthe IDE to connect during startup.\n\n### Debugging environment variables\n\nThe following environment variables can be set to control the behavior of the EmmyLua debugger\nintegration:\n\n- `KONG_EMMY_DEBUGGER`: The path to the EmmyLua debugger shared library.\n- `KONG_EMMY_DEBUGGER_HOST`: The IP address that the EmmyLua debugger will listen on.  The default\n  is `localhost`.\n- `KONG_EMMY_DEBUGGER_PORT`: The port that the EmmyLua debugger will listen on.  The default is\n  `9966`.\n- `KONG_EMMY_DEBUGGER_WAIT`: If set, Kong Gateway will wait for the debugger to connect\n  before starting continuing to start.\n- `KONG_EMMY_DEBUGGER_SOURCE_PATH`: The path to the source code that the EmmyLua debugger will\n  use to resolve source code locations.  The default is the current working directory.\n- `KONG_EMMY_DEBUGGER_MULTI_WORKER`: If set, a debugger will be started for each worker process, using\n  incrementing port numbers starting at `KONG_EMMY_DEBUGGER_PORT`.  The default is to start\n  only one debugger for worker zero.\n\nTo control debugger behavior while running `busted` tests, a similar set of environment variables\nprefixed with `BUSTED_` instead of `KONG_` can be used.\n\n## What's next\n\n- Refer to the [Kong Gateway Docs](https://docs.konghq.com/gateway/) for more information.\n- Learn about [lua-nginx-module](https://github.com/openresty/lua-nginx-module).\n- Learn about [lua-resty-core](https://github.com/openresty/lua-resty-core).\n- Learn about the fork [luajit2](https://github.com/openresty/luajit2) of OpenResty.\n- For profiling, see [stapxx](https://github.com/openresty/stapxx), the SystemTap framework for OpenResty.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016-2024 Kong Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MODULE.bazel",
          "type": "blob",
          "size": 0.39,
          "content": "###############################################################################\n# Bazel now uses Bzlmod by default to manage external dependencies.\n# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.\n#\n# For more details, please check https://github.com/bazelbuild/bazel/issues/18958\n###############################################################################\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.76,
          "content": "OS := $(shell uname | awk '{print tolower($$0)}')\nMACHINE := $(shell uname -m)\n\nDEV_ROCKS = \"busted 2.2.0\" \"busted-hjtest 0.0.5\" \"luacheck 1.2.0\" \"lua-llthreads2 0.1.6\" \"ldoc 1.5.0\" \"luacov 0.15.0\" \"lua-reqwest 0.1.1\"\nWIN_SCRIPTS = \"bin/busted\" \"bin/kong\" \"bin/kong-health\"\nBUSTED_ARGS ?= -v\nTEST_CMD ?= bin/busted $(BUSTED_ARGS)\n\nBUILD_NAME ?= kong-dev\n\nifeq ($(OS), darwin)\nOPENSSL_DIR ?= $(shell brew --prefix)/opt/openssl\nGRPCURL_OS ?= osx\nYAML_DIR ?= $(shell brew --prefix)/opt/libyaml\nEXPAT_DIR ?= $(HOMEBREW_DIR)/opt/expat\nelse\nOPENSSL_DIR ?= /usr\nGRPCURL_OS ?= $(OS)\nYAML_DIR ?= /usr\nEXPAT_DIR ?= $(LIBRARY_PREFIX)\nendif\n\nifeq ($(MACHINE), aarch64)\nGRPCURL_MACHINE ?= arm64\nH2CLIENT_MACHINE ?= arm64\nelse\nGRPCURL_MACHINE ?= $(MACHINE)\nH2CLIENT_MACHINE ?= $(MACHINE)\nendif\n\nifeq ($(MACHINE), aarch64)\nBAZELISK_MACHINE ?= arm64\nelse ifeq ($(MACHINE), x86_64)\nBAZELISK_MACHINE ?= amd64\nelse\nBAZELISK_MACHINE ?= $(MACHINE)\nendif\n\n.PHONY: install dev \\\n\tlint test test-integration test-plugins test-all \\\n\tpdk-phase-check functional-tests \\\n\tfix-windows release wasm-test-filters test-logs\n\nROOT_DIR:=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))\nKONG_SOURCE_LOCATION ?= $(ROOT_DIR)\nGRPCURL_VERSION ?= 1.8.5\nBAZLISK_VERSION ?= 1.20.0\nH2CLIENT_VERSION ?= 0.4.4\nBAZEL := $(shell command -v bazel 2> /dev/null)\nVENV = /dev/null # backward compatibility when no venv is built\n\n# Use x86_64 grpcurl v1.8.5 for Apple silicon chips\nifeq ($(GRPCURL_OS)_$(MACHINE)_$(GRPCURL_VERSION), osx_arm64_1.8.5)\nGRPCURL_MACHINE = x86_64\nendif\n\nPACKAGE_TYPE ?= deb\n\nbin/bazel:\n\t@curl -s -S -L \\\n\t\thttps://github.com/bazelbuild/bazelisk/releases/download/v$(BAZLISK_VERSION)/bazelisk-$(OS)-$(BAZELISK_MACHINE) -o bin/bazel\n\t@chmod +x bin/bazel\n\nbin/grpcurl:\n\t@curl -s -S -L \\\n\t\thttps://github.com/fullstorydev/grpcurl/releases/download/v$(GRPCURL_VERSION)/grpcurl_$(GRPCURL_VERSION)_$(GRPCURL_OS)_$(GRPCURL_MACHINE).tar.gz | tar xz -C bin;\n\t@$(RM) bin/LICENSE\n\nbin/h2client:\n\t@curl -s -S -L \\\n\t\thttps://github.com/Kong/h2client/releases/download/v$(H2CLIENT_VERSION)/h2client_$(H2CLIENT_VERSION)_$(OS)_$(H2CLIENT_MACHINE).tar.gz | tar xz -C bin;\n\t@$(RM) bin/README.md\n\ninstall-rust-toolchain:\n\t@if command -v cargo; then \\\n\t\techo \"Rust is already installed in the local directory, skipping\"; \\\n\telse \\\n\t\techo \"Installing Rust...\"; \\\n\t\tcurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path; \\\n\t\t. $$HOME/.cargo/env; \\\n\t\trustup toolchain install stable; \\\n\t\trustup default stable; \\\n\tfi\n\n\ncheck-bazel: bin/bazel\nifndef BAZEL\n\t$(eval BAZEL := bin/bazel)\nendif\n\nwasm-test-filters:\n\t./scripts/build-wasm-test-filters.sh\n\nbuild-kong: check-bazel\n\t$(BAZEL) build //build:kong --verbose_failures --action_env=BUILD_NAME=$(BUILD_NAME)\n\nbuild-venv: check-bazel\n\t$(eval VENV := bazel-bin/build/$(BUILD_NAME)-venv.sh)\n\n\t@if [ ! -e bazel-bin/build/$(BUILD_NAME)-venv.sh ]; then \\\n\t\t$(BAZEL) build //build:venv --verbose_failures --action_env=BUILD_NAME=$(BUILD_NAME); \\\n\tfi\n\nbuild-openresty: check-bazel\n\n\t@if [ ! -e bazel-bin/build/$(BUILD_NAME)/openresty ]; then \\\n\t\t$(BAZEL) build //build:install-openresty --verbose_failures --action_env=BUILD_NAME=$(BUILD_NAME); \\\n\telse \\\n\t\t$(BAZEL) build //build:dev-make-openresty --verbose_failures --action_env=BUILD_NAME=$(BUILD_NAME); \\\n\tfi\n\ninstall-dev-rocks: build-venv\n\t@. $(VENV) ;\\\n\texport PATH=$$PATH:$$HOME/.cargo/bin; \\\n\tfor rock in $(DEV_ROCKS) ; do \\\n\t  if luarocks list --porcelain $$rock | grep -q \"installed\" ; then \\\n\t\techo $$rock already installed, skipping ; \\\n\t  else \\\n\t\techo $$rock not found, installing via luarocks... ; \\\n\t\tLIBRARY_PREFIX=$$(pwd)/bazel-bin/build/$(BUILD_NAME)/kong ; \\\n\t\tluarocks install $$rock OPENSSL_DIR=$$LIBRARY_PREFIX CRYPTO_DIR=$$LIBRARY_PREFIX YAML_DIR=$(YAML_DIR) || exit 1; \\\n\t  fi \\\n\tdone;\n\ndev: install-rust-toolchain build-venv install-dev-rocks bin/grpcurl bin/h2client wasm-test-filters\n\nbuild-release: check-bazel\n\t$(BAZEL) clean --expunge\n\t$(BAZEL) build //build:kong --verbose_failures --config release\n\npackage/deb: check-bazel build-release\n\t$(BAZEL) build --config release :kong_deb\n\npackage/rpm: check-bazel build-release\n\t$(BAZEL) build --config release :kong_el8 --action_env=RPM_SIGNING_KEY_FILE --action_env=NFPM_RPM_PASSPHRASE\n\t$(BAZEL) build --config release :kong_aws2\t--action_env=RPM_SIGNING_KEY_FILE --action_env=NFPM_RPM_PASSPHRASE\n\t$(BAZEL) build --config release :kong_aws2022 --action_env=RPM_SIGNING_KEY_FILE --action_env=NFPM_RPM_PASSPHRASE\n\nfunctional-tests: dev test\n\ninstall: dev\n\t@$(VENV) luarocks make\n\nclean: check-bazel\n\t$(BAZEL) clean\n\t$(RM) bin/bazel bin/grpcurl bin/h2client\n\nexpunge: check-bazel\n\t$(BAZEL) clean --expunge\n\t$(RM) bin/bazel bin/grpcurl bin/h2client\n\nlint: dev\n\t@$(VENV) luacheck -q .\n\t@!(grep -R -E -I -n -w '#only|#o' spec && echo \"#only or #o tag detected\") >&2\n\t@!(grep -R -E -I -n -- '---\\s+ONLY' t && echo \"--- ONLY block detected\") >&2\n\nupdate-copyright: build-venv\n\tbash -c 'OPENSSL_DIR=$(OPENSSL_DIR) EXPAT_DIR=$(EXPAT_DIR) $(VENV) luajit $(KONG_SOURCE_LOCATION)/scripts/update-copyright'\n\ntest: dev\n\t@$(VENV) $(TEST_CMD) spec/01-unit\n\ntest-integration: dev\n\t@$(VENV) $(TEST_CMD) spec/02-integration\n\ntest-plugins: dev\n\t@$(VENV) $(TEST_CMD) spec/03-plugins\n\ntest-all: dev\n\t@$(VENV) $(TEST_CMD) spec/\n\ntest-custom: dev\nifndef test_spec\n\t$(error test_spec variable needs to be set, i.e. make test-custom test_spec=foo/bar/baz_spec.lua)\nendif\n\t@$(VENV) $(TEST_CMD) $(test_spec)\n\ntest-logs:\n\ttail -F servroot/logs/error.log\n\npdk-phase-checks: dev\n\trm -f t/phase_checks.stats\n\trm -f t/phase_checks.report\n\tPDK_PHASE_CHECKS_LUACOV=1 prove -I. t/01*/*/00-phase*.t\n\tluacov -c t/phase_checks.luacov\n\tgrep \"ngx\\\\.\" t/phase_checks.report\n\tgrep \"check_\" t/phase_checks.report\n\nfix-windows:\n\t@for script in $(WIN_SCRIPTS) ; do \\\n\t  echo Converting Windows file $$script ; \\\n\t  mv $$script $$script.win ; \\\n\t  tr -d '\\015' <$$script.win >$$script ; \\\n\t  rm $$script.win ; \\\n\t  chmod 0755 $$script ; \\\n\tdone;\n\n# the following targets are kept for backwards compatibility\n# dev is renamed to dev-legacy\nremove:\n\t$(warning 'remove' target is deprecated, please use `make dev` instead)\n\t-@luarocks remove kong\n\ndependencies: install-rust-toolchain bin/grpcurl bin/h2client\n\t$(warning 'dependencies' target is deprecated, this is now not needed when using `make dev`, but are kept for installation that are not built by Bazel)\n\n\texport PATH=$$PATH:$$HOME/.cargo/bin; \\\n\tfor rock in $(DEV_ROCKS) ; do \\\n\t  if luarocks list --porcelain $$rock | grep -q \"installed\" ; then \\\n\t\techo $$rock already installed, skipping ; \\\n\t  else \\\n\t\techo $$rock not found, installing via luarocks... ; \\\n\t\tluarocks install $$rock OPENSSL_DIR=$(OPENSSL_DIR) CRYPTO_DIR=$(OPENSSL_DIR) YAML_DIR=$(YAML_DIR) || exit 1; \\\n\t  fi \\\n\tdone;\n\ninstall-legacy:\n\t@luarocks make OPENSSL_DIR=$(OPENSSL_DIR) CRYPTO_DIR=$(OPENSSL_DIR) YAML_DIR=$(YAML_DIR)\n\ndev-legacy: remove install-legacy dependencies\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.4,
          "content": "[![][kong-logo]][kong-url]\n\n![Stars](https://img.shields.io/github/stars/Kong/kong?style=flat-square) ![GitHub commit activity](https://img.shields.io/github/commit-activity/m/Kong/kong?style=flat-square) ![Docker Pulls](https://img.shields.io/docker/pulls/_/kong?style=flat-square) [![Build Status][badge-action-image]][badge-action-url] ![Version](https://img.shields.io/github/v/release/Kong/kong?color=green&label=Version&style=flat-square)  ![License](https://img.shields.io/badge/License-Apache%202.0-blue?style=flat-square)  ![Twitter Follow](https://img.shields.io/twitter/follow/thekonginc?style=social)\n\n\n**Kong** or **Kong API Gateway** is a cloud-native, platform-agnostic, scalable API Gateway distinguished for its high performance and extensibility via plugins. It also provides advanced AI capabilities with multi-LLM support.\n\nBy providing functionality for proxying, routing, load balancing, health checking, authentication (and [more](#features)), Kong serves as the central layer for orchestrating microservices or conventional API traffic with ease.\n\nKong runs natively on Kubernetes thanks to its official [Kubernetes Ingress Controller](https://github.com/Kong/kubernetes-ingress-controller).\n\n---\n\n[Installation](https://konghq.com/install/#kong-community) | [Documentation](https://docs.konghq.com) | [Discussions](https://github.com/Kong/kong/discussions) | [Forum](https://discuss.konghq.com) | [Blog](https://konghq.com/blog) | [Builds][kong-master-builds] | [Cloud Hosted Kong](https://konghq.com/kong-konnect/)\n\n---\n\n## Getting Started\n\nIf you prefer to use a cloud-hosted Kong, you can [sign up for a free trial of Kong Konnect](https://konghq.com/products/kong-konnect/register?utm_medium=Referral&utm_source=Github&utm_campaign=kong-gateway&utm_content=konnect-promo-in-gateway&utm_term=get-started) and get started in minutes. If not, you can follow the instructions below to get started with Kong on your own infrastructure.\n\nLet’s test drive Kong by adding authentication to an API in under 5 minutes.\n\nWe suggest using the docker-compose distribution via the instructions below, but there is also a [docker installation](https://docs.konghq.com/gateway/latest/install/docker/#install-kong-gateway-in-db-less-mode) procedure if you’d prefer to run the Kong API Gateway in DB-less mode.\n\nWhether you’re running in the cloud, on bare metal, or using containers, you can find every supported distribution on our [official installation](https://konghq.com/install/#kong-community) page.\n\n1) To start, clone the Docker repository and navigate to the compose folder.\n```cmd\n  $ git clone https://github.com/Kong/docker-kong\n  $ cd docker-kong/compose/\n```\n\n2) Start the Gateway stack using:\n```cmd\n  $ KONG_DATABASE=postgres docker-compose --profile database up\n```\n\nThe Gateway is now available on the following ports on localhost:\n\n- `:8000` - send traffic to your service via Kong\n- `:8001` - configure Kong using Admin API or via [decK](https://github.com/kong/deck)\n- `:8002` - access Kong's management Web UI ([Kong Manager](https://github.com/Kong/kong-manager)) on [localhost:8002](http://localhost:8002)\n\nNext, follow the [quick start guide](https://docs.konghq.com/gateway-oss/latest/getting-started/configuring-a-service/\n) to tour the Gateway features.\n\n## Features\n\nBy centralizing common API functionality across all your organization's services, the Kong API Gateway creates more freedom for engineering teams to focus on the challenges that matter most.\n\nThe top Kong features include:\n- Advanced routing, load balancing, health checking - all configurable via a RESTful admin API or declarative configuration.\n- Authentication and authorization for APIs using methods like JWT, basic auth, OAuth, ACLs and more.\n- Proxy, SSL/TLS termination, and connectivity support for L4 or L7 traffic.\n- Plugins for enforcing traffic controls, rate limiting, req/res transformations, logging, monitoring and including a plugin developer hub.\n- Plugins for AI traffic to support multi-LLM implementations and no-code AI use cases, with advanced AI prompt engineering, AI observability, AI security and more.\n- Sophisticated deployment models like Declarative Databaseless Deployment and Hybrid Deployment (control plane/data plane separation) without any vendor lock-in.\n- Native [ingress controller](https://github.com/Kong/kubernetes-ingress-controller) support for serving Kubernetes.\n\n[![][kong-benefits]][kong-url]\n\n### Plugin Hub\nPlugins provide advanced functionality that extends the use of the Gateway. Many of the Kong Inc. and community-developed plugins like AWS Lambda, Correlation ID, and Response Transformer are showcased at the [Plugin Hub](https://docs.konghq.com/hub/).\n\nContribute to the Plugin Hub and ensure your next innovative idea is published and available to the broader community!\n\n## Contributing\n\nWe ❤️ pull requests, and we’re continually working hard to make it as easy as possible for developers to contribute. Before beginning development with the Kong API Gateway, please familiarize yourself with the following developer resources:\n- Community Pledge ([COMMUNITY_PLEDGE.md](COMMUNITY_PLEDGE.md)) for our pledge to interact with you, the open source community.\n- Contributor Guide ([CONTRIBUTING.md](CONTRIBUTING.md)) to learn about how to contribute to Kong.\n- Development Guide ([DEVELOPER.md](DEVELOPER.md)): Setting up your development environment.\n- [CODE_OF_CONDUCT](CODE_OF_CONDUCT.md) and [COPYRIGHT](COPYRIGHT)\n\nUse the [Plugin Development Guide](https://docs.konghq.com/latest/plugin-development/) for building new and creative plugins, or browse the online version of Kong's source code documentation in the [Plugin Development Kit (PDK) Reference](https://docs.konghq.com/latest/pdk/). Developers can build plugins in [Lua](https://docs.konghq.com/gateway/latest/plugin-development/), [Go](https://docs.konghq.com/gateway-oss/latest/external-plugins/#developing-go-plugins) or [JavaScript](https://docs.konghq.com/gateway-oss/latest/external-plugins/#developing-javascript-plugins).\n\n## Releases\n\nPlease see the [Changelog](CHANGELOG.md) for more details about a given release. The [SemVer Specification](https://semver.org) is followed when versioning Gateway releases.\n\n## Join the Community\n\n- Check out the [docs](https://docs.konghq.com/)\n- Join the [Kong discussions forum](https://github.com/Kong/kong/discussions)\n- Join the Kong discussions at the Kong Nation forum: [https://discuss.konghq.com/](https://discuss.konghq.com/)\n- Join our [Community Slack](http://kongcommunity.slack.com/)\n- Read up on the latest happenings at our [blog](https://konghq.com/blog/)\n- Follow us on [X](https://x.com/thekonginc)\n- Subscribe to our [YouTube channel](https://www.youtube.com/c/KongInc/videos)\n- Visit our [homepage](https://konghq.com/) to learn more\n\n## Konnect Cloud\n\nKong Inc. offers commercial subscriptions that enhance the Kong API Gateway in a variety of ways. Customers of Kong's [Konnect Cloud](https://konghq.com/kong-konnect/) subscription take advantage of additional gateway functionality, commercial support, and access to Kong's managed (SaaS) control plane platform. The Konnect Cloud platform features include real-time analytics, a service catalog, developer portals, and so much more! [Get started](https://konghq.com/products/kong-konnect/register?utm_medium=Referral&utm_source=Github&utm_campaign=kong-gateway&utm_content=konnect-promo-in-gateway&utm_term=get-started) with Konnect Cloud.\n\n## License\n\n```\nCopyright 2016-2024 Kong Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n[kong-url]: https://konghq.com/\n[kong-logo]: https://konghq.com/wp-content/uploads/2018/05/kong-logo-github-readme.png\n[kong-benefits]: https://konghq.com/wp-content/uploads/2018/05/kong-benefits-github-readme.png\n[kong-master-builds]: https://hub.docker.com/r/kong/kong/tags\n[badge-action-url]: https://github.com/Kong/kong/actions\n[badge-action-image]: https://github.com/Kong/kong/workflows/Build%20&%20Test/badge.svg\n\n[busted]: https://github.com/Olivine-Labs/busted\n[luacheck]: https://github.com/mpeterv/luacheck\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.44,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\nTo report a vulnerability in the Kong gateway, Insomnia or other Kong software, or know of a publicly disclosed security vulnerability, please immediately let us know by emailing security@konghq.com.\n\nFor more detailed information, please see [Kong's Security Update Process](https://docs.konghq.com/gateway/latest/plan-and-deploy/security/kong-security-update-process/#reporting-a-vulnerability).\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 185.96,
          "content": "This document guides you through the process of upgrading Kong. First, check if\na section named \"Upgrade to `x.x.x`\" exists, with `x.x.x` being the version\nyou are planning to upgrade to. If such a section does not exist, the upgrade\nyou want to perform does not have any particular instructions, and you can\nsimply consult the [Suggested upgrade path](#suggested-upgrade-path).\n\n## Suggested upgrade path\n\nUnless indicated otherwise in one of the upgrade paths of this document, it is\npossible to upgrade Kong **without downtime**.\n\nAssuming that Kong is already running on your system, acquire the latest\nversion from any of the available [installation methods](https://getkong.org/install/)\nand proceed to install it, overriding your previous installation.\n\n**If you are planning to make modifications to your configuration, this is a\ngood time to do so**.\n\nThen, run migration to upgrade your database schema:\n\n```shell\n$ kong migrations up [-c configuration_file]\n```\n\nIf the command is successful, and no migration ran\n(no output), then you only have to\n[reload](https://docs.konghq.com/gateway-oss/2.8.x/cli/#kong-reload) Kong:\n\n```shell\n$ kong reload [-c configuration_file]\n```\n\n**Reminder**: `kong reload` leverages the Nginx `reload` signal that seamlessly\nstarts new workers, which take over from old workers before those old workers\nare terminated. In this way, Kong will serve new requests via the new\nconfiguration, without dropping existing in-flight connections.\n\n## Upgrade to 3.0.x\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill differ depending on which version you are migrating from.\n\nKong 3.0.x is a major upgrade,\nplease be aware of any [breaking changes](https://github.com/Kong/kong/blob/release/3.0.x/CHANGELOG.md#breaking-changes)\nbetween the 2.x and 3.x series. For 1.x series, please also refer to\n[breaking changes of 2.x](#breaking-changes-2.0.0).\n\n### Dependencies\n\nIf you are using the prebuilt images/packages, you can skip this section \nas they have bundled all dependencies required by Kong.\n\nIf you are building your dependencies manually, you will need to rebuild them\nwith the latest patches as there are changes since the previous release.\n\nThe required version of OpenResty is bumped up to [1.21.4.1](https://openresty.org/en/ann-1021004001.html).\nWe recommend you to use the [openresty-build-tools](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools),\nwhich allows you to build OpenResty with the necessary patches and modules more easily.\n\n\n### Template changes\n\nThere are **changes in the Nginx configuration file**, between Kong 2.x.x and 3.0.x\n\nTo view the configuration changes between versions, clone the\n[Kong repository](https://github.com/kong/kong) and run `git diff`\non the configuration templates, using `-w` for greater readability.\n\nHere's how to see the differences between previous versions and 3.0.x:\n\n```\ngit clone https://github.com/kong/kong\ncd kong\ngit diff -w 2.x.x 3.0.0 kong/templates/nginx_kong*.lua\n```\n\n**Note:** Adjust the starting version number\n(2.x.x) to the version number of Kong you are currently running.\n\nTo produce a patch file, use the following command:\n\n```\ngit diff 2.x.x 3.0.0 kong/templates/nginx_kong*.lua > kong_config_changes.diff\n```\n\n**Note:** Adjust the starting version number\n(2.x.x) to the version number of Kong you are currently running.\n\n\n### Suggested upgrade methods\n\nFollow the migration guide for the backing datastore you are using.\nIf you prefer to use a fresh datastore and migrate your `kong.conf` file only,\nsee [how to install 3.0.x on a fresh datastore](#install-30x-on-a-fresh-data-store).\n\n**Always backup your datastore before performing any upgrade.**\n\nYou should avoid making changes to configuration with the Admin API during migration,\nas it may lead to unexpected/incompatible behavior and could break your existing configuration.\n\n**Version prerequisites for migrating to version 3.0.x**\n\nIf you are migrating from Kong 2.7.x or lower versions, first [migrate to Kong 2.8.1](#upgrade-from-10x---22x-to-28x). Confirm Kong's behavior is correct after migrating to 2.8.x before proceeding with the major version upgrade to 3.0.0.\n\nFor Hybrid mode deployments, both the Control Planes and Data Planes should be on 2.8.x before attempting\nwith the 3.0.x major version upgrade.\n\nOnce you have upgraded to Kong 2.8.x and confirmed everything still works as expected, you can follow the following steps to migrate \nto 3.0.x.\n\n### Upgrade from 2.8.x to 3.0.x for Traditional mode\n\n\n1. Backup & clone Kong datastore into a separate instance.\n2. Download & install Kong 3.0.x, and configure it to use the newly cloned datastore. \n3. Run `kong migrations up` and `kong migrations finish` to migrate the cloned datastore into 3.0.x format.\n3. Start the 3.0.x cluster with the cloned datastore.\n4. Now both the old (2.8.x) and new (3.0.x)\n   cluster are running simultaneously. Start provisioning more 3.0.x nodes if necessary.\n5. Gradually shift traffic from your old cluster to\n   your 3.0.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n6. Stop your old cluster when your traffic is fully shifted to the 3.0.x cluster.\n\n### Upgrade to 3.0.x for Hybrid mode\n\nData Planes (DPs) are capable of serving traffic normally during the entire migration, but will not be able to accept any new config updates until the upgrade finishes.\n\n1. Download & install Kong 3.0.x.\n2. Stop your existing Control Planes (CPs), DP will not be able to receive config updates, but will retain the\n   last valid config and keep functioning normally.\n   as your old one. Run `kong migrations up` and `kong migrations finish`.\n3. Start the newly installed 3.0.x CP. Old DPs are expected to complain\nabout connection failure to the CP in the log, for example:\n`connection to Control Plane ... broken: failed to connect: connection refused` but this is perfectly okay during the upgrade and does not affect normal proxy traffic.\n4. Start provisioning 3.0.x DPs.\n5. Gradually shift traffic from your old 2.8.x DPs to\n   your 3.0.x DPs. Monitor your traffic to make sure everything\n   is going smoothly.\n6. Stop your old DPs when your traffic is fully shifted to 3.0.x DPs.\n\n### Installing 3.0.x on a fresh datastore\n\nThe following commands should be used to prepare a new 3.0.x cluster from a\nfresh datastore. By default, the `kong` CLI tool will load the configuration\nfrom `/etc/kong/kong.conf`, but you can use the optional flag `-c` to\nspecify a configuration file:\n\n```\n$ kong migrations bootstrap [-c /path/to/your/kong.conf]\n$ kong start [-c /path/to/your/kong.conf]\n```\nUnless indicated otherwise in one of the upgrade paths of this document, it is\npossible to upgrade Kong **without downtime**.\n\nAssuming that Kong is already running on your system, acquire the latest\nversion from any of the available [installation methods](https://getkong.org/install/)\nand proceed to install it, overriding your previous installation.\n\n**If you are planning to make modifications to your configuration, this is a\ngood time to do so**.\n\nThen, run migrations to upgrade your datastore schema:\n\n```shell\n$ kong migrations up [-c configuration_file]\n```\n\nIf the command is successful, and no migration ran\n(no output), then you only have to\n[reload](https://docs.konghq.com/gateway-oss/3.0.x/cli/#kong-reload) Kong:\n\n```shell\n$ kong reload [-c configuration_file]\n```\n\n**Reminder**: `kong reload` leverages the Nginx `reload` signal that seamlessly\nstarts new workers, which take over from old workers before those old workers\nare terminated. In this way, Kong will serve new requests via the new\nconfiguration, without dropping existing in-flight connections.\n\n\n## Upgrade to 2.8.x\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different depending on which previous version from which you are migrating.\n\nIf you are migrating from 2.x.x, upgrading into 2.8.x is a\nminor upgrade, but read below for important instructions on database migration,\nespecially for Cassandra users.\n\nIf you are migrating from 1.x, upgrading into 2.8.x is a major upgrade,\nso, in addition, be aware of any [breaking changes](https://github.com/Kong/kong/blob/master/UPGRADE.md#breaking-changes-2.0)\nbetween the 1.x and 2.x series below, further detailed in the\n[CHANGELOG.md](https://github.com/Kong/kong/blob/2.0.0/CHANGELOG.md#200) document.\n\n\n### Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nfor the gateway are bundled and you can skip this section.\n\nIf you are building your dependencies by hand, there are changes since the\nprevious release, so you will need to rebuild them with the latest patches.\n\nThe required OpenResty version for kong 2.8.x is\n[1.19.9.1](https://openresty.org/en/changelog-1019003.html). This is more recent\nthan the version in Kong 2.5.0 (which used `1.19.3.2`). In addition to an upgraded\nOpenResty, you will need the correct [OpenResty patches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\nfor this new version, including the latest release of [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\nThe [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository contains [openresty-build-tools](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools),\nwhich allows you to more easily build OpenResty with the necessary patches and modules.\n\nThere is a new way to deploy Go using Plugin Servers.\nFor more information, see [Developing Go plugins](https://docs.konghq.com/gateway-oss/2.6.x/external-plugins/#developing-go-plugins).\n\n### Template changes\n\nThere are **Changes in the Nginx configuration file**, between kong 2.0.x,\n2.1.x, 2.2.x, 2.3.x, 2.4.x, 2.5.x, 2.6.x, 2.7.x and 2.8.x\n\nTo view the configuration changes between versions, clone the\n[Kong repository](https://github.com/kong/kong) and run `git diff`\non the configuration templates, using `-w` for greater readability.\n\nHere's how to see the differences between previous versions and 2.8.x:\n\n```\ngit clone https://github.com/kong/kong\ncd kong\ngit diff -w 2.0.0 2.8.0 kong/templates/nginx_kong*.lua\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x, 2.3.x, 2.4.x, 2.5.x, 2.6.x, 2.7.x) to the version number you are currently using.\n\nTo produce a patch file, use the following command:\n\n```\ngit diff 2.0.0 2.8.0 kong/templates/nginx_kong*.lua > kong_config_changes.diff\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x, 2.3.x, 2.4.x, 2.5.x, 2.6.x, 2.7.x) to the version number you are currently using.\n\n\n### Suggested upgrade path\n\n**Version prerequisites for migrating to version 2.8.x**\n\nThe lowest version that Kong 2.8.x supports migrating from is 1.0.x.\nIf you are migrating from a version lower than 0.14.1, you need to\nmigrate to 0.14.1 first. Then, once you are migrating from 0.14.1,\nplease migrate to 1.5.x first.\n\nThe steps for upgrading from 0.14.1 to 1.5.x are the same as upgrading\nfrom 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the\n\n[Suggested Upgrade Path for Kong 1.0](https://github.com/Kong/kong/blob/master/UPGRADE.md#kong-1-0-upgrade-path)\nwith the addition of the `kong migrations migrate-apis` command,\nwhich you can use to migrate legacy `apis` configurations.\n\nOnce you migrated to 1.5.x, you can follow the instructions in the section\nbelow to migrate to 2.8.x.\n\n### Upgrade from 1.0.x - 2.2.x to 2.8.x\n\n**Postgres**\n\nKong 2.8.x supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that the new version of Kong is able to use\nthe database as it is migrated while the old Kong cluster keeps working until\nit is time to decommission it. For this reason, the migration is split into\ntwo steps, performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 2.8.x).\n\n1. Download 2.8.x, and configure it to point to the same datastore\n   as your old (1.0 to 2.0) cluster. Run `kong migrations up`.\n2. After that finishes running, both the old (2.x.x) and new (2.8.x)\n   clusters can now run simultaneously. Start provisioning 2.8.x nodes,\n   but do not use their Admin API yet. If you need to perform Admin API\n   requests, these should be made to the old cluster's nodes. The reason\n   is to prevent the new cluster from generating data that is not understood\n   by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 2.8.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 2.8.x cluster,\n   decommission your old nodes.\n5. From your 2.8.x cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 2.8.x nodes.\n\n**Cassandra**\n\nDeprecation notice:\nCassandra as a backend database for Kong Gateway is deprecated. This means the feature will eventually be removed. Our target for Cassandra removal is the Kong Gateway 4.0 release, and some new features might not be supported with Cassandra in the Kong Gateway 3.0 release.\n\nDue to internal changes, the table schemas used by Kong 2.8.x on Cassandra\nare incompatible with those used by Kong 2.1.x (or lower). Migrating using the usual commands\n`kong migrations up` and `kong migrations finish` will require a small\nwindow of downtime, since the old and new versions cannot use the\ndatabase at the same time. Alternatively, to keep your previous version fully\noperational while the new one initializes, you will need to transfer the\ndata to a new keyspace via a database dump, as described below:\n\n1. Download 2.8.x, and configure it to point to a new keyspace.\n   Run `kong migrations bootstrap`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.8.x)\n   clusters can now run simultaneously, but the new cluster does not\n   have any data yet.\n3. On the old cluster, run `kong config db_export`. This will create\n   a file `kong.yml` with a database dump.\n4. Transfer the file to the new cluster and run\n   `kong config db_import kong.yml`. This will load the data into the new cluster.\n5. Gradually divert traffic away from your old nodes, and into\n   your 2.8.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n6. When your traffic is fully migrated to the 2.8.x cluster,\n   decommission your old nodes.\n\n### Installing 2.8.x on a fresh datastore\n\nThe following commands should be used to prepare a new 2.8.x cluster from a\nfresh datastore. By default the `kong` CLI tool will load the configuration\nfrom `/etc/kong/kong.conf`, but you can optionally use the flag `-c` to\nindicate the path to your configuration file:\n\n```\n$ kong migrations bootstrap [-c /path/to/your/kong.conf]\n$ kong start [-c /path/to/your/kong.conf]\n```\nUnless indicated otherwise in one of the upgrade paths of this document, it is\npossible to upgrade Kong **without downtime**.\n\nAssuming that Kong is already running on your system, acquire the latest\nversion from any of the available [installation methods](https://getkong.org/install/)\nand proceed to install it, overriding your previous installation.\n\n**If you are planning to make modifications to your configuration, this is a\ngood time to do so**.\n\nThen, run migration to upgrade your database schema:\n\n```shell\n$ kong migrations up [-c configuration_file]\n```\n\nIf the command is successful, and no migration ran\n(no output), then you only have to\n[reload](https://docs.konghq.com/gateway-oss/2.8.x/cli/#kong-reload) Kong:\n\n```shell\n$ kong reload [-c configuration_file]\n```\n\n**Reminder**: `kong reload` leverages the Nginx `reload` signal that seamlessly\nstarts new workers, which take over from old workers before those old workers\nare terminated. In this way, Kong will serve new requests via the new\nconfiguration, without dropping existing in-flight connections.\n\n## Upgrade to 2.7.x\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different depending on which previous version from which you are migrating.\n\nIf you are migrating from 2.x.x, upgrading into 2.7.x is a\nminor upgrade, but read below for important instructions on database migration,\nespecially for Cassandra users.\n\nIf you are migrating from 1.x, upgrading into 2.7.x is a major upgrade,\nso, in addition, be aware of any [breaking changes](https://github.com/Kong/kong/blob/master/UPGRADE.md#breaking-changes-2.0)\nbetween the 1.x and 2.x series below, further detailed in the\n[CHANGELOG.md](https://github.com/Kong/kong/blob/2.0.0/CHANGELOG.md#200) document.\n\n\n### Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nfor the gateway are bundled and you can skip this section.\n\nIf you are building your dependencies by hand, there are changes since the\nprevious release, so you will need to rebuild them with the latest patches.\n\nThe required OpenResty version for kong 2.7.x is\n[1.19.9.1](https://openresty.org/en/changelog-1019003.html). This is more recent\nthan the version in Kong 2.5.0 (which used `1.19.3.2`). In addition to an upgraded\nOpenResty, you will need the correct [OpenResty patches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\nfor this new version, including the latest release of [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\nThe [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository contains [openresty-build-tools](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools),\nwhich allows you to more easily build OpenResty with the necessary patches and modules.\n\nThere is a new way to deploy Go using Plugin Servers.\nFor more information, see [Developing Go plugins](https://docs.konghq.com/gateway-oss/2.6.x/external-plugins/#developing-go-plugins).\n\n### Template changes\n\nThere are **Changes in the Nginx configuration file**, between kong 2.0.x,\n2.1.x, 2.2.x, 2.3.x, 2.4.x, 2.5.x, 2.6.x and 2.7.x\n\nTo view the configuration changes between versions, clone the\n[Kong repository](https://github.com/kong/kong) and run `git diff`\non the configuration templates, using `-w` for greater readability.\n\nHere's how to see the differences between previous versions and 2.7.x:\n\n```\ngit clone https://github.com/kong/kong\ncd kong\ngit diff -w 2.0.0 2.7.0 kong/templates/nginx_kong*.lua\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x, 2.3.x, 2.4.x, 2.5.x, 2.6.x, 2.7.x) to the version number you are currently using.\n\nTo produce a patch file, use the following command:\n\n```\ngit diff 2.0.0 2.7.0 kong/templates/nginx_kong*.lua > kong_config_changes.diff\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x, 2.3.x, 2.4.x, 2.5.x, 2.6.x, 2.7.x) to the version number you are currently using.\n\n\n### Suggested upgrade path\n\n**Version prerequisites for migrating to version 2.7.x**\n\nThe lowest version that Kong 2.7.x supports migrating from is 1.0.x.\nIf you are migrating from a version lower than 0.14.1, you need to\nmigrate to 0.14.1 first. Then, once you are migrating from 0.14.1,\nplease migrate to 1.5.x first.\n\nThe steps for upgrading from 0.14.1 to 1.5.x are the same as upgrading\nfrom 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the\n\n[Suggested Upgrade Path for Kong 1.0](https://github.com/Kong/kong/blob/master/UPGRADE.md#kong-1-0-upgrade-path)\nwith the addition of the `kong migrations migrate-apis` command,\nwhich you can use to migrate legacy `apis` configurations.\n\nOnce you migrated to 1.5.x, you can follow the instructions in the section\nbelow to migrate to 2.7.x.\n\n### Upgrade from 1.0.x - 2.2.x to 2.7.x\n\n**Postgres**\n\nKong 2.7.x supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that the new version of Kong is able to use\nthe database as it is migrated while the old Kong cluster keeps working until\nit is time to decommission it. For this reason, the migration is split into\ntwo steps, performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 2.7.x).\n\n1. Download 2.7.x, and configure it to point to the same datastore\n   as your old (1.0 to 2.0) cluster. Run `kong migrations up`.\n2. After that finishes running, both the old (2.x.x) and new (2.7.x)\n   clusters can now run simultaneously. Start provisioning 2.7.x nodes,\n   but do not use their Admin API yet. If you need to perform Admin API\n   requests, these should be made to the old cluster's nodes. The reason\n   is to prevent the new cluster from generating data that is not understood\n   by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 2.7.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 2.7.x cluster,\n   decommission your old nodes.\n5. From your 2.7.x cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 2.7.x nodes.\n\n**Cassandra**\n\nDeprecation notice:\nCassandra as a backend database for Kong Gateway is deprecated. This means the feature will eventually be removed. Our target for Cassandra removal is the Kong Gateway 4.0 release, and some new features might not be supported with Cassandra in the Kong Gateway 3.0 release.\n\nDue to internal changes, the table schemas used by Kong 2.7.x on Cassandra\nare incompatible with those used by Kong 2.1.x (or lower). Migrating using the usual commands\n`kong migrations up` and `kong migrations finish` will require a small\nwindow of downtime, since the old and new versions cannot use the\ndatabase at the same time. Alternatively, to keep your previous version fully\noperational while the new one initializes, you will need to transfer the\ndata to a new keyspace via a database dump, as described below:\n\n1. Download 2.7.x, and configure it to point to a new keyspace.\n   Run `kong migrations bootstrap`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.7.x)\n   clusters can now run simultaneously, but the new cluster does not\n   have any data yet.\n3. On the old cluster, run `kong config db_export`. This will create\n   a file `kong.yml` with a database dump.\n4. Transfer the file to the new cluster and run\n   `kong config db_import kong.yml`. This will load the data into the new cluster.\n5. Gradually divert traffic away from your old nodes, and into\n   your 2.7.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n6. When your traffic is fully migrated to the 2.7.x cluster,\n   decommission your old nodes.\n\n### Installing 2.7.x on a fresh datastore\n\nThe following commands should be used to prepare a new 2.7.x cluster from a\nfresh datastore. By default the `kong` CLI tool will load the configuration\nfrom `/etc/kong/kong.conf`, but you can optionally use the flag `-c` to\nindicate the path to your configuration file:\n\n```\n$ kong migrations bootstrap [-c /path/to/your/kong.conf]\n$ kong start [-c /path/to/your/kong.conf]\n```\nUnless indicated otherwise in one of the upgrade paths of this document, it is\npossible to upgrade Kong **without downtime**.\n\nAssuming that Kong is already running on your system, acquire the latest\nversion from any of the available [installation methods](https://getkong.org/install/)\nand proceed to install it, overriding your previous installation.\n\n**If you are planning to make modifications to your configuration, this is a\ngood time to do so**.\n\nThen, run migration to upgrade your database schema:\n\n```shell\n$ kong migrations up [-c configuration_file]\n```\n\nIf the command is successful, and no migration ran\n(no output), then you only have to\n[reload](https://docs.konghq.com/gateway-oss/2.7.x/cli/#kong-reload) Kong:\n\n```shell\n$ kong reload [-c configuration_file]\n```\n\n**Reminder**: `kong reload` leverages the Nginx `reload` signal that seamlessly\nstarts new workers, which take over from old workers before those old workers\nare terminated. In this way, Kong will serve new requests via the new\nconfiguration, without dropping existing in-flight connections.\n\n## Upgrade to 2.6.x\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different depending on which previous version from which you are migrating.\n\nIf you are migrating from 2.0.x, 2.1.x, 2.2.x or 2.3.x, 2.4.x or 2.5.x into 2.6.x is a\nminor upgrade, but read below for important instructions on database migration,\nespecially for Cassandra users.\n\nIf you are migrating from 1.x, upgrading into 2.6.x is a major upgrade,\nso, in addition, be aware of any [breaking changes](https://github.com/Kong/kong/blob/master/UPGRADE.md#breaking-changes-2.0)\nbetween the 1.x and 2.x series below, further detailed in the\n[CHANGELOG.md](https://github.com/Kong/kong/blob/2.0.0/CHANGELOG.md#200) document.\n\n\n### Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nfor the gateway are bundled and you can skip this section.\n\nIf you are building your dependencies by hand, there are changes since the\nprevious release, so you will need to rebuild them with the latest patches.\n\nThe required OpenResty version for kong 2.6.x is\n[1.19.9.1](https://openresty.org/en/changelog-1019003.html). This is more recent\nthan the version in Kong 2.5.0 (which used `1.19.3.2`). In addition to an upgraded\nOpenResty, you will need the correct [OpenResty patches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\nfor this new version, including the latest release of [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\nThe [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository contains [openresty-build-tools](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools),\nwhich allows you to more easily build OpenResty with the necessary patches and modules.\n\nThere is a new way to deploy Go using Plugin Servers.\nFor more information, see [Developing Go plugins](https://docs.konghq.com/gateway-oss/2.7.x/external-plugins/#developing-go-plugins).\n\n### Template changes\n\nThere are **Changes in the Nginx configuration file**, between kong 2.0.x,\n2.1.x, 2.2.x, 2.3.x, 2.4.x and 2.5.x.\n\nTo view the configuration changes between versions, clone the\n[Kong repository](https://github.com/kong/kong) and run `git diff`\non the configuration templates, using `-w` for greater readability.\n\nHere's how to see the differences between previous versions and 2.6.x:\n\n```\ngit clone https://github.com/kong/kong\ncd kong\ngit diff -w 2.0.0 2.6.0 kong/templates/nginx_kong*.lua\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x, 2.3.x, 2.4.x or 2.5.x) to the version number you are currently using.\n\nTo produce a patch file, use the following command:\n\n```\ngit diff 2.0.0 2.6.0 kong/templates/nginx_kong*.lua > kong_config_changes.diff\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x, 2.3.x, 2.4.x or 2.5.x) to the version number you are currently using.\n\n\n### Suggested upgrade path\n\n**Version prerequisites for migrating to version 2.6.x**\n\nThe lowest version that Kong 2.6.x supports migrating from is 1.0.x.\nIf you are migrating from a version lower than 0.14.1, you need to\nmigrate to 0.14.1 first. Then, once you are migrating from 0.14.1,\nplease migrate to 1.5.x first.\n\nThe steps for upgrading from 0.14.1 to 1.5.x are the same as upgrading\nfrom 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the\n\n[Suggested Upgrade Path for Kong 1.0](https://github.com/Kong/kong/blob/master/UPGRADE.md#kong-1-0-upgrade-path)\nwith the addition of the `kong migrations migrate-apis` command,\nwhich you can use to migrate legacy `apis` configurations.\n\nOnce you migrated to 1.5.x, you can follow the instructions in the section\nbelow to migrate to 2.6.x.\n\n### Upgrade from 1.0.x - 2.2.x to 2.6.x\n\n**Postgres**\n\nKong 2.6.x supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that the new version of Kong is able to use\nthe database as it is migrated while the old Kong cluster keeps working until\nit is time to decommission it. For this reason, the migration is split into\ntwo steps, performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 2.6.x).\n\n1. Download 2.6.x, and configure it to point to the same datastore\n   as your old (1.0 to 2.0) cluster. Run `kong migrations up`.\n2. After that finishes running, both the old (2.x.x) and new (2.6.x)\n   clusters can now run simultaneously. Start provisioning 2.6.x nodes,\n   but do not use their Admin API yet. If you need to perform Admin API\n   requests, these should be made to the old cluster's nodes. The reason\n   is to prevent the new cluster from generating data that is not understood\n   by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 2.6.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 2.6.x cluster,\n   decommission your old nodes.\n5. From your 2.6.x cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 2.6.x nodes.\n\n**Cassandra**\n\nDue to internal changes, the table schemas used by Kong 2.6.x on Cassandra\nare incompatible with those used by Kong 2.1.x (or lower). Migrating using the usual commands\n`kong migrations up` and `kong migrations finish` will require a small\nwindow of downtime, since the old and new versions cannot use the\ndatabase at the same time. Alternatively, to keep your previous version fully\noperational while the new one initializes, you will need to transfer the\ndata to a new keyspace via a database dump, as described below:\n\n1. Download 2.6.x, and configure it to point to a new keyspace.\n   Run `kong migrations bootstrap`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.6.x)\n   clusters can now run simultaneously, but the new cluster does not\n   have any data yet.\n3. On the old cluster, run `kong config db_export`. This will create\n   a file `kong.yml` with a database dump.\n4. Transfer the file to the new cluster and run\n   `kong config db_import kong.yml`. This will load the data into the new cluster.\n5. Gradually divert traffic away from your old nodes, and into\n   your 2.6.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n6. When your traffic is fully migrated to the 2.6.x cluster,\n   decommission your old nodes.\n\n### Installing 2.6.x on a fresh datastore\n\nThe following commands should be used to prepare a new 2.6.x cluster from a\nfresh datastore. By default the `kong` CLI tool will load the configuration\nfrom `/etc/kong/kong.conf`, but you can optionally use the flag `-c` to\nindicate the path to your configuration file:\n\n```\n$ kong migrations bootstrap [-c /path/to/your/kong.conf]\n$ kong start [-c /path/to/your/kong.conf]\n```\nUnless indicated otherwise in one of the upgrade paths of this document, it is\npossible to upgrade Kong **without downtime**.\n\nAssuming that Kong is already running on your system, acquire the latest\nversion from any of the available [installation methods](https://getkong.org/install/)\nand proceed to install it, overriding your previous installation.\n\n**If you are planning to make modifications to your configuration, this is a\ngood time to do so**.\n\nThen, run migration to upgrade your database schema:\n\n```shell\n$ kong migrations up [-c configuration_file]\n```\n\nIf the command is successful, and no migration ran\n(no output), then you only have to\n[reload](https://docs.konghq.com/gateway-oss/2.6.x/cli/#kong-reload) Kong:\n\n```shell\n$ kong reload [-c configuration_file]\n```\n\n**Reminder**: `kong reload` leverages the Nginx `reload` signal that seamlessly\nstarts new workers, which take over from old workers before those old workers\nare terminated. In this way, Kong will serve new requests via the new\nconfiguration, without dropping existing in-flight connections.\n\n## Upgrade to `2.5.x`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different depending on which previous version from which you are migrating.\n\nIf you are migrating from 2.0.x, 2.1.x, 2.2.x, 2.3.x or 2.4.x, upgrading into 2.5.x is a\nminor upgrade, but read below for important instructions on database migration,\nespecially for Cassandra users.\n\nIf you are migrating from 1.x, upgrading into 2.5.x is a major upgrade,\nso, in addition, be aware of any [breaking changes](https://github.com/Kong/kong/blob/master/UPGRADE.md#breaking-changes-2.0)\nbetween the 1.x and 2.x series below, further detailed in the\n[CHANGELOG.md](https://github.com/Kong/kong/blob/2.0.0/CHANGELOG.md#200) document.\n\n\n### Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nfor the gateway are bundled and you can skip this section.\n\nIf you are building your dependencies by hand, there are changes since the\nprevious release, so you will need to rebuild them with the latest patches.\n\nThe required OpenResty version for kong 2.5.x is\n[1.19.3.2](https://openresty.org/en/changelog-1019003.html). This is more recent\nthan the version in Kong 2.3.0 (which used `1.19.3.2`). In addition to an upgraded\nOpenResty, you will need the correct [OpenResty patches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\nfor this new version, including the latest release of [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\nThe [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository contains [openresty-build-tools](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools),\nwhich allows you to more easily build OpenResty with the necessary patches and modules.\n\nThere is a new way to deploy Go using Plugin Servers.\nFor more information, see [Developing Go plugins](https://docs.konghq.com/gateway-oss/2.5.x/external-plugins/#developing-go-plugins).\n\n### Template changes\n\nThere are **Changes in the Nginx configuration file**, between kong 2.0.x,\n2.1.x, 2.2.x, 2.3.x, 2.4.x and 2.5.x.\n\nTo view the configuration changes between versions, clone the\n[Kong repository](https://github.com/kong/kong) and run `git diff`\non the configuration templates, using `-w` for greater readability.\n\nHere's how to see the differences between previous versions and 2.5.x:\n\n```\ngit clone https://github.com/kong/kong\ncd kong\ngit diff -w 2.0.0 2.5.0 kong/templates/nginx_kong*.lua\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x, 2.3.x or 2.4.x) to the version number you are currently using.\n\nTo produce a patch file, use the following command:\n\n```\ngit diff 2.0.0 2.5.0 kong/templates/nginx_kong*.lua > kong_config_changes.diff\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x, 2.3.x or 2.4.x) to the version number you are currently using.\n\n\n### Suggested upgrade path\n\n**Version prerequisites for migrating to version 2.5.x**\n\nThe lowest version that Kong 2.5.x supports migrating from is 1.0.x.\nIf you are migrating from a version lower than 0.14.1, you need to\nmigrate to 0.14.1 first. Then, once you are migrating from 0.14.1,\nplease migrate to 1.5.x first.\n\nThe steps for upgrading from 0.14.1 to 1.5.x are the same as upgrading\nfrom 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the\n\n[Suggested Upgrade Path for Kong 1.0](https://github.com/Kong/kong/blob/master/UPGRADE.md#kong-1-0-upgrade-path)\nwith the addition of the `kong migrations migrate-apis` command,\nwhich you can use to migrate legacy `apis` configurations.\n\nOnce you migrated to 1.5.x, you can follow the instructions in the section\nbelow to migrate to 2.5.x.\n\n### Upgrade from `1.0.x` - `2.2.x` to `2.5.x`\n\n**Postgres**\n\nKong 2.5.x supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that the new version of Kong is able to use\nthe database as it is migrated while the old Kong cluster keeps working until\nit is time to decommission it. For this reason, the migration is split into\ntwo steps, performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 2.5.x).\n\n1. Download 2.5.x, and configure it to point to the same datastore\n   as your old (1.0 to 2.0) cluster. Run `kong migrations up`.\n2. After that finishes running, both the old (2.x.x) and new (2.5.x)\n   clusters can now run simultaneously. Start provisioning 2.5.x nodes,\n   but do not use their Admin API yet. If you need to perform Admin API\n   requests, these should be made to the old cluster's nodes. The reason\n   is to prevent the new cluster from generating data that is not understood\n   by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 2.5.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 2.5.x cluster,\n   decommission your old nodes.\n5. From your 2.5.x cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 2.5.x nodes.\n\n**Cassandra**\n\nDue to internal changes, the table schemas used by Kong 2.5.x on Cassandra\nare incompatible with those used by Kong 2.1.x (or lower). Migrating using the usual commands\n`kong migrations up` and `kong migrations finish` will require a small\nwindow of downtime, since the old and new versions cannot use the\ndatabase at the same time. Alternatively, to keep your previous version fully\noperational while the new one initializes, you will need to transfer the\ndata to a new keyspace via a database dump, as described below:\n\n1. Download 2.5.x, and configure it to point to a new keyspace.\n   Run `kong migrations bootstrap`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.5.x)\n   clusters can now run simultaneously, but the new cluster does not\n   have any data yet.\n3. On the old cluster, run `kong config db_export`. This will create\n   a file `kong.yml` with a database dump.\n4. Transfer the file to the new cluster and run\n   `kong config db_import kong.yml`. This will load the data into the new cluster.\n5. Gradually divert traffic away from your old nodes, and into\n   your 2.5.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n6. When your traffic is fully migrated to the 2.5.x cluster,\n   decommission your old nodes.\n\n### Installing 2.5.x on a fresh datastore\n\nThe following commands should be used to prepare a new 2.5.x cluster from a\nfresh datastore. By default the `kong` CLI tool will load the configuration\nfrom `/etc/kong/kong.conf`, but you can optionally use the flag `-c` to\nindicate the path to your configuration file:\n\n```\n$ kong migrations bootstrap [-c /path/to/your/kong.conf]\n$ kong start [-c /path/to/your/kong.conf]\n```\nUnless indicated otherwise in one of the upgrade paths of this document, it is\npossible to upgrade Kong **without downtime**.\n\nAssuming that Kong is already running on your system, acquire the latest\nversion from any of the available [installation methods](https://getkong.org/install/)\nand proceed to install it, overriding your previous installation.\n\n**If you are planning to make modifications to your configuration, this is a\ngood time to do so**.\n\nThen, run migration to upgrade your database schema:\n\n```shell\n$ kong migrations up [-c configuration_file]\n```\n\nIf the command is successful, and no migration ran\n(no output), then you only have to\n[reload](https://docs.konghq.com/gateway-oss/2.5.x/cli/#kong-reload) Kong:\n\n```shell\n$ kong reload [-c configuration_file]\n```\n\n**Reminder**: `kong reload` leverages the Nginx `reload` signal that seamlessly\nstarts new workers, which take over from old workers before those old workers\nare terminated. In this way, Kong will serve new requests via the new\nconfiguration, without dropping existing in-flight connections.\n\n## Upgrade to `2.4.x`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different depending on which previous version from which you are migrating.\n\nIf you are migrating from 2.0.x, 2.1.x, 2.2.x or 2.3.x, upgrading into 2.4.x is a\nminor upgrade, but read below for important instructions on database migration,\nespecially for Cassandra users.\n\nIf you are migrating from 1.x, upgrading into 2.4.x is a major upgrade,\nso, in addition, be aware of any [breaking changes](https://github.com/Kong/kong/blob/master/UPGRADE.md#breaking-changes-2.0)\nbetween the 1.x and 2.x series below, further detailed in the\n[CHANGELOG.md](https://github.com/Kong/kong/blob/2.0.0/CHANGELOG.md#200) document.\n\n\n### Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nfor the gateway are bundled and you can skip this section.\n\nIf you are building your dependencies by hand, there are changes since the\nprevious release, so you will need to rebuild them with the latest patches.\n\nThe required OpenResty version for kong 2.4.x is\n[1.19.3.1](https://openresty.org/en/changelog-1019003.html). This is more recent\nthan the version in Kong 2.3.0 (which used `1.17.8.2`). In addition to an upgraded\nOpenResty, you will need the correct [OpenResty patches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\nfor this new version, including the latest release of [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\nThe [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository contains [openresty-build-tools](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools),\nwhich allows you to more easily build OpenResty with the necessary patches and modules.\n\nThere is a new way to deploy Go using Plugin Servers.\nFor more information, see [Developing Go plugins](https://docs.konghq.com/gateway-oss/2.4.x/external-plugins/#developing-go-plugins).\n\n### Template changes\n\nThere are **Changes in the Nginx configuration file**, between kong 2.0.x,\n2.1.x, 2.2.x, 2.3.x and 2.4.x.\n\nTo view the configuration changes between versions, clone the\n[Kong repository](https://github.com/kong/kong) and run `git diff`\non the configuration templates, using `-w` for greater readability.\n\nHere's how to see the differences between previous versions and 2.4.x:\n\n```\ngit clone https://github.com/kong/kong\ncd kong\ngit diff -w 2.0.0 2.4.0 kong/templates/nginx_kong*.lua\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x or 2.3.x) to the version number you are currently using.\n\nTo produce a patch file, use the following command:\n\n```\ngit diff 2.0.0 2.4.0 kong/templates/nginx_kong*.lua > kong_config_changes.diff\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, 2.2.x or 2.3.x) to the version number you are currently using.\n\n\n### Suggested upgrade path\n\n**Version prerequisites for migrating to version 2.4.x**\n\nThe lowest version that Kong 2.4.x supports migrating from is 1.0.x.\nIf you are migrating from a version lower than 0.14.1, you need to\nmigrate to 0.14.1 first. Then, once you are migrating from 0.14.1,\nplease migrate to 1.5.x first.\n\nThe steps for upgrading from 0.14.1 to 1.5.x are the same as upgrading\nfrom 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the\n\n[Suggested Upgrade Path for Kong 1.0](https://github.com/Kong/kong/blob/master/UPGRADE.md#kong-1-0-upgrade-path)\nwith the addition of the `kong migrations migrate-apis` command,\nwhich you can use to migrate legacy `apis` configurations.\n\nOnce you migrated to 1.5.x, you can follow the instructions in the section\nbelow to migrate to 2.4.x.\n\n### Upgrade from `1.0.x` - `2.2.x` to `2.4.x`\n\n**Postgres**\n\nKong 2.4.x supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that the new version of Kong is able to use\nthe database as it is migrated while the old Kong cluster keeps working until\nit is time to decommission it. For this reason, the migration is split into\ntwo steps, performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 2.4.x).\n\n1. Download 2.4.x, and configure it to point to the same datastore\n   as your old (1.0 to 2.0) cluster. Run `kong migrations up`.\n2. After that finishes running, both the old (2.x.x) and new (2.4.x)\n   clusters can now run simultaneously. Start provisioning 2.4.x nodes,\n   but do not use their Admin API yet. If you need to perform Admin API\n   requests, these should be made to the old cluster's nodes. The reason\n   is to prevent the new cluster from generating data that is not understood\n   by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 2.4.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 2.4.x cluster,\n   decommission your old nodes.\n5. From your 2.4.x cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 2.4.x nodes.\n\n**Cassandra**\n\nDue to internal changes, the table schemas used by Kong 2.4.x on Cassandra\nare incompatible with those used by Kong 2.1.x (or lower). Migrating using the usual commands\n`kong migrations up` and `kong migrations finish` will require a small\nwindow of downtime, since the old and new versions cannot use the\ndatabase at the same time. Alternatively, to keep your previous version fully\noperational while the new one initializes, you will need to transfer the\ndata to a new keyspace via a database dump, as described below:\n\n1. Download 2.4.x, and configure it to point to a new keyspace.\n   Run `kong migrations bootstrap`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.4.x)\n   clusters can now run simultaneously, but the new cluster does not\n   have any data yet.\n3. On the old cluster, run `kong config db_export`. This will create\n   a file `kong.yml` with a database dump.\n4. Transfer the file to the new cluster and run\n   `kong config db_import kong.yml`. This will load the data into the new cluster.\n5. Gradually divert traffic away from your old nodes, and into\n   your 2.4.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n6. When your traffic is fully migrated to the 2.4.x cluster,\n   decommission your old nodes.\n\n### Installing 2.4.x on a fresh datastore\n\nThe following commands should be used to prepare a new 2.4.x cluster from a\nfresh datastore. By default the `kong` CLI tool will load the configuration\nfrom `/etc/kong/kong.conf`, but you can optionally use the flag `-c` to\nindicate the path to your configuration file:\n\n```\n$ kong migrations bootstrap [-c /path/to/your/kong.conf]\n$ kong start [-c /path/to/your/kong.conf]\n```\nUnless indicated otherwise in one of the upgrade paths of this document, it is\npossible to upgrade Kong **without downtime**.\n\nAssuming that Kong is already running on your system, acquire the latest\nversion from any of the available [installation methods](https://getkong.org/install/)\nand proceed to install it, overriding your previous installation.\n\n**If you are planning to make modifications to your configuration, this is a\ngood time to do so**.\n\nThen, run migration to upgrade your database schema:\n\n```shell\n$ kong migrations up [-c configuration_file]\n```\n\nIf the command is successful, and no migration ran\n(no output), then you only have to\n[reload](https://docs.konghq.com/gateway-oss/2.4.x/cli/#kong-reload) Kong:\n\n```shell\n$ kong reload [-c configuration_file]\n```\n\n**Reminder**: `kong reload` leverages the Nginx `reload` signal that seamlessly\nstarts new workers, which take over from old workers before those old workers\nare terminated. In this way, Kong will serve new requests via the new\nconfiguration, without dropping existing in-flight connections.\n\n## Upgrade to `2.3.x`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different depending on which previous version from which you are migrating.\n\nIf you are migrating from 2.0.x, 2.1.x, or 2.2.x, upgrading into 2.3.x is a minor upgrade,\nbut read below for important instructions on database migration, especially\nfor Cassandra users.\n\nIf you are migrating from 1.x, upgrading into 2.3.x is a major upgrade,\nso, in addition, be aware of any [breaking changes](https://github.com/Kong/kong/blob/master/UPGRADE.md#breaking-changes-2.0)\nbetween the 1.x and 2.x series below, further detailed in the\n[CHANGELOG.md](https://github.com/Kong/kong/blob/2.0.0/CHANGELOG.md#200) document.\n\n\n### Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nfor the gateway are bundled and you can skip this section.\n\nIf you are building your dependencies by hand, there are changes since the\nprevious release, so you will need to rebuild them with the latest patches.\n\nThe required OpenResty version for kong 2.3.x is\n[1.17.8.2](https://openresty.org/en/changelog-1017008.html). This is more recent\nthan the version in Kong 2.1.0 (which used `1.15.8.3`). In addition to an upgraded\nOpenResty, you will need the correct [OpenResty patches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\nfor this new version, including the latest release of [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\nThe [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository contains [openresty-build-tools](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools),\nwhich allows you to more easily build OpenResty with the necessary patches and modules.\n\nThere is a new way to deploy Go using Plugin Servers.\nFor more information, see [Developing Go plugins](https://docs.konghq.com/gateway-oss/2.3.x/external-plugins/#developing-go-plugins).\n\n### Template changes\n\nThere are **Changes in the Nginx configuration file**, between kong 2.0.x,\n2.1.x, 2.2.x and 2.3.x.\n\nTo view the configuration changes between versions, clone the\n[Kong repository](https://github.com/kong/kong) and run `git diff`\non the configuration templates, using `-w` for greater readability.\n\nHere's how to see the differences between 2.0.x and 2.1.x, or 2.2.x and 2.3.x:\n\n```\ngit clone https://github.com/kong/kong\ncd kong\ngit diff -w 2.0.0 2.3.0 kong/templates/nginx_kong*.lua\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, or 2.2.x) to the version number you are currently using.\n\nTo produce a patch file, use the following command:\n\n```\ngit diff 2.0.0 2.3.0 kong/templates/nginx_kong*.lua > kong_config_changes.diff\n```\n\n**Note:** Adjust the starting version number\n(2.0.x, 2.1.x, or 2.2.x) to the version number you are currently using.\n\n\n### Suggested upgrade path\n\n**Version prerequisites for migrating to version 2.3.x**\n\nThe lowest version that Kong 2.3.x supports migrating from is 1.0.x.\nIf you are migrating from a version lower than 0.14.1, you need to\nmigrate to 0.14.1 first. Then, once you are migrating from 0.14.1,\nplease migrate to 1.5.x first.\n\nThe steps for upgrading from 0.14.1 to 1.5.x are the same as upgrading\nfrom 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the\n\n[Suggested Upgrade Path for Kong 1.0](https://github.com/Kong/kong/blob/master/UPGRADE.md#kong-1-0-upgrade-path)\nwith the addition of the `kong migrations migrate-apis` command,\nwhich you can use to migrate legacy `apis` configurations.\n\nOnce you migrated to 1.5.x, you can follow the instructions in the section\nbelow to migrate to 2.3.x.\n\n### Upgrade from `1.0.x` - `2.2.x` to `2.3.x`\n\n**Postgres**\n\nKong 2.3.x supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that the new version of Kong is able to use\nthe database as it is migrated while the old Kong cluster keeps working until\nit is time to decommission it. For this reason, the migration is split into\ntwo steps, performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 2.3.x).\n\n1. Download 2.3.x, and configure it to point to the same datastore\n   as your old (1.0 to 2.0) cluster. Run `kong migrations up`.\n2. After that finishes running, both the old (2.x.x) and new (2.3.x)\n   clusters can now run simultaneously. Start provisioning 2.3.x nodes,\n   but do not use their Admin API yet. If you need to perform Admin API\n   requests, these should be made to the old cluster's nodes. The reason\n   is to prevent the new cluster from generating data that is not understood\n   by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 2.3.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 2.3.x cluster,\n   decommission your old nodes.\n5. From your 2.3.x cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 2.3.x nodes.\n\n**Cassandra**\n\nDue to internal changes, the table schemas used by Kong 2.3.x on Cassandra\nare incompatible with those used by Kong 2.1.x (or lower). Migrating using the usual commands\n`kong migrations up` and `kong migrations finish` will require a small\nwindow of downtime, since the old and new versions cannot use the\ndatabase at the same time. Alternatively, to keep your previous version fully\noperational while the new one initializes, you will need to transfer the\ndata to a new keyspace via a database dump, as described below:\n\n1. Download 2.3.x, and configure it to point to a new keyspace.\n   Run `kong migrations bootstrap`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.3.x)\n   clusters can now run simultaneously, but the new cluster does not\n   have any data yet.\n3. On the old cluster, run `kong config db_export`. This will create\n   a file `kong.yml` with a database dump.\n4. Transfer the file to the new cluster and run\n   `kong config db_import kong.yml`. This will load the data into the new cluster.\n5. Gradually divert traffic away from your old nodes, and into\n   your 2.3.x cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n6. When your traffic is fully migrated to the 2.3.x cluster,\n   decommission your old nodes.\n\n### Installing 2.3.x on a fresh datastore\n\nThe following commands should be used to prepare a new 2.3.x cluster from a\nfresh datastore. By default the `kong` CLI tool will load the configuration\nfrom `/etc/kong/kong.conf`, but you can optionally use the flag `-c` to\nindicate the path to your configuration file:\n\n```\n$ kong migrations bootstrap [-c /path/to/your/kong.conf]\n$ kong start [-c /path/to/your/kong.conf]\n```\n\n## Upgrade to `2.2.0`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different depending on which previous version from which you are migrating.\n\nIf you are migrating from 2.0.0 or 2.1.x, upgrading into 2.2.x is a minor upgrade,\nbut read below for important instructions on database migration, especially\nfor Cassandra users.\n\nIf you are migrating from 1.x, upgrading into 2.2.x is a major upgrade,\nso, in addition, be aware of any [breaking changes](#breaking-changes-2.0.0)\nbetween the 1.x and 2.x series below, further detailed in the\n[CHANGELOG.md](https://github.com/Kong/kong/blob/2.0.0/CHANGELOG.md) document.\n\n\n#### 1. Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nfor the gateway are bundled and you can skip this section.\n\nIf you are building your dependencies by hand, there are changes since the\nprevious release, so you will need to rebuild them with the latest patches.\n\nThe required OpenResty version for kong 2.2.x is\n[1.17.8.2](https://openresty.org/en/changelog-1017008.html). This is more recent\nthan the version in Kong 2.1.0 (which used `1.15.8.3`). In addition to an upgraded\nOpenResty, you will need the correct [OpenResty\npatches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\nfor this new version, including the latest release of\n[lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\nThe [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository contains [openresty-build-tools](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools),\nwhich allows you to build OpenResty with the necessary patches\nand modules easily.\n\nFor Go support, you also need to build both your plugins and\nthe [Kong go-pluginserver](https://github.com/kong/go-pluginserver).\nThe documentation includes detailed [instructions on how to build\nthe plugin server and your plugins](https://docs.konghq.com/2.2.x/go/).\n\n#### 2. Template Changes\n\nThere are **Changes in the Nginx configuration file**, between kong 2.0.0,\n2.1.0 and 2.2.0.\n\nTo view the configuration changes between versions, clone the\n[Kong repository](https://github.com/kong/kong) and run `git diff`\non the configuration templates, using `-w` for greater readability.\n\nHere's how to see the differences between 2.0.0 and 2.2.0:\n\n```\ngit clone https://github.com/kong/kong\ncd kong\ngit diff -w 2.0.0 2.2.0 kong/templates/nginx_kong*.lua\n```\n\nTo produce a patch file, use the following command:\n\n```\ngit diff 2.0.0 2.2.0 kong/templates/nginx_kong*.lua > kong_config_changes.diff\n```\n\n#### 3. Suggested Upgrade Path\n\n##### Upgrade from `0.x` to `2.2.0`\n\nThe lowest version that Kong 2.2.0 supports migrating from is 1.0.0.\nIf you are migrating from a version lower than 0.14.1, you need to\nmigrate to 0.14.1 first. Then, once you are migrating from 0.14.1,\nplease migrate to 1.5.0 first.\n\nThe steps for upgrading from 0.14.1 to 1.5.0 are the same as upgrading\nfrom 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the [Suggested Upgrade Path for Kong\n1.0](#kong-1-0-upgrade-path), with the addition of the `kong\nmigrations migrate-apis` command, which you can use to migrate legacy\n`apis` configurations.\n\nOnce you migrated to 1.5.0, you can follow the instructions in the section\nbelow to migrate to 2.2.0.\n\n##### Upgrade from `1.0.0` - `2.1.0` to `2.2.0`\n\n**Postgres**\n\nKong 2.2.0 supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that the new version of Kong is able to use\nthe database as it is migrated while the old Kong cluster keeps working until\nit is time to decommission it. For this reason, the migration is split into\ntwo steps, performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 2.2.0).\n\n1. Download 2.2.0, and configure it to point to the same datastore\n   as your old (1.0 to 2.0) cluster. Run `kong migrations up`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.2.0)\n   clusters can now run simultaneously. Start provisioning 2.2.0 nodes,\n   but do not use their Admin API yet. If you need to perform Admin API\n   requests, these should be made to the old cluster's nodes. The reason\n   is to prevent the new cluster from generating data that is not understood\n   by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 2.2.0 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 2.2.0 cluster,\n   decommission your old nodes.\n5. From your 2.2.0 cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 2.2.0 nodes.\n\n**Cassandra**\n\nDue to internal changes, the table schemas used by Kong 2.2.0 on Cassandra\nare incompatible with those used by Kong 2.0.0. Migrating using the usual commands\n`kong migrations up` and `kong migrations finish` will require a small\nwindow of downtime, since the old and new versions cannot use the\ndatabase at the same time. Alternatively, to keep your previous version fully\noperational while the new one initializes, you will need to transfer the\ndata to a new keyspace via a database dump, as described below:\n\n1. Download 2.2.0, and configure it to point to a new keyspace.\n   Run `kong migrations bootstrap`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.2.0)\n   clusters can now run simultaneously, but the new cluster does not\n   have any data yet.\n3. On the old cluster, run `kong config db_export`. This will create\n   a file `kong.yml` with a database dump.\n4. Transfer the file to the new cluster and run\n   `kong config db_import kong.yml`. This will load the data into the new cluster.\n5. Gradually divert traffic away from your old nodes, and into\n   your 2.2.0 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n6. When your traffic is fully migrated to the 2.2.0 cluster,\n   decommission your old nodes.\n\n##### Installing 2.2.0 on a Fresh Datastore\n\nThe following commands should be used to prepare a new 2.2.0 cluster from a\nfresh datastore. By default the `kong` CLI tool will load the configuration\nfrom `/etc/kong/kong.conf`, but you can optionally use the flag `-c` to\nindicate the path to your configuration file:\n\n```\n$ kong migrations bootstrap [-c /path/to/your/kong.conf]\n$ kong start [-c /path/to/your/kong.conf]\n```\n\n## Upgrade to `2.1.0`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different on which previous version from which you are migrating.\n\nIf you are migrating from 2.0.0, upgrading into 2.1.x is a minor upgrade,\nbut read below for important instructions on database migration, especially\nfor Cassandra users.\n\nIf you are migrating from 1.x, upgrading into 2.1.x is a major upgrade,\nso, in addition, be aware of any [breaking changes](#breaking-changes-2.0.0)\nbetween the 1.x and 2.x series below, further detailed in the\n[CHANGELOG.md](https://github.com/Kong/kong/blob/2.0.0/CHANGELOG.md) document.\n\n#### 1. Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nfor the gateway are bundled and you can skip this section.\n\nIf you are building your dependencies by hand, there are changes since the\nprevious release, so you will need to rebuild them with the latest patches.\n\nIn order to use all Kong features, including the new\ndynamic upstream keepalive behavior, the required OpenResty version is\n[1.15.8.3](http://openresty.org/en/changelog-1015008.html) and \nthe set of [OpenResty\npatches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\nincluded has changed, including the latest release of\n[lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\nThe [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository contains [openresty-build-tools](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools),\nwhich allows you to build OpenResty with the necessary patches\nand modules easily.\n\nFor Go support, you also need to build both your plugins and\nthe [Kong go-pluginserver](https://github.com/kong/go-pluginserver).\nThe documentation includes detailed [instructions on how to build\nthe plugin server and your plugins](https://docs.konghq.com/2.1.x/go/).\n\n#### 2. Template Changes\n\nThe **Nginx configuration file has changed**, which means that you need to\nupdate it if you are using a custom template.\n\nTo view the configuration changes between 2.0.0 and 2.1.0, clone the\n[Kong repository](https://github.com/kong/kong) and run `git diff`\non the configuration templates, using `-w` for greater readability:\n\n```\ngit clone https://github.com/kong/kong\ncd kong\ngit diff -w 2.0.0 2.1.0 kong/templates/nginx_kong*.lua\n```\n\nTo produce a patch file, use the following command:\n\n```\ngit diff 2.0.0 2.1.0 kong/templates/nginx_kong*.lua > kong_config_changes.diff\n```\n\n#### 3. Suggested Upgrade Path\n\n##### Upgrade from `0.x` to `2.1.0`\n\nThe lowest version that Kong 2.1.0 supports migrating from is 1.0.0.\nIf you are migrating from a version lower than 0.14.1, you need to\nmigrate to 0.14.1 first. Then, once you are migrating from 0.14.1,\nplease migrate to 1.5.0 first.\n\nThe steps for upgrading from 0.14.1 to 1.5.0 are the same as upgrading\nfrom 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the [Suggested Upgrade Path for Kong\n1.0](#kong-1-0-upgrade-path), with the addition of the `kong\nmigrations migrate-apis` command, which you can use to migrate legacy\n`apis` configurations.\n\nOnce you migrated to 1.5.0, you can follow the instructions in the section\nbelow to migrate to 2.1.0.\n\n##### Upgrade from `1.0.0` - `2.0.0` to `2.1.0`\n\n**Postgres**\n\nKong 2.1.0 supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that the new version of Kong is able to use\nthe database as it is migrated while the old Kong cluster keeps working until\nit is time to decommission it. For this reason, the migration is split into\ntwo steps, performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 2.1.0).\n\n1. Download 2.1.0, and configure it to point to the same datastore\n   as your old (1.0 to 2.0) cluster. Run `kong migrations up`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.1.0)\n   clusters can now run simultaneously. Start provisioning 2.1.0 nodes,\n   but do not use their Admin API yet. If you need to perform Admin API\n   requests, these should be made to the old cluster's nodes. The reason\n   is to prevent the new cluster from generating data that is not understood\n   by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 2.1.0 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 2.1.0 cluster,\n   decommission your old nodes.\n5. From your 2.1.0 cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 2.1.0 nodes.\n\n**Cassandra**\n\nDue to internal changes, the table schemas used by Kong 2.1.0 on Cassandra\nare incompatible with those used by Kong 2.0.0. Migrating using the usual commands\n`kong migrations up` and `kong migrations finish` will require a small\nwindow of downtime, since the old and new versions cannot use the\ndatabase at the same time. Alternatively, to keep your previous version fully\noperational while the new one initializes, you will need to transfer the\ndata to a new keyspace via a database dump, as described below:\n\n1. Download 2.1.0, and configure it to point to a new keyspace.\n   Run `kong migrations bootstrap`.\n2. Once that finishes running, both the old (pre-2.1) and new (2.1.0)\n   clusters can now run simultaneously, but the new cluster does not\n   have any data yet.\n3. On the old cluster, run `kong config db_export`. This will create\n   a file `kong.yml` with a database dump.\n4. Transfer the file to the new cluster and run\n   `kong config db_import kong.yml`. This will load the data into the new cluster.\n5. Gradually divert traffic away from your old nodes, and into\n   your 2.1.0 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n6. When your traffic is fully migrated to the 2.1.0 cluster,\n   decommission your old nodes.\n\n##### Installing 2.1.0 on a Fresh Datastore\n\nThe following commands should be used to prepare a new 2.1.0 cluster from a\nfresh datastore. By default the `kong` CLI tool will load the configuration\nfrom `/etc/kong/kong.conf`, but you can optionally use the flag `-c` to\nindicate the path to your configuration file:\n\n```\n$ kong migrations bootstrap [-c /path/to/your/kong.conf]\n$ kong start [-c /path/to/your/kong.conf]\n```\n\n\n## Upgrade to `2.0.0`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different on which previous version from which you are migrating.\nUpgrading into 2.0.x is a major version upgrade, so be aware of any\nbreaking changes listed in the [CHANGELOG.md](https://github.com/Kong/kong/blob/2.0.0/CHANGELOG.md) document.\n\n\n#### 1. Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nare bundled and you can skip this section.\n\nIf you are building your dependencies by hand, there are changes since the\nprevious release, so you will need to rebuild them with the latest patches.\n\nThe required OpenResty version is\n[1.15.8.2](http://openresty.org/en/changelog-1015008.html), and the set of [OpenResty\npatches](https://github.com/Kong/kong-build-tools/tree/master/openresty-build-tools/openresty-patches)\nincluded has changed, including the latest release of\n[lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module).\nOur [kong-build-tools](https://github.com/Kong/kong-build-tools)\nrepository allows you to build OpenResty with the necessary patches\nand modules easily.\n\nFor Go support, you also need the [Kong go-pluginserver](https://github.com/kong/go-pluginserver).\nThis is bundled with Kong binary packages and it is automatically started by\nKong if Go plugin support is enabled in Kong's configuration.\nNote that the Go version used to compile any Go plugins needs to match the Go\nversion of the `go-pluginserver`. You can check the Go version used to\nbuild the `go-pluginserver` binary running `go-pluginserver -version`.\n\n<a name=\"breaking-changes-2.0\"></a>\n#### 2. Breaking Changes\n\nKong 2.0.0 does include a few breaking changes over Kong 1.x, all of them\nrelated to the removal of service mesh:\n\n- **Removed Service Mesh support** - That has been deprecated in Kong 1.4\n  and made off-by-default already, and the code is now be gone in 2.0.\n  For Service Mesh, we now have [Kuma](https://kuma.io), which is something\n  designed for Mesh patterns from day one, so we feel at peace with removing\n  Kong's native Service Mesh functionality and focus on its core capabilities\n  as a gateway.\n- As part of service mesh removal, serviceless proxying was removed.\n  You can still set `service = null` when creating a route for use with\n  serverless plugins such as `aws-lambda`, or `request-termination`.\n- Removed the `origins` property.\n- Removed the `transparent` property.\n- Removed the Sidecar Injector plugin which was used for service mesh.\n- The **Nginx configuration file has changed**, which means that you need to update\n  it if you are using a custom template. Changes were made to improve\n  stream mode support and to make the Nginx injections system more\n  powerful so that custom templates are less of a necessity. The changes\n  are detailed in a diff included below.\n  - :warning: Note that the `kong_cache` shm was split into two\n    shms: `kong_core_cache` and `kong_cache`. If you are using a\n    custom Nginx template, make sure core cache shared dictionaries\n    are defined, including db-less mode shadow definitions.\n    Both cache values rely on the already existent `mem_cache_size`\n    configuration option to set their size, so when upgrading from\n    a previous Kong version, the cache memory consumption might\n    double if this value is not adjusted.\n\n<details>\n<summary><strong>Click here to see the Nginx configuration changes</strong></summary>\n<p>\n\n```diff\ndiff --git a/kong/templates/nginx_kong.lua b/kong/templates/nginx_kong.lua\nindex 5c6c1db03..6b4b4a818 100644\n--- a/kong/templates/nginx_kong.lua\n+++ b/kong/templates/nginx_kong.lua\n@@ -5,52 +5,46 @@ server_tokens off;\n > if anonymous_reports then\n ${{SYSLOG_REPORTS}}\n > end\n-\n error_log ${{PROXY_ERROR_LOG}} ${{LOG_LEVEL}};\n\n-> if nginx_optimizations then\n->-- send_timeout 60s;          # default value\n->-- keepalive_timeout 75s;     # default value\n->-- client_body_timeout 60s;   # default value\n->-- client_header_timeout 60s; # default value\n->-- tcp_nopush on;             # disabled until benchmarked\n->-- proxy_buffer_size 128k;    # disabled until benchmarked\n->-- proxy_buffers 4 256k;      # disabled until benchmarked\n->-- proxy_busy_buffers_size 256k; # disabled until benchmarked\n->-- reset_timedout_connection on; # disabled until benchmarked\n-> end\n-\n-client_max_body_size ${{CLIENT_MAX_BODY_SIZE}};\n-proxy_ssl_server_name on;\n-underscores_in_headers on;\n-\n lua_package_path       '${{LUA_PACKAGE_PATH}};;';\n lua_package_cpath      '${{LUA_PACKAGE_CPATH}};;';\n lua_socket_pool_size   ${{LUA_SOCKET_POOL_SIZE}};\n+lua_socket_log_errors  off;\n lua_max_running_timers 4096;\n lua_max_pending_timers 16384;\n+lua_ssl_verify_depth   ${{LUA_SSL_VERIFY_DEPTH}};\n+> if lua_ssl_trusted_certificate then\n+lua_ssl_trusted_certificate '${{LUA_SSL_TRUSTED_CERTIFICATE}}';\n+> end\n+\n lua_shared_dict kong                        5m;\n+lua_shared_dict kong_locks                  8m;\n+lua_shared_dict kong_healthchecks           5m;\n+lua_shared_dict kong_process_events         5m;\n+lua_shared_dict kong_cluster_events         5m;\n+lua_shared_dict kong_rate_limiting_counters 12m;\n+lua_shared_dict kong_core_db_cache          ${{MEM_CACHE_SIZE}};\n+lua_shared_dict kong_core_db_cache_miss     12m;\n lua_shared_dict kong_db_cache               ${{MEM_CACHE_SIZE}};\n-> if database == \"off\" then\n-lua_shared_dict kong_db_cache_2     ${{MEM_CACHE_SIZE}};\n-> end\n lua_shared_dict kong_db_cache_miss          12m;\n > if database == \"off\" then\n+lua_shared_dict kong_core_db_cache_2        ${{MEM_CACHE_SIZE}};\n+lua_shared_dict kong_core_db_cache_miss_2   12m;\n+lua_shared_dict kong_db_cache_2             ${{MEM_CACHE_SIZE}};\n lua_shared_dict kong_db_cache_miss_2        12m;\n > end\n-lua_shared_dict kong_locks          8m;\n-lua_shared_dict kong_process_events 5m;\n-lua_shared_dict kong_cluster_events 5m;\n-lua_shared_dict kong_healthchecks   5m;\n-lua_shared_dict kong_rate_limiting_counters 12m;\n > if database == \"cassandra\" then\n lua_shared_dict kong_cassandra              5m;\n > end\n-lua_socket_log_errors off;\n-> if lua_ssl_trusted_certificate then\n-lua_ssl_trusted_certificate '${{LUA_SSL_TRUSTED_CERTIFICATE}}';\n+> if role == \"control_plane\" then\n+lua_shared_dict kong_clustering             5m;\n+> end\n+\n+underscores_in_headers on;\n+> if ssl_ciphers then\n+ssl_ciphers ${{SSL_CIPHERS}};\n > end\n-lua_ssl_verify_depth ${{LUA_SSL_VERIFY_DEPTH}};\n\n # injected nginx_http_* directives\n > for _, el in ipairs(nginx_http_directives) do\n@@ -66,61 +60,47 @@ init_worker_by_lua_block {\n     Kong.init_worker()\n }\n\n-\n-> if #proxy_listeners > 0 then\n+> if (role == \"traditional\" or role == \"data_plane\") and #proxy_listeners > 0 then\n upstream kong_upstream {\n     server 0.0.0.1;\n     balancer_by_lua_block {\n         Kong.balancer()\n     }\n\n-# injected nginx_http_upstream_* directives\n-> for _, el in ipairs(nginx_http_upstream_directives) do\n+    # injected nginx_upstream_* directives\n+> for _, el in ipairs(nginx_upstream_directives) do\n     $(el.name) $(el.value);\n > end\n }\n\n server {\n     server_name kong;\n-> for i = 1, #proxy_listeners do\n-    listen $(proxy_listeners[i].listener);\n+> for _, entry in ipairs(proxy_listeners) do\n+    listen $(entry.listener);\n > end\n+\n     error_page 400 404 408 411 412 413 414 417 494 /kong_error_handler;\n     error_page 500 502 503 504                     /kong_error_handler;\n\n     access_log ${{PROXY_ACCESS_LOG}};\n     error_log  ${{PROXY_ERROR_LOG}} ${{LOG_LEVEL}};\n\n-    client_body_buffer_size ${{CLIENT_BODY_BUFFER_SIZE}};\n-\n > if proxy_ssl_enabled then\n     ssl_certificate     ${{SSL_CERT}};\n     ssl_certificate_key ${{SSL_CERT_KEY}};\n+    ssl_session_cache   shared:SSL:10m;\n     ssl_certificate_by_lua_block {\n         Kong.ssl_certificate()\n     }\n-\n-    ssl_session_cache shared:SSL:10m;\n-    ssl_session_timeout 10m;\n-    ssl_prefer_server_ciphers on;\n-    ssl_ciphers ${{SSL_CIPHERS}};\n-> end\n-\n-> if client_ssl then\n-    proxy_ssl_certificate ${{CLIENT_SSL_CERT}};\n-    proxy_ssl_certificate_key ${{CLIENT_SSL_CERT_KEY}};\n-> end\n-\n-    real_ip_header     ${{REAL_IP_HEADER}};\n-    real_ip_recursive  ${{REAL_IP_RECURSIVE}};\n-> for i = 1, #trusted_ips do\n-    set_real_ip_from   $(trusted_ips[i]);\n > end\n\n     # injected nginx_proxy_* directives\n > for _, el in ipairs(nginx_proxy_directives) do\n     $(el.name) $(el.value);\n > end\n+> for i = 1, #trusted_ips do\n+    set_real_ip_from  $(trusted_ips[i]);\n+> end\n\n     rewrite_by_lua_block {\n         Kong.rewrite()\n@@ -171,43 +151,93 @@ server {\n         proxy_pass_header     Server;\n         proxy_pass_header     Date;\n         proxy_ssl_name        $upstream_host;\n+        proxy_ssl_server_name on;\n+> if client_ssl then\n+        proxy_ssl_certificate ${{CLIENT_SSL_CERT}};\n+        proxy_ssl_certificate_key ${{CLIENT_SSL_CERT_KEY}};\n+> end\n         proxy_pass            $upstream_scheme://kong_upstream$upstream_uri;\n     }\n\n     location @grpc {\n         internal;\n+        default_type         '';\n         set $kong_proxy_mode 'grpc';\n\n+        grpc_set_header      TE                $upstream_te;\n         grpc_set_header      Host              $upstream_host;\n         grpc_set_header      X-Forwarded-For   $upstream_x_forwarded_for;\n         grpc_set_header      X-Forwarded-Proto $upstream_x_forwarded_proto;\n         grpc_set_header      X-Forwarded-Host  $upstream_x_forwarded_host;\n         grpc_set_header      X-Forwarded-Port  $upstream_x_forwarded_port;\n         grpc_set_header      X-Real-IP         $remote_addr;\n-\n+        grpc_pass_header     Server;\n+        grpc_pass_header     Date;\n         grpc_pass            grpc://kong_upstream;\n     }\n\n     location @grpcs {\n         internal;\n+        default_type         '';\n         set $kong_proxy_mode 'grpc';\n\n+        grpc_set_header      TE                $upstream_te;\n         grpc_set_header      Host              $upstream_host;\n         grpc_set_header      X-Forwarded-For   $upstream_x_forwarded_for;\n         grpc_set_header      X-Forwarded-Proto $upstream_x_forwarded_proto;\n         grpc_set_header      X-Forwarded-Host  $upstream_x_forwarded_host;\n         grpc_set_header      X-Forwarded-Port  $upstream_x_forwarded_port;\n         grpc_set_header      X-Real-IP         $remote_addr;\n-\n+        grpc_pass_header     Server;\n+        grpc_pass_header     Date;\n+        grpc_ssl_name        $upstream_host;\n+        grpc_ssl_server_name on;\n+> if client_ssl then\n+        grpc_ssl_certificate ${{CLIENT_SSL_CERT}};\n+        grpc_ssl_certificate_key ${{CLIENT_SSL_CERT_KEY}};\n+> end\n         grpc_pass            grpcs://kong_upstream;\n     }\n\n+    location = /kong_buffered_http {\n+        internal;\n+        default_type         '';\n+        set $kong_proxy_mode 'http';\n+\n+        rewrite_by_lua_block       {;}\n+        access_by_lua_block        {;}\n+        header_filter_by_lua_block {;}\n+        body_filter_by_lua_block   {;}\n+        log_by_lua_block           {;}\n+\n+        proxy_http_version 1.1;\n+        proxy_set_header      TE                $upstream_te;\n+        proxy_set_header      Host              $upstream_host;\n+        proxy_set_header      Upgrade           $upstream_upgrade;\n+        proxy_set_header      Connection        $upstream_connection;\n+        proxy_set_header      X-Forwarded-For   $upstream_x_forwarded_for;\n+        proxy_set_header      X-Forwarded-Proto $upstream_x_forwarded_proto;\n+        proxy_set_header      X-Forwarded-Host  $upstream_x_forwarded_host;\n+        proxy_set_header      X-Forwarded-Port  $upstream_x_forwarded_port;\n+        proxy_set_header      X-Real-IP         $remote_addr;\n+        proxy_pass_header     Server;\n+        proxy_pass_header     Date;\n+        proxy_ssl_name        $upstream_host;\n+        proxy_ssl_server_name on;\n+> if client_ssl then\n+        proxy_ssl_certificate ${{CLIENT_SSL_CERT}};\n+        proxy_ssl_certificate_key ${{CLIENT_SSL_CERT_KEY}};\n+> end\n+        proxy_pass            $upstream_scheme://kong_upstream$upstream_uri;\n+    }\n+\n     location = /kong_error_handler {\n         internal;\n+        default_type                 '';\n+\n         uninitialized_variable_warn  off;\n\n         rewrite_by_lua_block {;}\n-\n         access_by_lua_block  {;}\n\n         content_by_lua_block {\n@@ -215,13 +245,13 @@ server {\n         }\n     }\n }\n-> end\n+> end -- (role == \"traditional\" or role == \"data_plane\") and #proxy_listeners > 0\n\n-> if #admin_listeners > 0 then\n+> if (role == \"control_plane\" or role == \"traditional\") and #admin_listeners > 0 then\n server {\n     server_name kong_admin;\n-> for i = 1, #admin_listeners do\n-    listen $(admin_listeners[i].listener);\n+> for _, entry in ipairs(admin_listeners) do\n+    listen $(entry.listener);\n > end\n\n     access_log ${{ADMIN_ACCESS_LOG}};\n@@ -233,11 +263,7 @@ server {\n > if admin_ssl_enabled then\n     ssl_certificate     ${{ADMIN_SSL_CERT}};\n     ssl_certificate_key ${{ADMIN_SSL_CERT_KEY}};\n-\n-    ssl_session_cache shared:SSL:10m;\n-    ssl_session_timeout 10m;\n-    ssl_prefer_server_ciphers on;\n-    ssl_ciphers ${{SSL_CIPHERS}};\n+    ssl_session_cache   shared:AdminSSL:10m;\n > end\n\n     # injected nginx_admin_* directives\n@@ -265,20 +291,20 @@ server {\n         return 200 'User-agent: *\\nDisallow: /';\n     }\n }\n-> end\n+> end -- (role == \"control_plane\" or role == \"traditional\") and #admin_listeners > 0\n\n > if #status_listeners > 0 then\n server {\n     server_name kong_status;\n-> for i = 1, #status_listeners do\n-    listen $(status_listeners[i].listener);\n+> for _, entry in ipairs(status_listeners) do\n+    listen $(entry.listener);\n > end\n\n     access_log ${{STATUS_ACCESS_LOG}};\n     error_log  ${{STATUS_ERROR_LOG}} ${{LOG_LEVEL}};\n\n-    # injected nginx_http_status_* directives\n-> for _, el in ipairs(nginx_http_status_directives) do\n+    # injected nginx_status_* directives\n+> for _, el in ipairs(nginx_status_directives) do\n     $(el.name) $(el.value);\n > end\n\n@@ -303,4 +329,26 @@ server {\n     }\n }\n > end\n+\n+> if role == \"control_plane\" then\n+server {\n+    server_name kong_cluster_listener;\n+> for _, entry in ipairs(cluster_listeners) do\n+    listen $(entry.listener) ssl;\n+> end\n+\n+    access_log off;\n+\n+    ssl_verify_client   optional_no_ca;\n+    ssl_certificate     ${{CLUSTER_CERT}};\n+    ssl_certificate_key ${{CLUSTER_CERT_KEY}};\n+    ssl_session_cache   shared:ClusterSSL:10m;\n+\n+    location = /v1/outlet {\n+        content_by_lua_block {\n+            Kong.serve_cluster_listener()\n+        }\n+    }\n+}\n+> end -- role == \"control_plane\"\n ]]\n```\n\n</p>\n</details>\n\n\n#### 3. Suggested Upgrade Path\n\n##### Upgrade from `0.x` to `2.0.0`\n\nThe lowest version that Kong 2.0.0 supports migrating from is 1.0.0.\nIf you are migrating from a version lower than 0.14.1, you need to\nmigrate to 0.14.1 first. Then, once you are migrating from 0.14.1,\nplease migrate to 1.5.0 first.\n\nThe steps for upgrading from 0.14.1 to 1.5.0 are the same as upgrading\nfrom 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the [Suggested Upgrade Path for Kong\n1.0](#kong-1-0-upgrade-path), with the addition of the `kong\nmigrations migrate-apis` command, which you can use to migrate legacy\n`apis` configurations.\n\nOnce you migrated to 1.5.0, you can follow the instructions in the section\nbelow to migrate to 2.0.0.\n\n##### Upgrade from `1.0.0` - `1.5.0` to `2.0.0`\n\nKong 2.0.0 supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that there is no need to fully copy\nthe data, but this also means that they are designed in such a way so that\nthe new version of Kong is able to use the data as it is migrated, and to do\nit in a way so that the old Kong cluster keeps working until it is finally\ntime to decommission it. For this reason, the full migration is now split into\ntwo steps, which are performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 2.0.0).\n\n1. Download 2.0.0, and configure it to point to the same datastore\n   as your old (1.0 to 1.5) cluster. Run `kong migrations up`.\n2. Once that finishes running, both the old and new (2.0.0) clusters can now\n   run simultaneously on the same datastore. Start provisioning\n   2.0.0 nodes, but do not use their Admin API yet. If you need to\n   perform Admin API requests, these should be made to the old cluster's nodes.\n   The reason is to prevent the new cluster from generating data\n   that is not understood by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 2.0.0 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 2.0.0 cluster,\n   decommission your old nodes.\n5. From your 2.0.0 cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 2.0.0 nodes.\n\n##### Installing 2.0.0 on a Fresh Datastore\n\nThe following commands should be used to prepare a new 2.0.0 cluster from a\nfresh datastore:\n\n```\n$ kong migrations bootstrap [-c config]\n$ kong start [-c config]\n```\n\n\n## Upgrade to `1.5.0`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different on which previous version from which you are migrating.\nIf you are upgrading from 0.x, this is a major upgrade. If you are\nupgrading from 1.0.x or 1.4.x, this is a minor upgrade. Both scenarios are\nexplained below.\n\n#### 1. Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nare bundled. If you are building your dependencies by hand, since Kong 1.4.0 the\nonly dependency upgraded is\n[lua-resty-healthcheck](https://github.com/Kong/lua-resty-healthcheck) that must\nbe at least the 1.1.2 version from now on. For any lower version you should\ncheck the upgrade path for the correct dependencies.\n\n#### 2. Breaking Changes\n\nKong 1.5.0 does not include any breaking changes over Kong 1.4, but Kong 1.3\nincluded breaking changes in configuration and for routing in some edge-cases\nover Kong 1.2, and Kong 1.0 included a number of breaking changes over Kong 0.x.\nIf you are upgrading from 1.2, please read the section on\n[Kong 1.3 Breaking Changes](#kong-1-3-breaking-changes) carefully before\nproceeding. If you are upgrading from 0.14,x, please read the section on\n[Kong 1.0 Breaking Changes](#kong-1-0-breaking-changes) carefully before\nproceeding.\n\n#### 3. Suggested Upgrade Path\n\n##### Upgrade from `0.x` to `1.5.0`\n\nThe lowest version that Kong 1.5.0 supports migrating from is 0.14.1. if you\nare migrating from a previous 0.x release, please migrate to 0.14.1 first.\n\nFor upgrading from 0.14.1 to Kong 1.5.0, the steps for upgrading are the same\nas upgrading from 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the [Suggested Upgrade Path for Kong\n1.0](#kong-1-0-upgrade-path).\n\n##### Upgrade from `1.0.x` - `1.4.x` to `1.5.0`\n\nKong 1.5.0 supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that there is no need to fully copy\nthe data, but this also means that they are designed in such a way so that\nthe new version of Kong is able to use the data as it is migrated, and to do\nit in a way so that the old Kong cluster keeps working until it is finally\ntime to decommission it. For this reason, the full migration is now split into\ntwo steps, which are performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 1.5.0).\n\n1. Download 1.5.0, and configure it to point to the same datastore\n   as your old (1.0 to 1.4) cluster. Run `kong migrations up`.\n2. Once that finishes running, both the old and new (1.5.0) clusters can now\n   run simultaneously on the same datastore. Start provisioning\n   1.5.0 nodes, but do not use their Admin API yet. If you need to\n   perform Admin API requests, these should be made to the old cluster's nodes.\n   The reason is to prevent the new cluster from generating data\n   that is not understood by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 1.5.0 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 1.5.0 cluster,\n   decommission your old nodes.\n5. From your 1.5.0 cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 1.5.0 nodes.\n\n##### Installing 1.5.0 on a Fresh Datastore\n\nThe following commands should be used to prepare a new 1.5.0 cluster from a\nfresh datastore:\n\n```\n$ kong migrations bootstrap [-c config]\n$ kong start [-c config]\n```\n\n\n## Upgrade to `1.4.0`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different on which previous version from which you are migrating.\nIf you are upgrading from 0.x, this is a major upgrade. If you are\nupgrading from 1.0.x or 1.3.x, this is a minor upgrade. Both scenarios are\nexplained below.\n\n\n#### 1. Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nare bundled. If you are building your dependencies by hand, there are no changes\nin dependencies from 1.3.0, for any lower version you should check the upgrade\npath for the correct dependencies.\n\n#### 2. Breaking Changes\n\nKong 1.4.0 does not include any breaking changes over Kong 1.3, but Kong 1.3\nincluded breaking changes in configuration and for routing in some edge-cases\nover Kong 1.2, and Kong 1.0 included a number of breaking changes over Kong 0.x.\nIf you are upgrading from 1.2, please read the section on\n[Kong 1.3 Breaking Changes](#kong-1-3-breaking-changes) carefully before\nproceeding. If you are upgrading from 0.14,x, please read the section on\n[Kong 1.0 Breaking Changes](#kong-1-0-breaking-changes) carefully before\nproceeding.\n\n#### 3. Suggested Upgrade Path\n\n##### Upgrade from `0.x` to `1.4.0`\n\nThe lowest version that Kong 1.4.0 supports migrating from is 0.14.1. if you\nare migrating from a previous 0.x release, please migrate to 0.14.1 first.\n\nFor upgrading from 0.14.1 to Kong 1.4.0, the steps for upgrading are the same\nas upgrading from 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the [Suggested Upgrade Path for Kong\n1.0](#kong-1-0-upgrade-path).\n\n##### Upgrade from `1.0.x` - `1.3.x` to `1.4.0`\n\nKong 1.4.0 supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that there is no need to fully copy\nthe data, but this also means that they are designed in such a way so that\nthe new version of Kong is able to use the data as it is migrated, and to do\nit in a way so that the old Kong cluster keeps working until it is finally\ntime to decommission it. For this reason, the full migration is now split into\ntwo steps, which are performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 1.4.0).\n\n1. Download 1.4.0, and configure it to point to the same datastore\n   as your old (1.0 to 1.3) cluster. Run `kong migrations up`.\n2. Once that finishes running, both the old and new (1.4.0) clusters can now\n   run simultaneously on the same datastore. Start provisioning\n   1.4.0 nodes, but do not use their Admin API yet. If you need to\n   perform Admin API requests, these should be made to the old cluster's nodes.\n   The reason is to prevent the new cluster from generating data\n   that is not understood by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 1.4.0 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 1.4.0 cluster,\n   decommission your old nodes.\n5. From your 1.4.0 cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 1.4.0 nodes.\n\n##### Installing 1.4.0 on a Fresh Datastore\n\nThe following commands should be used to prepare a new 1.4.0 cluster from a\nfresh datastore:\n\n```\n$ kong migrations bootstrap [-c config]\n$ kong start [-c config]\n```\n\n## Upgrade to `1.3`\n\n#### 1. Breaking Changes\n\n##### Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nare bundled. If you are building your dependencies by hand, you should\nbe aware of the following changes:\n\n- The required OpenResty version has been bumped to\n  [1.15.8.1](http://openresty.org/en/changelog-1015008.html). If you are\n  installing Kong from one of our distribution packages, you are not affected\n  by this change.\n- From this version on, the new\n  [lua-kong-nginx-module](https://github.com/Kong/lua-kong-nginx-module) Nginx\n  module is **required** to be built into OpenResty for Kong to function\n  properly. If you are installing Kong from one of our distribution packages,\n  you are not affected by this change.\n  [openresty-build-tools#26](https://github.com/Kong/openresty-build-tools/pull/26)\n\n**Note:** if you are not using one of our distribution packages and compiling\nOpenResty from source, you must still apply Kong's [OpenResty\npatches](https://github.com/kong/openresty-patches) (and, as highlighted above,\ncompile OpenResty with the new lua-kong-nginx-module). Our new\n[openresty-build-tools](https://github.com/Kong/openresty-build-tools)\nrepository will allow you to do both easily.\n\n##### Core\n\n- Bugfixes in the router *may, in some edge-cases*, result in different Routes\n  being matched. It was reported to us that the router behaved incorrectly in\n  some cases when configuring wildcard Hosts and regex paths (e.g.\n  [#3094](https://github.com/Kong/kong/issues/3094)). It may be so that you are\n  subject to these bugs without realizing it. Please ensure that wildcard Hosts\n  and regex paths Routes you have configured are matching as expected before\n  upgrading.\n  [9ca4dc0](https://github.com/Kong/kong/commit/9ca4dc09fdb12b340531be8e0f9d1560c48664d5)\n  [2683b86](https://github.com/Kong/kong/commit/2683b86c2f7680238e3fe85da224d6f077e3425d)\n  [6a03e1b](https://github.com/Kong/kong/commit/6a03e1bd95594716167ccac840ff3e892ed66215)\n- Upstream connections are now only kept-alive for 100 requests or 60 seconds\n  (idle) by default. Previously, upstream connections were not actively closed\n  by Kong. This is a (non-breaking) change in behavior inherited from Nginx\n  1.15, and configurable via new configuration properties.\n\n##### Configuration\n\n- The `upstream_keepalive` configuration property is deprecated, and replaced\n  by the new `nginx_http_upstream_keepalive` property. Its behavior is almost\n  identical, but the notable difference is that the latter leverages the\n  [injected Nginx\n  directives](https://konghq.com/blog/kong-ce-nginx-injected-directives/)\n  feature added in Kong 0.14.0.\n- The Nginx configuration file has changed, which means that you need to update\n  it if you are using a custom template. Changes were made to address the\n  `upstream_keepalive` change, the new gRPC support, and to make `ssl_protocols`\n  load via injected directives. The changes are detailed in a diff\n  included below.\n\n<details>\n<summary><strong>Click here to see the Nginx configuration changes</strong></summary>\n<p>\n\n```diff\ndiff --git a/kong/templates/nginx_kong.lua b/kong/templates/nginx_kong.lua\nindex 761376a07..5a957a1b7 100644\n--- a/kong/templates/nginx_kong.lua\n+++ b/kong/templates/nginx_kong.lua\n@@ -72,8 +72,10 @@ upstream kong_upstream {\n     balancer_by_lua_block {\n         Kong.balancer()\n     }\n-> if upstream_keepalive > 0 then\n-    keepalive ${{UPSTREAM_KEEPALIVE}};\n+\n+# injected nginx_http_upstream_* directives\n+> for _, el in ipairs(nginx_http_upstream_directives) do\n+    $(el.name) $(el.value);\n > end\n }\n\n@@ -93,7 +95,6 @@ server {\n > if proxy_ssl_enabled then\n     ssl_certificate ${{SSL_CERT}};\n     ssl_certificate_key ${{SSL_CERT_KEY}};\n-    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n     ssl_certificate_by_lua_block {\n         Kong.ssl_certificate()\n     }\n@@ -120,6 +121,26 @@ server {\n     $(el.name) $(el.value);\n > end\n\n+    rewrite_by_lua_block {\n+        Kong.rewrite()\n+    }\n+\n+    access_by_lua_block {\n+        Kong.access()\n+    }\n+\n+    header_filter_by_lua_block {\n+        Kong.header_filter()\n+    }\n+\n+    body_filter_by_lua_block {\n+        Kong.body_filter()\n+    }\n+\n+    log_by_lua_block {\n+        Kong.log()\n+    }\n+\n     location / {\n         default_type                     '';\n\n@@ -134,14 +155,7 @@ server {\n         set $upstream_x_forwarded_proto  '';\n         set $upstream_x_forwarded_host   '';\n         set $upstream_x_forwarded_port   '';\n-\n-        rewrite_by_lua_block {\n-            Kong.rewrite()\n-        }\n-\n-        access_by_lua_block {\n-            Kong.access()\n-        }\n+        set $kong_proxy_mode             'http';\n\n         proxy_http_version 1.1;\n         proxy_set_header   TE                $upstream_te;\n@@ -157,38 +171,32 @@ server {\n         proxy_pass_header  Date;\n         proxy_ssl_name     $upstream_host;\n         proxy_pass         $upstream_scheme://kong_upstream$upstream_uri;\n+    }\n\n-        header_filter_by_lua_block {\n-            Kong.header_filter()\n-        }\n+    location @grpc {\n+        internal;\n\n-        body_filter_by_lua_block {\n-            Kong.body_filter()\n-        }\n+        set $kong_proxy_mode       'grpc';\n+        grpc_pass grpc://kong_upstream;\n+    }\n\n-        log_by_lua_block {\n-            Kong.log()\n-        }\n+    location @grpcs {\n+        internal;\n+\n+        set $kong_proxy_mode       'grpcs';\n+        grpc_pass grpcs://kong_upstream;\n     }\n\n     location = /kong_error_handler {\n         internal;\n         uninitialized_variable_warn off;\n\n-        content_by_lua_block {\n-            Kong.handle_error()\n-        }\n-\n-        header_filter_by_lua_block {\n-            Kong.header_filter()\n-        }\n+        rewrite_by_lua_block {;}\n\n-        body_filter_by_lua_block {\n-            Kong.body_filter()\n-        }\n+        access_by_lua_block {;}\n\n-        log_by_lua_block {\n-            Kong.log()\n+        content_by_lua_block {\n+            Kong.handle_error()\n         }\n     }\n }\n@@ -210,7 +218,6 @@ server {\n > if admin_ssl_enabled then\n     ssl_certificate ${{ADMIN_SSL_CERT}};\n     ssl_certificate_key ${{ADMIN_SSL_CERT_KEY}};\n-    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n\n     ssl_session_cache shared:SSL:10m;\n     ssl_session_timeout 10m;\n```\n\n</p>\n</details>\n\n#### 2. Suggested Upgrade Path\n\n##### Upgrade from `0.x` to `1.3`\n\nThe lowest version that Kong 1.3 supports migrating from is 0.14.1. if you\nare migrating from a previous 0.x release, please migrate to 0.14.1 first.\n\nFor upgrading from 0.14.1 to Kong 1.3, the steps for upgrading are the same as\nupgrading from 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the [Suggested Upgrade Path for Kong\n1.0](#kong-1-0-upgrade-path).\n\n##### Upgrade from `1.0.x` - `1.2.x` to `1.3`\n\nKong 1.3 supports the no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that there is no need to fully copy\nthe data, but this also means that they are designed in such a way so that\nthe new version of Kong is able to use the data as it is migrated, and to do\nit in a way so that the old Kong cluster keeps working until it is finally\ntime to decommission it. For this reason, the full migration is now split into\ntwo steps, which are performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 1.2).\n\n1. Download 1.3, and configure it to point to the same datastore as your old\n   (1.0 - 1.2) cluster. Run `kong migrations up`.\n2. Once that finishes running, both the old and new (1.3) clusters can now run\n   simultaneously on the same datastore. Start provisioning 1.3 nodes, but do\n   not use their Admin API yet. If you need to perform Admin API requests,\n   these should be made to the old cluster's nodes.  The reason is to prevent\n   the new cluster from generating data that is not understood by the old\n   cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 1.3 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 1.3 cluster, decommission your\n   old nodes.\n5. From your 1.3 cluster, run: `kong migrations finish`.  From this point on,\n   it will not be possible to start nodes in the old cluster pointing to the\n   same datastore anymore. Only run this command when you are confident that\n   your migration was successful. From now on, you can safely make Admin API\n   requests to your 1.3 nodes.\n\n##### Installing 1.3 on a Fresh Datastore\n\nThe following commands should be used to prepare a new 1.3 cluster from a fresh\ndatastore:\n\n```\n$ kong migrations bootstrap [-c config]\n$ kong start [-c config]\n```\n\n\n\n## Upgrade to `1.2`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different on which previous version from which you are migrating.\nIf you are upgrading from 0.x, this is a major upgrade. If you are\nupgrading from 1.0.x or 1.1.x, this is a minor upgrade. Both scenarios are\nexplained below.\n\n\n#### 1. Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nare bundled. If you are building your dependencies by hand, you should\nbe aware of the following changes:\n\n- The required OpenResty version is 1.13.6.2, but for a full feature set,\n  including stream routing and service mesh abilities with mutual TLS, you need\n  Kong's [openresty-patches](https://github.com/kong/openresty-patches).\n  Note that the set of patches was updated from 1.0 to 1.2.\n- The minimum required OpenSSL version is 1.1.1. If you are building by hand,\n  make sure all dependencies, including LuaRocks modules, are compiled using\n  the same OpenSSL version. If you are installing Kong from one of our\n  distribution packages, you are not affected by this change.\n\n#### 2. Breaking Changes\n\nKong 1.2 does not include any breaking changes over Kong 1.0 or 1.1, but Kong 1.0\nincluded a number of breaking changes over Kong 0.x. If you are upgrading\nfrom 0.14,x, please read the section on\n[Kong 1.0 Breaking Changes](#kong-1-0-breaking-changes) carefully before\nproceeding.\n\n#### 3. Suggested Upgrade Path\n\n##### Upgrade from `0.x` to `1.2`\n\nThe lowest version that Kong 1.2 supports migrating from is 0.14.1. if you\nare migrating from a previous 0.x release, please migrate to 0.14.1 first.\n\nFor upgrading from 0.14.1 to Kong 1.2, the steps for upgrading are the same as\nupgrading from 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the [Suggested Upgrade Path for Kong\n1.0](#kong-1-0-upgrade-path).\n\n##### Upgrade from `1.0.x` or `1.1.x` to `1.2`\n\nKong 1.2 supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that there is no need to fully copy\nthe data, but this also means that they are designed in such a way so that\nthe new version of Kong is able to use the data as it is migrated, and to do\nit in a way so that the old Kong cluster keeps working until it is finally\ntime to decommission it. For this reason, the full migration is now split into\ntwo steps, which are performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 1.2).\n\n1. Download 1.2, and configure it to point to the same datastore\n   as your old (1.0 or 1.1) cluster. Run `kong migrations up`.\n2. Once that finishes running, both the old and new (1.2) clusters can now\n   run simultaneously on the same datastore. Start provisioning\n   1.2 nodes, but do not use their Admin API yet. If you need to\n   perform Admin API requests, these should be made to the old cluster's nodes.\n   The reason is to prevent the new cluster from generating data\n   that is not understood by the old cluster.\n3. Gradually divert traffic away from your old nodes, and into\n   your 1.2 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 1.2 cluster,\n   decommission your old nodes.\n5. From your 1.2 cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start\n   nodes in the old cluster pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 1.2 nodes.\n\n##### Upgrade Path from 1.2 Release Candidates\n\nThe process is the same as for upgrading from 1.0 listed above, but on step 1\nyou should run `kong migrations up --force` instead.\n\n##### Installing 1.2 on a Fresh Datastore\n\nThe following commands should be used to prepare a new 1.2 cluster from a fresh datastore:\n\n```\n$ kong migrations bootstrap [-c config]\n$ kong start [-c config]\n```\n\n\n## Upgrade to `1.1`\n\nKong adheres to [semantic versioning](https://semver.org/), which makes a\ndistinction between \"major\", \"minor\", and \"patch\" versions. The upgrade path\nwill be different on which previous version from which you are migrating.\nIf you are upgrading from 0.x, this is a major upgrade. If you are\nupgrading from 1.0.x, this is a minor upgrade. Both scenarios are\nexplained below.\n\n\n#### 1. Dependencies\n\nIf you are using the provided binary packages, all necessary dependencies\nare bundled. If you are building your dependencies by hand, you should\nbe aware of the following changes:\n\n- The required OpenResty version is 1.13.6.2, but for a full feature set,\n  including stream routing and service mesh abilities with mutual TLS, you need\n  Kong's [openresty-patches](https://github.com/kong/openresty-patches).\n  Note that the set of patches was updated from 1.0 to 1.1.\n- The minimum required OpenSSL version is 1.1.1. If you are building by hand,\n  make sure all dependencies, including LuaRocks modules, are compiled using\n  the same OpenSSL version. If you are installing Kong from one of our\n  distribution packages, you are not affected by this change.\n\n#### 2. Breaking Changes\n\nKong 1.1 does not include any breaking changes over Kong 1.0, but Kong 1.0\nincluded a number of breaking changes over Kong 0.x. If you are upgrading\nfrom 0.14,x, please read the section on\n[Kong 1.0 Breaking Changes](#kong-1-0-breaking-changes) carefully before\nproceeding.\n\n#### 3. Suggested Upgrade Path\n\n##### Upgrade from `0.x` to `1.1`\n\nThe lowest version that Kong 1.1 supports migrating from is 0.14.1. if you\nare migrating from a previous 0.x release, please migrate to 0.14.1 first.\n\nFor upgrading from 0.14.1 to Kong 1.1, the steps for upgrading are the same as\nupgrading from 0.14.1 to Kong 1.0. Please follow the steps described in the\n\"Migration Steps from 0.14\" in the [Suggested Upgrade Path for Kong\n1.0](#kong-1-0-upgrade-path).\n\n##### Upgrade from `1.0.x` to `1.1`\n\nKong 1.1 supports a no-downtime migration model. This means that while the\nmigration is ongoing, you will have two Kong clusters running, sharing the\nsame database. (This is sometimes called the Blue/Green migration model.)\n\nThe migrations are designed so that there is no need to fully copy\nthe data, but this also means that they are designed in such a way so that\nthe new version of Kong is able to use the data as it is migrated, and to do\nit in a way so that the old Kong cluster keeps working until it is finally\ntime to decommission it. For this reason, the full migration is now split into\ntwo steps, which are performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 1.1).\n\n1. Download 1.1, and configure it to point to the same datastore\n   as your 1.0 cluster. Run `kong migrations up`.\n2. Once that finishes running, both 1.0 and 1.1 clusters can now\n   run simultaneously on the same datastore. Start provisioning\n   1.1 nodes, but do not use their Admin API yet. If you need to\n   perform Admin API requests, these should be made to your 1.0 nodes.\n   The reason is to prevent the new cluster from generating data\n   that is not understood by the old cluster.\n3. Gradually divert traffic away from your 1.0 nodes, and into\n   your 1.1 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 1.1 cluster,\n   decommission your 1.0 nodes.\n5. From your 1.1 cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start 1.0\n   nodes pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 1.1 nodes.\n\n##### Upgrade Path from 1.1 Release Candidates\n\nThe process is the same as for upgrading from 1.0 listed above, but on step 1\nyou should run `kong migrations up --force` instead.\n\n##### Installing 1.1 on a Fresh Datastore\n\nThe following commands should be used to prepare a new 1.1 cluster from a fresh datastore:\n\n```\n$ kong migrations bootstrap [-c config]\n$ kong start [-c config]\n```\n\n\n## Upgrading `1.0.x` patch releases\n\nIf you are upgrading from another release in the 1.0.x series (e.g. from 1.0.0\nto 1.0.1), there are no migrations. Simply upgrade your Kong installation and\n[reload](https://docs.konghq.com/1.0.x/cli/#kong-reload) Kong:\n\n```shell\n$ kong reload [-c configuration_file]\n```\n\nIf you are upgrading from 0.x, then read the following section for\ndetailed migration instructions.\n\n## Upgrade from `0.x` to `1.0.x`\n\nKong 1.0 is a major upgrade, and includes several new features\nas well as breaking changes.\n\nThis version introduces **a new schema format for plugins**, **changes in\nAdmin API endpoints**, **database migrations**, **Nginx configuration\nchanges**, and **removed configuration properties**.\n\nIn this release, the **API entity is removed**, along with its related\nAdmin API endpoints.\n\nThis section will highlight breaking changes that you need to be aware of\nbefore upgrading and will describe the recommended upgrade path. We recommend\nthat you consult the full [1.0.0\nChangelog](https://github.com/Kong/kong/blob/master/CHANGELOG.md) for a\ncomplete list of changes and new features.\n\n<a name=\"kong-1-0-breaking-changes\"></a>\n#### 1. Breaking Changes\n\n##### Dependencies\n\n- The required OpenResty version is 1.13.6.2, but for a full feature set,\n  including stream routing and service mesh abilities with mutual TLS, you need\n  Kong's [openresty-patches](https://github.com/kong/openresty-patches).\n- The minimum required OpenSSL version is 1.1.1. If you are building by hand,\n  make sure all dependencies, including LuaRocks modules, are compiled using\n  the same OpenSSL version. If you are installing Kong from one of our\n  distribution packages, you are not affected by this change.\n\n##### Configuration\n\n- The `custom_plugins` directive is removed (deprecated since 0.14.0).\n  Use `plugins` instead, which you can use not only to enable\n  custom plugins, but also to disable bundled plugins.\n- The default value for `cassandra_lb_policy` changed from `RoundRobin`\n  to `RequestRoundRobin`.\n- The Nginx configuration file has changed, which means that you need to update\n  it if you are using a custom template. The changes are detailed in a diff\n  included below.\n\n<details>\n<summary><strong>Click here to see the Nginx configuration changes</strong></summary>\n<p>\n\n```diff\ndiff --git a/kong/templates/nginx_kong.lua b/kong/templates/nginx_kong.lua\nindex d4e416bc..8f268ffd 100644\n--- a/kong/templates/nginx_kong.lua\n+++ b/kong/templates/nginx_kong.lua\n@@ -66,7 +66,9 @@ upstream kong_upstream {\n     balancer_by_lua_block {\n         Kong.balancer()\n     }\n+> if upstream_keepalive > 0 then\n     keepalive ${{UPSTREAM_KEEPALIVE}};\n+> end\n }\n\n server {\n@@ -85,7 +87,7 @@ server {\n > if proxy_ssl_enabled then\n     ssl_certificate ${{SSL_CERT}};\n     ssl_certificate_key ${{SSL_CERT_KEY}};\n-    ssl_protocols TLSv1.1 TLSv1.2;\n+    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n     ssl_certificate_by_lua_block {\n         Kong.ssl_certificate()\n     }\n@@ -200,7 +202,7 @@ server {\n > if admin_ssl_enabled then\n     ssl_certificate ${{ADMIN_SSL_CERT}};\n     ssl_certificate_key ${{ADMIN_SSL_CERT_KEY}};\n-    ssl_protocols TLSv1.1 TLSv1.2;\n+    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n\n     ssl_session_cache shared:SSL:10m;\n     ssl_session_timeout 10m;\n```\n\n</p>\n</details>\n\n- Kong generates a new template file for stream routing,\n  `nginx-kong-stream.conf`, included in the `stream` block\n  of its top-level Nginx configuration file. If you use\n  a custom Nginx configuration and wish to use stream\n  routing, you can generate this file using `kong prepare`.\n\n##### Core\n\n- The **API** entity and related concepts such as the\n  `/apis` endpoint, are removed. These were deprecated since\n  0.13.0. Instead, use **Routes** to configure your\n  endpoints and **Services** to configure your upstream\n  services.\n- The old DAO implementation (`kong.dao`) is removed,\n  which includes the old schema validation library. This\n  has implications to plugin developers, listed below.\n  - The last remaining entities that were converted to\n    the new DAO implementation were Plugins, Upstreams\n    and Targets. This has implications to the Admin API,\n    listed below.\n\n##### Plugins\n\nKong 1.0.0 marks the introduction of version 1.0.0 of\nthe Plugin Development Kit (PDK). No major changes are\nmade to the PDK compared to release 0.14, but some older\nnon-PDK functionality which was possibly used by custom\nplugins is now removed.\n\n- Plugins now use the new schema format introduced by the\n  new DAO implementation, for both plugin schemas\n  (in `schema.lua`) and custom DAO entities (`daos.lua`).\n  To ease the transition of plugins, the plugin loader\n  in 1.0 includes a *best-effort* schema auto-translator\n  for `schema.lua`, which should be sufficient for many\n  plugins (in 1.0.0rc1, our bundled plugins used the\n  auto-translator; they now use the new format).\n  - If your plugin using the old format in `schema.lua`\n    fails to load, check the error logs for messages\n    produced by the auto-translator. If a field cannot\n    be auto-translated, you can make a gradual conversion\n    of the schema file by adding a `new_type` entry to\n    the field table translation of the format. See,\n    for example, the [key-auth schema in 1.0.0rc1](https://github.com/Kong/kong/blob/1.0.0rc1/kong/plugins/key-auth/schema.lua#L39-L54).\n    The `new_type` annotation is ignored by Kong 0.x.\n  - If your custom plugin uses custom DAO objects (i.e.\n    if it includes a `daos.lua` file), it needs to be\n    converted to the new format. Their code also needs\n    to be adjusted accordingly, replacing uses of\n    `singletons.dao` or `kong.dao` by `kong.db` (note\n    that this module exposes a different API from the\n    old DAO implementation).\n- Some Kong modules that had their functionality replaced\n  by the PDK in 0.14.0 are now removed:\n  - `kong.tools.ip`: use `kong.ip` from the PDK instead.\n  - `kong.tools.public`: replaced by various functionalities\n    of the PDK.\n  - `kong.tools.responses`: use `kong.response.exit` from the PDK instead. You\n    might want to use `kong.log.err` to log internal server errors as well.\n- The `kong.api.crud_helpers` module was removed.\n  Use `kong.api.endpoints` instead if you need to customize\n  the auto-generated endpoints.\n\n##### Admin API\n\n- With the removal of the API entity, the `/apis` endpoint\n  is removed; accordingly, other endpoints that accepted\n  `api_id` no longer do so. Use Routes and Services instead.\n- All entity endpoints now use the new Admin API implementation.\n  This means their requests and responses now use the same\n  syntax, which was already in use in endpoints such as\n  `/routes` and `/services`.\n  - All endpoints now use the same syntax for\n    referencing other entities as `/routes`\n    (for example, `\"service\":{\"id\":\"...\"}` instead of\n    `\"service_id\":\"...\"`), both in requests and responses.\n    - This change affects `/plugins` as well as\n      plugin-specific endpoints.\n  - Array-typed values are not specified as a\n    comma-separated list anymore. It must be specified as a\n    JSON array or using the various formats supported by\n    the url-formencoded array notation of the new Admin API\n    implementation (`a[1]=x&a[2]=y`, `a[]=x&a[]=y`,\n    `a=x&a=y`).\n    - This change affects attributes of the `/upstreams` endpoint.\n  - Error responses for the updated endpoints use\n    the new standardized format.\n  - As a result of being moved to the new Admin API implementation,\n    all endpoints supporting `PUT` do so with proper semantics.\n  - See the [Admin API\n    reference](https://docs.konghq.com/1.0.x/admin-api)\n    for more details.\n\n#### 2. Deprecation Notices\n\nThere are no deprecation notices in this release.\n\n<a name=\"kong-1-0-upgrade-path\"></a>\n#### 3. Suggested Upgrade Path\n\n##### Preliminary Checks\n\nIf your cluster is running a version lower than 0.14, you need to\nupgrade to 0.14.1 first instead. Upgrading from a pre-0.14 cluster\nstraight to Kong 1.0 is **not** supported.\n\nIf you still use the deprecated API entity to configure your endpoints and\nupstream services (via `/apis`) instead of using Routes for endpoints (via\n`/routes`) and Services for upstream services (via `/services`), now is the\ntime to do so. Kong 1.0 will refuse to run migrations if you have any entity\nconfigured using `/apis` in your datastore. Create equivalent Routes and\nServices and delete your APIs. (Note that Kong does not do this automatically\nbecause the naive option of creating a Route and Service pair for each API\nwould miss the point of the improvements brought by Routes and Services;\nthe ideal mapping of Routes and Services depends on your microservice\narchitecture.)\n\nIf you use additional plugins other than the ones bundled with Kong,\nmake sure they are compatible with Kong 1.0 prior to upgrading.\nSee the section above on Plugins for information on plugin compatibility.\n\n##### Migration Steps from 0.14\n\nKong 1.0 introduces a new, improved migrations framework.\nIt supports a no-downtime, Blue/Green migration model for upgrading\nfrom 0.14.x. This means that while the migration is ongoing, you will\nhave two Kong clusters running, sharing the same database. The \"Blue\" cluster\nis your existing cluster running 0.14.x, the \"Green\" cluster is the new one\nrunning Kong 1.0.\n\nThe migrations are designed so that there is no need to fully copy\nthe data, but this also means that they are designed in such a way so that\nthe new version of Kong is able to use the data as it is migrated, and to do\nit in a way so that the old Kong cluster keeps working until it is finally\ntime to decommission it. For this reason, the full migration is now split into\ntwo steps, which are performed via commands `kong migrations up` (which does\nonly non-destructive operations) and `kong migrations finish` (which puts the\ndatabase in the final expected state for Kong 1.0).\n\nFor a no-downtime migration from a 0.14 cluster to a 1.0 cluster,\nwe recommend the following sequence of steps:\n\n1. Download 1.0, and configure it to point to the same datastore\n   as your 0.14 cluster. Run `kong migrations up` from a Kong 1.0\n   node.\n2. Once that finishes running, both 0.14 and 1.0 clusters can now\n   run simultaneously on the same datastore. Start provisioning\n   1.0 nodes, but do not use their Admin API yet. If you need to\n   perform Admin API requests, these should be made to your 0.14 nodes.\n   The reason is to prevent the new cluster from generating data\n   that is not understood by the old cluster.\n3. Gradually divert traffic away from your 0.14 nodes, and into\n   your 1.0 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 1.0 cluster,\n   decommission your 0.14 nodes.\n5. From your 1.0 cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start 0.14\n   nodes pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 1.0 nodes.\n\n##### Upgrade Path from 1.0 Release Candidates\n\nThe process is the same as for upgrading for 0.14 listed above, but on step 1 you should run `kong migrations up --force` instead.\n\n##### Installing 1.0 on a Fresh Datastore\n\nFor installing on a fresh datastore, Kong 1.0 introduces the `kong migrations bootstrap` command. The following commands can be run to prepare a new 1.0 cluster from a fresh datastore:\n\n```\n$ kong migrations bootstrap [-c config]\n$ kong start [-c config]\n```\n\n\n## Upgrade to `0.15`\n\nThis is the last release in the 0.x series, giving users one last chance to\nupgrade while still using some of the options and concepts that were marked as\ndeprecated in Kong 0.x and were removed in Kong 1.0. Still, Kong 0.15 does\nhave a number of breaking changes related to functionality that has changed\nsince version 0.14.\n\nThis version introduces **a new schema format for plugins**, **changes in\nAdmin API endpoints**, **database migrations** and **Nginx configuration\nchanges**.\n\nThis section will highlight breaking changes that you need to be aware of\nbefore upgrading and will describe the recommended upgrade path. We recommend\nthat you consult the full [0.15\nChangelog](https://github.com/Kong/kong/blob/master/CHANGELOG.md) for a\ncomplete list of changes and new features.\n\n#### 1. Breaking Changes\n\n##### Dependencies\n\n- The required OpenResty version is 1.13.6.2, but for a full feature set,\n  including stream routing and service mesh abilities with mutual TLS,\n  you need Kong's [openresty-patches](https://github.com/kong/openresty-patches).\n  The minimum required OpenSSL version is 1.1.1. If you are building by\n  hand, make sure all dependencies, including LuaRocks modules, are\n  compiled using the same OpenSSL version.\n  If you are installing Kong from one of our distribution packages, you are not\n  affected by this change.\n\n##### Configuration\n\n- The default value for `cassandra_lb_policy` changed from `RoundRobin`\n  to `RequestRoundRobin`.\n- The Nginx configuration file has changed, which means that you need to update\n  it if you are using a custom template. The changes are detailed in a diff\n  included below.\n\n<details>\n<summary><strong>Click here to see the Nginx configuration changes</strong></summary>\n<p>\n\n```diff\ndiff --git a/kong/templates/nginx_kong.lua b/kong/templates/nginx_kong.lua\nindex d4e416bc..8f268ffd 100644\n--- a/kong/templates/nginx_kong.lua\n+++ b/kong/templates/nginx_kong.lua\n@@ -66,7 +66,9 @@ upstream kong_upstream {\n     balancer_by_lua_block {\n         Kong.balancer()\n     }\n+> if upstream_keepalive > 0 then\n     keepalive ${{UPSTREAM_KEEPALIVE}};\n+> end\n }\n\n server {\n@@ -85,7 +87,7 @@ server {\n > if proxy_ssl_enabled then\n     ssl_certificate ${{SSL_CERT}};\n     ssl_certificate_key ${{SSL_CERT_KEY}};\n-    ssl_protocols TLSv1.1 TLSv1.2;\n+    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n     ssl_certificate_by_lua_block {\n         Kong.ssl_certificate()\n     }\n@@ -200,7 +202,7 @@ server {\n > if admin_ssl_enabled then\n     ssl_certificate ${{ADMIN_SSL_CERT}};\n     ssl_certificate_key ${{ADMIN_SSL_CERT_KEY}};\n-    ssl_protocols TLSv1.1 TLSv1.2;\n+    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n\n     ssl_session_cache shared:SSL:10m;\n     ssl_session_timeout 10m;\n```\n\n</p>\n</details>\n\n- Kong generates a new template file for stream routing,\n  `nginx-kong-stream.conf`, included in the `stream` block\n  of its top-level Nginx configuration file. If you use\n  a custom Nginx configuration and wish to use stream\n  routing, you can generate this file using `kong prepare`.\n\n##### Core\n\n- The old DAO implementation (`kong.dao`) is no longer\n  used by the Kong core,  which includes the old schema\n  validation library. This has implications to plugin\n  developers, listed below.\n  - The last remaining entities that were converted to\n    the new DAO implementation were Plugins, Upstreams\n    and Targets. This has implications to the Admin API,\n    listed below.\n\n##### Plugins\n\nKong 0.15 includes version 1.0.0 of the Plugin Development Kit (PDK). No major\nchanges are made to the PDK compared to release 0.14, but some older non-PDK\nfunctionality which was possibly used by custom plugins is now removed.\n\n- Plugins now use the new schema format introduced by the\n  new DAO implementation, for both plugin schemas\n  (in `schema.lua`) and custom DAO entities (`daos.lua`).\n  To ease the transition of plugins, the plugin loader\n  in 0.15 includes a *best-effort* schema auto-translator\n  for `schema.lua`, which should be sufficient for many\n  plugins (in 1.0.0rc1, our bundled plugins used the\n  auto-translator; they now use the new format).\n  - If your plugin using the old format in `schema.lua`\n    fails to load, check the error logs for messages\n    produced by the auto-translator. If a field cannot\n    be auto-translated, you can make a gradual conversion\n    of the schema file by adding a `new_type` entry to\n    the field table translation of the format. See,\n    for example, the [key-auth schema in 1.0.0rc1](https://github.com/Kong/kong/blob/1.0.0rc1/kong/plugins/key-auth/schema.lua#L39-L54).\n    The `new_type` annotation is ignored by Kong 0.x.\n  - If your custom plugin uses custom DAO objects (i.e.\n    if it includes a `daos.lua` file), it needs to be\n    converted to the new format. Their code also needs\n    to be adjusted accordingly, replacing uses of\n    `singletons.dao` or `kong.dao` by `kong.db` (note\n    that this module exposes a different API from the\n    old DAO implementation).\n\n##### Admin API\n\n- All entity endpoints now use the new Admin API implementation.\n  This means their requests and responses now use the same\n  syntax, which was already in use in endpoints such as\n  `/routes` and `/services`.\n  - All endpoints now use the same syntax for\n    referencing other entities as `/routes`\n    (for example, `\"service\":{\"id\":\"...\"}` instead of\n    `\"service_id\":\"...\"`), both in requests and responses.\n    - This change affects `/plugins` as well as\n      plugin-specific endpoints.\n  - Array-typed values are not specified as a\n    comma-separated list anymore. It must be specified as a\n    JSON array or using the various formats supported by\n    the url-formencoded array notation of the new Admin API\n    implementation (`a[1]=x&a[2]=y`, `a[]=x&a[]=y`,\n    `a=x&a=y`).\n    - This change affects attributes of the `/upstreams` endpoint.\n  - Error responses for the updated endpoints use\n    the new standardized format.\n  - As a result of being moved to the new Admin API implementation,\n    all endpoints supporting `PUT` do so with proper semantics.\n  - See the [Admin API\n    reference](https://docs.konghq.com/0.15/admin-api)\n    for more details.\n\n#### 2. Deprecation Notices\n\nKong 0.15 retains the deprecation notices of previous releases; all modules\nand concepts that have been marked as deprecated in previous releases are\nretained in 0.15 but are removed in 1.0. See the Kong 1.0 changelog and\nupgrade path for a detailed list.\n\n#### 3. Suggested Upgrade Path\n\n##### Preliminary Checks\n\nIf your cluster is running a version lower than 0.14, you need to\nupgrade to 0.14.1 first instead. Upgrading from a pre-0.14 cluster\nstraight to Kong 0.15 is **not** supported.\n\nIf you use additional plugins other than the ones bundled with Kong,\nmake sure they are compatible with Kong 0.15 prior to upgrading.\nSee the section above on Plugins for information on plugin compatibility.\n\n##### Migration Steps from 0.14\n\nKong 0.15 introduces a new, improved migrations framework.\nIt supports a no-downtime, Blue/Green migration model for upgrading\nfrom 0.14.x. The full migration is now split into two steps,\nwhich are performed via commands `kong migrations up` and\n`kong migrations finish`.\n\nFor a no-downtime migration from a 0.14 cluster to a 0.15 cluster,\nwe recommend the following sequence of steps:\n\n1. Download 0.15, and configure it to point to the same datastore\n   as your 0.14 cluster. Run `kong migrations up`.\n2. Both 0.14 and 0.15 nodes can now run simultaneously on the same\n   datastore. Start provisioning 0.15 nodes, but do not use their\n   Admin API yet. Prefer making Admin API requests to your 0.14 nodes\n   instead.\n3. Gradually divert traffic away from your 0.14 nodes, and into\n   your 0.15 cluster. Monitor your traffic to make sure everything\n   is going smoothly.\n4. When your traffic is fully migrated to the 0.15 cluster,\n   decommission your 0.14 nodes.\n5. From your 0.15 cluster, run: `kong migrations finish`.\n   From this point on, it will not be possible to start 0.14\n   nodes pointing to the same datastore anymore. Only run\n   this command when you are confident that your migration\n   was successful. From now on, you can safely make Admin API\n   requests to your 0.15 nodes.\n\n##### Installing 0.15 on a Fresh Datastore\n\nFor installing on a fresh datastore, Kong 0.15 introduces the `kong migrations\nbootstrap` command. The following commands can be run to prepare a new 0.15\ncluster from a fresh datastore:\n\n```\n$ kong migrations bootstrap [-c config]\n$ kong start [-c config]\n```\n\n## Upgrade to `0.14.x`\n\nThis version introduces **changes in Admin API endpoints**, **database\nmigrations**, **Nginx configuration changes**, and **removed configuration\nproperties**.\n\nIn this release, the **API entity is still supported**, along with its related\nAdmin API endpoints.\n\nThis section will highlight breaking changes that you need to be aware of\nbefore upgrading and will describe the recommended upgrade path. We recommend\nthat you consult the full [0.14.0\nChangelog](https://github.com/Kong/kong/blob/master/CHANGELOG.md) for a\ncomplete list of changes and new features.\n\n#### 1. Breaking Changes\n\n##### Dependencies\n\n- The required OpenResty version has been bumped to 1.13.6.2. If you\n  are installing Kong from one of our distribution packages, you are not\n  affected by this change.\n- Support for PostgreSQL 9.4 (deprecated in 0.12.0) is now dropped.\n- Support for Cassandra 2.1 (deprecated in 0.12.0) is now dropped.\n\n##### Configuration\n\n- The `server_tokens` and `latency_tokens` configuration properties have been\n  removed. Instead, a new `headers` configuration properties replaces them.\n  See the default configuration file or the [configuration\n  reference](https://docs.konghq.com/0.14.x/configuration/) for more details.\n- The Nginx configuration file has changed, which means that you need to update\n  it if you are using a custom template. The changes are detailed in a diff\n  included below.\n\n##### Plugins\n- The Runscope plugin has been dropped, based on the EoL announcement made by Runscope about their Traffic Inspector product. [#3495](https://github.com/Kong/kong/pull/3495)\n\n##### Admin API\n- The SSL Certificates and SNI entities have moved to the new DAO implementation. As such, the /certificates and /snis endpoints have received notable usability improvements, but suffer from a few breaking changes. [#3386](https://github.com/Kong/kong/pull/3386)\n\n- The Consumers entity has moved to the new DAO implementation. As such, the `/consumers` endpoint has received notable usability improvements, but suffers from a few breaking changes. [#3437](https://github.com/Kong/kong/pull/3437)\n\n<details>\n<summary><strong>Click here to see the Nginx configuration changes</strong></summary>\n<p>\n\n```diff\ndiff --git a/kong/templates/nginx_kong.lua b/kong/templates/nginx_kong.lua\nindex a66c230f..d4e416bc 100644\n--- a/kong/templates/nginx_kong.lua\n+++ b/kong/templates/nginx_kong.lua\n@@ -29,8 +29,9 @@ lua_socket_pool_size ${{LUA_SOCKET_POOL_SIZE}};\n lua_max_running_timers 4096;\n lua_max_pending_timers 16384;\n lua_shared_dict kong                5m;\n-lua_shared_dict kong_cache          ${{MEM_CACHE_SIZE}};\n+lua_shared_dict kong_db_cache       ${{MEM_CACHE_SIZE}};\n lua_shared_dict kong_db_cache_miss 12m;\n+lua_shared_dict kong_locks          8m;\n lua_shared_dict kong_process_events 5m;\n lua_shared_dict kong_cluster_events 5m;\n lua_shared_dict kong_healthchecks   5m;\n@@ -44,13 +45,18 @@ lua_ssl_trusted_certificate '${{LUA_SSL_TRUSTED_CERTIFICATE}}';\n lua_ssl_verify_depth ${{LUA_SSL_VERIFY_DEPTH}};\n > end\n\n+# injected nginx_http_* directives\n+> for _, el in ipairs(nginx_http_directives)  do\n+$(el.name) $(el.value);\n+> end\n+\n init_by_lua_block {\n-    kong = require 'kong'\n-    kong.init()\n+    Kong = require 'kong'\n+    Kong.init()\n }\n\n init_worker_by_lua_block {\n-    kong.init_worker()\n+    Kong.init_worker()\n }\n\n\n@@ -58,7 +64,7 @@ init_worker_by_lua_block {\n upstream kong_upstream {\n     server 0.0.0.1;\n     balancer_by_lua_block {\n-        kong.balancer()\n+        Kong.balancer()\n     }\n     keepalive ${{UPSTREAM_KEEPALIVE}};\n }\n@@ -81,7 +87,7 @@ server {\n     ssl_certificate_key ${{SSL_CERT_KEY}};\n     ssl_protocols TLSv1.1 TLSv1.2;\n     ssl_certificate_by_lua_block {\n-        kong.ssl_certificate()\n+        Kong.ssl_certificate()\n     }\n\n     ssl_session_cache shared:SSL:10m;\n@@ -101,7 +107,15 @@ server {\n     set_real_ip_from   $(trusted_ips[i]);\n > end\n\n+    # injected nginx_proxy_* directives\n+> for _, el in ipairs(nginx_proxy_directives)  do\n+    $(el.name) $(el.value);\n+> end\n+\n     location / {\n+        default_type                     '';\n+\n+        set $ctx_ref                     '';\n         set $upstream_host               '';\n         set $upstream_upgrade            '';\n         set $upstream_connection         '';\n@@ -113,11 +127,11 @@ server {\n         set $upstream_x_forwarded_port   '';\n\n         rewrite_by_lua_block {\n-            kong.rewrite()\n+            Kong.rewrite()\n         }\n\n         access_by_lua_block {\n-            kong.access()\n+            Kong.access()\n         }\n\n         proxy_http_version 1.1;\n@@ -135,22 +149,36 @@ server {\n         proxy_pass         $upstream_scheme://kong_upstream$upstream_uri;\n\n         header_filter_by_lua_block {\n-            kong.header_filter()\n+            Kong.header_filter()\n         }\n\n         body_filter_by_lua_block {\n-            kong.body_filter()\n+            Kong.body_filter()\n         }\n\n         log_by_lua_block {\n-            kong.log()\n+            Kong.log()\n         }\n     }\n\n     location = /kong_error_handler {\n         internal;\n+        uninitialized_variable_warn off;\n+\n         content_by_lua_block {\n-            kong.handle_error()\n+            Kong.handle_error()\n+        }\n+\n+        header_filter_by_lua_block {\n+            Kong.header_filter()\n+        }\n+\n+        body_filter_by_lua_block {\n+            Kong.body_filter()\n+        }\n+\n+        log_by_lua_block {\n+            Kong.log()\n         }\n     }\n }\n@@ -180,10 +208,15 @@ server {\n     ssl_ciphers ${{SSL_CIPHERS}};\n > end\n\n+    # injected nginx_admin_* directives\n+> for _, el in ipairs(nginx_admin_directives)  do\n+    $(el.name) $(el.value);\n+> end\n+\n     location / {\n         default_type application/json;\n         content_by_lua_block {\n-            kong.serve_admin_api()\n+            Kong.serve_admin_api()\n         }\n     }\n```\n\n</p>\n</details>\n\n##### Core\n\n- If you are relying on passive health-checks to detect TCP timeouts, you\n  should double-check your health-check configurations. Previously, timeouts\n  were erroneously contributing to the `tcp_failures` counter. They are now\n  properly contributing to the `timeout` counter. In order to short-circuit\n  traffic based on timeouts, you must ensure that your `timeout` settings\n  are properly configured. See the [Health Checks\n  reference](https://docs.konghq.com/0.14.x/health-checks-circuit-breakers/)\n  for more details.\n\n##### Plugins\n\n- Custom plugins can now see their `header_filter`, `body_filter`, and `log`\n  phases executed without the `rewrite` or `access` phases running first. This\n  can happen when Nginx itself produces an error while parsing the client's\n  request. Similarly, `ngx.var` values (e.g. `ngx.var.request_uri`) may be\n  `nil`. Plugins should be hardened to handle such cases and avoid using\n  uninitialized variables, which could throw Lua errors.\n- The Runscope plugin has been dropped, based on the EoL announcement made by\n  Runscope about their Traffic Inspector product.\n\n##### Admin API\n\n- As a result of being moved to the new Admin API implementation (and\n  supporting `PUT` and named endpoints), the `/snis` endpoint\n  `ssl_certificate_id` attribute has been renamed to `certificate_id`.\n  See the [Admin API\n  reference](https://docs.konghq.com/0.14.x/admin-api/#add-sni) for\n  more details.\n- On the `/certificates` endpoint, the `snis` attribute is not specified as a\n  comma-separated list anymore. It must be specified as a JSON array or using\n  the url-formencoded array notation of other recent Admin API endpoints. See\n  the [Admin API\n  reference](https://docs.konghq.com/0.14.x/admin-api/#add-certificate) for\n  more details.\n- Filtering by username in the `/consumers` endpoint is not supported with\n  `/consumers?username=...`. Instead, use `/consumers/{username}` to retrieve a\n  Consumer by its username. Filtering with `/consumers?custom_id=...` is still\n  supported.\n\n#### 2. Deprecation Notices\n\n- The `custom_plugins` configuration property is now deprecated in favor of\n  `plugins`. See the default configuration file or the [configuration\n  reference](https://docs.konghq.com/0.14.x/configuration/) for more details.\n\n#### 3. Suggested Upgrade Path\n\nYou can now start migrating your cluster from `0.13.x` to `0.14`. If you are\ndoing this upgrade \"in-place\", against the datastore of a running 0.13 cluster,\nthen for a short period of time, your database schema won't be fully compatible\nwith your 0.13 nodes anymore. This is why we suggest either performing this\nupgrade when your 0.13 cluster is warm and most entities are cached, or against\na new database, if you can migrate your data. If you wish to temporarily make\nyour APIs unavailable, you can leverage the\n[request-termination](https://docs.konghq.com/hub/kong-inc/request-termination/) plugin.\n\nThe path to upgrade a 0.13 datastore is identical to the one of previous major\nreleases:\n\n1. If you are planning on upgrading Kong while 0.13 nodes are running against\n   the same datastore, make sure those nodes are warm enough (they should have\n   most of your entities cached already), or temporarily disable your APIs.\n2. Provision a 0.14 node and configure it as you wish (environment variables/\n   configuration file). Make sure to point this new 0.14 node to your current\n   datastore.\n3. **Without starting the 0.14 node**, run the 0.14 migrations against your\n   current datastore:\n\n```\n$ kong migrations up [-c kong.conf]\n```\n\nAs usual, this step should be executed from a **single node**.\n\n4. You can now provision a fresh 0.14 cluster pointing to your migrated\n   datastore and start your 0.14 nodes.\n5. Gradually switch your traffic from the 0.13 cluster to the new 0.14 cluster.\n   Remember, once your database is migrated, your 0.13 nodes will rely on\n   their cache and not on the underlying database. Your traffic should switch\n   to the new cluster as quickly as possible.\n6. Once your traffic is fully migrated to the 0.14 cluster, decommission\n   your 0.13 cluster.\n\nYou have now successfully upgraded your cluster to run 0.14 nodes exclusively.\n\n## Upgrade to `0.13.x`\n\nThis version comes with **new model entities**, **database migrations**, and\n**nginx configuration changes**.\n\nThis section will only highlight the breaking changes that you need to be\naware of, and describe a recommended upgrade path. We recommend that you\nconsult the full [0.13.0\nChangelog](https://github.com/Kong/kong/blob/master/CHANGELOG.md) for a\ncomplete list of changes and new features.\n\nSee below the breaking changes section for a detailed list of steps recommended\nto **run migrations** and upgrade from a previous version of Kong.\n\n#### 1. Breaking Changes\n\n- **Note to Docker users**: The `latest` tag on Docker Hub now points to the\n  **alpine** image instead of CentOS. This also applies to the `0.13.0` tag.\n\n##### Dependencies\n\n- Support for Cassandra 2.1 was deprecated in 0.12.0 and has been dropped\n  starting with 0.13.0.\n- Various dependencies have been bumped. Once again, consult the Changelog for\n  a detailed list.\n\n##### Configuration\n\n- The `proxy_listen` and `admin_listen` configuration values have a new syntax.\n  See the configuration file or the [0.13.x\n  documentation](https://docs.konghq.com/0.13.x/configuration/) for insights\n  on the new syntax.\n- The nginx configuration file has changed, which means that you need to update\n  it if you are using a custom template. The changes are detailed in a diff\n  included below.\n\n<details>\n<summary><strong>Click here to see the nginx configuration changes</strong></summary>\n<p>\n\n```diff\ndiff --git a/kong/templates/nginx_kong.lua b/kong/templates/nginx_kong.lua\nindex 5639f319..62f5f1ae 100644\n--- a/kong/templates/nginx_kong.lua\n+++ b/kong/templates/nginx_kong.lua\n@@ -51,6 +51,8 @@ init_worker_by_lua_block {\n     kong.init_worker()\n }\n\n+\n+> if #proxy_listeners > 0 then\n upstream kong_upstream {\n     server 0.0.0.1;\n     balancer_by_lua_block {\n@@ -61,7 +63,9 @@ upstream kong_upstream {\n\n server {\n     server_name kong;\n-    listen ${{PROXY_LISTEN}}${{PROXY_PROTOCOL}};\n+> for i = 1, #proxy_listeners do\n+    listen $(proxy_listeners[i].listener);\n+> end\n     error_page 400 404 408 411 412 413 414 417 /kong_error_handler;\n     error_page 500 502 503 504 /kong_error_handler;\n\n@@ -70,8 +74,7 @@ server {\n\n     client_body_buffer_size ${{CLIENT_BODY_BUFFER_SIZE}};\n\n-> if ssl then\n-    listen ${{PROXY_LISTEN_SSL}} ssl${{HTTP2}}${{PROXY_PROTOCOL}};\n+> if proxy_ssl_enabled then\n     ssl_certificate ${{SSL_CERT}};\n     ssl_certificate_key ${{SSL_CERT_KEY}};\n     ssl_protocols TLSv1.1 TLSv1.2;\n@@ -149,10 +152,14 @@ server {\n         }\n     }\n }\n+> end\n\n+> if #admin_listeners > 0 then\n server {\n     server_name kong_admin;\n-    listen ${{ADMIN_LISTEN}};\n+> for i = 1, #admin_listeners do\n+    listen $(admin_listeners[i].listener);\n+> end\n\n     access_log ${{ADMIN_ACCESS_LOG}};\n     error_log ${{ADMIN_ERROR_LOG}} ${{LOG_LEVEL}};\n@@ -160,8 +167,7 @@ server {\n     client_max_body_size 10m;\n     client_body_buffer_size 10m;\n\n-> if admin_ssl then\n-    listen ${{ADMIN_LISTEN_SSL}} ssl${{ADMIN_HTTP2}};\n+> if admin_ssl_enabled then\n     ssl_certificate ${{ADMIN_SSL_CERT}};\n     ssl_certificate_key ${{ADMIN_SSL_CERT_KEY}};\n     ssl_protocols TLSv1.1 TLSv1.2;\n@@ -189,4 +195,5 @@ server {\n         return 200 'User-agent: *\\nDisallow: /';\n     }\n }\n+> end\n```\n\n</p>\n</details>\n\n##### Plugins\n\n- The galileo plugin is considered deprecated and not enabled by default\n  anymore. It is still shipped with Kong 0.13.0, but you must enable it by\n  specifying it in the `custom_plugins` configuration property, like so:\n  `custom_plugins = galileo` (or via the `KONG_CUSTOM_PLUGINS` environment\n  variable).\n- The migrations will remove and re-create the rate-limiting and\n  response-ratelimiting tables storing counters. This means that your counters\n  will reset.\n\n#### 2. Deprecation Notices\n\nStarting with 0.13.0, the \"API\" entity is considered **deprecated**. While\nstill supported, we will eventually remove the entity and its related endpoints\nfrom the Admin API. Services and Routes are the new first-class citizen\nentities that new users (or users upgrading their clusters) should configure.\n\nYou can read more about Services and Routes in the [Proxy\nGuide](https://docs.konghq.com/0.13.x/proxy/) and the [Admin API\nReference](https://docs.konghq.com/0.13.x/admin-api/).\n\n#### 3. Suggested Upgrade Path\n\nYou can now start migrating your cluster from `0.12.x` to `0.13`. If you are\ndoing this upgrade \"in-place\", against the datastore of a running 0.12 cluster,\nthen for a short period of time, your database schema won't be fully compatible\nwith your 0.12 nodes anymore. This is why we suggest either performing this\nupgrade when your 0.12 cluster is warm and most entities are cached, or against\na new database if you can migrate your data. If you wish to temporarily make\nyour APIs unavailable, you can leverage the\n[request-termination](https://docs.konghq.com/plugins/request-termination/) plugin.\n\nThe path to upgrade a 0.12 datastore is identical to the one of previous major\nreleases:\n\n1. If you are planning on upgrading Kong while 0.12 nodes are running against\n   the same datastore, make sure those nodes are warm enough (they should have\n   most of your entities cached already) or temporarily disable your APIs.\n2. Provision a 0.13 node and configure it as you wish (environment variables/\n   configuration file). Make sure to point this new 0.13 node to your current\n   datastore.\n3. **Without starting the 0.13 node**, run the 0.13 migrations against your\n   current datastore:\n\n```\n$ kong migrations up [-c kong.conf]\n```\n\nAs usual, this step should be executed from a **single node**.\n\n4. You can now provision a fresh 0.13 cluster pointing to your migrated\n   datastore and start your 0.13 nodes.\n5. Gradually switch your traffic from the 0.12 cluster to the new 0.13 cluster.\n   Remember, once your database is migrated, your 0.12 nodes will rely on\n   their cache and not on the underlying database. Your traffic should switch\n   to the new cluster as quickly as possible.\n6. Once your traffic is fully migrated to the 0.13 cluster, decommission\n   your 0.12 cluster.\n\nYou have now successfully upgraded your cluster to run 0.13 nodes exclusively.\n\n## Upgrade to `0.12.x`\n\nAs it is the case most of the time, this new major version of Kong comes with\na few **database migrations**, some breaking changes, databases deprecation\nnotices, and minor updates to the NGINX configuration template.\n\nThis document will only highlight the breaking changes that you need to be\naware of, and describe a recommended upgrade path. We recommend that you\nconsult the full [0.12.0\nChangelog](https://github.com/Kong/kong/blob/master/CHANGELOG.md) for a\ncomplete list of changes and new features.\n\nSee below the breaking changes section for a detailed list of steps recommended\nto **run migrations** and upgrade from a previous version of Kong.\n\n#### Deprecation notices\n\nStarting with 0.12.0, we are announcing the deprecation of older versions\nof our supported databases:\n\n- Support for PostgreSQL 9.4 is deprecated. Users are advised to upgrade to\n  9.5+\n- Support for Cassandra 2.1 and below is deprecated. Users are advised to\n  upgrade to 2.2+\n\nNote that the above-deprecated versions are still supported in this release,\nbut will be dropped in subsequent ones.\n\n#### Breaking changes\n\n##### Configuration\n\n- Several updates were made to the NGINX configuration template. If you are\n  using a custom template, you **must** apply those modifications. See below\n  for a list of changes to apply.\n\n##### Core\n\n- The required OpenResty version has been bumped to 1.11.2.5. If you\n  are installing Kong from one of our distribution packages, you are not\n  affected by this change.\n- As Kong now executes subsequent plugins when a request is being\n  short-circuited (e.g. HTTP 401 responses from auth plugins), plugins that\n  run in the header or body filter phases will be run upon such responses\n  from the access phase. It is possible that some of these plugins (e.g. your\n  custom plugins) now run in scenarios where they were not previously expected\n  to run.\n\n##### Admin API\n\n- By default, the Admin API now only listens on the local interface.\n  We consider this change to be an improvement in the default security policy\n  of Kong. If you are already using Kong, and your Admin API still binds to all\n  interfaces, consider updating it as well. You can do so by updating the\n  `admin_listen` configuration value, like so: `admin_listen = 127.0.0.1:8001`.\n\n  :red_circle: **Note to Docker users**: Beware of this change as you may have\n  to ensure that your Admin API is reachable via the host's interface.\n  You can use the `-e KONG_ADMIN_LISTEN` argument when provisioning your\n  container(s) to update this value; for example,\n  `-e KONG_ADMIN_LISTEN=0.0.0.0:8001`.\n\n- The `/upstreams/:upstream_name_or_id/targets/` has been updated to not show\n  the full list of Targets anymore, but only the ones that are currently\n  active in the load balancer. To retrieve the full history of Targets, you can\n  now query `/upstreams/:upstream_name_or_id/targets/all`. The\n  `/upstreams/:upstream_name_or_id/targets/active` endpoint has been removed.\n- The `orderlist` property of Upstreams has been removed.\n\n##### CLI\n\n- The `$ kong compile` command which was deprecated in 0.11.0 has been removed.\n\n##### Plugins\n\n- In logging plugins, the `request.request_uri` field has been renamed to\n  `request.url`.\n\n---\n\nIf you use a custom NGINX configuration template from Kong 0.11, before\nattempting to run any 0.12 node, make sure to apply the following change to\nyour template:\n\n```diff\ndiff --git a/kong/templates/nginx_kong.lua b/kong/templates/nginx_kong.lua\nindex 5ab65ca3..8a6abd64 100644\n--- a/kong/templates/nginx_kong.lua\n+++ b/kong/templates/nginx_kong.lua\n@@ -32,6 +32,7 @@ lua_shared_dict kong                5m;\n lua_shared_dict kong_cache          ${{MEM_CACHE_SIZE}};\n lua_shared_dict kong_process_events 5m;\n lua_shared_dict kong_cluster_events 5m;\n+lua_shared_dict kong_healthchecks   5m;\n > if database == \"cassandra\" then\n lua_shared_dict kong_cassandra      5m;\n > end\n```\n\n---\n\nYou can now start migrating your cluster from `0.11.x` to `0.12`. If you are\ndoing this upgrade \"in-place\", against the datastore of a running 0.11 cluster,\nthen for a short period of time, your database schema won't be fully compatible\nwith your 0.11 nodes anymore. This is why we suggest either performing this\nupgrade when your 0.11 cluster is warm and most entities are cached, or against\na new database, if you can migrate your data. If you wish to temporarily make\nyour APIs unavailable, you can leverage the\n[request-termination](https://docs.konghq.com/plugins/request-termination/) plugin.\n\nThe path to upgrade a 0.11 datastore is identical to the one of previous major\nreleases:\n\n1. If you are planning on upgrading Kong while 0.11 nodes are running against\n   the same datastore, make sure those nodes are warm enough (they should have\n   most of your entities cached already), or temporarily disable your APIs.\n2. Provision a 0.12 node and configure it as you wish (environment variables/\n   configuration file). Make sure to point this new 0.12 node to your current\n   datastore.\n3. **Without starting the 0.12 node**, run the 0.12 migrations against your\n   current datastore:\n\n```\n$ kong migrations up [-c kong.conf]\n```\n\nAs usual, this step should be executed from a **single node**.\n\n4. You can now provision a fresh 0.12 cluster pointing to your migrated\n   datastore and start your 0.12 nodes.\n5. Gradually switch your traffic from the 0.11 cluster to the new 0.12 cluster.\n   Remember, once your database is migrated, your 0.11 nodes will rely on\n   their cache and not on the underlying database. Your traffic should switch\n   to the new cluster as quickly as possible.\n6. Once your traffic is fully migrated to the 0.12 cluster, decommission\n   your 0.11 cluster.\n\nYou have now successfully upgraded your cluster to run 0.12 nodes exclusively.\n\n## Upgrade to `0.11.x`\n\nAlong with the usual database migrations shipped with our major releases, this\nparticular release introduces quite a few changes in behavior and, most\nnotably, the enforced manual migrations process and the removal of the Serf\ndependency for cache invalidation between Kong nodes of the same cluster.\n\nThis document will only highlight the breaking changes that you need to be\naware of, and describe a recommended upgrade path. We recommend that you\nconsult the full [0.11.0\nChangelog](https://github.com/Kong/kong/blob/master/CHANGELOG.md) for a\ncomplete list of changes and new features.\n\n#### Breaking changes\n\n##### Configuration\n\n- Several updates were made to the Nginx configuration template. If you are\n  using a custom template, you **must** apply those modifications. See below\n  for a list of changes to apply.\n\n##### Migrations & Deployment\n\n- Migrations are **not** executed automatically by `kong start` anymore.\n  Migrations are now a **manual** process, which must be executed via the `kong\n  migrations` command. In practice, this means that you have to run `kong\n  migrations up [-c kong.conf]` in one of your nodes **before** starting your\n  Kong nodes. This command should be run from a **single** node/container to\n  avoid several nodes running migrations concurrently and potentially\n  corrupting your database. Once the migrations are up-to-date, it is\n  considered safe to start multiple Kong nodes concurrently.\n- Serf is **not** a dependency anymore. Kong nodes now handle cache\n  invalidation events via a built-in database polling mechanism. See the new\n  \"Datastore Cache\" section of the configuration file which contains 3 new\n  documented properties: `db_update_frequency`, `db_update_propagation`, and\n  `db_cache_ttl`.  If you are using Cassandra, you **should** pay a particular\n  attention to the `db_update_propagation` setting, as you **should not** use\n  the default value of `0`.\n\n**Note for Docker users:** Because of the aforementioned breaking change, if\nyou are running Kong with Docker, you will now need to run the migrations from\na single, ephemeral container. You can follow the [Docker installation\ninstructions](https://docs.konghq.com/install/docker/) (see \"2. Prepare your\ndatabase\") for more details about this process.\n\n##### Core\n\n- Kong now requires OpenResty `1.11.2.4`. OpenResty's LuaJIT can now be built\n  with Lua 5.2 compatibility, and the `--without-luajit-lua52` flag can be\n  omitted.\n- While Kong now correctly proxies downstream `X-Forwarded-*` headers, the\n  introduction of the new `trusted_ips` property also means that Kong will\n  only do so when the request comes from a trusted client IP. This is also\n  the condition under which the `X-Real-IP` header will be trusted by Kong\n  or not.\n  In order to enforce security best practices, we took the stance of **not**\n  trusting any client IP by default. If you wish to rely on such headers, you\n  will need to configure `trusted_ips` (see the Kong configuration file) to\n  your needs.\n- The API Object property `http_if_terminated` is now set to `false` by\n  default. For Kong to evaluate the client `X-Forwarded-Proto` header, you must\n  now configure Kong to trust the client IP (see above change), **and** you\n  must explicitly set this value to `true`. This affects you if you are doing\n  SSL termination somewhere before your requests hit Kong, and if you have\n  configured `https_only` on the API, or if you use a plugin that requires\n  HTTPS traffic (e.g. OAuth2).\n- The internal DNS resolver now honors the `search` and `ndots` configuration\n  options of your `resolv.conf` file. Make sure that DNS resolution is still\n  consistent in your environment, and consider eventually not using FQDNs\n  anymore.\n\n##### Admin API\n\n- Due to the removal of Serf, Kong is now entirely stateless. As such, the\n  `/cluster` endpoint has for now disappeared. This endpoint, in previous\n  versions of Kong, retrieved the state of the Serf agent running on other\n  nodes to ensure they were part of the same cluster. Starting from 0.11, all\n  Kong nodes connected to the same datastore are guaranteed to be part of the\n  same cluster without requiring additional channels of communication.\n- The Admin API `/status` endpoint does not return a count of the database\n  entities anymore. Instead, it now returns a `database.reachable` boolean\n  value, which reflects the state of the connection between Kong and the\n  underlying database. Please note that this flag **does not** reflect the\n  health of the database itself.\n\n##### Plugins development\n\n- The upstream URI is now determined via the Nginx `$upstream_uri` variable.\n  Custom plugins using the `ngx.req.set_uri()` API will not be taken into\n  consideration anymore. One must now set the `ngx.var.upstream_uri` variable\n  from the Lua land.\n- The `hooks.lua` module for custom plugins is dropped, along with the\n  `database_cache.lua` module. Database entities caching and eviction has been\n  greatly improved to simplify and automate most caching use-cases. See the\n  [plugins development\n  guide](https://docs.konghq.com/0.11.x/plugin-development/entities-cache/)\n  for more details about the new underlying mechanism, or see the below\n  section of this document on how to update your plugin's cache invalidation\n  mechanism for 0.11.0.\n- To ensure that the order of execution of plugins is still the same for\n  vanilla Kong installations, we had to update the `PRIORITY` field of some of\n  our bundled plugins. If your custom plugin must run after or before a\n  specific bundled plugin, you might have to update your plugin's `PRIORITY`\n  field as well. The complete list of plugins and their priorities is available\n  on the [plugins development\n  guide](https://docs.konghq.com/0.11.x/plugin-development/custom-logic/).\n\n#### Deprecations\n\n##### CLI\n\n- The `kong compile` command has been deprecated. Instead, prefer using\n  the new `kong prepare` command.\n\n---\n\nIf you use a custom Nginx configuration template from Kong 0.10, before\nattempting to run any 0.11 node, make sure to apply the following changes to\nyour template:\n\n```diff\ndiff --git a/kong/templates/nginx_kong.lua b/kong/templates/nginx_kong.lua\nindex 3c038595..faa97ffe 100644\n--- a/kong/templates/nginx_kong.lua\n+++ b/kong/templates/nginx_kong.lua\n@@ -19,25 +19,23 @@ error_log ${{PROXY_ERROR_LOG}} ${{LOG_LEVEL}};\n >-- reset_timedout_connection on; # disabled until benchmarked\n > end\n\n-client_max_body_size 0;\n+client_max_body_size ${{CLIENT_MAX_BODY_SIZE}};\n proxy_ssl_server_name on;\n underscores_in_headers on;\n\n-real_ip_header X-Forwarded-For;\n-set_real_ip_from 0.0.0.0/0;\n-real_ip_recursive on;\n-\n lua_package_path '${{LUA_PACKAGE_PATH}};;';\n lua_package_cpath '${{LUA_PACKAGE_CPATH}};;';\n lua_code_cache ${{LUA_CODE_CACHE}};\n lua_socket_pool_size ${{LUA_SOCKET_POOL_SIZE}};\n lua_max_running_timers 4096;\n lua_max_pending_timers 16384;\n-lua_shared_dict kong 4m;\n-lua_shared_dict cache ${{MEM_CACHE_SIZE}};\n-lua_shared_dict cache_locks 100k;\n-lua_shared_dict process_events 1m;\n-lua_shared_dict cassandra 5m;\n+lua_shared_dict kong                5m;\n+lua_shared_dict kong_cache          ${{MEM_CACHE_SIZE}};\n+lua_shared_dict kong_process_events 5m;\n+lua_shared_dict kong_cluster_events 5m;\n+> if database == \"cassandra\" then\n+lua_shared_dict kong_cassandra      5m;\n+> end\n lua_socket_log_errors off;\n > if lua_ssl_trusted_certificate then\n lua_ssl_trusted_certificate '${{LUA_SSL_TRUSTED_CERTIFICATE}}';\n@@ -45,8 +43,6 @@ lua_ssl_verify_depth ${{LUA_SSL_VERIFY_DEPTH}};\n > end\n\n init_by_lua_block {\n-    require 'luarocks.loader'\n-    require 'resty.core'\n     kong = require 'kong'\n     kong.init()\n }\n@@ -65,28 +61,19 @@ upstream kong_upstream {\n     keepalive ${{UPSTREAM_KEEPALIVE}};\n }\n\n-map $http_upgrade $upstream_connection {\n-    default keep-alive;\n-    websocket upgrade;\n-}\n-\n-map $http_upgrade $upstream_upgrade {\n-    default '';\n-    websocket websocket;\n-}\n-\n server {\n     server_name kong;\n-    listen ${{PROXY_LISTEN}};\n-    error_page 404 408 411 412 413 414 417 /kong_error_handler;\n+    listen ${{PROXY_LISTEN}}${{PROXY_PROTOCOL}};\n+    error_page 400 404 408 411 412 413 414 417 /kong_error_handler;\n     error_page 500 502 503 504 /kong_error_handler;\n\n     access_log ${{PROXY_ACCESS_LOG}};\n     error_log ${{PROXY_ERROR_LOG}} ${{LOG_LEVEL}};\n\n+    client_body_buffer_size ${{CLIENT_BODY_BUFFER_SIZE}};\n\n > if ssl then\n-    listen ${{PROXY_LISTEN_SSL}} ssl;\n+    listen ${{PROXY_LISTEN_SSL}} ssl${{HTTP2}}${{PROXY_PROTOCOL}};\n     ssl_certificate ${{SSL_CERT}};\n     ssl_certificate_key ${{SSL_CERT_KEY}};\n     ssl_protocols TLSv1.1 TLSv1.2;\n@@ -105,9 +92,22 @@ server {\n     proxy_ssl_certificate_key ${{CLIENT_SSL_CERT_KEY}};\n > end\n\n+    real_ip_header     ${{REAL_IP_HEADER}};\n+    real_ip_recursive  ${{REAL_IP_RECURSIVE}};\n+> for i = 1, #trusted_ips do\n+    set_real_ip_from   $(trusted_ips[i]);\n+> end\n+\n     location / {\n-        set $upstream_host nil;\n-        set $upstream_scheme nil;\n+        set $upstream_host               '';\n+        set $upstream_upgrade            '';\n+        set $upstream_connection         '';\n+        set $upstream_scheme             '';\n+        set $upstream_uri                '';\n+        set $upstream_x_forwarded_for    '';\n+        set $upstream_x_forwarded_proto  '';\n+        set $upstream_x_forwarded_host   '';\n+        set $upstream_x_forwarded_port   '';\n\n         rewrite_by_lua_block {\n             kong.rewrite()\n@@ -118,17 +118,18 @@ server {\n         }\n\n         proxy_http_version 1.1;\n-        proxy_set_header X-Real-IP $remote_addr;\n-        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n-        proxy_set_header X-Forwarded-Proto $scheme;\n-        proxy_set_header Host $upstream_host;\n-        proxy_set_header Upgrade $upstream_upgrade;\n-        proxy_set_header Connection $upstream_connection;\n-        proxy_pass_header Server;\n-\n-        proxy_ssl_name $upstream_host;\n-\n-        proxy_pass $upstream_scheme://kong_upstream;\n+        proxy_set_header   Host              $upstream_host;\n+        proxy_set_header   Upgrade           $upstream_upgrade;\n+        proxy_set_header   Connection        $upstream_connection;\n+        proxy_set_header   X-Forwarded-For   $upstream_x_forwarded_for;\n+        proxy_set_header   X-Forwarded-Proto $upstream_x_forwarded_proto;\n+        proxy_set_header   X-Forwarded-Host  $upstream_x_forwarded_host;\n+        proxy_set_header   X-Forwarded-Port  $upstream_x_forwarded_port;\n+        proxy_set_header   X-Real-IP         $remote_addr;\n+        proxy_pass_header  Server;\n+        proxy_pass_header  Date;\n+        proxy_ssl_name     $upstream_host;\n+        proxy_pass         $upstream_scheme://kong_upstream$upstream_uri;\n\n         header_filter_by_lua_block {\n             kong.header_filter()\n@@ -146,7 +147,7 @@ server {\n     location = /kong_error_handler {\n         internal;\n         content_by_lua_block {\n-            require('kong.core.error_handlers')(ngx)\n+            kong.handle_error()\n         }\n     }\n }\n@@ -162,7 +163,7 @@ server {\n     client_body_buffer_size 10m;\n\n > if admin_ssl then\n-    listen ${{ADMIN_LISTEN_SSL}} ssl;\n+    listen ${{ADMIN_LISTEN_SSL}} ssl${{ADMIN_HTTP2}};\n     ssl_certificate ${{ADMIN_SSL_CERT}};\n     ssl_certificate_key ${{ADMIN_SSL_CERT_KEY}};\n     ssl_protocols TLSv1.1 TLSv1.2;\n@@ -176,15 +177,7 @@ server {\n     location / {\n         default_type application/json;\n         content_by_lua_block {\n-            ngx.header['Access-Control-Allow-Origin'] = '*'\n-\n-            if ngx.req.get_method() == 'OPTIONS' then\n-                ngx.header['Access-Control-Allow-Methods'] = 'GET,HEAD,PUT,PATCH,POST,DELETE'\n-                ngx.header['Access-Control-Allow-Headers'] = 'Content-Type'\n-                ngx.exit(204)\n-            end\n-\n-            require('lapis').serve('kong.api')\n+            kong.serve_admin_api()\n         }\n     }\n```\n\nOnce those changes have been applied, you will be able to benefit from the new\nconfiguration properties and bug fixes that 0.11 introduces.\n\n---\n\nIf you are maintaining your own plugin, and if you are using the 0.10.x\n`database_cache.lua` module to cache your datastore entities, you probably\nincluded a `hooks.lua` module in your plugin as well.\n\nIn 0.11, most of the clutter surrounding cache invalidation is now gone, and\nhandled automatically by Kong for most use-cases.\n\n- The `hooks.lua` module is now ignored by Kong. You can safely remove it from\n  your plugins.\n- The `database_cache.lua` module is replaced with `singletons.cache`. You\n  should not require `database_cache` anymore in your plugin's code.\n\nTo update your plugin's caching mechanism to 0.11, you must implement automatic\nor manual invalidation.\n\n##### Automatic cache invalidation\n\nLet's assume your plugin had the following code that we wish to update for\n0.11 compatibility:\n\n```lua\nlocal credential, err = cache.get_or_set(cache.keyauth_credential_key(key),\n                                         nil, load_credential, key)\nif err then\n  return responses.send_HTTP_INTERNAL_SERVER_ERROR(err)\nend\n```\n\nAlong with the following `hooks.lua` file:\n\n```lua\nlocal events = require \"kong.core.events\"\nlocal cache = require \"kong.tools.database_cache\"\n\nlocal function invalidate(message_t)\n  if message_t.collection == \"keyauth_credentials\" then\n    cache.delete(cache.keyauth_credential_key(message_t.old_entity     and\n                                              message_t.old_entity.key or\n                                              message_t.entity.key))\n  end\nend\n\nreturn {\n  [events.TYPES.ENTITY_UPDATED] = function(message_t)\n    invalidate(message_t)\n  end,\n  [events.TYPES.ENTITY_DELETED] = function(message_t)\n    invalidate(message_t)\n  end\n}\n```\n\nBy adding the following `cache_key` property to your custom entity's schema:\n\n```lua\nlocal SCHEMA = {\n  primary_key = { \"id\" },\n  table = \"keyauth_credentials\",\n  cache_key = { \"key\" }, -- cache key for this entity\n  fields = {\n    id = { type = \"id\" },\n    consumer_id = { type = \"id\", required = true, foreign = \"consumers:id\"},\n    key = { type = \"string\", required = false, unique = true }\n  }\n}\n\nreturn { keyauth_credentials = SCHEMA }\n```\n\nYou can now generate a unique cache key for that entity and cache it like so\nin your business logic and hot code paths:\n\n```lua\nlocal singletons = require \"kong.singletons\"\n\nlocal apikey = request.get_uri_args().apikey\nlocal cache_key = singletons.dao.keyauth_credentials:cache_key(apikey)\n\nlocal credential, err = singletons.cache:get(cache_key, nil, load_entity_key,\n                                             apikey)\nif err then\n  return response.HTTP_INTERNAL_SERVER_ERROR(err)\nend\n\n-- do something with the retrieved credential\n```\n\nNow, cache invalidation will be an automatic process: every CRUD operation that\naffects this API key will make Kong auto-generate the affected `cache_key`,\nand send broadcast it to all of the other nodes on the cluster so they can\nevict that particular value from their cache, and fetch the fresh value from\nthe datastore on the next request.\n\nWhen a parent entity is receiving a CRUD operation (e.g. the Consumer owning\nthis API key, as per our schema's `consumer_id` attribute), Kong performs the\ncache invalidation mechanism for both the parent and the child entity.\n\nThanks to this new property, the `hooks.lua` module is not required anymore and\nyour plugins can perform datastore caching much more easily.\n\n##### Manual cache invalidation\n\nIn some cases, the `cache_key` property of an entity's schema is not flexible\nenough, and one must manually invalidate its cache. Reasons for this could be\nthat the plugin is not defining a relationship with another entity via the\ntraditional `foreign = \"parent_entity:parent_attribute\"` syntax, or because\nit is not using the `cache_key` method from its DAO, or even because it is\nsomehow abusing the caching mechanism.\n\nIn those cases, you can manually set up your own subscriber to the same\ninvalidation channels Kong is listening to, and perform your own, custom\ninvalidation work. This process is similar to the old `hooks.lua` module.\n\nTo listen on invalidation channels inside of Kong, implement the following in\nyour plugin's `init_worker` handler:\n\n```lua\nlocal singletons = require \"kong.singletons\"\n\nfunction MyCustomHandler:init_worker()\n  local worker_events = singletons.worker_events\n\n  -- listen to all CRUD operations made on Consumers\n  worker_events.register(function(data)\n\n  end, \"crud\", \"consumers\")\n\n  -- or, listen to a specific CRUD operation only\n  worker_events.register(function(data)\n    print(data.operation)  -- \"update\"\n    print(data.old_entity) -- old entity table (only for \"update\")\n    print(data.entity)     -- new entity table\n    print(data.schema)     -- entity's schema\n  end, \"crud\", \"consumers:update\")\nend\n```\n\nOnce the above listeners are in place for the desired entities, you can perform\nmanual invalidations of any entity that your plugin has cached as you wish so.\nFor instance:\n\n```lua\nsingletons.worker_events.register(function(data)\n  if data.operation == \"delete\" then\n    local cache_key = data.entity.id\n    singletons.cache:invalidate(\"prefix:\" .. cache_key)\n  end\nend, \"crud\", \"consumers\")\n```\n\n---\n\nYou can now start migrating your cluster from `0.10.x` to `0.11`. If you are\ndoing this upgrade \"in-place\", against the datastore of a running 0.10 cluster,\nthen for a short period of time, your database schema won't be fully compatible\nwith your 0.10 nodes anymore. This is why we suggest either performing this\nupgrade when your 0.10 cluster is warm and most entities are cached, or against\na new database, if you can migrate your data. If you wish to temporarily make\nyour APIs unavailable, you can leverage the new\n[request-termination](https://docs.konghq.com/hub/kong-inc/request-termination/) plugin.\n\nThe path to upgrade a 0.10 datastore is identical to the one of previous major\nreleases:\n\n1. If you are planning on upgrading Kong while 0.10 nodes are running against\n   the same datastore, make sure those nodes are warm enough (they should have\n   most of your entities cached already), or temporarily disable your APIs.\n2. Provision a 0.11 node and configure it as you wish (environment variables/\n   configuration file). Make sure to point this new 0.11 node to your current\n   datastore.\n3. **Without starting the 0.11 node**, run the 0.11 migrations against your\n   current datastore:\n\n```\n$ kong migrations up [-c kong.conf]\n```\n\nAs usual, this step should be executed from a **single node**.\n\n4. You can now provision a fresh 0.11 cluster pointing to your migrated\n   datastore and start your 0.11 nodes.\n5. Gradually switch your traffic from the 0.10 cluster to the new 0.11 cluster.\n   Remember, once your database is migrated, your 0.10 nodes will rely on\n   their cache and not on the underlying database. Your traffic should switch\n   to the new cluster as quickly as possible.\n6. Once your traffic is fully migrated to the 0.11 cluster, decommission\n   your 0.10 cluster.\n\nOnce all of your 0.10 nodes are fully decommissioned, you can consider removing\nthe Serf executable from your environment as well, since Kong 0.11 does not\ndepend on it anymore.\n\n## Upgrade to `0.10.x`\n\nDue to the breaking changes introduced in this version, we recommend that you\ncarefully test your cluster deployment.\n\nKong 0.10 introduced the following breaking changes:\n\n- API Objects (as configured via the Admin API) do **not** support the\n  `request_host` and `request_uri` fields anymore. The 0.10 migrations should\n  upgrade your current API Objects, but make sure to read the new [0.10 Proxy\n  Guide](https://docs.konghq.com/0.10.x/proxy/) to learn the new routing\n  capabilities of Kong. This means that Kong can now route incoming requests\n  according to a combination of Host headers, URIs, and HTTP\n  methods.\n- The `upstream_url` field of API Objects does not accept trailing slashes anymore.\n- Dynamic SSL certificates serving is now handled by the core and **not**\n  through the `ssl` plugin anymore. This version introduced the `/certificates`\n  and `/snis` endpoints. See the new [0.10 Proxy\n  Guide](https://docs.konghq.com/0.10.x/proxy/) to learn more about how to\n  configure your SSL certificates on your APIs. The `ssl` plugin has been\n  removed.\n- The preferred version of OpenResty is now `1.11.2.2`. However, this version\n  requires that you compiled OpenResty with the `--without-luajit-lua52` flag.\n  Make sure to do so if you install OpenResty and Kong from source.\n- Dnsmasq is not a dependency anymore (However, be careful before removing it\n  if you configured it to be your DNS name server via Kong's [`resolver`\n  property](https://docs.konghq.com/0.9.x/configuration/#dns-resolver-section))\n- The `cassandra_contact_points` property does not allow specifying a port\n  anymore. All Cassandra nodes must listen on the same port, which can be\n  tweaked via the `cassandra_port` property.\n- If you are upgrading to `0.10.1` or `0.10.2` and using the CORS plugin, pay\n  extra attention to a regression that was introduced in `0.10.1`:\n  Previously, the plugin would send the `*` wildcard when `config.origin` was\n  not specified. With this change, the plugin **does not** send the `*`\n  wildcard by default anymore. You will need to specify it manually when\n  configuring the plugin, with `config.origins=*`. This behavior is to be fixed\n  in a future release.\n\nWe recommend that you consult the full [0.10.0\nChangelog](https://github.com/Kong/kong/blob/master/CHANGELOG.md) for a full\nlist of changes and new features, including load balancing capabilities,\nsupport for Cassandra 3.x, SRV records resolution, and much more.\n\nHere is how to ensure a smooth upgrade from a Kong `0.9.x` cluster to `0.10`:\n\n1. Make sure your 0.9 cluster is warm because your\n   datastore will be incompatible with your 0.9 Kong nodes once migrated.\n   Most of your entities should be cached\n   by the running Kong nodes already (APIs, Consumers, Plugins).\n2. Provision a 0.10 node and configure it as you wish (environment variables/\n   configuration file). Make sure to point this new 0.10 node to your current\n   datastore.\n3. **Without starting the 0.10 node**, run the 0.10 migrations against your\n   current datastore:\n\n```\n$ kong migrations up <-c kong.conf>\n```\n\nAs usual, this step should be executed from a single node.\n\n4. You can now provision a fresh 0.10 cluster pointing to your migrated\n   datastore and start your 0.10 nodes.\n5. Gradually switch your traffic from the 0.9 cluster to the new 0.10 cluster.\n   Remember, once your database is migrated, your 0.9 nodes will rely on\n   their cache and not on the underlying database. Your traffic should switch\n   to the new cluster as quickly as possible.\n6. Once your traffic is fully migrated to the 0.10 cluster, decommission\n   your 0.9 cluster.\n\n## Upgrade to `0.9.x`\n\nPostgreSQL is the new default datastore for Kong. If you were using Cassandra\nand you are upgrading, you must explicitly set `cassandra` as your `database`.\n\nThis release introduces a new CLI, which uses the\n[lua-resty-cli](https://github.com/openresty/resty-cli) interpreter. As such,\nthe `resty` executable (shipped in the OpenResty bundle) must be available in\nyour `$PATH`. Additionally, the `bin/kong` executable is not installed through\nLuarocks anymore, and must be placed in your `$PATH` as well. This change of\nbehavior is taken care of if you are using one of the official Kong packages.\n\nOnce Kong updated, familiarize yourself with its new configuration format, and\nconsider setting some of its properties via environment variables if the need\narises. This behavior, as well as all available settings, are documented in the\n`kong.conf.default` file shipped with this version.\n\nOnce your nodes configured, we recommend that you seemingly redirect your\ntraffic through the new Kong 0.9 nodes before decommissioning your old nodes.\n\n## Upgrade to `0.8.x`\n\nNo important breaking changes for this release, just be careful to not use the\nlong deprecated routes `/consumers/:consumer/keyauth/` and\n`/consumers/:consumer/basicauth/` as instructed in the Changelog. As always,\nalso make sure to check the configuration file for new properties (this release\nallows you to configure the read/write consistency of Cassandra).\n\nLet's talk about **PostgreSQL**. To use it instead of Cassandra, follow those\nsteps:\n\n* Get your hands on a 9.4+ server (being compatible with Postgres 9.4 allows\n  you to use [Amazon RDS](https://aws.amazon.com/rds/))\n* Create a database, (maybe a user too?), let's say `kong`\n* Update your Kong configuration:\n\n```yaml\n# as always, be careful about your YAML formatting\ndatabase: postgres\npostgres:\n  host: \"127.0.0.1\"\n  port: 5432\n  user: kong\n  password: kong\n  database: kong\n```\n\nAs usual, migrations should run from kong start, but as a reminder and just in\ncase, here are some tips:\n\nReset the database with (careful, you'll lose all data):\n```\n$ kong migrations reset --config kong.yml\n```\n\nRun the migrations manually with:\n```\n$ kong migrations up --config kong.yml\n```\n\nIf needed, list your migrations for debug purposes with:\n```\n$ kong migrations list --config kong.yml\n```\n\n**Note**: This release does not provide a mean to migrate from Cassandra to\nPostgreSQL. Additionally, we recommend that you **do not** use `kong reload` if\nyou switch your cluster from Cassandra to PostgreSQL. Instead, we recommend\nthat you migrate by spawning a new cluster and gradually redirect your traffic\nbefore decommissioning your old nodes.\n\n## Upgrade to `0.7.x`\n\nIf you are running a source installation, you will need to upgrade OpenResty to\nits `1.9.7.*` version. The good news is that this family of releases does not\nneed to patch the NGINX core anymore to enable SSL support. If you install Kong\nfrom one of the distribution packages, they already include the appropriate\nOpenResty, simply download and install the appropriate package for your\nplatform.\n\nAs described in the Changelog, this upgrade has benefits, such as the SSL\nsupport and fixes for critical NGINX vulnerabilities, but also requires that\nyou upgrade the `nginx` property of your Kong config because it is not\nbackwards compatible.\n\n- We advise that you retrieve the `nginx` property from the `0.7.x`\n  configuration file, and use it in yours with the changes you feel are\n  appropriate.\n\n- Finally, you can reload Kong as usual:\n\n```shell\n$ kong reload [-c configuration_file]\n```\n\n**Note**: We expose the underlying NGINX configuration as a way for Kong to be\nas flexible as possible and allow you to bend your NGINX instance to your\nneeds. We are aware that many of you do not need to customize it and such\nchanges should not affect you. Plans are to embed the NGINX configuration in\nKong, while still allowing customization for the most demanding users.\n[#217](https://github.com/Kong/kong/pull/217) is the place to discuss this\nand share thoughts/needs.\n\n## Upgrade to `0.6.x`\n\n**Note**: if you are using Kong 0.4.x or earlier, you must first upgrade to\nKong 0.5.x.\n\nThe configuration file changed in this release. Make sure to check out the new\ndefault one and update it to your needs. In particular, make sure that:\n\n```yaml\nplugins_available:\n  - key-auth\n  - ...\n  - custom-plugin\nproxy_port: ...\nproxy_ssl_port: ...\nadmin_api_port: ...\ndatabases_available:\n  cassandra:\n    properties:\n      contact_points:\n        - ...\n```\n\nbecomes:\n\n```yaml\ncustom_plugins:\n  - only-custom-plugins\nproxy_listen: ...\nproxy_listen_ssl: ...\nadmin_api_listen: ...\ncassandra:\n  contact_points:\n    - ...\n```\n\nSecondly, if you installed Kong from source or maintain a development\ninstallation, you will need to have [Serf](https://www.serfdom.io) installed on\nyour system and available in your `$PATH`. Serf is included with all the\ndistribution packages and images available at\n[getkong.org/install](https://konghq.com/get-started/#install).\n\nThe same way, this should already be the case but make sure that LuaJIT is in\nyour `$PATH` too as the CLI interpreter switched from Lua 5.1 to LuaJIT.\nDistribution packages also include LuaJIT.\n\nIn order to start Kong with its new clustering and cache invalidation\ncapabilities, you will need to restart your node(s) (and not reload):\n\n```shell\n$ kong restart [-c configuration_file]\n```\n\nRead more about the new clustering capabilities of Kong 0.6.0 and its\nconfigurations in the [Clustering\ndocumentation](https://docs.konghq.com/0.6.x/clustering/).\n\n## Upgrade to `0.5.x`\n\nMigrating to 0.5.x can be done **without downtime** by following those\ninstructions. It is important that you be running Kong `0.4.2` and have the\nlatest release of Python 2.7 on your system when executing those steps.\n\n> Several changes were introduced in this version: some plugins and properties\n> were renamed and the database schema slightly changed to introduce \"plugins\n> migrations\". Now, each plugin can have its own migration if it needs to store\n> data in your cluster. This is not a regular migration since the schema of the\n> table handling the migrations itself changed.\n\n##### 1. Configuration file\n\nYou will need to update your configuration file. Replace the\n`plugins_available` values with:\n\n```yaml\nplugins_available:\n  - ssl\n  - jwt\n  - acl\n  - cors\n  - oauth2\n  - tcp-log\n  - udp-log\n  - file-log\n  - http-log\n  - key-auth\n  - hmac-auth\n  - basic-auth\n  - ip-restriction\n  - mashape-analytics\n  - request-transformer\n  - response-transformer\n  - request-size-limiting\n  - rate-limiting\n  - response-ratelimiting\n```\n\nYou can still remove plugins you don't use for a lighter Kong.\n\nAlso replace the Cassandra `hosts` property with `contact_points`:\n\n```yaml\nproperties:\n  contact_points:\n    - \"...\"\n    - \"...\"\n  timeout: 1000\n  keyspace: kong\n  keepalive: 60000\n```\n\n##### 2. Migration script\n\n[This Python\nscript](https://github.com/Kong/kong/blob/0.5.0/scripts/migration.py) will\ntake care of migrating your database schema should you execute the following\ninstructions:\n\n```shell\n# First, make sure you are already running Kong 0.4.2\n\n# Clone the Kong git repository if you don't already have it:\n$ git clone https://github.com/Kong/kong.git\n\n# Go to the 'scripts/' folder:\n$ cd kong/scripts\n\n# Install the Python script dependencies:\n$ pip install cassandra-driver==2.7.2 pyyaml\n\n# The script will use the first Cassandra contact point in your Kong configuration file\n# (the first of the 'contact_points' property) so make sure it is valid and has the format 'host:port'.\n\n# Run the migration script:\n$ python migration.py -c /path/to/kong/config\n```\n\nIf everything went well the script should print a success message. **At this\npoint, your database is compatible with both Kong 0.4.2 and 0.5.x.** If you are\nrunning more than one Kong node, you simply have to follow step 3. for each one\nof them now.\n\n##### 3. Upgrade without downtime\n\nYou can now upgrade Kong to `0.5.x.` Proceed as a regular upgrade and follow\nthe suggested upgrade path, in particular, the `kong reload` command.\n\n##### 4. Purge your Cassandra cluster\n\nFinally, once Kong has restarted in 0.5.x, run the migration script again, with\nthe `--purge` flag:\n\n```shell\n$ python migration.py -c /path/to/kong/config --purge\n```\n\nYour cluster is now fully migrated to `0.5.x`.\n\n##### Other changes to acknowledge\n\nSome entities and properties were renamed to avoid confusion:\n\n- Properties belonging to APIs entities have been renamed for clarity:\n  - `public_dns` -> `request_host`\n  - `path` -> `request_path`\n  - `strip_path` -> `strip_request_path`\n  - `target_url` -> `upstream_url`\n- `plugins_configurations` have been renamed to `plugins`, and their `value`\n  property has been renamed to `config` to avoid confusions.\n- The Key authentication and Basic authentication plugins routes have changed:\n\n```\nOld route                             New route\n/consumers/:consumer/keyauth       -> /consumers/:consumer/key-auth\n/consumers/:consumer/keyauth/:id   -> /consumers/:consumer/key-auth/:id\n/consumers/:consumer/basicauth     -> /consumers/:consumer/basic-auth\n/consumers/:consumer/basicauth/:id -> /consumers/:consumer/basic-auth/:id\n```\n\nThe old routes are still maintained but will be removed in upcoming versions.\nConsider them **deprecated**.\n\n- Admin API:\n  - The route to retrieve enabled plugins is now under `/plugins/enabled`.\n  - The route to retrieve a plugin's configuration schema is now under\n    `/plugins/schema/{plugin name}`.\n\n## Upgrade to Kong `0.4.2`\n\nThe configuration format for specifying the port of your Cassandra instance\nchanged. Replace:\n\n```yaml\ncassandra:\n  properties:\n    hosts: \"localhost\"\n    port: 9042\n```\n\nby:\n\n```yaml\ncassandra:\n  properties:\n    hosts:\n      - \"localhost:9042\"\n```\n\n## Upgrade to `0.3.x`\n\nKong now requires a patch on OpenResty for SSL support. On Homebrew you will\nneed to reinstall OpenResty.\n\n#### Homebrew\n\n```shell\n$ brew update\n$ brew reinstall mashape/kong/ngx_openresty\n$ brew upgrade kong\n```\n\n#### Troubleshoot\n\nIf you are seeing a similar error on `kong start`:\n\n```\nnginx: [error] [lua] init_by_lua:5: Startup error: Cassandra error: Failed to\nprepare statement: \"SELECT id FROM apis WHERE path = ?;\". Cassandra returned\nerror (Invalid): \"Undefined name path in where clause ('path = ?')\"\n```\n\nYou can run the following command to update your schema:\n\n```\n$ kong migrations up\n```\n\nPlease consider updating to `0.3.1` or greater which automatically handles the\nschema migration.\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 3.06,
          "content": "workspace(name = \"kong\")\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"bazel_skylib\",\n    sha256 = \"bc283cdfcd526a52c3201279cda4bc298652efa898b10b4db0837dc51652756f\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.7.1/bazel-skylib-1.7.1.tar.gz\",\n        \"https://github.com/bazelbuild/bazel-skylib/releases/download/1.7.1/bazel-skylib-1.7.1.tar.gz\",\n    ],\n)\n\nload(\"@bazel_skylib//:workspace.bzl\", \"bazel_skylib_workspace\")\n\nbazel_skylib_workspace()\n\nhttp_archive(\n    name = \"bazel_features\",\n    sha256 = \"ba1282c1aa1d1fffdcf994ab32131d7c7551a9bc960fbf05f42d55a1b930cbfb\",\n    strip_prefix = \"bazel_features-1.15.0\",\n    url = \"https://github.com/bazel-contrib/bazel_features/releases/download/v1.15.0/bazel_features-v1.15.0.tar.gz\",\n)\n\nload(\"@bazel_features//:deps.bzl\", \"bazel_features_deps\")\n\nbazel_features_deps()\n\nhttp_archive(\n    name = \"rules_foreign_cc\",\n    patch_args = [\"-p1\"],\n    patches = [\n        \"//build:patches/01-revert-LD-environment.patch\",\n        \"//build:patches/02-revert-Reduce-build-times-especially-on-windows.patch\",\n    ],\n    sha256 = \"a2e6fb56e649c1ee79703e99aa0c9d13c6cc53c8d7a0cbb8797ab2888bbc99a3\",\n    strip_prefix = \"rules_foreign_cc-0.12.0\",\n    url = \"https://github.com/bazelbuild/rules_foreign_cc/releases/download/0.12.0/rules_foreign_cc-0.12.0.tar.gz\",\n)\n\nload(\"@rules_foreign_cc//foreign_cc:repositories.bzl\", \"rules_foreign_cc_dependencies\")\n\n# This sets up some common toolchains for building targets. For more details, please see\n# https://bazelbuild.github.io/rules_foreign_cc/0.9.0/flatten.html#rules_foreign_cc_dependencies\nrules_foreign_cc_dependencies(\n    register_built_tools = False,  # don't build toolchains like make\n    register_default_tools = True,  # register cmake and ninja that are managed by bazel\n    register_preinstalled_tools = True,  # use preinstalled toolchains like make\n)\n\nhttp_archive(\n    name = \"rules_rust\",\n    integrity = \"sha256-JLN47ZcAbx9wEr5Jiib4HduZATGLiDgK7oUi/fvotzU=\",\n    urls = [\"https://github.com/bazelbuild/rules_rust/releases/download/0.42.1/rules_rust-v0.42.1.tar.gz\"],\n)\n\nload(\"//build:kong_bindings.bzl\", \"load_bindings\")\n\nload_bindings(name = \"kong_bindings\")\n\nload(\"//build/openresty:repositories.bzl\", \"openresty_repositories\")\n\nopenresty_repositories()\n\n# [[ BEGIN: must happen after any Rust repositories are loaded\nload(\"//build/kong_crate:deps.bzl\", \"kong_crate_repositories\")\n\nkong_crate_repositories(cargo_home_isolated = False)\n\nload(\"//build/kong_crate:crates.bzl\", \"kong_crates\")\n\nkong_crates()\n## END: must happen after any Rust repositories are loaded ]]\n\nload(\"//build/nfpm:repositories.bzl\", \"nfpm_repositories\")\n\nnfpm_repositories()\n\nload(\"@simdjson_ffi//build:repos.bzl\", \"simdjson_ffi_repositories\")\n\nsimdjson_ffi_repositories()\n\nload(\"//build:repositories.bzl\", \"build_repositories\")\n\nbuild_repositories()\n\nload(\"//build/toolchain:repositories.bzl\", \"toolchain_repositories\")\n\ntoolchain_repositories()\n\nload(\"//build/toolchain:managed_toolchain.bzl\", \"register_all_toolchains\")\n\nregister_all_toolchains()\n"
        },
        {
          "name": "autodoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "changelog",
          "type": "tree",
          "content": null
        },
        {
          "name": "crate_locks",
          "type": "tree",
          "content": null
        },
        {
          "name": "kong-3.10.0-0.rockspec",
          "type": "blob",
          "size": 48.5,
          "content": "package = \"kong\"\nversion = \"3.10.0-0\"\nrockspec_format = \"3.0\"\nsupported_platforms = {\"linux\", \"macosx\"}\nsource = {\n  url = \"git+https://github.com/Kong/kong.git\",\n  tag = \"3.10.0\"\n}\ndescription = {\n  summary = \"Kong is a scalable and customizable API Management Layer built on top of Nginx.\",\n  homepage = \"https://konghq.com\",\n  license = \"Apache 2.0\"\n}\ndependencies = {\n  \"inspect == 3.1.3\",\n  \"luasec == 1.3.2\",\n  \"luasocket == 3.0-rc1\",\n  \"penlight == 1.14.0\",\n  \"lua-resty-http == 0.17.2\",\n  \"lua-resty-jit-uuid == 0.0.7\",\n  \"lua-ffi-zlib == 0.6\",\n  \"multipart == 0.5.9\",\n  \"version == 1.0.1\",\n  \"kong-lapis == 1.16.0.1\",\n  \"kong-pgmoon == 1.16.2\",\n  \"luatz == 0.4\",\n  \"lua_system_constants == 0.1.4\",\n  \"lyaml == 6.2.8\",\n  \"luasyslog == 2.0.1\",\n  \"lua_pack == 2.0.0\",\n  \"binaryheap >= 0.4\",\n  \"luaxxhash >= 1.0\",\n  \"lua-protobuf == 0.5.2\",\n  \"lua-resty-healthcheck == 3.1.0\",\n  \"lua-messagepack == 0.5.4\",\n  \"lua-resty-aws == 1.5.4\",\n  \"lua-resty-openssl == 1.5.1\",\n  \"lua-resty-gcp == 0.0.13\",\n  \"lua-resty-counter == 0.2.1\",\n  \"lua-resty-ipmatcher == 0.6.1\",\n  \"lua-resty-acme == 0.15.0\",\n  \"lua-resty-session == 4.0.5\",\n  \"lua-resty-timer-ng == 0.2.7\",\n  \"lpeg == 1.1.0\",\n  \"lua-resty-ljsonschema == 1.2.0\",\n  \"lua-resty-snappy == 1.0-1\",\n  \"lua-resty-ada == 1.1.0\",\n}\nbuild = {\n  type = \"builtin\",\n  modules = {\n    [\"kong\"] = \"kong/init.lua\",\n    [\"kong.meta\"] = \"kong/meta.lua\",\n    [\"kong.cache\"] = \"kong/cache/init.lua\",\n    [\"kong.cache.warmup\"] = \"kong/cache/warmup.lua\",\n    [\"kong.global\"] = \"kong/global.lua\",\n    [\"kong.reports\"] = \"kong/reports.lua\",\n    [\"kong.constants\"] = \"kong/constants.lua\",\n    [\"kong.concurrency\"] = \"kong/concurrency.lua\",\n    [\"kong.deprecation\"] = \"kong/deprecation.lua\",\n    [\"kong.globalpatches\"] = \"kong/globalpatches.lua\",\n    [\"kong.error_handlers\"] = \"kong/error_handlers.lua\",\n    [\"kong.hooks\"] = \"kong/hooks.lua\",\n\n    [\"kong.router\"] = \"kong/router/init.lua\",\n    [\"kong.router.traditional\"] = \"kong/router/traditional.lua\",\n    [\"kong.router.compat\"] = \"kong/router/compat.lua\",\n    [\"kong.router.expressions\"] = \"kong/router/expressions.lua\",\n    [\"kong.router.atc\"] = \"kong/router/atc.lua\",\n    [\"kong.router.fields\"] = \"kong/router/fields.lua\",\n    [\"kong.router.transform\"] = \"kong/router/transform.lua\",\n    [\"kong.router.utils\"] = \"kong/router/utils.lua\",\n\n    [\"kong.conf_loader\"] = \"kong/conf_loader/init.lua\",\n    [\"kong.conf_loader.constants\"] = \"kong/conf_loader/constants.lua\",\n    [\"kong.conf_loader.parse\"] = \"kong/conf_loader/parse.lua\",\n    [\"kong.conf_loader.sys\"] = \"kong/conf_loader/sys.lua\",\n    [\"kong.conf_loader.listeners\"] = \"kong/conf_loader/listeners.lua\",\n\n    [\"kong.clustering\"] = \"kong/clustering/init.lua\",\n    [\"kong.clustering.data_plane\"] = \"kong/clustering/data_plane.lua\",\n    [\"kong.clustering.control_plane\"] = \"kong/clustering/control_plane.lua\",\n    [\"kong.clustering.utils\"] = \"kong/clustering/utils.lua\",\n    [\"kong.clustering.events\"] = \"kong/clustering/events.lua\",\n    [\"kong.clustering.compat\"] = \"kong/clustering/compat/init.lua\",\n    [\"kong.clustering.compat.version\"] = \"kong/clustering/compat/version.lua\",\n    [\"kong.clustering.compat.removed_fields\"] = \"kong/clustering/compat/removed_fields.lua\",\n    [\"kong.clustering.compat.checkers\"] = \"kong/clustering/compat/checkers.lua\",\n    [\"kong.clustering.config_helper\"] = \"kong/clustering/config_helper.lua\",\n    [\"kong.clustering.tls\"] = \"kong/clustering/tls.lua\",\n\n    [\"kong.clustering.rpc.callbacks\"] = \"kong/clustering/rpc/callbacks.lua\",\n    [\"kong.clustering.rpc.future\"] = \"kong/clustering/rpc/future.lua\",\n    [\"kong.clustering.rpc.json_rpc_v2\"] = \"kong/clustering/rpc/json_rpc_v2.lua\",\n    [\"kong.clustering.rpc.manager\"] = \"kong/clustering/rpc/manager.lua\",\n    [\"kong.clustering.rpc.queue\"] = \"kong/clustering/rpc/queue.lua\",\n    [\"kong.clustering.rpc.socket\"] = \"kong/clustering/rpc/socket.lua\",\n    [\"kong.clustering.rpc.utils\"] = \"kong/clustering/rpc/utils.lua\",\n    [\"kong.clustering.rpc.concentrator\"] = \"kong/clustering/rpc/concentrator.lua\",\n\n    [\"kong.clustering.services.sync\"] = \"kong/clustering/services/sync/init.lua\",\n    [\"kong.clustering.services.sync.rpc\"] = \"kong/clustering/services/sync/rpc.lua\",\n    [\"kong.clustering.services.sync.hooks\"] = \"kong/clustering/services/sync/hooks.lua\",\n    [\"kong.clustering.services.sync.strategies.postgres\"] = \"kong/clustering/services/sync/strategies/postgres.lua\",\n\n    [\"kong.cluster_events\"] = \"kong/cluster_events/init.lua\",\n    [\"kong.cluster_events.strategies.postgres\"] = \"kong/cluster_events/strategies/postgres.lua\",\n    [\"kong.cluster_events.strategies.off\"] = \"kong/cluster_events/strategies/off.lua\",\n\n    [\"kong.templates.nginx\"] = \"kong/templates/nginx.lua\",\n    [\"kong.templates.nginx_kong\"] = \"kong/templates/nginx_kong.lua\",\n    [\"kong.templates.nginx_kong_gui_include\"] = \"kong/templates/nginx_kong_gui_include.lua\",\n    [\"kong.templates.nginx_kong_stream\"] = \"kong/templates/nginx_kong_stream.lua\",\n    [\"kong.templates.kong_defaults\"] = \"kong/templates/kong_defaults.lua\",\n    [\"kong.templates.nginx_inject\"] = \"kong/templates/nginx_inject.lua\",\n    [\"kong.templates.nginx_kong_inject\"] = \"kong/templates/nginx_kong_inject.lua\",\n    [\"kong.templates.nginx_kong_stream_inject\"] = \"kong/templates/nginx_kong_stream_inject.lua\",\n    [\"kong.templates.kong_yml\"] = \"kong/templates/kong_yml.lua\",\n    [\"kong.templates.wasmtime_cache_config\"] = \"kong/templates/wasmtime_cache_config.lua\",\n\n    [\"kong.resty.dns.client\"] = \"kong/resty/dns/client.lua\",\n    [\"kong.resty.dns.utils\"] = \"kong/resty/dns/utils.lua\",\n\n    [\"kong.dns.client\"] = \"kong/dns/client.lua\",\n    [\"kong.dns.stats\"] = \"kong/dns/stats.lua\",\n    [\"kong.dns.utils\"] = \"kong/dns/utils.lua\",\n\n    [\"kong.resty.ctx\"] = \"kong/resty/ctx.lua\",\n\n    [\"kong.resty.mlcache\"] = \"kong/resty/mlcache/init.lua\",\n    [\"kong.resty.mlcache.ipc\"] = \"kong/resty/mlcache/ipc.lua\",\n\n    [\"kong.cmd\"] = \"kong/cmd/init.lua\",\n    [\"kong.cmd.roar\"] = \"kong/cmd/roar.lua\",\n    [\"kong.cmd.stop\"] = \"kong/cmd/stop.lua\",\n    [\"kong.cmd.quit\"] = \"kong/cmd/quit.lua\",\n    [\"kong.cmd.start\"] = \"kong/cmd/start.lua\",\n    [\"kong.cmd.check\"] = \"kong/cmd/check.lua\",\n    [\"kong.cmd.config\"] = \"kong/cmd/config.lua\",\n    [\"kong.cmd.reload\"] = \"kong/cmd/reload.lua\",\n    [\"kong.cmd.restart\"] = \"kong/cmd/restart.lua\",\n    [\"kong.cmd.prepare\"] = \"kong/cmd/prepare.lua\",\n    [\"kong.cmd.migrations\"] = \"kong/cmd/migrations.lua\",\n    [\"kong.cmd.health\"] = \"kong/cmd/health.lua\",\n    [\"kong.cmd.vault\"] = \"kong/cmd/vault.lua\",\n    [\"kong.cmd.version\"] = \"kong/cmd/version.lua\",\n    [\"kong.cmd.hybrid\"] = \"kong/cmd/hybrid.lua\",\n    [\"kong.cmd.drain\"] = \"kong/cmd/drain.lua\",\n    [\"kong.cmd.utils.log\"] = \"kong/cmd/utils/log.lua\",\n    [\"kong.cmd.utils.kill\"] = \"kong/cmd/utils/kill.lua\",\n    [\"kong.cmd.utils.env\"] = \"kong/cmd/utils/env.lua\",\n    [\"kong.cmd.utils.migrations\"] = \"kong/cmd/utils/migrations.lua\",\n    [\"kong.cmd.utils.tty\"] = \"kong/cmd/utils/tty.lua\",\n    [\"kong.cmd.utils.nginx_signals\"] = \"kong/cmd/utils/nginx_signals.lua\",\n    [\"kong.cmd.utils.prefix_handler\"] = \"kong/cmd/utils/prefix_handler.lua\",\n    [\"kong.cmd.utils.process_secrets\"] = \"kong/cmd/utils/process_secrets.lua\",\n    [\"kong.cmd.utils.inject_confs\"] = \"kong/cmd/utils/inject_confs.lua\",\n    [\"kong.cmd.utils.timer\"] = \"kong/cmd/utils/timer.lua\",\n\n    [\"kong.api\"] = \"kong/api/init.lua\",\n    [\"kong.api.api_helpers\"] = \"kong/api/api_helpers.lua\",\n    [\"kong.api.arguments\"] = \"kong/api/arguments.lua\",\n    [\"kong.api.arguments_decoder\"] = \"kong/api/arguments_decoder.lua\",\n    [\"kong.api.endpoints\"] = \"kong/api/endpoints.lua\",\n    [\"kong.api.routes.cache\"] = \"kong/api/routes/cache.lua\",\n    [\"kong.api.routes.certificates\"] = \"kong/api/routes/certificates.lua\",\n    [\"kong.api.routes.clustering\"] = \"kong/api/routes/clustering.lua\",\n    [\"kong.api.routes.config\"] = \"kong/api/routes/config.lua\",\n    [\"kong.api.routes.consumers\"] = \"kong/api/routes/consumers.lua\",\n    [\"kong.api.routes.debug\"] = \"kong/api/routes/debug.lua\",\n    [\"kong.api.routes.filter_chains\"] = \"kong/api/routes/filter_chains.lua\",\n    [\"kong.api.routes.health\"] = \"kong/api/routes/health.lua\",\n    [\"kong.api.routes.kong\"] = \"kong/api/routes/kong.lua\",\n    [\"kong.api.routes.plugins\"] = \"kong/api/routes/plugins.lua\",\n    [\"kong.api.routes.snis\"] = \"kong/api/routes/snis.lua\",\n    [\"kong.api.routes.tags\"] = \"kong/api/routes/tags.lua\",\n    [\"kong.api.routes.targets\"] = \"kong/api/routes/targets.lua\",\n    [\"kong.api.routes.upstreams\"] = \"kong/api/routes/upstreams.lua\",\n    [\"kong.api.routes.dns\"] = \"kong/api/routes/dns.lua\",\n\n    [\"kong.admin_gui\"] = \"kong/admin_gui/init.lua\",\n    [\"kong.admin_gui.utils\"] = \"kong/admin_gui/utils.lua\",\n\n    [\"kong.status\"] = \"kong/status/init.lua\",\n    [\"kong.status.ready\"] = \"kong/status/ready.lua\",\n\n    [\"kong.tls.plugins.certificate\"] = \"kong/tls/plugins/certificate.lua\",\n    [\"kong.tls.plugins.sni_filter\"] = \"kong/tls/plugins/sni_filter.lua\",\n\n    [\"kong.tools.dns\"] = \"kong/tools/dns.lua\",\n    [\"kong.tools.grpc\"] = \"kong/tools/grpc.lua\",\n    [\"kong.tools.utils\"] = \"kong/tools/utils.lua\",\n    [\"kong.tools.timestamp\"] = \"kong/tools/timestamp.lua\",\n    [\"kong.tools.stream_api\"] = \"kong/tools/stream_api.lua\",\n    [\"kong.tools.queue\"] = \"kong/tools/queue.lua\",\n    [\"kong.tools.queue_schema\"] = \"kong/tools/queue_schema.lua\",\n    [\"kong.tools.uri\"] = \"kong/tools/uri.lua\",\n    [\"kong.tools.kong-lua-sandbox\"] = \"kong/tools/kong-lua-sandbox.lua\",\n    [\"kong.tools.protobuf\"] = \"kong/tools/protobuf.lua\",\n    [\"kong.tools.mime_type\"] = \"kong/tools/mime_type.lua\",\n    [\"kong.tools.request_aware_table\"] = \"kong/tools/request_aware_table.lua\",\n    [\"kong.tools.gzip\"] = \"kong/tools/gzip.lua\",\n    [\"kong.tools.string\"] = \"kong/tools/string.lua\",\n    [\"kong.tools.table\"] = \"kong/tools/table.lua\",\n    [\"kong.tools.sha256\"] = \"kong/tools/sha256.lua\",\n    [\"kong.tools.yield\"] = \"kong/tools/yield.lua\",\n    [\"kong.tools.uuid\"] = \"kong/tools/uuid.lua\",\n    [\"kong.tools.rand\"] = \"kong/tools/rand.lua\",\n    [\"kong.tools.system\"] = \"kong/tools/system.lua\",\n    [\"kong.tools.time\"] = \"kong/tools/time.lua\",\n    [\"kong.tools.module\"] = \"kong/tools/module.lua\",\n    [\"kong.tools.ip\"] = \"kong/tools/ip.lua\",\n    [\"kong.tools.http\"] = \"kong/tools/http.lua\",\n    [\"kong.tools.cjson\"] = \"kong/tools/cjson.lua\",\n    [\"kong.tools.emmy_debugger\"] = \"kong/tools/emmy_debugger.lua\",\n    [\"kong.tools.redis.schema\"] = \"kong/tools/redis/schema.lua\",\n    [\"kong.tools.aws_stream\"] = \"kong/tools/aws_stream.lua\",\n\n    [\"kong.tools.sandbox\"] = \"kong/tools/sandbox/init.lua\",\n    [\"kong.tools.sandbox.kong\"] = \"kong/tools/sandbox/kong.lua\",\n    [\"kong.tools.sandbox.environment\"] = \"kong/tools/sandbox/environment/init.lua\",\n    [\"kong.tools.sandbox.environment.handler\"] = \"kong/tools/sandbox/environment/handler.lua\",\n    [\"kong.tools.sandbox.environment.lua\"] = \"kong/tools/sandbox/environment/lua.lua\",\n    [\"kong.tools.sandbox.environment.schema\"] = \"kong/tools/sandbox/environment/schema.lua\",\n    [\"kong.tools.sandbox.require\"] = \"kong/tools/sandbox/require/init.lua\",\n    [\"kong.tools.sandbox.require.handler\"] = \"kong/tools/sandbox/require/handler.lua\",\n    [\"kong.tools.sandbox.require.lua\"] = \"kong/tools/sandbox/require/lua.lua\",\n    [\"kong.tools.sandbox.require.schema\"] = \"kong/tools/sandbox/require/schema.lua\",\n\n    [\"kong.runloop.handler\"] = \"kong/runloop/handler.lua\",\n    [\"kong.runloop.events\"] = \"kong/runloop/events.lua\",\n    [\"kong.runloop.log_level\"] = \"kong/runloop/log_level.lua\",\n    [\"kong.runloop.certificate\"] = \"kong/runloop/certificate.lua\",\n    [\"kong.runloop.plugins_iterator\"] = \"kong/runloop/plugins_iterator.lua\",\n    [\"kong.runloop.upstream_ssl\"] = \"kong/runloop/upstream_ssl.lua\",\n    [\"kong.runloop.balancer\"] = \"kong/runloop/balancer/init.lua\",\n    [\"kong.runloop.balancer.balancers\"] = \"kong/runloop/balancer/balancers.lua\",\n    [\"kong.runloop.balancer.consistent_hashing\"] = \"kong/runloop/balancer/consistent_hashing.lua\",\n    [\"kong.runloop.balancer.healthcheckers\"] = \"kong/runloop/balancer/healthcheckers.lua\",\n    [\"kong.runloop.balancer.least_connections\"] = \"kong/runloop/balancer/least_connections.lua\",\n    [\"kong.runloop.balancer.latency\"] = \"kong/runloop/balancer/latency.lua\",\n    [\"kong.runloop.balancer.round_robin\"] = \"kong/runloop/balancer/round_robin.lua\",\n    [\"kong.runloop.balancer.targets\"] = \"kong/runloop/balancer/targets.lua\",\n    [\"kong.runloop.balancer.upstreams\"] = \"kong/runloop/balancer/upstreams.lua\",\n    [\"kong.runloop.plugin_servers\"] = \"kong/runloop/plugin_servers/init.lua\",\n    [\"kong.runloop.plugin_servers.process\"] = \"kong/runloop/plugin_servers/process.lua\",\n    [\"kong.runloop.plugin_servers.plugin\"] = \"kong/runloop/plugin_servers/plugin.lua\",\n    [\"kong.runloop.plugin_servers.rpc\"] = \"kong/runloop/plugin_servers/rpc/init.lua\",\n    [\"kong.runloop.plugin_servers.rpc.util\"] = \"kong/runloop/plugin_servers/rpc/util.lua\",\n    [\"kong.runloop.plugin_servers.rpc.mp_rpc\"] = \"kong/runloop/plugin_servers/rpc/mp_rpc.lua\",\n    [\"kong.runloop.plugin_servers.rpc.pb_rpc\"] = \"kong/runloop/plugin_servers/rpc/pb_rpc.lua\",\n    [\"kong.runloop.wasm\"] = \"kong/runloop/wasm.lua\",\n    [\"kong.runloop.wasm.plugins\"] = \"kong/runloop/wasm/plugins.lua\",\n    [\"kong.runloop.wasm.properties\"] = \"kong/runloop/wasm/properties.lua\",\n\n    [\"kong.workspaces\"] = \"kong/workspaces/init.lua\",\n\n    [\"kong.db\"] = \"kong/db/init.lua\",\n    [\"kong.db.utils\"] = \"kong/db/utils.lua\",\n    [\"kong.db.errors\"] = \"kong/db/errors.lua\",\n    [\"kong.db.iteration\"] = \"kong/db/iteration.lua\",\n    [\"kong.db.dao\"] = \"kong/db/dao/init.lua\",\n    [\"kong.db.dao.certificates\"] = \"kong/db/dao/certificates.lua\",\n    [\"kong.db.dao.snis\"] = \"kong/db/dao/snis.lua\",\n    [\"kong.db.dao.targets\"] = \"kong/db/dao/targets.lua\",\n    [\"kong.db.dao.plugins\"] = \"kong/db/dao/plugins.lua\",\n    [\"kong.db.dao.tags\"] = \"kong/db/dao/tags.lua\",\n    [\"kong.db.dao.vaults\"] = \"kong/db/dao/vaults.lua\",\n    [\"kong.db.dao.workspaces\"] = \"kong/db/dao/workspaces.lua\",\n    [\"kong.db.dao.services\"] = \"kong/db/dao/services.lua\",\n    [\"kong.db.dao.ca_certificates\"] = \"kong/db/dao/ca_certificates.lua\",\n    [\"kong.db.declarative\"] = \"kong/db/declarative/init.lua\",\n    [\"kong.db.declarative.marshaller\"] = \"kong/db/declarative/marshaller.lua\",\n    [\"kong.db.declarative.export\"] = \"kong/db/declarative/export.lua\",\n    [\"kong.db.declarative.import\"] = \"kong/db/declarative/import.lua\",\n    [\"kong.db.schema\"] = \"kong/db/schema/init.lua\",\n    [\"kong.db.dao.keys\"] = \"kong/db/dao/keys.lua\",\n    [\"kong.db.dao.key_sets\"] = \"kong/db/dao/key_sets.lua\",\n    [\"kong.db.schema.entities.keys\"] = \"kong/db/schema/entities/keys.lua\",\n    [\"kong.db.schema.entities.key_sets\"] = \"kong/db/schema/entities/key_sets.lua\",\n    [\"kong.db.schema.entities.consumers\"] = \"kong/db/schema/entities/consumers.lua\",\n    [\"kong.db.schema.entities.routes\"] = \"kong/db/schema/entities/routes.lua\",\n    [\"kong.db.schema.entities.routes_subschemas\"] = \"kong/db/schema/entities/routes_subschemas.lua\",\n    [\"kong.db.schema.entities.services\"] = \"kong/db/schema/entities/services.lua\",\n    [\"kong.db.schema.entities.certificates\"] = \"kong/db/schema/entities/certificates.lua\",\n    [\"kong.db.schema.entities.snis\"] = \"kong/db/schema/entities/snis.lua\",\n    [\"kong.db.schema.entities.upstreams\"] = \"kong/db/schema/entities/upstreams.lua\",\n    [\"kong.db.schema.entities.targets\"] = \"kong/db/schema/entities/targets.lua\",\n    [\"kong.db.schema.entities.plugins\"] = \"kong/db/schema/entities/plugins.lua\",\n    [\"kong.db.schema.entities.tags\"] = \"kong/db/schema/entities/tags.lua\",\n    [\"kong.db.schema.entities.ca_certificates\"] = \"kong/db/schema/entities/ca_certificates.lua\",\n    [\"kong.db.schema.entities.vaults\"] = \"kong/db/schema/entities/vaults.lua\",\n    [\"kong.db.schema.entities.workspaces\"] = \"kong/db/schema/entities/workspaces.lua\",\n    [\"kong.db.schema.entities.clustering_data_planes\"] = \"kong/db/schema/entities/clustering_data_planes.lua\",\n    [\"kong.db.schema.entities.parameters\"] = \"kong/db/schema/entities/parameters.lua\",\n    [\"kong.db.schema.entities.filter_chains\"] = \"kong/db/schema/entities/filter_chains.lua\",\n    [\"kong.db.schema.json\"] = \"kong/db/schema/json.lua\",\n    [\"kong.db.schema.others.migrations\"] = \"kong/db/schema/others/migrations.lua\",\n    [\"kong.db.schema.others.declarative_config\"] = \"kong/db/schema/others/declarative_config.lua\",\n    [\"kong.db.schema.others.wasm_filter\"] = \"kong/db/schema/others/wasm_filter.lua\",\n    [\"kong.db.schema.entity\"] = \"kong/db/schema/entity.lua\",\n    [\"kong.db.schema.metaschema\"] = \"kong/db/schema/metaschema.lua\",\n    [\"kong.db.schema.typedefs\"] = \"kong/db/schema/typedefs.lua\",\n    [\"kong.db.schema.plugin_loader\"] = \"kong/db/schema/plugin_loader.lua\",\n    [\"kong.db.schema.vault_loader\"] = \"kong/db/schema/vault_loader.lua\",\n    [\"kong.db.schema.topological_sort\"] = \"kong/db/schema/topological_sort.lua\",\n    [\"kong.db.strategies\"] = \"kong/db/strategies/init.lua\",\n    [\"kong.db.strategies.connector\"] = \"kong/db/strategies/connector.lua\",\n    [\"kong.db.strategies.postgres\"] = \"kong/db/strategies/postgres/init.lua\",\n    [\"kong.db.strategies.postgres.connector\"] = \"kong/db/strategies/postgres/connector.lua\",\n    [\"kong.db.strategies.postgres.tags\"] = \"kong/db/strategies/postgres/tags.lua\",\n    [\"kong.db.strategies.postgres.services\"] = \"kong/db/strategies/postgres/services.lua\",\n    [\"kong.db.strategies.postgres.plugins\"] = \"kong/db/strategies/postgres/plugins.lua\",\n    [\"kong.db.strategies.off\"] = \"kong/db/strategies/off/init.lua\",\n    [\"kong.db.strategies.off.connector\"] = \"kong/db/strategies/off/connector.lua\",\n    [\"kong.db.strategies.off.tags\"] = \"kong/db/strategies/off/tags.lua\",\n\n    [\"kong.db.migrations.state\"] = \"kong/db/migrations/state.lua\",\n    [\"kong.db.migrations.subsystems\"] = \"kong/db/migrations/subsystems.lua\",\n    [\"kong.db.migrations.core\"] = \"kong/db/migrations/core/init.lua\",\n    [\"kong.db.migrations.core.000_base\"] = \"kong/db/migrations/core/000_base.lua\",\n    [\"kong.db.migrations.core.003_100_to_110\"] = \"kong/db/migrations/core/003_100_to_110.lua\",\n    [\"kong.db.migrations.core.004_110_to_120\"] = \"kong/db/migrations/core/004_110_to_120.lua\",\n    [\"kong.db.migrations.core.005_120_to_130\"] = \"kong/db/migrations/core/005_120_to_130.lua\",\n    [\"kong.db.migrations.core.006_130_to_140\"] = \"kong/db/migrations/core/006_130_to_140.lua\",\n    [\"kong.db.migrations.core.007_140_to_150\"] = \"kong/db/migrations/core/007_140_to_150.lua\",\n    [\"kong.db.migrations.core.008_150_to_200\"] = \"kong/db/migrations/core/008_150_to_200.lua\",\n    [\"kong.db.migrations.core.009_200_to_210\"] = \"kong/db/migrations/core/009_200_to_210.lua\",\n    [\"kong.db.migrations.core.010_210_to_211\"] = \"kong/db/migrations/core/010_210_to_211.lua\",\n    [\"kong.db.migrations.core.011_212_to_213\"] = \"kong/db/migrations/core/011_212_to_213.lua\",\n    [\"kong.db.migrations.core.012_213_to_220\"] = \"kong/db/migrations/core/012_213_to_220.lua\",\n    [\"kong.db.migrations.core.013_220_to_230\"] = \"kong/db/migrations/core/013_220_to_230.lua\",\n    [\"kong.db.migrations.core.014_230_to_270\"] = \"kong/db/migrations/core/014_230_to_270.lua\",\n    [\"kong.db.migrations.core.015_270_to_280\"] = \"kong/db/migrations/core/015_270_to_280.lua\",\n    [\"kong.db.migrations.core.016_280_to_300\"] = \"kong/db/migrations/core/016_280_to_300.lua\",\n    [\"kong.db.migrations.core.017_300_to_310\"] = \"kong/db/migrations/core/017_300_to_310.lua\",\n    [\"kong.db.migrations.core.018_310_to_320\"] = \"kong/db/migrations/core/018_310_to_320.lua\",\n    [\"kong.db.migrations.core.019_320_to_330\"] = \"kong/db/migrations/core/019_320_to_330.lua\",\n    [\"kong.db.migrations.core.020_330_to_340\"] = \"kong/db/migrations/core/020_330_to_340.lua\",\n    [\"kong.db.migrations.core.021_340_to_350\"] = \"kong/db/migrations/core/021_340_to_350.lua\",\n    [\"kong.db.migrations.core.022_350_to_360\"] = \"kong/db/migrations/core/022_350_to_360.lua\",\n    [\"kong.db.migrations.core.023_360_to_370\"] = \"kong/db/migrations/core/023_360_to_370.lua\",\n    [\"kong.db.migrations.core.024_380_to_390\"] = \"kong/db/migrations/core/024_380_to_390.lua\",\n    [\"kong.db.migrations.core.025_390_to_3100\"] = \"kong/db/migrations/core/025_390_to_3100.lua\",\n    [\"kong.db.migrations.operations.200_to_210\"] = \"kong/db/migrations/operations/200_to_210.lua\",\n    [\"kong.db.migrations.operations.212_to_213\"] = \"kong/db/migrations/operations/212_to_213.lua\",\n    [\"kong.db.migrations.operations.280_to_300\"] = \"kong/db/migrations/operations/280_to_300.lua\",\n    [\"kong.db.migrations.operations.331_to_332\"] = \"kong/db/migrations/operations/331_to_332.lua\",\n    [\"kong.db.migrations.migrate_path_280_300\"] = \"kong/db/migrations/migrate_path_280_300.lua\",\n    [\"kong.db.declarative.migrations\"] = \"kong/db/declarative/migrations/init.lua\",\n    [\"kong.db.declarative.migrations.route_path\"] = \"kong/db/declarative/migrations/route_path.lua\",\n\n    [\"kong.pdk\"] = \"kong/pdk/init.lua\",\n    [\"kong.pdk.private.checks\"] = \"kong/pdk/private/checks.lua\",\n    [\"kong.pdk.private.phases\"] = \"kong/pdk/private/phases.lua\",\n    [\"kong.pdk.private.node\"] = \"kong/pdk/private/node.lua\",\n    [\"kong.pdk.private.rate_limiting\"] = \"kong/pdk/private/rate_limiting.lua\",\n    [\"kong.pdk.client\"] = \"kong/pdk/client.lua\",\n    [\"kong.pdk.client.tls\"] = \"kong/pdk/client/tls.lua\",\n    [\"kong.pdk.ctx\"] = \"kong/pdk/ctx.lua\",\n    [\"kong.pdk.ip\"] = \"kong/pdk/ip.lua\",\n    [\"kong.pdk.log\"] = \"kong/pdk/log.lua\",\n    [\"kong.pdk.service\"] = \"kong/pdk/service.lua\",\n    [\"kong.pdk.service.request\"] = \"kong/pdk/service/request.lua\",\n    [\"kong.pdk.service.response\"] = \"kong/pdk/service/response.lua\",\n    [\"kong.pdk.router\"] = \"kong/pdk/router.lua\",\n    [\"kong.pdk.request\"] = \"kong/pdk/request.lua\",\n    [\"kong.pdk.response\"] = \"kong/pdk/response.lua\",\n    [\"kong.pdk.table\"] = \"kong/pdk/table.lua\",\n    [\"kong.pdk.node\"] = \"kong/pdk/node.lua\",\n    [\"kong.pdk.nginx\"] = \"kong/pdk/nginx.lua\",\n    [\"kong.pdk.cluster\"] = \"kong/pdk/cluster.lua\",\n    [\"kong.pdk.vault\"] = \"kong/pdk/vault.lua\",\n    [\"kong.pdk.tracing\"] = \"kong/pdk/tracing.lua\",\n    [\"kong.pdk.plugin\"] = \"kong/pdk/plugin.lua\",\n    [\"kong.pdk.telemetry\"] = \"kong/pdk/telemetry.lua\",\n\n    [\"kong.plugins.basic-auth.migrations\"] = \"kong/plugins/basic-auth/migrations/init.lua\",\n    [\"kong.plugins.basic-auth.migrations.000_base_basic_auth\"] = \"kong/plugins/basic-auth/migrations/000_base_basic_auth.lua\",\n    [\"kong.plugins.basic-auth.migrations.002_130_to_140\"] = \"kong/plugins/basic-auth/migrations/002_130_to_140.lua\",\n    [\"kong.plugins.basic-auth.migrations.003_200_to_210\"] = \"kong/plugins/basic-auth/migrations/003_200_to_210.lua\",\n    [\"kong.plugins.basic-auth.crypto\"] = \"kong/plugins/basic-auth/crypto.lua\",\n    [\"kong.plugins.basic-auth.handler\"] = \"kong/plugins/basic-auth/handler.lua\",\n    [\"kong.plugins.basic-auth.access\"] = \"kong/plugins/basic-auth/access.lua\",\n    [\"kong.plugins.basic-auth.schema\"] = \"kong/plugins/basic-auth/schema.lua\",\n    [\"kong.plugins.basic-auth.daos\"] = \"kong/plugins/basic-auth/daos.lua\",\n\n    [\"kong.plugins.key-auth.migrations\"] = \"kong/plugins/key-auth/migrations/init.lua\",\n    [\"kong.plugins.key-auth.migrations.000_base_key_auth\"] = \"kong/plugins/key-auth/migrations/000_base_key_auth.lua\",\n    [\"kong.plugins.key-auth.migrations.002_130_to_140\"] = \"kong/plugins/key-auth/migrations/002_130_to_140.lua\",\n    [\"kong.plugins.key-auth.migrations.003_200_to_210\"] = \"kong/plugins/key-auth/migrations/003_200_to_210.lua\",\n    [\"kong.plugins.key-auth.migrations.004_320_to_330\"] = \"kong/plugins/key-auth/migrations/004_320_to_330.lua\",\n    [\"kong.plugins.key-auth.handler\"] = \"kong/plugins/key-auth/handler.lua\",\n    [\"kong.plugins.key-auth.schema\"] = \"kong/plugins/key-auth/schema.lua\",\n    [\"kong.plugins.key-auth.daos\"] = \"kong/plugins/key-auth/daos.lua\",\n\n    [\"kong.plugins.oauth2.migrations\"] = \"kong/plugins/oauth2/migrations/init.lua\",\n    [\"kong.plugins.oauth2.migrations.000_base_oauth2\"] = \"kong/plugins/oauth2/migrations/000_base_oauth2.lua\",\n    [\"kong.plugins.oauth2.migrations.003_130_to_140\"] = \"kong/plugins/oauth2/migrations/003_130_to_140.lua\",\n    [\"kong.plugins.oauth2.migrations.004_200_to_210\"] = \"kong/plugins/oauth2/migrations/004_200_to_210.lua\",\n    [\"kong.plugins.oauth2.migrations.005_210_to_211\"] = \"kong/plugins/oauth2/migrations/005_210_to_211.lua\",\n    [\"kong.plugins.oauth2.migrations.006_320_to_330\"] = \"kong/plugins/oauth2/migrations/006_320_to_330.lua\",\n    [\"kong.plugins.oauth2.migrations.007_320_to_330\"] = \"kong/plugins/oauth2/migrations/007_320_to_330.lua\",\n    [\"kong.plugins.oauth2.handler\"] = \"kong/plugins/oauth2/handler.lua\",\n    [\"kong.plugins.oauth2.secret\"] = \"kong/plugins/oauth2/secret.lua\",\n    [\"kong.plugins.oauth2.access\"] = \"kong/plugins/oauth2/access.lua\",\n    [\"kong.plugins.oauth2.schema\"] = \"kong/plugins/oauth2/schema.lua\",\n    [\"kong.plugins.oauth2.daos\"] = \"kong/plugins/oauth2/daos.lua\",\n    [\"kong.plugins.oauth2.daos.oauth2_tokens\"] = \"kong/plugins/oauth2/daos/oauth2_tokens.lua\",\n\n    [\"kong.plugins.tcp-log.handler\"] = \"kong/plugins/tcp-log/handler.lua\",\n    [\"kong.plugins.tcp-log.schema\"] = \"kong/plugins/tcp-log/schema.lua\",\n\n    [\"kong.plugins.udp-log.handler\"] = \"kong/plugins/udp-log/handler.lua\",\n    [\"kong.plugins.udp-log.schema\"] = \"kong/plugins/udp-log/schema.lua\",\n\n    [\"kong.plugins.http-log.handler\"] = \"kong/plugins/http-log/handler.lua\",\n    [\"kong.plugins.http-log.schema\"] = \"kong/plugins/http-log/schema.lua\",\n    [\"kong.plugins.http-log.migrations\"] = \"kong/plugins/http-log/migrations/init.lua\",\n    [\"kong.plugins.http-log.migrations.001_280_to_300\"] = \"kong/plugins/http-log/migrations/001_280_to_300.lua\",\n\n    [\"kong.plugins.file-log.handler\"] = \"kong/plugins/file-log/handler.lua\",\n    [\"kong.plugins.file-log.schema\"] = \"kong/plugins/file-log/schema.lua\",\n\n    [\"kong.plugins.rate-limiting.migrations\"] = \"kong/plugins/rate-limiting/migrations/init.lua\",\n    [\"kong.plugins.rate-limiting.migrations.000_base_rate_limiting\"] = \"kong/plugins/rate-limiting/migrations/000_base_rate_limiting.lua\",\n    [\"kong.plugins.rate-limiting.migrations.003_10_to_112\"] = \"kong/plugins/rate-limiting/migrations/003_10_to_112.lua\",\n    [\"kong.plugins.rate-limiting.migrations.004_200_to_210\"] = \"kong/plugins/rate-limiting/migrations/004_200_to_210.lua\",\n    [\"kong.plugins.rate-limiting.migrations.005_320_to_330\"] = \"kong/plugins/rate-limiting/migrations/005_320_to_330.lua\",\n    [\"kong.plugins.rate-limiting.migrations.006_350_to_360\"] = \"kong/plugins/rate-limiting/migrations/006_350_to_360.lua\",\n    [\"kong.plugins.rate-limiting.expiration\"] = \"kong/plugins/rate-limiting/expiration.lua\",\n    [\"kong.plugins.rate-limiting.handler\"] = \"kong/plugins/rate-limiting/handler.lua\",\n    [\"kong.plugins.rate-limiting.schema\"] = \"kong/plugins/rate-limiting/schema.lua\",\n    [\"kong.plugins.rate-limiting.daos\"] = \"kong/plugins/rate-limiting/daos.lua\",\n    [\"kong.plugins.rate-limiting.policies\"] = \"kong/plugins/rate-limiting/policies/init.lua\",\n    [\"kong.plugins.rate-limiting.policies.cluster\"] = \"kong/plugins/rate-limiting/policies/cluster.lua\",\n    [\"kong.plugins.rate-limiting.clustering.compat.redis_translation\"] = \"kong/plugins/rate-limiting/clustering/compat/redis_translation.lua\",\n\n    [\"kong.plugins.response-ratelimiting.migrations\"] = \"kong/plugins/response-ratelimiting/migrations/init.lua\",\n    [\"kong.plugins.response-ratelimiting.migrations.000_base_response_rate_limiting\"] = \"kong/plugins/response-ratelimiting/migrations/000_base_response_rate_limiting.lua\",\n    [\"kong.plugins.response-ratelimiting.migrations.001_350_to_360\"] = \"kong/plugins/response-ratelimiting/migrations/001_350_to_360.lua\",\n    [\"kong.plugins.response-ratelimiting.handler\"] = \"kong/plugins/response-ratelimiting/handler.lua\",\n    [\"kong.plugins.response-ratelimiting.access\"] = \"kong/plugins/response-ratelimiting/access.lua\",\n    [\"kong.plugins.response-ratelimiting.header_filter\"] = \"kong/plugins/response-ratelimiting/header_filter.lua\",\n    [\"kong.plugins.response-ratelimiting.log\"] = \"kong/plugins/response-ratelimiting/log.lua\",\n    [\"kong.plugins.response-ratelimiting.schema\"] = \"kong/plugins/response-ratelimiting/schema.lua\",\n    [\"kong.plugins.response-ratelimiting.policies\"] = \"kong/plugins/response-ratelimiting/policies/init.lua\",\n    [\"kong.plugins.response-ratelimiting.policies.cluster\"] = \"kong/plugins/response-ratelimiting/policies/cluster.lua\",\n    [\"kong.plugins.response-ratelimiting.clustering.compat.redis_translation\"] = \"kong/plugins/response-ratelimiting/clustering/compat/redis_translation.lua\",\n\n    [\"kong.plugins.request-size-limiting.handler\"] = \"kong/plugins/request-size-limiting/handler.lua\",\n    [\"kong.plugins.request-size-limiting.schema\"] = \"kong/plugins/request-size-limiting/schema.lua\",\n\n    [\"kong.plugins.response-transformer.handler\"] = \"kong/plugins/response-transformer/handler.lua\",\n    [\"kong.plugins.response-transformer.body_transformer\"] = \"kong/plugins/response-transformer/body_transformer.lua\",\n    [\"kong.plugins.response-transformer.header_transformer\"] = \"kong/plugins/response-transformer/header_transformer.lua\",\n    [\"kong.plugins.response-transformer.schema\"] = \"kong/plugins/response-transformer/schema.lua\",\n\n    [\"kong.plugins.cors.handler\"] = \"kong/plugins/cors/handler.lua\",\n    [\"kong.plugins.cors.schema\"] = \"kong/plugins/cors/schema.lua\",\n\n    [\"kong.plugins.ip-restriction.handler\"] = \"kong/plugins/ip-restriction/handler.lua\",\n    [\"kong.plugins.ip-restriction.schema\"] = \"kong/plugins/ip-restriction/schema.lua\",\n    [\"kong.plugins.ip-restriction.migrations\"] = \"kong/plugins/ip-restriction/migrations/init.lua\",\n    [\"kong.plugins.ip-restriction.migrations.001_200_to_210\"] = \"kong/plugins/ip-restriction/migrations/001_200_to_210.lua\",\n\n    [\"kong.plugins.acl.migrations\"] = \"kong/plugins/acl/migrations/init.lua\",\n    [\"kong.plugins.acl.migrations.000_base_acl\"] = \"kong/plugins/acl/migrations/000_base_acl.lua\",\n    [\"kong.plugins.acl.migrations.002_130_to_140\"] = \"kong/plugins/acl/migrations/002_130_to_140.lua\",\n    [\"kong.plugins.acl.migrations.003_200_to_210\"] = \"kong/plugins/acl/migrations/003_200_to_210.lua\",\n    [\"kong.plugins.acl.migrations.004_212_to_213\"] = \"kong/plugins/acl/migrations/004_212_to_213.lua\",\n    [\"kong.plugins.acl.handler\"] = \"kong/plugins/acl/handler.lua\",\n    [\"kong.plugins.acl.schema\"] = \"kong/plugins/acl/schema.lua\",\n    [\"kong.plugins.acl.daos\"] = \"kong/plugins/acl/daos.lua\",\n    [\"kong.plugins.acl.groups\"] = \"kong/plugins/acl/groups.lua\",\n    [\"kong.plugins.acl.acls\"] = \"kong/plugins/acl/acls.lua\",\n    [\"kong.plugins.acl.api\"] = \"kong/plugins/acl/api.lua\",\n\n    [\"kong.plugins.correlation-id.handler\"] = \"kong/plugins/correlation-id/handler.lua\",\n    [\"kong.plugins.correlation-id.schema\"] = \"kong/plugins/correlation-id/schema.lua\",\n\n    [\"kong.plugins.jwt.migrations\"] = \"kong/plugins/jwt/migrations/init.lua\",\n    [\"kong.plugins.jwt.migrations.000_base_jwt\"] = \"kong/plugins/jwt/migrations/000_base_jwt.lua\",\n    [\"kong.plugins.jwt.migrations.002_130_to_140\"] = \"kong/plugins/jwt/migrations/002_130_to_140.lua\",\n    [\"kong.plugins.jwt.migrations.003_200_to_210\"] = \"kong/plugins/jwt/migrations/003_200_to_210.lua\",\n    [\"kong.plugins.jwt.handler\"] = \"kong/plugins/jwt/handler.lua\",\n    [\"kong.plugins.jwt.schema\"] = \"kong/plugins/jwt/schema.lua\",\n    [\"kong.plugins.jwt.daos\"] = \"kong/plugins/jwt/daos.lua\",\n    [\"kong.plugins.jwt.jwt_parser\"] = \"kong/plugins/jwt/jwt_parser.lua\",\n\n    [\"kong.plugins.hmac-auth.migrations\"] = \"kong/plugins/hmac-auth/migrations/init.lua\",\n    [\"kong.plugins.hmac-auth.migrations.000_base_hmac_auth\"] = \"kong/plugins/hmac-auth/migrations/000_base_hmac_auth.lua\",\n    [\"kong.plugins.hmac-auth.migrations.002_130_to_140\"] = \"kong/plugins/hmac-auth/migrations/002_130_to_140.lua\",\n    [\"kong.plugins.hmac-auth.migrations.003_200_to_210\"] = \"kong/plugins/hmac-auth/migrations/003_200_to_210.lua\",\n    [\"kong.plugins.hmac-auth.handler\"] = \"kong/plugins/hmac-auth/handler.lua\",\n    [\"kong.plugins.hmac-auth.access\"] = \"kong/plugins/hmac-auth/access.lua\",\n    [\"kong.plugins.hmac-auth.schema\"] = \"kong/plugins/hmac-auth/schema.lua\",\n    [\"kong.plugins.hmac-auth.daos\"] = \"kong/plugins/hmac-auth/daos.lua\",\n\n    [\"kong.plugins.ldap-auth.handler\"] = \"kong/plugins/ldap-auth/handler.lua\",\n    [\"kong.plugins.ldap-auth.access\"] = \"kong/plugins/ldap-auth/access.lua\",\n    [\"kong.plugins.ldap-auth.schema\"] = \"kong/plugins/ldap-auth/schema.lua\",\n    [\"kong.plugins.ldap-auth.ldap\"] = \"kong/plugins/ldap-auth/ldap.lua\",\n    [\"kong.plugins.ldap-auth.asn1\"] = \"kong/plugins/ldap-auth/asn1.lua\",\n\n    [\"kong.plugins.syslog.handler\"] = \"kong/plugins/syslog/handler.lua\",\n    [\"kong.plugins.syslog.schema\"] = \"kong/plugins/syslog/schema.lua\",\n\n    [\"kong.plugins.loggly.handler\"] = \"kong/plugins/loggly/handler.lua\",\n    [\"kong.plugins.loggly.schema\"] = \"kong/plugins/loggly/schema.lua\",\n\n    [\"kong.plugins.datadog.handler\"] = \"kong/plugins/datadog/handler.lua\",\n    [\"kong.plugins.datadog.schema\"] = \"kong/plugins/datadog/schema.lua\",\n    [\"kong.plugins.datadog.statsd_logger\"] = \"kong/plugins/datadog/statsd_logger.lua\",\n\n    [\"kong.plugins.statsd.constants\"] = \"kong/plugins/statsd/constants.lua\",\n    [\"kong.plugins.statsd.handler\"] = \"kong/plugins/statsd/handler.lua\",\n    [\"kong.plugins.statsd.log\"] = \"kong/plugins/statsd/log.lua\",\n    [\"kong.plugins.statsd.schema\"] = \"kong/plugins/statsd/schema.lua\",\n    [\"kong.plugins.statsd.statsd_logger\"] = \"kong/plugins/statsd/statsd_logger.lua\",\n\n    [\"kong.plugins.bot-detection.handler\"] = \"kong/plugins/bot-detection/handler.lua\",\n    [\"kong.plugins.bot-detection.schema\"] = \"kong/plugins/bot-detection/schema.lua\",\n    [\"kong.plugins.bot-detection.rules\"] = \"kong/plugins/bot-detection/rules.lua\",\n    [\"kong.plugins.bot-detection.migrations\"] = \"kong/plugins/bot-detection/migrations/init.lua\",\n    [\"kong.plugins.bot-detection.migrations.001_200_to_210\"] = \"kong/plugins/bot-detection/migrations/001_200_to_210.lua\",\n\n    [\"kong.plugins.request-termination.handler\"] = \"kong/plugins/request-termination/handler.lua\",\n    [\"kong.plugins.request-termination.schema\"] = \"kong/plugins/request-termination/schema.lua\",\n\n    [\"kong.plugins.aws-lambda.handler\"]              = \"kong/plugins/aws-lambda/handler.lua\",\n    [\"kong.plugins.aws-lambda.schema\"]               = \"kong/plugins/aws-lambda/schema.lua\",\n    [\"kong.plugins.aws-lambda.request-util\"]         = \"kong/plugins/aws-lambda/request-util.lua\",\n\n    [\"kong.plugins.grpc-gateway.deco\"] = \"kong/plugins/grpc-gateway/deco.lua\",\n    [\"kong.plugins.grpc-gateway.handler\"] = \"kong/plugins/grpc-gateway/handler.lua\",\n    [\"kong.plugins.grpc-gateway.schema\"] = \"kong/plugins/grpc-gateway/schema.lua\",\n\n    [\"kong.plugins.acme.api\"] = \"kong/plugins/acme/api.lua\",\n    [\"kong.plugins.acme.client\"] = \"kong/plugins/acme/client.lua\",\n    [\"kong.plugins.acme.clustering.compat.redis_translation\"] = \"kong/plugins/acme/clustering/compat/redis_translation.lua\",\n    [\"kong.plugins.acme.daos\"] = \"kong/plugins/acme/daos.lua\",\n    [\"kong.plugins.acme.handler\"] = \"kong/plugins/acme/handler.lua\",\n    [\"kong.plugins.acme.migrations.000_base_acme\"] = \"kong/plugins/acme/migrations/000_base_acme.lua\",\n    [\"kong.plugins.acme.migrations.001_280_to_300\"] = \"kong/plugins/acme/migrations/001_280_to_300.lua\",\n    [\"kong.plugins.acme.migrations.002_320_to_330\"] = \"kong/plugins/acme/migrations/002_320_to_330.lua\",\n    [\"kong.plugins.acme.migrations.003_350_to_360\"] = \"kong/plugins/acme/migrations/003_350_to_360.lua\",\n    [\"kong.plugins.acme.migrations\"] = \"kong/plugins/acme/migrations/init.lua\",\n    [\"kong.plugins.acme.schema\"] = \"kong/plugins/acme/schema.lua\",\n    [\"kong.plugins.acme.storage.kong\"] = \"kong/plugins/acme/storage/kong.lua\",\n    [\"kong.plugins.acme.storage.config_adapters\"] = \"kong/plugins/acme/storage/config_adapters/init.lua\",\n    [\"kong.plugins.acme.storage.config_adapters.redis\"] = \"kong/plugins/acme/storage/config_adapters/redis.lua\",\n    [\"kong.plugins.acme.reserved_words\"] = \"kong/plugins/acme/reserved_words.lua\",\n\n    [\"kong.plugins.prometheus.api\"] = \"kong/plugins/prometheus/api.lua\",\n    [\"kong.plugins.prometheus.status_api\"] = \"kong/plugins/prometheus/status_api.lua\",\n    [\"kong.plugins.prometheus.exporter\"] = \"kong/plugins/prometheus/exporter.lua\",\n    [\"kong.plugins.prometheus.handler\"] = \"kong/plugins/prometheus/handler.lua\",\n    [\"kong.plugins.prometheus.prometheus\"] = \"kong/plugins/prometheus/prometheus.lua\",\n    [\"kong.plugins.prometheus.serve\"] = \"kong/plugins/prometheus/serve.lua\",\n    [\"kong.plugins.prometheus.schema\"] = \"kong/plugins/prometheus/schema.lua\",\n    [\"kong.plugins.prometheus.wasmx\"] = \"kong/plugins/prometheus/wasmx.lua\",\n\n    [\"kong.plugins.session.handler\"] = \"kong/plugins/session/handler.lua\",\n    [\"kong.plugins.session.schema\"] = \"kong/plugins/session/schema.lua\",\n    [\"kong.plugins.session.access\"] = \"kong/plugins/session/access.lua\",\n    [\"kong.plugins.session.header_filter\"] = \"kong/plugins/session/header_filter.lua\",\n    [\"kong.plugins.session.session\"] = \"kong/plugins/session/session.lua\",\n    [\"kong.plugins.session.daos\"] = \"kong/plugins/session/daos.lua\",\n    [\"kong.plugins.session.daos.session_metadatas\"] = \"kong/plugins/session/daos/session_metadatas.lua\",\n    [\"kong.plugins.session.strategies.postgres.session_metadatas\"] = \"kong/plugins/session/strategies/postgres/session_metadatas.lua\",\n    [\"kong.plugins.session.storage.kong\"] = \"kong/plugins/session/storage/kong.lua\",\n    [\"kong.plugins.session.migrations.000_base_session\"] = \"kong/plugins/session/migrations/000_base_session.lua\",\n    [\"kong.plugins.session.migrations.001_add_ttl_index\"] = \"kong/plugins/session/migrations/001_add_ttl_index.lua\",\n    [\"kong.plugins.session.migrations.002_320_to_330\"] = \"kong/plugins/session/migrations/002_320_to_330.lua\",\n    [\"kong.plugins.session.migrations.003_330_to_3100\"] = \"kong/plugins/session/migrations/003_330_to_3100.lua\",\n    [\"kong.plugins.session.migrations\"] = \"kong/plugins/session/migrations/init.lua\",\n\n    [\"kong.plugins.proxy-cache.handler\"]              = \"kong/plugins/proxy-cache/handler.lua\",\n    [\"kong.plugins.proxy-cache.cache_key\"]            = \"kong/plugins/proxy-cache/cache_key.lua\",\n    [\"kong.plugins.proxy-cache.schema\"]               = \"kong/plugins/proxy-cache/schema.lua\",\n    [\"kong.plugins.proxy-cache.api\"]                  = \"kong/plugins/proxy-cache/api.lua\",\n    [\"kong.plugins.proxy-cache.strategies\"]           = \"kong/plugins/proxy-cache/strategies/init.lua\",\n    [\"kong.plugins.proxy-cache.strategies.memory\"]    = \"kong/plugins/proxy-cache/strategies/memory.lua\",\n\n    [\"kong.plugins.grpc-web.deco\"] = \"kong/plugins/grpc-web/deco.lua\",\n    [\"kong.plugins.grpc-web.handler\"] = \"kong/plugins/grpc-web/handler.lua\",\n    [\"kong.plugins.grpc-web.schema\"] = \"kong/plugins/grpc-web/schema.lua\",\n\n    [\"kong.plugins.pre-function._handler\"] = \"kong/plugins/pre-function/_handler.lua\",\n    [\"kong.plugins.pre-function._schema\"] = \"kong/plugins/pre-function/_schema.lua\",\n    [\"kong.plugins.pre-function.migrations._001_280_to_300\"] = \"kong/plugins/pre-function/migrations/_001_280_to_300.lua\",\n\n    [\"kong.plugins.pre-function.handler\"] = \"kong/plugins/pre-function/handler.lua\",\n    [\"kong.plugins.pre-function.schema\"] = \"kong/plugins/pre-function/schema.lua\",\n    [\"kong.plugins.pre-function.migrations\"] = \"kong/plugins/pre-function/migrations/init.lua\",\n    [\"kong.plugins.pre-function.migrations.001_280_to_300\"] = \"kong/plugins/pre-function/migrations/001_280_to_300.lua\",\n\n    [\"kong.plugins.post-function.handler\"] = \"kong/plugins/post-function/handler.lua\",\n    [\"kong.plugins.post-function.schema\"] = \"kong/plugins/post-function/schema.lua\",\n    [\"kong.plugins.post-function.migrations\"] = \"kong/plugins/post-function/migrations/init.lua\",\n    [\"kong.plugins.post-function.migrations.001_280_to_300\"] = \"kong/plugins/post-function/migrations/001_280_to_300.lua\",\n\n    [\"kong.plugins.zipkin.handler\"] = \"kong/plugins/zipkin/handler.lua\",\n    [\"kong.plugins.zipkin.reporter\"] = \"kong/plugins/zipkin/reporter.lua\",\n    [\"kong.plugins.zipkin.span\"] = \"kong/plugins/zipkin/span.lua\",\n    [\"kong.plugins.zipkin.schema\"] = \"kong/plugins/zipkin/schema.lua\",\n    [\"kong.plugins.zipkin.request_tags\"] = \"kong/plugins/zipkin/request_tags.lua\",\n\n    [\"kong.plugins.request-transformer.migrations.postgres\"] = \"kong/plugins/request-transformer/migrations/postgres.lua\",\n    [\"kong.plugins.request-transformer.migrations.common\"] = \"kong/plugins/request-transformer/migrations/common.lua\",\n    [\"kong.plugins.request-transformer.handler\"] = \"kong/plugins/request-transformer/handler.lua\",\n    [\"kong.plugins.request-transformer.access\"] = \"kong/plugins/request-transformer/access.lua\",\n    [\"kong.plugins.request-transformer.schema\"] = \"kong/plugins/request-transformer/schema.lua\",\n\n    [\"kong.plugins.azure-functions.handler\"] = \"kong/plugins/azure-functions/handler.lua\",\n    [\"kong.plugins.azure-functions.schema\"]  = \"kong/plugins/azure-functions/schema.lua\",\n\n    [\"kong.plugins.opentelemetry.migrations\"] = \"kong/plugins/opentelemetry/migrations/init.lua\",\n    [\"kong.plugins.opentelemetry.migrations.001_331_to_332\"] = \"kong/plugins/opentelemetry/migrations/001_331_to_332.lua\",\n    [\"kong.plugins.opentelemetry.handler\"] = \"kong/plugins/opentelemetry/handler.lua\",\n    [\"kong.plugins.opentelemetry.schema\"]  = \"kong/plugins/opentelemetry/schema.lua\",\n    [\"kong.plugins.opentelemetry.traces\"] = \"kong/plugins/opentelemetry/traces.lua\",\n    [\"kong.plugins.opentelemetry.logs\"] = \"kong/plugins/opentelemetry/logs.lua\",\n    [\"kong.plugins.opentelemetry.utils\"] = \"kong/plugins/opentelemetry/utils.lua\",\n\n    [\"kong.plugins.ai-proxy.handler\"] = \"kong/plugins/ai-proxy/handler.lua\",\n    [\"kong.plugins.ai-proxy.schema\"] = \"kong/plugins/ai-proxy/schema.lua\",\n    [\"kong.plugins.ai-proxy.migrations\"] = \"kong/plugins/ai-proxy/migrations/init.lua\",\n    [\"kong.plugins.ai-proxy.migrations.001_360_to_370\"] = \"kong/plugins/ai-proxy/migrations/001_360_to_370.lua\",\n\n    [\"kong.plugins.ai-request-transformer.handler\"] = \"kong/plugins/ai-request-transformer/handler.lua\",\n    [\"kong.plugins.ai-request-transformer.filters.transform-request\"] = \"kong/plugins/ai-request-transformer/filters/transform-request.lua\",\n    [\"kong.plugins.ai-request-transformer.schema\"] = \"kong/plugins/ai-request-transformer/schema.lua\",\n\n    [\"kong.plugins.ai-response-transformer.handler\"] = \"kong/plugins/ai-response-transformer/handler.lua\",\n    [\"kong.plugins.ai-response-transformer.filters.transform-response\"] = \"kong/plugins/ai-response-transformer/filters/transform-response.lua\",\n    [\"kong.plugins.ai-response-transformer.schema\"] = \"kong/plugins/ai-response-transformer/schema.lua\",\n\n    [\"kong.llm\"] = \"kong/llm/init.lua\",\n    [\"kong.llm.schemas\"] = \"kong/llm/schemas/init.lua\",\n    [\"kong.llm.drivers.shared\"] = \"kong/llm/drivers/shared.lua\",\n    [\"kong.llm.drivers.openai\"] = \"kong/llm/drivers/openai.lua\",\n    [\"kong.llm.drivers.azure\"] = \"kong/llm/drivers/azure.lua\",\n    [\"kong.llm.drivers.cohere\"] = \"kong/llm/drivers/cohere.lua\",\n    [\"kong.llm.drivers.anthropic\"] = \"kong/llm/drivers/anthropic.lua\",\n    [\"kong.llm.drivers.mistral\"] = \"kong/llm/drivers/mistral.lua\",\n    [\"kong.llm.drivers.llama2\"] = \"kong/llm/drivers/llama2.lua\",\n    [\"kong.llm.drivers.gemini\"] = \"kong/llm/drivers/gemini.lua\",\n    [\"kong.llm.drivers.bedrock\"] = \"kong/llm/drivers/bedrock.lua\",\n    [\"kong.llm.drivers.huggingface\"] = \"kong/llm/drivers/huggingface.lua\",\n\n\n    [\"kong.llm.plugin.base\"] = \"kong/llm/plugin/base.lua\",\n    [\"kong.llm.plugin.ctx\"] = \"kong/llm/plugin/ctx.lua\",\n    [\"kong.llm.plugin.crud_handler\"] = \"kong/llm/plugin/crud_handler.lua\",\n    [\"kong.llm.plugin.observability\"] = \"kong/llm/plugin/observability.lua\",\n    [\"kong.llm.plugin.shared-filters.enable-buffering\"] = \"kong/llm/plugin/shared-filters/enable-buffering.lua\",\n    [\"kong.llm.plugin.shared-filters.normalize-json-response\"] = \"kong/llm/plugin/shared-filters/normalize-json-response.lua\",\n    [\"kong.llm.plugin.shared-filters.normalize-request\"] = \"kong/llm/plugin/shared-filters/normalize-request.lua\",\n    [\"kong.llm.plugin.shared-filters.normalize-response-header\"] = \"kong/llm/plugin/shared-filters/normalize-response-header.lua\",\n    [\"kong.llm.plugin.shared-filters.normalize-sse-chunk\"] = \"kong/llm/plugin/shared-filters/normalize-sse-chunk.lua\",\n    [\"kong.llm.plugin.shared-filters.parse-json-response\"] = \"kong/llm/plugin/shared-filters/parse-json-response.lua\",\n    [\"kong.llm.plugin.shared-filters.parse-request\"] = \"kong/llm/plugin/shared-filters/parse-request.lua\",\n    [\"kong.llm.plugin.shared-filters.parse-sse-chunk\"] = \"kong/llm/plugin/shared-filters/parse-sse-chunk.lua\",\n    [\"kong.llm.plugin.shared-filters.serialize-analytics\"] = \"kong/llm/plugin/shared-filters/serialize-analytics.lua\",\n\n    [\"kong.plugins.ai-prompt-template.handler\"] = \"kong/plugins/ai-prompt-template/handler.lua\",\n    [\"kong.plugins.ai-prompt-template.filters.render-prompt-template\"] = \"kong/plugins/ai-prompt-template/filters/render-prompt-template.lua\",\n    [\"kong.plugins.ai-prompt-template.schema\"]  = \"kong/plugins/ai-prompt-template/schema.lua\",\n    [\"kong.plugins.ai-prompt-template.templater\"]  = \"kong/plugins/ai-prompt-template/templater.lua\",\n\n    [\"kong.plugins.ai-prompt-decorator.handler\"] = \"kong/plugins/ai-prompt-decorator/handler.lua\",\n    [\"kong.plugins.ai-prompt-decorator.filters.decorate-prompt\"] = \"kong/plugins/ai-prompt-decorator/filters/decorate-prompt.lua\",\n    [\"kong.plugins.ai-prompt-decorator.schema\"]  = \"kong/plugins/ai-prompt-decorator/schema.lua\",\n\n    [\"kong.plugins.ai-prompt-guard.filters.guard-prompt\"] = \"kong/plugins/ai-prompt-guard/filters/guard-prompt.lua\",\n    [\"kong.plugins.ai-prompt-guard.handler\"] = \"kong/plugins/ai-prompt-guard/handler.lua\",\n    [\"kong.plugins.ai-prompt-guard.schema\"]  = \"kong/plugins/ai-prompt-guard/schema.lua\",\n\n    [\"kong.plugins.standard-webhooks.handler\"] = \"kong/plugins/standard-webhooks/handler.lua\",\n    [\"kong.plugins.standard-webhooks.internal\"] = \"kong/plugins/standard-webhooks/internal.lua\",\n    [\"kong.plugins.standard-webhooks.schema\"]  = \"kong/plugins/standard-webhooks/schema.lua\",\n\n    [\"kong.plugins.redirect.handler\"] = \"kong/plugins/redirect/handler.lua\",\n    [\"kong.plugins.redirect.schema\"]  = \"kong/plugins/redirect/schema.lua\",\n\n    [\"kong.vaults.env\"] = \"kong/vaults/env/init.lua\",\n    [\"kong.vaults.env.schema\"] = \"kong/vaults/env/schema.lua\",\n\n    [\"kong.observability.tracing.instrumentation\"] = \"kong/observability/tracing/instrumentation.lua\",\n    [\"kong.observability.tracing.propagation\"] = \"kong/observability/tracing/propagation/init.lua\",\n    [\"kong.observability.tracing.propagation.schema\"] = \"kong/observability/tracing/propagation/schema.lua\",\n    [\"kong.observability.tracing.propagation.utils\"] = \"kong/observability/tracing/propagation/utils.lua\",\n    [\"kong.observability.tracing.propagation.extractors._base\"] = \"kong/observability/tracing/propagation/extractors/_base.lua\",\n    [\"kong.observability.tracing.propagation.extractors.w3c\"] = \"kong/observability/tracing/propagation/extractors/w3c.lua\",\n    [\"kong.observability.tracing.propagation.extractors.b3\"] = \"kong/observability/tracing/propagation/extractors/b3.lua\",\n    [\"kong.observability.tracing.propagation.extractors.jaeger\"] = \"kong/observability/tracing/propagation/extractors/jaeger.lua\",\n    [\"kong.observability.tracing.propagation.extractors.ot\"] = \"kong/observability/tracing/propagation/extractors/ot.lua\",\n    [\"kong.observability.tracing.propagation.extractors.gcp\"] = \"kong/observability/tracing/propagation/extractors/gcp.lua\",\n    [\"kong.observability.tracing.propagation.extractors.aws\"] = \"kong/observability/tracing/propagation/extractors/aws.lua\",\n    [\"kong.observability.tracing.propagation.extractors.datadog\"] = \"kong/observability/tracing/propagation/extractors/datadog.lua\",\n    [\"kong.observability.tracing.propagation.injectors._base\"] = \"kong/observability/tracing/propagation/injectors/_base.lua\",\n    [\"kong.observability.tracing.propagation.injectors.w3c\"] = \"kong/observability/tracing/propagation/injectors/w3c.lua\",\n    [\"kong.observability.tracing.propagation.injectors.b3\"] = \"kong/observability/tracing/propagation/injectors/b3.lua\",\n    [\"kong.observability.tracing.propagation.injectors.b3-single\"] = \"kong/observability/tracing/propagation/injectors/b3-single.lua\",\n    [\"kong.observability.tracing.propagation.injectors.jaeger\"] = \"kong/observability/tracing/propagation/injectors/jaeger.lua\",\n    [\"kong.observability.tracing.propagation.injectors.ot\"] = \"kong/observability/tracing/propagation/injectors/ot.lua\",\n    [\"kong.observability.tracing.propagation.injectors.gcp\"] = \"kong/observability/tracing/propagation/injectors/gcp.lua\",\n    [\"kong.observability.tracing.propagation.injectors.aws\"] = \"kong/observability/tracing/propagation/injectors/aws.lua\",\n    [\"kong.observability.tracing.propagation.injectors.datadog\"] = \"kong/observability/tracing/propagation/injectors/datadog.lua\",\n    [\"kong.observability.tracing.request_id\"] = \"kong/observability/tracing/request_id.lua\",\n    [\"kong.observability.tracing.tracing_context\"] = \"kong/observability/tracing/tracing_context.lua\",\n\n    [\"kong.observability.logs\"] = \"kong/observability/logs.lua\",\n\n    [\"kong.observability.otlp.proto\"] = \"kong/observability/otlp/proto.lua\",\n    [\"kong.observability.otlp\"] = \"kong/observability/otlp/init.lua\",\n\n    [\"kong.timing\"] = \"kong/timing/init.lua\",\n    [\"kong.timing.context\"] = \"kong/timing/context.lua\",\n    [\"kong.timing.hooks\"] = \"kong/timing/hooks/init.lua\",\n    [\"kong.timing.hooks.dns\"] = \"kong/timing/hooks/dns.lua\",\n    [\"kong.timing.hooks.http\"] = \"kong/timing/hooks/http.lua\",\n    [\"kong.timing.hooks.redis\"] = \"kong/timing/hooks/redis.lua\",\n    [\"kong.timing.hooks.socket\"] = \"kong/timing/hooks/socket.lua\",\n\n    [\"kong.dynamic_hook\"] = \"kong/dynamic_hook/init.lua\",\n  }\n}\n"
        },
        {
          "name": "kong-admin-api.yml",
          "type": "blob",
          "size": 18.6,
          "content": "openapi: 3.1.0\ninfo:\n  version: 3.4.0\n  contact:\n    name: Kong\n    url: https://github.com/Kong/kong\n  title: Kong Admin API\n  license:\n    name: Apache 2.0\n    url: https://github.com/Kong/kong/blob/master/LICENSE\n  summary: Kong RESTful Admin API for administration purposes.\n  description: \"       {{site.base_gateway}} comes with an **internal** RESTful Admin\n    API for administration purposes.\\n        Requests to the Admin API can be sent\n    to any node in the cluster, and Kong will\\n        keep the configuration consistent\n    across all nodes.\\n\\n        - `8001` is the default port on which the Admin API\n    listens.\\n        - `8444` is the default port for HTTPS traffic to the Admin\n    API.\\n\\n        This API is designed for internal use and provides full control\n    over Kong, so\\n        care should be taken when setting up Kong environments\n    to avoid undue public\\n        exposure of this API. See [this document][secure-admin-api]\n    for a discussion\\n        of methods to secure the Admin API.\\n      \"\npaths:\n  /certificates/{certificates}/snis: []\n  /schemas/{db_entity_name}/validate:\n    post:\n      description: This method is not available when using DB-less mode.\n      summary: Validate a configuration against a schema\n  /targets/{targets}: []\n  /targets/{targets}/upstream: []\n  /certificates/{certificates}:\n    get: []\n    put:\n      description: This method is not available when using DB-less mode.\n    patch:\n      description: This method is not available when using DB-less mode.\n  /debug/node/log-level:\n    get:\n      summary: Retrieve node log level of a node\n  /upstreams/{upstreams}/health:\n    get:\n      summary: Show Upstream health for node\n  /consumers/{consumers}/plugins:\n    post:\n      description: This method is not available when using DB-less mode.\n  /services/{services}/plugins:\n    post:\n      description: This method is not available when using DB-less mode.\n  /schemas/plugins/{name}:\n    get:\n      summary: Retrieve Plugin Schema\n  /upstreams/{upstreams}/targets/all:\n    get:\n      summary: List all Targets\n  /schemas/{name}:\n    get:\n      summary: Retrieve Entity Schema\n  /plugins/enabled:\n    get:\n      summary: Retrieve Enabled Plugins\n  /tags/{tags}:\n    get:\n      summary: ' List entity IDs by tag '\n  /snis/{snis}/certificate: []\n  /endpoints:\n    get:\n      summary: List available endpoints\n  /plugins/{plugins}:\n    patch:\n      description: This method is not available when using DB-less mode.\n  /routes/{routes}/plugins:\n    post:\n      description: This method is not available when using DB-less mode.\n  /cache:\n    delete:\n      description: This method is not available when using DB-less mode.\n  /services/:services/plugins/:plugins:\n    patch: []\n  /consumers:\n    get: []\n  /consumers/{consumers}/plugins/{plugins}:\n    patch:\n      description: This method is not available when using DB-less mode.\n  /upstreams/{upstreams}/targets/{targets}:\n    get: []\n    put:\n      description: This method is not available when using DB-less mode.\n    delete:\n      description: This method is not available when using DB-less mode.\n      summary: Delete Target\n    patch:\n      description: This method is not available when using DB-less mode.\n      summary: Update Target\n  /upstreams/{upstreams}/targets/{targets}/healthy:\n    put:\n      description: This method is not available when using DB-less mode.\n      summary: Set target as healthy\n  /debug/node/log-level/{log_level}:\n    put:\n      description: This method is not available when using DB-less mode.\n      summary: Set log level of a single node\n  /upstreams/{upstreams}/targets/{targets}/{address}/unhealthy:\n    put:\n      description: This method is not available when using DB-less mode.\n      summary: Set target address as unhealthy\n  /upstreams/{upstreams}/targets/{targets}/unhealthy:\n    put:\n      description: This method is not available when using DB-less mode.\n      summary: Set target as unhealthy\n  /certificates/{certificates}/snis/{snis}: []\n  /upstreams/{upstreams}/targets:\n    get: []\n    post:\n      description: This method is not available when using DB-less mode.\n  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:\n    put:\n      description: This method is not available when using DB-less mode.\n      summary: Set target address as healthy\n  /cache/{key}:\n    delete:\n      description: This method is not available when using DB-less mode.\n    get: []\n  /:\n    get:\n      summary: Retrieve node information\n  /debug/cluster/log-level/{log_level}:\n    put:\n      description: This method is not available when using DB-less mode.\n      summary: Set node log level of all nodes\n  /schemas/plugins/validate:\n    post:\n      description: This method is not available when using DB-less mode.\n      summary: Validate a plugin configuration against the schema\n  /clustering/status: []\n  /timers:\n    get:\n      summary: Retrieve runtime debugging info of Kong's timers\n  /targets: []\n  /status:\n    get:\n      summary: Retrieve node status\n  /plugins:\n    post:\n      description: This method is not available when using DB-less mode.\n  /clustering/data-planes: []\n  /config:\n    get:\n      description: This method is only available when using DB-less mode.\n    post:\n      description: This method is only available when using DB-less mode.\n  /routes/{routes}/plugins/{plugins}:\n    patch:\n      description: This method is not available when using DB-less mode.\n  /filter-chains:\n    post:\n      description: This method is not available when using DB-less mode.\n  /filter-chains/{filter_chains}:\n    patch:\n      description: This method is not available when using DB-less mode.\n    delete:\n      description: This method is not available when using DB-less mode.\n  /services/{services}/filter-chains:\n    post:\n      description: This method is not available when using DB-less mode.\n  /services/{services}/filter-chains/{filter_chains}:\n    patch:\n      description: This method is not available when using DB-less mode.\n    delete:\n      description: This method is not available when using DB-less mode.\n  /routes/{routes}/filter-chains:\n    post:\n      description: This method is not available when using DB-less mode.\n  /routes/{routes}/filter-chains/{filter_chains}:\n    patch:\n      description: This method is not available when using DB-less mode.\n    delete:\n      description: This method is not available when using DB-less mode.\ncomponents:\n  schemas:\n    key_sets:\n      type: object\n      properties:\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        name:\n          type: string\n        created_at:\n          format: int32\n          type: integer\n        updated_at:\n          format: int32\n          type: integer\n      required: []\n    clustering_data_planes:\n      type: object\n      properties:\n        version:\n          type: string\n        last_seen:\n          format: int32\n          type: integer\n        config_hash:\n          type: string\n        sync_status:\n          default: unknown\n          type: string\n        id:\n          type: string\n        updated_at:\n          format: int32\n          type: integer\n        hostname:\n          type: string\n        ip:\n          type: string\n      required:\n      - id\n      - ip\n      - hostname\n      - sync_status\n    parameters:\n      type: object\n      properties:\n        value:\n          type: string\n        created_at:\n          format: int32\n          type: integer\n        key:\n          type: string\n      required:\n      - key\n      - value\n    plugins:\n      type: object\n      properties:\n        config:\n          type: array\n        consumer:\n          nullable: true\n          $ref: '#/components/schemas/consumers'\n          default: ~\n        enabled:\n          default: true\n          type: boolean\n        protocols:\n          enum:\n          - http\n          - https\n          - tcp\n          - tls\n          - udp\n          - grpc\n          - grpcs\n          type: array\n          default:\n          - grpc\n          - grpcs\n          - http\n          - https\n        instance_name:\n          type: string\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        updated_at:\n          format: int32\n          type: integer\n        name:\n          type: string\n        route:\n          nullable: true\n          $ref: '#/components/schemas/routes'\n          default: ~\n        created_at:\n          format: int32\n          type: integer\n        service:\n          nullable: true\n          $ref: '#/components/schemas/services'\n          default: ~\n      required:\n      - name\n      - protocols\n      - enabled\n    tags:\n      type: object\n      properties:\n        entity_name:\n          type: string\n        entity_id:\n          type: string\n        tag:\n          type: string\n      required:\n      - tag\n      - entity_name\n      - entity_id\n    services:\n      type: object\n      properties:\n        retries:\n          default: 5\n          type: integer\n        connect_timeout:\n          default: 60000\n          type: integer\n        tags:\n          type: array\n        write_timeout:\n          default: 60000\n          type: integer\n        read_timeout:\n          default: 60000\n          type: integer\n        created_at:\n          format: int32\n          type: integer\n        client_certificate:\n          $ref: '#/components/schemas/certificates'\n        protocol:\n          default: http\n          type: string\n        tls_verify_depth:\n          nullable: true\n          type: integer\n          default: ~\n        host:\n          type: string\n        port:\n          default: 80\n          type: integer\n        enabled:\n          default: true\n          type: boolean\n        ca_certificates:\n          type: array\n        updated_at:\n          format: int32\n          type: integer\n        id:\n          format: uuid\n          type: string\n        path:\n          type: string\n        name:\n          type: string\n        tls_verify:\n          type: boolean\n      required:\n      - protocol\n      - host\n      - port\n      - enabled\n    routes:\n      type: object\n      properties:\n        strip_path:\n          default: true\n          type: boolean\n        https_redirect_status_code:\n          default: 426\n          type: integer\n        path_handling:\n          default: v0\n          type: string\n        hosts:\n          type: array\n        methods:\n          type: array\n        paths: []\n        protocols:\n          default:\n          - http\n          - https\n          type: array\n        sources:\n          type: array\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        created_at:\n          format: int32\n          type: integer\n        updated_at:\n          format: int32\n          type: integer\n        headers:\n          type: array\n        regex_priority:\n          default: 0\n          type: integer\n        preserve_host:\n          default: false\n          type: boolean\n        destinations:\n          type: array\n        request_buffering:\n          default: true\n          type: boolean\n        snis:\n          type: array\n        response_buffering:\n          default: true\n          type: boolean\n        name:\n          type: string\n        service:\n          $ref: '#/components/schemas/services'\n      required:\n      - protocols\n      - https_redirect_status_code\n      - strip_path\n      - preserve_host\n      - request_buffering\n      - response_buffering\n    consumers:\n      type: object\n      properties:\n        custom_id:\n          type: string\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        username:\n          type: string\n        created_at:\n          format: int32\n          type: integer\n        updated_at:\n          format: int32\n          type: integer\n      required: []\n    workspaces:\n      type: object\n      properties:\n        id:\n          format: uuid\n          type: string\n        config:\n          type: array\n        meta:\n          type: array\n        name:\n          type: string\n        comment:\n          type: string\n        created_at:\n          format: int32\n          type: integer\n        updated_at:\n          format: int32\n          type: integer\n      required:\n      - name\n    certificates:\n      type: object\n      properties:\n        key_alt:\n          type: string\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        key:\n          type: string\n        cert_alt:\n          type: string\n        updated_at:\n          format: int32\n          type: integer\n        created_at:\n          format: int32\n          type: integer\n        cert:\n          type: string\n      required:\n      - cert\n      - key\n    ca_certificates:\n      type: object\n      properties:\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        cert_digest:\n          type: string\n        updated_at:\n          format: int32\n          type: integer\n        created_at:\n          format: int32\n          type: integer\n        cert:\n          type: string\n      required:\n      - cert\n    snis:\n      type: object\n      properties:\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        certificate:\n          $ref: '#/components/schemas/certificates'\n        name:\n          type: string\n        created_at:\n          format: int32\n          type: integer\n        updated_at:\n          format: int32\n          type: integer\n      required:\n      - name\n      - certificate\n    upstreams:\n      type: object\n      properties:\n        hash_on:\n          default: none\n          type: string\n        hash_fallback:\n          default: none\n          type: string\n        hash_on_header:\n          type: string\n        hash_fallback_header:\n          type: string\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        hash_on_cookie_path:\n          default: /\n          type: string\n        hash_on_query_arg:\n          type: string\n        created_at:\n          format: int32\n          type: integer\n        hash_fallback_query_arg:\n          type: string\n        hash_on_uri_capture:\n          type: string\n        hash_fallback_uri_capture:\n          type: string\n        host_header:\n          type: string\n        use_srv_name:\n          default: false\n          type: boolean\n        client_certificate:\n          $ref: '#/components/schemas/certificates'\n        healthchecks:\n          default:\n            active:\n              healthy:\n                interval: 0\n                http_statuses:\n                - 200\n                - 302\n                successes: 0\n              concurrency: 10\n              unhealthy:\n                interval: 0\n                http_statuses:\n                - 429\n                - 404\n                - 500\n                - 501\n                - 502\n                - 503\n                - 504\n                - 505\n                tcp_failures: 0\n                timeouts: 0\n                http_failures: 0\n              timeout: 1\n              http_path: /\n              type: http\n              https_verify_certificate: true\n            passive:\n              healthy:\n                http_statuses:\n                - 200\n                - 201\n                - 202\n                - 203\n                - 204\n                - 205\n                - 206\n                - 207\n                - 208\n                - 226\n                - 300\n                - 301\n                - 302\n                - 303\n                - 304\n                - 305\n                - 306\n                - 307\n                - 308\n                successes: 0\n              type: http\n              unhealthy:\n                tcp_failures: 0\n                timeouts: 0\n                http_statuses:\n                - 429\n                - 500\n                - 503\n                http_failures: 0\n          type: array\n        hash_on_cookie:\n          type: string\n        updated_at:\n          format: int32\n          type: integer\n        slots:\n          default: 10000\n          type: integer\n        name:\n          type: string\n        algorithm:\n          default: round-robin\n          type: string\n      required:\n      - name\n    targets:\n      type: object\n      properties:\n        weight:\n          default: 100\n          type: integer\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        upstream:\n          $ref: '#/components/schemas/upstreams'\n        target:\n          type: string\n        created_at:\n          format: float\n          type: number\n        updated_at:\n          format: float\n          type: number\n      required:\n      - upstream\n      - target\n    vaults:\n      type: object\n      properties:\n        description:\n          type: string\n        id:\n          format: uuid\n          type: string\n        prefix:\n          type: string\n        tags:\n          type: array\n        config:\n          type: array\n        created_at:\n          format: int32\n          type: integer\n        name:\n          type: string\n        updated_at:\n          format: int32\n          type: integer\n      required:\n      - prefix\n      - name\n    keys:\n      type: object\n      properties:\n        kid:\n          type: string\n        jwk:\n          type: string\n        id:\n          format: uuid\n          type: string\n        tags:\n          type: array\n        pem: []\n        set:\n          $ref: '#/components/schemas/key_sets'\n        name:\n          type: string\n        created_at:\n          format: int32\n          type: integer\n        updated_at:\n          format: int32\n          type: integer\n      required:\n      - kid\n    filter_chains:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        enabled:\n          type: boolean\n          default: true\n        filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/filters'\n        service:\n          nullable: true\n          $ref: '#/components/schemas/services'\n          default: ~\n        route:\n          nullable: true\n          $ref: '#/components/schemas/routes'\n          default: ~\n        tags:\n          type: array\n        created_at:\n          format: int32\n          type: integer\n        updated_at:\n          format: int32\n          type: integer\n      required: []\n    filters:\n      properties:\n        name:\n          type: string\n        config:\n          type: string\n        enabled:\n          type: boolean\n          default: true\n      required:\n        - name\nservers:\n- description: 8001 is the default port on which the Admin API listens.\n  url: http://localhost:8001\n- description: 8444 is the default port for HTTPS traffic to the Admin API.\n  url: https://localhost:8444\n"
        },
        {
          "name": "kong.conf.default",
          "type": "blob",
          "size": 136.81,
          "content": "# -----------------------\n# Kong configuration file\n# -----------------------\n#\n# The commented-out settings shown in this file represent the default values.\n#\n# This file is read when `kong start` or `kong prepare` are used. Kong\n# generates the Nginx configuration with the settings specified in this file.\n#\n# All environment variables prefixed with `KONG_` and capitalized will override\n# the settings specified in this file.\n# Example:\n#   `log_level` setting -> `KONG_LOG_LEVEL` env variable\n#\n# Boolean values can be specified as `on`/`off` or `true`/`false`.\n# Lists must be specified as comma-separated strings.\n#\n# All comments in this file can be removed safely, including the\n# commented-out properties.\n# You can verify the integrity of your settings with `kong check <conf>`.\n\n#------------------------------------------------------------------------------\n# GENERAL\n#------------------------------------------------------------------------------\n\n#prefix = /usr/local/kong/       # Working directory. Equivalent to Nginx's\n                                 # prefix path, containing temporary files\n                                 # and logs.\n                                 # Each Kong process must have a separate\n                                 # working directory.\n\n#log_level = notice              # Log level of the Nginx server. Logs are\n                                 # found at `<prefix>/logs/error.log`.\n\n# See http://nginx.org/en/docs/ngx_core_module.html#error_log for a list\n# of accepted values.\n\n#proxy_access_log = logs/access.log       # Path for proxy port request access\n                                          # logs. Set this value to `off` to\n                                          # disable logging proxy requests.\n                                          # If this value is a relative path,\n                                          # it will be placed under the\n                                          # `prefix` location.\n\n\n#proxy_error_log = logs/error.log         # Path for proxy port request error logs.\n                                          # The granularity of these logs is adjusted by the `log_level` property.\n\n#proxy_stream_access_log = logs/access.log basic # Path for TCP streams proxy port access logs.\n                                                 # Set to `off` to disable logging proxy requests.\n                                                 # If this value is a relative path, it will be placed under the `prefix` location.\n                                                 # `basic` is defined as `'$remote_addr [$time_local] '\n                                                 # '$protocol $status $bytes_sent $bytes_received '\n                                                 # '$session_time'`\n\n#proxy_stream_error_log = logs/error.log         # Path for tcp streams proxy port request error\n                                                 # logs. The granularity of these logs\n                                                 # is adjusted by the `log_level`\n                                                 # property.\n\n#admin_access_log = logs/admin_access.log # Path for Admin API request access logs.\n                                          # If hybrid mode is enabled and the current node is set\n                                          # to be the control plane, then the connection requests\n                                          # from data planes are also written to this file with\n                                          # server name \"kong_cluster_listener\".\n                                          #\n                                          # Set this value to `off` to disable logging Admin API requests.\n                                          # If this value is a relative path, it will be placed under the `prefix` location.\n\n\n#admin_error_log = logs/error.log         # Path for Admin API request error logs.\n                                          # The granularity of these logs is adjusted by the `log_level` property.\n\n#status_access_log = off                  # Path for Status API request access logs.\n                                          # The default value of `off` implies that logging for this API\n                                          # is disabled by default.\n                                          # If this value is a relative path, it will be placed under the `prefix` location.\n\n#status_error_log = logs/status_error.log # Path for Status API request error logs.\n                                          # The granularity of these logs is adjusted by the `log_level` property.\n\n#vaults = bundled                # Comma-separated list of vaults this node should load.\n                                 # By default, all the bundled vaults are enabled.\n                                 #\n                                 # The specified name(s) will be substituted as\n                                 # such in the Lua namespace:\n                                 # `kong.vaults.{name}.*`.\n\n#opentelemetry_tracing = off                # Deprecated: use `tracing_instrumentations` instead.\n\n#tracing_instrumentations = off             # Comma-separated list of tracing instrumentations this node should load.\n                                            # By default, no instrumentations are enabled.\n                                            #\n                                            # Valid values for this setting are:\n                                            #\n                                            # - `off`: do not enable instrumentations.\n                                            # - `request`: only enable request-level instrumentations.\n                                            # - `all`: enable all the following instrumentations.\n                                            # - `db_query`: trace database queries.\n                                            # - `dns_query`: trace DNS queries.\n                                            # - `router`: trace router execution, including router rebuilding.\n                                            # - `http_client`: trace OpenResty HTTP client requests.\n                                            # - `balancer`: trace balancer retries.\n                                            # - `plugin_rewrite`: trace plugin iterator execution with rewrite phase.\n                                            # - `plugin_access`: trace plugin iterator execution with access phase.\n                                            # - `plugin_header_filter`: trace plugin iterator execution with header_filter phase.\n                                            #\n                                            # **Note:** In the current implementation, tracing instrumentations are not enabled in stream mode.\n\n#opentelemetry_tracing_sampling_rate = 1.0  # Deprecated: use `tracing_sampling_rate` instead.\n#tracing_sampling_rate = 0.01               # Tracing instrumentation sampling rate.\n                                            # Tracer samples a fixed percentage of all spans\n                                            # following the sampling rate.\n                                            #\n                                            # Example: `0.25`, this accounts for 25% of all traces.\n\n\n#plugins = bundled               # Comma-separated list of plugins this node should load.\n                                 # By default, only plugins bundled in official distributions\n                                 # are loaded via the `bundled` keyword.\n                                 #\n                                 # Loading a plugin does not enable it by default, but only\n                                 # instructs Kong to load its source code and allows\n                                 # configuration via the various related Admin API endpoints.\n                                 #\n                                 # The specified name(s) will be substituted as such in the\n                                 # Lua namespace: `kong.plugins.{name}.*`.\n                                 #\n                                 # When the `off` keyword is specified as the only value,\n                                 # no plugins will be loaded.\n                                 #\n                                 # `bundled` and plugin names can be mixed together, as the\n                                 # following examples suggest:\n                                 #\n                                 # - `plugins = bundled,custom-auth,custom-log`\n                                 #   will include the bundled plugins plus two custom ones.\n                                 # - `plugins = custom-auth,custom-log` will\n                                 #   *only* include the `custom-auth` and `custom-log` plugins.\n                                 # - `plugins = off` will not include any plugins.\n                                 #\n                                 # **Note:** Kong will not start if some plugins were previously\n                                 # configured (i.e. have rows in the database) and are not\n                                 # specified in this list. Before disabling a plugin, ensure\n                                 # all instances of it are removed before restarting Kong.\n                                 #\n                                 # **Note:** Limiting the amount of available plugins can\n                                 # improve P99 latency when experiencing LRU churning in the\n                                 # database cache (i.e. when the configured `mem_cache_size`) is full.\n\n\n#dedicated_config_processing = on  # Enables or disables a special worker\n                                   # process for configuration processing. This process\n                                   # increases memory usage a little bit while\n                                   # allowing to reduce latencies by moving some\n                                   # background tasks, such as CP/DP connection\n                                   # handling, to an additional worker process specific\n                                   # to handling these background tasks.\n                                   # Currently this has effect only on data planes.\n\n#pluginserver_names =            # Comma-separated list of names for pluginserver\n                                 # processes. The actual names are used for\n                                 # log messages and to relate the actual settings.\n\n#pluginserver_XXX_socket = <prefix>/<XXX>.socket            # Path to the unix socket\n                                                            # used by the <XXX> pluginserver.\n\n#pluginserver_XXX_start_cmd = /usr/local/bin/<XXX>          # Full command (including\n                                                            # any needed arguments) to\n                                                            # start the <XXX>\n                                                            # pluginserver.\n\n#pluginserver_XXX_query_cmd = /usr/local/bin/query_<XXX>    # Full command to \"query\" the\n                                                            # <XXX> pluginserver.  Should\n                                                            # produce a JSON with the\n                                                            # dump info of the plugin it\n                                                            # manages.\n\n#port_maps =                     # With this configuration parameter, you can\n                                 # let Kong Gateway know the port from\n                                 # which the packets are forwarded to it. This\n                                 # is fairly common when running Kong in a\n                                 # containerized or virtualized environment.\n                                 # For example, `port_maps=80:8000, 443:8443`\n                                 # instructs Kong that the port 80 is mapped\n                                 # to 8000 (and the port 443 to 8443), where\n                                 # 8000 and 8443 are the ports that Kong is\n                                 # listening to.\n                                 #\n                                 # This parameter helps Kong set a proper\n                                 # forwarded upstream HTTP request header or to\n                                 # get the proper forwarded port with the Kong PDK\n                                 # (in case other means determining it has\n                                 # failed). It changes routing by a destination\n                                 # port to route by a port from which packets\n                                 # are forwarded to Kong, and similarly it\n                                 # changes the default plugin log serializer to\n                                 # use the port according to this mapping\n                                 # instead of reporting the port Kong is\n                                 # listening to.\n\n#anonymous_reports = on          # Send anonymous usage data such as error\n                                 # stack traces to help improve Kong.\n\n\n#proxy_server =                  # Proxy server defined as an encoded URL. Kong will only\n                                 # use this option if a component is explicitly configured\n                                 # to use a proxy.\n\n\n#proxy_server_ssl_verify = off   # Toggles server certificate verification if\n                                 # `proxy_server` is in HTTPS.\n                                 # See the `lua_ssl_trusted_certificate`\n                                 # setting to specify a certificate authority.\n\n#error_template_html =           # Path to the custom html error template to\n                                 # override the default html kong error\n                                 # template.\n                                 #\n                                 # The template may contain up to two `%s`\n                                 # placeholders. The first one will expand to\n                                 # the error message. The second one will\n                                 # expand to the request ID. Both placeholders\n                                 # are optional, but recommended.\n                                 # Adding more than two placeholders will\n                                 # result in a runtime error when trying to\n                                 # render the template:\n                                 # ```\n                                 # <html>\n                                 #   <body>\n                                 #     <h1>My custom error template</h1>\n                                 #     <p>error: %s</p>\n                                 #     <p>request_id: %s</p>\n                                 #   </body>\n                                 # </html>\n                                 # ```\n\n#error_template_json =           # Path to the custom json error template to\n                                 # override the default json kong error\n                                 # template.\n                                 #\n                                 # Similarly to `error_template_html`, the\n                                 # template may contain up to two `%s`\n                                 # placeholders for the error message and the\n                                 # request ID respectively.\n\n#error_template_xml =            # Path to the custom xml error template to\n                                 # override the default xml kong error template\n                                 #\n                                 # Similarly to `error_template_html`, the\n                                 # template may contain up to two `%s`\n                                 # placeholders for the error message and the\n                                 # request ID respectively.\n\n#error_template_plain =          # Path to the custom plain error template to\n                                 # override the default plain kong error\n                                 # template\n                                 #\n                                 # Similarly to `error_template_html`, the\n                                 # template may contain up to two `%s`\n                                 # placeholders for the error message and the\n                                 # request ID respectively.\n\n#------------------------------------------------------------------------------\n# HYBRID MODE\n#------------------------------------------------------------------------------\n\n#role = traditional              # Use this setting to enable hybrid mode,\n                                 # This allows running some Kong nodes in a\n                                 # control plane role with a database and\n                                 # have them deliver configuration updates\n                                 # to other nodes running to DB-less running in\n                                 # a data plane role.\n                                 #\n                                 # Valid values for this setting are:\n                                 #\n                                 # - `traditional`: do not use hybrid mode.\n                                 # - `control_plane`: this node runs in a\n                                 #   control plane role. It can use a database\n                                 #   and will deliver configuration updates\n                                 #   to data plane nodes.\n                                 # - `data_plane`: this is a data plane node.\n                                 #   It runs DB-less and receives configuration\n                                 #   updates from a control plane node.\n\n#cluster_mtls = shared           # Sets the verification method between nodes of the cluster.\n                                 #\n                                 # Valid values for this setting are:\n                                 #\n                                 # - `shared`: use a shared certificate/key pair specified with\n                                 #   the `cluster_cert` and `cluster_cert_key` settings.\n                                 #   Note that CP and DP nodes must present the same certificate\n                                 #   to establish mTLS connections.\n                                 # - `pki`: use `cluster_ca_cert`, `cluster_server_name`, and\n                                 #   `cluster_cert` for verification. These are different\n                                 #   certificates for each DP node, but issued by a cluster-wide\n                                 #   common CA certificate: `cluster_ca_cert`.\n                                 # - `pki_check_cn`: similar to `pki` but additionally checks\n                                 #   for the common name of the data plane certificate specified\n                                 #   in `cluster_allowed_common_names`.\n\n#cluster_cert =                  # Cluster certificate to use\n                                 # when establishing secure communication\n                                 # between control and data plane nodes.\n                                 # You can use the `kong hybrid` command to\n                                 # generate the certificate/key pair.\n                                 # Under `shared` mode, it must be the same\n                                 # for all nodes.  Under `pki` mode it\n                                 # should be a different certificate for each\n                                 # DP node.\n                                 #\n                                 # The certificate can be configured on this\n                                 # property with either of the following values:\n                                 # * absolute path to the certificate\n                                 # * certificate content\n                                 # * base64 encoded certificate content\n\n#cluster_cert_key =              # Cluster certificate key to\n                                 # use when establishing secure communication\n                                 # between control and data plane nodes.\n                                 # You can use the `kong hybrid` command to\n                                 # generate the certificate/key pair.\n                                 # Under `shared` mode, it must be the same\n                                 # for all nodes.  Under `pki` mode it\n                                 # should be a different certificate for each\n                                 # DP node.\n                                 #\n                                 # The certificate key can be configured on this\n                                 # property with either of the following values:\n                                 # - absolute path to the certificate key\n                                 # - certificate key content\n                                 # - base64 encoded certificate key content\n\n#cluster_ca_cert =               # The trusted CA certificate file in PEM format used for:\n                                 # - Control plane to verify data plane's certificate\n                                 # - Data plane to verify control plane's certificate\n                                 #\n                                 # Required on data plane if `cluster_mtls` is set to `pki`.\n                                 # If the control plane certificate is issued by a well-known CA,\n                                 # set `lua_ssl_trusted_certificate=system` on the data plane and leave this field empty.\n                                 #\n                                 # This field is ignored if `cluster_mtls` is set to `shared`.\n                                 #\n                                 # The certificate can be configured on this property with any of the following values:\n                                 # - absolute path to the certificate\n                                 # - certificate content\n                                 # - base64 encoded certificate content\n\n#------------------------------------------------------------------------------\n# HYBRID MODE DATA PLANE\n#------------------------------------------------------------------------------\n\n#cluster_server_name =           # The server name used in the SNI of the TLS\n                                 # connection from a DP node to a CP node.\n                                 # Must match the Common Name (CN) or Subject\n                                 # Alternative Name (SAN) found in the CP\n                                 # certificate.\n                                 # If `cluster_mtls` is set to\n                                 # `shared`, this setting is ignored and\n                                 # `kong_clustering` is used.\n\n#cluster_control_plane =         # To be used by data plane nodes only:\n                                 # address of the control plane node from which\n                                 # configuration updates will be fetched,\n                                 # in `host:port` format.\n\n#cluster_max_payload = 16777216\n                                 # This sets the maximum compressed payload size allowed\n                                 # to be sent across from CP to DP in Hybrid mode\n                                 # Default is 16MB - 16 * 1024 * 1024.\n\n#cluster_dp_labels =             # Comma-separated list of labels for the data plane.\n                                 # Labels are key-value pairs that provide additional\n                                 # context information for each DP.\n                                 # Each label must be configured as a string in the\n                                 # format `key:value`.\n                                 #\n                                 # Labels are only compatible with hybrid mode\n                                 # deployments with Kong Konnect (SaaS).\n                                 # This configuration doesn't work with\n                                 # self-hosted deployments.\n                                 #\n                                 # Keys and values follow the AIP standards:\n                                 # https://kong-aip.netlify.app/aip/129/\n                                 #\n                                 # Example:\n                                 # `deployment:mycloud,region:us-east-1`\n\n#------------------------------------------------------------------------------\n# HYBRID MODE CONTROL PLANE\n#------------------------------------------------------------------------------\n\n#cluster_listen = 0.0.0.0:8005\n                         # Comma-separated list of addresses and ports on\n                         # which the cluster control plane server should listen\n                         # for data plane connections.\n                         # The cluster communication port of the control plane\n                         # must be accessible by all the data planes\n                         # within the same cluster. This port is mTLS protected\n                         # to ensure end-to-end security and integrity.\n                         #\n                         # This setting has no effect if `role` is not set to\n                         # `control_plane`.\n                         #\n                         # Connections made to this endpoint are logged\n                         # to the same location as Admin API access logs.\n                         # See `admin_access_log` config description for more\n                         # information.\n\n#cluster_data_plane_purge_delay = 1209600\n                         # How many seconds must pass from the time a DP node\n                         # becomes offline to the time its entry gets removed\n                         # from the database, as returned by the\n                         # /clustering/data-planes Admin API endpoint.\n                         #\n                         # This is to prevent the cluster data plane table from\n                         # growing indefinitely. The default is set to\n                         # 14 days. That is, if the CP hasn't heard from a DP for\n                         # 14 days, its entry will be removed.\n\n#cluster_ocsp = off\n                         # Whether to check for revocation status of DP\n                         # certificates using OCSP (Online Certificate Status Protocol).\n                         # If enabled, the DP certificate should contain the\n                         # \"Certificate Authority Information Access\" extension\n                         # and the OCSP method with URI of which the OCSP responder\n                         # can be reached from CP.\n                         #\n                         # OCSP checks are only performed on CP nodes, it has no\n                         # effect on DP nodes.\n                         #\n                         # Valid values for this setting are:\n                         #\n                         # - `on`: OCSP revocation check is enabled and DP\n                         #   must pass the check in order to establish\n                         #   connection with CP.\n                         # - `off`: OCSP revocation check is disabled.\n                         # - `optional`: OCSP revocation check will be attempted,\n                         #   however, if the required extension is not\n                         #   found inside DP-provided certificate\n                         #   or communication with the OCSP responder\n                         #   failed, then DP is still allowed through.\n\n#cluster_use_proxy = off\n                         # Whether to turn on HTTP CONNECT proxy support for\n                         # hybrid mode connections. `proxy_server` will be used\n                         # for hybrid mode connections if this option is turned on.\n#------------------------------------------------------------------------------\n# NGINX\n#------------------------------------------------------------------------------\n\n#proxy_listen = 0.0.0.0:8000 reuseport backlog=16384, 0.0.0.0:8443 http2 ssl reuseport backlog=16384\n                         # Comma-separated list of addresses and ports on\n                         # which the proxy server should listen for\n                         # HTTP/HTTPS traffic.\n                         # The proxy server is the public entry point of Kong,\n                         # which proxies traffic from your consumers to your\n                         # backend services. This value accepts IPv4, IPv6, and\n                         # hostnames.\n                         #\n                         # Some suffixes can be specified for each pair:\n                         #\n                         # - `ssl` will require that all connections made\n                         #   through a particular address/port be made with TLS\n                         #   enabled.\n                         # - `http2` will allow for clients to open HTTP/2\n                         #   connections to Kong's proxy server.\n                         # - `proxy_protocol` will enable usage of the\n                         #   PROXY protocol for a given address/port.\n                         # - `deferred` instructs to use a deferred accept on\n                         #   Linux (the `TCP_DEFER_ACCEPT` socket option).\n                         # - `bind` instructs to make a separate bind() call\n                         #   for a given address:port pair.\n                         # - `reuseport` instructs to create an individual\n                         #   listening socket for each worker process,\n                         #   allowing the kernel to better distribute incoming\n                         #   connections between worker processes.\n                         # - `backlog=N` sets the maximum length for the queue\n                         #   of pending TCP connections. This number should\n                         #   not be too small to prevent clients\n                         #   seeing \"Connection refused\" errors when connecting to\n                         #   a busy Kong instance.\n                         #   **Note:** On Linux, this value is limited by the\n                         #   setting of the `net.core.somaxconn` kernel parameter.\n                         #   In order for the larger `backlog` set here to take\n                         #   effect, it is necessary to raise\n                         #   `net.core.somaxconn` at the same time to match or\n                         #   exceed the `backlog` number set.\n                         # - `ipv6only=on|off` specifies whether an IPv6 socket listening\n                         #   on a wildcard address [::] will accept only IPv6\n                         #   connections or both IPv6 and IPv4 connections.\n                         # - `so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]`\n                         #   configures the `TCP keepalive` behavior for the listening\n                         #   socket. If this parameter is omitted, the operating\n                         #   system’s settings will be in effect for the socket. If it\n                         #   is set to the value `on`, the `SO_KEEPALIVE` option is turned\n                         #   on for the socket. If it is set to the value `off`, the\n                         #   `SO_KEEPALIVE` option is turned off for the socket. Some\n                         #   operating systems support setting of TCP keepalive parameters\n                         #   on a per-socket basis using the `TCP_KEEPIDLE`,` TCP_KEEPINTVL`,\n                         #   and `TCP_KEEPCNT` socket options.\n                         #\n                         # This value can be set to `off`, thus disabling\n                         # the HTTP/HTTPS proxy port for this node.\n                         # If `stream_listen` is also set to `off`, this enables\n                         # control plane mode for this node\n                         # (in which all traffic proxying capabilities are\n                         # disabled). This node can then be used only to\n                         # configure a cluster of Kong\n                         # nodes connected to the same datastore.\n                         #\n                         # Example:\n                         # `proxy_listen = 0.0.0.0:443 ssl, 0.0.0.0:444 http2 ssl`\n                         #\n                         # See http://nginx.org/en/docs/http/ngx_http_core_module.html#listen\n                         # for a description of the accepted formats for this\n                         # and other `*_listen` values.\n                         #\n                         # See https://www.nginx.com/resources/admin-guide/proxy-protocol/\n                         # for more details about the `proxy_protocol`\n                         # parameter.\n                         #\n                         # Not all `*_listen` values accept all formats\n                         # specified in nginx's documentation.\n\n#stream_listen = off\n                         # Comma-separated list of addresses and ports on\n                         # which the stream mode should listen.\n                         #\n                         # This value accepts IPv4, IPv6, and hostnames.\n                         # Some suffixes can be specified for each pair:\n                         # - `ssl` will require that all connections made\n                         #   through a particular address/port be made with TLS\n                         #   enabled.\n                         # - `proxy_protocol` will enable usage of the\n                         #   PROXY protocol for a given address/port.\n                         # - `bind` instructs to make a separate bind() call\n                         #   for a given address:port pair.\n                         # - `reuseport` instructs to create an individual\n                         #   listening socket for each worker process,\n                         #   allowing the kernel to better distribute incoming\n                         #   connections between worker processes.\n                         # - `backlog=N` sets the maximum length for the queue\n                         #   of pending TCP connections. This number should\n                         #   not be too small to prevent clients\n                         #   seeing \"Connection refused\" errors when connecting to\n                         #   a busy Kong instance.\n                         #   **Note:** On Linux, this value is limited by the\n                         #   setting of the `net.core.somaxconn` kernel parameter.\n                         #   In order for the larger `backlog` set here to take\n                         #   effect, it is necessary to raise\n                         #   `net.core.somaxconn` at the same time to match or\n                         #   exceed the `backlog` number set.\n                         # - `ipv6only=on|off` specifies whether an IPv6 socket listening\n                         #   on a wildcard address [::] will accept only IPv6\n                         #   connections or both IPv6 and IPv4 connections.\n                         # - `so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]`\n                         #   configures the `TCP keepalive` behavior for the listening\n                         #   socket. If this parameter is omitted, the operating\n                         #   system’s settings will be in effect for the socket. If it\n                         #   is set to the value `on`, the `SO_KEEPALIVE` option is turned\n                         #   on for the socket. If it is set to the value `off`, the\n                         #   `SO_KEEPALIVE` option is turned off for the socket. Some\n                         #   operating systems support setting of TCP keepalive parameters\n                         #   on a per-socket basis using the` TCP_KEEPIDLE`, `TCP_KEEPINTVL`,\n                         #   and `TCP_KEEPCNT` socket options.\n                         #\n                         # Examples:\n                         #\n                         # ```\n                         # stream_listen = 127.0.0.1:7000 reuseport backlog=16384\n                         # stream_listen = 0.0.0.0:989 reuseport backlog=65536, 0.0.0.0:20\n                         # stream_listen = [::1]:1234 backlog=16384\n                         # ```\n                         #\n                         # By default, this value is set to `off`, thus\n                         # disabling the stream proxy port for this node.\n\n# See http://nginx.org/en/docs/stream/ngx_stream_core_module.html#listen\n# for a description of the formats that Kong might accept in stream_listen.\n\n#admin_listen = 127.0.0.1:8001 reuseport backlog=16384, 127.0.0.1:8444 http2 ssl reuseport backlog=16384\n                         # Comma-separated list of addresses and ports on\n                         # which the Admin interface should listen.\n                         # The Admin interface is the API allowing you to\n                         # configure and manage Kong.\n                         # Access to this interface should be *restricted*\n                         # to Kong administrators *only*. This value accepts\n                         # IPv4, IPv6, and hostnames.\n                         #\n                         # It is highly recommended to avoid exposing the Admin API to public\n                         # interfaces, by using values such as `0.0.0.0:8001`\n                         #\n                         # See https://docs.konghq.com/gateway/latest/production/running-kong/secure-admin-api/\n                         # for more information about how to secure your Admin API.\n                         #\n                         # Some suffixes can be specified for each pair:\n                         #\n                         # - `ssl` will require that all connections made\n                         #   through a particular address/port be made with TLS\n                         #   enabled.\n                         # - `http2` will allow for clients to open HTTP/2\n                         #   connections to Kong's proxy server.\n                         # - `proxy_protocol` will enable usage of the\n                         #   PROXY protocol for a given address/port.\n                         # - `deferred` instructs to use a deferred accept on\n                         #   Linux (the `TCP_DEFER_ACCEPT` socket option).\n                         # - `bind` instructs to make a separate bind() call\n                         #   for a given address:port pair.\n                         # - `reuseport` instructs to create an individual\n                         #   listening socket for each worker process,\n                         #   allowing the Kernel to better distribute incoming\n                         #   connections between worker processes.\n                         # - `backlog=N` sets the maximum length for the queue\n                         #   of pending TCP connections. This number should\n                         #   not be too small to prevent clients\n                         #   seeing \"Connection refused\" errors when connecting to\n                         #   a busy Kong instance.\n                         #   **Note:** On Linux, this value is limited by the\n                         #   setting of the `net.core.somaxconn` kernel parameter.\n                         #   In order for the larger `backlog` set here to take\n                         #   effect, it is necessary to raise\n                         #   `net.core.somaxconn` at the same time to match or\n                         #   exceed the `backlog` number set.\n                         # - `ipv6only=on|off` specifies whether an IPv6 socket listening\n                         #   on a wildcard address [::] will accept only IPv6\n                         #   connections or both IPv6 and IPv4 connections.\n                         # - `so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]`\n                         #   configures the “TCP keepalive” behavior for the listening\n                         #   socket. If this parameter is omitted, the operating\n                         #   system’s settings will be in effect for the socket. If it\n                         #   is set to the value `on`, the `SO_KEEPALIVE` option is turned\n                         #   on for the socket. If it is set to the value `off`, the\n                         #   `SO_KEEPALIVE` option is turned off for the socket. Some\n                         #   operating systems support setting of TCP keepalive parameters\n                         #   on a per-socket basis using the `TCP_KEEPIDLE`, `TCP_KEEPINTVL`,\n                         #   and `TCP_KEEPCNT` socket options.\n                         #\n                         # This value can be set to `off`, thus disabling\n                         # the Admin interface for this node, enabling a\n                         # data plane mode (without configuration\n                         # capabilities) pulling its configuration changes\n                         # from the database.\n                         #\n                         # Example: `admin_listen = 127.0.0.1:8444 http2 ssl`\n\n#status_listen = 127.0.0.1:8007 reuseport backlog=16384\n                         # Comma-separated list of addresses and ports on\n                         # which the Status API should listen.\n                         # The Status API is a read-only endpoint\n                         # allowing monitoring tools to retrieve metrics,\n                         # healthiness, and other non-sensitive information\n                         # of the current Kong node.\n                         #\n                         # The following suffix can be specified for each pair:\n                         #\n                         # - `ssl` will require that all connections made\n                         #   through a particular address/port be made with TLS\n                         #   enabled.\n                         # - `http2` will allow for clients to open HTTP/2\n                         #   connections to Kong's Status API server.\n                         # - `proxy_protocol` will enable usage of the PROXY protocol.\n                         #\n                         # This value can be set to `off`, disabling\n                         # the Status API for this node.\n                         #\n                         # Example: `status_listen = 0.0.0.0:8100 ssl http2`\n\n\n#nginx_user = kong kong          # Defines user and group credentials used by\n                                 # worker processes. If group is omitted, a\n                                 # group whose name equals that of user is\n                                 # used.\n                                 #\n                                 # Example: `nginx_user = nginx www`\n                                 #\n                                 # **Note**: If the `kong` user and the `kong`\n                                 # group are not available, the default user\n                                 # and group credentials will be\n                                 # `nobody nobody`.\n\n#nginx_worker_processes = auto   # Determines the number of worker processes\n                                 # spawned by Nginx.\n                                 #\n                                 # See http://nginx.org/en/docs/ngx_core_module.html#worker_processes\n                                 # for detailed usage of the equivalent Nginx\n                                 # directive and a description of accepted\n                                 # values.\n\n#nginx_daemon = on               # Determines whether Nginx will run as a daemon\n                                 # or as a foreground process. Mainly useful\n                                 # for development or when running Kong inside\n                                 # a Docker environment.\n                                 #\n                                 # See http://nginx.org/en/docs/ngx_core_module.html#daemon.\n\n#mem_cache_size = 128m           # Size of each of the two shared memory caches\n                                 # for traditional mode database entities\n                                 # and runtime data, `kong_core_cache` and\n                                 # `kong_cache`.\n                                 #\n                                 # The accepted units are `k` and `m`, with a minimum\n                                 # recommended value of a few MBs.\n                                 #\n                                 # **Note**: As this option controls the size of two\n                                 # different cache zones, the total memory Kong\n                                 # uses to cache entities might be double this value.\n                                 # The created zones are shared by all worker\n                                 # processes and do not become larger when more\n                                 # workers are used.\n\n#ssl_cipher_suite = intermediate # Defines the TLS ciphers served by Nginx.\n                                 # Accepted values are `modern`,\n                                 # `intermediate`, `old`, `fips` or `custom`.\n                                 # If you want to enable TLSv1.1, this value has to be `old`.\n                                 #\n                                 # See https://wiki.mozilla.org/Security/Server_Side_TLS\n                                 # for detailed descriptions of each cipher\n                                 # suite. `fips` cipher suites are as described in\n                                 # https://wiki.openssl.org/index.php/FIPS_mode_and_TLS.\n\n#ssl_ciphers =                   # Defines a custom list of TLS ciphers to be\n                                 # served by Nginx. This list must conform to\n                                 # the pattern defined by `openssl ciphers`.\n                                 # This value is ignored if `ssl_cipher_suite`\n                                 # is not `custom`.\n                                 # If you use DHE ciphers, you must also\n                                 # configure the `ssl_dhparam` parameter.\n\n#ssl_protocols = TLSv1.2 TLSv1.3\n                                 # Enables the specified protocols for\n                                 # client-side connections. The set of\n                                 # supported protocol versions also depends\n                                 # on the version of OpenSSL Kong was built\n                                 # with. This value is ignored if\n                                 # `ssl_cipher_suite` is not `custom`.\n                                 # If you want to enable TLSv1.1, you should\n                                 # set `ssl_cipher_suite` to `old`.\n                                 #\n                                 # See http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_protocols\n\n#ssl_prefer_server_ciphers = on  # Specifies that server ciphers should be\n                                 # preferred over client ciphers when using\n                                 # the SSLv3 and TLS protocols. This value is\n                                 # ignored if `ssl_cipher_suite` is not `custom`.\n                                 #\n                                 # See http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_prefer_server_ciphers\n\n#ssl_dhparam =                   # Defines DH parameters for DHE ciphers from the\n                                 # predefined groups: `ffdhe2048`, `ffdhe3072`,\n                                 # `ffdhe4096`, `ffdhe6144`, `ffdhe8192`,\n                                 # from the absolute path to a parameters file, or\n                                 # directly from the parameters content.\n                                 #\n                                 # This value is ignored if `ssl_cipher_suite`\n                                 # is `modern` or `intermediate`. The reason is\n                                 # that `modern` has no ciphers that need this,\n                                 # and `intermediate` uses `ffdhe2048`.\n                                 #\n                                 # See http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_dhparam\n\n#ssl_session_tickets = on        # Enables or disables session resumption through\n                                 # TLS session tickets. This has no impact when\n                                 # used with TLSv1.3.\n                                 #\n                                 # Kong enables this by default for performance\n                                 # reasons, but it has security implications:\n                                 # https://github.com/mozilla/server-side-tls/issues/135\n                                 #\n                                 # See http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_tickets\n\n#ssl_session_timeout = 1d        # Specifies a time during which a client may\n                                 # reuse the session parameters. See the rationale:\n                                 # https://github.com/mozilla/server-side-tls/issues/198\n                                 #\n                                 # See http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_timeout\n\n#ssl_session_cache_size = 10m    # Sets the size of the caches that store session parameters.\n                                 #\n                                 # See https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_cache\n\n#ssl_cert =                      # Comma-separated list of certificates for `proxy_listen` values with TLS enabled.\n                                 #\n                                 # If more than one certificate is specified, it can be used to provide\n                                 # alternate types of certificates (for example, ECC certificates) that will be served\n                                 # to clients that support them. Note that to properly serve using ECC certificates,\n                                 # it is recommended to also set `ssl_cipher_suite` to\n                                 # `modern` or `intermediate`.\n                                 #\n                                 # Unless this option is explicitly set, Kong will auto-generate\n                                 # a pair of default certificates (RSA + ECC) the first time it starts up and use\n                                 # them for serving TLS requests.\n                                 #\n                                 # Certificates can be configured on this property with any of the following\n                                 # values:\n                                 # - absolute path to the certificate\n                                 # - certificate content\n                                 # - base64 encoded certificate content\n\n#ssl_cert_key =                  # Comma-separated list of keys for `proxy_listen` values with TLS enabled.\n                                 #\n                                 # If more than one certificate was specified for `ssl_cert`, then this\n                                 # option should contain the corresponding key for all certificates\n                                 # provided in the same order.\n                                 #\n                                 # Unless this option is explicitly set, Kong will auto-generate\n                                 # a pair of default private keys (RSA + ECC) the first time it starts up and use\n                                 # them for serving TLS requests.\n                                 #\n                                 # Keys can be configured on this property with any of the following\n                                 # values:\n                                 # - absolute path to the certificate key\n                                 # - certificate key content\n                                 # - base64 encoded certificate key content\n\n#client_ssl = off                # Determines if Nginx should attempt to send client-side\n                                 # TLS certificates and perform Mutual TLS Authentication\n                                 # with upstream service when proxying requests.\n\n#client_ssl_cert =               # If `client_ssl` is enabled, the client certificate\n                                 # for the `proxy_ssl_certificate` directive.\n                                 #\n                                 # This value can be overwritten dynamically with the `client_certificate`\n                                 # attribute of the `Service` object.\n                                 #\n                                 # The certificate can be configured on this property with any of the following\n                                 # values:\n                                 # - absolute path to the certificate\n                                 # - certificate content\n                                 # - base64 encoded certificate content\n\n#client_ssl_cert_key =           # If `client_ssl` is enabled, the client TLS key\n                                 # for the `proxy_ssl_certificate_key` directive.\n                                 #\n                                 # This value can be overwritten dynamically with the `client_certificate`\n                                 # attribute of the `Service` object.\n                                 #\n                                 # The certificate key can be configured on this property with any of the following\n                                 # values:\n                                 # - absolute path to the certificate key\n                                 # - certificate key content\n                                 # - base64 encoded certificate key content\n\n#admin_ssl_cert =                # Comma-separated list of certificates for `admin_listen` values with TLS enabled.\n                                 #\n                                 # See docs for `ssl_cert` for detailed usage.\n\n#admin_ssl_cert_key =            # Comma-separated list of keys for `admin_listen` values with TLS enabled.\n                                 #\n                                 # See docs for `ssl_cert_key` for detailed usage.\n\n#status_ssl_cert =               # Comma-separated list of certificates for `status_listen` values with TLS enabled.\n                                 #\n                                 # See docs for `ssl_cert` for detailed usage.\n\n#status_ssl_cert_key =           # Comma-separated list of keys for `status_listen` values with TLS enabled.\n                                 #\n                                 # See docs for `ssl_cert_key` for detailed usage.\n\n#debug_ssl_cert =                # Comma-separated list of certificates for `debug_listen` values with TLS enabled.\n                                 #\n                                 # See docs for `ssl_cert` for detailed usage.\n\n#debug_ssl_cert_key =            # Comma-separated list of keys for `debug_listen` values with TLS enabled.\n                                 #\n                                 # See docs for `ssl_cert_key` for detailed usage.\n\n#headers = server_tokens, latency_tokens, X-Kong-Request-Id\n                                 # Comma-separated list of headers Kong should\n                                 # inject in client responses.\n                                 #\n                                 # Accepted values are:\n                                 # - `Server`: Injects `Server: kong/x.y.z`\n                                 #   on Kong-produced responses (e.g., Admin\n                                 #   API, rejected requests from auth plugin).\n                                 # - `Via`: Injects `Via: kong/x.y.z` for\n                                 #   successfully proxied requests.\n                                 # - `X-Kong-Proxy-Latency`: Time taken\n                                 #   (in milliseconds) by Kong to process\n                                 #   a request and run all plugins before\n                                 #   proxying the request upstream.\n                                 # - `X-Kong-Response-Latency`: Time taken\n                                 #   (in milliseconds) by Kong to produce\n                                 #   a response in case of, e.g., a plugin\n                                 #   short-circuiting the request, or in\n                                 #   case of an error.\n                                 # - `X-Kong-Upstream-Latency`: Time taken\n                                 #   (in milliseconds) by the upstream\n                                 #   service to send response headers.\n                                 # - `X-Kong-Admin-Latency`: Time taken\n                                 #   (in milliseconds) by Kong to process\n                                 #   an Admin API request.\n                                 # - `X-Kong-Upstream-Status`: The HTTP status\n                                 #   code returned by the upstream service.\n                                 #   This is particularly useful for clients to\n                                 #   distinguish upstream statuses if the\n                                 #   response is rewritten by a plugin.\n                                 # - `X-Kong-Request-Id`: Unique identifier of\n                                 #   the request.\n                                 # - `server_tokens`: Same as specifying both\n                                 #   `Server` and `Via`.\n                                 # - `latency_tokens`: Same as specifying\n                                 #   `X-Kong-Proxy-Latency`,\n                                 #   `X-Kong-Response-Latency`,\n                                 #   `X-Kong-Admin-Latency`, and\n                                 #   `X-Kong-Upstream-Latency`.\n                                 #\n                                 # In addition to these, this value can be set\n                                 # to `off`, which prevents Kong from injecting\n                                 # any of the above headers. Note that this\n                                 # does not prevent plugins from injecting\n                                 # headers of their own.\n                                 #\n                                 # Example: `headers = via, latency_tokens`\n\n\n#headers_upstream = X-Kong-Request-Id\n                                 # Comma-separated list of headers Kong should\n                                 # inject in requests to upstream.\n                                 #\n                                 # At this time, the only accepted value is:\n                                 # - `X-Kong-Request-Id`: Unique identifier of\n                                 #   the request.\n                                 #\n                                 # In addition, this value can be set\n                                 # to `off`, which prevents Kong from injecting\n                                 # the above header. Note that this\n                                 # does not prevent plugins from injecting\n                                 # headers of their own.\n\n#trusted_ips =                   # Defines trusted IP address blocks that are\n                                 # known to send correct `X-Forwarded-*`\n                                 # headers.\n                                 # Requests from trusted IPs make Kong forward\n                                 # their `X-Forwarded-*` headers upstream.\n                                 # Non-trusted requests make Kong insert its\n                                 # own `X-Forwarded-*` headers.\n                                 #\n                                 # This property also sets the\n                                 # `set_real_ip_from` directive(s) in the Nginx\n                                 # configuration. It accepts the same type of\n                                 # values (CIDR blocks) but as a\n                                 # comma-separated list.\n                                 #\n                                 # To trust *all* IPs, set this value to\n                                 # `0.0.0.0/0,::/0`.\n                                 #\n                                 # If the special value `unix:` is specified,\n                                 # all UNIX-domain sockets will be trusted.\n                                 #\n                                 # See http://nginx.org/en/docs/http/ngx_http_realip_module.html#set_real_ip_from\n                                 # for examples of accepted values.\n\n#real_ip_header = X-Real-IP      # Defines the request header field whose value\n                                 # will be used to replace the client address.\n                                 # This value sets the `ngx_http_realip_module`\n                                 # directive of the same name in the Nginx\n                                 # configuration.\n                                 #\n                                 # If this value receives `proxy_protocol`:\n                                 #\n                                 # - at least one of the `proxy_listen` entries\n                                 #   must have the `proxy_protocol` flag\n                                 #   enabled.\n                                 # - the `proxy_protocol` parameter will be\n                                 #   appended to the `listen` directive of the\n                                 #   Nginx template.\n                                 #\n                                 # See http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header\n                                 # for a description of this directive.\n\n#real_ip_recursive = off         # This value sets the `ngx_http_realip_module`\n                                 # directive of the same name in the Nginx\n                                 # configuration.\n                                 #\n                                 # See http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_recursive\n                                 # for a description of this directive.\n\n#error_default_type = text/plain  # Default MIME type to use when the request\n                                  # `Accept` header is missing and Nginx\n                                  # is returning an error for the request.\n                                  # Accepted values are `text/plain`,\n                                  # `text/html`, `application/json`, and\n                                  # `application/xml`.\n\n#upstream_keepalive_pool_size = 512  # Sets the default size of the upstream\n                                     # keepalive connection pools.\n                                     # Upstream keepalive connection pools\n                                     # are segmented by the `dst ip/dst\n                                     # port/SNI` attributes of a connection.\n                                     # A value of `0` will disable upstream\n                                     # keepalive connections by default, forcing\n                                     # each upstream request to open a new\n                                     # connection.\n\n#upstream_keepalive_max_requests = 10000 # Sets the default maximum number of\n                                         # requests that can be proxied upstream\n                                         # through one keepalive connection.\n                                         # After the maximum number of requests\n                                         # is reached, the connection will be\n                                         # closed.\n                                         # A value of `0` will disable this\n                                         # behavior, and a keepalive connection\n                                         # can be used to proxy an indefinite\n                                         # number of requests.\n\n#upstream_keepalive_idle_timeout = 60   # Sets the default timeout (in seconds)\n                                        # for which an upstream keepalive\n                                        # connection should be kept open. When\n                                        # the timeout is reached while the\n                                        # connection has not been reused, it\n                                        # will be closed.\n                                        # A value of `0` will disable this\n                                        # behavior, and an idle keepalive\n                                        # connection may be kept open\n                                        # indefinitely.\n\n#allow_debug_header = off               # Enable the `Kong-Debug` header function.\n                                        # If it is `on`, Kong will add\n                                        # `Kong-Route-Id`, `Kong-Route-Name`, `Kong-Service-Id`,\n                                        # and `Kong-Service-Name` debug headers to the response when\n                                        # the client request header `Kong-Debug: 1` is present.\n\n#------------------------------------------------------------------------------\n# NGINX injected directives\n#------------------------------------------------------------------------------\n\n# Nginx directives can be dynamically injected in the runtime nginx.conf file\n# without requiring a custom Nginx configuration template.\n#\n# All configuration properties following the naming scheme\n# `nginx_<namespace>_<directive>` will result in `<directive>` being injected in\n# the Nginx configuration block corresponding to the property's `<namespace>`.\n# Example:\n#   `nginx_proxy_large_client_header_buffers = 8 24k`\n#\n#   Will inject the following directive in Kong's proxy `server {}` block:\n#\n#   `large_client_header_buffers 8 24k;`\n#\n# The following namespaces are supported:\n#\n# - `nginx_main_<directive>`: Injects `<directive>` in Kong's configuration\n#   `main` context.\n# - `nginx_events_<directive>`: Injects `<directive>` in Kong's `events {}`\n#   block.\n# - `nginx_http_<directive>`: Injects `<directive>` in Kong's `http {}` block.\n# - `nginx_proxy_<directive>`: Injects `<directive>` in Kong's proxy\n#   `server {}` block.\n# - `nginx_location_<directive>`: Injects `<directive>` in Kong's proxy `/`\n#   location block (nested under Kong's proxy `server {}` block).\n# - `nginx_upstream_<directive>`: Injects `<directive>` in Kong's proxy\n#   `upstream {}` block.\n# - `nginx_admin_<directive>`: Injects `<directive>` in Kong's Admin API\n#   `server {}` block.\n# - `nginx_status_<directive>`: Injects `<directive>` in Kong's Status API\n#   `server {}` block (only effective if `status_listen` is enabled).\n# - `nginx_debug_<directive>`: Injects `<directive>` in Kong's Debug API\n#   `server{}` block (only effective if `debug_listen` or `debug_listen_local`\n#   is enabled).\n# - `nginx_stream_<directive>`: Injects `<directive>` in Kong's stream module\n#   `stream {}` block (only effective if `stream_listen` is enabled).\n# - `nginx_sproxy_<directive>`: Injects `<directive>` in Kong's stream module\n#   `server {}` block (only effective if `stream_listen` is enabled).\n# - `nginx_supstream_<directive>`: Injects `<directive>` in Kong's stream\n#   module `upstream {}` block.\n#\n# As with other configuration properties, Nginx directives can be injected via\n# environment variables when capitalized and prefixed with `KONG_`.\n# Example:\n#   `KONG_NGINX_HTTP_SSL_PROTOCOLS` -> `nginx_http_ssl_protocols`\n#\n#   Will inject the following directive in Kong's `http {}` block:\n#\n#   `ssl_protocols <value>;`\n#\n#   If different sets of protocols are desired between the proxy and Admin API\n#   server, you may specify `nginx_proxy_ssl_protocols` and/or\n#   `nginx_admin_ssl_protocols`, both of which take precedence over the\n#   `http {}` block.\n\n#nginx_main_worker_rlimit_nofile = auto\n                                 # Changes the limit on the maximum number of open files\n                                 # for worker processes.\n                                 #\n                                 # The special and default value of `auto` sets this\n                                 # value to `ulimit -n` with the upper bound limited to\n                                 # 16384 as a measure to protect against excess memory use,\n                                 # and the lower bound of 1024 as a good default.\n                                 #\n                                 # See http://nginx.org/en/docs/ngx_core_module.html#worker_rlimit_nofile\n\n#nginx_events_worker_connections = auto\n                                 # Sets the maximum number of simultaneous\n                                 # connections that can be opened by a worker process.\n                                 #\n                                 # The special and default value of `auto` sets this\n                                 # value to `ulimit -n` with the upper bound limited to\n                                 # 16384 as a measure to protect against excess memory use,\n                                 # and the lower bound of 1024 as a good default.\n                                 #\n                                 # See http://nginx.org/en/docs/ngx_core_module.html#worker_connections\n\n#nginx_http_client_header_buffer_size = 1k  # Sets buffer size for reading the\n                                            # client request headers.\n                                            # See http://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_buffer_size\n\n#nginx_http_large_client_header_buffers = 4 8k  # Sets the maximum number and\n                                                # size of buffers used for\n                                                # reading large client\n                                                # request headers.\n                                                # See http://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers\n\n#nginx_http_client_max_body_size = 0  # Defines the maximum request body size\n                                      # allowed by requests proxied by Kong,\n                                      # specified in the Content-Length request\n                                      # header. If a request exceeds this\n                                      # limit, Kong will respond with a 413\n                                      # (Request Entity Too Large). Setting\n                                      # this value to 0 disables checking the\n                                      # request body size.\n                                      # See http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size\n\n#nginx_admin_client_max_body_size = 10m  # Defines the maximum request body size for\n                                         # Admin API.\n\n#nginx_http_charset = UTF-8  # Adds the specified charset to the “Content-Type”\n                             # response header field. If this charset is different\n                             # from the charset specified in the `source_charset`\n                             # directive, a conversion is performed.\n                             #\n                             # The parameter `off` cancels the addition of\n                             # charset to the “Content-Type” response header field.\n                             # See http://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\n\n#nginx_http_client_body_buffer_size = 8k  # Defines the buffer size for reading\n                                          # the request body. If the client\n                                          # request body is larger than this\n                                          # value, the body will be buffered to\n                                          # disk. Note that when the body is\n                                          # buffered to disk, Kong plugins that\n                                          # access or manipulate the request\n                                          # body may not work, so it is\n                                          # advisable to set this value as high\n                                          # as possible (e.g., set it as high\n                                          # as `client_max_body_size` to force\n                                          # request bodies to be kept in\n                                          # memory). Do note that\n                                          # high-concurrency environments will\n                                          # require significant memory\n                                          # allocations to process many\n                                          # concurrent large request bodies.\n                                          # See http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\n\n#nginx_admin_client_body_buffer_size = 10m  # Defines the buffer size for reading\n                                            # the request body on Admin API.\n\n#nginx_http_lua_regex_match_limit = 100000  # Global `MATCH_LIMIT` for PCRE\n                                            # regex matching. The default of `100000` should ensure\n                                            # at worst any regex Kong executes could finish within\n                                            # roughly 2 seconds.\n\n#nginx_http_lua_regex_cache_max_entries = 8192  # Specifies the maximum number of entries allowed\n                                                # in the worker process level PCRE JIT compiled regex cache.\n                                                # It is recommended to set it to at least (number of regex paths * 2)\n                                                # to avoid high CPU usages if you manually specified `router_flavor` to\n                                                # `traditional`. `expressions` and `traditional_compat` router do\n                                                # not make use of the PCRE library and their behavior\n                                                # is unaffected by this setting.\n\n#nginx_http_keepalive_requests = 10000 # Sets the maximum number of client requests that can be served through one\n                                       # keep-alive connection. After the maximum number of requests are made,\n                                       # the connection is closed.\n                                       # Closing connections periodically is necessary to free per-connection\n                                       # memory allocations. Therefore, using too high a maximum number of requests\n                                       # could result in excessive memory usage and is not recommended.\n                                       # See: https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_requests\n\n\n#------------------------------------------------------------------------------\n# DATASTORE\n#------------------------------------------------------------------------------\n\n# Kong can run with a database to store coordinated data between Kong nodes in\n# a cluster, or without a database, where each node stores its information\n# independently in memory.\n#\n# When using a database, Kong will store data for all its entities (such as\n# routes, services, consumers, and plugins) in PostgreSQL,\n# and all Kong nodes belonging to the same cluster must connect to the same database.\n#\n# Kong supports PostgreSQL versions 9.5 and above.\n#\n# When not using a database, Kong is said to be in \"DB-less mode\": it will keep\n# its entities in memory, and each node needs to have this data entered via a\n# declarative configuration file, which can be specified through the\n# `declarative_config` property, or via the Admin API using the `/config`\n# endpoint.\n#\n# When using Postgres as the backend storage, you can optionally enable Kong\n# to serve read queries from a separate database instance.\n# When the number of proxies is large, this can greatly reduce the load\n# on the main Postgres instance and achieve better scalability. It may also\n# reduce the latency jitter if the Kong proxy node's latency to the main\n# Postgres instance is high.\n#\n# The read-only Postgres instance only serves read queries, and write\n# queries still go to the main connection. The read-only Postgres instance\n# can be eventually consistent while replicating changes from the main\n# instance.\n#\n# At least the `pg_ro_host` config is needed to enable this feature.\n# By default, all other database config for the read-only connection is\n# inherited from the corresponding main connection config described above but\n# may be optionally overwritten explicitly using the `pg_ro_*` config below.\n\n#database = postgres             # Determines the database (or no database) for\n                                 # this node\n                                 # Accepted values are `postgres` and `off`.\n\n#pg_host = 127.0.0.1             # Host of the Postgres server.\n#pg_port = 5432                  # Port of the Postgres server.\n#pg_timeout = 5000               # Defines the timeout (in ms), for connecting,\n                                 # reading and writing.\n\n#pg_user = kong                  # Postgres user.\n#pg_password =                   # Postgres user's password.\n#pg_database = kong              # The database name to connect to.\n\n#pg_schema =                     # The database schema to use. If unspecified,\n                                 # Kong will respect the `search_path` value of\n                                 # your PostgreSQL instance.\n\n#pg_ssl = off                    # Toggles client-server TLS connections\n                                 # between Kong and PostgreSQL.\n                                 # Because PostgreSQL uses the same port for TLS\n                                 # and non-TLS, this is only a hint. If the\n                                 # server does not support TLS, the established\n                                 # connection will be a plain one.\n\n#pg_ssl_verify = off             # Toggles server certificate verification if\n                                 # `pg_ssl` is enabled.\n                                 # See the `lua_ssl_trusted_certificate`\n                                 # setting to specify a certificate authority.\n\n#pg_max_concurrent_queries = 0   # Sets the maximum number of concurrent queries\n                                 # that can be executing at any given time. This\n                                 # limit is enforced per worker process; the\n                                 # total number of concurrent queries for this\n                                 # node will be will be:\n                                 # `pg_max_concurrent_queries * nginx_worker_processes`.\n                                 #\n                                 # The default value of 0 removes this\n                                 # concurrency limitation.\n\n#pg_semaphore_timeout = 60000    # Defines the timeout (in ms) after which\n                                 # PostgreSQL query semaphore resource\n                                 # acquisition attempts will fail. Such\n                                 # failures will generally result in the\n                                 # associated proxy or Admin API request\n                                 # failing with an HTTP 500 status code.\n                                 # Detailed discussion of this behavior is\n                                 # available in the online documentation.\n\n#pg_keepalive_timeout =          # Specify the maximal idle timeout (in ms)\n                                 # for the postgres connections in the pool.\n                                 # If this value is set to 0 then the timeout interval\n                                 # is unlimited.\n                                 #\n                                 # If not specified this value will be same as\n                                 # `lua_socket_keepalive_timeout`\n\n#pg_pool_size =                  # Specifies the size limit (in terms of connection\n                                 # count) for the Postgres server.\n                                 # Note that this connection pool is intended\n                                 # per Nginx worker rather than per Kong instance.\n                                 #\n                                 # If not specified, the default value is the same as\n                                 # `lua_socket_pool_size`\n\n#pg_backlog =                    # If specified, this value will limit the total\n                                 # number of open connections to the Postgres\n                                 # server to `pg_pool_size`. If the connection\n                                 # pool is full, subsequent connect operations\n                                 # will be inserted in a queue with size equal\n                                 # to this option's value.\n                                 #\n                                 # If the number of queued connect operations\n                                 # reaches `pg_backlog`, exceeding connections will fail.\n                                 #\n                                 # If not specified, then number of open connections\n                                 # to the Postgres server is not limited.\n\n#pg_ro_host =                    # Same as `pg_host`, but for the\n                                 # read-only connection.\n                                 # **Note:** Refer to the documentation\n                                 # section above for detailed usage.\n\n#pg_ro_port = <pg_port>          # Same as `pg_port`, but for the\n                                 # read-only connection.\n\n#pg_ro_timeout = <pg_timeout>    # Same as `pg_timeout`, but for the\n                                 # read-only connection.\n\n#pg_ro_user = <pg_user>          # Same as `pg_user`, but for the\n                                 # read-only connection.\n\n#pg_ro_password = <pg_password>  # Same as `pg_password`, but for the\n                                 # read-only connection.\n\n#pg_ro_database = <pg_database>  # Same as `pg_database`, but for the\n                                 # read-only connection.\n\n#pg_ro_schema = <pg_schema>      # Same as `pg_schema`, but for the\n                                 # read-only connection.\n\n#pg_ro_ssl = <pg_ssl>            # Same as `pg_ssl`, but for the\n                                 # read-only connection.\n\n#pg_ro_ssl_verify = <pg_ssl_verify>\n                                 # Same as `pg_ssl_verify`, but for the\n                                 # read-only connection.\n\n#pg_ro_max_concurrent_queries = <pg_max_concurrent_queries>\n                                 # Same as `pg_max_concurrent_queries`, but for\n                                 # the read-only connection.\n                                 # Note: read-only concurrency is not shared\n                                 # with the main (read-write) connection.\n\n#pg_ro_semaphore_timeout = <pg_semaphore_timeout>\n                                 # Same as `pg_semaphore_timeout`, but for the\n                                 # read-only connection.\n\n#pg_ro_keepalive_timeout = <pg_keepalive_timeout>\n                                 # Same as `pg_keepalive_timeout`, but for the\n                                 # read-only connection.\n\n#pg_ro_pool_size = <pg_pool_size>\n                                 # Same as `pg_pool_size`, but for the\n                                 # read-only connection.\n\n#pg_ro_backlog = <pg_backlog>\n                                 # Same as `pg_backlog`, but for the\n                                 # read-only connection.\n\n#declarative_config =           # The path to the declarative configuration\n                                # file which holds the specification of all\n                                # entities (routes, services, consumers, etc.)\n                                # to be used when the `database` is set to\n                                # `off`.\n                                #\n                                # Entities are stored in Kong's LMDB cache,\n                                # so you must ensure that enough headroom is\n                                # allocated to it via the `lmdb_map_size`\n                                # property.\n                                #\n                                # If the hybrid mode `role` is set to `data_plane`\n                                # and there's no configuration cache file,\n                                # this configuration is used before connecting\n                                # to the control plane node as a user-controlled\n                                # fallback.\n\n#declarative_config_string =    # The declarative configuration as a string\n\n#lmdb_environment_path = dbless.lmdb  # Directory where the LMDB database files used by\n                                      # DB-less and hybrid mode to store Kong\n                                      # configurations reside.\n                                      #\n                                      # This path is relative under the Kong `prefix`.\n\n#lmdb_map_size = 2048m                # Maximum size of the LMDB memory map, used to store the\n                                      # DB-less and hybrid mode configurations. Default is 2048m.\n                                      #\n                                      # This config defines the limit of LMDB file size; the\n                                      # actual file size growth will be on-demand and\n                                      # proportional to the actual config size.\n                                      #\n                                      # Note this value can be set very large, say a couple of GBs,\n                                      # to accommodate future database growth and\n                                      # Multi-Version Concurrency Control (MVCC) headroom needs.\n                                      # The file size of the LMDB database file should stabilize\n                                      # after a few config reloads/hybrid mode syncs, and the actual\n                                      # memory used by the LMDB database will be smaller than\n                                      # the file size due to dynamic swapping of database pages by\n                                      # the OS.\n\n#------------------------------------------------------------------------------\n# DATASTORE CACHE\n#------------------------------------------------------------------------------\n\n# In order to avoid unnecessary communication with the datastore, Kong caches\n# entities (such as APIs, consumers, credentials...) for a configurable period\n# of time. It also handles invalidations if such an entity is updated.\n#\n# This section allows for configuring the behavior of Kong regarding the\n# caching of such configuration entities.\n#db_update_frequency = 5         # Frequency (in seconds) at which to check for\n                                 # updated entities with the datastore.\n                                 #\n                                 # When a node creates, updates, or deletes an\n                                 # entity via the Admin API, other nodes need\n                                 # to wait for the next poll (configured by\n                                 # this value) to eventually purge the old\n                                 # cached entity and start using the new one.\n\n#db_update_propagation = 0       # Time (in seconds) taken for an entity in the\n                                 # datastore to be propagated to replica nodes\n                                 # of another datacenter.\n                                 #\n                                 # When set, this property will increase the\n                                 # time taken by Kong to propagate the change\n                                 # of an entity.\n                                 #\n                                 # Single-datacenter setups or PostgreSQL\n                                 # servers should suffer no such delays, and\n                                 # this value can be safely set to 0.\n                                 # Postgres setups with read replicas should\n                                 # set this value to the maximum expected replication\n                                 # lag between the writer and reader instances.\n\n#db_cache_ttl = 0                # Time-to-live (in seconds) of an entity from\n                                 # the datastore when cached by this node.\n                                 #\n                                 # Database misses (no entity) are also cached\n                                 # according to this setting if you do not\n                                 # configure `db_cache_neg_ttl`.\n                                 #\n                                 # If set to 0 (default), such cached entities\n                                 # or misses never expire.\n\n#db_cache_neg_ttl =              # Time-to-live (in seconds) of a datastore\n                                 # miss (no entity).\n                                 #\n                                 # If not specified (default), `db_cache_ttl`\n                                 # value will be used instead.\n                                 #\n                                 # If set to 0, misses will never expire.\n\n#db_resurrect_ttl = 30           # Time (in seconds) for which stale entities\n                                 # from the datastore should be resurrected\n                                 # when they cannot be refreshed (e.g., the\n                                 # datastore is unreachable). When this TTL\n                                 # expires, a new attempt to refresh the stale\n                                 # entities will be made.\n\n#db_cache_warmup_entities = services\n                                 # Entities to be pre-loaded from the datastore\n                                 # into the in-memory cache at Kong start-up.\n                                 # This speeds up the first access of endpoints\n                                 # that use the given entities.\n                                 #\n                                 # When the `services` entity is configured\n                                 # for warmup, the DNS entries for values in\n                                 # its `host` attribute are pre-resolved\n                                 # asynchronously as well.\n                                 #\n                                 # Cache size set in `mem_cache_size` should\n                                 # be set to a value large enough to hold all\n                                 # instances of the specified entities.\n                                 # If the size is insufficient, Kong will log\n                                 # a warning.\n\n#------------------------------------------------------------------------------\n# DNS RESOLVER\n#------------------------------------------------------------------------------\n\n# By default, the DNS resolver will use the standard configuration files\n# `/etc/hosts` and `/etc/resolv.conf`. The settings in the latter file will be\n# overridden by the environment variables `LOCALDOMAIN` and `RES_OPTIONS` if\n# they have been set.\n#\n# Kong will resolve hostnames as either `SRV` or `A` records (in that order, and\n# `CNAME` records will be dereferenced in the process).\n# In case a name is resolved as an `SRV` record, it will also override any given\n# port number with the `port` field contents received from the DNS server.\n#\n# The DNS options `SEARCH` and `NDOTS` (from the `/etc/resolv.conf` file) will\n# be used to expand short names to fully qualified ones. So it will first try\n# the entire `SEARCH` list for the `SRV` type, if that fails it will try the\n# `SEARCH` list for `A`, etc.\n#\n# For the duration of the `ttl`, the internal DNS resolver will load balance each\n# request it gets over the entries in the DNS record. For `SRV` records, the\n# `weight` fields will be honored, but it will only use the lowest `priority`\n# field entries in the record.\n\n#dns_resolver =                  # Comma-separated list of nameservers, each\n                                 # entry in `ip[:port]` format to be used by\n                                 # Kong. If not specified, the nameservers in\n                                 # the local `resolv.conf` file will be used.\n                                 # Port defaults to 53 if omitted. Accepts\n                                 # both IPv4 and IPv6 addresses.\n\n#dns_hostsfile = /etc/hosts      # The hosts file to use. This file is read\n                                 # once and its content is static in memory.\n                                 # To read the file again after modifying it,\n                                 # Kong must be reloaded.\n\n#dns_order = LAST,SRV,A,CNAME    # The order in which to resolve different\n                                 # record types. The `LAST` type means the\n                                 # type of the last successful lookup (for the\n                                 # specified name). The format is a (case\n                                 # insensitive) comma-separated list.\n\n#dns_valid_ttl =                 # By default, DNS records are cached using\n                                 # the TTL value of a response. If this\n                                 # property receives a value (in seconds), it\n                                 # will override the TTL for all records.\n\n#dns_stale_ttl = 3600            # Defines, in seconds, how long a record will\n                                 # remain in cache past its TTL. This value\n                                 # will be used while the new DNS record is\n                                 # fetched in the background.\n                                 # Stale data will be used from expiry of a\n                                 # record until either the refresh query\n                                 # completes, or the `dns_stale_ttl` number of\n                                 # seconds have passed.\n                                 # This configuration enables Kong to be more\n                                 # resilient during resolver downtime.\n\n#dns_cache_size = 10000          # Defines the maximum allowed number of\n                                 # DNS records stored in memory cache.\n                                 # Least recently used DNS records are discarded\n                                 # from cache if it is full. Both errors and\n                                 # data are cached; therefore, a single name query\n                                 # can easily take up 10-15 slots.\n\n#dns_not_found_ttl = 30          # TTL in seconds for empty DNS responses and\n                                 # \"(3) name error\" responses.\n\n#dns_error_ttl = 1               # TTL in seconds for error responses.\n\n#dns_no_sync = off               # If enabled, then upon a cache-miss every\n                                 # request will trigger its own DNS query.\n                                 # When disabled, multiple requests for the\n                                 # same name/type will be synchronized to a\n                                 # single query.\n\n#------------------------------------------------------------------------------\n# New DNS RESOLVER\n#------------------------------------------------------------------------------\n\n# This DNS resolver introduces global caching for DNS records across workers,\n# significantly reducing the query load on DNS servers.\n#\n# It provides observable statistics, you can retrieve them through the Admin API\n# `/status/dns`.\n\n#new_dns_client = off            # Enable or disable the new DNS resolver\n\n#resolver_address = <name servers parsed from resolv.conf>\n                                 # Comma-separated list of nameservers, each\n                                 # entry in `ip[:port]` format to be used by\n                                 # Kong. If not specified, the nameservers in\n                                 # the local `resolv.conf` file will be used.\n                                 # Port defaults to 53 if omitted. Accepts\n                                 # both IPv4 and IPv6 addresses.\n                                 #\n                                 # Examples:\n                                 #\n                                 # ```\n                                 # resolver_address = 8.8.8.8\n                                 # resolver_address = 8.8.8.8, [::1]\n                                 # resolver_address = 8.8.8.8:53, [::1]:53\n                                 # ```\n\n#resolver_hosts_file = /etc/hosts\n                                 # The hosts file to use. This file is read\n                                 # once and its content is static in memory.\n                                 # To read the file again after modifying it,\n                                 # Kong must be reloaded.\n\n#resolver_family = A,SRV         # The supported query types.\n                                 #\n                                 # For a domain name, Kong will only query\n                                 # either IP addresses (A or AAAA) or SRV\n                                 # records, but not both.\n                                 #\n                                 # It will query SRV records only when the\n                                 # domain matches the\n                                 # \"_<proto>._<service>.<name>\" format, for\n                                 # example, \"_ldap._tcp.example.com\".\n                                 #\n                                 # For IP addresses (A or AAAA) resolution, it\n                                 # first attempts IPv4 (A) and then queries\n                                 # IPv6 (AAAA).\n\n#resolver_valid_ttl = <TTL from responses>\n                                 # By default, DNS records are cached using\n                                 # the TTL value of a response. This optional\n                                 # parameter (in seconds) allows overriding it.\n\n#resolver_error_ttl = 1          # TTL in seconds for error responses and empty\n                                 # responses.\n\n#resolver_stale_ttl = 3600       # Defines, in seconds, how long a record will\n                                 # remain in cache past its TTL. This value\n                                 # will be used while the new DNS record is\n                                 # fetched in the background.\n                                 #\n                                 # Stale data will be used from expiry of a\n                                 # record until either the refresh query\n                                 # completes, or the `resolver_stale_ttl` number\n                                 # of seconds have passed.\n                                 #\n                                 # This configuration enables Kong to be more\n                                 # resilient during the DNS server downtime.\n\n#resolver_lru_cache_size = 10000 # The DNS client uses a two-layer cache system:\n                                 # L1 - worker-level LRU Lua VM cache\n                                 # L2 - across-workers shared memory cache\n                                 #\n                                 # This value specifies the maximum allowed\n                                 # number of DNS responses stored in the L1 LRU\n                                 # lua VM cache.\n                                 #\n                                 # A single name query can easily take up 1~10\n                                 # slots, depending on attempted query types and\n                                 # extended domains from /etc/resolv.conf\n                                 # options `domain` or `search`.\n\n#resolver_mem_cache_size = 5m    # This value specifies the size of the L2\n                                 # shared memory cache for DNS responses,\n                                 # `kong_dns_cache`.\n                                 #\n                                 # Accepted units are `k` and `m`, with a\n                                 # minimum recommended value of a few MBs.\n                                 #\n                                 # 5MB shared memory size could store\n                                 # ~20000 DNS responeses with single A record or\n                                 # ~10000 DNS responeses with 2~3 A records.\n                                 #\n                                 # 10MB shared memory size could store\n                                 # ~40000 DNS responeses with single A record or\n                                 # ~20000 DNS responeses with 2~3 A records.\n\n\n#------------------------------------------------------------------------------\n# VAULTS\n#------------------------------------------------------------------------------\n\n# A secret is any sensitive piece of information required for API gateway\n# operations. Secrets may be part of the core Kong Gateway configuration,\n# used in plugins, or part of the configuration associated with APIs serviced\n# by the gateway.\n#\n# Some of the most common types of secrets used by Kong Gateway include:\n#\n# - Data store usernames and passwords, used with PostgreSQL and Redis\n# - Private X.509 certificates\n# - API keys\n#\n# Sensitive plugin configuration fields are generally used for authentication,\n# hashing, signing, or encryption. Kong Gateway lets you store certain values\n# in a vault. Here are the vault specific configuration options.\n\n#vault_env_prefix =              # Defines the environment variable vault's\n                                 # default prefix. For example if you have\n                                 # all your secrets stored in environment\n                                 # variables prefixed with `SECRETS_`, it\n                                 # can be configured here so that it isn't\n                                 # necessary to repeat them in Vault\n                                 # references.\n\n#------------------------------------------------------------------------------\n# TUNING & BEHAVIOR\n#------------------------------------------------------------------------------\n\n#worker_consistency = eventual\n                                 # Defines whether this node should rebuild its\n                                 # state synchronously or asynchronously (the\n                                 # balancers and the router are rebuilt on\n                                 # updates that affect them, e.g., updates to\n                                 # routes, services, or upstreams via the admin\n                                 # API or loading a declarative configuration\n                                 # file). (This option is deprecated and will be\n                                 # removed in future releases. The new default\n                                 # is `eventual`.)\n                                 #\n                                 # Accepted values are:\n                                 #\n                                 # - `strict`: the router will be rebuilt\n                                 #   synchronously, causing incoming requests to\n                                 #   be delayed until the rebuild is finished.\n                                 #   (This option is deprecated and will be removed\n                                 #    in future releases. The new default is `eventual`)\n                                 # - `eventual`: the router will be rebuilt\n                                 #   asynchronously via a recurring background\n                                 #   job running every second inside of each\n                                 #   worker.\n                                 #\n                                 # Note that `strict` ensures that all workers\n                                 # of a given node will always proxy requests\n                                 # with an identical router, but increased\n                                 # long-tail latency can be observed if\n                                 # frequent routes and services updates are\n                                 # expected.\n                                 # Using `eventual` will help prevent long-tail\n                                 # latency issues in such cases, but may\n                                 # cause workers to route requests differently\n                                 # for a short period of time after routes and\n                                 # services updates.\n\n#worker_state_update_frequency = 5\n                                 # Defines how often the worker state changes are\n                                 # checked with a background job. When a change\n                                 # is detected, a new router or balancer will be\n                                 # built, as needed. Raising this value will\n                                 # decrease the load on database servers and\n                                 # result in less jitter in proxy latency, but\n                                 # it might take more time to propagate changes\n                                 # to each individual worker.\n\n#router_flavor = traditional_compatible\n                                 # Selects the router implementation to use when\n                                 # performing request routing. Incremental router\n                                 # rebuild is available when the flavor is set\n                                 # to either `expressions` or\n                                 # `traditional_compatible`, which could\n                                 # significantly shorten rebuild time for a large\n                                 # number of routes.\n                                 #\n                                 # Accepted values are:\n                                 #\n                                 # - `traditional_compatible`: the DSL-based expression\n                                 #   router engine will be used under the hood. However,\n                                 #   the router config interface will be the same\n                                 #   as `traditional`, and expressions are\n                                 #   automatically generated at router build time.\n                                 #   The `expression` field on the `route` object\n                                 #   is not visible.\n                                 # - `expressions`: the DSL-based expression router engine\n                                 #   will be used under the hood. The traditional router\n                                 #   config interface is still visible, and you can also write\n                                 #   router Expressions manually and provide them in the\n                                 #   `expression` field on the `route` object.\n                                 # - `traditional`: the pre-3.0 router engine will be\n                                 #   used. The config interface will be the same as\n                                 #   pre-3.0 Kong, and the `expression` field on the\n                                 #   `route` object is not visible.\n                                 #\n                                 #   Deprecation warning: In Kong 3.0, `traditional`\n                                 #   mode should be avoided and only be used if\n                                 #   `traditional_compatible` does not work as expected.\n                                 #   This flavor of the router will be removed in the next\n                                 #   major release of Kong.\n\n#lua_max_req_headers = 100       # Maximum number of request headers to parse by default.\n                                 #\n                                 # This argument can be set to an integer between 1 and 1000.\n                                 #\n                                 # When proxying, Kong sends all the request headers,\n                                 # and this setting does not have any effect. It is used\n                                 # to limit Kong and its plugins from reading too many\n                                 # request headers.\n\n#lua_max_resp_headers = 100      # Maximum number of response headers to parse by default.\n                                 #\n                                 # This argument can be set to an integer between 1 and 1000.\n                                 #\n                                 # When proxying, Kong returns all the response headers,\n                                 # and this setting does not have any effect. It is used\n                                 # to limit Kong and its plugins from reading too many\n                                 # response headers.\n\n#lua_max_uri_args = 100          # Maximum number of request URI arguments to parse by\n                                 # default.\n                                 #\n                                 # This argument can be set to an integer between 1 and 1000.\n                                 #\n                                 # When proxying, Kong sends all the request query\n                                 # arguments, and this setting does not have any effect.\n                                 # It is used to limit Kong and its plugins from reading\n                                 # too many query arguments.\n\n#lua_max_post_args = 100         # Maximum number of request post arguments to parse by\n                                 # default.\n                                 #\n                                 # This argument can be set to an integer between 1 and 1000.\n                                 #\n                                 # When proxying, Kong sends all the request post\n                                 # arguments, and this setting does not have any effect.\n                                 # It is used to limit Kong and its plugins from reading\n                                 # too many post arguments.\n\n#------------------------------------------------------------------------------\n# MISCELLANEOUS\n#------------------------------------------------------------------------------\n\n# Additional settings inherited from lua-nginx-module allowing for more\n# flexibility and advanced usage.\n#\n# See the lua-nginx-module documentation for more information:\n# https://github.com/openresty/lua-nginx-module\n\n\n#lua_ssl_trusted_certificate = system   # Comma-separated list of certificate authorities\n                                        # for Lua cosockets in PEM format.\n                                        #\n                                        # The special value `system` attempts to search for the\n                                        # \"usual default\" provided by each distro, according\n                                        # to an arbitrary heuristic. In the current implementation,\n                                        # the following pathnames will be tested in order,\n                                        # and the first one found will be used:\n                                        #\n                                        # - `/etc/ssl/certs/ca-certificates.crt` (Debian/Ubuntu/Gentoo)\n                                        # - `/etc/pki/tls/certs/ca-bundle.crt` (Fedora/RHEL 6)\n                                        # - `/etc/ssl/ca-bundle.pem` (OpenSUSE)\n                                        # - `/etc/pki/tls/cacert.pem` (OpenELEC)\n                                        # - `/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem` (CentOS/RHEL 7)\n                                        # - `/etc/ssl/cert.pem` (OpenBSD, Alpine)\n                                        #\n                                        # `system` can be used by itself or in conjunction with other\n                                        # CA file paths.\n                                        #\n                                        # When `pg_ssl_verify` is enabled, these\n                                        # certificate authority files will be\n                                        # used for verifying Kong's database connections.\n                                        #\n                                        # Certificates can be configured on this property\n                                        # with any of the following values:\n                                        # - `system`\n                                        # - absolute path to the certificate\n                                        # - certificate content\n                                        # - base64 encoded certificate content\n                                        #\n                                        # See https://github.com/openresty/lua-nginx-module#lua_ssl_trusted_certificate\n\n#lua_ssl_verify_depth = 1        # Sets the verification depth in the server\n                                 # certificates chain used by Lua cosockets,\n                                 # set by `lua_ssl_trusted_certificate`.\n                                 # This includes the certificates configured\n                                 # for Kong's database connections.\n                                 # If the maximum depth is reached before\n                                 # reaching the end of the chain, verification\n                                 # will fail. This helps mitigate certificate\n                                 # based DoS attacks.\n                                 #\n                                 # See https://github.com/openresty/lua-nginx-module#lua_ssl_verify_depth\n\n#lua_ssl_protocols = TLSv1.2 TLSv1.3   # Defines the TLS versions supported\n                                               # when handshaking with OpenResty's\n                                               # TCP cosocket APIs.\n                                               #\n                                               # This affects connections made by Lua\n                                               # code, such as connections to the\n                                               # database Kong uses, or when sending logs\n                                               # using a logging plugin. It does *not*\n                                               # affect connections made to the upstream\n                                               # Service or from downstream clients.\n\n#lua_package_path = ./?.lua;./?/init.lua;  # Sets the Lua module search path\n                                           # (LUA_PATH). Useful when developing\n                                           # or using custom plugins not stored\n                                           # in the default search path.\n                                           #\n                                           # See https://github.com/openresty/lua-nginx-module#lua_package_path\n\n#lua_package_cpath =             # Sets the Lua C module search path\n                                 # (LUA_CPATH).\n                                 #\n                                 # See https://github.com/openresty/lua-nginx-module#lua_package_cpath\n\n#lua_socket_pool_size = 256      # Specifies the size limit for every cosocket\n                                 # connection pool associated with every remote\n                                 # server.\n                                 #\n                                 # See https://github.com/openresty/lua-nginx-module#lua_socket_pool_size\n#untrusted_lua = sandbox\n                                 # Controls loading of Lua functions from admin-supplied\n                                 # sources such as the Admin API. LuaJIT bytecode\n                                 # loading is always disabled.\n                                 #\n                                 # **Warning:** LuaJIT is not designed as a secure\n                                 # runtime for running malicious code, therefore\n                                 # you should properly protect your Admin API endpoint\n                                 # even with sandboxing enabled. The sandbox only\n                                 # provides protection against trivial attackers or\n                                 # unintentional modification of the Kong global\n                                 # environment.\n                                 #\n                                 # Accepted values are: `off`, `sandbox`, or\n                                 # `on`:\n                                 #\n                                 # * `off`: Disallow loading of any arbitrary\n                                 #          Lua functions. The `off` option\n                                 #          disables any functionality that runs\n                                 #          arbitrary Lua code, including the\n                                 #          Serverless Functions plugins and any\n                                 #          transformation plugin that allows\n                                 #          custom Lua functions.\n                                 #\n                                 # * `sandbox`: Allow loading of Lua functions,\n                                 #              but use a sandbox when executing\n                                 #              them. The sandboxed function has\n                                 #              restricted access to the global\n                                 #              environment and only has access\n                                 #              to Kong PDK, OpenResty, and\n                                 #              standard Lua functions that will\n                                 #              generally not cause harm to the\n                                 #              Kong Gateway node.\n                                 #\n                                 # * `on`: Functions have unrestricted\n                                 #         access to the global environment and\n                                 #         can load any Lua modules. This is\n                                 #         similar to the behavior in\n                                 #         Kong Gateway prior to 2.3.0.\n                                 #\n                                 # The default `sandbox` environment does not\n                                 # allow importing other modules or libraries,\n                                 # or executing anything at the OS level (for\n                                 # example, file read/write). The global\n                                 # environment is also not accessible.\n                                 #\n                                 # Examples of `untrusted_lua = sandbox`\n                                 # behavior:\n                                 #\n                                 # * You can't access or change global values\n                                 # such as `kong.configuration.pg_password`\n                                 # * You can run harmless lua:\n                                 # `local foo = 1 + 1`. However, OS level\n                                 # functions are not allowed, like:\n                                 # `os.execute('rm -rf /*')`.\n                                 #\n                                 # To customize the sandbox environment, use\n                                 # the `untrusted_lua_sandbox_requires` and\n                                 # `untrusted_lua_sandbox_environment`\n                                 # parameters below.\n\n#untrusted_lua_sandbox_requires = # Comma-separated list of modules allowed to\n                                  # be loaded with `require` inside the\n                                  # sandboxed environment. Ignored\n                                  # if `untrusted_lua` is not `sandbox`.\n                                  #\n                                  # For example, say you have configured the\n                                  # Serverless pre-function plugin and it\n                                  # contains the following `requires`:\n                                  #\n                                  # ```\n                                  # local template = require \"resty.template\"\n                                  # local split = require \"kong.tools.string\".split\n                                  # ```\n                                  #\n                                  # To run the plugin, add the modules to the\n                                  # allowed list:\n                                  # ```\n                                  # untrusted_lua_sandbox_requires = resty.template, kong.tools.utils\n                                  # ```\n                                  #\n                                  # **Warning:** Allowing certain modules may\n                                  # create opportunities to escape the\n                                  # sandbox. For example, allowing `os` or\n                                  # `luaposix` may be unsafe.\n\n#untrusted_lua_sandbox_environment = # Comma-separated list of global Lua\n                                     # variables that should be made available\n                                     # inside the sandboxed environment. Ignored\n                                     # if `untrusted_lua` is not `sandbox`.\n                                     #\n                                     # **Warning**: Certain variables, when made\n                                     # available, may create opportunities to\n                                     # escape the sandbox.\n\n#openresty_path =                 # Path to the OpenResty installation that Kong\n                                  # will use. When this is empty (the default),\n                                  # Kong determines the OpenResty installation\n                                  # by searching for a system-installed OpenResty\n                                  # and falling back to searching $PATH for the\n                                  # nginx binary.\n                                  #\n                                  # Setting this attribute disables the search\n                                  # behavior and explicitly instructs Kong which\n                                  # OpenResty installation to use.\n\n#node_id =                        # Node ID for the Kong node. Every Kong node\n                                  # in a Kong cluster must have a unique and\n                                  # valid UUID. When empty, node ID is\n                                  # automatically generated.\n\n#------------------------------------------------------------------------------\n# KONG MANAGER\n#------------------------------------------------------------------------------\n#\n# The Admin GUI for Kong Enterprise.\n#\n#admin_gui_listen = 0.0.0.0:8002, 0.0.0.0:8445 ssl\n                        # Kong Manager Listeners\n                        #\n                        # Comma-separated list of addresses and ports on which\n                        # Kong will expose Kong Manager. This web application\n                        # lets you configure and manage Kong, and therefore\n                        # should be kept secured.\n                        #\n                        # Suffixes can be specified for each pair, similarly to\n                        # the `admin_listen` directive.\n\n#admin_gui_url =        # Kong Manager URL\n                        #\n                        # Comma-separated list of addresses (the lookup or balancer) for Kong Manager.\n                        #\n                        # Accepted format (items in square brackets are optional):\n                        #\n                        #   `<scheme>://<IP / HOSTNAME>[:<PORT>][<PATH>][, <scheme>://<IP / HOSTNAME>[:<PORT>][<PATH>]]`\n                        #\n                        # Examples:\n                        #\n                        # - `http://127.0.0.1:8003`\n                        # - `https://kong-admin.test`\n                        # - `http://dev-machine`\n                        # - `http://127.0.0.1:8003, https://exmple.com/manager`\n\n#admin_gui_path = /     # Kong Manager base path\n                        #\n                        # This configuration parameter allows the user to customize\n                        # the path prefix where Kong Manager is served. When updating\n                        # this parameter, it's recommended to update the path in `admin_gui_url`\n                        # as well.\n                        #\n                        # Accepted format:\n                        #\n                        # - Path must start with a `/`\n                        # - Path must not end with a `/` (except for the `/`)\n                        # - Path can only contain letters, digits, hyphens (`-`),\n                        # underscores (`_`), and slashes (`/`)\n                        # - Path must not contain continuous slashes (e.g., `//` and `///`)\n                        #\n                        # Examples:\n                        #\n                        # - `/`\n                        # - `/manager`\n                        # - `/kong-manager`\n                        # - `/kong/manager`\n\n#admin_gui_api_url =    # Hierarchical part of a URI which is composed\n                        # optionally of a host, port, and path at which the\n                        # Admin API accepts HTTP or HTTPS traffic. When\n                        # this config is disabled, Kong Manager will\n                        # use the window protocol + host and append the\n                        # resolved admin_listen HTTP/HTTPS port.\n\n#admin_gui_ssl_cert =   # The SSL certificate for `admin_gui_listen` values\n                        # with SSL enabled.\n                        #\n                        # values:\n                        # - absolute path to the certificate\n                        # - certificate content\n                        # - base64 encoded certificate content\n\n#admin_gui_ssl_cert_key = # The SSL key for `admin_gui_listen` values with SSL\n                          # enabled.\n                          #\n                          # values:\n                          # - absolute path to the certificate key\n                          # - certificate key content\n                          # - base64 encoded certificate key content\n\n#admin_gui_access_log = logs/admin_gui_access.log\n                        # Kong Manager Access Logs\n                        #\n                        # Here you can set an absolute or relative path for Kong\n                        # Manager access logs. When the path is relative,\n                        # logs are placed in the `prefix` location.\n                        #\n                        # Setting this value to `off` disables access logs\n                        # for Kong Manager.\n\n\n#admin_gui_error_log = logs/admin_gui_error.log\n                        # Kong Manager Error Logs\n                        #\n                        # Here you can set an absolute or relative path for Kong\n                        # Manager access logs. When the path is relative,\n                        # logs are placed in the `prefix` location.\n                        #\n                        # Setting this value to `off` disables error logs for\n                        # Kong Manager.\n                        #\n                        # Granularity can be adjusted through the `log_level`\n                        # directive.\n\n\n#------------------------------------------------------------------------------\n# WEBASSEMBLY (WASM)\n#------------------------------------------------------------------------------\n\n#wasm = off             # Enable/disable wasm support. This must be enabled in\n                        # order to use wasm filters and filter chains.\n\n#wasm_filters_path =    # Path to the directory containing wasm filter modules.\n                        #\n                        # At startup, Kong discovers available wasm filters by\n                        # scanning this directory for files with the `.wasm`\n                        # file extension.\n                        #\n                        # The name of a wasm filter module is derived from the\n                        # filename itself, with the .wasm extension removed. So,\n                        # given the following tree:\n                        #\n                        # ```\n                        # /path/to/wasm_filters\n                        # ├── my_module.wasm\n                        # ├── my_other_module.wasm\n                        # └── not_a_wasm_module.txt\n                        # ```\n                        #\n                        # The resulting filter modules available for use in Kong\n                        # will be:\n                        #\n                        # - `my_module`\n                        # - `my_other_module`\n                        #\n                        # Notes:\n                        #\n                        # - No recursion is performed. Only .wasm files at the\n                        #   top level are registered.\n                        # - This path _may_ be a symlink to a directory.\n\n#wasm_filters = bundled,user        # Comma-separated list of Wasm filters to be made\n                                    # available for use in filter chains.\n                                    #\n                                    # When the `off` keyword is specified as the\n                                    # only value, no filters will be available for use.\n                                    #\n                                    # When the `bundled` keyword is specified, all filters\n                                    # bundled with Kong will be available.\n                                    #\n                                    # When the `user` keyword is specified, all filters\n                                    # within the `wasm_filters_path` will be available.\n                                    #\n                                    # **Examples:**\n                                    #\n                                    # - `wasm_filters = bundled,user` enables _all_ bundled\n                                    #   and user-supplied filters\n                                    # - `wasm_filters = user` enables _only_ user-supplied\n                                    #   filters\n                                    # - `wasm_filters = filter-a,filter-b` enables _only_\n                                    #   filters named `filter-a` or `filter-b` (whether\n                                    #   bundled _or_ user-supplied)\n                                    #\n                                    # If a conflict occurs where a bundled filter and a\n                                    # user-supplied filter share the same name, a warning\n                                    # will be logged, and the user-supplied filter will\n                                    # be used instead.\n\n#------------------------------------------------------------------------------\n# WASM injected directives\n#------------------------------------------------------------------------------\n\n# The Nginx Wasm module (i.e., ngx_wasm_module) has its own settings, which can\n# be tuned via `wasm_*` directives in the Nginx configuration file. Kong\n# supports configuration of these directives via its Nginx directive injection\n# mechanism.\n#\n# The following namespaces are supported:\n#\n# - `nginx_wasm_<directive>`: Injects `<directive>` into the `wasm {}` block.\n# - `nginx_wasm_shm_kv`: Injects `shm_kv *` into the `wasm {}` block,\n#   allowing operators to define a general memory zone which is usable by\n#   the `get_shared_data`/`set_shared_data` Proxy-Wasm SDK functions as\n#   an in-memory key-value store of data shareable across filters.\n# - `nginx_wasm_shm_kv_<name>`: Injects `shm_kv <name>` into the `wasm {}` block,\n#   allowing operators to define custom shared memory zones which are usable by\n#   the `get_shared_data`/`set_shared_data` Proxy-Wasm SDK functions as\n#   separate namespaces in the `\"<name>/<key>\"` format.\n#   For using these functions with non-namespaced keys, the Nginx template needs\n#   a `shm_kv *` entry, which can be defined using `nginx_wasm_shm_kv`.\n# - `nginx_wasm_wasmtime_<flag>`: Injects `flag <flag>` into the `wasmtime {}`\n#   block, allowing various Wasmtime-specific flags to be set.\n# - `nginx_<http|proxy>_<directive>`: Injects `<directive>` into the\n#   `http {}` or `server {}` blocks, as specified in the Nginx injected directives\n#   section.\n#\n# The documentation for all supported directives can be found in the Nginx Wasm\n# module repository:\n#\n# https://github.com/Kong/ngx_wasm_module/blob/main/docs/DIRECTIVES.md\n#\n# The Wasmtime flag documentation can be found here:\n#\n# https://docs.wasmtime.dev/c-api/config_8h.html\n#\n# There are several noteworthy ngx_wasm_module behaviors which can be tuned via\n# `http {}`/`server {}` level directive injection (identical behavior in either\n# level), for example:\n#\n# - `nginx_http_proxy_wasm_socket_<connect|read|send>_timeout`: sets connection/read/send\n#   timeouts for Wasm dispatches.\n# - `nginx_http_proxy_wasm_socket_buffer_size`: sets a buffer size for\n#   reading Wasm dispatch responses.\n#\n# The values for these settings are inherited from their `nginx_*_lua_*`\n# counterparts if they have not been explicitly set. For instance, if you set\n# `nginx_http_lua_socket_connect_timeout`, the value\n# of this setting will be propagated to `nginx_http_wasm_socket_connect_timeout`\n# unless you _also_ set `nginx_http_wasm_socket_connect_timeout`.\n#\n# Some TLS-related settings receive special treatment as well:\n#\n# - `lua_ssl_trusted_certificate`: when set, the value is propagated to the\n#   `nginx_wasm_tls_trusted_certificate` directive.\n# - `lua_ssl_verify_depth`: when set (to a value greater than zero), several\n#   TLS-related `nginx_wasm_*` settings are enabled:\n#   - `nginx_wasm_tls_verify_cert`\n#   - `nginx_wasm_tls_verify_host`\n#   - `nginx_wasm_tls_no_verify_warn`\n#\n# Like other `kong.conf` fields, all injected Nginx directives documented here\n# can be set via environment variable. For instance, setting:\n#\n#   `KONG_NGINX_WASM_TLS_VERIFY_CERT=<value>`\n#\n#   Will inject the following into the `wasm {}` block:\n#\n#   `tls_verify_cert <value>;`\n#\n# There are several Nginx directives supported by ngx_wasm_module which should\n# not be used because they are irrelevant to or unsupported by Kong, or they may\n# conflict with Kong's own management of Proxy-Wasm. Use of these directives may\n# result in unintentional breakage:\n#\n# - `wasm_call`\n# - `module`\n# - `proxy_wasm`\n# - `resolver_add`\n# - `proxy_wasm_request_headers_in_access`\n# - `shm_queue`\n\n#-------------------------------------------------------------------------------\n# REQUEST DEBUGGING\n#-------------------------------------------------------------------------------\n# Request debugging is a mechanism that allows admins to collect the timing of\n# proxy path requests in the response header (X-Kong-Request-Debug-Output)\n# and optionally, the error log.\n#\n# This feature provides insights into the time spent within various components of Kong,\n# such as plugins, DNS resolution, load balancing, and more. It also provides contextual\n# information such as domain names tried during these processes.\n#\n#request_debug = on              # When enabled, Kong will provide detailed timing information\n                                 # for its components to the client and the error log\n                                 # if the following headers are present in the proxy request:\n                                 # - `X-Kong-Request-Debug`:\n                                 #   If the value is set to `*`,\n                                 #   timing information will be collected and exported for the current request.\n                                 #   If this header is not present or contains an unknown value,\n                                 #   timing information will not be collected for the current request.\n                                 #   You can also specify a list of filters, separated by commas,\n                                 #   to filter the scope of the time information that is collected.\n                                 # The following filters are supported for `X-Kong-Request-Debug`:\n                                 # - `rewrite`: Collect timing information from the `rewrite` phase.\n                                 # - `access`: Collect timing information from the `access` phase.\n                                 # - `balancer`: Collect timing information from the `balancer` phase.\n                                 # - `response`: Collect timing information from the `response` phase.\n                                 # - `header_filter`: Collect timing information from the `header_filter` phase.\n                                 # - `body_filter`: Collect timing information from the `body_filter` phase.\n                                 # - `log`: Collect timing information from the `log` phase.\n                                 # - `upstream`: Collect timing information from the `upstream` phase.\n                                 #\n                                 # - `X-Kong-Request-Debug-Log`:\n                                 #   If set to `true`, timing information will also be logged\n                                 #   in the Kong error log with a log level of `notice`.\n                                 #   Defaults to `false`.\n                                 #\n                                 # - `X-Kong-Request-Debug-Token`:\n                                 #   Token for authenticating the client making the debug\n                                 #   request to prevent abuse.\n                                 #   ** Note: Debug requests originating from loopback\n                                 #   addresses do not require this header. Deploying Kong behind\n                                 #   other proxies may result in exposing the debug interface to\n                                 #   the public.**\n                                 #\n#request_debug_token = <random>  # The Request Debug Token is used in the\n                                 # `X-Kong-Request-Debug-Token` header to prevent abuse.\n                                 # If this value is not set (the default),\n                                 # a random token will be generated\n                                 # when Kong starts, restarts, or reloads. If a token is\n                                 # specified manually, then the provided token will be used.\n                                 #\n                                 # You can locate the generated debug token in two locations:\n                                 # - Kong error log:\n                                 #   Debug token will be logged in the error log (notice level)\n                                 #   when Kong starts, restarts, or reloads.\n                                 #   The log line will have the: `[request-debug]` prefix to aid searching.\n                                 # - Filesystem:\n                                 #   Debug token will also be stored in a file located at\n                                 #   `{prefix}/.request_debug_token` and updated\n                                 #   when Kong starts, restarts, or reloads.\n"
        },
        {
          "name": "kong",
          "type": "tree",
          "content": null
        },
        {
          "name": "request.json",
          "type": "blob",
          "size": 0.75,
          "content": "{\n    \"contents\": [\n        {\n            \"role\": \"user\",\n            \"parts\": [\n                {\n                    \"text\": \"Hi Gemini\"\n                }\n            ]\n        }\n    ]\n    , \"generationConfig\": {\n        \"temperature\": 1\n        ,\"maxOutputTokens\": 8192\n        ,\"topP\": 0.95\n    },\n    \"safetySettings\": [\n        {\n            \"category\": \"HARM_CATEGORY_HATE_SPEECH\",\n            \"threshold\": \"OFF\"\n        },\n        {\n            \"category\": \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n            \"threshold\": \"OFF\"\n        },\n        {\n            \"category\": \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n            \"threshold\": \"OFF\"\n        },\n        {\n            \"category\": \"HARM_CATEGORY_HARASSMENT\",\n            \"threshold\": \"OFF\"\n        }\n    ]\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "t",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}