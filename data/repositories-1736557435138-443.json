{
  "metadata": {
    "timestamp": 1736557435138,
    "page": 443,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bevyengine/bevy",
      "stars": 37448,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.59,
          "content": "# From: https://docs.github.com/en/github/getting-started-with-github/configuring-git-to-handle-line-endings\n# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files you want to always be normalized and converted\n# to native line endings on checkout.\n*.rs text eol=lf\n*.toml text eol=lf\n*.frag text eol=lf\n*.vert text eol=lf\n*.wgsl text eol=lf\n\n# Declare files that will always have CRLF line endings on checkout.\n*.sln text eol=crlf\n\n# Denote all files that are truly binary and should not be modified.\n*.png binary\n*.jpg binary\n*.ttf binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5,
          "content": "# Rust build artifacts\ntarget\ncrates/**/target\nbenches/**/target\ntools/**/target\n**/*.rs.bk\n\n# Cargo\nCargo.lock\n.cargo/config\n.cargo/config.toml\n\n# IDE files\n.idea\n.vscode\n.zed\ndxcompiler.dll\ndxil.dll\n\n# Bevy Assets\nassets/**/*.meta\ncrates/bevy_asset/imported_assets\nimported_assets\n\n# Bevy Examples\nexample_showcase_config.ron\nexample-showcase-reports/\n\n# Generated by \"examples/scene/scene.rs\"\nassets/scenes/load_scene_example-new.scn.ron\n\n# Generated by \"examples/window/screenshot.rs\"\n**/screenshot-*.png\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 4.96,
          "content": "# Code of Conduct\n\n_This Code of Conduct is based on the [Rust Code of Conduct](https://www.rust-lang.org/policies/code-of-conduct), which is adapted from the [Node.js Policy on Trolling](http://blog.izs.me/post/30036893703/policy-on-trolling) and the [Contributor Covenant](https://www.contributor-covenant.org)._\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n## Our Standards\n\nIn this community we strive to go the extra step to look out for each other. Don’t just aim to be technically unimpeachable, try to be your best self. In particular, avoid flirting with offensive or sensitive issues, particularly if they’re off-topic; this all too often leads to unnecessary fights, hurt feelings, and damaged trust; worse, it can drive people away from the community entirely.\n\nAnd if someone takes issue with something you said or did, resist the urge to be defensive. Just stop doing what it was they complained about and apologize. Even if you feel you were misinterpreted or unfairly accused, chances are good there was something you could’ve communicated better — remember that it’s your responsibility to make your fellow Rustaceans comfortable. Everyone wants to get along and we are all here first and foremost because we want to talk about cool technology. You will find that people will be eager to assume good intent and forgive as long as you earn their trust.\n\n* Please avoid using overtly sexual aliases or other nicknames that might detract from a friendly, safe and welcoming environment for all.\n* Please be kind and courteous. There’s no need to be mean or rude.\n* Respect that people have differences of opinion and that every design or implementation choice carries a trade-off and numerous costs. There is seldom a right answer.\n* Please keep unstructured critique to a minimum. If you have solid ideas you want to experiment with, make a fork and see how it works.\n* We will exclude you from interaction if you insult, demean or harass anyone. That is not welcome behavior. We interpret the term “harassment” as including the definition in the [Citizen Code of Conduct](https://github.com/stumpsyn/policies/blob/master/citizen_code_of_conduct.md); if you have any lack of clarity about what might be included in that concept, please read their definition. In particular, we don’t tolerate behavior that excludes people in socially marginalized groups.\n* Private harassment is also unacceptable. No matter who you are, if you feel you have been or are being harassed or made uncomfortable by a community member, please contact the maintainers immediately. Whether you’re a regular contributor or a newcomer, we care about making this community a safe place for you and we’ve got your back.\n* Do not make casual mention of slavery or indentured servitude and/or false comparisons of one's occupation or situation to slavery. Please consider using or asking about alternate terminology when referring to such metaphors in technology.\n* Likewise any spamming, trolling, flaming, baiting or other attention-stealing behavior is not welcome.\n\n## Moderation\n\nThese are the policies for upholding [our community’s standards of conduct](#our-standards). If you feel that a thread needs moderation, please contact the maintainers.\n\n1. Remarks that violate the community standards of conduct, including hateful, hurtful, oppressive, or exclusionary remarks, are not allowed. (Cursing is allowed, but never targeting another user, and never in a hateful manner).\n2. Remarks that maintainers find inappropriate, whether listed in the code of conduct or not, are also not allowed.\n3. Maintainers will first respond to such remarks with a warning.\n4. If the warning is unheeded, the user will be “kicked,” i.e., kicked out of the communication channel to cool off.\n5. If the user comes back and continues to make trouble, they will be banned, i.e., indefinitely excluded.\n6. Maintainers may choose at their discretion to un-ban the user if it was a first offense and they offer the offended party a genuine apology.\n7. If a maintainer bans someone and you think it was unjustified, please take it up with that maintainer, or with a different maintainer, in private. Complaints about bans in-channel are not allowed.\n8. Maintainers are held to a higher standard than other community members. If a maintainer creates an inappropriate situation, they should expect less leeway than others.\n\nThe enforcement policies in the code of conduct apply to all official venues, including Discord channels, GitHub repositories, the Twitter community and all other forums.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.17,
          "content": "# Contributing to Bevy\n\nIf you'd like to help build Bevy, start by reading this\n[introduction](https://bevyengine.org/learn/contribute/introduction). Thanks for contributing!\n"
        },
        {
          "name": "CREDITS.md",
          "type": "blob",
          "size": 2.26,
          "content": "# Bevy Credits\n\n## Adapted Code\n\n* hecs\n* legion_transform\n* wgpu-rs examples\n* yaks: ArchetypeSet, borrowed some ideas from their scheduler implementation\n\n## Inspiration\n\n* game engines: amethyst, coffee\n* ecs: legion, shipyard, yaks\n\n## Assets\n\n* Generic RPG Pack (CC0 license) by [Bakudas](https://twitter.com/bakudas) and [Gabe Fern](https://twitter.com/_Gabrielfer)\n* Environment maps (`.hdr` files) from [HDRIHaven](https://hdrihaven.com) (CC0 license)\n* Alien from [Kenney's Space Kit](https://www.kenney.nl/assets/space-kit) (CC0 1.0 Universal)\n* Cake from [Kenney's Food Kit](https://www.kenney.nl/assets/food-kit) (CC0 1.0 Universal)\n* Ground tile from [Kenney's Tower Defense Kit](https://www.kenney.nl/assets/tower-defense-kit) (CC0 1.0 Universal)\n* Game icons from [Kenney's Game Icons](https://www.kenney.nl/assets/game-icons) (CC0 1.0 Universal)\n* Space ships from [Kenny's Simple Space Kit](https://www.kenney.nl/assets/simple-space) (CC0 1.0 Universal)\n* UI borders from [Kenny's Fantasy UI Borders Kit](https://kenney.nl/assets/fantasy-ui-borders) (CC0 1.0 Universal)\n* glTF animated fox from [glTF Sample Models][fox]\n  * Low poly fox [by PixelMannen] (CC0 1.0 Universal)\n  * Rigging and animation [by @tomkranis on Sketchfab] ([CC-BY 4.0])\n* FiraMono by The Mozilla Foundation and Telefonica S.A (SIL Open Font License, Version 1.1: assets/fonts/FiraMono-LICENSE)\n* Barycentric from [mk_bary_gltf](https://github.com/komadori/mk_bary_gltf) (MIT OR Apache-2.0)\n* `MorphStressTest.gltf`, [MorphStressTest] ([CC-BY 4.0] by Analytical Graphics, Inc, Model and textures by Ed Mackey)\n* Mysterious acoustic guitar music sample from [florianreichelt](https://freesound.org/people/florianreichelt/sounds/412429/) (CC0 license)\n* Epic orchestra music sample, modified to loop, from [Migfus20](https://freesound.org/people/Migfus20/sounds/560449/) ([CC BY 4.0 DEED](https://creativecommons.org/licenses/by/4.0/))\n\n[MorphStressTest]: https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/MorphStressTest\n[fox]: https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/Fox\n[by PixelMannen]: https://opengameart.org/content/fox-and-shiba\n[by @tomkranis on Sketchfab]: https://sketchfab.com/models/371dea88d7e04a76af5763f2a36866bc\n[CC-BY 4.0]: https://creativecommons.org/licenses/by/4.0/\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 104.7,
          "content": "[package]\nname = \"bevy\"\nversion = \"0.16.0-dev\"\nedition = \"2021\"\ncategories = [\"game-engines\", \"graphics\", \"gui\", \"rendering\"]\ndescription = \"A refreshingly simple data-driven game engine and app framework\"\nexclude = [\"assets/\", \"tools/\", \".github/\", \"crates/\", \"examples/wasm/assets/\"]\nhomepage = \"https://bevyengine.org\"\nkeywords = [\"game\", \"engine\", \"gamedev\", \"graphics\", \"bevy\"]\nlicense = \"MIT OR Apache-2.0\"\nrepository = \"https://github.com/bevyengine/bevy\"\ndocumentation = \"https://docs.rs/bevy\"\nrust-version = \"1.83.0\"\n\n[workspace]\nresolver = \"2\"\nmembers = [\n  # All of Bevy's official crates are within the `crates` folder!\n  \"crates/*\",\n  # Several crates with macros have \"compile fail\" tests nested inside them, also known as UI\n  # tests, that verify diagnostic output does not accidentally change.\n  \"crates/*/compile_fail\",\n  # Examples of compiling Bevy for mobile platforms.\n  \"examples/mobile\",\n  # Benchmarks\n  \"benches\",\n  # Internal tools that are not published.\n  \"tools/*\",\n  # Bevy's error codes. This is a crate so we can automatically check all of the code blocks.\n  \"errors\",\n]\n\n[workspace.lints.clippy]\ndoc_markdown = \"warn\"\nmanual_let_else = \"warn\"\nmatch_same_arms = \"warn\"\nredundant_closure_for_method_calls = \"warn\"\nredundant_else = \"warn\"\nsemicolon_if_nothing_returned = \"warn\"\ntype_complexity = \"allow\"\nundocumented_unsafe_blocks = \"warn\"\nunwrap_or_default = \"warn\"\nneedless_lifetimes = \"allow\"\ntoo_many_arguments = \"allow\"\n\nptr_as_ptr = \"warn\"\nptr_cast_constness = \"warn\"\nref_as_ptr = \"warn\"\n\n# see: https://github.com/bevyengine/bevy/pull/15375#issuecomment-2366966219\ntoo_long_first_doc_paragraph = \"allow\"\n\nstd_instead_of_core = \"warn\"\nstd_instead_of_alloc = \"warn\"\nalloc_instead_of_core = \"warn\"\n\n[workspace.lints.rust]\nmissing_docs = \"warn\"\nunexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(docsrs_dep)'] }\nunsafe_code = \"deny\"\nunsafe_op_in_unsafe_fn = \"warn\"\nunused_qualifications = \"warn\"\n\n# Unfortunately, cargo does not currently support overriding workspace lints\n# inside a particular crate. See https://github.com/rust-lang/cargo/issues/13157\n#\n# We require an override for cases like `std_instead_of_core`, which are intended\n# for the library contributors and not for how users should consume Bevy.\n# To ensure examples aren't subject to these lints, below is a duplication of the\n# workspace lints, with the \"overrides\" applied.\n#\n# [lints]\n# workspace = true\n\n[lints.clippy]\ndoc_markdown = \"warn\"\nmanual_let_else = \"warn\"\nmatch_same_arms = \"warn\"\nredundant_closure_for_method_calls = \"warn\"\nredundant_else = \"warn\"\nsemicolon_if_nothing_returned = \"warn\"\ntype_complexity = \"allow\"\nundocumented_unsafe_blocks = \"warn\"\nunwrap_or_default = \"warn\"\nneedless_lifetimes = \"allow\"\ntoo_many_arguments = \"allow\"\n\nptr_as_ptr = \"warn\"\nptr_cast_constness = \"warn\"\nref_as_ptr = \"warn\"\n\ntoo_long_first_doc_paragraph = \"allow\"\n\nstd_instead_of_core = \"allow\"\nstd_instead_of_alloc = \"allow\"\nalloc_instead_of_core = \"allow\"\n\n[lints.rust]\nmissing_docs = \"warn\"\nunexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(docsrs_dep)'] }\nunsafe_code = \"deny\"\nunsafe_op_in_unsafe_fn = \"warn\"\nunused_qualifications = \"warn\"\n\n[features]\ndefault = [\n  \"android-game-activity\",\n  \"android_shared_stdcxx\",\n  \"animation\",\n  \"bevy_asset\",\n  \"bevy_audio\",\n  \"bevy_color\",\n  \"bevy_core_pipeline\",\n  \"bevy_gilrs\",\n  \"bevy_gizmos\",\n  \"bevy_gltf\",\n  \"bevy_mesh_picking_backend\",\n  \"bevy_pbr\",\n  \"bevy_picking\",\n  \"bevy_render\",\n  \"bevy_scene\",\n  \"bevy_sprite\",\n  \"bevy_sprite_picking_backend\",\n  \"bevy_state\",\n  \"bevy_text\",\n  \"bevy_ui\",\n  \"bevy_ui_picking_backend\",\n  \"bevy_window\",\n  \"bevy_winit\",\n  \"custom_cursor\",\n  \"default_font\",\n  \"hdr\",\n  \"multi_threaded\",\n  \"png\",\n  \"smaa_luts\",\n  \"sysinfo_plugin\",\n  \"tonemapping_luts\",\n  \"vorbis\",\n  \"webgl2\",\n  \"x11\",\n]\n\n# Provides an implementation for picking meshes\nbevy_mesh_picking_backend = [\n  \"bevy_picking\",\n  \"bevy_internal/bevy_mesh_picking_backend\",\n]\n\n# Provides an implementation for picking sprites\nbevy_sprite_picking_backend = [\n  \"bevy_picking\",\n  \"bevy_internal/bevy_sprite_picking_backend\",\n]\n\n# Provides an implementation for picking UI\nbevy_ui_picking_backend = [\n  \"bevy_picking\",\n  \"bevy_internal/bevy_ui_picking_backend\",\n]\n\n# Provides a debug overlay for bevy UI\nbevy_ui_debug = [\"bevy_internal/bevy_ui_debug\"]\n\n# Force dynamic linking, which improves iterative compile times\ndynamic_linking = [\"dep:bevy_dylib\", \"bevy_internal/dynamic_linking\"]\n\n# Enables system information diagnostic plugin\nsysinfo_plugin = [\"bevy_internal/sysinfo_plugin\"]\n\n# Provides animation functionality\nbevy_animation = [\"bevy_internal/bevy_animation\", \"bevy_color\"]\n\n# Provides asset functionality\nbevy_asset = [\"bevy_internal/bevy_asset\"]\n\n# Provides audio functionality\nbevy_audio = [\"bevy_internal/bevy_audio\"]\n\n# Provides shared color types and operations\nbevy_color = [\"bevy_internal/bevy_color\"]\n\n# Provides cameras and other basic render pipeline features\nbevy_core_pipeline = [\n  \"bevy_internal/bevy_core_pipeline\",\n  \"bevy_asset\",\n  \"bevy_render\",\n]\n\n# Adds gamepad support\nbevy_gilrs = [\"bevy_internal/bevy_gilrs\"]\n\n# [glTF](https://www.khronos.org/gltf/) support\nbevy_gltf = [\"bevy_internal/bevy_gltf\", \"bevy_asset\", \"bevy_scene\", \"bevy_pbr\"]\n\n# Adds PBR rendering\nbevy_pbr = [\n  \"bevy_internal/bevy_pbr\",\n  \"bevy_asset\",\n  \"bevy_render\",\n  \"bevy_core_pipeline\",\n]\n\n# Provides picking functionality\nbevy_picking = [\"bevy_internal/bevy_picking\"]\n\n# Provides rendering functionality\nbevy_render = [\"bevy_internal/bevy_render\", \"bevy_color\"]\n\n# Provides scene functionality\nbevy_scene = [\"bevy_internal/bevy_scene\", \"bevy_asset\"]\n\n# Provides sprite functionality\nbevy_sprite = [\n  \"bevy_internal/bevy_sprite\",\n  \"bevy_render\",\n  \"bevy_core_pipeline\",\n  \"bevy_color\",\n]\n\n# Provides text functionality\nbevy_text = [\"bevy_internal/bevy_text\", \"bevy_asset\", \"bevy_sprite\"]\n\n# A custom ECS-driven UI framework\nbevy_ui = [\n  \"bevy_internal/bevy_ui\",\n  \"bevy_core_pipeline\",\n  \"bevy_text\",\n  \"bevy_sprite\",\n  \"bevy_color\",\n]\n\n# Windowing layer\nbevy_window = [\"bevy_internal/bevy_window\"]\n\n# winit window and input backend\nbevy_winit = [\"bevy_internal/bevy_winit\", \"bevy_window\"]\n\n# Load and access image data. Usually added by an image format\nbevy_image = [\"bevy_internal/bevy_image\"]\n\n# Adds support for rendering gizmos\nbevy_gizmos = [\"bevy_internal/bevy_gizmos\", \"bevy_color\"]\n\n# Provides a collection of developer tools\nbevy_dev_tools = [\"bevy_internal/bevy_dev_tools\"]\n\n# Enable the Bevy Remote Protocol\nbevy_remote = [\"bevy_internal/bevy_remote\"]\n\n# Enable passthrough loading for SPIR-V shaders (Only supported on Vulkan, shader capabilities and extensions must agree with the platform implementation)\nspirv_shader_passthrough = [\"bevy_internal/spirv_shader_passthrough\"]\n\n# Tracing support, saving a file in Chrome Tracing format\ntrace_chrome = [\"trace\", \"bevy_internal/trace_chrome\"]\n\n# Tracing support, exposing a port for Tracy\ntrace_tracy = [\"trace\", \"bevy_internal/trace_tracy\"]\n\n# Tracing support, with memory profiling, exposing a port for Tracy\ntrace_tracy_memory = [\n  \"trace\",\n  \"bevy_internal/trace_tracy\",\n  \"bevy_internal/trace_tracy_memory\",\n]\n\n# Tracing support\ntrace = [\"bevy_internal/trace\"]\n\n# Basis Universal compressed texture support\nbasis-universal = [\"bevy_internal/basis-universal\"]\n\n# BMP image format support\nbmp = [\"bevy_internal/bmp\"]\n\n# DDS compressed texture support\ndds = [\"bevy_internal/dds\"]\n\n# EXR image format support\nexr = [\"bevy_internal/exr\"]\n\n# Farbfeld image format support\nff = [\"bevy_internal/ff\"]\n\n# GIF image format support\ngif = [\"bevy_internal/gif\"]\n\n# HDR image format support\nhdr = [\"bevy_internal/hdr\"]\n\n# KTX2 compressed texture support\nktx2 = [\"bevy_internal/ktx2\"]\n\n# ICO image format support\nico = [\"bevy_internal/ico\"]\n\n# JPEG image format support\njpeg = [\"bevy_internal/jpeg\"]\n\n# PNG image format support\npng = [\"bevy_internal/png\"]\n\n# PNM image format support, includes pam, pbm, pgm and ppm\npnm = [\"bevy_internal/pnm\"]\n\n# QOI image format support\nqoi = [\"bevy_internal/qoi\"]\n\n# TGA image format support\ntga = [\"bevy_internal/tga\"]\n\n# TIFF image format support\ntiff = [\"bevy_internal/tiff\"]\n\n# WebP image format support\nwebp = [\"bevy_internal/webp\"]\n\n# For KTX2 supercompression\nzlib = [\"bevy_internal/zlib\"]\n\n# For KTX2 supercompression\nzstd = [\"bevy_internal/zstd\"]\n\n# FLAC audio format support\nflac = [\"bevy_internal/flac\"]\n\n# MP3 audio format support\nmp3 = [\"bevy_internal/mp3\"]\n\n# OGG/VORBIS audio format support\nvorbis = [\"bevy_internal/vorbis\"]\n\n# WAV audio format support\nwav = [\"bevy_internal/wav\"]\n\n# MP3 audio format support (through minimp3)\nminimp3 = [\"bevy_internal/minimp3\"]\n\n# AAC audio format support (through symphonia)\nsymphonia-aac = [\"bevy_internal/symphonia-aac\"]\n\n# AAC, FLAC, MP3, MP4, OGG/VORBIS, and WAV audio formats support (through symphonia)\nsymphonia-all = [\"bevy_internal/symphonia-all\"]\n\n# FLAC audio format support (through symphonia)\nsymphonia-flac = [\"bevy_internal/symphonia-flac\"]\n\n# MP4 audio format support (through symphonia)\nsymphonia-isomp4 = [\"bevy_internal/symphonia-isomp4\"]\n\n# OGG/VORBIS audio format support (through symphonia)\nsymphonia-vorbis = [\"bevy_internal/symphonia-vorbis\"]\n\n# WAV audio format support (through symphonia)\nsymphonia-wav = [\"bevy_internal/symphonia-wav\"]\n\n# Enable serialization support through serde\nserialize = [\"bevy_internal/serialize\"]\n\n# Enables multithreaded parallelism in the engine. Disabling it forces all engine tasks to run on a single thread.\nmulti_threaded = [\"bevy_internal/multi_threaded\"]\n\n# Use async-io's implementation of block_on instead of futures-lite's implementation. This is preferred if your application uses async-io.\nasync-io = [\"bevy_internal/async-io\"]\n\n# Wayland display server support\nwayland = [\"bevy_internal/wayland\"]\n\n# X11 display server support\nx11 = [\"bevy_internal/x11\"]\n\n# Android NativeActivity support. Legacy, should be avoided for most new Android games.\nandroid-native-activity = [\"bevy_internal/android-native-activity\"]\n\n# Android GameActivity support. Default, choose between this and `android-native-activity`.\nandroid-game-activity = [\"bevy_internal/android-game-activity\"]\n\n# Enable systems that allow for automated testing on CI\nbevy_ci_testing = [\"bevy_internal/bevy_ci_testing\"]\n\n# Enable animation support, and glTF animation loading\nanimation = [\"bevy_internal/animation\", \"bevy_animation\"]\n\n# Enable using a shared stdlib for cxx on Android\nandroid_shared_stdcxx = [\"bevy_internal/android_shared_stdcxx\"]\n\n# Enable detailed trace event logging. These trace events are expensive even when off, thus they require compile time opt-in\ndetailed_trace = [\"bevy_internal/detailed_trace\"]\n\n# Include tonemapping Look Up Tables KTX2 files. If everything is pink, you need to enable this feature or change the `Tonemapping` method for your `Camera2d` or `Camera3d`.\ntonemapping_luts = [\"bevy_internal/tonemapping_luts\", \"ktx2\", \"zstd\"]\n\n# Include SMAA Look Up Tables KTX2 Files\nsmaa_luts = [\"bevy_internal/smaa_luts\"]\n\n# Enable AccessKit on Unix backends (currently only works with experimental screen readers and forks.)\naccesskit_unix = [\"bevy_internal/accesskit_unix\"]\n\n# Enable assertions to check the validity of parameters passed to glam\nglam_assert = [\"bevy_internal/glam_assert\"]\n\n# Enable assertions in debug builds to check the validity of parameters passed to glam\ndebug_glam_assert = [\"bevy_internal/debug_glam_assert\"]\n\n# Include a default font, containing only ASCII characters, at the cost of a 20kB binary size increase\ndefault_font = [\"bevy_internal/default_font\"]\n\n# Enable support for shaders in GLSL\nshader_format_glsl = [\"bevy_internal/shader_format_glsl\"]\n\n# Enable support for shaders in SPIR-V\nshader_format_spirv = [\"bevy_internal/shader_format_spirv\"]\n\n# Enable support for transmission-related textures in the `StandardMaterial`, at the risk of blowing past the global, per-shader texture limit on older/lower-end GPUs\npbr_transmission_textures = [\"bevy_internal/pbr_transmission_textures\"]\n\n# Enable support for multi-layer material textures in the `StandardMaterial`, at the risk of blowing past the global, per-shader texture limit on older/lower-end GPUs\npbr_multi_layer_material_textures = [\n  \"bevy_internal/pbr_multi_layer_material_textures\",\n]\n\n# Enable support for anisotropy texture in the `StandardMaterial`, at the risk of blowing past the global, per-shader texture limit on older/lower-end GPUs\npbr_anisotropy_texture = [\"bevy_internal/pbr_anisotropy_texture\"]\n\n# Enable support for PCSS, at the risk of blowing past the global, per-shader sampler limit on older/lower-end GPUs\nexperimental_pbr_pcss = [\"bevy_internal/experimental_pbr_pcss\"]\n\n# Enable some limitations to be able to use WebGL2. Please refer to the [WebGL2 and WebGPU](https://github.com/bevyengine/bevy/tree/latest/examples#webgl2-and-webgpu) section of the examples README for more information on how to run Wasm builds with WebGPU.\nwebgl2 = [\"bevy_internal/webgl\"]\n\n# Enable support for WebGPU in Wasm. When enabled, this feature will override the `webgl2` feature and you won't be able to run Wasm builds with WebGL2, only with WebGPU.\nwebgpu = [\"bevy_internal/webgpu\"]\n\n# Enables the built-in asset processor for processed assets.\nasset_processor = [\"bevy_internal/asset_processor\"]\n\n# Enables watching the filesystem for Bevy Asset hot-reloading\nfile_watcher = [\"bevy_internal/file_watcher\"]\n\n# Enables watching in memory asset providers for Bevy Asset hot-reloading\nembedded_watcher = [\"bevy_internal/embedded_watcher\"]\n\n# Enable stepping-based debugging of Bevy systems\nbevy_debug_stepping = [\"bevy_internal/bevy_debug_stepping\"]\n\n# Enables the meshlet renderer for dense high-poly scenes (experimental)\nmeshlet = [\"bevy_internal/meshlet\"]\n\n# Enables processing meshes into meshlet meshes for bevy_pbr\nmeshlet_processor = [\"bevy_internal/meshlet_processor\"]\n\n# Enable support for the ios_simulator by downgrading some rendering capabilities\nios_simulator = [\"bevy_internal/ios_simulator\"]\n\n# Enable built in global state machines\nbevy_state = [\"bevy_internal/bevy_state\"]\n\n# Enables source location tracking for change detection and spawning/despawning, which can assist with debugging\ntrack_location = [\"bevy_internal/track_location\"]\n\n# Enable function reflection\nreflect_functions = [\"bevy_internal/reflect_functions\"]\n\n# Enable winit custom cursor support\ncustom_cursor = [\"bevy_internal/custom_cursor\"]\n\n# Experimental support for nodes that are ignored for UI layouting\nghost_nodes = [\"bevy_internal/ghost_nodes\"]\n\n[dependencies]\nbevy_internal = { path = \"crates/bevy_internal\", version = \"0.16.0-dev\", default-features = false }\n\n# Wasm does not support dynamic linking.\n[target.'cfg(not(target_family = \"wasm\"))'.dependencies]\nbevy_dylib = { path = \"crates/bevy_dylib\", version = \"0.16.0-dev\", default-features = false, optional = true }\n\n[dev-dependencies]\nrand = \"0.8.0\"\nrand_chacha = \"0.3.1\"\nron = \"0.8.0\"\nflate2 = \"1.0\"\nserde = { version = \"1\", features = [\"derive\"] }\nserde_json = \"1\"\nbytemuck = \"1.7\"\nbevy_render = { path = \"crates/bevy_render\", version = \"0.16.0-dev\", default-features = false }\n# Needed to poll Task examples\nfutures-lite = \"2.0.1\"\nasync-std = \"1.13\"\ncrossbeam-channel = \"0.5.0\"\nargh = \"0.1.12\"\nthiserror = \"2.0\"\nevent-listener = \"5.3.0\"\nhyper = { version = \"1\", features = [\"server\", \"http1\"] }\nhttp-body-util = \"0.1\"\nanyhow = \"1\"\nmacro_rules_attribute = \"0.2\"\naccesskit = \"0.17\"\n\n[target.'cfg(not(target_family = \"wasm\"))'.dev-dependencies]\nsmol = \"2\"\nsmol-macros = \"0.1\"\nsmol-hyper = \"0.1\"\nureq = { version = \"2.10.1\", features = [\"json\"] }\n\n[target.'cfg(target_arch = \"wasm32\")'.dev-dependencies]\nwasm-bindgen = { version = \"0.2\" }\nweb-sys = { version = \"0.3\", features = [\"Window\"] }\n\n[[example]]\nname = \"hello_world\"\npath = \"examples/hello_world.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.hello_world]\nhidden = true\n\n# 2D Rendering\n[[example]]\nname = \"bloom_2d\"\npath = \"examples/2d/bloom_2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.bloom_2d]\nname = \"2D Bloom\"\ndescription = \"Illustrates bloom post-processing in 2d\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"move_sprite\"\npath = \"examples/2d/move_sprite.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.move_sprite]\nname = \"Move Sprite\"\ndescription = \"Changes the transform of a sprite\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"2d_viewport_to_world\"\npath = \"examples/2d/2d_viewport_to_world.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.2d_viewport_to_world]\nname = \"2D Viewport To World\"\ndescription = \"Demonstrates how to use the `Camera::viewport_to_world_2d` method\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"rotation\"\npath = \"examples/2d/rotation.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.rotation]\nname = \"2D Rotation\"\ndescription = \"Demonstrates rotating entities in 2D with quaternions\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"mesh2d\"\npath = \"examples/2d/mesh2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.mesh2d]\nname = \"Mesh 2D\"\ndescription = \"Renders a 2d mesh\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"mesh2d_arcs\"\npath = \"examples/2d/mesh2d_arcs.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.mesh2d_arcs]\nname = \"Arc 2D Meshes\"\ndescription = \"Demonstrates UV-mapping of the circular segment and sector primitives\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"mesh2d_manual\"\npath = \"examples/2d/mesh2d_manual.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.mesh2d_manual]\nname = \"Manual Mesh 2D\"\ndescription = \"Renders a custom mesh \\\"manually\\\" with \\\"mid-level\\\" renderer apis\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"mesh2d_vertex_color_texture\"\npath = \"examples/2d/mesh2d_vertex_color_texture.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.mesh2d_vertex_color_texture]\nname = \"Mesh 2D With Vertex Colors\"\ndescription = \"Renders a 2d mesh with vertex color attributes\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"2d_shapes\"\npath = \"examples/2d/2d_shapes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.2d_shapes]\nname = \"2D Shapes\"\ndescription = \"Renders simple 2D primitive shapes like circles and polygons\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"custom_gltf_vertex_attribute\"\npath = \"examples/2d/custom_gltf_vertex_attribute.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_gltf_vertex_attribute]\nname = \"Custom glTF vertex attribute 2D\"\ndescription = \"Renders a glTF mesh in 2D with a custom vertex attribute\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"cpu_draw\"\npath = \"examples/2d/cpu_draw.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.cpu_draw]\nname = \"CPU Drawing\"\ndescription = \"Manually read/write the pixels of a texture\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"sprite\"\npath = \"examples/2d/sprite.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.sprite]\nname = \"Sprite\"\ndescription = \"Renders a sprite\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"sprite_animation\"\npath = \"examples/2d/sprite_animation.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.sprite_animation]\nname = \"Sprite Animation\"\ndescription = \"Animates a sprite in response to an event\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"sprite_flipping\"\npath = \"examples/2d/sprite_flipping.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.sprite_flipping]\nname = \"Sprite Flipping\"\ndescription = \"Renders a sprite flipped along an axis\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"sprite_sheet\"\npath = \"examples/2d/sprite_sheet.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.sprite_sheet]\nname = \"Sprite Sheet\"\ndescription = \"Renders an animated sprite\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"sprite_tile\"\npath = \"examples/2d/sprite_tile.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.sprite_tile]\nname = \"Sprite Tile\"\ndescription = \"Renders a sprite tiled in a grid\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"sprite_slice\"\npath = \"examples/2d/sprite_slice.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.sprite_slice]\nname = \"Sprite Slice\"\ndescription = \"Showcases slicing sprites into sections that can be scaled independently via the 9-patch technique\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"text2d\"\npath = \"examples/2d/text2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.text2d]\nname = \"Text 2D\"\ndescription = \"Generates text in 2D\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"texture_atlas\"\npath = \"examples/2d/texture_atlas.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.texture_atlas]\nname = \"Texture Atlas\"\ndescription = \"Generates a texture atlas (sprite sheet) from individual sprites\"\ncategory = \"2D Rendering\"\nwasm = false\n\n[[example]]\nname = \"transparency_2d\"\npath = \"examples/2d/transparency_2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.transparency_2d]\nname = \"Transparency in 2D\"\ndescription = \"Demonstrates transparency in 2d\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"mesh2d_alpha_mode\"\npath = \"examples/2d/mesh2d_alpha_mode.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.mesh2d_alpha_mode]\nname = \"Mesh2d Alpha Mode\"\ndescription = \"Used to test alpha modes with mesh2d\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"pixel_grid_snap\"\npath = \"examples/2d/pixel_grid_snap.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.pixel_grid_snap]\nname = \"Pixel Grid Snapping\"\ndescription = \"Shows how to create graphics that snap to the pixel grid by rendering to a texture in 2D\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"bounding_2d\"\npath = \"examples/2d/bounding_2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.bounding_2d]\nname = \"2D Bounding Volume Intersections\"\ndescription = \"Showcases bounding volumes and intersection tests\"\ncategory = \"2D Rendering\"\nwasm = true\n\n[[example]]\nname = \"wireframe_2d\"\npath = \"examples/2d/wireframe_2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.wireframe_2d]\nname = \"2D Wireframe\"\ndescription = \"Showcases wireframes for 2d meshes\"\ncategory = \"2D Rendering\"\nwasm = false\n\n# 3D Rendering\n[[example]]\nname = \"3d_scene\"\npath = \"examples/3d/3d_scene.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.3d_scene]\nname = \"3D Scene\"\ndescription = \"Simple 3D scene with basic shapes and lighting\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"3d_shapes\"\npath = \"examples/3d/3d_shapes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.3d_shapes]\nname = \"3D Shapes\"\ndescription = \"A scene showcasing the built-in 3D shapes\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"3d_viewport_to_world\"\npath = \"examples/3d/3d_viewport_to_world.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.3d_viewport_to_world]\nname = \"3D Viewport To World\"\ndescription = \"Demonstrates how to use the `Camera::viewport_to_world` method\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"animated_material\"\npath = \"examples/3d/animated_material.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animated_material]\nname = \"Animated Material\"\ndescription = \"Shows how to animate material properties\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"generate_custom_mesh\"\npath = \"examples/3d/generate_custom_mesh.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.generate_custom_mesh]\nname = \"Generate Custom Mesh\"\ndescription = \"Simple showcase of how to generate a custom mesh with a custom texture\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"anti_aliasing\"\npath = \"examples/3d/anti_aliasing.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.anti_aliasing]\nname = \"Anti-aliasing\"\ndescription = \"Compares different anti-aliasing methods\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"atmospheric_fog\"\npath = \"examples/3d/atmospheric_fog.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.atmospheric_fog]\nname = \"Atmospheric Fog\"\ndescription = \"A scene showcasing the atmospheric fog effect\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"fog\"\npath = \"examples/3d/fog.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.fog]\nname = \"Fog\"\ndescription = \"A scene showcasing the distance fog effect\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"auto_exposure\"\npath = \"examples/3d/auto_exposure.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.auto_exposure]\nname = \"Auto Exposure\"\ndescription = \"A scene showcasing auto exposure\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"blend_modes\"\npath = \"examples/3d/blend_modes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.blend_modes]\nname = \"Blend Modes\"\ndescription = \"Showcases different blend modes\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"lighting\"\npath = \"examples/3d/lighting.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.lighting]\nname = \"Lighting\"\ndescription = \"Illustrates various lighting options in a simple scene\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"lines\"\npath = \"examples/3d/lines.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.lines]\nname = \"Lines\"\ndescription = \"Create a custom material to draw 3d lines\"\ncategory = \"3D Rendering\"\n# Wasm does not support the `POLYGON_MODE_LINE` feature.\nwasm = false\n\n[[example]]\nname = \"ssao\"\npath = \"examples/3d/ssao.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ssao]\nname = \"Screen Space Ambient Occlusion\"\ndescription = \"A scene showcasing screen space ambient occlusion\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"spotlight\"\npath = \"examples/3d/spotlight.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.spotlight]\nname = \"Spotlight\"\ndescription = \"Illustrates spot lights\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"bloom_3d\"\npath = \"examples/3d/bloom_3d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.bloom_3d]\nname = \"3D Bloom\"\ndescription = \"Illustrates bloom configuration using HDR and emissive materials\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"deferred_rendering\"\npath = \"examples/3d/deferred_rendering.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.deferred_rendering]\nname = \"Deferred Rendering\"\ndescription = \"Renders meshes with both forward and deferred pipelines\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"load_gltf\"\npath = \"examples/3d/load_gltf.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.load_gltf]\nname = \"Load glTF\"\ndescription = \"Loads and renders a glTF file as a scene\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"load_gltf_extras\"\npath = \"examples/3d/load_gltf_extras.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.load_gltf_extras]\nname = \"Load glTF extras\"\ndescription = \"Loads and renders a glTF file as a scene, including the gltf extras\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"query_gltf_primitives\"\npath = \"examples/3d/query_gltf_primitives.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.query_gltf_primitives]\nname = \"Query glTF primitives\"\ndescription = \"Query primitives in a glTF scene\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"motion_blur\"\npath = \"examples/3d/motion_blur.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.motion_blur]\nname = \"Motion Blur\"\ndescription = \"Demonstrates per-pixel motion blur\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"order_independent_transparency\"\npath = \"examples/3d/order_independent_transparency.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.order_independent_transparency]\nname = \"Order Independent Transparency\"\ndescription = \"Demonstrates how to use OIT\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"tonemapping\"\npath = \"examples/3d/tonemapping.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.tonemapping]\nname = \"Tonemapping\"\ndescription = \"Compares tonemapping options\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"orthographic\"\npath = \"examples/3d/orthographic.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.orthographic]\nname = \"Orthographic View\"\ndescription = \"Shows how to create a 3D orthographic view (for isometric-look in games or CAD applications)\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"parenting\"\npath = \"examples/3d/parenting.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.parenting]\nname = \"Parenting\"\ndescription = \"Demonstrates parent->child relationships and relative transformations\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"pbr\"\npath = \"examples/3d/pbr.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.pbr]\nname = \"Physically Based Rendering\"\ndescription = \"Demonstrates use of Physically Based Rendering (PBR) properties\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"parallax_mapping\"\npath = \"examples/3d/parallax_mapping.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.parallax_mapping]\nname = \"Parallax Mapping\"\ndescription = \"Demonstrates use of a normal map and depth map for parallax mapping\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"render_to_texture\"\npath = \"examples/3d/render_to_texture.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.render_to_texture]\nname = \"Render to Texture\"\ndescription = \"Shows how to render to a texture, useful for mirrors, UI, or exporting images\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"shadow_biases\"\npath = \"examples/3d/shadow_biases.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.shadow_biases]\nname = \"Shadow Biases\"\ndescription = \"Demonstrates how shadow biases affect shadows in a 3d scene\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"shadow_caster_receiver\"\npath = \"examples/3d/shadow_caster_receiver.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.shadow_caster_receiver]\nname = \"Shadow Caster and Receiver\"\ndescription = \"Demonstrates how to prevent meshes from casting/receiving shadows in a 3d scene\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"skybox\"\npath = \"examples/3d/skybox.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.skybox]\nname = \"Skybox\"\ndescription = \"Load a cubemap texture onto a cube like a skybox and cycle through different compressed texture formats.\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"spherical_area_lights\"\npath = \"examples/3d/spherical_area_lights.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.spherical_area_lights]\nname = \"Spherical Area Lights\"\ndescription = \"Demonstrates how point light radius values affect light behavior\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"split_screen\"\npath = \"examples/3d/split_screen.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.split_screen]\nname = \"Split Screen\"\ndescription = \"Demonstrates how to render two cameras to the same window to accomplish \\\"split screen\\\"\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"texture\"\npath = \"examples/3d/texture.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.texture]\nname = \"Texture\"\ndescription = \"Shows configuration of texture materials\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"transparency_3d\"\npath = \"examples/3d/transparency_3d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.transparency_3d]\nname = \"Transparency in 3D\"\ndescription = \"Demonstrates transparency in 3d\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"transmission\"\npath = \"examples/3d/transmission.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.transmission]\nname = \"Transmission\"\ndescription = \"Showcases light transmission in the PBR material\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"two_passes\"\npath = \"examples/3d/two_passes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.two_passes]\nname = \"Two Passes\"\ndescription = \"Renders two 3d passes to the same window from different perspectives\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"update_gltf_scene\"\npath = \"examples/3d/update_gltf_scene.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.update_gltf_scene]\nname = \"Update glTF Scene\"\ndescription = \"Update a scene from a glTF file, either by spawning the scene as a child of another entity, or by accessing the entities of the scene\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"vertex_colors\"\npath = \"examples/3d/vertex_colors.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.vertex_colors]\nname = \"Vertex Colors\"\ndescription = \"Shows the use of vertex colors\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"wireframe\"\npath = \"examples/3d/wireframe.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.wireframe]\nname = \"Wireframe\"\ndescription = \"Showcases wireframe rendering\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"irradiance_volumes\"\npath = \"examples/3d/irradiance_volumes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.irradiance_volumes]\nname = \"Irradiance Volumes\"\ndescription = \"Demonstrates irradiance volumes\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"meshlet\"\npath = \"examples/3d/meshlet.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"meshlet\"]\n\n[package.metadata.example.meshlet]\nname = \"Meshlet\"\ndescription = \"Meshlet rendering for dense high-poly scenes (experimental)\"\ncategory = \"3D Rendering\"\nwasm = false\nsetup = [\n  [\n    \"curl\",\n    \"-o\",\n    \"assets/models/bunny.meshlet_mesh\",\n    \"https://raw.githubusercontent.com/JMS55/bevy_meshlet_asset/7a7c14138021f63904b584d5f7b73b695c7f4bbf/bunny.meshlet_mesh\",\n  ],\n]\n\n[[example]]\nname = \"mesh_ray_cast\"\npath = \"examples/3d/mesh_ray_cast.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.mesh_ray_cast]\nname = \"Mesh Ray Cast\"\ndescription = \"Demonstrates ray casting with the `MeshRayCast` system parameter\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"lightmaps\"\npath = \"examples/3d/lightmaps.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.lightmaps]\nname = \"Lightmaps\"\ndescription = \"Rendering a scene with baked lightmaps\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"no_prepass\"\npath = \"tests/3d/no_prepass.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.no_prepass]\nhidden = true\n\n# Animation\n[[example]]\nname = \"animation_events\"\npath = \"examples/animation/animation_events.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animation_events]\nname = \"Animation Events\"\ndescription = \"Demonstrate how to use animation events\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"animated_mesh\"\npath = \"examples/animation/animated_mesh.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animated_mesh]\nname = \"Animated Mesh\"\ndescription = \"Plays an animation from a skinned glTF\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"animated_mesh_control\"\npath = \"examples/animation/animated_mesh_control.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animated_mesh_control]\nname = \"Animated Mesh Control\"\ndescription = \"Plays an animation from a skinned glTF with keyboard controls\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"animated_mesh_events\"\npath = \"examples/animation/animated_mesh_events.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animated_mesh_events]\nname = \"Animated Mesh Events\"\ndescription = \"Plays an animation from a skinned glTF with events\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"animation_graph\"\npath = \"examples/animation/animation_graph.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animation_graph]\nname = \"Animation Graph\"\ndescription = \"Blends multiple animations together with a graph\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"morph_targets\"\npath = \"examples/animation/morph_targets.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.morph_targets]\nname = \"Morph Targets\"\ndescription = \"Plays an animation from a glTF file with meshes with morph targets\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"animated_transform\"\npath = \"examples/animation/animated_transform.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animated_transform]\nname = \"Animated Transform\"\ndescription = \"Create and play an animation defined by code that operates on the `Transform` component\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"color_animation\"\npath = \"examples/animation/color_animation.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.color_animation]\nname = \"Color animation\"\ndescription = \"Demonstrates how to animate colors using mixing and splines in different color spaces\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"eased_motion\"\npath = \"examples/animation/eased_motion.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.eased_motion]\nname = \"Eased Motion\"\ndescription = \"Demonstrates the application of easing curves to animate an object\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"easing_functions\"\npath = \"examples/animation/easing_functions.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.easing_functions]\nname = \"Easing Functions\"\ndescription = \"Showcases the built-in easing functions\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"custom_skinned_mesh\"\npath = \"examples/animation/custom_skinned_mesh.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_skinned_mesh]\nname = \"Custom Skinned Mesh\"\ndescription = \"Skinned mesh example with mesh and joints data defined in code\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"gltf_skinned_mesh\"\npath = \"examples/animation/gltf_skinned_mesh.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.gltf_skinned_mesh]\nname = \"glTF Skinned Mesh\"\ndescription = \"Skinned mesh example with mesh and joints data loaded from a glTF file\"\ncategory = \"Animation\"\nwasm = true\n\n# Application\n[[example]]\nname = \"custom_loop\"\npath = \"examples/app/custom_loop.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_loop]\nname = \"Custom Loop\"\ndescription = \"Demonstrates how to create a custom runner (to update an app manually)\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"drag_and_drop\"\npath = \"examples/app/drag_and_drop.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.drag_and_drop]\nname = \"Drag and Drop\"\ndescription = \"An example that shows how to handle drag and drop in an app\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"empty\"\npath = \"examples/app/empty.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.empty]\nname = \"Empty\"\ndescription = \"An empty application (does nothing)\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"empty_defaults\"\npath = \"examples/app/empty_defaults.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.empty_defaults]\nname = \"Empty with Defaults\"\ndescription = \"An empty application with default plugins\"\ncategory = \"Application\"\nwasm = true\n\n[[example]]\nname = \"headless\"\npath = \"examples/app/headless.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.headless]\nname = \"Headless\"\ndescription = \"An application that runs without default plugins\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"logs\"\npath = \"examples/app/logs.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.logs]\nname = \"Logs\"\ndescription = \"Illustrate how to use generate log output\"\ncategory = \"Application\"\nwasm = true\n\n[[example]]\nname = \"log_layers\"\npath = \"examples/app/log_layers.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.log_layers]\nname = \"Log layers\"\ndescription = \"Illustrate how to add custom log layers\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"log_layers_ecs\"\npath = \"examples/app/log_layers_ecs.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.log_layers_ecs]\nname = \"Advanced log layers\"\ndescription = \"Illustrate how to transfer data between log layers and Bevy's ECS\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"plugin\"\npath = \"examples/app/plugin.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.plugin]\nname = \"Plugin\"\ndescription = \"Demonstrates the creation and registration of a custom plugin\"\ncategory = \"Application\"\nwasm = true\n\n[[example]]\nname = \"plugin_group\"\npath = \"examples/app/plugin_group.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.plugin_group]\nname = \"Plugin Group\"\ndescription = \"Demonstrates the creation and registration of a custom plugin group\"\ncategory = \"Application\"\nwasm = true\n\n[[example]]\nname = \"return_after_run\"\npath = \"examples/app/return_after_run.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.return_after_run]\nname = \"Return after Run\"\ndescription = \"Show how to return to main after the Bevy app has exited\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"thread_pool_resources\"\npath = \"examples/app/thread_pool_resources.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.thread_pool_resources]\nname = \"Thread Pool Resources\"\ndescription = \"Creates and customizes the internal thread pool\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"no_renderer\"\npath = \"examples/app/no_renderer.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.no_renderer]\nname = \"No Renderer\"\ndescription = \"An application that runs with default plugins and displays an empty window, but without an actual renderer\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"headless_renderer\"\npath = \"examples/app/headless_renderer.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.headless_renderer]\nname = \"Headless Renderer\"\ndescription = \"An application that runs with no window, but renders into image file\"\ncategory = \"Application\"\nwasm = false\n\n[[example]]\nname = \"without_winit\"\npath = \"examples/app/without_winit.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.without_winit]\nname = \"Without Winit\"\ndescription = \"Create an application without winit (runs single time, no event loop)\"\ncategory = \"Application\"\nwasm = false\n\n# Assets\n[[example]]\nname = \"alter_mesh\"\npath = \"examples/asset/alter_mesh.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.alter_mesh]\nname = \"Alter Mesh\"\ndescription = \"Shows how to modify the underlying asset of a Mesh after spawning.\"\ncategory = \"Assets\"\nwasm = false\n\n[[example]]\nname = \"alter_sprite\"\npath = \"examples/asset/alter_sprite.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.alter_sprite]\nname = \"Alter Sprite\"\ndescription = \"Shows how to modify texture assets after spawning.\"\ncategory = \"Assets\"\nwasm = false\n\n[[example]]\nname = \"asset_loading\"\npath = \"examples/asset/asset_loading.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.asset_loading]\nname = \"Asset Loading\"\ndescription = \"Demonstrates various methods to load assets\"\ncategory = \"Assets\"\nwasm = false\n\n[[example]]\nname = \"asset_settings\"\npath = \"examples/asset/asset_settings.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.asset_settings]\nname = \"Asset Settings\"\ndescription = \"Demonstrates various methods of applying settings when loading an asset\"\ncategory = \"Assets\"\nwasm = false\n\n[[example]]\nname = \"asset_decompression\"\npath = \"examples/asset/asset_decompression.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.asset_decompression]\nname = \"Asset Decompression\"\ndescription = \"Demonstrates loading a compressed asset\"\ncategory = \"Assets\"\nwasm = false\n\n[[example]]\nname = \"custom_asset\"\npath = \"examples/asset/custom_asset.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_asset]\nname = \"Custom Asset\"\ndescription = \"Implements a custom asset loader\"\ncategory = \"Assets\"\nwasm = true\n\n[[example]]\nname = \"custom_asset_reader\"\npath = \"examples/asset/custom_asset_reader.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_asset_reader]\nname = \"Custom Asset IO\"\ndescription = \"Implements a custom AssetReader\"\ncategory = \"Assets\"\n# Incompatible with the asset path patching of the example-showcase tool\nwasm = false\n\n[[example]]\nname = \"embedded_asset\"\npath = \"examples/asset/embedded_asset.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.embedded_asset]\nname = \"Embedded Asset\"\ndescription = \"Embed an asset in the application binary and load it\"\ncategory = \"Assets\"\nwasm = true\n\n[[example]]\nname = \"extra_asset_source\"\npath = \"examples/asset/extra_source.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.extra_asset_source]\nname = \"Extra asset source\"\ndescription = \"Load an asset from a non-standard asset source\"\ncategory = \"Assets\"\n# Uses non-standard asset path\nwasm = false\n\n[[example]]\nname = \"hot_asset_reloading\"\npath = \"examples/asset/hot_asset_reloading.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"file_watcher\"]\n\n[package.metadata.example.hot_asset_reloading]\nname = \"Hot Reloading of Assets\"\ndescription = \"Demonstrates automatic reloading of assets when modified on disk\"\ncategory = \"Assets\"\nwasm = false\n\n[[example]]\nname = \"asset_processing\"\npath = \"examples/asset/processing/asset_processing.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"file_watcher\", \"asset_processor\"]\n\n[package.metadata.example.asset_processing]\nname = \"Asset Processing\"\ndescription = \"Demonstrates how to process and load custom assets\"\ncategory = \"Assets\"\nwasm = false\n\n[[example]]\nname = \"repeated_texture\"\npath = \"examples/asset/repeated_texture.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.repeated_texture]\nname = \"Repeated texture configuration\"\ndescription = \"How to configure the texture to repeat instead of the default clamp to edges\"\ncategory = \"Assets\"\nwasm = true\n\n# Assets\n[[example]]\nname = \"multi_asset_sync\"\npath = \"examples/asset/multi_asset_sync.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.multi_asset_sync]\nname = \"Mult-asset synchronization\"\ndescription = \"Demonstrates how to wait for multiple assets to be loaded.\"\ncategory = \"Assets\"\nwasm = true\n\n# Async Tasks\n[[example]]\nname = \"async_compute\"\npath = \"examples/async_tasks/async_compute.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.async_compute]\nname = \"Async Compute\"\ndescription = \"How to use `AsyncComputeTaskPool` to complete longer running tasks\"\ncategory = \"Async Tasks\"\nwasm = false\n\n[[example]]\nname = \"external_source_external_thread\"\npath = \"examples/async_tasks/external_source_external_thread.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.external_source_external_thread]\nname = \"External Source of Data on an External Thread\"\ndescription = \"How to use an external thread to run an infinite task and communicate with a channel\"\ncategory = \"Async Tasks\"\nwasm = false\n\n# Audio\n[[example]]\nname = \"audio\"\npath = \"examples/audio/audio.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.audio]\nname = \"Audio\"\ndescription = \"Shows how to load and play an audio file\"\ncategory = \"Audio\"\nwasm = true\n\n[[example]]\nname = \"audio_control\"\npath = \"examples/audio/audio_control.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.audio_control]\nname = \"Audio Control\"\ndescription = \"Shows how to load and play an audio file, and control how it's played\"\ncategory = \"Audio\"\nwasm = true\n\n[[example]]\nname = \"decodable\"\npath = \"examples/audio/decodable.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.decodable]\nname = \"Decodable\"\ndescription = \"Shows how to create and register a custom audio source by implementing the `Decodable` type.\"\ncategory = \"Audio\"\nwasm = true\n\n[[example]]\nname = \"soundtrack\"\npath = \"examples/audio/soundtrack.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.soundtrack]\nname = \"Soundtrack\"\ndescription = \"Shows how to play different soundtracks based on game state\"\ncategory = \"Audio\"\nwasm = true\n\n[[example]]\nname = \"spatial_audio_2d\"\npath = \"examples/audio/spatial_audio_2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.spatial_audio_2d]\nname = \"Spatial Audio 2D\"\ndescription = \"Shows how to play spatial audio, and moving the emitter in 2D\"\ncategory = \"Audio\"\nwasm = true\n\n[[example]]\nname = \"spatial_audio_3d\"\npath = \"examples/audio/spatial_audio_3d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.spatial_audio_3d]\nname = \"Spatial Audio 3D\"\ndescription = \"Shows how to play spatial audio, and moving the emitter in 3D\"\ncategory = \"Audio\"\nwasm = true\n\n[[example]]\nname = \"pitch\"\npath = \"examples/audio/pitch.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.pitch]\nname = \"Pitch\"\ndescription = \"Shows how to directly play a simple pitch\"\ncategory = \"Audio\"\nwasm = true\n\n# Diagnostics\n[[example]]\nname = \"log_diagnostics\"\npath = \"examples/diagnostics/log_diagnostics.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.log_diagnostics]\nname = \"Log Diagnostics\"\ndescription = \"Add a plugin that logs diagnostics, like frames per second (FPS), to the console\"\ncategory = \"Diagnostics\"\nwasm = true\n\n[[example]]\nname = \"custom_diagnostic\"\npath = \"examples/diagnostics/custom_diagnostic.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_diagnostic]\nname = \"Custom Diagnostic\"\ndescription = \"Shows how to create a custom diagnostic\"\ncategory = \"Diagnostics\"\nwasm = true\n\n[[example]]\nname = \"enabling_disabling_diagnostic\"\npath = \"examples/diagnostics/enabling_disabling_diagnostic.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.enabling_disabling_diagnostic]\nname = \"Enabling/disabling diagnostic\"\ndescription = \"Shows how to disable/re-enable a Diagnostic during runtime\"\ncategory = \"Diagnostics\"\nwasm = true\n\n# ECS (Entity Component System)\n[[example]]\nname = \"ecs_guide\"\npath = \"examples/ecs/ecs_guide.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ecs_guide]\nname = \"ECS Guide\"\ndescription = \"Full guide to Bevy's ECS\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[package.metadata.example.apply_deferred]\nname = \"Apply System Buffers\"\ndescription = \"Show how to use `ApplyDeferred` system\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"change_detection\"\npath = \"examples/ecs/change_detection.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"track_location\"]\n\n[package.metadata.example.change_detection]\nname = \"Change Detection\"\ndescription = \"Change detection on components and resources\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"component_hooks\"\npath = \"examples/ecs/component_hooks.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.component_hooks]\nname = \"Component Hooks\"\ndescription = \"Define component hooks to manage component lifecycle events\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"custom_schedule\"\npath = \"examples/ecs/custom_schedule.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_schedule]\nname = \"Custom Schedule\"\ndescription = \"Demonstrates how to add custom schedules\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"custom_query_param\"\npath = \"examples/ecs/custom_query_param.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_query_param]\nname = \"Custom Query Parameters\"\ndescription = \"Groups commonly used compound queries and query filters into a single type\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"dynamic\"\npath = \"examples/ecs/dynamic.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.dynamic]\nname = \"Dynamic ECS\"\ndescription = \"Dynamically create components, spawn entities with those components and query those components\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"event\"\npath = \"examples/ecs/event.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.event]\nname = \"Event\"\ndescription = \"Illustrates event creation, activation, and reception\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"send_and_receive_events\"\npath = \"examples/ecs/send_and_receive_events.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.send_and_receive_events]\nname = \"Send and receive events\"\ndescription = \"Demonstrates how to send and receive events of the same type in a single system\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"fixed_timestep\"\npath = \"examples/ecs/fixed_timestep.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.fixed_timestep]\nname = \"Fixed Timestep\"\ndescription = \"Shows how to create systems that run every fixed timestep, rather than every tick\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"generic_system\"\npath = \"examples/ecs/generic_system.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.generic_system]\nname = \"Generic System\"\ndescription = \"Shows how to create systems that can be reused with different types\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"hierarchy\"\npath = \"examples/ecs/hierarchy.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.hierarchy]\nname = \"Hierarchy\"\ndescription = \"Creates a hierarchy of parents and children entities\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"immutable_components\"\npath = \"examples/ecs/immutable_components.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.immutable_components]\nname = \"Immutable Components\"\ndescription = \"Demonstrates the creation and utility of immutable components\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"iter_combinations\"\npath = \"examples/ecs/iter_combinations.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.iter_combinations]\nname = \"Iter Combinations\"\ndescription = \"Shows how to iterate over combinations of query results\"\ncategory = \"ECS (Entity Component System)\"\nwasm = true\n\n[[example]]\nname = \"one_shot_systems\"\npath = \"examples/ecs/one_shot_systems.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.one_shot_systems]\nname = \"One Shot Systems\"\ndescription = \"Shows how to flexibly run systems without scheduling them\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"parallel_query\"\npath = \"examples/ecs/parallel_query.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.parallel_query]\nname = \"Parallel Query\"\ndescription = \"Illustrates parallel queries with `ParallelIterator`\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"removal_detection\"\npath = \"examples/ecs/removal_detection.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.removal_detection]\nname = \"Removal Detection\"\ndescription = \"Query for entities that had a specific component removed earlier in the current frame\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"run_conditions\"\npath = \"examples/ecs/run_conditions.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.run_conditions]\nname = \"Run Conditions\"\ndescription = \"Run systems only when one or multiple conditions are met\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"fallible_params\"\npath = \"examples/ecs/fallible_params.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.fallible_params]\nname = \"Fallible System Parameters\"\ndescription = \"Systems are skipped if their parameters cannot be acquired\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"fallible_systems\"\npath = \"examples/ecs/fallible_systems.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.fallible_systems]\nname = \"Fallible Systems\"\ndescription = \"Systems that return results to handle errors\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"startup_system\"\npath = \"examples/ecs/startup_system.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.startup_system]\nname = \"Startup System\"\ndescription = \"Demonstrates a startup system (one that runs once when the app starts up)\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"states\"\npath = \"examples/state/states.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_dev_tools\"]\n\n[package.metadata.example.states]\nname = \"States\"\ndescription = \"Illustrates how to use States to control transitioning from a Menu state to an InGame state.\"\ncategory = \"State\"\nwasm = false\n\n[[example]]\nname = \"sub_states\"\npath = \"examples/state/sub_states.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_dev_tools\"]\n\n[package.metadata.example.sub_states]\nname = \"Sub States\"\ndescription = \"Using Sub States for hierarchical state handling.\"\ncategory = \"State\"\nwasm = false\n\n[[example]]\nname = \"computed_states\"\npath = \"examples/state/computed_states.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_dev_tools\"]\n\n[package.metadata.example.computed_states]\nname = \"Computed States\"\ndescription = \"Advanced state patterns using Computed States.\"\ncategory = \"State\"\nwasm = false\n\n[[example]]\nname = \"custom_transitions\"\npath = \"examples/state/custom_transitions.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_dev_tools\"]\n\n[package.metadata.example.custom_transitions]\nname = \"Custom State Transition Behavior\"\ndescription = \"Creating and working with custom state transition schedules.\"\ncategory = \"State\"\nwasm = false\n\n[[example]]\nname = \"system_piping\"\npath = \"examples/ecs/system_piping.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.system_piping]\nname = \"System Piping\"\ndescription = \"Pipe the output of one system into a second, allowing you to handle any errors gracefully\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"system_closure\"\npath = \"examples/ecs/system_closure.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.system_closure]\nname = \"System Closure\"\ndescription = \"Show how to use closures as systems, and how to configure `Local` variables by capturing external state\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"system_param\"\npath = \"examples/ecs/system_param.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.system_param]\nname = \"System Parameter\"\ndescription = \"Illustrates creating custom system parameters with `SystemParam`\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"system_stepping\"\npath = \"examples/ecs/system_stepping.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_debug_stepping\"]\n\n[package.metadata.example.system_stepping]\nname = \"System Stepping\"\ndescription = \"Demonstrate stepping through systems in order of execution.\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n# Time\n[[example]]\nname = \"time\"\npath = \"examples/time/time.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.time]\nname = \"Time handling\"\ndescription = \"Explains how Time is handled in ECS\"\ncategory = \"Time\"\nwasm = false\n\n[[example]]\nname = \"virtual_time\"\npath = \"examples/time/virtual_time.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.virtual_time]\nname = \"Virtual time\"\ndescription = \"Shows how `Time<Virtual>` can be used to pause, resume, slow down and speed up a game.\"\ncategory = \"Time\"\nwasm = false\n\n[[example]]\nname = \"timers\"\npath = \"examples/time/timers.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.timers]\nname = \"Timers\"\ndescription = \"Illustrates ticking `Timer` resources inside systems and handling their state\"\ncategory = \"Time\"\nwasm = false\n\n\n# Games\n[[example]]\nname = \"alien_cake_addict\"\npath = \"examples/games/alien_cake_addict.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.alien_cake_addict]\nname = \"Alien Cake Addict\"\ndescription = \"Eat the cakes. Eat them all. An example 3D game\"\ncategory = \"Games\"\nwasm = true\n\n[[example]]\nname = \"breakout\"\npath = \"examples/games/breakout.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.breakout]\nname = \"Breakout\"\ndescription = \"An implementation of the classic game \\\"Breakout\\\".\"\ncategory = \"Games\"\nwasm = true\n\n[[example]]\nname = \"contributors\"\npath = \"examples/games/contributors.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.contributors]\nname = \"Contributors\"\ndescription = \"Displays each contributor as a bouncy bevy-ball!\"\ncategory = \"Games\"\nwasm = true\n\n[[example]]\nname = \"desk_toy\"\npath = \"examples/games/desk_toy.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.desk_toy]\nname = \"Desk Toy\"\ndescription = \"Bevy logo as a desk toy using transparent windows! Now with Googly Eyes!\"\ncategory = \"Games\"\nwasm = false\n\n[[example]]\nname = \"game_menu\"\npath = \"examples/games/game_menu.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.game_menu]\nname = \"Game Menu\"\ndescription = \"A simple game menu\"\ncategory = \"Games\"\nwasm = true\n\n[[example]]\nname = \"loading_screen\"\npath = \"examples/games/loading_screen.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.loading_screen]\nname = \"Loading Screen\"\ndescription = \"Demonstrates how to create a loading screen that waits for all assets to be loaded and render pipelines to be compiled.\"\ncategory = \"Games\"\nwasm = true\n\n# Input\n[[example]]\nname = \"char_input_events\"\npath = \"examples/input/char_input_events.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.char_input_events]\nname = \"Char Input Events\"\ndescription = \"Prints out all chars as they are inputted\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"gamepad_input\"\npath = \"examples/input/gamepad_input.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.gamepad_input]\nname = \"Gamepad Input\"\ndescription = \"Shows handling of gamepad input, connections, and disconnections\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"gamepad_input_events\"\npath = \"examples/input/gamepad_input_events.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.gamepad_input_events]\nname = \"Gamepad Input Events\"\ndescription = \"Iterates and prints gamepad input and connection events\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"gamepad_rumble\"\npath = \"examples/input/gamepad_rumble.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.gamepad_rumble]\nname = \"Gamepad Rumble\"\ndescription = \"Shows how to rumble a gamepad using force feedback\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"keyboard_input\"\npath = \"examples/input/keyboard_input.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.keyboard_input]\nname = \"Keyboard Input\"\ndescription = \"Demonstrates handling a key press/release\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"keyboard_modifiers\"\npath = \"examples/input/keyboard_modifiers.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.keyboard_modifiers]\nname = \"Keyboard Modifiers\"\ndescription = \"Demonstrates using key modifiers (ctrl, shift)\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"keyboard_input_events\"\npath = \"examples/input/keyboard_input_events.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.keyboard_input_events]\nname = \"Keyboard Input Events\"\ndescription = \"Prints out all keyboard events\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"mouse_input\"\npath = \"examples/input/mouse_input.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.mouse_input]\nname = \"Mouse Input\"\ndescription = \"Demonstrates handling a mouse button press/release\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"mouse_input_events\"\npath = \"examples/input/mouse_input_events.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.mouse_input_events]\nname = \"Mouse Input Events\"\ndescription = \"Prints out all mouse events (buttons, movement, etc.)\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"mouse_grab\"\npath = \"examples/input/mouse_grab.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.mouse_grab]\nname = \"Mouse Grab\"\ndescription = \"Demonstrates how to grab the mouse, locking the cursor to the app's screen\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"touch_input\"\npath = \"examples/input/touch_input.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.touch_input]\nname = \"Touch Input\"\ndescription = \"Displays touch presses, releases, and cancels\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"touch_input_events\"\npath = \"examples/input/touch_input_events.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.touch_input_events]\nname = \"Touch Input Events\"\ndescription = \"Prints out all touch inputs\"\ncategory = \"Input\"\nwasm = false\n\n[[example]]\nname = \"text_input\"\npath = \"examples/input/text_input.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.text_input]\nname = \"Text Input\"\ndescription = \"Simple text input with IME support\"\ncategory = \"Input\"\nwasm = false\n\n# Reflection\n[[example]]\nname = \"reflection\"\npath = \"examples/reflection/reflection.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.reflection]\nname = \"Reflection\"\ndescription = \"Demonstrates how reflection in Bevy provides a way to dynamically interact with Rust types\"\ncategory = \"Reflection\"\nwasm = false\n\n[[example]]\nname = \"custom_attributes\"\npath = \"examples/reflection/custom_attributes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_attributes]\nname = \"Custom Attributes\"\ndescription = \"Registering and accessing custom attributes on reflected types\"\ncategory = \"Reflection\"\nwasm = false\n\n[[example]]\nname = \"dynamic_types\"\npath = \"examples/reflection/dynamic_types.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.dynamic_types]\nname = \"Dynamic Types\"\ndescription = \"How dynamic types are used with reflection\"\ncategory = \"Reflection\"\nwasm = false\n\n[[example]]\nname = \"function_reflection\"\npath = \"examples/reflection/function_reflection.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"reflect_functions\"]\n\n[package.metadata.example.function_reflection]\nname = \"Function Reflection\"\ndescription = \"Demonstrates how functions can be called dynamically using reflection\"\ncategory = \"Reflection\"\nwasm = false\n\n[[example]]\nname = \"generic_reflection\"\npath = \"examples/reflection/generic_reflection.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.generic_reflection]\nname = \"Generic Reflection\"\ndescription = \"Registers concrete instances of generic types that may be used with reflection\"\ncategory = \"Reflection\"\nwasm = false\n\n[[example]]\nname = \"reflection_types\"\npath = \"examples/reflection/reflection_types.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.reflection_types]\nname = \"Reflection Types\"\ndescription = \"Illustrates the various reflection types available\"\ncategory = \"Reflection\"\nwasm = false\n\n[[example]]\nname = \"type_data\"\npath = \"examples/reflection/type_data.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.type_data]\nname = \"Type Data\"\ndescription = \"Demonstrates how to create and use type data\"\ncategory = \"Reflection\"\nwasm = false\n\n# Scene\n[[example]]\nname = \"scene\"\npath = \"examples/scene/scene.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.scene]\nname = \"Scene\"\ndescription = \"Demonstrates loading from and saving scenes to files\"\ncategory = \"Scene\"\nwasm = false\n\n# Shaders\n[[package.metadata.example_category]]\nname = \"Shaders\"\ndescription = \"\"\"\nThese examples demonstrate how to implement different shaders in user code.\n\nA shader in its most common usage is a small program that is run by the GPU per-vertex in a mesh (a vertex shader) or per-affected-screen-fragment (a fragment shader.) The GPU executes these programs in a highly parallel way.\n\nThere are also compute shaders which are used for more general processing leveraging the GPU's parallelism.\n\"\"\"\n\n[[example]]\nname = \"custom_vertex_attribute\"\npath = \"examples/shader/custom_vertex_attribute.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_vertex_attribute]\nname = \"Custom Vertex Attribute\"\ndescription = \"A shader that reads a mesh's custom vertex attribute\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"custom_post_processing\"\npath = \"examples/shader/custom_post_processing.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_post_processing]\nname = \"Post Processing - Custom Render Pass\"\ndescription = \"A custom post processing effect, using a custom render pass that runs after the main pass\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"shader_defs\"\npath = \"examples/shader/shader_defs.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.shader_defs]\nname = \"Shader Defs\"\ndescription = \"A shader that uses \\\"shaders defs\\\" (a bevy tool to selectively toggle parts of a shader)\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"shader_material\"\npath = \"examples/shader/shader_material.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.shader_material]\nname = \"Material\"\ndescription = \"A shader and a material that uses it\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"shader_material_2d\"\npath = \"examples/shader/shader_material_2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.shader_material_2d]\nname = \"Material\"\ndescription = \"A shader and a material that uses it on a 2d mesh\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"extended_material\"\npath = \"examples/shader/extended_material.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.extended_material]\nname = \"Extended Material\"\ndescription = \"A custom shader that builds on the standard material\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"shader_prepass\"\npath = \"examples/shader/shader_prepass.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.shader_prepass]\nname = \"Material Prepass\"\ndescription = \"A shader that uses the various textures generated by the prepass\"\ncategory = \"Shaders\"\nwasm = false\n\n[[example]]\nname = \"shader_material_screenspace_texture\"\npath = \"examples/shader/shader_material_screenspace_texture.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.shader_material_screenspace_texture]\nname = \"Material - Screenspace Texture\"\ndescription = \"A shader that samples a texture with view-independent UV coordinates\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"shader_material_glsl\"\npath = \"examples/shader/shader_material_glsl.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"shader_format_glsl\"]\n\n[package.metadata.example.shader_material_glsl]\nname = \"Material - GLSL\"\ndescription = \"A shader that uses the GLSL shading language\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"custom_shader_instancing\"\npath = \"examples/shader/custom_shader_instancing.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_shader_instancing]\nname = \"Instancing\"\ndescription = \"A shader that renders a mesh multiple times in one draw call using low level rendering api\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"automatic_instancing\"\npath = \"examples/shader/automatic_instancing.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.automatic_instancing]\nname = \"Instancing\"\ndescription = \"Shows that multiple instances of a cube are automatically instanced in one draw call\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"animate_shader\"\npath = \"examples/shader/animate_shader.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animate_shader]\nname = \"Animated\"\ndescription = \"A shader that uses dynamic data like the time since startup\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"compute_shader_game_of_life\"\npath = \"examples/shader/compute_shader_game_of_life.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.compute_shader_game_of_life]\nname = \"Compute - Game of Life\"\ndescription = \"A compute shader that simulates Conway's Game of Life\"\ncategory = \"Shaders\"\nwasm = false\n\n[[example]]\nname = \"gpu_readback\"\npath = \"examples/shader/gpu_readback.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.gpu_readback]\nname = \"GPU readback\"\ndescription = \"A very simple compute shader that writes to a buffer that is read by the cpu\"\ncategory = \"Shaders\"\nwasm = false\n\n[[example]]\nname = \"array_texture\"\npath = \"examples/shader/array_texture.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.array_texture]\nname = \"Array Texture\"\ndescription = \"A shader that shows how to reuse the core bevy PBR shading functionality in a custom material that obtains the base color from an array texture.\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"texture_binding_array\"\npath = \"examples/shader/texture_binding_array.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.texture_binding_array]\nname = \"Texture Binding Array (Bindless Textures)\"\ndescription = \"A shader that shows how to bind and sample multiple textures as a binding array (a.k.a. bindless textures).\"\ncategory = \"Shaders\"\nwasm = false\n\n[[example]]\nname = \"storage_buffer\"\npath = \"examples/shader/storage_buffer.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.storage_buffer]\nname = \"Storage Buffer\"\ndescription = \"A shader that shows how to bind a storage buffer using a custom material.\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"specialized_mesh_pipeline\"\npath = \"examples/shader/specialized_mesh_pipeline.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.specialized_mesh_pipeline]\nname = \"Specialized Mesh Pipeline\"\ndescription = \"Demonstrates how to write a specialized mesh pipeline\"\ncategory = \"Shaders\"\nwasm = true\n\n# Stress tests\n[[package.metadata.example_category]]\nname = \"Stress Tests\"\ndescription = \"\"\"\nThese examples are used to test the performance and stability of various parts of the engine in an isolated way.\n\nDue to the focus on performance it's recommended to run the stress tests in release mode:\n\n```sh\ncargo run --release --example <example name>\n```\n\"\"\"\n\n[[example]]\nname = \"bevymark\"\npath = \"examples/stress_tests/bevymark.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.bevymark]\nname = \"Bevymark\"\ndescription = \"A heavy sprite rendering workload to benchmark your system with Bevy\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_animated_sprites\"\npath = \"examples/stress_tests/many_animated_sprites.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_animated_sprites]\nname = \"Many Animated Sprites\"\ndescription = \"Displays many animated sprites in a grid arrangement with slight offsets to their animation timers. Used for performance testing.\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_buttons\"\npath = \"examples/stress_tests/many_buttons.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_buttons]\nname = \"Many Buttons\"\ndescription = \"Test rendering of many UI elements\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_cameras_lights\"\npath = \"examples/stress_tests/many_cameras_lights.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_cameras_lights]\nname = \"Many Cameras & Lights\"\ndescription = \"Test rendering of many cameras and lights\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_components\"\npath = \"examples/stress_tests/many_components.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_components]\nname = \"Many Components (and Entities and Systems)\"\ndescription = \"Test large ECS systems\"\ncategory = \"Stress Tests\"\nwasm = false\n\n[[example]]\nname = \"many_cubes\"\npath = \"examples/stress_tests/many_cubes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_cubes]\nname = \"Many Cubes\"\ndescription = \"Simple benchmark to test per-entity draw overhead. Run with the `sphere` argument to test frustum culling\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_gizmos\"\npath = \"examples/stress_tests/many_gizmos.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_gizmos]\nname = \"Many Gizmos\"\ndescription = \"Test rendering of many gizmos\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_foxes\"\npath = \"examples/stress_tests/many_foxes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_foxes]\nname = \"Many Foxes\"\ndescription = \"Loads an animated fox model and spawns lots of them. Good for testing skinned mesh performance. Takes an unsigned integer argument for the number of foxes to spawn. Defaults to 1000\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_glyphs\"\npath = \"examples/stress_tests/many_glyphs.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_glyphs]\nname = \"Many Glyphs\"\ndescription = \"Simple benchmark to test text rendering.\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_lights\"\npath = \"examples/stress_tests/many_lights.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_lights]\nname = \"Many Lights\"\ndescription = \"Simple benchmark to test rendering many point lights. Run with `WGPU_SETTINGS_PRIO=webgl2` to restrict to uniform buffers and max 256 lights\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_sprites\"\npath = \"examples/stress_tests/many_sprites.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_sprites]\nname = \"Many Sprites\"\ndescription = \"Displays many sprites in a grid arrangement! Used for performance testing. Use `--colored` to enable color tinted sprites.\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"many_text2d\"\npath = \"examples/stress_tests/many_text2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.many_text2d]\nname = \"Many Text2d\"\ndescription = \"Displays many Text2d! Used for performance testing.\"\ncategory = \"Stress Tests\"\nwasm = true\n\n[[example]]\nname = \"transform_hierarchy\"\npath = \"examples/stress_tests/transform_hierarchy.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.transform_hierarchy]\nname = \"Transform Hierarchy\"\ndescription = \"Various test cases for hierarchy and transform propagation performance\"\ncategory = \"Stress Tests\"\nwasm = false\n\n[[example]]\nname = \"text_pipeline\"\npath = \"examples/stress_tests/text_pipeline.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.text_pipeline]\nname = \"Text Pipeline\"\ndescription = \"Text Pipeline benchmark\"\ncategory = \"Stress Tests\"\nwasm = false\n\n# Tools\n[[example]]\nname = \"scene_viewer\"\npath = \"examples/tools/scene_viewer/main.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.scene_viewer]\nname = \"Scene Viewer\"\ndescription = \"A simple way to view glTF models with Bevy. Just run `cargo run --release --example scene_viewer /path/to/model.gltf#Scene0`, replacing the path as appropriate. With no arguments it will load the FieldHelmet glTF model from the repository assets subdirectory\"\ncategory = \"Tools\"\nwasm = true\n\n[[example]]\nname = \"gamepad_viewer\"\npath = \"examples/tools/gamepad_viewer.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.gamepad_viewer]\nname = \"Gamepad Viewer\"\ndescription = \"Shows a visualization of gamepad buttons, sticks, and triggers\"\ncategory = \"Tools\"\nwasm = true\n\n[[example]]\nname = \"nondeterministic_system_order\"\npath = \"examples/ecs/nondeterministic_system_order.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.nondeterministic_system_order]\nname = \"Nondeterministic System Order\"\ndescription = \"Systems run in parallel, but their order isn't always deterministic. Here's how to detect and fix this.\"\ncategory = \"ECS (Entity Component System)\"\nwasm = false\n\n[[example]]\nname = \"observers\"\npath = \"examples/ecs/observers.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.observers]\nname = \"Observers\"\ndescription = \"Demonstrates observers that react to events (both built-in life-cycle events and custom events)\"\ncategory = \"ECS (Entity Component System)\"\nwasm = true\n\n[[example]]\nname = \"observer_propagation\"\npath = \"examples/ecs/observer_propagation.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.observer_propagation]\nname = \"Observer Propagation\"\ndescription = \"Demonstrates event propagation with observers\"\ncategory = \"ECS (Entity Component System)\"\nwasm = true\n\n[[example]]\nname = \"3d_rotation\"\npath = \"examples/transforms/3d_rotation.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.3d_rotation]\nname = \"3D Rotation\"\ndescription = \"Illustrates how to (constantly) rotate an object around an axis\"\ncategory = \"Transforms\"\nwasm = true\n\n[[example]]\nname = \"align\"\npath = \"examples/transforms/align.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.align]\nname = \"Alignment\"\ndescription = \"A demonstration of Transform's axis-alignment feature\"\ncategory = \"Transforms\"\nwasm = true\n\n[[example]]\nname = \"scale\"\npath = \"examples/transforms/scale.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.scale]\nname = \"Scale\"\ndescription = \"Illustrates how to scale an object in each direction\"\ncategory = \"Transforms\"\nwasm = true\n\n[[example]]\nname = \"transform\"\npath = \"examples/transforms/transform.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.transform]\nname = \"Transform\"\ndescription = \"Shows multiple transformations of objects\"\ncategory = \"Transforms\"\nwasm = true\n\n[[example]]\nname = \"translation\"\npath = \"examples/transforms/translation.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.translation]\nname = \"Translation\"\ndescription = \"Illustrates how to move an object along an axis\"\ncategory = \"Transforms\"\nwasm = true\n\n# UI (User Interface)\n[[example]]\nname = \"borders\"\npath = \"examples/ui/borders.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.borders]\nname = \"Borders\"\ndescription = \"Demonstrates how to create a node with a border\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"box_shadow\"\npath = \"examples/ui/box_shadow.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.box_shadow]\nname = \"Box Shadow\"\ndescription = \"Demonstrates how to create a node with a shadow\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"button\"\npath = \"examples/ui/button.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.button]\nname = \"Button\"\ndescription = \"Illustrates creating and updating a button\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"display_and_visibility\"\npath = \"examples/ui/display_and_visibility.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.display_and_visibility]\nname = \"Display and Visibility\"\ndescription = \"Demonstrates how Display and Visibility work in the UI.\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"window_fallthrough\"\npath = \"examples/ui/window_fallthrough.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.window_fallthrough]\nname = \"Window Fallthrough\"\ndescription = \"Illustrates how to access `winit::window::Window`'s `hittest` functionality.\"\ncategory = \"UI (User Interface)\"\nwasm = false\n\n[[example]]\nname = \"font_atlas_debug\"\npath = \"examples/ui/font_atlas_debug.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.font_atlas_debug]\nname = \"Font Atlas Debug\"\ndescription = \"Illustrates how FontAtlases are populated (used to optimize text rendering internally)\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"overflow\"\npath = \"examples/ui/overflow.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.overflow]\nname = \"Overflow\"\ndescription = \"Simple example demonstrating overflow behavior\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"overflow_clip_margin\"\npath = \"examples/ui/overflow_clip_margin.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.overflow_clip_margin]\nname = \"Overflow Clip Margin\"\ndescription = \"Simple example demonstrating the OverflowClipMargin style property\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n\n[[example]]\nname = \"overflow_debug\"\npath = \"examples/ui/overflow_debug.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.overflow_debug]\nname = \"Overflow and Clipping Debug\"\ndescription = \"An example to debug overflow and clipping behavior\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"relative_cursor_position\"\npath = \"examples/ui/relative_cursor_position.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.relative_cursor_position]\nname = \"Relative Cursor Position\"\ndescription = \"Showcases the RelativeCursorPosition component\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"render_ui_to_texture\"\npath = \"examples/ui/render_ui_to_texture.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.render_ui_to_texture]\nname = \"Render UI to Texture\"\ndescription = \"An example of rendering UI as a part of a 3D world\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"size_constraints\"\npath = \"examples/ui/size_constraints.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.size_constraints]\nname = \"Size Constraints\"\ndescription = \"Demonstrates how the to use the size constraints to control the size of a UI node.\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"text\"\npath = \"examples/ui/text.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.text]\nname = \"Text\"\ndescription = \"Illustrates creating and updating text\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"text_debug\"\npath = \"examples/ui/text_debug.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.text_debug]\nname = \"Text Debug\"\ndescription = \"An example for debugging text layout\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"flex_layout\"\npath = \"examples/ui/flex_layout.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.flex_layout]\nname = \"Flex Layout\"\ndescription = \"Demonstrates how the AlignItems and JustifyContent properties can be composed to layout nodes and position text\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"text_wrap_debug\"\npath = \"examples/ui/text_wrap_debug.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.text_wrap_debug]\nname = \"Text Wrap Debug\"\ndescription = \"Demonstrates text wrapping\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"ghost_nodes\"\npath = \"examples/ui/ghost_nodes.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"ghost_nodes\"]\n\n[package.metadata.example.ghost_nodes]\nname = \"Ghost Nodes\"\ndescription = \"Demonstrates the use of Ghost Nodes to skip entities in the UI layout hierarchy\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"grid\"\npath = \"examples/ui/grid.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.grid]\nname = \"CSS Grid\"\ndescription = \"An example for CSS Grid layout\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"scroll\"\npath = \"examples/ui/scroll.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.scroll]\nname = \"Scroll\"\ndescription = \"Demonstrates scrolling UI containers\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"transparency_ui\"\npath = \"examples/ui/transparency_ui.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.transparency_ui]\nname = \"Transparency UI\"\ndescription = \"Demonstrates transparency for UI\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"z_index\"\npath = \"examples/ui/z_index.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.z_index]\nname = \"UI Z-Index\"\ndescription = \"Demonstrates how to control the relative depth (z-position) of UI elements\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"ui_scaling\"\npath = \"examples/ui/ui_scaling.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ui_scaling]\nname = \"UI Scaling\"\ndescription = \"Illustrates how to scale the UI\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"ui_texture_atlas\"\npath = \"examples/ui/ui_texture_atlas.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ui_texture_atlas]\nname = \"UI Texture Atlas\"\ndescription = \"Illustrates how to use TextureAtlases in UI\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"ui_texture_slice\"\npath = \"examples/ui/ui_texture_slice.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ui_texture_slice]\nname = \"UI Texture Slice\"\ndescription = \"Illustrates how to use 9 Slicing in UI\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"ui_texture_slice_flip_and_tile\"\npath = \"examples/ui/ui_texture_slice_flip_and_tile.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ui_texture_slice_flip_and_tile]\nname = \"UI Texture Slice Flipping and Tiling\"\ndescription = \"Illustrates how to flip and tile images with 9 Slicing in UI\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"ui_texture_atlas_slice\"\npath = \"examples/ui/ui_texture_atlas_slice.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ui_texture_atlas_slice]\nname = \"UI Texture Atlas Slice\"\ndescription = \"Illustrates how to use 9 Slicing for TextureAtlases in UI\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"viewport_debug\"\npath = \"examples/ui/viewport_debug.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.viewport_debug]\nname = \"Viewport Debug\"\ndescription = \"An example for debugging viewport coordinates\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n# Window\n[[example]]\nname = \"clear_color\"\npath = \"examples/window/clear_color.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.clear_color]\nname = \"Clear Color\"\ndescription = \"Creates a solid color window\"\ncategory = \"Window\"\nwasm = true\n\n[[example]]\nname = \"custom_user_event\"\npath = \"examples/window/custom_user_event.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_user_event]\nname = \"Custom User Event\"\ndescription = \"Handles custom user events within the event loop\"\ncategory = \"Window\"\nwasm = true\n\n[[example]]\nname = \"low_power\"\npath = \"examples/window/low_power.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.low_power]\nname = \"Low Power\"\ndescription = \"Demonstrates settings to reduce power use for bevy applications\"\ncategory = \"Window\"\nwasm = true\n\n[[example]]\nname = \"multiple_windows\"\npath = \"examples/window/multiple_windows.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.multiple_windows]\nname = \"Multiple Windows\"\ndescription = \"Demonstrates creating multiple windows, and rendering to them\"\ncategory = \"Window\"\nwasm = false\n\n[[example]]\nname = \"scale_factor_override\"\npath = \"examples/window/scale_factor_override.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.scale_factor_override]\nname = \"Scale Factor Override\"\ndescription = \"Illustrates how to customize the default window settings\"\ncategory = \"Window\"\nwasm = true\n\n[[example]]\nname = \"screenshot\"\npath = \"examples/window/screenshot.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.screenshot]\nname = \"Screenshot\"\ndescription = \"Shows how to save screenshots to disk\"\ncategory = \"Window\"\nwasm = true\n\n[[example]]\nname = \"transparent_window\"\npath = \"examples/window/transparent_window.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.transparent_window]\nname = \"Transparent Window\"\ndescription = \"Illustrates making the window transparent and hiding the window decoration\"\ncategory = \"Window\"\nwasm = false\n\n[[example]]\nname = \"window_settings\"\npath = \"examples/window/window_settings.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.window_settings]\nname = \"Window Settings\"\ndescription = \"Demonstrates customizing default window settings\"\ncategory = \"Window\"\nwasm = true\n\n[[example]]\nname = \"window_drag_move\"\npath = \"examples/window/window_drag_move.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.window_drag_move]\nname = \"Window Drag Move\"\ndescription = \"Demonstrates drag move and drag resize without window decoration\"\ncategory = \"Window\"\nwasm = false\n\n[[example]]\nname = \"ambiguity_detection\"\npath = \"tests/ecs/ambiguity_detection.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ambiguity_detection]\nhidden = true\n\n[[example]]\nname = \"resizing\"\npath = \"tests/window/resizing.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.resizing]\nhidden = true\n\n[[example]]\nname = \"minimizing\"\npath = \"tests/window/minimizing.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.minimizing]\nhidden = true\n\n[[example]]\nname = \"window_resizing\"\npath = \"examples/window/window_resizing.rs\"\ndoc-scrape-examples = true\n\n[[example]]\nname = \"fallback_image\"\npath = \"examples/shader/fallback_image.rs\"\ndoc-scrape-examples = true\n\n[[example]]\nname = \"reflection_probes\"\npath = \"examples/3d/reflection_probes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.reflection_probes]\nname = \"Reflection Probes\"\ndescription = \"Demonstrates reflection probes\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[package.metadata.example.fallback_image]\nhidden = true\n\n[package.metadata.example.window_resizing]\nname = \"Window Resizing\"\ndescription = \"Demonstrates resizing and responding to resizing a window\"\ncategory = \"Window\"\nwasm = true\n\n[[example]]\nname = \"ui_material\"\npath = \"examples/ui/ui_material.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ui_material]\nname = \"UI Material\"\ndescription = \"Demonstrates creating and using custom Ui materials\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"cubic_splines\"\npath = \"examples/math/cubic_splines.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.cubic_splines]\nname = \"Cubic Splines\"\ndescription = \"Exhibits different modes of constructing cubic curves using splines\"\ncategory = \"Math\"\nwasm = true\n\n[[example]]\nname = \"render_primitives\"\npath = \"examples/math/render_primitives.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.render_primitives]\nname = \"Rendering Primitives\"\ndescription = \"Shows off rendering for all math primitives as both Meshes and Gizmos\"\ncategory = \"Math\"\nwasm = true\n\n# Math\n[[example]]\nname = \"sampling_primitives\"\npath = \"examples/math/sampling_primitives.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.sampling_primitives]\nname = \"Sampling Primitives\"\ndescription = \"Demonstrates all the primitives which can be sampled.\"\ncategory = \"Math\"\nwasm = true\n\n[[example]]\nname = \"custom_primitives\"\npath = \"examples/math/custom_primitives.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_primitives]\nname = \"Custom Primitives\"\ndescription = \"Demonstrates how to add custom primitives and useful traits for them.\"\ncategory = \"Math\"\nwasm = true\n\n[[example]]\nname = \"random_sampling\"\npath = \"examples/math/random_sampling.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.random_sampling]\nname = \"Random Sampling\"\ndescription = \"Demonstrates how to sample random points from mathematical primitives\"\ncategory = \"Math\"\nwasm = true\n\n[[example]]\nname = \"smooth_follow\"\npath = \"examples/movement/smooth_follow.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.smooth_follow]\nname = \"Smooth Follow\"\ndescription = \"Demonstrates how to make an entity smoothly follow another using interpolation\"\ncategory = \"Math\"\nwasm = true\n\n# Gizmos\n[[example]]\nname = \"2d_gizmos\"\npath = \"examples/gizmos/2d_gizmos.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.2d_gizmos]\nname = \"2D Gizmos\"\ndescription = \"A scene showcasing 2D gizmos\"\ncategory = \"Gizmos\"\nwasm = true\n\n[[example]]\nname = \"3d_gizmos\"\npath = \"examples/gizmos/3d_gizmos.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.3d_gizmos]\nname = \"3D Gizmos\"\ndescription = \"A scene showcasing 3D gizmos\"\ncategory = \"Gizmos\"\nwasm = true\n\n[[example]]\nname = \"axes\"\npath = \"examples/gizmos/axes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.axes]\nname = \"Axes\"\ndescription = \"Demonstrates the function of axes gizmos\"\ncategory = \"Gizmos\"\nwasm = true\n\n[[example]]\nname = \"light_gizmos\"\npath = \"examples/gizmos/light_gizmos.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.light_gizmos]\nname = \"Light Gizmos\"\ndescription = \"A scene showcasing light gizmos\"\ncategory = \"Gizmos\"\nwasm = true\n\n[[example]]\nname = \"fps_overlay\"\npath = \"examples/dev_tools/fps_overlay.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_dev_tools\"]\n\n[[example]]\nname = \"2d_top_down_camera\"\npath = \"examples/camera/2d_top_down_camera.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.2d_top_down_camera]\nname = \"2D top-down camera\"\ndescription = \"A 2D top-down camera smoothly following player movements\"\ncategory = \"Camera\"\nwasm = true\n\n[[example]]\nname = \"custom_projection\"\npath = \"examples/camera/custom_projection.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_projection]\nname = \"Custom Projection\"\ndescription = \"Shows how to create custom camera projections.\"\ncategory = \"Camera\"\nwasm = true\n\n[[example]]\nname = \"first_person_view_model\"\npath = \"examples/camera/first_person_view_model.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.first_person_view_model]\nname = \"First person view model\"\ndescription = \"A first-person camera that uses a world model and a view model with different field of views (FOV)\"\ncategory = \"Camera\"\nwasm = true\n\n[[example]]\nname = \"projection_zoom\"\npath = \"examples/camera/projection_zoom.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.projection_zoom]\nname = \"Projection Zoom\"\ndescription = \"Shows how to zoom orthographic and perspective projection cameras.\"\ncategory = \"Camera\"\nwasm = true\n\n[[example]]\nname = \"camera_orbit\"\npath = \"examples/camera/camera_orbit.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.camera_orbit]\nname = \"Camera Orbit\"\ndescription = \"Shows how to orbit a static scene using pitch, yaw, and roll.\"\ncategory = \"Camera\"\nwasm = true\n\n[[example]]\nname = \"2d_screen_shake\"\npath = \"examples/camera/2d_screen_shake.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.2d_screen_shake]\nname = \"Screen Shake\"\ndescription = \"A simple 2D screen shake effect\"\ncategory = \"Camera\"\nwasm = true\n\n\n[package.metadata.example.fps_overlay]\nname = \"FPS overlay\"\ndescription = \"Demonstrates FPS overlay\"\ncategory = \"Dev tools\"\nwasm = true\n\n[[example]]\nname = \"visibility_range\"\npath = \"examples/3d/visibility_range.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.visibility_range]\nname = \"Visibility range\"\ndescription = \"Demonstrates visibility ranges\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"ssr\"\npath = \"examples/3d/ssr.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.ssr]\nname = \"Screen Space Reflections\"\ndescription = \"Demonstrates screen space reflections with water ripples\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"camera_sub_view\"\npath = \"examples/3d/camera_sub_view.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.camera_sub_view]\nname = \"Camera sub view\"\ndescription = \"Demonstrates using different sub view effects on a camera\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"color_grading\"\npath = \"examples/3d/color_grading.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.color_grading]\nname = \"Color grading\"\ndescription = \"Demonstrates color grading\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"clearcoat\"\npath = \"examples/3d/clearcoat.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"pbr_multi_layer_material_textures\"]\n\n[package.metadata.example.clearcoat]\nname = \"Clearcoat\"\ndescription = \"Demonstrates the clearcoat PBR feature\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"depth_of_field\"\npath = \"examples/3d/depth_of_field.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.depth_of_field]\nname = \"Depth of field\"\ndescription = \"Demonstrates depth of field\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"volumetric_fog\"\npath = \"examples/3d/volumetric_fog.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.volumetric_fog]\nname = \"Volumetric fog\"\ndescription = \"Demonstrates volumetric fog and lighting\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"client\"\npath = \"examples/remote/client.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_remote\"]\n\n[package.metadata.example.client]\nname = \"client\"\ndescription = \"A simple command line client that can control Bevy apps via the BRP\"\ncategory = \"Remote Protocol\"\nwasm = false\n\n[[example]]\nname = \"server\"\npath = \"examples/remote/server.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_remote\"]\n\n[package.metadata.example.server]\nname = \"server\"\ndescription = \"A Bevy app that you can connect to with the BRP and edit\"\ncategory = \"Remote Protocol\"\nwasm = false\n\n[[example]]\nname = \"anisotropy\"\npath = \"examples/3d/anisotropy.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"jpeg\", \"pbr_anisotropy_texture\"]\n\n[package.metadata.example.anisotropy]\nname = \"Anisotropy\"\ndescription = \"Displays an example model with anisotropy\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"custom_phase_item\"\npath = \"examples/shader/custom_phase_item.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.custom_phase_item]\nname = \"Custom phase item\"\ndescription = \"Demonstrates how to enqueue custom draw commands in a render phase\"\ncategory = \"Shaders\"\nwasm = true\n\n[[example]]\nname = \"fog_volumes\"\npath = \"examples/3d/fog_volumes.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.fog_volumes]\nname = \"Fog volumes\"\ndescription = \"Demonstrates fog volumes\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"scrolling_fog\"\npath = \"examples/3d/scrolling_fog.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.scrolling_fog]\nname = \"Scrolling fog\"\ndescription = \"Demonstrates how to create the effect of fog moving in the wind\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"physics_in_fixed_timestep\"\npath = \"examples/movement/physics_in_fixed_timestep.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.physics_in_fixed_timestep]\nname = \"Run physics in a fixed timestep\"\ndescription = \"Handles input, physics, and rendering in an industry-standard way by using a fixed timestep\"\ncategory = \"Movement\"\nwasm = true\n\n[[example]]\nname = \"post_processing\"\npath = \"examples/3d/post_processing.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.post_processing]\nname = \"Built-in postprocessing\"\ndescription = \"Demonstrates the built-in postprocessing features\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"rotate_environment_map\"\npath = \"examples/3d/rotate_environment_map.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"pbr_multi_layer_material_textures\"]\n\n[package.metadata.example.rotate_environment_map]\nname = \"Rotate Environment Map\"\ndescription = \"Demonstrates how to rotate the skybox and the environment map simultaneously\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"mesh_picking\"\npath = \"examples/picking/mesh_picking.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_mesh_picking_backend\"]\n\n[package.metadata.example.mesh_picking]\nname = \"Mesh Picking\"\ndescription = \"Demonstrates picking meshes\"\ncategory = \"Picking\"\nwasm = true\n\n[[example]]\nname = \"simple_picking\"\npath = \"examples/picking/simple_picking.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_picking\"]\n\n[package.metadata.example.simple_picking]\nname = \"Showcases simple picking events and usage\"\ndescription = \"Demonstrates how to use picking events to spawn simple objects\"\ncategory = \"Picking\"\nwasm = true\n\n[[example]]\nname = \"sprite_picking\"\npath = \"examples/picking/sprite_picking.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_sprite_picking_backend\"]\n\n[package.metadata.example.sprite_picking]\nname = \"Sprite Picking\"\ndescription = \"Demonstrates picking sprites and sprite atlases\"\ncategory = \"Picking\"\nwasm = true\nrequired-features = [\"bevy_sprite_picking_backend\"]\n\n[[example]]\nname = \"debug_picking\"\npath = \"examples/picking/debug_picking.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"bevy_dev_tools\"]\n\n[package.metadata.example.debug_picking]\nname = \"Picking Debug Tools\"\ndescription = \"Demonstrates picking debug overlay\"\ncategory = \"Picking\"\nwasm = true\n\n[[example]]\nname = \"animation_masks\"\npath = \"examples/animation/animation_masks.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animation_masks]\nname = \"Animation Masks\"\ndescription = \"Demonstrates animation masks\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"pcss\"\npath = \"examples/3d/pcss.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"experimental_pbr_pcss\"]\n\n[package.metadata.example.pcss]\nname = \"Percentage-closer soft shadows\"\ndescription = \"Demonstrates percentage-closer soft shadows (PCSS)\"\ncategory = \"3D Rendering\"\nwasm = false\n\n[[example]]\nname = \"mixed_lighting\"\npath = \"examples/3d/mixed_lighting.rs\"\ndoc-scrape-examples = true\nrequired-features = [\"jpeg\"]\n\n[package.metadata.example.mixed_lighting]\nname = \"Mixed lighting\"\ndescription = \"Demonstrates how to combine baked and dynamic lighting\"\ncategory = \"3D Rendering\"\nwasm = true\n\n[[example]]\nname = \"animated_ui\"\npath = \"examples/animation/animated_ui.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.animated_ui]\nname = \"Animated UI\"\ndescription = \"Shows how to use animation clips to animate UI properties\"\ncategory = \"Animation\"\nwasm = true\n\n[[example]]\nname = \"shader_material_bindless\"\npath = \"examples/shader/shader_material_bindless.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.shader_material_bindless]\nname = \"Material - Bindless\"\ndescription = \"Demonstrates how to make materials that use bindless textures\"\ncategory = \"Shaders\"\nwasm = true\n\n[profile.wasm-release]\ninherits = \"release\"\nopt-level = \"z\"\nlto = \"fat\"\ncodegen-units = 1\n\n[profile.stress-test]\ninherits = \"release\"\nlto = \"fat\"\npanic = \"abort\"\n\n[package.metadata.docs.rs]\n# This cfg is needed so that #[doc(fake_variadic)] is correctly propagated for\n# impls for re-exported traits. See https://github.com/rust-lang/cargo/issues/8811\n# for details on why this is needed. Since dependencies don't expect to be built\n# with `--cfg docsrs` (and thus fail to compile) we use a different cfg.\nrustc-args = [\"--cfg\", \"docsrs_dep\"]\nrustdoc-args = [\"-Zunstable-options\", \"--generate-link-to-definition\"]\nall-features = true\ncargo-args = [\"-Zunstable-options\", \"-Zrustdoc-scrape-examples\"]\n\n[[example]]\nname = \"monitor_info\"\npath = \"examples/window/monitor_info.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.monitor_info]\nname = \"Monitor info\"\ndescription = \"Displays information about available monitors (displays).\"\ncategory = \"Window\"\nwasm = false\n\n# Testbed\n[[example]]\nname = \"testbed_2d\"\npath = \"examples/testbed/2d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.testbed_2d]\nhidden = true\n\n[[example]]\nname = \"testbed_3d\"\npath = \"examples/testbed/3d.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.testbed_3d]\nhidden = true\n\n[[example]]\nname = \"testbed_ui\"\npath = \"examples/testbed/ui.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.testbed_ui]\nhidden = true\n\n[[example]]\nname = \"testbed_ui_layout_rounding\"\npath = \"examples/testbed/ui_layout_rounding.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.testbed_ui_layout_rounding]\nhidden = true\n\n[[example]]\nname = \"tab_navigation\"\npath = \"examples/ui/tab_navigation.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.tab_navigation]\nname = \"Tab Navigation\"\ndescription = \"Demonstration of Tab Navigation between UI elements\"\ncategory = \"UI (User Interface)\"\nwasm = true\n\n[[example]]\nname = \"directional_navigation\"\npath = \"examples/ui/directional_navigation.rs\"\ndoc-scrape-examples = true\n\n[package.metadata.example.directional_navigation]\nname = \"Directional Navigation\"\ndescription = \"Demonstration of Directional Navigation between UI elements\"\ncategory = \"UI (User Interface)\"\nwasm = true\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.93,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.01,
          "content": "MIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.82,
          "content": "# [![Bevy](assets/branding/bevy_logo_light_dark_and_dimmed.svg)](https://bevyengine.org)\n\n[![License](https://img.shields.io/badge/license-MIT%2FApache-blue.svg)](https://github.com/bevyengine/bevy#license)\n[![Crates.io](https://img.shields.io/crates/v/bevy.svg)](https://crates.io/crates/bevy)\n[![Downloads](https://img.shields.io/crates/d/bevy.svg)](https://crates.io/crates/bevy)\n[![Docs](https://docs.rs/bevy/badge.svg)](https://docs.rs/bevy/latest/bevy/)\n[![CI](https://github.com/bevyengine/bevy/workflows/CI/badge.svg)](https://github.com/bevyengine/bevy/actions)\n[![Discord](https://img.shields.io/discord/691052431525675048.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/bevy)\n\n## What is Bevy?\n\nBevy is a refreshingly simple data-driven game engine built in Rust. It is free and open-source forever!\n\n## WARNING\n\nBevy is still in the early stages of development. Important features are missing. Documentation is sparse. A new version of Bevy containing breaking changes to the API is released [approximately once every 3 months](https://bevyengine.org/news/bevy-0-6/#the-train-release-schedule). We provide [migration guides](https://bevyengine.org/learn/migration-guides/), but we can't guarantee migrations will always be easy. Use only if you are willing to work in this environment.\n\n**MSRV:** Bevy relies heavily on improvements in the Rust language and compiler.\nAs a result, the Minimum Supported Rust Version (MSRV) is generally close to \"the latest stable release\" of Rust.\n\n## Design Goals\n\n* **Capable**: Offer a complete 2D and 3D feature set\n* **Simple**: Easy for newbies to pick up, but infinitely flexible for power users\n* **Data Focused**: Data-oriented architecture using the Entity Component System paradigm\n* **Modular**: Use only what you need. Replace what you don't like\n* **Fast**: App logic should run quickly, and when possible, in parallel\n* **Productive**: Changes should compile quickly ... waiting isn't fun\n\n## About\n\n* **[Features](https://bevyengine.org):** A quick overview of Bevy's features.\n* **[News](https://bevyengine.org/news/)**: A development blog that covers our progress, plans and shiny new features.\n\n## Docs\n\n* **[Quick Start Guide](https://bevyengine.org/learn/quick-start/introduction):** Bevy's official Quick Start Guide. The best place to start learning Bevy.\n* **[Bevy Rust API Docs](https://docs.rs/bevy):** Bevy's Rust API docs, which are automatically generated from the doc comments in this repo.\n* **[Official Examples](https://github.com/bevyengine/bevy/tree/latest/examples):** Bevy's dedicated, runnable examples, which are great for digging into specific concepts.\n* **[Community-Made Learning Resources](https://bevyengine.org/assets/#learning)**: More tutorials, documentation, and examples made by the Bevy community.\n\n## Community\n\nBefore contributing or participating in discussions with the community, you should familiarize yourself with our [**Code of Conduct**](./CODE_OF_CONDUCT.md).\n\n* **[Discord](https://discord.gg/bevy):** Bevy's official discord server.\n* **[Reddit](https://reddit.com/r/bevy):** Bevy's official subreddit.\n* **[GitHub Discussions](https://github.com/bevyengine/bevy/discussions):** The best place for questions about Bevy, answered right here!\n* **[Bevy Assets](https://bevyengine.org/assets/):** A collection of awesome Bevy projects, tools, plugins and learning materials.\n\n### Contributing\n\nIf you'd like to help build Bevy, check out the **[Contributor's Guide](https://bevyengine.org/learn/contribute/introduction)**.\nFor simple problems, feel free to [open an issue](https://github.com/bevyengine/bevy/issues) or\n[PR](https://github.com/bevyengine/bevy/pulls) and tackle it yourself!\n\nFor more complex architecture decisions and experimental mad science, please open an [RFC](https://github.com/bevyengine/rfcs) (Request For Comments) so we can brainstorm together effectively!\n\n## Getting Started\n\nWe recommend checking out the [Quick Start Guide](https://bevyengine.org/learn/quick-start/introduction) for a brief introduction.\n\nFollow the [Setup guide](https://bevyengine.org/learn/quick-start/getting-started/setup) to ensure your development environment is set up correctly.\nOnce set up, you can quickly try out the [examples](https://github.com/bevyengine/bevy/tree/latest/examples) by cloning this repo and running the following commands:\n\n```sh\n# Switch to the correct version (latest release, default is main development branch)\ngit checkout latest\n# Runs the \"breakout\" example\ncargo run --example breakout\n```\n\nTo draw a window with standard functionality enabled, use:\n\n```rust\nuse bevy::prelude::*;\n\nfn main(){\n  App::new()\n    .add_plugins(DefaultPlugins)\n    .run();\n}\n```\n\n### Fast Compiles\n\nBevy can be built just fine using default configuration on stable Rust. However for really fast iterative compiles, you should enable the \"fast compiles\" setup by [following the instructions here](https://bevyengine.org/learn/quick-start/getting-started/setup).\n\n## [Bevy Cargo Features][cargo_features]\n\nThis [list][cargo_features] outlines the different cargo features supported by Bevy. These allow you to customize the Bevy feature set for your use-case.\n\n[cargo_features]: docs/cargo_features.md\n\n## Thanks\n\nBevy is the result of the hard work of many people. A huge thanks to all Bevy contributors, the many open source projects that have come before us, the [Rust gamedev ecosystem](https://arewegameyet.rs/), and the many libraries we build on.\n\nA huge thanks to Bevy's [generous sponsors](https://bevyengine.org). Bevy will always be free and open source, but it isn't free to make. Please consider [sponsoring our work](https://bevyengine.org/donate/) if you like what we're building.\n\n<!-- This next line need to stay exactly as is. It is required for BrowserStack sponsorship. -->\nThis project is tested with BrowserStack.\n\n## License\n\nBevy is free, open source and permissively licensed!\nExcept where noted (below and/or in individual files), all code in this repository is dual-licensed under either:\n\n* MIT License ([LICENSE-MIT](LICENSE-MIT) or [http://opensource.org/licenses/MIT](http://opensource.org/licenses/MIT))\n* Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0))\n\nat your option.\nThis means you can select the license you prefer!\nThis dual-licensing approach is the de-facto standard in the Rust ecosystem and there are [very good reasons](https://github.com/bevyengine/bevy/issues/2373) to include both.\n\nSome of the engine's code carries additional copyright notices and license terms due to their external origins.\nThese are generally BSD-like, but exact details vary by crate:\nIf the README of a crate contains a 'License' header (or similar), the additional copyright notices and license terms applicable to that crate will be listed.\nThe above licensing requirement still applies to contributions to those crates, and sections of those crates will carry those license terms.\nThe [license](https://doc.rust-lang.org/cargo/reference/manifest.html#the-license-and-license-file-fields) field of each crate will also reflect this.\nFor example, [`bevy_mikktspace`](./crates/bevy_mikktspace/README.md#license-agreement) has code under the Zlib license (as well as a copyright notice when choosing the MIT license).\n\nThe [assets](assets) included in this repository (for our [examples](./examples/README.md)) typically fall under different open licenses.\nThese will not be included in your game (unless copied in by you), and they are not distributed in the published bevy crates.\nSee [CREDITS.md](CREDITS.md) for the details of the licenses of those files.\n\n### Your contributions\n\nUnless you explicitly state otherwise,\nany contribution intentionally submitted for inclusion in the work by you,\nas defined in the Apache-2.0 license,\nshall be dual licensed as above,\nwithout any additional terms or conditions.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 2.8,
          "content": "doc-valid-idents = [\n  \"GilRs\",\n  \"glTF\",\n  \"macOS\",\n  \"NVidia\",\n  \"OpenXR\",\n  \"sRGB\",\n  \"VSync\",\n  \"WebGL2\",\n  \"WebGPU\",\n  \"..\",\n]\n\ncheck-private-items = true\n\ndisallowed-methods = [\n  { path = \"f32::powi\", reason = \"use bevy_math::ops::FloatPow::squared, bevy_math::ops::FloatPow::cubed, or bevy_math::ops::powf instead for libm determinism\" },\n  { path = \"f32::log\", reason = \"use bevy_math::ops::ln, bevy_math::ops::log2, or bevy_math::ops::log10 instead for libm determinism\" },\n  { path = \"f32::abs_sub\", reason = \"deprecated and deeply confusing method\" },\n  { path = \"f32::powf\", reason = \"use bevy_math::ops::powf instead for libm determinism\" },\n  { path = \"f32::exp\", reason = \"use bevy_math::ops::exp instead for libm determinism\" },\n  { path = \"f32::exp2\", reason = \"use bevy_math::ops::exp2 instead for libm determinism\" },\n  { path = \"f32::ln\", reason = \"use bevy_math::ops::ln instead for libm determinism\" },\n  { path = \"f32::log2\", reason = \"use bevy_math::ops::log2 instead for libm determinism\" },\n  { path = \"f32::log10\", reason = \"use bevy_math::ops::log10 instead for libm determinism\" },\n  { path = \"f32::cbrt\", reason = \"use bevy_math::ops::cbrt instead for libm determinism\" },\n  { path = \"f32::hypot\", reason = \"use bevy_math::ops::hypot instead for libm determinism\" },\n  { path = \"f32::sin\", reason = \"use bevy_math::ops::sin instead for libm determinism\" },\n  { path = \"f32::cos\", reason = \"use bevy_math::ops::cos instead for libm determinism\" },\n  { path = \"f32::tan\", reason = \"use bevy_math::ops::tan instead for libm determinism\" },\n  { path = \"f32::asin\", reason = \"use bevy_math::ops::asin instead for libm determinism\" },\n  { path = \"f32::acos\", reason = \"use bevy_math::ops::acos instead for libm determinism\" },\n  { path = \"f32::atan\", reason = \"use bevy_math::ops::atan instead for libm determinism\" },\n  { path = \"f32::atan2\", reason = \"use bevy_math::ops::atan2 instead for libm determinism\" },\n  { path = \"f32::sin_cos\", reason = \"use bevy_math::ops::sin_cos instead for libm determinism\" },\n  { path = \"f32::exp_m1\", reason = \"use bevy_math::ops::exp_m1 instead for libm determinism\" },\n  { path = \"f32::ln_1p\", reason = \"use bevy_math::ops::ln_1p instead for libm determinism\" },\n  { path = \"f32::sinh\", reason = \"use bevy_math::ops::sinh instead for libm determinism\" },\n  { path = \"f32::cosh\", reason = \"use bevy_math::ops::cosh instead for libm determinism\" },\n  { path = \"f32::tanh\", reason = \"use bevy_math::ops::tanh instead for libm determinism\" },\n  { path = \"f32::asinh\", reason = \"use bevy_math::ops::asinh instead for libm determinism\" },\n  { path = \"f32::acosh\", reason = \"use bevy_math::ops::acosh instead for libm determinism\" },\n  { path = \"f32::atanh\", reason = \"use bevy_math::ops::atanh instead for libm determinism\" },\n  { path = \"criterion::black_box\", reason = \"use core::hint::black_box instead\" },\n]\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 1.85,
          "content": "[graph]\nall-features = true\n\n[advisories]\nversion = 2\nignore = [\n  # TODO: #16477 - Delete this once notify-types has been bumped.\n  \"RUSTSEC-2024-0384\",\n]\n\n[licenses]\nversion = 2\nallow = [\n  \"0BSD\",\n  \"Apache-2.0\",\n  \"Apache-2.0 WITH LLVM-exception\",\n  \"BSD-2-Clause\",\n  \"BSD-3-Clause\",\n  \"BSL-1.0\",\n  \"CC0-1.0\",\n  \"ISC\",\n  \"MIT\",\n  \"MIT-0\",\n  \"Unlicense\",\n  \"Zlib\",\n]\n\nexceptions = [\n  { name = \"unicode-ident\", allow = [\n    \"Unicode-DFS-2016\",\n    \"Unicode-3.0\",\n  ] },\n  { name = \"symphonia\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-bundle-flac\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-bundle-mp3\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-codec-aac\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-codec-adpcm\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-codec-pcm\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-codec-vorbis\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-core\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-format-isomp4\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-format-riff\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-metadata\", allow = [\n    \"MPL-2.0\",\n  ] },\n  { name = \"symphonia-utils-xiph\", allow = [\n    \"MPL-2.0\",\n  ] },\n]\n\n[bans]\nmultiple-versions = \"warn\"\nwildcards = \"deny\"\n# Certain crates that we don't want multiple versions of in the dependency tree\ndeny = [\n  { name = \"ahash\", deny-multiple-versions = true },\n  { name = \"android-activity\", deny-multiple-versions = true },\n  { name = \"glam\", deny-multiple-versions = true },\n  { name = \"raw-window-handle\", deny-multiple-versions = true },\n]\n\n[sources]\nunknown-registry = \"deny\"\nunknown-git = \"deny\"\nallow-registry = [\"https://github.com/rust-lang/crates.io-index\"]\nallow-git = []\n\n# thiserror is the preferred way to derive error types\n[[bans.features]]\ncrate = \"derive_more\"\ndeny = [\"error\"]\n"
        },
        {
          "name": "docs-template",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "errors",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.41,
          "content": "use_field_init_shorthand = true\nnewline_style = \"Unix\"\n\n# The following lines may be uncommented on nightly Rust.\n# Once these features have stabilized, they should be added to the always-enabled options above.\n# unstable_features = true\n# imports_granularity = \"Crate\"\n# normalize_comments = true\n\n# these options seem poorly implemented and cause churn, so, try to avoid them\n# wrap_comments = true\n# comment_width = 100\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "typos.toml",
          "type": "blob",
          "size": 1.29,
          "content": "[files]\nextend-exclude = [\n  \"*.pbxproj\", # metadata file\n  \"*.patch\",   # Automatically generated files that should not be manually modified.\n  \"*.bin\",     # Binary files\n  \".git/\",     # Version control files\n]\nignore-hidden = false\n\n# Match Inside a Word - Case Insensitive\n[default.extend-words]\nLOD = \"LOD\"                             # Level of detail\nreparametrization = \"reparametrization\" # Mathematical term in curve context (reparameterize)\nreparametrize = \"reparametrize\"\nreparametrized = \"reparametrized\"\n\n# Match a Whole Word - Case Sensitive\n[default.extend-identifiers]\nBa = \"Ba\"         # Bitangent for Anisotropy\nba = \"ba\"         # Part of an accessor in WGSL - weights.ba\nfLenOt = \"fLenOt\"\niFO_a = \"iFO_a\"\niFO_b = \"iFO_b\"\nser = \"ser\"       # ron::ser - Serializer\ntoi = \"toi\"       # Time of impact\nvOt = \"vOt\"\nvOt2 = \"vOt2\"\n\n[default]\nlocale = \"en-us\"\n# Ignored typos regexes\nextend-ignore-re = [\n  \"\\\\bBelen Masia\\\\b\",            # The surname of one of the authors of SMAA\n  \"\\\\bBig Sur\\\\b\",                # macOS Big Sur\n  \"\\\\bgeneric-rpg-ui-inventario\", # Inventory in Portuguese\n  \"\\\\bmetalness\\\\b\",              # Rendering term (metallicity)\n  \"\\\\bNDKs\\\\b\",                   # NDK - Native  Development Kit\n  \"\\\\bPNGs\\\\b\",                   # PNG - Portable Network Graphics file format\n]\n"
        }
      ]
    }
  ]
}