{
  "metadata": {
    "timestamp": 1736557337472,
    "page": 285,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cypress-io/cypress",
      "stars": 47646,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 3.15,
          "content": "const fs = require('fs')\nconst path = require('path')\nconst { specifiedRules } = require('graphql')\n\nconst graphqlOpts = {\n  env: 'literal',\n  tagName: 'gql',\n  // eslint-disable-next-line no-restricted-syntax\n  schemaString: fs.readFileSync(\n    path.join(__dirname, 'packages/graphql/schemas/schema.graphql'),\n    'utf8',\n  ),\n}\n\nconst validators = specifiedRules\n.map((rule) => rule.name)\n.filter(\n  (ruleName) => {\n    return [\n      'NoUnusedFragmentsRule',\n      'KnownFragmentNamesRule',\n      'NoUnusedVariablesRule',\n    ].findIndex((x) => x === ruleName) === -1\n  },\n)\n\nmodule.exports = {\n  root: true,\n  plugins: [\n    '@cypress/dev',\n    'graphql',\n  ],\n  extends: [\n    'plugin:@cypress/dev/general',\n    'plugin:@cypress/dev/tests',\n  ],\n  parser: '@typescript-eslint/parser',\n  ignorePatterns: [\n    // cli types are checked by dtslint\n    'cli/types/**',\n    // these fixtures are supposed to fail linting\n    'npm/eslint-plugin-dev/test/fixtures/**',\n    // Cloud generated\n    'system-tests/lib/validations/**',\n  ],\n  overrides: [\n    {\n      files: [\n        // ignore in tests and scripts\n        '**/scripts/**',\n        '**/test/**',\n        '**/system-tests/**',\n        'tooling/**',\n        'packages/{app,driver,frontend-shared,launchpad}/cypress/**',\n        '*.test.ts',\n      ],\n      rules: {\n        'no-restricted-properties': 'off',\n        'no-restricted-syntax': 'off',\n      },\n    },\n    {\n      files: ['*.json'],\n      extends: 'plugin:@cypress/dev/general',\n    },\n  ],\n  rules: {\n    'no-duplicate-imports': 'off',\n    'import/no-duplicates': 'error',\n    'prefer-spread': 'off',\n    'prefer-rest-params': 'off',\n    'no-useless-constructor': 'off',\n    'no-restricted-properties': [\n      'error',\n      {\n        object: 'process',\n        property: 'geteuid',\n        message: 'process.geteuid() will throw on Windows. Do not use it unless you catch any potential errors.',\n      },\n      {\n        object: 'os',\n        property: 'userInfo',\n        message: 'os.userInfo() will throw when there is not an `/etc/passwd` entry for the current user (like when running with --user 12345 in Docker). Do not use it unless you catch any potential errors.',\n      },\n    ],\n    'no-restricted-syntax': [\n      // esquery tool: https://estools.github.io/esquery/\n      'error',\n      {\n        // match sync FS methods except for `existsSync`\n        // examples: fse.readFileSync, fs.readFileSync, this.ctx.fs.readFileSync...\n        selector: `MemberExpression[object.name='fs'][property.name=/^[A-z]+Sync$/]:not(MemberExpression[property.name='existsSync']), MemberExpression[property.name=/^[A-z]+Sync$/]:not(MemberExpression[property.name='existsSync']):has(MemberExpression[property.name='fs'])`,\n        message: 'Synchronous fs calls should not be used in Cypress. Use an async API instead.',\n      },\n    ],\n    'graphql/capitalized-type-name': ['warn', graphqlOpts],\n    'graphql/no-deprecated-fields': ['error', graphqlOpts],\n    'graphql/template-strings': ['error', { ...graphqlOpts, validators }],\n    'graphql/required-fields': [\n      'error',\n      { ...graphqlOpts, requiredFields: ['id'] },\n    ],\n  },\n  settings: {\n    react: {\n      version: '16.8',\n    },\n  },\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.17,
          "content": "* text=auto\n\n*.json text eol=lf\n\n**/.eslintrc text eol=lf\n\npackages/errors/__snapshot-html__/** linguist-generated=true\nsystem-tests/lib/validations/** linguist-generated=true"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 7.43,
          "content": "\n### Cypress Custom .gitignore ###\n*.log.*\ndist-*\nbuild\n.history\n.publish\n_test-output\ncypress.zip\n.babel-cache\n\n# from config, compiled .js files\npackages/config/src/*.js\n\n# from extension\nCached Theme.pak\nCached Theme Material Design.pak\n\n# from data-context, compiled .js files\npackages/data-context/src/**/*.js\npackages/errors/src/**/*.js\npackages/errors/test/**/*.js\n\n# from driver\npackages/driver/cypress/videos\npackages/driver/cypress/screenshots\n\n# from launcher, compiled .js files\npackages/launcher/index.js\npackages/launcher/lib/**/*.js\n\n# from network, compiled .js files\npackages/network/lib/**/*.js\n\n# from net-stubbing, compiled .js files\npackages/net-stubbing/lib/**/*.js\n\n# from runner\npackages/runner/cypress/videos\npackages/runner/cypress/screenshots\n\n# from proxy, compiled .js files\npackages/proxy/lib/**/*.js\n\n# npm packages\nnpm/**/cypress/screenshots\n\n# from example\npackages/example/app\npackages/example/build\npackages/example/cypress/integration\n\n# from frontend-shared\npackages/frontend-shared/cypress/e2e/.projects\npackages/frontend-shared/src/public/shiki/themes/cypress.theme.json\n\n# from server\npackages/server/.cy\npackages/server/.projects\npackages/server/support\npackages/server/test/support/fixtures/server/imgs\npackages/server/test/support/fixtures/server/libs\n\n# from socket, dist built files\npackages/socket/lib/*.js\n\n# from system-tests\nsystem-tests/.projects\nsystem-tests/.http-mitm-proxy\nsystem-tests/fixtures/large-img\nsystem-tests/lib/fixtureDirs.ts\n\n# from npm/react\n/npm/react/bin/*\n/npm/react/cypress/videos\n/npm/react/.babel-cache\n\n# from npm/webpack-dev-server\n/npm/webpack-dev-server/cypress/videos\n\n# from npm/grep\n/npm/grep/cypress/videos\n\n# from errors\n/packages/errors/__snapshot-images__\n/packages/errors/__snapshot-md__\n/packages/errors/__snapshot-html-local__\n\n# graphql, auto-generated\n/packages/launchpad/src/generated\n/packages/app/src/generated\n/packages/frontend-shared/src/generated\n/packages/frontend-shared/cypress/e2e/support/e2eProjectDirs.ts\n\n# from old npm/create-cypress-tests\n/npm/create-cypress-tests/initial-template\n/npm/create-cypress-tests/src/test-output\n\n# Building app binary\nscripts/support\nbinary-url.json\n\n# Allows us to dynamically create eslint rules that override the default for Decaffeinate scripts\ncli/visual-snapshots\n\n# Created by https://www.gitignore.io/api/osx,git,node,windows,intellij,linux\n# Edit at https://www.gitignore.io/?templates=osx,git,node,windows,intellij,linux\n\n### Git ###\n# Created by git for backups. To disable backups in Git:\n# $ git config --global mergetool.keepBackup false\n*.orig\n\n### Intellij ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# Fleet\n.fleet/\n\n# User-specific stuff\n.idea\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### Intellij Patch ###\n# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721\n\n# *.iml\n# modules.xml\n# .idea/misc.xml\n# *.ipr\n\n# Sonarlint plugin\n.idea/**/sonarlint/\n\n# SonarQube Plugin\n.idea/**/sonarIssues.xml\n\n# Markdown Navigator plugin\n.idea/**/markdown-navigator.xml\n.idea/**/markdown-navigator/\n\n### Linux ###\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n# .nfs files are created when an open file is removed but is still being accessed\n.nfs*\n\n### Node ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn files that shouldn't be checked in\n.yarnrc\n.yarn/\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n\n# next.js build output\n.next\n\n# rollup.js default build output\ndist/\n\n# Uncomment the public line if your project uses Gatsby\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# Storybook build outputs\n.out\n.storybook-out\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# Temporary folders\ntmp/\ntemp/\n\n### OSX ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n#Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### Windows ###\n# Windows thumbnail cache files\nThumbs.db\nThumbs.db:encryptable\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# End of https://www.gitignore.io/api/osx,git,node,windows,intellij,linux\n\n# Circle cache artifacts\nglobbed_node_modules\n\n# Autogenerated files, typically from graphql-code-generator\n*.gen.ts\n*.gen.json\n\n# Snapshot Binaries\nsnapshot_blob.bin\nv8_context_snapshot.x86_64.bin\n\n# Legacy snapshot cache files\ntooling/v8-snapshot/cache/dev-darwin\ntooling/v8-snapshot/cache/dev-linux\ntooling/v8-snapshot/cache/dev-win32\ntooling/v8-snapshot/cache/prod-darwin\ntooling/v8-snapshot/cache/prod-linux\ntooling/v8-snapshot/cache/prod-win32\n\n# Cloud API validations\nsystem-tests/lib/validations\n\n.nx/cache\n.nx/workspace-data"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".node-version",
          "type": "blob",
          "size": 0.01,
          "content": "20.18.1\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.06,
          "content": "loglevel=warn\nprogress=false\npackage-lock=false\nsave-exact=true\n"
        },
        {
          "name": ".percy.yml",
          "type": "blob",
          "size": 0.1,
          "content": "version: 2\nsnapshot:\n  widths:\n    - 1280\n  min-height: 1024\ndiscovery:\n  network-idle-timeout: 750\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.04,
          "content": "**/*\n\n/.nx/cache\n/.nx/workspace-data"
        },
        {
          "name": ".releaserc.js",
          "type": "blob",
          "size": 0.72,
          "content": "const { parserOpts, releaseRules } = require('./scripts/semantic-commits/change-categories')\n\nmodule.exports = {\n  plugins: [\n    ['@semantic-release/commit-analyzer', {\n      preset: 'angular',\n      parserOpts,\n      releaseRules,\n    }],\n    ['@semantic-release/release-notes-generator',\n      {\n        preset: 'angular',\n        parserOpts,\n      }\n    ],\n    ['@semantic-release/changelog', {\n      changelogFile: 'CHANGELOG.md',\n    }],\n    ['@semantic-release/git', {\n      assets: [\n        './CHANGELOG.md',\n      ],\n      message: 'chore: release ${nextRelease.gitTag}\\n\\n[skip ci]',\n    }],\n    '@semantic-release/npm',\n  ],\n  extends: 'semantic-release-monorepo',\n  branches: [\n    { name: 'develop', channel: 'latest' },\n  ],\n}\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": ".yarnclean",
          "type": "blob",
          "size": 0.72,
          "content": "# test directories\n__tests__\ntest\ntests\npowered-test\n\n# yaml package has a `doc` folder that we need\n!yaml/**/doc/*\nwebsite\nimages\nassets\n!mochawesome-report-generator/dist/assets\n\n# Do NOT clean out app assets from cypress-example-kitchensink to avoid broken deployments\n# Needed for https://example.cypress.io/\n!cypress-example-kitchensink/app/assets\n\n# examples\nexample\n!@packages/example\nexamples\n\n# code coverage directories\ncoverage\n.nyc_output\n\n# build scripts\nMakefile\nGulpfile.js\nGruntfile.js\n\n# configs\nappveyor.yml\ncircle.yml\ncodeship-services.yml\ncodeship-steps.yml\nwercker.yml\n.tern-project\n.gitattributes\n.editorconfig\n.*ignore\n.eslintrc\n.jshintrc\n.flowconfig\n.documentup.json\n.yarn-metadata.json\n.travis.yml\n\n# misc\n*.md\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.18,
          "content": "# Changelogs\n\n- [Cypress App](https://on.cypress.io/changelog)\n- [`@cypress/angular`](https://github.com/cypress-io/cypress/blob/develop/npm/angular/CHANGELOG.md)\n- [`@cypress/eslint-plugin-dev`](https://github.com/cypress-io/cypress/blob/develop/npm/eslint-plugin-dev/CHANGELOG.md)\n- [`@cypress/mount-utils`](https://github.com/cypress-io/cypress/blob/develop/npm/mount-utils/CHANGELOG.md)\n- [`@cypress/react`](https://github.com/cypress-io/cypress/blob/develop/npm/react/CHANGELOG.md)\n- [`@cypress/svelte`](https://github.com/cypress-io/cypress/blob/develop/npm/svelte/CHANGELOG.md)\n- [`@cypress/vite-dev-server`](https://github.com/cypress-io/cypress/blob/develop/npm/vite-dev-server/CHANGELOG.md)\n- [`@cypress/vue`](https://github.com/cypress-io/cypress/blob/develop/npm/vue/CHANGELOG.md)\n- [`@cypress/webpack-batteries-included-preprocessor`](https://github.com/cypress-io/cypress/blob/develop/npm/webpack-batteries-included-preprocessor/CHANGELOG.md)\n- [`@cypress/webpack-dev-server`](https://github.com/cypress-io/cypress/blob/develop/npm/webpack-dev-server/CHANGELOG.md)\n- [`@cypress/webpack-preprocessor`](https://github.com/cypress-io/cypress/blob/develop/npm/webpack-preprocessor/CHANGELOG.md)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.13,
          "content": "# Contributor Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct that could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned with this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [hello@cypress.io](mailto:hello@cypress.io). All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 48.51,
          "content": "# Contributing to Cypress\n\nThanks for taking the time to contribute! :smile:\n\n**Once you learn how to use Cypress, you can contribute in many ways:**\n\n- Join the [Cypress Discord](https://on.cypress.io/chat) and answer questions. Teaching others how to use Cypress is a great way to learn more about how it works.\n- Blog about Cypress. We display blogs featuring Cypress on our [Examples](https://on.cypress.io/examples) page. If you'd like your blog featured, [open a PR to add it to our docs](https://github.com/cypress-io/cypress-documentation/blob/master/CONTRIBUTING.md#adding-examples).\n- Write some documentation or improve our existing docs. See our [guide to contributing to our docs](https://github.com/cypress-io/cypress-documentation/blob/master/CONTRIBUTING.md).\n- Give a talk about Cypress. [Contact us](mailto:support@cypress.io) ahead of time and we'll send you some swag. :shirt:\n\n**Want to dive deeper into how Cypress works? There are several ways you can help with the development of Cypress:**\n\n- [Report bugs](https://github.com/cypress-io/cypress/issues/new) by opening an issue.\n- [Request features](https://github.com/cypress-io/cypress/issues/new) by opening an issue.\n- Write code to address an issue. We have some issues labeled as [`good first issue`](https://github.com/cypress-io/cypress/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) that are a good place to start. Please thoroughly read our [Writing Code guide](#writing-code).\n\n## Table of Contents\n\n- [Code of Conduct](#code-of-conduct)\n- [Opening Issues](#opening-issues)\n- [Writing Documentation](#writing-documentation)\n- [Writing Code](#writing-code)\n  - [What you need to know before getting started](#what-you-need-to-know-before-getting-started)\n  - [Requirements](#requirements)\n  - [Getting Started](#getting-started)\n  - [Coding Style](#coding-style)\n  - [Adding links within code](#adding-links-within-code)\n  - [Tests](#tests)\n  - [Packages](#packages)\n- [Committing Code](#committing-code)\n  - [Branches](#branches)\n  - [Pull Requests](#pull-requests)\n  - [Dependencies](#dependencies)\n- [Reviewing Code](#reviewing-code)\n  - [Some rules about Code Review](#some-rules-about-code-review)\n  - [Steps to take during Code Review](#steps-to-take-during-code-review)\n  - [Code Review Checklist](#code-review-checklist)\n  - [Code Review of Dependency Updates](#code-review-of-dependency-updates)\n- [Releases](#releases)\n\n## Code of Conduct\n\nAll contributors are expected to abide by our [Code of Conduct](./CODE_OF_CONDUCT.md).\n\n## Opening Issues\n\n**The most important things to do are:**\n\n- Search existing [issues](https://github.com/cypress-io/cypress/issues) for your problem.\n- Understand our [roadmap](https://on.cypress.io/roadmap).\n- [Update Cypress](#update-cypress).\n- [Gather debugging information](#getting-more-information).\n- [Fill out the provided issue template](#fill-out-our-issue-template).\n- [Describe your problem, not your solution](#describe-problems)\n- [Explain how to reproduce the issue](#reproducibility).\n\nFinally, if you are up to date, supported, have collected information about the problem, and have the best reproduction instructions you can give, you are ready to [open an issue](https://github.com/cypress-io/cypress/issues/new/choose).\n\n### Update Cypress\n\nBefore filing a bug, make sure you are up to date. Your issue may have already been fixed. Even if you do not see the issue described as resolved in a newer version, a newer version may help in the process of debugging your issue by giving more helpful error messages.\n\n[See our document on installing cypress](https://on.cypress.io/installing-cypress)\n\n### Getting more information\n\nFor some issues, there are places you can check for more information. This may help you resolve the issue yourself. Even if it doesn't, this information can help us figure out and resolve an issue.\n\n- For issues in the web browser, check the JavaScript console and your Network tab in your DevTools.\n- Click on any command in the Command Log where the failure occurred, this will log more information about the error to the JavaScript console.\n- Use Cypress [`debug`](https://on.cypress.io/debug) or [`pause`](https://on.cypress.io/pause) commands to step through your commands.\n- Ask other Cypress users for help in our [chat](https://on.cypress.io/chat) or [Discord](https://on.cypress.io/discord).\n- Try more advanced troubleshooting from [troubleshooting Cypress](https://on.cypress.io/debugging#Troubleshooting-Cypress) doc.\n\n### Fill out our Issue Template\n\nWhen opening an issue, there is a provided issue template. Fill out the information according to the template. This is information needed for Cypress to continue forward with your problem. Any issues that don't fill out the issue template will be closed.\n\n### Describe Problems\n\nWhen you file a feature request or bug, it's best to **describe the problem you are facing first**, not just your desired solution.\n\nOften, your problem may have a lot in common with other similar problems. If we understand your use case, we can compare it to other use cases and sometimes find a more powerful or more general solution which solves several problems at once. Understanding the root issue can let us merge and contextualize things. Sometimes there's already a way to solve your problem that might just not be obvious.\n\nAlso, your proposed solution may not be compatible with the direction we want to take the product, but we may be able to come up with another solution which has approximately the same effect and does fit into the product direction.\n\n### Reproducibility\n\n**It is nearly impossible for us to resolve issues if we can not reproduce them. Your best chance of getting a bug looked at quickly is to provide a repository with a reproducible bug that can be cloned and run.**\n\n## Common issues\n\nLabel | Description | Issues\n--- | --- | ---\nbrowser detection | Local browser is not detected | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20browser%20detection), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+browser+detection%22+is%3Aclosed)\ncross-origin | Getting cross-origin error | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20cross-origin%20%E2%A4%AD), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+cross-origin+%E2%A4%AD%22+is%3Aclosed)\ncy.request | Issues related to cy.request command | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20cy.request), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+cy.request%22+is%3Aclosed)\nfixtures | Fixture loading and usage | | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20fixtures), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+fixtures%22+is%3Aclosed)\nhooks | Issues related to hooks | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20hooks%20%E2%86%AA), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+hooks+%E2%86%AA%22+is%3Aclosed)\niframes | Working with iframes | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20iframes), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+iframes%22+is%3Aclosed)\ninstallation | Cypress cannot be downloaded or installed |  [open](https://github.com/cypress-io/cypress/labels/topic%3A%20installation), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+installation%22+is%3Aclosed)\nnetwork | Controlling network requests |  [open](https://github.com/cypress-io/cypress/labels/topic%3A%20network), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+network%22+is%3Aclosed)\nperformance | Slow loading, slow network, etc | [open](https://github.com/cypress-io/cypress/labels/type%3A%20performance%20%F0%9F%8F%83%E2%80%8D%E2%99%80%EF%B8%8F), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22type%3A+performance+%F0%9F%8F%83%E2%80%8D%E2%99%80%EF%B8%8F%22+is%3Aclosed)\nscreenshots | Taking image screenshots | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20screenshots%20%F0%9F%93%B8), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+screenshots+%F0%9F%93%B8%22+is%3Aclosed)\nscrolling | Scrolling elements into view |  [open](https://github.com/cypress-io/cypress/labels/topic%3A%20scrolling%20%E2%86%95%EF%B8%8F), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+scrolling+%E2%86%95%EF%B8%8F%22+is%3Aclosed)\nspec execution | Running all specs or some specs in some specific order |  [open](https://github.com/cypress-io/cypress/labels/topic%3A%20spec%20execution) | [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+spec+execution%22+is%3Aclosed)\ntest execution | Running tests inside a single spec | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20test%20execution), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+test+execution%22+is%3Aclosed)\ntypescript | Transpiling or bundling TypeScript | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20typescript), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+typescript%22+is%3Aclosed)\nvideo | Problems with video recordings | [open](https://github.com/cypress-io/cypress/labels/topic%3A%20video%20%F0%9F%93%B9), [closed](https://github.com/cypress-io/cypress/issues?q=label%3A%22topic%3A+video+%F0%9F%93%B9%22+is%3Aclosed)\n\n\n## Writing Documentation\n\nCypress documentation lives in a separate repository with its own dependencies and build tools.\nSee [Documentation Contributing Guidelines](https://github.com/cypress-io/cypress-documentation/blob/master/CONTRIBUTING.md).\n\n## Writing code\n\nWorking on your first Pull Request? You can learn how from this free series [How to Contribute to an Open Source Project on GitHub](https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github)\n\n### What you need to know before getting started\n\n#### Cypress and Packages\n\nCypress is a large open source project. When you want to contribute to Cypress, you may be unsure which part of the project to work within.\n\nCypress uses a monorepo, which means there are many independent packages in this repository. There are two main types of packages: private and public.\n\nPrivate packages included in the app generally live within the [`packages`](./packages) directory and are in the `@packages/` namespace. These packages are combined to form the main Cypress app that you get when you `npm install cypress`. They are discrete modules with different responsibilities, but each is necessary for the Cypress app and is not necessarily useful outside of the Cypress app. Since these modules are all compiled and bundled into a binary upon release, they are sometimes collectively referred to as the Cypress binary.\n\nHere is a list of the core packages in this repository with a short description, located within the [`packages`](./packages) directory:\n\n | Folder Name                           | Package Name            | Purpose                                                                      |\n | :------------------------------------ | :---------------------- | :--------------------------------------------------------------------------- |\n | [cli](./cli)                          | `cypress`               | The command-line tool that is packaged as an `npm` module.                   |\n | [app](./packages/app)           | `@packages/app`      | The front-end for the Cypress App that renders in the launched browser instance.             |\n | [config](./packages/config)           | `@packages/config`      | The Cypress configuration types and validation used in the server, data-context and driver.             |\n | [data-context](./packages/data-context)           | `@packages/data-context`      | Centralized data access for the Cypress application.             |\n | [driver](./packages/driver)           | `@packages/driver`      | The code that is used to drive the behavior of the API commands.             |\n | [electron](./packages/electron)       | `@packages/electron`    | The Cypress implementation of Electron.                                      |\n | [errors](./packages/errors)           | `@packages/errors`      | Error definitions and utilities for Cypress                                  |\n | [example](./packages/example)         | `@packages/example`     | Our example kitchen-sink application.                                        |\n | [extension](./packages/extension)     | `@packages/extension`   | The Cypress Chrome browser extension                                         |\n | [frontend-shared](./packages/frontend-shared)     | `@packages/frontend-shared`   | Shared components and styles used in the `app` and `launchpad`.                                         |\n | [graphql](./packages/graphql)     | `@packages/graphql`   | The GraphQL layer that the `launchpad` and `app` use to interact with the `server`.                                  |\n | [https-proxy](./packages/https-proxy) | `@packages/https-proxy` | This does https proxy for handling http certs and traffic.                   |\n | [icons](./packages/icons)       | `@packages/icons`    | The Cypress icons.                        |\n | [launcher](./packages/launcher)       | `@packages/launcher`    | Finds and launches browsers installed on your system.                        |\n | [launchpad](./packages/launchpad)       | `@packages/launcher`    | The portal to running Cypress that displays in `open` mode.                        |\n | [net-stubbing](./packages/net-stubbing) | `@packages/net-stubbing` | Contains server side code for Cypress' network stubbing features.         |\n | [network](./packages/network)         | `@packages/network`     | Various utilities related to networking.                                     |\n | [packherd-require](./packages/packherd-require) | `@packages/packherd-require` | Loads modules that have been bundled by `@tooling/packherd`.  |\n | [proxy](./packages/proxy)             | `@packages/proxy`       | Code for Cypress' network proxy layer.                                       |\n | [reporter](./packages/reporter)       | `@packages/reporter`    | The reporter shows the running results of the tests (The Command Log UI).    |\n | [resolve-dist](./packages/resolve-dist)       | `@packages/resolve-dist`    | Centralizes the resolution of paths to compiled/static assets from server-side code..    |\n | [rewriter](./packages/rewriter)       | `@packages/rewriter`    | The logic to rewrite JS and HTML that flows through the Cypress proxy.\n | [root](./packages/root)               | `@packages/root`        | Dummy package pointing at the root of the repository.                        |\n | [runner](./packages/runner)           | `@packages/runner`      | (deprecated) The runner is the minimal \"chrome\" around the user's application under test. |\n | [scaffold-config](./packages/scaffold-config)           | `@packages/scaffold-config`      | The logic related to scaffolding new projects using launchpad.   |\n | [server](./packages/server)           | `@packages/server`      | The <3 of Cypress. This orchestrates everything. The backend node process.   |\n | [socket](./packages/socket)           | `@packages/socket`      | A wrapper around socket.io to provide common libraries.                      |\n | [ts](./packages/ts)                   | `@packages/ts`          | A centralized version of typescript.                                         |\n | [types](./packages/types)             | `@packages/types`          | The shared internal Cypress types.                                         |\n | [v8-snapshot-require](./packages/v8-snapshot-require) | `@packages/v8-snapshot-require` | Tool to load a snapshot for Electron applications that was created by `@tooling/v8-snapshot`. |\n | [web-config](./packages/web-config)             | `@packages/web-config`          | The web-related configuration.                                         |\n\nPrivate packages involved in development of the app live within the [`tooling`](./tooling) directory and are in the `@tooling/` namespace. They are discrete modules with different responsibilities, but each is necessary for development of the Cypress app and is not necessarily useful outside of the Cypress app.\n\nHere is a list of the packages in this repository with a short description, located within the [`tooling`](./tooling) directory:\n\n | Folder Name                           | Package Name            | Purpose                                                                      |\n | :------------------------------------ | :---------------------- | :--------------------------------------------------------------------------- |\n | [electron-mksnapshot](./tooling/electron-mksnapshot) | `electron-mksnapshot` | A rewrite of [electron/mksnapshot](https://github.com/electron/mksnapshot) to support multiple versions. |\n | [packherd](./tooling/packherd)        | `packherd`              | Herds all dependencies reachable from an entry and packs them.               |\n | [v8-snapshot](./tooling/v8-snapshot)  | `v8-snapshot`           | Tool to create a snapshot for Electron applications.                         |\n\nPublic packages live within the [`npm`](./npm) folder and are standalone modules that get independently published to npm under the `@cypress/` namespace. These packages generally contain extensions, plugins, or other packages that are complementary to, yet independent of, the main Cypress app.\n\nHere is a list of the npm packages in this repository:\n\n | Folder Name                                            | Package Name                       | Purpose                                                                      |\n | :----------------------------------------------------- | :--------------------------------- | :--------------------------------------------------------------------------- |\n | [angular](./npm/angular)                               | `@cypress/angular`                   | Cypress component testing for Angular.     |\n | [eslint-plugin-dev](./npm/eslint-plugin-dev)           | `@cypress/eslint-plugin-dev`       | Eslint plugin for internal development.          |\n | [grep](./npm/grep)                                       | `@cypress/grep`                     | Filter tests using substring                        |\n | [mount-utils](./npm/mount-utils)                       | `@cypress/mount-utils`             | Common functionality for Vue/React/Angular adapters. |\n | [react](./npm/react)                                   | `@cypress/react`                   | Cypress component testing for React.             |\n | [schematic](./npm/cypress-schematic)                   | `@cypress/schematic`            | Official Angular Schematic and Builder for the Angular CLI.|\n | [svelte](./npm/svelte)                               | `@cypress/svelte`                   | Cypress component testing for Svelte.           |\n | [vite-dev-server](./npm/vite-dev-server)     | `@cypress/vite-dev-server`    | Vite powered dev server for Component Testing.                  |\n | [vue](./npm/vue)                                       | `@cypress/vue`                     | Cypress component testing for Vue 3.               |\n | [webpack-batteries-included-preprocessor](./npm/webpack-batteries-included-preprocessor)     | `@cypress/webpack-batteries-included-preprocessor`    | Cypress preprocessor for bundling JavaScript via webpack with dependencies included and support for various ES features, TypeScript, and CoffeeScript.  |\n | [webpack-dev-server](./npm/webpack-dev-server)     | `@cypress/webpack-dev-server`    | Webpack powered dev server for Component Testing.                |\n | [webpack-preprocessor](./npm/webpack-preprocessor)     | `@cypress/webpack-preprocessor`    | Cypress preprocessor for bundling JavaScript via webpack.  |\n\nWe try to tag all issues with a `pkg/` or `npm/` tag describing the appropriate package the work is required in. For public packages, we use their qualified package name: For example, issues relating to the  webpack preprocessor are tagged under [`npm: @cypress/webpack-preprocessor`](https://github.com/cypress-io/cypress/labels/npm%3A%20%40cypress%2Fwebpack-preprocessor) label and issues related to the `driver` package are tagged with the [`pkg/driver`](https://github.com/cypress-io/cypress/labels/pkg%2Fdriver) label.\n\n### Requirements\n\nYou must have the following installed on your system to contribute locally:\n\n- [`Node.js`](https://nodejs.org/en/) (See the root [.node-version](.node-version) file for the required version. You can find a list of tools on [node-version-usage](https://github.com/shadowspawn/node-version-usage) to switch the version of [`Node.js`](https://nodejs.org/en/) based on [.node-version](.node-version).)\n- [`yarn`](https://yarnpkg.com/en/docs/install)\n- [`python`](https://www.python.org/downloads/) (since we use `node-gyp`. See their [repo](https://github.com/nodejs/node-gyp) for Python version requirements.)\n\n#### Debian/Ubuntu\n\n`sudo apt install g++ make` meets the additional requirements to run `node-gyp` in the context of building Cypress from source.\n`python` is pre-installed on Debian-based systems including Ubuntu.\nThe Python versions shipped with Ubuntu versions `20.04`, `22.04` and `24.*` are compatible with Cypress requirements.\n\nFor Ubuntu `24.04` and above, refer also to the [Ubuntu 24.04 Release notes](https://discourse.ubuntu.com/t/noble-numbat-release-notes/39890) in the section \"Unprivileged user namespace restrictions\" and apply one of the workarounds to disable unprivileged user namespace restrictions for the entire system, either for one boot or persistently, as described. If you do not do this you may receive an error which includes the text `FATAL:setuid_sandbox_host.cc` when you try to run Cypress on these versions of Ubuntu after building Cypress from source.\n\n#### Windows\n\nCurrently no additional instructions for installation requirements.\n\n### Getting Started\n\nThe project utilizes [yarn workspaces](https://yarnpkg.com/lang/en/docs/workspaces/) and leverages [lerna](https://lerna.js.org/) to orchestrate running within the context of one or more packages. While it is not as important to understand lerna or yarn workspaces, it **is important** to note that running scripts or installing new dependencies should always happen from the repo's root directory.\n\n> **⚠ Running on Windows?**\n>\n> If you are running a Windows operating system, you may encounter some commands that are not working. In order to resolve paths correctly during the development build process, you may need to explicitly set your default `yarn` shell script to Command Prompt by using the following command:\n>```bash\n> yarn config set script-shell \"C:\\\\Windows\\\\system32\\\\cmd.exe\"\n>```\n\n**Install all dependencies:**\n\n```bash\nyarn\n```\n\nThis will install all the dependencies for the repo and perform a preliminary build.\n\n**Next, start the app:**\n\n```bash\nyarn start\n```\n\nIf there are errors building the packages, prefix the commands with `DEBUG=cypress:*` to see more details. This outputs a lot of debugging lines. To focus on an individual module, run with `DEBUG=cypress:launcher:*` for instance. See [\"Debug logs\"](./guides/debug-logs.md) for more info.\n\nWhen running `yarn start` this routes through the CLI and eventually calls `yarn dev` with the proper arguments. This enables Cypress day-to-day development to match the logic of the built binary + CLI integration.\n\nCLI flags can be passed to `yarn` targets to control application behavior when running locally. For example, to headlessly run a project in a given folder, while trying to record to Cypress Cloud:\n\n```text\nyarn cypress:run --project /project/folder --record --key <key>\n```\n\nAlternatively, you can run `yarn dev` at the root of this repository to bypass the CLI. This will launch \"global\" mode, where you can then select a project.\n\n#### Adding new Dependencies\n\n⚠️ There is a [bug in yarn](https://github.com/yarnpkg/yarn/issues/7734) that may cause issues adding a new dependency to a workspace. You can avoid this by downgrading yarn to 1.19.1 (temporarily downgrade using `npx yarn@1.19.1 workspace @packages/server add my-new-dep1`).\n\n```shell\n# add a new dep to the root of the repo\n$ yarn add -W my-new-dep1\n\n# add a new dep to a specific package\n$ yarn workspace @packages/server add my-new-dep1\n$ yarn workspace @packages/server add --dev my-new-dep1\n```\n\nAlternatively, you can directly add the dependency to the corresponding `package.json` and run `yarn`.\n\n#### Tasks\n\n> Scripts are intended to be **run** from the **root of the repo**. **Do not install dependencies or run scripts from within a sub-directory.**\n\n##### Common Top Level Tasks\n\nBy default, top level tasks will execute for all packages. However, most scripts can be provided one or more scopes. Providing a scope will execute tasks within the provided packages. Scope values are based on **package names** and not the directory structure.\n\n| Task               | Purpose                                                          |\n| :----------------- | :--------------------------------------------------------------- |\n| `build`            | Compile non-node code (typescript)                               |\n| `start`            | Open Cypress in dev and global mode                              |\n| `watch`            | Auto-rebuild on file changes                                     |\n| `clean`            | Remove build artifacts                                           |\n| `clean-deps`       | Remove all installed dependencies (in root and in every package) |\n| `test`             | Run the default set of tests (may be package dependent)          |\n| `test-debug`       | Run unit/integration tests with inspect node CLI flags           |\n| `test-unit`        | Run unit tests                                                   |\n| `test-integration` | Run integration tests                                            |\n| `test-e2e`         | Run end-to-end tests                                             |\n| `test-system`      | Run system tests                                                 |\n| `test-watch`       | Run unit tests and rebuild/rerun on file changes                 |\n\n> Most of the time you will only want to run a task within a specific package; this can be done by providing the package name as a scope to the top level task.\n\n```shell\n# Run test-unit only within cypress package (./cli)\n$ yarn test-unit --scope cypress\n\n# Run test-unit only within the cypress and server packages (./cli & ./packages/server)\n$ yarn test-unit --scope cypress --scope @packages/server\n\n# Run test-unit in all packages with the name starting with `@packages/`\n$ yarn test-unit --scope @packages/*\n```\n\n##### Package-Level Scripts\n\n> Although scripts are meant to be run from the root of the repo; they typically delegate to the scripts within the packages.\n\nEach package is responsible for building itself and testing itself and can do so using whatever tools are appropriate, but each conforms to a standard set of scripts so that building, watching, testing, etc. can be orchestrated from the root of this repo. Here are the scripts supported and what they mean:\n\n| Task               | Purpose                                                                                                                                                  |\n| :----------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `build`            | Build the package                                                                                                                                        |\n| `build-prod`       | Build all assets for production (if makes sense)                                                                                                         |\n| `start`            | Run a server for serving files                                                                                                                           |\n| `watch`            | Watch source files and build development assets when they are saved. This may also run a server for serving files and run tests related to a saved file. |\n| `clean`            | Remove any assets created by `build-dev` or `build-prod`                                                                                                 |\n| `clean-deps`       | Remove any dependencies installed (usually by `yarn`)                                                                                                    |\n| `test`             | Runs all tests once (this usually means running unit tests; via `yarn test-unit`)                                                                        |\n| `test-unit`        | Run all unit tests within the package; `exit 0` if N/A                                                                                                   |\n| `test-integration` | Run all integration tests within the package; `exit 0` if N/A                                                                                            |\n| `test-watch`       | Run all unit tests in the package in watch mode                                                                                                          |\n\n#### Internal Vite Options\nWhen executing top or package level scripts, [Vite](https://vitejs.dev/) may be used to build/host parts of the application. This section is to serve as a general reference for these environment variables that may be leverage throughout the repository.\n###### `CYPRESS_INTERNAL_VITE_DEV`\nSet to `1` if wanting to leverage [vite's](https://vitejs.dev/guide/#command-line-interface) `vite dev` over `vite build` to avoid a full [production build](https://vitejs.dev/guide/build.html).\n###### `CYPRESS_INTERNAL_VITE_INSPECT`\nUsed internally to leverage [vite-plugin-inspect](https://github.com/antfu/vite-plugin-inspect) to view intermediary vite plugin state. The `CYPRESS_INTERNAL_VITE_DEV` is required for this to be applied correctly. Set to `1` to enable.\n###### `CYPRESS_INTERNAL_VITE_OPEN_MODE_TESTING`\nLeveraged only for internal cy-in-cy type tests to access the Cypress instance from the parent frame. Please see the [E2E Open Mode Testing](./guides/e2e-open-testing.md) Guide. Set to `true` when doing\n###### `CYPRESS_INTERNAL_VITE_APP_PORT`\nLeveraged only when `CYPRESS_INTERNAL_VITE_DEV` is set to spawn the vite dev server for the app on the specified port. The default port is `3333`.\n###### `CYPRESS_INTERNAL_VITE_LAUNCHPAD_PORT`\nLeveraged only when `CYPRESS_INTERNAL_VITE_DEV` is set to spawn the vite dev server for the launchpad on the specified port. The default port is `3001`.\n#### Debug Logs\n\nMany Cypress packages print out debugging information to console via the `debug` module. See [\"Debug logs\"](./guides/debug-logs.md) for more information.\n\n### Coding Style\n\nWe use [eslint](https://eslint.org/) to lint all JavaScript code and follow rules specified in\n[@cypress/eslint-plugin-dev](./npm/eslint-plugin-dev) plugin.\n\nThis project uses a Git pre-commit hook to lint staged files before committing. See the [`lint-staged` project](https://github.com/okonet/lint-staged) for details.\n`lint-staged` will try to auto-fix any lint errors with `eslint --fix`, so if it fails, you must manually fix the lint errors before committing.\n\nWe **DO NOT** use Prettier to format code. You can find [.prettierignore](.prettierignore) file that ignores all files in this repository. To ensure this file is loaded, please always open _the root repository folder_ in your text editor, otherwise your code formatter might execute, reformatting lots of source files.\n\n### Adding links within code\n\nWhen adding links to outside resources within the Cypress Test Runner (including links to Cypress's own documentation), we utilize our [`cypress-on`](https://github.com/cypress-io/cypress-services/tree/develop/packages/on) service for all links.\n\nThis is to ensure that links do not go dead in older versions of Cypress when the location of the link has changed. To add a new link:\n\n- Make up a new slug for the linked resource like `https://on.cypress.io/my-special-link`.\n- Open a PR adding the new slug in [links.yml](https://github.com/cypress-io/cypress-services/blob/develop/packages/on/data/links.yml) with the href of the resource it should redirect to. *Note: this requires access to the internal [cypress-services](https://github.com/cypress-io/cypress-services) repo which is only granted to Cypress employees. If you're an outside contributor and need a link reroute added, please comment in the relevant PR asking for assistance.*\n- Wait for the PR to be reviewed and **deployed** from [cypress-services](https://github.com/cypress-io/cypress-services). This is required before your changes can be merged into the `cypress` project.\n\n### Tests\n\nFor most packages there are typically unit and integration tests. For UI packages there are E2E and component tests.\n\nPlease refer to each packages' `README.md` which documents how to run tests. It is not feasible to try to run all of the tests together. We run our entire test fleet across over a dozen containers in CI.\n\nThere are also a set of system tests in [`system-tests`](system-tests) which attempt to test the entire Cypress App as close to real world as possible. See  the [`README`](system-tests/README.md) for more information.\n\nAdditionally, we test the code by running it against various other example projects in CI. See CI badges and links at the top of this document.\n\nIf you're curious how we manage all of these tests in CI check out our [CircleCI config](.circleci/config.yml).\n\nSome of our test jobs in CircleCI require access to environment variables that are sensitive and are restricted to Cypress maintainers only. If you are not a Cypress maintainer, when your CI job runs, only a subset of jobs will run at first. A Cypress maintainer will need to approve the `contributor-pr` job in your workflow in order for your CI pipeline to complete.\n\n#### Docker\n\nSometimes tests pass locally, but fail in CI. Our CI environment is dockerized. In order to run the image used in CI locally:\n\n1. [Install Docker](https://docs.docker.com/install/) and get it running on your machine.\n2. Run the following command from the root of the project:\n\n```shell\n$ yarn docker\n```\n\nThere is a script [scripts/run-docker-local.sh](scripts/run-docker-local.sh) that runs the cypress image (see [CircleCI config](.circleci/config.yml) for the current image name).\n\nThe image will start and will map the root of the repository to `/cypress` inside the image. Now you can modify the files using your favorite environment and rerun tests inside the docker environment.\n\n#### Docker as a performance constrained environment\n\nSometimes performance issues are easier to reproduce in performance constrained environments. A docker container can be a good way to simulate this locally and allow for quick iteration.\n\nIn a fresh cypress repository run the following command:\n\n```shell\ndocker compose run --service-port dev\n```\n\nThis will spin up a docker container based off cypress/browsers:latest and start up the bash terminal. From here you can yarn install and develop as normal, although slower. It's recommend that you run this in a fresh repo because node modules may differ between an install on your local device and from within a linux docker image.\n\nPorts 5566 and 5567 are available to attach debuggers to, please note that docker compose run only maps ports if the `--service-port` command is used.\n\n### Packages\n\nGenerally when making contributions, you are typically making them to a small number of packages. Most of your local development work will be inside a single package at a time.\n\nEach package documents how to best work with it, so consult the `README.md` of each package.\n\nThey will outline development and test procedures. When in doubt just look at the `scripts` of each `package.json` file. Everything we do at Cypress is contained there.\n\n## Committing Code\n\n### Branches\n\nThe repository has one protected branch:\n\n- `develop` contains the current latest \"pre-release\" code for the Cypress app and contains the already published code of all [standalone npm packages](./npm) Cypress maintains. This branch is set as the default branch, and all pull requests should be made against this branch.\n\nWe want to publish our [standalone npm packages](./npm) continuously as new features are added. Therefore, after any pull request that changes independent `@cypress/` packages in the [`npm`](./npm) directory will automatically publish when a PR is merged directly into `develop` and the entire build passes. We used [`semantic-release`](https://semantic-release.gitbook.io/semantic-release/) to automate the release of these packages to npm.\n\nWe do not continuously deploy the Cypress binary, so `develop` contains all of the new features and fixes that are staged to go out in the next update of the main Cypress app. If you make changes to an npm package that can't be published until the binary is also updated, the pull request should clearly state that it should not be merged until the next scheduled Cypress app release date.\n\n### Pull Requests\n\n- Break down pull requests into the smallest necessary parts to address the original issue or feature. This helps you get a timely review and helps the reviewer clearly understand which pieces of the code changes are relevant.\n- When opening a PR for a specific issue already open, please name the branch you are working on using the convention `issue-[issue number]`. For example, if your PR fixes Issue #803, name your branch `issue-803`. If the PR is a larger issue, you can add more context like `issue-803-new-scrollable-area`. If there's not an associated open issue, **[create an issue](https://github.com/cypress-io/cypress/issues/new/choose)**.\n- PRs can be opened before all the work is finished. In fact we encourage this! Please create a [Draft Pull Request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests) if your PR is not ready for review. [Mark the PR as **Ready for Review**](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/changing-the-stage-of-a-pull-request#marking-a-pull-request-as-ready-for-review) when you're ready for a Cypress team member to review the PR.\n- Prefix the title of the Pull Request using [semantic-release](https://github.com/semantic-release/semantic-release)'s format using one of the following definitions. Once committed to develop, this prefix will determine the appropriate 'next version' of Cypress or the corresponding npm module.\n  - Changes has user-facing impact:\n    - `breaking` - A breaking change that will require an MVB\n    - `dependency` - A change to a dependency that impacts the user\n    - `deprecation` - An API deprecation notice for users\n    - `feat` - A new feature\n    - `fix` - A bug fix or regression fix\n    - `misc` - A miscellaneous user-facing change, like a UI update which is not a fix or enhancement to how Cypress works\n    - `perf` - A code change that improves performance\n  - Change that improves the codebase or system but has no user-facing impact:\n    - `chore` - Changes to the build process or auxiliary tools and libraries such as documentation generation\n    - `docs` -  Documentation only changes\n    - `refactor` - A code change that neither fixes a bug nor adds a feature\n    - `revert` - Reverts a previous commit\n    - `test` - Adding missing or correcting existing tests\n- For user-facing changes that will be released with the next Cypress version, be sure to add a changelog entry to the appropriate section in [`cli/CHANGELOG.md`](./cli/CHANGELOG.md). See [Writing the Cypress Changelog Guide](./guides/writing-the-cypress-changelog.md) for more details.\n- Fill out the [Pull Request Template](./.github/PULL_REQUEST_TEMPLATE.md) completely within the body of the PR. If you feel some areas are not relevant add `N/A` as opposed to deleting those sections. PRs will not be reviewed if this template is not filled in.\n- Please check the \"Allow edits from maintainers\" checkbox when submitting your PR. This will make it easier for the maintainers to make minor adjustments, to help with tests or any other changes we may need.\n![Allow edits from maintainers checkbox](https://user-images.githubusercontent.com/1271181/31393427-b3105d44-ada9-11e7-80f2-0dac51e3919e.png)\n- After you have submitted a PR you may see that GitHub shows a status message \"This branch has conflicts that must be resolved\" or \"This branch is out-of-date with the base branch\".\n- It is the submitter's responsibility to resolve any conflicts by rebasing on the base branch (usually `develop`).\n- In the case of an out-of-date branch, the submitter may use the GitHub PR \"Update branch\" button which merges the base branch into the submitter's branch and starts a new CircleCI test run.\n  External contributors should use this option sparingly if the PR has been approved and is close to merging. The Cypress.io team will generally make sure that the PR is updated before merging.\n  Each push from an external contributor requires a manual CI workflow approval from the Cypress.io team and multiple updates over a short period of time may slow down the approval and merge process.\n- All Pull Requests require a minimum of **two** approvals.\n- After the PR is approved, the original contributor can merge the PR (if the original contributor has access).\n- When you merge a PR into `develop`, select [**Squash and merge**](https://docs.github.com/en/github/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/about-pull-request-merges#squash-and-merge-your-pull-request-commits). This will squash all commits into a single commit.\n\n*The only exceptions to squashing are:*\n\n1. When converting files to another language and there is a clear commit history needed to maintain from the file conversion.\n2. When merging a `release/*` branch to `develop`. Individual PRs were already squashed when they were merged to the release branch, and we want that history intact on develop.\n\n### Write Some Tests\n\nIf you are adding a new feature or fixing a regression, ensure you add tests for it. Broadly speaking, there are four categories of tests you might consider:\n\n1. Unit tests. Those are inside of `test/unit`, if the package has them. These are the fastest and cheapest to execute.\n2. Component Tests. These are co-located with components in the `src` directory of UI-related packages. These test individual UI components in isolation. They can exhaustively test all expected variations of a component and are faster than E2E tests.\n3. E2E/Integration tests. Those are inside `cypress/e2e`, if the package has them. These are between Unit Tests and System Tests when it comes to speed of execution.\n4. System tests. Those go in the [`system-tests`](https://github.com/cypress-io/cypress/tree/develop/system-tests) directory. The README explains how they work. These are the slowest to run, so you generally only want to add a system-test if it's absolutely required (but don't let that discourage you; they are also the most realistic way to test Cypress).\n\nWhen choosing what's most appropriate, consider:\n\n- ease of understanding\n- ease of debugging\n- resilience to refactoring\n\nIt is also worth considering when a failure will be noticed. A unit or component test is likely to be run while the related code is being modified and provides very fast feedback. E2E tests and System Tests are more likely to only fail in CI since they are slower to run.\n\n### Dependencies\n\nWe use [RenovateBot](https://renovatebot.com/) to automatically upgrade our dependencies. The bot uses the settings in [renovate.json](renovate.json) to maintain our [Update Dependencies](https://github.com/cypress-io/cypress/issues/3777) issue and open PRs. You can manually select a package to open a PR from our [Update Dependencies](https://github.com/cypress-io/cypress/issues/3777) issue.\n\nAfter a PR has been opened for a dependency update, our `cypress-bot` will comment on the PR detailing the guidelines to be used to review the dependency update. Please read these guidelines carefully and make any updates where you see the PR may not be meeting the quality of these guidelines.\n\n## Reviewing Code\n\n### Some rules about Code Review\n\n1. The contributor opening the pull request may not approve their own PR.\n2. The PR will not be merged if some reviewers have requested changes.\n\nIf any of the Pull Request Review guidelines can't be met, a comment should be left by the reviewer with 'Request changes'. The original contributor is responsible for making any updates and request re-review once those changes are addressed.\n\n### Steps to take during Code Review\n\n- Run the code and use it as the end user would.\n- Double check the issue and PR description to ensure it is meeting the original requirements.\n- Read through every line of changed code (Yes, we know this could be a LOT).\n- If you don't understand why some piece of code is required, ask for clarification! Likely the contributor had a reason and can provide the answer quicker than investigating yourself.\n\n### Code Review Checklist\n\nBelow are guidelines to help during code review. If any of the following requirements can't be met, leave a comment in the review selecting 'Request changes', otherwise 'Approve'.\n\n#### User Experience\n\n- [ ] The feature/bugfix is self-documenting from within the product.\n- [ ] The change provides the end user with a way to fix their problem (no dead ends).\n- [ ] If a breaking change or a change to a commonly used API, the proposed changes have been discussed and agreed upon in the weekly team meeting (or a separate meeting if a larger change).\n\n#### Functionality\n\n- [ ] The code works and performs its intended function with the correct logic.\n- [ ] Performance has been factored in (for example, the code cleans up after itself to not cause memory leaks).\n- [ ] The code guards against edge cases and invalid input and has tests to cover it.\n\n#### Maintainability\n\n- [ ] The code is readable (too many nested 'if's are a bad sign).\n- [ ] Names used for variables, methods, etc, clearly describe their function.\n- [ ] The code is easy to understand and there are relevant comments explaining.\n- [ ] New algorithms are documented in the code with link(s) to external docs (flowcharts, w3c, chrome, firefox).\n- [ ] There are comments containing link(s) to the addressed issue (in tests and code).\n\n#### Quality\n\n- [ ] The change does not reimplement code.\n- [ ] There's not a module from the ecosystem that should be used instead.\n- [ ] There is no redundant or duplicate code.\n- [ ] There are no irrelevant comments left in the code.\n- [ ] There is no irrelevant code to the issue being addressed. If there is, ask the contributor to break the work out into a separate PR.\n- [ ] Tests are testing the code's intended functionality in the best way possible.\n\n### Code Review of Dependency Updates\n\nBelow are some guidelines Cypress uses when reviewing dependency updates.\n\n#### Dependency Update Instructions\n\n- Read through the entire changelog of the dependency's changes. If a changelog is not available, check every commit made to the dependency. **NOTE** - do not rely on semver to indicate breaking changes - every product does not follow this standard.\n- Add a PR review comment noting any relevant changes in the dependency.\n- If any of the following requirements cannot be met, leave a comment in the review selecting 'Request changes', otherwise 'Approve'.\n\n#### Dependency Updates Checklist\n\n- [ ] Code using the dependency has been updated to accommodate any breaking changes\n- [ ] The dependency still supports the version of Node that the package requires.\n- [ ] Appropriate labels have been added to the PR (for example: label `type: breaking change` if it is a breaking change)\n\n## Releases\n\n[Standalone npm packages](./npm) are deployed immediately when a PR is merged into `develop` and the entire build passes.\n\nThe Cypress app is typically released every two weeks. All PRs merged to `develop` will build a \"pre-released\" Cypress app which can be installed to verify or leverage your changes before the scheduled release. Read these instructions for [installing pre-release versions](https://docs.cypress.io/guides/references/advanced-installation#Install-pre-release-version).\n\nIf you want to know our build process or build your own Cypress binary, read [the \"Release Process\" guide](./guides/release-process.md).\n\n## Known problems\n\n### ENFILE or EMFILE\n\nIf you get `ENFILE: file table overflow`, `ENFILE: too many open files` or any other `ENFILE` or `EMFILE` errors on Mac, that means you are doing synchronous file system operations. Cypress should **NEVER** do them. Instead we should use async file system operations and let `graceful-fs` retry them. Find the place where the synchronous `fs` operation is done from the stacktrace and make it async.\n\n### lock file\n\nYou can rebuild the lock file using the latest `develop` version in a clean isolated environment using Docker. From the current branch:\n\n```shell\ngit checkout develop\ngit pull\ngit checkout -\ngit checkout origin/develop -- yarn.lock\n# remove all unknown files\ngit clean -xfd\nyarn\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04,
          "content": "MIT License\n\nCopyright (c) 2023 Cypress.io\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.32,
          "content": "<p align=\"center\">\n  <a href=\"https://www.cypress.io\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\"  srcset=\"./assets/cypress-logo-dark.png\">\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"./assets/cypress-logo-light.png\">\n      <img alt=\"Cypress Logo\" src=\"./assets/cypress-logo-light.png\">\n    </picture>\n  </a>\n</p>\n<p align=\"center\">\n  <a href=\"https://on.cypress.io\">Documentation</a> |\n  <a href=\"https://on.cypress.io/changelog\">Changelog</a> |\n  <a href=\"https://on.cypress.io/roadmap\">Roadmap</a>\n</p>\n\n<h3 align=\"center\">\n  The web has evolved. Finally, testing has too.\n</h3>\n\n<p align=\"center\">\n  Fast, easy and reliable testing for anything that runs in a browser.\n</p>\n<p align=\"center\">\n  Join us, we're <a href=\"https://cypress.io/jobs\">hiring</a>.\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/cypress\">\n    <img src=\"https://img.shields.io/npm/dm/cypress.svg\" alt=\"npm\"/>\n  </a>\n  <a href=\"https://on.cypress.io/discord\">\n    <img src=\"https://img.shields.io/badge/chat-on%20Discord-brightgreen\" alt=\"Discord chat\"/>\n  </a>\n    <a href=\"https://stackshare.io/cypress\">\n    <img src=\"https://img.stackshare.io/misc/follow-on-stackshare-badge.svg\" alt=\"StackShare\"/>\n  </a><br />\n</p>\n\n## What is Cypress?\n\n<p align=\"center\">\n  <a href=\"https://player.vimeo.com/video/237527670\">\n    <img alt=\"Why Cypress Video\" src=\"https://user-images.githubusercontent.com/1271364/31739717-dbdff0ee-b41c-11e7-9b16-bfa1b6ac1814.png\" width=\"75%\" height=\"75%\" />\n  </a>\n</p>\n\n## Installing\n\n[![npm version](https://badge.fury.io/js/cypress.svg)](https://badge.fury.io/js/cypress)\n\nInstall Cypress for Mac, Linux, or Windows, then [get started](https://on.cypress.io/install).\n\n```bash\nnpm install cypress --save-dev\n```\nor\n```bash\nyarn add cypress --dev\n```\nor\n```bash\npnpm add cypress --save-dev\n```\n\n![installing-cli e1693232](./assets/cypress-installation.gif)\n\n## Contributing\n\n[![cypress](https://img.shields.io/endpoint?url=https://cloud.cypress.io/badge/simple/ypt4pf/develop&style=flat&logo=cypress)](https://cloud.cypress.io/projects/ypt4pf/runs)\n[![CircleCI](https://circleci.com/gh/cypress-io/cypress/tree/develop.svg?style=svg)](https://circleci.com/gh/cypress-io/cypress/tree/develop) -  `develop` branch\n\nPlease see our [Contributing Guideline](./CONTRIBUTING.md) which explains repo organization, linting, testing, and other steps.\n\n## License\n\n[![license](https://img.shields.io/badge/license-MIT-green.svg)](https://github.com/cypress-io/cypress/blob/develop/LICENSE)\n\nThis project is licensed under the terms of the [MIT license](/LICENSE).\n\n## Badges\n\nConfigure a badge for your project's README to show your test status or test count in the [Cypress Cloud](https://www.cypress.io/cloud).\n\n[![cypress](https://img.shields.io/endpoint?url=https://cloud.cypress.io/badge/simple/ypt4pf/develop&style=flat&logo=cypress)](https://cloud.cypress.io/projects/ypt4pf/runs)\n\n[![cypress](https://img.shields.io/endpoint?url=https://cloud.cypress.io/badge/count/ypt4pf/develop&style=flat&logo=cypress)](https://cloud.cypress.io/projects/ypt4pf/runs)\n\nOr let the world know your project is using Cypress with the badge below.\n\n[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)\n\n```\n[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)\n```\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 0.03,
          "content": "https://on.cypress.io/roadmap\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.34,
          "content": "# Reporting Security Issues\n\nIf you believe you've found a potential security issue in Cypress, we want to ensure the correct members of our team are alerted as soon as possible.\n\nPlease see our [Security and Compliance](https://cypress.io/security/) for our security disclosure policy and how to report a vulnerability.\n\nhttps://cypress.io/security/\n"
        },
        {
          "name": "__snapshots__",
          "type": "tree",
          "content": null
        },
        {
          "name": "apollo.config.js",
          "type": "blob",
          "size": 0.43,
          "content": "const path = require('path')\n\n// For use with Apollo Extension for VSCode:\n// https://www.apollographql.com/docs/devtools/editor-plugins/\nmodule.exports = {\n  client: {\n    service: {\n      name: 'cypress-io',\n      localSchemaFile: path.join(__dirname, 'packages/graphql/schemas/schema.graphql'),\n    },\n    tagName: 'gql',\n    includes: [path.join(__dirname, 'packages/{launchpad,app,frontend-shared}/src/**/*.{vue,ts,js,tsx,jsx}')],\n  },\n}\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "autobarrel.json",
          "type": "blob",
          "size": 0.31,
          "content": "{\n  \"prefix\": \"/* eslint-disable padding-line-between-statements */\",\n  \"paths\": [\n    \"packages/graphql/src/**/*\",\n    \"packages/data-context/src/**/*\"\n  ],\n  \"ignore\": [\n    \"packages/data-context/src/gen\",\n    \"packages/graphql/src/stitching\",\n    \"packages/graphql/src/testing\",\n    \"packages/graphql/src/gen\"\n  ]\n}"
        },
        {
          "name": "browser-versions.json",
          "type": "blob",
          "size": 0.11,
          "content": "{\n  \"chrome:beta\": \"132.0.6834.57\",\n  \"chrome:stable\": \"131.0.6778.204\",\n  \"chrome:minimum\": \"64.0.3282.0\"\n}\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.44,
          "content": "services:\n  dev:\n    image: cypress/browsers:latest\n    ports:\n      # Share debugging ports\n      - 5566:5566\n      - 5567:5567\n    environment:\n      # Use Hist file from shared volume\n      HISTFILE: /root/hist/.bash_history\n      # Setup inspect to use the more permissive address when debugging so\n      # that we can connect to it from outside the docker container\n      CYPRESS_DOCKER_DEV_INSPECT_OVERRIDE: '0.0.0.0:5566'\n      # This disables CI mode which causes cypress to build differently\n      CI: ''\n    command: /bin/bash\n    working_dir: /opt/cypress\n    volumes:\n      # Copy Cypress source to docker container\n      - .:/opt/cypress\n      - bash-history:/root/hist\n  watch:\n    image: cypress/browsers:latest\n    environment:\n      # This disables CI mode which causes cypress to build differently\n      CI: ''\n    command: yarn watch\n    working_dir: /opt/cypress\n    volumes:\n      # Copy Cypress source to docker container\n      - .:/opt/cypress\n  ci:\n    # This should mirror the image used in workflows.yml\n    image: cypress/browsers-internal:node20.18.1-bullseye-chrome131-ff133\n    ports:\n      - 5566:5566\n      - 5567:5567\n    command: /bin/bash\n    environment:\n      HISTFILE: /root/hist/.bash_history\n      CYPRESS_DOCKER_DEV_INSPECT_OVERRIDE: '0.0.0.0:5566'\n    working_dir: /opt/cypress\n    volumes:\n      - .:/opt/cypress\n      - bash-history:/root/hist\n\n# persist terminal history between runs in a virtual volume\nvolumes:\n  bash-history:\n"
        },
        {
          "name": "electron-builder.json",
          "type": "blob",
          "size": 0.64,
          "content": "{\n  \"productName\": \"Cypress\",\n  \"appId\": \"com.electron.cypress\",\n  \"target\": \"zip\",\n  \"mac\": {\n    \"target\": \"zip\",\n    \"forceCodeSigning\": true,\n    \"publish\": null,\n    \"hardenedRuntime\": true,\n    \"entitlements\": \"./scripts/entitlements.mac.inherit.plist\",\n    \"entitlementsInherit\": \"./scripts/entitlements.mac.inherit.plist\",\n    \"type\": \"distribution\"\n  },\n  \"linux\": {\n    \"target\": \"dir\",\n    \"executableName\": \"Cypress\"\n  },\n  \"win\": {\n    \"signingHashAlgorithms\": [\n      \"sha256\"\n    ],\n    \"sign\": \"./scripts/windows-sign.js\",\n    \"target\": \"dir\"\n  },\n  \"afterPack\": \"./scripts/after-pack-hook.js\",\n  \"afterSign\": \"./scripts/after-sign-hook.js\"\n}\n"
        },
        {
          "name": "guides",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 0.07,
          "content": "require('@packages/ts/register')\nrequire('./scripts/gulp/gulpfile')\n"
        },
        {
          "name": "jsconfig.json",
          "type": "blob",
          "size": 0.27,
          "content": "{\n  \"exclude\": [\n    \"**/.git/**\",\n    \"**/.cache/**\",\n    \"**/.history/**\",\n    \"**/.projects/**\",\n    \"**/.publish/**\",\n    \"**/node_modules/**\",\n    \"**/app/**\",\n    \"**/build/**\",\n    \"**/dist/**\",\n    \"**/dist-test/**\",\n    \"**/.cy/**\",\n    \"**/v8-snapshot/cache/**\"\n  ]\n}\n"
        },
        {
          "name": "lerna.json",
          "type": "blob",
          "size": 0.22,
          "content": "{\n  \"npmClient\": \"yarn\",\n  \"packages\": [\n    \"cli\",\n    \"packages/*\",\n    \"npm/*\",\n    \"tooling/*\",\n    \"system-tests\",\n    \"scripts\"\n  ],\n  \"version\": \"0.0.0\",\n  \"$schema\": \"node_modules/lerna/schemas/lerna-schema.json\"\n}\n"
        },
        {
          "name": "mocha-reporter-config.json",
          "type": "blob",
          "size": 0.16,
          "content": "{\n  \"reporterEnabled\": \"spec, mocha-junit-reporter\",\n  \"mochaJunitReporterReporterOptions\": {\n    \"mochaFile\": \"/tmp/cypress/junit/test-results.[hash].xml\"\n  }\n}\n"
        },
        {
          "name": "npm",
          "type": "tree",
          "content": null
        },
        {
          "name": "nx.json",
          "type": "blob",
          "size": 1.06,
          "content": "{\n  \"targetDefaults\": {\n    \"lint\": {\n      \"inputs\": [\n        \"default\",\n        \"{workspaceRoot}/.eslintrc.js\"\n      ],\n      \"cache\": false\n    },\n    \"check-ts\": {\n      \"inputs\": [\n        \"default\",\n        \"sharedGlobals\"\n      ],\n      \"cache\": false\n    },\n    \"build\": {\n      \"dependsOn\": [\n        \"^build\"\n      ],\n      \"cache\": false\n    },\n    \"build-prod\": {\n      \"dependsOn\": [\n        \"^build-prod\"\n      ],\n      \"cache\": false\n    }\n  },\n  \"namedInputs\": {\n    \"sharedGlobals\": [\n      \"{workspaceRoot}/scripts\"\n    ],\n    \"default\": [\n      \"{projectRoot}/**/*\",\n      \"sharedGlobals\",\n      \"{workspaceRoot}/.circleci/cache-version.txt\"\n    ],\n    \"production\": [\n      \"default\",\n      \"!{projectRoot}/**/*.spec.ts\",\n      \"!{projectRoot}/**/*.md\",\n      \"!{projectRoot}/tsconfig.spec.json\",\n      \"!{projectRoot}/.eslintrc.json\",\n      \"!{projectRoot}/.mocharc.{js,json}\",\n      \"!{projectRoot/cypress.config.{ts,js}\",\n      \"!{projectRoot/**/*.cy.ts\"\n    ]\n  },\n  \"nxCloudAccessToken\": \"ZmNlNjA0YzAtNTM1NS00MDIwLWFlMWItNWYxYzNiMjQ4N2VkfHJlYWQtb25seQ==\"\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 10.63,
          "content": "{\n  \"name\": \"cypress\",\n  \"version\": \"13.17.0\",\n  \"description\": \"Cypress is a next generation front end testing tool built for the modern web\",\n  \"private\": true,\n  \"scripts\": {\n    \"binary-build\": \"cross-env NODE_OPTIONS=--max_old_space_size=8192 node ./scripts/binary.js build\",\n    \"binary-deploy\": \"node ./scripts/binary.js deploy\",\n    \"binary-deploy-linux\": \"./scripts/build-linux-binary.sh\",\n    \"binary-ensure\": \"node ./scripts/binary.js ensure\",\n    \"binary-package\": \"cross-env NODE_OPTIONS=--max_old_space_size=8192 node ./scripts/binary.js package\",\n    \"binary-purge\": \"node ./scripts/binary.js purge-version\",\n    \"binary-release\": \"node ./scripts/binary.js release\",\n    \"binary-smoke-test\": \"node ./scripts/binary.js smoke\",\n    \"binary-upload\": \"node ./scripts/binary.js upload\",\n    \"binary-zip\": \"node ./scripts/binary.js zip\",\n    \"build\": \"lerna run build --stream && yarn workspace @packages/electron build-binary && lerna run build-cli --stream\",\n    \"build-prod\": \"lerna run build-prod --stream && node ./cli/scripts/post-build.js && lerna run build-prod --stream --scope\",\n    \"build-v8-snapshot-dev\": \"node --max-old-space-size=8192 tooling/v8-snapshot/scripts/setup-v8-snapshot-in-cypress.js --env=dev\",\n    \"build-v8-snapshot-prod\": \"node --max-old-space-size=8192 tooling/v8-snapshot/scripts/setup-v8-snapshot-in-cypress.js\",\n    \"check-binary-on-cdn\": \"node ./scripts/binary.js checkIfBinaryExistsOnCdn\",\n    \"check-node-version\": \"node scripts/check-node-version.js\",\n    \"check-terminal\": \"node scripts/check-terminal.js\",\n    \"check-ts\": \"yarn lerna run check-ts\",\n    \"clean\": \"lerna run clean --no-bail || echo 'ok, errors while cleaning'\",\n    \"clean-deps\": \"find . -depth -name node_modules -type d -exec rimraf {} \\\\;\",\n    \"clean-untracked-files\": \"git clean -d -f\",\n    \"codegen\": \"yarn gulp codegen\",\n    \"cypress:open\": \"yarn gulp open --dev --global\",\n    \"precypress:open:debug\": \"yarn ensure-deps\",\n    \"cypress:open:debug\": \"node ./scripts/debug.js cypress:open\",\n    \"precypress:run\": \"yarn ensure-deps\",\n    \"cypress:run\": \"cypress run --dev\",\n    \"cypress:run:ct\": \"cypress run --component --dev\",\n    \"precypress:run:debug\": \"yarn ensure-deps\",\n    \"cypress:run:debug\": \"node ./scripts/debug.js cypress:run\",\n    \"cypress:verify\": \"cypress verify --dev\",\n    \"dev\": \"gulp dev\",\n    \"dev-debug\": \"node ./scripts/debug.js dev\",\n    \"dev:clean\": \"gulp dev:clean\",\n    \"docker\": \"./scripts/run-docker-local.sh\",\n    \"docker-dev\": \"./scripts/run-docker-local.sh dev\",\n    \"ensure-deps\": \"./scripts/ensure-dependencies.sh\",\n    \"get-next-version\": \"node scripts/get-next-version.js\",\n    \"gulp:debug\": \"node --inspect-brk ./node_modules/.bin/gulp\",\n    \"postinstall\": \"node ./scripts/run-postInstall.js\",\n    \"lint\": \"lerna run lint --no-bail --concurrency 2\",\n    \"npm-release\": \"node scripts/npm-release.js\",\n    \"prepare\": \"husky install\",\n    \"prepare-release-artifacts\": \"node ./scripts/prepare-release-artifacts.js\",\n    \"pretest-e2e\": \"yarn ensure-deps\",\n    \"prestart\": \"yarn ensure-deps\",\n    \"start\": \"cypress open --dev --global\",\n    \"stop-only\": \"npx stop-only --skip .cy,.publish,.projects,node_modules,dist,dist-test,fixtures,lib,bower_components,src,__snapshots__ --exclude cypress-tests.ts,*only.cy.js\",\n    \"stop-only-all\": \"yarn stop-only --folder packages\",\n    \"pretest\": \"yarn ensure-deps\",\n    \"test\": \"yarn lerna exec yarn test --scope=cypress --scope=@packages/{config,data-context,electron,errors,extension,https-proxy,launcher,net-stubbing,network,packherd-require,proxy,rewriter,scaffold-config,socket,v8-snapshot-require,telemetry} --scope=@tooling/{electron-mksnapshot,v8-snapshot}\",\n    \"test-debug\": \"lerna exec yarn test-debug --ignore=@packages/{driver,root,static,web-config}\",\n    \"test-integration\": \"lerna exec yarn test-integration --ignore=@packages/{driver,root,static,web-config}\",\n    \"test-mocha\": \"mocha --reporter spec scripts/spec.js\",\n    \"test-npm-package-release-script\": \"npx lerna exec --scope=@cypress/* -- npx --no-install semantic-release --dry-run\",\n    \"test-scripts\": \"mocha -r packages/ts/register --reporter spec 'scripts/unit/**/*spec.js'\",\n    \"test-scripts-watch\": \"yarn test-scripts --watch --watch-extensions 'ts,js'\",\n    \"test-system\": \"yarn workspace @tooling/system-tests test\",\n    \"pretest-unit\": \"yarn ensure-deps\",\n    \"test-unit\": \"lerna exec yarn test-unit --ignore={@packages/{driver,root,static,web-config,net-stubbing,rewriter},@cypress/{webpack-dev-server,eslint-plugin-dev}}\",\n    \"pretest-watch\": \"yarn ensure-deps\",\n    \"test-watch\": \"lerna exec yarn test-watch --ignore=@packages/{driver,root,static,web-config}\",\n    \"type-check\": \"yarn lerna exec yarn type-check --scope=@tooling/system-tests && node scripts/type_check\",\n    \"verify:mocha:results\": \"node ./scripts/verify-mocha-results\",\n    \"watch\": \"yarn gulp watch\"\n  },\n  \"devDependencies\": {\n    \"@aws-sdk/client-s3\": \"3.485.0\",\n    \"@aws-sdk/credential-providers\": \"3.53.0\",\n    \"@babel/eslint-parser\": \"7.25.1\",\n    \"@cypress/request\": \"^3.0.6\",\n    \"@cypress/request-promise\": \"^5.0.0\",\n    \"@electron/fuses\": \"1.8.0\",\n    \"@electron/notarize\": \"^2.5.0\",\n    \"@fellow/eslint-plugin-coffee\": \"0.4.13\",\n    \"@graphql-codegen/add\": \"3.1.0\",\n    \"@graphql-codegen/cli\": \"2.2.0\",\n    \"@graphql-codegen/plugin-helpers\": \"2.3.2\",\n    \"@graphql-codegen/typed-document-node\": \"2.2.8\",\n    \"@graphql-codegen/typescript\": \"2.4.2\",\n    \"@graphql-codegen/typescript-operations\": \"2.2.3\",\n    \"@graphql-codegen/typescript-resolvers\": \"^2.6.4\",\n    \"@graphql-codegen/typescript-urql-graphcache\": \"2.2.3\",\n    \"@graphql-tools/delegate\": \"8.2.1\",\n    \"@graphql-tools/utils\": \"8.2.3\",\n    \"@graphql-tools/wrap\": \"8.1.1\",\n    \"@npmcli/arborist\": \"8.0.0\",\n    \"@octokit/auth-app\": \"6.0.3\",\n    \"@octokit/core\": \"5.0.2\",\n    \"@percy/cli\": \"1.27.4\",\n    \"@reach/dialog\": \"0.10.5\",\n    \"@semantic-release/changelog\": \"6.0.3\",\n    \"@semantic-release/git\": \"10.0.1\",\n    \"@types/better-sqlite3\": \"^7.6.3\",\n    \"@types/bluebird\": \"3.5.29\",\n    \"@types/chai-enzyme\": \"0.6.7\",\n    \"@types/debug\": \"4.1.7\",\n    \"@types/detect-port\": \"^1.3.5\",\n    \"@types/enzyme-adapter-react-16\": \"1.0.5\",\n    \"@types/fluent-ffmpeg\": \"^2.1.18\",\n    \"@types/fs-extra\": \"^9.0.13\",\n    \"@types/getenv\": \"^1.0.0\",\n    \"@types/glob\": \"7.1.1\",\n    \"@types/gulp\": \"^4.0.9\",\n    \"@types/lodash\": \"^4.14.168\",\n    \"@types/markdown-it\": \"12.2.3\",\n    \"@types/mocha\": \"8.0.3\",\n    \"@types/node\": \"20.16.0\",\n    \"@types/prismjs\": \"1.16.0\",\n    \"@types/react\": \"18.3.12\",\n    \"@types/react-dom\": \"18.3.1\",\n    \"@types/request-promise\": \"4.1.45\",\n    \"@types/send\": \"^0.17.1\",\n    \"@types/sinon-chai\": \"3.2.3\",\n    \"@types/through2\": \"^2.0.36\",\n    \"@types/underscore.string\": \"0.0.38\",\n    \"@typescript-eslint/eslint-plugin\": \"7.2.0\",\n    \"@typescript-eslint/parser\": \"7.2.0\",\n    \"@urql/introspection\": \"^0.3.0\",\n    \"ascii-table\": \"0.0.9\",\n    \"autobarrel\": \"^1.1.0\",\n    \"bluebird\": \"3.5.3\",\n    \"bluebird-retry\": \"0.11.0\",\n    \"bytenode\": \"1.3.7\",\n    \"chai\": \"4.5.0\",\n    \"chai-as-promised\": \"7.1.1\",\n    \"chalk\": \"2.4.2\",\n    \"check-dependencies\": \"1.1.0\",\n    \"check-more-types\": \"2.24.0\",\n    \"commander\": \"6.2.1\",\n    \"common-tags\": \"1.8.0\",\n    \"conventional-recommended-bump\": \"6.1.0\",\n    \"cross-env\": \"7.0.3\",\n    \"debug\": \"^4.3.4\",\n    \"dedent\": \"^0.7.0\",\n    \"del\": \"3.0.0\",\n    \"detect-port\": \"^1.6.1\",\n    \"electron\": \"33.2.1\",\n    \"electron-builder\": \"^25.1.8\",\n    \"enzyme-adapter-react-16\": \"1.12.1\",\n    \"eslint\": \"^8.56.0\",\n    \"eslint-plugin-cypress\": \"3.5.0\",\n    \"eslint-plugin-graphql\": \"4.0.0\",\n    \"eslint-plugin-import\": \"2.25.4\",\n    \"eslint-plugin-json-format\": \"2.0.1\",\n    \"eslint-plugin-mocha\": \"8.2.0\",\n    \"eslint-plugin-react\": \"7.22.0\",\n    \"eslint-plugin-react-hooks\": \"4.2.0\",\n    \"eslint-plugin-vue\": \"7.18.0\",\n    \"execa\": \"4.0.0\",\n    \"filesize\": \"10.1.1\",\n    \"fs-extra\": \"9.1.0\",\n    \"getenv\": \"^1.0.0\",\n    \"glob\": \"7.1.6\",\n    \"graphql\": \"^15.5.1\",\n    \"graphql-executor\": \"0.0.23\",\n    \"gulp\": \"4.0.2\",\n    \"gulp-awspublish\": \"8.0.0\",\n    \"gulp-debug\": \"4.0.0\",\n    \"gulp-rename\": \"1.4.0\",\n    \"hasha\": \"5.0.0\",\n    \"http-server\": \"0.12.3\",\n    \"human-interval\": \"1.0.0\",\n    \"husky\": \"7.0.2\",\n    \"inquirer\": \"8.2.4\",\n    \"inquirer-confirm\": \"2.0.3\",\n    \"lazy-ass\": \"1.6.0\",\n    \"lerna\": \"8.1.8\",\n    \"lint-staged\": \"11.1.2\",\n    \"listr2\": \"3.8.3\",\n    \"lodash\": \"^4.17.21\",\n    \"minimist\": \"1.2.8\",\n    \"mobx\": \"6.13.5\",\n    \"mobx-react\": \"9.1.1\",\n    \"mocha\": \"3.5.3\",\n    \"mocha-banner\": \"1.1.2\",\n    \"mocha-junit-reporter\": \"2.2.0\",\n    \"mocha-multi-reporters\": \"1.1.7\",\n    \"mock-fs\": \"5.4.0\",\n    \"npm-packlist\": \"9.0.0\",\n    \"p-defer\": \"^3.0.0\",\n    \"patch-package\": \"6.4.7\",\n    \"playwright-webkit\": \"1.24.2\",\n    \"pluralize\": \"8.0.0\",\n    \"print-arch\": \"1.0.0\",\n    \"proxyquire\": \"2.1.3\",\n    \"react\": \"18.3.1\",\n    \"react-dom\": \"18.3.1\",\n    \"rimraf\": \"5.0.10\",\n    \"semantic-release\": \"22.0.12\",\n    \"semantic-release-monorepo\": \"8.0.2\",\n    \"semver\": \"7.5.3\",\n    \"shelljs\": \"0.8.5\",\n    \"sinon\": \"7.3.2\",\n    \"snap-shot-it\": \"7.9.10\",\n    \"stop-only\": \"3.4.1\",\n    \"strip-ansi\": \"6.0.1\",\n    \"tar\": \"6.1.15\",\n    \"term-to-html\": \"1.2.0\",\n    \"terminal-banner\": \"1.1.0\",\n    \"through\": \"2.3.8\",\n    \"through2\": \"^4.0.2\",\n    \"tree-kill\": \"1.2.2\",\n    \"ts-node\": \"^10.9.2\",\n    \"typescript\": \"5.3.3\",\n    \"yarn-deduplicate\": \"3.1.0\"\n  },\n  \"engines\": {\n    \"node\": \">=20.18.1\",\n    \"yarn\": \">=1.22.22\"\n  },\n  \"productName\": \"Cypress\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/cypress-io/cypress.git\"\n  },\n  \"homepage\": \"https://cypress.io\",\n  \"bugs\": {\n    \"url\": \"https://github.com/cypress-io/cypress/issues\"\n  },\n  \"keywords\": [\n    \"automation\",\n    \"browser\",\n    \"cypress\",\n    \"cypress.io\",\n    \"e2e\",\n    \"end-to-end\",\n    \"integration\",\n    \"component\",\n    \"mocks\",\n    \"runner\",\n    \"spies\",\n    \"stubs\",\n    \"test\",\n    \"testing\"\n  ],\n  \"workspaces\": {\n    \"packages\": [\n      \"cli\",\n      \"packages/*\",\n      \"npm/*\",\n      \"tooling/*\",\n      \"system-tests\",\n      \"scripts\"\n    ],\n    \"nohoist\": [\n      \"**/@wdio/*\",\n      \"**/webpack-preprocessor/babel-loader\",\n      \"**/webpack-preprocessor/**/merge-source-map\",\n      \"**/webpack-preprocessor/**/patch-package\",\n      \"**/webpack-batteries-included-preprocessor/ts-loader\",\n      \"**/jest\",\n      \"**/jest*\",\n      \"**/expect\"\n    ]\n  },\n  \"lint-staged\": {\n    \"*.coffee\": \"yarn stop-only --folder\",\n    \"*.{js,jsx,ts,tsx,json,eslintrc,vue}\": \"eslint --fix\"\n  },\n  \"resolutions\": {\n    \"**/@types/cheerio\": \"0.22.21\",\n    \"**/@types/enzyme\": \"3.10.5\",\n    \"**/@wdio/logger\": \"9.0.0\",\n    \"**/jquery\": \"3.7.1\",\n    \"**/pretty-format\": \"26.4.0\",\n    \"**/sharp\": \"0.29.3\",\n    \"**/socket.io-parser\": \"4.0.5\",\n    \"**/ua-parser-js\": \"0.7.33\",\n    \"browserify-sign\": \"4.2.2\",\n    \"devtools-protocol\": \"0.0.1346313\",\n    \"sharp\": \"0.29.3\",\n    \"vue-template-compiler\": \"2.6.12\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.69,
          "content": "{\n  \"configMigration\": true,\n  \"dependencyDashboard\": true,\n  \"extends\": [\n    \":semanticPrefixFixDepsChoreOthers\",\n    \"group:monorepos\",\n    \"group:recommended\",\n    \"replacements:all\",\n    \"workarounds:all\"\n  ],\n  \"ignorePaths\": [\n    \"**/node_modules/**\",\n    \"**/system-tests/projects/**\"\n  ],\n  \"labels\": [\n    \"type: dependencies\"\n  ],\n  \"packageRules\": [\n    {\n      \"automerge\": true,\n      \"matchUpdateTypes\": [\n        \"minor\",\n        \"patch\",\n        \"pin\",\n        \"digest\"\n      ]\n    }\n  ],\n  \"postUpdateOptions\": [\n    \"yarnDedupeHighest\"\n  ],\n  \"prConcurrentLimit\": 4,\n  \"prHourlyLimit\": 1,\n  \"rangeStrategy\": \"bump\",\n  \"separateMultipleMajor\": true,\n  \"timezone\": \"America/New_York\"\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "system-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tooling",
          "type": "tree",
          "content": null
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 1425.15,
          "content": null
        }
      ]
    }
  ]
}