{
  "metadata": {
    "timestamp": 1736557672712,
    "page": 774,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hiroi-sora/Umi-OCR",
      "stars": 28514,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.61,
          "content": "开发工具\n命名规范.md\nTemp\nbuild\nPyStand_for_UmiOCR/build\n.vscode\n*.exe\n*.txt\n\n# 发布\nrelease\nrelease.py\n\n# 开发工具\n!dev-tools/i18n/release\n!dev-tools/i18n/*.exe\ndev-tools/7z\ndev-tools/*.zip\n\n# 排除一级目录\nUmiOCR-data/*\n!UmiOCR-data/main.py\n!UmiOCR-data/version.py\n!UmiOCR-data/Help 帮助.txt\n# 允许二级目录\n!UmiOCR-data/**/\n# 排除运行环境目录\nUmiOCR-data/site-packages*\nUmiOCR-data/runtime\nUmiOCR-data/lib\nUmiOCR-data/plugins/*/\nUmiOCR-data/temp\nUmiOCR-data/temp_doc\n# 允许运行环境压缩包\n!UmiOCR-data/*.7z\n!UmiOCR-data/*.zip\n# 排除缓存\n**__pycache__**\nUmiOCR-data/i18n/_"
        },
        {
          "name": "CHANGE_LOG.md",
          "type": "blob",
          "size": 17.16,
          "content": "# 分支使用说明\n\n点击后续列表的版本号链接，可前往对应备份分支页面。\n\n部分备份分支含有体积较大的二进制库，会让你花费长时间下载。因此，建议只下载你需要用的分支。\n\n方法1：将所需的分支，fork到你自己的账号下，然后clone你自己仓库。\n\n方法2：使用以下命令手动clone指定分支：\n\n```\ngit clone --single-branch --branch [分支名] https://github.com/hiroi-sora/Umi-OCR.git\n```\n\n方法3：在本仓库手动下载指定分支的zip源码包。\n\n`[分支名]` 可以是 `main` 、`release/2.0.0` 等，详见下方列表。\n\n`main`、`dev` 等分支，可能含有开发中的不稳定的新功能。如果用于研究学习或二次开发，建议选择 `release` 开头的分支。\n\n# 更新日志 CHANGE LOG\n\n### v2.1.4 `2024.8.31`\n分支名：`main`\n- 修复：引擎原始输出项的\"text\"为空时，导致文本分析越界的错误。 (#625)\n- 新增UI语言：葡萄牙语 `Português` 。译者：[@杨鹏](https://hosted.weblate.org/user/ypf)\n- **PaddleOCR 插件相关**：\n  - 修复：布尔类型选项不生效的问题。\n  - 修复： `繁体中文` 配置文件错误的问题。\n  - 优化：调整默认线程/内存限制，默认内存占用不超过系统总内存的一半。\n  - 优化：调整识别语言库结构，精简不必要的文件。\n- **Linux 版本相关**：\n  - 修复：[Docker 部署](https://github.com/hiroi-sora/Umi-OCR_runtime_linux/blob/main/README-docker.md) 在部分旧系统中报错 `'code': 803` 的问题。(#621)\n  - 优化：`glibc` 依赖降级至 `2.31` ，兼容 Debian-11 、 Ubuntu-20 等发行版。\n\n### [v2.1.3](https://github.com/hiroi-sora/Umi-OCR/tree/release/2.1.3) `2024.7.23`\n分支名：`release/2.1.3`\n\n- 新兼容 Linux 平台。\n- 支持：[Docker 部署](https://github.com/hiroi-sora/Umi-OCR_runtime_linux/blob/main/README-docker.md) 。\n- 新增：HTTP 文档识别接口。👉 [文档](https://github.com/hiroi-sora/Umi-OCR/blob/main/docs/http/api_doc.md#/api/doc)\n- 修复：文档中宽高为0的异常图片会导致任务卡住。\n- 优化：排版解析的 **单栏-单行** 方案，对于间隔较大的两个相邻文本块，会添加空格作为间隔符。\n\n### [v2.1.2](https://github.com/hiroi-sora/Umi-OCR/tree/release/2.1.2) `2024.6.5`\n\n分支名：`release/2.1.2`\n\n- 新增：批量任务（图片、文档）支持 **暂停任务** 。只要不退出软件，在待机/休眠后可以恢复任务。 (#469)\n- 新增：批量文档任务，支持保存为 **单层纯文本PDF** 。\n- 新增：HTTP OCR接口 允许设置 **忽略区域** 参数。 (#525)\n- 新增：HTTP 二维码接口 允许设置 **图像预处理** 参数。 (#512)\n- 新增：命令行`--screenshot`允许指定屏幕范围，自动进行截图。 (#452)\n- 修复：文档内容提取和写入时的坐标旋转、比例适配问题。\n- 修复：截图预览 & 记录面板中，跨区块复制文本时，尾块的复制字数不正确。\n- 优化：批量文档标签页，拖入大量文件、提交大批任务时的性能和流畅度。 (#476)\n- UI：优化一些布局，美化一些视觉效果。\n\n### [v2.1.1](https://github.com/hiroi-sora/Umi-OCR/tree/release/2.1.1) `2024.3.29`\n\n分支名：`release/2.1.1`\n\n- 新增：批量文档识别允许指定忽略区域的页数范围。\n- 新增：命令行`--path`允许传入多个图片或文件夹。\n- 新增：新的命令行、HTTP接口：识别/生成二维码图像。\n- 新增：命令行新指令 `--output`, `--output_append`, `--clip` 。\n- 新增：清空全部识别记录的快捷键。 (#420)\n- 新增：截图预览 删除图片显示的选项和快捷键。 (#427)\n- 修复：Esc取消截图的消息传递错误。 (#402)\n- 修复：文档`整页强制OCR`模式下，提高小尺寸页面的渲染精度。\n- 修复：Windows7及低端CPU无法进行文档识别的Bug。\n- 优化：开始菜单/开机自启快捷方式，默认放置于用户目录下，避免请求管理员权限。\n- 优化：保存双层PDF，在没有新文本写入时的处理逻辑。 (#416)\n- 优化：PDF解析时，提取原有文本行的逻辑。\n- 优化：双栏面板会记忆左右折叠状态。\n- UI：优化一些提示，修复一些渲染问题，美化一些视觉效果。\n\n### [v2.1.0](https://github.com/hiroi-sora/Umi-OCR/tree/release/2.1.0) `2024.2.29`\n\n分支名：`release/2.1.0`\n\n- 新增：批量文档识别功能。支持 `pdf, epub, mobi` 等格式。\n- 新增：允许隐藏托盘图标。 (#338)\n- 新增：重复上一次截图区域的快捷键。 (#357)\n- 新增：用本地图片浏览器打开图片的快捷按钮。 (#335)\n- 更新：更强大的排版解析器。\n- 修复：避免系统环境变量`QMLSCENE_DEVICE`的影响。 (#270)\n\n### [v2.0.2](https://github.com/hiroi-sora/Umi-OCR/tree/release/2.0.2) `2024.1.15`\n\n分支名：`release/2.0.2`\n\n- 更新：全局设置可调节 图片文字叠加层`开启/关闭`默认显示状态。 (#264)\n- 优化：输出为`txt 单独文件`时，将应用`指定路径`参数。 (#269)\n- 优化：`段落合并-多行-代码段` 去除结尾多余换行符。 (#292)\n- 优化：渲染器不兼容时，减少渲染层级错误的影响。 (#259)\n- 修复：清理图片缓存前进行检查，避免空图错误。 (#279)\n- 修复：记录面板中，光标无法移到第1个字符前面。 (#264)\n- 修复：系统语言非简体中文时，软件启动异常。 (#274) (#306)\n- 修复：csv输出的字符编码兼容性问题。 (#284)\n- 修复：`段落合并参数不存在` 的误报。\n- 修复：组件`DefaultTips`不生效。\n\n### [v2.0.1](https://github.com/hiroi-sora/Umi-OCR/tree/release/2.0.1) `2023.12.8`\n\n分支名：`release/2.0.1`\n\n- 更新：重新设计了OCR HTTP接口，允许省略参数，允许指定段落合并。\n- 更新：命令行增加指令`-->`和`-->>`，将结果输出到文件。\n- 优化：调整图像数据的内部编码，减少英文空格丢失的几率。\n- 优化：调整部分UI文本和布局。\n- 优化：csv默认保存为ansi编码，以兼容Office Excel。 (#237)\n- 修复：开启“禁用美化效果”后，外部通知弹窗无法关闭。 (#234)\n- 修复：别的程序通过命令行调用Umi-OCR时，无法获取stdout输出。\n\n### [v2.0.0](https://github.com/hiroi-sora/Umi-OCR/tree/release/2.0.0) `2023.11.19`\n\n分支名：`release/2.0.0`\n\n- 优化：插件UI翻译机制。\n- 优化：下拉框UI。\n- 修复：段落合并-自然段合并的bug。\n\n### v2.0.0 dev `2023.11.14`\n\n- 新增：生成二维码功能。\n- 新增：所有图片预览窗口（如截图、二维码页），允许保存图片到指定路径。\n- 优化：二维码解析库改用性能更好、功能更丰富的zxingcpp。 ([v2 #47](https://github.com/hiroi-sora/Umi-OCR_v2/issues/47)) (感谢：@Byxs20)\n- 优化：截图预览面板中，文本框的位置更准确。\n- 修复：图片预览窗口，无法复制本地图片的Bug。\n- 修复：tbpu合并自然段时，垂直距离不准确的Bug。\n- 修复：HTTP API 的跨域问题。 [v2 #52](https://github.com/hiroi-sora/Umi-OCR_v2/issues/52)\n- 修复：HTTP API 传base64的大小限制问题。 [v2 #49](https://github.com/hiroi-sora/Umi-OCR_v2/issues/49)\n- 修复：其它少量报错。\n- 翻译：人工校对`繁体中文`和`英语`。 (贡献：@QZGao)\n\n### v2.0.0 dev `2023.11.5`\n\n- 新增：记忆窗口位置。 [v2 #44](https://github.com/hiroi-sora/Umi-OCR_v2/issues/44)\n- 新增：批量识图页增加图片预览窗口，单击图片条目打开。 [v2 #2](https://github.com/hiroi-sora/Umi-OCR_v2/issues/2)\n- 新增：检查软件是否有权限读写配置文件。 [v2 #30](https://github.com/hiroi-sora/Umi-OCR_v2/issues/30)\n- 新增：报错弹窗提供一键复制及打开issues的功能。\n- 新增：全局设置页添加左侧目录栏。\n- 新增：插件的多国语言UI机制。\n- 优化：截图预览面板中，文本框的位置更准确。\n- 优化：调整部分UI布置。\n- 修复：扫码模块添加导入异常检查。 [v2 #33](https://github.com/hiroi-sora/Umi-OCR_v2/issues/33)\n- 修复：补充扫码页的拖入图片功能。 [v2 #43](https://github.com/hiroi-sora/Umi-OCR_v2/issues/43)\n- 修复：输出到单独文件txt时，文件名去除原后缀。 [v2 #36](https://github.com/hiroi-sora/Umi-OCR_v2/issues/36)\n- 修复：一些小Bug。\n\n### v2.0.0 dev `2023.10.25`\n- 新增：命令行支持传入图片路径。 [v2 #28](https://github.com/hiroi-sora/Umi-OCR_v2/issues/28)\n- 新增：HTTP接口支持Base64传输图片。 [v2 #28](https://github.com/hiroi-sora/Umi-OCR_v2/issues/28)\n- 新增：忽略区域功能。\n- 新增：二维码识别页。支持识别多种格式的二维码、条形码。 ([Umi-OCR #95](https://github.com/hiroi-sora/Umi-OCR/issues/95))\n- 新增：提供备选启动器`UmiOCR-data/RUN_GUI.bat`，供`Umi-OCR.exe`不兼容时使用。 [v2 #21](https://github.com/hiroi-sora/Umi-OCR_v2/issues/21)\n- 优化：图片预览窗口，支持用`Tab`切换显示/隐藏文本。\n- 优化：记录面板，每条记录顶部添加复制按钮。 [v2 #32](https://github.com/hiroi-sora/Umi-OCR_v2/issues/32)\n- 优化：记录面板，拖拽过程中允许指针移出文本框区域。 [v2 #32](https://github.com/hiroi-sora/Umi-OCR_v2/issues/32)\n- 优化：重新设计截图缓存机制，避免Image组件销毁时的内存泄露。\n- 优化：标签页应用动态解析机制，小幅提高加载速度。\n- 优化：运行环境转为64位包。（计划不再提供对32位的兼容）\n- 修正：配置项中布尔值解析不正确的问题。 [v2 #30](https://github.com/hiroi-sora/Umi-OCR_v2/issues/30)\n- 修正：拖入非图片文件可能导致卡顿几秒的问题。\n- 修正：PaddleOCR插件的兼容性问题。 ([Umi-OCR #209](https://github.com/hiroi-sora/Umi-OCR/issues/209))\n\n### v2.0.0 dev `2023.10.18`\n- 新增：截图前自动隐藏窗口。 [v2 #26](https://github.com/hiroi-sora/Umi-OCR_v2/issues/26)\n- 新增：更改字体功能。 [v2 #25](https://github.com/hiroi-sora/Umi-OCR_v2/issues/25)\n- 新增：可爱的加载动画。\n- 新增：截图预览面板 支持显示结果文本、划选文本。\n- 新增：截图预览面板 支持将图片复制到剪贴板。\n- 新增：结果记录面板 支持跨文本框划选文本。 [v2 #18](https://github.com/hiroi-sora/Umi-OCR_v2/issues/18)\n- 新增：结果记录面板 支持删除一条或多条记录。 [v2 #10](https://github.com/hiroi-sora/Umi-OCR_v2/issues/10)\n- 新增：支持用Esc或右键中断截图。\n- 优化：更改插件目录结构和导入机制。\n- 修正：文件重复导致无法添加开机自启。 [v2 #27](https://github.com/hiroi-sora/Umi-OCR_v2/issues/27)\n\n\n### v2.0.0 dev `2023.10.10`\n- 新功能：第一次启动软件时，根据系统情况，选择最恰当的渲染器。解决截图闪烁问题。 [v2 #7](https://github.com/hiroi-sora/Umi-OCR_v2/issues/7)\n- 新功能：初步实现插件机制，切换引擎等组件更加便捷。\n- 新功能：支持调整界面比例（文字大小）。\n- 优化：调整截图页UI，提高屏占比。优化标签栏阴影。 [v2 #8](https://github.com/hiroi-sora/Umi-OCR_v2/issues/8)\n- 优化：双击通知弹窗可打开主窗口。 [v2 #10](https://github.com/hiroi-sora/Umi-OCR_v2/issues/10)\n- 优化：截图完成后，如果主窗口在前台，则不弹出成功提示。 [v2 #10](https://github.com/hiroi-sora/Umi-OCR_v2/issues/10)\n- 优化：禁用美化效果时，外部弹窗将不会渲染阴影区域。 [v2 #14](https://github.com/hiroi-sora/Umi-OCR_v2/issues/14)\n- 优化：Paddle引擎也支持win7系统了。\n\n### v2.0.0 dev `2023.9.25`\n\n### v2.0.0 dev `2023.9.8`\n- 支持多种界面语言（实验性）\n\n### v2.0.0 dev `2023.9.7`\n\n### v2.0.0 dev `2023.8.9`\n- 截图OCR\n- 兼容高分辨率屏幕和多屏幕系统\n- 更准确、智能的段落合并\n\n### v2.0.0 dev `2023.7.26`\n- 批量OCR\n- 现代化UI风格\n- 自定义标签页系统\n- 主题切换：明亮/深色\n\n---\n\n### [v1.3.7](https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.7) `2023.10.10`\n- Paddle引擎兼容Win7 x64 。\n\n### v1.3.6 `2023.9.26`\n- 新功能：更强大的段落合并方案-`单行/多行自然段/多行代码段`。支持自动判断中/英文段落，采取对应的合并规则。\n- 移除一些过时的段落合并方案。\n- 功能调整：`截图联动` 划分为独立的功能，不受常规截图OCR影响。\n\n### [v1.3.5](https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.5) `2023.6.20`\n<!-- 6.5k★ 撒花~ -->\n- 新功能：复制识别结果后，可发送指定按键，以便联动唤起翻译器等工具。\n- 新功能：命令行增加切换识别语言的指令。\n- 修Bug：低配置机器上有概率误报`OCR init timeout: 5s` 。[#154](https://github.com/hiroi-sora/Umi-OCR/issues/154) , [#156](https://github.com/hiroi-sora/Umi-OCR/issues/156)。\n- 调整：默认停止任务30秒后释放一次内存。\n\n### [v1.3.4](https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.4) `2023.4.26`\n<!-- 一周年纪念！ -->\n- 新功能：截图预览窗口。\n- 新功能：可用方向键微调截图框位置。\n- 修Bug：拖入图片时有几率卡退主窗口 [issue #126](https://github.com/hiroi-sora/Umi-OCR/issues/126) 。\n- 优化了一些处理流程。\n\n### [v1.3.3](https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.3) `2023.3.19`\n<!-- 4.5k★ 撒花~ -->\n- 新功能：命令行模式。\n- 新功能：识图完成的通知悬浮窗。\n- 新功能：自动清理引擎内存。\n- 修复了一些BUG，优化了一些UI表现。\n\n### [v1.3.2](https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.2) `2022.12.1`\n<!-- 3k★ 撒花~ -->\n- 新功能：创建开机启动项时，可选`不显示主窗口`。\n- 新功能：OCR结果输出到每个图片同名的单独txt文件。\n- 新功能：增加独立的设置语言窗口，可在多处点开，便于切换语言。\n- 新功能：合并段落添加`合并自然段-西文模式`，可在英文段落换行时补充空格。\n- 新功能：快捷识图可选`自动清空面板`，只显示本次识别结果，且隐藏时间信息。\n- 修复了一些BUG。\n\n### [v1.3.1](https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.1) `2022.11.4`\n<!-- 2k★ 撒花~ -->\n- 修Bug：快捷键模块重写，引入pynput库，舍弃keyboard库，解决几率失效、录制不正确等Bug。\n- 新功能：添加开机自启，桌面快捷方式，开始菜单快捷方式。\n- 新功能：多开软件时提示。\n- 新功能：截图时隐藏窗口。\n- 调整UI：使用频率极低的设置项设为隐藏的高级选项。\n- 优化：检查引擎组件是否存在。\n- 优化：`横排-合并多行-自然段` 优化逻辑，支持0~2全角空格首行缩进。\n\n### [v1.3.0](https://github.com/hiroi-sora/Umi-OCR/tree/release/1.3.0) `2022.9.29`\n- 新功能：框选截屏。\n- 新功能：系统托盘图标。\n- 新功能：引擎进程常驻。\n- 新功能：文本块后处理模块。\n- 新功能：自定义主输出栏字体。\n- 新功能：设置窗口弹出模式（保持置顶）。\n- 调整UI：自适应Win风格组件。\n- 修正了Bug：系统语言兼容性问题 [issue #16](https://github.com/hiroi-sora/Umi-OCR/issues/16) 。\n- 修正了Bug：微信图片粘贴问题 [issue #22](https://github.com/hiroi-sora/Umi-OCR/issues/22) 。\n- 更新PaddleOCR-json模块至`v1.2.1`，提供剪贴板支持。快捷识图通过剪贴板中转，无需再保存临时文件到硬盘。\n\n### [v1.2.6](https://github.com/hiroi-sora/Umi-OCR/tree/release/1.2.6) `2022.9.1`\n<!-- Takahara Umi酱生日快乐~ -->\n- 更新PaddleOCR-json模块至`v1.2.0`，提高识别速度、准确度。\n- 调整UI：更方便地用下拉框切换识别语言。\n- 调整UI：可以从主窗口任意位置/任意选项卡拖入图片。\n- 修正了Bug：提高程序健壮性，增加启动子进程时的更多异常处理情况。\n- 修正了Bug：彻底解决了对边缘过窄的图片，识别结果不准确的问题 [issue #7](https://github.com/hiroi-sora/Umi-OCR/issues/7) 。\n- 优化适配PP-OCRv3模型，彻底解决了v3版模型比v2慢、不准的问题 [issue #4](https://github.com/hiroi-sora/Umi-OCR/issues/4#issuecomment-1141735773) 。\n\n### v1.2.5 `2022.7.22`\n- 新功能：计划任务。识图完成后执行自动关机等任务。\n- 新功能：可选拖入文件夹时递归导入子文件夹中所有图片。\n- 调整UI：添加一些配置文件的快捷入口。\n\n### v1.2.4 `2022.6.4`\n- 新功能：可选识别剪贴板图片后自动复制识别的文本。\n- 补充功能：快捷键调用剪贴板识图时，若程序窗口被最小化，则恢复前台状态并挪到最前位置。\n  \n### v1.2.3 `2022.5.31`\n- 新功能：读取剪贴板图片。配置全局快捷键调用该功能。\n\n### v1.2.2 `2022.4.30`\n- 新功能：可选任务完成后自动打开输出文件或目录。\n\n### v1.2.1 `2022.4.16`\n- 更新PaddleOCR-json模块至`v1.1.1`，修正了可能得到错误包围盒的漏洞。\n\n### v1.2.0 `2022.4.8`\n- 可选生成图文链接.md文件，作为索引使用有更佳的观感。\n- 修改设置面板的样式，改为滚动面板以容纳更多设置选项。\n- 用户修改配置项后可自动保存。\n\n### v1.1.1 `2022.3.30`\n- 修正了Bug：退出忽略区域窗口时，OCR子进程未关闭。\n\n### v1.1.0 `2022.3.30`\n- 新功能：忽略区域窗口以虚线框 展示识别出的文字块。\n\n### v1.0.0 `2022.3.28`\n- “梦开始的地方”"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04,
          "content": "MIT License\n\nCopyright (c) 2023 hiroi-sora\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.76,
          "content": "<p align=\"left\">\n    <span>\n        <b>中文</b>\n    </span>\n    <span> • </span>\n    <a href=\"README_en.md\">\n        English\n    </a>\n    <span> • </span>\n    <a href=\"README_ja.md\">\n        日本語\n    </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR\">\n    <img width=\"200\" height=\"128\" src=\"https://tupian.li/images/2022/10/27/icon---256.png\" alt=\"Umi-OCR\">\n  </a>\n</p>\n\n<h1 align=\"center\">Umi-OCR 文字识别工具</h1>\n\n<p align=\"center\">\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR/releases/latest\">\n    <img src=\"https://img.shields.io/github/v/release/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"Umi-OCR\">\n  </a>\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"LICENSE\">\n  </a>\n  <a href=\"#下载发行版\">\n    <img src=\"https://img.shields.io/github/downloads/hiroi-sora/Umi-OCR/total?style=flat-square\" alt=\"forks\">\n  </a>\n  <a href=\"https://star-history.com/#hiroi-sora/Umi-OCR\">\n    <img src=\"https://img.shields.io/github/stars/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"stars\">\n  </a>\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR/forks\">\n    <img src=\"https://img.shields.io/github/forks/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"forks\">\n  </a>\n  <a href=\"https://hosted.weblate.org/engage/umi-ocr/\">\n    <img src=\"https://hosted.weblate.org/widget/umi-ocr/svg-badge.svg\" alt=\"翻译状态\">\n  </a>\n</p>\n\n<div align=\"center\">\n  <h3>\n    <a href=\"#目录\">\n      使用说明\n    </a>\n    <span> • </span>\n    <a href=\"#下载发行版\">\n      下载地址\n    </a>\n    <span> • </span>\n    <a href=\"CHANGE_LOG.md\">\n      更新日志\n    </a>\n    <span> • </span>\n    <a href=\"https://github.com/hiroi-sora/Umi-OCR/issues\">\n      提交Bug\n    </a>\n  </h3>\n</div>\n<br>\n\n<div align=\"center\">\n  <strong>免费，开源，可批量的离线OCR软件</strong><br>\n  <sub>适用于 Windows7 x64 、Linux x64\n</div><br>\n\n- **免费**：本项目所有代码开源，完全免费。\n- **方便**：解压即用，离线运行，无需网络。\n- **高效**：自带高效率的离线OCR引擎，内置多种语言识别库。\n- **灵活**：支持命令行、HTTP接口等外部调用方式。\n- **功能**：截图OCR / 批量OCR / PDF识别 / 二维码 / 公式识别\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/65599097ab5f4.png\" alt=\"1-标题-1.png\" style=\"width: 80%;\"></p>\n\n![1-标题-2.png](https://tupian.li/images/2023/11/19/6559909fdeeba.png)\n\n## 目录\n\n- [截图识别](#截图OCR)\n  - [排版解析](#文本后处理) - 识别不同排版，按正确顺序输出文字\n- [批量识别](#批量OCR)\n  - [忽略区域](#忽略区域) - 排除截图水印处的文字\n- [二维码](#二维码) 支持扫码或生成二维码图片\n- [文档识别](#文档识别) 从PDF扫描件中提取文本，或转为双层可搜索PDF\n- [全局设置](#全局设置)\n- [命令行调用](docs/README_CLI.md)\n- [HTTP接口](docs/http/README.md)\n- [构建项目（Windows、Linux）](#构建项目)\n\n## 使用源码\n\n开发者请务必阅读 [构建项目](#构建项目) 。\n\n## 下载发行版\n\n以下发布链接均长期维护，提供稳定版本的下载。\n\n- **蓝奏云** https://hiroi-sora.lanzoul.com/s/umi-ocr （国内推荐，免注册/无限速）\n- **GitHub** https://github.com/hiroi-sora/Umi-OCR/releases/latest\n- **Source Forge** https://sourceforge.net/projects/umi-ocr\n\n\n<details>\n<summary><b>•&nbsp;&nbsp;Scoop Installer</b>（点击展开）</summary>\n\n[Scoop](https://scoop.sh/) 是一款Windows下的命令行安装程序，可方便地管理多个应用。您可以先安装 Scoop ，再使用以下指令安装 `Umi-OCR` ：\n\n- 添加 `extras` 桶：\n```\nscoop bucket add extras\n```\n\n- （可选1）安装 Umi-OCR（自带 `Rapid-OCR` 引擎，兼容性好）：\n```\nscoop install extras/umi-ocr\n```\n\n- （可选2）安装 Umi-OCR（自带 `Paddle-OCR` 引擎，速度稍快）：\n```\nscoop install extras/umi-ocr-paddle\n```\n\n- 不要同时安装二者，快捷方式可能会被覆盖。但您可以额外导入 [插件](https://github.com/hiroi-sora/Umi-OCR_plugins) ，随时切换不同OCR引擎。\n\n</details>\n</br>\n\n## 开始使用\n\n软件发布包下载为 `.7z` 压缩包或 `.7z.exe` 自解压包。自解压包可在没有安装压缩软件的电脑上，解压文件。\n\n本软件无需安装。解压后，点击 `Umi-OCR.exe` 即可启动程序。\n\n遇到任何问题，请提 [Issue](https://github.com/hiroi-sora/Umi-OCR/issues) ，我会尽可能帮助你。\n\n## 界面语言\n\nUmi-OCR 支持的界面多国语言。在第一次打开软件时，将会按照你的电脑的系统设置，自动切换语言。\n\n如果需要手动切换语言，请参考下图，`全局设置`→`语言/Language` 。\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/65599c3f9e600.png\" alt=\"1-标题-1.png\" style=\"width: 80%;\"></p>\n\n## 标签页\n\nUmi-OCR v2 由一系列灵活好用的**标签页**组成。您可按照自己的喜好，打开需要的标签页。\n\n标签栏左上角可以切换**窗口置顶**。右上角能够**锁定标签页**，以防止日常使用中误触关闭标签页。\n\n### 截图OCR\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/65599097aba8e.png\" alt=\"2-截图-1.png\" style=\"width: 80%;\"></p>\n\n**截图OCR**：打开这一页后，就可以用快捷键唤起截图，识别图中的文字。\n- 左侧的图片预览栏，可直接用鼠标划选复制。\n- 右侧的识别记录栏，可以编辑文字，允许划选多个记录复制。\n- 也支持在别处复制图片，粘贴到Umi-OCR进行识别。\n- 关于 [公式识别](https://github.com/hiroi-sora/Umi-OCR/issues/254) 功能\n\n#### 文本后处理\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/6559909f3e378.png\" alt=\"2-截图-2.png\" style=\"width: 80%;\"></p>\n\n关于 **OCR文本后处理 - 排版解析方案**： 可以整理OCR结果的排版和顺序，使文本更适合阅读和使用。预设方案：\n- `多栏-按自然段换行`：适合大部分情景，自动识别多栏布局，按自然段规则进行换行。\n- `多栏-总是换行`：每段语句都进行换行。\n- `多栏-无换行`：强制将所有语句合并到同一行。\n- `单栏-按自然段换行`/`总是换行`/`无换行`：与上述类似，不过 不区分多栏布局。\n- `单栏-保留缩进`：适用于解析代码截图，保留行首缩进和行中空格。\n- `不做处理`：OCR引擎的原始输出，默认每段语句都进行换行。\n\n上述方案，均能自动处理横排和竖排（从右到左）的排版。（竖排文字还需要OCR引擎本身支持）\n\n---\n\n### 批量OCR\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/655990a2511e0.png\" alt=\"3-批量-1.png\" style=\"width: 80%;\"></p>\n\n**批量OCR**：这一页用于批量导入本地图片进行识别。\n- 支持格式：`jpg, jpe, jpeg, jfif, png, webp, bmp, tif, tiff`。\n- 保存识别结果的支持格式：`txt, jsonl, md, csv(Excel)`。\n- 与截图OCR一样，支持`文本后处理`功能，整理OCR文本的排版和顺序。\n- 没有数量上限，可一次性导入几百张图片进行任务。\n- 支持任务完成后自动关机/待机。\n- 如果要识别像素超大的长图或大图，请调整：**页面的设置→文字识别→限制图像边长→【调高数值】**。\n- 拥有特殊功能 `忽略区域` 。\n\n#### 忽略区域\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/6559911d28be7.png\" alt=\"3-批量-2.png\" style=\"width: 80%;\"></p>\n\n关于 **OCR文本后处理 - 忽略区域**： 批量OCR中的一种特殊功能，适用于排除图片中的不想要的文字。\n- 在批量识别页的右栏设置中可进入忽略区域编辑器。\n- 如上方样例，图片顶部和右下角存在多个水印 / LOGO。如果批量识别这类图片，水印会对识别结果造成干扰。\n- 按住右键，绘制多个矩形框。这些区域内的文字将在任务中被忽略。\n- 请尽量将矩形框画得大一些，完全包裹住水印所有可能出现的位置。\n- 注意，只有处于忽略区域框内部的整个文本块（而不是单个字符）会被忽略。如下图所示，黄色边框的深色矩形是一个忽略区域。那么只有`key_mouse`才会被忽略。`pubsub_connector.py`、`pubsub_service.py` 这两个文本块得以保留。\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/05/30/66587bf03ae15.png\" alt=\"忽略区域范围示例.png\" style=\"width: 80%;\"></p>\n\n---\n\n### 文档识别\n\n<p align=\"center\"><img src=\"https://github.com/hiroi-sora/Umi-OCR/assets/56373419/fc2266ee-b9b7-4079-8b10-6610e6da6cf5\" alt=\"\" style=\"width: 80%;\"></p>\n\n**文档识别**：\n- 支持格式：`pdf, xps, epub, mobi, fb2, cbz`。\n- 对扫描件进行OCR，或提取原有文本。可输出为 **双层可搜索PDF** 。\n- 支持设定 **忽略区域** ，可用于排除页眉页脚的文字。\n- 可设置任务完成后 **自动关机/休眠** 。\n\n---\n\n### 二维码\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/655991268d6b1.png\" alt=\"4-二维码-1.png\" style=\"width: 80%;\"></p>\n\n**扫码**：\n- 截图/粘贴/拖入本地图片，读取其中的二维码、条形码。\n- 支持一图多码。\n- 支持19种协议，如下：\n\n`Aztec`,`Codabar`,`Code128`,`Code39`,`Code93`,`DataBar`,`DataBarExpanded`,`DataMatrix`,`EAN13`,`EAN8`,`ITF`,`LinearCodes`,`MatrixCodes`,`MaxiCode`,`MicroQRCode`,`PDF417`,`QRCode`,`UPCA`,`UPCE`\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/6559911cda737.png\" alt=\"4-二维码-2.png\" style=\"width: 80%;\"></p>\n\n**生成码**：\n- 输入文本，生成二维码图片。\n- 支持19种协议和**纠错等级**等参数。\n\n---\n\n### 全局设置\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/655991252e780.png\" alt=\"5-全局设置-1.png\" style=\"width: 80%;\"></p>\n\n**全局设置**：在这里可以调整软件的全局参数。常用功能如下：\n- 一键添加快捷方式或设置开机自启。\n- 更改界面**语言**。Umi支持繁中、英语、日语等语言。\n- 切换界面**主题**。Umi拥有多个亮/暗主题。\n- 调整界面**文字的大小**和**字体**。\n- 切换OCR插件。\n- **渲染器**：软件界面默认支持显卡加速渲染。如果在你的机器上出现截屏闪烁、UI错位的情况，请调整`界面和外观` → `渲染器` ，尝试切换到不同渲染方案，或关闭硬件加速。\n\n## 调用接口：\n\n- [命令行手册](docs/README_CLI.md)\n- [HTTP接口手册](docs/http/README.md)\n\n--- \n\n## 软件本地化翻译：\n\n感谢以下译者，为 Umi-OCR 贡献了本地化翻译工作：（排名不分先后）\n\n| 译者                                                            | 贡献语言                  |\n| --------------------------------------------------------------- | ------------------------- |\n| [bob](https://hosted.weblate.org/user/q021)                     | English, 繁體中文, 日本語 |\n| [Qingzheng Gao](https://github.com/QZGao)                       | English, 繁體中文         |\n| [Weng, Chia-Ling](https://hosted.weblate.org/user/ChiaLingWeng) | English, 繁體中文         |\n| [linzow](https://hosted.weblate.org/user/linzow)                | English, 繁體中文         |\n| [Eric Guo](https://hosted.weblate.org/user/qwedc001)            | English                   |\n| [steven0081](https://hosted.weblate.org/user/steven0081)        | English                   |\n| [Marcos i](https://hosted.weblate.org/user/ultramarkorj9)       | English                   |\n| [plum7x](https://hosted.weblate.org/user/plum7x)                | 繁體中文                  |\n| [hugoalh](https://hosted.weblate.org/user/hugoalh)              | 繁體中文                  |\n| [ドコモ光](https://hosted.weblate.org/user/umren190402)         | 日本語                    |\n| [杨鹏](https://hosted.weblate.org/user/ypf)                     | Português                 |\n\n如果有信息错误或人员缺漏，请在 [这个讨论](https://github.com/hiroi-sora/Umi-OCR/discussions/449) 中回复。\n\n本项目使用在线平台 [Weblate: Umi-OCR](https://hosted.weblate.org/engage/umi-ocr/) 进行本地化翻译协作。我们欢迎任何用户参与翻译工作，您可校对、补充现有语言，或添加新语言。\n\n---\n\n## 关于项目结构\n\n### 各仓库：\n\n- [主仓库](https://github.com/hiroi-sora/Umi-OCR) 👈\n- [插件库](https://github.com/hiroi-sora/Umi-OCR_plugins)\n- [Windows 运行库](https://github.com/hiroi-sora/Umi-OCR_runtime_windows)\n- [Linux 运行库](https://github.com/hiroi-sora/Umi-OCR_runtime_linux)\n\n### 工程结构：\n\n`**` 后缀表示本仓库(`主仓库`)包含的内容。\n\n```\nUmi-OCR\n├─ Umi-OCR.exe\n├─ umi-ocr.sh\n└─ UmiOCR-data\n   ├─ main.py **\n   ├─ version.py **\n   ├─ qt_res **\n   │  └─ 项目qt资源，包括图标和qml源码\n   ├─ py_src **\n   │  └─ 项目python源码\n   ├─ plugins\n   │  └─ 插件\n   └─ i18n **\n      └─ 翻译文件\n```\n\n支持的离线OCR引擎：\n\n- [PaddleOCR-json](https://github.com/hiroi-sora/PaddleOCR-json)\n- [RapidOCR-json](https://github.com/hiroi-sora/RapidOCR-json)\n\n运行环境框架：\n\n- [PyStand](https://github.com/skywind3000/PyStand) 定制版\n\n## 构建项目\n\n### 第零步：（可选）fork本项目\n\n### 第一步：下载代码\n\n请参考 [更新日志](CHANGE_LOG.md) 开头的说明。\n\n### 后续步骤：\n\n请跳转下述仓库，完成对应平台的开发/运行环境部署。\n\n- [Windows](https://github.com/hiroi-sora/Umi-OCR_runtime_windows)\n- [Linux](https://github.com/hiroi-sora/Umi-OCR_runtime_linux)\n\n---\n\n## 赞助\n\nUmi-OCR 项目主要由作者 [hiroi-sora](https://github.com/hiroi-sora) 用业余时间在开发和维护。如果您喜欢这款软件，欢迎赞助。\n\n- 国内用户可通过 [爱发电](https://afdian.com/a/hiroi-sora) 赞助作者。\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=hiroi-sora/Umi-OCR&type=Date)](https://star-history.com/#hiroi-sora/Umi-OCR&Date)\n\n## [更新日志](CHANGE_LOG.md)\n\n## 开发计划\n\n<details>\n<summary>已完成的工作</summary>\n\n- 标签页框架。\n- OCR API控制器。\n- OCR 任务控制器。\n- 主题管理器，支持切换浅色/深色主题主题。\n- 实现 **批量OCR**。\n- 实现 **截图OCR**。\n- 快捷键机制。\n- 系统托盘菜单。\n- 文本块后处理（排版优化）。\n- 引擎内存清理。\n- 软件界面多国语言。\n- 命令行模式。\n- Win7兼容。\n- Excel（csv）输出格式。\n- `Esc`中断截图操作\n- 外置主题文件\n- 字体切换\n- 加载动画\n- 忽略区域。\n- 二维码识别。\n- 批量识别页面的图片预览窗口。\n- PDF识别。\n- 调用本地图片浏览器打开图片。 [#335](https://github.com/hiroi-sora/Umi-OCR/issues/335)\n- 重复上一次截图。 [#357](https://github.com/hiroi-sora/Umi-OCR/issues/357)\n- 修Bug：文档识别在Windows7系统的兼容性问题。\n- HTTP/命令行接口添加二维码识别/生成功能。 (#423)\n- 二维码接口的文档。\n- Linux 平台移植。\n- HTTP 文档识别接口。\n\n</details>\n\n<!-- ##### 正在进行的工作 -->\n\n##### 远期计划\n\n<details>\n<summary>展开</summary>\n\n这些是预想中的功能，在开发初期已预留好接口，将在远期慢慢实现。\n\n但开发途中受限于实际情况，可能更改功能设计、新增及取消功能。\n\n- [ ] 重构底层插件机制。\n- [ ] 在线 OCR API 插件。\n- [ ] 独立的数学公式识别插件。\n- [ ] “数学公式”标签页，提供独立的数学公式识别/Latex渲染。\n- [ ] 检查更新机制。\n- [ ] 排版解析之外的文本后处理模块（如保留数字、半全角字符转换、文本纠错）。\n- [ ] 关键接口函数添加事件触发方式。\n\n- 基于GPU的离线OCR。\n- 图片翻译\n- 离线翻译。\n- 固定区域识别。\n- 识别表格图片，输出为Excel。\n- 历史记录系统。\n- 兼容 MacOS / Ubuntu 等平台。\n\n</details>\n"
        },
        {
          "name": "README_en.md",
          "type": "blob",
          "size": 11.88,
          "content": "<p align=\"left\">\n    <a href=\"README.md\">\n        中文\n    </a>\n    <span> • </span>\n    <span>\n        <b>English</b>\n    </span>\n    <span> • </span>\n    <a href=\"README_ja.md\">\n        日本語\n    </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR\">\n    <img width=\"200\" height=\"128\" src=\"https://tupian.li/images/2022/10/27/icon---256.png\" alt=\"Umi-OCR\">\n  </a>\n</p>\n\n<h1 align=\"center\">Umi-OCR</h1>\n\n<p align=\"center\">\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR/releases/latest\">\n    <img src=\"https://img.shields.io/github/v/release/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"Umi-OCR\">\n  </a>\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"LICENSE\">\n  </a>\n  <a href=\"#download-releases\">\n    <img src=\"https://img.shields.io/github/downloads/hiroi-sora/Umi-OCR/total?style=flat-square\" alt=\"forks\">\n  </a>\n  <a href=\"https://star-history.com/#hiroi-sora/Umi-OCR\">\n    <img src=\"https://img.shields.io/github/stars/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"stars\">\n  </a>\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR/forks\">\n    <img src=\"https://img.shields.io/github/forks/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"forks\">\n  </a>\n  <a href=\"https://hosted.weblate.org/engage/umi-ocr/\">\n    <img src=\"https://hosted.weblate.org/widget/umi-ocr/svg-badge.svg\" alt=\"翻译状态\">\n  </a>\n</p>\n\n<div align=\"center\">\n  <h3>\n    <a href=\"#usage\">\n      Usage\n    </a>\n    <span> • </span>\n    <a href=\"#download-releases\">\n      Download Releases\n    </a>\n    <span> • </span>\n    <a href=\"CHANGE_LOG.md\">\n      Changelog\n    </a>\n    <span> • </span>\n    <a href=\"https://github.com/hiroi-sora/Umi-OCR/issues\">\n      Issue a problem\n    </a>\n  </h3>\n</div>\n<br>\n\n<div align=\"center\">\n  <strong>Free, Open-source, Batch Offline OCR Software</strong><br>\n  <sub>Compatible with Windows7 x64 and above</sub>\n</div><br>\n\n- **Free**: All the code of this project is open-source and completely free.\n- **Convenient**: Unzip and use, run offline, no need for network.\n- **Efficient**: Comes with a highly efficient offline OCR engine. As long as the computer performance is sufficient, it can be faster than online OCR services.\n- **Flexible**: Supports customizable interface, and supports multiple calling methods such as command-line and HTTP API.\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ec301b55.png\" alt=\"1-标题-1.png\" style=\"width: 80%;\"></p>\n\n![1-标题-2.png](https://tupian.li/images/2023/11/19/6559909fdeeba.png)\n\n## Usage:\n\n- [Usage:](#usage)\n- [Using the Source Code:](#using-the-source-code)\n- [Download Releases:](#download-releases)\n- [Getting Started](#getting-started)\n- [Interface Language](#interface-language)\n  - [Help us translate / 帮助我们翻译！](#help-us-translate--帮助我们翻译)\n- [Tabbed Interface](#tabbed-interface)\n  - [Screenshot OCR](#screenshot-ocr)\n    - [Paragraph Merge](#paragraph-merge)\n  - [Batch OCR](#batch-ocr)\n    - [Ignore Regions](#ignore-regions)\n  - [Batch Documents OCR](#batch-documents-ocr)\n  - [QR Code](#qr-code)\n  - [Global Settings](#global-settings)\n- [API Usage:](#api-usage)\n- [About Project Structure](#about-project-structure)\n  - [Repositories:](#repositories)\n- [Build the Project](#build-the-project)\n  - [Step 0: (Optional) Fork this project](#step-0-optional-fork-this-project)\n  - [Step 1: Download the code](#step-1-download-the-code)\n  - [Next Steps:](#next-steps)\n- [CHANGE LOG](#change-log)\n\n## Using the Source Code:\n\nDevelopers should read [Building the Project](#Build-the-Project) before proceeding.\n\n## Download Releases:\n\n- **GitHub** https://github.com/hiroi-sora/Umi-OCR/releases/latest\n- **Source Forge** https://sourceforge.net/projects/umi-ocr\n- **Lanzou (蓝奏云)** https://hiroi-sora.lanzoul.com/s/umi-ocr\n\n<details>\n<summary><b>•&nbsp;&nbsp;Scoop Installer</b> (Click to expand)</summary>\n\n[Scoop](https://scoop.sh/) is a command-line installer for Windows that facilitates the management of multiple applications. You can install Scoop first and then use the following commands to install `Umi-OCR`:\n\n- Add the `extras` bucket:\n```\nscoop bucket add extras\n```\n\n- (Optional 1) Install Umi-OCR (comes with the `Rapid-OCR` engine, better compatibility):\n```\nscoop install extras/umi-ocr\n```\n\n- (Optional 2) Install Umi-OCR (comes with the `Paddle-OCR` engine, slightly faster):\n```\nscoop install extras/umi-ocr-paddle\n```\n\n- Do not install both, as the shortcuts may be overwritten. However, you can import additional [plugins](https://github.com/hiroi-sora/Umi-OCR_plugins) to switch between different OCR engines at any time.\n\n</details>\n\n## Getting Started\n\nThe software release package is available in `.7z` compressed format or as a self-extracting `.7z.exe` package. The self-extracting package can be used to extract files on a computer without compression software installed.\n\nThis software does not require installation. After extraction, simply click on `Umi-OCR.exe` to start the program.\n\nIf you encounter any problems, please submit an [Issue](https://github.com/hiroi-sora/Umi-OCR/issues) and I will do my best to assist you.\n\n## Interface Language\n\nUmi-OCR supports multiple languages for its interface. When you open the software for the first time, it will automatically switch to the language based on your computer's system settings.\n\nIf you need to manually switch languages, please refer to the following figure, `全局设置`→`语言/Language` .\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/65599c3f9e600.png\" alt=\"1-标题-1.png\" style=\"width: 80%;\"></p>\n\n### Help us translate / 帮助我们翻译！\n\nYou can participate in translation work online on Weblate:\n\nhttps://hosted.weblate.org/engage/umi-ocr/\n\n## Tabbed Interface\n\nUmi-OCR v2 is composed of a series of flexible and easy-to-use **tabbed interfaces**. You can open the required tabbed interface according to your preferences.\n\nThe top left corner of the tab bar can be used to switch **window always on top**. The top right corner can be used to **lock the tabbed interface** to prevent accidental closure during daily use.\n\n### Screenshot OCR\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecb4dfb4.png\" alt=\"2-截图-1.png\" style=\"width: 80%;\"></p>\n\n**Screenshot OCR**: After opening this page, you can use a keyboard shortcut to capture a screenshot and recognize the text in the image.\n\n- The left-side image preview panel allows you to select and copy text with your mouse.\n- The right-side recognition record panel allows you to edit text and select and copy multiple records.\n- It also supports copying images from elsewhere and pasting them into Umi-OCR for recognition.\n\n#### Paragraph Merge\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecc62ac9.png\" alt=\"2-截图-2.png\" style=\"width: 80%;\"></p>\n\nAbout **OCR Text Post-Processing - Paragraph Merge**: This feature can organize the layout and order of OCR results to make the text more suitable for reading and use. The preset schemes are:\n\n- **Single line**: Merge text on the same line, suitable for most scenarios.\n- **Multiple lines - natural paragraphs**: Intelligently recognize and merge text belonging to the same paragraph, suitable for most scenarios, as shown in the figure above.\n- **Multiple lines - code block**: Try to restore the original indentation and spacing of the text. Suitable for recognizing code snippets or scenes that require retaining spaces.\n- **Vertical layout**: Suitable for vertical layout. Needs to be used in conjunction with a model library that also supports vertical layout recognition.\n\n---\n\n### Batch OCR\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecdc5197.png\" alt=\"3-批量-1.png\" style=\"width: 80%;\"></p>\n\n**Batch OCR**: This page supports batch importing local images for recognition.\n\n- The recognized content can be saved in various formats such as txt/jsonl/md/csv(Excel).\n- Supports `text post-processing` technology, which can recognize text belonging to the same natural paragraph and merge it. It also supports multiple processing schemes such as code blocks and vertical text.\n- There is no limit on the number of images that can be imported for processing at one time, and the software can automatically shut down or sleep after completing the task.\n\n#### Ignore Regions\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecbc0021.png\" alt=\"3-批量-2.png\" style=\"width: 80%;\"></p>\n\nAbout **OCR Text Post-Processing - Ignore Regions**: This is a special function in batch OCR that is used to exclude unwanted text in images.\n\n- The ignore region editor can be accessed in the right column of the batch recognition page settings.\n- As shown in the example above, there are multiple watermarks/LOGOs at the top and bottom right corner of the image. If these images are recognized in batches, the watermarks will interfere with the recognition results.\n- Hold down the right mouse button to draw multiple rectangular boxes. The text inside these areas will be ignored during the task.\n- Please try to draw the rectangular boxes larger, completely wrapping all possible positions of the watermark.\n\n---\n\n### Batch Documents OCR\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecc8bfd4.png\" alt=\"\" style=\"width: 80%;\"></p>\n\n---\n\n### QR Code\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ed01f5b2.png\" alt=\"4-二维码-1.png\" style=\"width: 80%;\"></p>\n\n**Scan Code**:\n\n- You can capture screenshots, paste, or drag local images to read QR codes and barcodes.\n- Supports multiple codes in one image.\n- Supports 19 protocols, as follows:\n\n`Aztec`,`Codabar`,`Code128`,`Code39`,`Code93`,`DataBar`,`DataBarExpanded`,`DataMatrix`,`EAN13`,`EAN8`,`ITF`,`LinearCodes`,`MatrixCodes`,`MaxiCode`,`MicroQRCode`,`PDF417`,`QRCode`,`UPCA`,`UPCE`,\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ed001437.png\" alt=\"4-二维码-2.png\" style=\"width: 80%;\"></p>\n\n**Generate Code**:\n\n- Enter text to generate a QR code image.\n- Supports 19 protocols and parameters such as **error correction level**.\n\n---\n\n### Global Settings\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ed16f4e0.png\" alt=\"5-全局设置-1.png\" style=\"width: 80%;\"></p>\n\n**Global Settings**: Here you can adjust the global parameters of the software. Common features include:\n\n- One-click to add shortcuts or set auto-startup.\n- Change the interface **language**. Umi supports traditional Chinese, English, Japanese, and other languages.\n- Switch interface **themes**. Umi has multiple light/dark themes.\n- Adjust the **font size** and **font** of the interface text.\n- Switch OCR plugins.\n- **Renderer**: The software interface defaults to support GPU-accelerated rendering. If you encounter screen flickering or UI misalignment on your machine, please adjust `Interface and Appearance` → `Renderer`, try switching to different rendering schemes, or turn off hardware acceleration.\n\n---\n\n## API Usage:\n\n- [Command-line manual](docs/README_CLI.md)\n- [HTTP API manual](docs/http/README.md)\n\n## About Project Structure\n\n### Repositories:\n\n- [Main Repository](https://github.com/hiroi-sora/Umi-OCR) 👈\n- [Plugin Repository](https://github.com/hiroi-sora/Umi-OCR_plugins)\n- [Win Runtime Library](https://github.com/hiroi-sora/Umi-OCR_runtime_windows)\n\n## Build the Project\n\n### Step 0: (Optional) Fork this project\n\n### Step 1: Download the code\n\nChoose one of the following:\n\n- Pull your forked repository to your local machine\n- Download the zip source code package of this repository\n- Clone this repository\n\n### Next Steps:\n\nPlease go to the following repositories to complete the development/runtime environment deployment for the corresponding platform.\n\nThis project also has a very simple one-click packaging script, which can be found in the following repositories.\n\n- [Windows](https://github.com/hiroi-sora/Umi-OCR_runtime_windows)\n- Cross-platform support is under development.\n\n## [CHANGE LOG](CHANGE_LOG.md)\n"
        },
        {
          "name": "README_ja.md",
          "type": "blob",
          "size": 13.42,
          "content": "<p align=\"left\">\n    <a href=\"README.md\">\n        中文\n    </a>\n    <span> • </span>\n    <a href=\"README_en.md\">\n        English\n    </a>\n    <span> • </span>\n    <span>\n        <b>日本語</b>\n    </span>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR\">\n    <img width=\"200\" height=\"128\" src=\"https://tupian.li/images/2022/10/27/icon---256.png\" alt=\"Umi-OCR\">\n  </a>\n</p>\n\n<h1 align=\"center\">Umi-OCR</h1>\n\n<p align=\"center\">\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR/releases/latest\">\n    <img src=\"https://img.shields.io/github/v/release/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"Umi-OCR\">\n  </a>\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"LICENSE\">\n  </a>\n  <a href=\"#ダウンロード\">\n    <img src=\"https://img.shields.io/github/downloads/hiroi-sora/Umi-OCR/total?style=flat-square\" alt=\"ダウンロード\">\n  </a>\n  <a href=\"https://star-history.com/#hiroi-sora/Umi-OCR\">\n    <img src=\"https://img.shields.io/github/stars/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"スター\">\n  </a>\n  <a href=\"https://github.com/hiroi-sora/Umi-OCR/forks\">\n    <img src=\"https://img.shields.io/github/forks/hiroi-sora/Umi-OCR?style=flat-square\" alt=\"フォーク\">\n  </a>\n  <a href=\"https://hosted.weblate.org/engage/umi-ocr/\">\n    <img src=\"https://hosted.weblate.org/widget/umi-ocr/svg-badge.svg\" alt=\"翻译状态\">\n  </a>\n</p>\n\n<div align=\"center\">\n  <strong>無料、オープンソース、大量文字が一括認識できるのソフトウェア</strong><br>\n  <sub>Windows7 x64以上と互換性があります</sub>\n</div><br>\n\n- **無料**: このプロジェクトのすべてのコードはオープンソースで完全に無料です。\n- **便利**: 解凍して使用し、オフラインで実行し、ネットワークは必要ありません。\n- **効率的**: 高効率のオフライン OCR エンジンが付属しています。コンピュータのパフォーマンスが十分であれば、オンライン OCR サービスよりも速くなることがあります。\n- **柔軟**: カスタマイズ可能なインターフェースをサポートし、コマンドラインや HTTP API など、複数の呼び出し方法をサポートします。\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ec301b55.png\" alt=\"1-タイトル-1.png\" style=\"width: 80%;\"></p>\n\n![1-タイトル-2.png](https://tupian.li/images/2023/11/19/6559909fdeeba.png)\n\n## ソースコードの使用:\n\n開発者は続ける前に、[プロジェクトのビルド](#プロジェクトのビルド)を読んでください\n\n## リリースのダウンロード:\n\n- **GitHub** https://github.com/hiroi-sora/Umi-OCR/releases/latest\n- **Source Forge** https://sourceforge.net/projects/umi-ocr\n- **Lanzou (蓝奏云)** https://hiroi-sora.lanzoul.com/s/umi-ocr\n\n<details>\n<summary><b>• Scoop インストーラー</b></summary>\n\n[Scoop](https://scoop.sh/) はWindowsで動作するコマンドラインインストーラーで、複数のアプリケーションを簡単に管理できます。まず Scoop をインストールし、次に以下のコマンドを使用して `Umi-OCR` をインストールしてください：\n\n- `extras` バケットを追加：\n```\nscoop bucket add extras\n```\n\n- （オプション1）Umi-OCR をインストール（ `Rapid-OCR` エンジン付属、互換性が高い）：\n```\nscoop install extras/umi-ocr\n```\n\n- （オプション2）Umi-OCR をインストール（ `Paddle-OCR` エンジン付属、やや高速）：\n```\nscoop install extras/umi-ocr-paddle\n```\n\n- 両方を同時にインストールしないでください。ショートカットが上書きされる可能性があります。しかし、[プラグイン](https://github.com/hiroi-sora/Umi-OCR_plugins) を追加することで、異なるOCRエンジンをいつでも切り替えることができます。\n\n</details>\n\n## はじめに\n\nソフトウェアリリースパッケージは、`.7z`圧縮形式または自己解凍`.7z.exe`パッケージで利用可能です。自己解凍パッケージは、圧縮ソフトウェアがインストールされていないコンピューターでファイルを抽出するために使用できます。\n\nこのソフトウェアはインストールを必要としません。抽出後、`Umi-OCR.exe`をクリックしてプログラムを開始します。\n\n問題が発生した場合は、[Issue](https://github.com/hiroi-sora/Umi-OCR/issues)を提出してください。最善を尽くしてサポートします。\n\n## インターフェース言語\n\nUmi-OCR は、インターフェースの複数の言語をサポートしています。ソフトウェアを初めて開くと、コンピューターのシステム設定に基づいて自動的に言語が切り替わります。\n\n言語を手動で切り替える必要がある場合は、以下の図を参照してください。`全局设置`→`语言/Language`。\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2023/11/19/65599c3f9e600.png\" alt=\"1-タイトル-1.png\" style=\"width: 80%;\"></p>\n\n### 翻訳を手伝ってください\n\nWeblate オンラインで翻訳作業に参加できます:\n\nhttps://hosted.weblate.org/engage/umi-ocr/\n\n## タブインターフェース\n\nUmi-OCR v2 は、一連の柔軟で使いやすい**タブインターフェース**で構成されています。好みに応じて必要なタブインターフェースを開くことができます。\n\nタブバーの左上隅を使用して**ウィンドウ常に最前面**を切り替えることができます。右上隅は、日常使用中の偶発的な閉鎖を防ぐために**タブインターフェースをロック**するために使用できます。\n\n### スクリーンショット OCR\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecb4dfb4.png\" alt=\"2-スクリーンショット-1.png\" style=\"width: 80%;\"></p>\n\n**スクリーンショット OCR**: このページを開いた後、キーボードショートカットを使用してスクリーンショットをキャプチャし、画像内のテキストを認識することができます。\n\n- 左側の画像プレビューパネルを使用して、マウスでテキストを選択してコピーすることができます。\n- 右側の認識レコードパネルを使用して、テキストを編集し、複数のレコードを選択してコピーすることができます。\n- 他の場所から画像をコピーして Umi-OCR に貼り付け、認識することもサポートしています。\n\n#### 段落マージ\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecc62ac9.png\" alt=\"2-スクリーンショット-2.png\" style=\"width: 80%;\"></p>\n\n**OCR テキスト後処理 - 段落マージ**について: この機能は、OCR 結果のレイアウトと順序を整理し、テキストを読みやすく使用しやすくすることができます。プリセットスキームは以下の通りです。\n\n- **単一行**: 同じ行上のテキストをマージします。ほとんどのシナリオに適しています。\n- **複数行 - 自然な段落**: 同じ段落に属するテキストを知的に認識してマージします。ほとんどのシナリオに適しており、上記の図に示されています。\n- **複数行 - コードブロック**: テキストの元のインデントとスペーシングを復元しようとします。コードスニペットやスペースを保持する必要があるシーンを認識するのに適しています。\n- **縦書きレイアウト**: 縦書きレイアウトに適しています。縦書き認識もサポートするモデルライブラリと併用する必要があります。\n\n---\n\n### バッチ OCR\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecdc5197.png\" alt=\"3-バッチ-1.png\" style=\"width: 80%;\"></p>\n\n**バッチ OCR**: このページでは、ローカル画像をバッチでインポートして認識することがサポートされています。\n\n- 認識されたコンテンツは、txt/jsonl/md/csv(Excel)などのさまざまな形式で保存できます。\n- `テキスト後処理`技術をサポートし、同じ自然な段落に属するテキストを認識してマージすることができます。また、コードブロックや縦書きテキストなど、複数の処理スキームもサポートしています。\n- 一度に処理できる画像の数に制限はなく、タスクを完了した後、ソフトウェアは自動的にシャットダウンまたはスリープすることができます。\n\n#### 無視域\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecbc0021.png\" alt=\"3-バッチ-2.png\" style=\"width: 80%;\"></p>\n\n**OCR テキスト後処理 - 無視域**について: これは、バッチ OCR の特別な機能で、画像内の望ましくないテキストを除外するために使用されます。\n\n- 無視領域エディタは、バッチ認識ページ設定の右側の列でアクセスできます。\n- 上記の例のように、画像の上部と右下隅に複数の透かし/LOGO があります。これらの画像がバッチで認識される場合、透かしは認識結果に干渉します。\n- 右マウスボタンを押し続けて、複数の長方形ボックスを描画します。これらのエリア内のテキストは、タスク中に無視されます。\n- 長方形ボックスをできるだけ大きく描画し、透かしのすべての可能な位置を完全に包むようにしてください。\n\n---\n\n### 大量文章のｏｃｒ\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ecc8bfd4.png\" alt=\"\" style=\"width: 80%;\"></p>\n\n---\n\n### QR コード\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ed01f5b2.png\" alt=\"4-QRコード-1.png\" style=\"width: 80%;\"></p>\n\n**スキャンコード**:\n\n- スクリーンショットをキャプチャしたり、貼り付けたり、ローカル画像をドラッグして、QR コードやバーコードを読み取ることができます。\n- 1 つの画像で複数のコードをサポートします。\n- 以下の 19 のプロトコルをサポートします:\n\n`Aztec`,`Codabar`,`Code128`,`Code39`,`Code93`,`DataBar`,`DataBarExpanded`,`DataMatrix`,`EAN13`,`EAN8`,`ITF`,`LinearCodes`,`MatrixCodes`,`MaxiCode`,`MicroQRCode`,`PDF417`,`QRCode`,`UPCA`,`UPCE`,\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ed001437.png\" alt=\"4-QRコード-2.png\" style=\"width: 80%;\"></p>\n\n**コード生成**:\n\n- テキストを入力して QR コード画像を生成します。\n- **誤り訂正レベル**などのパラメータを含む 19 のプロトコルをサポートします。\n\n---\n\n### グローバル設定\n\n<p align=\"center\"><img src=\"https://tupian.li/images/2024/03/27/66040ed16f4e0.png\" alt=\"5-グローバル設定-1.png\" style=\"width: 80%;\"></p>\n\n**グローバル設定**: ここでは、ソフトウェアのグローバルパラメータを調整できます。一般的な機能には、以下が含まれます:\n\n- ショートカットを一度に追加するか、自動起動を設定します。\n- インターフェースの**言語**を変更します。Umi は繁体字中国語、英語、日本語などの言語をサポートしています。\n- インターフェースの**テーマ**を切り替えます。Umi には複数のライト/ダークテーマがあります。\n- インターフェーステキストの**フォントサイズ**と**フォント**を調整します。\n- OCR プラグインを切り替えます。\n- **レンダラー**: ソフトウェアインターフェースは、デフォルトで GPU 加速レンダリングをサポートしています。画面のちらつきや UI の位置ずれが発生する場合は、`インターフェースと外観` → `レンダラー`に移動して、異なるレンダリングスキームに切り替えるか、ハードウェアアクセラレーションをオフにしてみてください。\n\n---\n\n## API の使用:\n\n- [コマンドラインマニュアル](docs/README_CLI.md)\n- [HTTP API マニュアル](docs/http/README.md)\n\n## プロジェクト構造について\n\n### リポジトリ:\n\n- [メインリポジトリ](https://github.com/hiroi-sora/Umi-OCR) 👈\n- [プラグインリポジトリ](https://github.com/hiroi-sora/Umi-OCR_plugins)\n- [Win ランタイムライブラリ](https://github.com/hiroi-sora/Umi-OCR_runtime_windows)\n\n## プロジェクトのビルド\n\n### ステップ 0: (オプション) このプロジェクトをフォークする\n\n### ステップ 1: コードをダウンロードする\n\n以下のいずれかを選択してください:\n\n- フォークしたリポジトリをローカルマシンにプルする\n- このリポジトリの zip ソースコードパッケージをダウンロードする\n- このリポジトリをクローンする\n\n### 次のステップ:\n\n対応するプラットフォームの開発/ランタイム環境デプロイメントを完了するには、以下のリポジトリに進んでください。\n\nこのプロジェクトには、非常にシンプルなワンクリックパッケージングスクリプトもあり、以下のリポジトリで見つけることができます。\n\n- [Windows](https://github.com/hiroi-sora/Umi-OCR_runtime_windows)\n- クロスプラットフォームサポートは開発中です。\n\n## [変更ログ](CHANGE_LOG.md)\n"
        },
        {
          "name": "UmiOCR-data",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}