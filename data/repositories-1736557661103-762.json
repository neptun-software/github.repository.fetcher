{
  "metadata": {
    "timestamp": 1736557661103,
    "page": 762,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AllThingsSmitty/css-protips",
      "stars": 28598,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 2.29,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\nBy adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project maintainer at mjsmithme@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. Maintainers are obligated to maintain confidentiality with regard to the reporter of an incident.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.3.0, available at [http://contributor-covenant.org/version/1/3/0/](http://contributor-covenant.org/version/1/3/0/)."
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.66,
          "content": "# Contribution Guidelines\n\nPlease note that this project is released with a [Contributor Code of Conduct](CODE-OF-CONDUCT.md). By participating in this project you agree to abide by its terms.\n\n\n## Table of Contents\n\n- [Adding to This List](#adding-to-this-list)\n- [Updating Your Pull Request](#updating-your-pull-request)\n\n\n## Adding to This List\n\nPlease ensure your pull request adheres to the following guidelines:\n\n* Search open and closed PRs to avoid duplicate suggestions.\n* Only submit CSS tips that you think would be useful to others. This implies each tip has enough succinct content to describe why it's useful.\n* Add your tip at the bottom of the [README](https://github.com/AllThingsSmitty/css-protips/blob/master/README.md) document. Add a link to your tip at the bottom of the table of contents.\n* Use [title-case](https://titlecaseconverter.com/).\n* Code formatting should follow standard [CSSLint](http://www.csslint.net) default settings, including:\n  * Indent with two spaces\n  * Use shorthand, e.g., `margin: 10px 10px 5px;`\n  * Use double quotes, e.g., `background: url(\"logo.svg\");`\n  * Sort properties alphabetically\n* Make sure your text editor is set to remove trailing whitespace.\n* Check your spelling and grammar.\n* The PR should have a useful title.\n\nThank you for your suggestions!\n\n\n## Updating Your Pull Request\n\nSometimes a maintainer will ask you to edit your pull request before it's included. This is normally due to spelling errors or because your PR didn't match the above guidelines guidelines. [This write-up](https://github.com/RichardLitt/knowledge/blob/master/github/amending-a-commit-guide.md) covers the different ways you can change a pull request."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.4,
          "content": "CC0 1.0 Universal\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator and\nsubsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for the\npurpose of contributing to a commons of creative, cultural and scientific\nworks (\"Commons\") that the public can reliably and without fear of later\nclaims of infringement build upon, modify, incorporate in other works, reuse\nand redistribute as freely as possible in any form whatsoever and for any\npurposes, including without limitation commercial purposes. These owners may\ncontribute to the Commons to promote the ideal of a free culture and the\nfurther production of creative, cultural and scientific works, or to gain\nreputation or greater distribution for their Work in part through the use and\nefforts of others.\n\nFor these and/or other purposes and motivations, and without any expectation\nof additional consideration or compensation, the person associating CC0 with a\nWork (the \"Affirmer\"), to the extent that he or she is an owner of Copyright\nand Related Rights in the Work, voluntarily elects to apply CC0 to the Work\nand publicly distribute the Work under its terms, with knowledge of his or her\nCopyright and Related Rights in the Work and the meaning and intended legal\neffect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not limited\nto, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display, communicate,\n  and translate a Work;\n\n  ii. moral rights retained by the original author(s) and/or performer(s);\n\n  iii. publicity and privacy rights pertaining to a person's image or likeness\n  depicted in a Work;\n\n  iv. rights protecting against unfair competition in regards to a Work,\n  subject to the limitations in paragraph 4(a), below;\n\n  v. rights protecting the extraction, dissemination, use and reuse of data in\n  a Work;\n\n  vi. database rights (such as those arising under Directive 96/9/EC of the\n  European Parliament and of the Council of 11 March 1996 on the legal\n  protection of databases, and under any national implementation thereof,\n  including any amended or successor version of such directive); and\n\n  vii. other similar, equivalent or corresponding rights throughout the world\n  based on applicable law or treaty, and any national implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention of,\napplicable law, Affirmer hereby overtly, fully, permanently, irrevocably and\nunconditionally waives, abandons, and surrenders all of Affirmer's Copyright\nand Related Rights and associated claims and causes of action, whether now\nknown or unknown (including existing as well as future claims and causes of\naction), in the Work (i) in all territories worldwide, (ii) for the maximum\nduration provided by applicable law or treaty (including future time\nextensions), (iii) in any current or future medium and for any number of\ncopies, and (iv) for any purpose whatsoever, including without limitation\ncommercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes\nthe Waiver for the benefit of each member of the public at large and to the\ndetriment of Affirmer's heirs and successors, fully intending that such Waiver\nshall not be subject to revocation, rescission, cancellation, termination, or\nany other legal or equitable action to disrupt the quiet enjoyment of the Work\nby the public as contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason be\njudged legally invalid or ineffective under applicable law, then the Waiver\nshall be preserved to the maximum extent permitted taking into account\nAffirmer's express Statement of Purpose. In addition, to the extent the Waiver\nis so judged Affirmer hereby grants to each affected person a royalty-free,\nnon transferable, non sublicensable, non exclusive, irrevocable and\nunconditional license to exercise Affirmer's Copyright and Related Rights in\nthe Work (i) in all territories worldwide, (ii) for the maximum duration\nprovided by applicable law or treaty (including future time extensions), (iii)\nin any current or future medium and for any number of copies, and (iv) for any\npurpose whatsoever, including without limitation commercial, advertising or\npromotional purposes (the \"License\"). The License shall be deemed effective as\nof the date CC0 was applied by Affirmer to the Work. Should any part of the\nLicense for any reason be judged legally invalid or ineffective under\napplicable law, such partial invalidity or ineffectiveness shall not\ninvalidate the remainder of the License, and in such case Affirmer hereby\naffirms that he or she will not (i) exercise any of his or her remaining\nCopyright and Related Rights in the Work or (ii) assert any associated claims\nand causes of action with respect to the Work, in either case contrary to\nAffirmer's express Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n  a. No trademark or patent rights held by Affirmer are waived, abandoned,\n  surrendered, licensed or otherwise affected by this document.\n\n  b. Affirmer offers the Work as-is and makes no representations or warranties\n  of any kind concerning the Work, express, implied, statutory or otherwise,\n  including without limitation warranties of title, merchantability, fitness\n  for a particular purpose, non infringement, or the absence of latent or\n  other defects, accuracy, or the present or absence of errors, whether or not\n  discoverable, all to the greatest extent permissible under applicable law.\n\n  c. Affirmer disclaims responsibility for clearing rights of other persons\n  that may apply to the Work or any use thereof, including without limitation\n  any person's Copyright and Related Rights in the Work. Further, Affirmer\n  disclaims responsibility for obtaining any necessary consents, permissions\n  or other rights required for any use of the Work.\n\n  d. Affirmer understands and acknowledges that Creative Commons is not a\n  party to this document and has no duty or obligation with respect to this\n  CC0 or use of the Work.\n\nFor more information, please see\n<http://creativecommons.org/publicdomain/zero/1.0/>"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.09,
          "content": "<div align=\"center\">\n  <img src=\"./assets/img/bulb.svg\" width=\"200\" alt=\"light bulb icon\">\n</div>\n\n# CSS Protips [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nA collection of tips to help take your CSS skills pro.\n\n> For other great lists check out [@sindresorhus](https://github.com/sindresorhus/)'s curated list of [awesome lists](https://github.com/sindresorhus/awesome/).\n\n\n## Table of Contents\n\n* [Protips](#protips)\n* [Support](#support)\n* [Translations](#translations)\n* [Contribution Guidelines](CONTRIBUTING.md)\n\n\n## Protips\n\n1. [Use a CSS Reset](#use-a-css-reset)\n1. [Inherit `box-sizing`](#inherit-box-sizing)\n1. [Use `unset` Instead of Resetting All Properties](#use-unset-instead-of-resetting-all-properties)\n1. [Use `:not()` to Apply/Unapply Borders on Navigation](#use-not-to-applyunapply-borders-on-navigation)\n1. [Check if Font Is Installed Locally](#check-if-font-is-installed-locally)\n1. [Add `line-height` to `body`](#add-line-height-to-body)\n1. [Set `:focus` for Form Elements](#set-focus-for-form-elements)\n1. [Vertically-Center Anything](#vertically-center-anything)\n1. [Use `aspect-ratio` Instead of Height/Width](#use-aspect-ratio-instead-of-heightwidth)\n1. [Comma-Separated Lists](#comma-separated-lists)\n1. [Select Items Using Negative `nth-child`](#select-items-using-negative-nth-child)\n1. [Use SVG for Icons](#use-svg-for-icons)\n1. [Use the \"Lobotomized Owl\" Selector](#use-the-lobotomized-owl-selector)\n1. [Use `max-height` for Pure CSS Sliders](#use-max-height-for-pure-css-sliders)\n1. [Equal-Width Table Cells](#equal-width-table-cells)\n1. [Get Rid of Margin Hacks With Flexbox](#get-rid-of-margin-hacks-with-flexbox)\n1. [Use Attribute Selectors with Empty Links](#use-attribute-selectors-with-empty-links)\n1. [Control Specificity Better With `:is()`](#control-specificity-better-with-is)\n1. [Style \"Default\" Links](#style-default-links)\n1. [Intrinsic Ratio Boxes](#intrinsic-ratio-boxes)\n1. [Style Broken Images](#style-broken-images)\n1. [Use `rem` for Global Sizing; Use `em` for Local Sizing](#use-rem-for-global-sizing-use-em-for-local-sizing)\n1. [Hide Autoplay Videos That Aren't Muted](#hide-autoplay-videos-that-arent-muted)\n1. [Use `:root` for Flexible Type](#use-root-for-flexible-type)\n1. [Set `font-size` on Form Elements for a Better Mobile Experience](#set-font-size-on-form-elements-for-a-better-mobile-experience)\n1. [Use Pointer Events to Control Mouse Events](#use-pointer-events-to-control-mouse-events)\n1. [Set `display: none` on Line Breaks Used as Spacing](#set-display-none-on-line-breaks-used-as-spacing)\n1. [Use `:empty` to Hide Empty HTML Elements](#use-empty-to-hide-empty-html-elements)\n\n\n### Use a CSS Reset\n\nCSS resets help enforce style consistency across different browsers with a clean slate for styling elements. There are plenty of reset patterns to find, or you can use a more simplified reset approach:\n\n```css\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n```\n\nNow elements will be stripped of margins and padding, and `box-sizing` lets you manage layouts with the CSS box model.\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/kkrkLL)\n\n> [!TIP]\n> If you follow the [Inherit `box-sizing`](#inherit-box-sizing) tip below you might opt to not include the `box-sizing` property in  your CSS reset.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Inherit `box-sizing`\n\nLet `box-sizing` be inherited from `html`:\n\n```css\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n```\n\nThis makes it easier to change `box-sizing` in plugins or other components that leverage other behavior.\n\n#### [Demo](https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use `unset` Instead of Resetting All Properties\n\nWhen resetting an element's properties, it's not necessary to reset each individual property:\n\n```css\nbutton {\n  background: none;\n  border: none;\n  color: inherit;\n  font: inherit;\n  outline: none;\n  padding: 0;\n}\n```\n\nYou can specify all of an element's properties using the `all` shorthand. Setting the value to `unset` changes an element's properties to their initial values:\n\n```css\nbutton {\n  all: unset;\n}\n```\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use `:not()` to Apply/Unapply Borders on Navigation\n\nInstead of putting on the border...\n\n```css\n/* add border */\n.nav li {\n  border-right: 1px solid #666;\n}\n```\n\n...and then taking it off the last element...\n\n```css\n/* remove border */\n.nav li:last-child {\n  border-right: none;\n}\n```\n\n...use the `:not()` pseudo-class to only apply to the elements you want:\n\n```css\n.nav li:not(:last-child) {\n  border-right: 1px solid #666;\n}\n```\n\nHere, the CSS selector is read as a human would describe it.\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/LkymvO)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Check if Font Is Installed Locally\n\nYou can check if a font is installed locally before fetching it remotely, which is a good performance tip, too.\n\n```css\n@font-face {\n  font-family: \"Dank Mono\";\n  src:\n    /* Full name */\n    local(\"Dank Mono\"),\n    /* Postscript name */\n    local(\"Dank Mono\"),\n    /* Otherwise, download it! */\n    url(\"//...a.server/fonts/DankMono.woff\");\n}\n\ncode {\n  font-family: \"Dank Mono\", system-ui-monospace;\n}\n```\n\nH/T to Adam Argyle for sharing this protip and [demo](https://codepen.io/argyleink/pen/VwYJpgR).\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Add `line-height` to `body`\n\nYou don't need to add `line-height` to each `<p>`, `<h*>`, _et al_. separately. Instead, add it to `body`:\n\n```css\nbody {\n  line-height: 1.5;\n}\n```\n\nThis way textual elements can inherit from `body` easily.\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/VjbdYd)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Set `:focus` for Form Elements\n\nSighted keyboard users rely on focus to determine where keyboard events go in the page. Make focus for form elements stand out and consistent than a browser's default implementation:\n\n```css\na:focus,\nbutton:focus,\ninput:focus,\nselect:focus,\ntextarea:focus {\n  box-shadow: none;\n  outline: #000 dotted 2px;\n  outline-offset: .05em;\n}\n```\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/ePzoOP/)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Vertically-Center Anything\n\nNo, it's not black magic, you really can center elements vertically. You can do this with flexbox...\n\n```css\nhtml,\nbody {\n  height: 100%;\n}\n\nbody {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n```\n\n...and also with CSS Grid:\n\n```css\nbody {\n  display: grid;\n  height: 100vh;\n  place-items: center;\n}\n```\n\n> [!TIP]\n> Want to center something else? Vertically, horizontally...anything, anytime, anywhere? CSS-Tricks has [a nice write-up](https://css-tricks.com/centering-css-complete-guide/) on doing all of that.\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/GqmGqZ)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use `aspect-ratio` Instead of Height/Width\n\nThe `aspect-ratio` property allows you to easily size elements and maintain consistent width-to-height ratio. This is incredibly useful in responsive web design to prevent layout shift. Use `object-fit` with it to prevent disrupting the layout if the height/width values of images changes.\n\n```css\nimg {\n  aspect-ratio: 16 / 9; /* width / height */\n  object-fit: cover;\n}\n```\n\nLearn more about the `aspect-ratio` property in this [web.dev post](https://web.dev/articles/aspect-ratio).\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/MWxwoNx/)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Comma-Separated Lists\n\nMake list items look like a real, comma-separated list:\n\n```css\nul > li:not(:last-child)::after {\n  content: \",\";\n}\n```\n\nUse the `:not()` pseudo-class and no comma will be added to the last item.\n\n> [!NOTE]\n> This tip may not be ideal for accessibility, specifically screen readers. And copy/paste from the browser doesn't work with CSS-generated content. Proceed with caution.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Select Items Using Negative `nth-child`\n\nUse negative `nth-child` in CSS to select items 1 through n.\n\n```css\nli {\n  display: none;\n}\n\n/* select items 1 through 3 and display them */\nli:nth-child(-n+3) {\n  display: block;\n}\n```\n\nOr, since you've already learned a little about [using `:not()`](#use-not-to-applyunapply-borders-on-navigation), try:\n\n```css\n/* select all items except the first 3 and display them */\nli:not(:nth-child(-n+3)) {\n  display: block;\n}\n```\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/WxjKZp)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use SVG for Icons\n\nThere's no reason not to use SVG for icons:\n\n```css\n.logo {\n  background: url(\"logo.svg\");\n}\n```\n\nSVG scales well for all resolution types and is supported in all browsers [back to IE9](http://caniuse.com/#search=svg). Ditch your .png, .jpg, or .gif-jif-whatev files.\n\n> [!NOTE]\n> If you have SVG icon-only buttons for sighted users and the SVG fails to load, this will help maintain accessibility:\n\n```css\n.no-svg .icon-only::after {\n  content: attr(aria-label);\n}\n```\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use the \"Lobotomized Owl\" Selector\n\nIt may have a strange name but using the universal selector (`*`) with the adjacent sibling selector (`+`) can provide a powerful CSS capability:\n\n```css\n* + * {\n  margin-top: 1.5em;\n}\n```\n\nIn this example, all elements in the flow of the document that follow other elements will receive `margin-top: 1.5em`.\n\n> [!TIP]\n> For more on the \"lobotomized owl\" selector, read [Heydon Pickering's post](http://alistapart.com/article/axiomatic-css-and-lobotomized-owls) on *A List Apart*.\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/grRvWq)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use `max-height` for Pure CSS Sliders\n\nImplement CSS-only sliders using `max-height` with overflow hidden:\n\n```css\n.slider {\n  max-height: 200px;\n  overflow-y: hidden;\n  width: 300px;\n}\n\n.slider:hover {\n  max-height: 600px;\n  overflow-y: scroll;\n}\n```\n\nThe element expands to the `max-height` value on hover and the slider displays as a result of the overflow.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Equal-Width Table Cells\n\nTables can be a pain to work with. Try using `table-layout: fixed` to keep cells at equal width:\n\n```css\n.calendar {\n  table-layout: fixed;\n}\n```\n\nPain-free table layouts.\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/jALALm)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Get Rid of Margin Hacks With Flexbox\n\nWhen working with column gutters you can get rid of `nth-`, `first-`, and `last-child` hacks by using flexbox's `space-between` property:\n\n```css\n.list {\n  display: flex;\n  justify-content: space-between;\n}\n\n.list .person {\n  flex-basis: 23%;\n}\n```\n\nNow column gutters always appear evenly-spaced.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use Attribute Selectors with Empty Links\n\nDisplay links when the `<a>` element has no text value but the `href` attribute has a link:\n\n```css\na[href^=\"http\"]:empty::before {\n  content: attr(href);\n}\n```\n\nThat's really convenient.\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/zBzXRx)\n\n> [!NOTE]\n> This tip may not be ideal for accessibility, specifically screen readers. And copy/paste from the browser doesn't work with CSS-generated content. Proceed with caution.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Control Specificity Better with `:is()`\n\nThe `:is()` pseudo-class is used to target multiple selectors at once, reducing redundancy and enhancing code readability. This is incredibly useful for writing large selectors in a more compact form.\n\n```css\n:is(section, article, aside, nav) :is(h1, h2, h3, h4, h5, h6) {\n  color: green;\n}\n```\n\nThe above ruleset is equivalent to the following number selector rules...\n\n```css\nsection h1, section h2, section h3, section h4, section h5, section h6,\narticle h1, article h2, article h3, article h4, article h5, article h6,\naside h1, aside h2, aside h3, aside h4, aside h5, aside h6,\nnav h1, nav h2, nav h3, nav h4, nav h5, nav h6 {\n  color: green;\n}\n```\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/rNRVxdx)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Style \"Default\" Links\n\nAdd a style for \"default\" links:\n\n```css\na[href]:not([class]) {\n  color: #008000;\n  text-decoration: underline;\n}\n```\n\nNow links that are inserted via a CMS, which don't usually have a `class` attribute, will have a distinction without generically affecting the cascade.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Intrinsic Ratio Boxes\n\nTo create a box with an intrinsic ratio, all you need to do is apply top or bottom padding to a div:\n\n```css\n.container {\n  height: 0;\n  padding-bottom: 20%;\n  position: relative;\n}\n\n.container div {\n  border: 2px dashed #ddd;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n```\n\nUsing 20% for padding makes the height of the box equal to 20% of its width. No matter the width of the viewport, the child div will keep its aspect ratio (100% / 20% = 5:1).\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/jALZvE)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Style Broken Images\n\nMake broken images more aesthetically-pleasing with a little bit of CSS:\n\n```css\nimg {\n  display: block;\n  font-family: sans-serif;\n  font-weight: 300;\n  height: auto;\n  line-height: 2;\n  position: relative;\n  text-align: center;\n  width: 100%;\n}\n```\n\nNow add pseudo-elements rules to display a user message and URL reference of the broken image:\n\n```css\nimg::before {\n  content: \"We're sorry, the image below is broken :(\";\n  display: block;\n  margin-bottom: 10px;\n}\n\nimg::after {\n  content: \"(url: \" attr(src) \")\";\n  display: block;\n  font-size: 12px;\n}\n```\n\n> [!TIP]\n> Learn more about styling for this pattern in [Ire Aderinokun's post](http://bitsofco.de/styling-broken-images/).\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use `rem` for Global Sizing; Use `em` for Local Sizing\n\nAfter setting the base font size at the root (`html { font-size: 100%; }`), set the font size for textual elements to `em`:\n\n```css\nh2 {\n  font-size: 2em;\n}\n\np {\n  font-size: 1em;\n}\n```\n\nThen set the font-size for modules to `rem`:\n\n```css\narticle {\n  font-size: 1.25rem;\n}\n\naside .module {\n  font-size: .9rem;\n}\n```\n\nNow each module becomes compartmentalized and easier to style, more maintainable, and flexible.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Hide Autoplay Videos That Aren't Muted\n\nThis is a great trick for a custom user stylesheet. Avoid overloading a user with sound from a video that autoplays when the page is loaded. If the sound isn't muted, don't show the video:\n\n```css\nvideo[autoplay]:not([muted]) {\n  display: none;\n}\n```\n\nOnce again, we're taking advantage of using the [`:not()`](#use-not-to-applyunapply-borders-on-navigation) pseudo-class.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use `:root` for Flexible Type\n\nThe type font size in a responsive layout should be able to adjust with each viewport. You can calculate the font size based on the viewport height and width using `:root`:\n\n```css\n:root {\n  font-size: calc(1vw + 1vh + .5vmin);\n}\n```\n\nNow you can utilize the `root em` unit based on the value calculated by `:root`:\n\n```css\nbody {\n  font: 1rem/1.6 sans-serif;\n}\n```\n\n#### [Demo](https://codepen.io/AllThingsSmitty/pen/XKgOkR)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Set `font-size` on Form Elements for a Better Mobile Experience\n\nTo avoid mobile browsers (iOS Safari, _et al_.) from zooming in on HTML form elements when a `<select>` drop-down is tapped, add `font-size` to the selector rule:\n\n```css\ninput[type=\"text\"],\ninput[type=\"number\"],\nselect,\ntextarea {\n  font-size: 16px;\n}\n```\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use Pointer Events to Control Mouse Events\n\n[Pointer events](https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events) allow you to specify how the mouse interacts with the element it's touching. To disable the default pointer event on a button, for instance:\n\n```css\nbutton:disabled {\n  opacity: .5;\n  pointer-events: none;\n}\n```\n\nIt's that simple.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Set `display: none` on Line Breaks Used as Spacing\n\nAs [Harry Roberts pointed out](https://twitter.com/csswizardry/status/1170835532584235008), this can help prevent CMS users from using extra line breaks for spacing:\n\n```css\nbr + br {\n  display: none;\n}\n```\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n### Use `:empty` to Hide Empty HTML Elements\n\nIf you have HTML elements that are empty, i.e., the content has yet to be set either by a CMS or dynamically injected (e.g., `<p class=\"error-message\"></p>`) and it's creating unwanted space on your layout, use the `:empty` pseudo-class to hide the element on the layout. \n\n```css\n:empty {\n  display: none;\n}\n```\n\n> [!NOTE]\n> Keep in mind that elements with whitespace aren't considered empty, e.g., `<p class=\"error-message\"> </p>`.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n## Support\n\nCurrent versions of Chrome, Firefox, Safari, and Edge.\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n\n\n## Translations\n\n> [!NOTE]\n> I've had less time available to maintain the growing list of translated tips; adding a new tip requires including it with over a dozen translations. For that reason, translated README files are likely to not include all the tips listed on the main README file.\n\n* [简体中文](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/zh-CN)\n* [正體中文](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/zh-TW)\n* [Deutsch](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/de-DE)\n* [Español](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/es-ES)\n* [Français](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/fr-FR)\n* [λληνικά](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/gr-GR)\n* [ગુજરાતી](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/gu-IND)\n* [Italiano](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/it-IT)\n* [日本語](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/ja-JP)\n* [한국어](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/ko-KR)\n* [Polskie](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/pl-PL)\n* [Português do Brasil](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/pt-BR)\n* [Português do Europe](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/pt-PT)\n* [Русский](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/ru-RU)\n* [Tiếng Việt](https://github.com/AllThingsSmitty/css-protips/tree/master/translations/vn-VN)\n\n<sup>[back to table of contents](#table-of-contents)</sup>\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}