{
  "metadata": {
    "timestamp": 1736711736917,
    "page": 50,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "joshuaclayton/blueprint-css",
      "stars": 5314,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0634765625,
          "content": "*.swp\n*.svn\n*.DS_Store\n.bundle\ntmp/*\nlib/settings.yml\ncapybara-*\n"
        },
        {
          "name": "AUTHORS.textile",
          "type": "blob",
          "size": 1.3818359375,
          "content": "h1. Blueprint CSS Framework Authors and Contributors\n\nBlueprint is based on the work of many talented people. It is\nthrough their good intentions we are allowed to use many of the\ntechniques found in the framework.\n\nh2. Current Team\n\nBlueprint was realized and maintained through version 0.7.1 by\n\"Olav Bjorkoy\":http://bjorkoy.com who has sinced passed the torch\nto the current team. They are:\n\nAdmins:\n* \"Christian Montoya\":http://christianmontoya.net\n* \"Josh Clayton\":http://jdclayton.com\n\nContributors:\n* \"Franz Josef Kaiser\":http://github.com/franz-josef-kaiser\n* \"Glenn Rempe\":http://www.rempe.us/\n* \"Chris Eppstein\":http://chriseppstein.github.com/\n* \"Sean K. Stewart\":http://seankstewart.com/\n\nh2. Original CSS authors\n\nThe first iteration of Blueprint was built upon many conventions\nand ideas that were developed by true CSS experts.\n\nThe grid and typography is based on work by:\n* \"Jeff Croft\":http://jeffcroft.com\n* \"Nathan Borror\":http://nathanborror.com/\n* \"Christian Metts\":http://mintchaos.com\n* \"Wilson Miner\":http://www.wilsonminer.com\n\nThe CSS reset is based on work by:\n* \"Eric Meyer\":http://www.meyerweb.com/eric\n\nThe Fancy Type plugin is based on work by:\n* \"Mark Boulton\":http://www.markboulton.co.uk\n* \"Typogrify\":http://typogrify.googlecode.com\n\n(However, remember that these people are not involved with the\nframework, so please don't waste their time or yours by asking \nthem for support.)"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 8.0869140625,
          "content": "Blueprint CSS Framework Change Log\n----------------------------------------------------------------\n\nVersion 1.0 - Date September 29, 2010\n--\n  New features:\n    * Added detailed explanations to core uncompressed CSS files [CMM]\n    * Added .info and .alert classes to forms.css [CMM]\n    * Fixed numerous bugs in forms, including the fieldset padding bug in IE6-8 [CMM]\n    * Fixed specificity problems in typography.css and grid.css [CMM]\n    * See Lighthouse for more bug fixes \n\nVersion 0.9 - Date May 29, 2009\n--\n  New features:\n    * Changed all conditional comments to [if lt IE 8] for IE 8 compatibility [CMM]\n    * Updated forms code to align inline form elements, with additions for IE 6 [CMM]\n      * Use <form class=\"inline\"> for inline forms\n      * Use classes \"text\", \"button\", \"radio\" and \"checkbox\" on inputs for IE 6 compatibility\n\n\nVersion 0.8 - Date November 11, 2008\n--\n  New features:\n    * Much of the flexibility of 0.6 has been pushed back into the core [CMM]\n    * Plugins from 0.6 are now back in the core [CMM]\n\n  Bug fixes:\n    * Lots. See http://blueprintcss.lighthouseapp.com/projects/15318-blueprint-css\n\n\nVersion 0.7.1 - Date February 21, 2008\n--\n  New features:\n    * Rubydoc for compressor [JC]\n\n  Bug fixes:\n    * Fixed bug in the compressor related to Rubygems. [JC]\n    * <tt> should be inline, not block. [OFB]\n\n\nVersion 0.7 - February 19, 2008\n--\n  New features:\n    * New directory structure. [OFB]\n    * New compressor script. [JC]\n      * Ability to set custom namespace for BP classes. [JC]\n      * Optional custom column count and widths. [JC]\n      * Ability to add your own CSS files. [JC]\n      * Custom output paths. [JC]\n      * Support for multiple projects. [JC]\n      * Semantic class naming from CSS rules. [JC]\n      * Automatic compression for plugins. [JC]\n    * Compressed version of ie.css. [OFB]\n    * Alternating table row colors. [OFB]\n    * Added class .showgrid to see the grid of any column or container. [OFB]\n    * No need for .column! You now have to use divs for columns,\n      but you can still use span/prepend/append for other elements as well.\n      In other words, div.span-x now implies that the element is a .column. [OFB]\n\n  Bug fixes:\n    * Sidebar alignment in tests/sample.html. [OFB]\n    * Line-height on sub/sup. [OFB]\n    * Clearfix not properly applied to container. [OFB]\n    * Misc validation errors in tests. [OFB]\n    * Proper margin on address. [OFB]\n    * Unwanted bottom margin on nested lists. [OFB]\n    * Form labels with unwanted fancy-type indentation. [OFB]\n    * Proper margin on all form elements. [OFB]\n    * No margins for images in headings. [OFB]\n    * Push-x bottom margin. [OFB]\n    * Vertical align set to middle on tables. [OFB]\n    * Improved .notice, .error and .success color contrast. [OFB]\n    * Size of input[text]. [OFB]\n    * Baseline alignment of <h4>. [OFB]\n\n  Misc:\n    * Improved structure in print.css. [OFB]\n    * Dual-licensed under MIT and GPL licenses. [OFB]\n    * Changed name of .clear to .clearfix, and added .clear (clear:both;). [OFB]\n\n\nVersion 0.6 - September 21, 2007\n--\n  * Created a new plugin, \"iepngfix\", that adds support for PNG transparency in IE5.5+ [OFB]\n  * Added an IE stylesheet, updated the test files and the readme accordingly [OFB]\n  * Re-added improved support for em units [OFB]\n  * Lots of minor changes to typography.css and reset.css, provided by Christian Montoya [OFB]\n  * Extracted the fancy typography section in typography.css to a new plugin [OFB]\n  * Extracted the support for CSS buttons into a new plugin. [OFB]\n  * Added new plugin structure. [OFB]\n  * Changed some default fonts so that BP works better with ClearType in XP [OFB]\n  * Re-added the hack for clearing floats without extra markup. [OFB]\n  * Added Changelog.txt to track changes in each release. [GR]\n  * Cleaned up and rationalized SVN dir structure. [GR, OFB]\n  * print.css : removed reference to 'baseline.png' as it no longer exists. [GR]\n  * grid.css : removed reference to '.first' css class as it no longer exists. [GR]\n  * Added append-13 to append-23 and prepend-13 to prepend-23 to allow pushing elements\n    to both extreme sides of the grid. Added test cases to tests/grid.css [GR]\n  * Moved test sample files to blueprint/tests sub-directory so tests stay with the code. [GR]\n  * Consolidated all references to release version number to screen.css [OFB]\n  * Added ruby script (generate_compressed_css.rb) to scripts dir, and 'csstidy' binary (OS X Universal)\n    for generating tidied version of Blueprint (lib/compressed.css).\n  * Consolidated test pages into one single page (test.html).  Uses compressed stylesheet by default.  This ensures test of\n    the chain of generation.  (todo) Intention is to delete other test files if single file works well. (todo) ensure singular\n    test file contains latest changes to other test files.   [GR]\n  * Moved the blueprint framework to its own folder in the package, so that the tests, script,\n    license and readme don't clutter up our BP folder. [OFB]\n  * Re-saved grid.png with Photoshop to remove Fireworks data which was bloating it.\n    Now its about 3KB instead of 40+KB. Resolves Issue 22. [GR]\n  * Moved compressed files to new compressed dir [OFB]\n  * print.css is now also being generated by the compressor ruby script and is available for use.\n  * Added new script 'validate_css.rb' which will validate all css files and present a report with\n    a local java binary of the W3C validator.\n  * Created an experimental CSS classes plugin, by popular demand. [OFB]\n  * Improved handling of multi-line headings. [OFB]\n  * Improved styling of <table>s, you may now use .span classes on <th>s to create tables that follow the grid. [OFB]\n  * Added support for indented paragraphs to the Fancy-type plugin. [OFB]\n  * Added a new plugin: link-icons. [OFB]\n  * Seperated the plugins tests into their own file. [OFB]\n  * Re-structured some of the tests.html sections. [OFB]\n  * Added class \".colborder\" to grid.css. [OFB]\n  * Added .error, .notice and .success classes to typography.css. [OFB]\n  * Added tests for more elements which gets reset in reset.css [OFB, GR]\n  * Added forms.css, awaiting implementation. Moved form styling from typography.css [OFB]\n  * Updated compressor script to include forms.css [OFB]\n  * Improved forms.html tests for upcoming forms.css implementation. This will change based on the\n    markup that forms.css will use. [OFB]\n  * Fixed clearing image in button element bug in buttons.css [OFB]\n  * Fixed bug where IE6 clips pushed/pulled elements. [OFB]\n  * Fixed typo in grid.css formula. [OFB]\n  * Fixed varying formatting across core files. [OFB]\n  * Fixed legend element in IE6. [OFB]\n  * Fixed indentation in test files. [OFB]\n  * Removed tests for plugins not bundled with the next release. [OFB]\n  * Improved styling of <h3>. [OFB]\n  * Fixed indentation bug in ul/ol, removed some redundant styling. [OFB]\n  * Fixed validation errors in tests. [OFB]\n  * Changed IE stylesheet condition comment to include all versions of IE. [OFB]\n  * Started on a new approach for the PNG plugin. Will not be included in this release. [OFB]\n  * Fixed incorrect rendering of ol in IE6/7. [OFB]\n  * Created a new, spiffier sample page. [OFB]\n\n\nVersion 0.5 - August 28, 2007\n--\n  * Changed grid width from 14 to 24 columns [OFB]\n  * Removed 'first' CSS class and the need to apply it to the first column in a row of columns. [OFB]\n  * Reverted to using pixels instead of em units to specify vertical spacing due to baseline issues with\n    all browsers except Firefox. [OFB]\n  * New set of default fonts. (Experimental) [OFB]\n  * Added test files [OFB]\n\n\nVersion 0.4 - August 11, 2007\n--\n  * All font sizes and vertical margins are now elastic, through the use of em units.\n    Resizing works great in every tested browser. [OFB]\n  * Comes with a new, compressed version of BP, which reduces the size of the core files by 60 percent. [OFB]\n  * Support for incremental leading, contributed by Mark Boulton. [OFB]\n  * Adds perfected CSS buttons, by Kevin Hale of Particletree fame. [OFB]\n  * Fixes all known IE bugs. [OFB]\n  * Loads of minor fixes and additions. [OFB]\n\n\nVersion 0.3 - March 8, 2007\n--\n  * Initial release of Blueprint (versions 0.1 and 0.2 were internal only).\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.212890625,
          "content": "source \"http://rubygems.org\"\n\ngem \"colored\"\ngem \"chunky_png\"\n\ngroup :test do\n  gem \"cucumber\", \"0.10.2\"\n  gem \"aruba\",    \"0.3.6\"\n  gem \"rspec\", \"2.6.0\"\n  gem \"capybara\", \"0.4.1.2\"\n  gem \"capybara-webkit\", \"0.3.0\"\nend\n"
        },
        {
          "name": "Gemfile.lock",
          "type": "blob",
          "size": 1.4990234375,
          "content": "GEM\n  remote: http://rubygems.org/\n  specs:\n    aruba (0.3.6)\n      childprocess (>= 0.1.7)\n      cucumber (>= 0.10.0)\n      rspec (>= 2.5.0)\n    builder (3.0.0)\n    capybara (0.4.1.2)\n      celerity (>= 0.7.9)\n      culerity (>= 0.2.4)\n      mime-types (>= 1.16)\n      nokogiri (>= 1.3.3)\n      rack (>= 1.0.0)\n      rack-test (>= 0.5.4)\n      selenium-webdriver (>= 0.0.27)\n      xpath (~> 0.1.3)\n    capybara-webkit (0.3.0)\n      capybara (~> 0.4.1)\n    celerity (0.8.9)\n    childprocess (0.1.9)\n      ffi (~> 1.0.6)\n    chunky_png (1.2.0)\n    colored (1.2)\n    cucumber (0.10.2)\n      builder (>= 2.1.2)\n      diff-lcs (>= 1.1.2)\n      gherkin (>= 2.3.5)\n      json (>= 1.4.6)\n      term-ansicolor (>= 1.0.5)\n    culerity (0.2.15)\n    diff-lcs (1.1.2)\n    ffi (1.0.8)\n    gherkin (2.3.7)\n      json (>= 1.4.6)\n    json (1.5.1)\n    json_pure (1.5.1)\n    mime-types (1.16)\n    nokogiri (1.4.4)\n    rack (1.2.2)\n    rack-test (0.6.0)\n      rack (>= 1.0)\n    rspec (2.6.0)\n      rspec-core (~> 2.6.0)\n      rspec-expectations (~> 2.6.0)\n      rspec-mocks (~> 2.6.0)\n    rspec-core (2.6.0)\n    rspec-expectations (2.6.0)\n      diff-lcs (~> 1.1.2)\n    rspec-mocks (2.6.0)\n    rubyzip (0.9.4)\n    selenium-webdriver (0.2.0)\n      childprocess (>= 0.1.7)\n      ffi (>= 1.0.7)\n      json_pure\n      rubyzip\n    term-ansicolor (1.0.5)\n    xpath (0.1.4)\n      nokogiri (~> 1.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  aruba (= 0.3.6)\n  capybara (= 0.4.1.2)\n  capybara-webkit (= 0.3.0)\n  chunky_png\n  colored\n  cucumber (= 0.10.2)\n  rspec (= 2.6.0)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "Copyright (c) 2007 - 2010 blueprintcss.org\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.textile",
          "type": "blob",
          "size": 4.0810546875,
          "content": "h1. Blueprint CSS Framework Readme\n\nWelcome to Blueprint! This is a CSS framework designed to cut down on your CSS development time. It gives you a solid foundation to build your own CSS on. Here are some of the features BP provides out-of-the-box:\n\n* An easily customizable grid\n* Sensible default typography\n* A typographic baseline\n* Perfected browser CSS reset\n* A stylesheet for printing\n* Powerful scripts for customization\n* Absolutely no bloat!\n\nh2. Project Info\n\n* *Web*: \"http://blueprintcss.org\":http://blueprintcss.org\n* *Source*: \"http://github.com/joshuaclayton/blueprint-css\":http://github.com/joshuaclayton/blueprint-css\n* *Wiki*: \"http://github.com/joshuaclayton/blueprint-css/wikis/home\":http://github.com/joshuaclayton/blueprint-css/wikis/home\n* *Bug/Feature Tracking*: \"http://blueprintcss.lighthouseapp.com\":http://blueprintcss.lighthouseapp.com\n\nh2. Setup Instructions\n\nHere's how you set up Blueprint on your site.\n\n# Upload the \"blueprint\" folder in this folder to your server, and place it in whatever folder you'd like. A good choice would be your CSS folder.\n# Add the following three lines to every @<head/>@ of your site. Make sure the three @href@ paths are correct (here, BP is in my CSS folder): <pre><code>\n<link rel=\"stylesheet\" href=\"css/blueprint/screen.css\" type=\"text/css\" media=\"screen, projection\">\n<link rel=\"stylesheet\" href=\"css/blueprint/print.css\" type=\"text/css\" media=\"print\">\n<!--[if lt IE 8]>\n  <link rel=\"stylesheet\" href=\"css/blueprint/ie.css\" type=\"text/css\" media=\"screen, projection\">\n<![endif]--></code></pre>\nRemember to include trailing slashes (\" />\") in these lines if you're using XHTML.\n# For development, add the .showgrid class to any container or column to see the underlying grid. Check out the @plugins@ directory for more advanced functionality.\n\n\nh2. Tutorials\n\n* \"How to customize BP with the compressor script\":http://jdclayton.com/blueprints_compress_a_walkthrough.html\n* \"How to use a grid in a layout\":http://subtraction.com/2007/03/18/oh-yeeaahh\n* \"How to use a baseline in your typography\":http://alistapart.com/articles/settingtypeontheweb\n\nh2. Files in Blueprint\n\nThe framework has a few files you should check out. Every file in the @src@ directory contains lots of (hopefully) clarifying comments.\n\nCompressed files (these go in the HTML):\n\n* @blueprint/screen.css@\n* @blueprint/print.css@\n* @blueprint/ie.css@\n\nSource files:\n* @blueprint/src/reset.css@<br/>\nThis file resets CSS values that browsers tend to set for you.\n* @blueprint/src/grid.css@<br/>\nThis file sets up the grid (it's true). It has a lot of classes you apply to @<div/>@ elements to set up any sort of column-based grid.\n* @blueprint/lib/blueprint/grid.css.erb@<br/>\nThis file is used by the compressor (see below) when generating grids. All changes to grid.css are mirrored in this file, manually. \n* @blueprint/src/typography.css@<br/>\nThis file sets some default typography. It also has a few methods for some really fancy stuff to do with your text.\n* @blueprint/src/forms.css@<br/>\nIncludes some minimal styling of forms.\n* @blueprint/src/print.css@<br/>\nThis file sets some default print rules, so that printed versions of your site looks better than they usually would. It should be included on every page.\n* @blueprint/src/ie.css@<br/>\nIncludes every hack for our beloved IE6 and 7.\n\nScripts:\n* @lib/compress.rb@<br/>\nA Ruby script for compressing and customizing your CSS. Set a custom namespace, column count, widths, output paths, multiple projects, and semantic class names. See commenting in @compress.rb@ or run @$ruby compress.rb -h@ for more information.\n* @lib/validate.rb@<br/>\nValidates the Blueprint core files with the W3C CSS validator.\n\nOther:\n* @blueprint/plugins/@<br/>\nContains additional functionality in the form of simple plugins for Blueprint. See individual readme files in the directory of each plugin for further instructions.\n* @tests/@<br/>\nContains html files which tests most aspects of Blueprint. Open @tests/index.html@ for further instructions.\n\nh2. Extra Information\n\n* For credits and origins, see AUTHORS.\n* For license instructions, see LICENSE.\n* For the latest updates, see CHANGELOG.\n"
        },
        {
          "name": "Rakefile",
          "type": "blob",
          "size": 0.171875,
          "content": "require \"bundler/setup\"\nrequire \"cucumber/rake/task\"\n\nCucumber::Rake::Task.new(:features) do |t|\n  t.cucumber_opts = \"features --format pretty\"\nend\n\ntask :default => :features\n"
        },
        {
          "name": "TUTORIAL.textile",
          "type": "blob",
          "size": 10.3427734375,
          "content": "h1. Blueprint CSS Framework Tutorial\n\nWelcome to this tutorial on Blueprint. It will give you a thorough intro to what you can do with the framework, and a few notes on what you shouldn't do with it. Let's get started.\n\nh2. About Blueprint\n  \nBlueprint is a CSS framework, designed to cut down on your development time. It gives you a solid foundation to build your CSS on top of, including some sensible default typography, a customizable grid, a print stylesheet and much more.\n\nHowever, BP is not a silver bullet, and it's best suited for websites where each page may require its own design. Take a look at existing BP pages before deciding if the framework is right for you. You may also check out the test files in the @tests@ directory, which demonstrates most of the features in Blueprint.\n\nThe word \"framework\" may be a bit misleading in this context, since BP does not make suggestions on how you should organize or write your CSS. It's more like a \"css toolbox\" with helpful bits and pieces, from which you may pick and choose based on your needs. \n\nh2. Structural Overview\n\t\t\nFrom the bottom up, here are the CSS layers in Blueprint:\n\n#\t*CSS reset*: Removes any default CSS rules set by each browser.\n#\t*Typography*: Gives you some nice default typography and colors.\n#\t*Grid*: Provides a set of CSS classes for making grid layouts.\n\nThe second part of Blueprint are the scripts, which let you customize most\naspects of the framework, from column count and widths, to output paths and\nCSS class namespaces. We have two scripts:\n\n# *Compressor*: For compressing and customizing the source files.\n# *Validator*: \tFor validating the Blueprint core files.\n\nThat's the quick overview, so now we can finally get into the details. First, we'll take \na look at the CSS in Blueprint. We'll then move on to the scripts, where I'll show you \nhow to customize the framework.\n\nh2. Setting Up Blueprint\n\nTo use Blueprint, you must include three files in your HTML:\n\n* @blueprint/screen.css@:\tAll CSS for screen, projection viewing.\n* @blueprint/print.css@: A basic stylesheet for printing.\n* @blueprint/ie.css@:\tA few needed corrections for Internet Explorer\n\nTo include them, use the following HTML (make sure the href paths are correct):\n<pre><code>\n  <link rel=\"stylesheet\" href=\"css/blueprint/screen.css\" type=\"text/css\" media=\"screen, projection\">\n  <link rel=\"stylesheet\" href=\"css/blueprint/print.css\" type=\"text/css\" media=\"print\"> \n  <!--[if lt IE 8]>\n    <link rel=\"stylesheet\" href=\"css/blueprint/ie.css\" type=\"text/css\" media=\"screen, projection\">\n  <![endif]-->\n</code></pre>\nRemember to add trailing slashes if you're using XHTML (\" />\"). \n\nh2. Using the CSS in Blueprint\n\nAs mentioned before, there's basically three layers of CSS in Blueprint. The first two layers, the browser CSS reset and the default typography, apply themselves by changing the CSS of standard HTML elements. In other words, you don't need to change anything in these files. If you, for instance, want to change the font size, do this in your own stylesheet, so that it's easy to upgrade Blueprint when new versions arrive.\n\nh3. Classes for Typography\n\t\nWhile the typography of Blueprint mainly applies itself, there's a few classes\nprovided. Here's a list of their names and what they do:\n\n<dl>\n  <dt>@.small@</dt><dd>Makes the text of this element smaller.</dd>\n  <dt>@.large@</dt><dd>Makes the text of this element larger.</dd>\n  <dt>@.hide@</dt><dd>Hides an element.</dd>\n  <dt>@.quiet@</dt><dd>Tones down the font color for this element.</dd>\n  <dt>@.loud@</dt><dd>Makes this elements text black.</dd>\n  <dt>@.highlight@</dt><dd>Adds a yellow background to the text.</dd>\n  <dt>@.added@</dt><dd>Adds green background to the text.</dd>\n  <dt>@.removed@</dt><dd>Adds red background to the text.</dd>\n  <dt>@.first@</dt><dd>Removes any left sided margin/padding from the element.</dd>\n  <dt>@.last@</dt><dd>Removes any right sided margin/padding from the element.</dd>\n  <dt>@.top@</dt><dd>Removes any top margin/padding from the element.</dd>\n  <dt>@.bottom@</dt><dd>Removes any bottom margin/padding from the element.</dd>\n</dl>\n\nh3. Styling Forms\n\t\t\t\t\nTo make Blueprint style your input elements, each text input element should\nhave the class @.text@, or @.title@, where @.text@ is the normal size,\nand @.title@ gives you an input field with larger text.\n\nThere's also a few classes you may use for success and error messages:\n\n<dl>\n\t<dt>@div.error@</dt><dd>Creates an error box (red).</dd>\n\t<dt>@div.notice@</dt><dd>Creates a box for notices (yellow).</dd>\n\t<dt>@div.success@</dt><dd>Creates a box for success messages (green).</dd>\n</dl>\t\t\t\t\n\nh3. Creating a Grid\n\nThe third layer is the grid CSS classes, which is the tool Blueprint gives you to create almost any kind of grid layout for your site. Keep in mind that most of the CSS behind the grid can be customized (explained below). In this section however, I'm using the default settings.\n\nThe default grid is made up of 24 columns, each spanning 30px, with a 10px margin between each column. The total width comes to 950px, which is a good width for 1024x768 resolution displays. If you're interested in a narrower design, see the section on customizing the grid, below.\n\nSo how do you set up a grid? By using classes provided by Blueprint. To create a column, make a new @<div/>@, and apply one of the @.span-x@ classes to it. For instance, if you want a 3-column setup, with two narrow and one wide column, a header and a footer here's how you do it:\n\n<pre>\t\t\t\n  <div class=\"container\">\n  \t<div class=\"span-24\">\n  \t\tThe header\n  \t</div>\n\n  \t<div class=\"span-4\">\n  \t\tThe first column\n  \t</div>\n  \t<div class=\"span-16\">\n  \t\tThe center column\n  \t</div>\n  \t<div class=\"span-4 last\">\n  \t\tThe last column\n  \t</div>\n\t\n  \t<div class=\"span-24\">\n  \t\tThe footer\n  \t</div>\n  </div>\n</pre>\n  \t\t\t\nIn addition to the spans, there are two important classes you need to know about. First of all, every Blueprint site needs to be wrapped in a div with the class @.container@, which is usually placed right after the body tag. \n\nSecond, the last column in a row (which by default has 24 columns), needs the class @.last@ to remove its left hand margin. Note, however, that each @.span-24@ don't need the @.last@ class, since these always span the entire width of the page.\n\nTo create basic grids, this is all you need to know. The grid CSS however, provides many more classes for more intricate designs. To see some of them in action, check out the files in @tests/parts/@. These files demonstrate what's possible with the grid in Blueprint.\n\nHere's a quick overview of the other classes you can use in to make your grid:\n\n<dl>\n  <dt>@.append-x@</dt><dd>Appends x number of empty columns after a column.</dd>\n  <dt>@.prepend-x@</dt><dd>Preppends x number of empty columns before a column.</dd>\n  <dt>@.push-x@</dt><dd>Pushes a column x columns to the left. Can be used to swap columns.</dd>\n  <dt>@.pull-x@</dt><dd>Pulls a column x columns to the right. Can be used to swap columns.</dd>\n  <dt>@.border@</dt><dd>Applies a border to the right side of the column.</dd>\n  <dt>@.colborder@</dt><dd>Appends one empty column, with a border down the middle.</dd>\n  <dt>@.clear@</dt><dd>Makes a column drop below a row, regardless of space.</dd>\n\t<dt>@.showgrid@</dt><dd>Add to container or column to see the grid and baseline.</dd>\n</dl>\n\nIn this list, @x@ is a number from 1 through 23 for append/prepend and 1 through 24 for push/pull. These numbers will of course change if you set a new number of columns in the settings file. \n\nHere's another example where we have four columns of equal width, with a border between the two first and the two last columns, as well as a four column gap in the middle:\n\n<pre>\t\t\t\t\n\t<div class=\"container\">\n\t\t<div class=\"span-5 border\">\n\t\t\tThe first column\n\t\t</div>\n\t\t<div class=\"span-5 append-4\">\n\t\t\tThe second column\n\t\t</div>\n\t\t<div class=\"span-5 border\">\n\t\t\tThe third column\n\t\t</div>\n\t\t<div class=\"span-5 last\">\n\t\t\tThe fourth (last) column\n\t\t</div>\n\t</div>\n</pre>\t\t\t\t\n\nYou may also nest columns to achieve the desired layout. Here's a setup where we want four rectangles with two on top and two below on the first half of the page, and one single column spanning the second half of the page:\n\n<pre>\t\t\t\t\n\t<div class=\"container\">\n\t\t<div class=\"span-12\">\n\t\t\t<div class=\"span-6\">\n\t\t\t\tTop left\n\t\t\t</div>\n\t\t\t<div class=\"span-6 last\">\n\t\t\t\tTop right\n\t\t\t</div>\n\t\t\t<div class=\"span-6\">\n\t\t\t\tBottom left\n\t\t\t</div>\n\t\t\t<div class=\"span-6 last\">\n\t\t\t\tBottom right\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"span-12 last\">\n\t\t\tSecond half of page\n\t\t</div>\n\t</div>\n</pre>\n\nTry this code in your browser it it's difficult to understand what it would look like. To see more examples on how to use these classes, check out @/tests/parts/grid.html@.\n\nh2. The Scripts\n\t\nBlueprint comes with two scripts: one for compressing and customizing the CSS, and one for validating the core CSS files, which is handy if you're making changes to these files.\n\nh3. The Validator\n\t\t\t\t\nThe validator has a fairly simple job - validate the CSS in the core BP files.  The script uses a bundled version of the W3C CSS validator to accomplish this.  To run it, you'll need to have Ruby installed on your machine. You can then run the script like so: @$ ruby validate.rb@.\n\nNote that there are a few validation errors shipping with Blueprint. These are known, and comes from a few CSS hacks needed to ensure consistent rendering across the vast browser field.\n\t\t\nh3. The Compressor\n\t\t\nAs the files you'll include in your HTML are the compressed versions of the core CSS files, you'll have to recompress the core if you've made any changes.  This is what the compressor script is for.\n\nIn addition this is where you customize the grid. To customize the grid, a special settings file is used, and the new CSS is generated once you run the compressor. The new compressed files will then reflect your settings file.\n\nTo recompress, you just have to run the script. This will parse the core CSS files and output new compressed files in the blueprint folder. As with the validator, Ruby has to be installed to use this script. In the @lib@ directory, run: @$ruby compress.rb@\n\nCalling this file by itself will pull files from @blueprint/src@ and concatenate them into three files; @ie.css@, @print.css@, and @screen.css@. However, argument variables can be set to change how this works. Calling @$ruby compress.rb -h@ will reveal basic arguments you can pass to the script.\n\t\t\nh3. Custom Settings\n\nTo learn how to use custom settings, read through the documentation within @lib/compress.rb@\n"
        },
        {
          "name": "blueprint",
          "type": "tree",
          "content": null
        },
        {
          "name": "debug",
          "type": "tree",
          "content": null
        },
        {
          "name": "features",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}