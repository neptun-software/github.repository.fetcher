{
  "metadata": {
    "timestamp": 1736711737613,
    "page": 51,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "froala/wysiwyg-editor",
      "stars": 5313,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0654296875,
          "content": "froala_editor.js\n*~\n.idea\nnode_modules\ndist\nnpm-debug.log\n.DS_STORE"
        },
        {
          "name": ".replit",
          "type": "blob",
          "size": 0.0322265625,
          "content": "language = \"nodejs\"\nrun = \"hello\""
        },
        {
          "name": "Froala_ThirdPartyLicense.txt",
          "type": "blob",
          "size": 2.115234375,
          "content": "===Third Party Licenses for Froala Editor===\n\nThis Document contains either required notices for third party software or the third party license documents under which the Separately Licensed Code is licensed.\n\n(Please note that in some cases, the license listed may differ from the license under which the latest version of the code can be obtained).\n\n\n==Separately Licensed Code==\n\nCryptoJS v. 3.1.2\n\nCopyright 2020 Froala Labs SA \n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====================================================================\n\nDOMPurify v. 2.2.7\n\nCopyright 2021 Froala Labs SA \n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and\nlimitations under the License.\n\n====================================================================\n"
        },
        {
          "name": "License.txt",
          "type": "blob",
          "size": 0.2490234375,
          "content": "Froala WYSIWYG Editor\n================\n\nIn order to use Froala Editor you have to purchase a license from: https://www.froala.com/wysiwyg-editor/pricing.\nFor more informations regarding the license please read https://www.froala.com/wysiwyg-editor/terms.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.974609375,
          "content": "# [Froala Editor V4](https://www.froala.com/wysiwyg-editor)\n\n[![Build Status](https://api.travis-ci.com/froala-labs/froala-editor-js-2.svg?token=RmiyW7AecDyQ8ja7VMDj&branch=master)](https://travis-ci.com/froala-labs/froala-editor-js-2)\n[![npm](https://img.shields.io/npm/dm/froala-editor.svg)](https://www.npmjs.com/package/froala-editor)\n[![npm](https://img.shields.io/npm/v/froala-editor.svg)](https://www.npmjs.com/package/froala-editor)\n\nFroala WYSIWYG HTML Editor is one of the most powerful JavaScript rich text editors ever.\n\n![WYSIWYG HTML Editor](https://raw.githubusercontent.com/froala/wysiwyg-editor/master/editor.jpg)\n\n- Slim - only add the plugins that you need ([30+ official plugins](https://www.froala.com/wysiwyg-editor/docs/plugins))\n- [Client frameworks integrations](https://www.froala.com/wysiwyg-editor/docs/framework-plugins/)\n- Server side SDKs for [PHP](https://www.froala.com/wysiwyg-editor/docs/sdks/php), [Node.JS](https://www.froala.com/wysiwyg-editor/docs/sdks/nodejs),  [.NET](https://www.froala.com/wysiwyg-editor/docs/sdks/dotnet), [Java](https://www.froala.com/wysiwyg-editor/docs/sdks/java), and [Python](https://www.froala.com/wysiwyg-editor/docs/sdks/python)\n- Code is well commented\n- [Online documentation](https://www.froala.com/wysiwyg-editor/docs) up to date\n- Simple to extend - the plugins are all well commented and simple to use as a basis for your own plugins\n- Well maintained - [frequent releases](https://www.froala.com/wysiwyg-editor/changelog)\n- Great support - [Help Center](https://wysiwyg-editor.froala.help)\n- Awesome [new features](https://wysiwyg-editor-roadmap.froala.com)\nâ€‹\n\n\n## Demos\n\n- **Basic demo**: https://www.froala.com/wysiwyg-editor\n- **Inline demo**: https://www.froala.com/wysiwyg-editor/inline\n- **Full list**: https://www.froala.com/wysiwyg-editor/examples\n\n\n\n## Download and Install Froala Editor\n\n### Install from npm\n\n```\nnpm install froala-editor\n```\n\n### Install from bower\n\n```\nbower install froala-wysiwyg-editor\n```\n\n### Load from CDN\nUsing Froala Editor from CDN is the easiest way to install it and we recommend using the jsDeliver CDN as it mirrors the NPM package. \n\n```html\n<!-- Include Editor style. -->\n<link href=\"https://cdn.jsdelivr.net/npm/froala-editor@latest/css/froala_editor.pkgd.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n<!-- Create a tag that we will use as the editable area. -->\n<!-- You can use a div tag as well. -->\n<textarea></textarea>\n\n<!-- Include Editor JS files. -->\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/froala-editor@latest/js/froala_editor.pkgd.min.js\"></script>\n\n<!-- Initialize the editor. -->\n<script>\n  new FroalaEditor('textarea');\n</script>\n```\n\n\n\n### Load from CDN as an AMD module\nFroala Editor is compatible with AMD module loaders such as RequireJS. The following example shows how to load it along with the Algin plugin from CDN using RequireJS.\n```html\n<html>\n<head>\n  <!-- Load CSS files. -->\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/froala-editor@latest/css/froala_editor.css\">\n\n  <script src=\"require.js\"></script>\n  <script>\n    require.config({\n      packages: [{\n        name: 'froala-editor',\n        main: 'js/froala_editor.min'\n      }],\n      paths: {\n        // Change this to your server if you do not wish to use our CDN.\n        'froala-editor': 'https://cdn.jsdelivr.net/npm/froala-editor@latest'\n      }\n    });\n  </script>\n\n  <style>\n    body {\n      text-align: center;\n    }\n    div#editor {\n      width: 81%;\n      margin: auto;\n      text-align: left;\n    }\n    .ss {\n      background-color: red;\n    }\n  </style>\n</head>\n\n<body>\n  <div id=\"editor\">\n    <div id='edit' style='margin-top:30px;'>\n    </div>\n  </div>\n\n  <script>\n    require([\n      'froala-editor',\n      'froala-editor/js/plugins/align.min'\n    ], function(FroalaEditor) {\n      new FroalaEditor('#edit')\n    });\n  </script>\n</body>\n\n</html>\n```\n\n\n\n### Load Froala Editor as a CommonJS Module\nFroala Editor is using an UMD module pattern, as a result it has support for CommonJS. *The following examples presumes you are using npm to install froala-editor, see Download and install FroalaEditor for more details.*\n\n```javascript\nvar FroalaEditor = require('froala-editor');\n\n// Load a plugin.\nrequire('froala-editor/js/plugins/align.min');\n\n// Initialize editor.\nnew FroalaEditor('#edit');\n```\n\n\n\n### Load Froala Editor as a transpiled ES6/UMD module\nSince Froala Editor supports ES6 (ESM - ECMAScript modules) and UMD (AMD, CommonJS), it can be also loaded as a module with the use of transpilers. E.g. Babel, Typescript. *The following examples presumes you are using npm to install froala-editor, see Download and install FroalaEditor for more details.*\n\n```javascript\nimport FroalaEditor from 'froala-editor'\n\n// Load a plugin.\nimport 'froala-editor/js/plugins/align.min.js'\n\n// Initialize editor.\nnew FroalaEditor('#edit')\n```\n\nFor more details on customizing the editor, please check the editor [documentation](https://www.froala.com/wysiwyg-editor/docs).\n\n\n\n## Use with your existing framework\n\n- Angular JS: https://github.com/froala/angular-froala\n- Angular 2: https://github.com/froala/angular2-froala-wysiwyg\n- Aurelia: https://github.com/froala/aurelia-froala-editor\n- CakePHP: https://github.com/froala/wysiwyg-cake\n- Craft 2 CMS: https://github.com/froala/Craft-Froala-WYSIWYG\n- Craft 3 CMS: https://github.com/froala/Craft-3-Froala-WYSIWYG\n- Django: https://github.com/froala/django-froala-editor\n- Ember: https://github.com/froala/ember-froala-editor\n- Knockout: https://github.com/froala/knockout-froala\n- Meteor: https://github.com/froala/meteor-froala\n- Ruby on Rails: https://github.com/froala/wysiwyg-rails\n- React JS: https://github.com/froala/react-froala-wysiwyg/\n- Reactive: https://github.com/froala/froala-reactive\n- Symfony: https://github.com/froala/KMSFroalaEditorBundle\n- Vue JS: https://github.com/froala/vue-froala-wysiwyg/\n- Yii2: https://github.com/froala/yii2-froala-editor\n- Wordpress: https://github.com/froala/wordpress-froala-wysiwyg\n\n\n\n\n## Browser Support\n\nAt present, we officially aim to support the last two versions of the following browsers:\n\n- Chrome\n- Edge\n- Firefox\n- Safari\n- Opera\n- Internet Explorer 11\n- Safari iOS\n- Chrome, Firefox and Default Browser Android\n\n\n\n## Resources\n\n- Demo: [www.froala.com/wysiwyg-editor](http://www.froala.com/wysiwyg-editor)\n- Download Page: [www.froala.com/wysiwyg-editor/download](https://www.froala.com/wysiwyg-editor/download)\n- Documentation:  [froala.com/wysiwyg-editor/docs](https://www.froala.com/wysiwyg-editor/docs)\n- License Agreement: [www.froala.com/wysiwyg-editor/terms](https://www.froala.com/wysiwyg-editor/terms)\n- Support: [wysiwyg-editor.froala.help](https://wysiwyg-editor.froala.help/hc/en-us)\n- Roadmap & Feature Requests: [https://wysiwyg-editor-roadmap.froala.com](https://wysiwyg-editor-roadmap.froala.com)\n- Issues [Repo guidelines](https://github.com/highcharts/highcharts/blob/master/repo-guidelines.md)\n\n\n\n\n## Reporting Issues\n\nWe use GitHub Issues as the official bug tracker for the Froala WYSIWYG HTML Editor. Here are some advices for our users that want to report an issue:\n\n1. Make sure that you are using the latest version of the Froala WYSIWYG Editor. The issue that you are about to report may be already fixed in the latest master branch version: https://github.com/froala/froala-wysiwyg/tree/master/js.\n2. Providing us reproducible steps for the issue will shorten the time it takes for it to be fixed. A JSFiddle is always welcomed, and you can start from this [basic one](https://jsfiddle.net/froala/cgu0dmxh/).\n3. Some issues may be browser specific, so specifying in what browser you encountered the issue might help.\n\n\n\n\n## Technical Support or Questions\n\nIf you have questions or need help integrating the editor please [contact us](https://www.froala.com/wysiwyg-editor/contact) instead of opening an issue.\n\n\n\n## Licensing\n\nIn order to use the Froala Editor you have to purchase one of the following licenses according to your needs. You can find more about that on our website on the [pricing plan page](https://www.froala.com/wysiwyg-editor/pricing).\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 2.9208984375,
          "content": "{\n  \"name\": \"froala-wysiwyg-editor\",\n  \"description\": \"A beautiful jQuery WYSIWYG HTML rich text editor. High performance and modern design make it easy to use for developers and loved by users.\",\n  \"homepage\": \"https://www.froala.com/wysiwyg-editor\",\n  \"license\": \"https://www.froala.com/wysiwyg-editor/pricing\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/froala/wysiwyg-editor.git\"\n  },\n  \"keywords\": [\n    \"froala\",\n    \"froala-editor\",\n    \"froala-wysiwyg\",\n    \"html\",\n    \"text\",\n    \"editor\",\n    \"wysiwyg\",\n    \"jquery-plugin\",\n    \"rich editor\",\n    \"rich text editor\",\n    \"rte\",\n    \"javascript\",\n    \"jquery\"\n  ],\n  \"moduleType\": \"globals\",\n  \"main\": [\n    \"css/froala_editor.min.css\",\n    \"css/froala_editor.pkgd.min.css\",\n    \"css/froala_style.min.css\",\n    \"css/plugins/char_counter.min.css\",\n    \"css/plugins/code_view.min.css\",\n    \"css/plugins/colors.min.css\",\n    \"css/plugins/markdown.min.css\",\n    \"css/plugins/draggable.min.css\",\n    \"css/plugins/emoticons.min.css\",\n    \"css/plugins/file.min.css\",\n    \"css/plugins/files_manager.min.css\",\n    \"css/plugins/fullscreen.min.css\",\n    \"css/plugins/help.min.css\",\n    \"css/plugins/image_manager.min.css\",\n    \"css/plugins/image.min.css\",\n    \"css/plugins/line_breaker.min.css\",\n    \"css/plugins/quick_insert.min.css\",\n    \"css/plugins/special_characters.min.css\",\n    \"css/plugins/table.min.css\",\n    \"css/plugins/video.min.css\",\n    \"css/third_party/embedly.min.css\",\n    \"css/third_party/spell_checker.min.css\",\n    \"js/froala_editor.min.js\",\n    \"js/froala_editor.pkgd.min.js\",\n    \"js/plugins/align.min.js\",\n    \"js/plugins/char_counter.min.js\",\n    \"js/plugins/code_beautifier.min.js\",\n    \"js/plugins/code_view.min.js\",\n    \"js/plugins/colors.min.js\",\n    \"js/plugins/draggable.min.js\",\n    \"js/plugins/emoticons.min.js\",\n    \"js/plugins/entities.min.js\",\n    \"js/plugins/file.min.js\",\n    \"js/plugins/files_manager.min.js\",\n    \"js/plugins/cryptojs.min.js\",\n    \"js/plugins/font_family.min.js\",\n    \"js/plugins/font_size.min.js\",\n    \"js/plugins/fullscreen.min.js\",\n    \"js/plugins/help.min.js\",\n    \"js/plugins/image.min.js\",\n    \"js/plugins/image_manager.min.js\",\n    \"js/plugins/inline_style.min.js\",\n    \"js/plugins/line_breaker.min.js\",\n    \"js/plugins/link.min.js\",\n    \"js/plugins/lists.min.js\",\n    \"js/plugins/paragraph_format.min.js\",\n    \"js/plugins/paragraph_style.min.js\",\n    \"js/plugins/print.min.js\",\n    \"js/plugins/quick_insert.min.js\",\n    \"js/plugins/quote.min.js\",\n    \"js/plugins/save.min.js\",\n    \"js/plugins/special_characters.min.js\",\n    \"js/plugins/table.min.js\",\n    \"js/plugins/url.min.js\",\n    \"js/plugins/video.min.js\",\n    \"js/plugins/word_paste.min.js\",\n    \"js/third_party/embedly.min.js\",\n    \"js/third_party/image_aviary.min.js\",\n    \"js/third_party/spell_checker.min.js\",\n    \"js/third_party/showdown.min.js\"\n  ],\n  \"ignore\": [\n    \"html\",\n    \"img\",\n    \"package.json\"\n  ],\n  \"dependencies\": {\n    \"jquery\": \">=1.11.0\",\n    \"font-awesome\": \">=4.4.0\"\n  }\n}"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.7021484375,
          "content": "{\n  \"name\": \"froala/wysiwyg-editor\",\n  \"description\": \"A beautiful jQuery WYSIWYG HTML rich text editor. High performance and modern design make it easy to use for developers and loved by users.\",\n  \"type\": \"component\",\n  \"homepage\": \"https://www.froala.com/wysiwyg-editor\",\n  \"license\": \"proprietary\",\n  \"support\": {\n    \"issues\": \"https://www.froala.com/wysiwyg-editor/contact\"\n  },\n  \"keywords\": [\n    \"froala\",\n    \"froala-editor\",\n    \"froala-wysiwyg\",\n    \"html\",\n    \"text\",\n    \"editor\",\n    \"wysiwyg\",\n    \"jquery-plugin\",\n    \"rich editor\",\n    \"rich text editor\",\n    \"rte\",\n    \"javascript\",\n    \"jquery\"\n  ],\n  \"authors\": [\n    {\n      \"name\": \"Froala Labs\",\n      \"email\": \"support@froala.com\"\n    }\n  ]\n}"
        },
        {
          "name": "css",
          "type": "tree",
          "content": null
        },
        {
          "name": "editor.jpg",
          "type": "blob",
          "size": 357.8115234375,
          "content": null
        },
        {
          "name": "html",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.d.ts",
          "type": "blob",
          "size": 68.4111328125,
          "content": "declare module \"froala-editor\" {\n  export default class FroalaEditor {\n    constructor(element: any, options: Partial<FroalaOptions>, fun?: (this: FroalaEditor) => any);\n    $oel: any;\n    $el: any;\n    $tb: any;\n    $box: any;\n    $wp: any;\n    $doc: any;\n    $sc: any;\n    $second_tb: any;\n    $tooltip: any;\n    el: any;\n    static ID: number;\n    static XS: number;\n    static SM: number;\n    static MD: number;\n    static LG: number;\n    static MARKERS: string; \n    static ENTER_BR: ENTER_BR;\n    static ENTER_P: ENTER_P;\n    static ENTER_DIV: ENTER_DIV;\n    static KEYCODE: keycodeParameters;\n    static COMMANDS: Partial<commandsInterface>;\n    destroy(): object;\n    opts: FroalaOptions;\n    align: Align;\n    button: Button;\n    charCounter: CharCounter;\n    wordCounter: WordCounter;\n    clean: Clean;\n    codeView: CodeView;\n    colors: Colors;\n    commands: Commands;\n    core: Core;\n    cursor: Cursor;\n    edit: Edit;\n    editInPopup: EditInPopup;\n    embedly: Embedly;\n    emoticons: Emoticons;\n    events: Events;\n    file: File;\n    fontFamily: FontFamily;\n    fontSize: FontSize;\n    format: Format;\n    forms: Forms;\n    fullscreen: Fullscreen;\n    helpers: Helpers;\n    html: HTML;\n    image: Image;\n    inlineClass: InlineClass;\n    inlineStyle: InlineStyle;\n    keys: Keys;\n    language: Language;\n    lineHeight: LineHeight;\n    link: Link;\n    lists: Lists;\n    markers: Markers;\n    markdown: Markdown;\n    modals: Modals;\n    node: Node;\n    paragraphFormat: ParagraphFormat;\n    paragraphStyle: ParagraphStyle;\n    placeholder: Placeholder;\n    popups: Popups;\n    position: Position;\n    quote: Apply<string>;\n    save: Save;\n    selection: FroalaSelection;\n    size: Size;\n    snapshot: Snapshot;\n    spellChecker: SpellChecker;\n    table: Table;\n    toolbar: Toolbar;\n    tooltip: Tooltip;\n    undo: Undo;\n    video: Video;\n    filesManager: FilesManager;\n    imageManager: ImageManager;\n    trim_video: Trim_video;\n    track_changes: Track_Changes;\n    special_characters: Special_characters;\n    word_paste: Word_paste;\n    refresh: Refresh;\n    shortcuts: Shortcuts;\n    static DefineIcon: (name: string, parameters: Partial<DefineIconParameters>) => object;\n    static RegisterCommand: (name: string, parameters: Partial<RegisterCommandParameters>) => void;\n    static RegisterShortcut: (keyCode: number,\n      command: string,\n      commandValue: any,\n      shortcutLetter?: string,\n      shiftKeyRequired?: boolean,\n      optionKeyRequired?: boolean\n    ) => void;\n    static RegisterTemplate: (name: string, template: string) => void;\n    static RegisterQuickInsertButton: (name: string, parameters: object) => void;\n    static DefineIconTemplate: (name: string, template: string) => void;\n    static ICON_DEFAULT_TEMPLATE: string;\n    static ICON_TEMPLATES: Partial<iconTemplates>;\n    static DEFAULTS: Partial<FroalaOptions> | { [key: string]: any };\n    static PLUGINS: (GenericObject<(editor: FroalaEditor) => CustomPlugin>) | any;\n    static MODULES: any | { [key: string]: any | { [key: string]: any } };\n    static BLOCK_TAGS: string[];\n    static END_MARKER: string;\n    static FILEICONS: Partial<fileIcons>;\n    static HAIR_SPACE: string;\n    static HTML5Map: {B: string, I: string, STRIKE: string};\n    static ICONS: Partial<icons>;\n    static INSTANCES: FroalaEditor[];\n    static INVISIBLE_SPACE: string;\n    static LANGUAGE: Languages;\n    static EXTERNAL_COMMANDS: any;\n    static MAIL_REGEX: RegExp;\n    static NO_DELETE_TAGS: string[];\n    static OPTS_MAPPING: object;\n    static POPUP_TEMPLATES: { [key: string]: any};\n    static POWERED_BY: string;\n    static SHARED: object;\n    static SHORTCUTS_MAP: object;\n    static SIMPLE_ENTER_TAGS: string[];\n    static START_MARKER: string;\n    static SVG: Partial<svg>;\n    static UNICODE_NBSP: string;\n    static VOID_ELEMENTS: string[];\n    static TOOLBAR_BUTTONS: Partial<ToolbarButtons>;\n    static TOOLBAR_BUTTONS_MD: any;\n    static TOOLBAR_BUTTONS_SM: Partial<ToolbarButtons>;\n    static TOOLBAR_BUTTONS_XS: Partial<ToolbarButtons>;\n    static TOOLBAR_VISIBLE_BUTTONS: number;\n    static VERSION: string;\n    static IMAGE_ALLOW_REGEX: RegExp;\n    static VIDEO_EMBED_REGEX: RegExp;\n    static IMAGE_EMBED_REGEX: RegExp;\n    static IMAGE_TYPE: string;\n    static VIDEO_PROVIDERS: object[];\n    static URLRegEx: string;\n    static LinkRegEx: string;\n    static QUICK_INSERT_BUTTONS: object;\n    LinkProtocols: string[];\n    LinkRegEx: string;\n    LinkRegExAuth: string;\n    LinkRegExCommon: string;\n    LinkRegExEnd: string;\n    LinkRegExHTTP: string;\n    LinkRegExTLD: string;\n    LinkRegExWWW: string;\n    icon: Icon;\n    accessibility: Accessibility;\n    [key: string]: any;\n    static [key: string]: any;\n  }\n\n  export type GenericObject<T = any> = { [key: string]: T };\n\n  export interface DefineIconParameters {\n      /**\n       * Template to be used to resolve the icon. Default is font_awesome.\n       * The values passed from DefineIconParameters will be injected into this templates html via parameter expansion.\n       */\n      template: string;\n\n      /**\n       * Default parameters available. Refer to ICON_TEMPLATES for more info.\n       */\n      NAME: string;\n      SRC: string;\n      ALT: string;\n      FA5NAME: string;\n      SVG_KEY: string;\n      [key: string]: any;\n  }\n\n  export interface RegisterCommandParameters {\n      type: string;\n      // Button title.\n      title: string;\n\n      // Specify the icon for the button.\n      // If this option is not specified, the button name will be used.\n      icon: string;\n\n      // Save the button action into undo stack.\n      undo: boolean;\n\n      // Focus inside the editor before the callback.\n      focus: boolean;\n\n      // Show the button on mobile or not.\n      showOnMobile: boolean;\n\n      // Refresh the buttons state after the callback.\n      refreshAfterCallback: boolean;\n\n      // Called when the button is hit.\n      // The current context is the editor instance.\n      callback: (this: FroalaEditor, buttonName: string, val?: any, params?: any) => void;\n\n      // Called when the button state might have changed.\n      refresh: (this: FroalaEditor, button: any) => void;\n      refreshOnShow: (this: FroalaEditor, $btn: any, $dropdown: any) => void;\n      plugin: string;\n      popup: boolean;\n      popups: any;\n      customPlugin: any;\n      toggle: boolean;\n      [key: string]: any;\n  }\n\n  export interface iconTemplates {\n      font_awesome: string,\n      font_awesome_5: string,\n      font_awesome_5r: string,\n      font_awesome_5l: string,\n      font_awesome_5b: string,\n      text: string,\n      image: string,\n      svg: string,\n      empty: string,\n      [key: string]: string\n  }\n\n  export interface fileIcons{\n      docIcon: {\n        extension: string,\n        path: string\n      },\n      gifIcon: {\n        extension: string,\n        path: string\n      },\n      jpegIcon: {\n        extension: string,\n        path: string\n      },\n      logIcon: {\n        extension: string,\n        path: string\n      },\n      movIcon: {\n        extension: string,\n        path: string\n      },\n      ogvIcon: {\n        extension: string,\n        path: string\n      },\n      pngIcon: {\n        extension: string,\n        path: string\n      },\n      txtIcon: {\n        extension: string,\n        path: string\n      },\n      webmIcon: {\n        extension: string,\n        path: string\n      },\n      webpIcon: {\n        extension: string,\n        path: string\n      },\n      wmvIcon: {\n        extension: string,\n        path: string\n      },\n      xlsIcon: {\n        extension: string,\n        path: string\n      },\n    \n      xlsxIcon: {\n        extension: string,\n        path: string\n      },\n      zipIcon: {\n        extension: string,\n        path: string\n      },\n      docxIcon: {\n        extension: string,\n        path: string\n      },\n      jpgIcon: {\n        extension: string,\n        path: string\n      },\n      mp3Icon: {\n        extension: string,\n        path: string\n      },\n      mp4Icon: {\n        extension: string,\n        path: string\n      },\n      oggIcon: {\n        extension: string,\n        path: string\n      },\n      pdfIcon: {\n        extension: string,\n        path: string\n      },\n      defaultIcon: {\n        extension: string,\n        path: string\n      },\n      [key: string]: { extension?: string, path?: string | RegExp }\n  }\n\n  export interface icons{\n      bold: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      italic: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      underline: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      strikeThrough: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      subscript: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      superscript: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      cancel: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      color: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      outdent: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      indent: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      undo: {\n        NAME: string,\n        FA5NAME: string,\n        SVG_KEY: string\n      },\n      redo: {\n        NAME: string,\n        FA5NAME: string,\n        SVG_KEY: string\n      },\n    \n      insert: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      insertAll: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      insertHR: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      clearFormatting: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      selectAll: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      minimize: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      moreText: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      moreParagraph: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      moreRich: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      moreMisc: {\n        NAME: string,\n        SVG_KEY: string\n      },\n      [key: string]: {  \n          NAME: string,\n          SVG_KEY: string,\n          FA5NAME?: string\n      }\n  }\n\n  export interface Languages {\n    ar: languageParameters;\n    bs: languageParameters;\n    cs: languageParameters;\n    da: languageParameters;\n    de: languageParameters;\n    el: languageParameters;\n    en_ca: languageParameters;\n    en_gb: languageParameters;\n    es: languageParameters;\n    et: languageParameters;\n    fa: languageParameters;\n    fi: languageParameters;\n    fr: languageParameters;\n    he: languageParameters;\n    hr: languageParameters;\n    hu: languageParameters;\n    id: languageParameters;\n    it: languageParameters;\n    ja: languageParameters;\n    ko: languageParameters;\n    ku: languageParameters;\n    me: languageParameters;\n    nb: languageParameters;\n    nl: languageParameters;\n    pl: languageParameters;\n    pt_br: languageParameters;\n    pt_pt: languageParameters;\n    ro: languageParameters;\n    ru: languageParameters;\n    sk: languageParameters;\n    sl: languageParameters;\n    sr: languageParameters;\n    sv: languageParameters;\n    th: languageParameters;\n    tr: languageParameters;\n    uk: languageParameters;\n    vi: languageParameters;\n    zh_cn: languageParameters;\n    zh_tw: languageParameters;\n    [key: string]: any;\n  }\n\n  export interface languageParameters {\n    translation: {\n      'Type something': string,\n\n      // Basic formatting\n      'Bold': string,\n      'Italic': string,\n      'Underline': string,\n      'Strikethrough': string,\n\n      // Main buttons\n      'Insert': string,\n      'Delete': string,\n      'Cancel': string,\n      'OK': string,\n      'Back': string,\n      'Remove': string,\n      'More': string,\n      'Update': string,\n      'Style': string,\n\n      // Font\n      'Font Family': string,\n      'Font Size': string,\n\n      // Colors\n      'Colors': string,\n      'Background': string,\n      'Text': string,\n      'HEX Color': string,\n\n      // Paragraphs\n      'Paragraph Format': string,\n      'Normal': string,\n      'Code': string,\n      'Heading 1': string,\n      'Heading 2': string,\n      'Heading 3': string,\n      'Heading 4': string,\n\n      // Style\n      'Paragraph Style': string,\n      'Inline Style': string,\n\n      // Alignment\n      'Align': string,\n      'Align Left': string,\n      'Align Center': string,\n      'Align Right': string,\n      'Align Justify': string,\n      'None': string,\n\n      // Lists\n      'Ordered List': string,\n      'Unordered List': string,\n\n      // Indent\n      'Decrease Indent': string,\n      'Increase Indent': string,\n\n      // Links\n      'Insert Link': string,\n      'Open in new tab': string,\n      'Open Link': string,\n      'Edit Link': string,\n      'Unlink': string,\n      'Choose Link': string,\n\n      // Images\n      'Insert Image': string,\n      'Upload Image': string,\n      'By URL': string,\n      'Browse': string,\n      'Drop image': string,\n      'or click': string,\n      'Manage Images': string,\n      'Loading': string,\n      'Deleting': string,\n      'Tags': string,\n      'Are you sure? Image will be deleted.': string,\n      'Replace': string,\n      'Uploading': string,\n      'Loading image': string,\n      'Display': string,\n      'Inline': string,\n      'Break Text': string,\n      'Alternative Text': string,\n      'Change Size': string,\n      'Width': string,\n      'Height': string,\n      'Something went wrong. Please try again.': string,\n      'Image Caption': string,\n      'Advanced Edit': string,\n\n      // Video\n      'Insert Video': string,\n      'Embedded Code': string,\n      'Paste in a video URL': string,\n      'Drop video': string,\n      'Your browser does not support HTML5 video.': string,\n      'Upload Video': string,\n\n      // Tables\n      'Insert Table': string,\n      'Table Header': string,\n      'Remove Table': string,\n      'Table Style': string,\n      'Horizontal Align': string,\n      'Row': string,\n      'Insert row above': string,\n      'Insert row below': string,\n      'Delete row': string,\n      'Column': string,\n      'Insert column before': string,\n      'Insert column after': string,\n      'Delete column': string,\n      'Cell': string,\n      'Merge cells': string,\n      'Horizontal split': string,\n      'Vertical split': string,\n      'Cell Background': string,\n      'Vertical Align': string,\n      'Top': string,\n      'Middle': string,\n      'Bottom': string,\n      'Align Top': string,\n      'Align Middle': string,\n      'Align Bottom': string,\n      'Cell Style': string,\n\n      // Files\n      'Upload File': string,\n      'Drop file': string,\n\n      // Emoticons\n      'Emoticons': string,\n      'Grinning face': string,\n      'Grinning face with smiling eyes': string,\n      'Face with tears of joy': string,\n      'Smiling face with open mouth': string,\n      'Smiling face with open mouth and smiling eyes': string,\n      'Smiling face with open mouth and cold sweat': string,\n      'Smiling face with open mouth and tightly-closed eyes': string,\n      'Smiling face with halo': string,\n      'Smiling face with horns': string,\n      'Winking face': string,\n      'Smiling face with smiling eyes': string,\n      'Face savoring delicious food': string,\n      'Relieved face': string,\n      'Smiling face with heart-shaped eyes': string,\n      'Smiling face with sunglasses': string,\n      'Smirking face': string,\n      'Neutral face': string,\n      'Expressionless face': string,\n      'Unamused face': string,\n      'Face with cold sweat': string,\n      'Pensive face': string,\n      'Confused face': string,\n      'Confounded face': string,\n      'Kissing face': string,\n      'Face throwing a kiss': string,\n      'Kissing face with smiling eyes': string,\n      'Kissing face with closed eyes': string,\n      'Face with stuck out tongue': string,\n      'Face with stuck out tongue and winking eye': string,\n      'Face with stuck out tongue and tightly-closed eyes': string,\n      'Disappointed face': string,\n      'Worried face': string,\n      'Angry face': string,\n      'Pouting face': string,\n      'Crying face': string,\n      'Persevering face': string,\n      'Face with look of triumph': string,\n      'Disappointed but relieved face': string,\n      'Frowning face with open mouth': string,\n      'Anguished face': string,\n      'Fearful face': string,\n      'Weary face': string,\n      'Sleepy face': string,\n      'Tired face': string,\n      'Grimacing face': string,\n      'Loudly crying face': string,\n      'Face with open mouth': string,\n      'Hushed face': string,\n      'Face with open mouth and cold sweat': string,\n      'Face screaming in fear': string,\n      'Astonished face': string,\n      'Flushed face': string,\n      'Sleeping face': string,\n      'Dizzy face': string,\n      'Face without mouth': string,\n      'Face with medical mask': string,\n\n      // Line breaker\n      'Break': string,\n\n      // Math\n      'Subscript': string,\n      'Superscript': string,\n\n      // Full screen\n      'Fullscreen': string,\n\n      // Horizontal line\n      'Insert Horizontal Line': string,\n\n      // Clear formatting\n      'Clear Formatting': string,\n\n      // Save\n      'Save': string,\n\n      // Undo, redo\n      'Undo': string,\n      'Redo': string,\n\n      // Select all\n      'Select All': string,\n\n      // Code view\n      'Code View': string,\n\n      // Quote\n      'Quote': string,\n      'Increase': string,\n      'Decrease': string,\n\n      // Quick Insert\n      'Quick Insert': string,\n\n      // Spcial Characters\n      'Special Characters': string,\n      'Latin': string,\n      'Greek': string,\n      'Cyrillic': string,\n      'Punctuation': string,\n      'Currency': string,\n      'Arrows': string,\n      'Math': string,\n      'Misc': string,\n\n      // Print.\n      'Print': string,\n\n      // Spell Checker.\n      'Spell Checker': string,\n\n      // Help\n      'Help': string,\n      'Shortcuts': string,\n      'Inline Editor': string,\n      'Show the editor': string,\n      'Common actions': string,\n      'Copy': string,\n      'Cut': string,\n      'Paste': string,\n      'Basic Formatting': string,\n      'Increase quote level': string,\n      'Decrease quote level': string,\n      'Image / Video': string,\n      'Resize larger': string,\n      'Resize smaller': string,\n      'Table': string,\n      'Select table cell': string,\n      'Extend selection one cell': string,\n      'Extend selection one row': string,\n      'Navigation': string,\n      'Focus popup / toolbar': string,\n      'Return focus to previous position': string,\n\n      // Embed.ly\n      'Embed URL': string,\n      'Paste in a URL to embed': string,\n\n      // Word Paste.\n      'The pasted content is coming from a Microsoft Word document. Do you want to keep the format or clean it up?': string,\n      'Keep': string,\n      'Clean': string,\n      'Word Paste Detected': string,\n\n      // Character Counter\n      'Characters': string,\n    \n      // More Buttons\n      'More Text': string,\n      'More Paragraph': string,\n      'More Rich': string,\n      'More Misc': string,\n\n      'Rounded': string,\n      'Bordered': string,\n      'Shadow': string,\n      'Download PDF': string,\n      'Text Color': string,\n      'Background Color': string,\n      'Inline Class': string,\n      'Highlighted': string,\n      'Transparent': string,\n      'Big Red': string,\n      'Small Blue': string,\n      'Default': string,\n      'Lower Alpha': string,\n      'Lower Greek': string,\n      'Lower Roman': string,\n      'Upper Alpha': string,\n      'Upper Roman': string,\n      'Circle': string,\n      'Disc': string,\n      'Square': string,\n      'Gray': string,\n      'Spaced': string,\n      'Uppercase': string,\n      'Line Height': string,\n      'Single': string,\n      'Double': string,\n      [key: string]: string,\n      },\n      direction: string;\n      [key: string]: any\n  }\n\n  export interface keycodeParameters {\n      BACKSPACE: number,\n      TAB: number,\n      ENTER: number,\n      SHIFT: number,\n      CTRL: number,\n      ALT: number,\n      ESC: number,\n      SPACE: number,\n      ARROW_LEFT: number,\n      ARROW_UP: number,\n      ARROW_RIGHT: number,\n      ARROW_DOWN: number,\n      DELETE: number,\n      ZERO: number,\n      ONE: number,\n      TWO: number,\n      THREE: number,\n      FOUR: number,\n      FIVE: number,\n      SIX: number,\n      SEVEN: number,\n      EIGHT: number,\n      NINE: number,\n      FF_SEMICOLON: number, \n      FF_EQUALS: number, \n      QUESTION_MARK: number, \n      A: number,\n      B: number,\n      C: number,\n      D: number,\n      E: number,\n      F: number,\n      G: number,\n      H: number,\n      I: number,\n      J: number,\n      K: number,\n      L: number,\n      M: number,\n      N: number,\n      O: number,\n      P: number,\n      Q: number,\n      R: number,\n      S: number,\n      T: number,\n      U: number,\n      V: number,\n      W: number,\n      X: number,\n      Y: number,\n      Z: number,\n      META: number,\n      NUM_ZERO: number,\n      NUM_ONE: number,\n      NUM_TWO: number,\n      NUM_THREE: number,\n      NUM_FOUR: number,\n      NUM_FIVE: number,\n      NUM_SIX: number,\n      NUM_SEVEN: number,\n      NUM_EIGHT: number,\n      NUM_NINE: number,\n      NUM_MULTIPLY: number,\n      NUM_PLUS: number,\n      NUM_MINUS: number,\n      NUM_PERIOD: number,\n      NUM_DIVISION: number,\n      F1: number,\n      F2: number,\n      F3: number,\n      F4: number,\n      F5: number,\n      F6: number,\n      F7: number,\n      F8: number,\n      F9: number,\n      F10: number,\n      F11: number,\n      F12: number,\n      FF_HYPHEN: number, \n      SEMICOLON: number, \n      DASH: number, \n      EQUALS: number, \n      COMMA: number, \n      HYPHEN: number, \n      PERIOD: number, \n      SLASH: number, \n      APOSTROPHE: number, \n      TILDE: number, \n      SINGLE_QUOTE: number, \n      OPEN_SQUARE_BRACKET: number, \n      BACKSLASH: number, \n      CLOSE_SQUARE_BRACKET: number, \n      IME: number    \n  }\n\n  export interface svg {\n      add: string,\n      advancedImageEditor: string,\n      alignCenter: string,\n      alignJustify: string,\n      alignLeft: string,\n      alignRight: string,\n      anchors: string,\n      autoplay: string,\n      back: string,\n      backgroundColor: string,\n      blockquote: string,\n      bold: string,\n      cancel: string,\n      cellBackground: string,\n      cellBorderColor: string,\n      cellOptions: string,\n      cellStyle: string,\n      clearFormatting: string,\n      close: string,\n      codeView: string,\n      cogs: string,\n      columns: string,\n      edit: string,\n      exitFullscreen: string,\n      fileInsert: string,\n      fileManager: string,\n      markdown: string,\n      fontAwesome: string,\n      fontFamily: string,\n      fontSize: string,\n      fullscreen: string,\n      help: string,\n      horizontalLine: string,\n      imageAltText: string,\n      imageCaption: string,\n      imageClass: string,\n      imageDisplay: string,\n      imageManager: string,\n      imageSize: string,\n      indent: string,\n      inlineClass: string,\n      inlineStyle: string,\n      insert: string,\n      insertEmbed: string,\n      insertFile: string,\n      insertImage: string\n      insertLink: string,\n      insertMore: string,\n      insertTable: string,\n      insertVideo: string,\n      upload: string,\n      uploadFiles: string,\n      italic: string,\n      search: string,\n      lineHeight: string,\n      linkStyles: string,\n      mention: string,\n      minimize: string,\n      more: string,\n      openLink: string,\n      orderedList: string,\n      outdent: string,\n      pageBreaker: string,\n      paragraphFormat: string,\n      paragraphMore: string,\n      paragraphStyle: string,\n      pdfExport: string,\n      print: string,\n      redo: string,\n      removeTable: string,\n      insertAll: string,\n      remove: string,\n      replaceImage: string,\n      row: string,\n      selectAll: string,\n      smile: string,\n      spellcheck: string,\n      star: string,\n      strikeThrough: string,\n      subscript: string,\n      superscript: string,\n      symbols: string,\n      tags: string,\n      tableHeader: string,\n      tableFooter: string,\n      tableStyle: string,\n      textColor: string,\n      textMore: string,\n      underline: string,\n      undo: string,\n      unlink: string,\n      unorderedList: string,\n      verticalAlignBottom: string,\n      verticalAlignMiddle: string,\n      verticalAlignTop: string,\n      trackChanges: string,\n      showTrackChanges: string,\n      acceptAllChanges: string,\n      rejectAllChanges: string,\n      acceptSingleChange: string,\n      rejectSingleChange: string,\n      [key: string]: string\n  }\n  \n\n  export interface commandsInterface\n  {\n      align:Align;\n      bold: {\n      title: string,\n      toggle: boolean,\n      refresh($btn: any): void\n      },\n      italic: {\n      title: string,\n      toggle: boolean,\n      refresh($btn: any): void\n      },\n      underline: {\n      title: string,\n      toggle: boolean,\n      refresh($btn: any): void\n      },\n      strikeThrough: {\n      title: string,\n      toggle: boolean,\n      refresh($btn: any): void\n      },\n      subscript: {\n      title: string,\n      toggle: boolean,\n      refresh($btn: any): void\n      },\n      superscript: {\n      title: string,\n      toggle: boolean,\n      refresh($btn: any): void\n      },\n      outdent: {\n      title: string\n      },\n      indent: {\n      title: string\n      },\n      undo: {\n      title: string,\n      undo: boolean,\n      forcedRefresh: boolean,\n      disabled: boolean\n      },\n      redo: {\n      title: string,\n      undo: boolean,\n      forcedRefresh: boolean,\n      disabled: boolean\n      },\n      insertHR: {\n      title: string\n      },\n      clearFormatting: {\n      title: string\n      },\n      selectAll: {\n      title: string,\n      undo: boolean\n      },\n      moreText: {\n      title: string,\n      undo: boolean\n      },\n      moreParagraph: {\n      title: string,\n      undo: boolean\n      },\n      moreRich: {\n      title: string,\n      undo: boolean\n      },\n      moreMisc: {\n      title: string,\n      undo: boolean\n      }\n  }\n\n\n  export interface ToolbarButtons {\n      'moreText': {\n        'buttons': string[],\n         [key: string]: any\n      },\n      'moreParagraph': {\n        'buttons': string[],\n        [key: string]: any\n      },\n      'moreRich': {\n        'buttons': string[],\n        'buttonsVisible': number,\n        [key: string]: any\n      },\n      'moreMisc': {\n        'buttons': string[],\n        'align': string,\n        'buttonsVisible': number,\n        [key: string]: any\n      },\n      'trackChanges': {\n        'buttons': string[],\n        'buttonsVisible': number,\n        [key: string]: any\n      },\n      [key: string]: {\n        buttons: string[];\n        align?: string;\n        buttonsVisible?: number;\n        [key: string]: any\n      };\n  }\n\n  export interface CustomPlugin {\n    [key: string]: any | { [key: string]: any; };\n   \n  } \n  \n  export interface EmoticonSet {\n    id: string;\n    code: string;\n    name: string;\n    emoticons:{\n      code: string;\n      desc: string;\n    }[];\n  }\n\n  export type DeleteMethod = 'POST' | 'DELETE';\n  export type GetMethod = 'POST' | 'GET';\n\n  export type ENTER_BR = number;\n  export type ENTER_P = number;\n  export type ENTER_DIV = number;\n\n  export interface SpecialCharacterSet {\n    title: string;\n    char?: string;\n    list: {\n      char: string;\n      desc: string;\n    }[];\n  }\n\n  export interface FroalaOptions {\n    // apiKey\n    apiKey: string;\n\n    // app\n    app: string;\n\n    //codoxOptions\n    codoxOptions: object;\n\n    //docId\n    docId: string;\n\n    //filesManagerAllowedTypes\n    filesManagerAllowedTypes: string[];\n\n    //filesManagerMaxSize\n    filesManagerMaxSize: number;\n\n    //filesManagerUploadParams\n    filesManagerUploadParams: GenericObject;\n\n    //filesManagerUploadToS3\n    filesManagerUploadToS3: object;\n\n    //filesManagerUploadURL\n    filesManagerUploadURL: string;\n\n    //editor\n    editor: FroalaEditor;\n\n    //username\n    username: string;\n\n    // Aviary Editor\n    aviaryKey: boolean;\n    aviaryOptions: { [key: string]: any };\n\n    // Char Counter\n    charCounterCount: boolean;\n    charCounterMax: number;\n\n    // Word Counter\n    wordCounterCount: boolean;\n    wordCounterMax: number;\n\n    // Code Beautifier\n    codeBeautifierOptions: Object;\n\n    // Code View\n    codeMirror: any;\n    codeMirrorOptions: object; \n    codeViewKeepActiveButtons: string[];\n\n    // Colors\n    colorsBackground: string[];\n    colorsButtons: string[];\n    colorsHEXInput: boolean;\n    colorsStep: number;\n    colorsText: string[];\n\n    // Draggable\n    dragInline: boolean;\n\n    // Events\n    events: Partial<FroalaEvents>;\n\n    // Embedly\n    embedlyEditButtons: string[];\n    embedlyInsertButtons: string[];\n    embedlyKey: string;\n    embedlyScriptPath: string;\n\n    // Emoticons\n    emoticonsButtons: string[];\n    emoticonsSet: EmoticonSet[];\n    emoticonsStep: number;\n    emoticonsUseImage: boolean;\n\n    // Entities\n    entities: string;\n\n    // File\n    fileAllowedTypes: string[];\n    fileInsertButtons: string[];\n    fileMaxSize: number;\n    fileUpload: boolean;\n    fileUploadMethod: string; \n    fileUploadParam: string;\n    fileUploadParams: object;\n    fileUploadToS3: object;\n    fileUploadURL: string;\n    fileUseSelectedText: boolean;\n\n    // Font Family\n    fontFamily: GenericObject; \n    fontFamilyDefaultSelection: string;\n    fontFamilySelection: boolean;\n\n    // Font Size\n    fontSize: string[];\n    fontSizeDefaultSelection: string;\n    fontSizeSelection: boolean;\n    fontSizeUnit: string;\n\n    // Form\n    formEditButtons: string[];\n    formMultipleStyles: boolean;\n    formStyles: GenericObject; \n    formUpdateButtons: string[];\n\n    // Licensing\n    key: string;\n\n    // General\n    attribution: boolean;\n    autoStart: boolean;\n    autofocus: boolean;\n    direction: string; \n    disableRightClick: boolean;\n    documentReady: boolean;\n    editInPopup: boolean;\n    update: void;\n    editorClass: string;\n    enter: ENTER_BR | ENTER_P | ENTER_DIV;\n    fullPage: boolean;\n    height: number | string;\n    heightMax: number | string;\n    heightMin: number | string;\n    htmlAllowComments: boolean;\n    htmlAllowedAttrs: string[];\n    htmlAllowedEmptyTags: string[];\n    htmlAllowedStyleProps: string[];\n    htmlAllowedTags: string[];\n    htmlDoNotWrapTags: string[];\n    htmlExecuteScripts: boolean;\n    htmlIgnoreCSSProperties: string[];\n    htmlRemoveTags: string[];\n    htmlSimpleAmpersand: boolean;\n    htmlUntouched: boolean;\n    iconsTemplate: string;\n    iframe: boolean;\n    iframeDefaultStyle: string;\n    iframeStyle: string;\n    iframeStyleFiles: string[];\n    indentMargin: number;\n    initOnClick: boolean;\n    keepFormatOnDelete: boolean;\n    multiLine: boolean;\n    preserveTabSpaces: boolean;\n    pasteAllowLocalImages: boolean;\n    pasteAllowedStyleProps: string[];\n    pasteDeniedAttrs: string[];\n    pasteDeniedTags: string[];\n    pastePlain: boolean;\n    placeholderText: string;\n    pluginsEnabled: string[];\n    popupButtons: string[];\n    requestHeaders: GenericObject<string>; \n    requestWithCORS: boolean;\n    requestWithCredentials: boolean;\n    scrollableContainer: string;\n    shortcutsEnabled: string[];\n    shortcutsHint: boolean;\n    spellcheck: boolean;\n    tabIndex: number;\n    tabSpaces: number;\n    theme: string;\n    toolbarBottom: boolean;\n    toolbarButtons: object;\n    toolbarButtonsMD: Partial<ToolbarButtons>; \n    toolbarButtonsSM: Partial<ToolbarButtons>; \n    toolbarButtonsXS: Partial<ToolbarButtons>; \n    toolbarContainer: string; \n    toolbarInline: boolean;\n    toolbarSticky: boolean;\n    toolbarStickyOffset: number;\n    toolbarVisibleWithoutSelection: boolean;\n    tooltips: boolean;\n    typingTimer: number;\n    useClasses: boolean;\n    width: string;\n    zIndex: number;\n\n    // Help\n    helpSets: object[];\n\n    // Image\n    imageAddNewLine: boolean;\n    imageAllowedTypes: string[];\n    imageAltButtons: string[];\n    imageCORSProxy: string;\n    imageDefaultAlign: MediaAlign; \n    imageDefaultDisplay: DisplayType; \n    imageDefaultMargin: number;\n    imageDefaultWidth: number;\n    imageEditButtons: string[];\n    imageInsertButtons: string[];\n    imageMaxSize: number;\n    imageMinWidth: number;\n    imageMove: boolean;\n    imageMultipleStyles: boolean;\n    imageOutputSize: boolean;\n    imagePaste: boolean;\n    imagePasteProcess: boolean;\n    imageResize: boolean;\n    imageResizeWithPercent: boolean;\n    imageRoundPercent: boolean;\n    imageSizeButtons: string[];\n    imageSplitHTML: boolean;\n    imageStyles: GenericObject<string>; \n    imageTUIOptions: object;\n    imageTextNear: boolean;\n    imageUpload: boolean;\n    imageUploadMethod: string; \n    imageUploadParam: string;\n    imageUploadParams: object;\n    imageUploadRemoteUrls: boolean;\n    imageUploadToS3: object;\n    imageUploadURL: string;\n\n    // Image Manager\n    imageManagerDeleteMethod: DeleteMethod; \n    imageManagerDeleteParams: object;\n    imageManagerDeleteURL: string;\n    imageManagerLoadMethod: GetMethod; \n    imageManagerLoadParams: object;\n    imageManagerLoadURL: string;\n    imageManagerPageSize: number;\n    imageManagerPreloader: string;\n    imageManagerScrollOffset: number;\n    imageManagerToggleTags: boolean;\n\n    // Inline Style\n    inlineStyles: GenericObject<string>; \n\n    // Inline Class\n    inlineClasses: GenericObject<string>; \n\n    // Language\n    language: string;\n\n    // Line Breaker\n    lineBreakerHorizontalOffset: number;\n    lineBreakerOffset: number;\n    lineBreakerTags: string[];\n\n    // Link\n    linkAlwaysBlank: boolean;\n    linkAlwaysNoFollow: boolean;\n    linkAttributes: GenericObject; \n    linkAutoPrefix: string;\n    linkConvertEmailAddress: boolean;\n    linkEditButtons: string[];\n    linkInsertButtons: string[];\n    linkList: GenericObject<string>[]; \n    linkMultipleStyles: boolean;\n    linkNoOpener: boolean;\n    linkNoReferrer: boolean;\n    linkStyles: GenericObject<string>; \n    linkText: boolean;\n\n    // Paragraph Format\n    lineHeights: GenericObject<string>; \n    paragraphDefaultSelection: string;\n    paragraphFormat: GenericObject<string>;\n    paragraphFormatSelection: boolean;\n    paragraphMultipleStyles: boolean;\n    paragraphStyles: GenericObject<string>;\n\n    // Lists\n    listAdvancedTypes: boolean;\n\n    // Quick Insert\n    quickInsertButtons: string[];\n    quickInsertEnabled: boolean;\n    quickInsertTags: string[];\n\n    // Font Awesome\n    faButtons: string[];\n    fontAwesomeSets: object;\n    fontAwesomeTemplate: string;\n\n    // Special Characters\n    specialCharButtons: string[];\n    specialCharactersSets: SpecialCharacterSet[]; \n\n    // SCAYT Spell Checker\n    scaytAutoload: boolean;\n    scaytCustomerId: string;\n    scaytOptions: object;\n\n    // Save\n    saveInterval: number;\n    saveMethod: string; \n    saveParam: string;\n    saveParams: object;\n    saveURL: string;\n\n    // Table\n    tableCellMultipleStyles: boolean;\n    tableCellStyles: GenericObject<string>; \n    tableColors: string[];\n    tableColorsButtons: string[];\n    tableColorsStep: number;\n    tableDefaultWidth: string;\n    tableEditButtons: string[];\n    tableInsertButtons: string[];\n    tableInsertHelper: boolean;\n    tableInsertHelperOffset: number;\n    tableInsertMaxSize: number;\n    tableMultipleStyles: boolean;\n    tableResizer: boolean;\n    tableResizerOffset: number;\n    tableResizingLimit: number;\n    tableStyles: GenericObject<string>; \n\n    // Video\n    videoAllowedProviders: string[];\n    videoAllowedTypes: string[];\n    videoDefaultAlign: string; \n    videoDefaultDisplay: string; \n    videoDefaultWidth: number;\n    videoEditButtons: string[];\n    videoInsertButtons: string[];\n    videoMaxSize: number;\n    videoMove: boolean;\n    videoResize: boolean;\n    videoResponsive: boolean;\n    videoSizeButtons: string[]; \n    videoSplitHTML: boolean;\n    videoTextNear: boolean;\n    videoUpload: boolean;\n    videoUploadMethod: string; \n    videoUploadParam: string;\n    videoUploadParams: object;\n    videoUploadToS3: object; \n    videoUploadURL: string;\n\n    // Word\n    wordAllowedStyleProps: string[];\n    wordDeniedAttrs: string[];\n    wordDeniedTags: string[];\n    wordPasteKeepFormatting: boolean;\n    wordPasteModal: boolean;\n\n    showChangesEnabled: boolean;\n    trackChangesEnabled: boolean;\n    [key: string]: any;\n\n    // Filestack\n    filestackOptions: object;\n  }\n\n  export interface FroalaEvents {\n    blur: (this: FroalaEditor) => void;\n    click: (this: FroalaEditor, clickEvent: any) => void;\n    contentChanged: (this: FroalaEditor) => void;\n    destroy: (this: FroalaEditor) => void;\n    drop: (this: FroalaEditor, dropEvent: any) => void;\n    focus: (this: FroalaEditor) => void;\n    initialized: (this: FroalaEditor) => void;\n    initializationDelayed: (this: FroalaEditor) => void;\n    input: (this: FroalaEditor, inputEvent: any) => void;\n    keydown: (this: FroalaEditor, keydownEvent: any) => void;\n    keypress: (this: FroalaEditor, keypressEvent: any) => void;\n    keyup: (this: FroalaEditor, keyupEvent: any) => void;\n    mousedown: (this: FroalaEditor, mousedownEvent: any) => void;\n    mouseup: (this: FroalaEditor, mouseupEvent: any) => void;\n    shortcut: (this: FroalaEditor, event: Event, commandName: string, shortcutValue: any) => void;\n    touchstart: (this: FroalaEditor, touchstartEvent: any) => void;\n    touchend: (this: FroalaEditor, touchendEvent: any) => void;\n    'buttons.refresh': (this: FroalaEditor) => boolean;\n    //character count event\n    'charCounter.exceeded': (this: FroalaEditor) => void;\n    'charCounter.update': (this: FroalaEditor) => void;\n    //word count event\n    'wordCounter.exceeded': (this: FroalaEditor) => void;\n    'wordCounter.update': (this: FroalaEditor) => void;\n    //code view event\n    'codeView.update': (this: FroalaEditor) => void;\n    //commands event\n    'commands.after': (this: FroalaEditor, cmd: any, param1?: any, param2?: any) => void;\n    'commands.before': (this: FroalaEditor, cmd: any, param1?: any, param2?: any) => void;\n    'commands.mousedown': (this: FroalaEditor, button: any) => void;\n    'commands.redo': (this: FroalaEditor) => void;\n    'commands.undo': (this: FroalaEditor) => void;\n    //html event\n    'html.afterGet': (this: FroalaEditor) => void;\n    'html.beforeGet': (this: FroalaEditor) => void;\n    'html.processGet': (this: FroalaEditor, el: Element) => void;\n    'html.get': (this: FroalaEditor, html: HTMLElement) => void;\n    'html.set': (this: FroalaEditor) => void;\n    //image events\n    'image.beforePasteUpload': (this: FroalaEditor, img: Image) => boolean;\n    'image.beforeRemove': (this: FroalaEditor, img: any) => boolean;\n    'image.beforeUpload': (this: FroalaEditor, files: any) => boolean;\n    'image.hideResizer': (this: FroalaEditor, images: any) => boolean;\n    'image.error': (this: FroalaEditor, error: object, response: any) => void;\n    'image.inserted': (this: FroalaEditor, img: object, response: any) => void;\n    'image.loaded': (this: FroalaEditor, img: object) => void;\n    'image.removed': (this: FroalaEditor, img: object) => void;\n    'image.replaced': (this: FroalaEditor, img: object, response: any) => void;\n    'image.resize': (this: FroalaEditor, img: object) => void;\n    'image.resizeEnd': (this: FroalaEditor, img: object) => void;\n    'image.uploaded': (this: FroalaEditor, response: any) => boolean;\n    'image.uploadedToS3': (this: FroalaEditor, link: URL, key: string, response: any) => void;\n    'filestack.uploadedToFilestack': (this: FroalaEditor, response: any) => boolean;\n    'filestack.uploadFailedToFilestack': (this: FroalaEditor, response: any) => boolean;\n    'filestack.filestackPickerClosed': (this: FroalaEditor, response: any) => boolean;\n    'filestack.filestackPickerOpened': (this: FroalaEditor, response: any) => boolean;\n    //imagemanager event\n    'imageManager.beforeDeleteImage': (this: FroalaEditor, img: object) => void;\n    'imageManager.error': (this: FroalaEditor, error: object, response: any) => void;\n    'imageManager.imageDeleted': (this: FroalaEditor, data: object) => void;\n    'imageManager.imageLoaded': (this: FroalaEditor, img: object) => void;\n    'imageManager.imagesLoaded': (this: FroalaEditor, data: any) => void;\n    //link event\n    'link.bad': (this: FroalaEditor, original_href: string) => void;\n    'link.beforeInsert': (this: FroalaEditor, link: string, text: string, attrs: object) => boolean;\n    'link.beforeRemove': (this: FroalaEditor, link: string, text: string, attrs: object) => boolean;\n    //paste event\n    'paste.after': (this: FroalaEditor) => void;\n    'paste.afterCleanup': (this: FroalaEditor, clipboard_html: string) => void;\n    'paste.before': (this: FroalaEditor, original_event: any, clipboard_data?: any) => boolean;\n    'paste.beforeCleanup': (this: FroalaEditor, clipboard_html: string) => void;\n    'paste.wordPaste': (this: FroalaEditor, clipboard_html: string) => void;\n    // popups events\n    [hidepopup: `popups.hide${string}`]: (this: FroalaEditor) => void;\n    [showpopup: `popups.show${string}`]: (this: FroalaEditor) => void;\n    //position event\n    'position.refresh': (this: FroalaEditor) => void;\n    //save event\n    'save.after': (this: FroalaEditor, data: any) => void;\n    'save.before': (this: FroalaEditor, html: string) => boolean;\n    'save.error': (this: FroalaEditor, error: string, response: object) => void;\n    //snapshot event\n    'snapshot.after': (this: FroalaEditor) => void;\n    'snapshot.before': (this: FroalaEditor) => void;\n    //table event\n    'table.inserted': (this: FroalaEditor, table: Element) => void;\n    'table.resized': (this: FroalaEditor, table: Element) => void;\n    //toolbar event\n    'toolbar.esc': (this: FroalaEditor) => boolean;\n    'toolbar.focusEditor': (this: FroalaEditor) => boolean;\n    'toolbar.hide': (this: FroalaEditor) => boolean;\n    'toolbar.show': (this: FroalaEditor) => boolean;\n    //video event\n    'video.codeError': (this: FroalaEditor, code: string) => void;\n    'video.inserted': (this: FroalaEditor, $video: any) => void;\n    'video.replaced': (this: FroalaEditor, $video: any) => void;\n    'video.linkError': (this: FroalaEditor, link: string) => void;\n    'video.removed': (this: FroalaEditor, $video: any) => void;\n    'video.loaded': (this: FroalaEditor, $video: any) => void;\n    'video.uploaded': (this: FroalaEditor, response: object) => void;\n    'video.uploadedToS3': (this: FroalaEditor, link: string, key: string, response: object) => void;\n    'video.beforeUpload': (this: FroalaEditor, $video: any) => boolean;\n    'video.beforeRemove': (this: FroalaEditor, $video: any) => boolean;\n    'video.hideResizer': (this: FroalaEditor) => boolean;\n    //quick insert event\n    'quickInsert.commands.after': (this: FroalaEditor, cmd: any) => void;\n    'quickInsert.commands.before': (this: FroalaEditor, cmd: any) => boolean;\n    //url event\n    'url.linked': (this: FroalaEditor, link: string) => void;\n    //window event\n    'window.copy': (this: FroalaEditor) => void;\n    'window.cut': (this: FroalaEditor) => void;\n    //filemanager event\n    'filesManager.beforeUpload': (this: FroalaEditor, files: any[]) => boolean;\n    'filesManager.error': (this: FroalaEditor, error: object, response: object) => boolean;\n    'filesManager.uploaded': (this: FroalaEditor, response: any) => boolean;\n    'filesManager.uploadedToS3': (this: FroalaEditor, link: string, key: string, response: object) => boolean;\n    //embedly event\n    'embedly.beforeRemove': (this: FroalaEditor, embeded: object) => void;\n    //file event\n    'file.beforeUpload': (this: FroalaEditor, files: string) => boolean;\n    'file.error': (this: FroalaEditor, error: object, response: any) => boolean;\n    'file.inserted': (this: FroalaEditor, file: object, response: any) => void;\n    'file.unlink': (this: FroalaEditor, link: Object) => boolean;\n    'file.uploaded': (this: FroalaEditor, response: any) => boolean;\n    'file.uploadedToS3': (this: FroalaEditor, link: any, key: any, response: any) => void;\n    //edit event\n    'edit.on': (this: FroalaEditor) => void;\n    'edit.off': (this: FroalaEditor) => void;\n    //element event\n    'element.dropped': (this: FroalaEditor, element: object) => void;\n    [key: string]: (this:FroalaEditor, ...args: any[]) => any;\n  }\n\n  export interface FilesManager {\n    _init(): void;\n    showInsertPopup(rerender: any): void;\n    showLayer(name: any): void;\n    refreshUploadButton(button: any): void;\n    refreshByURLButton(button: any): void;\n    upload(file: any, files: any, image_placeholder: any, index: any): boolean;\n    insertByURL(): void;\n    insertAllFiles(): void;\n    deleteAllFiles(): void;\n    get(): any;\n    getEl(): any;\n    insert(index: any, fileKeys: any): void;\n    showProgressBar(no_message: any): void;\n    remove(image: any): void;\n    hideProgressBar(dismiss: any): void;\n    applyStyle(val: any, imageStyles: any, multipleStyles: any): boolean;\n    showAltPopup(): void;\n    showSizePopup(): void;\n    setAlt(alt: any): void;\n    setSize(width: any, height: any): void;\n    toggleCaption(): void;\n    refreshEmbedButton($btn: any): void;\n    insertEmbed(code: any): void;\n    hasCaption(): boolean;\n    exitEdit(force_exit: any): void;\n    edit($img: any): void;\n    cancelFileInsert(): void;\n    minimizePopup(current_index: any): void;\n    editImage(index: any): void;\n    saveImage($img: any): void;\n    _showErrorMessage(message: any): void;\n    _showFileErrorMessage(message: any, index: any): void;\n    getFileThumbnail(index: any, file: any, update: any): void;\n    deleteFile(index: any): void;\n    checkAutoplay(index: any): void;\n    checkInsertAllState(): void;\n    _disableInsertCheckbox(): void;\n    _getFileType(file: any): any;\n    isChildWindowOpen(): boolean;\n    setChildWindowState(childWindowState: any): void;\n    resetAllFilesCheckbox(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Image {\n    _init(): void;\n    showInsertPopup(): void;\n    showLayer(name: any): void;\n    refreshUploadButton($btn: any): void;\n    refreshByURLButton($btn: any): void;\n    align(alignType: AlignType): object;\n    applyStyle(className: string): object;\n    display(displayType: DisplayType): any;\n    get(): object;\n    insert(link: string, sanitize: boolean, data: { [key: string]: any }, existingImage: any, response?: object): object;\n    remove(image: any): object;\n    setAlt(alternateText: string): object;\n    setSize(width: string, height: string): object;\n    upload(images: any[]): object;\n    insertByURL(): void;\n    refreshAlign($btn: any): void;\n    refreshAlignOnShow($btn: any): void;\n    refreshDisplayOnShow($btn: any): void;\n    replace(): void;\n    back(): void;\n    getEl(): object;\n    showProgressBar(no_message: any): void;\n    hideProgressBar(dismiss: any): void;\n    applyStyle(val: any, imageStyles: any, multipleStyles: any): object;\n    showAltPopup(): void;\n    showSizePopup(): void;\n    toggleCaption(): void;\n    hasCaption(): void;\n    exitEdit(force_exit: boolean): boolean;\n    edit($img: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface CharCounter {\n    _init(): boolean;\n    // Returns the number of characters in the editor.\n    count(): number;\n  }\n\n  export interface WordCounter {\n    _init(): boolean;\n    // Returns the number of words in the editor.\n    wordCount(): number;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  interface Apply<T> {\n    apply(value: string): object | void;\n  }\n\n  export type MediaAlign = 'left' | 'right' | 'center';\n  export type AlignType = 'left' | 'right' | 'center' | 'justify';\n\n  export interface Align {\n      // Set the alignment of the selected paragraphs.\n      apply(alignType: AlignType): object;\n      // Refresh the alignment of the selected paragraphs.\n      refresh(button: Element): object;\n      refreshOnShow(button: any, dropdown: any): void;\n      refreshForToolbar(button: any): void;\n      options: {\n        center: string, \n        justify: string,\n        left: string,\n        right: string\n      }\n    }\n\n  export interface Button {\n    _init(): void;\n    // Adds buttons into existing toolbar.\n    addButtons(buttons: any): object;\n    // Refreshes the state of the buttons in the toolbar.\n    bulkRefresh(): void;\n    // Builds a list of commands to a button list represented as a HTML string.\n    buildList(buttons: string[]): string;\n    // Builds a list of commands to a button list represented as a HTML string.\n    buildGroup(): void;\n    // Attaches the event callbacks.\n    bindCommands(element: Element): void;\n    // Refreshes the state of active command/button.\n    refresh(button: Element): void;\n    // Hides all the active dropdowns.\n    hideActiveDropdowns(element: Element): void;\n    build: (command: any, info: any, visible: any) => string;\n    exec: ($btn: any) => void;\n    click: ($btn: any) => void;\n    getButtons: (selector: any, search_dropdowns: any) => any;\n    getPosition: ($elm: any) => { left: any; top: any };\n  }\n\n  export interface Clean {\n    _init(): void;\n    // Cleans dirty HTML to clean HTML ready to be inserted into the editor.\n    html(dirtyHtml: string): string;\n    // Cleans the tables.\n    tables(): void;\n    // Cleans the lists.\n    lists(): void;\n    // Cleans the invisible spaces.\n    invisibleSpaces(dirtyHtml: string): void;\n    toHTML5(): void;\n    exec(html: string, func: any, parse_head: any): any;\n  }\n\n  export interface CodeView {\n    _init(): boolean;\n    // Find if code view mode is active.\n    isActive(): boolean;\n    // Get the HTML edited inside the code view mode.\n    get(): string;\n    // Toggle between the code and text view.\n    toggle(): object;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Colors {\n    // Set the background color of the selected text.\n    background(color: string): object;\n    // Set the text color of the selected text.\n    text(value: string): object;\n    // Hides the color picker popup.\n    back(): void;\n    showColorsPopup(cmd_type: any): void;\n    customColor(tab: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Commands {\n    exec(cmd: any, params?: any): any;\n    // Format the selected text as bold.\n    bold(): object;\n    // Clean any formatting on the selected text.\n    clearFormatting(): object;\n    // Indent more the selected paragraphs.\n    indent(): object;\n    // Insert a horizontal line at the cursor position.\n    insertHR(): object;\n    // Format the selected text as italic.\n    italic(): object;\n    // Indent less the selected paragraphs.\n    outdent(): object;\n    // Executes the redo action.\n    redo(): object;\n    // Show the inline toolbar at the cursor position.\n    show(): object;\n    // Format the selected text as strike through.\n    strikeThrough(): object;\n    // Format the selected text as subscript.\n    subscript(): object;\n    // Format the selected text as superscript.\n    superscript(): object;\n    // Format the selected text as underline.\n    underline(): object;\n    // Executes the undo action.\n    undo(): object;\n    // Executes the selectAll action.\n    selectAll(): object;\n    // Show more text actions toolbar.\n    moreText(): object;\n    // Show more paragraph actions toolbar.\n    moreParagraph(): object;\n    // Show more rich text actions toolbar.\n    moreRich(): object;\n    // Show more miscellaneous actions toolbar.\n    moreMisc(): object;\n    //Show more track changes actions toolbar.\n    moreTrackChanges(): object;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Core {\n    _init(): void;\n    // Creates a XHR object with the specified parameters.\n    getXHR(url: string, method: string): XMLHttpRequest;\n    // CSS style to be injected inside the iframe of the editor when the iframe option is used.\n    injectStyle(style: string): object;\n    // Check if the editor is empty.\n    isEmpty(): boolean;\n    // Check if the both editor instances are same.\n    sameInstance(object: Element): boolean;\n    hasFocus(): boolean;\n  }\n\n  export interface Cursor {\n    // Trigger backspace action at the cursor position.\n    backspace(): object;\n    // Trigger enter action at the cursor position.\n    enter(shiftPressed: boolean): object;\n    // Trigger delete action at the cursor position.\n    del(): object;\n    // Find if the cursor is at the end.\n    isAtEnd(): boolean;\n    // Find if the cursor is at the start.\n    isAtStart(): boolean;\n  }\n\n  export interface Edit {\n    _init(): void;\n    // Disable editor by removing the contenteditable attribute.\n    off(): object;\n    // Enable editor by adding the contenteditable attribute.\n    on(): object;\n    // Find if the edit is disabled.\n    isDisabled(): boolean;\n    // Disables the edit functionality.\n    disableDesign(): void;\n  }\n\n  export interface EditInPopup {\n    _init(): void;\n    // Update the texts in popup.\n    update(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Embedly {\n    _init(): boolean;\n    // Add the embedly to editor.\n    add(url: string): void;\n    // Hides the insert popup and shows inline menu for currently selected embedly.\n    back(): void;\n    // Gets the currently embedly instance.\n    get(): void;\n    // Inserts the embedly into editor from popup.\n    insert(): void;\n    // Removes the currently selected embedly instance.\n    remove(): void;\n    // Shows insert popup.\n    showInsertPopup(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Emoticons {\n    _init(): void;\n    // Insert an emoticon at the cursor position.\n    insert(emoticon: string, image?: string): object;\n    // Insert an emoticon at the cursor position.\n    setEmoticonCategory(categoryId: string): void;\n    showEmoticonsPopup(): void;\n    back(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Events {\n    _init(): void;\n    // Check if blur events are active.\n    blurActive(): boolean;\n    // Binds the click event for given element.\n    bindClick(element: Element, selector: string, handler: () => void): void;\n    // Trigger events and chain the pass the returned value between the assigned events.\n    chainTrigger(name: string, eventParams: object, force: boolean): object;\n    // Disables the blur and focus events.\n    disableBlur(): object;\n    // Enables the blur and focus events.\n    enableBlur(): object;\n    // Focus into the editor.\n    focus(): object;\n    // Register an event.\n    on(name: string, callback: (event: any, param1?: any, param2?: any) => void | boolean, first?: boolean): object;\n    // Triggers an event.\n    trigger(name: string, args: any[], force?: boolean): object;\n    $on($el: any, evs: string, selector: any, callback: any, shared: any): void;\n    $off(): void;\n  }\n\n  export interface File {\n    _init(): void;\n    // Insert the link to a file at the cursor position.\n    insert(link: string, text: string, response: object): object;\n    // Upload the passed file to the server.\n    upload(files: any[]): object;\n    showInsertPopup(): void;\n    back(): void;\n    hideProgressBar(dismiss: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface FontFamily {\n    apply(value: string): object | void;\n    refreshOnShow($btn: any, $dropdown: any): void;\n    refresh($btn: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface FontSize {\n    apply(value: string): object | void;\n    refreshOnShow($btn: any, $dropdown: any): void;\n    refresh($btn: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export type FormatAttributes = { [key: string]: any };\n\n  export type DisplayType = 'block' | 'inline';\n\n  export interface Format {\n    // Apply format for the selection or at the insertion point.\n    apply(tagName: string, attributes?: FormatAttributes): object;\n    // Apply style for the selection or at the insertion point.\n    applyStyle(cssProperty: string, cssAttributes?: string | FormatAttributes): object;\n    // Check format for the selection or at the insertion point.\n    is(tagName: string, attributes?: FormatAttributes): boolean;\n    // Remove format for the selection or at the insertion point.\n    remove(tagName: string, attributes?: FormatAttributes): object;\n    // Remove style for the selection or at the insertion point.\n    removeStyle(cssPropertyName: string): object;\n    // Toggle format for the selection or at the insertion point.\n    toggle(tagName: string, attributes?: FormatAttributes): object;\n  }\n\n  export interface Fullscreen {\n    _init(): boolean;\n    // Check the fullscreen state.\n    isActive(): boolean;\n    // Toggle fullscreen mode.\n    toggle(): object;\n    // Refresh\n    refresh($btn: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Forms {\n    _init(): void;\n    applyStyle(className: string, formStyles: object, formMultipleStyles: boolean): void;\n    updateInput(): void;\n    getInput(): any;\n    showUpdatePopup(): void;\n    showEditPopup(input: any): void;\n    back(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Helpers {\n    _init(): void;\n    isMobile(): boolean;\n    isAndroid(): boolean;\n    isBlackberry(): boolean;\n    isIOS(): boolean;\n    isMac(): boolean;\n    isTouch(): boolean;\n    isWindowsPhone(): boolean;\n    scrollLeft(): number;\n    scrollTop(): number;\n    sanitizeURL(url: string): string;\n    isEmail(url: any): any;\n    requestAnimationFrame(): any;\n    getPX(val: any): number;\n    screenSize(isBox: any): any;\n    isArray(obj: any): boolean;\n    RGBToHex(rgb: any): any;\n    HEXtoRGB(hex: any): string;\n    isURL(url: string): boolean;\n    getAlignment($block: any): any;\n    isInViewPort(el: any): boolean;\n  }\n\n  export interface HTML {\n    cleanEmptyTags(): object;\n    get(keepMarkers?: boolean, keepClasses?: boolean): string;\n    getSelected(): string;\n    unwrap(): void;\n    wrap(temp: boolean, tables: boolean, blockquote: boolean): void;\n    insert(html: string, clean?: boolean, doSplit?: boolean): object;\n    set(html: string): object;\n    defaultTag(): 'div' | 'p';\n    isPreformatted(node: any, look_up: any): any;\n    emptyBlocks(around_markers: any): any[];\n    emptyBlockTagsQuery(): string;\n    blockTagsQuery(): any;\n    fillEmptyBlocks(around_markers: any): void;\n    cleanWhiteTags(ignore_selection: any): boolean;\n    cleanBlankSpaces(el: any): boolean;\n    blocks(): any;\n    getDoctype(doc: any): string;\n    syncInputs(): void;\n    escapeEntities(str: any): any;\n    checkIfEmpty(): void;\n    extractNode(html: string, tag: any): string;\n    extractNodeAttrs(html: string, tag: any): any;\n    extractDoctype(html: string): string;\n    cleanBRs(): void;\n    _init(): void;\n    _setHtml($node: any, html: string): void;\n  }\n\n  export interface ImageManager {\n    _init(): boolean;\n    hide(): object;\n    show(): object;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface InlineClass {\n    apply(value: string): void;\n    refreshOnShow($btn: any, $dropdown: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface InlineStyle extends Apply<string> {}\n\n  export interface Keys {\n    ctrlKey(event: Event): boolean;\n    isArrow(keyCode: number): boolean;\n    isCharacter(keyCode: number): boolean;\n    _init(): void;\n    forceUndo(): void;\n    isIME(): boolean;\n    isBrowserAction(e: any): boolean;\n    positionCaret(): boolean;\n  }\n\n  export interface Language {\n    _init(): void;\n    translate(str: string): string;\n  }\n\n  export interface LineHeight extends Apply<number> {\n    _init(): void;\n    refreshOnShow(): void;\n  }\n\n  export interface Link {\n    _init(): void;\n    allSelected(): Element[];\n    applyStyle(className: string): object;\n    get(): Element;\n    insert(href: string, text: string, attributes?: { [key: string]: any }): object;\n    remove(): object;\n    showInsertPopup(): void;\n    usePredefined(val: any): void;\n    insertCallback(): void;\n    update(): void;\n    back(): void;\n    imageLink(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export type ListType = 'OL' | 'UL';\n\n  export interface Lists {\n    _init(): void;\n    format(listType: ListType): object;\n    refresh($btn: any, tag_name: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Markdown {\n    _init(): void;\n    isEnabled(): boolean;\n    refresh(button: Element): void;\n    toggle(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Markers {\n    insert(): object;\n    insertAtPoint(event: any): void;\n    place(range: object, marker: boolean, id: string): object;\n    remove(): object;\n    split(): object;\n  }\n\n  export interface Modals {\n    _init(): void;\n    areVisible(modalInstance: Element): boolean;\n    create(id: string, headTemplate: string, bodyTemplate: string): Element;\n    get(id: string): Element;\n    isVisible(id: string): boolean;\n    show(id: string): void;\n    hide(id: string, restoreSelection: boolean): void;\n    resize(id: string): void;\n  }\n\n  export interface Node {\n    blockParent(node: Element): Element;\n    clearAttributes(node: Element): Element;\n    contents(node: Element): any[];\n    deepestParent(node: Element, until?: Element, simpleEnter?: boolean): Element;\n    hasClass(element: Element, className: string): boolean;\n    hasFocus(node: Element): boolean;\n    isBlock(node: Element): boolean;\n    isElement(node: Element): boolean;\n    isDeletable(node: Element): boolean;\n    isEditable(node: Element): boolean;\n    isEmpty(node: Element, ignoreMarkers?: boolean): boolean;\n    isFirstSibling(node: Element, ignoreMarkers?: boolean): boolean;\n    isLastSibling(node: Element, ignoreMarkers?: boolean): boolean;\n    isList(node: Element, ignoreMarkers?: boolean): boolean;\n    isLink: (node: Element) => boolean;\n    isVoid(node: Element): boolean;\n    rawAttributes(node: Element): object;\n    attributes(node: Element): string;\n    clearAttributes(node: Element): void;\n    openTagString(node: Element): string;\n    closeTagString(node: Element): string;\n    filter(callback: any): object | any;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface ParagraphFormat {\n    apply(value: string): void;\n    refreshOnShow($btn: any, $dropdown: any): void;\n    refresh($btn: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface ParagraphStyle {\n    _init: () => void;\n    apply(val: string, paragraphStyles: any, paragraphMultipleStyles: any): void;\n    refreshOnShow($btn: any, $dropdown: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Placeholder {\n    _init(): boolean;\n    hide(): void;\n    isVisible(): void;\n    refresh(): object;\n    show(): void;\n  }\n\n  export interface Popups {\n    _init(): void;\n    create(id: string, templateProperties: { [key: string]: any }): any;\n    get(id: string): any;\n    hide(id: string): boolean;\n    hideAll(except?: string[]): object;\n    isVisible(id: string): boolean;\n    onHide(id: string, callback: () => void): object;\n    onRefresh(id: string, callback: () => void): object;\n    refresh(id: string): object;\n    setContainer(id: string, $container: any): void;\n    show(id: string, leftOffset?: number, topOffset?: number, height?: number, applyLeftOffset?: boolean): boolean;\n    onShow(id: string, callback: () => void): void;\n    areVisible(new_instance?: any): any;\n    setFileListHeight($popup: any): any;\n    setPopupDimensions($popup: any, isDelete: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Position {\n    _init(): void;\n    getBoundingRect(): Element;\n    refresh(): object;\n    forSelection($el: any): void;\n    addSticky($el: any): void;\n    at(left: any, top: any, $el: any, obj_height: any): void;\n  }\n\n  export interface Refresh {\n    undo: ($btn: any) => void;\n    redo: ($btn: any) => void;\n    outdent: ($btn: any) => boolean;\n    indent: ($btn: any) => boolean;\n    moreText: ($moreButton: any) => void;\n    moreParagraph: ($moreButton: any) => void;\n    moreMisc: ($moreButton: any) => void;\n    moreRich: ($moreButton: any) => void;\n  }\n\n  export interface Shortcuts {\n    _init(): void;\n    get(cmd: any): string;\n  }\n\n  export interface Quote extends Apply<string> {}\n\n  export interface Save {\n    _init(): void;\n    force(): void;\n    save(html?: HTML): object;\n    reset(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface FroalaSelection {\n    blocks(toggleList?: any, keepLi?: any): any[];\n    clear(): void;\n    element(): HTMLElement;\n    endElement(): Element;\n    get(): string | object;\n    inEditor(): boolean;\n    info(element: Element): object;\n    isCollapsed(): boolean;\n    isFull(): boolean;\n    ranges(index: number): Range | Range[];\n    restore(): boolean;\n    save(): void;\n    setAfter(node: Element, use_current_node?: any): boolean;\n    setAtEnd(node: Element, deep?: any): boolean;\n    setAtStart(node: Element, deep?: any): boolean;\n    setBefore(node: Element, use_current_node?: any): boolean;\n    text(): string;\n    remove(): boolean;\n    rangeElement(rangeContainer: any, offset: any) : any;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Size {\n    _init(): boolean;\n    refresh(): void;\n    syncIframe(): void;\n  }\n\n  export interface Snapshot {\n    equal(snapshot1: any, snapshot2: any): boolean;\n    get(): any;\n    restore(snapshot: any): object;\n  }\n\n  export interface SpellChecker {\n    _init(): boolean;\n    refresh($btn: Element): void;\n    toggle(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Table {\n    _init(): boolean;\n    insert(rows: number, columns: number): object;\n    remove(): void;\n    insertRow(position: number): void;\n    deleteRow(): void;\n    insertColumn(position: number): void;\n    deleteColumn(): void;\n    mergeCells(): void;\n    splitCellVertically(): void;\n    splitCellHorizontally(): void;\n    addHeader(): void;\n    addFooter(): void;\n    removeHeader(): void;\n    removeFooter(): void;\n    setBackground(color: any): void;\n    showInsertPopup(): void;\n    showEditPopup(): void;\n    showColorsPopup(): void;\n    back(): void;\n    verticalAlign(val: any): void;\n    horizontalAlign(val: any): void;\n    applyStyle(val: any, obj: any, multiple_styles: any, styles: any): void;\n    selectedTable(): void;\n    selectedCells(): void;\n    customColor(): void;\n    selectCells(firstCell: any, lastCell: any): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Toolbar {\n    _init(): boolean;\n    enable(): void;\n    disable(): void;\n    hide(): boolean;\n    show(): boolean;\n    showInline(element: Element, force: boolean): void;\n    setMoreToolbarsHeight(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Tooltip {\n    bind(element: Element, selector: string, displayAbove?: boolean): object;\n    hide(): object;\n    to(element: Element, displayAbove: boolean): object;\n  }\n\n  export interface Undo {\n    canDo(): boolean;\n    canRedo(): boolean;\n    reset(): object;\n    saveStep(snapshot?: any): void;\n    _init(): void;\n    run(): void;\n    redo(): void;\n    dropRedo(): void;\n  }\n\n  export interface Track_Changes {\n    toggleTracking(): void;\n    getPendingChanges(): object[];\n    showChanges(): void;\n    acceptAllChanges(): void;\n    rejectAllChanges(): void;\n    acceptSingleChange(): void;\n    rejectSingleChange(): void;\n    pushChange(changeId: any): void;\n    insertChangeAt(index: number, changeId: number): void;\n    popChange(): any;\n    refresh($btn: any): void;\n    replaceSpecialItem($item: any): void;\n    removeSpecialItem($item: any): void;\n    removedTable($table: any): void;\n    addQuote($quote: any): void;\n    removeQuote($quote: any, index: number): void;\n    wrapInTracking(item: any): void;\n    wrapInDelete(item: any): void;\n    wrapLinkInTracking(item: any, changeIndex: any): void;\n    pasteInEmptyEdior(clean_html: string): void;\n    pasteInEdior(clean_html: string): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Video {\n    _init(): void;\n    align(alignType: AlignType): object;\n    display(displayType: DisplayType): object;\n    get(): any;\n    insert(embeddedCode: string): object;\n    remove(): object;\n    setSize(width: string, height: string): object;\n    showInsertPopup(): void;\n    showLayer(name: any): void;\n    refreshByURLButton($btn: any): void;\n    refreshEmbedButton($btn: any): void;\n    refreshUploadButton($btn: any): void;\n    upload(videos: any): void;\n    insertByURL(url: string): void;\n    insertEmbed(html: string): void;\n    refreshAlign($btn: any): boolean;\n    refreshAlignOnShow($btn: any, $dropdown: any): void;\n    refreshDisplayOnShow($btn: any, $dropdown: any): void;\n    hideProgressBar(dismiss: any): void;\n    showSizePopup(): void;\n    replace(): void;\n    back(): void;\n    showProgressBar(no_message: any): void;\n    _editVideo($video: any): void;\n    setAutoplay(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Word_paste {\n    _init(): void;\n    clean(keep_formatting: any): void;\n    _wordClean(html: string, rtf: any): string;\n  }\n\n  export interface Trim_video {\n    _init(): void;\n    trimVideo(file: any, index: any, file_list: any[]): void;\n  }\n\n  export interface Special_characters {\n    setSpecialCharacterCategory(categoryId: any): void;\n    showSpecialCharsPopup(): void;\n    back(): void;\n    [key: string]: (...args: any[]) => any;\n  }\n\n  export interface Icon {\n    create(command: any): any;\n    getTemplate(command: any): any;\n    getFileIcon(command: any): any;\n  }\n\n  export interface Accessibility {\n    _init(): void;\n    registerPopup: (id: any) => void;\n    registerToolbar: (table: any) => void;\n    focusToolbarElement: (element: any) => void;\n    focusToolbar: (table: any, last: any) => boolean;\n    focusContent: (content: any, backward: any) => boolean;\n    focusPopup: (popup: any) => void;\n    focusModal: ($modal: any) => void;\n    focusEditor: () => void;\n    focusPopupButton: ($popup: any) => void;\n    focusModalButton: ($modal: any) => void;\n    hasFocus: () => boolean;\n    exec: (e: any, $tb: any) => boolean;\n    saveSelection: () => void;\n    restoreSelection: () => void;\n  }\n}\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 13.2626953125,
          "content": "<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0\" />\n  <title>Froala Editor Examples</title>\n\n  <style>\n    body {\n      line-height: 1.5;\n      font-family: sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    section {\n      width: 90%;\n      margin: auto;\n      padding-top: 30px;\n    }\n\n    #data-list {\n      -webkit-column-gap: 30px;\n      /* Chrome, Safari, Opera */\n      -moz-column-gap: 30px;\n      /* Firefox */\n      column-gap: 30px;\n      -webkit-column-count: 4;\n      /* Chrome, Safari, Opera */\n      -moz-column-count: 4;\n      /* Firefox */\n      column-count: 4;\n    }\n\n    #data-list>div {\n      page-break-inside: avoid;\n    }\n\n    #data-list>div:after {\n      content: \"\";\n      display: block;\n      height: 20px;\n    }\n\n    h1 {\n      font-size: 36px;\n      font-weight: 300;\n      text-align: center;\n    }\n\n    h2 {\n      margin: 0;\n      color: #252525;\n      border-left: 3px solid #0098f7;\n      padding-left: 10px;\n      font-weight: 400;\n    }\n\n    ul {\n      padding-left: 5px;\n    }\n\n    ul li {\n      list-style: none;\n      font-size: 16px;\n    }\n\n    ul li a {\n      text-decoration: none;\n      color: #515151;\n    }\n\n  </style>\n</head>\n\n<body>\n  <section>\n    <h1>Froala Editor Examples</h1>\n\n    <br/>\n\n    <div id=\"data-list\">\n      <div>\n        <h2>Popular</h2>\n        <ul>\n          <li><a href=\"./html/popular/full.html\" title=\"Full Featured\">Full Featured</a></li>\n          <li><a href=\"./html/popular/toolbar_inline.html\" title=\"Inline Editor\">Inline Editor</a></li>\n          <li><a href=\"./html/popular/two_instances.html\" title=\"Multiple Editor Instances\">Multiple Editor Instances</a></li>\n          <li><a href=\"./html/popular/textarea.html\" title=\"Textarea Editor\">Textarea Editor</a></li>\n          <li><a href=\"./html/popular/full_page.html\" title=\"Full Page\">Full Page</a></li>\n          <li><a href=\"./html/popular/iframe.html\" title=\"Iframe\">Iframe</a></li>\n          <li><a href=\"./html/popular/disable_edit.html\" title=\"Non-editable Zones\">Non-editable Zones</a></li>\n          <li><a href=\"./html/popular/z_index.html\" title=\"Z-index\">Z-index</a></li>\n          <li><a href=\"./html/popular/init_on_click.html\" title=\"Init on Click\">Init on Click</a></li>\n          <li><a href=\"./html/popular/toolbar_buttons.html\" title=\"Change Toolbar Buttons\">Change Toolbar Buttons</a></li>\n          <li><a href=\"./html/popular/disable_paragraphs.html\" title=\"Disable Paragraphs\">Disable Paragraphs</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>3rd Party Integration</h2>\n        <ul>\n          <li><a href=\"./html/3rd-party/bootstrap/grid.html\" title=\"Bootstrap Grid\">Bootstrap Grid</a></li>\n          <li><a href=\"./html/3rd-party/bootstrap/lists.html\" title=\"Bootstrap List Group\">Bootstrap List Group</a></li>\n          <li><a href=\"./html/3rd-party/bootstrap/modal.html\" title=\"Bootstrap Modal\">Bootstrap Modal</a></li>\n          <li><a href=\"./html/3rd-party/jquery/mobile.html\" title=\"jQuery Mobile\">jQuery Mobile</a></li>\n          <li><a href=\"./html/3rd-party/jquery/ui_modal.html\" title=\"jQuery UI Modal\">jQuery UI Modal</a></li>\n          <li><a href=\"./html/3rd-party/code-mirror.html\" title=\"Code Mirror\">Code Mirror</a></li>\n          <li><a href=\"./html/3rd-party/spell-checker/spell-checker.html\" title=\"Spell Checker\">Spell Checker</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>API</h2>\n        <ul>\n          <li><a href=\"./html/api/init_destroy.html\" title=\"Init / Destroy Editor\">Init / Destroy Editor</a></li>\n          <li><a href=\"./html/api/get_html.html\" title=\"Get HTML\">Get Edited HTML</a></li>\n          <li><a href=\"./html/api/insert_html.html\" title=\"Insert HTML\">Insert HTML</a></li>\n          <li><a href=\"./html/api/selection.html\" title=\"Save / Restore Selection\">Save / Restore Selection</a></li>\n          <li><a href=\"./html/api/live_content_preview.html\" title=\"Live Content Preview\">Live Content Preview</a></li>\n          <li><a href=\"./html/api/live_code_preview.html\" title=\"Live Code Preview\">Live Code Preview</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>International</h2>\n        <ul>\n          <li><a href=\"./html/international/direction_rtl.html\" title=\"Editor Direction RTL\">Editor Direction RTL</a></li>\n          <li><a href=\"./html/international/language.html\" title=\"Change Language\">Change Language</a></li>\n          <li><a href=\"./html/international/rtl_ltr_buttons.html\" title=\"RTL / LTR Buttons\">RTL / LTR Buttons</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Buttons</h2>\n        <ul>\n          <li><a href=\"./html/buttons/custom_buttons.html\" title=\"Custom Buttons\">Custom Buttons</a></li>\n          <li><a href=\"./html/buttons/custom_dropdown.html\" title=\"Custom Dropdown\">Custom Dropdown</a></li>\n          <li><a href=\"./html/buttons/external_button.html\" title=\"External Button\">External Button</a></li>\n          <li><a href=\"./html/buttons/subscript_superscript.html\" title=\"Subscript and Superscript\">Subscript and Superscript</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Events</h2>\n        <ul>\n          <li><a href=\"./html/events/blur_focus.html\" title=\"Blur / Focus\">Blur / Focus</a></li>\n          <li><a href=\"./html/events/content_changed.html\" title=\"Content Changed\">Content Changed</a></li>\n          <li><a href=\"./html/events/drop.html\" title=\"Drop\">Drop</a></li>\n          <li><a href=\"./html/events/image_removed.html\" title=\"Image Removed\">Image Removed</a></li>\n          <li><a href=\"./html/events/initialized_destroy.html\" title=\"Initialized / Destroy\">Initialized / Destroy</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Images</h2>\n        <ul>\n          <li><a href=\"./html/image/custom_button.html\" title=\"Custom Image Button\">Custom Image Button</a></li>\n          <li><a href=\"./html/image/image_styles.html\" title=\"Image Styles\">Image Styles</a></li>\n          <li><a href=\"./html/image/default_width.html\" title=\"Default Width\">Default Width</a></li>\n          <li><a href=\"./html/image/insert_base64.html\" title=\"Insert as Base64\">Insert as Base64</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Init inside iframe</h2>\n        <ul>\n          <li><a href=\"./html/init_inside_iframe/basic.html\" title=\"Basic Editor inside iframe\">Basic Editor</a></li>\n          <li><a href=\"./html/init_inside_iframe/inline.html\" title=\"Inline Editor inside iframe\">Inline Editor</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Init on click</h2>\n        <ul>\n          <li><a href=\"./html/init_on_click/basic.html\" title=\"Basic Editor\">Basic Editor</a></li>\n          <li><a href=\"./html/init_on_click/inline.html\" title=\"Inline Editor\">Inline Editor</a></li>\n          <li><a href=\"./html/init_on_click/two_editors.html\" title=\"2 Editors\">2 Editors</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Initialization</h2>\n        <ul>\n          <li><a href=\"./html/initialization/init_on_click.html\" title=\"Init on click\">Init on Click</a></li>\n          <li><a href=\"./html/initialization/init_on_button.html\" title=\"Init on Button\">Init on Button</a></li>\n          <li><a href=\"./html/initialization/init_on_link.html\" title=\"Init on Link\">Init on Link</a></li>\n          <li><a href=\"./html/initialization/init_on_image.html\" title=\"Init on Image\">Init on Image</a></li>\n          <li><a href=\"./html/initialization/init_on_h1.html\" title=\"Init on H1\">Init on H1</a></li>\n          <li><a href=\"./html/initialization/initialized_event.html\" title=\"Initialized Event\">Initialized Event</a></li>\n          <li><a href=\"./html/initialization/edit_in_popup.html\" title=\"Edit in Popup\">Edit in Popup</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Links</h2>\n        <ul>\n          <li><a href=\"./html/link/link_styles.html\" title=\"Link Styles\">Link Styles</a></li>\n          <li><a href=\"./html/link/predefined_links.html\" title=\"Predefined Links\">Predefined Links</a></li>\n          <li><a href=\"./html/link/custom_validation.html\" title=\"Custom Link Validation\">Custom Link Validation</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Plugins</h2>\n        <ul>\n          <li><a href=\"./html/plugins/line_breaker.html\" title=\"Line Breaker\">Line Breaker</a></li>\n          <li><a href=\"./html/plugins/quick_insert.html\" title=\"Quick Insert\">Quick Insert</a></li>\n          <li><a href=\"./html/plugins/char_counter.html\" title=\"Char Counter\">Char Counter</a></li>\n          <li><a href=\"./html/plugins/full_screen.html\" title=\"Full Screen\">Full Screen</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Popups</h2>\n        <ul>\n          <li><a href=\"./html/popups/colors.html\" title=\"Custom Color Picker\">Custom Color Picker</a></li>\n          <li><a href=\"./html/popups/emoticons.html\" title=\"Custom Emoticons\">Custom Emoticons</a></li>\n          <li><a href=\"./html/popups/custom.html\" title=\"Custom Popup\">Custom Popup</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Styling</h2>\n        <ul>\n          <li><a href=\"./html/styling/font_family.html\" title=\"Font Family\">Font Family</a></li>\n          <li><a href=\"./html/styling/inline.html\" title=\"Inline Styling\">Inline Styling</a></li>\n          <li><a href=\"./html/styling/paragraph.html\" title=\"Paragraph Styling\">Paragraph Styling</a></li>\n          <li><a href=\"./html/styling/placeholder.html\" title=\"Placeholder\">Placeholder</a></li>\n          <li><a href=\"./html/styling/height.html\" title=\"Predefined Height\">Predefined Height</a></li>\n          <li><a href=\"./html/styling/adjustable_height.html\" title=\"Auto-Adjustable Height\">Auto-Adjustable Height</a></li>\n          <li><a href=\"./html/styling/width.html\" title=\"Predefined Width\">Predefined Width</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Themes</h2>\n        <ul>\n          <li><a href=\"./html/themes/dark.html\" title=\"Dark Theme\">Dark Theme</a></li>\n          <li><a href=\"./html/themes/gray.html\" title=\"Gray Theme\">Gray Theme</a></li>\n          <li><a href=\"./html/themes/royal.html\" title=\"Royal Theme\">Royal Theme</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Table</h2>\n        <ul>\n          <li><a href=\"./html/table/nested.html\" title=\"Nested Tables\">Nested Tables</a></li>\n          <li><a href=\"./html/table/resize.html\" title=\"Resize Table\">Resize Table</a></li>\n          <li><a href=\"./html/table/insert_helper.html\" title=\"Table Insert Helper\">Table Insert Helper</a></li>\n          <li><a href=\"./html/table/style.html\" title=\"Table Style\">Table Style</a></li>\n          <li><a href=\"./html/table/cell_style.html\" title=\"Table Cell Style\">Table Cell Style</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Toolbar</h2>\n        <ul>\n          <li><a href=\"./html/toolbar/inline.html\" title=\"Inline Toolbar\">Inline Toolbar</a></li>\n          <li><a href=\"./html/toolbar/sticky.html\" title=\"Sticky Toolbar\">Sticky Toolbar</a></li>\n          <li><a href=\"./html/toolbar/buttons.html\" title=\"Change Toolbar Buttons\">Change Toolbar Buttons</a></li>\n          <li><a href=\"./html/toolbar/external.html\" title=\"External Shared Toolbar\">External Shared Toolbar</a></li>\n          <li><a href=\"./html/toolbar/external_inline.html\" title=\"External Shared Inline Toolbar\">External Shared Inline Toolbar</a></li>\n          <li><a href=\"./html/toolbar/bottom.html\" title=\"Toolbar Bottom\">Toolbar Bottom</a></li>\n          <li><a href=\"./html/toolbar/offset.html\" title=\"Toolbar with Offset\">Toolbar with Offset</a></li>\n          <li><a href=\"./html/toolbar/bottom_offset.html\" title=\"Toolbar Bottom\">Toolbar Bottom with Offset</a></li>\n          <li><a href=\"./html/toolbar/show_selection.html\" title=\"Show Selection Details\">Show Selection Details</a></li>\n          <li><a href=\"./html/toolbar/inline_selection.html\" title=\"Inline Toolbar without Selection\">Inline Toolbar without Selection</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Paragraph Modes</h2>\n        <ul>\n          <li><a href=\"./html/paragraph_modes/enter_br.html\" title=\"Enter BR\">Enter BR</a></li>\n          <li><a href=\"./html/paragraph_modes/enter_div.html\" title=\"Enter DIV\">Enter DIV</a></li>\n          <li><a href=\"./html/paragraph_modes/enter_p.html\" title=\"Enter P\">Enter P</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Misc</h2>\n        <ul>\n          <li><a href=\"./html/misc/scrollable_container.html\" title=\"Scrollable Container\">Scrollable Container</a></li>\n          <li><a href=\"./html/misc/scrollable_container_inline.html\" title=\"Scrollable Container Inline Editor\">Scrollable Container Inline</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Typing</h2>\n        <ul>\n          <li><a href=\"./html/typing/tab.html\" title=\"TAB Key\">TAB Key</a></li>\n          <li><a href=\"./html/typing/shortcuts.html\" title=\"Shortcuts\">Shortcuts</a></li>\n          <li><a href=\"./html/typing/keep_format.html\" title=\"Keep Format on Delete\">Keep Format on Delete</a></li>\n        </ul>\n      </div>\n\n      <div>\n        <h2>Paste</h2>\n        <ul>\n          <li><a href=\"./html/paste/plain.html\" title=\"Plain Paste\">Plain Paste</a></li>\n          <li><a href=\"./html/paste/attrs.html\" title=\"Allowed / Denied Attributes\">Allowed / Denied Attributes</a></li>\n          <li><a href=\"./html/paste/tags.html\" title=\"Allowed / Denied Tags\">Allowed / Denied Tags</a></li>\n        </ul>\n      </div>\n    </div>\n  </section>\n</body>"
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.3857421875,
          "content": "{\n  \"name\": \"froala-editor\",\n  \"version\": \"4.4.0\",\n  \"types\": \"index.d.ts\",\n  \"description\": \"The next generation Javascript WYSIWYG HTML rich text editor made by devs for devs. High performance and modern design make it easy to use for developers and loved by users.\",\n  \"keywords\": [\n    \"froala\",\n    \"froala-editor\",\n    \"froala-wysiwyg\",\n    \"html\",\n    \"text\",\n    \"editor\",\n    \"wysiwyg\",\n    \"javascript-plugin\",\n    \"rich editor\",\n    \"rich text editor\",\n    \"rte\",\n    \"javascript\",\n    \"vanillajs\"\n  ],\n  \"homepage\": \"https://www.froala.com/wysiwyg-editor\",\n  \"license\": \"https://www.froala.com/wysiwyg-editor/pricing\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/froala/wysiwyg-editor-release.git\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"Froala Labs\"\n    }\n  ],\n  \"filename\": \"js/froala_editor.min.js\",\n  \"main\": \"js/froala_editor.min.js\",\n  \"npmName\": \"froala-editor\",\n  \"npmFileMap\": [\n    {\n      \"basePath\": \"/\",\n      \"files\": [\n        \"js/plugins/*.min.js\",\n        \"js/third_party/*.min.js\",\n        \"js/froala_editor.min.js\",\n        \"js/froala_editor.pkgd.min.js\",\n        \"js/plugins.pkgd.min.js\",\n        \"css/froala_editor.min.css\",\n        \"css/froala_editor.pkgd.min.css\",\n        \"css/plugins.pkgd.min.css\",\n        \"css/froala_style.min.css\",\n        \"css/plugins/*.min.css\",\n        \"css/third_party/*.min.css\",\n        \"css/themes/*.min.css\"\n      ]\n    }\n  ]\n}"
        }
      ]
    }
  ]
}