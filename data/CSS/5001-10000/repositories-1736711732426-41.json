{
  "metadata": {
    "timestamp": 1736711732426,
    "page": 41,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LearnOpenGL-CN/LearnOpenGL-CN",
      "stars": 5737,
      "defaultBranch": "new-theme",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.048828125,
          "content": "*/._.*\n*.DS_Store\n/site\n/build\n*.data\n**/.Archive\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.19140625,
          "content": "# LearnOpenGL中文化工程\n\n[![Status badge](https://github.com/LearnOpenGL-CN/LearnOpenGL-CN/actions/workflows/deploy.yml/badge.svg?branch=new-theme)](https://github.com/LearnOpenGL-CN/LearnOpenGL-CN/actions/workflows/deploy.yml)\n\nlearnopengl.com系列教程的中文翻译，目前正在校对及翻译中。\n\n**英文原版**：[learnopengl.com](https://learnopengl.com/)\n\n**目前状态**：\n\n- 原文大部分代码都有改变（使用的新的库），需要从头开始重新校对（Krasjet正在处理中，最重要的配置部分已经更新完毕）\n- 5-2节之后都没有按照新版的格式来排版，而且错误极多，也没有统一译名，需要进行整体的修改（Krasjet正在处理中，可能比较漫长）\n- 从头校对整体修改之后的文章（志愿者希望）\n- PBL 章节和 In Practice 章节下还有几篇教程没有翻译（志愿者希望）\n\n## 阅读地址\n\n目前Host在GitHub上，可以[点击这里](https://learnopengl-cn.github.io/)进行阅读。\n\n旧版本的Host在Read The Docs内（不定时更新），可以[点击这里](http://learnopengl-cn.readthedocs.io/)进行阅读。\n\n## 认领翻译\n\n由于我们的志愿者来自五湖四海，为了避免冲突。请志愿者们先Clone这个Repository 。同步到本地后找到要翻译的文章，创建一个如下所示的只包含作者、翻译者和原文链接信息的Markdown文件：\n\n```\n原文     | [英文标题](原文地址)\n      ---|---\n作者     | JoeyDeVries\n翻译     | [翻译]\n校对     | 暂无\n```\n\n译文的文件命名统一规范为：\n\n```\n<两位数的章序列> <章名称>/<两位数节序列> 节名称.md\n```\n\n如果有小节的话：\n\n```\n<两位数的章序列> <章名称>/<两位数节序列> 节名称/<两位数小节序列> 小节名称.md\n```\n\n例如：\n\n```\n01 Getting started/01 OpenGL.md\n或\n05 Advanced Lighting/03 Shadows/02 Point Shadows.md\n```\n\n**翻译之前请先阅读[样式指南](https://github.com/LearnOpenGL-CN/LearnOpenGL-CN/blob/new-theme/styleguide.md)**\n\n之后请联系我们，将您加入LearnOpenGL-CN组织，然后提交并Push您的翻译。或者您也可以Fork这个工程在本地编辑之后发送Pull Request。\n\n## 样式指南\n\n在文档的写作过程中，请遵守我们的[样式指南](https://github.com/LearnOpenGL-CN/LearnOpenGL-CN/blob/new-theme/styleguide.md)方便之后的校对以及修改工作。\n\n## 构建\n\n首先请安装Python 3.7+，之后初始化环境：\n\n```bash\n$ pip install mkdocs==1.4.2 python-markdown-math==0.8\n```\n\n初始化以后，每次构建只需要输入以下指令即可，构建后的文件在`site`文件夹内：\n\n```bash\n$ mkdocs build\n```\n\n如果只是想测试的话，请输入以下指令：\n\n```bash\n$ mkdocs serve\n```\n\n部署的网页可以通过`127.0.0.1:8000`来访问。\n\n## 建议\n\n如果您发现教程有任何错误的话，欢迎Fork这个工程并发送Pull Request到 `new-theme` 分支。如果您不想修改的话，可以点击页面上方的 `Issues` 按钮提交一个Issue，我们看到后会及时更正。如果是对教程的内容有问题，请先查看原文，如果不是翻译错误的话，请直接在原网站评论区向作者（JoeyDeVries）反馈。\n\n## 联系方式\n\nQQ群：383745868\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "glossary.md",
          "type": "blob",
          "size": 10.9228515625,
          "content": "# 专有词汇翻译记录\n\n本文档收录了校对过程中翻译的所有专有词汇，供翻译统一化使用，每一节都只提供新出现的词汇。\n\n## 01-01\n\n- API：Application Programming Interface，应用程序编程接口\n- Specification：规范\n- Implement：实现\n- Immediate mode：立即渲染模式\n- Core-profile：核心模式\n- Fixed Function Pipeline：固定渲染管线\n- Extension：扩展\n- State Machine：状态机\n- Context：上下文\n- State-changing Function：状态设置函数\n- State-using Function：状态使用函数\n- Object：对象\n- Primitive Type：基元类型\n- Option：选项\n- Modern：现代\n## 01-02\n\n- Abstract：抽象\n- Link：链接\n- Linker：连接器\n- Dynamic：动态\n- Static：静态\n\n## 01-03\n\n- Major：主版本号\n- Minor：次版本号\n- Viewport：视口\n- Dimension（窗口）：维度\n- Game Loop：游戏循环\n- Render Loop：渲染循环\n- Color Buffer：颜色缓冲\n- Double Buffer：双缓冲\n- Front Buffer：前缓冲\n- Back Buffer：后缓冲\n- Swap：交换\n- Callback Function：回调函数\n- KeyCallback：按键回调\n- Callback：回调\n- Rendering：渲染\n- Call：调用\n\n## 01-04\n\n- Graphics Pipeline：图形渲染管线\n- Resolution（图像，屏幕）：分辨率\n- Shader：着色器\n- GLSL：OpenGL Shading Language，OpenGL着色器语言\n- Vertex Data：顶点数据\n- Vertex：顶点\n- Vertex Attribute：顶点属性\n- Primitive：图元\n- Vertex Shader：顶点着色器\n- Primitive Assembly：图元装配\n- Rasterization：光栅化\n- Fragment：片段\n- Fragment Shader：片段着色器\n- View：视图\n- Alpha Test：Alpha测试\n- Depth：深度\n- Light：光照\n- Transform：变换\n- Normalized Device Coordinates：标准化设备坐标，NDC\n- Position：位置\n- Coordinate Space：坐标空间\n- Screen-space Coordinates：屏幕空间坐标\n- VBO：Vertex Buffer Objects，顶点缓冲对象\n- Vertex Attribute：顶点属性\n- Position：位置\n- Location：位置值\n- Vector：向量\n- Perspective Division：透视划分\n- Fragment Shader：片段着色器\n- Component：分量\n- Element：元素\n- Normalize：标准化\n- Stride：步长\n- Offset：偏移量\n- VAO：顶点数组对象，Vertex Array Object\n- Element Buffer Object：元素缓冲对象（EBO） 或 Index Buffer Object：索引缓冲对象(IBO)\n- Wireframe Mode：线框模式\n- Stage：阶段\n\n## 01-05\n\n- uniform：uniform\n- Matrix：矩阵\n- Texture：纹理\n- Swizzling：重组\n- Global：全局\n- Query：查询\n- Overload：重载\n- Rasterizer：光栅，光栅器\n- Fragment Interpolation：片段插值\n- Interpolate：插值\n- Preprocessor Directives：预处理指令\n- Debug：调试\n\n## 01-06\n\n- Texture Coordinate：纹理坐标\n- Sampling：采样\n- Wrapping：环绕方式\n- Clamp：约束\n- Nearest Neighbor Filtering：临近过滤\n- Texture Pixel，Texel：纹理像素，纹素\n- (Bi)linear Filtering：线性过滤\n- Magnify：放大\n- Minify：缩小\n- Mipmap：多级渐远纹理\n- Level (Mipmap)：级别\n- Channel：通道\n- Sampler：采样器\n- Texture Unit：纹理单元\n- Texture Wrapping：纹理环绕\n\n## 01-07\n\n- Direction：方向\n- Magnitude：大小\n- Dimension（数学）：维度\n- Scalar：标量\n- Position Vector：位置向量\n- Unit Vector：单位向量\n- Pythagoras Theorem：勾股定理\n- Dot Product：点乘，点积\n- Cross Product：叉乘，叉积\n- Identity Matrix：单位矩阵\n- Scale：缩放\n- Translation：位移\n- Homogeneous Coordinate：齐次坐标\n- Direction Vector：方向向量\n- Rotation：旋转\n- Rotation Axis：旋转轴\n- Column-major Ordering：列主序\n\n## 01-08\n\n- Local Space：局部空间\n- Object Space：物体空间\n- World Space：世界空间\n- View Space：观察空间\n- Eye Space：视觉空间\n- Clip Space：裁剪空间\n- Screen Space：屏幕空间\n- Model Matrix：模型矩阵\n- View Matrix：观察矩阵\n- Projection Matrix：投影矩阵\n- Viewport Transform：视口变换\n- Clipping Volume：裁剪体积\n- Viewing Box：观察箱\n- Perspective Division：透视除法\n- Z-buffer：Z缓冲\n- Draw：绘制\n- Depth Testing：深度测试\n- Depth Buffer：深度缓冲\n\n## 01-09\n\n- Direction Vector：方向向量\n- Camera Space：摄像机空间\n- Gram-Schmidt Process：格拉姆—施密特正交化\n- LookAt Matrix：LookAt矩阵\n- Strafe：横移\n- Deltatime：时间差\n- Euler Angles：欧拉角\n- Pitch：俯仰角\n- Yaw：偏航角\n- Roll：滚转角\n- Field of View(FoV)：视野\n\n## 02-01\n\n- Lighting：光照\n- Reflect：反射\n- Absorb：吸收\n- Container（第一章创建的那个物体）：箱子\n- Lamp：灯\n\n## 02-02\n\n- Phong Lighting Model：风氏光照模型\n- Ambient Lighting：环境光照\n- Diffuse Lighting：漫反射光照\n- Specular Lighting：镜面光照\n- Directional Impact：方向性影响\n- Global Illumination：全局性照明\n- Factor：因子\n- Normal Vector：法向量\n- Normal Matrix：法线矩阵\n- Ambient Component：环境光分量\n- Diffuse Component：漫反射分量\n- Specular Component：镜面光分量\n- Inverse Matrix：逆矩阵\n- Transpose Matrix：转置矩阵\n- Specular Highlight：镜面高光\n- Intensity：强度\n- Specular Intensity：镜面强度\n- Shininess：反光度\n- Gouraud Shading：Gouraud着色\n- Phong Shading：风氏着色\n\n## 02-03\n\n- Material：材质\n- Struct：结构体\n- Layout：布局\n- Light Property：光照属性\n- Scatter（光）：散射\n\n## 02-04\n\n- Map：贴图\n- Diffuse Map：漫反射贴图\n- Opaque Type：不透明类型\n- Specular Map：镜面光贴图\n- Normal Map：法线贴图\n- Bump Map：凹凸贴图\n- Reflection Map：反射贴图\n- Emission Map：放射光贴图\n- Emission Value：发光值\n\n## 02-05\n\n- Cast（光）：投射\n- Light Caster：投光物\n- Directional Light：定向光\n- Point Light：点光源\n- Spotlight：聚光\n- Positional Light Source：位置光源\n- Fixed-functionality (OpenGL)：固定函数式\n- Attenuation：衰减\n- Cutoff Angle：切光角\n- Flashlight：手电筒\n\n## 03-01\n\n- Model：模型\n- Import：导入\n- 3D Modeling Tool：3D建模工具\n- uv-mapping：UV映射\n- Assimp：Assimp\n- Asset：资产\n- Node：节点\n- Mesh：网格\n- Face：面\n\n## 03-02\n\n- Sequential：连续\n- Byte Offset：字节偏移量\n- Translate：转化\n- Concatenate：拼接\n\n## 03-03\n\n- vector（模板类）：vector\n- Post-processing：后期处理\n- Recursive Fuction：递归函数\n- Exit Condition：退出条件\n- Local Path：本地路径\n- Relative Path：相对路径\n- Absolute Path：绝对路径\n- Crytek：Crytek\n- Crysis：孤岛危机\n- Nanosuit：纳米装\n\n## 04-01\n\n- Depth Buffer：深度缓冲\n- Depth Value：深度值\n- z-buffer：z缓冲\n- Stencil Testing：模板测试\n- Early Depth Testing：提前深度测试\n- Discard：丢弃\n- Read-only：只读的\n- Enable：启用\n- Disable：禁用\n- Depth Mask：深度掩码\n- Depth Function：深度函数\n- Near（平截头体）：近平面\n- Far（平截头体）：远平面\n- Linear Depth Buffer：线性深度缓冲\n- Z-fighting：深度冲突\n- Coplanar：共面\n- Anti z-fighting：抗深度冲突\n\n## 04-02\n\n- Stencil Buffer：模板缓冲\n- Stencil Value：模板值\n- Bitmask：位掩码\n- Stencil Mask：模板掩码\n- Stencil Test Function：模板测试函数\n- Reference Value：参考值\n- Object Outlining：物体轮廓\n- Write：写入\n- Gaussian Blur：高斯模糊\n- Filter（后期处理）：滤镜\n- Shadow Volume：阴影体积\n\n## 04-03\n\n- Blending：混合\n- Transparency：透明（度）\n- Solid Color：纯色\n- Alpha Value（透明度）：Alpha值\n- Source Color Vector：源颜色向量\n- Destination Color Vector：目标颜色向量\n- Source Factor Value：源因子值\n- Destination Factor Value：目标因子值\n- Blend Equation：混合方程\n- Reverse Iterator：反向迭代器\n- Order Independent Transparency：次序无关透明度\n\n## 04-04\n\n- Side（面）：侧\n- Face Culling：面剔除\n- Front Facing：面向\n- Back Facing：背向\n- Front Face：正向面\n- Back Face：背向面\n- Winding Order：环绕顺序\n- Front-facing Triangle：正向三角形\n- Back-facing Triangle：背向三角形\n- Cull：剔除\n\n## 04-05\n\n- Framebuffer：帧缓冲\n- Framebuffer Object：帧缓冲对象\n- Complete（缓冲）：完整\n- Off-screen Rendering：离屏渲染\n- Renderbuffer Object：渲染缓冲对象\n- Attach：附加\n- Format：格式\n- Internalformat：内部格式\n- General Purpose Data Buffer：通用数据缓冲\n- Pass：处理阶段\n- Inversion：反相\n- Grayscale：灰度\n- Weighted：加权\n- Kernel：核\n- Convolution Matrix：卷积矩阵\n- Weight：权重\n- Sharpen：锐化\n- Blur：模糊\n- Edge-detection：边缘检测\n\n## 04-06\n\n- Cube Map：立方体贴图\n- Skybox：天空盒\n- Environment Mapping：环境映射\n- Reflection：反射\n- Refraction：折射\n- Reflection Map：反射贴图\n- Snell's Law：斯涅尔定律\n- Refractive Index：折射率\n- Single-side Refraction：单面折射\n- Dynamic Environment Mapping：动态环境映射\n\n## 04-07\n\n- Buffer Target：缓冲目标\n- Reserve（内存）：预留\n- Unmapping：解除映射\n- Interleave：交错\n- Uniform Buffer Object：Uniform缓冲对象\n\n## 04-08\n\n- Built-in Variable：内建变量\n- Particle Generation：粒子生成\n- Window Space：窗口空间\n- Read-only：只读\n- Depth Condition：深度条件\n- Interface Block：接口块\n- Geometry Shader：几何着色器\n- Uniform Block：Uniform块\n- Uniform Block Layout：Uniform块布局\n- Spacing：间距\n- Shared Layout：共享布局\n- Pad：填充\n- Padding：填充量\n- Base Alignment：基准对齐量\n- Aligned Offset：对齐偏移量\n- Packed Layout：紧凑布局\n- Binding Point：绑定点\n- Uniform Block Index：Uniform块索引\n- Skeletal Animation：骨骼动画\n\n## 04-09\n\n- Qualifier：修饰符\n- Emitted：发射出的\n- Emit：发射\n- Voxel：体素\n- Explode：爆破\n- Implode：向内爆炸\n- Fur：毛发\n\n## 04-10\n\n- CPU to GPU Bus：CPU到GPU总线\n- Instance：实例\n- Instancing：实例化\n- Instance Count：实例数量\n- Instanced Array：实例化数组\n- Attribute Divisor：属性除数\n\n## 04-11\n\n- Jagged Edge：锯齿边缘\n- Aliasing：走样\n- Anti-aliasing：抗锯齿\n- Super Sample Anti-aliasing, SSAA：超采样抗锯齿\n- Downsample：下采样\n- Multisample Anti-aliasing, MSAA：多重采样抗锯齿\n- Sample Point：采样点\n- Subsample：子采样点\n- Multisample Buffer：多重采样缓冲\n- Hint (GLFW)：提示\n- Resolve：还原\n- Blit：位块传送\n\n## 05-01\n\n- Blinn-Phong Model：Blinn-Phong模型\n- Halfway Vector：半程向量\n\n## 06-01\n\n- Debugging：调试\n- Flag：标记\n- Reference Compiler：参考编译器\n- Tessellation Control Shader：细分控制着色器\n- Tessellation Evaluation Shader：细分计算着色器\n- Compute Shader：计算着色器\n- Attachment：附件\n- Render Buffer Object：渲染缓冲对象\n\n## 06-02\n\n- Character：字符\n- Quad：四边形\n- Mesh：网格\n- Glyph：字形\n- Baseline：基线\n- Bitmap：位图\n- Metric：度量值\n\n## 06-03-01\n\n- Level：关卡\n- Gameplay State：游戏状态\n- Singleton：单一实例\n- Single Responsibility Principle：单一功能原则\n"
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 4.4990234375,
          "content": "nav:\n  - 主页: 'index.md'\n  - 目录:\n    - 简介: 'intro.md'\n    - 入门:\n      - OpenGL: '01 Getting started/01 OpenGL.md'\n      - 创建窗口: '01 Getting started/02 Creating a window.md'\n      - 你好，窗口: '01 Getting started/03 Hello Window.md'\n      - 你好，三角形: '01 Getting started/04 Hello Triangle.md'\n      - 着色器: '01 Getting started/05 Shaders.md'\n      - 纹理: '01 Getting started/06 Textures.md'\n      - 变换: '01 Getting started/07 Transformations.md'\n      - 坐标系统: '01 Getting started/08 Coordinate Systems.md'\n      - 摄像机: '01 Getting started/09 Camera.md'\n      - 复习: '01 Getting started/10 Review.md'\n    - 光照:\n      - 颜色: '02 Lighting/01 Colors.md'\n      - 基础光照: '02 Lighting/02 Basic Lighting.md'\n      - 材质: '02 Lighting/03 Materials.md'\n      - 光照贴图: '02 Lighting/04 Lighting maps.md'\n      - 投光物: '02 Lighting/05 Light casters.md'\n      - 多光源: '02 Lighting/06 Multiple lights.md'\n      - 复习: '02 Lighting/07 Review.md'\n    - 模型加载:\n      - Assimp: '03 Model Loading/01 Assimp.md'\n      - 网格: '03 Model Loading/02 Mesh.md'\n      - 模型: '03 Model Loading/03 Model.md'\n    - 高级OpenGL:\n      - 深度测试: '04 Advanced OpenGL/01 Depth testing.md'\n      - 模板测试: '04 Advanced OpenGL/02 Stencil testing.md'\n      - 混合: '04 Advanced OpenGL/03 Blending.md'\n      - 面剔除: '04 Advanced OpenGL/04 Face culling.md'\n      - 帧缓冲: '04 Advanced OpenGL/05 Framebuffers.md'\n      - 立方体贴图: '04 Advanced OpenGL/06 Cubemaps.md'\n      - 高级数据: '04 Advanced OpenGL/07 Advanced Data.md'\n      - 高级GLSL: '04 Advanced OpenGL/08 Advanced GLSL.md'\n      - 几何着色器: '04 Advanced OpenGL/09 Geometry Shader.md'\n      - 实例化: '04 Advanced OpenGL/10 Instancing.md'\n      - 抗锯齿: '04 Advanced OpenGL/11 Anti Aliasing.md'\n    - 高级光照:\n      - 高级光照: '05 Advanced Lighting/01 Advanced Lighting.md'\n      - Gamma校正: '05 Advanced Lighting/02 Gamma Correction.md'\n      - 阴影:\n        - 阴影映射: '05 Advanced Lighting/03 Shadows/01 Shadow Mapping.md'\n        - 点阴影: '05 Advanced Lighting/03 Shadows/02 Point Shadows.md'\n        - CSM: '05 Advanced Lighting/03 Shadows/03 CSM.md'\n      - 法线贴图: '05 Advanced Lighting/04 Normal Mapping.md'\n      - 视差贴图: '05 Advanced Lighting/05 Parallax Mapping.md'\n      - HDR: '05 Advanced Lighting/06 HDR.md'\n      - 泛光: '05 Advanced Lighting/07 Bloom.md'\n      - 延迟着色法: '05 Advanced Lighting/08 Deferred Shading.md'\n      - SSAO: '05 Advanced Lighting/09 SSAO.md'\n    - PBR:\n      - 理论: '07 PBR/01 Theory.md'\n      - 光照: '07 PBR/02 Lighting.md'\n      - IBL:\n        - 漫反射辐照: '07 PBR/03 IBL/01 Diffuse irradiance.md'\n        - 镜面IBL: '07 PBR/03 IBL/02 Specular IBL.md'\n    - 实战:\n      - 调试: '06 In Practice/01 Debugging.md'\n      - 文本渲染: '06 In Practice/02 Text Rendering.md'\n      - 2D游戏:\n        - Breakout: '06 In Practice/2D-Game/01 Breakout.md'\n        - 准备工作: '06 In Practice/2D-Game/02 Setting up.md'\n        - 渲染精灵: '06 In Practice/2D-Game/03 Rendering Sprites.md'\n        - 关卡: '06 In Practice/2D-Game/04 Levels.md'\n        - 碰撞:\n          - 球: '06 In Practice/2D-Game/05 Collisions/01 Ball.md'\n          - 碰撞检测: '06 In Practice/2D-Game/05 Collisions/02 Collision detection.md'\n          - 碰撞处理: '06 In Practice/2D-Game/05 Collisions/03 Collision resolution.md'\n        - 粒子: '06 In Practice/2D-Game/06 Particles.md'\n        - 后期处理: '06 In Practice/2D-Game/07 Postprocessing.md'\n        - 道具: '06 In Practice/2D-Game/08 Powerups.md'\n        - 音效: '06 In Practice/2D-Game/09 Audio.md'\n        - 渲染文本: '06 In Practice/2D-Game/10 Render Text.md'\n        - 结语: '06 In Practice/2D-Game/11 Final thoughts.md'\n    - Guest Articles:\n      - 2020:\n        - 骨骼动画: '08 Guest Articles/2020/01 Skeletal Animation.md'\n      - 2022:\n        - 区域光: '08 Guest Articles/2022/03 Area Lights.md'\n    - 历史存档: 'legacy.md'\n  - 代码仓库: 'code_repo.md'\n\nsite_name: 'LearnOpenGL CN'\n\nsite_description: 'http://learnopengl.com 系列教程的简体中文翻译'\n\nsite_url: https://learnopengl-cn.github.io/\n\nrepo_url: https://github.com/LearnOpenGL-CN/LearnOpenGL-CN\n\nmarkdown_extensions:\n  - admonition\n  - smarty\n  - sane_lists\n  - mdx_math\n\nextra_javascript:\n  - 'mathjax/MathJax.js?config=TeX-AMS_HTML'\n\nextra_css:\n  - css/style.css\n  - css/admonition_fix.css\n\ndocs_dir: 'docs'\n\ntheme:\n    name: null\n    custom_dir: 'yeti'\n"
        },
        {
          "name": "old",
          "type": "tree",
          "content": null
        },
        {
          "name": "styleguide.md",
          "type": "blob",
          "size": 6.58984375,
          "content": "# 样式指南\n\n这里是LearnOpenGL中文化工程的样式指南，在编写新的翻译或者校对之前请先阅读此文档，以确定你的翻译符合要求。\n\n## 基础\n\n- **对照原文，以原文为准**\n- 必要时可以使用HTML代码\n- 每一节前面加上\n\n```\n原文     | [英文标题](原文地址)\n      ---|---\n作者     | JoeyDeVries\n翻译     | [翻译]\n校对     | [校对]\n```\n\n- 在Markdown文件中如需插入图片或者代码，请与正文空**一行**以方便阅读及解析，每一个段落之间也应该空**一行**，例如：\n\n```markdown\n[text]\n\n[text]\n\n[img]\n\n[text]\n```\n\n## 标点符号\n\n- 一般情况下请使用中文的标点符号\n- 引号请使用`「`和`」`\n- 书名号请使用`『`和`』`\n- 当标注翻译的原文时，括号请使用英文的括号（英文与周围空太多会有点难看），但其它情况下请用中文的括号，如\n\n\tOpenGL规范严格规定了每个函数该如何执行，以及它们的输出值。至于内部具体每个函数是如何实现(Implement)的，将由OpenGL库的开发者自行决定（注：这里开发者是指编写OpenGL库的人）。因为OpenGL规范并没有规定实现的细节，具体的OpenGL库允许使用不同的实现，只要其功能和结果与规范相匹配（亦即，作为用户不会感受到功能上的差异）。\n\n## 代码\n\n- 文本中常量/代码用``加注为代码\n- 代码块不使用Tab标注，请用```式标注\n- 代码的语言需要在代码一开始的标记处标识出来（一般都是C++），比如```c++\n- 请记得翻译注释\n- 注释与`//`间请加一个空格\n- 原文的代码看起来像是加粗，如果真的是代码则用代码，如果不是则用加粗（比如原文中的VS的选项及文件夹）\n\n## 图片\n\n- 图片请尽量搬运到`docs/img`目录，之后在文中引用的时候地址填写`../img/filename.jpg`：\n\n```markdown\n![](../img/[小节]/[教程]/filename.jpg)\n```\n\n- 如果想要让图片放在页面一侧，可以使用HTML代码，注意HTML代码中要多一层`../`，**如果没有特殊效果的话请使用原本的Markdown图片**：\n\n```html\n<img alt=\"OpenGL Logo\" src=\"../../img/opengl.jpg\" class=\"right\" />\n```\n\n- 如果图片有背景颜色的话请使用tools目录下的`ClearBG.py`清除为透明\n\n其他的class名称还有：\n\n- clean\n- left\n- right\n- small\n- medium\n- large\n\n## 标题\n\n- 每一节标题使用`#`（h1）标题(到后面会有几节有很多小节的，太小的标题不明显)\n\t- 根据原文标题大小逐渐递增标题\n\t- 注意`#`后与标题前要加一个空格\n- 标题不要添加翻译，对于名词的翻译请写在文中\n\n## 链接\n\n- 所有的引用链接请使用相对链接，地址为从当前文件目录转到引用文件的相对地址（文件名结尾为`.md`）\n\n## 列表\n\n- 列表请与其他元素之间空一行，否则解析会出错。\n\n## 专有名词\n\n- 专有名词需要在第一次出现的之后用括号标注原文\n\t- 原文单词按照标题大写规则**大写首字母**\n- 翻译\n\t- 首先，请与本工程中大部分的翻译保持一致\n\t- 如果工程中找不到已有的翻译，请参考本文档最下面的词汇表寻找翻译\n\t- 如果还是找不到，可以自己创造一个翻译，或者直接写英文\n- 「Additional resources」译作「附加资源」，「Exercises」译作「练习」，「Solution」译作「参考解答」\n\n## 特殊元素\n\n- 已经安装MathJax插件，如果想要添加数学公式的话直接使用代码就行了：\n\n如果是行内的数学公式：\n\n```\n\\(...\\)\n```\n\n如果是独立的数学公式：\n\n```\n$$\n...\n$$\n```\n\n数学公式可以通过右击原文中的公式Show Math As->Tex Commands，复制弹出窗口内的代码获得。\n\n- 视频用Video标签添加\n\n```html\n<video src=\"url\" controls=\"controls\">\n</video>\n```\n\n- 短的译注直接用中文括号插入文中标明译注即可，例如：\n\n```\n文本（译注：[text]）\n```\n\n- 如果有比较长的译注，请将以下标记插入文本的段落之后:\n\n```\n!!! note \"译注\"\n\n\t[text]\n```\n\n- 原文中的红色方框请用`!!! attention`标注，绿色方框请用`!!! important`标注，注意文本前有**一个**Tab，格式如下：\n\n红色方框：\n\n```\n!!! attention\n\n\t[text]\n```\n\n绿色方框：\n\n```\n!!! important\n\n\t[text]\n```\n\n- 如果方框中有代码块，请将代码复制进来之后前面加**两个**Tab，记得将代码块和正文中间空一行（空行，不用加任何空格和Tab）：\n\n```\n!!! important\n\n\t[text]\n\n\t\t[code]\n\n\t[text]\n```\n\n## 特殊词汇标记\n\n- 定义：`<def>Definition</def>`\n- 函数及类名：`<fun>Program logic</fun>`\n- 变量：`<var>Variables</var>`\n- 下划线：`<u>Underline</u>`\n- **定义**在标记的时候仅仅标记中文翻译，**不要**标记括号中的原文，原则是只将最少的文字标记出来\n- 函数和变量在标记的时候记得不要把中文翻译标记进去了\n- 原文中的斜体如果译成中文一律用加粗表示（中文并不存在斜体），如果仍留为英文，请在单词两侧都添加空格与中文分开再改为斜体，粗体也用粗体表示，注意不要自己违反原文添加粗体\n\n## 专业词汇对照表\n\n1. [专有词汇翻译记录](https://github.com/LearnOpenGL-CN/LearnOpenGL-CN/blob/new-theme/glossary.md)\n2. [微软术语搜索](https://www.microsoft.com/Language/zh-cn/Search.aspx)\n3. [《游戏引擎架构》中英词汇索引表](http://www.cnblogs.com/miloyip/p/GameEngineArchitectureIndex.html) \n4. 摘抄自《OpenGL超级宝典第五版》：\n\n英文词 | 对应翻译\n---|---\nAliasing | 锯齿\nAlpha | 透明度\nAmbient Light|环境光\nAntialiasing|抗锯齿\nAspect Ratio|纵横比\nBezier curve|贝塞尔曲线\nBitplane|位平面\nBuffer|缓冲区\nCartesian|笛卡尔\nClip coordinates|裁剪坐标\nClipping|裁剪\nConvex|凸\nCulling|剔除\nDestination color|目标颜色\nDithering|抖动\nDouble buffered|双缓冲\nExtruded|拉伸\nEye coordinates|视觉坐标\nFrustum|平头截体\nImmediate mode|立即模式\nImplementation|实现\nKhronos|OpenGL维护小组\nLiteral|字面值\nMatrix|矩阵\nMipmapping|Mip贴图\nModelview Matrix|模型视图矩阵\nNormal|法线\nNormalize|规范化\nOrthographic|正交\nPrespective|透视\nPiexl|像素\nPixmap|像素图\nPolygon|多边形\nPrimitive|图元\nProjection|投影\nQuadrilateral|四边形\nResterize|光栅化\nRetained mode|保留模式\nRender|渲染\nScintillation|闪烁\nShader|着色器\nSource Color|源颜色\nSpecification|说明\nSpline|样条\nStipple|点画\nTessellation|镶嵌\nTexel|纹理单元\nTexture|纹理\nTransformation|变换\nTranslucence|半透明\nVector|向量\nVertex|顶点\nViewing Volume|可视区域\nViewport|视口\nWireframe|线框\npipeline | 渲染管线"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "yeti",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}