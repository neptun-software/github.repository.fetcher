{
  "metadata": {
    "timestamp": 1736711717912,
    "page": 8,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "HubSpot/offline",
      "stars": 8639,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.025390625,
          "content": "node_modules/\n.sass-cache/"
        },
        {
          "name": ".hsdoc",
          "type": "blob",
          "size": 0.10546875,
          "content": "title: \"Offline\"\nsource: \"{coffee/*,sass/*}\"\nassets: \"{js/*,themes/*,offline.min.js,docs/welcome/*,test/*}\"\n"
        },
        {
          "name": "Gruntfile.coffee",
          "type": "blob",
          "size": 1.109375,
          "content": "module.exports = (grunt) ->\n  grunt.initConfig\n    pkg: grunt.file.readJSON('package.json')\n\n    coffee:\n      compile:\n        expand: true\n        flatten: true\n        src: ['coffee/*.coffee']\n        dest: 'js/'\n        ext: '.js'\n\n    watch:\n      options:\n        atBegin:\n          true\n      coffee:\n        files: ['coffee/*', 'sass/*']\n        tasks: ['coffee', 'uglify', 'compass']\n\n    uglify:\n      options:\n        banner: '/*! <%= pkg.name %> <%= pkg.version %> */\\n'\n\n      minified:\n        src: ['js/*', '!js/snake.js']\n        dest: 'offline.min.js'\n\n      original:\n        src: ['js/*', '!js/snake.js']\n        dest: 'offline.js'\n        options:\n          mangle: false\n          beautify:\n            beautify: true\n            indent_level: 2\n            space_colon: false\n\n    compass:\n      dist:\n        options:\n          sassDir: 'sass'\n          cssDir: 'themes'\n\n  grunt.loadNpmTasks 'grunt-contrib-watch'\n  grunt.loadNpmTasks 'grunt-contrib-uglify'\n  grunt.loadNpmTasks 'grunt-contrib-coffee'\n  grunt.loadNpmTasks 'grunt-contrib-compass'\n\n  grunt.registerTask 'default', ['coffee', 'uglify', 'compass']\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.033203125,
          "content": "Copyright (c) 2014 HubSpot, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.5927734375,
          "content": "___\n\n**This project isn't actively maintained.**\n___\n\nOffline\n======\n\n**Note to users pre-0.6.0:  Offline previously used a cloudfront hosted file as one of it's methods of detecting the connection status.  This method is now deprecated and the image has been removed.  Please upgrade to Offline 0.7.0+.**\n\nImprove the experience of your app when your users lose connection.\n\n- Monitors ajax requests looking for failure\n- Confirms the connection status by requesting an image or fake resource\n- Automatically grabs ajax requests made while the connection is down and remakes them\n  after the connection is restored.\n- Simple UI with beautiful themes\n- 3kb minified and compressed\n\nInstallation\n-------------------\n\nInclude [the javascript](https://raw.github.com/HubSpot/offline/v0.7.14/offline.min.js), one of [the themes](http://github.hubspot.com/offline/docs/welcome/), and one of [the\nlanguages](https://github.com/HubSpot/offline/tree/master/themes) on your site.  You're done!\n\nTo use only the JavaScript API without a UI indicator, simply leave out the CSS file.\n\nIf you'd like to get a peek at how it looks on your site, disconnect your internet, or try out the [simulator](http://craigshoemaker.github.io/offlinejs-simulate-ui/).\n\nAdvanced\n--------\n\nOptionally, you can provide some configuration by setting `Offline.options` after\nbringing in the script.\n\nOptions (any can be provided as a function), with their defaults:\n\n```javascript\n{\n  // Should we check the connection status immediatly on page load.\n  checkOnLoad: false,\n\n  // Should we monitor AJAX requests to help decide if we have a connection.\n  interceptRequests: true,\n\n  // Should we automatically retest periodically when the connection is down (set to false to disable).\n  reconnect: {\n    // How many seconds should we wait before rechecking.\n    initialDelay: 3,\n\n    // How long should we wait between retries.\n    delay: (1.5 * last delay, capped at 1 hour)\n  },\n\n  // Should we store and attempt to remake requests which fail while the connection is down.\n  requests: true,\n\n  // Should we show a snake game while the connection is down to keep the user entertained?\n  // It's not included in the normal build, you should bring in js/snake.js in addition to\n  // offline.min.js.\n  game: false\n}\n```\n\nProperties\n----------\n\n`Offline.check()`: Check the current status of the connection.\n\n`Offline.state`: The current state of the connection 'up' or 'down'\n\n`Offline.on(event, handler, context)`: Bind an event.  Events:\n\n  - up: The connection has gone from down to up\n  - down: The connection has gone from up to down\n  - confirmed-up: A connection test has succeeded, fired even if the connection was already up\n  - confirmed-down: A connection test has failed, fired even if the connection was already down\n  - checking: We are testing the connection\n  - reconnect:started: We are beginning the reconnect process\n  - reconnect:stopped: We are done attempting to reconnect\n  - reconnect:tick: Fired every second during a reconnect attempt, when a check is not happening\n  - reconnect:connecting: We are reconnecting now\n  - reconnect:failure: A reconnect check attempt failed\n  - requests:flush: Any pending requests have been remade\n  - requests:capture: A new request is being held\n\n`Offline.off(event, handler)`: Unbind an event\n\nChecking\n--------\n\nBy default, Offline makes an XHR request to load your `/favicon.ico` to check the connection.  If you don't\nhave such a file, it will 404 in the console, but otherwise work fine (even a 404 means the connection is up).\nYou can change the URL it hits (an endpoint which will respond with a quick 204 is perfect):\n\n```javascript\nOffline.options = {checks: {xhr: {url: '/connection-test'}}};\n```\n\nMake sure that the URL you check has the same origin as your page (the connection method, domain and port all must be the same), or you\nwill run into CORS issues.  You can add `Access-Control` headers to the endpoint to fix it on modern browsers, but it will still cause issues on\nIE9 and below.\n\nIf you do want to run tests on a different domain, try the image method.  It loads an image, which are allowed to cross domains.\n\n```javascript\nOffline.options = {checks: {image: {url: 'my-image.gif'}, active: 'image'}}\n```\n\nThe one caveat is that with the image method, we can't distinguish a 404 from a genuine connection issue, so any error at all will\nappear to Offline as a connection issue.\n\nOffline also includes a check called `'up'` and another called `'down'` which will always report being up or down respectively for\ntesting.  You can activate them by setting the `active` option, adding a data attribute to your script tag with the name\n`data-simulate` and value `'up'` or `'down'`, or by setting `localStorage.OFFLINE_SIMULATE` to `'up'` or `'down'`.\n\nReconnect\n---------\n\nThe reconnect module automatically retests the connection periodically when it is down.\nA successful AJAX request will also trigger a silent recheck (if `interceptRequests` is not false).\n\nYou can disable the reconnect module by setting the `reconnect` to false.  Reconnect can be\nconfigured by setting options on the reconnect setting.\n\nRequests\n--------\n\nThe requests module holds any failed AJAX requests and, after deduping them, remakes them when the connection\nis restored.\n\nYou can disable it by setting the `requests` setting to false.\n\nYou can also set deDupBody to be true if you want deduping to also take into account the content of the request.\n\nDependencies\n------------\n\nNone!\n\nBrowser Support\n---------------\n\nModern Chrome, Firefox, Safari and IE8+\n\nNote that not all browsers (including Safari and old IE) support the offline events, forcing Offline to use less accurate methods of detection.\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.6962890625,
          "content": "{\n  \"name\": \"offline\",\n  \"homepage\": \"http://github.hubspot.com/offline/docs/welcome\",\n  \"authors\": [\n    \"Zack Bloom <zackbloom@gmail.com>\",\n    \"Adam Schwartz <adam.flynn.schwartz@gmail.com>\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/HubSpot/offline.git\"\n  },\n  \"description\": \"Automatically detect when a browser is offline\",\n  \"main\": \"offline.js\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"offline\",\n    \"online\",\n    \"internet\",\n    \"network\",\n    \"ajax\",\n    \"notification\",\n    \"javascript\",\n    \"client-side\"\n  ],\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"coffee\",\n    \"docs\",\n    \"js\",\n    \"test\",\n    \"bower.json\",\n    \"package.json\"\n  ]\n}\n"
        },
        {
          "name": "coffee",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.json",
          "type": "blob",
          "size": 2.59765625,
          "content": "{\n  \"resources\": {\n    \"head\": [\n      {\n        \"type\": \"script\",\n        \"src\": \"./offline.min.js\"\n      },\n      {\n        \"type\": \"style\",\n        \"src\": \"./themes/offline-language-{{ options.language }}.css\",\n        \"if\": \"!options.indicator\"\n      },\n      {\n        \"type\": \"style\",\n        \"src\": \"./themes/offline-language-{{ options.language }}-indicator.css\",\n        \"if\": \"options.indicator\"\n      },\n      {\n        \"type\": \"style\",\n        \"src\": \"./themes/offline-theme-{{ options.theme }}.css\",\n        \"if\": \"!options.indicator\"\n      },\n      {\n        \"type\": \"style\",\n        \"src\": \"./themes/offline-theme-{{ options.theme }}-indicator.css\",\n        \"if\": \"options.indicator\"\n      }\n    ]\n  },\n  \"options\": {\n    \"properties\": {\n      \"indicator\": {\n        \"title\": \"Always on\",\n        \"description\": \"When checked, a connectivity indicator will always be present on the bottom-left corner of the page. When unchecked, Offline will only show a message when there are connectivity issues.\",\n        \"type\": \"boolean\",\n        \"default\": false\n      },\n      \"language\": {\n        \"title\": \"Language\",\n        \"description\": \"The language of the message displayed to the user when connectivity is lost or regained.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"arabic\",\n          \"chinese-simplified\",\n          \"chinese-traditional\",\n          \"dutch\",\n          \"english\",\n          \"french\",\n          \"german\",\n          \"italian\",\n          \"pashto\",\n          \"persian\",\n          \"polish\",\n          \"portuguese-brazil\",\n          \"spanish\",\n          \"turkish\"\n        ],\n        \"enumNames\": {\n          \"arabic\": \"Arabic\",\n          \"chinese-simplified\": \"Simplified Chinese\",\n          \"chinese-traditional\": \"Traditional Chinese\",\n          \"czech\": \"Czech\",\n          \"dutch\": \"Dutch\",\n          \"english\": \"English\",\n          \"french\": \"French\",\n          \"german\": \"German\",\n          \"italian\": \"Italian\",\n          \"pashto\": \"Pashto\",\n          \"persian\": \"Persian\",\n          \"polish\": \"Polish\",\n          \"portuguese-brazil\": \"Brazilian Portuguese\",\n          \"spanish\": \"Spanish\",\n          \"turkish\": \"Turkish\"\n        },\n        \"default\": \"english\"\n      },\n      \"theme\": {\n        \"title\": \"Theme\",\n        \"description\": \"Describes the look and feel of the message.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"default\",\n          \"dark\",\n          \"chrome\",\n          \"slide\"\n        ],\n        \"enumNames\": {\n          \"default\": \"Default\",\n          \"dark\": \"Dark\",\n          \"chrome\": \"Chrome\",\n          \"slide\": \"Slide\"\n        },\n        \"default\": \"default\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "offline.js",
          "type": "blob",
          "size": 15.556640625,
          "content": "/*! offline-js 0.7.19 */\n(function() {\n  var Offline, checkXHR, defaultOptions, extendNative, grab, handlers, init;\n  extendNative = function(to, from) {\n    var key, results, val;\n    results = [];\n    for (key in from.prototype) try {\n      val = from.prototype[key], null == to[key] && \"function\" != typeof val ? results.push(to[key] = val) :results.push(void 0);\n    } catch (_error) {\n      _error;\n    }\n    return results;\n  }, Offline = {}, Offline.options = window.Offline ? window.Offline.options || {} :{}, \n  defaultOptions = {\n    checks:{\n      xhr:{\n        url:function() {\n          return \"/favicon.ico?_=\" + new Date().getTime();\n        },\n        timeout:5e3,\n        type:\"HEAD\"\n      },\n      image:{\n        url:function() {\n          return \"/favicon.ico?_=\" + new Date().getTime();\n        }\n      },\n      active:\"xhr\"\n    },\n    checkOnLoad:!1,\n    interceptRequests:!0,\n    reconnect:!0,\n    deDupBody:!1\n  }, grab = function(obj, key) {\n    var cur, i, j, len, part, parts;\n    for (cur = obj, parts = key.split(\".\"), i = j = 0, len = parts.length; j < len && (part = parts[i], \n    \"object\" == typeof (cur = cur[part])); i = ++j) ;\n    return i === parts.length - 1 ? cur :void 0;\n  }, Offline.getOption = function(key) {\n    var ref, val;\n    return val = null != (ref = grab(Offline.options, key)) ? ref :grab(defaultOptions, key), \n    \"function\" == typeof val ? val() :val;\n  }, \"function\" == typeof window.addEventListener && window.addEventListener(\"online\", function() {\n    return setTimeout(Offline.confirmUp, 100);\n  }, !1), \"function\" == typeof window.addEventListener && window.addEventListener(\"offline\", function() {\n    return Offline.confirmDown();\n  }, !1), Offline.state = \"up\", Offline.markUp = function() {\n    if (Offline.trigger(\"confirmed-up\"), \"up\" !== Offline.state) return Offline.state = \"up\", \n    Offline.trigger(\"up\");\n  }, Offline.markDown = function() {\n    if (Offline.trigger(\"confirmed-down\"), \"down\" !== Offline.state) return Offline.state = \"down\", \n    Offline.trigger(\"down\");\n  }, handlers = {}, Offline.on = function(event, handler, ctx) {\n    var e, events, j, len, results;\n    if (events = event.split(\" \"), events.length > 1) {\n      for (results = [], j = 0, len = events.length; j < len; j++) e = events[j], results.push(Offline.on(e, handler, ctx));\n      return results;\n    }\n    return null == handlers[event] && (handlers[event] = []), handlers[event].push([ ctx, handler ]);\n  }, Offline.off = function(event, handler) {\n    var _handler, i, ref, results;\n    if (null != handlers[event]) {\n      if (handler) {\n        for (i = 0, results = []; i < handlers[event].length; ) ref = handlers[event][i], \n        ref[0], _handler = ref[1], _handler === handler ? results.push(handlers[event].splice(i, 1)) :results.push(i++);\n        return results;\n      }\n      return handlers[event] = [];\n    }\n  }, Offline.trigger = function(event) {\n    var ctx, handler, j, len, ref, ref1, results;\n    if (null != handlers[event]) {\n      for (ref = handlers[event].slice(0), results = [], j = 0, len = ref.length; j < len; j++) ref1 = ref[j], \n      ctx = ref1[0], handler = ref1[1], results.push(handler.call(ctx));\n      return results;\n    }\n  }, checkXHR = function(xhr, onUp, onDown) {\n    var _onerror, _onload, _onreadystatechange, _ontimeout, checkStatus;\n    return checkStatus = function() {\n      return xhr.status && xhr.status < 12e3 ? onUp() :onDown();\n    }, null === xhr.onprogress ? (_onerror = xhr.onerror, xhr.onerror = function() {\n      return onDown(), \"function\" == typeof _onerror ? _onerror.apply(null, arguments) :void 0;\n    }, _ontimeout = xhr.ontimeout, xhr.ontimeout = function() {\n      return onDown(), \"function\" == typeof _ontimeout ? _ontimeout.apply(null, arguments) :void 0;\n    }, _onload = xhr.onload, xhr.onload = function() {\n      return checkStatus(), \"function\" == typeof _onload ? _onload.apply(null, arguments) :void 0;\n    }) :(_onreadystatechange = xhr.onreadystatechange, xhr.onreadystatechange = function() {\n      return 4 === xhr.readyState ? checkStatus() :0 === xhr.readyState && onDown(), \"function\" == typeof _onreadystatechange ? _onreadystatechange.apply(null, arguments) :void 0;\n    });\n  }, Offline.checks = {}, Offline.checks.xhr = function() {\n    var xhr;\n    xhr = new XMLHttpRequest(), xhr.offline = !1, xhr.open(Offline.getOption(\"checks.xhr.type\"), Offline.getOption(\"checks.xhr.url\"), !0), \n    null != xhr.timeout && (xhr.timeout = Offline.getOption(\"checks.xhr.timeout\")), \n    checkXHR(xhr, Offline.markUp, Offline.markDown);\n    try {\n      xhr.send();\n    } catch (_error) {\n      _error, Offline.markDown();\n    }\n    return xhr;\n  }, Offline.checks.image = function() {\n    var img;\n    img = document.createElement(\"img\"), img.onerror = Offline.markDown, img.onload = Offline.markUp, \n    img.src = Offline.getOption(\"checks.image.url\");\n  }, Offline.checks.down = Offline.markDown, Offline.checks.up = Offline.markUp, Offline.check = function() {\n    return Offline.trigger(\"checking\"), Offline.checks[Offline.getOption(\"checks.active\")]();\n  }, Offline.confirmUp = Offline.confirmDown = Offline.check, Offline.onXHR = function(cb) {\n    var _XDomainRequest, _XMLHttpRequest, monitorXHR;\n    if (monitorXHR = function(req, flags) {\n      var _open;\n      return _open = req.open, req.open = function(type, url, async, user, password) {\n        return cb({\n          type:type,\n          url:url,\n          async:async,\n          flags:flags,\n          user:user,\n          password:password,\n          xhr:req\n        }), _open.apply(req, arguments);\n      };\n    }, _XMLHttpRequest = window.XMLHttpRequest, window.XMLHttpRequest = function(flags) {\n      var _overrideMimeType, _setRequestHeader, req;\n      return req = new _XMLHttpRequest(flags), monitorXHR(req, flags), _setRequestHeader = req.setRequestHeader, \n      req.headers = {}, req.setRequestHeader = function(name, value) {\n        return req.headers[name] = value, _setRequestHeader.call(req, name, value);\n      }, _overrideMimeType = req.overrideMimeType, req.overrideMimeType = function(type) {\n        return req.mimeType = type, _overrideMimeType.call(req, type);\n      }, req;\n    }, extendNative(window.XMLHttpRequest, _XMLHttpRequest), null != window.XDomainRequest) return _XDomainRequest = window.XDomainRequest, \n    window.XDomainRequest = function() {\n      var req;\n      return req = new _XDomainRequest(), monitorXHR(req), req;\n    }, extendNative(window.XDomainRequest, _XDomainRequest);\n  }, init = function() {\n    if (Offline.getOption(\"interceptRequests\") && Offline.onXHR(function(arg) {\n      var xhr;\n      if (xhr = arg.xhr, !1 !== xhr.offline) return checkXHR(xhr, Offline.markUp, Offline.confirmDown);\n    }), Offline.getOption(\"checkOnLoad\")) return Offline.check();\n  }, setTimeout(init, 0), window.Offline = Offline;\n}).call(this), function() {\n  var down, next, nope, rc, reset, retryIntv, tick, tryNow, up;\n  if (!window.Offline) throw new Error(\"Offline Reconnect brought in without offline.js\");\n  rc = Offline.reconnect = {}, retryIntv = null, reset = function() {\n    var ref;\n    return null != rc.state && \"inactive\" !== rc.state && Offline.trigger(\"reconnect:stopped\"), \n    rc.state = \"inactive\", rc.remaining = rc.delay = null != (ref = Offline.getOption(\"reconnect.initialDelay\")) ? ref :3;\n  }, next = function() {\n    var delay, ref;\n    return delay = null != (ref = Offline.getOption(\"reconnect.delay\")) ? ref :Math.min(Math.ceil(1.5 * rc.delay), 3600), \n    rc.remaining = rc.delay = delay;\n  }, tick = function() {\n    if (\"connecting\" !== rc.state) return rc.remaining -= 1, Offline.trigger(\"reconnect:tick\"), \n    0 === rc.remaining ? tryNow() :void 0;\n  }, tryNow = function() {\n    if (\"waiting\" === rc.state) return Offline.trigger(\"reconnect:connecting\"), rc.state = \"connecting\", \n    Offline.check();\n  }, down = function() {\n    if (Offline.getOption(\"reconnect\")) return reset(), rc.state = \"waiting\", Offline.trigger(\"reconnect:started\"), \n    retryIntv = setInterval(tick, 1e3);\n  }, up = function() {\n    return null != retryIntv && clearInterval(retryIntv), reset();\n  }, nope = function() {\n    if (Offline.getOption(\"reconnect\")) return \"connecting\" === rc.state ? (Offline.trigger(\"reconnect:failure\"), \n    rc.state = \"waiting\", next()) :void 0;\n  }, rc.tryNow = tryNow, reset(), Offline.on(\"down\", down), Offline.on(\"confirmed-down\", nope), \n  Offline.on(\"up\", up);\n}.call(this), function() {\n  var clear, flush, held, holdRequest, makeRequest, waitingOnConfirm;\n  if (!window.Offline) throw new Error(\"Requests module brought in without offline.js\");\n  held = [], waitingOnConfirm = !1, holdRequest = function(req) {\n    if (!1 !== Offline.getOption(\"requests\")) return Offline.trigger(\"requests:capture\"), \n    \"down\" !== Offline.state && (waitingOnConfirm = !0), held.push(req);\n  }, makeRequest = function(arg) {\n    var body, name, password, ref, type, url, user, val, xhr;\n    if (xhr = arg.xhr, url = arg.url, type = arg.type, user = arg.user, password = arg.password, \n    body = arg.body, !1 !== Offline.getOption(\"requests\")) {\n      xhr.abort(), xhr.open(type, url, !0, user, password), ref = xhr.headers;\n      for (name in ref) val = ref[name], xhr.setRequestHeader(name, val);\n      return xhr.mimeType && xhr.overrideMimeType(xhr.mimeType), xhr.send(body);\n    }\n  }, clear = function() {\n    return held = [];\n  }, flush = function() {\n    var body, i, key, len, request, requests, url;\n    if (!1 !== Offline.getOption(\"requests\")) {\n      for (Offline.trigger(\"requests:flush\"), requests = {}, i = 0, len = held.length; i < len; i++) request = held[i], \n      url = request.url.replace(/(\\?|&)_=[0-9]+/, function(match, chr) {\n        return \"?\" === chr ? chr :\"\";\n      }), Offline.getOption(\"deDupBody\") ? (body = request.body, body = \"[object Object]\" === body.toString() ? JSON.stringify(body) :body.toString(), \n      requests[request.type.toUpperCase() + \" - \" + url + \" - \" + body] = request) :requests[request.type.toUpperCase() + \" - \" + url] = request;\n      for (key in requests) request = requests[key], makeRequest(request);\n      return clear();\n    }\n  }, setTimeout(function() {\n    if (!1 !== Offline.getOption(\"requests\")) return Offline.on(\"confirmed-up\", function() {\n      if (waitingOnConfirm) return waitingOnConfirm = !1, clear();\n    }), Offline.on(\"up\", flush), Offline.on(\"down\", function() {\n      return waitingOnConfirm = !1;\n    }), Offline.onXHR(function(request) {\n      var _onreadystatechange, _send, async, hold, xhr;\n      if (xhr = request.xhr, async = request.async, !1 !== xhr.offline && (hold = function() {\n        return holdRequest(request);\n      }, _send = xhr.send, xhr.send = function(body) {\n        return request.body = body, _send.apply(xhr, arguments);\n      }, async)) return null === xhr.onprogress ? (xhr.addEventListener(\"error\", hold, !1), \n      xhr.addEventListener(\"timeout\", hold, !1)) :(_onreadystatechange = xhr.onreadystatechange, \n      xhr.onreadystatechange = function() {\n        return 0 === xhr.readyState ? hold() :4 === xhr.readyState && (0 === xhr.status || xhr.status >= 12e3) && hold(), \n        \"function\" == typeof _onreadystatechange ? _onreadystatechange.apply(null, arguments) :void 0;\n      });\n    }), Offline.requests = {\n      flush:flush,\n      clear:clear\n    };\n  }, 0);\n}.call(this), function() {\n  var base, i, len, ref, simulate, state;\n  if (!Offline) throw new Error(\"Offline simulate brought in without offline.js\");\n  for (ref = [ \"up\", \"down\" ], i = 0, len = ref.length; i < len; i++) {\n    state = ref[i];\n    try {\n      simulate = document.querySelector(\"script[data-simulate='\" + state + \"']\") || (\"undefined\" != typeof localStorage && null !== localStorage ? localStorage.OFFLINE_SIMULATE :void 0) === state;\n    } catch (_error) {\n      _error, simulate = !1;\n    }\n  }\n  simulate && (null == Offline.options && (Offline.options = {}), null == (base = Offline.options).checks && (base.checks = {}), \n  Offline.options.checks.active = state);\n}.call(this), function() {\n  var RETRY_TEMPLATE, TEMPLATE, _onreadystatechange, addClass, content, createFromHTML, el, flashClass, flashTimeouts, init, removeClass, render, roundTime;\n  if (!window.Offline) throw new Error(\"Offline UI brought in without offline.js\");\n  TEMPLATE = '<div class=\"offline-ui\"><div class=\"offline-ui-content\"></div></div>', \n  RETRY_TEMPLATE = '<a href class=\"offline-ui-retry\"></a>', createFromHTML = function(html) {\n    var el;\n    return el = document.createElement(\"div\"), el.innerHTML = html, el.children[0];\n  }, el = content = null, addClass = function(name) {\n    return removeClass(name), el.className += \" \" + name;\n  }, removeClass = function(name) {\n    return el.className = el.className.replace(new RegExp(\"(^| )\" + name.split(\" \").join(\"|\") + \"( |$)\", \"gi\"), \" \");\n  }, flashTimeouts = {}, flashClass = function(name, time) {\n    return addClass(name), null != flashTimeouts[name] && clearTimeout(flashTimeouts[name]), \n    flashTimeouts[name] = setTimeout(function() {\n      return removeClass(name), delete flashTimeouts[name];\n    }, 1e3 * time);\n  }, roundTime = function(sec) {\n    var mult, unit, units, val;\n    units = {\n      day:86400,\n      hour:3600,\n      minute:60,\n      second:1\n    };\n    for (unit in units) if (mult = units[unit], sec >= mult) return val = Math.floor(sec / mult), \n    [ val, unit ];\n    return [ \"now\", \"\" ];\n  }, render = function() {\n    var button, handler;\n    return el = createFromHTML(TEMPLATE), document.body.appendChild(el), null != Offline.reconnect && Offline.getOption(\"reconnect\") && (el.appendChild(createFromHTML(RETRY_TEMPLATE)), \n    button = el.querySelector(\".offline-ui-retry\"), handler = function(e) {\n      return e.preventDefault(), Offline.reconnect.tryNow();\n    }, null != button.addEventListener ? button.addEventListener(\"click\", handler, !1) :button.attachEvent(\"click\", handler)), \n    addClass(\"offline-ui-\" + Offline.state), content = el.querySelector(\".offline-ui-content\");\n  }, init = function() {\n    return render(), Offline.on(\"up\", function() {\n      return removeClass(\"offline-ui-down\"), addClass(\"offline-ui-up\"), flashClass(\"offline-ui-up-2s\", 2), \n      flashClass(\"offline-ui-up-5s\", 5);\n    }), Offline.on(\"down\", function() {\n      return removeClass(\"offline-ui-up\"), addClass(\"offline-ui-down\"), flashClass(\"offline-ui-down-2s\", 2), \n      flashClass(\"offline-ui-down-5s\", 5);\n    }), Offline.on(\"reconnect:connecting\", function() {\n      return addClass(\"offline-ui-connecting\"), removeClass(\"offline-ui-waiting\");\n    }), Offline.on(\"reconnect:tick\", function() {\n      var ref, time, unit;\n      return addClass(\"offline-ui-waiting\"), removeClass(\"offline-ui-connecting\"), ref = roundTime(Offline.reconnect.remaining), \n      time = ref[0], unit = ref[1], content.setAttribute(\"data-retry-in-value\", time), \n      content.setAttribute(\"data-retry-in-unit\", unit);\n    }), Offline.on(\"reconnect:stopped\", function() {\n      return removeClass(\"offline-ui-connecting offline-ui-waiting\"), content.setAttribute(\"data-retry-in-value\", null), \n      content.setAttribute(\"data-retry-in-unit\", null);\n    }), Offline.on(\"reconnect:failure\", function() {\n      return flashClass(\"offline-ui-reconnect-failed-2s\", 2), flashClass(\"offline-ui-reconnect-failed-5s\", 5);\n    }), Offline.on(\"reconnect:success\", function() {\n      return flashClass(\"offline-ui-reconnect-succeeded-2s\", 2), flashClass(\"offline-ui-reconnect-succeeded-5s\", 5);\n    });\n  }, \"complete\" === document.readyState ? init() :null != document.addEventListener ? document.addEventListener(\"DOMContentLoaded\", init, !1) :(_onreadystatechange = document.onreadystatechange, \n  document.onreadystatechange = function() {\n    return \"complete\" === document.readyState && init(), \"function\" == typeof _onreadystatechange ? _onreadystatechange.apply(null, arguments) :void 0;\n  });\n}.call(this);"
        },
        {
          "name": "offline.min.js",
          "type": "blob",
          "size": 9.423828125,
          "content": "/*! offline-js 0.7.19 */\n(function(){var a,b,c,d,e,f,g;d=function(a,b){var c,d,e;d=[];for(c in b.prototype)try{e=b.prototype[c],null==a[c]&&\"function\"!=typeof e?d.push(a[c]=e):d.push(void 0)}catch(f){f}return d},a={},a.options=window.Offline?window.Offline.options||{}:{},c={checks:{xhr:{url:function(){return\"/favicon.ico?_=\"+(new Date).getTime()},timeout:5e3,type:\"HEAD\"},image:{url:function(){return\"/favicon.ico?_=\"+(new Date).getTime()}},active:\"xhr\"},checkOnLoad:!1,interceptRequests:!0,reconnect:!0,deDupBody:!1},e=function(a,b){var c,d,e,f,g,h;for(c=a,h=b.split(\".\"),d=e=0,f=h.length;e<f&&(g=h[d],\"object\"==typeof(c=c[g]));d=++e);return d===h.length-1?c:void 0},a.getOption=function(b){var d,f;return f=null!=(d=e(a.options,b))?d:e(c,b),\"function\"==typeof f?f():f},\"function\"==typeof window.addEventListener&&window.addEventListener(\"online\",function(){return setTimeout(a.confirmUp,100)},!1),\"function\"==typeof window.addEventListener&&window.addEventListener(\"offline\",function(){return a.confirmDown()},!1),a.state=\"up\",a.markUp=function(){if(a.trigger(\"confirmed-up\"),\"up\"!==a.state)return a.state=\"up\",a.trigger(\"up\")},a.markDown=function(){if(a.trigger(\"confirmed-down\"),\"down\"!==a.state)return a.state=\"down\",a.trigger(\"down\")},f={},a.on=function(b,c,d){var e,g,h,i,j;if(g=b.split(\" \"),g.length>1){for(j=[],h=0,i=g.length;h<i;h++)e=g[h],j.push(a.on(e,c,d));return j}return null==f[b]&&(f[b]=[]),f[b].push([d,c])},a.off=function(a,b){var c,d,e,g;if(null!=f[a]){if(b){for(d=0,g=[];d<f[a].length;)e=f[a][d],e[0],c=e[1],c===b?g.push(f[a].splice(d,1)):g.push(d++);return g}return f[a]=[]}},a.trigger=function(a){var b,c,d,e,g,h,i;if(null!=f[a]){for(g=f[a].slice(0),i=[],d=0,e=g.length;d<e;d++)h=g[d],b=h[0],c=h[1],i.push(c.call(b));return i}},b=function(a,b,c){var d,e,f,g,h;return h=function(){return a.status&&a.status<12e3?b():c()},null===a.onprogress?(d=a.onerror,a.onerror=function(){return c(),\"function\"==typeof d?d.apply(null,arguments):void 0},g=a.ontimeout,a.ontimeout=function(){return c(),\"function\"==typeof g?g.apply(null,arguments):void 0},e=a.onload,a.onload=function(){return h(),\"function\"==typeof e?e.apply(null,arguments):void 0}):(f=a.onreadystatechange,a.onreadystatechange=function(){return 4===a.readyState?h():0===a.readyState&&c(),\"function\"==typeof f?f.apply(null,arguments):void 0})},a.checks={},a.checks.xhr=function(){var c;c=new XMLHttpRequest,c.offline=!1,c.open(a.getOption(\"checks.xhr.type\"),a.getOption(\"checks.xhr.url\"),!0),null!=c.timeout&&(c.timeout=a.getOption(\"checks.xhr.timeout\")),b(c,a.markUp,a.markDown);try{c.send()}catch(d){d,a.markDown()}return c},a.checks.image=function(){var b;b=document.createElement(\"img\"),b.onerror=a.markDown,b.onload=a.markUp,b.src=a.getOption(\"checks.image.url\")},a.checks.down=a.markDown,a.checks.up=a.markUp,a.check=function(){return a.trigger(\"checking\"),a.checks[a.getOption(\"checks.active\")]()},a.confirmUp=a.confirmDown=a.check,a.onXHR=function(a){var b,c,e;if(e=function(b,c){var d;return d=b.open,b.open=function(e,f,g,h,i){return a({type:e,url:f,async:g,flags:c,user:h,password:i,xhr:b}),d.apply(b,arguments)}},c=window.XMLHttpRequest,window.XMLHttpRequest=function(a){var b,d,f;return f=new c(a),e(f,a),d=f.setRequestHeader,f.headers={},f.setRequestHeader=function(a,b){return f.headers[a]=b,d.call(f,a,b)},b=f.overrideMimeType,f.overrideMimeType=function(a){return f.mimeType=a,b.call(f,a)},f},d(window.XMLHttpRequest,c),null!=window.XDomainRequest)return b=window.XDomainRequest,window.XDomainRequest=function(){var a;return a=new b,e(a),a},d(window.XDomainRequest,b)},g=function(){if(a.getOption(\"interceptRequests\")&&a.onXHR(function(c){var d;if(d=c.xhr,!1!==d.offline)return b(d,a.markUp,a.confirmDown)}),a.getOption(\"checkOnLoad\"))return a.check()},setTimeout(g,0),window.Offline=a}).call(this),function(){var a,b,c,d,e,f,g,h,i;if(!window.Offline)throw new Error(\"Offline Reconnect brought in without offline.js\");d=Offline.reconnect={},f=null,e=function(){var a;return null!=d.state&&\"inactive\"!==d.state&&Offline.trigger(\"reconnect:stopped\"),d.state=\"inactive\",d.remaining=d.delay=null!=(a=Offline.getOption(\"reconnect.initialDelay\"))?a:3},b=function(){var a,b;return a=null!=(b=Offline.getOption(\"reconnect.delay\"))?b:Math.min(Math.ceil(1.5*d.delay),3600),d.remaining=d.delay=a},g=function(){if(\"connecting\"!==d.state)return d.remaining-=1,Offline.trigger(\"reconnect:tick\"),0===d.remaining?h():void 0},h=function(){if(\"waiting\"===d.state)return Offline.trigger(\"reconnect:connecting\"),d.state=\"connecting\",Offline.check()},a=function(){if(Offline.getOption(\"reconnect\"))return e(),d.state=\"waiting\",Offline.trigger(\"reconnect:started\"),f=setInterval(g,1e3)},i=function(){return null!=f&&clearInterval(f),e()},c=function(){if(Offline.getOption(\"reconnect\"))return\"connecting\"===d.state?(Offline.trigger(\"reconnect:failure\"),d.state=\"waiting\",b()):void 0},d.tryNow=h,e(),Offline.on(\"down\",a),Offline.on(\"confirmed-down\",c),Offline.on(\"up\",i)}.call(this),function(){var a,b,c,d,e,f;if(!window.Offline)throw new Error(\"Requests module brought in without offline.js\");c=[],f=!1,d=function(a){if(!1!==Offline.getOption(\"requests\"))return Offline.trigger(\"requests:capture\"),\"down\"!==Offline.state&&(f=!0),c.push(a)},e=function(a){var b,c,d,e,f,g,h,i,j;if(j=a.xhr,g=a.url,f=a.type,h=a.user,d=a.password,b=a.body,!1!==Offline.getOption(\"requests\")){j.abort(),j.open(f,g,!0,h,d),e=j.headers;for(c in e)i=e[c],j.setRequestHeader(c,i);return j.mimeType&&j.overrideMimeType(j.mimeType),j.send(b)}},a=function(){return c=[]},b=function(){var b,d,f,g,h,i,j;if(!1!==Offline.getOption(\"requests\")){for(Offline.trigger(\"requests:flush\"),i={},d=0,g=c.length;d<g;d++)h=c[d],j=h.url.replace(/(\\?|&)_=[0-9]+/,function(a,b){return\"?\"===b?b:\"\"}),Offline.getOption(\"deDupBody\")?(b=h.body,b=\"[object Object]\"===b.toString()?JSON.stringify(b):b.toString(),i[h.type.toUpperCase()+\" - \"+j+\" - \"+b]=h):i[h.type.toUpperCase()+\" - \"+j]=h;for(f in i)h=i[f],e(h);return a()}},setTimeout(function(){if(!1!==Offline.getOption(\"requests\"))return Offline.on(\"confirmed-up\",function(){if(f)return f=!1,a()}),Offline.on(\"up\",b),Offline.on(\"down\",function(){return f=!1}),Offline.onXHR(function(a){var b,c,e,f,g;if(g=a.xhr,e=a.async,!1!==g.offline&&(f=function(){return d(a)},c=g.send,g.send=function(b){return a.body=b,c.apply(g,arguments)},e))return null===g.onprogress?(g.addEventListener(\"error\",f,!1),g.addEventListener(\"timeout\",f,!1)):(b=g.onreadystatechange,g.onreadystatechange=function(){return 0===g.readyState?f():4===g.readyState&&(0===g.status||g.status>=12e3)&&f(),\"function\"==typeof b?b.apply(null,arguments):void 0})}),Offline.requests={flush:b,clear:a}},0)}.call(this),function(){var a,b,c,d,e,f;if(!Offline)throw new Error(\"Offline simulate brought in without offline.js\");for(d=[\"up\",\"down\"],b=0,c=d.length;b<c;b++){f=d[b];try{e=document.querySelector(\"script[data-simulate='\"+f+\"']\")||(\"undefined\"!=typeof localStorage&&null!==localStorage?localStorage.OFFLINE_SIMULATE:void 0)===f}catch(g){g,e=!1}}e&&(null==Offline.options&&(Offline.options={}),null==(a=Offline.options).checks&&(a.checks={}),Offline.options.checks.active=f)}.call(this),function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;if(!window.Offline)throw new Error(\"Offline UI brought in without offline.js\");b='<div class=\"offline-ui\"><div class=\"offline-ui-content\"></div></div>',a='<a href class=\"offline-ui-retry\"></a>',f=function(a){var b;return b=document.createElement(\"div\"),b.innerHTML=a,b.children[0]},g=e=null,d=function(a){return k(a),g.className+=\" \"+a},k=function(a){return g.className=g.className.replace(new RegExp(\"(^| )\"+a.split(\" \").join(\"|\")+\"( |$)\",\"gi\"),\" \")},i={},h=function(a,b){return d(a),null!=i[a]&&clearTimeout(i[a]),i[a]=setTimeout(function(){return k(a),delete i[a]},1e3*b)},m=function(a){var b,c,d,e;d={day:86400,hour:3600,minute:60,second:1};for(c in d)if(b=d[c],a>=b)return e=Math.floor(a/b),[e,c];return[\"now\",\"\"]},l=function(){var c,h;return g=f(b),document.body.appendChild(g),null!=Offline.reconnect&&Offline.getOption(\"reconnect\")&&(g.appendChild(f(a)),c=g.querySelector(\".offline-ui-retry\"),h=function(a){return a.preventDefault(),Offline.reconnect.tryNow()},null!=c.addEventListener?c.addEventListener(\"click\",h,!1):c.attachEvent(\"click\",h)),d(\"offline-ui-\"+Offline.state),e=g.querySelector(\".offline-ui-content\")},j=function(){return l(),Offline.on(\"up\",function(){return k(\"offline-ui-down\"),d(\"offline-ui-up\"),h(\"offline-ui-up-2s\",2),h(\"offline-ui-up-5s\",5)}),Offline.on(\"down\",function(){return k(\"offline-ui-up\"),d(\"offline-ui-down\"),h(\"offline-ui-down-2s\",2),h(\"offline-ui-down-5s\",5)}),Offline.on(\"reconnect:connecting\",function(){return d(\"offline-ui-connecting\"),k(\"offline-ui-waiting\")}),Offline.on(\"reconnect:tick\",function(){var a,b,c;return d(\"offline-ui-waiting\"),k(\"offline-ui-connecting\"),a=m(Offline.reconnect.remaining),b=a[0],c=a[1],e.setAttribute(\"data-retry-in-value\",b),e.setAttribute(\"data-retry-in-unit\",c)}),Offline.on(\"reconnect:stopped\",function(){return k(\"offline-ui-connecting offline-ui-waiting\"),e.setAttribute(\"data-retry-in-value\",null),e.setAttribute(\"data-retry-in-unit\",null)}),Offline.on(\"reconnect:failure\",function(){return h(\"offline-ui-reconnect-failed-2s\",2),h(\"offline-ui-reconnect-failed-5s\",5)}),Offline.on(\"reconnect:success\",function(){return h(\"offline-ui-reconnect-succeeded-2s\",2),h(\"offline-ui-reconnect-succeeded-5s\",5)})},\"complete\"===document.readyState?j():null!=document.addEventListener?document.addEventListener(\"DOMContentLoaded\",j,!1):(c=document.onreadystatechange,document.onreadystatechange=function(){return\"complete\"===document.readyState&&j(),\"function\"==typeof c?c.apply(null,arguments):void 0})}.call(this);"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.673828125,
          "content": "{\n  \"name\": \"offline-js\",\n  \"version\": \"0.7.19\",\n  \"description\": \"Automatically detect when a browser is offline\",\n  \"authors\": [\n    \"Adam Schwartz <adam.flynn.schwartz@gmail.com>\",\n    \"Zack Bloom <zackbloom@gmail.com>\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/HubSpot/offline.git\"\n  },\n  \"main\": \"offline.js\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"coffee-script\": \"^1.9.3\",\n    \"color\": \"^0.9.0\",\n    \"grunt\": \"^0.4.1\",\n    \"grunt-cli\": \"^0.1.9\",\n    \"grunt-contrib-coffee\": \"^0.13.0\",\n    \"grunt-contrib-compass\": \"^1.0.3\",\n    \"grunt-contrib-uglify\": \"^0.9.1\",\n    \"grunt-contrib-watch\": \"^0.6.1\"\n  },\n  \"scripts\": {\n    \"build\": \"grunt\"\n  }\n}\n"
        },
        {
          "name": "sass",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}