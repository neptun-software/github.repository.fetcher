{
  "metadata": {
    "timestamp": 1736711739467,
    "page": 55,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DMQ/mvvm",
      "stars": 5207,
      "defaultBranch": "master",
      "files": [
        {
          "name": "css",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvvm.html",
          "type": "blob",
          "size": 1.4267578125,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>MVVM</title>\n</head>\n<body>\n\n<div id=\"mvvm-app\">\n    <input type=\"text\" v-model=\"someStr\">\n    <input type=\"text\" v-model=\"child.someStr\">\n    <!-- <p v-class=\"className\" class=\"abc\">\n        {{someStr}}\n        <span v-text=\"child.someStr\"></span>\n    </p> -->\n    <p>{{ getHelloWord }}</p>\n    <p v-html=\"htmlStr\"></p>\n    <button v-on:click=\"clickBtn\">change model</button>\n</div>\n\n<script src=\"http://cdn.bootcss.com/vue/1.0.25/vue.js\"></script>\n<script src=\"./js/observer.js\"></script>\n<script src=\"./js/watcher.js\"></script>\n<script src=\"./js/compile.js\"></script>\n<script src=\"./js/mvvm.js\"></script>\n<script>\n    var vm = new MVVM({\n        el: '#mvvm-app',\n        data: {\n            someStr: 'hello ',\n            className: 'btn',\n            htmlStr: '<span style=\"color: #f00;\">red</span>',\n            child: {\n                someStr: 'World !'\n            }\n        },\n\n        computed: {\n            getHelloWord: function() {\n                return this.someStr + this.child.someStr;\n            }\n        },\n\n        methods: {\n            clickBtn: function(e) {\n                var randomStrArr = ['childOne', 'childTwo', 'childThree'];\n                this.child.someStr = randomStrArr[parseInt(Math.random() * 3)];\n            }\n        }\n    });\n\n    vm.$watch('child.someStr', function() {\n        console.log(arguments);\n    });\n</script>\n\n</body>\n</html>"
        },
        {
          "name": "readme.html",
          "type": "blob",
          "size": 37.12109375,
          "content": "<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>body {\n  width: 45em;\n  border: 1px solid #ddd;\n  outline: 1300px solid #fff;\n  margin: 16px auto;\n}\n\nbody .markdown-body\n{\n  padding: 30px;\n}\n\n@font-face {\n  font-family: fontawesome-mini;\n  src: url(data:font/woff;charset=utf-8;base64,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) format('woff');\n}\n\n@font-face {\n  font-family: octicons-anchor;\n  src: url(data:font/woff;charset=utf-8;base64,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) format('woff');\n}\n\n.markdown-body {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  color: #333333;\n  overflow: hidden;\n  font-family: \"Helvetica Neue\", Helvetica, \"Segoe UI\", Arial, freesans, sans-serif;\n  font-size: 16px;\n  line-height: 1.6;\n  word-wrap: break-word;\n}\n\n.markdown-body a {\n  background: transparent;\n}\n\n.markdown-body a:active,\n.markdown-body a:hover {\n  outline: 0;\n}\n\n.markdown-body b,\n.markdown-body strong {\n  font-weight: bold;\n}\n\n.markdown-body mark {\n  background: #ff0;\n  color: #000;\n  font-style: italic;\n  font-weight: bold;\n}\n\n.markdown-body sub,\n.markdown-body sup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n.markdown-body sup {\n  top: -0.5em;\n}\n.markdown-body sub {\n  bottom: -0.25em;\n}\n\n.markdown-body h1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n.markdown-body img {\n  border: 0;\n}\n\n.markdown-body hr {\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  height: 0;\n}\n\n.markdown-body pre {\n  overflow: auto;\n}\n\n.markdown-body code,\n.markdown-body kbd,\n.markdown-body pre,\n.markdown-body samp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n.markdown-body input {\n  color: inherit;\n  font: inherit;\n  margin: 0;\n}\n\n.markdown-body html input[disabled] {\n  cursor: default;\n}\n\n.markdown-body input {\n  line-height: normal;\n}\n\n.markdown-body input[type=\"checkbox\"] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n.markdown-body table {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n.markdown-body td,\n.markdown-body th {\n  padding: 0;\n}\n\n.markdown-body .codehilitetable {\n  border: 0;\n  border-spacing: 0;\n}\n\n.markdown-body .codehilitetable tr {\n  border: 0;\n}\n\n.markdown-body .codehilitetable pre,\n.markdown-body .codehilitetable div.codehilite {\n  margin: 0;\n}\n\n.markdown-body .linenos,\n.markdown-body .code,\n.markdown-body .codehilitetable td {\n  border: 0;\n  padding: 0;\n}\n\n.markdown-body td:not(.linenos) .linenodiv {\n  padding: 0 !important;\n}\n\n.markdown-body .code {\n  width: 100%;\n}\n\n.markdown-body .linenos div pre,\n.markdown-body .linenodiv pre,\n.markdown-body .linenodiv {\n  border: 0;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n  -webkit-border-top-left-radius: 3px;\n  -webkit-border-bottom-left-radius: 3px;\n  -moz-border-radius-topleft: 3px;\n  -moz-border-radius-bottomleft: 3px;\n  border-top-left-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n\n.markdown-body .code div pre,\n.markdown-body .code div {\n  border: 0;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n  -webkit-border-top-right-radius: 3px;\n  -webkit-border-bottom-right-radius: 3px;\n  -moz-border-radius-topright: 3px;\n  -moz-border-radius-bottomright: 3px;\n  border-top-right-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n\n.markdown-body * {\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n.markdown-body input {\n  font: 13px Helvetica, arial, freesans, clean, sans-serif, \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  line-height: 1.4;\n}\n\n.markdown-body a {\n  color: #4183c4;\n  text-decoration: none;\n}\n\n.markdown-body a:hover,\n.markdown-body a:focus,\n.markdown-body a:active {\n  text-decoration: underline;\n}\n\n.markdown-body hr {\n  height: 0;\n  margin: 15px 0;\n  overflow: hidden;\n  background: transparent;\n  border: 0;\n  border-bottom: 1px solid #ddd;\n}\n\n.markdown-body hr:before,\n.markdown-body hr:after {\n  display: table;\n  content: \" \";\n}\n\n.markdown-body hr:after {\n  clear: both;\n}\n\n.markdown-body h1,\n.markdown-body h2,\n.markdown-body h3,\n.markdown-body h4,\n.markdown-body h5,\n.markdown-body h6 {\n  margin-top: 15px;\n  margin-bottom: 15px;\n  line-height: 1.1;\n}\n\n.markdown-body h1 {\n  font-size: 30px;\n}\n\n.markdown-body h2 {\n  font-size: 21px;\n}\n\n.markdown-body h3 {\n  font-size: 16px;\n}\n\n.markdown-body h4 {\n  font-size: 14px;\n}\n\n.markdown-body h5 {\n  font-size: 12px;\n}\n\n.markdown-body h6 {\n  font-size: 11px;\n}\n\n.markdown-body blockquote {\n  margin: 0;\n}\n\n.markdown-body ul,\n.markdown-body ol {\n  padding: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.markdown-body ol ol,\n.markdown-body ul ol {\n  list-style-type: lower-roman;\n}\n\n.markdown-body ul ul ol,\n.markdown-body ul ol ol,\n.markdown-body ol ul ol,\n.markdown-body ol ol ol {\n  list-style-type: lower-alpha;\n}\n\n.markdown-body dd {\n  margin-left: 0;\n}\n\n.markdown-body code,\n.markdown-body pre,\n.markdown-body samp {\n  font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  font-size: 12px;\n}\n\n.markdown-body pre {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.markdown-body kbd {\n  background-color: #e7e7e7;\n  background-image: -moz-linear-gradient(#fefefe, #e7e7e7);\n  background-image: -webkit-linear-gradient(#fefefe, #e7e7e7);\n  background-image: linear-gradient(#fefefe, #e7e7e7);\n  background-repeat: repeat-x;\n  border-radius: 2px;\n  border: 1px solid #cfcfcf;\n  color: #000;\n  padding: 3px 5px;\n  line-height: 10px;\n  font: 11px Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  display: inline-block;\n}\n\n.markdown-body>*:first-child {\n  margin-top: 0 !important;\n}\n\n.markdown-body>*:last-child {\n  margin-bottom: 0 !important;\n}\n\n.markdown-body .headeranchor-link {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n  padding-right: 6px;\n  padding-left: 30px;\n  margin-left: -30px;\n}\n\n.markdown-body .headeranchor-link:focus {\n  outline: none;\n}\n\n.markdown-body h1,\n.markdown-body h2,\n.markdown-body h3,\n.markdown-body h4,\n.markdown-body h5,\n.markdown-body h6 {\n  position: relative;\n  margin-top: 1em;\n  margin-bottom: 16px;\n  font-weight: bold;\n  line-height: 1.4;\n}\n\n.markdown-body h1 .headeranchor,\n.markdown-body h2 .headeranchor,\n.markdown-body h3 .headeranchor,\n.markdown-body h4 .headeranchor,\n.markdown-body h5 .headeranchor,\n.markdown-body h6 .headeranchor {\n  display: none;\n  color: #000;\n  vertical-align: middle;\n}\n\n.markdown-body h1:hover .headeranchor-link,\n.markdown-body h2:hover .headeranchor-link,\n.markdown-body h3:hover .headeranchor-link,\n.markdown-body h4:hover .headeranchor-link,\n.markdown-body h5:hover .headeranchor-link,\n.markdown-body h6:hover .headeranchor-link {\n  height: 1em;\n  padding-left: 8px;\n  margin-left: -30px;\n  line-height: 1;\n  text-decoration: none;\n}\n\n.markdown-body h1:hover .headeranchor-link .headeranchor,\n.markdown-body h2:hover .headeranchor-link .headeranchor,\n.markdown-body h3:hover .headeranchor-link .headeranchor,\n.markdown-body h4:hover .headeranchor-link .headeranchor,\n.markdown-body h5:hover .headeranchor-link .headeranchor,\n.markdown-body h6:hover .headeranchor-link .headeranchor {\n  display: inline-block;\n}\n\n.markdown-body h1 {\n  padding-bottom: 0.3em;\n  font-size: 2.25em;\n  line-height: 1.2;\n  border-bottom: 1px solid #eee;\n}\n\n.markdown-body h2 {\n  padding-bottom: 0.3em;\n  font-size: 1.75em;\n  line-height: 1.225;\n  border-bottom: 1px solid #eee;\n}\n\n.markdown-body h3 {\n  font-size: 1.5em;\n  line-height: 1.43;\n}\n\n.markdown-body h4 {\n  font-size: 1.25em;\n}\n\n.markdown-body h5 {\n  font-size: 1em;\n}\n\n.markdown-body h6 {\n  font-size: 1em;\n  color: #777;\n}\n\n.markdown-body p,\n.markdown-body blockquote,\n.markdown-body ul,\n.markdown-body ol,\n.markdown-body dl,\n.markdown-body table,\n.markdown-body pre,\n.markdown-body .admonition {\n  margin-top: 0;\n  margin-bottom: 16px;\n}\n\n.markdown-body hr {\n  height: 4px;\n  padding: 0;\n  margin: 16px 0;\n  background-color: #e7e7e7;\n  border: 0 none;\n}\n\n.markdown-body ul,\n.markdown-body ol {\n  padding-left: 2em;\n}\n\n.markdown-body ul ul,\n.markdown-body ul ol,\n.markdown-body ol ol,\n.markdown-body ol ul {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.markdown-body li>p {\n  margin-top: 16px;\n}\n\n.markdown-body dl {\n  padding: 0;\n}\n\n.markdown-body dl dt {\n  padding: 0;\n  margin-top: 16px;\n  font-size: 1em;\n  font-style: italic;\n  font-weight: bold;\n}\n\n.markdown-body dl dd {\n  padding: 0 16px;\n  margin-bottom: 16px;\n}\n\n.markdown-body blockquote {\n  padding: 0 15px;\n  color: #777;\n  border-left: 4px solid #ddd;\n}\n\n.markdown-body blockquote>:first-child {\n  margin-top: 0;\n}\n\n.markdown-body blockquote>:last-child {\n  margin-bottom: 0;\n}\n\n.markdown-body table {\n  display: block;\n  width: 100%;\n  overflow: auto;\n  word-break: normal;\n  word-break: keep-all;\n}\n\n.markdown-body table th {\n  font-weight: bold;\n}\n\n.markdown-body table th,\n.markdown-body table td {\n  padding: 6px 13px;\n  border: 1px solid #ddd;\n}\n\n.markdown-body table tr {\n  background-color: #fff;\n  border-top: 1px solid #ccc;\n}\n\n.markdown-body table tr:nth-child(2n) {\n  background-color: #f8f8f8;\n}\n\n.markdown-body img {\n  max-width: 100%;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n.markdown-body code,\n.markdown-body samp {\n  padding: 0;\n  padding-top: 0.2em;\n  padding-bottom: 0.2em;\n  margin: 0;\n  font-size: 85%;\n  background-color: rgba(0,0,0,0.04);\n  border-radius: 3px;\n}\n\n.markdown-body code:before,\n.markdown-body code:after {\n  letter-spacing: -0.2em;\n  content: \"\\00a0\";\n}\n\n.markdown-body pre>code {\n  padding: 0;\n  margin: 0;\n  font-size: 100%;\n  word-break: normal;\n  white-space: pre;\n  background: transparent;\n  border: 0;\n}\n\n.markdown-body .codehilite {\n  margin-bottom: 16px;\n}\n\n.markdown-body .codehilite pre,\n.markdown-body pre {\n  padding: 16px;\n  overflow: auto;\n  font-size: 85%;\n  line-height: 1.45;\n  background-color: #f7f7f7;\n  border-radius: 3px;\n}\n\n.markdown-body .codehilite pre {\n  margin-bottom: 0;\n  word-break: normal;\n}\n\n.markdown-body pre {\n  word-wrap: normal;\n}\n\n.markdown-body pre code {\n  display: inline;\n  max-width: initial;\n  padding: 0;\n  margin: 0;\n  overflow: initial;\n  line-height: inherit;\n  word-wrap: normal;\n  background-color: transparent;\n  border: 0;\n}\n\n.markdown-body pre code:before,\n.markdown-body pre code:after {\n  content: normal;\n}\n\n/* Admonition */\n.markdown-body .admonition {\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  position: relative;\n  border-radius: 3px;\n  border: 1px solid #e0e0e0;\n  border-left: 6px solid #333;\n  padding: 10px 10px 10px 30px;\n}\n\n.markdown-body .admonition table {\n  color: #333;\n}\n\n.markdown-body .admonition p {\n  padding: 0;\n}\n\n.markdown-body .admonition-title {\n  font-weight: bold;\n  margin: 0;\n}\n\n.markdown-body .admonition>.admonition-title {\n  color: #333;\n}\n\n.markdown-body .attention>.admonition-title {\n  color: #a6d796;\n}\n\n.markdown-body .caution>.admonition-title {\n  color: #d7a796;\n}\n\n.markdown-body .hint>.admonition-title {\n  color: #96c6d7;\n}\n\n.markdown-body .danger>.admonition-title {\n  color: #c25f77;\n}\n\n.markdown-body .question>.admonition-title {\n  color: #96a6d7;\n}\n\n.markdown-body .note>.admonition-title {\n  color: #d7c896;\n}\n\n.markdown-body .admonition:before,\n.markdown-body .attention:before,\n.markdown-body .caution:before,\n.markdown-body .hint:before,\n.markdown-body .danger:before,\n.markdown-body .question:before,\n.markdown-body .note:before {\n  font: normal normal 16px fontawesome-mini;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  line-height: 1.5;\n  color: #333;\n  position: absolute;\n  left: 0;\n  top: 0;\n  padding-top: 10px;\n  padding-left: 10px;\n}\n\n.markdown-body .admonition:before {\n  content: \"\\f056\\00a0\";\n  color: 333;\n}\n\n.markdown-body .attention:before {\n  content: \"\\f058\\00a0\";\n  color: #a6d796;\n}\n\n.markdown-body .caution:before {\n  content: \"\\f06a\\00a0\";\n  color: #d7a796;\n}\n\n.markdown-body .hint:before {\n  content: \"\\f05a\\00a0\";\n  color: #96c6d7;\n}\n\n.markdown-body .danger:before {\n  content: \"\\f057\\00a0\";\n  color: #c25f77;\n}\n\n.markdown-body .question:before {\n  content: \"\\f059\\00a0\";\n  color: #96a6d7;\n}\n\n.markdown-body .note:before {\n  content: \"\\f040\\00a0\";\n  color: #d7c896;\n}\n\n.markdown-body .admonition::after {\n  content: normal;\n}\n\n.markdown-body .attention {\n  border-left: 6px solid #a6d796;\n}\n\n.markdown-body .caution {\n  border-left: 6px solid #d7a796;\n}\n\n.markdown-body .hint {\n  border-left: 6px solid #96c6d7;\n}\n\n.markdown-body .danger {\n  border-left: 6px solid #c25f77;\n}\n\n.markdown-body .question {\n  border-left: 6px solid #96a6d7;\n}\n\n.markdown-body .note {\n  border-left: 6px solid #d7c896;\n}\n\n.markdown-body .admonition>*:first-child {\n  margin-top: 0 !important;\n}\n\n.markdown-body .admonition>*:last-child {\n  margin-bottom: 0 !important;\n}\n\n/* progress bar*/\n.markdown-body .progress {\n  display: block;\n  width: 300px;\n  margin: 10px 0;\n  height: 24px;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n  background-color: #ededed;\n  position: relative;\n  box-shadow: inset -1px 1px 3px rgba(0, 0, 0, .1);\n}\n\n.markdown-body .progress-label {\n  position: absolute;\n  text-align: center;\n  font-weight: bold;\n  width: 100%; margin: 0;\n  line-height: 24px;\n  color: #333;\n  text-shadow: 1px 1px 0 #fefefe, -1px -1px 0 #fefefe, -1px 1px 0 #fefefe, 1px -1px 0 #fefefe, 0 1px 0 #fefefe, 0 -1px 0 #fefefe, 1px 0 0 #fefefe, -1px 0 0 #fefefe, 1px 1px 2px #000;\n  -webkit-font-smoothing: antialiased !important;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.markdown-body .progress-bar {\n  height: 24px;\n  float: left;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n  background-color: #96c6d7;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, .5), inset 0 -1px 0 rgba(0, 0, 0, .1);\n  background-size: 30px 30px;\n  background-image: -webkit-linear-gradient(\n    135deg, rgba(255, 255, 255, .4) 27%,\n    transparent 27%,\n    transparent 52%, rgba(255, 255, 255, .4) 52%,\n    rgba(255, 255, 255, .4) 77%,\n    transparent 77%, transparent\n  );\n  background-image: -moz-linear-gradient(\n    135deg,\n    rgba(255, 255, 255, .4) 27%, transparent 27%,\n    transparent 52%, rgba(255, 255, 255, .4) 52%,\n    rgba(255, 255, 255, .4) 77%, transparent 77%,\n    transparent\n  );\n  background-image: -ms-linear-gradient(\n    135deg,\n    rgba(255, 255, 255, .4) 27%, transparent 27%,\n    transparent 52%, rgba(255, 255, 255, .4) 52%,\n    rgba(255, 255, 255, .4) 77%, transparent 77%,\n    transparent\n  );\n  background-image: -o-linear-gradient(\n    135deg,\n    rgba(255, 255, 255, .4) 27%, transparent 27%,\n    transparent 52%, rgba(255, 255, 255, .4) 52%,\n    rgba(255, 255, 255, .4) 77%, transparent 77%,\n    transparent\n  );\n  background-image: linear-gradient(\n    135deg,\n    rgba(255, 255, 255, .4) 27%, transparent 27%,\n    transparent 52%, rgba(255, 255, 255, .4) 52%,\n    rgba(255, 255, 255, .4) 77%, transparent 77%,\n    transparent\n  );\n}\n\n.markdown-body .progress-100plus .progress-bar {\n  background-color: #a6d796;\n}\n\n.markdown-body .progress-80plus .progress-bar {\n  background-color: #c6d796;\n}\n\n.markdown-body .progress-60plus .progress-bar {\n  background-color: #d7c896;\n}\n\n.markdown-body .progress-40plus .progress-bar {\n  background-color: #d7a796;\n}\n\n.markdown-body .progress-20plus .progress-bar {\n  background-color: #d796a6;\n}\n\n.markdown-body .progress-0plus .progress-bar {\n  background-color: #c25f77;\n}\n\n.markdown-body .candystripe-animate .progress-bar{\n  -webkit-animation: animate-stripes 3s linear infinite;\n  -moz-animation: animate-stripes 3s linear infinite;\n  animation: animate-stripes 3s linear infinite;\n}\n\n@-webkit-keyframes animate-stripes {\n  0% {\n    background-position: 0 0;\n  }\n\n  100% {\n    background-position: 60px 0;\n  }\n}\n\n@-moz-keyframes animate-stripes {\n  0% {\n    background-position: 0 0;\n  }\n\n  100% {\n    background-position: 60px 0;\n  }\n}\n\n@keyframes animate-stripes {\n  0% {\n    background-position: 0 0;\n  }\n\n  100% {\n    background-position: 60px 0;\n  }\n}\n\n.markdown-body .gloss .progress-bar {\n  box-shadow:\n    inset 0 4px 12px rgba(255, 255, 255, .7),\n    inset 0 -12px 0 rgba(0, 0, 0, .05);\n}\n\n/* Multimarkdown Critic Blocks */\n.markdown-body .critic_mark {\n  background: #ff0;\n}\n\n.markdown-body .critic_delete {\n  color: #c82829;\n  text-decoration: line-through;\n}\n\n.markdown-body .critic_insert {\n  color: #718c00 ;\n  text-decoration: underline;\n}\n\n.markdown-body .critic_comment {\n  color: #8e908c;\n  font-style: italic;\n}\n\n.markdown-body .headeranchor {\n  font: normal normal 16px octicons-anchor;\n  line-height: 1;\n  display: inline-block;\n  text-decoration: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.headeranchor:before {\n  content: '\\f05c';\n}\n\n.markdown-body .task-list-item {\n  list-style-type: none;\n}\n\n.markdown-body .task-list-item+.task-list-item {\n  margin-top: 3px;\n}\n\n.markdown-body .task-list-item input {\n  margin: 0 4px 0.25em -20px;\n  vertical-align: middle;\n}\n\n/* Media */\n@media only screen and (min-width: 480px) {\n  .markdown-body {\n    font-size:14px;\n  }\n}\n\n@media only screen and (min-width: 768px) {\n  .markdown-body {\n    font-size:16px;\n  }\n}\n\n@media print {\n  .markdown-body * {\n    background: transparent !important;\n    color: black !important;\n    filter:none !important;\n    -ms-filter: none !important;\n  }\n\n  .markdown-body {\n    font-size:12pt;\n    max-width:100%;\n    outline:none;\n    border: 0;\n  }\n\n  .markdown-body a,\n  .markdown-body a:visited {\n    text-decoration: underline;\n  }\n\n  .markdown-body .headeranchor-link {\n    display: none;\n  }\n\n  .markdown-body a[href]:after {\n    content: \" (\" attr(href) \")\";\n  }\n\n  .markdown-body abbr[title]:after {\n    content: \" (\" attr(title) \")\";\n  }\n\n  .markdown-body .ir a:after,\n  .markdown-body a[href^=\"javascript:\"]:after,\n  .markdown-body a[href^=\"#\"]:after {\n    content: \"\";\n  }\n\n  .markdown-body pre {\n    white-space: pre;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n  }\n\n  .markdown-body pre,\n  .markdown-body blockquote {\n    border: 1px solid #999;\n    padding-right: 1em;\n    page-break-inside: avoid;\n  }\n\n  .markdown-body .progress,\n  .markdown-body .progress-bar {\n    -moz-box-shadow: none;\n    -webkit-box-shadow: none;\n    box-shadow: none;\n  }\n\n  .markdown-body .progress {\n    border: 1px solid #ddd;\n  }\n\n  .markdown-body .progress-bar {\n    height: 22px;\n    border-right: 1px solid #ddd;\n  }\n\n  .markdown-body tr,\n  .markdown-body img {\n    page-break-inside: avoid;\n  }\n\n  .markdown-body img {\n    max-width: 100% !important;\n  }\n\n  .markdown-body p,\n  .markdown-body h2,\n  .markdown-body h3 {\n    orphans: 3;\n    widows: 3;\n  }\n\n  .markdown-body h2,\n  .markdown-body h3 {\n    page-break-after: avoid;\n  }\n}\n</style><title>readme</title></head><body><article class=\"markdown-body\"><h2 id=\"vue-mvvm\"><a name=\"user-content-vue-mvvm\" href=\"#vue-mvvm\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>剖析Vue实现原理 - 如何实现双向绑定mvvm</h2>\n<blockquote>\n<p>本文能帮你做什么？<br />\n1、了解vue的双向数据绑定原理以及核心代码模块<br />\n2、缓解好奇心的同时了解如何实现双向绑定<br />\n为了便于说明原理与实现，本文相关代码主要摘自<a href=\"https://github.com/vuejs/vue\">vue源码</a>, 并进行了简化改造，相对较简陋，并未考虑到数组的处理、数据的循环依赖等，也难免存在一些问题，欢迎大家指正。不过这些并不会影响大家的阅读和理解，相信看完本文后对大家在阅读vue源码的时候会更有帮助<br />\n本文所有相关代码均在github上面可找到 <a href=\"https://github.com/DMQ/mvvm\"><a href=\"https://github.com/DMQ/mvvm\"><a href=\"https://github.com/DMQ/mvvm\">https://github.com/DMQ/mvvm</a></a></a></p>\n</blockquote>\n<h5 id=\"mvvmvue\"><a name=\"user-content-mvvmvue\" href=\"#mvvmvue\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>相信大家对mvvm双向绑定应该都不陌生了，一言不合上代码（可怜的代码），下面先看一个本文最终实现的效果吧，和vue一样的语法，如果还不了解双向绑定，猛戳<a href=\"\">这里</a></h5>\n<pre><code>&lt;div id=&quot;mvvm-app&quot;&gt;\n    &lt;input type=&quot;text&quot; v-model=&quot;word&quot;&gt;\n    &lt;p&gt;{{word}}&lt;/p&gt;\n    &lt;button v-on:click=&quot;sayHi&quot;&gt;change model&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;script src=&quot;./js/observer.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;./js/watcher.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;./js/compile.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;./js/mvvm.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n    var vm = new MVVM({\n        el: '#mvvm-app',\n        data: {\n            word: 'Hello World!'\n        },\n        methods: {\n            sayHi: function() {\n                this.word = 'Hi, everybody!';\n            }\n        }\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>效果：<br />\n<img alt=\"img1\" src=\"///F://git/mvvm/img/1.gif\" /></p>\n<h3 id=\"_1\"><a name=\"user-content-_1\" href=\"#_1\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>几种实现双向绑定的做法</h3>\n<p>目前几种主流的mvc(vm)框架都实现了单向数据绑定，而我所理解的双向数据绑定无非就是在单向绑定的基础上给可输入元素（input、textare等）添加了change(input)事件，来动态修改model和 view，并没有多高深。所以无需太过介怀是实现的单向或双向绑定。</p>\n<p>实现数据绑定的做法有大致如下几种：</p>\n<blockquote>\n<p>发布者-订阅者模式（backbone.js）</p>\n<p>脏值检查（angular.js） </p>\n<p>数据劫持（vue.js） </p>\n</blockquote>\n<p><strong>发布者-订阅者模式:</strong> 一般通过sub, pub的方式实现数据和视图的绑定监听，更新数据方式通常做法是 <code>vm.set('property', value)</code>，这里有篇文章讲的比较详细，有兴趣可点<a href=\"http://www.html-js.com/article/Study-of-twoway-data-binding-JavaScript-talk-about-JavaScript-every-day\">这里</a></p>\n<p>这种方式现在毕竟太low了，我们更希望通过 <code>vm.property = value</code>这种方式更新数据，同时自动更新视图，于是有了下面两种方式</p>\n<p><strong>脏值检查:</strong> angular.js 是通过脏值检测的方式比对数据是否有变更，来决定是否更新视图，最简单的方式就是通过 <code>setInterval()</code> 定时轮询检测数据变动，当然Google不会这么low，angular只有在指定的事件触发时进入脏值检测，大致如下：</p>\n<ul>\n<li>DOM事件，譬如用户输入文本，点击按钮等。( ng-click ) </li>\n<li>XHR响应事件 ( $http ) </li>\n<li>浏览器Location变更事件 ( $location ) </li>\n<li>Timer事件( $timeout , $interval ) </li>\n<li>执行 $digest() 或 $apply()</li>\n</ul>\n<p><strong>数据劫持:</strong> vue.js 则是采用数据劫持结合发布者-订阅者模式的方式，通过<code>Object.defineProperty()</code>来劫持各个属性的<code>setter</code>，<code>getter</code>，在数据变动时发布消息给订阅者，触发相应的监听回调。</p>\n<h3 id=\"_2\"><a name=\"user-content-_2\" href=\"#_2\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>思路整理</h3>\n<p>已经了解到vue是通过数据劫持的方式来做数据绑定的，其中最核心的方法便是通过<code>Object.defineProperty()</code>来实现对属性的劫持，达到监听数据变动的目的，无疑这个方法是本文中最重要、最基础的内容之一，如果不熟悉defineProperty，猛戳<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">这里</a><br />\n整理了一下，要实现mvvm的双向绑定，就必须要实现以下几点：<br />\n1、实现一个数据监听器Observer，能够对数据对象的所有属性进行监听，如有变动可拿到最新值并通知订阅者<br />\n2、实现一个指令解析器Compile，对每个元素节点的指令进行扫描和解析，根据指令替换数据，以及绑定相应的更新函数<br />\n3、实现一个Watcher，作为连接Observer和Compile的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数，从而更新视图<br />\n4、mvvm入口函数，整合以上三者</p>\n<p>上述流程如图所示：<br />\n<img alt=\"img2\" src=\"///F://git/mvvm/img/2.png\" /></p>\n<h3 id=\"1observer\"><a name=\"user-content-1observer\" href=\"#1observer\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>1、实现Observer</h3>\n<p>ok, 思路已经整理完毕，也已经比较明确相关逻辑和模块功能了，let&rsquo;s do it<br />\n我们知道可以利用<code>Obeject.defineProperty()</code>来监听属性变动<br />\n那么将需要observe的数据对象进行递归遍历，包括子属性的属性，都加上    <code>set</code>和<code>get</code><br />\n这样的话，给这个对象的某个值赋值，就会触发<code>set</code>，那么就能监听到了数据变化。。相关代码可以是这样：<br />\n<pre><code>var data = {name: 'kindeng'};\nobserve(data);\ndata.name = 'dmq'; // 哈哈哈，监听到值变化了 kindeng --&gt; dmq\n\nfunction observe(data) {\n    if (!data || typeof data !== 'object') {\n        return;\n    }\n    Object.keys(data).forEach(function(key) {\n        defineReactive(data, key, data[key]);\n    });\n};\n\nfunction defineReactive(data, key, val) {\n    observe(val); // 监听子属性\n    Object.defineProperty(data, key, {\n        enumerable: true, // 可枚举\n        configurable: false, // 不能再define\n        get: function() {\n            return val;\n        },\n        set: function(newVal) {\n            console.log('哈哈哈，监听到值变化了 ', val, ' --&gt; ', newVal);\n            val = newVal;\n        }\n    });\n}\n\n</code></pre><br />\n这样我们已经可以监听每个数据的变化了，那么监听到变化之后就是怎么通知订阅者了，所以接下来我们需要实现一个消息订阅器，很简单，维护一个数组，用来收集订阅者，数据变动触发notify，再调用订阅者的update方法，代码改一下之后是这样：<br />\n<pre><code>// ... 省略\nfunction defineReactive(data, key, val) {\n    var dep = new Dep();\n    observe(val); // 监听子属性\n\n    Object.defineProperty(data, key, {\n        // ... 省略\n        set: function(newVal) {\n            if (val === newVal) return;\n            console.log('哈哈哈，监听到值变化了 ', val, ' --&gt; ', newVal);\n            val = newVal;\n            dep.notify(); // 通知所有订阅者\n        }\n    });\n}\n\nfunction Dep() {\n    this.subs = [];\n}\nDep.prototype = {\n    addSub: function(sub) {\n        this.subs.push(sub);\n    },\n    notify: function() {\n        this.subs.forEach(function(sub) {\n            sub.update();\n        });\n    }\n};\n</code></pre><br />\n那么问题来了，谁是订阅者？没错，上面的思路整理中我们已经知道订阅者应该是Watcher, 而且<code>var dep = new Dep();</code>是在 defineReactive 方法内部定义的，所以想通过dep添加订阅者，就必须要在闭包内操作，所以我们可以在 <code>get</code>里面动手脚，<br />\n<pre><code>// Observer.js\n// ...省略\nObject.defineProperty(data, key, {\n    get: function() {\n    // dep.addDep(watcher); \n    // 由于需要在闭包内添加watcher，所以可以在Dep定义一个全局target属性，暂存watcher, 添加完移除\n    Dep.target &amp;&amp; dep.addDep(Dep.target);\n    return val\n}\n    // ... 省略\n});\n\n\n// Wacher.js\n// ...省略\nget: function(key) {\n    Dep.target = this;\n    this.value = data.key;\n\n}\n\n</code></pre><br />\n先记住这个思路，Dep.target在什么时候赋值对应的watcher后面会讲到</p>\n<p>这里已经实现了一个Observer了，已经具备了应有的功能，vue源码在<a href=\"https://github.com/vuejs/vue/blob/dev/src/observer/index.js\">这里</a>。那么接下来就是实现Compile了</p>\n<h3 id=\"2watcher\"><a name=\"user-content-2watcher\" href=\"#2watcher\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>2、实现Watcher</h3>\n<p>从前面知道，<code>var dep = new Dep();</code>是在 defineReactive 方法内部定义的，所以想通过dep添加订阅者，就必须要在闭包内操作，所以我们可以在  <code>get</code>里面动手脚<br />\n<pre><code>// ... 省略\nvar dep = new Dep();\nObject.defineProperty(data, key, {\n    enumerable: true, // 可枚举\n    configurable: false, // 不能再define\n    get: function() {\n        dep.add\n        return val;\n    },\n    set: function(newVal) {\n        if (val === newVal) return;\n        console.log('哈哈哈，监听到值变化了 ', val, ' --&gt; ', newVal);\n        val = newVal;\n        dep.notify(); // 通知所有订阅者\n    }\n});\n\n</code></pre></p>\n<h4 id=\"4vue-github\"><a name=\"user-content-4vue-github\" href=\"#4vue-github\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>4、Vue的生命周期 (<a href=\"https://github.com/vuejs/vue/\">Github</a>)</h4>\n<p><img src=\"https://vuejs.org.cn/images/lifecycle.png\" width=\"640px\"></p>\n<h4 id=\"5\"><a name=\"user-content-5\" href=\"#5\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>5、我们要实现的关键点：</h4>\n<ul>\n<li>数据监听 Observer.js 和消息订阅器 Dep.js</li>\n<li>订阅者 Watcher.js</li>\n<li>指令编译器 Compile.js</li>\n<li>入口 mvvm</li>\n</ul>\n<h4 id=\"6objectdefineproperty\"><a name=\"user-content-6objectdefineproperty\" href=\"#6objectdefineproperty\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>6、一切基于此Object.defineProperty()</h4>\n<p><em>IE8+</em></p>\n<p><strong>code:</strong><br />\n<pre><code>function defineReative(data) {\n    var val;\n    Object.defineProperty(data, 'name', {\n        enumerable: true,   // 可枚举\n        configurable: true, // 不能再define\n        get: function() {\n            return val;\n        },\n        set: function(newVal) {\n            console.log('你变了：', val, ' ==&gt; ', newVal);\n            val = newVal;\n        }\n    });\n}\n\nvar data = {};\ndefineReative(data);\n</code></pre></p>\n<h4 id=\"7observerjs\"><a name=\"user-content-7observerjs\" href=\"#7observerjs\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>7、实现Observer.js</h4>\n<p>负责监听源数据所有属性，一旦发生变化，通知订阅者更新视图</p>\n<p><a href=\"///F://git/mvvm/js/observer.js\">code</a></p>\n<h4 id=\"8compilejs\"><a name=\"user-content-8compilejs\" href=\"#8compilejs\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>8、实现Compile.js</h4>\n<p>负责解析模板指令，不同的指令绑定不同的处理回调及视图更新方法</p>\n<p><a href=\"///F://git/mvvm/js/compile.js\">code</a></p>\n<h4 id=\"9observe-compile-watcherjs\"><a name=\"user-content-9observe-compile-watcherjs\" href=\"#9observe-compile-watcherjs\" class=\"headeranchor-link\" aria-hidden=\"true\"><span class=\"headeranchor\"></span></a>9、如何连接observe 和 compile &ndash;&gt; watcher.js（桥梁）</h4>\n<p>充当数据更新的订阅者，每一个属性的变化都会通知它，在compile阶段实例化并注入回调函数</p>\n<p>每一个属性都有一个watcher</p>\n<p><a href=\"///F://git/mvvm/js/watcher.js\">code</a></p></article></body></html>"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 18.181640625,
          "content": "## 剖析Vue实现原理 - 如何实现双向绑定mvvm\n\nUpdate: [Vue3.0响应式原理精简代码](https://github.com/DMQ/mvvm/blob/vue3/reactivity/index.html)\n\n> 本文能帮你做什么？<br>\n> 1、了解vue的双向数据绑定原理以及核心代码模块<br>\n> 2、缓解好奇心的同时了解如何实现双向绑定<br>\n> 为了便于说明原理与实现，本文相关代码主要摘自[vue源码](https://github.com/vuejs/vue), 并进行了简化改造，相对较简陋，并未考虑到数组的处理、数据的循环依赖等，也难免存在一些问题，欢迎大家指正。不过这些并不会影响大家的阅读和理解，相信看完本文后对大家在阅读vue源码的时候会更有帮助<br>\n> 本文所有相关代码均在github上面可找到 [https://github.com/DMQ/mvvm](https://github.com/DMQ/mvvm)\n\n##### 相信大家对mvvm双向绑定应该都不陌生了，一言不合上代码，下面先看一个本文最终实现的效果吧，和vue一样的语法，如果还不了解双向绑定，猛戳[Google](https://www.google.com.hk/search?q=%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A)\n\n```html\n<div id=\"mvvm-app\">\n    <input type=\"text\" v-model=\"word\">\n    <p>{{word}}</p>\n    <button v-on:click=\"sayHi\">change model</button>\n</div>\n\n<script src=\"./js/observer.js\"></script>\n<script src=\"./js/watcher.js\"></script>\n<script src=\"./js/compile.js\"></script>\n<script src=\"./js/mvvm.js\"></script>\n<script>\nvar vm = new MVVM({\n    el: '#mvvm-app',\n        data: {\n            word: 'Hello World!'\n        },\n        methods: {\n            sayHi: function() {\n                this.word = 'Hi, everybody!';\n            }\n        }\n    });\n</script>\n```\n\n效果：\n![img1][img1]\n\n\n### 几种实现双向绑定的做法\n目前几种主流的mvc(vm)框架都实现了单向数据绑定，而我所理解的双向数据绑定无非就是在单向绑定的基础上给可输入元素（input、textarea等）添加了change(input)事件，来动态修改model和 view，并没有多高深。所以无需太过介怀是实现的单向或双向绑定。\n\n实现数据绑定的做法有大致如下几种：\n\n> 发布者-订阅者模式（backbone.js）\n\n> 脏值检查（angular.js） <br>\n\n> 数据劫持（vue.js）\n\n**发布者-订阅者模式:** 一般通过sub, pub的方式实现数据和视图的绑定监听，更新数据方式通常做法是 `vm.set('property', value)`，这里有篇文章讲的比较详细，有兴趣可点[这里](http://www.html-js.com/article/Study-of-twoway-data-binding-JavaScript-talk-about-JavaScript-every-day)\n\n这种方式现在毕竟太low了，我们更希望通过 `vm.property = value `这种方式更新数据，同时自动更新视图，于是有了下面两种方式\n\n**脏值检查:** angular.js 是通过脏值检测的方式比对数据是否有变更，来决定是否更新视图，最简单的方式就是通过 `setInterval()` 定时轮询检测数据变动，当然Google不会这么low，angular只有在指定的事件触发时进入脏值检测，大致如下：\n\n- DOM事件，譬如用户输入文本，点击按钮等。( ng-click )\n- XHR响应事件 ( $http )\n- 浏览器Location变更事件 ( $location )\n- Timer事件( $timeout , $interval )\n- 执行 $digest() 或 $apply()\n\n**数据劫持:** vue.js 则是采用数据劫持结合发布者-订阅者模式的方式，通过`Object.defineProperty()`来劫持各个属性的`setter`，`getter`，在数据变动时发布消息给订阅者，触发相应的监听回调。\n\n\n### 思路整理\n已经了解到vue是通过数据劫持的方式来做数据绑定的，其中最核心的方法便是通过`Object.defineProperty()`来实现对属性的劫持，达到监听数据变动的目的，无疑这个方法是本文中最重要、最基础的内容之一，如果不熟悉defineProperty，猛戳[这里](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty)\n整理了一下，要实现mvvm的双向绑定，就必须要实现以下几点：\n1、实现一个数据监听器Observer，能够对数据对象的所有属性进行监听，如有变动可拿到最新值并通知订阅者\n2、实现一个指令解析器Compile，对每个元素节点的指令进行扫描和解析，根据指令模板替换数据，以及绑定相应的更新函数\n3、实现一个Watcher，作为连接Observer和Compile的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数，从而更新视图\n4、mvvm入口函数，整合以上三者\n\n上述流程如图所示：\n![img2][img2]\n\n### 1、实现Observer\nok, 思路已经整理完毕，也已经比较明确相关逻辑和模块功能了，let's do it\n我们知道可以利用`Obeject.defineProperty()`来监听属性变动\n那么将需要observe的数据对象进行递归遍历，包括子属性对象的属性，都加上\t`setter`和`getter`\n这样的话，给这个对象的某个值赋值，就会触发`setter`，那么就能监听到了数据变化。。相关代码可以是这样：\n```javascript\nvar data = {name: 'kindeng'};\nobserve(data);\ndata.name = 'dmq'; // 哈哈哈，监听到值变化了 kindeng --> dmq\n\nfunction observe(data) {\n    if (!data || typeof data !== 'object') {\n        return;\n    }\n    // 取出所有属性遍历\n    Object.keys(data).forEach(function(key) {\n\t    defineReactive(data, key, data[key]);\n\t});\n};\n\nfunction defineReactive(data, key, val) {\n    observe(val); // 监听子属性\n    Object.defineProperty(data, key, {\n        enumerable: true, // 可枚举\n        configurable: false, // 不能再define\n        get: function() {\n            return val;\n        },\n        set: function(newVal) {\n            console.log('哈哈哈，监听到值变化了 ', val, ' --> ', newVal);\n            val = newVal;\n        }\n    });\n}\n\n```\n这样我们已经可以监听每个数据的变化了，那么监听到变化之后就是怎么通知订阅者了，所以接下来我们需要实现一个消息订阅器，很简单，维护一个数组，用来收集订阅者，数据变动触发notify，再调用订阅者的update方法，代码改善之后是这样：\n```javascript\n// ... 省略\nfunction defineReactive(data, key, val) {\n\tvar dep = new Dep();\n    observe(val); // 监听子属性\n\n    Object.defineProperty(data, key, {\n        // ... 省略\n        set: function(newVal) {\n        \tif (val === newVal) return;\n            console.log('哈哈哈，监听到值变化了 ', val, ' --> ', newVal);\n            val = newVal;\n            dep.notify(); // 通知所有订阅者\n        }\n    });\n}\n\nfunction Dep() {\n    this.subs = [];\n}\nDep.prototype = {\n    addSub: function(sub) {\n        this.subs.push(sub);\n    },\n    notify: function() {\n        this.subs.forEach(function(sub) {\n            sub.update();\n        });\n    }\n};\n```\n那么问题来了，谁是订阅者？怎么往订阅器添加订阅者？\n没错，上面的思路整理中我们已经明确订阅者应该是Watcher, 而且`var dep = new Dep();`是在 `defineReactive`方法内部定义的，所以想通过`dep`添加订阅者，就必须要在闭包内操作，所以我们可以在\t`getter`里面动手脚：\n```javascript\n// Observer.js\n// ...省略\nObject.defineProperty(data, key, {\n\tget: function() {\n\t\t// 由于需要在闭包内添加watcher，所以通过Dep定义一个全局target属性，暂存watcher, 添加完移除\n\t\tDep.target && dep.addDep(Dep.target);\n\t\treturn val;\n\t}\n    // ... 省略\n});\n\n// Watcher.js\nWatcher.prototype = {\n\tget: function(key) {\n\t\tDep.target = this;\n\t\tthis.value = data[key];\t// 这里会触发属性的getter，从而添加订阅者\n\t\tDep.target = null;\n\t}\n}\n```\n这里已经实现了一个Observer了，已经具备了监听数据和数据变化通知订阅者的功能，[完整代码](https://github.com/DMQ/mvvm/blob/master/js/observer.js)。那么接下来就是实现Compile了\n\n### 2、实现Compile\ncompile主要做的事情是解析模板指令，将模板中的变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据有变动，收到通知，更新视图，如图所示：\n![img3][img3]\n\n因为遍历解析的过程有多次操作dom节点，为提高性能和效率，会先将vue实例根节点的`el`转换成文档碎片`fragment`进行解析编译操作，解析完成，再将`fragment`添加回原来的真实dom节点中\n```javascript\nfunction Compile(el) {\n    this.$el = this.isElementNode(el) ? el : document.querySelector(el);\n    if (this.$el) {\n        this.$fragment = this.node2Fragment(this.$el);\n        this.init();\n        this.$el.appendChild(this.$fragment);\n    }\n}\nCompile.prototype = {\n\tinit: function() { this.compileElement(this.$fragment); },\n    node2Fragment: function(el) {\n        var fragment = document.createDocumentFragment(), child;\n        // 将原生节点拷贝到fragment\n        while (child = el.firstChild) {\n            fragment.appendChild(child);\n        }\n        return fragment;\n    }\n};\n```\n\ncompileElement方法将遍历所有节点及其子节点，进行扫描解析编译，调用对应的指令渲染函数进行数据渲染，并调用对应的指令更新函数进行绑定，详看代码及注释说明：\n\n```javascript\nCompile.prototype = {\n\t// ... 省略\n\tcompileElement: function(el) {\n        var childNodes = el.childNodes, me = this;\n        [].slice.call(childNodes).forEach(function(node) {\n            var text = node.textContent;\n            var reg = /\\{\\{(.*)\\}\\}/;\t// 表达式文本\n            // 按元素节点方式编译\n            if (me.isElementNode(node)) {\n                me.compile(node);\n            } else if (me.isTextNode(node) && reg.test(text)) {\n                me.compileText(node, RegExp.$1);\n            }\n            // 遍历编译子节点\n            if (node.childNodes && node.childNodes.length) {\n                me.compileElement(node);\n            }\n        });\n    },\n\n    compile: function(node) {\n        var nodeAttrs = node.attributes, me = this;\n        [].slice.call(nodeAttrs).forEach(function(attr) {\n            // 规定：指令以 v-xxx 命名\n            // 如 <span v-text=\"content\"></span> 中指令为 v-text\n            var attrName = attr.name;\t// v-text\n            if (me.isDirective(attrName)) {\n                var exp = attr.value; // content\n                var dir = attrName.substring(2);\t// text\n                if (me.isEventDirective(dir)) {\n                \t// 事件指令, 如 v-on:click\n                    compileUtil.eventHandler(node, me.$vm, exp, dir);\n                } else {\n                \t// 普通指令\n                    compileUtil[dir] && compileUtil[dir](node, me.$vm, exp);\n                }\n            }\n        });\n    }\n};\n\n// 指令处理集合\nvar compileUtil = {\n    text: function(node, vm, exp) {\n        this.bind(node, vm, exp, 'text');\n    },\n    // ...省略\n    bind: function(node, vm, exp, dir) {\n        var updaterFn = updater[dir + 'Updater'];\n        // 第一次初始化视图\n        updaterFn && updaterFn(node, vm[exp]);\n        // 实例化订阅者，此操作会在对应的属性消息订阅器中添加了该订阅者watcher\n        new Watcher(vm, exp, function(value, oldValue) {\n        \t// 一旦属性值有变化，会收到通知执行此更新函数，更新视图\n            updaterFn && updaterFn(node, value, oldValue);\n        });\n    }\n};\n\n// 更新函数\nvar updater = {\n    textUpdater: function(node, value) {\n        node.textContent = typeof value == 'undefined' ? '' : value;\n    }\n    // ...省略\n};\n```\n这里通过递归遍历保证了每个节点及子节点都会解析编译到，包括了{{}}表达式声明的文本节点。指令的声明规定是通过特定前缀的节点属性来标记，如`<span v-text=\"content\" other-attr`中`v-text`便是指令，而`other-attr`不是指令，只是普通的属性。\n监听数据、绑定更新函数的处理是在`compileUtil.bind()`这个方法中，通过`new Watcher()`添加回调来接收数据变化的通知\n\n至此，一个简单的Compile就完成了，[完整代码](https://github.com/DMQ/mvvm/blob/master/js/compile.js)。接下来要看看Watcher这个订阅者的具体实现了\n\n### 3、实现Watcher\nWatcher订阅者作为Observer和Compile之间通信的桥梁，主要做的事情是:\n1、在自身实例化时往属性订阅器(dep)里面添加自己\n2、自身必须有一个update()方法\n3、待属性变动dep.notice()通知时，能调用自身的update()方法，并触发Compile中绑定的回调，则功成身退。\n如果有点乱，可以回顾下前面的[思路整理](#_2)\n```javascript\nfunction Watcher(vm, exp, cb) {\n    this.cb = cb;\n    this.vm = vm;\n    this.expOrFn = expOrFn;\n    this.depIds = {};\n\n    // 取值兼容函数和表达式\n    if (typeof expOrFn === 'function') {\n        this.getter = expOrFn;\n    } else {\n        this.getter = this.parseGetter(expOrFn.trim());\n    }\n\n    // 此处为了触发属性的getter，从而在dep添加自己，结合Observer更易理解\n    this.value = this.get();\n}\nWatcher.prototype = {\n    update: function() {\n        this.run();\t// 属性值变化收到通知\n    },\n    run: function() {\n        var value = this.get(); // 取到最新值\n        var oldVal = this.value;\n        if (value !== oldVal) {\n            this.value = value;\n            this.cb.call(this.vm, value, oldVal); // 执行Compile中绑定的回调，更新视图\n        }\n    },\n    get: function() {\n        Dep.target = this;\t// 将当前订阅者指向自己\n        var value = this.getter.call(this.vm, this.vm);\t// 触发getter，添加自己到属性订阅器中\n        Dep.target = null;\t// 添加完毕，重置\n        return value;\n    },\n    parseGetter: function(exp) {\n        if (/[^\\w.$]/.test(exp)) return;\n\n        var exps = exp.split('.');\n\n        return function(obj) {\n            for (var i = 0, len = exps.length; i < len; i++) {\n                if (!obj) return;\n                obj = obj[exps[i]];\n            }\n            return obj;\n        }\n    }\n};\n// 这里再次列出Observer和Dep，方便理解\nObject.defineProperty(data, key, {\n\tget: function() {\n\t\t// 由于需要在闭包内添加watcher，所以可以在Dep定义一个全局target属性，暂存watcher, 添加完移除\n\t\tDep.target && dep.addDep(Dep.target);\n\t\treturn val;\n\t}\n    // ... 省略\n});\nDep.prototype = {\n    notify: function() {\n        this.subs.forEach(function(sub) {\n            sub.update(); // 调用订阅者的update方法，通知变化\n        });\n    }\n};\n```\n实例化`Watcher`的时候，调用`get()`方法，通过`Dep.target = watcherInstance`标记订阅者是当前watcher实例，强行触发属性定义的`getter`方法，`getter`方法执行的时候，就会在属性的订阅器`dep`添加当前watcher实例，从而在属性值有变化的时候，watcherInstance就能收到更新通知。\n\nok, Watcher也已经实现了，[完整代码](https://github.com/DMQ/mvvm/blob/master/js/watcher.js)。\n基本上vue中数据绑定相关比较核心的几个模块也是这几个，猛戳[这里](https://github.com/vuejs/vue) , 在`src` 目录可找到vue源码。\n\n最后来讲讲MVVM入口文件的相关逻辑和实现吧，相对就比较简单了~\n\n### 4、实现MVVM\nMVVM作为数据绑定的入口，整合Observer、Compile和Watcher三者，通过Observer来监听自己的model数据变化，通过Compile来解析编译模板指令，最终利用Watcher搭起Observer和Compile之间的通信桥梁，达到数据变化 -> 视图更新；视图交互变化(input) -> 数据model变更的双向绑定效果。\n\n一个简单的MVVM构造器是这样子：\n```javascript\nfunction MVVM(options) {\n    this.$options = options;\n    var data = this._data = this.$options.data;\n    observe(data, this);\n    this.$compile = new Compile(options.el || document.body, this)\n}\n```\n\n但是这里有个问题，从代码中可看出监听的数据对象是options.data，每次需要更新视图，则必须通过`var vm = new MVVM({data:{name: 'kindeng'}}); vm._data.name = 'dmq'; `这样的方式来改变数据。\n\n显然不符合我们一开始的期望，我们所期望的调用方式应该是这样的：\n`var vm = new MVVM({data: {name: 'kindeng'}}); vm.name = 'dmq';`\n\n所以这里需要给MVVM实例添加一个属性代理的方法，使访问vm的属性代理为访问vm._data的属性，改造后的代码如下：\n\n```javascript\nfunction MVVM(options) {\n    this.$options = options;\n    var data = this._data = this.$options.data, me = this;\n    // 属性代理，实现 vm.xxx -> vm._data.xxx\n    Object.keys(data).forEach(function(key) {\n        me._proxy(key);\n    });\n    observe(data, this);\n    this.$compile = new Compile(options.el || document.body, this)\n}\n\nMVVM.prototype = {\n\t_proxy: function(key) {\n\t\tvar me = this;\n        Object.defineProperty(me, key, {\n            configurable: false,\n            enumerable: true,\n            get: function proxyGetter() {\n                return me._data[key];\n            },\n            set: function proxySetter(newVal) {\n                me._data[key] = newVal;\n            }\n        });\n\t}\n};\n\n```\n这里主要还是利用了`Object.defineProperty()`这个方法来劫持了vm实例对象的属性的读写权，使读写vm实例的属性转成读写了`vm._data`的属性值，达到鱼目混珠的效果，哈哈\n\n至此，全部模块和功能已经完成了，如本文开头所承诺的两点。一个简单的MVVM模块已经实现，其思想和原理大部分来自经过简化改造的vue[源码](https://github.com/vuejs/vue)，猛戳[这里](https://github.com/DMQ/mvvm)可以看到本文的所有相关代码。\n由于本文内容偏实践，所以代码量较多，且不宜列出大篇幅代码，所以建议想深入了解的童鞋可以再次结合本文源代码来进行阅读，这样会更加容易理解和掌握。\n\n### 总结\n本文主要围绕“几种实现双向绑定的做法”、“实现Observer”、“实现Compile”、“实现Watcher”、“实现MVVM”这几个模块来阐述了双向绑定的原理和实现。并根据思路流程渐进梳理讲解了一些细节思路和比较关键的内容点，以及通过展示部分关键代码讲述了怎样一步步实现一个双向绑定MVVM。文中肯定会有一些不够严谨的思考和错误，欢迎大家指正，有兴趣欢迎一起探讨和改进~\n\n最后，感谢您的阅读！\n\n[img1]: ./img/1.gif\n[img2]: ./img/2.png\n[img3]: ./img/3.png\n"
        },
        {
          "name": "vue-demo",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}