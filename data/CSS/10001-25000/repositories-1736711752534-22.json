{
  "metadata": {
    "timestamp": 1736711752534,
    "page": 22,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjIy",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "connors/photon",
      "stars": 10016,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4013671875,
          "content": "# Ignore docs files\n_gh_pages\n_site\n.ruby-version\n.sass-cache\n\n# Numerous always-ignore extensions\n*.diff\n*.err\n*.orig\n*.log\n*.rej\n*.swo\n*.swp\n*.zip\n*.vi\n*~\n\n# OS or Editor folders\n.DS_Store\n._*\nThumbs.db\n.cache\n.project\n.settings\n.tmproj\n*.esproj\nnbproject\n*.sublime-project\n*.sublime-workspace\n.idea\n\n# Komodo\n*.komodoproject\n.komodotools\n\n# Folders to ignore\nnode_modules\nbower_components\nexample-components\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.369140625,
          "content": "language: node_js\n\nsudo: false\n\ngit:\n  depth: 10\n\nnode_js:\n  - \"0.12\"\n\nenv:\n  matrix:\n    - RUBY_VERSION=2.0\n\nbefore_install:\n  - rvm install $RUBY_VERSION\n  - rvm use $RUBY_VERSION --fuzzy\n  - export GEMDIR=$(rvm gemdir)\n\ninstall:\n  - travis_retry npm install\n  - travis_retry gem install --no-document \"jekyll:~>3.0.0\" \"rouge:~>1.10\" \"sass:~>3.4\"\n\nmatrix:\n  fast_finish: true\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.013671875,
          "content": "photonkit.com\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.8359375,
          "content": "# Contributing to Photon\n\n## Types of issues\n\nThe GitHub issue tracker should only be used for one of the\nfollowing:\n\n+ **Bugs** &mdash; when a feature of the project has been _identified as\n  broken_.\n\n+ **Feature requests** &mdash; when you ask for a _new feature_ to be added to a\n  project.\n\n+ **Contribution enquiries** &mdash; when you want to discuss whether a _new\n  feature_ or _change_ would be accepted in a project before you begin\n  development work on it.\n\nThese are some things that don't belong in the issue tracker:\n\n+ **Please avoid personal support requests.** We cannot\n  provide personal support for implementation issues. The best place for help\n  is generally going to be StackOverflow, Twitter, IRC, etc.\n\n+ **Please avoid derailing issues.** Keep the discussion on topic and respect\n  the opinions of others.\n\n## Bugs\n\nA bug is a _demonstrable problem_ that is caused by the code in the\nrepository.\n\nIf you've come across a problem with the code and you're letting us know about\nit, _thank you_. We appreciate your time and the effort you're making to help\nimprove the code for everyone else!\n\nPlease read the following guidelines for reporting bugs:\n\n1. **Use the GitHub issue search** &mdash; check if the issue has already been\n   reported. If it has been, please comment on the existing issue.\n\n2. **Check if the issue has been fixed** &mdash; the latest `master` or\n   development branch may already contain a fix.\n\n3. **Isolate the demonstrable problem** &mdash; make sure that the code in the\n   project's repository is _definitely_ responsible for the issue. Create a\n   [reduced test case](http://css-tricks.com/6263-reduced-test-cases/) - an\n   extremely simple and immediately viewable example of the issue.\n\n4. **Include a live example** &mdash; provide a link to your reduced test case\n   when appropriate (e.g. if the issue is related to front-end technologies).\n   Please use [jsFiddle](http://jsfiddle.net) to host examples.\n\nPlease try to be as detailed as possible in your report too. What is your\nenvironment? What steps will reproduce the issue? What browser(s) and OS\nexperience the problem? What would you expect to be the outcome? All these\ndetails will help me and others to assess and fix any potential bugs.\n\n### Example of a good bug report\n\n> Short and descriptive title\n>\n> A summary of the issue and the browser/OS environment in which it occurs. If\n> suitable, include the steps required to reproduce the bug.\n>\n> 1. This is the first step\n> 2. This is the second step\n> 3. Further steps, etc.\n>\n> `<url>` - a link to the reduced test case\n>\n> Any other information you want to share that is relevant to the issue being\n> reported. This might include the lines of code that you have identified as\n> causing the bug, and potential solutions (and your opinions on their\n> merits).\n\nA good bug report shouldn't leave us needing to chase you up to get further\ninformation that is required to assess or fix the bug.\n\n## Feature requests\n\nFeature requests are welcome! Please provide links to examples or articles that\nhelp to illustrate the specifics of a feature you're requesting. The more\ndetail, the better. It will help us to decide whether the feature is something I\nagree should become part of the project.\n\n## Contribution enquiries\n\nContribution enquiries should take place before any significant pull request,\notherwise you risk spending a lot of time working on something that we might not\nwant to pull into the repository.\n\nIn this regard, some contribution enquires may be feature requests that you\nwould like to have a go at implementing yourself if they are wanted. Other\nenquiries might revolve around refactoring code or porting a project to\ndifferent languages.\n\n## Pull requests\n\nGood pull requests - patches, improvements, new features - are a fantastic\nhelp.\n\nIf you've spotted any small, obvious errors and want to help out by patching it,\nthat will be much appreciated.\n\nIf your contribution involves a significant amount of work or substantial\nchanges to any part of the project, please open a \"contribution enquiry\" issue\nfirst to check that the work is wanted or matches the goals of the project.\n\nAll pull requests should remain focused in scope and avoid containing unrelated\ncommits.\n\nPlease follow this process; it's the best way to get your work included in the\nproject:\n\n1. [Fork](https://github.com/connors/photon/fork) the project.\n\n2. Clone your fork (`git clone\n   git@github.com:<your-username>/<repo-name>.git`).\n\n3. Add an `upstream` remote (`git remote add upstream\n   git://github.com/<upsteam-owner>/<repo-name>.git`).\n\n4. Get the latest changes from upstream (e.g. `git pull upstream\n   <dev-branch>`).\n\n5. Create a new topic branch to contain your feature, change, or fix (`git\n   checkout -b <topic-branch-name>`).\n\n6. Make sure that your changes adhere to the current coding conventions used\n   throughout the project - indentation, accurate comments, etc.\n\n7. Commit your changes in logical chunks; use git's [interactive\n   rebase](https://help.github.com/articles/interactive-rebase) feature to tidy\n   up your commits before making them public. Please adhere to these [git commit\n   message guidelines](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)\n   or your pull request is unlikely be merged into the main project.\n\n8. Locally merge (or rebase) the upstream branch into your topic branch.\n\n9. Push your topic branch up to your fork (`git push origin\n   <topic-branch-name>`).\n\n10. [Open a Pull Request](http://help.github.com/send-pull-requests/) with a\n    clear title and description. Please mention which browsers you tested in.\n\nIf you have any other questions about contributing, please feel free to contact\nus.\n\n**Don't edit files in `dist/`.** You should edit files in `sass/` and `js/`.\n\n## Special thanks to @necolas\n\nFor writing the original [issue-guidelines](https://github.com/necolas/issue-guidelines/) from which these were adapted.\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 3.45703125,
          "content": "/*!\n * Photon's Gruntfile\n * Copyright 2015 Connor Sears\n * Licensed under MIT (https://github.com/connors/photon/blob/master/LICENSE)\n */\n\nmodule.exports = function(grunt) {\n  'use strict';\n\n  // Force use of Unix newlines\n  grunt.util.linefeed = '\\n';\n\n  // Project configuration.\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n\n    // Metadata.\n    meta: {\n        distPath:       'dist/',\n        docsAssetsPath: 'docs/assets/',\n        docsDistPath:   'docs/dist/',\n        docsPath:       'docs/',\n        srcPath:        'sass/',\n    },\n\n    banner: '/*!\\n' +\n            ' * =====================================================\\n' +\n            ' * Photon v<%= pkg.version %>\\n' +\n            ' * Copyright <%= grunt.template.today(\"yyyy\") %> <%= pkg.author %>\\n' +\n            ' * Licensed under <%= pkg.license %> (https://github.com/connors/proton/blob/master/LICENSE)\\n' +\n            ' *\\n' +\n            ' * v<%= pkg.version %> designed by @connors.\\n' +\n            ' * =====================================================\\n' +\n            ' */\\n',\n\n    clean: {\n      dist: ['<%= meta.distPath %>/css', '<%= meta.docsDistPath %>/css']\n    },\n\n    sass: {\n      options: {\n        sourcemap: 'none',\n        style: 'expanded',\n        unixNewlines: true\n      },\n      core: {\n        src: 'sass/photon.scss',\n        dest: '<%= meta.distPath %>css/<%= pkg.name %>.css'\n      },\n      docs: {\n        src: 'sass/docs.scss',\n        dest: '<%= meta.docsAssetsPath %>css/docs.css'\n      }\n\t\t},\n\n    usebanner: {\n      dist: {\n        options: {\n          position: 'top',\n          banner: '<%= banner %>'\n        },\n        files: {\n          src: [\n            '<%= meta.distPath %>css/*.css'\n          ]\n        }\n      }\n    },\n\n    copy: {\n      fonts: {\n        expand: true,\n        src: 'fonts/*',\n        dest: '<%= meta.distPath %>'\n      },\n      docs: {\n        expand: true,\n        cwd: '<%= meta.distPath %>',\n        src: [\n          '**/*'\n        ],\n        dest: '<%= meta.docsDistPath %>'\n      }\n    },\n\n    cssmin: {\n      options: {\n        keepSpecialComments: '*' // keep all important comments\n      },\n      docs: {\n        src: [\n          '<%= meta.docsAssetsPath %>css/docs.css',\n          '<%= meta.docsAssetsPath %>css/pygments-manni.css',\n          '<%= meta.docsAssetsPath %>css/normalize.css'\n        ],\n        dest: '<%= meta.docsAssetsPath %>css/docs.min.css'\n      }\n    },\n\n    watch: {\n      options: {\n        hostname: 'localhost',\n        livereload: true,\n        port: 8000\n      },\n      css: {\n        files: '<%= meta.srcPath %>**/*.scss',\n        tasks: ['dist-css', 'copy']\n      },\n      html: {\n        files: '<%= meta.docsPath %>**',\n        tasks: ['jekyll']\n      }\n    },\n\n    jekyll: {\n      options: {\n        config: '_config.yml'\n      },\n      docs: {},\n      github: {\n        options: {\n          raw: 'github: true'\n        }\n      }\n    },\n\n    connect: {\n      site: {\n        options: {\n          base: '_site/',\n          hostname: 'localhost',\n          livereload: true,\n          open: true,\n          port: 8000\n        }\n      }\n    }\n\n  });\n\n\n  // Load the plugins\n  require('load-grunt-tasks')(grunt, { scope: 'devDependencies' });\n  require('time-grunt')(grunt);\n\n  // Tasks\n  grunt.registerTask('dist-css', ['sass', 'usebanner', 'cssmin']);\n  grunt.registerTask('dist', ['clean', 'dist-css', 'copy']);\n  grunt.registerTask('server', ['dist', 'jekyll:docs', 'connect', 'watch']);\n\n  grunt.registerTask('default', ['dist']);\n};\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0712890625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 connors and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.2890625,
          "content": "# [Photon](http://photonkit.com/)\n\n[![Build Status](https://img.shields.io/travis/connors/photon/master.svg)](https://travis-ci.org/connors/photon)\n\nUI toolkit for building desktop apps with Electron.\n\n## Getting started\n\n* Clone the repo with `git clone https://github.com/connors/photon.git`\n* [Read the docs](http://photonkit.com) to learn about the components and how to get your new application started\n\nTake note that our master branch is our active, unstable development branch and that if you're looking to download a stable copy of the repo, check the [tagged downloads](https://github.com/connors/photon/tags).\n\n### What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets. You'll see something like this:\n\n```\nphoton/\n├── css/\n│   ├── photon.css\n├── fonts/\n│   ├── photon-entypo.eot\n│   ├── photon-entypo.svg\n│   ├── photon-entypo.ttf\n│   └── photon-entypo.woff\n└── template-app/\n    ├── js/\n    │   └── menu.js\n    ├── app.js\n    ├── index.html\n    └── package.json\n```\n\nWe provide compiled CSS (`photon.*`). We also include the Entypo fonts and a template Electron application for you to quickly get started.\n\n## Documentation\n\nPhoton's documentation is built with [Jekyll](http://jekyllrb.com) and publicly hosted on GitHub Pages at <http://photonkit.com>. The docs may also be run locally.\n\n### Running documentation locally\n\n1. If necessary, [install Jekyll](http://jekyllrb.com/docs/installation) (requires v2.5.x).\n  * **Windows users:** Read [this unofficial guide](http://jekyll-windows.juthilo.com/) to get Jekyll up and running without problems.\n2. Install the Ruby-based syntax highlighter, [Rouge](https://github.com/jneen/rouge), with `gem install rouge`.\n3. From the root `/photon` directory, run `jekyll serve` in the command line.\n4. Open <http://localhost:4000> in your browser, and boom!\n\nLearn more about using Jekyll by reading its [documentation](http://jekyllrb.com/docs/home/).\n\n## Contributing\n\nPlease file a GitHub issue to [report a bug](https://github.com/connors/photon/issues). When reporting a bug, be sure to follow the [contributor guidelines](https://github.com/connors/photon/blob/master/CONTRIBUTING.md).\n\n\n## Development\n\n1. Install node dependencies: `npm install`.\n2. Open the example app: `npm start`.\n\nModifying source Sass files? Open a second Terminal tab and run `npm run build` to kick off a build of the compiled `photon.css`.\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Photon is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we'll adhere to these rules whenever possible.\n\nReleases will be numbered with the following format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n* Breaking backward compatibility **bumps the major** while resetting minor and patch\n* New additions without breaking backward compatibility **bumps the minor** while resetting the patch\n* Bug fixes and misc changes **bumps only the patch**\n\nFor more information on SemVer, please visit <http://semver.org/>.\n\n## Maintainers\n\nConnor Sears\n\n* <https://twitter.com/connors>\n* <https://github.com/connors>\n\n## License\n\nCopyright @connors. Released under MIT.\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.27734375,
          "content": "# Meta data\nname:         Photon\nauthors:      Connor Sears\ndescription:  Build desktop apps with simple HTML and CSS components.\n\n# Dependencies\nhighlighter:  rouge\n\n# Permalinks\npermalink:    pretty\n\n# Server\nsource:       docs\nport:         4000\nurl:          http://photonkit.com\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.0625,
          "content": "{\n  \"name\": \"photon\",\n  \"version\": \"0.1.2\",\n  \"author\": \"Connor Sears\",\n  \"keywords\": [\n    \"photon\",\n    \"html\",\n    \"css\",\n    \"electron\"\n  ],\n  \"style\": \"dist/css/photon.css\",\n  \"sass\": \"sass/photon.scss\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/connors/photon.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/connors/photon/issues\"\n  },\n  \"scripts\": {\n    \"start\": \"electron dist/template-app\",\n    \"build\": \"grunt\"\n  },\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"electron-prebuilt\": \"^0.36.0\",\n    \"grunt\": \"~0.4.5\",\n    \"grunt-banner\": \"~0.5.0\",\n    \"grunt-cli\": \"^0.1.13\",\n    \"grunt-contrib-clean\": \"~0.6.0\",\n    \"grunt-contrib-compress\": \"~0.13.0\",\n    \"grunt-contrib-concat\": \"~0.5.1\",\n    \"grunt-contrib-connect\": \"~0.11.2\",\n    \"grunt-contrib-copy\": \"~0.8.0\",\n    \"grunt-contrib-cssmin\": \"~0.13.0\",\n    \"grunt-contrib-sass\": \"~0.9.2\",\n    \"grunt-contrib-watch\": \"~0.6.1\",\n    \"grunt-html\": \"~5.0.0\",\n    \"grunt-jekyll\": \"~0.4.2\",\n    \"grunt-sed\": \"twbs/grunt-sed#v0.2.0\",\n    \"load-grunt-tasks\": \"~3.2.0\",\n    \"time-grunt\": \"~1.2.0\"\n  }\n}\n"
        },
        {
          "name": "sass",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}