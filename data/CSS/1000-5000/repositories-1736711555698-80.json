{
  "metadata": {
    "timestamp": 1736711555698,
    "page": 80,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "HubPress/hubpress.io",
      "stars": 2797,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".nojekyll",
          "type": "blob",
          "size": 0.0009765625,
          "content": "\n"
        },
        {
          "name": "Administration.adoc",
          "type": "blob",
          "size": 11.6572265625,
          "content": ":toc: macro\n:toclevels: 4\n:sectnums:\n\n= Administration Guide\n\nThis guide will help you get the most out of your HubPress blog. It will teach you how to configure the various features of your blog so you can make it your own.\n\nIf you don't care too much about customising your blog at this stage, and just want to start writing, review the helpful info in the link:Writers_Guide.adoc[Writer's Guide] to get you writing blog posts the right way.\n\nNOTE: You do not need any special systems administrtion knowledge to use HubPress. We've split out the Administration information so the README remains small in size.\n\ntoc::[]\n\n== About the Administration Console\n\nThe HubPress Administration Console is available at */hubpress*:\n\n* `https://[username].github.io/hubpress/` for GitHub Hosted blogs, or\n* `https://[username].github.io/[repositoryName]/hubpress/` for Domain Hosted blogs.\n* `https://[cname_domain]/hubpress` for custom domain-hosted (CNAME) blogs.\n\nNOTE: If you are using a CNAME, you might need to access your Administration console using the `https://<username>.github.io` address pattern initially, so your CNAME redirect will work.\n\n== Log Into the Administration Console\n\nimage:http://hubpress.io/img/login.png[Install complete,300]\n\nEnter your GitHub credentials to log into HubPress Admin.\n\nOnce you authenticate, a personal token is created for future calls from HubPress to the GitHub API.\n\nThis is synchronized across all sessions of HubPress.\nIf you open the Administration Console on your PC and then your Tablet, the token is applicable to all devices.\n\n== Posts View\n\nThe `Posts` view is the default view you see when you first log onto HubPress\n\nWhen you first start HubPress, the `Posts` view is empty.\nAs you create blog posts, the page populates with the list of posts on the left, and a rendered preview of the blog post itself on the right.\n\n=== Add a Blog Post\n\nTo start blogging with HubPress, click the pencil icon in the top right of the screen.\n\nThis creates an empty blog post for you, ready for your next great idea, or discovery you want to tell the world about.\n\nThere are certain structural requirements you must meet in a HubPress blog post, before it can be saved and published to your blog site. See the link:Writers_Guide.adoc[Writer's Guide] for tips about creating posts successfully with HubPress.\n\n=== Edit or Delete a Blog Post\n\n.New in 0.5.0\nNOTE: You can now delete blog posts instead of having to rename them and use them again later.\n\nIf you have a post you need to edit to delete, you can do so by accessing the Action Overflow (three dots) menu.\n\nThis menu contains the `Edit` and `Delete` functions applicable to each post.\n\n== Settings View\n\nYou can configure basic blog settings (such as CNAME and Pagination) and social media accounts you want to connect to your blog.\n\nEach settings group is separated into tabs, to logically group the settings.\n\n.How To Access the Settings View\n. On the Posts View, click the Menu button.\n. Click Settings to load the Settings view.\n\n=== Meta\n\nThis tab contains basic information configured in the `/hubpress/config.json` file.\n\nThe following fields are configurable:\n\nGit CNAME::\n    Lets you specify a custom domain name for your blog.\n    See https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/[Setting Up A Custom Domain] for instructions about setting up a CNAME for your blog.\nLive Preview Render Delay::\n    Controls how long the live render takes to refresh, in milliseconds.\n    For fast typists, setting this field to a value over `2000` (two seconds) will result in a smoother editing experience because the live preview will not be regenerated so frequently.\n    Setting this value below `2000` will result in the live preview refreshing faster, but may result in some visible cursor delay when typing.\n\n=== Site\n\n==== Title and Description\n\nThe *Title* and *Description* fields allow you to give your blog a name, and tell visitors what they can expect from your blog posts.\n\n==== Logo and Cover Image\n\nThe *Logo* and *Cover Image* fields allow you to specify art asset that will be used on each page of your blog:\n\n* An HTML link to an image hosting service. For example gravatar, for your avatar.\n* A link to an image committed to the /images directory of your blog repository.\n\nIMPORTANT: The format you specify in these fields is important for repository-hosted images.\n\nYou must use the pattern `/images/<filename>` so the static site generator can create the image paths to each sub-page of your blog.\nFailing to specify the leading forward-slash will mean the absolute path generated in the HTML pages will break.\nYou'll know this has happened when Page 2 of your blog onwards does not have any cover or logo images.\n\nSee the link:Writers_Guide.adoc#Adding_Images[Adding Images] section in the Writer's Guide for more information about using Images.\n\n==== Theme\n\nThe *Theme* is selectable from the list of themes stored in the `/themes` directory.\n\nThis field is a free-text field, but you need to specify the theme according to the folder name.\nThe current folder names are:\n\n* casper\n* ghostium\n* ichi\n* roon\n* saga\n* uno\n* uno-zen\n\n.New in 0.5.0\nNOTE: Theme names have all been changed to lowercase for consistency.\nIf you find your theme is not loading, check the site settings and adjust the names accordingly.\n\n==== Google Analytics\n\nThe *Google Analytics* field takes the Google Analytics Tracking ID of your site. For example `UA-1234567-1`.\n\n==== Disqus Shortname\n\nThe *Disqus shortname* field takes your Disqus user name that you specified when registering a new site for Disqus.\n\nOnly the shortname is required, not a link to your profile page.\n\nIf you have not enabled Disqus for your site, create a site profile at https://disqus.com/admin/create/ with the name of your blog to get started.\n\n=== Social Network\n\nAll fields in this group require full URLs to your public profile page.\nThe way these values are rendered on your blog depends on the theme selected.\n\n== Update HubPress\n\nBecause HubPress is hosted on GitHub, you can update by pulling down the latest changes from the HubPress master repository.\n\nIf you're new to GitHub, the repository you forked the project from is referred to as `Upstream`.\n\nYou update HubPress by creating a Pull Request (PR) against the hubpress.io upstream repository.\n\nWith the cross-compare fork feature of GitHub, you can easily update to the latest version.\n\n.How To Update Your HubPress Instance to the Latest Version\n. Click the `Compare` button in your HubPress repository.\n+\nimage::https://raw.githubusercontent.com/HubPress/dev.hubpress.io/e57b221/docs/images/maintain_the_latest_hubpress_01.png[Click Compare button]\n+\n. Change the base fork to your repository, and set the branch according to your repository configuration (`master` or `gh-pages`).\n+\nimage::https://raw.githubusercontent.com/HubPress/dev.hubpress.io/e57b221/docs/images/maintain_the_latest_hubpress_02.png[Set the base fork]\n+\n. Select `Compare across forks`.\n+\nimage::https://raw.githubusercontent.com/HubPress/dev.hubpress.io/e57b221/docs/images/maintain_the_latest_hubpress_03.png[Click compare across forks]\n+\n. Change the head fork to the `HubPress/hubpress.io` repository.\n+\nimage::https://raw.githubusercontent.com/HubPress/dev.hubpress.io/e57b221/docs/images/maintain_the_latest_hubpress_04.png[Set the head fork]\n+\n. Create the Pull Request.\n. Apply the Pull Request to your instance of HubPress.\n\nYou can use the most recent HubPress version after apply the PR to your repository.\n\nFor a video demonstration of the PR process, see the following YouTube video.\n\nvideo::KCylB780zSM[youtube]\n\nhttps://www.youtube.com/watch?v=KCylB780zSM[Updating HubPress]\n\n== Use HubPress with Multiple Users\n\n.New in 0.5.0\nNOTE: You can now work as a team on blog posts.\nEach user granted access to the blog instance is credited with their GitHub name on posts they create.\n\nYou can use the same HubPress instance with multiple authors by adding contributors to the repo in which HubPress is hosted.\n\nAttribution::\n  Posts are attributed based on the first person who created the blog post entry.\n  Edits by other contributors are attributed to the first person who created the post.\nSite Changes::\n  Changes to settings (themes, blog name, social links) _will not_ affect the author data attributed to each post.\n\n.How To Add Contributors to your HubPress Repository\n. Open your HubPress site on GitHub.\n. Click `Settings` => `Collaborators`.\n. Add the GitHub users for which you want to grant access to your blog.\n\nOnce you have added contributors, they will be notified by the GitHub notification system. Once they accept the invitation, they can instantly contribute to content development on the blog.\n\n== Troubleshooting\n\nHubPress' unique authoring environment is backed by a locally-stored database, specific to your Browser and Operating System.\n\nIf you switch devices or browser instances, you lose the synchronicity between browsers.\nHubPress subsequently gets a globally-corrupted GitHub authentication token and any attempts to synchronize any changes from the primary Chrome instance fails.\n\nIn most cases, resetting the Hosted App Data in the browser is all it takes to bring normality back to your HubPress fork.\n\n=== Resetting Blog Database on Android\n\nClear the browser Cache and Data in Android.\n\n. Tap Settings > Apps > Chrome.\n. Clear Cache and Data.\n. Restart the Chrome App.\n\nHubPress is forced to rebuild the local database, and will resync its GitHub authentication token.\n\n=== Resetting Blog Database on Desktop\n\nChrome Desktop shares similar behavior with Chrome for Android.\n\nRather than having to reset the entire cache and data in the app, Chrome Desktop is a little less extreme in what you need to reset.\n\n. Close the malfunctioning HubPress tab in the browser.\n. Click `Settings`.\n. Click `Show advanced settings`.\n. In the `Privacy` group, click `Clear browsing data`.\n. Select \"Obliterate the following items from: `The beginning of time`\".\n. Clear all check-marks *except for* `Hosted app data`.\n. Click `Clear browsing data`.\n. Open a tab, and load the HubPress Admin Console for your blog.\n. Attempt to republish a post.\n\nYou should have a successful post publish where the process previously failed.\n\n== Frequently Asked Questions\n\nThere are some commonly-asked questions in the issue tracker that are worth calling out here.\n\n=== Can I Specify Other Asciidoctor Backends?\n\nHubPress only supports the HTML5 backend.\n\nSpecifying other backend types will result in an error similar to:\n\n    Uncaught RuntimeError: asciidoctor: FAILED: missing converter for backend 'deckjs'. Processing aborted.\n\nIf you do want to use a different backend to process your AsciiDoc files, the http://asciidoctor.org/docs/user-manual/#selecting-an-output-format[Asciidoctor User Guide] can help you work out the backend that is right for you, for use with the +asciidoctor+ command-line script.\n\n=== Can I create posts in my repository, and not through the interface?\n\nYou can edit your posts in a local copy of your HubPress repository, however you will need to log onto HubPress Admin to publish your post.\n\nIf you want a near WYSIWYG interface to edit your AsciiDoc files, applications like http://atom.io[Atom Editor] or http://asciidocfx.com[AsciidocFX Editor] are excellent choices.\n\n== Donations\n\nHubPress is now on https://gratipay.com/hubpress/[Gratipay]!\n\nimage::https://cloud.githubusercontent.com/assets/2006548/12901016/7b09da22-ceb9-11e5-93f7-16ab135b2e2e.png[]\n\nIt's not the only way you can help us, but it is certainly a welcome one.\nDonations are a great way to show your appreciation for the platform: it inspires us to dedicate extra time away from our families and day jobs to make HubPress an awesome blogging platform for you.\n\nimage::https://cloud.githubusercontent.com/assets/2006548/12901085/cc5ee908-ceb9-11e5-9d8b-c526f081f1e9.png[]\n"
        },
        {
          "name": "CHANGELOG.adoc",
          "type": "blob",
          "size": 5.4658203125,
          "content": "## 0.9.2\n\n* fix(content): fix the smap removed with the upgrade to asciidoctor 1.5.6. Fix HubPress/hubpress.io#538\n\n## 0.9.1\n\n* fix(navigation): add GA in casper, change the url of the logo and replace gratipay with opencollective\n\n## 0.9.0\n\n* feat(post): add a new preview with the target result with the template\n* feat(template): update casper to the last version\n* feat(settings): add navigation, a paypal and a opencollective entry\n* feat(page): add support of page\n* feat(blog): we can now specify a target directory for the pagination\n* fix(theme): fix the date in the theme ghostium\n* tech(pouchdb): remove pouchdb and use lokijs now\n* tech(nuxt): now hubpress use nuxt\n\n## 0.8.1\n\n* fix(github): add a cached commit to avoid browser cache when getting the current commit of the branch - fix #496, #505, #515\n* fix(post): reset the number of elements to publish before each publish actions\n* fix(post): change the MathJax CDN and add the rendering of MathJax in the preview - fix #267\n\n## 0.8.0\n\n* feat(startup): add a panel to define the username, the repositoryName, the branch and the CNAME before login\n* fix(tag): fix the tag generation by removing useless space with a trim\n* fix(theme): add the highlightjs css and upgrade to the last version, fix all themes to have a correct rendering\n* feat(theme): add a new (black) theme The Shell\n\n## 0.7.3\n\n* fix(init): fix a typo when initiliazing with a element in localStorage for hubpress:sync\n* feat(chat): add the sidecar chat linked with gitter.im/hubpress/hubpress.io\n\n## 0.7.2\n\n* fix(rss): rss was not reseted when no post\n* fix(theme): report themes omitted during the release 0.7.1 :(\n\n## 0.7.1\n\n* fix(theme): Error with http request (and not https) for included stylesheet HubPress/hubpress.io#475\n* fix(post): Problem to show all content of a blog post HubPress/hubpress.io#483\n* fix(theme): ld+json is null HubPress/hubpress.io#488\n\n## 0.7.0\n\n* technical release, move from react/redux to vue/vuex\n* remove material design and use semanticUI now\n* feat(posts): add filter\n* feat(post): add a popup to display basic asciidoc syntax\n* feat(team): add a team page\n\n## 0.6.0\n\n* feat(rss): add the generation of the RSS feed\n* feat(rss): uncomment RSS links in themes\n* feat(admin): add a link to check if an upgrade is available\n* fix(template): fix a bug with the pagination on gh-pages\n* fix(theme): fix the typo of the theme saga\n* fix(admin): add the version of the application and donation items\n\n## 0.5.1\n\n* feat(author): now the author of a post is the author of the first commit of the post, in the next version we will add an attribute to specify the author explicitely,\n* feat(author): authors have now an author page with a list of all their posts,\n* feat(posts): you can now delete your delete a post with the Delete button in the three dots menu,\n* feat(posts): in the posts list, we have now a button to synchronize all the posts,\n* feat(editor): the default theme of the editor is Solarized, you can also switch between light and dark version with the light button in the toolbar,\n* feat(editor): hide save and publish button if the post do not have a title,\n* feat(asciidoc): include are now supported,\n* feat(asciidoc): add a gist macro to import code source from a gist file,\n* fix(themes): theme names are now in lowercase,\n* fix(post): fix https://github.com/HubPress/hubpress.io/issues/369, acronym title are now fixed\n* doc(guides): lot of rework in the Administration guide and Writer's guide, first step in the gitbook world,\n* feat(tech): explode all the application in plugins,\n* feat(tech): use redux instead of a handcrafted implementation of Flux,\n* feat(tech): use PouchDB instead of Dexie.js,\n* feat(tech): use Asciidoctor 1.5.2\n\n## 0.4.0\n\n* feat(gui): switch to material design with material-ui\n* fix(dependencies): update version of dependencies\n* fix(build): change all the build process\n* doc(README): update README from the branch development\n* doc(README): split README\n* feat(theme): add theme uno-zen\n* feat(theme): add theme ghostium\n\n## 0.3.0\n\n* fix(excerpt): add a fix for CJK language\n* feat(authorization): #128 recreate token on login\n* fix(generator): add context\n* fix(PostsServices): fix deferred in _readContentAndConvert\n* doc(README): add a link for the video Updating HubPress\n\n## 0.2.0\n\n* fix(README en): add information about hp-alt-title\n* fix(casper): fix overflow for .content\n* fix(settings): fix messages and loader after form is submitted\n* feat(compilation): added syntax highlighting\n* feat(title): added hp-alt-title parameter for an alternative blog post title\n* fix(theme): fix XX ago in DateTime-format\n* feat(editing): added configurable rendering delay setting in HubPress settings to reduce UI lag for fast typers\n* feat(tags): added tag generation\n* fix(notification): Sanitized all error messages with consistent info\n* fix(theme): removed protocol from theme url\n* doc(README): added README-es File\n\n## 0.1.1\n\n* fix(sync): fixed error when no post\n* fix(https): report #99\n* fix(uno): fix pre overflow\n* fix(build): uglify app.js\n* fix(auth): use token after login\n* fix(theme): removed RSS links and fix uno bug on gh-pages\n* fix(SettingsStore): refactor getSiteUrl\n* fix(ajax-cache): Add timestamp for json files and version for hbs theme files\n* fix(PostsServices) :\n** Removed test on sha : sync all posts\n** Convert asciidoc content only if content has changed\n** Fix url on share links\n** Add a .last-sha file to force github to update site\n* fix(ascidoctor): applyScripts only if content change, fix firefox and chrome beta\n\n\n\n## 0.1.0\n\n* Initial import\n"
        },
        {
          "name": "CONTRIBUTING.adoc",
          "type": "blob",
          "size": 2.6943359375,
          "content": "= Contributing\n// settings:\n:idprefix:\n:idseparator: -\n:source-language: javascript\n:language: {source-language}\nifdef::env-github,env-browser[:outfilesuffix: .adoc]\n// URIs:\n:uri-repo: https://github.com/hubpress/hubpress.io\n:uri-help-base: https://help.github.com/articles\n:uri-issues: {uri-repo}/issues\n:uri-fork-help: {uri-help-base}/fork-a-repo\n:uri-branch-help: {uri-fork-help}#create-branches\n:uri-pr-help: {uri-help-base}/using-pull-requests\n:uri-gist: https://gist.github.com\n\n== License Agreement\n\nBy contributing changes to this repository, you agree to license your contributions under the <<LICENSE#,MIT license>>.\nThis ensures your contributions have the same license as the project and that the community is free to use your contributions.\nYou also assert that you are the original author of the work that you are contributing unless otherwise stated.\n\n== Submitting an Issue\n\nWe use the {uri-issues}[issue tracker on GitHub] associated with this project to track bugs and features.\n\nBefore submitting a bug report or feature request, check to make sure it hasn't already been submitted.\n\nWhen submitting a bug report, please include any details that may help reproduce the bug, including the AsciiDoc syntax you are using, or logs.\n\n== Submitting a Pull Request\n\nHubPress is moving away from developing in the https://github.com/HubPress/hubpress.io[hubpress.io] repository. \nTo ensure the hubpress.io repository remains clean for new adopters, development has shifted to https://github.com/HubPress/dev.hubpress.io[dev.hubpress.io].\n\nThe process to commit a change to HubPress is changed to the following:\n\n. Create an issue on the https://github.com/HubPress/hubpress.io/issues[HubPress/hubpress.io] repository describing the change you propose.\n. Fork https://github.com/HubPress/dev.hubpress.io to make changes in the new development repository.\n. Switch to the `/development` branch.\n. Create a branch from `/development` in your forked repo. \n+\nNOTE: We suggest naming the branch using the format `issue-nnn` to make it easy to refer to the issue.\n+\n. Open a Pull Request (PR), and summarise your changes, linking to the issue you created.\n\nOnce we receive your PR, we'll review your changes and then either accept them or ask for further changes before final acceptance.\n\nThe new repository is backed by Continuous Integration tasks provisioned through Travis-CI, which trigger automatically once a change to `/development` is detected.\n\nIt's a more scalable way to manage HubPress moving forward.\n\n=== Writing and Executing Tests\n\n#TODO#\n\n=== Running HubPress in Development Mode\n\n#TODO#\n\n=== Themes Development\n\nYou need to map the Ghost theme assets back into a mapping file, so HubPress knows what parts of a theme to load.\n\n#TODO#\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 HubPress\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README-es.adoc",
          "type": "blob",
          "size": 12.982421875,
          "content": "= HubPress\n\n:toc:\n\n== ¿Qué es HubPress?\nimage::http://hubpress.io/img/editor.png[]\n\nHubPress es una herramienta de código abierto, que puedes usar para construir un blog enriquecido basado en AsciiDoc, y además utilizando GitHub Pages!\n\nCreado y mantenido por http://github.com/anthonny[Anthonny Quérouil] (twitter http://twitter.com/anthonny_q[@anthonny_q]).\n\nNOTE: Aunque HubPress parezca tener todas las funcionalidades, está actualmente en Vista Preliminar (o _Tech Preview_). Como los errores son inevitables, si encuentras algo no está funciona de la manera que crees debería hacerlo, notifica el error y el equipo del proyecto lo revisará tan pronto como sea posible.\n\nLa documentación está evolucionando rápidamente en la medida que el proyecto va creciendo. Visita esta web regularmente para obtener más consejos sobre como usar HubPress. Si encuentras algún error en la documentación, por favor notifica el error. Tu ayuda en la mejora de todos los aspectos de HubPress es extremadament apreciada y cualquier Pull Request es *siempre* bienvenido.\n\n== Compatibilidad con Navegadores\n\nHubPress es compatible con Chrome para escritorio, Firefox para escritorio y Chrome para Android.\n\nChrome Beta para Android será completamente compatible pronto, pero no está completamente soportada por algunos errores en IndexedDB, por eso durante la Vista Preliminar usa únicamente Chrome para Android.\n\n== Introducción\n\n=== Instalación\n\n==== Hacer fork al repositorio\nHaz Click en el icono de Fork image:http://hubpress.io/img/fork-icon.png[Fork,80] para crear una copia de este repositorio con tu cuenta de GitHub.\n\n==== Usa el dominio github.io\n\nSi nunca has usado el dominio de GitHub Pages, sigue estos pasos para instalar rápidamente HubPress. Solo se necesitan unos pocos pasos para tener Hubpress instalado y listo para usar.\n\nIMPORTANT: Si actualmente estás usando tu `usuario.github.io` de GitHub Pages para otro proyecto, o si deseas usar un dominio personalizado, puedes ignorar esta sub-sección y saltar a la siguiente.\n\n. Cambia el nombre del repositorio a `<usuario>.github.io`\n\n. Añade la configuración necesaria a `hubpress/config.json`\n+\nimage:http://hubpress.io/img/edit-config.png[Edit config]\n+\nLos siguientes parámetros son obligatorios :\n+\n* `username`, tu nombre de usuario de GitHub,\n* `repositoryName`, el nuevo nombre del Fork del repositorio, `<usuario>.github.io`.\n. Confirma los cambios, y abre el dominio de GitHub Pages: `http://<usuario>.github.io/`.\n. La siguiente pantalla aparecerá si has configurado correctamente HubPress.\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n==== Usar un dominio personalizado o si tu dominio de GitHub Page está actualmente en uso\n\nSi deseas tener tu blog en un dominio personalizado, o si ya estás usando tu dominio de GitHub Pages para otro proyecto, necesitas una configuración adicional.\n\n. En la configuración del Repositorio, establece la rama por defecto a `gh-pages`:\n+\nimage::https://cloud.githubusercontent.com/assets/8563047/13872457/28d53c9a-ed2e-11e5-9d13-65f5bf2cbbf9.png[Settings gh-pages,400]\n. cambia tu repositorio a la rama *gh-pages*\n+\nimage:http://hubpress.io/img/switch-gh-pages.png[Install complete,300]\n+\n. establece los valores requeridos en `hubpress/config.json\n+\nimage:http://hubpress.io/img/edit-config-gh-pages.png[Edit config]\n+\nLos siguientes parámetros son obligatorios :\n+\n* `username`, tu nombre de usuario de GitHub,\n* `repositoryName`,el nuevo nombre del Fork del repositorio. Por ejemplo, `hubpress.io` si no lo has renombrado.\n. Confirma los cambios, y abre el dominio de Github Pages: `http://<username>.github.io/<repositoryName>/`.\n. La siguiente pantalla aparecerá si has configurado correctamente HubPress.\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n== Consola de Administración\n\nLa Consola de Administración está disponible en */hubpress*\n\n* `http://<username>.github.io/hubpress/` para blogs publicados en GitHub, o\n* `http://<username>.github.io/<repositoryName>/hubpress/` para blogs publicados en otros dominios.\n\n=== Acceder a la Consola de Administración\n\nimage:http://hubpress.io/img/login.png[Install complete,300]\n\nIntroduce tus credenciales de Github para iniciar sesión en la Consola de Administración de HubPress.\n\nUna vez autenticado, se generará un Token para futuras llamadas de Hubpress al API de GitHub.\n\nÉste se sincroniza en todas las sesiones de HubPress, por lo que si abres la nueva consola de administración en tu PC y luego en tu Tablet, el token es válido para todos los dispositivos.\n\n=== Página de Configuración\n\nPuedes configurar las opciones básicas del Blog (tales como CNAME o paginación) y cuentas de redes sociales que desees conectar a tu blog.\n\n==== Meta\n\nEsta sección contiene información básica configurada en el archivo `/hubpress/config.json`.\n\nLos siguientes campos son configurables:\n\nGit CNAME::\nPermite especificar un nombre de dominio personalizado. Ver https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/[Setting Up A Custom Domain] para obtener instrucciones sobre cómo configurar un CNAME para tu blog.\nLive Preview Render Delay::\nControla cuanto tiempo espera el renderizador de la vista previa en actualizar (en milisegundos). Para aquellos que teclean rápido, establece un valor superior a `2000` (dos segundos) para ofrecer a una experiencia de edición más suave ya que la vista previa no se actualizará con tanta frecuencia. Establecer este valor por debajo de `2000` dará lugar a la actualización de la vista previa más rápida, pero puede dar lugar a cierto retraso del cursor al escribir.\n\n==== Sitio\n\n===== Título y Descripción\n\nLos campos *Title* y *Description* te permiten colocar un nombre a tu blog, y una breve descripción para que tus visitantes puedan hacerse una idea de que esperar en los artículos del blog.\n\nLos campos *Logo* y *Cover Image* pueden usarse de las siguientes maneras:\n\n* Un enlace HTML a un servicio de hosting de imágenes, por ejemplo Gravatar.\n* Un enlace a una imagen almacenada en el directorio /images del repositorio de tu blog.\n\nNOTE: En `/images/README.adoc` podrás encontrar otras opciones para incluir imágenes es tus entradas del blog.\n\n===== Temas\n\nEl campo *Theme* permite seleccionar entre los temas almacenados en el directorio `/themes`. El nombre debe ser exactamente el mismo que el directorio que contiene el tema.\n\n===== Google Analytics\n\nEl campo *Google Analytics* toma el Tracking ID de Google Analytics generado para tu sitio.\n\n===== Nombre Corto Disqus\n\nEl campo *Disqus shortname* toma tu Disqus URL/nombre_corto que usas cuando registras un nuevo sitio para Disqus. Solo el nombre corto es requerido, no el enlace a tu perfil personal.\n\n==== Redes Sociales\n\nTodos los campos en este grupo requieren las URLs completas a tu página de perfil público. La manera en que estos valores se muestran depende del tema seleccionado.\n\n== Gestionando entradas\n\nCuando entres a HubPress por primera vez, la vista *Posts* estará vacía. A medida que crees tus entradas en el blog, la página irá creciendo con la lista de entradas a tu izquierda, y una vista previa de la entrada a la derecha.\n\n=== Creando una entrada\n\nNOTE: Si nunca has usado AsciiDoc para escribir contenido, la http://asciidoctor.org/docs/asciidoc-writers-guide/[guía para Escritores de AsciiDoctor] debe ser tu primera parada en tu viaje. La guía proporciona ejemplos básicos y avanzados que puedes copiar y usar directamente.\n\nEl editor de HubPress muestra el código de AsciiDoc a la izquierda, y la vista previa en la derecha.\n\n===== Título del blog y encabezados\n\nEl título del blog siempre debe ser el primer nivel en la entrada en AsciiDoc. Por ejemplo, `= Título del Blog` establece el nombre de la entrada del blog como `Título del Blog`.\n\nUna línea `= Título del Blog` es requerida para guardar satisfactoriamente la entrada.\n\nSi quieres colocar un encabezado de primer nivel debes utilizar `== Encabezado de Primer Nivel`. Subsecuentes niveles usan los respectivos subniveles de encabezado (`===`, `====`, ...).\n\n==== Parámetros de HubPress\n\nHubPress te permite modificar las características de cada entrada del blog mediante atributos.\n\n===== :hp-image: para Imagen de Portada de la Entrada\n\nSi quieres agregar una imagen de portada a tu entrada del blog, debes agregar el atributo `hp-image`.\n\n. :hp-image: Ejemplo:\n[source, asciidoc]\n----\n= Blog Title\n:hp-image: a-cover-image.jpg\n----\n\nNOTA: Dado que HubPress define el directorio `/images` como raíz por defecto de todas las imágenes, solo tienes que indicar el nombre de la imagen. Debido a esto, es posible que consideres crear un directorio `/covers` en tu repositorio para agrupar las imágenes de las portadas.\nNombrar las imágenes de la cubierta de manera consistente facilitará enormemente su inclusión en cada entrada. Si tienes un tema para su blog, esto permite a sus lectores obtener una idea visual de lo que trata la entrada.\n\nLos temas que actualmente soportan imágenes de portadas en las entradas del blog son:\n\n* Saga\n\n==== :published_at: para alterar la Fecha de Publicación\n\nPor defecto, la fecha de publicación es la fecha de creación de la entrada en el blog. Puedes definir una fecha de publicación propia añadiendo el atributo `published_at`.\n\n. :published_at: Ejemplo :\n[source, asciidoc]\n----\n= Blog Title\n:published_at: 2015-01-31\n----\n\n==== :hp-tags: Etiquetas\n\nNOTE: Categorías no están soportadas.\n\nAñadir etiquetas mediante el atributo `hp-tags`.\n\n. :hp-tags: Ejemplo:\n[source, asciidoc]\n----\n= Blog Title\n:hp-tags: HubPress, Blog, Open Source,\n----\n\n==== :hp-alt-title: para indicar un Título Alternativo\n\nEspecifique un título alternativo mediante el atributo `hp-alt-title`.\n\nEl título alternativo se utiliza en lugar del nombre de archivo HTML generado por HubPress.\n\n. :hp-alt-title: Ejemplo :\n[source, asciidoc]\n----\n= 大千世界\n:hp-alt-title: My English Title\n----\n\n==== Añadiendo Imágenes\n\n===== Publicando Imágenes en un repositorio GitHub\n\nPuedes usar la consola de comando o un cliente de Git para añadir imágenes a una entrada. Para ello:\n\n. Sube la imágen (mediante _commit_) al directorio `/images`.\n. Usa la siguiente expresión de AsciiDoc en tu entrada del blog:\n+\n[source,AsciiDoc]\n----\nimage::<filename>[]\n----\n. Revisa http://asciidoctor.org/docs/asciidoc-writers-guide/ para ver más opciones de inserción de imágenes.\n\nSi están integrando imágenes publicadas en otro dominio -- instagram, otros repositorios GitHub, o cualquier servicio de imágenes -- simplemente indica la URL completa en el lugar de `<filename>`.\n\n.Inserción de imágenes en otros dominios\n----\nimage::http://<full path to image>[]\n----\n\n===== Usando incidencias de GitHub para publicar imágenes\n\nPuedes usar una única incidencia para almacenar y publicar las imágenes de una entrada, para ello añade varias imágenes como comentarios, o como alternativa, puedes usar múltiples incidencias para almacenar imágenes de forma separada. Usa lo que mejor se adapte a tu estilo y el de tu organización. En el siguiente vídeo encontrarás ejemplos sobre como usar incidencias de GitHub y servicios de Cloud Hosting, también encontrarás algunos consejos extra sobre el uso del boque `image` en AsciiDoc.\n\nvideo::KoaGU91qJv8[youtube]\n\n==== Insertando Vídeos\n\nHubPress permite insertar vídeo en una entrada mediante una sintaxi simple. No necesitas indicar la URL completa, solamente indica el ID único del video como en el ejemplo.\n\n```\nvideo::[id_unico_youtube][youtube | vimeo]\n```\n\n.Insertando vídeo de YouTube\n```\nvideo::KCylB780zSM[youtube]\n```\n\n.Insertando vídeo de Vimeo\n```\nvideo::67480300[vimeo]\n```\n\n== Actualizando HubPress\n\nGracias a que HubPress está en GitHub, puedes actualizar a los últimos cambios haciendo pull del repostiorio master de HubPress.\n\nPara aprender a hacerlo correctamente, puedes ver el siguiente vídeo (hay ciertas consideraciones a tener en cuenta la primera vez que haces pull del upstream).\n\nvideo::KCylB780zSM[youtube]\n\nhttps://www.youtube.com/watch?v=KCylB780zSM[Actualizando HubPress]\n\n== Solución de problemas\n\nSi algo no está funcionando como esperas, algunos de estos consejos podrían ayudarte.\n\n=== Restablecimiento de la Base de datos del Blog en Android\n\nA veces, la base de datos local de HubPress se desincronización con tu blog publicado. Esto puede suceder debido a que estás editando tu blog en tu PC, y luego cambias a la tableta.\n\nHubPress trabaja con una base de datos local específica en tu navegador, por lo que si cambias de dispositivo -- y en consecuencia cambias de navegador -- se pierde la sincronía entre los navegadores.\n\nPara devolver la instancia de HubPress a la del blog publicado, borra la caché del navegador y de datos en Ajustes > Aplicaciones. Tras esto, HubPress reconstruirá la base de datos local, y reflejará el estado del blog en GitHub.\n\n== Créditos\n\nGracias a https://github.com/jaredmorgs[Jared Morgan] por poner en orden el archivo README que se ve aquí, y seguir siendo el \"Documentador\" para HubPress.\nGracias a https://github.com/takkyuuplayer[takkyuuplayer], https://github.com/hinaloe[hinaloe] por haber traducido el README a Japonés.\n"
        },
        {
          "name": "README-ja.adoc",
          "type": "blob",
          "size": 12.9326171875,
          "content": "= HubPress\n\n:toc:\n\n== HubPress とはなにか？\n\nimage::http://hubpress.io/img/editor.png[]\n\nHubPress は無料でブログを作るためのオープンソースツールです。AsciiDocで書けるすばらしいブログをGitHub Pagesを使って公開できます。\n\nhttps://github.com/anthonny[Anthonny Quérouil] (twitter https://twitter.com/anthonny_q[@anthonny_q])\nにより作成・メンテナンスされています。\n\nNOTE: HubPress はまだ作成途中です。バグを発見した場合は是非教えてください。開発チームができる限りはやく対応します。\n\nHubPressの更新が勢いに乗れば、それだけドキュメントも更新されます。\n定期的にHubPressの更新を確認し、新しい機能・使い方を確認して下さい。\nバグ報告はいつでも歓迎です。もちろんプルリクエストは*いつでも*大歓迎です。\n\n== 対応ブラウザについて\n\nHubPressは、デスクトップ版Chrome、デスクトップ版FireFox、そしてAndroid版Chromeで動作することを確認しています。\n\n== Getting Started\n\n=== インストール\n\n==== リポジトリのフォーク\n\nFork アイコンをクリックして、自分の GitHub アカウントにリポジトリのコピーを作成してください。\n\n==== github.io ドメインの使用\n\nもしあなたがGitHub Pagesを利用したことがなければ、ここに記載の方法で\n簡単に HubPress をセットアップできます。\nほんの数ステップで HubPress がデプロイされ利用可能になります。\n\nIMPORTANT: 「username.github.io ドメインを他プロジェクトで利用済みである」あるいは「独自ドメインで HubPress を利用したい」場合, 下記のステップは読み飛ばしてください。\n\n. リポジトリ名を `<username>.github.io` に変更\n. `hubpress/config.json` の設定\n+\nimage:http://hubpress.io/img/edit-config.png[Edit config]\n+\nなお、以下のパラメータは必須です。\n+\n* `username`: GitHub のユーザー名です。\n* `repositoryName`: フォーク後のリポジトリの名前。 `<username>.github.io`\n. 変更をコミットし, `https://<username>.github.io/` ドメインで GitHub Page を公開。\n. 以下のような画面が出れば、HubPressは正しくセットアップされています。\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n==== 「username.github.io ドメインを他プロジェクトで利用済みである」あるいは「独自ドメインで HubPress を利用したい」場合\n\nやや多めに設定が必要です。\n\n. リポジトリの設定からデフォルトのブランチを `gh-pages` に設定\n+\nimage::https://cloud.githubusercontent.com/assets/8563047/13872457/28d53c9a-ed2e-11e5-9d13-65f5bf2cbbf9.png[Settings gh-pages,400]\n. *gh-pages* ブランチに移動。\n+\nimage:http://hubpress.io/img/switch-gh-pages.png[Install complete,300]\n+\n. `hubpress/config.json` の設定\n+\nimage:http://hubpress.io/img/edit-config-gh-pages.png[Edit config]\n+\nなお、以下のパラメータは必須です。\n+\n* `username`: GitHub のユーザー名です。\n* `repositoryName`: フォーク後のリポジトリの名前。特に変更していないなら `hubpress.io`\n. 変更をコミットし, `https://<username>.github.io/<repositoryName>/` で GitHub Page を公開。\n. 以下のような画面が出れば、HubPressは正しくセットアップされています。\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n== 管理画面\n\nHubPressの管理画面は */hubpress* からアクセスできます。つまり\n\n* `https://<username>.github.io/hubpress/` (github.ioドメインを利用している場合 )\n* `https://<username>.github.io/<repositoryName>/hubpress/` (Project Pageを利用している場合)\n* `http://<yourdomain>/hubpress/` (独自ドメインを使用している場合)\n\nです。\n\n=== 管理画面へのログイン\n\nimage:http://hubpress.io/img/login.png[Install complete,300]\n\n\nGitHub のログイン情報でログインできます。\n\n一旦ログインすると、HubPress から GiHub API へコールするためのトークンが発行されます。\n\nこのトークンは HubPress の全セッション間で共有されます。\nそのためPCで管理画面を開いた後、タブレット端末でも開いた場合は\nトークンはPC,タブレット両端末で使われます。\n\n=== ページの設定\n\nCNAMEやページングといった、基本的なブログの設定が可能です。\nまたあなたのソーシャルアカウントとブログを紐付けすることもできます。\n\n==== Meta\n\nこの節は `/hubpress/config.json` ファイルで変更可能な基本情報についての説明を含みます。\n\n*Git CNAME* を設定可能して独自ドメインの利用が可能です。\n詳しくは https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/\nを見てください。\n\nLive Preview Render Delayの項目について::\nミリ秒単位で、ライブプレビューが描画を始める時間を設定できます。\nタイピングが早い人には、2000 (2秒) 以上の数値を入れることをオススメします。そうすると何度も頻繁にライブプレビューの描画をさせずに済むので、ブログの執筆がスムーズになるでしょう。2000(2秒)より少ない値を設定する場合は、ライブプレビューがはじまるのが早くなりますが、タイピングのカーソルに遅れなどが生じる可能性があります。\n\n==== Site\n\n===== Title と Description\n\n*Title* や *Description* フィールドにより\nブログタイトルや, その説明を設定することができます。\n\n*Logo* や *Cover Image* フィールドには\n\n* ホスティングサービス上の画像へのHTML リンク。 例. gravatar\n* /images ディレクトリ内の画像へのリンク\n\nが設定可能です。\n\nNOTE: ブログへの画像の投稿については `/images/README.adoc` を参照してください。\n\n===== Theme\n\n`/themes` ディレクトリの中にあるテーマ名を指定することで、ブログテーマを選択可能です。\n\n===== Google Analytics\n\n*Google Analytics* フィールドの設定により ブログサイトで Google Analytics を利用可能です。(例 : UA-1234567-1)\n\n===== Disqus Shortname\n\n*Disqus shortname*の項目はあたらしく用意したDisqus URL/shortname を入れることができます。shortnameだけでよいです。プロフィールページへのリンクは入れないでください。\n\n==== Social Network\n\nSocial Network グループ内のフィールドには\n公開プロフィールページヘの URL を入力してください。\nブログ上での表示方法はテーマの設定次第です。\n\n== 投稿の管理\n\nはじめて HubPress を利用する際には **Posts** はまだありません。\nブログに投稿をすると、左側に記事のリスト、右側にプレビューの形で表示されます。\n\n=== HubPressで記事を書く\n\nNOTE: もし AsciiDocに馴染みがなければ http://asciidoctor.org/docs/asciidoc-writers-guide/[AsciiDoctor Writer's Guide] で勉強して下さい。\n\nHupPress エディタは左側に AsciiDoc のコード、右側にプレビューを表示します。\n\n==== Blog のタイトルとヘッダー\n\n記事のタイトルは常に AsciiDoc 投稿における Level 1 となります。\nつまり `= Blog Title` により 記事のタイトルを `Blog Title` に設定できます。\n\n記事の保存には `= Blog Title` が１つ必要です。\n\nもし 1st-level のヘッダーを使いたければ代わりに `== First Level Heading` を使ってください。\nネストしたヘッダも同様です。\n\n==== HubPress パラメーター\nHubPress allows you to alter characteristics of each blog post using attributes.\n\n===== カバー画像\n\n記事にカバー画像を追加したい場合 `hp-image` 属性を追加する必要があります。\n\n例:\n[source, asciidoc]\n----\n= Blog Title\n:hp-image: https://github.com/<username>/<repositoryName>/images/a-cover-image.jpg\n----\n\nNOTE: HubPressは`/images`ディレクトリをすべての画像のルートとしているので、あなたがすればよいのは画像のファイル名を記述することだけです。これを踏まえると、あなたは`/covers`というカバー画像を一括で置いておくためのディレクトリをリポジトリに作成するとよいかもしれません。\n一貫性のあるカバー画像の名前付けのおかげで、投稿にカバー画像を掲載するのも簡単にできます。テーマ画像を設定すれば、読者にブログの内容を視覚的に訴えることができます。\n\n現在以下のテーマが投稿のカバー画像をサポートしています:\n\n* Saga\n\n===== 公開日\n\n公開日はデフォルトで記事を作成した日になります。\n`published_at` 属性を設定することにより、公開日を指定することができます。\n\n例:\n[source, asciidoc]\n----\n= Blog Title\n:published_at: 2015-01-31\n----\n\n===== タグとカテゴリ\n\nNOTE: カテゴリはサポートしていません。\n\n`hp-tags` 属性により、タグを複数追加できます。\n\n例:\n[source, asciidoc]\n----\n= Blog Title\n:hp-tags: tag1,tag2,tag3\n----\n\n===== 代替タイトル指定のための :hp-alt-title:\n\n`hp-alt-title` 属性を利用して記事に別名タイトルを指定することが出来ます。\n\nこれはHubPressが生成するHTMLのファイル名になります。\n\nNOTE: *特に日本語のタイトルはそのままではファイル名がおかしくなるので絶対に指定してください。*\n\n例:\n[source, asciidoc]\n----\n= 日本語のタイトル\n:hp-alt-title: My English Title\n----\n\n==== 画像の追加\n\n===== GitHubリポジトリにpushする\n\nGitのコマンドラインやGitアプリを使ってブログ投稿に画像を追加できます。\n\n. 画像を`images`にコミットする\n. ブログ投稿内にAsciiDoc文法に従って:\n\n[source,AsciiDoc]\n----\nimage::<ファイル名>[]\n----\n. See http://asciidoctor.org/docs/asciidoc-writers-guide/ for complex examples of Image syntax.\n\nもし他所にホストした画像(例えばinstagram, 他のGitHubリポジトリ,あるいはその他の画像ホストサイトなど)を埋め込むには、`<ファイル名>`に画像への完全なURLを指定してください。\n\n.Hosted Image Embed\n----\nimage::http://<full path to image>[]\n----\n\n===== 画像のホスト先としてGitHub issueを利用する\n\nひとつのissueにコメントで残していくような方法でブログ用の画像を用意したり、反対にたくさんのissueを作って画像を個別に管理することもできます。あなたにとって、あるいはあなたの組織にそってベストなやり方が選べます。\n5分間のデモビデオを用意してあります。GitHub Issuesなどのクラウドホスティングサービスで画像を埋め込む方法とAsciiDocで画像を取り扱う方法がわかります。\nhttps://www.youtube.com/watch?v=KoaGU91qJv8\n\n==== 動画の埋め込み\n\nHubPressでは、ブログ記事内で簡単な記述で動画を埋め込むことが出来ます。動画への完全なURLは必要ありません。必要なのは動画固有のIDだけです。\n\n```\nvideo::[unique_youtube_video_id][youtube | vimeo]\n```\n\n.YouTube動画の埋め込み\n```\nvideo::KCylB780zSM[youtube]\n```\n\n.Vimeo動画の埋め込み\n```\nvideo::67480300[vimeo]\n```\n\n== HubPressのアップデート\n\nHubPressはGitHubにホストされているので、HubPressのmasterリポジトリから最新の変更をpullするだけでアップデートできます。\n\n初めてですか？次の動画で(コマンドライン操作を必要としない)簡単で正しい方法を学びましょう。(もちろんコマンドラインからでも問題ありません。)\n\nhttps://www.youtube.com/watch?v=KCylB780zSM\n\n== Troubleshooting\n\n何かうまくいかないことがあったら、以下のTipsをご参照ください。\n\n=== Resetting Blog Database on Android\n\nときどきHubPressのLocalのデータベースが公開済みのブログのデータと同期されないことがあります。これはPCからブログを書いて、作業をタブレットに引き継ごうとしたときに発生します。\n\nHubPressはブラウザに結びついたデータベース上で動作しています。デバイスを変更すると、ブラウザも変更されるため、同期がされなくなるということです。\n\nこの問題を解消するためには、設定->(詳細設定)プライバシー->閲覧履歴データを消去するのボタンからキャッシュを選び削除してください。\n\n== Credits\n\nThanks to https://github.com/jaredmorgs[Jared Morgan] for initially tidying up the README you see here, and continuing to be the \"docs guy\" for HubPress.\n\n日本語訳: https://github.com/takkyuuplayer/[takkyuuplayer], https://github.com/hinaloe[hinaloe]\n"
        },
        {
          "name": "README-ko.adoc",
          "type": "blob",
          "size": 6.42578125,
          "content": "= HubPress\n:toc: macro\n:toclevels: 4\n:sectnums:\n\ntoc::[]\n\nHubPress는 GitHub Pages와 http://asciidoctor.org/docs/user-manual/[AsciiDoc] 을 이용해 블로그를 만들 수 있는 무료 오픈 소스 도구입니다.\n\n== HubPress란?\nimage::https://cloud.githubusercontent.com/assets/2006548/23680524/d7cbf68e-038b-11e7-8465-5c70abd852e1.gif[]\n\nHubPress는 쉽게 블로그를 관리할 수 있게 도와주는 웹 애플리케이션입니다. HubPress는 다음과 같은 기능들을 제공합니다:\n\n* 블로그 포스트 작성을 위한 WYSIWYG 에디터.\n* http://asciidoctor.org/docs/user-manual/[AsciiDoc] 을 이용한 컨텐츠 구성.\n* 블로그 컨텐츠를 관리할 수 있는 관리자 콘솔.\n* 블로그 댓글 기능을 지원하는 Disqus 플랫폼.\n* 방문자 활동을 추적할 수 있는 구글 분석기.\n* 각종 테마.\n\n블로그 호스팅은 GitHub Pages 에 의해 제공됩니다.\n\nHubPress를 향상시키기 위한 당신의 노력에 항상 감사드립니다. \nPull Requests는 *언제나* 환영합니다.\n프로젝트에 공헌하기 위한 자세한 방법은 HubPress Knowledgebase 에서 제공하는 https://hubpress.gitbooks.io/hubpress-knowledgebase/content/develop/contribute_pr.html[How do I contribute a PR] 문서를 참조하시기 바랍니다.\n\n== 브라우저 호환성\n\nHubPress는 Chrome Desktop, Firefox Desktop, 안드로이드용 Chrome 과 호환됩니다.\n\n== 시작하기\n\n=== 저장소 Fork\n\n당신의 GitHub 계정에서 이 저장소(repository)에 대한 복사본을 만들려면 Fork 아이콘 image:http://hubpress.io/img/fork-icon.png[Fork,80]을 클릭하세요.\n\n=== 정확한 브랜치 설정\n\n주 의: GitHub 브랜치 설정은 중요합니다. 잘못된 브랜치 설정시 HubPress 에 처음 로그인할 때 문제가 발생할 수 있습니다.\n\n아래 2개 섹션을 *자세히* 읽은 다음, 브랜치를 선택 또는 `config.json` 파일을 편집하기 바랍니다.\n\n==== GitHub Pages 도메인을 다른 프로젝트에 사용하고 있지 않은 경우\ngithub.io Pages 도메인을 사용하지 않고 있는 상태라면 이 도메인을 이용해 HubPress 를 빠르게 설정할 수 있습니다. \n\nHubPress를 배포하기 위해 필요한 몇가지 절차만 마치면 HubPress를 이용한 블로그 서비스를 바로 시작할 수 있습니다.\n\nIMPORTANT: 현재 다른 프로젝트를 위해 `[username].github.io` GitHub Pages 도메인을 사용 중이거나, 커스텀 도메인 네임을 사용하고 싶다면 다음 섹션으로 건너뛰세요.\n\n. 당신의 저장소 이름을 `<username>.github.io` 로 변경합니다.\n\n. `hubpress/config.json` 파일의 값들을 설정합니다.\n+\nimage:http://hubpress.io/img/edit-config.png[Edit config]\n+\n아래의 파라미터들은 필수 항목입니다:\n+\n* `username`, 당신의 GitHub 사용자 이름. 예를 들면, `janesmith`.\n* `repositoryName`, fork한 저장소의 이름. 예를 들면, `janesmith.github.io`.\n. 변경사항을 Commit 한 뒤, 브라우저에서 `https://janesmith.github.io/` GitHub Pages 도메인을 입력하세요.\n. HubPress를 제대로 설정하였다면 아래의 화면이 나타날 것입니다.\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n==== 커스텀 도메인을 사용하고 싶거나 또는 GitHub Pages 도메인을 사용 중인 경우\n\n만약 커스텀 도메인을 사용하고 싶거나, 다른 프로젝트에서 GitHub Pages 도메인을 사용하고 있는 경우라면 추가적인 설정이 필요한데, 그것은 GitHub Pages 사이트의 서브 도메인으로 블로그를 설정하는 것입니다.\n\n. 저장소(repository) 설정에서 default branch 를 `gh-pages`로 설정합니다. :\n+\nimage::https://cloud.githubusercontent.com/assets/8563047/13872457/28d53c9a-ed2e-11e5-9d13-65f5bf2cbbf9.png[Settings gh-pages, 400]\n. 저장소 브랜치를 `gh-pages`로 변경합니다.\n+\nimage:http://hubpress.io/img/switch-gh-pages.png[Install complete,300]\n+\n. `hubpress/config.json` 파일의 값들을 설정합니다.\n+\nimage:http://hubpress.io/img/edit-config-gh-pages.png[Edit config]\n+\n아래의 파라미터들은 필수 항목입니다 :\n+\n* `username`, 당신의 GitHub 사용자 이름. 예를 들면, `janesmith`.\n* `repositoryName`, fork한 저장소의 이름. 예를 들면, `janesmith.github.io`.\n. 변경사항을 Commit 한 뒤, 브라우저에서 `https://janesmith.github.io/<repositoryName>/` GitHub Pages 도메인을 입력하세요.\n. HubPress를 제대로 설정하였다면 아래의 화면이 나타날 것입니다.\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n== 문제 해결하기\n\n위의 설명을 따라 HubPress 를 설치/설정했는데도 로그인 화면이 나오지 않은 경우, 위의 설명들을 다시 한번 주의깊게 읽어보시길 바랍니다.\n\n이 문제는 주로 잘못된 브랜치 설정때문에 발생하기 때문에 HubPress 를 시작하기 전에 이 부분부터 확인해보시길 바랍니다.\n\nIMPORTANT: HubPress 에 처음 로그인 할 때 발생하는 대부분의 문제는 잘못된 설정때문에 발생합니다.\n\n설정 과정을 다시 한번 확인했음에도 불구하고, 여전히 문제를 해결하지 못했다면 우선 https://hubpress.gitbooks.io/hubpress-knowledgebase/content/[HubPress Knowledgebase] 를 참조하여 이와 유사한 문제가 있는지 검색해보세요.\n\n만약 Knowledgebase 에서도 해결책을 찾지 못했다면, https://hubpressio.slack.com[HubPress Slack] 에 접속하여 #general 채널에 관련된 이슈를 보고해주시기 바랍니다.\n\n== 블로그 시작하기\n당신은 이제 HubPress를 성공적으로 설정하였으며, 소셜 네트워크 정보, 각종 테마 등을 적용하여 자신만의 특색있는 블로그를 만들 수 있습니다.\n\nHubPress 사용법에 대한 추가 정보는 https://hubpress.gitbooks.io/hubpress-knowledgebase/content/[HubPress Knowledgebase] 에서 얻을 수 있습니다.\n\n== HubPress 팀\n\n코드 작성 http://github.com/anthonny[Anthonny Quérouil] (Twitter - http://twitter.com/anthonny_q[@anthonny_q]).\n\n영문 문서 http://github.com/jaredmorgs[Jared Morgan]  (Twitter - http://twitter.com/jaredmorgs[@jaredmorgs]).\n\n한글 문서 번역\n\n* https://github.com/dakeshi[sangjoon moon].\n\n== 프로젝트 후원하기 \n\nHubPress 는 :beer:, :coffee:, :pizza: 의 도움으로 운영됩니다.\n\nHubPress Settings 메뉴에 있는 donation 메뉴를 클릭해서 감사함을 전하세요: 여러분의 성원에 항상 감사드립니다.\n"
        },
        {
          "name": "README-pt.adoc",
          "type": "blob",
          "size": 12.4453125,
          "content": "= HubPress\n\n:toc:\n\n== O que é o Hubpress?\nimage::http://hubpress.io/img/editor.png[]\n\nHubPress é uma ferramenta de código aberto, que é usada para construir um blog, utilizando o GitHub Pages e o AsciiDoc.\n\nCriado e mantido por http://github.com/anthonny[Anthonny Quérouil] (twitter http://twitter.com/anthonny_q[@anthonny_q]).\n\nNOTA: Embora o Hubpress pareça ter todas as funcionalidades, atualmente ele está em Preview (ou Tech Preview). Como os erros são inevitáveis, se você encontrar algo que não está funcionando da maneira que acha que deveria, relate o erro para a equipe do projeto que irá analisá-lo o mais rápido possível.\n\nA documentação está evoluindo rapidamente conforme o projeto vem crescendo. Visite essa página regularmente para obter mais informações sobre como usar o HubPress. Se você encontrar um erro na documentação, por favor, notifique o erro. Sua ajuda para melhorar todos os aspectos do HubPress é extremamente apreciada e qualquer Pull Request é *sempre* bem vindo.\n\n== Compatibilidade com os Navegadores\n\nHubPress é compatível com a versão Chrome Desktop, Firefox Desktop e Chrome para Android.\n\nChrome Beta para Android será compatível em breve, não é totalmente suportado por alguns erros no IndexedDB, sendo assim a visualização utiliza apenas o Chrome para Android.\n\n== Introdução\n\n=== Instalação\n\n==== Faça um fork do repositório\nClique no ícone de Fork image:http://hubpress.io/img/fork-icon.png[Fork,80] para criar uma cópia deste repositório com a sua conta do GitHub.\n\n==== Use o domínio github.io\n\nSe você nunca utilizou o domínio GitHub Pages, siga estes passos para instalar rapidamente o HubPress. Neste método, apenas alguns passos são necessários para instalar o HubPress e deixá-lo pronto para o uso.\n\nIMPORTANTE: Se você está utilizando o seu domínio `usuario.github.io` GitHub Pages para outro projeto, ou se você deseja usar um domínio de nome personalizado, pule para o próximo procedimento para ter as próximas instruções.\n\n. Renomeie o seu repositório para `<usuario>.github.io`\n\n. Insira os valores no `hubpress/config.json`\n+\nimage:http://hubpress.io/img/edit-config.png[Edit config]\n+\nOs próximos parâmetros são obrigatórios :\n+\n* `username`, o seu nome de usuário no GitHub,\n* `repositoryName`, o novo nome do Fork do repositório, `<usuario>.github.io`.\n. Confirme as mudanças, e abra o domínio GitHub Pages: `http://<usuario>.github.io/`.\n. A seguinte tela indicará que você configurou corretamente o HubPress.\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n==== Usar um domínio personalizado ou um domínio GitHub Page que está sendo usado.\n\nSe você deseja ter o seu blog em um domínio personalizado, ou se você já está usando o domínio do GitHub Pages para hospedar outro projeto, uma configuração extra é necessária.\n\n. Nas configurações do repositório, defina a branch padrão para `gh-pages`:\n+\nimage::https://cloud.githubusercontent.com/assets/8563047/13872457/28d53c9a-ed2e-11e5-9d13-65f5bf2cbbf9.png[Settings gh-pages,400]\n. Mude o seu repositório para a branch *gh-pages*.\n+\nimage:http://hubpress.io/img/switch-gh-pages.png[Install complete,300]\n+\n. Defina os valores necessários no `hubpress/config.json\n+\nimage:http://hubpress.io/img/edit-config-gh-pages.png[Edit config]\n+\nOs seguintes parâmetros são obrigatórios :\n+\n* `username`, o seu nome de usuário no GitHub,\n* `repositoryName`, o novo nome do Fork do repositório, `<usuario>.github.io`.\n. Confirme as mudanças, e abra o domínio GitHub Pages: `http://<usuario>.github.io/`.\n. A seguinte tela indicará que você configurou corretamente o HubPress.\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n== Console de Administração\n\nO Console de Administração está disponível no */hubpress*\n\n* `http://<usuario>.github.io/hubpress/` para blogs publicados no GitHub, o\n* `http://<usuario>.github.io/<repositoryName>/hubpress/` para blogs publicados em outros domínios.\n\n=== Logando no Console de Administração\n\nimage:http://hubpress.io/img/login.png[Install complete,300]\n\nEntre com as suas credenciais do GitHub para logar no HubPress Admin.\n\nUma vez autenticado, um token será criado para futuras chamadas do HubPress a API do GitHub.\n\nIsso é sincronizado em todas as sessões do HubPress. Se você abrir o Console de Administração no seu PC e depois no seu Tablet, o token será aplicado em todos os dispositivos.\n\n=== Página de Configuração\n\nVocê pode configurar as opções básicas do blog (como o CNAME e a paginação) e as contas de redes sociais que você deseja conectar ao seu blog.\n\n==== Meta\n\nEssa aba contém a informação básica configurada no arquivo `/hubpress/config.json`.\n\nOs seguintes campos são configuráveis:\n\nGit CNAME::\nPermite especificar um nome de domínio personalizado para o seu blog. Veja https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/[Setting Up A Custom Domain] para obter instruções sobre como configurar um CNAME para o seu blog.\nLive Preview Render Delay::\nControla o tempo de espera do renderizador demora para atualizar, em milisegundos. Para aquelas que teclam muito rápido, a opção fica em torno de `2000` (dois segundos) o que irá resultar em uma experiência mais suave porque o live preview não será atualizado tão rapidamente. Alterando essa opção para abaixo de `2000` resultará em um live preview mais rápido, mas pode resultar em um delay do cursor enquanto é feita a digitação.\n\n==== Site\n\n===== Título e Descrição\n\nOs campos *Título* e *Descrição* permitem colocar um nome ao seu blog, e uma breve descrição para que os seus visitantes possam ter idéia do que esperar dos posts do blog.\n\nOs campos *Logo* e *Cover Image* podem ser usados da seguinte maneira:\n\n* Um link HTML para um serviço de hospedagem de imagens, por exemplo o Gravatar.\n* Um link de uma imagem commitada para o diretório /images do repositório do seu blog.\n\nNOTA: Veja na seção `/images/README.adoc` mais informações de como utilizar imagens no seu blog.\n\n===== Temas\n\nO campo *Tema* permite selecionar entre uma lista de temas armazenados no diretório `/themes`.\n\n===== Google Analytics\n\nO campo *Google Analytics* utiliza o ID criado pelo Google Analytics para identificar o seu blog, por exemplo: `UA-1234567-1`.\n\n===== Disqus Shortname\n\nO campos *Disqus shortname* utiliza a URL do seu Disqus/shortname que é criado quando você registra um novo site no Disqus. Só o shortname é necessário e não um link para o seu perfil pessoal.\n\n==== Redes Sociais\n\nTodos os campos deste grupo requerem as URLs completas do seu perfil público. A maneira que estes valores aparecem dependendem do tema selecionado.\n\n== Gestão de entrada\n\nQuando você entrar no HubPress pela primeira vez, a aba *Posts* estará vazia. A medida que você criar mais posts para o seu blog, a página irá crescer com a lista de posts a sua esquerda, a prévia do post a direita.\n\n=== Administrando Posts\n\nNOTA: Se você nunca utilizou o AsciiDoc para criar conteúdo, existe um http://asciidoctor.org/docs/asciidoc-writers-guide/[Guia do AsciiDoctor] que deve ser lido para melhor entendimento. O guia possui exemplos básicos e avançados que podem ser usados diretamente.\n\nO editor do HubPress mostra o código do AsciiDoc do lado esquerdo, e o live preview do lado direito.\n\n===== Título do Blog e Cabeçalhos\n\nO título do blog deve ser sempre o primeiro nível de entrada no post do AsciiDoc. Por exemplo, `= Título do blog` estabelece o nome do post como `Título do blog`.\n\nSe você deseja um cabeçalho de primeiro nível, você deve usar o `== Cabeçalho de primeiro nível`. Os próximos níveis de cabeçalho utilizam as respectivas sintaxes (`===`, `====`, ...).\n\n==== Parâmetros do HubPress\n\nO HubPress permite modificar as características de cada entrada do blog através de atributos.\n\n===== :hp-image: para Imagens de cover do post\n\nSe deseja inserir uma imagem cover ao post do blog, deve utilizar o atributo `hp-image`.\n\n. :hp-image: Exemplo:\n[source, asciidoc]\n----\n= Blog Title\n:hp-image: a-cover-image.jpg\n----\n\nNOTA: O diretório padrão `/images` é a raíz para todas as imagens, você só precisa declarar o nome da imagem. Por causa disso, você deve considerar criar um diretório `/covers` no seu repositório para guardar as imagens de cover juntas. Utilizando nomes consistentes ficará mais fácil de aplicá-las aos posts. Se você tem uma tema para o seu blog, permitirá que os leitores tenham uma idéia visual sobre o que se trata o post.\n\nOs temas que atualmente suportam imagens de cover no post são:\n\n* Saga\n\n==== :published_at: para alterar a data de publicação\n\nPor padrão, a data de publicação do post é a data em que ele foi criado. Você pode forçar a data de publicação adicionando o atributo `published_at`.\n\n. :published_at: Exemplo :\n[source, asciidoc]\n----\n= Blog Title\n:published_at: 2015-01-31\n----\n\n==== :hp-tags: Tags\n\nNOTA: Categorias não são suportadas.\n\nAdicione tags utilizando o atributo `hp-tags`.\n\n. :hp-tags: Exemplo:\n[source, asciidoc]\n----\n= Blog Title\n:hp-tags: HubPress, Blog, Open Source,\n----\n\n==== :hp-alt-title: para indicar um Título Alternativo\n\nEspecifique um título alternativo através do atributo `hp-alt-title`.\n\nO título alternativo é utilizado no lugar do nome do arquivo HTML gerado pelo HubPress.\n\n. :hp-alt-title: Exemplo :\n[source, asciidoc]\n----\n= 大千世界\n:hp-alt-title: Meu Título Português\n----\n\n==== Adicionando Imagens\n\n===== Use o diretório `/images` no seu repositório\n\n\nVocê pode usar o console do Git ou o app do Git para adicionar imagens ao seu post:\n\n. Commite a imagem no diretório `/images`.\n. No seu post, utilize a sintaxe básica do AsciiDoc:\n+\n[source,AsciiDoc]\n----\nimage::<filename>[]\n----\n. Veja http://asciidoctor.org/docs/asciidoc-writers-guide/ para ver mais exemplos sobre a sintaxe de imagens.\n\nSe você está integrando imagens publicadas em outro domínio -- como instagram, outros repositórios do GitHub, ou qualquer serviço de imagens -- simplesmente indique a URL completa no lugar do `<filename>`.\n\n.Inserindo imagens de outros domínios\n----\nimage::http://<full path to image>[]\n----\n\n===== Utilizando os issues do GitHub para publicar imagens\n\nVocê pode usar um issue único como um container de imagem para um post do blog, contendo vários issues carregando várias imagens como comentários. Como alternativa você pode usar vários issues para guardar imagens individuais.\n\nO que se funcionar melhor para você, e o seu estilo de organização.\n\nAssista este vídeo de cinco minutos que demonstra como utilizar o GitHub Issues e o serviço do Cloud Hosting sobre como incoporar alvos, e algumas dicas a mais sobre a sintaxe de imagem do AsciiDoc.\n\nvideo::KoaGU91qJv8[youtube]\n\n==== Inserindo vídeos\n\nO HubPress permite inserir vídeos através de uma sintaxe simples. Não é necessário indicar a URL completa, somente indicar o ID único do vídeo como o exemplo.\n\n```\nvideo::[id_unico_youtube][youtube | vimeo]\n```\n\n.Insertando vídeo de YouTube\n```\nvideo::KCylB780zSM[youtube]\n```\n\n.Insertando vídeo de Vimeo\n```\nvideo::67480300[vimeo]\n```\n\n== Atualizando o HubPress\n\n\nComo o HubPress está no GitHub, você pode atualizar as últimas novidades fazendo um pull do repositório master do HubPress.\n\nPara aprender a fazê-lo corretamente, pode ver o seguinte vídeo (há certas observações a fazer quando na primeira vez que for fazer um pull).\n\nvideo::KCylB780zSM[youtube]\n\nhttps://www.youtube.com/watch?v=KCylB780zSM[Atualizando o HubPress]\n\n== Solução de problemas\n\nSe algo não está funcionando como espera, alguns destas dicas podem te ajudar.\n\n=== Restabelecimento da Base de dados do Blog no Android.\n\nAs vezes, a base de dados local do HubPress se dessincroniza com o blog. Isso pode acontecer por estar editando seu blog no seu PC, e logo depois, transferir ao seu Tablet.\n\nO HubPress trabalha com uma base de dados local específica no seu navegador, por isso, se você alterar o dispositivo -- e portanto, alterar o navegador -- se perde a sincronização entre os navegadores.\n\nPara retornar ao blog publicado do HubPress, é necessário apagar o cache do navegador e os seus dados no Ajustes > Aplicações. Depois disso, o HubPress irá reconstruir a base de dados local, e refletirá no estado do blog no GitHub.\n\n== Créditos\n\nObrigado a https://github.com/jaredmorgs[Jared Morgan] por colocar em ordem o arquivo README encontrado aqui, e seguir sendo o \"Documentador\" do HubPress.\nObrigado ao https://github.com/takkyuuplayer[takkyuuplayer], https://github.com/hinaloe[hinaloe] pela tradução do README para Japonês.\n"
        },
        {
          "name": "README-zh.adoc",
          "type": "blob",
          "size": 8.8525390625,
          "content": "= HubPress\n\n:toc:\n\n== 什么是HubPress?\nimage::http://hubpress.io/img/editor.png[]\n\nHubPress 是一款在Github 上基于 AsciiDoc 建立个人博客的优秀的开源工具。\n\n由 https://github.com/anthonny[Anthonny Quérouil] (twitter https://twitter.com/anthonny_q[@anthonny_q]) 开发和维护.\n\nNOTE: HubPress目前是预览版本，如果您发现了Bug请及时告知我们.\n\n在项目不断开发升级的过程中说明文档也会很快的更新，请定期查询以便得到最新说明。如果你发现了一些问题，请作为 bug 提交，我们感谢你在每一个方面的帮助，而且将会*永远*期待您的合作（pull requests）。\n\n== 浏览器兼容性\n\nHubPress 目前兼容 Chrome 桌面版， Firefox 桌面版和 Chrome Android 版.\n\nChrome Beta 的 Android 版将会很快兼容, 实际上是因为现在使用 IndexedDB 遇到了一些Bug, 预览的话请使用 Chrome 的 Android版。\n\n== 快速上手\n\n=== 安装\n==== Fork the repository\n\n点击Fork图标 image:http://hubpress.io/img/fork-icon.png[Fork,80] 复制这个 repository 到你的 Github 账号下.\n\n==== 使用github.io的域名\n\n如果你从来都没用过 Github 的个人静态主页，你可以通过以下方法来快速建立 HubPress 博客。只需要一些简单的步骤就可以实现博客的配置发布。\n\nIMPORTANT: 如果你现在你的 `username.github.io` 的个人主页用于其他项目，或者你想用其他域名，请跳过以下步骤。\n\n. 把repository重命名为 `<username>.github.io`\n\n. 更改配置文件 `hubpress/config.json`\n+\nimage:http://hubpress.io/img/edit-config.png[Edit config]\n+\n以下的参数是必须的 :\n+\n* `username`, 是你的GitHub用户名（username）。\n* `repositoryName`, 是你的folk的repository的名字， 如： `<username>.github.io`。\n. Commit所有更改, 然后打开你的GitHub主页:  `https://<username>.github.io/`.\n. 如果出现了这样的画面就说明你配置成功了。\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n==== 使用其他域名或者当GitHub主页已被占用\n\n如果你想让你的博客在自定义域名上使用，或者你已经用Github主页配置其他项目了，你需要做一些额外的配置。\n\n. 在repository的settings选项中, 把默认branch设为 `gh-pages` :\n+\nimage::https://cloud.githubusercontent.com/assets/8563047/13872457/28d53c9a-ed2e-11e5-9d13-65f5bf2cbbf9.png[Settings gh-pages,400]\n. 现在设定当前repository的branch为 *gh-pages*\n+\nimage:http://hubpress.io/img/switch-gh-pages.png[Install complete,300]\n+\n. 更新配置文件 `hubpress/config.json`\n+\nimage:http://hubpress.io/img/edit-config-gh-pages.png[Edit config]\n+\n以下的参数是必须的：\n+\n* `username`, 是你的GitHub用户名（username）。\n* `repositoryName`, 是你的folk的repository的名字， 如： `<username>.github.io`。\n. Commit所有更改, 然后打开你的GitHub主页:  `https://<username>.github.io/<repositoryName>`.\n. 如果出现了这样的画面就说明你配置成功了。\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n== 管理后台\n\n你可以通过 */hubpress* 进入管理后台\n\n* `https://<username>.github.io/hubpress/` 用于GitHub主页的博客, 或者\n* `https://<username>.github.io/<repositoryName>/hubpress/` 用于其他域名搭建的博客.\n\n=== 登陆管理后台\n\nimage:http://hubpress.io/img/login.png[Install complete,300]\n\n输入你的GitHub账号密码来登陆HubPress的后台.\n\n你登陆之后，一个个人的token（标记）会建立，在之后Hubpress调用Github API时将会用到。\n\n这将同步用于Hubpress的所有session（会话）如你先在电脑上登录管理后台，然后在平板上登陆，所有的设备上都会使用这一个相同的token。\n\n=== 设置\n\n你可以调整一下基础的设置(如CNAME和分页)和一些你希望链接到博客的社交账号。\n\n==== 基本设置\n\n这部分包含一些配置 `/hubpress/config.json` 文件的基本信息.\n\n以下选项可供更改：\n\nGit CNAME::\n你可以更改*Git CNAME*给你的博客设定一个自己的域名，详细参见 https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/[Github官方] 上设定CNAME的步骤。\nLive Preview Render Delay（刷新延迟）::\n控制实时刷新的频率，以milliseconds（毫秒）计。对于打字快的人来说，设定到2000（2秒）就可以得到比较流畅的编辑体验，实时预览也不至于更新太快。虽然设定到2000以下可以更新的更快，但是可能在打字时导致游标的一些延迟。\n\n==== 网站设置\n\n===== 站名和介绍\n\n*Title*（站名）和*Description*（介绍）项允许你设定自己的博客名，并且给出一个关于博客内容大致的介绍。\n\n*Logo* and *Cover Image*（封面图片）的配置方法如下:\n\n* 可以用HTML链接到一个图片托管服务，比如 http://www.gravatar.com[gravatar]。\n* 一个路径，指向你repository下的 /image 文件夹内的图片.\n\nNOTE: 请参照`/images/README.adoc` 里的提示来在你的博客中插入图片。\n\n===== 主题风格\n\n*Theme*（主题）可以从 `/themes` 文件夹下的主题中进行选择。你可以通过文件夹的名称进行选择。\n\n===== Google Analytics\n\n*Google Analytics* （谷歌分析） 这里你填入Google Analytics生成的代码。\n\n===== Disqus Shortname\n\n*Disqus shortname* 这里你可以填入Disqus的URL或者shortnamere关联到你在Disqus上注册的站点。你需要填入shortname而不是到你Disqus个人主页的链接。\n\n==== 社交账号\n\n这个组内的所有项都需要填入完整的URL账号以连接你的社交账号主页，这些参数的显示方式根据主题的选择而有所不同。\n\n== 管理博文\n\n当你初次进入Hubpress的时候，*Posts*（博文）一栏是空的。 当你创建博客的时候，左边一栏是博文列表，右边可以实时预览当前编辑的博文。\n\n=== 在HubPress写第一篇博客\n\nNOTE: 如果你从来没有用过AsciiDoc，推荐你首先去 http://asciidoctor.org/docs/asciidoc-writers-guide/[AsciiDoctor Writer's Guide] 上提前感受一下。那里有各种基础和进阶的使用例子供你使用。\n\nHubPress编辑器的左边是AsciiDoc代码,右边是实时预览。\n\n==== 博文名和标题\n\n博文名（blog title）在AsciiDoc里是1级标题。比如说： `= Blog Title` 就是设定博文名为 `Blog Title`.\n\n要想保存编辑的内容，博文名是必须的。\n\n如果你想使用1级大标题，你可以使用如 `== First Level Heading` 来创建各级不同的标题（由“＝”的数量决定）。\n\n==== HubPress参数\n\nHubPress 允许你通过参数改变每篇博文的设置。\n\n===== :hp-image: 博文的封面图片\n\n如果你想改变某篇博文的封面图片，请设置 `hp-image` 参数。\n\n. :hp-image: 例子\n[source, asciidoc]\n----\n= Blog Title\n:hp-image: https://<repositoryName>/images/a-cover-image.jpg\n----\n\nNOTE: Hubpress默认的图片根文件夹为 `/images` ,所以只需要指定图片的名字就可以。你可以在repository下建立一个 `/covers` 文件夹来归档所有的封面图片。保持封面图片命名方法的一致可以让你的管理更方便。此外，在向读者提供关于博文的直观信息上，封面图片是一个很好的选择。\n\n现在支持在博文中插入封面图片的主题有:\n\n* Saga\n\n===== :published_at: 改变发布日期\n\n\n发布日期默认是你创建博文的日期，你可以通过设定添加 `:published_at:` 参数来强制改变它。\n\n. :published_at: 例子\n[source, asciidoc]\n----\n= Blog Title\n:published_at: 2015-01-31\n----\n\n===== :hp-tags: 元数据标签\n\nNOTE: 这里不支持 Categories（类别）标签\n\nAdd tags by using the `hp-tags` attribute.\n通过使用 `hp-tags` 参数来增加标签\n\n. :hp-tags: 例子\n[source, asciidoc]\n----\n= Blog Title\n:hp-tags: HubPress, Blog, Open Source,\n----\n\n===== :hp-alt-title: 设定第二名称\n\n通过 `hp-alt-title` 给博文指定一个第二名称。\n\nHubpress就可以用该名称来作为文件名创建博文，从而避免因为其他语言导致的问题。\n\n. :hp-alt-title: 例子\n[source, asciidoc]\n----\n= 大千世界\n:hp-alt-title: My English Title\n----\n== 故障解决\n\n如果出现了问题，下面的一些建议可能会有用：\n\n=== 在Android上重新建立博客数据库\n\n有时Hubpress可能不能及时更新你发布的博文，这可能是因为你在PC上写了博文，然后又在平板上更改造成的。\n\nHubPress使用的浏览器原生的数据库，所以如果你频繁的转换使用设备，浏览器之间的同步可能就会出现问题。\n\n如果暂时不能查看HubPress刚发布的博客，你可以在 Settings > Apps 里清空浏览器的缓存和数据，让浏览器就会重置数据库，以显示最新博文。\n\n== 鸣谢\n\nThanks to https://github.com/jaredmorgs[Jared Morgan] for initially tidying up the README you see here, and continuing to be the \"docs guy\" for HubPress.\n\n中文： https://github.com/hanwencheng[Hanwen Cheng]\n"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 5.7177734375,
          "content": "= HubPress\n:toc: macro\n:toclevels: 4\n:sectnums:\n\ntoc::[]\n\nA free, open source tool you can use to build a blog using GitHub Pages and http://asciidoctor.org/docs/user-manual/[AsciiDoc].\n\n\nWARNING: The project is not actively maintained anymore.\n\n== What Is HubPress?\nimage::https://cloud.githubusercontent.com/assets/2006548/23680524/d7cbf68e-038b-11e7-8465-5c70abd852e1.gif[]\n\nHubPress is a web application that makes it easy for you to maintain a blog. It provides the following features:\n\n* WYSIWYG editor for writing blog posts.\n* Backed by the power of http://asciidoctor.org/docs/user-manual/[AsciiDoc markup] for tight control of content presentation to your requirements.\n* Administration console to customise many aspect of your blog's content.\n* Disqus integration for blog comments.\n* Google Analytics integration to track visitor activity.\n* A number of different themes shipped with the product, ready to use.\n\nHosting for your blog is provided by GitHub Pages.\n\nYour help with improving every aspect of HubPress is greatly appreciated.\nPull Requests are *always* welcome.\nSee https://hubpress.gitbooks.io/hubpress-knowledgebase/content/develop/contribute_pr.html[How do I contribute a PR] on the HubPress Knowledgebase to learn more about contributing.\n\n== Browser compatibility\n\nHubPress is compatible with Chrome Desktop, Firefox Desktop, and Chrome for Android.\n\n== Getting started\n\n=== Fork the repository\n\nClick the Fork icon image:http://hubpress.io/img/fork-icon.png[Fork,80] to create a copy of this repository within your GitHub account.\n\n=== Configure the correct branch\n\nIMPORTANT: The GitHub branch you select is important, and choosing the incorrect one will cause issues with logging onto HubPress for the first time.\n\nRead the next two sections *carefully* *_before_* choosing which branch and `config.json` file to edit.\n\n==== I am not using my GitHub Pages domain for any other project\n\nIf you are not using your github.io Pages domain you can use it to quickly set up HubPress.\n\nWith this method, only a few steps are required to get HubPress deployed and ready for use.\n\nIMPORTANT: If you are currently using your `[username].github.io` GitHub Pages domain for another project, or if you want to use a custom domain name, skip to the next procedure for instructions.\n\n. Rename your repository to `<username>.github.io`\n\n. Set values in `hubpress/config.json`\n+\nimage:http://hubpress.io/img/edit-config.png[Edit config]\n+\nThe following parameters are mandatory:\n+\n* `username`, which is your GitHub user name. For example `janesmith`.\n* `repositoryName`, which is the new name of the repository fork using the pattern `janesmith.github.io`.\n. Commit the changes, and open the GitHub Pages domain:  `https://janesmith.github.io/`.\n. The following screen indicates you have correctly configured HubPress\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n==== I am using my GitHub Pages domain already, or I want to use a custom domain\n\nIf you want your blog to be available on a custom domain, or you are _already using your GitHub Pages domain_ to host another project, some extra configuration is required.\n\nYou need to set your blog up on a sub-domain of your GitHub Pages site.\n\n. In the repository settings, set the default branch to `gh-pages`:\n+\nimage::https://cloud.githubusercontent.com/assets/8563047/13872457/28d53c9a-ed2e-11e5-9d13-65f5bf2cbbf9.png[Settings gh-pages, 400]\n. Switch your repository to the `gh-pages` branch.\n+\nimage:http://hubpress.io/img/switch-gh-pages.png[Install complete,300]\n+\n. Set the required values in `hubpress/config.json`\n+\nimage:http://hubpress.io/img/edit-config-gh-pages.png[Edit config]\n+\nThe following parameters are mandatory:\n+\n* `username`, which is your GitHub user name. For example `janesmith`.\n* `repositoryName`, which is the new name of the repository fork. For example, `janesmith.github.io`.\n. Commit the changes, and open the GitHub Pages domain:  `https://janesmith.github.io/<repositoryName>/`.\n. The following screen indicates you have correctly configured HubPress\n+\nimage:http://hubpress.io/img/home-install.png[Install complete,300]\n\n== Getting first-run help\n\nIf you can't get past the login screen, re-read the instructions above.\nYou most likely have configured the wrong branch and will need to fix this before you can begin using HubPress.\n\nIMPORTANT: Misconfiguration is the most common issue for folks when trying to log onto HubPress for the first time.\n\nIf you have double-checked the setup procedure, you can move to the next step: support.\n\nFirst check https://hubpress.gitbooks.io/hubpress-knowledgebase/content/[HubPress Knowledgebase] and use the search function to see if your problem has already been documented as an article.\n\nIf your issue is not covered by the Knowledgebase, join https://hubpressio.slack.com[HubPress Slack] and report the issue in #general.\n\n== How do I start blogging?\n\nNow you have successfully configured HubPress, you can customise it by adding social network information, experiment with different themes, and make your HubPress blog your own.\n\n\nYou can find out how to use HubPress by reading the https://hubpress.gitbooks.io/hubpress-knowledgebase/content/[HubPress Knowledgebase], which is hosted by the team at https://gitbook.com[GitBook.com].\n\n== The HubPress team\n\nCode by http://github.com/anthonny[Anthonny Quérouil] (Twitter - http://twitter.com/anthonny_q[@anthonny_q]).\n\nEnglish docs by http://github.com/jaredmorgs[Jared Morgan]  (Twitter - http://twitter.com/jaredmorgs[@jaredmorgs]).\n\nTranslations (Japanese) by:\n\n* https://github.com/takkyuuplayer[takkyuuplayer],\n* https://github.com/hinaloe[hinaloe].\n\n== Supporting the project\n\nHubPress is powered by :beer:, :coffee: and :pizza:.\n\nUse the donation options in the HubPress Settings menu to say thanks: we really appreciate it.\n"
        },
        {
          "name": "Writers_Guide.adoc",
          "type": "blob",
          "size": 7.1484375,
          "content": ":toc: macro\n:toclevels: 4\n:sectnums:\n\n= Writers' Guide\n\nThis guide will help you write your first blog post using basic AsciiDoc syntax.\nIt also describes blog paramters used to control aspects of post sort order, and category tags.\nRead this guide if you are new to writing AsciiDoc mark-up, or have not used HubPress to create a blog post before.\n\nNOTE: If you can write a text email, you can create great blog posts with AsciiDoc and HubPress.\n\ntoc::[]\n\n== About AsciiDoc\n\nIf you have never used AsciiDoc before to write content, the http://asciidoctor.org/docs/asciidoc-writers-guide/[AsciiDoctor Writer's Guide] should be your first stop in your journey.\nThe guide provides both basic and advanced mark-up examples for you to copy and use.\n\nHubPress Editor displays the AsciiDoc code on the left, and the live preview on the right.\n\n== Blog Title and Headings\n\nHubPress uses the Asciidoctor `Article` container to structure posts.\n\nThe blog title is always Level 1 in an AsciiDoc post. For example, `= Blog Title` sets the name of the Blog Post to `Blog Title` when published.\n\nIMPORTANT: A `= Blog Title` is required for the blog post to save. This is one of the most common support cases raised on the issue tracker.\n\nIf you want a first-level heading you use `== First Level Heading`, and so on to create other nested headings.\n\n== HubPress Parameters\n\nHubPress allows you to alter characteristics of each blog post using attributes.\n\n=== :hp-image: for Blog Post Cover Images\n\nIf you want to add a cover image to your Blog Post, set the `hp-image` attribute.\n\n.:hp-image: Example\n[source, asciidoc]\n----\n= Blog Title\n:hp-image: a-cover-image.jpg\n----\n\nNOTE: Because HubPress defaults the `/images` directory as the root for all images, you only need to declare the filename of the image. Because of this, you may want to consider creating a `/covers` directory in your repository to group the cover images together.\nNaming the cover images consistently will make it very easy to apply to every post. If you have a theme to your blog, this allows your readers to get a visual clue as to what the post is about.\n\nThe themes that currently support blog post cover images are:\n\n* Saga\n\n=== :published_at: to Alter the Publication Date\n\nBy default, the publication date is the date you created the Blog Post. You can force the publication date by adding the `:published_at:` attribute.\n\n.:published_at: Example\n[source, asciidoc]\n----\n= Blog Title\n:published_at: 2015-01-31\n----\n\n=== :hp-tags: for Metadata Tags\n\nNOTE: Categories are not supported.\n\nAdd tags by using the `hp-tags` attribute.\n\n.:hp-tags: Example\n[source, asciidoc]\n----\n= Blog Title\n:hp-tags: HubPress, Blog, Open Source,\n----\n\n=== :hp-alt-title: to Specify an Alternative Title\n\nSpecify an alternative title using the `hp-alt-title` attribute.\n\nThe alternative title is used instead of the HTML file name generated by HubPress.\n\n.:hp-alt-title: Example\n[source, asciidoc]\n----\n= 大千世界\n:hp-alt-title: My English Title\n----\n\n=== :compat-mode: to Control Legacy AsciiDoc Markup Patterns\n\nSpecify how code samples containing AsciiDoc markup patterns are processed. Some code samples may contain delimited asterix symbols that are interpreted like processing instructions by Asciidoctor.\n\nIf you find that your code samples are not displaying correctly, specify `:compat-mode: true` to disable processing in code blocks.\n\n.:compat-mode: Example\n[source, asciidoc]\n----\n= Blog Title\n:compat mode: true\n    `egrep '\\(\\ *\\)\\ *\\{' /var/log/nginx/*`\n----\n\nIf `:compat-mode:` was not specified here, the code sample would render like this:\n\n    egrep '\\(\\ \\)\\ *\\{' /var/log/nginx/\n\nFor more information about `:compat-mode:`, see the http://asciidoctor.org/docs/migration/#compat-mode[AsciiDoctor Migration Guide].\n\n[[Adding_Images]]\n== Adding Images\n\n=== Use the /images Directory in Your Repository\n\nYou can use Git command line or a Git app to add images to your blog posts:\n\n. Commit images to the `/images` directory.\n. In your blog post, use the following basic AsciiDoc syntax:\n+\n[source,asciidoc]\n----\nimage::<filename>[]\n----\n. See http://asciidoctor.org/docs/asciidoc-writers-guide/ for complex examples of Image syntax.\n\nIf you are embedding images from a hosted source (such as instagram, another GitHub repository, or any photo hosting site) put the full URL to the image in place of the `<filename>`.\n\n.Hosted Image Embed\n----\nimage::http://<full path to image>[]\n----\n\n=== Use GitHub Issues as an Image Hosting Container\n\nYou can use a single issue as an image container for a blog post containing many issues by uploading multiple images as comments.\nAlternatively, you can use multiple issues to store individual images.\n\nWhatever works best for you, and your organization style.\n\nWatch this five minute video for a demonstration about how to use GitHub Issues and Cloud Hosting services as embed targets, and some bonus tips on using the `image` AsciiDoc syntax.\n\nvideo::KoaGU91qJv8[youtube]\n\n== Embedding Video\n\nHubPress allows you to embed video and audio directly into your blog post by using a quick notation in your blog post.\n\nYou don't need to declare the full URL: all you need is the unique video ID.\n\n```\nvideo::[unique_youtube_video_id][youtube | vimeo]\n```\n\n.YouTube Video Embed\n[source,asciidoc]\n----\nvideo::KCylB780zSM[youtube]\n----\n\n.Vimeo Video Embed\n[source,asciidoc]\n----\nvideo::67480300[vimeo]\n----\n\n== Embedding Audio\n\nWhile YouTube and Vimeo have pre-defined short notations in Asciidoctor, other services like BandCamp or SoundCloud require a block passthrough to be declared.\nBlock passthroughs are described in detail in the http://asciidoctor.org/docs/user-manual/#pass-bl[Asciidoctor User Manual].\n\n.BandCamp Audio Embed\n[source,asciidoc]\n----\n++++\n<iframe style=\"border: 0; width: 350px; height: 470px;\" src=\"//bandcamp.com/EmbeddedPlayer/album=2869458964/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/transparent=true/\" seamless><a href=\"http://mocamborecords.bandcamp.com/album/showdown\">SHOWDOWN by THE MIGHTY MOCAMBOS</a></iframe>\n++++\n----\n\nTIP: The trick with block passthroughs (no matter the type) is to ensure any `src` value does not contain a mixed protocol.\nFor example if the `src` link contained `http` and your blog uses a `https` protocol, the embed would fail.\n\nSome <iframe> elements provided by these sites may include the protocol, and you will need to strip the protocol out when declaring passthrough blocks.\n\nThe source link is essentially an absolute target to the hosted file on the service.\nThe `//` opens the pointer to the file.\nSee https://github.com/HubPress/hubpress.io/issues/136[this issue] which describes the journey to discovering how to embed content other than Vimeo and YouTube content.\n\n== Donations\n\nHubPress is now on https://gratipay.com/hubpress/[Gratipay]!\n\nimage::https://cloud.githubusercontent.com/assets/2006548/12901016/7b09da22-ceb9-11e5-93f7-16ab135b2e2e.png[]\n\nIt's not the only way you can help us, but it is certainly a welcome one. Donations are a great way to show your appreciation for the platform: it inspires us to dedicate extra time away from our families and day jobs to make HubPress an awesome blogging platform for you.\n\nimage::https://cloud.githubusercontent.com/assets/2006548/12901085/cc5ee908-ceb9-11e5-9d8b-c526f081f1e9.png[]\n"
        },
        {
          "name": "_nuxt",
          "type": "tree",
          "content": null
        },
        {
          "name": "hubpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 1.7373046875,
          "content": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>HubPress.io</title>\n  <meta name=\"description\" content=\"\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n  <link href='http://fonts.googleapis.com/css?family=Lato' rel='stylesheet' type='text/css'>\n  <link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>\n\n  <style>\n  body {\n    font-family: 'Open Sans', sans-serif;\n    margin: 0;\n    padding: 0;\n  }\n  .wrapper {\n    position: absolute;\n    top: 50%;\n    margin-top: -260px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n  .container {\n    position: relative;\n    margin: 0 auto;\n    text-align: center;\n    width: 300px;\n  }\n  h1 {\n    color: #e74c3c;\n    margin-bottom: 100px;\n  }\n\n  h1 span {\n    color: #7f8c8d;\n  }\n\n  .button {\n    background-color: #e74c3c;\n    color: #ffffff;\n    width: 300px;\n    margin: 0px auto 60px auto;\n    padding: 10px;\n    border-radius: 10px;\n  }\n  </style>\n</head>\n<body>\n\n  <div class=\"wrapper\">\n    <div class=\"container\">\n\n      <img class=\"logo\" src=\"http://hubpress.io/img/logo.png\" alt=\"Logo HubPress.io\">\n      <h1>Hub<span>Press</span>.io</h1>\n      <p class=\"button\">An awesome blog will be here soon!</p>\n\n      <a href=\"https://twitter.com/HubPressIO\" class=\"twitter-follow-button\" data-show-count=\"false\">Follow @HubPressIO</a>\n      <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>\n    </div>\n  </div>\n\n</body>\n</html>\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}