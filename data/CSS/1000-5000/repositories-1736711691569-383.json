{
  "metadata": {
    "timestamp": 1736711691569,
    "page": 383,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "codyhouse/codyhouse-framework",
      "stars": 1160,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".browserslistrc",
          "type": "blob",
          "size": 0.1162109375,
          "content": ">= 0.5%\nlast 2 major versions\nnot dead\nChrome >= 60\nFirefox >= 60\nFirefox ESR\niOS >= 12\nSafari >= 12\nnot Explorer <= 11"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.05078125,
          "content": "node_modules\n*.DS_Store\nconfig.php\npackage-lock.json"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.06640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2021 Amber Creative S.R.L.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.7666015625,
          "content": "# 🐞 CodyFrame v3\nA lightweight front-end framework for building accessible, bespoke interfaces.\n\n**✦ New version available!** [Download CodyFrame v4 →](https://github.com/codyhouse/codyframe)\n\nFiles included:\n\n1. **base/*:** essential CSS rules and utility classes (we suggest you don't modify these files).\n2. **custom-style/*:** SCSS templates you can use to create your bespoke style.\n3. **style.scss:** used to import the _base.scss and _custom-style.scss files.\n4. **util.js:** utility functions used in the [CodyHouse components](https://codyhouse.co/ds/components). Make sure to import this file before the script file of the components.\n\nSelling points:\n\n- 🙌 No need to override existing CSS rules\n- 🎨 CSS custom properties\n- 📖 Easy to learn\n- 🏗 A library of [accessible components](https://codyhouse.co/ds/components)\n\n```text\ncodyhouse-framework/\n└── main/\n    ├── assets/\n    │   ├── css/\n    │   │   ├── base/*\n    │   │   │── custom-style/\n    │   │   │   ├── _buttons.scss\n    │   │   │   ├── _colors.scss\n    │   │   │   ├── _forms.scss\n    │   │   │   ├── _icons.scss\n    │   │   │   ├── _shared-styles.scss\n    │   │   │   ├── _spacing.scss\n    │   │   │   ├── _typography.scss\n    │   │   │   └── _util.scss\n    │   │   ├── _base.scss\n    │   │   ├── _custom-style.scss\n    │   │   ├── style-fallback.css\n    │   │   ├── style.css\n    │   │   └── style.scss\n    │   └── js/\n    │       └── util.js\n    └── index.html\n```\n## Documentation\n[View the documentation on codyhouse.co →](https://codyhouse.co/ds/get-started)\n\n## Progressive enhancement\nIf you're using our [components](https://codyhouse.co/ds/components), make sure to include the following script in the `<head>` of your document:\n\n```html\n<script>document.getElementsByTagName(\"html\")[0].className += \" js\";</script>\n```\n\nThe script is used in CSS to check if JavaScript is enabled and apply additional style accordingly.\n\n## Gulp\nCodyFrame includes a Gulp configuration file. To start a project that runs on Gulp, navigate to the framework folder, and run the following two commands:\n\n1) Install the node modules\n\n```\nnpm install\n```\n\n2) Launch your project on a development server\n\n```\nnpm run gulp watch\n```\n\n⚠️ **Note:** make sure you have [Npm](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm), [Node](https://nodejs.org/en/download/), and [Git](https://git-scm.com/) installed.\n\n📝 [How to use CodyFrame with Webpack](https://codyhouse.co/ds/docs/framework#webpack)\n\n## Component library\n\nCodyHouse's components are accessible, progressively enhanced, HTML, CSS, JS components that work seamlessly with CodyFrame.\n\n[Explore the components](https://codyhouse.co/ds/components)\n\n## Global Editors\n\nThe Global Editors are visual tools that you can use to create the style of typography elements, color palettes, spacing rules, buttons, and forms. They generate SCSS code compatible with CodyFrame.\n\nExplore the editors:\n\n- **Colors** [codyhouse.co/ds/globals/colors](https://codyhouse.co/ds/globals/colors)\n- **Typography** [codyhouse.co/ds/globals/typography](https://codyhouse.co/ds/globals/typography)\n- **Spacing** [codyhouse.co/ds/globals/spacing](https://codyhouse.co/ds/globals/spacing)\n- **Buttons** [codyhouse.co/ds/globals/buttons](https://codyhouse.co/ds/globals/buttons)\n- **Forms** [codyhouse.co/ds/globals/forms](https://codyhouse.co/ds/globals/forms)\n- **Shared styles** [codyhouse.co/ds/globals/shared-styles](https://codyhouse.co/ds/globals/shared-styles)\n\n## Extensions\n\nBrowse our extensions for VSCode, Sublime Text and Atom:\n\n[codyhouse.co/ds/docs/extensions](https://codyhouse.co/ds/docs/extensions)"
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 4.6435546875,
          "content": "var gulp = require('gulp');\nvar sass = require('gulp-sass')(require('sass-embedded'));\nvar sassGlob = require('gulp-sass-glob');\nvar browserSync = require('browser-sync').create();\nvar postcss      = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar concat = require('gulp-concat');\nvar rename = require('gulp-rename');\nvar uglify = require('gulp-uglify');\nvar cleanCSS = require('gulp-clean-css');\nvar purgecss = require('gulp-purgecss');\n\n// js file paths\nvar utilJsPath = 'main/assets/js'; // util.js path - you may need to update this if including the framework as external node module\nvar componentsJsPath = 'main/assets/js/components/*.js'; // component js files\nvar scriptsJsPath = 'main/assets/js'; //folder for final scripts.js/scripts.min.js files\n\n// css file paths\nvar cssFolder = 'main/assets/css'; // folder for final style.css/style-custom-prop-fallbac.css files\nvar scssFilesPath = 'main/assets/css/**/*.scss'; // scss files to watch\n\nfunction reload(done) {\n  browserSync.reload();\n  done();\n} \n\n/* Gulp watch tasks */\n// This task is used to convert the scss to css and compress it.\ngulp.task('sass', function() {\n  return gulp.src(scssFilesPath)\n  .pipe(sassGlob({sassModules: true}))\n  .pipe(sass().on('error', sass.logError))\n  .pipe(postcss([autoprefixer()]))\n  .pipe(gulp.dest(cssFolder))\n  .pipe(browserSync.reload({\n    stream: true\n  }))\n  .pipe(rename('style.min.css'))\n  .pipe(cleanCSS())\n  .pipe(gulp.dest(cssFolder))\n  .pipe(browserSync.reload({\n    stream: true\n  }));\n});\n// This task is used to combine all js files in a single scripts.min.js.\ngulp.task('scripts', function() {\n  return gulp.src([utilJsPath+'/util.js', componentsJsPath])\n  .pipe(concat('scripts.js'))\n  .pipe(gulp.dest(scriptsJsPath))\n  .pipe(browserSync.reload({\n    stream: true\n  }))\n  .pipe(rename('scripts.min.js'))\n  .pipe(uglify())\n  .pipe(gulp.dest(scriptsJsPath))\n  .pipe(browserSync.reload({\n    stream: true\n  }));\n});\n// This task is used to reload the project whan changes are made to a html/scss/js file.\ngulp.task('browserSync', gulp.series(function (done) {\n  browserSync.init({\n    server: {\n      baseDir: 'main'\n    },\n    notify: false\n  })\n  done();\n}));\n\ngulp.task('watch', gulp.series(['browserSync', 'sass', 'scripts'], function () {\n  gulp.watch('main/*.html', gulp.series(reload));\n  gulp.watch('main/assets/css/**/*.scss', gulp.series(['sass']));\n  gulp.watch(componentsJsPath, gulp.series(['scripts']));\n}));\n\n\n/* Gulp dist task */\n// create a distribution folder for production\nvar distFolder = 'dist/';\nvar assetsFolder = 'dist/assets/';\n\ngulp.task('dist', async function(){\n  // remove unused classes from the style.css file with PurgeCSS and copy it to the dist folder\n  await purgeCSS();\n  // minify the scripts.js file and copy it to the dist folder\n  await minifyJs();\n  // copy any additional js files to the dist folder\n  await moveJS();\n  // copy all the assets inside main/assets/img folder to the dist folder\n  await moveAssets();\n  // copy all html files inside main folder to the dist folder \n  await moveContent();\n  console.log('Distribution task completed!')\n});\n\nfunction purgeCSS() {\n  return new Promise(function(resolve, reject) {\n    var stream = gulp.src(cssFolder+'/style.css')\n    .pipe(purgecss({\n      content: ['main/*.html', scriptsJsPath+'/scripts.js'],\n      safelist: {\n        standard: ['.is-hidden', '.is-visible'],\n        deep: [/class$/],\n        greedy: []\n      },\n      defaultExtractor: content => content.match(/[\\w-/:%@]+(?<!:)/g) || []\n    }))\n    .pipe(gulp.dest(distFolder+'/assets/css'));\n    \n    stream.on('finish', function() {\n      resolve();\n    });\n  });\n};\n\nfunction minifyJs() {\n  return new Promise(function(resolve, reject) {\n    var stream = gulp.src(scriptsJsPath+'/scripts.js')\n    .pipe(uglify())\n    .pipe(gulp.dest(distFolder+'/assets/js'));\n    \n    stream.on('finish', function() {\n      resolve();\n    });\n  });\n};\n\nfunction moveJS() {\n  return new Promise(function(resolve, reject) {\n    var stream = gulp.src([scriptsJsPath+'/*.js', '!'+scriptsJsPath+'/scripts.js', '!'+scriptsJsPath+'/scripts.min.js'], { allowEmpty: true })\n    .pipe(gulp.dest(assetsFolder+'js'));\n    \n    stream.on('finish', function() {\n      resolve();\n    });\n  });\n};\n\nfunction moveAssets() {\n  return new Promise(function(resolve, reject) {\n    var stream = gulp.src(['main/assets/img/**'], { allowEmpty: true })\n    .pipe(gulp.dest(assetsFolder+'img'));\n    \n    stream.on('finish', function() {\n      resolve();\n    });\n  });\n};\n\nfunction moveContent() {\n  return new Promise(function(resolve, reject) {\n    var stream = gulp.src('main/*.html')\n    .pipe(gulp.dest(distFolder));\n    \n    stream.on('finish', function() {\n      resolve();\n    });\n  });\n};\n"
        },
        {
          "name": "main",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.1572265625,
          "content": "{\n  \"name\": \"codyhouse-framework\",\n  \"version\": \"3.0.14\",\n  \"description\": \"A lightweight front-end framework for building accessible, bespoke interfaces.\",\n  \"main\": \"index.js\",\n  \"keywords\": [\n    \"scss\",\n    \"css\",\n    \"framework\",\n    \"design-system\",\n    \"html\",\n    \"front-end\",\n    \"buttons\",\n    \"colors\",\n    \"forms\",\n    \"grid\",\n    \"mixins\",\n    \"spacing\",\n    \"typography\",\n    \"codyhouse\"\n  ],\n  \"scripts\": {\n    \"gulp\": \"gulp\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"Amber Creative Lab <info@ambercreative.co>\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"autoprefixer\": \"^9.4.3\",\n    \"browser-sync\": \"^2.26.3\",\n    \"gulp\": \"^4.0.0\",\n    \"gulp-clean-css\": \"^4.3.0\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-postcss\": \"^8.0.0\",\n    \"gulp-purgecss\": \"^3.0.0\",\n    \"gulp-rename\": \"^1.4.0\",\n    \"gulp-sass\": \"^5.0.0\",\n    \"gulp-sass-glob\": \"git+https://github.com/CodyHouse/gulp-sass-glob\",\n    \"gulp-uglify\": \"^3.0.2\",\n    \"sass\": \"^1.37.5\",\n    \"sass-embedded\": \"^1.0.0-beta.4\"\n  },\n  \"homepage\": \"https://codyhouse.co\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/CodyHouse/codyhouse-framework.git\"\n  }\n}\n"
        }
      ]
    }
  ]
}