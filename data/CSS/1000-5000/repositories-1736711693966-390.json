{
  "metadata": {
    "timestamp": 1736711693966,
    "page": 390,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jonikorpi/Frameless",
      "stars": 1130,
      "defaultBranch": "master",
      "files": [
        {
          "name": "frameless.html",
          "type": "blob",
          "size": 0.4951171875,
          "content": "<!doctype html>\n<!--[if lt IE 9]><html class=\"ie\"><![endif]-->\n<!--[if gte IE 9]><!--><html><!--<![endif]-->\n\t\n\t<head>\n\t\t<meta charset=\"utf-8\"/>\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n\t\t\n\t\t<title></title>\n\t\t\n\t\t<link rel=\"stylesheet\" href=\"\"/>\n\t\t\n\t\t<!--[if lt IE 9]>\n\t\t\t<script src=\"//html5shim.googlecode.com/svn/trunk/html5.js\"></script>\n\t\t<![endif]-->\n\t</head>\n\t\n\t<body lang=\"en\">\n\t\n\t\t\n\t\n\t</body>\n\t\n</html>"
        },
        {
          "name": "frameless.js",
          "type": "blob",
          "size": 5.939453125,
          "content": "/*\n\n\tUNDER DEVELOPMENT\n\t\n*\tFrameless Gridlet\t\t!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n*\tby Joni Korpi\t\t\thttp://jonikorpi.com/\n*\tlicensed under MIT\t\thttp://opensource.org/licenses/mit-license.php\n*/\n\n\n/*\n*\tCustomization\n*/\n\nvar Grid = {\n\tcolumnWidth: 48,\n\tgutterWidth: 24,\n\tunit: 'px',\n\tcolumnColor: 'rgba(0,0,0, 0.382)'\n};\n\nvar Baseline = {\n\tcolor: 'rgba(0,0,0, 0.236)',\n\tgridHeight: '1.5em'\n};\n\nvar Resolutions = {\n\tenabled: true,\n\tsizes: [240, 320, 480, 600, 768, 1024, 1280, 1440, 1680, 1920, 2560],\n\tcolor: 'rgba(0,0,0, 0.618)',\n\tlabelBackground: '#000',\n\tlabelColor: '#fff'\n};\n\nvar Buttons = {\n\tcolor: 'rgba(0,0,0, 0.5)',\n\tactiveColor: 'rgba(0,0,0, 1)',\n\tposition: {\n\t\ttop: 0,\n\t\tright: 0,\n\t\tbottom: 'auto',\n\t\tleft: 'auto',\n\t\tposition: 'absolute'\n\t}\n};\n\n\n/*\n*\tCreation\n*/\n\nGrid.create = function (target) {\n\tvar container = $('<div class=\"framelessGrid\"></div>')\n\t\t\t.css('height', $(target).height())\n\t\t\t.appendTo($(target));\n\tvar gridWidth = -(Grid.gutterWidth);\n\twhile (gridWidth < $(target).width()) {\n\t\t$('<div class=\"framelessColumn\"></div>')\n\t\t\t.css('height', $(target).height())\n\t\t\t.css('left', gridWidth)\n\t\t\t.appendTo(container);\n\t\tgridWidth += Grid.columnWidth + Grid.gutterWidth;\n\t}\n\t$(target + ' .framelessGrid').toggle();\n};\n\nBaseline.create = function (target) {\n\tvar container = $('<div class=\"framelessBaseline\"></div>').appendTo($(target));\n\tvar neededLines = Math.floor($(target).height()/24);\n\tvar i = 0;\n\twhile (i < neededLines) {\n\t\t$('<div class=\"framelessLine\"></div>').appendTo(container);\n\t\ti++;\n\t}\n\t$(target + ' .framelessBaseline').toggle();\n};\n\nResolutions.create = function (target) {\n\tif (Resolutions.enabled) {\n\t\tvar container = $('<div class=\"framelessResolutions\"></div>')\n\t\t\t.css('height', $(target).height())\n\t\t\t.appendTo($(target));\n\t\t$.each(this.sizes, \n\t\t\tfunction (key, resolution) {\n\t\t\t\t$('<div class=\"framelessResolution\"> <div class=\"framelessLabel\">' + resolution + ' px</div> </div>').css({\n\t\t\t\t\t'width': resolution,\n\t\t\t\t\t'margin-left': -1*(resolution/2)\n\t\t\t\t}).appendTo(container);\n\t\t\t}\n\t\t);\n\t\t$(target + ' .framelessResolutions').toggle();\n\t}\n};\n\n\nButtons.create = function (target) {\n\tvar gridButton = $('<div class=\"framelessGridButton framelessButton\"> <div></div> <div></div> <div></div> </div>');\n\tvar baselineButton = $('<div class=\"framelessBaselineButton framelessButton\"> <div></div> <div></div> <div></div> <div></div> </div>');\n\tif (Resolutions.enabled) {\n\t\tvar resolutionsButton = $('<div class=\"framelessResolutionsButton framelessButton\"> <div></div> </div>');\n\t}\n\telse {\n\t\tvar resolutionsButton;\n\t}\n\tvar container = $('<div class=\"framelessButtons\"></div>');\n\tcontainer.append(gridButton).append(baselineButton).append(resolutionsButton);\n\t$(target).append(container);\n\t$('.framelessButton').toggle(\n\t\tfunction (){\n\t\t\t$(this).addClass('framelessButtonActive');\n\t\t},\n\t\tfunction (){\n\t\t\t$(this).removeClass('framelessButtonActive')\n\t\t}\n\t);\n\t$('.framelessGridButton').click(\n\t\tfunction () {\n\t\t\t$('.framelessGrid').toggle();\n\t\t}\n\t);\n\t$('.framelessBaselineButton').click(\n\t\tfunction () {\n\t\t\t$('.framelessBaseline').toggle();\n\t\t}\n\t);\n\t$('.framelessResolutionsButton').click(\n\t\tfunction () {\n\t\t\t$('.framelessResolutions').toggle();\n\t\t}\n\t);\n};\n\n// Define CSS\nvar styles = '\\\n\t.framelessResolutions, .framelessBaseline, .framelessGrid {\\\n\t\toverflow: hidden;\\\n\t\tposition: absolute;\\\n\t\tleft: 0; top: 0;\\\n\t\theight: 100%;\\\n\t\twidth: 100%;\\\n\t}\\\n\t\t.framelessResolution, .framelessLine {\\\n\t\t\t-webkit-box-sizing: border-box;\\\n\t\t\t   -moz-box-sizing: border-box;\\\n\t\t\t\t-ms-box-sizing: border-box;\\\n\t\t\t\t -o-box-sizing: border-box;\\\n\t\t\t\t\tbox-sizing: border-box;\\\n\t\t}\\\n\t\t.framelessResolution {\\\n\t\t\theight: 100%;\\\n\t\t\tposition: absolute;\\\n\t\t\tleft: 50%;\\\n\t\t\tborder: dashed ' + Resolutions.color + ';\\\n\t\t\tborder-width: 0 1px;\\\n\t\t}\\\n\t\t.framelessLabel {\\\n\t\t\tbackground: ' + Resolutions.labelBackground + ';\\\n\t\t\tcolor: ' + Resolutions.labelColor + ';\\\n\t\t\tpadding: 6px 9px;\\\n\t\t\tfont-size: 16px;\\\n\t\t\tline-height: 1;\\\n\t\t\tposition: absolute;\\\n\t\t\tright: 14px; top: 120px;\\\n\t\t\t-webkit-transform-origin: top right;\\\n\t\t\t-webkit-transform: rotate(-90deg);\\\n\t\t\t   -moz-transform: rotate(-90deg);\\\n\t\t\t\t-ms-transform: rotate(-90deg);\\\n\t\t\t\t -o-transform: rotate(-90deg);\\\n\t\t\t\t\ttransform: rotate(-90deg);\\\n\t\t}\\\n\t.framelessLine {\\\n\t\theight: ' + Baseline.gridHeight + ';\\\n\t\tborder-bottom: 1px dotted ' + Baseline.color + ';\\\n\t}\\\n\t.framelessColumn {\\\n\t\tbackground: ' + Grid.columnColor + ';\\\n\t\twidth: ' + Grid.columnWidth + Grid.unit + ';\\\n\t\tposition: absolute;\\\n\t\ttop: 0; left: 0;\\\n\t}\\\n\t.framelessButtons {\\\n\t\tposition: ' + Buttons.position.position + ';\\\n\t\ttop: ' + Buttons.position.top + ';\\\n\t\tright: ' + Buttons.position.right + ';\\\n\t\tbottom: ' + Buttons.position.bottom + ';\\\n\t\tleft: ' + Buttons.position.left + ';\\\n\t\twidth: 144px;\\\n\t\tz-index: 999999;\\\n\t}\\\n\t\t.framelessButton {\\\n\t\t\theight: 48px;\\\n\t\t\tpadding: 7px;\\\n\t\t\twidth: 34px;\\\n\t\t\tfloat: right;\\\n\t\t\tposition: relative;\\\n\t\t\tcursor: pointer;\\\n\t\t}\\\n\t\t.framelessGridButton div {\\\n\t\t\tborder: solid ' + Buttons.color + ';\\\n\t\t\tborder-width: 0 5px 0 0;\\\n\t\t\theight: 34px;\\\n\t\t\tfloat: left;\\\n\t\t\tmargin-left: 6px;\\\n\t\t}\\\n\t\t\t.framelessGridButton div:first-child {\\\n\t\t\t\tmargin-left: 0;\\\n\t\t\t}\\\n\t\t.framelessBaselineButton div {\\\n\t\t\tborder-top: 1px dotted ' + Buttons.color + ';\\\n\t\t\theight: 9px;\\\n\t\t}\\\n\t\t.framelessResolutionsButton div {\\\n\t\t\tborder: 3px solid ' + Buttons.color + ';\\\n\t\t\theight: 28px;\\\n\t\t}\\\n\t\t.framelessButtonActive.framelessGridButton div,\\\n\t\t.framelessButtonActive.framelessBaselineButton div,\\\n\t\t.framelessButtonActive.framelessResolutionsButton div {\\\n\t\t\tborder-color: ' + Buttons.activeColor + ';\\\n\t\t}\\\n';\n\n// Append CSS\nfunction appendCSS(css) {\n\tif(document.createStyleSheet) {\n\t\tdocument.createStyleSheet(css);\n\t} \n\telse {\n\t\t$('<style type=\"text/css\"></style>').html(css).appendTo('head');\n\t}\n};\n\nfunction frameless(target, alignment) {\n\tif ($(target).css('position') == 'static') {\n\t\t$(target).css('position', 'relative');\n\t}\n\tButtons.create(target);\n\tGrid.create(target);\n\tBaseline.create(target);\n\tResolutions.create(target);\n}\n\n$(document).ready(function () {\n\t\n\tframeless('body');\n\tappendCSS(styles);\n\t\n});"
        },
        {
          "name": "frameless.less",
          "type": "blob",
          "size": 3.7822265625,
          "content": "/*\n\tFrameless\t\t\t<http://framelessgrid.com/>\n\tby Joni Korpi \t\t<http://jonikorpi.com/>\n\tlicensed under CC0\t<http://creativecommons.org/publicdomain/zero/1.0/>\n*/\n\n\n//\n// Configuration\n//\n\n@font-size: 16; \t\t// Your base font-size in pixels\n@em: @font-size*1em;\t// Shorthand for outputting ems, e.g. \"12/@em\"\n\n@column: 48;\t// The column-width of your grid in pixels\n@gutter: 24;\t// The gutter-width of your grid in pixels\n\n\n//\n// Column-widths in variables, in ems\n//\n\n @1cols: ( 1 * (@column + @gutter) - @gutter) / @em; @1col: @1cols;\n @2cols: ( 2 * (@column + @gutter) - @gutter) / @em;\n @3cols: ( 3 * (@column + @gutter) - @gutter) / @em;\n @4cols: ( 4 * (@column + @gutter) - @gutter) / @em;\n @5cols: ( 5 * (@column + @gutter) - @gutter) / @em;\n @6cols: ( 6 * (@column + @gutter) - @gutter) / @em;\n @7cols: ( 7 * (@column + @gutter) - @gutter) / @em;\n @8cols: ( 8 * (@column + @gutter) - @gutter) / @em;\n @9cols: ( 9 * (@column + @gutter) - @gutter) / @em;\n@10cols: (10 * (@column + @gutter) - @gutter) / @em;\n@11cols: (11 * (@column + @gutter) - @gutter) / @em;\n@12cols: (12 * (@column + @gutter) - @gutter) / @em;\n@13cols: (13 * (@column + @gutter) - @gutter) / @em;\n@14cols: (14 * (@column + @gutter) - @gutter) / @em;\n@15cols: (15 * (@column + @gutter) - @gutter) / @em;\n@16cols: (16 * (@column + @gutter) - @gutter) / @em;\n\n\n//\n// Column-widths in a function, in ems\n//\n\n.width (@cols:1) {\n\twidth: (@cols * (@column + @gutter) - @gutter) / @em;\n}\n\n\n/*\n\tMargin, padding, and border resets\n\texcept for form elements\n*/\n\nbody, div,\nh1, h2, h3, h4, h5, h6,\np, blockquote, pre, dl, dt, dd, ol, ul, li,\nfieldset, form, label, legend, th, td,\narticle, aside, figure, footer, header, hgroup, menu, nav, section {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n}\n\n\n/*\n\tConsistency fixes\n\tadopted from http://necolas.github.com/normalize.css/\n*/\n\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, nav, section, audio, canvas, video {\n\tdisplay: block;\n}\n\nhtml {\n\theight: 100%; \n\t-webkit-text-size-adjust: 100%; \n\t-ms-text-size-adjust: 100%;\n}\n\n\tbody {min-height: 100%; font-size: 100%;}\n\nsub, sup {\n\tfont-size: 75%; \n\tline-height: 0; \n\tposition: relative; \n\tvertical-align: baseline;\n}\n\n\tsup {top: -0.5em;}\n\tsub {bottom: -0.25em;}\n\npre {\n\twhite-space: pre; \n\twhite-space: pre-wrap; \n\tword-wrap: break-word;\n}\n\nb, strong {font-weight: bold;}\nabbr[title] {border-bottom: 1px dotted;}\n\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\na img, img {\n\t-ms-interpolation-mode: bicubic;\n\tborder: 0;\n}\n\ninput, textarea, button, select {\n\tmargin: 0;\n\tfont-size: 100%;\n\tline-height: normal;\n\tvertical-align: baseline;\n}\n\n\tbutton,\n\thtml input[type=\"button\"], \n\tinput[type=\"reset\"], \n\tinput[type=\"submit\"] {\n\t    cursor: pointer;\n\t    -webkit-appearance: button;\n\t}\n\t\n\tinput[type=\"checkbox\"],\n\tinput[type=\"radio\"] {\n\t\t-webkit-box-sizing: border-box;\n\t\t   -moz-box-sizing: border-box;\n\t\t\t -o-box-sizing: border-box;\n\t\t\t-ms-box-sizing: border-box;\n\t\t\t\tbox-sizing: border-box;\n\t}\n\t\n\ttextarea {overflow: auto;}\n\n\n/*\n\tThese are easy to forget\n*/\n\n::selection {\n\tbackground: red;\n\tcolor: white;\n}\n::-moz-selection {\n\tbackground: red;\n\tcolor: white;\n}\n\nimg::selection {\n\tbackground: transparent;\n}\nimg::-moz-selection {\n\tbackground: transparent;\n}\n\nbody {\n\t-webkit-tap-highlight-color: rgba(255,0,0, 0.62);\n}\n\n\n/*\n\tStyle overrides for IE6-8\n\thttp://jonikorpi.com/leaving-old-IE-behind/\n*/\n\n.ie {\n\t\n}\n\n\n/*\n\tAn easy way to zoom your entire layout in or out (as long as it's set in ems).\n\tJust change the media queries to activate them.\n\tAssuming your base font-size is 16:\n\t- the first one zooms out by a factor of (16-2)/16 = 0.875\n\t- the second one zooms in by a factor of (16+2)/16 = 1.125  \n*/\n\n@media screen and (max-width: 1px) {\n\tbody {\n\t\tfont-size: (@font-size - 2)/16*1em;\n\t}\n}\n\n@media screen and (max-width: 1px) {\n\tbody {\n\t\tfont-size: (@font-size + 2)/16*1em;\n\t}\n}"
        },
        {
          "name": "frameless.psd",
          "type": "blob",
          "size": 2118.859375,
          "content": null
        },
        {
          "name": "frameless.scss",
          "type": "blob",
          "size": 3.7646484375,
          "content": "/*\n\tFrameless\t\t\t<http://framelessgrid.com/>\n\tby Joni Korpi \t\t<http://jonikorpi.com/>\n\tlicensed under CC0\t<http://creativecommons.org/publicdomain/zero/1.0/>\n*/\n\n\n//\n// Configuration\n//\n\n$font-size: 16px; \t\t// Your base font-size in pixels\n$em: $font-size / 1em;\t// Shorthand for outputting ems\n\n$column: 48px;\t// The column-width of your grid in pixels\n$gutter: 24px;\t// The gutter-width of your grid in pixels\n\n\n//\n// Column-widths in variables, in ems\n//\n\n $cols1: ( 1 * ($column + $gutter) - $gutter) / $em;\n $cols2: ( 2 * ($column + $gutter) - $gutter) / $em;\n $cols3: ( 3 * ($column + $gutter) - $gutter) / $em;\n $cols4: ( 4 * ($column + $gutter) - $gutter) / $em;\n $cols5: ( 5 * ($column + $gutter) - $gutter) / $em;\n $cols6: ( 6 * ($column + $gutter) - $gutter) / $em;\n $cols7: ( 7 * ($column + $gutter) - $gutter) / $em;\n $cols8: ( 8 * ($column + $gutter) - $gutter) / $em;\n $cols9: ( 9 * ($column + $gutter) - $gutter) / $em;\n$cols10: (10 * ($column + $gutter) - $gutter) / $em;\n$cols11: (11 * ($column + $gutter) - $gutter) / $em;\n$cols12: (12 * ($column + $gutter) - $gutter) / $em;\n$cols13: (13 * ($column + $gutter) - $gutter) / $em;\n$cols14: (14 * ($column + $gutter) - $gutter) / $em;\n$cols15: (15 * ($column + $gutter) - $gutter) / $em;\n$cols16: (16 * ($column + $gutter) - $gutter) / $em;\n\n\n//\n// Column-widths in a function, in ems\n//\n\n@mixin width ($cols:1) {\n\twidth: ($cols * ($column + $gutter) - $gutter) / $em;\n}\n\n\n/*\n\tMargin, padding, and border resets\n\texcept for form elements\n*/\n\nbody, div,\nh1, h2, h3, h4, h5, h6,\np, blockquote, pre, dl, dt, dd, ol, ul, li,\nfieldset, form, label, legend, th, td,\narticle, aside, figure, footer, header, hgroup, menu, nav, section {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n}\n\n\n/*\n\tConsistency fixes\n\tadopted from http://necolas.github.com/normalize.css/\n*/\n\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, nav, section, audio, canvas, video {\n\tdisplay: block;\n}\n\nhtml {\n\theight: 100%; \n\t-webkit-text-size-adjust: 100%; \n\t-ms-text-size-adjust: 100%;\n}\n\n\tbody {min-height: 100%; font-size: 100%;}\n\nsub, sup {\n\tfont-size: 75%; \n\tline-height: 0; \n\tposition: relative; \n\tvertical-align: baseline;\n}\n\n\tsup {top: -0.5em;}\n\tsub {bottom: -0.25em;}\n\npre {\n\twhite-space: pre; \n\twhite-space: pre-wrap; \n\tword-wrap: break-word;\n}\n\nb, strong {font-weight: bold;}\nabbr[title] {border-bottom: 1px dotted;}\n\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\na img, img {\n\t-ms-interpolation-mode: bicubic;\n\tborder: 0;\n}\n\ninput, textarea, button, select {\n\tmargin: 0;\n\tfont-size: 100%;\n\tline-height: normal;\n\tvertical-align: baseline;\n}\n\n\tbutton,\n\thtml input[type=\"button\"], \n\tinput[type=\"reset\"], \n\tinput[type=\"submit\"] {\n\t    cursor: pointer;\n\t    -webkit-appearance: button;\n\t}\n\t\n\tinput[type=\"checkbox\"],\n\tinput[type=\"radio\"] {\n\t\t-webkit-box-sizing: border-box;\n\t\t   -moz-box-sizing: border-box;\n\t\t\t -o-box-sizing: border-box;\n\t\t\t-ms-box-sizing: border-box;\n\t\t\t\tbox-sizing: border-box;\n\t}\n\t\n\ttextarea {overflow: auto;}\n\n\n/*\n\tThese are easy to forget\n*/\n\n::selection {\n\tbackground: red;\n\tcolor: white;\n}\n::-moz-selection {\n\tbackground: red;\n\tcolor: white;\n}\n\nimg::selection {\n\tbackground: transparent;\n}\nimg::-moz-selection {\n\tbackground: transparent;\n}\n\nbody {\n\t-webkit-tap-highlight-color: rgba(255,0,0, 0.62);\n}\n\n\n/*\n\tStyle overrides for IE6-8\n\thttp://jonikorpi.com/leaving-old-IE-behind/\n*/\n\n.ie {\n\t\n}\n\n\n/*\n\tAn easy way to zoom your entire layout in or out (as long as it's set in ems).\n\tJust change the media queries to activate them.\n\tAssuming your base font-size is 16:\n\t- the first one zooms out by a factor of (16-2)/16 = 0.875\n\t- the second one zooms in by a factor of (16+2)/16 = 1.125  \n*/\n\n@media screen and (max-width: 1px) {\n\tbody {\n\t\tfont-size: ($font-size - 2) / $em;\n\t}\n}\n\n@media screen and (max-width: 1px) {\n\tbody {\n\t\tfont-size: ($font-size + 2) / $em;\n\t}\n}"
        },
        {
          "name": "framelessgrid.com",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 0.9541015625,
          "content": "# Dig responsive design? Hate fluid grids? Try a Frameless grid.\n\nSee <http://www.jonikorpi.com/frameless/> for more information.\n\n## Contents\n\n- **frameless.html** is a basic HTML5 template, which includes [Paul Irish's conditional classes](http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/), the [HTML5 Shim](http://code.google.com/p/html5shim/), and a proper meta viewport tag.\n- **frameless.js** is under development.\n- **frameless.less** contains a small CSS reset, some consistency fixes, as well as some customizable super-basic variables and functions for starting off a Frameless grid.\n- **frameless.psd** is a basic Photoshop template for a Frameless grid with 48 px columns and 24 px gutters.\n- **frameless.scss** contains the same as the LESS file, but in SCSS instead.\n- **framelessgrid.com/** contains the source of http://framelessgrid.com/\n\n## License\n\nAll code licensed under CC0: http://creativecommons.org/publicdomain/zero/1.0/\n"
        }
      ]
    }
  ]
}