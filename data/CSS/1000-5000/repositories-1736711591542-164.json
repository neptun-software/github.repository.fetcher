{
  "metadata": {
    "timestamp": 1736711591542,
    "page": 164,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "editor-bootstrap/vim-bootstrap",
      "stars": 2083,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.267578125,
          "content": "---\nengines:\n  golint:\n    enabled: true\n  gofmt:\n    enabled: true\n  govet:\n    enabled: true\n  fixme:\n    enabled: true\n  duplication:\n    enabled: true\n    config:\n      languages:\n      - go\nratings:\n  paths:\n  - \"**.go\"\nexclude_paths:\n- vendor/\n- \"generate/bindata.go\"\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.150390625,
          "content": "*.pyc\n*.egg-info\n*.dist-info\nbackup/\n*.swp\n*.swn\n*.swm\n*.swo\n*.pyc\n.netrwhist\n.ropeproject\nbundle\nvimrc.local\n.DS_Store\nvim-bootstrap\nvim-bootstrap-server"
        },
        {
          "name": "Caddyfile",
          "type": "blob",
          "size": 0.0703125,
          "content": "0.0.0.0\n\nproxy / go:3000 {\n\texcept /assets\n}\n\nlog stdout\n\nerrors stdout\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5224609375,
          "content": "FROM golang:alpine as builder\nRUN apk add --no-cache git\nWORKDIR /vim-bootstrap\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\nCOPY ./ /vim-bootstrap\nRUN go install -ldflags \"-w -s\" ./...\n\nFROM alpine:3.9\nLABEL mantainer=\"avelinorun@gmail.com\"\nLABEL mantainer=\"cassiobotaro@gmail.com\"\nRUN apk add --no-cache ca-certificates git\nWORKDIR /vim-bootstrap/\nCOPY --from=builder /go/bin/vim-bootstrap vim-bootstrap\nCOPY --from=builder /go/bin/vim-bootstrap-server vim-bootstrap-server\nCOPY ./template template\nCMD [\"./vim-bootstrap-server\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Thiago Avelino\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "MANTAINERS",
          "type": "blob",
          "size": 0.236328125,
          "content": "Avelino <t@avelino.xxx> (@avelino)\nCassio Botaro <cassiobotaro@gmail.com> (@cassiobotaro)\nDiego Santos <tec.infor321@gmail.com> (@DiegoSantosWS)\nIgor Leroy <ip.leroy@gmail.com> (@lerrua)\nFelipe Henrique <felipehfsouza@gmail.com> (@felipehfs)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.3115234375,
          "content": "# vim-bootstrap\n\nVim Bootstrap provides a simple method for generating .vimrc configuration files for Vim, NeoVim, NeoVim-Qt, MacVim and GVim.\n\nWant to generate your vim/neovim file? Access [here](https://vim-bootstrap.com/)!\n\n<a href=\"https://www.producthunt.com/posts/vim-bootstrap?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-vim-bootstrap\" target=\"_blank\"><img src=\"https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=303760&theme=light\" alt=\"vim-bootstrap - Your configuration generator for Neovim/Vim | Product Hunt\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a>\n\n## Pre-requisites\n\nThe distribution is designed to work with Vim >= 8 and neovim.\n\n### Mac OSX\n\n```\n$ brew install git ctags\n```\n\n### Linux\n\n* Ubuntu\\Debian\n\n```\n$ sudo apt-get install git exuberant-ctags ncurses-term curl\n```\n\n* Gentoo\n```\n$ sudo emerge --ask dev-util/ctags sys-libs/ncurses dev-vcs/git dev-python/pyflakes net-misc/curl\n```\n\n* Arch Linux via *pacman*\n```\n$ sudo pacman -S git ctags ncurses curl\n```\n* Fedora\n\n```\n$ sudo dnf install ncurses-devel git ctags curl\n```\n\n* openSUSE\n```\n$ sudo zypper in ncurses-devel git ctags curl\n```\n\n### BSD\n\n* FreeBSD via *packages collection*\n```\n# pkg install git p5-Parse-ExuberantCTags ncurses curl\n```\n\n### Python bundle (optionally)\n\n* pyflakes\n* jedi\n* neovim (neovim only)\n\n```\n$ pip install flake8 jedi\n$ pip2 install --user --upgrade neovim\n$ pip3 install --user --upgrade neovim\n```\n\n### Elm bundle (optionally)\n\n* elm-test\n* elm-oracle\n* elm-format\n\n```\n$ npm install -g elm-test\n$ npm install -g elm-oracle\n$ npm install -g elm-format@exp\n```\n\n### Rust\n\n* [rls](https://github.com/rust-lang/rls#setup)\n\n```\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\n## Installation\n\n* Download your own vimrc file at https://vim-bootstrap.com\n* Put your vimrc file into home folder or `$XDG_CONFIG_HOME/nvim/init.vim` if you use NeoVim\n\n**vim:** `mv ~/Downloads/generate.vim ~/.vimrc`\n\n**neovim:** `mv ~/Downloads/generate.vim $XDG_CONFIG_HOME/nvim/init.vim`\n\n* Execute ViM and it will install plugins automatically\n```\nvim\n```\n\n### Fast-installation by URL parameters\n\nVim-bootstrap generator can accept URL params via request as example below.\n\n    curl 'https://vim-bootstrap.com/generate.vim' --data 'editor=vim&frameworks=vuejs&langs=javascript&langs=php&langs=html&langs=ruby' > ~/.vimrc\n\n\n### Updating to the latest version\n\n    :VimBootstrapUpdate (thanks to @sherzberg)\n    :PlugInstall\n\n\n### Offline usage\n\nYou can run vim-bootstrap Go package to generate a vimrc file, just download it:\n\n    go get github.com/editor-bootstrap/vim-bootstrap\n    cd $GOPATH/src/github.com/editor-bootstrap/vim-bootstrap\n    go build\n\nInside vim-bootstrap folder `cd vim-bootstrap` use `vim-bootstrap` module (file) like this example:\n\n    ./vim-bootstrap -langs=python,lua,ruby,javascript,haskell -frameworks vuejs -editor=vim > ~/.vimrc\n\nFor more instructions run `vim-bootstrap -h`\n\n### openSUSE repo\n\nvim-bootstrap is also available on openSUSE on both Leap 42.2/42.3 and Tumbleweed. Leap versions must add devel:tools repository before, while Tumbleweed users should have vim-bootstrap in the default repository without the need to add any extra repository.\n\n* Leap 42.2\n```\n$ sudo zypper ar -f http://download.opensuse.org/repositories/devel:/tools/openSUSE_Leap_42.2/ devel:tools\n$ sudo zypper ref\n$ sudo zypper in vim-bootstrap\n```\n\n* Leap 42.3\n```\n$ sudo zypper ar -f http://download.opensuse.org/repositories/devel:/tools/openSUSE_Leap_42.3/ devel:tools\n$ sudo zypper ref\n$ sudo zypper in vim-bootstrap\n```\n\n* Tumbleweed\n```\n$ sudo zypper ref\n$ sudo zypper in vim-bootstrap\n```\n\n## Adding a new Theme\n\nCreate a folder inside `generate/vim_template/themes/` with the name of your theme.\n\n    mkdir generate/vim_template/themes/my_theme\n\nInside this folder, add a file called `mytheme.vim` with colorscheme instruction (optionally other configs).\n\n    echo \"colorscheme mytheme\" > generate/vim_template/themes/my_theme/mytheme.vim\n\nAdd a `.bundle` extension file with instructions of how to install theme.\n\n    echo \"Plug username/mytheme\" > generate/vim_template/themes/my_theme/mytheme.vim.bundle\n\nSubmit a PR and when approved new theme was added.\n\n## Customization\n\nIt's highly recommended to add customizations in a separate file. This way, you can maintain the original vim-bootstrap generated vimrc file and subsequent updates.\n\nFor Vim users, the files available for customization are `~/.vimrc.local` and `~/.vimrc.local.bundles`. The former handles general configuration while the latter handles external Vim plugins through `vim-plug`.\n\nNeoVim users can also customize their configuration by using `$XDG_CONFIG_HOME/nvim/local_init.vim` and `$XDG_CONFIG_HOME/nvim/local_bundles.vim`.\n\n## Commands\n</summary>\n<details>\n<summary>:black_small_square: Basic Commands</summary>\n\nCommands | Descriptions\n--- | ---\n`:cd <path>` | Open path */path*\n<kbd>Ctrl</kbd><kbd>w</kbd>+<kbd>h</kbd><kbd>j</kbd><kbd>k</kbd><kbd>l</kbd> | Navigate via split panels\n<kbd>Ctrl</kbd><kbd>w</kbd><kbd>w</kbd> | Alternative navigate vim split panels\n<kbd>,</kbd><kbd>.</kbd> | Set path working directory\n<kbd>,</kbd><kbd>w</kbd> or <kbd>,</kbd><kbd>x</kbd> | Next buffer navigate\n<kbd>,</kbd><kbd>q</kbd> or <kbd>,</kbd><kbd>z</kbd> | previous buffer navigate\n<kbd>shift</kbd><kbd>t</kbd> | Create a tab\n<kbd>tab</kbd> | next tab navigate\n<kbd>shift</kbd><kbd>tab</kbd> | previous tab navigate\n<kbd>,</kbd><kbd>e</kbd> | Find and open files\n<kbd>,</kbd><kbd>b</kbd> | Find file on buffer (open file)\n<kbd>,</kbd><kbd>c</kbd> | Close active buffer (close file)\n<kbd>F2</kbd>  | Open tree navigate in actual opened file\n<kbd>F3</kbd>  | Open/Close tree navigate files\n<kbd>F4</kbd> | List all class and method, support for python, go, lua, ruby and php\n<kbd>,</kbd><kbd>v</kbd> | Split vertical\n<kbd>,</kbd><kbd>h</kbd> | Split horizontal\n<kbd>,</kbd><kbd>f</kbd> | Search in the project\n<kbd>,</kbd><kbd>o</kbd> | Open github file/line (website), if used git in **github**\n<kbd>,</kbd><kbd>s</kbd><kbd>h</kbd> | Open shell.vim terminal inside Vim or NeoVim built-in terminal\n<kbd>,</kbd><kbd>g</kbd><kbd>a</kbd> | Execute *git add* on current file\n<kbd>,</kbd><kbd>g</kbd><kbd>c</kbd> | git commit (splits window to write commit message)\n<kbd>,</kbd><kbd>g</kbd><kbd>s</kbd><kbd>h</kbd> | git push\n<kbd>,</kbd><kbd>g</kbd><kbd>l</kbd><kbd>l</kbd> | git pull\n<kbd>,</kbd><kbd>g</kbd><kbd>s</kbd> | git status\n<kbd>,</kbd><kbd>g</kbd><kbd>b</kbd> | git blame\n<kbd>,</kbd><kbd>g</kbd><kbd>d</kbd> | git diff\n<kbd>,</kbd><kbd>g</kbd><kbd>r</kbd> | git remove\n<kbd>,</kbd><kbd>s</kbd><kbd>o</kbd> | Open Session\n<kbd>,</kbd><kbd>s</kbd><kbd>s</kbd> | Save Session\n<kbd>,</kbd><kbd>s</kbd><kbd>d</kbd> | Delete Session\n<kbd>,</kbd><kbd>s</kbd><kbd>c</kbd> | Close Session\n<kbd>></kbd> | indent to right\n<kbd><</kbd> | indent to left\n<kbd>g</kbd><kbd>c</kbd> | Comment or uncomment lines that {motion} moves over\n<kbd>Y</kbd><kbd>Y</kbd> | Copy to clipboard\n<kbd>,</kbd><kbd>p</kbd> | Paste\n<kbd>Ctrl</kbd><kbd>y</kbd> + <kbd>,</kbd> | Activate Emmet plugin\n<kbd>Ctrl</kbd><kbd>h</kbd> | Does a fuzzy search in your command mode history\n</details>\n\n<details>\n<summary>:black_small_square: Python hotkeys</summary>\n\nCommands | Descriptions\n--- | ---\n`SHIFT+k` | Open documentation\n`Control+Space` | Autocomplete\n`,d` | Go to the Class/Method definition\n`,r` | Rename object definition\n`,n` | Show where command is usage\n</details>\n\n<details>\n<summary>:black_small_square: Ruby hotkeys</summary>\n\nCommands | Descriptions\n------- | -------\n`,a`        | Run all specs\n`,l`        | Run last spec\n`,t`        | Run current spec\n`,rap`        | Add Parameter\n`,rcpc`     | Inline Temp\n`,rel`        | Convert Post Conditional\n`,rec`        | Extract Constant          (visual selection)\n`,rec`       | Extract to Let (Rspec)\n`,relv`     | Extract Local Variable    (visual selection)\n`,rrlv`     | Rename Local Variable     (visual selection/variable under the cursor)\n`,rriv`     | Rename Instance Variable  (visual selection)\n`,rem`      | Extract Method            (visual selection)\n\n</details>\n\n<details>\n<summary>:black_small_square: Php hotkeys</summary>\n\nCommands | Descriptions\n-------- | -------\n`,u`     | Include use statement\n`,mm`    | Invoke the context menu\n`,nn`    | Invoke the navigation menu\n`,oo`    | Goto definition\n`,oh`    | Goto definition on horizontal split\n`,ov`    | Goto definition on vertical split\n`,ot`    | Goto definition on tab\n`,K`     | Show brief information about the symbol under the cursor\n`,tt`    | Transform the classes in the current file\n`,cc`    | Generate a new class (replacing the current file)\n`,ee`    | Extract expression (normal mode)\n`,ee`    | Extract expression (visual selection)\n`,em`    | Extract method (visual selection)\n`,pcd`   | cs-fixer fix directory\n`,pcf`   | cs-fixer fix file\n\n</details>\n\n## Learn Vim\n\nVisit the following sites to learn more about Vim:\n\n* [Learn Vim Progressively](https://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/)\n* [Vim Adventures](https://vim-adventures.com/)\n* [Vimcasts](http://vimcasts.org)\n* [Byte of Vim](https://vim.swaroopch.com/)\n* [MinuteVim Tricks](https://www.youtube.com/user/MinuteVimTricks)\n* [Join the Church of Vim, and you too can be a saint!](https://www.avelino.run/church-vim)\n* [Vim para noobs (in portuguese)](https://woliveiras.com.br/vimparanoobs/)\n* [Vimbook (in portuguese)](https://cassiobotaro.gitbooks.io/vimbook/content/)\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.2158203125,
          "content": "version: \"2\"\n\nservices:\n  caddy:\n    image: abiosoft/caddy\n    volumes:\n      - ./Caddyfile:/etc/Caddyfile\n      - ./template/assets:/srv/assets\n    ports:\n      - 80:2015\n  go:\n    build: ./\n    ports:\n      - 3000:3000\n"
        },
        {
          "name": "generate",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.189453125,
          "content": "module github.com/editor-bootstrap/vim-bootstrap\n\ngo 1.16\n\nrequire (\n\tgithub.com/gorilla/mux v1.8.0\n\tgithub.com/urfave/negroni v1.0.0\n)\n\n// +heroku install ./cmd/...\n// +heroku goVersion go1.16\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 0.32421875,
          "content": "github.com/gorilla/mux v1.8.0 h1:i40aqfkR1h2SlN9hojwV5ZA91wcXFOvkdNIeFDP5koI=\ngithub.com/gorilla/mux v1.8.0/go.mod h1:DVbg23sWSpFRCP0SfiEN6jmj59UnW/n46BH5rLB71So=\ngithub.com/urfave/negroni v1.0.0 h1:kIimOitoypq34K7TG7DUaJ9kq/N4Ofuwi1sjz0KipXc=\ngithub.com/urfave/negroni v1.0.0/go.mod h1:Meg73S6kFm/4PpbYdq35yYWoCZ9mS/YSx+lKnmiohz4=\n"
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}