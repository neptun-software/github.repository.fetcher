{
  "metadata": {
    "timestamp": 1736711540978,
    "page": 45,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "BonsaiDen/JavaScript-Garden",
      "stars": 3449,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1474609375,
          "content": "/build\n/html\n/log\n/node_modules\n/.idea/*\n\n/site\n!/site/favicon.ico\n!/site/image\n!/site/javascript\n!/site/style\n!/site/style\n\n*.md~\n*.src.md\n*.DS_store\n"
        },
        {
          "name": ".lvimrc",
          "type": "blob",
          "size": 0.0751953125,
          "content": "set wildignore=node_modules\nset tabstop=2\nset shiftwidth=2\nset softtabstop=2\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.91796875,
          "content": "# Contributing to Javascript Garden\n\n1. We're about Javascript AKA [ECMA script](http://www.ecma-international.org/ecma-262/5.1/) not a specific implementation. So we don't cover issues specific to one environment or interpreter, like browsers or V8 for node.\n1. Micro-performance is out of scope: anything that's not a result of essential algorithmic complexity (e.g O(log n) vs O(n^2)) is down to a specific version of a specific interpreter (see 1).\n1. Please test code examples to ensure they work, there's nothing more confusing than incorrect examples!\n1. Contributing to JS Garden makes you a fantastic person, and Brendan Eich will find you immensely attractive.\n\nThank you for being kind enough to help out!\n\n## Testing locally\n\n1. Run `npm run build` to build\n1. Run a webserver from the root of the repo to view\n\n## Getting changes merged\n\n1. Squash your changes into one commit\n1. Make sure the site still works :)\n1. Make a PR\n"
        },
        {
          "name": "JavaScript-Garden",
          "type": "blob",
          "size": 0.005859375,
          "content": "./site"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.03125,
          "content": "Copyright (c) 2010 Ivo Wetzel.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.4833984375,
          "content": "JavaScript Garden\n=================\n\n2024 update: this project has not been actively maintained in years. The original author\n[took the site down](https://github.com/BonsaiDen/JavaScript-Garden/commit/93278fbcafa569fd193f8784abc267e9db09c645) \nin 2022 (no judgement - updating it would be a big project!). At that point it was already long out of date, e.g. missing\nthe new language features from ES6 onwards.\n\nMany excellent modern guides exist, e.g. [Eloquent Javascript](https://eloquentjavascript.net/), or\nthe [MDN guide](https://developer.mozilla.org/en-US/docs/Web/JavaScript).\n\nThanks for all the maintainers and translators over the years!\n\n-----\n\n**JavaScript Garden** is a growing collection of documentation about the most \nquirky parts of the JavaScript programming language. It gives advice to \navoid common mistakes, subtle bugs, as well as performance issues and bad \npractices that non-expert JavaScript programmers may encounter on their \nendeavours into the depths of the language.\n\nJavaScript Garden does **not** aim to teach you JavaScript. Former knowledge\nof the language is strongly recommended in order to understand the topics covered\nin this guide. In order to learn the basics of the language, please head over to \nthe excellent [guide][1] on the Mozilla Developer Network.\n\n### The authors\n\nThis guide is the work of two lovely Stack Overflow users, [Ivo Wetzel][6]\n(Original English Language Version) and [Zhang Yi Jiang][5] (Design), and\n[many others](https://github.com/BonsaiDen/JavaScript-Garden/graphs/contributors)\nwho've worked hard to provide translations or fixes.\n\nIt was maintained by [Tim Ruffles](http://twitter.com/timruffles) from 2013-2020ish.\n\n## Contributing\n\nPlease submit fixes and translations as [pull requests](https://help.github.com/articles/using-pull-requests).\n\n### License\n\nJavaScript Garden is published under the [MIT license][2] and hosted on\n[GitHub][4]. If you find errors or typos please [file an issue][3] or a pull \nrequest on the repository. You can also find us in the [JavaScript room][10] on\nStack Overflow chat. \n\n[1]: https://developer.mozilla.org/en/JavaScript/Guide\n[2]: https://github.com/BonsaiDen/JavaScript-Garden/blob/next/LICENSE\n[3]: https://github.com/BonsaiDen/JavaScript-Garden/issues\n[4]: https://github.com/BonsaiDen/JavaScript-Garden\n[5]: http://stackoverflow.com/users/313758/yi-jiang\n[6]: http://stackoverflow.com/users/170224/ivo-wetzel\n[8]: https://github.com/caio\n[9]: https://github.com/blixt\n[10]: http://chat.stackoverflow.com/rooms/17/javascript\n"
        },
        {
          "name": "build.js",
          "type": "blob",
          "size": 3.138671875,
          "content": "var fs = require(\"fs\");\nvar _ = require(\"lodash\");\nvar jade = require('jade');\nvar md = require(\"marked\");\n\nfunction main(opts) {\n  loadLanguages(opts.languagesDir)\n  .sort(function(a,b) {\n    return a.id > b.id ? 1 : -1\n  })\n  .forEach(function(lang,_,languages) {\n    outputLanguage(lang,languages,opts);\n  });\n}\n\nfunction loadLanguages(path) {\n  var index = readJson(path + \"/language.json\");\n  var availableListedLanguages = _.intersection(index.listed,fs.readdirSync(path));\n  return availableListedLanguages.reduce(function(all,lang) {\n    var langPath = path + \"/\" + lang;\n    if(!fs.statSync(langPath).isDirectory()) return all;\n    var data = _.extend(loadLanguage(langPath),{id: lang});\n    return all.concat(data);\n  },[]);\n}\n\nfunction loadLanguage(path) {\n  var index = readJson(path + '/index.json');\n  var language = _.extend(index,{\n    sections: index.sections.map(function(section) {\n      return _.extend(section,{\n        link: section.dir,\n        isIntro: section.dir == \"intro\",\n        articles: section.articles.map(function(article) {\n          return _.extend({\n            link: section.dir + \".\" + article\n          },loadArticle(path + \"/\" + section.dir + \"/\" + article + \".md\"));\n        })\n      })\n    })\n  });\n  language.navigation = language.sections;\n  return language;\n}\n\nfunction loadArticle(path) {\n  var text = fs.readFileSync(path,\"utf8\");\n  var title = text.substring(0, text.indexOf('\\n'));\n  text = text.substring(title.length);\n  title = md(title.replace(/\\#/g, '').trim());\n  var titleText = title.substring(3, title.length - 5);\n  text = processArticleBody(text);\n\n  var parts = text.split('<h3>');\n  var subs = parts.map(function(sub,i) {\n    return (i > 0 ? '<h3>' : '') + sub;\n  });\n\n  return {\n    title: titleText,\n    text: text,\n    subs: subs\n  };\n}\n\nfunction processArticleBody(text) {\n  text = md(text).replace(/'/g,'&#39;');\n  text = text.replace(/<blockquote>/g, '<aside>').\n              replace(/<\\/blockquote>/g, '</aside>');\n\n  return text.replace(/<aside>\\s+<p><strong>ES5/g,\n                      '<aside class=\"es5\"><p><strong>ES5');\n}\n\nfunction readJson(path) {\n  return JSON.parse(fs.readFileSync(path,\"utf-8\"));\n}\n\nfunction outputLanguage(lang,languages,opts) {\n  var langBase = lang.id == opts.baseLanguage ? \"/\" : \"/\" + lang.id;\n  fs.mkdir(opts.outDir + langBase,function(err) {\n    if(err && err.code != \"EEXIST\") {\n      console.error(\"Couldn't make dir \" + opts.outDir + \": \" + err);\n      process.exit(1);\n    }\n    var out = opts.outDir + langBase + \"/index.html\";\n    var perLangOpts = _.extend({out: out,languages: languages},opts);\n    writeTemplate(perLangOpts,lang);\n  })\n}\n\nfunction writeTemplate(options,language) {\n  var templateData = _.extend({language: language.id},language,options);\n\n  var jadefile = fs.readFileSync(options.template);\n  var jadetemplate = jade.compile(jadefile,{compileDebug: false,debug: false});\n  var html = jadetemplate(templateData);\n  fs.writeFileSync(options.out, html);\n}\n\nexports.build = function (opts) {\n  opts = _.defaults(opts || {},{ languagesDir: \"doc\", baseLanguage: \"en\", template: 'garden.jade', pathPrefix: 'JavaScript-Garden/', outDir: \"site\" });\n  return main(opts);\n}\n\nexports.build();\n"
        },
        {
          "name": "deploy.sh",
          "type": "blob",
          "size": 0.65234375,
          "content": "set -e\nremote=mine\nif [[ $PRODUCTION ]]; then\n  echo \"Deploy to production? (y/n)\"\n  read ans\n  if [[ $ans == \"y\" ]]; then\n    remote=\"origin\"\n  fi\nfi\ndiffs=`git diff --name-status HEAD`\nif [[ \"\" != $diffs ]]; then\n  echo \"Can't deploy, unsaved changes:\"\n  echo $diffs\n  exit\nfi\ngit checkout gh-pages\ngit reset --hard master\necho \"Starting build\"\nnode build.js\necho \"Build complete\"\nrm -rf `ls -d * | grep -vP 'site|node_modules' | xargs`\necho \"Cleaned out directory\"\nmv site/* .\nif [[ $BUILD_ONLY ]]; then\n  exit\nfi\nrm -rf site\ngit add . -A\ngit commit -m 'latest'\necho \"Commit created\"\ngit push --force $remote gh-pages\necho \"Deployed to $remote\"\ngit checkout master\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "garden.jade",
          "type": "blob",
          "size": 2.796875,
          "content": "doctype html\nhtml(lang=language)\n  head\n    title #{title}\n    meta(charset='utf-8')\n    meta(name='description', content=description)\n    meta(name='viewport', content='width=device-width, initial-scale=1')\n    link(rel='shortcut icon' href='/' + pathPrefix + 'favicon.ico?v=2')\n\n    - if (language === baseLanguage)\n      link(rel='stylesheet', href='style/garden.css', media='all')\n      link(rel='stylesheet', href='style/print.css', media='print')\n\n    - else\n      link(rel='stylesheet', href='../style/garden.css', media='all')\n      link(rel='stylesheet', href='../style/print.css', media='print')\n\n    <!--[if lt IE 9]>\n    <script src=\"javascript/html5.js\"></script>\n    <![endif]-->\n\n  body\n\n    // Navigation\n    nav(id='nav_main')\n      div\n        ul\n          - each lang in languages\n            li(class=lang.id === language ? 'active' : '')\n              - if (lang.id === baseLanguage)\n                a(href= '/' + pathPrefix, title=lang.title) #{lang.id}\n\n              - else\n                a(href= '/' + pathPrefix + lang.id, title=lang.title) #{lang.id}\n        a(id='top', href='#intro', title='Back to top') #top\n        a(id='hide_menu', class='tablet') Hide Menu\n\n      ul\n        - each section in navigation\n          li(class='nav_' + section.link.replace(/\\./g, '_'))\n            h1\n              a(href='#' + section.link) #{section.title}\n\n            ul\n                - if (section.articles.length > 0 && !section.isIntro)\n                    - each article in section.articles\n                      li\n                        a(href='#' + article.link)!=article.title\n\n    // Mobile navigation\n    nav(id='nav_mobile')\n      a(id='nav_prev_section', href='#') prev section\n        span(class='nav_section_name') section name\n\n      a(id='nav_next_section', href='#') next section\n        span(class='nav_section_name') section name\n\n      a(id='show_menu') show menu\n\n    // Sections\n    - each section in sections\n      section(id=section.link)\n\n        // Introduction\n        header(id=section.link + '.intro')\n          h1 #{section.title}\n          - if (section.index)\n            div!=section.index.text\n\n        // Articles\n        - each article in section.articles\n          article(id=article.link)\n            h2!=article.title\n\n            - each sub in article.subs\n              div!=sub\n\n    // Footer\n    footer\n      p Copyright &copy;. Built with\n        |\n        a(href='http://nodejs.org/')  Node.js\n        |  using a\n        a(href='https://github.com/visionmedia/jade/')  jade\n        |  template.\n\n    script(src='//ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js')\n\n    - if (language === baseLanguage)\n      script(src='javascript/prettify.js')\n      script(src='javascript/garden.js')\n\n    - else\n      script(src='../javascript/prettify.js')\n      script(src='../javascript/garden.js')\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.3662109375,
          "content": "{\n  \"name\": \"javascript-garden\",\n  \"description\": \"A collection of documentation about the most quirky parts of the JavaScript language.\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"build\": \"node build.js\"\n  },\n  \"dependencies\": {\n    \"fomatto\": \"0.5.0\",\n    \"forever\": \"0.10.8\",\n    \"jade\": \"0.35.0\",\n    \"neko\": \"1.1.2\",\n    \"marked\": \"~0.2.9\",\n    \"lodash\": \"~2.2.1\"\n  }\n}\n"
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}