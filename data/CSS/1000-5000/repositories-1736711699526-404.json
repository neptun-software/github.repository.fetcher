{
  "metadata": {
    "timestamp": 1736711699526,
    "page": 404,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "peduarte/wallop",
      "stars": 1099,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2978515625,
          "content": "# EditorConfig helps developers define and maintain consistent\n# coding styles between different editors and IDEs\n# editorconfig.org\n\nroot = true\n\n# Apply for all files\n[*]\n\ncharset = utf-8\n\nindent_style = space\nindent_size = 2\n\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0634765625,
          "content": ".DS_Store\n.sass-cache/\n.sass-cache/*\nnode_modules/\nnpm-debug.log\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.46875,
          "content": "language: node_js\nnode_js:\n- '0.10'\n- '0.12'\nscript: npm run ci\naddons:\n  source_connect: true\nenv:\n  global:\n  - secure: P8PT1JMKDJEjLtwK4AbnIojOT0E3fUhIG5Ls1a55HHrSf81JzFBSkFzSWL7pwBOXn+gfipSAXQ1bv2CFTSt9WZcGNbp4kZU8wTLKBLsyXZhfwOeEGmWa/fDdKtVhI2rZEHd5M/EgVkcf1SSeNJgvlUSslDADgzQ4s7XN5lr4UbOSDXfMyQX+nHHhYi4SI+o30OB81qapyn5E1MQZd2emUEVpLcmxTqJ3yvOtIH+SKl6JUZR4mJVF5zp5We5owlMCGmop5vMpFQhP6Flns6XcK/fNydaK6N1JLlpBHW4lrH+0Rv0kdzQGwfN0tWRfGN3RgFGg1yMu2YgYLPZWXbbojwXiKVa1ZcyrnilU9t1sHOlKMePrR3t4IyQyY92MTIa29KNb73/hDzDPwFhaic3uT5L8A//3egHsWJLIi2i97ld/okVRSZtbjMa3tdKbxSq5EgwNbScavEcAQytahrAppBSFguWx6b/HSRM2WFPztN7hyvu9yitVhsdz2UyuqzKIk+hKXKrisIySINw042FMq4KraGrshS7h/IizpAmEY8tH6eWCp9RlpjTklRQwiRVcv/32o4Cbthm3xomSzclzHNJ9UHDmu2dOm8a0WdoTdfb8iqJBK0n33TrB8Ir6ipaswpeW/dHU50OsRH/PE+7H1jn2GW+QHfcbWd+SkuWBnoE=\n  - secure: X2CZe+mS7Oop4qLxSbOIUmYTJqbBNHwZo92IvGPZB2jD7Lmk3juzuwCnPujuNEhwlOOz7aJSsbfXywPBVJXwAeW9rImThiBAUo081nTr47mFmcExbd0xpgScf3PWAXGvk1JL7EQx44LM4X1tNbOXOImNE9G/TTKyaFvqED6MrKKzFS6phDJkZDuDJ+5eJlvBhzaGE/CiGkm/d6h0musJ70MFy1gEa3pNzAQoiAlXlUIEaQkG2AoF33ZewiYD8FEY8SQh74BbvYkjGpNML+MesL6Vc7knCcqMbzt66Wd+u/mtp3Q4ff2tc42bLjbK2NAEDG0lztFnb1nJPPLQVHgI0BL0pljcCcoeaKHaNgLjHejFa/bCG7cUM+gkQzIMxcWMOkSOkKHeGRJW8i2SP/70wz6sLBUmDx9uTttZOxXjPDoFBCQkL2cYiVXl9aHGTMwLB/+GLFecgTARNhdpKeX9C3MT2jXNJZiXloOLnStsWz+VvOh9Pz0iUSJAv1Xcu6ZUud46FeG89QeW+NDzhOEmWoJ1HITwpXHkXgj1CLcwl7hmCfsNg1A+F8FXFIArjukGyf9cz41LMr4e6gu2CfP+WqgsXiSlt6xU6rCbp5ZAplIjXIVzGczhzw77Ibf8ZxEr+Vd5dE4Wi3tWVd5NbY8YVnrvveytIm/YJsRmX7wm75U=\n"
        },
        {
          "name": ".zuul.yml",
          "type": "blob",
          "size": 0.091796875,
          "content": "ui: tape\nbrowsers:\n  - name: chrome\n    version: latest\n  - name: firefox\n    version: latest\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.6689453125,
          "content": "# Contributing to wallop\nwallop is supposed to provide developers the basics and allow them to extend it via the API and Custom Events.\nThis is the reason why wallop has no Keyboard or Gestures bindings. I would like to keep it this way. üôè\n\nBug fixes are more than welcome!\nFor any new feature please [submit an issue](https://github.com/peduarte/wallop/issues) first before send any pull request.\n\nThank you & happy contributing! üëä\n\n## Tests\nPlease make sure all commits pass the tests `npm run test`.\n\n```bash\n$ npm install\n$ npm run test\n```\nThen open this up **http://localhost:9966/__zuul**\n\n## Build\nThe build task `npm run build` runs the tests and does the minification.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.17578125,
          "content": "# wallop\n[![Build Status](https://travis-ci.org/peduarte/wallop.svg)](https://travis-ci.org/peduarte/wallop) [![npm version](https://badge.fury.io/js/wallop.svg)](http://badge.fury.io/js/wallop)\n\n### Much more than just a slider\nwallop is a minimal 4kb library for showing & hiding things.\n\n> ‚ùóÔ∏è**Important note**Ô∏è<br>\n> Version 1 of *WallopSlider* is not compatible with version 2+.<br>\n> If you are still using v1, please note that I am no longer supporting it.<br>\n> Documentation, etc. has been moved to [this branch](https://github.com/peduarte/wallop/tree/v1).\n\n## About\nIn a nutshell, wallop takes a collection of HTML elements and Previous & Next buttons, and adds helper HTML classes in the correct elements based on whether you want to navigate forwards or backwards.\n\nIt basically just add the right classes in the right places at the right time.\n\nWith those classes, you can do an infinite [number of things](#real-life-examples), controlling what's shown or hidden with CSS.\n\n## Examples\n- [Basic](http://codepen.io/peduarte/pen/pjzYpG) ‚Äì This is wallop's most basic implementation\n- [Fade animation](http://codepen.io/peduarte/pen/RWbORJ) ‚Äì Using one of the [available animations](#adding-animations)\n- [Custom pagination](http://codepen.io/peduarte/pen/bVbZLK) ‚Äì Create your own pagination by levaragin the power of wallops' API and CustomEvents\n\nI've created a collection on **[Codepen](http://codepen.io/collection/DQWmxZ/)** with a few more examples, go take a üëÄ!\n\n## Benefits\n- Mobile first\n- Progressive enhancement\n- Transitions/Animations are all in CSS\n- Minimal JavaScript\n- Flexible & Scalable\n- Custom events and API available\n- 4KB minified\n- Dependency free\n\n## Install\nWith npm\n\n```bash\n$ npm install wallop\n```\n\nWith bower\n\n```bash\n$ bower install wallop\n```\n\nDownload<br>\nYou can download the latest version or checkout all the releases [here](https://github.com/peduarte/wallop/releases).\n\n## Usage\nOnce you have downloaded Wallop, the first thing you need to do is include the CSS and the JavaScript.\n\n### CSS\n```html\n<head>\n  <link rel=\"stylesheet\" href=\"path/to/wallop.css\">\n</head>\n```\n\n### JavaScript\n```html\n<script src=\"path/to/Wallop.min.js\"></script>\n<script>\n  var wallopEl = document.querySelector('.Wallop');\n  var slider = new Wallop(wallopEl);\n</script>\n```\n\n### commonJS\n```js\n  var Wallop = require('Wallop');\n```\n\n### ES6\n```js\n  import Wallop from 'Wallop';\n```\n\n### HTML\n```html\n<div class=\"Wallop\">\n  <div class=\"Wallop-list\">\n    <div class=\"Wallop-item\">‚Ä¶</div>\n    <div class=\"Wallop-item\">‚Ä¶</div>\n    <div class=\"Wallop-item\">‚Ä¶</div>\n    <div class=\"Wallop-item\">‚Ä¶</div>\n    <div class=\"Wallop-item\">‚Ä¶</div>\n  </div>\n  <button class=\"Wallop-buttonPrevious\">Previous</button>\n  <button class=\"Wallop-buttonNext\">Next</button>\n</div>\n```\n\n>**#protip**<br>\n>You can set the starting slide with a `.Wallop-item--current` class.\n\n## Adding animations\nWallop has no animations by default, so if you want to animate the slides, you need to extend the default `.Wallop` class with an animation modifier and include the respective CSS into your HTML.<br>\n\nI have created a few basic animations which are ready for you to use out-of-the-box, you will find them in the `/css` directory.\n\n### Including animation CSS\n```html\n<head>\n  <link rel=\"stylesheet\" href=\"path/to/wallop.css\">\n  <link rel=\"stylesheet\" href=\"path/to/wallop-animation.css\">\n</head>\n```\n\n### Extending with modifier\n```html\n<div class=\"Wallop Wallop--fade\">\n...\n</div>\n```\n\n### Available animations\nHere's a list of the available animation modifiers ready for you to use\n- `Wallop--slide`\n- `Wallop--fade`\n- `Wallop--scale`\n- `Wallop--rotate`\n- `Wallop--fold`\n- `Wallop--vertical-slide`\n\n> **protip**<br>\n> These animation helpers are especially helpful using if you are using wallop as a slider, but don't feel forced to use them, instead, feel free to take advantage of the classes wallop provides you with, and create you own!\n\n## Options\nHere's a list of options you can pass to Wallop\n- `buttonPreviousClass: 'Wallop-buttonPrevious'`\n- `buttonNextClass: 'Wallop-buttonNext'`\n- `itemClass: 'Wallop-item'`\n- `currentItemClass: 'Wallop-item--current'`\n- `showPreviousClass: 'Wallop-item--showPrevious'`\n- `showNextClass: 'Wallop-item--showNext'`\n- `hidePreviousClass: 'Wallop-item--hidePrevious'`\n- `hideNextClass: 'Wallop-item--hideNext'`\n- `carousel: true`\n\n## API\nWallop offers a basic API for you to use, so you can control it from your own buttons or gestures.\n\n### goTo(index)\nThis allows you to go to a specific slide index.\n```js\nvar slider = document.querySelector('.Wallop');\nvar Wallop = new Wallop(slider);\n\n// Go to 2nd slide\nWallop.goTo(1);\n```\n> **#protip**<br>\n> index starts at 0 üëå\n\n### next()\nThis allows you to go to the next slide\n```js\nvar slider = document.querySelector('.Wallop');\nvar Wallop = new Wallop(slider);\n\n// Go to next slide\nWallop.next();\n```\n\n### previous()\nThis allows you to go to the previous slide\n```js\nvar slider = document.querySelector('.Wallop');\nvar Wallop = new Wallop(slider);\n\n// Go to previous slide\nWallop.previous();\n```\n\n### reset()\nThis resets all internal variables of Wallop. Useful when dynamically changing the\nnumber of items in your slider.\n```js\nvar slider = document.querySelector('.Wallop');\nvar Wallop = new Wallop(slider);\n\n// Some function that will dynamically\n// insert new itmes in Wallop\ninsertNewItems();\n\n// Reset config\nWallop.reset();\n```\n\n## Events\nWallop dispatches a Custom Event every time a slide changes, and it returns a `detail` object which contains the current slide index and the element you initiated Wallop with.\n\n### Listening to a slide change\n```js\nvar slider = document.querySelector('.Wallop');\nvar Wallop = new Wallop(slider);\nvar handler = function(event) {\n  // event.detail.wallopEl\n  // => <div class=\"Wallop\">‚Ä¶</div>\n\n  // event.detail.currentItemIndex\n  // => number\n};\n\n// Listen to the handler\nWallop.on('change', handler);\n\n// Remove the handler listener\nWallop.off('change', handler);\n```\n\n## Real life examples\n- **[Google](http://www.google.com/trends/worldcup)** ‚Äì uses wallop as a slideshow, transitioning the background colour and animating the hero image of each item\n- **[Warp](http://warp.net/news/afx-following-global-premieres-you-can-now-hear-4-tracks-from-the-ep/?o=gallery&index=0)** ‚Äì uses the power of wallop's API and Custom Events to control the items via the URL and to build a custom pagination\n- **[Strava Insights](http://insights.strava.com/)** ‚Äì uses wallop a a slideshow, transitioning and transforming the background images with delay\n\nIf you are using wallop, please do let  me know by [creating an issue](https://github.com/peduarte/wallop/issues) and I'll make sure to add it to this list üëä\n\n## Limitations\nDue to its simplicity, wallop has a few limitations. For example, it is not possible to have the slide position animation based on gesture, or it's not possible to include physics based animations based on gesture momentum.\n\nIf you want a slider which provides all these options, I highly recommend David Desandro's [Flickity](http://flickity.metafizzy.co/).\n\n## Contributing\nPlese see [CONTRIBUTING.md](https://github.com/peduarte/wallop/blob/master/CONTRIBUTING.md) for more information.\n\n## Licensing\nMIT ¬© 2018 [Pedro Duarte](http://pedroduarte.me)\n"
        },
        {
          "name": "css",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.8662109375,
          "content": "{\n  \"name\": \"wallop\",\n  \"version\": \"2.4.1\",\n  \"description\": \"wallop is a minimal 4kb library for showing & hiding things\",\n  \"main\": \"js/Wallop.js\",\n  \"scripts\": {\n    \"test\": \"zuul --local 9966 -- test.js\",\n    \"ci\": \"zuul -- test.js\",\n    \"uglify\": \"./node_modules/.bin/uglifyjs ./js/Wallop.js -o ./js/Wallop.min.js --comments -m -c \",\n    \"build\": \"npm run uglify\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/peduarte/wallop.git\"\n  },\n  \"keywords\": [\n    \"slider\",\n    \"css\",\n    \"js\",\n    \"minimal\",\n    \"responsive\",\n    \"wallop\"\n  ],\n  \"author\": \"Pedro Duarte <contact@peduarte.com> (http://pedroduarte.me)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/peduarte/wallop/issues\"\n  },\n  \"homepage\": \"http://pedroduarte.me/wallop\",\n  \"devDependencies\": {\n    \"tape\": \"^4.2.0\",\n    \"uglify-js\": \"^2.4.24\",\n    \"zuul\": \"^3.3.0\"\n  }\n}\n"
        },
        {
          "name": "test.js",
          "type": "blob",
          "size": 3.064453125,
          "content": "'use restrict';\n\nvar Wallop = require('./js/Wallop');\nvar test = require('tape');\n\nfunction createSlider(className, itemsTotal) {\n  var $wallop = document.createElement('div');\n  $wallop.classList.add(className);\n  document.body.appendChild($wallop);\n\n  var $wallopList = document.createElement('div');\n  $wallopList.classList.add('Wallop-list');\n  $wallop.appendChild($wallopList);\n\n  for (var i = 0; i < itemsTotal; i++) {\n    var $item = document.createElement('div');\n    $item.classList.add('Wallop-item');\n    $wallopList.appendChild($item);\n  }\n\n  var $wallopButtonPrevious = document.createElement('button');\n  $wallopButtonPrevious.classList.add('Wallop-buttonPrevious');\n  $wallop.appendChild($wallopButtonPrevious);\n\n  var $wallopButtonNext = document.createElement('button');\n  $wallopButtonNext.classList.add('Wallop-buttonNext');\n  $wallop.appendChild($wallopButtonNext);\n}\n\n\ntest('First item is currentItem if not specified in HTML', function(assert) {\n  createSlider('Wallop1', 2);\n\n  var slider = document.querySelector('.Wallop1');\n  var wallop = new Wallop(slider);\n\n  assert.equal(wallop.currentItemIndex, 0, 'correct');\n  assert.end();\n});\n\ntest('Button state on initialization when carousel option is disabled', function(assert) {\n  createSlider('Wallop2', 3);\n\n  var slider = document.querySelector('.Wallop2');\n  var wallop = new Wallop(slider, { carousel: false });\n\n  var previousButtonDisabled = slider.querySelector('.Wallop-buttonPrevious').disabled;\n\n  assert.equal(previousButtonDisabled, true, 'correct button state');\n  assert.end();\n});\n\ntest('Clicking Next updates currentItemIndex', function(assert) {\n  createSlider('Wallop3', 3);\n\n  var slider = document.querySelector('.Wallop3');\n  var wallop = new Wallop(slider);\n  var index = wallop.currentItemIndex;\n\n  wallop.next();\n\n  index = wallop.currentItemIndex;\n\n  assert.equal(index, 1, 'updated index');\n  assert.end();\n});\n\ntest('Go to specific item index', function(assert) {\n  createSlider('Wallop4', 3);\n\n  var slider = document.querySelector('.Wallop4');\n  var wallop = new Wallop(slider);\n  var index = wallop.currentItemIndex;\n\n  wallop.goTo(1);\n\n  index = wallop.currentItemIndex;\n\n  assert.equal(index, 1, 'goTo works');\n  assert.end();\n});\n\ntest('Carousel is working', function(assert) {\n  createSlider('Wallop5', 3);\n\n  var slider = document.querySelector('.Wallop5');\n  var wallop = new Wallop(slider);\n\n  wallop.goTo(wallop.lastItemIndex);\n  index = wallop.currentItemIndex;\n\n  assert.equal(index, 2, 'went to last item index');\n\n  wallop.next();\n  index = wallop.currentItemIndex;\n  assert.equal(index, 0, 'went to first item index from the last');\n  var nextItem = wallop.allItemsArray[wallop.currentItemIndex];\n  assert.equal(nextItem.classList.contains('Wallop-item--showNext'), true, 'carousel works forwards');\n\n  wallop.previous();\n  index = wallop.currentItemIndex;\n  assert.equal(index, 2, 'went back to last item from first');\n  var previousItem = wallop.allItemsArray[wallop.currentItemIndex];\n  assert.equal(previousItem.classList.contains('Wallop-item--showPrevious'), true, 'carousel works backwards');\n  assert.end();\n});\n"
        }
      ]
    }
  ]
}