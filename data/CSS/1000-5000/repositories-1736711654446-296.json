{
  "metadata": {
    "timestamp": 1736711654446,
    "page": 296,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PrismJS/prism-themes",
      "stars": 1422,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.06640625,
          "content": "node_modules/\npackage-lock.json\n\n# minified themes\nthemes/*.min.css\n"
        },
        {
          "name": ".stylelintrc.json",
          "type": "blob",
          "size": 0.4853515625,
          "content": "{\n\t\"extends\": \"stylelint-config-standard\",\n\t\"rules\": {\n\t\t\"color-hex-case\": null,\n\t\t\"color-hex-length\": null,\n\t\t\"comment-empty-line-before\": null,\n\t\t\"declaration-empty-line-before\": null,\n\t\t\"declaration-property-value-blacklist\": {\n\t\t\t\"//\": [\"/\\\\bunset\\\\b/\"]\n\t\t},\n\t\t\"indentation\": \"tab\",\n\t\t\"no-descending-specificity\": null,\n\t\t\"number-leading-zero\": null,\n\t\t\"selector-list-comma-newline-after\": null,\n\t\t\"selector-pseudo-element-colon-notation\": \"single\"\n\t},\n\t\"ignoreFiles\": [\n\t\t\"**/*.min.css\"\n\t]\n}\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.5673828125,
          "content": "# Prism Themes Changelog\n\n\n## 1.9.0 (2021-09-16)\n\n### New Themes\n\n* Z-Touch ([#128](https://github.com/PrismJS/prism-themes/issues/128))\n* Solarized Dark Atom ([#129](https://github.com/PrismJS/prism-themes/issues/129))\n* One Dark ([#130](https://github.com/PrismJS/prism-themes/issues/130))\n* One Light ([#131](https://github.com/PrismJS/prism-themes/issues/131))\n\n### Improved\n\n* Added issue and pull request templates ([#132](https://github.com/PrismJS/prism-themes/issues/132))\n* Added minified CSS ([#136](https://github.com/PrismJS/prism-themes/issues/136))\n* Added plugin overrides for One Dark and One Light ([#134](https://github.com/PrismJS/prism-themes/issues/134))\n\n### Fixed\n\n* VSC Dark+: Fixed light background and selection color ([#138](https://github.com/PrismJS/prism-themes/issues/138))\n* Standardize and increase the specificity of selectors for plugin overrides ([#141](https://github.com/PrismJS/prism-themes/issues/141))\n\n\n## 1.8.0 (2021-07-19)\n\n### New Themes\n\n* Holi Theme ([#121](https://github.com/PrismJS/prism-themes/issues/121))\n* Gruvbox Light ([#124](https://github.com/PrismJS/prism-themes/issues/124))\n\n### Improved\n\n* Added changelog ([#125](https://github.com/PrismJS/prism-themes/issues/125))\n\n\n## 1.7.0 (2021-05-04)\n\n### New Themes\n\n* Night Owl ([#115](https://github.com/PrismJS/prism-themes/issues/115))\n\n### Improved\n\n* Add Node.js main file ([#116](https://github.com/PrismJS/prism-themes/issues/116))\n* VS: Adding `token.important` class color ([#99](https://github.com/PrismJS/prism-themes/issues/99))\n\n\n## 1.6.0 (2021-03-15)\n\n### New Themes\n\n* Gruvbox Dark ([#110](https://github.com/PrismJS/prism-themes/issues/110))\n* Lucario ([#112](https://github.com/PrismJS/prism-themes/issues/112))\n\n### Improved\n\n* Update Coldark Themes ([#107](https://github.com/PrismJS/prism-themes/issues/107))\n* Update Coldark Themes - Minor color change ([#109](https://github.com/PrismJS/prism-themes/issues/109))\n* Remove `main` field from `package.json` ([#114](https://github.com/PrismJS/prism-themes/issues/114))\n\n\n## 1.5.0 (2020-10-24)\n\n### New Themes\n\n* Coldark Cold ([#105](https://github.com/PrismJS/prism-themes/issues/105))\n* Coldark Dark ([#105](https://github.com/PrismJS/prism-themes/issues/105))\n* Coy without shadows ([#91](https://github.com/PrismJS/prism-themes/issues/91))\n\n### Fixed\n\n* VS Code Dark+: Fix colors for inserted and deleted in diffs ([#106](https://github.com/PrismJS/prism-themes/issues/106))\n\n\n## 1.4.1 (2020-10-05)\n\n### Improved\n\n* Improve VS Code Dark Plus theme accuracy ([#103](https://github.com/PrismJS/prism-themes/issues/103))\n\n\n## 1.4.0 (2020-04-04)\n\n### New Themes\n\n* VS Code Dark+ ([#93](https://github.com/PrismJS/prism-themes/issues/93))\n* Nord ([#94](https://github.com/PrismJS/prism-themes/issues/94))\n\n\n## 1.3.0 (2019-10-23)\n\n### New Themes\n\n* Material Dark ([#86](https://github.com/PrismJS/prism-themes/issues/86))\n* Material Light ([#86](https://github.com/PrismJS/prism-themes/issues/86))\n* Material Oceanic ([#86](https://github.com/PrismJS/prism-themes/issues/86))\n\n\n## 1.2.0 (2019-09-25)\n\n### New Themes\n\n* Dracula ([#77](https://github.com/PrismJS/prism-themes/issues/77))\n* Synthwave '84 ([#81](https://github.com/PrismJS/prism-themes/issues/81))\n* Shades of Purple ([#83](https://github.com/PrismJS/prism-themes/issues/83))\n\n### Fixed\n\n* Fixed font size for Line numbers plugin ([#79](https://github.com/PrismJS/prism-themes/issues/79))\n\n\n## 1.1.0 (2019-03-26)\n\n### Fixed\n\n* Load Fira Mono font in Hopscotch theme over HTTPS ([#76](https://github.com/PrismJS/prism-themes/issues/76))\n\n\n## 1.0.1 (2018-04-18)\n\n### Fixed\n\n* Add `.travis.yml` and make tests exit ok ([#73](https://github.com/PrismJS/prism-themes/issues/73))\n\n\n## 1.0.0 (2018-04-18)\n\nInitial release.\n\nThemes:\n\n* CB\n* GHColors\n* Pojoaque\n* Xonokai\n* Ateliersulphurpool-light ([#39](https://github.com/PrismJS/prism-themes/issues/39))\n* Hopscotch ([#49](https://github.com/PrismJS/prism-themes/issues/49))\n* Atom Dark ([#50](https://github.com/PrismJS/prism-themes/issues/50))\n* Duotone Dark ([#53](https://github.com/PrismJS/prism-themes/issues/53))\n* Duotone Sea ([#59](https://github.com/PrismJS/prism-themes/issues/59))\n* Duotone Space ([#59](https://github.com/PrismJS/prism-themes/issues/59))\n* Duotone Earth ([#59](https://github.com/PrismJS/prism-themes/issues/59))\n* Duotone Forest ([#59](https://github.com/PrismJS/prism-themes/issues/59))\n* Duotone Light ([#59](https://github.com/PrismJS/prism-themes/issues/59))\n* VS ([#60](https://github.com/PrismJS/prism-themes/issues/60))\n* Darcula ([#68](https://github.com/PrismJS/prism-themes/issues/68))\n* a11y Dark ([#72](https://github.com/PrismJS/prism-themes/issues/72))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 11.8818359375,
          "content": "# Contributing to Prism Themes\n\nThank you for coming on board!\n\nThere are a few ways you can contribute to Prism Themes, such as:\n\n-   [Filing bug reports](#filing-bug-reports)\n-   [Discussing the project](#discussing-the-project)\n-   [Submitting Pull Requests](#submitting-pull-requests), whether it's for documentation or code\n-   [Creating new themes](#creating-new-themes)\n\n## Filing bug reports\n\nIf you run into an error or a bug while using a theme from this repository:\n\n1.  Confirm that the bug lies with the theme and not Prism or one of its plugins. You can check by swapping the theme out for another theme. If the issue lies with Prism or one of its plugins, please head over to the [main repository](https://github.com/PrismJS/prism) instead.\n    -   In addition, please be sure that you only have one theme loaded! Having multiple themes loaded may result in conflicting or unexpected styles.\n\n2.  Check [existing issues (both open and closed)](https://github.com/PrismJS/prism-themes/issues?q=is%3Aissue) to see if it had previously been reported and/or resolved. If an existing issue exists, please leave a comment on it instead of creating a new issue.\n\n3.  [Open a new issue](https://github.com/PrismJS/prism-themes/issues/new/choose) with a clear and concise title, and include any relevant information such as:\n    -   The name of the theme you're having an issue with\n    -   Any plugins that you're using, if applicable\n    -   Screenshots and/or a reproducible example\n    -   Browser information\n\n### Security issues\n\nIn the case of security issues, please check our [Security Policy](https://github.com/PrismJS/prism-themes/security/policy) for details instead.\n\n## Discussing the project\n\nPerhaps you have some thoughts on Prism Themes, whether it's the state of the code, documentation, features you think might be useful, or simply want to know when the next release will be because you really like the latest theme and want to use it! Please [open a new issue](https://github.com/PrismJS/prism-themes/issues/new/choose) and let us know!\n\n## Submitting Pull Requests\n\nWhether it's documentation or code, Prism Themes welcomes Pull Requests! (If you're specifically looking to contribute a brand new theme, the next section on [Creating new themes](#creating-new-themes) would be more relevant.)\n\n1.  Fork this repository and create a new branch. It is possible that you do not have to clone it to your machine if you do not have to regenerate theme screenshots. If you need help at any point, please reach out by [opening a new issue](https://github.com/PrismJS/prism-themes/issues/new/choose)!\n\n2.  Make the changes.\n\n3.  Commit the changes, and include clear and concise commit messages when doing so.\n\n4.  Once you're done making the changes, [submit a Pull Request](https://github.com/PrismJS/prism-themes/compare)!\n    -   If your Pull Request resolves an open issue (or more), please include [`closes #issuenumber`](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) (for each issue) in the description.\n\n5.  A maintainer will look through your changes and review them accordingly, providing further instructions where necessary.\n\nThank you for submitting a Pull Request! We really appreciate the time and effort you've put into it :)\n\n## Creating new themes\n\nPrism themes are CSS files that set rules for inline code, code blocks, and the tokens within them. We have a [theme template](template/prism-theme-template.css) you may want to use as a starting point, as it provides additional tips and details beyond what is stated here. Additionally, when designing your theme, please make sure that the [theme guidelines and requirements](#theme-guidelines-and-requirements) are adhered to.\n\n### How to style...\n\n#### Tokens\n\nTo style a token, you can use a selector like:\n\n```css\n.token.token-name {\n\t/* styles */\n}\n```\n\nHere is a list of [Prism's standard tokens](https://prismjs.com/tokens.html), including the general concept behind them and some examples. All of these standard tokens are included in the [theme template](template/prism-theme-template.css).\n\n##### Is there a comprehensive list of tokens to style?\n\nWe're glad you asked! While we have some [resources](#resources) for discovering tokens available in each language, we unfortunately do not currently have a list containing the name of every single token. However, covering the [standard tokens](https://prismjs.com/tokens.html) should be enough for most cases.\n\nIf you'd like to help document more tokens, we would really appreciate your assistance [over at the main repository](https://github.com/PrismJS/prism/issues?q=is%3Aopen+is%3Aissue+label%3Adocs)!\n\n#### Tokens for a specific language\n\nPerhaps you want a particular token to be styled differently in a certain language. For example, CSS uses `.important` to style `!important`, while Markdown uses the same token in its headings, and you want them to have different styles. You can achieve it with the following selectors:\n\n```css\n/* Tokens with the `.important` class */\n.token.important {\n\t/* styles */\n}\n\n/* Tokens in a CSS block with the `.important` class */\n.language-css .token.important {\n\t/* styles */\n}\n\n/* Tokens in a Markdown block with the `.important` class */\n.language-markdown .token.important {\n\t/* styles */\n}\n```\n\n### Code style guidelines\n\nWe use [stylelint](https://stylelint.io/) to automatically check code style. Just run `npm run lint` to check (and `npm run lint-fix` to fix)!\n\n### Theme guidelines and requirements\n\nYour theme will be used by Prism and its plugins, which have default CSS rules of their own. To ensure that your theme is compatible with Prism and its plugins, please follow these guidelines!\n\n#### Do not use CSS variables, at least not yet\n\nThis may be a little strange, but it's because Prism supports IE11, which does not support CSS variables. However, we will be [dropping support for IE11 in Prism V2](https://github.com/PrismJS/prism/issues/1578), so you are encouraged to leave commented-out CSS variables (or at least a list of the colours you used) in your CSS files for an easier transition later on!\n\n#### Ensure that your token selectors include the `.token` class\n\nPrism adds the class `.token` to the, well, tokens, that it highlights with its wizardry magic. As such, all tokens that are highlighted by Prism will include the `.token` class. When you declare a style for a specific token, please make sure to include the `.token` class in your selector!\n\n```css\n/* Do this */\n.token.token-name {\n\t/* styles */\n}\n\n/* Do not do this */\n.token-name {\n\t/* styles */\n}\n```\n\n#### Maintain a font size of `1em` for code blocks\n\nSome of Prism's plugins assume that the `pre` and `code` elements have the same font size, else there will be bugs pertaining to misaligned and so forth. As such, please set the `font-size` of `code[class*=\"language-\"], pre[class*=\"language-\"]` to `1em`, i.e.:\n\n```css\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n\tfont-size: 1em;\n\t/* more styles */\n}\n```\n\n#### Increase selector specificity if/when overriding the default CSS rules of plugins\n\nIf you want to take things a step further, you can also style the additional elements that [Prism's plugins](https://prismjs.com/index.html#plugins) create in the DOM!\n\nSince it is not possible for Prism to enforce the ordering of stylesheets in all cases, it is necessary to increase the [specificity](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity) of your selectors for your theme's plugin overrides to ensure your overrides, well, override! Here's an example with the [Show Invisibles plugin](https://prismjs.com/plugins/show-invisibles):\n\n```css\n/* Default Show Invisibles plugin styles */\n.token.tab:not(:empty):before,\n.token.cr:before,\n.token.lf:before,\n.token.space:before {\n\tcolor: #808080;\n\topacity: 0.6;\n}\n\n/* Your Show Invisibles plugin overrides */\n.token.token.tab:not(:empty):before,\n.token.token.cr:before,\n.token.token.lf:before,\n.token.token.space:before {\n\t/* your styles */\n}\n```\n\nOur [plugin templates](template) covers most, if not all, of the plugins and overrides of interest, so you can just grab the selectors from there!\n\nIf you'd like to prioritise plugins to style, these are the top three most popular plugins:\n\n1.  [Line Highlight](https://prismjs.com/plugins/line-highlight)\n2.  [Line Numbers](https://prismjs.com/plugins/line-numbers)\n3.  [Toolbar](https://prismjs.com/plugins/toolbar)\n\n#### Avoid re-declaring existing declarations if/when styling plugins\n\nTo ensure forward compatibility, do not re-declare existing declaration if/when styling plugins. For example, the [Line Highlight plugin](https://prismjs.com/plugins/line-highlight) begins with the following CSS:\n\n```css\n/* Default Line Highlight plugin styles */\npre[data-line] {\n\tposition: relative;\n\tpadding: 1em 0 1em 3em;\n}\n\n.line-highlight {\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\tpadding: inherit 0;\n\tmargin-top: 1em; /* Same as .prism’s padding-top */\n\n\tbackground: hsla(24, 20%, 50%,.08);\n\tbackground: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0));\n\n\tpointer-events: none;\n\n\tline-height: inherit;\n\twhite-space: pre;\n}\n```\n\nWhile you might want to change the background colour of highlighted lines to fit your theme better, there is no need to redeclare other properties such as `position`, `left`, `right`, and so on, since those values should not change. Plus, we may fix bugs in those plugins in the future that involve changing these default properties; re-declaring the existing defaults will bring those fixed bugs right back.\n\n### Resources\n\nHere are some resources that you may find helpful when designing and developing a new theme:\n\n-   [Themes in the main repository](https://github.com/PrismJS/prism/tree/master/themes) and [themes in this repository](https://github.com/PrismJS/prism-themes/tree/master/themes) — examples you can refer to\n-   [prismjs.com: Examples](https://prismjs.com/examples.html) — use together with your browser's DevTools to see a sample of tokens in each language in action\n-   [prismjs.com: Test drive](https://prismjs.com/test.html) — enter your own code samples and see how they get grouped and highlighted (as well as what tokens they map to, with the help of your browser's DevTools)\n-   [prismjs.com: FAQ: How do I know which tokens I can style for every language?](https://prismjs.com/faq.html#how-do-i-know-which-tokens-i-can-style-for) — a reference of the tokens available per language\n-   [prismjs.com: Prism tokens](https://prismjs.com/tokens.html) — a list of the standard tokens and the general concept behind each of them, including examples\n-   [prismjs.com: Plugins](https://prismjs.com/index.html#plugins) — Prism's plugins, in the event you'd like to override their default styles!\n-   [css-tricks.com: Specifics on CSS Specificity](https://css-tricks.com/specifics-on-css-specificity/) — a great guide to CSS specificity\n\n### Submitting your themes\n\nThis section assumes some familiarity with git and npm (and of course, that you have git and a recent-ish version of [Node.js](https://nodejs.org/) installed). If you have any questions or need more guidance beyond Google, please reach out by [opening a new issue](https://github.com/PrismJS/prism-themes/issues/new/choose), we'll be happy to help!\n\n1.  If you haven't already done so, please fork prism-themes and clone it to your machine. It would also be wise to create a new branch to work on.\n\n2.  Copy your CSS file into the `themes` directory. Your theme's filename must be of the format `prism-<theme-name>.css`.\n\n3.  Take a screenshot of your theme by running the following command in your project's directory:\n    ```bash\n    npm install --dev && npx gulp screenshot\n    ```\n\n4.  Add your theme and its screenshot to the README.\n\n5.  Verify that all checks pass by running:\n    ```bash\n    npm test\n    ```\n\n6.  [Submit a Pull Request](https://github.com/PrismJS/prism-themes/compare), and we'll get back to you within a week! (Else, give us a ping!)\n\nWe look forward to your new theme :)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 PrismJS\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.6220703125,
          "content": "# Prism themes\n\n[![Build Status](https://github.com/PrismJS/prism-themes/workflows/CI/badge.svg)](https://github.com/PrismJS/prism-themes/actions)\n[![npm](https://img.shields.io/npm/dw/prism-themes.svg)](https://www.npmjs.com/package/prism-themes)\n\nThis repository lists a selection of additional themes for the [Prism syntax highlighting library](http://prismjs.com/).\n\n## How to use a theme\n\nTo use one of the themes, just include the theme's CSS file in your page. Example:\n\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n        ...\n        <link href=\"themes/prism-ghcolors.css\" rel=\"stylesheet\" />\n    </head>\n    <body>\n        ...\n        <script src=\"prism.js\"></script>\n    </body>\n</html>\n```\n\n## Contributing new themes\n\nPlease see our [Contributing guide](CONTRIBUTING.md) for details. Thank you for contributing!!\n\n## Available themes\n\n* [__CB__](themes/prism-cb.css) (originally by [C. Bavota](https://bitbucket.org/cbavota), adapted by [atelierbram](https://github.com/atelierbram))<br />\n[![CB](screenshots/prism-cb.png)](themes/prism-cb.css)\n\n* [__GHColors__](themes/prism-ghcolors.css) (by [aviaryan](https://github.com/aviaryan))<br />\n[![GHColors](screenshots/prism-ghcolors.png)](themes/prism-ghcolors.css)\n\n* [__Pojoaque__](themes/prism-pojoaque.css) (originally by [Jason Tate](http://web-cms-designs.com/ftopict-10-pojoaque-style-for-highlight-js-code-highlighter.html), adapted by [atelierbram](https://github.com/atelierbram))<br />\n[![Pojoaque](screenshots/prism-pojoaque.png)](themes/prism-pojoaque.css)\n\n* [__Xonokai__](themes/prism-xonokai.css) (originally by [Maxime Thirouin (MoOx)](https://github.com/MoOx), adapted by [atelierbram](https://github.com/atelierbram))<br />\n[![Xonokai](screenshots/prism-xonokai.png)](themes/prism-xonokai.css)\n\n* [__Ateliersulphurpool-light__](themes/prism-base16-ateliersulphurpool.light.css) (by [Bram de Haan](https://github.com/atelierbram))<br />\n[![Ateliersulphurpool-light](screenshots/prism-base16-ateliersulphurpool.light.png)](themes/prism-base16-ateliersulphurpool.light.css)\n\n* [__Hopscotch__](themes/prism-hopscotch.css) (by [Jan T. Sott](https://github.com/idleberg))<br />\n[![Hopscotch](screenshots/prism-hopscotch.png)](themes/prism-hopscotch.css)\n\n* [__Atom Dark__](themes/prism-atom-dark.css) (by [gibsjose](https://github.com/gibsjose), based on [Atom Dark Syntax theme](https://github.com/atom/atom-dark-syntax))<br />\n[![Atom Dark](screenshots/prism-atom-dark.png)](themes/prism-atom-dark.css)\n\n* [__Duotone Dark__](themes/prism-duotone-dark.css) (by [Simurai](https://github.com/simurai), based on [Duotone Dark Syntax theme for Atom](https://github.com/simurai/duotone-dark-syntax))<br />\n[![Duotone Dark](screenshots/prism-duotone-dark.png)](themes/prism-duotone-dark.css)\n\n* [__Duotone Sea__](themes/prism-duotone-sea.css) (by [Simurai](https://github.com/simurai), based on [DuoTone Dark Sea Syntax theme for Atom](https://github.com/simurai/duotone-dark-sea-syntax))<br />\n[![Duotone Sea](screenshots/prism-duotone-sea.png)](themes/prism-duotone-sea.css)\n\n* [__Duotone Space__](themes/prism-duotone-space.css) (by [Simurai](https://github.com/simurai), based on [DuoTone Dark Space Syntax theme for Atom](https://github.com/simurai/duotone-dark-space-syntax))<br />\n[![Duotone Space](screenshots/prism-duotone-space.png)](themes/prism-duotone-space.css)\n\n* [__Duotone Earth__](themes/prism-duotone-earth.css) (by [Simurai](https://github.com/simurai), based on [DuoTone Dark Earth Syntax theme for Atom](https://github.com/simurai/duotone-dark-earth-syntax))<br />\n[![Duotone Earth](screenshots/prism-duotone-earth.png)](themes/prism-duotone-earth.css)\n\n* [__Duotone Forest__](themes/prism-duotone-forest.css) (by [Simurai](https://github.com/simurai), based on [DuoTone Dark Forest Syntax theme for Atom](https://github.com/simurai/duotone-dark-forest-syntax))<br />\n[![Duotone Forest](screenshots/prism-duotone-forest.png)](themes/prism-duotone-forest.css)\n\n* [__Duotone Light__](themes/prism-duotone-light.css) (by [Simurai](https://github.com/simurai), based on [DuoTone Light Syntax theme](https://github.com/simurai/duotone-light-syntax))<br />\n[![Duotone Light](screenshots/prism-duotone-light.png)](themes/prism-duotone-light.css)\n\n* [__VS__](themes/prism-vs.css) (by [andrewlock](https://github.com/andrewlock))<br />\n[![VS](screenshots/prism-vs.png)](themes/prism-vs.css)\n\n* [__VS Code Dark+__](themes/prism-vsc-dark-plus.css) (by [tabuckner](https://github.com/tabuckner))<br />\n[![VS](screenshots/prism-vsc-dark-plus.png)](themes/prism-vsc-dark-plus.css)\n\n* [__Darcula__](themes/prism-darcula.css) (by [service-paradis](https://github.com/service-paradis), based on Jetbrains' Darcula theme)<br />\n[![Darcula](screenshots/prism-darcula.png)](themes/prism-darcula.css)\n\n* [__a11y Dark__](themes/prism-a11y-dark.css) (by [ericwbailey](https://github.com/ericwbailey))<br />\n[![a11y Dark](screenshots/prism-a11y-dark.png)](themes/prism-a11y-dark.css)\n\n* [__Dracula__](themes/prism-dracula.css) (by [Byverdu](https://github.com/byverdu))<br />\n[![Dracula](screenshots/prism-dracula.png)](themes/prism-dracula.css)\n\n* [__Synthwave '84__](themes/prism-synthwave84.css) (originally by [Robb Owen](https://github.com/robb0wen), adapted by [Marc Backes](https://github.com/themarcba))<br />\n[![Synthwave '84](screenshots/prism-synthwave84.png)](themes/prism-synthwave84.css)\n\n* [__Shades of Purple__](themes/prism-shades-of-purple.css) (by [Ahmad Awais](https://github.com/ahmadawais))<br />\n[![Shades of Purple](screenshots/prism-shades-of-purple.png)](themes/prism-shades-of-purple.css)\n\n* [__Material Dark__](themes/prism-material-dark.css) (by [dutchenkoOleg](https://github.com/dutchenkoOleg))<br />\n[![Material Dark](screenshots/prism-material-dark.png)](themes/prism-material-dark.css)\n\n* [__Material Light__](themes/prism-material-light.css) (by [dutchenkoOleg](https://github.com/dutchenkoOleg))<br />\n[![Material Light](screenshots/prism-material-light.png)](themes/prism-material-light.css)\n\n* [__Material Oceanic__](themes/prism-material-oceanic.css) (by [dutchenkoOleg](https://github.com/dutchenkoOleg))<br />\n[![Material Oceanic](screenshots/prism-material-oceanic.png)](themes/prism-material-oceanic.css)\n\n* [__Nord__](themes/prism-nord.css) (originally by [Nord](https://www.nordtheme.com/), adapted by [Zane Hitchcox](https://github.com/zwhitchcox) and [Gabriel Ramos](https://github.com/gabrieluizramos))<br />\n[![Nord](screenshots/prism-nord.png)](themes/prism-nord.css)\n\n* [__Coldark Cold__](themes/prism-coldark-cold.css) (by [Armand Philippot](https://github.com/ArmandPhilippot), based on [Coldark](https://github.com/ArmandPhilippot/coldark))<br />\n[![Coldark Cold](screenshots/prism-coldark-cold.png)](themes/prism-coldark-cold.css)\n\n* [__Coldark Dark__](themes/prism-coldark-dark.css) (by [Armand Philippot](https://github.com/ArmandPhilippot), based on [Coldark](https://github.com/ArmandPhilippot/coldark))<br />\n[![Coldark Dark](screenshots/prism-coldark-dark.png)](themes/prism-coldark-dark.css)\n\n* [__Coy without shadows__](themes/prism-coy-without-shadows.css) (by [RunDevelopment](https://github.com/RunDevelopment), based on Tim Shedor's Coy theme)<br />\n[![Coy without shadows](screenshots/prism-coy-without-shadows.png)](themes/prism-coy-without-shadows.css)\n\n* [__Gruvbox Dark__](themes/prism-gruvbox-dark.css) (by [Azat S.](https://github.com/azat-io))<br />\n[![Gruvbox Dark](screenshots/prism-gruvbox-dark.png)](themes/prism-gruvbox-dark.css)\n\n* [__Gruvbox Light__](themes/prism-gruvbox-light.css) (by [Michael Schnerring](https://github.com/schnerring))<br />\n[![Gruvbox Light](screenshots/prism-gruvbox-light.png)](themes/prism-gruvbox-light.css)\n\n* [__Lucario__](themes/prism-lucario.css) (by [Christopher Kapic](https://github.com/christopher-kapic), based on [Raphael Amorim's](https://github.com/raphamorim) [Lucario Theme](https://github.com/raphamorim/lucario))<br />\n[![Lucario](screenshots/prism-lucario.png)](themes/prism-lucario.css)\n\n* [__Night Owl__](themes/prism-night-owl.css) (by [Souvik Mandal](https://github.com/SimpleIndian), based on [Sarah Drasner's](https://github.com/sdras) [Night Owl Theme](https://github.com/sdras/night-owl-vscode-theme))<br />\n[![Night Owl](screenshots/prism-night-owl.png)](themes/prism-night-owl.css)\n\n* [__Holi Theme__](themes/prism-holi-theme.css) (by [Ayush Saini](https://github.com/AyushSaini00), based on [Holi Theme for VS Code](https://github.com/AyushSaini00/holi-theme))<br />\n[![Holi Theme](screenshots/prism-holi-theme.png)](themes/prism-holi-theme.css)\n\n* [__Z-Touch__](themes/prism-z-touch.css) (by [Zeel Codder](https://github.com/zeel-codder))<br />\n[![Z-Touch](screenshots/prism-z-touch.png)](themes/prism-z-touch.css)\n\n* [__Solarized Dark Atom__](themes/prism-solarized-dark-atom.css) (by [Pranay Chauhan](https://github.com/PranayChauhan2516), based on [Solarized Dark Theme by Atom](https://github.com/atom/solarized-dark-syntax))<br />\n[![Solarized Dark Atom](screenshots/prism-solarized-dark-atom.png)](themes/prism-solarized-dark-atom.css)\n\n* [__One Dark__](themes/prism-one-dark.css) (by [Hoon Wei Ting](https://github.com/hoonweiting), based on [Atom's One Dark Syntax](https://github.com/atom/atom/tree/master/packages/one-dark-syntax))<br />\n[![One Dark](screenshots/prism-one-dark.png)](themes/prism-one-dark.css)\n\n* [__One Light__](themes/prism-one-light.css) (by [Hoon Wei Ting](https://github.com/hoonweiting), based on [Atom's One Light Syntax](https://github.com/atom/atom/tree/master/packages/one-light-syntax))<br />\n[![One Light](screenshots/prism-one-light.png)](themes/prism-one-light.css)\n\n* [__Laserwave__](themes/prism-laserwave.css) (originally by [Jared Jones](https://github.com/Jaredk3nt), adapted by [Simon Jespersen](https://github.com/simjes))<br />\n[![Laserwave](screenshots/prism-laserwave.png)](themes/prism-laserwave.css)"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.216796875,
          "content": "# Security Policy\n\n## Reporting a vulnerability\n\nIf you discover a security issue, **do not** file a public issue. Instead, please send a report privately to msrd0000@gmail.com, and we will correspond with you from there.\n"
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 3.1875,
          "content": "const fs = require('fs').promises;\nconst { src, dest, parallel } = require('gulp');\nconst cleanCSS = require('gulp-clean-css')\nconst rename = require('gulp-rename')\nconst captureWebsite = require('capture-website');\nconst path = require('path');\n\n\nconst themesDir = path.join(__dirname, 'themes');\nconst screenshotDir = path.join(__dirname, 'screenshots');\n\n/**\n * Returns the names of all themes. This includes the `prism-` prefix.\n */\nasync function getThemes() {\n\treturn (await fs.readdir(themesDir)).map(f => (/^.+(?=\\.css$)/.exec(f) || [''])[0]).filter(f => f);\n}\n\n/**\n * Takes a screenshot of all themes overwriting the old ones.\n */\nasync function screenshotAllThemes() {\n\tfor (const theme of await getThemes()) {\n\t\tawait screenshotTheme(theme, true);\n\t}\n}\n\n/**\n * Takes a screenshot of themes which don't have one already.\n */\nasync function screenshotMissingThemes() {\n\tfor (const theme of await getThemes()) {\n\t\tawait screenshotTheme(theme, false);\n\t}\n}\n\n/**\n * Takes a screenshot of the given themes and saves the image file in the screenshot directory.\n *\n * __IMPORTANT:__ Screenshots have to be taken sequentially, one after an other, to prevent a memory leak.\n *\n * @param {string} theme\n * @param {boolean} overwrite\n */\nasync function screenshotTheme(theme, overwrite) {\n\tconst file = `${screenshotDir}/${theme}.png`;\n\n\tif (await fs.stat(file).then(s => s.isFile()).catch(() => false)) {\n\t\tif (overwrite) {\n\t\t\tawait fs.unlink(file);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tawait captureWebsite.file(screenshotDir + '/code.html', file, {\n\t\tdefaultBackground: false,\n\t\tscaleFactor: 1,\n\t\telement: 'pre',\n\t\tstyles: [\n\t\t\tawait fs.readFile(`${themesDir}/${theme}.css`, 'utf-8')\n\t\t]\n\t});\n}\n\n/**\n * Checks that all themes have a screenshot.\n */\nasync function checkScreenshots() {\n\tfor (const theme of await getThemes()) {\n\t\tconst file = `${screenshotDir}/${theme}.png`;\n\t\tif (!await fs.stat(file).then(s => s.isFile()).catch(() => false)) {\n\t\t\tthrow new Error(`The theme \"${theme}\" doesn't have a screenshot.`);\n\t\t}\n\t}\n}\n\n/**\n * Checks that all themes are in the list of available themes.\n */\nasync function checkAvailableThemes() {\n\tconst readme = await fs.readFile(path.join(__dirname, 'README.md'), 'utf-8');\n\n\tfor (const theme of await getThemes()) {\n\t\tif (!readme.includes(theme + \".css\")) {\n\t\t\tthrow new Error(`The theme \"${theme}\" is not included in the list of available themes.`);\n\t\t}\n\t\tif (!readme.includes(theme + \".png\")) {\n\t\t\tthrow new Error(`The screenshot of \"${theme}\" is not included in the list of available themes.`);\n\t\t}\n\t}\n}\n\n\nconst ISSUE_RE = /#(\\d+)(?![\\d\\]])/g;\nconst ISSUE_SUB = '[#$1](https://github.com/PrismJS/prism-themes/issues/$1)';\nconst CHANGELOG = 'CHANGELOG.md';\n\nasync function linkify() {\n\tlet changelog = await fs.readFile(CHANGELOG, 'utf-8');\n\n\tchangelog = changelog.replace(ISSUE_RE, ISSUE_SUB);\n\n\tawait fs.writeFile(CHANGELOG, changelog, 'utf-8');\n}\n\n\nfunction minify() {\n\treturn src(['themes/*.css', '!themes/*.min.css'])\n\t\t.pipe(cleanCSS())\n\t\t.pipe(rename({ suffix: '.min' }))\n\t\t.pipe(dest('themes/'));\n}\n\n\nexports.screenshot = screenshotMissingThemes;\nexports['screenshot-all'] = screenshotAllThemes;\nexports.check = parallel(checkScreenshots, checkAvailableThemes);\nexports.linkify = linkify;\nexports.minify = minify;\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.1025390625,
          "content": "const path = require('path');\n\nmodule.exports = {\n\tthemesDirectory: path.resolve(__dirname, 'themes')\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.8955078125,
          "content": "{\n  \"name\": \"prism-themes\",\n  \"version\": \"1.9.0\",\n  \"description\": \"Additional themes for the Prism syntax highlighting library.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"build\": \"gulp minify\",\n    \"lint\": \"stylelint \\\"themes/*.css\\\"\",\n    \"lint-fix\": \"stylelint \\\"themes/*.css\\\" --fix\",\n    \"test\": \"npm run lint && gulp check\",\n    \"prepublishOnly\": \"npm run build\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/prismjs/prism-themes.git\"\n  },\n  \"author\": \"Lea Verou\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/prismjs/prism-themes/issues\"\n  },\n  \"homepage\": \"https://github.com/prismjs/prism-themes#readme\",\n  \"devDependencies\": {\n    \"capture-website\": \"^0.4.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-clean-css\": \"^4.3.0\",\n    \"gulp-rename\": \"^2.0.0\",\n    \"stylelint\": \"^12.0.0\",\n    \"stylelint-config-standard\": \"^19.0.0\"\n  },\n  \"files\": [\n    \"themes/*.css\"\n  ]\n}\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}