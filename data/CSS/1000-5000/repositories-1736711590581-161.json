{
  "metadata": {
    "timestamp": 1736711590581,
    "page": 161,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aftertheflood/sparks",
      "stars": 2087,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.11328125,
          "content": "# file manager empty files\n.DS_Store\n.empty\n.sparkleshare\n# font editor temporary files\n*(Autosaved).glyphs\n*.vfbak\n"
        },
        {
          "name": "AUTHORS.txt",
          "type": "blob",
          "size": 0.28125,
          "content": "# This is the official list of project authors for copyright purposes.\n# This file is distinct from the CONTRIBUTORS.txt file.\n# See the latter for an explanation.\n#\n# Names should be added to this file as:\n# Name or Organization <email address>\n\nAfter the flood <info@aftertheflood.com>\n"
        },
        {
          "name": "CONTRIBUTORS.txt",
          "type": "blob",
          "size": 0.57421875,
          "content": "# This is the list of people who have contributed to this project,\n# and includes those not listed in AUTHORS.txt because they are not\n# copyright authors. For example, company employees may be listed\n# here because their company holds the copyright and is listed there.\n#\n# When adding J Random Contributor's name to this file, either J's\n# name or J's organization's name should be added to AUTHORS.txt\n#\n# Names should be added to this file as:\n# Name <email address>\n\nAfter the flood <info@aftertheflood.com>\nMike Gallagher <mike@aftertheflood.com>\nMax Gadney <max@aftertheflood.com>\n"
        },
        {
          "name": "FONTLOG.txt",
          "type": "blob",
          "size": 1.3876953125,
          "content": "FONTLOG for the Sparks fonts\n\nThis file provides detailed information on the Sparks Font Software.\nThis information should be distributed along with the Sparks fonts and any derivative works.\n\nBasic Font Information\n\nSparks is a font family for creating sparklines charts in text via OpenType contextual substitutions.\n\nSparks currently features three styles (bar, dot, and dot-line), each of which has five weights.\n\nTo contribute to the project contact Mike Gallagher at mike@aftertheflood.com\n\nChangeLog\n\n7 Febrary 2018 (Mike Gallagher) Sparks 2.000\n- Rationalise the weight system\n- Expand the capacity of the dot-line fonts (0–100)\n- Standardize the version numbering across all variants\n- Add all glyphs required by the Google Fonts character set\n- Add (limited) kerning \n\n18 January 2018 (Mike Gallagher) Sparks 1.017\n- Fix a bug in the dot-line font for \"{0,0...}\"\n\n16 August 2017 (Mike Gallagher) Sparks v1.000\n- Initial release\n\nAcknowledgements\n\nIf you make modifications be sure to add your name (N),\nemail (E), web-address (if you have one) (W) and\ndescription (D). This list is in alphabetical order.\n\nN: Mike Gallagher\nE: mike@aftertheflood.com / mail@mikegallagher.org\nW: https://aftertheflood.com / http://mikegallagher.org\nD: Designer\n\nAfter the Flood is a design company based in London. We make new digital products and we believe data is the building material of the modern, 21st-century business.\n"
        },
        {
          "name": "OFL.txt",
          "type": "blob",
          "size": 4.3115234375,
          "content": "Copyright (c) 2017 Sparks Project Authors (https://github.com/aftertheflood/sparks),\nwith no Reserved Font Name.\n\nThis Font Software is licensed under the SIL Open Font License, Version 1.1.\nThis license is copied below, and is also available with a FAQ at:\nhttp://scripts.sil.org/OFL\n\n\n-----------------------------------------------------------\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\n-----------------------------------------------------------\n\nPREAMBLE\nThe goals of the Open Font License (OFL) are to stimulate worldwide\ndevelopment of collaborative font projects, to support the font creation\nefforts of academic and linguistic communities, and to provide a free and\nopen framework in which fonts may be shared and improved in partnership\nwith others.\n\nThe OFL allows the licensed fonts to be used, studied, modified and\nredistributed freely as long as they are not sold by themselves. The\nfonts, including any derivative works, can be bundled, embedded,\nredistributed and/or sold with any software provided that any reserved\nnames are not used by derivative works. The fonts and derivatives,\nhowever, cannot be released under any other type of license. The\nrequirement for fonts to remain under this license does not apply\nto any document created using the fonts or their derivatives.\n\nDEFINITIONS\n\"Font Software\" refers to the set of files released by the Copyright\nHolder(s) under this license and clearly marked as such. This may\ninclude source files, build scripts and documentation.\n\n\"Reserved Font Name\" refers to any names specified as such after the\ncopyright statement(s).\n\n\"Original Version\" refers to the collection of Font Software components as\ndistributed by the Copyright Holder(s).\n\n\"Modified Version\" refers to any derivative made by adding to, deleting,\nor substituting -- in part or in whole -- any of the components of the\nOriginal Version, by changing formats or by porting the Font Software to a\nnew environment.\n\n\"Author\" refers to any designer, engineer, programmer, technical\nwriter or other person who contributed to the Font Software.\n\nPERMISSION & CONDITIONS\nPermission is hereby granted, free of charge, to any person obtaining\na copy of the Font Software, to use, study, copy, merge, embed, modify,\nredistribute, and sell modified and unmodified copies of the Font\nSoftware, subject to the following conditions:\n\n1) Neither the Font Software nor any of its individual components,\nin Original or Modified Versions, may be sold by itself.\n\n2) Original or Modified Versions of the Font Software may be bundled,\nredistributed and/or sold with any software, provided that each copy\ncontains the above copyright notice and this license. These can be\nincluded either as stand-alone text files, human-readable headers or\nin the appropriate machine-readable metadata fields within text or\nbinary files as long as those fields can be easily viewed by the user.\n\n3) No Modified Version of the Font Software may use the Reserved Font\nName(s) unless explicit written permission is granted by the corresponding\nCopyright Holder. This restriction only applies to the primary font name as\npresented to the users.\n\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font\nSoftware shall not be used to promote, endorse or advertise any\nModified Version, except to acknowledge the contribution(s) of the\nCopyright Holder(s) and the Author(s) or with their explicit written\npermission.\n\n5) The Font Software, modified or unmodified, in part or in whole,\nmust be distributed entirely under this license, and must not be\ndistributed under any other license. The requirement for fonts to\nremain under this license does not apply to any document created\nusing the Font Software.\n\nTERMINATION\nThis license becomes null and void if any of the above conditions are\nnot met.\n\nDISCLAIMER\nTHE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\nOF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nINCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\nDAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM\nOTHER DEALINGS IN THE FONT SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.1435546875,
          "content": "A typeface for creating sparklines in text.\n\n**Get the font files <a href=\"https://goo.gl/MJYka3\">here</a>. (.zip file, 5.2MB)**\n\nTo quickly include the fonts in your web page you may wish to use our stylesheet which defines all the font-faces and links to the relevant files hosted on github.\n\n```\n  <link href=\"https://tools.aftertheflood.com/sparks/styles/font-faces.css\" rel=\"stylesheet\" />\n```\n\nSee it working on our [website](http://aftertheflood.com/projects/sparks) or in one of our interactive notebook examples\n\n * <a href=\"https://beta.observablehq.com/@tomgp/after-the-flood-i-sparks-i-typeface\">A simple usage example</a>\n * <a href=\"https://beta.observablehq.com/@tomgp/sparks-in-an-svg\">Using Sparks within an SVG</a>\n * <a href=\"https://beta.observablehq.com/@tomgp/sparks-with-live-data\">Using javascript to create Sparks code from data</a>\n\n<div>\n  <hr class=\"no-top-border\">\n  <img class=\"full-width\" src=\"https://aftertheflood.com/wp-content/uploads/2018/01/spark-typing-v2.gif\" alt=\"Sparks GIF\" />\n  <hr class=\"no-top-border\">\n</div>\n\nSparks uses OpenType's *contextual alternates* feature to perform simple replacement operations on numbers. It works on both the desktop and the web where it works without Javascript, though it does require a modern-ish web browser that can make use of OpenType features in text. At the moment it is compatible with Microsoft Word (2010 and later), Apple Pages, Adobe Creative Cloud applications, Chrome 33+, Safari 6+, Firefox 4+, and Internet Explorer 10+. (See: http://stateofwebtype.com/ for a fuller listing of browser compatibility.)\n\nThere are currently three variations: **bars, dots, and dot-lines** (line charts with tiny dots at the joints between segments), each of which has five weight variants.\n\nAll three of the variants use a fixed scale of 0–100. If your data only goes to e.g., 10, you'll need to first translate your numbers to be out of 100, otherwise you'll end up rendering an especially tiny chart.\n\nThe contextual alternates feature (`calt`) is baked into OpenType and Sparks simply leverages this feature in an unconventional way. It takes strings like `123{30,60,90}456` and outputs a sparkline. The example of `123{30,60,90}456` would have with three datapoints of 30, 60, and 90 framed by 123 and 456. Spaces after the commas will prevent the numbers from being transformed. Numbers outside of the brackets are never transformed.\n\n## Using Sparks\n\n### On the web\n\nWhen using Sparks as a webfont you *may* wish to explicitly enable the `calt` feature. Contextual ligatures are enabled by default in most modern browsers but in order to support older browsers you can use the following CSS (example pilfered from Adobe's [Syntax for OpenType features in CSS](https://helpx.adobe.com/typekit/using/open-type-syntax.html#calt) page):\n\n```\n.yourClass {\n  font-variant-ligatures: contextual;\n  -moz-font-feature-settings: \"calt\";\n  -webkit-font-feature-settings: \"calt\";\n  font-feature-settings: \"calt\";\n}\n```\n\nFor more on this see the example code in the [**tests**](https://github.com/aftertheflood/sparks/tree/master/tests) folder.\n\n### In MS Word\n\nIf you are using MS Word you need to enable the \"Use Contextual Alternates\" feature for it to be able to draw the sparklines. You can do that simply by heading to \"Format > Font > Advanced\" and enabling it.\n\n### In Adobe Illustrator\n\nTurn on contextual alternates from the OpenType panel menu (Window > Type > OpenType). Here's a [screenshot](https://user-images.githubusercontent.com/771600/30393566-7ebc3a96-98b8-11e7-9b18-34cf6b1550c4.png).\n\n### In Adobe InDesign\n\nSometimes contextual alternates are activated by default and sometimes they are not. We have no idea why. Use the OpenType menu to make sure they are turned on, which can be found in the options menu of the character palette (Character > Options > OpenType > Contextual Alternates). Here's a [screenshot](https://github.com/aftertheflood/sparks/documentation/indesign-contextual-alternates.png).\n\n\n## How it works: the OpenType code\n\nInside the font files the code that powers the replacement operation for the **bar** and **dot** variations works like this:\n\n```\nfeature calt {\n\n  ignore sub zero' comma space;\n  sub braceleft' zero' braceright' by chart.000;\n  sub braceleft' zero' comma' by chart.000;\n  sub zero' comma' by chart.000;\n  sub zero' braceright' by chart.000;\n\n} calt;\n\n```\n\nwhile the code for the **dot-line** variation is a bit more complicated, and looks sort of like this:\n\n```\n@theDots [ dot.000 dot.001 ... dot.100 ];\n@linesTo000 [ line.000.000 line.001.000 ... line.100.000 ];\n# 100 more those classes, one for each possible position.\n\nfeature calt {\n\n  lookup dotsIgnore {\n    ignore sub zero' comma space;\n    # ... repeat for all 100 other numbers.\n  } dotsIgnore;\n\n  lookup DotsSolo {\n    sub braceleft' zero' braceright' by dot.100;\n    # ... repeat for all 100 other numbers.\n  } dotsSolo;\n\n  lookup dotsInitial {\n    sub braceleft' zero' comma' by dot.000;\n    # ... repeat for all 100 other numbers.\n  } dotsInitial;\n\n  lookup dotsMiddle {\n    sub zero' comma' by dot.000;\n    # ... repeat for all 100 other numbers.\n  } dotsMiddle;\n\n  lookup dotsFinal {\n    sub zero' braceright' by dot.000;\n    # ... repeat for all 100 other numbers.\n  } dotsFinal;\n\n  lookup linesAll {\n    sub @theDots' dot.000 by @linesTo000;\n    # ... repeat for all 100 other positions.\n  } linesAll;\n\n} calt;\n\n```\n\nIn theory the **dot-line** variation could be just like the **bar** and **dot** variations with only a single round of glyph substitutions, however because the **dot-line** fonts are plotting connections rather than single positions you would end up with *many* lines of code (almost 11k). Fine in the abstract, but it turns out that OpenType has a limit for how many lines of code can be in a single lookup table (around 3k – everything in a lookup table has to fit into 16 bits, because reasons), so compilation fails. There are definitely many ways around this, but it is a headache. The **dot-line** version sorts the problem by\n\n- first setting up classes for both the dots and the lines\n- then substituting numbers for the appropriate dot glyph (just like in the **bar** and **dot** variants, however here the sequence is a lot more important)\n- and finally substituting the first of every pair of dots with the appropriate line\n\nThis works because OpenType substitution is a linear process in which each rule reads the output of the previous rule, so you can chain substitutions. (*So* many caveats to that statement, but that's a story for another day. For more information on how weird OpenType glyph substitution is check out [this amazing blogpost.](http://ansuz.sooke.bc.ca/entry/131))\n\n---\n\n### About us\n[After the flood](http://aftertheflood.com/) is a design consultancy based in London. We work with global corporations like Google, Nikkei and Ford to solve business problems that combine our understanding of AI and data as a material with unique user insight. Our consulting model means guaranteed access to our top team. Our approach is user-centred and lean, showing progress to clients and working with a variety of expert partners.\n\n### License\nSparks has been distributed under the [SIL Open Font License](https://github.com/aftertheflood/spark/blob/master/LICENSE).\n"
        },
        {
          "name": "_layouts",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples.md",
          "type": "blob",
          "size": 2.462890625,
          "content": "# Displaying charts in text without having to use code\n\nSparks, now in its second release, is a family of 15 fonts (three variants in five weights each) that allows for the easy combination of text and visual data by removing the need for any technical know-how. By installing the Spark font you can use them immediately without the need for custom code.\n\nData can be hard to grasp however visualising it can make comprehension faster. Sparklines (tiny charts in text, like this: <span class=\"sparks dotline-extrathin\">123{10,20,30,40,50,60,70,80,90,100}789</span>) are a useful tool, but creating them for the web has always required code and using them in word documents was previously impossible.\n\n## Other types of chart are available\n\nThe different spark fonts allow for a degree of flexibility in the way different types of data can be displayed.\n\n### Bars\n\n * Bar extra narrow: <span class=\"sparks bar-extranarrow\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Bar narrow: <span class=\"sparks bar-narrow\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Bar medium: <span class=\"sparks bar-medium\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Bar wide: <span class=\"sparks bar-wide\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Bar extra wide: <span class=\"sparks bar-extrawide\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n \n### Dots\n\n * Dot extra small: <span class=\"sparks dot-extrasmall\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Dot small: <span class=\"sparks dot-small\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Dot medium: <span class=\"sparks dot-medium\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Dot large: <span class=\"sparks dot-large\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Dot extra large: <span class=\"sparks dot-extralarge\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n\n### Lines\n\n * Dotline extra thin: <span class=\"sparks dotline-extrathin\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Dotline thin: <span class=\"sparks dotline-thin\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Dotline medium: <span class=\"sparks dotline-medium\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Dotline thick: <span class=\"sparks dotline-thick\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n * Dotline extra thick: <span class=\"sparks dotline-extrathick\">123{0,100,10,90,20,80,30,70,40,60,50}987</span>\n\nFurther usage examples can be found as <a href=\"https://beta.observablehq.com/collection/@tomgp/sparks/2\">Observable notebooks</a>"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "output",
          "type": "tree",
          "content": null
        },
        {
          "name": "sources",
          "type": "tree",
          "content": null
        },
        {
          "name": "styles",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}