{
  "metadata": {
    "timestamp": 1736711654738,
    "page": 297,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "datawhalechina/hugging-multi-agent",
      "stars": 1420,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0595703125,
          "content": "# Default ignored files\n/shelf/\n/workspace.xml\n.idea\n.vscode\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6953125,
          "content": "# Hugging Multi-Agent\n\n## 项目简介\n- 课程说明：Hugging Multi-Agent 是一套专为期望深入了解并实践多智能体系统的开发者设计的实用指南。基于国内领先的多智能体框架 MetaGPT（iclr 2024 oral） 旨在帮助读者掌握多智能体系统的核心概念，并提供一套全面的学习路径，从智能体的基础理解到复杂系统的实际开发。\n- 面向人群：\n  - 职业发展定位：本课程适合那些希望在**大模型和智能体开发**领域取得职业发展的工程师。与仅仅关注prompt工程的学习者不同，我们的目标受众是那些渴望**深入了解并实践****Agent****框架以及智能体系统的开发者**。\n  - 技术基础：\n    - 我们的课程将**直接从代码层面探索智能体的个性化开发**\n    - 适合拥有**Python编程基础**（最好拥有一定异步编程基础）\n    - 能**熟练阅读和理解项目源代码**的学习者\n  - 兴趣与动机：适合对AI智能体领域充满热情的学习者，特别是那些希望从代码层面对智能体进行个性化能力开发的人。我们的课程旨在帮助学习者将理论知识转化为实际应用。\n\n项目在线教程（二月组队学习版**组队学习请阅读这篇文档**）：https://deepwisdom.feishu.cn/wiki/MLILw0EdRiyiYRkJLgOcskyAnUh  \n\n旧版在线教程（MetaGPT0.4 + Actionnode 特性学习）：https://deepwisdom.feishu.cn/wiki/KhCcweQKmijXi6kDwnicM0qpnEf  \n\nMetaGPT:https://github.com/geekan/MetaGPT\n\n> 注：如果有同学希望了解大模型的模型构成，以及从零手写RAG、Agent和Eval等任务，可以学习Datawhale的另一个项目[Tiny-Universe](https://github.com/datawhalechina/tiny-universe)，大模型是当下深度学习领域的热点，但现有的大部分大模型教程只在与教给大家如何调用api完成大模型的应用，而很少有人能够从原理层面讲清楚模型结构、RAG、Agent 以及 Eval。所以该仓库会提供全部手写，不采用调用api的形式，完成大模型的 RAG 、 Agent 、Eval 任务。\n\n> 注：考虑到有同学希望在学习本项目之前，希望学习大模型的理论部分，如果想要进一步深入学习 LLM 的理论基础，并在理论的基础上进一步认识、应用 LLM，可以参考 Datawhale 的 [so-large-llm](https://github.com/datawhalechina/so-large-lm.git)课程。\n\n> 注：更多与 agent 开发相关的仓库，请参考[agent-tutorial 智能体应用开发](https://github.com/datawhalechina/agent-tutorial)[从零开始学多智能体应用开发](https://datawhaler.feishu.cn/wiki/N2IowK6YkigGoJkydS8cNWBZnGc)\n\n## 目录\n\n**第一章：前期准备**\n\n**1.1 获取MetaGPT**\n\n**1.2 配置MetaGPT**\n> **1.2.1 申请 ChatGPT API 接口**\n>> - **1.2.1.1 获取 OpenAI API Key**\n>> - **1.2.1.2 配置 OpenAI API Key**\n>> - **1.2.1.3 配置Gemini 智谱/星火等LLM**\n>>- **1.3 首次尝试**\n\n**第二章：智能体结构及多智能体框架介绍**\n\n**2.1 AI Agent体系介绍**\n> - **单体AI Agent**\n> - **智能体用例**\n>> - 概念验证Agent-BabyAGI\n>> - 生成Agents模拟\n>> - 应用层的Moe-多人求解\n> - **2.1.3 Sy1&Sy2给Agent的启发**\n> - **2.1.4 更多仓库以及产品**\n\n**2.2 多智能体框架介绍**\n> - **2.2.1 什么是MetaGPT**\n> - **2.2.2 经典案例：软件公司**\n> - **2.2.3 更多关于MetaGPT**\n> - **2.2.4 其他多智能体框架**\n>> - ChatDev\n>> - AutoAgents\n>> - agents\n>> - Camel\n>> - AutoGen\n\n**第三章：智能体开发**\n\n**3.1 Agent概念模块**\n\n**3.2 RoleContext**\n\n**3.3 实现一个简洁的Agent**\n> - **3.3.1 需求分析**\n> - **3.3.2 编写SimpleWriteCode助手**\n> - **3.3.3 设计SimpleCoder角色**\n\n**3.4 实现一个多功能Agent**\n> - **3.4.1 需求分析**\n> - **3.4.2 编写SimpleWriteCode助手**\n> - **3.4.3 编写 SimpleRunCode 助手**\n> - **3.4.4 定义 RunnableCoder 角色**\n> - **3.4.5 运行 RunnableCoder 角色**\n\n**3.5 实现一个管理类Agent: 技术文档助手**\n> - **3.5.1 需求分析**\n> - **3.5.2 编写 WriteDirectory 助手**\n> - **3.5.3 编写 WriteContent 助手**\n> - **3.5.4 编写 TutorialAssistant 角色**\n> - **3.5.5 运行 TutorialAssistant 角色**\n\n**3.6 智能体案例剖析**\n\n**3.7 智能体开发作业**\n\n**第四章：多智能体开发**\n\n**4.1 Multi Agent概念模块**\n\n**4.2 多智能体组件介绍**\n> - **4.2.1 Environment**\n> - **4.2.2 开发一个简单的多智能体系统**\n> - **4.2.3 Team**\n> - **4.2.4 基于Team开发的第一个智能体团队**\n\n**4.3 多智能体案例: 辩论**\n> - **4.3.1 定义动作**\n> - **4.3.2 定义角色Role**\n> - **4.3.3 实例化**\n\n**4.4 多智能体开发作业**\n\n\n## Roadmap\n\n- [x] 发布第一版内容内测\n- [x] 发布第一版内容公测\n- [x] 更新多智能体内容\n- [ ] 飞书内容迁移仓库\n- [ ] 引入 python 并发编程基础\n- [ ] werewolf_game 复现分析\n- [ ] minecraft 项目复现分析\n- [ ] agent + RL OverCooked AI Agent 解决方案\n- [ ] llm 角度看agent实现（agent实现的底层原理）\n\n\n## 参与贡献\n\n- 如果你想参与到项目中来欢迎查看项目的 [Issue]() 查看没有被分配的任务。\n- 如果你发现了一些问题，欢迎在 [Issue]() 中进行反馈🐛。\n- 如果你对本项目感兴趣想要参与进来可以通过 [Discussion]() 进行交流💬。\n\n如果你对 Datawhale 很感兴趣并想要发起一个新的项目，欢迎查看 [Datawhale 贡献指南](https://github.com/datawhalechina/DOPMC#%E4%B8%BA-datawhale-%E5%81%9A%E5%87%BA%E8%B4%A1%E7%8C%AE)。\n\n## 贡献者名单\n\n| 姓名 | 职责 | 简介 |\n| :----| :---- | :---- |\n| 潘笃驿 | 项目负责人 | 西安电子科技大学本科在读 |\n| 陈叶帆 | 核心贡献者 | MetaGPT成员 |\n| 沈楚城 | 核心贡献者 | MetaGPT成员 |\n| 郑蕲 | 核心贡献者 | MetaGPT成员 |\n| 徐宗泽 | 核心贡献者 | MetaGPT成员 |\n| 李柯辰 | 贡献者 | Datawhale成员 |\n| 丁世奇 | 贡献者 |  |\n| 回车 | 贡献者 |  |\n\n\n## 关注我们\n\n<div align=center>\n<p>扫描下方二维码关注公众号：Datawhale</p>\n<img src=\"https://raw.githubusercontent.com/datawhalechina/pumpkin-book/master/res/qrcode.jpeg\" width = \"180\" height = \"180\">\n</div>\n\n<div align=center>\n<p>扫描下方二维码关注公众号：MetaGPT</p>\n<img src=\"overrides\\assets\\images\\metagpt.jpg\" width = \"180\" height = \"180\">\n</div>\n\n## LICENSE\n\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://img.shields.io/badge/license-CC%20BY--NC--SA%204.0-lightgrey\" /></a><br />本作品采用<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。\n\n*注：默认使用CC 4.0协议，也可根据自身项目情况选用其他协议*\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 4.2470703125,
          "content": "# Project information\nsite_name: Hugging-multi-agent\nsite_author: Azula\nsite_description: 全面深入的agent学习开发指南\n\n\n\n# Configuration\ntheme:\n  name: material\n  custom_dir: overrides\n  language: zh\n  features:\n    # - announce.dismiss\n    - content.action.edit\n    # - content.action.view\n    - content.code.annotate\n    - content.code.copy\n    - content.tabs.link\n    - content.tooltips\n    # - header.autohide\n    # - navigation.expand\n    - navigation.indexes\n    # - navigation.instant\n    # - navigation.prune\n    # - navigation.sections\n    # - navigation.tabs\n    # - navigation.tabs.sticky\n    - navigation.top\n    - navigation.footer\n    - navigation.tracking\n    - search.highlight\n    - search.share\n    - search.suggest\n    - toc.follow\n    # - toc.integrate\n  palette:\n    - scheme: default\n      primary: white\n      # accent: indigo\n      toggle:\n        icon: material/theme-light-dark\n        name: Switch to dark mode\n    - scheme: slate\n      primary: grey\n      # accent: indigo\n      toggle:\n        icon: material/theme-light-dark\n        name: Switch to light mode\n  font:\n    text: Noto Sans SC\n    code: Fira Code\n  favicon: assets/images/logo.jpg\n  logo: assets/images/logo.jpg\n  icon:\n    logo: logo\n    repo: fontawesome/brands/github\n    edit: fontawesome/regular/pen-to-square\n\nextra:\n  alternate:\n    - name: 中文\n      link: /\n      lang: zh\n    - name: English\n      link: /en/\n      lang: en\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/datawhalechina/hugging-multi-agent\n  generator: false\n  status:\n    new: 最近添加\n\n# Plugins\nplugins:\n  - search\n  - glightbox:\n      touchNavigation: true\n      loop: false\n      effect: zoom\n      slide_effect: none\n      width: 100%\n      height: auto\n      zoomable: true\n      draggable: false\n      auto_caption: false\n      caption_position: bottom\n\n# Extensions\nmarkdown_extensions:\n  - abbr\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  # - pymdownx.emoji:\n  #     emoji_index: !!python/name:materialx.emoji.twemoji\n  #     emoji_generator: !!python/name:materialx.emoji.to_svg\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n  - pymdownx.keys\n  # - pymdownx.magiclink:\n  #     repo_url_shorthand: true\n  #     user: squidfunk\n  #     repo: mkdocs-material\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n\nextra_javascript:\n  - javascripts/mathjax.js\n  - https://polyfill.io/v3/polyfill.min.js?features=es6\n  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\n  # - javascripts/katex.js \n  # - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.js  \n  # - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/contrib/auto-render.min.js\n\nextra_css:\n  - stylesheets/extra.css\n  # - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.css\n\n# Page tree\nnav:\n  - 第 1 章 &nbsp; 获取MetaGPT:\n    # [icon: material/book-open-outline]\n    - chapter1/index.md\n    - 1.1 &nbsp; 获取MetaGPT: chapter1/获取MetaGPT.md\n\n  - 第 2 章 &nbsp; 智能体综述及多智能体框架介绍:\n\n    - chapter2/index.md\n    - 2.1 &nbsp; AI Agent体系介绍: chapter2/AIAgent知识体系结构.md\n    - 2.2 &nbsp; 多智能体框架介绍: chapter2/多智能体框架介绍.md\n\n  - 第 3 章 &nbsp; 单智能体开发:\n\n    - chapter3/index.md\n    - 3.1 &nbsp; Agent概念概述: chapter3/Agent概念概述.md\n    - 3.2 &nbsp; RoleContext对象分析: chapter3/RoleContext对象分析.md\n    - 3.3 &nbsp; 实现一个单动作Agent: chapter3/实现一个单动作Agent.md\n    - 3.4 &nbsp; 实现一个多动作Agent: chapter3/实现一个多动作Agent.md\n    - 3.5 &nbsp; 实现一个更复杂的Agent：技术文档助手: chapter3/实现一个更复杂的Agent：技术文档助手.md\n    - 3.6 &nbsp; 单智能体案例OSS-订阅智能体: chapter3/单智能体案例OSS-订阅智能体.md\n    - 3.7 &nbsp; 智能体开发作业: chapter3/智能体开发作业.md\n\n  - 参考文献:\n    - chapter_reference/index.md"
        },
        {
          "name": "overrides",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}