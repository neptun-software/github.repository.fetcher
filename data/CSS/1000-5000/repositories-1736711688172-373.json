{
  "metadata": {
    "timestamp": 1736711688172,
    "page": 373,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tkashkin/Adwaita-for-Steam",
      "stars": 1191,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.107421875,
          "content": "# Tab indentation\n[*.{py,css}]\nindent_style = tab\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03125,
          "content": "config_USER.json\n.idea/\n.fleet/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "MIT License\n\nCopyright (c) 2022 Anatoliy Kashkin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.3076171875,
          "content": "# Adwaita for Steam\n\nA skin to make Steam look more like a native GNOME app\n\n<p align=\"center\">\n\t<img alt=\"Store\" src=\"/screenshots/store.png?raw=true\" width=\"45%\">\n\t&nbsp; &nbsp; &nbsp; &nbsp;\n\t<img alt=\"Library\" src=\"/screenshots/library.png?raw=true\" width=\"45%\">\n</p>\n\n### Limitations\n\n* **Steam updates may reset theme**: While the installer will patch steam files in order to theme the interface, these files may be reset by steam updates. If this happens, you will need to reinstall to repatch them.\n* **Rounded corners**: Not all elements can be rounded, use [Rounded Window Corners Reborn extension](https://github.com/flexagoon/rounded-window-corners) on GNOME.\n* **Steam website pages (Store/Community/Profiles/etc)**: No longer themable with our current method.\n* **Position of notifications**: Doesn't seem to be possible to change.\n* **Height of game list entries**: Doesn't seem to be possible to increase.\n\n## Requirements\n\n* [Python 3](https://www.python.org/downloads/)\n* The skin is created and tested mostly on the Linux version of Steam. Steam's new UI has largely unified platform differences, so other platforms should work, but are not a priority.\n\n## Color themes\n\n<details><summary>Color theme previews</summary>\n\n### Adwaita\n\n![Adwaita](/adwaita/colorthemes/adwaita/preview.png?raw=true)\n\n### Breeze\n\n![Breeze](/adwaita/colorthemes/breeze/preview.png?raw=true)\n\n### Canta\n\n![Canta](/adwaita/colorthemes/canta/preview.png?raw=true)\n\n### Catppuccin-Frappe\n\n![Catppuccin-Frappe](/adwaita/colorthemes/catppuccin-frappe/preview.png?raw=true)\n\n### Catppuccin-Macchiato\n\n![Catppuccin-Macchiato](/adwaita/colorthemes/catppuccin-macchiato/preview.png?raw=true)\n\n### Catppuccin-Mocha\n\n![Catppuccin-Mocha](/adwaita/colorthemes/catppuccin-mocha/preview.png?raw=true)\n\n### Dracula\n\n![Dracula](/adwaita/colorthemes/dracula/preview.png?raw=true)\n\n### Everforest\n\n![Everforest](/adwaita/colorthemes/everforest/preview.png?raw=true)\n\n### Gruvbox\n\n![Gruvbox](/adwaita/colorthemes/gruvbox/preview.png?raw=true)\n\n### Kate\n\n![Kate](/adwaita/colorthemes/kate/preview.png?raw=true)\n\n### Metro\n\n![Metro](/adwaita/colorthemes/metro/preview.png?raw=true)\n\n### Nord\n\n![Nord](/adwaita/colorthemes/nord/preview.png?raw=true)\n\n### One Pro\n\n![One Pro](/adwaita/colorthemes/one-pro/preview.png?raw=true)\n\n### Pop\n\n![Pop](/adwaita/colorthemes/pop/preview.png?raw=true)\n\n### Tokyo Night\n\n![Tokyo Night](/adwaita/colorthemes/tokyo-night/preview.png?raw=true)\n\n### Tomorrow Night\n\n![Tomorrow Night](/adwaita/colorthemes/tomorrow-night/preview.png?raw=true)\n\n### Vapor\n\n![Vapor](/adwaita/colorthemes/vapor/preview.png?raw=true)\n\n### VGUI2\n\n![VGUI2](/adwaita/colorthemes/vgui2/preview.png?raw=true)\n\n### Yaru\n\n![Yaru](/adwaita/colorthemes/yaru/preview.png?raw=true)\n\n</details>\n\n## Installation\n\n### With installer script\n\n```bash\ngit clone https://github.com/tkashkin/Adwaita-for-Steam\ncd Adwaita-for-Steam\n./install.py\n```\n\n#### Arguments\n\n| Argument                | Short | Required Values                                       | Description                                        |\n|-------------------------|-------|-------------------------------------------------------|----------------------------------------------------|\n| --help                  | -h    |                                                       | Show help message                                  |\n| --list-options          | -l    |                                                       | List available themes and extras                   |\n| --color-theme           | -c    | [Colortheme](/adwaita/colorthemes)                    | Change color theme                                 |\n| --windowcontrols-theme  |       | auto / adwaita / windows / macos                      | Change window control buttons style                |\n| --windowcontrols-layout |       | auto / gnome / pantheon / windows / macos / \\[custom] | Change window control buttons position and order   |\n| --custom-css            |       |                                                       | Enable [custom css](/custom)                       |\n| --extras                | -e    | [Extra](adwaita/extras)                               | Enable one or multiple theme extras                |\n| --target                | -t    | normal / flatpak / \\[custom dir]                      | Choose target location for install (default: both) |\n| --uninstall             | -u    |                                                       | Uninstall theme                                    |\n\n#### Example Usage\n\n```bash\n# List options\n./install.py -l\n# Install with customizations\n./install.py -c nord -e login/hide_qr -e library/hide_whats_new\n```\n\n<details><summary>Custom CSS</summary>\n\nIf you wish to include your own custom CSS, see [custom](/custom) and use the `--custom-css` flag.\n\n```bash\n./install.py --custom-css\n```\n\n</details>\n\n### With graphical installer\n\nUse the [graphical installer](https://github.com/Foldex/AdwSteamGtk) by [@Foldex](https://github.com/Foldex).\n\n<a href=\"https://flathub.org/apps/details/io.github.Foldex.AdwSteamGtk\"><img width=\"200\" alt=\"Download on Flathub\" src=\"https://flathub.org/assets/badges/flathub-badge-i-en.svg\"/></a>\n\n### Windows Install\n\n- Download the [Latest Release](https://github.com/tkashkin/Adwaita-for-Steam/releases)\n- Ensure you have [Python](#requirements) installed\n- Double click the `install_windows` bat script and follow the prompts\n\n"
        },
        {
          "name": "adwaita",
          "type": "tree",
          "content": null
        },
        {
          "name": "custom",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.py",
          "type": "blob",
          "size": 15.6787109375,
          "content": "#!/usr/bin/env python3\nimport subprocess\nfrom argparse import ArgumentParser\nfrom pathlib import Path\nfrom sys import platform\nfrom tempfile import TemporaryDirectory, NamedTemporaryFile\nfrom typing import NoReturn\nimport shutil\nimport time\nimport os\n\n# Platform Specific\nif platform == \"win32\":\n\tis_windows = True\n\n\tTEXT_BOLD = \"\"\n\tTEXT_BLUE = \"\"\n\tTEXT_GREEN = \"\"\n\tTEXT_PURPLE = \"\"\n\tTEXT_RED = \"\"\n\tTEXT_RESET = \"\"\n\n\tTEXT_ARROW = \"\"\n\tTEXT_CHECK = \"\"\n\tTEXT_CROSS = \"\"\n\tTEXT_INFO = \"\"\nelse:\n\tis_windows = False\n\n\tTEXT_BOLD = \"\\033[1m\"\n\tTEXT_BLUE = \"\\033[1;34m\"\n\tTEXT_GREEN = \"\\033[1;32m\"\n\tTEXT_PURPLE = \"\\033[1;35m\"\n\tTEXT_RED = \"\\033[1;31m\"\n\tTEXT_RESET = \"\\033[0m\"\n\n\tTEXT_ARROW = \"→\"\n\tTEXT_CHECK = \"✓\"\n\tTEXT_CROSS = \"✖\"\n\tTEXT_INFO = \"✦\"\n\nADWAITA_DIR = \"adwaita\"\nCOLOR_THEME_DIR = f\"{ADWAITA_DIR}/colorthemes\"\nCUSTOM_DIR = \"custom\"\nEXTRAS_DIR = f\"{ADWAITA_DIR}/extras\"\n\nTARGET_NORMAL = \"~/.steam/steam\"\nTARGET_FLATPAK = \"~/.var/app/com.valvesoftware.Steam/.steam/steam\"\nTARGET_WINDOWS = \"C:\\\\Program Files (x86)\\\\Steam\"\nTARGET_MACOS = \"~/Library/Application Support/Steam/Steam.AppBundle/Steam/Contents/MacOS\"\n\nSTEAM_LOOPBACK = \"https://steamloopback.host\"\nSTEAM_LOOPBACK_ADWAITA = f\"{STEAM_LOOPBACK}/{ADWAITA_DIR}\"\nSTEAM_PATCHED_HEADER = \"/*patched*/\"\n\nSTEAM_UI_DIR = \"steamui\"\nSTEAM_ADWAITA_DIR = f\"{STEAM_UI_DIR}/{ADWAITA_DIR}\"\nSTEAM_CSS_DIR = f\"{STEAM_UI_DIR}/css\"\n\nSTEAM_LIBRARY_CSS = f\"{STEAM_CSS_DIR}/library.css\"\nSTEAM_ORIG_LIBRARY = f\"{STEAM_CSS_DIR}/library.original.css\"\nSTEAM_CUSTOM_LIBRARY = f\"{STEAM_UI_DIR}/libraryroot.custom.css\"\n\nLIBRARY_ROOT_CSS = \"libraryroot.custom.css\"\nCUSTOM_CSS = \"custom.css\"\n\nadwaitadir = Path(ADWAITA_DIR)\ncolorthemedir = Path(COLOR_THEME_DIR)\ncustomdir = Path(CUSTOM_DIR)\nextrasdir = Path(EXTRAS_DIR)\n\n# CSS List for @import\nLIBRARY_FILES = [\n\t\"css/_root/colors.css\",\n\t\"css/_root/icons.css\",\n\t\"css/_root/localization.css\",\n\t\"css/_root/opacity.css\",\n\t\"css/_root/text.css\",\n\t\"css/_root/variables.css\",\n\n\t\"css/widgets/avatars.css\",\n\t\"css/widgets/buttons.css\",\n\t\"css/widgets/cards.css\",\n\t\"css/widgets/checkboxes.css\",\n\t\"css/widgets/dialogs.css\",\n\t\"css/widgets/entries.css\",\n\t\"css/widgets/lists.css\",\n\t\"css/widgets/popups.css\",\n\t\"css/widgets/scrollbars.css\",\n\t\"css/widgets/windowcontrols.css\",\n\n\t\"css/main/headerbar/buttons.css\",\n\t\"css/main/headerbar/headerbar.css\",\n\t\"css/main/headerbar/menu.css\",\n\t\"css/main/headerbar/navigation.css\",\n\n\t\"css/main/library/details/header.css\",\n\t\"css/main/library/details/activity.css\",\n\t\"css/main/library/details/details.css\",\n\t\"css/main/library/details/event-dialog.css\",\n\n\t\"css/main/library/home/game-card.css\",\n\t\"css/main/library/home/home.css\",\n\t\"css/main/library/home/news.css\",\n\n\t\"css/main/library/sidebar/gamelist.css\",\n\t\"css/main/library/sidebar/sidebar.css\",\n\n\t\"css/main/library/collections/collections.css\",\n\n\t\"css/main/library/downloads/downloads.css\",\n\n\t\"css/main/library/library.css\",\n\n\t\"css/chat/chat.css\",\n\t\"css/chat/sidebar.css\",\n\t\"css/chat/messages.css\",\n\n\t\"css/dialogs/pagedsettings/dialog.css\",\n\t\"css/dialogs/pagedsettings/rows.css\",\n\n\t\"css/dialogs/login.css\",\n\t\"css/dialogs/settings.css\",\n\t\"css/dialogs/appproperties.css\"\n]\n\nWINDOWCONTROLS_PRESETS = {\n\t\"gnome\": \":close\",\n\t\"adwaita\": \":close\",\n\t\"pantheon\": \"close:maximize\",\n\t\"elementary\": \"close:maximize\",\n\t\"windows\": \":minimize,maximize,close\",\n\t\"macos\": \"close,minimize,maximize:\"\n}\n\nWINDOWCONTROLS_SELECTORS = {\n\t\"minimize\": \"&.minimizeButton\",\n\t\"maximize\": \"&.maximizeButton, &.restoreButton\",\n\t\"close\": \"&.closeButton\"\n}\n\n# Utils\ndef copy_dir(source: Path, target: Path):\n\tif not source.is_dir():\n\t\traise SystemExit(f\"{TEXT_RED}{TEXT_CROSS} copy_dir:{source} is not a valid directory.{TEXT_RESET}\")\n\tif target.is_dir():\n\t\tshutil.rmtree(target)\n\tshutil.copytree(source, target)\n\n# List Options\ndef list_options(type: str, options: list[Path], suffix: str, sourcedir: Path, arg: str):\n\tif options:\n\t\tprint(f\"{TEXT_BLUE}{TEXT_BOLD}{type.upper()}: {len(options)}{TEXT_RESET}\")\n\t\tfor option in options:\n\t\t\tname = os.path.relpath(option, sourcedir).removesuffix(suffix).replace(\"\\\\\", \"/\")\n\n\t\t\tif type == \"color themes\":\n\t\t\t\tname = name.split(\"/\")[1]\n\n\t\t\tdescription = \"\"\n\n\t\t\tprint(f\"{TEXT_PURPLE}{TEXT_BOLD}{name}{TEXT_RESET}{description}\")\n\t\tprint(f\"\\nApply {type} using {TEXT_GREEN}'./install.py --{arg} NAME'{TEXT_RESET}\\n\")\n\telse:\n\t\tprint(f\"{TEXT_PURPLE}{TEXT_INFO} No {type} available\\n{TEXT_RESET}\")\n\n# CSS Theme\ndef find_extras() -> list[Path]:\n\treturn list(extrasdir.glob(\"**/*.css\"))\n\ndef format_import(prefix: str, string: str) -> str:\n\treturn f\"@import url(\\\"{prefix}/{string}\\\");\\n\"\n\ndef generate_windowcontrols(layout: str) -> str:\n\t(buttons_left, buttons_right) = [[b for b in s.split(',') if b in WINDOWCONTROLS_SELECTORS] for s in layout.split(':')]\n\twindowcontrols = f\"\"\":root\n{{\n\t--adw-windowcontrols-left-has-buttons: { 0 if len(buttons_left) == 0 else 1 };\n\t--adw-windowcontrols-left-buttons: { len(buttons_left) };\n\t--adw-windowcontrols-right-has-buttons: { 0 if len(buttons_right) == 0 else 1 };\n\t--adw-windowcontrols-right-buttons: { len(buttons_right) };\n\t--adw-windowcontrols-close-margin-left: calc({ 1 if \"close\" in buttons_left else 0 } * (var(--adw-windowcontrols-buttons-margin-outer) + var(--adw-windowcontrols-button-width) + var(--adw-windowcontrols-buttons-margin-inner)));\n\t--adw-windowcontrols-close-margin-right: calc({ 1 if \"close\" in buttons_right else 0 } * (var(--adw-windowcontrols-buttons-margin-outer) + var(--adw-windowcontrols-button-width) + var(--adw-windowcontrols-buttons-margin-inner)));\n}}\n\nbody.DesktopUI,\nhtml.client_chat_frame\n{{\n\t.title-bar-actions .title-area-icon\n\t{{\n\t\tvisibility: hidden !important;\n\"\"\"\n\n\tfor i, b in enumerate(buttons_left):\n\t\twindowcontrols += f\"\"\"\n\t\t{ WINDOWCONTROLS_SELECTORS[b] }\n\t\t{{\n\t\t\tvisibility: visible !important;\n\t\t\tleft: calc(var(--adw-windowcontrols-buttons-margin-outer) + {i} * var(--adw-windowcontrols-button-width) + {i} * var(--adw-windowcontrols-button-gap)) !important;\n\n\t\t\thtml.client_chat_frame div.chat_main.singlewindow:not(:has(div.friendsListContainer.collapsed)) div.multiChatDialog &\n\t\t\t{{\n\t\t\t\tvisibility: hidden !important;\n\t\t\t}}\n\t\t}}\n\"\"\"\n\n\tfor i, b in enumerate(reversed(buttons_right)):\n\t\twindowcontrols += f\"\"\"\n\t\t{ WINDOWCONTROLS_SELECTORS[b] }\n\t\t{{\n\t\t\tvisibility: visible !important;\n\t\t\tright: calc(var(--adw-windowcontrols-buttons-margin-outer) + {i} * var(--adw-windowcontrols-button-width) + {i} * var(--adw-windowcontrols-button-gap)) !important;\n\n\t\t\thtml.client_chat_frame div.chat_main.singlewindow div.friendsListContainer:not(.collapsed) &\n\t\t\t{{\n\t\t\t\tvisibility: hidden !important;\n\t\t\t}}\n\t\t}}\n\"\"\"\n\twindowcontrols += f\"\"\"\n\t}}\n}}\"\"\"\n\treturn windowcontrols\n\ndef generate_libraryroot(target: Path, extras: list[Path], color_theme: str, windowcontrols_theme: str, windowcontrols_layout: str, custom_css: bool):\n\tcontent = \"/* Main Files */\\n\"\n\tfor f in LIBRARY_FILES:\n\t\tcontent += format_import(STEAM_LOOPBACK_ADWAITA, f)\n\n\tif extras:\n\t\tprint()\n\t\tcontent += \"\\n/* Extras */\\n\"\n\n\t\tfor extra in extras:\n\t\t\twe = extra.removesuffix(\".css\")\n\t\t\ttest = extrasdir / we\n\t\t\tif test.with_suffix(\".css\").exists():\n\t\t\t\tprint(f\"{TEXT_BLUE}{TEXT_ARROW} Applying extra {TEXT_BOLD}{we}{TEXT_RESET}{TEXT_BLUE}...{TEXT_RESET}\")\n\t\t\t\tcontent += format_import(STEAM_LOOPBACK_ADWAITA, f\"extras/{we}.css\")\n\t\t\telse:\n\t\t\t\tprint(f\"{TEXT_PURPLE}{TEXT_INFO} Extra: {TEXT_BOLD}{we}{TEXT_RESET}{TEXT_PURPLE} not found!{TEXT_RESET}\")\n\t\tprint()\n\n\tif color_theme:\n\t\tprint(f\"{TEXT_BLUE}{TEXT_ARROW} Applying color theme {TEXT_BOLD}{color_theme}{TEXT_RESET}{TEXT_BLUE}...{TEXT_RESET}\")\n\t\tcontent += \"\\n/* Color theme */\\n\"\n\t\tcontent += format_import(STEAM_LOOPBACK_ADWAITA, f\"colorthemes/{color_theme}/{color_theme}.css\")\n\n\tif windowcontrols_theme:\n\t\tprint(f\"{TEXT_BLUE}{TEXT_ARROW} Applying window controls theme {TEXT_BOLD}{windowcontrols_theme}{TEXT_RESET}{TEXT_BLUE}...{TEXT_RESET}\")\n\t\tcontent += \"\\n/* Window controls theme */\\n\"\n\t\tcontent += format_import(STEAM_LOOPBACK_ADWAITA, f\"windowcontrols/{windowcontrols_theme}.css\")\n\n\tif custom_css:\n\t\tprint(f\"{TEXT_BLUE}{TEXT_ARROW} Applying custom css...{TEXT_RESET}\")\n\t\tcontent += \"\\n/* Custom CSS */\\n\"\n\t\tcontent += format_import(STEAM_LOOPBACK_ADWAITA, f\"custom/{CUSTOM_CSS}\")\n\n\tif windowcontrols_layout:\n\t\tif ':' not in windowcontrols_layout:\n\t\t\twindowcontrols_layout = ':' + windowcontrols_layout\n\t\tprint(f\"{TEXT_BLUE}{TEXT_ARROW} Applying window controls layout {TEXT_BOLD}{windowcontrols_layout}{TEXT_RESET}{TEXT_BLUE}...{TEXT_RESET}\")\n\t\tcontent += f\"\\n/* Window controls layout - {windowcontrols_layout} */\\n\"\n\t\tcontent += generate_windowcontrols(windowcontrols_layout)\n\n\ttarget.open('w').write(content)\n\n# Color Themes\ndef find_color_themes() -> list[Path]:\n\treturn list(sorted(colorthemedir.glob(\"**/*.css\")))\n\n# Patching\ndef patch_client_css(target: Path, name: str):\n\tprint(f\"{TEXT_BLUE}{TEXT_ARROW} Patching Steam Client {TEXT_BOLD}{name}{TEXT_RESET}{TEXT_BLUE} Files...{TEXT_RESET}\")\n\n\tif name == \"Library\":\n\t\ttarget_css = target / STEAM_LIBRARY_CSS\n\t\torig_css = target / STEAM_ORIG_LIBRARY\n\t\tcustom_library = target / STEAM_CUSTOM_LIBRARY\n\t\tcustom_library_name = custom_library.name\n\telse:\n\t\traise SystemExit(f\"{TEXT_RED}{TEXT_CROSS} Invalid steam css patch selected: {name}{TEXT_RESET}\")\n\n\tif not target_css.exists():\n\t\tprint(f\"{TEXT_PURPLE}{TEXT_INFO} File {TEXT_BOLD}{target_css}{TEXT_RESET}{TEXT_PURPLE} does not exist{TEXT_RESET}\")\n\t\treturn\n\n\t# Skip if already patched\n\twith target_css.open() as css_file:\n\t\tif css_file.readline().strip() == STEAM_PATCHED_HEADER:\n\t\t\treturn\n\n\torig_css = target_css.replace(target_css.with_suffix(\".original.css\"))\n\tname = target_css.stem\n\tcss_dir = \"css\"\n\n\tcontent = f'{STEAM_PATCHED_HEADER}\\n'\n\tcontent += format_import(STEAM_LOOPBACK, f\"{css_dir}/{name}.original.css\")\n\tcontent += format_import(STEAM_LOOPBACK, f\"{custom_library_name}\")\n\n\ttarget_css.open('w').write(content)\n\n\tsize_diff = orig_css.stat().st_size - target_css.stat().st_size\n\tpadding = \" \" * size_diff\n\ttarget_css.open('a').write(padding)\n\ndef uninstall_theme(target: Path):\n\tadwaita = target / STEAM_ADWAITA_DIR\n\tcustom_library = target / STEAM_CUSTOM_LIBRARY\n\tsteamui = target / STEAM_UI_DIR\n\n\tprint(f\"{TEXT_BLUE}{TEXT_ARROW} Uninstalling, resetting patched Steam CSS...{TEXT_RESET}\")\n\n\tif not steamui.is_dir():\n\t\tprint(f\"{TEXT_PURPLE}{TEXT_INFO} steamui in {TEXT_BOLD}{target}{TEXT_RESET}{TEXT_PURPLE} not found, skipping...{TEXT_RESET}\")\n\t\treturn\n\n\topen(custom_library, 'w').close()\n\tif adwaita.is_dir():\n\t\tshutil.rmtree(adwaita)\n\n# It is possible to force the steam client to reload the theme by creating a uniquely named new file inside the steamui dir.\n# This only seems to work when Steam is run with the -dev arg, and reloading repeatedly can leak a lot of memory.\n# Still, this is useful for testing changes\ndef dev_reload(target: Path):\n\tif not args.dev or not target.is_dir():\n\t\treturn\n\n\tsd = target / \"steamui\"\n\tif not sd.is_dir():\n\t\tprint(\"{TEXT_PURPLE}steamui dir not found. Cannot hot reload.{TEXT_RESET}\")\n\t\treturn\n\n\twith NamedTemporaryFile(dir=sd) as tmpfile:\n\t\ttmpfile.write(b\"\")\n\t\ttime.sleep(3)\n\n# Run\nif __name__ == \"__main__\":\n\tif not adwaitadir.exists():\n\t\traise SystemExit(f\"{TEXT_RED}{TEXT_CROSS} Theme directory {TEXT_BOLD}{ADWAITA_DIR}{TEXT_RESET}{TEXT_RED} does not exist. Make sure you're running the installer from its root directory{TEXT_RESET}\")\n\tif not colorthemedir.exists():\n\t\traise SystemExit(f\"{TEXT_RED}{TEXT_CROSS} Color Theme directory {TEXT_BOLD}{COLOR_THEME_DIR}{TEXT_RESET}{TEXT_RED} does not exist. Make sure you're running the installer from its root directory{TEXT_RESET}\")\n\n\tparser = ArgumentParser(description = \"Adwaita-for-Steam installer\")\n\tparser.add_argument(\"-c\", \"--color-theme\", default = \"adwaita\", type = str.lower, help = \"Choose color theme\")\n\tparser.add_argument(\"--windowcontrols-theme\", default = \"auto\", choices = [\"auto\", \"adwaita\", \"windows\", \"macos\"], type = str.lower, help = \"Window button theme\")\n\tparser.add_argument(\"--windowcontrols-layout\", default = \"auto\", type = str.lower, help = \"Window button positions: 'auto', 'gnome'|'adwaita', 'pantheon'|'elementary', 'windows', 'macos', or GNOME button layout string\")\n\tparser.add_argument(\"--custom-css\", action = \"store_true\", help = \"Enable Custom CSS\")\n\tparser.add_argument(\"-d\", \"--dev\", action = \"store_true\", help = \"Dev Mode\")\n\tparser.add_argument(\"-e\", \"--extras\", nargs = \"+\", action = \"extend\", help = \"Enable one or multiple theme extras\")\n\tparser.add_argument(\"-l\", \"--list-options\", action = \"store_true\", help = \"List available themes & extras and exit\")\n\tparser.add_argument(\"-t\", \"--target\", nargs = \"+\", action = \"extend\", help = \"Install targets: 'normal', 'flatpak', custom paths\")\n\tparser.add_argument(\"-u\", \"--uninstall\", action = \"store_true\", help = \"Uninstall theme\")\n\targs = parser.parse_args()\n\n\tif args.target is None:\n\t\tif platform == \"linux\":\n\t\t\targs.target = [\"normal\", \"flatpak\"]\n\t\telif platform == \"win32\":\n\t\t\targs.target = [\"windows\"]\n\t\telif platform == \"darwin\":\n\t\t\targs.target = [\"macos\"]\n\n\tif args.list_options:\n\t\tlist_options(\"color themes\", find_color_themes(), \".css\", colorthemedir, \"color-theme\")\n\t\tlist_options(\"extras\", find_extras(), \".css\", extrasdir, \"extras\")\n\t\texit(0)\n\n\tif args.color_theme:\n\t\tif args.color_theme == \"adwaita\":\n\t\t\targs.color_theme = None\n\t\telse:\n\t\t\targs.color_theme = args.color_theme.removesuffix(\".css\")\n\t\t\ttest = colorthemedir / args.color_theme / args.color_theme\n\t\t\tif not test.with_suffix(\".css\").exists():\n\t\t\t\traise SystemExit(f\"{TEXT_RED}{TEXT_CROSS} {TEXT_BOLD}{test}{TEXT_RESET}{TEXT_RED} theme not found.{TEXT_RESET}\")\n\n\tif args.windowcontrols_theme == \"auto\":\n\t\tif platform == \"linux\":\n\t\t\targs.windowcontrols_theme = \"adwaita\"\n\t\telif platform == \"win32\":\n\t\t\targs.windowcontrols_theme = \"windows\"\n\t\telif platform == \"darwin\":\n\t\t\targs.windowcontrols_theme = \"macos\"\n\n\tif args.windowcontrols_layout == \"auto\":\n\t\tif platform == \"linux\":\n\t\t\ttry:\n\t\t\t\targs.windowcontrols_layout = subprocess.run(\n\t\t\t\t\targs = [\"gsettings\", \"get\", \"org.gnome.desktop.wm.preferences\", \"button-layout\"],\n\t\t\t\t\tcheck = True,\n\t\t\t\t\tcapture_output = True,\n\t\t\t\t\ttext = True\n\t\t\t\t).stdout.strip().strip(\"'\")\n\t\t\texcept:\n\t\t\t\targs.windowcontrols_layout = WINDOWCONTROLS_PRESETS[\"gnome\"]\n\t\telif platform == \"win32\":\n\t\t\targs.windowcontrols_layout = WINDOWCONTROLS_PRESETS[\"windows\"]\n\t\telif platform == \"darwin\":\n\t\t\targs.windowcontrols_layout = WINDOWCONTROLS_PRESETS[\"macos\"]\n\telif args.windowcontrols_layout in WINDOWCONTROLS_PRESETS:\n\t\targs.windowcontrols_layout = WINDOWCONTROLS_PRESETS[args.windowcontrols_layout]\n\n\twith TemporaryDirectory() as tmpdir:\n\t\ttmp = Path(tmpdir)\n\n\t\tcopy_dir(adwaitadir, tmp / ADWAITA_DIR)\n\t\tcopy_dir(customdir, tmp / ADWAITA_DIR / CUSTOM_DIR)\n\t\tsourcedir = tmp / ADWAITA_DIR\n\t\tlibraryroot = tmp / LIBRARY_ROOT_CSS\n\n\t\tprint(f\"{TEXT_BLUE}{TEXT_ARROW} Creating stage directory {TEXT_BOLD}{sourcedir}{TEXT_RESET}\")\n\n\t\tgenerate_libraryroot(libraryroot, args.extras, args.color_theme, args.windowcontrols_theme, args.windowcontrols_layout, args.custom_css)\n\n\t\ttargets = set()\n\n\t\tfor t in args.target:\n\t\t\tif t == \"normal\":\n\t\t\t\ttargets.add(Path(TARGET_NORMAL).expanduser().resolve())\n\t\t\telif t == \"flatpak\":\n\t\t\t\ttargets.add(Path(TARGET_FLATPAK).expanduser().resolve())\n\t\t\telif t == \"windows\":\n\t\t\t\ttry:\n\t\t\t\t\timport winreg\n\t\t\t\t\treg_path = winreg.QueryValueEx(winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, \"SOFTWARE\\\\WOW6432Node\\\\Valve\\\\Steam\"), \"InstallPath\")[0]\n\t\t\t\t\ttargets.add(Path(reg_path).resolve())\n\t\t\t\texcept:\n\t\t\t\t\ttargets.add(Path(TARGET_WINDOWS).resolve())\n\t\t\telif t == \"macos\":\n\t\t\t\ttargets.add(Path(TARGET_MACOS).expanduser().resolve())\n\t\t\telse:\n\t\t\t\ttargets.add(Path(t).expanduser().resolve())\n\n\t\tfor target in targets:\n\t\t\tif not target.is_dir():\n\t\t\t\tprint(f\"{TEXT_PURPLE}{TEXT_INFO} Directory {TEXT_BOLD}{target}{TEXT_RESET}{TEXT_PURPLE} does not exist{TEXT_RESET}\")\n\t\t\t\tcontinue\n\n\t\t\tif args.uninstall:\n\t\t\t\tuninstall_theme(target)\n\t\t\t\tcontinue\n\n\t\t\tpatch_client_css(target, \"Library\")\n\t\t\tcopy_dir(sourcedir, target / STEAM_ADWAITA_DIR)\n\t\t\tshutil.copy(libraryroot, target / STEAM_CUSTOM_LIBRARY)\n\t\t\tdev_reload(target)\n\n\t\tprint(f\"{TEXT_GREEN}{TEXT_CHECK} Done!{TEXT_RESET}\")\n"
        },
        {
          "name": "install_windows.bat",
          "type": "blob",
          "size": 4.0244140625,
          "content": "@echo off\nECHO ----------------------------\nECHO Adwaita for Steam Installer\nECHO ----------------------------\n\n:: -----------------\n:: --- VARIABLES ---\n:: -----------------\n:: --- Do not edit these ---\n\n:: --- General ---\nSET NO_ROUNDED_CORNERS=-e general/no_rounded_corners\n\n:: --- Library ---\nSET HIDE_WHATS_NEW=-e library/hide_whats_new\nSET SIDEBAR_HOVER_ONLY=-e library/sidebar_hover\n\n:: --- Login ---\nSET LOGIN_HIDE_QR=-e login/hide_qr\nSET LOGIN_HOVER_ONLY_QR=-e login/hover_qr\n\nGOTO START_SECTION\n\n:: ---------------\n:: --- DEFAULT ---\n:: ---------------\n:DEFAULT_SECTION\nSET CHOSEN_COLORTHEME=adwaita\n\n:: SET CHOSEN_NO_ROUNDED_CORNERS=%NO_ROUNDED_CORNERS%\n\n:: SET CHOSEN_HIDE_WHATS_NEW=%HIDE_WHATS_NEW%\n:: SET CHOSEN_SIDEBAR_HOVER_ONLY=%SIDEBAR_HOVER_ONLY%\n\n:: Only uncomment one\n:: SET CHOSEN_LOGIN_QR=%LOGIN_HOVER_ONLY_QR%\n:: SET CHOSEN_LOGIN_QR=%LOGIN_HIDE_QR%\n\n:: SET CHOSEN_HIDE_BIG_PICTURE_BUTTON=%HIDE_BIG_PICTURE_BUTTON%\n:: SET CHOSEN_HIDE_PAGE_URL=%HIDE_PAGE_URL%\n\nGOTO INSTALL_SECTION\n\n:: -------------\n:: --- METRO ---\n:: -------------\n:METRO_SECTION\nSET CHOSEN_COLORTHEME=metro\nSET CHOSEN_NO_ROUNDED_CORNERS=%NO_ROUNDED_CORNERS%\nGOTO INSTALL_SECTION\n\n:: --------------\n:: --- CUSTOM ---\n:: --------------\n:CUSTOM_SECTION\nECHO --- Colortheme ---\nECHO 1) adwaita\nECHO 2) breeze\nECHO 3) canta\nECHO 4) catppuccin-frappe\nECHO 5) catppuccin-macchiato\nECHO 6) catppuccin-mocha\nECHO 7) dracula\nECHO 8) everforest\nECHO 9) gruvbox\nECHO 10) kate\nECHO 11) metro\nECHO 12) nord\nECHO 13) one-pro\nECHO 14) pop\nECHO 16) tokyo-night\nECHO 17) tomorrow-night\nECHO 18) vapor\nECHO 19) vgui2\nECHO 19) yaru\nSET /p MENUCHOICE=\"Enter a number: \"\nIF %MENUCHOICE%==1 SET CHOSEN_COLORTHEME=adwaita\nIF %MENUCHOICE%==2 SET CHOSEN_COLORTHEME=breeze\nIF %MENUCHOICE%==3 SET CHOSEN_COLORTHEME=canta\nIF %MENUCHOICE%==4 SET CHOSEN_COLORTHEME=catppuccin-frappe\nIF %MENUCHOICE%==5 SET CHOSEN_COLORTHEME=catppuccin-macchiato\nIF %MENUCHOICE%==6 SET CHOSEN_COLORTHEME=catppuccin-mocha\nIF %MENUCHOICE%==7 SET CHOSEN_COLORTHEME=dracula\nIF %MENUCHOICE%==8 SET CHOSEN_COLORTHEME=everforest\nIF %MENUCHOICE%==9 SET CHOSEN_COLORTHEME=gruvbox\nIF %MENUCHOICE%==10 SET CHOSEN_COLORTHEME=kate\nIF %MENUCHOICE%==11 SET CHOSEN_COLORTHEME=metro\nIF %MENUCHOICE%==12 SET CHOSEN_COLORTHEME=nord\nIF %MENUCHOICE%==13 SET CHOSEN_COLORTHEME=one-pro\nIF %MENUCHOICE%==14 SET CHOSEN_COLORTHEME=pop\nIF %MENUCHOICE%==15 SET CHOSEN_COLORTHEME=tokyo-night\nIF %MENUCHOICE%==16 SET CHOSEN_COLORTHEME=tomorrow-night\nIF %MENUCHOICE%==17 SET CHOSEN_COLORTHEME=vapor\nIF %MENUCHOICE%==18 SET CHOSEN_COLORTHEME=vgui2\nIF %MENUCHOICE%==19 SET CHOSEN_COLORTHEME=yaru\nECHO.\n\nECHO --- General ---\nECHO Disable Rounded Corners?\nSET /p MENUCHOICE=\"(y/n): \"\nIF %MENUCHOICE%==y SET CHOSEN_NO_ROUNDED_CORNERS=%NO_ROUNDED_CORNERS%\nECHO.\n\nECHO --- Library ---\nECHO Hide the Library What's New Shelf?\nSET /p MENUCHOICE=\"(y/n): \"\nIF %MENUCHOICE%==y SET CHOSEN_HIDE_WHATS_NEW=%HIDE_WHATS_NEW%\nECHO.\nECHO Show Library Sidebar only on mouse over?\nSET /p MENUCHOICE=\"(y/n): \"\nIF %MENUCHOICE%==y SET CHOSEN_SIDEBAR_HOVER_ONLY=%SIDEBAR_HOVER_ONLY%\nECHO.\n\nECHO --- Login ---\nECHO Login Dialog Mobile QR Code\nECHO 1) Show\nECHO 2) Show only on mouse over\nECHO 3) Hide\nSET /p MENUCHOICE=\"Enter a number: \"\nIF %MENUCHOICE%==2 SET CHOSEN_LOGIN_QR=%LOGIN_HOVER_ONLY_QR%\nIF %MENUCHOICE%==3 SET CHOSEN_LOGIN_QR=%LOGIN_HIDE_QR%\nECHO.\n\nGOTO INSTALL_SECTION\n\n:: -------------\n:: --- START ---\n:: -------------\n:START_SECTION\n\nECHO.\nECHO -------------------\nECHO --- Menu Select ---\nECHO -------------------\nECHO 1) Default Install (Quick)\nECHO 2) Metro Install (Quick)\nECHO 3) Custom Install (Interactive)\nECHO 4) Uninstall\n\nSET /p MENUCHOICE=\"Enter a number: \"\n\nIF %MENUCHOICE%==2 GOTO METRO_SECTION\nIF %MENUCHOICE%==3 GOTO CUSTOM_SECTION\nIF %MENUCHOICE%==4 GOTO UNINSTALL_SECTION\n\nGOTO DEFAULT_SECTION\n\n:: --- Install ---\n:INSTALL_SECTION\npython install.py -c %CHOSEN_COLORTHEME% %CHOSEN_NO_ROUNDED_CORNERS% %CHOSEN_HIDE_WHATS_NEW% %CHOSEN_SIDEBAR_HOVER_ONLY% %CHOSEN_LOGIN_QR%\nGOTO END_SECTION\n\n:: --- Uninstall ---\n:UNINSTALL_SECTION\npython install.py -u\nGOTO END_SECTION\n\n:: --- End ---\n:END_SECTION\nPAUSE\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "theme.json",
          "type": "blob",
          "size": 5.9794921875,
          "content": "{\n    \"name\": \"Adwaita for Steam\",\n    \"author\": \"tk\",\n    \"version\": \"v3.1\",\n    \"manifest_version\": 8,\n    \"description\": \"A skin to make Steam look more like a native GNOME app\",\n    \"target\": \"Desktop\",\n    \"tabs\": {\n        \"all\": [\"Steam|SteamLibraryWindow\", \"desktopchat\", \"desktopcontextmenu\", \"desktopoverlay\"]\n    },\n    \"inject\": {\n        \"adwaita/css/_root/colors.css\": [\"all\"],\n        \"adwaita/css/_root/icons.css\": [\"all\"],\n        \"adwaita/css/_root/localization.css\": [\"all\"],\n        \"adwaita/css/_root/opacity.css\": [\"all\"],\n        \"adwaita/css/_root/text.css\": [\"all\"],\n        \"adwaita/css/_root/variables.css\": [\"all\"],\n\n        \"adwaita/css/chat/chat.css\": [\"all\"],\n        \"adwaita/css/chat/messages.css\": [\"all\"],\n        \"adwaita/css/chat/sidebar.css\": [\"all\"],\n\n        \"adwaita/css/dialogs/pagedsettings/dialog.css\": [\"all\"],\n        \"adwaita/css/dialogs/pagedsettings/rows.css\": [\"all\"],\n        \"adwaita/css/dialogs/appproperties.css\": [\"all\"],\n        \"adwaita/css/dialogs/login.css\": [\"all\"],\n        \"adwaita/css/dialogs/settings.css\": [\"all\"],\n\n        \"adwaita/css/main/headerbar/buttons.css\": [\"all\"],\n        \"adwaita/css/main/headerbar/headerbar.css\": [\"all\"],\n        \"adwaita/css/main/headerbar/menu.css\": [\"all\"],\n        \"adwaita/css/main/headerbar/navigation.css\": [\"all\"],\n\n        \"adwaita/css/main/library/details/header.css\": [\"all\"],\n        \"adwaita/css/main/library/details/activity.css\": [\"all\"],\n        \"adwaita/css/main/library/details/details.css\": [\"all\"],\n        \"adwaita/css/main/library/details/event-dialog.css\": [\"all\"],\n\n        \"adwaita/css/main/library/home/game-card.css\": [\"all\"],\n        \"adwaita/css/main/library/home/home.css\": [\"all\"],\n        \"adwaita/css/main/library/home/news.css\": [\"all\"],\n\n        \"adwaita/css/main/library/sidebar/gamelist.css\": [\"all\"],\n        \"adwaita/css/main/library/sidebar/sidebar.css\": [\"all\"],\n\n        \"adwaita/css/main/library/collections/collections.css\": [\"all\"],\n\n        \"adwaita/css/main/library/downloads/downloads.css\": [\"all\"],\n\n        \"adwaita/css/main/library/library.css\": [\"all\"],\n\n        \"adwaita/css/widgets/avatars.css\": [\"all\"],\n        \"adwaita/css/widgets/buttons.css\": [\"all\"],\n        \"adwaita/css/widgets/cards.css\": [\"all\"],\n        \"adwaita/css/widgets/checkboxes.css\": [\"all\"],\n        \"adwaita/css/widgets/dialogs.css\": [\"all\"],\n        \"adwaita/css/widgets/entries.css\": [\"all\"],\n        \"adwaita/css/widgets/lists.css\": [\"all\"],\n        \"adwaita/css/widgets/popups.css\": [\"all\"],\n        \"adwaita/css/widgets/scrollbars.css\": [\"all\"],\n        \"adwaita/css/widgets/windowcontrols.css\": [\"all\"]\n    },\n    \"patches\": {\n        \"Color Theme\": {\n            \"type\":  \"dropdown\",\n            \"values\": {\n                \"adwaita\": { \"adwaita/colorthemes/adwaita/adwaita.css\": [\"all\"] },\n                \"breeze\": { \"adwaita/colorthemes/breeze/breeze.css\": [\"all\"] },\n                \"canta\": { \"adwaita/colorthemes/canta/canta.css\": [\"all\"] },\n                \"catppuccin-frappe\": { \"adwaita/colorthemes/catppuccin-frappe/catppuccin-frappe.css\": [\"all\"] },\n                \"catppuccin-macchiato\": { \"adwaita/colorthemes/catppuccin-macchiato/catppuccin-macchiato.css\": [\"all\"] },\n                \"catppuccin-mocha\": { \"adwaita/colorthemes/catppuccin-mocha/catppuccin-mocha.css\": [\"all\"] },\n                \"dracula\": { \"adwaita/colorthemes/dracula/dracula.css\": [\"all\"] },\n                \"everforest\": { \"adwaita/colorthemes/everforest/everforest.css\": [\"all\"] },\n                \"gruvbox\": { \"adwaita/colorthemes/gruvbox/gruvbox.css\": [\"all\"] },\n                \"kate\": { \"adwaita/colorthemes/kate/kate.css\": [\"all\"] },\n                \"metro\": { \"adwaita/colorthemes/metro/metro.css\": [\"all\"] },\n                \"nord\": { \"adwaita/colorthemes/nord/nord.css\": [\"all\"] },\n                \"one-pro\": { \"adwaita/colorthemes/one-pro/one-pro.css\": [\"all\"] },\n                \"pop\": { \"adwaita/colorthemes/pop/pop.css\": [\"all\"] },\n                \"tokyo-night\": { \"adwaita/colorthemes/tokyo-night/tokyo-night.css\": [\"all\"] },\n                \"tomorrow-night\": { \"adwaita/colorthemes/tomorrow-night/tomorrow-night.css\": [\"all\"] },\n                \"vapor\": { \"adwaita/colorthemes/vapor/vapor.css\": [\"all\"] },\n                \"vgui2\": { \"adwaita/colorthemes/vgui2/vgui2.css\": [\"all\"] },\n                \"yaru\": { \"adwaita/colorthemes/yaru/yaru.css\": [\"all\"] }\n            }\n        },\n        \"Window Controls Theme\": {\n            \"type\":  \"dropdown\",\n            \"values\": {\n                \"adwaita\": { \"adwaita/windowcontrols/adwaita.css\": [\"all\"] },\n                \"macos\": { \"adwaita/windowcontrols/macos.css\": [\"all\"] },\n                \"windows\": { \"adwaita/windowcontrols/windows.css\": [\"all\"] }\n            }\n        },\n        \"Rounded Corners\": {\n            \"type\": \"checkbox\",\n            \"values\": {\n                \"Yes\": {},\n                \"No\": {\n                    \"adwaita/extras/general/no_rounded_corners.css\": [\"all\"]\n                }\n            }\n        },\n        \"Show What's New\": {\n            \"type\": \"checkbox\",\n            \"values\": {\n                \"Yes\": {},\n                \"No\": {\n                    \"adwaita/extras/library/hide_whats_new.css\": [\"all\"]\n                }\n            }\n        },\n        \"Show Library Sidebar On Hover\": {\n            \"type\": \"checkbox\",\n            \"values\": {\n                \"No\": {},\n                \"Yes\": {\n                    \"adwaita/extras/library/sidebar_hover.css\": [\"all\"]\n                }\n            }\n        },\n        \"Login QR\": {\n            \"type\": \"dropdown\",\n            \"values\": {\n                \"Show\": {},\n                \"Show on Hover\": {\n                    \"adwaita/extras/login/hover_qr.css\": [\"all\"]\n                },\n                \"Hide\": {\n                    \"adwaita/extras/login/hide_qr.css\": [\"all\"]\n                }\n            }\n        },\n        \"Enable Custom CSS\": {\n            \"type\": \"checkbox\",\n            \"values\": {\n                \"No\": {},\n                \"Yes\": {\n                    \"custom/custom.css\": [\"all\"]\n                }\n            }\n        }\n    }\n}\n"
        }
      ]
    }
  ]
}