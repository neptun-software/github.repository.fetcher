{
  "metadata": {
    "timestamp": 1736711644700,
    "page": 276,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gotgit/gotgithub",
      "stars": 1486,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0126953125,
          "content": "_version.inc\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.091796875,
          "content": "[submodule \"graphics\"]\n\tpath = graphics\n\turl = git://github.com/gotgit/gotgithub-graphics.git\n"
        },
        {
          "name": "01-explore-github",
          "type": "tree",
          "content": null
        },
        {
          "name": "02-join-github",
          "type": "tree",
          "content": null
        },
        {
          "name": "03-project-hosting",
          "type": "tree",
          "content": null
        },
        {
          "name": "04-work-with-others",
          "type": "tree",
          "content": null
        },
        {
          "name": "05-commercial-github",
          "type": "tree",
          "content": null
        },
        {
          "name": "06-side-projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.580078125,
          "content": "# Makefile for Sphinx documentation\n#\n\n# You can set these variables from the command line.\nSPHINXOPTS    =\nSPHINXBUILD   = sphinx-build\nPAPER         =\nBUILDDIR      = _build\n\n# Internal variables.\nPAPEROPT_a4     = -D latex_paper_size=a4\nPAPEROPT_letter = -D latex_paper_size=letter\nALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .\n\n.PHONY: help clean html dirhtml singlehtml pickle json htmlhelp qthelp devhelp epub latex latexpdf text man changes linkcheck doctest\n\nhelp:\n\t@echo \"Please use \\`make <target>' where <target> is one of\"\n\t@echo \"  html       to make standalone HTML files\"\n\t@echo \"  dirhtml    to make HTML files named index.html in directories\"\n\t@echo \"  singlehtml to make a single large HTML file\"\n\t@echo \"  pickle     to make pickle files\"\n\t@echo \"  json       to make JSON files\"\n\t@echo \"  htmlhelp   to make HTML files and a HTML help project\"\n\t@echo \"  qthelp     to make HTML files and a qthelp project\"\n\t@echo \"  devhelp    to make HTML files and a Devhelp project\"\n\t@echo \"  epub       to make an epub\"\n\t@echo \"  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter\"\n\t@echo \"  latexpdf   to make LaTeX files and run them through pdflatex\"\n\t@echo \"  text       to make text files\"\n\t@echo \"  man        to make manual pages\"\n\t@echo \"  changes    to make an overview of all changed/added/deprecated items\"\n\t@echo \"  linkcheck  to check all external links for integrity\"\n\t@echo \"  doctest    to run all doctests embedded in the documentation (if enabled)\"\n\t@echo \"  gh-pages   to publish htmls on gh-pages branch for GitHub\"\n\nclean:\n\t-rm -rf $(BUILDDIR)/*\n\nhtml: pre-build\n\t$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html\n\t@echo\n\t@echo \"Build finished. The HTML pages are in $(BUILDDIR)/html.\"\n\ndirhtml: pre-build\n\t$(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) $(BUILDDIR)/dirhtml\n\t@echo\n\t@echo \"Build finished. The HTML pages are in $(BUILDDIR)/dirhtml.\"\n\nsinglehtml: pre-build\n\t$(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) $(BUILDDIR)/singlehtml\n\t@echo\n\t@echo \"Build finished. The HTML page is in $(BUILDDIR)/singlehtml.\"\n\npickle: pre-build\n\t$(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) $(BUILDDIR)/pickle\n\t@echo\n\t@echo \"Build finished; now you can process the pickle files.\"\n\njson: pre-build\n\t$(SPHINXBUILD) -b json $(ALLSPHINXOPTS) $(BUILDDIR)/json\n\t@echo\n\t@echo \"Build finished; now you can process the JSON files.\"\n\nhtmlhelp: pre-build\n\t$(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) $(BUILDDIR)/htmlhelp\n\t@echo\n\t@echo \"Build finished; now you can run HTML Help Workshop with the\" \\\n\t      \".hhp project file in $(BUILDDIR)/htmlhelp.\"\n\nqthelp: pre-build\n\t$(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) $(BUILDDIR)/qthelp\n\t@echo\n\t@echo \"Build finished; now you can run \"qcollectiongenerator\" with the\" \\\n\t      \".qhcp project file in $(BUILDDIR)/qthelp, like this:\"\n\t@echo \"# qcollectiongenerator $(BUILDDIR)/qthelp/GotGitHub.qhcp\"\n\t@echo \"To view the help file:\"\n\t@echo \"# assistant -collectionFile $(BUILDDIR)/qthelp/GotGitHub.qhc\"\n\ndevhelp: pre-build\n\t$(SPHINXBUILD) -b devhelp $(ALLSPHINXOPTS) $(BUILDDIR)/devhelp\n\t@echo\n\t@echo \"Build finished.\"\n\t@echo \"To view the help file:\"\n\t@echo \"# mkdir -p $$HOME/.local/share/devhelp/GotGitHub\"\n\t@echo \"# ln -s $(BUILDDIR)/devhelp $$HOME/.local/share/devhelp/GotGitHub\"\n\t@echo \"# devhelp\"\n\nepub: pre-build\n\t$(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) $(BUILDDIR)/epub\n\t@echo\n\t@echo \"Build finished. The epub file is in $(BUILDDIR)/epub.\"\n\nlatex: pre-build\n\t$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex\n\t@echo\n\t@echo \"Build finished; the LaTeX files are in $(BUILDDIR)/latex.\"\n\t@echo \"Run \\`make' in that directory to run these through (pdf)latex\" \\\n\t      \"(use \\`make latexpdf' here to do that automatically).\"\n\nlatexpdf: pre-build\n\t$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex\n\t@echo \"Running LaTeX files through pdflatex...\"\n\tmake -C $(BUILDDIR)/latex all-pdf\n\t@echo \"pdflatex finished; the PDF files are in $(BUILDDIR)/latex.\"\n\ntext: pre-build\n\t$(SPHINXBUILD) -b text $(ALLSPHINXOPTS) $(BUILDDIR)/text\n\t@echo\n\t@echo \"Build finished. The text files are in $(BUILDDIR)/text.\"\n\nman: pre-build\n\t$(SPHINXBUILD) -b man $(ALLSPHINXOPTS) $(BUILDDIR)/man\n\t@echo\n\t@echo \"Build finished. The manual pages are in $(BUILDDIR)/man.\"\n\nchanges: pre-build\n\t$(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) $(BUILDDIR)/changes\n\t@echo\n\t@echo \"The overview file is in $(BUILDDIR)/changes.\"\n\nlinkcheck: pre-build\n\t$(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck\n\t@echo\n\t@echo \"Link check complete; look for any errors in the above output \" \\\n\t      \"or in $(BUILDDIR)/linkcheck/output.txt.\"\n\ngh-pages: clean html\n\t@if ! git rev-parse refs/heads/gh-pages >/dev/null 2>&1 ; then \\\n\t\techo \"Branch gh-pages not exists, forgot check it out?\" >&2; \\\n\t\texit 1; \\\n\tfi\n\t@cp README.md _build/html/\n\t@echo '*' > _build/html/images/.gitignore\n\t@git add -f _build/html; \\\n\ttree=$$(git write-tree); \\\n\tnewhtml=$$(git ls-tree $$tree:_build | grep \"html$$\" | awk '{print $$3;}') ; \\\n\toldhtml=$$(git rev-parse refs/heads/gh-pages^{tree}); \\\n\tif [ \"$$oldhtml\" = \"$$newhtml\" ]; then \\\n\t  echo \"HTML is uptodate, branch gh-pages not changed.\" ; \\\n\telse \\\n\t  commit=$$(git log --format=%B -1 | git commit-tree $$newhtml -p refs/heads/gh-pages) ; \\\n\t  git update-ref -m \"HTML compiled from $$(git rev-parse HEAD)\" refs/heads/gh-pages $$commit ; \\\n\t  echo \"Branch gh-pages changed.\" ; \\\n\t  [ -x .git/hooks/post-commit ] && .git/hooks/post-commit; \\\n\tfi; \\\n\tgit rm --cached -r -q _build/html\n\ngh-pages-shift:\n\t@if ! git rev-parse refs/heads/gh-pages^ >/dev/null 2>&1 ; then \\\n\t\techo \"Branch gh-pages not exists or only one commit, forgot check it out?\" >&2; \\\n\t\texit 1; \\\n\tfi\n\tif git update-ref -m \"shift from $$(git rev-parse refs/heads/gh-pages)\" refs/heads/gh-pages $$(git rev-parse refs/heads/gh-pages^); then \\\n\t\techo \"gh-pages branch shift to last commit.\"; \\\n\tfi\n\t\n\ndoctest:\n\t$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest\n\t@echo \"Testing of doctests in the sources finished, look at the \" \\\n\t      \"results in $(BUILDDIR)/doctest/output.txt.\"\n\npre-build: images update-version\n\nimages:\n\t@(cd graphics; \\\n\t if test -f Rakefile; then \\\n\t     rake convert[../images,600]; \\\n\t else \\\n\t     echo \"ERROR: Submodule 'graphics' not found. Please init submodule using: \" >&2; \\\n\t\t\t echo \"ERROR:     git submodule init && git submodule update\" >&2; \\\n\t\t\t exit 1; \\\n\t fi)\n\nupdate-version:\n\t@sed -e \"s#<version>#$$(git describe --dirty --always)#g\" < _version.inc.in > _version.inc.tmp\n\t@if diff -q _version.inc.tmp _version.inc >/dev/null 2>&1; then \\\n\t\trm _version.inc.tmp; \\\n\telse \\\n\t\techo \"_version.inc.in => _version.inc\" ; \\\n\t\tmv _version.inc.tmp _version.inc; \\\n\tfi\n\n.PHONY : clean pre-build images gh-pages\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.08984375,
          "content": "这是一本关于GitHub的书，在线阅读请访问： <http://www.worldhello.net/gotgithub> 。\n\n动笔写GitHub不是因为我对其了解，恰恰是对其太不了解。在我写的 [《Git权威指南》][gotgit] 一书中，涉及到GitHub的只有区区三页纸，这显然回答不了读者对于GitHub的诸多疑问。\n\n这本书采用Creative Commons协议发布，并托管在GitHub上，意味着您可以免费阅读并可以用GitHub特有的方式参与本书的维护。\n\n## 如何离线阅读\n\n项目 [gotgit/gotgithub](https://github.com/gotgit/gotgithub) 的版本库中的 ``gh-pages`` 分支保存着本书编译后的页面，意味着您只要下载版本库并检出 ``gh-pages`` 分支即可在本地浏览。\n\n* 克隆版本库。\n\n        $ git clone git://github.com/gotgit/gotgithub.git\n\n* 检出 ``gh-pages`` 分支。\n\n        $ cd gotgithub\n        $ git checkout gh-pages\n\n* 用浏览器打开 ``index.html`` 即可离线阅读。\n\n因分支 ``gh-pages`` 的提交历史可能会周期性删除或压缩合并，为避免执行 ``git pull`` 更新分支时造成困惑，请对本地版本库进行如下设置。\n\n    $ git config --add remote.origin.fetch +refs/heads/gh-pages:refs/heads/gh-pages\n\n## 如何编译\n\n### 预备\n\n* Python, docutils\n\n    本书使用 [reStructuredText](http://docutils.sourceforge.net/rst.html) 格式撰写，格式解析依赖 Python 和 docutils 包。\n\n* Sphinx\n\n    用 [Sphinx](http://sphinx.pocoo.org/) 工具进行编译。编译前先确认已经安装 Python、docutils 及 sphinx。\n\n* ImageMagick 及 Inkscape\n\n    本书图片矢量图采用 [Inkscape](http://inkscape.org/) 绘制，位图处理采用 [GIMP](http://www.gimp.org/) 。上述格式图片在网页显示需要格式转换，格式转换需用到 ImageMagick 和 Inkscape。\n\n* Git\n\n    不解释。\n\n### 克隆版本库（本书书稿及图片）\n\n本书用两个版本库维护：\n\n* 书稿版本库：\n\n    https://github.com/gotgit/gotgithub/\n\n* 图片版本库：\n\n    https://github.com/gotgit/gotgithub-graphics/\n\n\n本书的图片版本库以子模组形式关联到书稿版本库，运行下面命令执行克隆：\n\n* 若尚未克隆书稿版本库，先克隆书稿版本库。\n\n        $ git clone git://github.com/gotgit/gotgithub.git\n        $ cd gotgithub\n\n* 默认检出 ``master`` 分支。如果当前非 ``master`` 分支，执行下面命令检出分支。\n\n        $ git checkout master\n\n* 通过子模组更新命令克隆子模组版本库（即保存图片的版本库）并检出。\n\n        $ git submodule init\n        $ git submodule update\n\n### 编译书稿\n\n确保安装了 Sphinx、ImageMagick、Inkscape。编译本书使用命令：\n\n    $ make html\n\n编译后的网页位于 ``_build/html`` 目录下。\n\n更多的格式输出参见下面的命令输出：\n\n    $ make\n\n## 如何贡献\n\n请采用GitHub方式贡献。\n\n* 创建派生项目。即 Fork。\n* 修改您觉得不满意的地方。修改后推送到您创建的分支版本库中。\n* 通过 GitHub 向我发送 Pull Request。\n\n[gotgit]: http://www.worldhello.net/gotgit/ \"Got Git\"\n\n-- 蒋鑫, <http://weibo.com/gotgit/>\n"
        },
        {
          "name": "_build",
          "type": "tree",
          "content": null
        },
        {
          "name": "_static",
          "type": "tree",
          "content": null
        },
        {
          "name": "_templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "_theme",
          "type": "tree",
          "content": null
        },
        {
          "name": "_version.inc.in",
          "type": "blob",
          "size": 0.12890625,
          "content": ":Author: Jiang Xin\n:Version: <version>\n:Copyright: `Creative Commons BY-NC-SA <http://creativecommons.org/licenses/by-nc-sa/3.0/>`_\n"
        },
        {
          "name": "appendix",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf.py",
          "type": "blob",
          "size": 6.912109375,
          "content": "# -*- coding: utf-8 -*-\n#\n# GotGitHub documentation build configuration file, created by\n# sphinx-quickstart on Wed Aug 24 20:52:42 2011.\n#\n# This file is execfile()d with the current directory set to its containing dir.\n#\n# Note that not all possible configuration values are present in this\n# autogenerated file.\n#\n# All configuration values have a default; values that are commented out\n# serve to show the default.\n\nimport sys, os\n\n# If extensions (or modules to document with autodoc) are in another directory,\n# add these directories to sys.path here. If the directory is relative to the\n# documentation root, use os.path.abspath to make it absolute, like shown here.\n#sys.path.insert(0, os.path.abspath('.'))\n\n# -- General configuration -----------------------------------------------------\n\n# If your documentation needs a minimal Sphinx version, state it here.\n#needs_sphinx = '1.0'\n\n# Add any Sphinx extension module names here, as strings. They can be extensions\n# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.\nextensions = ['sphinx.ext.todo', 'sphinx.ext.ifconfig']\n\n# Add any paths that contain templates here, relative to this directory.\ntemplates_path = ['_templates']\n\n# The suffix of source filenames.\nsource_suffix = '.rst'\n\n# The encoding of source files.\n#source_encoding = 'utf-8-sig'\n\n# The master toctree document.\nmaster_doc = 'index'\n\n# General information about the project.\nproject = u'GotGitHub'\ncopyright = u'2011, 蒋鑫'\n\n# The version info for the project you're documenting, acts as replacement for\n# |version| and |release|, also used in various other places throughout the\n# built documents.\n#\n# The short X.Y version.\nversion = '0.9'\n# The full version, including alpha/beta/rc tags.\nrelease = '0.9'\n\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n#language = None\n\n# There are two options for replacing |today|: either, you set today to some\n# non-false value, then it is used:\n#today = ''\n# Else, today_fmt is used as the format for a strftime call.\n#today_fmt = '%B %d, %Y'\n\n# List of patterns, relative to source directory, that match files and\n# directories to ignore when looking for source files.\nexclude_patterns = ['_build']\n\n# The reST default role (used for this markup: `text`) to use for all documents.\n#default_role = None\n\n# If true, '()' will be appended to :func: etc. cross-reference text.\n#add_function_parentheses = True\n\n# If true, the current module name will be prepended to all description\n# unit titles (such as .. function::).\n#add_module_names = True\n\n# If true, sectionauthor and moduleauthor directives will be shown in the\n# output. They are ignored by default.\n#show_authors = False\n\n# The name of the Pygments (syntax highlighting) style to use.\npygments_style = 'sphinx'\n\n# A list of ignored prefixes for module index sorting.\n#modindex_common_prefix = []\n\n\n# -- Options for HTML output ---------------------------------------------------\n\n# The theme to use for HTML and HTML Help pages.  See the documentation for\n# a list of builtin themes.\n#html_theme = 'sphinxdoc'\nhtml_theme = 'gotgithub'\n\n# Theme options are theme-specific and customize the look and feel of a theme\n# further.  For a list of options available for each theme, see the\n# documentation.\n#html_theme_options = {}\n\n# Add any paths that contain custom themes here, relative to this directory.\nhtml_theme_path = [ '_theme' ]\n\n# The name for this set of Sphinx documents.  If None, it defaults to\n# \"<project> v<release> documentation\".\nhtml_title = u'GotGitHub'\n\n# A shorter title for the navigation bar.  Default is the same as html_title.\n#html_short_title = None\n\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#html_logo = None\n\n# The name of an image file (within the static path) to use as favicon of the\n# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n# pixels large.\n#html_favicon = None\n\n# Add any paths that contain custom static files (such as style sheets) here,\n# relative to this directory. They are copied after the builtin static files,\n# so a file named \"default.css\" will overwrite the builtin \"default.css\".\nhtml_static_path = ['_static']\n\n# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,\n# using the given strftime format.\nhtml_last_updated_fmt = '%Y/%m/%d'\n\n# If true, SmartyPants will be used to convert quotes and dashes to\n# typographically correct entities.\n#html_use_smartypants = True\n\n# Custom sidebar templates, maps document names to template names.\n#html_sidebars = {}\n\n# Additional templates that should be rendered to pages, maps page names to\n# template names.\n#html_additional_pages = {}\n\n# If false, no module index is generated.\n#html_domain_indices = True\n\n# If false, no index is generated.\n#html_use_index = True\n\n# If true, the index is split into individual pages for each letter.\n#html_split_index = False\n\n# If true, links to the reST sources are added to the pages.\n#html_show_sourcelink = True\n\n# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n#html_show_sphinx = True\n\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n#html_show_copyright = True\n\n# If true, an OpenSearch description file will be output, and all pages will\n# contain a <link> tag referring to it.  The value of this option must be the\n# base URL from which the finished HTML is served.\n#html_use_opensearch = ''\n\n# This is the file name suffix for HTML files (e.g. \".xhtml\").\n#html_file_suffix = None\n\n# Output file base name for HTML help builder.\nhtmlhelp_basename = 'GotGitHubdoc'\n\n\n# -- Options for LaTeX output --------------------------------------------------\n\n# The paper size ('letter' or 'a4').\n#latex_paper_size = 'letter'\n\n# The font size ('10pt', '11pt' or '12pt').\n#latex_font_size = '10pt'\n\n# Grouping the document tree into LaTeX files. List of tuples\n# (source start file, target name, title, author, documentclass [howto/manual]).\nlatex_documents = [\n  ('index', 'GotGitHub.tex', u'GotGitHub Documentation',\n   u'Jiang Xin', 'manual'),\n]\n\n# The name of an image file (relative to this directory) to place at the top of\n# the title page.\n#latex_logo = None\n\n# For \"manual\" documents, if this is true, then toplevel headings are parts,\n# not chapters.\n#latex_use_parts = False\n\n# If true, show page references after internal links.\n#latex_show_pagerefs = False\n\n# If true, show URL addresses after external links.\n#latex_show_urls = False\n\n# Additional stuff for the LaTeX preamble.\n#latex_preamble = ''\n\n# Documents to append as an appendix to all manuals.\n#latex_appendices = []\n\n# If false, no module index is generated.\n#latex_domain_indices = True\n\n\n# -- Options for manual page output --------------------------------------------\n\n# One entry per manual page. List of tuples\n# (source start file, name, description, authors, manual section).\nman_pages = [\n    ('index', 'gotgithub', u'GotGitHub Documentation',\n     [u'Jiang Xin'], 1)\n]\n\nlanguage = 'zh_CN';\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "contributors.inc",
          "type": "blob",
          "size": 0.7587890625,
          "content": "Git和GitHub促进了开源软件的发展是因为消除了核心开发者和贡献者的隔阂——你若能看到代码，你就能改进代码。开放的电子书亦是如此，下面的贡献者让本书变得更好。\n\n以贡献时间为序，感谢：\n\n1. `Zhang Hailong <https://github.com/zhhailon>`_ 报告文字错误。问题： `#2 <https://github.com/gotgit/gotgithub/issues/2>`_ 。\n2. `Riku <https://github.com/riku>`_ 纠正文字错误。提交： `455d0db`_ , `f244e3d`_ 。\n3. `windwiny <https://github.com/windwiny>`_  纠正文字错误。提交： `1ed1a51`_\n\n.. _455d0db: https://github.com/gotgit/gotgithub/commit/455d0db\n.. _f244e3d: https://github.com/gotgit/gotgithub/commit/f244e3d\n.. _1ed1a51: https://github.com/gotgit/gotgithub/commit/1ed1a51\n"
        },
        {
          "name": "graphics",
          "type": "commit",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.rst",
          "type": "blob",
          "size": 0.505859375,
          "content": "==========\nGotGitHub\n==========\n\n.. include:: _version.inc\n\n前言\n----\n\n.. include:: preface.inc\n\n目录\n----\n\n.. toctree::\n   :maxdepth: 3\n   :numbered: 3\n   :glob:\n\n   01-explore-github/index\n   02-join-github/index\n   03-project-hosting/index\n   04-work-with-others/index\n   05-commercial-github/index\n   06-side-projects/index\n   appendix/markups\n\n贡献者列表\n----------\n.. include:: contributors.inc\n\n\n.. 索引和表格\n.. ==================\n.. \n.. * :ref:`genindex`\n.. * :ref:`modindex`\n.. * :ref:`search`\n"
        },
        {
          "name": "make.bat",
          "type": "blob",
          "size": 4.4111328125,
          "content": "@ECHO OFF\n\nREM Command file for Sphinx documentation\n\nif \"%SPHINXBUILD%\" == \"\" (\n\tset SPHINXBUILD=sphinx-build\n)\nset BUILDDIR=_build\nset ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .\nif NOT \"%PAPER%\" == \"\" (\n\tset ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%\n)\n\nif \"%1\" == \"\" goto help\n\nif \"%1\" == \"help\" (\n\t:help\n\techo.Please use `make ^<target^>` where ^<target^> is one of\n\techo.  html       to make standalone HTML files\n\techo.  dirhtml    to make HTML files named index.html in directories\n\techo.  singlehtml to make a single large HTML file\n\techo.  pickle     to make pickle files\n\techo.  json       to make JSON files\n\techo.  htmlhelp   to make HTML files and a HTML help project\n\techo.  qthelp     to make HTML files and a qthelp project\n\techo.  devhelp    to make HTML files and a Devhelp project\n\techo.  epub       to make an epub\n\techo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter\n\techo.  text       to make text files\n\techo.  man        to make manual pages\n\techo.  changes    to make an overview over all changed/added/deprecated items\n\techo.  linkcheck  to check all external links for integrity\n\techo.  doctest    to run all doctests embedded in the documentation if enabled\n\tgoto end\n)\n\nif \"%1\" == \"clean\" (\n\tfor /d %%i in (%BUILDDIR%\\*) do rmdir /q /s %%i\n\tdel /q /s %BUILDDIR%\\*\n\tgoto end\n)\n\nif \"%1\" == \"html\" (\n\t%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished. The HTML pages are in %BUILDDIR%/html.\n\tgoto end\n)\n\nif \"%1\" == \"dirhtml\" (\n\t%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.\n\tgoto end\n)\n\nif \"%1\" == \"singlehtml\" (\n\t%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.\n\tgoto end\n)\n\nif \"%1\" == \"pickle\" (\n\t%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished; now you can process the pickle files.\n\tgoto end\n)\n\nif \"%1\" == \"json\" (\n\t%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished; now you can process the JSON files.\n\tgoto end\n)\n\nif \"%1\" == \"htmlhelp\" (\n\t%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished; now you can run HTML Help Workshop with the ^\n.hhp project file in %BUILDDIR%/htmlhelp.\n\tgoto end\n)\n\nif \"%1\" == \"qthelp\" (\n\t%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished; now you can run \"qcollectiongenerator\" with the ^\n.qhcp project file in %BUILDDIR%/qthelp, like this:\n\techo.^> qcollectiongenerator %BUILDDIR%\\qthelp\\GotGitHub.qhcp\n\techo.To view the help file:\n\techo.^> assistant -collectionFile %BUILDDIR%\\qthelp\\GotGitHub.ghc\n\tgoto end\n)\n\nif \"%1\" == \"devhelp\" (\n\t%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% %BUILDDIR%/devhelp\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished.\n\tgoto end\n)\n\nif \"%1\" == \"epub\" (\n\t%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished. The epub file is in %BUILDDIR%/epub.\n\tgoto end\n)\n\nif \"%1\" == \"latex\" (\n\t%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished; the LaTeX files are in %BUILDDIR%/latex.\n\tgoto end\n)\n\nif \"%1\" == \"text\" (\n\t%SPHINXBUILD% -b text %ALLSPHINXOPTS% %BUILDDIR%/text\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished. The text files are in %BUILDDIR%/text.\n\tgoto end\n)\n\nif \"%1\" == \"man\" (\n\t%SPHINXBUILD% -b man %ALLSPHINXOPTS% %BUILDDIR%/man\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Build finished. The manual pages are in %BUILDDIR%/man.\n\tgoto end\n)\n\nif \"%1\" == \"changes\" (\n\t%SPHINXBUILD% -b changes %ALLSPHINXOPTS% %BUILDDIR%/changes\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.The overview file is in %BUILDDIR%/changes.\n\tgoto end\n)\n\nif \"%1\" == \"linkcheck\" (\n\t%SPHINXBUILD% -b linkcheck %ALLSPHINXOPTS% %BUILDDIR%/linkcheck\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Link check complete; look for any errors in the above output ^\nor in %BUILDDIR%/linkcheck/output.txt.\n\tgoto end\n)\n\nif \"%1\" == \"doctest\" (\n\t%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest\n\tif errorlevel 1 exit /b 1\n\techo.\n\techo.Testing of doctests in the sources finished, look at the ^\nresults in %BUILDDIR%/doctest/output.txt.\n\tgoto end\n)\n\n:end\n"
        },
        {
          "name": "preface.inc",
          "type": "blob",
          "size": 1.75,
          "content": "动笔写GitHub不是因为我对其了解，恰恰是对其太不了解。\n\n在我的《Git权威指南》 [#]_ 一书中，涉及到GitHub的只有区区三页纸，这显然回答不了读者对于GitHub的诸多疑问。\n记得在《Git权威指南》刚刚完稿之际，机械工业出版社华章公司的杨福川编辑就鼓动我写一本关于GitHub的书，我用了好多理由推辞了。\n头条理由就是我真的累着了。在每一章节开始动笔之时，都好像是坐在了中学语文考试的考堂上写作文，时间快到了可仍然动不了笔，\n再写一本书无疑要重复这一痛苦的经历。\n第二个理由是我更喜欢编程，而不是写文档，尤其写GitHub会有大量截图、图像处理的琐碎工作。\n第三个理由彻底让编辑投降，那就是GitHub是一个国外网站，也许书一出，【此句已被原作者删除】。\n\n让我最终决定动笔，是源于CSDN蒋总在美国拜访GitHub总部后告诉我的一些见闻，我对GitHub如此成功运作产生了兴趣，于是开始研究GitHub的博客，愈发发现GitHub是一群有趣的人在做的有趣的事，如果只把GitHub当作一个Git服务器，实在是暴殄天物。GitHub已经并将继续获得成功，若真能凭借此书把GitHub尽量全面地展现，让每一个Git使用者用好GitHub也是一件幸事。\n\n这本书将采用GitHub的方式进行撰写和发布 [#]_ ，任何人都可以看到本书（包括源码），更可以用GitHub的方法参与本书的撰写和纠错。网络出版对于我和杨福川编辑都是一个全新的体验。感谢Git，让我在一年内拥有了两种不同的出版体验。\n\n-- 蒋鑫, 2011.12\n\n----\n\n.. [#] http://www.worldhello.net/gotgit/\n.. [#] https://github.com/gotgit/gotgithub\n"
        }
      ]
    }
  ]
}