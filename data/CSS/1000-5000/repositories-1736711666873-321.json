{
  "metadata": {
    "timestamp": 1736711666873,
    "page": 321,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "beeth0ven/RxSwift-Chinese-Documentation",
      "stars": 1353,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3564453125,
          "content": "# Node rules:\n## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n## Dependency directory\n## Commenting this out is preferred by some people, see\n## https://docs.npmjs.com/misc/faq#should-i-check-my-node_modules-folder-into-git\nnode_modules\n\n# Book build output\n_book\n\n# eBook build output\n*.epub\n*.mobi\n*.pdf\n\n*.DS_Store*"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.8251953125,
          "content": "# 文档更新日志\n\n文档变更将被记录在此文件内。\n\n---\n\n## [2.1.0](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/tag/2.1.0)\n\n#### 22年5月6日（RxSwift 6）\n\n* 更新文档以适配 RxSwift 6\n* 加入 [ReplayRelay](content/recipes/rxrelay.md#replayrelay)\n* 移除已过时的代码, 感谢 [@sheruce](https://github.com/sheruce), [@professordeng](https://github.com/professordeng), [@JPlay](https://github.com/JPlay)\n* 纠正错别字，修改语病, 感谢 [@sheruce](https://github.com/sheruce), [@professordeng](https://github.com/professordeng)\n\n---\n\n## [2.0.0](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/tag/2.0.0)\n\n#### 19年5月21日（RxSwift 5）\n\n* [RxSwift 5 更新了什么？](content/recipes/whats_new_in_rxswift_5.md)\n* 引入[食谱章节](content/recipes.md)\n* [Signal](content/rxswift_core/observable/signal.md)\n* [RxRelay](content/recipes/rxrelay.md)\n* [纯函数](content/recipes/pure_function.md)\n* [附加作用](content/recipes/side_effects.md)\n* [共享附加作用](content/recipes/share_side_effects.md)\n* 更新文档以适配 RxSwift 5\n* 更新 QQ 群号为：871293356\n\n---\n\n## [1.2.0](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/tag/1.2.0)\n\n#### 18年2月15日\n\n* 纠正错别字\n* 给 [retry](/content/decision_tree/retry.md) 操作符加入演示代码\n* 给 [replay](/content/decision_tree/replay.md) 操作符加入演示代码\n* 给 [connect](/content/decision_tree/connect.md) 操作符加入演示代码\n* 给 [publish](/content/decision_tree/publish.md) 操作符加入演示代码\n* 给 [reduce](/content/decision_tree/reduce.md) 操作符加入演示代码\n* 给 [skipUntil](/content/decision_tree/skipUntil.md) 操作符加入演示代码\n* 给 [skipWhile](/content/decision_tree/skipWhile.md) 操作符加入演示代码\n* 给 [skip](/content/decision_tree/skip.md) 操作符加入演示代码\n\n---\n\n## [1.1.0](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/tag/1.1.0)\n\n#### 17年12月7日\n\n* 纠正错别字\n* 给 [takeUntil](/content/decision_tree/takeUntil.md) 操作符加入演示代码\n* 给 [takeWhile](/content/decision_tree/takeWhile.md) 操作符加入演示代码\n* 给 [takeLast](/content/decision_tree/takeLast.md) 操作符加入演示代码\n* 加入 [debug](/content/decision_tree/debug.md) 操作符\n* 给 [AsyncSubject](/content/rxswift_core/observable_and_observer/async_subject.md) 加入演示代码\n* 给 [take](/content/decision_tree/take.md) 操作符加入演示代码\n* 给 [elementAt](/content/decision_tree/elementAt.md) 操作符加入演示代码\n* 给 [BehaviorSubject](/content/rxswift_core/observable_and_observer/behavior_subject.md) 加入演示代码\n\n---\n\n## [1.0.0](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/tag/1.0.0)\n\n#### 17年10月18日（RxSwift 4）\n\n* 加入[文档电子书下载地址](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/download/1.0.0/RxSwiftChineseDocumentation.epub)\n* 去掉学习资源[《如何将代理转换为序列》](https://medium.com/@maxofeden/rxswift-migrate-delegates-to-beautiful-observables-3e606a863048)，因为 RxSwift 4 重构了 **DelegateProxy**  [#1379](https://github.com/ReactiveX/RxSwift/pull/1379)\n* 使用 `share(replay: 1)` 替换 `shareReplay(1)`\n* 给 [RxJava 演示代码](/content/rxswift_ecosystem.md) 中的变量加上 `final` 关键字，声明为常量\n* 示例[多层级的列表页](/content/more_demo/tableView_sectioned_viewController.md)更新到 RxSwift 4，使用新的 RxDataSources 构建方法\n* 文档[首页](introduction.md)更新到 RxSwift 4\n\n---\n\n## [0.2.0](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/tag/0.2.0)\n\n#### 17年10月9日\n\n* 给 [ReplaySubject](/content/rxswift_core/observable_and_observer/replay_subject.md) 加入演示代码\n* 给 [PublishSubject](/content/rxswift_core/observable_and_observer/publish_subject.md) 加入演示代码\n* 给 [distinctUntilChanged](/content/decision_tree/distinctUntilChanged.md) 操作符加入演示代码\n* 给 [scan](/content/decision_tree/scan.md) 操作符加入演示代码\n* 给 [startWith](/content/decision_tree/startWith.md) 操作符加入演示代码\n* 给 [merge](/content/decision_tree/merge.md) 操作符加入演示代码\n* **(RxSwift 4)** 使用 [Binder](/content/rxswift_core/observer/binder.md) 替换 **UIBindingObserver**，更简洁实用\n\n## [0.1.1](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/tag/0.1.1)\n\n#### 17年9月18日\n\n* 更新 [RxFeedback](/content/architecture/rxfeedback.md) 配图，与官方保持一致\n* 修复 [Maybe](/content/rxswift_core/observable/maybe.md) 中的[描述问题](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/pull/9/files)\n\n---\n\n## [0.1.0](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/tag/0.1.0)\n\n#### 17年9月4日\n\n* 加入学习资源[《泊学 RxSwift 中文视频教程》](https://boxueio.com/series/rxswift-101)\n* 给 [concat](/content/decision_tree/concat.md) 操作符加入演示代码\n* 给 [concatMap](/content/decision_tree/concatMap.md) 操作符加入演示代码\n* 将操作符列表移动到[《如何选择操作符？》](/content/decision_tree.md)章节下，便于查找\n* 给 [combineLatest](/content/decision_tree/combineLatest.md) 操作符加入演示代码\n* 给 [catchError](/content/decision_tree/catchError.md) 操作符加入演示代码\n* 给 [filter](/content/decision_tree/filter.md) 操作符加入演示代码\n* 给 [flatMap](/content/decision_tree/flatMap.md) 操作符加入演示代码\n* 给 [flatMapLatest](/content/decision_tree/flatMapLatest.md) 操作符加入演示代码\n* 给 [map](/content/decision_tree/map.md) 操作符加入演示代码\n* 给 [zip](/content/decision_tree/zip.md) 操作符加入演示代码\n* 给 [withLatestFrom](/content/decision_tree/withLatestFrom.md) 操作符加入演示代码\n\n---\n\n## [0.0.1](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/tag/0.0.1)\n\n#### 17年9月1日（RxSwift 3.6.1）\n\n* 加入 56 个[操作符](/content/rxswift_core/operator.md)中文说明\n* 加入[图片选择器](/content/more_demo/image_picker.md)示例\n* 加入[多层级的列表页](/content/more_demo/tableView_sectioned_viewController.md)示例\n* 加入[计算器](/content/more_demo/calculator.md)示例\n* 加入 [MVVM](/content/architecture/mvvm.md) 架构\n* 加入 [RxFeedback](/content/architecture/rxfeedback.md) 架构\n* 加入 [ReactorKit](/content/architecture/reactorkit.md) 架构\n* 加入 [RxSwift 生态系统和 ReactiveX 生态系统](/content/rxswift_ecosystem.md) 章节\n* 加入文档更新日志\n* 加入学习资源[《几个 share 操作符的区别》](https://medium.com/@_achou/rxswift-share-vs-replay-vs-sharereplay-bea99ac42168)\n* 加入学习资源[《如何将代理转换为序列》](https://medium.com/@maxofeden/rxswift-migrate-delegates-to-beautiful-observables-3e606a863048)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2017 Jie Luo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.94140625,
          "content": "# RxSwift 中文文档（非官方）\n\n地址： https://beeth0ven.github.io/RxSwift-Chinese-Documentation/\n\n**如果以上地址被墙，可临时访问：https://rxswift.picroup.com/**\n\n## 简介\n\n这是一份 [RxSwift] 中文文档。如今响应式编程变得越来越流行，我们已经无法阻挡这股热潮。这份文档整合了 [RxSwift] 文档，[RxJS] 文档，[ReactiveX] 文档以及笔者的一些个人观点。目的是为了让大家能够快速上手响应式编程。虽然本文档主要是介绍 [RxSwift]，不过使用其他响应式框架的开发者也可以从中获益，例如：[ReactiveCocoa]，[RxJava]，[RxJS] 等。因为这些框架都有一些共性，例如：响应式的思维方式，操作符的功能及用法等。而这些内容文档里面都有介绍。\n\n由于这是笔者第一次发布文档，如果文档存在问题，还请谅解。你可通过 [10. 关于本文档] 页面提供的方式，将问题反馈给笔者。同时也非常欢迎大家给我发合并请求。\n\n## 目录\n\n* [RxSwift 中文文档]\n* [1. 为什么要使用 RxSwift?]\n* [2. 你好 RxSwift！]\n* [3. 函数响应式编程]\n* [4. RxSwift 的核心组件]\n* [5. 如何选择操作符？]\n* [6. 更多示例]\n* [7. RxSwift 常用架构]\n* [8. RxSwift 生态系统]\n* [9. 学习资源]\n* [10. 关于本文档]\n\n## 预览\n\n![Introduction](assets/README/Introduction.png)\n\n---\n\n![FunctionalReactiveProgramming](assets/README/FunctionalReactiveProgramming.png)\n\n---\n\n![OperatorCreate](assets/README/OperatorCreate.png)\n\n---\n\n![RxSwiftEcosystem](assets/README/RxSwiftEcosystem.png)\n\n\n[RxSwift 中文文档]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/\n[1. 为什么要使用 RxSwift?]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/why_rxswift.html\n[2. 你好 RxSwift！]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/first_app.html\n[3. 函数响应式编程]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/think_reactive.html\n[4. RxSwift 的核心组件]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/rxswift_core.html\n[5. 如何选择操作符？]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/decision_tree.html\n[6. 更多示例]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/more_demo.html\n[7. RxSwift 常用架构]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/architecture.html\n[8. RxSwift 生态系统]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/rxswift_ecosystem.html\n[9. 学习资源]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/resource.html\n[10. 关于本文档]:https://beeth0ven.github.io/RxSwift-Chinese-Documentation/content/about.html\n\n[RxSwift]:https://github.com/ReactiveX/RxSwift\n[ReactiveX]:http://reactivex.io/\n[RxJava]:https://github.com/ReactiveX/RxJava\n[RxJS]:https://github.com/Reactive-Extensions/RxJS\n[ReactiveCocoa]:https://github.com/ReactiveCocoa/ReactiveCocoa\n"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 6.0751953125,
          "content": "# Summary\n\n* [RxSwift 中文文档](introduction.md)\n* [1. 为什么要使用 RxSwift?](content/why_rxswift.md)\n* [2. 你好 RxSwift！](content/first_app.md)\n* [3. 函数响应式编程](content/think_reactive.md)\n  * [3.1 函数式编程](content/think_reactive/funtional_programming.md)\n  * [3.2 函数式编程 -> 函数响应式编程](content/think_reactive/functional_reactive_progaramming.md)\n  * [3.3 数据绑定](content/think_reactive/data_binding.md)\n* [4. RxSwift 核心](content/rxswift_core.md)\n  * [4.1 Observable - 可监听序列](content/rxswift_core/observable.md)\n    * [Single](content/rxswift_core/observable/single.md)\n    * [Completable](content/rxswift_core/observable/completable.md)\n    * [Maybe](content/rxswift_core/observable/maybe.md)\n    * [Driver](content/rxswift_core/observable/driver.md)\n    * [Signal](content/rxswift_core/observable/signal.md)\n    * [ControlEvent](content/rxswift_core/observable/control_event.md)\n  * [4.2 Observer - 观察者](content/rxswift_core/observer.md)  \n    * [AnyObserver](content/rxswift_core/observer/any_observer.md)\n    * [Binder](content/rxswift_core/observer/binder.md)\n  * [4.3 Observable & Observer 既是可监听序列也是观察者](content/rxswift_core/observable_and_observer.md)\n    * [AsyncSubject](content/rxswift_core/observable_and_observer/async_subject.md)\n    * [PublishSubject](content/rxswift_core/observable_and_observer/publish_subject.md)\n    * [ReplaySubject](content/rxswift_core/observable_and_observer/replay_subject.md)\n    * [BehaviorSubject](content/rxswift_core/observable_and_observer/behavior_subject.md)\n    * [Variable（已弃用）](content/rxswift_core/observable_and_observer/variable.md)\n    * [ControlProperty](content/rxswift_core/observable_and_observer/control_property.md)\n  * [4.4 Operator - 操作符](content/rxswift_core/operator.md)\n  * [4.5 Disposable - 可被清除的资源](content/rxswift_core/disposable.md)\n  * [4.6 Schedulers - 调度器](content/rxswift_core/schedulers.md)\n  * [4.7 Error Handling - 错误处理](content/rxswift_core/error_handling.md)\n* [5. 如何选择操作符？](content/decision_tree.md)\n  * [amb](content/decision_tree/amb.md)\n  * [buffer](content/decision_tree/buffer.md)\n  * [catchError](content/decision_tree/catchError.md)\n  * [combineLatest](content/decision_tree/combineLatest.md)\n  * [concat](content/decision_tree/concat.md)\n  * [concatMap](content/decision_tree/concatMap.md)\n  * [connect](content/decision_tree/connect.md)\n  * [create](content/decision_tree/create.md)\n  * [debounce](content/decision_tree/debounce.md)\n  * [debug](content/decision_tree/debug.md)\n  * [deferred](content/decision_tree/deferred.md)\n  * [delay](content/decision_tree/delay.md)\n  * [delaySubscription](content/decision_tree/delaySubscription.md)\n  * [dematerialize](content/decision_tree/dematerialize.md)\n  * [distinctUntilChanged](content/decision_tree/distinctUntilChanged.md)\n  * [do](content/decision_tree/do.md)\n  * [elementAt](content/decision_tree/elementAt.md)\n  * [empty](content/decision_tree/empty.md)\n  * [error](content/decision_tree/error.md)\n  * [filter](content/decision_tree/filter.md)\n  * [flatMap](content/decision_tree/flatMap.md)\n  * [flatMapLatest](content/decision_tree/flatMapLatest.md)\n  * [from](content/decision_tree/from.md)\n  * [groupBy](content/decision_tree/groupBy.md)\n  * [ignoreElements](content/decision_tree/ignoreElements.md)\n  * [interval](content/decision_tree/interval.md)\n  * [just](content/decision_tree/just.md)\n  * [map](content/decision_tree/map.md)\n  * [merge](content/decision_tree/merge.md)\n  * [materialize](content/decision_tree/materialize.md)\n  * [never](content/decision_tree/never.md)\n  * [observeOn](content/decision_tree/observeOn.md)\n  * [publish](content/decision_tree/publish.md)\n  * [reduce](content/decision_tree/reduce.md)\n  * [refCount](content/decision_tree/refCount.md)\n  * [repeatElement](content/decision_tree/repeatElement.md)\n  * [replay](content/decision_tree/replay.md)\n  * [retry](content/decision_tree/retry.md)\n  * [sample](content/decision_tree/sample.md)\n  * [scan](content/decision_tree/scan.md)\n  * [shareReplay](content/decision_tree/shareReplay.md)\n  * [single](content/decision_tree/single.md)\n  * [skip](content/decision_tree/skip.md)\n  * [skipUntil](content/decision_tree/skipUntil.md)\n  * [skipWhile](content/decision_tree/skipWhile.md)\n  * [startWith](content/decision_tree/startWith.md)\n  * [subscribeOn](content/decision_tree/subscribeOn.md)\n  * [take](content/decision_tree/take.md)\n  * [takeLast](content/decision_tree/takeLast.md)\n  * [takeUntil](content/decision_tree/takeUntil.md)\n  * [takeWhile](content/decision_tree/takeWhile.md)\n  * [timeout](content/decision_tree/timeout.md)\n  * [timer](content/decision_tree/timer.md)\n  * [using](content/decision_tree/using.md)\n  * [window](content/decision_tree/window.md)\n  * [withLatestFrom](content/decision_tree/withLatestFrom.md)\n  * [zip](content/decision_tree/zip.md)\n* [6. 更多示例](content/more_demo.md)\n  * [ImagePicker - 图片选择器](content/more_demo/image_picker.md)\n  * [TableViewSectionedViewController - 多层级的列表页](content/more_demo/tableView_sectioned_viewController.md)\n  * [Calculator - 计算器](content/more_demo/calculator.md)\n* [7. RxSwift 常用架构](content/architecture.md)\n  * [7.1 MVVM](content/architecture/mvvm.md)\n    * [Github Signup（示例）](content/architecture/mvvm/github_signup.md)\n  * [7.2 RxFeedback](content/architecture/rxfeedback.md)\n    * [Github Search（示例）](content/architecture/rxfeedback/github_search.md)\n  * [7.3 ReactorKit](content/architecture/reactorkit.md)\n    * [Github Search（示例）](content/architecture/reactorkit/github_search.md)\n* [8. RxSwift 生态系统](content/rxswift_ecosystem.md)\n* [9. 学习资源](content/resource.md)\n* [10. 关于本文档](content/about.md)\n  * [10.1 文档更新日志](CHANGELOG.md)\n* [食谱](content/recipes.md)\n    * [RxSwift 5 更新了什么？](content/recipes/whats_new_in_rxswift_5.md)\n    * [RxRelay](content/recipes/rxrelay.md)\n    * [纯函数](content/recipes/pure_function.md)\n    * [附加作用](content/recipes/side_effects.md)\n    * [共享附加作用](content/recipes/share_side_effects.md)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "book.json",
          "type": "blob",
          "size": 1.29296875,
          "content": "{\n    \"generator\": \"site\",\n    \"title\": \"RxSwift 中文文档\",\n    \"description\": null,\n    \"structure\": {\n        \"readme\": \"introduction.md\"\n    },\n    \"language\": \"zh\",\n    \"plugins\": [\n        \"jsbin\",\n        \"anchors\",\n        \"video\",\n        \"ga\",\n        \"toggle-chapters\",\n        \"editlink\",\n        \"include-codeblock\",\n        \"splitter\",\n        \"github-buttons\",\n        \"chart\",\n        \"include-highlight\",\n        \"tonic\"\n    ],\n    \"theme\": \"theme\",\n    \"pluginsConfig\": {\n        \"fontSettings\": {\n            \"theme\": \"white\",\n            \"family\": \"sans\"\n        },\n        \"ga\": {\n            \"token\": \"UA-63403975-1\"\n        },\n        \"editlink\": {\n            \"base\": \"https://github.com/beeth0ven/RxSwift-Chinese-Documentation/edit/master\",\n            \"label\": \"编辑页面\"\n        },\n        \"github-buttons\": {\n            \"repo\": \"beeth0ven/RxSwift-Chinese-Documentation\",\n            \"types\": [\n                \"star\"\n            ],\n            \"size\": \"small\",\n            \"buttons\": [\n              {\n                \"user\": \"beeth0ven\",\n                \"repo\": \"RxSwift-Chinese-Documentation\",\n                \"type\": \"star\",\n                \"size\": \"small\",\n                \"count\": true\n              }\n            ]\n        }\n    },\n    \"variables\": {\n        \"isPdf\": false\n    }\n}\n"
        },
        {
          "name": "content",
          "type": "tree",
          "content": null
        },
        {
          "name": "gitbook",
          "type": "tree",
          "content": null
        },
        {
          "name": "introduction.md",
          "type": "blob",
          "size": 5.7734375,
          "content": "<img src=\"assets/Rx_Logo_M.png\" alt=\"Miss Electric Eel 2016\" width=\"36\" height=\"36\"> RxSwift: ReactiveX for Swift\n======================================\n\n[![Travis CI](https://travis-ci.org/ReactiveX/RxSwift.svg?branch=master)](https://travis-ci.org/ReactiveX/RxSwift) ![platforms](https://img.shields.io/badge/platforms-iOS%20%7C%20macOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux-333333.svg) ![pod](https://img.shields.io/cocoapods/v/RxSwift.svg) [![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage) [![Swift Package Manager compatible](https://img.shields.io/badge/Swift%20Package%20Manager-compatible-brightgreen.svg)](https://github.com/apple/swift-package-manager) \n\n[ReactiveX](http://reactivex.io/)（简写: Rx） 是一个可以帮助我们简化异步编程的框架。\n\n[RxSwift] 是 [Rx](https://github.com/Reactive-Extensions/Rx.NET) 的 **Swift** 版本。\n\n它尝试将原有的一些概念移植到 iOS/macOS 平台。\n\n你可以在这里找到跨平台文档 [ReactiveX.io](http://reactivex.io/)。\n\nKVO，异步操作 和 流 全部被统一成抽象序列。这就是为什么 Rx 会如此简单，优雅和强大。\n\n## 操作\n\n加入 [RxSwift](https://github.com/ReactiveX/RxSwift) **QQ** 交流群: **871293356**\n\n[下载文档电子书](https://github.com/beeth0ven/RxSwift-Chinese-Documentation/releases/download/2.1.0/RxSwiftChineseDocumentation.epub)\n\n\n## 文档更新日志\n\n#### 22年5月6日（RxSwift 6）\n\n* 更新文档以适配 RxSwift 6\n* 加入 [ReplayRelay](content/recipes/rxrelay.md#replayrelay)\n* 移除已过时的代码, 感谢 [@sheruce](https://github.com/sheruce), [@professordeng](https://github.com/professordeng), [@JPlay](https://github.com/JPlay)\n* 纠正错别字，修改语病, 感谢 [@sheruce](https://github.com/sheruce), [@professordeng](https://github.com/professordeng)\n\n  **[查看更多... ](CHANGELOG.md)**\n\n\n## 示例\n\nGithub 搜索...\n\n![](assets/GithubSearch.gif)\n\n定义搜索结果 ...\n```swift\nlet searchResults = searchBar.rx.text.orEmpty\n    .throttle(.milliseconds(300), scheduler: MainScheduler.instance)\n    .distinctUntilChanged()\n    .flatMapLatest { query -> Observable<[Repository]> in\n        if query.isEmpty {\n            return .just([])\n        }\n        return searchGitHub(query)\n            .catchAndReturn([])\n    }\n    .observe(on: MainScheduler.instance)\n```\n\n... 然后将结果绑定到 tableview 上\n\n```swift\nsearchResults\n    .bind(to: tableView.rx.items(cellIdentifier: \"Cell\")) {\n        (index, repository: Repository, cell) in\n        cell.textLabel?.text = repository.name\n        cell.detailTextLabel?.text = repository.url\n    }\n    .disposed(by: disposeBag)\n```\n\n------\n\n## 必备条件\n\n* Xcode 12.x\n* Swift 5.x\n\n对于 Xcode 11 和以下版本，请使用 [RxSwift 5.x](https://github.com/ReactiveX/RxSwift/releases/tag/5.1.1)。\n\n## 安装\n\n安装 **RxSwift** 不需要任何第三方依赖。\n\n以下是当前支持的安装方法：\n\n### 手动\n\n打开 Rx.xcworkspace, 选中 `RxExample` 并且点击运行。 此方法将构建所有内容并运行示例应用程序。\n\n### [CocoaPods](https://guides.cocoapods.org/using/using-cocoapods.html)\n\n```ruby\n# Podfile\nuse_frameworks!\n\ntarget 'YOUR_TARGET_NAME' do\n    pod 'RxSwift', '6.5.0'\n    pod 'RxCocoa', '6.5.0'\nend\n\n# RxTests 和 RxBlocking 将在单元/集成测试中起到重要作用\ntarget 'YOUR_TESTING_TARGET' do\n    pod 'RxBlocking', '6.5.0'\n    pod 'RxTest', '6.5.0'\nend\n```\n\n替换 `YOUR_TARGET_NAME` 然后在 `Podfile` 目录下, 终端输入：\n\n```bash\n$ pod install\n```\n\n### XCFrameworks\n\n从 [RxSwift] 6 开始，每一次发布都会包括 `*.xcframework` 框架的二进制文件。\n\n我们只用将所需框架的二进制文件拖入 `Targets/{APP}/General` 选项卡下的 **Frameworks, Libraries, and Embedded Content** 区域。\n\n![](assets/XCFrameworks.png)\n\n### [Carthage](https://github.com/Carthage/Carthage)\n\n添加到 `Cartfile`\n\n```\ngithub \"ReactiveX/RxSwift\" \"6.5.0\"\n```\n\n```bash\n$ carthage update\n```\n\n**[Carthage] 作为静态库。**\n\n[Carthage] 会默认将 [RxSwift] 构建成动态库。\n\n如果您希望使用 [Carthage] 将 [RxSwift] 构建为静态库，在使用 Carthage 构建之前，您可以使用以下脚本手动修改框架类型：\n\n```bash\ncarthage update RxSwift --platform iOS --no-build\nsed -i -e 's/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g' Carthage/Checkouts/RxSwift/Rx.xcodeproj/project.pbxproj\ncarthage build RxSwift --platform iOS\n```\n\n### [Swift Package Manager](https://github.com/apple/swift-package-manager)\n\n> 注意：在 Swift Package Manager 里面有一个关键的 `cross-dependency` bug，它影响了许多项目包括 [RxSwift]。我们已经在 2020 年早期提交了这个 [bug (SR-12303)](https://bugs.swift.org/browse/SR-12303)，但是目前还没有收到回复。[这里](https://github.com/ReactiveX/RxSwift/issues/2127#issuecomment-717830502)有一个临时的解决方案。\n\n创建`Package.swift` 文件。\n\n```swift\n// swift-tools-version:5.0\n\nimport PackageDescription\n\nlet package = Package(\n  name: \"RxTestProject\",\n  dependencies: [\n    .package(url: \"https://github.com/ReactiveX/RxSwift.git\", .exact(\"6.5.0\"))\n  ],\n  targets: [\n    .target(name: \"RxTestProject\", dependencies: [\"RxSwift\", \"RxCocoa\"])\n  ]\n)\n```\n\n```bash\n$ swift build\n```\n\n如果构建或测试一个模块对 RxTest 存在依赖， 设置 `TEST=1`.\n\n```bash\n$ TEST=1 swift test\n```\n\n### 使用 git submodules 手动集成\n\n* 添加 RxSwift 作为子模块\n\n```bash\n$ git submodule add git@github.com:ReactiveX/RxSwift.git\n```\n\n* 拖拽 `Rx.xcodeproj` 到项目中\n* 前往 `Project > Targets > Build Phases > Link Binary With Libraries`, 点击 `+` 并且选中 `RxSwift`，`RxCocoa` 和 `RxRelay` 目标。\n\n\n[RxSwift]:https://github.com/ReactiveX/RxSwift\n[Carthage]:https://github.com/Carthage/Carthage"
        },
        {
          "name": "publish_gitbook.sh",
          "type": "blob",
          "size": 0.5234375,
          "content": "# install the plugins and build the static site\n# gitbook install && gitbook build\n\n# checkout to the gh-pages branch\ngit checkout gh-pages\n\n# pull the latest updates\ngit pull origin gh-pages --rebase\n\n# copy the static site files into the current directory.\ncp -R _book/* .\n\n# remove 'node_modules' and '_book' directory\ngit clean -fx node_modules\ngit clean -fx _book\n\n# add all files\ngit add .\n\n# commit\ngit commit -a -m \"Update docs\"\n\n# push to the origin\ngit push origin gh-pages\n\n# checkout to the master branch\ngit checkout master"
        },
        {
          "name": "search_index.json",
          "type": "blob",
          "size": 0.5546875,
          "content": "{\"index\":{\"version\":\"0.5.12\",\"fields\":[{\"name\":\"title\",\"boost\":10},{\"name\":\"keywords\",\"boost\":15},{\"name\":\"body\",\"boost\":1}],\"ref\":\"url\",\"documentStore\":{\"store\":{\"./\":[\"introduct\"]},\"length\":1},\"tokenStore\":{\"root\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":11}}}}}}}}}}}},\"length\":1},\"corpusTokens\":[\"introduct\"],\"pipeline\":[\"stopWordFilter\",\"stemmer\"]},\"store\":{\"./\":{\"url\":\"./\",\"title\":\"Introduction\",\"keywords\":\"\",\"body\":\"Introduction\\n\"}}}"
        }
      ]
    }
  ]
}