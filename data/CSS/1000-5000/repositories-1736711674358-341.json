{
  "metadata": {
    "timestamp": 1736711674358,
    "page": 341,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "yuxingxin/RxJava-Essentials-CN",
      "stars": 1280,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".DS_Store",
          "type": "blob",
          "size": 6.00390625,
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.34375,
          "content": "# Node rules:\n## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n## Dependency directory\n## Commenting this out is preferred by some people, see\n## https://docs.npmjs.com/misc/faq#should-i-check-my-node_modules-folder-into-git\nnode_modules\n\n# Book build output\n_book\n\n# eBook build output\n*.epub\n*.mobi\n*.pdf"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.892578125,
          "content": "RxJava Essentials 中文翻译版\n=======\n\n![](images/rxjava.jpg)\n\n本书是对Ivan.Morgillo所写一书的中文翻译版本，仅供交流学习使用，严禁商业用途。另外推荐一本姊妹篇《Learning Reactive Programming》。\n\n* 《RxJava Essentials》[翻译中文版电子书](https://www.gitbook.com/book/yuxingxin/rxjava-essentials-cn/)\n\n* 《RxJava Essentials》一书作者[代码样例](https://github.com/hamen/rxjava-essentials)\n\n---\n\n# 本书内容有\n\n### **1.RX-from .NET to RxJava**\n\n> 本章带你进入reactive的世界。我们会比较reactive 方法和传统方法，进而探索它们之间的相似和不同的地方。\n\n### **2.Why Observables?**\n\n> 本章会对观察者模式做一个概述，如何实现它以及怎样用RxJava来进行扩展，被观察者是什么，以及被观察者如何与迭代联系到一起的。\n\n### **3.Hello Reactive World**\n\n> 本章会利用我们所学的知识来创建第一个reactive Android应用。\n\n### **4.Filtering Observables**\n\n> 本章我们会研究Observable序列的本质:filtering.我们也将学到如何从一个发出的Observable中选取我们想要的值，如何获得一个有限的数值，如何处理溢出的场景，以及更多有用的技巧。\n\n### **5.Transforming Observables**\n\n> 本章将讲述如何通过变换Observable序列来创建出我们所需要的序列。\n\n### **6.Combining Observables**\n\n> 本章将研究与函数结合，同时也会学到当创建我们想要的Observable时又如何与多个Observable协同工作。\n\n### **7.Schedulers-Defeating the Android MainThread Issue**\n\n> 本章将介绍如何使用RxJava Schedulers 来处理多线程和并发编程。我们也将用reactive的方式来创建网络操作、内存访问、耗时处理。\n\n### **8.REST in peace-RxJava and Retrofit**\n\n> 本章教会你如何让Square公司的Retrofit和RxJava结合来一起使用，来创建一个更高效的REST客户端程序。\n\n# 学习这本书你需要做的：\n\n为了能够运行书中的例子，你需要一个标准的Android开发环境：\n\n* Android Studio 或 Intellij IDEA\n* Android SDK\n* Java SDK\n\n作为一个纯粹的Java开发者，当你接触RxJava时，很明显你需要一个你喜欢Java编辑器和一个标准的Java JDK 环境。这本书中的一些图表来自http://rxmarbles.com 和 http://reactivex.io。\n\n# 这本书适合哪些人看\n\n如果你是一名有经验的Java开发者，reactive编程将会在后端系统中给你一种新的学习扩展和并发的方式，而这不需要更换开发语言。这本书将帮助你学习RxJava的核心方面,也能帮助你克服Android平台局限性从而创建一个基于事件驱动的，响应式的，流畅体验的Android应用。\n\n# 一些约定\n\n在这本书中，你会发现许多用来区分不同信息的文本样式，这列举这些样式的一些例子和对他们释义的说明。\n\n以下列举了些文本中的代码、数据库表名、文件夹名、文件名、文件扩展名、路径名、伪造的URL、用户输入、Twitter handles ：“正如你看到的那样：zip()有三个参数：两个Observable和一个Func2”\n\n如下面的一块代码：\n\n```java\npublic Observable<List<User>> getMostPopularSOusers(int howmany){\n        return mStackExchangeService\n                .getMostPopularSOusers(howmany)\n                .map(UsersResponse::getUsers)\n                .subscribeOn(Schedulers.io())\n               .observeOn(AndroidSchedulers.mainThread());\n}\n```\n\n当我们想对代码块的某一部分引起你的注意时，会在对应的那一行或列设置为粗体\n\n```java\npublic Observable<List<User>> getMostPopularSOusers(int howmany){\n        return mStackExchangeService\n                .getMostPopularSOusers(howmany)\n                .map(UsersResponse::getUsers)   //也就是这句加粗显示\n                .subscribeOn(Schedulers.io())\n               .observeOn(AndroidSchedulers.mainThread());\n}\n```\n\n**新的项目**和**重要的词语**都会以粗体显示。你在屏幕看到的字，例如在菜单或者对话框，会以类似这样的形式出现在文本中：“We will just need a fancy progress bar and a **DOWNLOAD** button.\n\n**Note**\n\n类似这样的是警告或者出现在框中的重要提示。\n\n**Tip**\n类似这样的是提示和技巧\n\n# 读者反馈\n\n发送邮件到 feedback@packtpub.com  在你的邮件主题中要提到书的标题。\n\n如果你有擅长的话题并且你对写作感兴趣或者想出书的话，可以看我们作者指南：http://www.packtpub.com/authors\n\n# 下载样例代码\n\n你可以从你在http://www.packtpub.com的账户中下载所有你购买Packt 出版的图书的样例代码，如果你从别处购买这本书的话，你可以访问：http://www.packtpub.com/support 注册并将文件用附件直接发给你。\n\n## 版权说明\n\nRxJava Essentials 中文翻译版 仅供交流学习使用，严禁商业用途。转载请联系作者[yuxingxin](https://github.com/yuxingxin)。"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 3.326171875,
          "content": "# Summary\n\n* [说明](README.md)\n* [RX - 从 .NET 到 RxJava](/chapter1/chapter1.md)\n   * [微软响应式扩展](/chapter1/microsoft_reactive_extensions.md)\n   * [来到Java世界 - Netflix RxJava](/chapter1/landing_in_the_java_world_-_netflix_rxjava.md)\n   * [RxJava的与众不同之处](/chapter1/what_is_different_in_rxjava.md)\n   * [总结](/chapter1/summary1.md)\n* [为什么是Observables?](/chapter2/why_observables.md)\n   * [观察者模式](/chapter2/the_observer_pattern.md)\n   * [你什么时候使用观察者模式？](/chapter2/when_do_you_use_the_Observer_pattern.md)\n   * [RxJava观察者模式工具包](/chapter2/rxjava_observer_pattern_toolkit.md)\n   * [Observable](/chapter2/observable.md)\n   * [Subject = Observable + Observer](/chapter2/subject_observable_observer.md)\n   * [总结](/chapter2/summary2.md)\n* [向响应式世界问好](/chapter3/hello_reactive_world.md)\n   * [启动引擎](/chapter3/start_the_engine.md)\n   * [工具](/chapter3/utils.md)\n   * [我们的第一个Observable](/chapter3/our_first_observable.md)\n   * [从列表创建一个Observable](/chapter3/creating_an_observable_from_list.md)\n   * [再多几个例子](/chapter3/a_few_more_examples.md)\n   * [总结](/chapter3/summary3.md)\n* [过滤Observables](/chapter4/filtering_observables.md)\n   * [过滤序列](/chapter4/filtering_a_sequence.md)\n   * [获取我们需要的数据](/chapter4/let's_take_what_we_need.md)\n   * [有且仅有一次](/chapter4/once_and_only_once.md)\n   * [First and last](/chapter4/first_and_last.md)\n   * [Skip and SkipLast](/chapter4/skip_and_skiplast.md)\n   * [ElementAt](/chapter4/elementat.md)\n   * [Sampling](/chapter4/sampling.md)\n   * [Timeout](/chapter4/timeout.md)\n   * [Debounce](/chapter4/debounce.md)\n   * [总结](/chapter4/summary4.md)\n* [变换Observables](/chapter5/transforming_observables.md)\n   * [*map家族](/chapter5/the_map_family.md)\n   * [GroupBy](/chapter5/groupby.md)\n   * [Buffer](/chapter5/buffer.md)\n   * [Window](/chapter5/window.md)\n   * [Cast](/chapter5/cast.md)\n   * [总结](/chapter5/summary5.md)\n* [组合Observables](/chapter6/combining_observables.md)\n   * [Merge](/chapter6/merge.md)\n   * [Zip](/chapter6/zip.md)\n   * [Join](/chapter6/join.md)\n   * [combineLatest](/chapter6/combinelatest.md)\n   * [And,Then和When](/chapter6/and_then_when.md)\n   * [Switch](/chapter6/switch.md)\n   * [StartWith](/chapter6/startwith.md)\n   * [总结](/chapter6/summary6.md)\n* [Schedulers-解决Android主线程问题](/chapter7/schedulers_defeating_the_android_mainthread_issue.md)\n   * [StrictMode](/chapter7/strictmode.md)\n   * [避免阻塞I/O的操作](/chapter7/avoiding_blocking_io_operations.md)\n   * [Schedulers](/chapter7/schedulers.md)\n   * [非阻塞I/O操作](/chapter7/nonblocking_io_operations.md)\n   * [SubscribeOn and ObserveOn](/chapter7/subscribeon_and_observeon.md)\n   * [处理耗时的任务](/chapter7/handing_a_long_task.md)\n   * [执行网络任务](/chapter7/executing_a_network_task.md)\n   * [总结](/chapter7/summary7.md)\n* [与REST无缝结合-RxJava和Retrofit](/chapter8/rest_in_peace_rxjava_and_retrofit.md)\n   * [项目目标](/chapter8/the_project_goal.md)\n   * [Retrofit](/chapter8/retrofit.md)\n   * [App架构](/chapter8/app_structure.md)\n   * [创建Activity类](/chapter8/creating_activity_class.md)\n   * [创建RecyclerView Adapter](/chapter8/creating_recyclerview_adapter.md)\n   * [总结](/chapter8/summary8.md)\n\n"
        },
        {
          "name": "book.json",
          "type": "blob",
          "size": 0.142578125,
          "content": "{\n    \"plugins\": [\n        \"disqus\"\n    ],\n    \"pluginsConfig\": {\n        \"disqus\": {\n            \"shortName\": \"rxjavaessential\"\n        }\n    }\n}"
        },
        {
          "name": "chapter1",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter2",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter3",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter4",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter5",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter6",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter7",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter8",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.json",
          "type": "blob",
          "size": 0.294921875,
          "content": "{\n    \"name\": \"RxJava Essentials 中文翻译版\",\n    \"introduction\": \"这本书将帮助你学习RxJava的核心方面,也能帮助你克服Android平台局限性从而创建一个基于事件驱动的，响应式的，流畅体验的Android应用。\",\n    \"path\":{\n        \"toc\":\"SUMMARY.md\"\n    }\n}"
        },
        {
          "name": "cover.jpg",
          "type": "blob",
          "size": 20.7294921875,
          "content": null
        },
        {
          "name": "cover",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "rxjava.jpg",
          "type": "blob",
          "size": 20.7294921875,
          "content": null
        },
        {
          "name": "styles",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}