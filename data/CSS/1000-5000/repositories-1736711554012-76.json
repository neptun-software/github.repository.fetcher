{
  "metadata": {
    "timestamp": 1736711554012,
    "page": 76,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zachfitz/Ionic-Material",
      "stars": 2896,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cz.json",
          "type": "blob",
          "size": 0.0537109375,
          "content": "{\n  \"path\": \"node_modules/cz-conventional-changelog/\"\n}"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.6943359375,
          "content": "bower_components/\n\n####################################\n## OSX\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n####################################\n## editors (webstorm etc)\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n# User-specific stuff:\n# .idea/workspace.xml\n# .idea/tasks.xml\n# .idea/dictionaries\n\n# Sensitive or high-churn files:\n# .idea/dataSources.ids\n# .idea/dataSources.xml\n# .idea/sqlDataSources.xml\n# .idea/dynamic.xml\n# .idea/uiDesigner.xml\n\n# Gradle:\n# .idea/gradle.xml\n# .idea/libraries\n\n# Mongo Explorer plugin:\n# .idea/mongoSettings.xml\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n# cache files for sublime text\n*.tmlanguage.cache\n*.tmPreferences.cache\n*.stTheme.cache\n\n# workspace files are user-specific\n*.sublime-workspace\n\n# project files should be checked into the repository, unless a significant\n# proportion of contributors will probably not be using SublimeText\n# *.sublime-project\n\n# sftp configuration file\nsftp-config.json\n\n####################################\n## node.js\n# Logs\nlogs\n*.log\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directory\n# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git\nnode_modules\n\n####################################\n## client-side JS\nbower_components\n\n## generator-angular-famous-ionic\n# Logs\nlogs\n*.log\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage/\n# Reports directory used by tools like protractor\nreports/\n\n\n# Temp directories\ntemp/\ntest/tmp\ntest/temp\n\n# Other temp\n.sass-cache\n.grunt\n\n# Build\n.tmp\n\n*.sublime-project\n####################################\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.33984375,
          "content": "{\n  \"node\": true,\n  \"esnext\": true,\n  \"bitwise\": true,\n  \"camelcase\": true,\n  \"eqeqeq\": true,\n  \"eqnull\": true,\n  \"immed\": true,\n  \"indent\": 2,\n  \"latedef\": \"nofunc\",\n  \"newcap\": true,\n  \"nonew\": true,\n  \"noarg\": true,\n  \"quotmark\": true,\n  \"regexp\": true,\n  \"undef\": true,\n  \"unused\": false,\n  \"trailing\": true,\n  \"sub\": true,\n  \"maxlen\": false\n}\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.1396484375,
          "content": "# Contributing to Ionic Material\n\n:+1::tada: First off, thanks for taking the time to contribute! :tada::+1:\n\nThe following is a set of guidelines for contributing to Ionic Material.\nThese are just guidelines, not rules, use your best judgment and feel free to\npropose changes to this document in a pull request.\n\n## Submitting Issues\n\n* You can create an issue [here](https://github.com/zachsoft/Ionic-Material/issues/new),\n  and include as many details as possible with your report.\n* Include the version of Ionic that you are using, the device when are testing and the Ionic Material version.\n* Include screenshots and animated GIFs whenever possible; they are immensely\n  helpful.\n* Include the behavior you expected and other places you've seen that behavior\n  such as Emacs, vi, Xcode, etc.\n* Check the web console for errors to include. If you can reproduce the error, use this approach to get the\n  full stack trace and include it in the issue.\n* Perform a [cursory search](https://github.com/zachsoft/Ionic-Material/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+)\n  to see if a similar issue has already been submitted.\n* Please setup a [profile picture](https://help.github.com/articles/how-do-i-set-up-my-profile-picture)\n  to make yourself recognizable and so we can all get to know each other better.\n* When posting an issue please include a link to codepen or plunkr and instructions to reproduce.\n\n## Submitting Pull Request\n\n* First make a new Fork of the project.\n* Perform a [cursory search](https://github.com/zachsoft/Ionic-Material/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+)\nto see if a similar pull request has already been submitted.\n* Create a new Issue for this Pull Request.\n* Name your branch something like this IM-NumberOfTheIssue\n* Consider use [Git Flow](http://nvie.com/posts/a-successful-git-branching-model/).\n* Write and run Unit Test [see here for unit test](#running-tests-(TODO)).\n* Follow the Javascript style guide and conventions.\n* Merge Master for no conflicts.\n* Submit your Pull Request.\n* Thanks for the help.\n\n## Git Commit Messages\n\n* Please Use [Conventional Changelog Commit Guidelines](https://github.com/ajoslin/conventional-changelog/).\n* Use the present tense (\"Add feature\" not \"Added feature\")\n* Use the imperative mood (\"Move cursor to...\" not \"Moves cursor to...\")\n* Limit the first line to 72 characters or less\n* Remember to reference related issues or pull request, e.g: `\"fixes #123\"` liberally.\n* Consider use [commitizen](https://github.com/commitizen/cz-cli) to make your life easier with this.\n\nRinse & Repeat until all Ionic Apps look amazing and materialized.\n\n\n## New Issue Styleguide\n\nPlease use this guide when you create a new issue:\n\n```\n### DESCRIPTION\nThe Ionic Material exploded my Android Phone, some performance errors appear.\n\n### Trace\nHere is the stack trace.\n\n### STEPS\n1. Make a bomb.\n2. Activate the bomb.\n3. Place the bomb near of your phone.\n4. RUN!.\n5. The phone exploded.\n\n### EXPECTED\nThe Ionic Material don't exploded my browser.\n\n### REALITY\nThe Ionic Material exploded my browser.\n\n### Annexes\nHere is a photo or a gif of the issue\n```\n\n## Running Tests (TODO)\n<!-- TODO: Tests Documentation -->\n- blah blah blah Karma etc.\n"
        },
        {
          "name": "Gulpfile.js",
          "type": "blob",
          "size": 2.7275390625,
          "content": "/* jshint esnext: true, asi: true */\nconst _ = require('lodash');\nconst gulp = require('gulp');\nconst minifycss = require('gulp-minify-css');\nconst rename = require('gulp-rename');\nconst concat = require('gulp-concat');\nconst uglify = require('gulp-uglify');\nconst livereload = require('gulp-livereload');\nconst sass = require('gulp-sass');\nconst sourcemaps = require('gulp-sourcemaps');\nconst gulpWebpack = require('gulp-webpack');\nconst webpack = require('webpack');\n\nvar connect = require('gulp-connect');\n\nconst distPath = './dist/';\nvar minify = false;\n\ngulp.task('js', function () {\n    var src = [\n        './src/js/lib/_motion.js',\n        './src/js/lib/_ink.js'\n    ];\n    var js = gulp.src(src)\n        .pipe(concat('ionic.material.js'))\n        .pipe(gulp.dest(distPath));\n\n    if (minify) {\n        js.pipe(uglify())\n            .pipe(rename('ionic.material.min.js'))\n            .pipe(gulp.dest(distPath))\n    }\n    return js;\n});\n\ngulp.task('serve', function(){\n    return connect.server();\n});\n\n\ngulp.task('webpack', function(){\n    var webpackConfig = require('./webpack.config.js');\n    var uglifyPlugin = new webpack.optimize.UglifyJsPlugin({\n        sourcemaps: false\n    });\n\n    var minifiedConfig = _.cloneDeep(webpackConfig);\n    if(!minifiedConfig.plugins || _.isEmpty(minifiedConfig.plugins)){\n        minifiedConfig.plugins = [];\n    }\n    minifiedConfig.plugins.push(uglifyPlugin);\n    minifiedConfig.output.filename = 'ionic.material.min.js';\n\n    return gulp.src('src/ionic-material.js')\n      .pipe(gulpWebpack(webpackConfig))\n      .pipe(gulp.dest(distPath))\n      .pipe(rename('ionic.material.js'))\n      .pipe(gulp.src('src/ionic-material.js')) // dunno if this is needed, just getting unminified src again\n      .pipe(gulpWebpack(minifiedConfig))\n      .pipe(gulp.dest(distPath))\n      .pipe(rename('ionic.material.min.js'));\n});\n\ngulp.task('styles', function () {\n    var src = './src/scss/index.scss';\n\n    var scss = gulp.src(src)\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', sass.logError))\n        .pipe(rename('ionic.material.css'));\n\n\n    if (minify) {\n        scss.pipe(gulp.dest(distPath)).pipe(rename({\n            suffix: '.min'\n        }))\n            .pipe(minifycss())\n            .pipe(rename('ionic.material.min.css'))\n            .pipe(sourcemaps.write()).pipe(gulp.dest(distPath));\n    } else {\n        scss.pipe(sourcemaps.write()).pipe(gulp.dest(distPath));\n    }\n\n    return scss;\n});\n\ngulp.task('watch', function () {\n    livereload.listen();\n    gulp.watch(['./*.js', '!./src/js/'], ['webpack']);\n    gulp.watch('./*.scss', ['styles']);\n});\n\ngulp.task('build', function () {\n    minify = true;\n    return gulp.start(['webpack', 'styles']);\n})\n\ngulp.task('default', ['webpack', 'styles', 'watch'], function () {\n});\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.068359375,
          "content": "Copyright 2015 Zach Fitzgerald\nhttp://zachfitzgerald.com/\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.416015625,
          "content": "# This project / repository is retired\nThis project will not have updates for AngularJS/Ionic 1.\nPlease contact the author (zachfitz) if you have ability and interest in resurrecting it, or (preferrably) porting it to Ionic 2/Angular.\n\n# Ionic Material\n\n[![Join the chat at https://gitter.im/zachsoft/Ionic-Material](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/zachsoft/Ionic-Material?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\nIonic Framework ♥ Material Design\n\n#### NB: all versions pre-1.0 are intended as a work in progress 'Alpha'\n[![GitHub version](https://badge.fury.io/gh/zachsoft%2Fionic-material.svg)](http://badge.fury.io/gh/zachsoft%2Fionic-material)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n\nSee our [releases](https://github.com/zachsoft/ionic-material/releases) and other [versions](https://github.com/zachsoft/ionic-material/tags)\n\n## Demo and Documentation\n### Codepen\n- [Codepen by @raibutera](http://codepen.io/Rai/pen/rVjzoX?)\n\n### Documentation\n- [Documentation Application by @zachsoft @ ionicmaterial.com](http://ionicmaterial.com/demo/) \n(Use the ☰ menu for Documentation sections)\n\n- [Ionic Material on Readme.io (REALLY WIP)](http://ionicmaterial.readme.io/v0.3)\n\n<small> **NB:** Note: It is recommended that when creating an issue, you demonstrate the problem by forking the codepen.</small>\n\n# Quick Start\n## Step 1: Install using [Bower](http://bower.io) \n\n```shell\n cd /PATH/TO/YOUR/PROJECT\n bower install ionic-material\n```\n\n### Step 2: Add `RobotoDraft` font (by **Google**)\n#### Via CDN:\n```html\n <link href='https://fonts.googleapis.com/css?family=RobotoDraft:400,500,700,400italic' rel='stylesheet' type='text/css'>\n```\n\n#### via Bower \nCheck out [RobotoDraft by RaiButera on Github](https://github.com/raibutera/robotodraft) \n\n```shell\nbower install robotodraft \n```\n\n**using Sass?** instructions for [raibutera/robotodraft](https://github.com/raibutera/robotodraft) + scss:\n\n```scss\n$RobotoDraftFontPath: \"../fonts\"; // REMINDER: edit as appropriate!\n$RobotoDraftFontName: \"RobotoDraft\";\n$RobotoDraftFontVersion: \"1.0.0\";\n\n@import \"/PATH/TO/YOUR/PROJECT/bower_components/robotodraft/sass/robotodraft.scss\";    // REMINDER: edit as appropriate!\n```\n**NB**: the above assumes you are using [Bower](http://bower.io)\n\n### Step 3: Add Ionic Material stylesheets and scripts\nAdd `ionic.material.min.css` and `ionic.material.min.js` to your `index.html`\n\n```html \n    <link href=\"lib/ionic/css/ionic.css\" rel=\"stylesheet\">\n    <link href=\"lib/ionic-material/dist/ionic.material.min.css\" rel=\"stylesheet\">\n    <link href=\"css/style.css\" rel=\"stylesheet\">\n\n    <script src=\"lib/ionic/js/ionic.bundle.js\"></script>\n    <script src=\"lib/ionic-material/dist/ionic.material.min.js\"></script>\n```\n\n### Step 4: Inject Ionic & Ionic Material into your Ionic App \n\n```javascript\n    var app = angular.module('YOUR_APP_NAME', ['ionic', 'ionic-material']);\n```\n\n### Step 5: Where appropriate, inject *ionicMaterialInk* and/or *ionicMaterialMotion*\n\nThe angular services `ionicMaterialInk` and `ionicMaterialMotion` are used to activate animations.\n\n**You are all set to go!** :thumbsup:\n\n### Activating Animations\n\n**NB:** Make sure the relevant services are injected into your controllers.\n\nIn your controllers: \n- `ionicMaterialInk.displayEffect()` (will need to happen once on controller activation and then repeat every time the objects update)\n- `ionicMaterialMotion.ripple()` (etc.)\n\n## Sample App\nIonic demo app \"Thronester\" is found within './demo' - You can also run 'index.html' locally to view in a webkit browser on a computer.\n\n## Builds\nInstructions:\n- `npm install`\n- `gulp build` (or `gulp style` for just the stylesheets)\n\nLook at `gulpfile.js` for how the process works.\n\n## Development \nThis project uses [Webpack](http://webpack.github.io/)\n\n## Contributing\nSee our [CONTRIBUTING INSTRUCTIONS](./CONTRIBUTING.md)\n\n## Website\n[http://ionicmaterial.com/](http://ionicmaterial.com/)\n\n## FAQ\n### What is Ionic Material?\nIonic material is aimed at being an extension library for the Ionic Framework, meaning you won't change the way you develop your Ionic hybrid apps to have them materialized. Ionic Material aims to integrate the best representations of Material Design into a single add-on library for Ionic Developers. With the Polymer Project, ngMaterial, and other open source projects arising, we aim to be actively engaged and aligned with these, and other, related projects.\n\nAs a 100% free open-source project, **developer participation is encouraged**, as much or little as possible.\n\n### Can I use Ionic and Angular Material together?\n*Ionic* and *Angular Material* are fairly incompatible (you can add them to the same project, but the styling will be extremely inconsistent and none of the UI components will work cross-framework, eg. an ionic side menu with material tabs). Ionic is 1.0 and angular material is still pre-1.0. \n\n**Ionic Material** is best explained as a \"material extension\" to Ionic, rather than to Angular as a whole. The difference isn't just semantics - Ionic Material extends the actual ionic framework namespace (in JS), renders material styles on the ionic elements (following ionic's conventions), and will aim to follow the releases of Ionic, and support material theming, ink, and motion for any new Ionic release.\n\nIonic Material will pull in the best ideas of Angular Material, Paper/Polymer, etc. and by the same tune, Ionic Material will also abstract the parts of the framework that would be beneficial outside of ionic apps (like animations, motions) into their standalone git projects so they can be adopted for use in -any- web project that uses material design.\n\n### How can I contribute?\nPlease see our [contribution guidelines](CONTRIBUTING.md)\n\nWant to become an official collaborator? Please contact @zachsoft\n\n\n## Roadmap and the Future \nSee [Milestones](https://github.com/zachsoft/ionic-material/milestones)\n\n### Rough Ideas\n0. Complete implementation of Material Design specification.\n\n1. Full UI Kit w/ dozens of templates for rapid application development. Inspired by amazing kits like: https://ui8.net/product/material-ui-kit.\n\n2. Increase animation performance. We're really stretching the limits of hybrid app animations - if **you** have ideas on performance adjustments, we're all ears and would love the insight.\n\n3. Port animate.js with bezier curve adjustments to match \"authentic motion\" spec of Material Design.\n\n4. Bug fixes\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.66015625,
          "content": "{\n  \"name\": \"ionic-material\",\n  \"version\": \"0.4.2\",\n  \"authors\": [\n    \"Rai Butera\",\n    \"Zach Fitzgerald\"\n  ],\n  \"description\": \"Ionic Material - Material Design for the Ionic Framework\",\n  \"main\": [\n    \"dist/ionic.material.css\",\n    \"dist/ionic.material.js\"\n  ],\n  \"keywords\": [\n    \"Ionic\",\n    \"Material\",\n    \"Design\",\n    \"AngularJS\",\n    \"Framework\",\n    \"Hybrid\",\n    \"Apps\",\n    \"Mobile\"\n  ],\n  \"license\": \"MIT\",\n  \"homepage\": \"http://ionicmaterial.com\",\n  \"private\": false,\n  \"ignore\": [\n    \"bower_components\",\n    \"demo\",\n    \"docs\",\n    \"Gulpfile.js\",\n    \"index.html\",\n    \"node_modules\"\n  ],\n  \"dependencies\": {\n    \"ionic\": \"~1.0.0\",\n    \"waves\": \"0.6\"\n  }\n}\n"
        },
        {
          "name": "bower_components",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.8046875,
          "content": "<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width\">\n    <title>Ionic Material</title>\n    <link href=\"https://fonts.googleapis.com/css?family=RobotoDraft:400,500,700,400italic\" rel=\"stylesheet\">\n    <link href=\"docs/css/wrapper.css\" rel=\"stylesheet\">\n</head>\n\n<body>\n    <!-- Just a wrapper to simulate phone size on a desktop -->\n    <iframe id=\"iframe\" width=\"400\" height=\"640\" src=\"docs/docs.html\"></iframe>\n    <button id=\"context-switcher\" type=\"button\" class=\"button\">Switch to Demo App \"Thronester\"</button>\n    <div id=\"warning\" class=\"warning\">\n        Warning: Please view in a webkit-based browser for closer simulation\n    </div>\n</body>\n<script src=\"docs/js/wrapper.js\"></script>\n</body>\n\n</html>\n"
        },
        {
          "name": "node_modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.056640625,
          "content": "{\n  \"name\": \"ionic-material\",\n  \"version\": \"0.4.0\",\n  \"authors\": [\n    \"Zach Fitzgerald\"\n  ],\n  \"description\": \"Ionic Material - Material Design for the Ionic Framework\",\n  \"main\": \"dist/ionic-material.min.js\",\n  \"keywords\": [\n    \"Ionic\",\n    \"Material\",\n    \"Design\",\n    \"Angular\",\n    \"Framework\",\n    \"Hybrid\",\n    \"Apps\",\n    \"Mobile\"\n  ],\n  \"license\": \"MIT\",\n  \"homepage\": \"http://ionicmaterial.com\",\n  \"private\": false,\n  \"bugs\": {\n    \"url\": \"https://github.com/zachsoft/Ionic-Material/issues\"\n  },\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\"\n  ],\n  \"dependencies\": {\n    \"gulp\": \"^3.7.0\",\n    \"gulp-concat\": \"^2.1.7\",\n    \"gulp-connect\": \"^2.2.0\",\n    \"gulp-livereload\": \"^3.0.0\",\n    \"gulp-minify-css\": \"^0.3.0\",\n    \"gulp-rename\": \"^1.1.0\",\n    \"gulp-uglify\": \"^0.2.1\",\n    \"lodash\": \"^3.9.1\"\n  },\n  \"devDependencies\": {\n    \"cz-conventional-changelog\": \"^1.1.0\",\n    \"gulp-sass\": \"^2.0.0\",\n    \"gulp-sourcemaps\": \"^1.5.2\",\n    \"gulp-webpack\": \"^1.4.0\",\n    \"node-libs-browser\": \"^0.5.0\",\n    \"webpack\": \"^1.9.7\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 0.6904296875,
          "content": "const webpack = require('webpack');\nconst path = require('path');\nconst uglifyPlugin = new webpack.optimize.UglifyJsPlugin();\n\nvar bowerComponentsPath = path.join(__dirname, '/bower_components');\n\nmodule.exports = {\n    context: __dirname,\n    entry: './src/js/ionic-material.js',\n    output: {\n        libraryTarget: 'umd',\n        library: 'ionicMaterial',\n        path: __dirname + '/dist',\n        filename: 'ionic.material.js'\n    },\n    resolve: {\n        alias: {\n            waves: path.join(bowerComponentsPath, 'waves/dist/waves.js')\n        }\n    },\n    externals:{\n        'angular': 'angular',\n        'ionic': 'ionic'\n    },\n    plugins: [\n        // uglifyPlugin\n    ],\n    target : 'web'\n};\n"
        }
      ]
    }
  ]
}