{
  "metadata": {
    "timestamp": 1736711711509,
    "page": 433,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "D0n9X1n/hexo-blog-encrypt",
      "stars": 1017,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.267578125,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 2\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nend_of_line = lf\n# editorconfig-tools is unable to ignore longs strings or urls\nmax_line_length = null\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.1767578125,
          "content": "module.exports = {\n  'env': {\n    'browser': true,\n    'commonjs': true,\n    'es6': true\n  },\n  'extends': 'eslint:recommended',\n  'parserOptions': {\n    'ecmaVersion': 10,\n  },\n};\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.33984375,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### *.iml template\nnode_modules/\npackage-lock.json\n### .git template\n\n\n### Tags template\n# Ignore tags created by etags, ctags, gtags (GNU global) and cscope\nTAGS\n!TAGS/\ntags\n!tags/\ngtags.files\nGTAGS\nGRTAGS\nGPATH\ncscope.files\ncscope.out\ncscope.in.out\ncscope.po.out\n\n\n\n### Xcode template\nbuild/\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\nxcuserdata\n*.xccheckout\n*.moved-aside\nDerivedData\n*.xcuserstate\n\n\n### Java template\n*.class\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.ear\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n\n### *.classpath template\n\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n# User-specific stuff:\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/dictionaries\n\n# Sensitive or high-churn files:\n.idea/dataSources.ids\n.idea/dataSources.xml\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n\n# Gradle:\n# .idea/gradle.xml\n# .idea/libraries\n\n# Mongo Explorer plugin:\n# .idea/mongoSettings.xml\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n\n### Vim template\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n*~\n\n\n### *.settings template\n*.settings\n*.settings/\n\n### Maven template\ntarget/\npom.xml.tag\npom.xml.releaseBackup\npom.xml.versionsBackup\npom.xml.next\nrelease.properties\ndependency-reduced-pom.xml\n\n\n### Linux template\n*~\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n\n### OSX template\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0263671875,
          "content": "Copyright © 2022 D0n9X1n\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "ReadMe.md",
          "type": "blob",
          "size": 7.8076171875,
          "content": "# hexo-blog-encrypt\n\n![GitHub release (latest SemVer including pre-releases)](https://img.shields.io/github/v/release/D0n9x1n/hexo-blog-encrypt?include_prereleases)\n[![Build Status](https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/badges/build.png?b=master)](https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/build-status/master)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/?branch=master)\n\n[中文说明](./ReadMe.zh.md)\n\n## What's this\n\n- ~~First of all, the **BEST** post encryption plugin in the universe for hexo.(But what about the other plugins?)~~\n\n- It is for those who write a post, but don't want everyone to read it. Thus, password is required in certain pages to access these encrypted posts.\n\n- Encryption is simple on wordpress, emlog or other blog systems, except hexo. :(\n\n- So it's \"hexo-blog-encrypt\"'s time.\n\n## Features\n\n- Once you enter the correct password, you can get the access to encrypted posts, and the password is remembered locally. Press the button again, and the stored password will be erased. If there're scripts in the post, they will be executed once the post is decrypted.\n\n- Support preset tag-specified password.\n\n- All functions are provided by the native APIs. We use [Crypto](https://nodejs.org/dist/latest-v12.x/docs/api/crypto.html) in Node.js, and use [Web Crypto API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API) in Browsers.\n\n- [PBKDF2](https://tools.ietf.org/html/rfc2898), [SHA256](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf) is used to derive keys, We use [AES256-CBC](https://csrc.nist.gov/publications/detail/sp/800-38a/final) to encrypt and decrypt data, we also use [HMAC](https://csrc.nist.gov/csrc/media/publications/fips/198/1/final/documents/fips-198-1_final.pdf) to verify message authentication codes to make sure the posts are decrypted well and not modified.\n\n- Promise is widely used to make sure our main procedures are asynchronous, so that there is little chance for the process to be blocked, and the experience will be more fluent.\n\n- Template theme supported, you can use [`default`, `blink`, `flip`, `shrink`, `surge`, `up`, `wave`, `xray`] to set up your template theme, and [CHECK ONLINE](https://mhexo.github.io/tags/ThemeTests/).\n\n- Outdated browsers may not work well. In such case, please upgrade your browser.\n\n## Online demo\n\n- See [Demo Page](https://mhexo.github.io/), **all passwords are `hello`**.\n\n## Install\n\n- `npm install --save hexo-blog-encrypt`\n\n- or `yarn add hexo-blog-encrypt` (require [Yarn](https://yarnpkg.com/en/))\n\n## Quick start\n\n- Add the \"password\" value to your post's front matter like:\n\n```markdown\n\n---\ntitle: Hello World\ndate: 2016-03-30 21:18:02\npassword: hello\n---\n\n```\n\n- Then use `hexo clean && hexo g && hexo s` to see your encrypted post locally.\n\n## Password Priority\n\npost's front matter > encrypt tags\n\n## Advanced settings\n\n### in post's front matter\n\n```markdown\n\n---\ntitle: Hello World\ntags:\n- encryptAsDiary\ndate: 2016-03-30 21:12:21\npassword: mikemessi\nabstract: Here's something encrypted, password is required to continue reading.\nmessage: Hey, password is required here.\nwrong_pass_message: Oh, this is an invalid password. Check and try again, please.\nwrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.\n---\n\n```\n\n### In `_config.yml`\n\n#### Example\n\n```yaml\n# Security\nencrypt: # hexo-blog-encrypt\n  abstract: Here's something encrypted, password is required to continue reading.\n  message: Hey, password is required here.\n  tags:\n  - {name: encryptAsDiary, password: passwordA}\n  - {name: encryptAsTips, password: passwordB}\n  wrong_pass_message: Oh, this is an invalid password. Check and try again, please.\n  wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.\n\n```\n\n#### To disable tag encryption\n\nJust set the `password` property in front matter to `\"\"`.\n\nExample:\n\n```\n---\ntitle: Callback Test\ndate: 2019-12-21 11:54:07\ntags:\n    - A Tag should be encrypted\npassword: \"\"\n---\n\nUse a \"\" to disable tag encryption.\n```\n\n### Config priority\n\npost's front matter > `_config.yml` (in the root directory) > default\n\n### About Callback\nIn some blogs, some elements may not be displayed normally after decryption. This is a known issue. The current solution is to check the code in your blog to learn which functions are called when the onload event occurs.\nThen write these code at the end of your post. For example:\n\n```\n---\ntitle: Callback Test\ndate: 2019-12-21 11:54:07\ntags:\n    - Encrypted\n---\n\nThis is a blog to test Callback functions. You just need to add code at the end of your post as follows:\n\nIt will be called after the blog is decrypted.\n\n<script>\n    // add script tag and code at the end of your post\n    alert(\"Hello World\");\n</script>\n```\n\nDemo: [Callback Example](https://mhexo.github.io/2020/12/06/Callback-Test/).\n\n### After Decrypt Event\nThanks to @[f-dong](https://github.com/f-dong), we now will trigger a event named `hexo-blog-decrypt`, so you can add a call back to listen to that event.\n\n```\n// trigger event\nvar event = new Event('hexo-blog-decrypt');\nwindow.dispatchEvent(event);\n```\n\n### Encrypt TOC\n\nIf you has a post with TOC, you should change the code of your template. Take the default theme 'landscape' as an example:\n\n+ You should find the `article.ejs` file located at `hexo/themes/landscape/layout/_partial/article.ejs`.\n+ Find the code like <% post.content %>, which is usually at line 30.\n+ Replace the <% post.content %> with the following code block:\n\n```\n<% if(post.toc == true){ %>\n  <div id=\"toc-div\" class=\"toc-article\" <% if (post.encrypt == true) { %>style=\"display:none\" <% } %>>\n    <strong class=\"toc-title\">Index</strong>\n      <% if (post.encrypt == true) { %>\n        <%- toc(post.origin, {list_number: true}) %>\n      <% } else { %>\n        <%- toc(post.content, {list_number: true}) %>\n      <% } %>\n  </div>\n<% } %>\n<%- post.content %>\n```\n\n### Disable logging\nIf you want to disable the logging, you can add a silent property in `_config.yml` and set it to true.\n\n```yaml\n# Security\nencrypt: # hexo-blog-encrypt\n  silent: true\n```\n\nThis would disable the logging like `INFO  hexo-blog-encrypt: encrypting \"{Blog Name}\" based on Tag: \"EncryptedTag\".`.\n\n### Encrypt Theme\nPreviously, we use `template` to let users modify their own themes. Turn out that it's not a simple way. So, we are introducing this feature here.\n\nYou can simply use `theme` in `_config.yml` or in header like:\n\n#### In post's front matter\n\n```markdown\n---\ntitle: Theme test\ndate: 2019-12-21 11:54:07\ntags:\n    - A Tag should be encrypted\ntheme: xray\npassword: \"hello\"\n---\n```\n\n#### In `_config.yml`\n\nThis would be a default one.\n\n```yaml\n# Security\nencrypt: # hexo-blog-encrypt\n  abstract: Here's something encrypted, password is required to continue reading.\n  message: Hey, password is required here.\n  tags:\n  - {name: encryptAsDiary, password: passwordA}\n  - {name: encryptAsTips, password: passwordB}\n  theme: xray\n  wrong_pass_message: Oh, this is an invalid password. Check and try again, please.\n  wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.\n\n```\n\nCheck them online, and PICK one:\n\n+ [default](https://mhexo.github.io/2020/12/23/Theme-Test-Default/)\n+ [blink](https://mhexo.github.io/2020/12/23/Theme-Test-Blink/)\n+ [shrink](https://mhexo.github.io/2020/12/23/Theme-Test-Shrink/)\n+ [flip](https://mhexo.github.io/2020/12/23/Theme-Test-Flip/)\n+ [up](https://mhexo.github.io/2020/12/23/Theme-Test-Up/)\n+ [surge](https://mhexo.github.io/2020/12/23/Theme-Test-Surge/)\n+ [wave](https://mhexo.github.io/2020/12/23/Theme-Test-Wave/)\n+ [xray](https://mhexo.github.io/2020/12/23/Theme-Test-Xray/)\n\n\n## License\n\nSee [LICENSE](./LICENSE) file.\n\n## Thanks\n\nCollaborator - [xiazeyu](https://github.com/xiazeyu)\n"
        },
        {
          "name": "ReadMe.zh.md",
          "type": "blob",
          "size": 8.064453125,
          "content": "# hexo-blog-encrypt\n\n![GitHub release (latest SemVer including pre-releases)](https://img.shields.io/github/v/release/D0n9x1n/hexo-blog-encrypt?include_prereleases)\n[![Build Status](https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/badges/build.png?b=master)](https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/build-status/master)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/?branch=master)\n\n#### 提 issue 之前，请务必提供复现方式，log，配置信息等必要信息。良好的 issue 可以节省双方的时间。\n*请严格按照模版要求，不明确的 issue 将直接关闭。*\n\n**参考 issue:**\n\n> + [Issue 83](https://github.com/MikeCoder/hexo-blog-encrypt/issues/83)\n> + [Issue 68](https://github.com/MikeCoder/hexo-blog-encrypt/issues/68)\n\n## 这是个啥\n\n- ~~首先, 这是 Hexo 生态圈中 **最好的** 博客加密插件~~\n\n- 你可能需要写一些私密的博客, 通过密码验证的方式让人不能随意浏览.\n\n- 这在 wordpress, emlog 或是其他博客系统中都很容易实现, 然而 hexo 除外. :(\n\n- 为了解决这个问题, 让我们有请 \"hexo-blog-encrypt\".\n\n## 特性\n\n- 一旦你输入了正确的密码, 它将会被存储在本地浏览器的 localStorage中. 按个按钮, 密码将会被清空. 若博客中有脚本, 它将会被正确地执行.\n\n- 支持按标签加密.\n\n- 所有的核心功能都是由原生的 API 所提供的. 在 Node.js中, 我们使用 [Crypto](https://nodejs.org/dist/latest-v12.x/docs/api/crypto.html). 在浏览器中, 我们使用 [Web Crypto API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API).\n\n- [PBKDF2](https://tools.ietf.org/html/rfc2898), [SHA256](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf) 被用于分发密钥, [AES256-CBC](https://csrc.nist.gov/publications/detail/sp/800-38a/final) 被用于加解密, 我们还使用 [HMAC](https://csrc.nist.gov/csrc/media/publications/fips/198/1/final/documents/fips-198-1_final.pdf) 来验证密文的来源, 并确保其未被篡改.\n\n- 我们广泛地使用 Promise 来进行异步操作, 以此确保线程不被阻塞.\n\n- 加密页面多主题支持, 现在已经支持的主题有 [`default`, `xray`], 更多的主题正在开发中.\n\n- 过时的浏览器将不能正常显示, 因此, 请升级您的浏览器.\n\n## 在线演示\n\n- 点击 [Demo Page](https://mhexo.github.io/), **所有的密码都是 `hello`**.\n\n## 安装\n\n- `npm install --save hexo-blog-encrypt`\n\n- 或 `yarn add hexo-blog-encrypt` (需要) [Yarn](https://yarnpkg.com/en/))\n\n## 快速使用\n\n- 将 \"password\" 字段添加到您文章信息头就像这样.\n\n```markdown\n\n---\ntitle: Hello World\ndate: 2016-03-30 21:18:02\npassword: hello\n---\n\n```\n\n- 再使用 `hexo clean && hexo g && hexo s` 在本地预览加密的文章.\n\n## 设置优先级\n\n文章信息头 > 按标签加密\n\n## 高级设置\n\n### 文章信息头\n\n```markdown\n\n---\ntitle: Hello World\ntags:\n- 作为日记加密\ndate: 2016-03-30 21:12:21\npassword: mikemessi\nabstract: 有东西被加密了, 请输入密码查看.\nmessage: 您好, 这里需要密码.\nwrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n```\n\n### `_config.yml`\n\n#### 示例\n\n```yaml\n\n# Security\nencrypt: # hexo-blog-encrypt\n  abstract: 有东西被加密了, 请输入密码查看.\n  message: 您好, 这里需要密码.\n  tags:\n  - {name: tagName, password: 密码A}\n  - {name: tagName, password: 密码B}\n  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.\n  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n\n```\n\n#### 对博文禁用 Tag 加密\n\n只需要将博文头部的 `password` 设置为 `\"\"` 即可取消 Tag 加密.\n\nExample:\n\n```\n---\ntitle: Callback Test\ndate: 2019-12-21 11:54:07\ntags:\n    - A Tag should be encrypted\npassword: \"\"\n---\n\nUse a \"\" to diable tag encryption.\n```\n\n### 配置优先级\n\n文章信息头 > `_config.yml` (站点根目录下的) > 默认配置\n\n### 关于 Callback 函数\n在部分博客中, 解密后部分元素可能无法正常显示或者表现, 这属于已知问题. 目前的解决办法是通过自行查阅自己的博客中的代码, 了解到在 onload 事件发生时调用了哪些函数, 并将这些函数挑选后写入到博客内容中. 如:\n\n```\n---\ntitle: Callback Test\ndate: 2019-12-21 11:54:07\ntags:\n    - Encrypted\n---\n\nThis is a blog to test Callback functions. You just need to add code at the last of your post like following:\n\nIt will be called after the blog decrypted.\n\n<script>\n    // 添加一个 script tag 与代码在文章末尾.\n    alert(\"Hello World\");\n</script>\n```\n\n例子在: [Callback 例子](https://mhexo.github.io/2020/12/06/Callback-Test/).\n\n### 解密后的触发事件\n感谢 @[f-dong](https://github.com/f-dong), 我们现在会在解密完成后触发一个 `hexo-blog-decrypt` 事件, 你们可以编写 callback 来监听该事件.\n\n```\n// trigger event\nvar event = new Event('hexo-blog-decrypt');\nwindow.dispatchEvent(event);\n```\n\n### 对 TOC 进行加密\n\n如果你有一篇文章使用了 TOC，你需要修改模板的部分代码。这里用 landscape 作为例子：\n\n+ 你可以在 hexo/themes/landscape/layout/_partial/article.ejs 找到 article.ejs。\n+ 然后找到 <% post.content %> 这段代码，通常在30行左右。\n+ 使用如下的代码来替代它:\n\n```\n<% if(post.toc == true){ %>\n  <div id=\"toc-div\" class=\"toc-article\" <% if (post.encrypt == true) { %>style=\"display:none\" <% } %>>\n    <strong class=\"toc-title\">Index</strong>\n      <% if (post.encrypt == true) { %>\n        <%- toc(post.origin, {list_number: true}) %>\n      <% } else { %>\n        <%- toc(post.content, {list_number: true}) %>\n      <% } %>\n  </div>\n<% } %>\n<%- post.content %>\n```\n\n### 禁用 Log\nIf you want to disable the logging, you can add a silent property in `_config.yml` and set it to true.\n如果你想要禁止使用 Log, 你可以在 `_config.yml` 中增加一个 silent 属性, 并将其设置为 true.\n\n```yaml\n# Security\nencrypt: # hexo-blog-encrypt\n  silent: true\n```\n\n这样就会禁止如 `INFO  hexo-blog-encrypt: encrypting \"{Blog Name}\" based on Tag: \"EncryptedTag\".` 的日志.\n\n### 加密主题\n\n之前, 我们尝试使用 `template` 关键字来让用户能修改自己的主题. 后来发现真不是一个好主意. 所以我们现在引入了主题: `theme` 关键字.\n\n你可以简单的使用 `theme` 在 `_config.yml` 里或者文章头, 如下:\n\n### 文章信息头\n\n```markdown\n\n---\ntitle: Hello World\ntags:\n- 作为日记加密\ndate: 2016-03-30 21:12:21\npassword: mikemessi\nabstract: 有东西被加密了, 请输入密码查看.\nmessage: 您好, 这里需要密码.\ntheme: xray\nwrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n```\n\n### 在 `_config.yml`\n\n#### 示例\n\n```yaml\n\n# Security\nencrypt: # hexo-blog-encrypt\n  abstract: 有东西被加密了, 请输入密码查看.\n  message: 您好, 这里需要密码.\n  tags:\n  - {name: tagName, password: 密码A}\n  - {name: tagName, password: 密码B}\n  theme: xray\n  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.\n  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n\n```\n\n你可以在线挑选你喜欢的主题,并应用到你的博客中:\n\n+ [default](https://mhexo.github.io/2020/12/23/Theme-Test-Default/)\n+ [blink](https://mhexo.github.io/2020/12/23/Theme-Test-Blink/)\n+ [shrink](https://mhexo.github.io/2020/12/23/Theme-Test-Shrink/)\n+ [flip](https://mhexo.github.io/2020/12/23/Theme-Test-Flip/)\n+ [up](https://mhexo.github.io/2020/12/23/Theme-Test-Up/)\n+ [surge](https://mhexo.github.io/2020/12/23/Theme-Test-Surge/)\n+ [wave](https://mhexo.github.io/2020/12/23/Theme-Test-Wave/)\n+ [xray](https://mhexo.github.io/2020/12/23/Theme-Test-Xray/)\n\n\n## 许可\n\n看看 [LICENSE](./LICENSE).\n\n## 感谢\n\nCollaborator - [xiazeyu](https://github.com/xiazeyu)\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 4.9013671875,
          "content": "/* global hexo, __dirname */\n\n'use strict';\n\nconst crypto = require('crypto');\nconst fs = require('fs');\nconst path = require('path');\nconst log = hexo.log;\n\nconst defaultConfig = {\n  'abstract': 'Here\\'s something encrypted, password is required to continue reading.',\n  'message': 'Hey, password is required here.',\n  'theme': 'default',\n  'wrong_pass_message': 'Oh, this is an invalid password. Check and try again, please.',\n  'wrong_hash_message': 'OOPS, these decrypted content may changed, but you can still have a look.',\n  'silent': false,\n};\n\nconst keySalt = crypto.randomBytes(32);\nconst ivSalt = crypto.randomBytes(32);\n\n// As we can't detect the wrong password with AES-CBC,\n// so adding an empty tag and check it when decrption.\nconst knownPrefix = \"<hbe-prefix></hbe-prefix>\";\n\n// disable log\nvar silent = false;\n// use default theme\nvar theme = 'default';\n\nhexo.extend.filter.register('after_post_render', (data) => {\n  const tagEncryptPairs = [];\n\n  let password = data.password;\n  let tagUsed = false;\n\n  // use a empty password to disable category encryption\n  if (password === \"\") {\n    return data;\n  }\n\n  if (hexo.config.encrypt === undefined) {\n    hexo.config.encrypt = [];\n  }\n\n  if(('encrypt' in hexo.config) && ('tags' in hexo.config.encrypt)){\n    hexo.config.encrypt.tags.forEach((tagObj) => {\n      tagEncryptPairs[tagObj.name] = tagObj.password;\n    });\n  }\n\n  if (data.tags) {\n    data.tags.forEach((cTag) => {\n      if (tagEncryptPairs.hasOwnProperty(cTag.name)) {\n        tagUsed = password ? tagUsed : cTag.name;\n        password = password || tagEncryptPairs[cTag.name];\n      }\n    });\n  }\n\n  if(password == undefined){\n    return data;\n  }\n\n  password = password.toString();\n\n  // make sure toc can work.\n  data.origin = data.content;\n\n  // Let's rock n roll\n  const config = Object.assign(defaultConfig, hexo.config.encrypt, data);\n  silent = config.silent;\n  theme = config.theme.trim().toLowerCase();\n\n  // deprecate the template keyword\n  if (config.template) {\n    dlog('warn', 'Looks like you use a deprecated property \"template\" to set up template, consider to use \"theme\"? See https://github.com/D0n9X1n/hexo-blog-encrypt#encrypt-theme');\n  }\n\n  // read theme from file\n  let template = fs.readFileSync(path.resolve(__dirname, `./lib/hbe.${theme}.html`)).toString();\n\n  if (tagUsed === false) {\n    dlog('info', `hexo-blog-encrypt: encrypting \"${data.title.trim()}\" based on the password configured in Front-matter with theme: ${theme}.`);\n  } else {\n    dlog('info', `hexo-blog-encrypt: encrypting \"${data.title.trim()}\" based on Tag: \"${tagUsed}\" with theme ${theme}.`);\n  }\n\n  data.content = knownPrefix + data.content.trim();\n  data.encrypt = true;\n\n  const key = crypto.pbkdf2Sync(password, keySalt, 1024, 32, 'sha256');\n  const iv = crypto.pbkdf2Sync(password, ivSalt, 512, 16, 'sha256');\n\n  const cipher = crypto.createCipheriv('aes-256-cbc', key, iv);\n  const hmac = crypto.createHmac('sha256', key);\n\n  let encryptedData = cipher.update(data.content, 'utf8', 'hex');\n  hmac.update(data.content, 'utf8');\n  encryptedData += cipher.final('hex');\n  const hmacDigest = hmac.digest('hex');\n\n  data.content = template.replace(/{{hbeEncryptedData}}/g, encryptedData)\n    .replace(/{{hbeHmacDigest}}/g, hmacDigest)\n    .replace(/{{hbeWrongPassMessage}}/g, config.wrong_pass_message)\n    .replace(/{{hbeWrongHashMessage}}/g, config.wrong_hash_message)\n    .replace(/{{hbeMessage}}/g, config.message)\n    .replace(/{{hbeKeySalt}}/g, keySalt.toString('hex'))\n    .replace(/{{hbeIvSalt}}/g, ivSalt.toString('hex'));\n  data.content += `<script data-pjax src=\"${hexo.config.root}lib/hbe.js\"></script><link href=\"${hexo.config.root}css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">`;\n  data.excerpt = data.more = config.abstract;\n\n  return data;\n}, 1000);\n\nhexo.extend.generator.register('hexo-blog-encrypt', () => [\n  {\n    'data': () => fs.createReadStream(path.resolve(__dirname, `./lib/hbe.style.css`)),\n    'path': `css/hbe.style.css`,\n  },\n  {\n    'data': () => fs.createReadStream(path.resolve(__dirname, './lib/hbe.js')),\n    'path': 'lib/hbe.js',\n  },\n]);\n\n// log function\nfunction dlog(level, x) {\n  switch (level) {\n    case 'warn':\n      log.warn(x);\n      break;\n\n    case 'info':\n    default:\n      if (silent) {\n        return;\n      }\n\n      log.info(x);\n  }\n}\n\n// Utils functions\nfunction textToArray(s) {\n  var i = s.length;\n  var n = 0;\n  var ba = new Array()\n\n  for (var j = 0; j < i;) {\n    var c = s.codePointAt(j);\n    if (c < 128) {\n      ba[n++] = c;\n      j++;\n    } else if ((c > 127) && (c < 2048)) {\n      ba[n++] = (c >> 6) | 192;\n      ba[n++] = (c & 63) | 128;\n      j++;\n    } else if ((c > 2047) && (c < 65536)) {\n      ba[n++] = (c >> 12) | 224;\n      ba[n++] = ((c >> 6) & 63) | 128;\n      ba[n++] = (c & 63) | 128;\n      j++;\n    } else {\n      ba[n++] = (c >> 18) | 240;\n      ba[n++] = ((c >> 12) & 63) | 128;\n      ba[n++] = ((c >> 6) & 63) | 128;\n      ba[n++] = (c & 63) | 128;\n      j += 2;\n    }\n  }\n\n  return new Uint8Array(ba);\n}\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.7705078125,
          "content": "{\n  \"author\": {\n    \"name\": \"D0n9X1n\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/D0n9X1n/hexo-blog-encrypt/issues\"\n  },\n  \"description\": \"Yet, just another blog encrypt plugin for hexo.\",\n  \"homepage\": \"https://github.com/D0n9X1n/hexo-blog-encrypt#readme\",\n  \"keywords\": [\n    \"encrypt\",\n    \"blog\",\n    \"hexo\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"maintainers\": [\n    {\n      \"email\": \"D0n9X1n@outlook.com\",\n      \"name\": \"D0n9X1n\"\n    }\n  ],\n  \"name\": \"hexo-blog-encrypt\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/D0n9X1n/hexo-blog-encrypt.git\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"lint\": \"eslint --ext .js ./\"\n  },\n  \"version\": \"3.1.9\",\n  \"devDependencies\": {\n    \"eslint\": \"^6.2.2\"\n  }\n}\n"
        }
      ]
    }
  ]
}