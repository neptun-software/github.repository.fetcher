{
  "metadata": {
    "timestamp": 1736711652923,
    "page": 291,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cgross/angular-busy",
      "stars": 1437,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bowerrc",
          "type": "blob",
          "size": 0.0361328125,
          "content": "{\n  \"directory\": \"bower_components\"\n}"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1357421875,
          "content": "lib-cov\n*.seed\n*.log\n*.csv\n*.dat\n*.out\n*.pid\n*.gz\n\npids\nlogs\nresults\n\nnpm-debug.log\n\nnode_modules\n.DS_Store\n\ntemp\n\n_SpecRunner.html\n\n.grunt"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.53125,
          "content": "{\n    \"curly\": true,\n    \"eqeqeq\": true,\n    \"immed\": true,\n    \"latedef\": true,\n    \"newcap\": true,\n    \"noarg\": true,\n    \"sub\": true,\n    \"undef\": true,\n    \"boss\": true,\n    \"eqnull\": true,\n    \"browser\": true,\n    \"smarttabs\": true,\n    \"globals\": {\n        \"jQuery\": true,\n        \"angular\": true,\n        \"console\": true,\n        \"$\": true,\n        \"_\": true,\n        \"moment\": true,\n        \"describe\": true,\n        \"beforeEach\": true,\n        \"module\": true,\n        \"inject\": true,\n        \"it\": true,\n        \"expect\": true\n    }\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0810546875,
          "content": "language: node_js\nnode_js:\n  - \"0.10\"\nbefore_script:\n  - \"npm install -g grunt-cli\""
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 1.8955078125,
          "content": "'use strict';\n\nmodule.exports = function (grunt) {\n\n  require('load-grunt-tasks')(grunt);\n\n  grunt.initConfig({\n    connect: {\n      main: {\n        options: {\n          port: 9001\n        }\n      }\n    },\n    watch: {\n      main: {\n        options: {\n          livereload: true,\n          livereloadOnError: false,\n          spawn: false\n        },\n        files: ['angular-busy.html','angular-busy.js','angular-busy.css','dist/**/*','demo/**/*'],\n        tasks: ['jshint','build']\n      }\n    },\n    jshint: {\n      main: {\n        options: {\n          jshintrc: '.jshintrc'\n        },\n        src: 'angular-busy.js'\n      }\n    },\n    jasmine: {\n      unit: {\n        src: ['./bower_components/jquery/dist/jquery.js','./bower_components/angular/angular.js','./bower_components/angular-animate/angular-animate.js','./bower_components/angular-mocks/angular-mocks.js','./dist/angular-busy.js','./demo/demo.js'],\n        options: {\n          specs: 'test/*.js'\n        }\n      }\n    },\n    ngtemplates: {\n      main: {\n        options: {\n          module:'cgBusy',\n          base:''\n        },\n        src:'angular-busy.html',\n        dest: 'temp/templates.js'\n      }\n    },\n    concat: {\n      main: {\n        src: ['angular-busy.js', 'temp/templates.js'],\n        dest: 'dist/angular-busy.js'\n      }\n    },\n    copy: {\n      main: {\n        files: [\n          {src:'angular-busy.css',dest:'dist/'},\n          {src:'index.js',dest:'dist/'}\n        ]\n      }\n    },\n    uglify: {\n      main: {\n        files: [\n        {src:'dist/angular-busy.js',dest:'dist/angular-busy.min.js'}\n        ]\n      }\n    },\n    cssmin: {\n      main: {\n        files: {\n          'dist/angular-busy.min.css': 'dist/angular-busy.css'\n        }\n      }\n    }\n  });\n\n  grunt.registerTask('serve', ['jshint','connect', 'watch']);\n  grunt.registerTask('build',['ngtemplates','concat','uglify','copy','cssmin']);\n  grunt.registerTask('test',['build','jasmine']);\n\n};"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0263671875,
          "content": "Copyright 2013 Chris Gross\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.1279296875,
          "content": "# angular-busy [![Build Status](https://travis-ci.org/cgross/angular-busy.png?branch=master)](https://travis-ci.org/cgross/angular-busy)\n\n> Show busy/loading indicators on any $http or $resource request, or on any promise.\n\n## Demo\n\n[Live Demo](http://cgross.github.io/angular-busy/demo)\n\n## Getting Started\n\nInstall with Bower, npm, yarn, or download the files directly from the dist folder in the repo.\n\n```bash\nbower install angular-busy --save\nnpm install @cgross/angular-busy\n```\n\nAdd `dist/angular-busy.js` and `dist/angular-busy.css` to your index.html.\n\nAdd `cgBusy` as a module dependency for your module.\n\n```js\nangular.module('your_app', ['cgBusy']);\n```\n\nAdd your promise to $scope and reference that in the `cg-busy` directive:\n\n```js\nfunction MyCtrl($scope,$http,User) {\n\n  //using $http\n  $scope.myPromise = $http.get('...');\n\n  //if you have a User class based on $resource\n  $scope.myPromise = User.$save();\n\n}\n```\n\n```html\n<!-- Use the simple syntax -->\n<div cg-busy=\"myPromise\"></div>\n\n<!-- Use the advanced syntax -->\n<div cg-busy=\"{promise:myPromise,message:'Loading Your Data',templateUrl:'mycustomtemplate.html'}\"></div>\n```\n\n## Options\n\nThe `cg-busy` directive expects either a promise or a configuration object.\n\nIn other words.  You may do this:\n\n```html\n<div cg-busy=\"myPromise\"></div>\n```\n\nor this:\n\n```html\n<div cg-busy=\"{promise:myPromise,message:'Loading',backdrop:false,templateUrl:'myAwesomeTemplate.html',delay:300,minDuration:700}\"></div>\n```\n\n* `promise` - Required. The promise (or array of promises) that will cause the busy indicator to show.\n* `message` - Optional.  Defaults to 'Please Wait...'.  The message to show in the indicator.  This value may be updated while the promise is active.  The indicator will reflect the updated values as they're changed.\n* `backdrop` - Optional. Boolean, default is true. If true a faded backdrop will be shown behind the progress indicator.\n* `templateUrl` - Optional.  If provided, the given template will be shown in place of the default progress indicatory template.\n* `delay` - Optional.  The amount of time to wait until showing the indicator.  Defaults to 0.  Specified in milliseconds.\n* `minDuration` - Optional.  The amount of time to keep the indicator showing even if the promise was resolved quicker.  Defaults to 0.  Specified in milliseconds.\n* `wrapperClass` - Optional.  The name(s) of the CSS classes to be applied to the wrapper element of the busy sign/animation.  Defaults to `cg-busy cg-busy-animation`.  Typically only useful if you wish to apply different positioning to the animation.\n\n## Providing Custom Templates\n\nThe angular-busy indicator is a regular Angular template.  The templates have access to the scope where `cg-busy` was declared so you may reference your local scope variables in your custom templates.  Additionally, the scope is augmented with a `$message` field containing the indicator message text.\n\n## Overriding Defaults\n\nThe defaut values for `message`, `backdrop`, `templateUrl`, `delay`, and `minDuration` may all be overriden by overriding the `$injector` value for `cgBusyDefaults`, like so:\n\n```js\nangular.module('your_app').value('cgBusyDefaults',{\n  message:'Loading Stuff',\n  backdrop: false,\n  templateUrl: 'my_custom_template.html',\n  delay: 300,\n  minDuration: 700,\n  wrapperClass: 'my-class my-class2'\n});\n```\n\nOnly the values you'd like overriden need to be specified.\n\n\n## Release History\n * v4.1.4 - Fixed deprecated Angular success promise methods for 1.6.  Published to npm.\n * v4.1.3 - Fix for issue #45 and issue #49.\n * v4.1.2 - Small bugs fixed, wrapperClass option added.\n * v4.1.1 - Compatibility with Angular 1.3.\n * v4.1.0\n   * Change to how `delay` and `minDuration` work together.  If specified together, `minDuration` will only take effect if the promise was active through the delay.  For example, if `delay`=200 and `minDuration`=500 and the actual promise only took 100ms, no indicator will be shown.  If the delay threshold is reached, the indicator will show for `minDuration` ms rather than `minDuration` minus `delay` as it had been before.\n   * Backdrop now fades in with no movement.  Message still animates in from the top.\n * v4.0.4 - Added bower_components to bower ignore.\n * v4.0.3 - Now supports Q promises.\n * v4.0.2 - Fix for min duration only being used when delay also being set.\n * v4.0.0 - Big update\n  * Dependency on angular-promise-tracker has been removed.  We now track promises directly.\n  * Message is now configurable.\n  * The template options is now templateUrl.\n  * The delay option has been added.\n  * The minDuration option has been added.\n  * Changing default template has been modified to be part of the new `cgBusyDefaults` value.\n * v3.0.2 - Reverting back to promise-tracker v1.5 due to changes in the api.\n * v3.0.1 - Fix for using cg-busy when a tracker has already been registered.\n * v3.0.0 - Support for new promise-tracker api.  Fix for multiple cg-busy's on the same scope.\n * v2.2.0 - Support for multiple trackers per indicator.\n * v2.1.0 - Removed work-around for issues in Angular 1.2-rc's.\n * v2.0.0 - Moved to Angular 1.2.0-rc1.\n * v1.0.0 - Added Bower support.\n * v0.1.1 - Updated to Angular 1.1.5 animation syntax.\n * v0.1.0 - Initial release.\n"
        },
        {
          "name": "angular-busy.css",
          "type": "blob",
          "size": 8.61328125,
          "content": ".cg-busy{\n\tposition:absolute;\n\ttop:0px;\n\tleft:0px;\n\tright:0px;\n\tbottom:0px;\n    z-index:1001;\n}\n\n.cg-busy-animation.ng-hide-add,\n.cg-busy-animation.ng-hide-remove {\n    -webkit-transition:all .3s ease;\n    -moz-transition:all .3s ease;\n    -o-transition:all .3s ease;\n    transition:all .3s ease;\n    display:block !important;\n}\n.cg-busy-animation.ng-hide-remove {\n    opacity:0;\n    -webkit-transform:translate(0px,-40px);\n    -moz-transform:translate(0px,-40px);\n    -ms-transform:translate(0px,-40px);\n    -o-transform:translate(0px,-40px);\n    transform:translate(0px,-40px);\n}\n.cg-busy-animation.ng-hide-remove.ng-hide-remove-active {\n    opacity:1;\n    -webkit-transform:translate(0px,0px);\n    -moz-transform:translate(0px,0px);\n    -ms-transform:translate(0px,0px);\n    -o-transform:translate(0px,0px);\n    transform:translate(0px,0px);\n}\n.cg-busy-animation.ng-hide-add {\n    opacity:1;\n    -webkit-transform:translate(0px,0px);\n    -moz-transform:translate(0px,0px);\n    -ms-transform:translate(0px,0px);\n    -o-transform:translate(0px,0px);\n    transform:translate(0px,0px);\n}\n.cg-busy-animation.ng-hide-add.ng-hide-add-active {\n    opacity:0;\n    -webkit-transform:translate(0px,-40px);\n    -moz-transform:translate(0px,-40px);\n    -ms-transform:translate(0px,-40px);\n    -o-transform:translate(0px,-40px);\n    transform:translate(0px,-40px);\n}\n\n.cg-busy-backdrop {\n\tbackground-color:white;\n\topacity:.7;\n}\n\n.cg-busy-backdrop-animation.ng-hide-add,\n.cg-busy-backdrop-animation.ng-hide-remove {\n    -webkit-transition:opacity .3s ease;\n    -moz-transition:opacity .3s ease;\n    -o-transition:opacity .3s ease;\n    transition:opacity .3s ease;\n    display:block !important;\n}\n\n.cg-busy-backdrop-animation.ng-hide {\n  opacity:0;\n}\n\n/* All styles below are for the default template. */\n\n.cg-busy-default-wrapper {\n\ttext-align:center;\n}\n\n.cg-busy-default-sign{\n\tdisplay: inline-block;\n\tposition:relative;\n    z-index:1002;\n\tpadding-bottom: 6px;\n\tcolor:#333333;\n\ttext-shadow:0 1px 1px rgba(255, 255, 255, 0.75);\n\tbackground-color:#e9eeee;\n\tborder:1px solid #dddddd;\n\tborder-top-width:0;\n\t-webkit-border-radius:7px;\n\t-moz-border-radius:7px;\n\tborder-radius:7px;\n\tborder-top-left-radius:0;\n\tborder-top-right-radius:0;\n\t-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);\n\t-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);\n\tbox-shadow:inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);\n}\n.cg-busy-default-text{\n\tmargin:13px 12px 6px 49px;\n\tfont-size:16px;\n\tcolor:#555;\n\ttext-align: left;\n\tmax-width: 400px;\n}\n.cg-busy-default-spinner{\n\tposition:absolute;\n\twidth:25px;\n\theight:25px;\n\tdisplay:inline-block;\n\ttop:12px;\n\tleft:14px;\n}\n.cg-busy-default-spinner div{\n\twidth:12%;\n\theight:26%;\n\tbackground:#000;\n\tposition:absolute;\n\tleft:44.5%;\n\ttop:37%;\n\topacity:0;\n\t-webkit-animation:cg-busy-spinner-anim 1s linear infinite;\n\t-moz-animation:cg-busy-spinner-anim 1s linear infinite;\n\t-ms-animation:cg-busy-spinner-anim 1s linear infinite;\n\t-o-animation:cg-busy-spinner-anim 1s linear infinite;\n\tanimation:cg-busy-spinner-anim 1s linear infinite;\n\t-webkit-border-radius:50px;\n\t-moz-border-radius:50px;\n\tborder-radius:50px;\n\t-webkit-box-shadow:0 0 3px rgba(0,0,0,0.2);\n\t-moz-box-shadow:0 0 3px rgba(0,0,0,0.2);\n\tbox-shadow:0 0 3px rgba(0,0,0,0.2);\n}\n.cg-busy-default-spinner div.bar1{\n\t-webkit-transform:rotate(0deg) translate(0, -142%);\n\t-moz-transform:rotate(0deg) translate(0, -142%);\n\t-ms-transform:rotate(0deg) translate(0, -142%);\n\t-o-transform:rotate(0deg) translate(0, -142%);\n\ttransform:rotate(0deg) translate(0, -142%);\n\t-webkit-animation-delay:0s;\n\t-moz-animation-delay:0s;\n\t-ms-animation-delay:0s;\n\t-o-animation-delay:0s;\n\tanimation-delay:0s;\n}\n.cg-busy-default-spinner div.bar2{\n\t-webkit-transform:rotate(30deg) translate(0, -142%);\n\t-moz-transform:rotate(30deg) translate(0, -142%);\n\t-ms-transform:rotate(30deg) translate(0, -142%);\n\t-o-transform:rotate(30deg) translate(0, -142%);\n\ttransform:rotate(30deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.9167s;\n\t-moz-animation-delay:-0.9167s;\n\t-ms-animation-delay:-0.9167s;\n\t-o-animation-delay:-0.9167s;\n\tanimation-delay:-0.9167s;\n}\n.cg-busy-default-spinner div.bar3{\n\t-webkit-transform:rotate(60deg) translate(0, -142%);\n\t-moz-transform:rotate(60deg) translate(0, -142%);\n\t-ms-transform:rotate(60deg) translate(0, -142%);\n\t-o-transform:rotate(60deg) translate(0, -142%);\n\ttransform:rotate(60deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.833s;\n\t-moz-animation-delay:-0.833s;\n\t-ms-animation-delay:-0.833s;\n\t-o-animation-delay:-0.833s;\n\tanimation-delay:-0.833s;\n}\n.cg-busy-default-spinner div.bar4{\n\t-webkit-transform:rotate(90deg) translate(0, -142%);\n\t-moz-transform:rotate(90deg) translate(0, -142%);\n\t-ms-transform:rotate(90deg) translate(0, -142%);\n\t-o-transform:rotate(90deg) translate(0, -142%);\n\ttransform:rotate(90deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.75s;\n\t-moz-animation-delay:-0.75s;\n\t-ms-animation-delay:-0.75s;\n\t-o-animation-delay:-0.75s;\n\tanimation-delay:-0.75s;\n}\n.cg-busy-default-spinner div.bar5{\n\t-webkit-transform:rotate(120deg) translate(0, -142%);\n\t-moz-transform:rotate(120deg) translate(0, -142%);\n\t-ms-transform:rotate(120deg) translate(0, -142%);\n\t-o-transform:rotate(120deg) translate(0, -142%);\n\ttransform:rotate(120deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.667s;\n\t-moz-animation-delay:-0.667s;\n\t-ms-animation-delay:-0.667s;\n\t-o-animation-delay:-0.667s;\n\tanimation-delay:-0.667s;\n}\n.cg-busy-default-spinner div.bar6{\n\t-webkit-transform:rotate(150deg) translate(0, -142%);\n\t-moz-transform:rotate(150deg) translate(0, -142%);\n\t-ms-transform:rotate(150deg) translate(0, -142%);\n\t-o-transform:rotate(150deg) translate(0, -142%);\n\ttransform:rotate(150deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.5833s;\n\t-moz-animation-delay:-0.5833s;\n\t-ms-animation-delay:-0.5833s;\n\t-o-animation-delay:-0.5833s;\n\tanimation-delay:-0.5833s;\n}\n.cg-busy-default-spinner div.bar7{\n\t-webkit-transform:rotate(180deg) translate(0, -142%);\n\t-moz-transform:rotate(180deg) translate(0, -142%);\n\t-ms-transform:rotate(180deg) translate(0, -142%);\n\t-o-transform:rotate(180deg) translate(0, -142%);\n\ttransform:rotate(180deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.5s;\n\t-moz-animation-delay:-0.5s;\n\t-ms-animation-delay:-0.5s;\n\t-o-animation-delay:-0.5s;\n\tanimation-delay:-0.5s;\n}\n.cg-busy-default-spinner div.bar8{\n\t-webkit-transform:rotate(210deg) translate(0, -142%);\n\t-moz-transform:rotate(210deg) translate(0, -142%);\n\t-ms-transform:rotate(210deg) translate(0, -142%);\n\t-o-transform:rotate(210deg) translate(0, -142%);\n\ttransform:rotate(210deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.41667s;\n\t-moz-animation-delay:-0.41667s;\n\t-ms-animation-delay:-0.41667s;\n\t-o-animation-delay:-0.41667s;\n\tanimation-delay:-0.41667s;\n}\n.cg-busy-default-spinner div.bar9{\n\t-webkit-transform:rotate(240deg) translate(0, -142%);\n\t-moz-transform:rotate(240deg) translate(0, -142%);\n\t-ms-transform:rotate(240deg) translate(0, -142%);\n\t-o-transform:rotate(240deg) translate(0, -142%);\n\ttransform:rotate(240deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.333s;\n\t-moz-animation-delay:-0.333s;\n\t-ms-animation-delay:-0.333s;\n\t-o-animation-delay:-0.333s;\n\tanimation-delay:-0.333s;\n}\n.cg-busy-default-spinner div.bar10{\n\t-webkit-transform:rotate(270deg) translate(0, -142%);\n\t-moz-transform:rotate(270deg) translate(0, -142%);\n\t-ms-transform:rotate(270deg) translate(0, -142%);\n\t-o-transform:rotate(270deg) translate(0, -142%);\n\ttransform:rotate(270deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.25s;\n\t-moz-animation-delay:-0.25s;\n\t-ms-animation-delay:-0.25s;\n\t-o-animation-delay:-0.25s;\n\tanimation-delay:-0.25s;\n}\n.cg-busy-default-spinner div.bar11{\n\t-webkit-transform:rotate(300deg) translate(0, -142%);\n\t-moz-transform:rotate(300deg) translate(0, -142%);\n\t-ms-transform:rotate(300deg) translate(0, -142%);\n\t-o-transform:rotate(300deg) translate(0, -142%);\n\ttransform:rotate(300deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.1667s;\n\t-moz-animation-delay:-0.1667s;\n\t-ms-animation-delay:-0.1667s;\n\t-o-animation-delay:-0.1667s;\n\tanimation-delay:-0.1667s;\n}\n.cg-busy-default-spinner div.bar12{\n\t-webkit-transform:rotate(330deg) translate(0, -142%);\n\t-moz-transform:rotate(330deg) translate(0, -142%);\n\t-ms-transform:rotate(330deg) translate(0, -142%);\n\t-o-transform:rotate(330deg) translate(0, -142%);\n\ttransform:rotate(330deg) translate(0, -142%);\n\t-webkit-animation-delay:-0.0833s;\n\t-moz-animation-delay:-0.0833s;\n\t-ms-animation-delay:-0.0833s;\n\t-o-animation-delay:-0.0833s;\n\tanimation-delay:-0.0833s;\n}\n\n@-webkit-keyframes cg-busy-spinner-anim{\n\tfrom {opacity: 1;}\n\tto {opacity: 0.25;}\n}\n@-moz-keyframes cg-busy-spinner-anim{\n\tfrom {opacity: 1;}\n\tto {opacity: 0.25;}\n}\n@keyframes cg-busy-spinner-anim{\n\tfrom {opacity: 1;}\n\tto {opacity: 0.25;}\n}\n"
        },
        {
          "name": "angular-busy.html",
          "type": "blob",
          "size": 0.609375,
          "content": "<div class=\"cg-busy-default-wrapper\">\n\n   <div class=\"cg-busy-default-sign\">\n\n      <div class=\"cg-busy-default-spinner\">\n         <div class=\"bar1\"></div>\n         <div class=\"bar2\"></div>\n         <div class=\"bar3\"></div>\n         <div class=\"bar4\"></div>\n         <div class=\"bar5\"></div>\n         <div class=\"bar6\"></div>\n         <div class=\"bar7\"></div>\n         <div class=\"bar8\"></div>\n         <div class=\"bar9\"></div>\n         <div class=\"bar10\"></div>\n         <div class=\"bar11\"></div>\n         <div class=\"bar12\"></div>\n      </div>\n\n      <div class=\"cg-busy-default-text\">{{$message}}</div>\n\n   </div>\n\n</div>"
        },
        {
          "name": "angular-busy.js",
          "type": "blob",
          "size": 9.244140625,
          "content": "angular.module('cgBusy',[]);\n\n//loosely modeled after angular-promise-tracker\nangular.module('cgBusy').factory('_cgBusyTrackerFactory',['$timeout','$q',function($timeout,$q){\n\n    return function(){\n\n        var tracker = {};\n        tracker.promises = [];\n        tracker.delayPromise = null;\n        tracker.durationPromise = null;\n        tracker.delayJustFinished = false;\n\n        tracker.reset = function(options){\n            tracker.minDuration = options.minDuration;\n\n            tracker.promises = [];\n            angular.forEach(options.promises,function(p){\n                if (!p || p.$cgBusyFulfilled) {\n                    return;\n                }\n                addPromiseLikeThing(p);\n            });\n\n            if (tracker.promises.length === 0) {\n                //if we have no promises then dont do the delay or duration stuff\n                return;\n            }\n\n            tracker.delayJustFinished = false;\n            if (options.delay) {\n                tracker.delayPromise = $timeout(function(){\n                    tracker.delayPromise = null;\n                    tracker.delayJustFinished = true;\n                },parseInt(options.delay,10));\n            }\n            if (options.minDuration) {\n                tracker.durationPromise = $timeout(function(){\n                    tracker.durationPromise = null;\n                },parseInt(options.minDuration,10) + (options.delay ? parseInt(options.delay,10) : 0));\n            }            \n        };\n\n        tracker.isPromise = function(promiseThing){\n            var then = promiseThing && (promiseThing.then || promiseThing.$then ||\n                (promiseThing.$promise && promiseThing.$promise.then));\n\n            return typeof then !== 'undefined';            \n        };\n\n        tracker.callThen = function(promiseThing,success,error){\n            var promise;\n            if (promiseThing.then || promiseThing.$then){\n                promise = promiseThing;\n            } else if (promiseThing.$promise){\n                promise = promiseThing.$promise;\n            } else if (promiseThing.denodeify){\n                promise = $q.when(promiseThing);\n            }\n                       \n            var then = (promise.then || promise.$then);\n\n            then.call(promise,success,error);\n        };\n\n        var addPromiseLikeThing = function(promise){\n\n            if (!tracker.isPromise(promise)) {\n                throw new Error('cgBusy expects a promise (or something that has a .promise or .$promise');\n            }\n\n            if (tracker.promises.indexOf(promise) !== -1){\n                return;\n            }\n            tracker.promises.push(promise);\n\n            tracker.callThen(promise, function(){\n                promise.$cgBusyFulfilled = true;\n                if (tracker.promises.indexOf(promise) === -1) {\n                    return;\n                }\n                tracker.promises.splice(tracker.promises.indexOf(promise),1);\n            },function(){\n                promise.$cgBusyFulfilled = true;\n                if (tracker.promises.indexOf(promise) === -1) {\n                    return;\n                }\n                tracker.promises.splice(tracker.promises.indexOf(promise),1);\n            });\n        };\n\n        tracker.active = function(){\n            if (tracker.delayPromise){\n                return false;\n            }\n\n            if (!tracker.delayJustFinished){\n                if (tracker.durationPromise){\n                    return true;\n                }\n                return tracker.promises.length > 0;\n            } else {\n                //if both delay and min duration are set, \n                //we don't want to initiate the min duration if the \n                //promise finished before the delay was complete\n                tracker.delayJustFinished = false;\n                if (tracker.promises.length === 0) {\n                    tracker.durationPromise = null;\n                }\n                return tracker.promises.length > 0;\n            }\n        };\n\n        return tracker;\n\n    };\n}]);\n\nangular.module('cgBusy').value('cgBusyDefaults',{});\n\nangular.module('cgBusy').directive('cgBusy',['$compile','$templateCache','cgBusyDefaults','$http','_cgBusyTrackerFactory',\n    function($compile,$templateCache,cgBusyDefaults,$http,_cgBusyTrackerFactory){\n        return {\n            restrict: 'A',\n            link: function(scope, element, attrs, fn) {\n\n                //Apply position:relative to parent element if necessary\n                var position = element.css('position');\n                if (position === 'static' || position === '' || typeof position === 'undefined'){\n                    element.css('position','relative');\n                }\n\n                var templateElement;\n                var backdropElement;\n                var currentTemplate;\n                var templateScope;\n                var backdrop;\n                var tracker = _cgBusyTrackerFactory();\n\n                var defaults = {\n                    templateUrl: 'angular-busy.html',\n                    delay:0,\n                    minDuration:0,\n                    backdrop: true,\n                    message:'Please Wait...',\n                    wrapperClass: 'cg-busy cg-busy-animation'\n                };\n\n                angular.extend(defaults,cgBusyDefaults);\n\n                scope.$watchCollection(attrs.cgBusy,function(options){\n\n                    if (!options) {\n                        options = {promise:null};\n                    }\n\n                    if (angular.isString(options)) {\n                        throw new Error('Invalid value for cg-busy. cgBusy no longer accepts string ids to represent promises/trackers.');\n                    }\n\n                    //is it an array (of promises) or one promise\n                    if (angular.isArray(options) || tracker.isPromise(options)) {\n                        options = {promise:options};\n                    }\n\n                    options = angular.extend(angular.copy(defaults),options);\n\n                    if (!options.templateUrl){\n                        options.templateUrl = defaults.templateUrl;\n                    }\n\n                    if (!angular.isArray(options.promise)){\n                        options.promise = [options.promise];\n                    }\n\n                    // options.promise = angular.isArray(options.promise) ? options.promise : [options.promise];\n                    // options.message = options.message ? options.message : 'Please Wait...';\n                    // options.template = options.template ? options.template : cgBusyTemplateName;\n                    // options.minDuration = options.minDuration ? options.minDuration : 0;\n                    // options.delay = options.delay ? options.delay : 0;\n\n                    if (!templateScope) {\n                        templateScope = scope.$new();\n                    }\n\n                    templateScope.$message = options.message;\n\n                    if (!angular.equals(tracker.promises,options.promise)) {\n                        tracker.reset({\n                            promises:options.promise,\n                            delay:options.delay,\n                            minDuration: options.minDuration\n                        });\n                    }\n\n                    templateScope.$cgBusyIsActive = function() {\n                        return tracker.active();\n                    };\n\n\n                    if (!templateElement || currentTemplate !== options.templateUrl || backdrop !== options.backdrop) {\n\n                        if (templateElement) {\n                            templateElement.remove();\n                        }\n                        if (backdropElement){\n                            backdropElement.remove();\n                        }\n\n                        currentTemplate = options.templateUrl;\n                        backdrop = options.backdrop;\n\n                        $http.get(currentTemplate,{cache: $templateCache}).then(function(indicatorTemplate){\n\n                            options.backdrop = typeof options.backdrop === 'undefined' ? true : options.backdrop;\n\n                            if (options.backdrop){\n                                var backdrop = '<div class=\"cg-busy cg-busy-backdrop cg-busy-backdrop-animation ng-hide\" ng-show=\"$cgBusyIsActive()\"></div>';\n                                backdropElement = $compile(backdrop)(templateScope);\n                                element.append(backdropElement);\n                            }\n\n                            var template = '<div class=\"'+options.wrapperClass+' ng-hide\" ng-show=\"$cgBusyIsActive()\">' + indicatorTemplate.data + '</div>';\n                            templateElement = $compile(template)(templateScope);\n\n                            angular.element(templateElement.children()[0])\n                                .css('position','absolute')\n                                .css('top',0)\n                                .css('left',0)\n                                .css('right',0)\n                                .css('bottom',0);\n                            element.append(templateElement);\n\n                        }, function(data){\n                            throw new Error('Template specified for cgBusy ('+options.templateUrl+') could not be loaded. ' + data);\n                        });\n                    }\n\n                },true);\n            }\n        };\n    }\n]);\n\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.5458984375,
          "content": "{\n  \"name\": \"angular-busy\",\n  \"version\": \"4.1.4\",\n  \"main\": [\n    \"dist/angular-busy.js\",\n    \"dist/angular-busy.css\"\n  ],\n  \"dependencies\": {\n    \"angular\": \">=1.3\",\n    \"angular-animate\": \">=1.3\"\n  },\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"components\",\n    \"test\",\n    \"temp\",\n    \"demo\",\n    \"lib\",\n    \"./angular-busy.css\",\n    \"./angular-busy.html\",\n    \"./angular-busy.js\",\n    \"Gruntfile.js\",\n    \"package.json\",\n    \"README.md\"\n  ],\n  \"devDependencies\": {\n    \"angular-mocks\": \"~1.3\",\n    \"jquery\": \"~2.1.0\"\n  }\n}\n"
        },
        {
          "name": "bower_components",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.0517578125,
          "content": "require('./angular-busy');\nmodule.exports = 'cgBusy';"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.6640625,
          "content": "{\n  \"name\": \"@cgross/angular-busy\",\n  \"main\": \"dist/index.js\",\n  \"version\": \"4.1.4\",\n  \"description\": \"\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/cgross/angular-busy.git\"\n  },\n  \"devDependencies\": {\n    \"grunt\": \"~0.4.1\",\n    \"grunt-contrib-connect\": \"~0.7.1\",\n    \"grunt-contrib-watch\": \"~0.6.1\",\n    \"grunt-contrib-jshint\": \"~0.10.0\",\n    \"grunt-contrib-jasmine\": \"~0.6.3\",\n    \"grunt-angular-templates\": \"~0.5.4\",\n    \"grunt-contrib-concat\": \"~0.4.0\",\n    \"grunt-contrib-copy\": \"~0.5.0\",\n    \"grunt-contrib-uglify\": \"~0.4.0\",\n    \"grunt-contrib-cssmin\": \"~0.9.0\",\n    \"load-grunt-tasks\": \"~0.4.0\"\n  },\n  \"scripts\": {\n    \"test\": \"grunt test -v\"\n  }\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}