{
  "metadata": {
    "timestamp": 1736711712585,
    "page": 437,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ffii/ffii.github.io",
      "stars": 1014,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.0361328125,
          "content": "# ffii.github.io\nFFII Developer Site\n"
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 17.318359375,
          "content": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\">\n    <title>FFII.Github.io by ffii</title>\n    <link rel=\"stylesheet\" href=\"stylesheets/styles.css\">\n    <link rel=\"stylesheet\" href=\"stylesheets/github-dark.css\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"></script>\n    <script src=\"javascripts/main.js\"></script>\n    <!--[if lt IE 9]>\n      <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\n    <![endif]-->\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">\n\n  </head>\n  <body>\n\n      <header>\n        <h1>FFII.Github.io</h1>\n        <p>FFII Developer Site</p>\n      </header>\n\n      <div id=\"banner\">\n        <span id=\"logo\"></span>\n\n        <a href=\"https://github.com/ffii\" class=\"button fork\"><strong>View On GitHub</strong></a>\n      </div><!-- end banner -->\n\n    <div class=\"wrapper\">\n      <nav>\n        <ul></ul>\n      </nav>\n      <section>\n        <h1>\n<a id=\"ffii-software-projects\" class=\"anchor\" href=\"#ffii-software-projects\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>FFII Software Projects</h1>\n\n<ul>\n<li><a href=\"http://groff.ffii.org\">Groff Typesetting</a></li>\n<li><a href=\"http://parltrack.euwiki.org\">Parliament Data Information System</a></li>\n<li><a href=\"http://lists.ffii.org/mailman/listinfo/cjk\">CJK Internationalisation of Text Processing</a></li>\n<li><a href=\"https://tasks.ffii.org/projects/cryptostick\">Crypto-Stick for Encrypted Key Communication</a></li>\n<li><a href=\"https://lists.ffii.org/mailman/listinfo/tio\">TIO Open Cloud Infrastructure</a></li>\n<li><a href=\"http://gauss.ffii.org\">GAUSS Patent Information System (scheduled maintenance until March 5, 2015)</a></li>\n<li><a href=\"https://lists.ffii.org/mailman/listinfo/mlhtapp-help\">Multilingual Hypertext</a></li>\n</ul>\n\n<h1>\n<a id=\"ideas\" class=\"anchor\" href=\"#ideas\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Ideas</h1>\n\n<p>Below are projects, where we are looking for contributions of students. There are some ideas for developments, but we love to get your own ideas as well. If you have a project that is in line with our mission of free information infrastructures, please feel free to propose one. You can make a pull request and add your idea to this list at <a href=\"https://github.com/ffii/ffii.github.io\">https://github.com/ffii/ffii.github.io</a></p>\n\n<h2>\n<a id=\"groff-gnu-troff-typesetting\" class=\"anchor\" href=\"#groff-gnu-troff-typesetting\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Groff (GNU troff) Typesetting</h2>\n\n<p>Groff is a typesetting system that reads plain text mixed with formatting commands and produces formatted output. Output may be PostScript or PDF, html, or ASCII/UTF8 for display at the terminal. Formatting commands may be either low-level typesetting requests (“primitives”) or macros from a supplied set. Users may also write their own macros. All three may be combined. Present on most Unix systems owing to its long association with Unix manuals (manpages), groff is capable of producing typographically sophisticated documents while consuming only minimal system resources. </p>\n\n<ul>\n<li>License: GNU General Public License.</li>\n<li>Mentors: User issues lead: Ted Harding, Technical issues lead: Werner Lemberg</li>\n<li>Code: <a href=\"https://savannah.gnu.org/git/?group=groff\">https://savannah.gnu.org/git/?group=groff</a>\n</li>\n<li>Website: <a href=\"http://groff.ffii.org\">http://groff.ffii.org</a>\n</li>\n<li>Mailing List: <a href=\"http://lists.gnu.org/mailman/listinfo/groff/\">http://lists.gnu.org/mailman/listinfo/groff/</a>\n</li>\n<li>Issue Tracker: <a href=\"https://savannah.gnu.org/projects/groff/\">https://savannah.gnu.org/projects/groff/</a>\n</li>\n</ul>\n\n<h3>\n<a id=\"project-1\" class=\"anchor\" href=\"#project-1\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 1</h3>\n\n<p>Task: Let document define kern pairs, including between characters in different fonts<br>\nDetails: Groff should allow a document author to define new kern pairs, including ones between characters from different fonts. This functionality is available in Heirloom troff's .kernpair request.  </p>\n\n<h3>\n<a id=\"project-2\" class=\"anchor\" href=\"#project-2\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 2</h3>\n\n<p>Task: Provide a way to redefine an existing symbol in a specific font<br>\nDetails: When searching for a symbol, groff first checks whether the symbol has been defined with the .char request. If not, it checks the current font. Only if it is not in the current font does groff check other user-defined symbols. Thus, while .char can override an existing symbol across all fonts, there is no way to override an existing symbol only in a specific font, because all other symbol rules are of lower precedence than checking the current font. The mailing list thread beginning with <a href=\"http://lists.gnu.org/archive/html/groff/2015-02/msg00029.html\">http://lists.gnu.org/archive/html/groff/2015-02/msg00029.html</a> contains examples of situations where this lack of functionality makes performing certain tasks ponderous.  </p>\n\n<h3>\n<a id=\"project-3\" class=\"anchor\" href=\"#project-3\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 3</h3>\n\n<p>Task: Improve Unicode support  </p>\n\n<h3>\n<a id=\"project-4\" class=\"anchor\" href=\"#project-4\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 4</h3>\n\n<p>Task: Implement shrinkable space<br>\nDetails: Perhaps the third entry in the list of the most important improvements to GNU troff: shrinkable space. I guess that this has to be implemented while adding support for TeX-like paragraph formatting  </p>\n\n<h3>\n<a id=\"project-5\" class=\"anchor\" href=\"#project-5\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 5</h3>\n\n<p>Task: Modernize Font Support<br>\nDetails: Update to today's font world. What groff currently supports natively (PostScript Type 1) is out of date since 15 years. Heirloom troff has support for this. <a href=\"http://heirloom.sourceforge.net/doctools.html\">http://heirloom.sourceforge.net/doctools.html</a>   </p>\n\n<h2>\n<a id=\"parliament-data-information-systems\" class=\"anchor\" href=\"#parliament-data-information-systems\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Parliament Data Information Systems</h2>\n\n<p>Parltrack is a European initiative to improve the transparency of legislative processes. It combines information on dossiers, representatives, vote results and committee agendas into a unique database and allows the tracking of dossiers using email and RSS. Most of the data presented is also available for further processing in JSON format. Using Parltrack it's easy to see at a glance which dossiers are being handled by committees and MEPs.</p>\n\n<ul>\n<li>License: Affero GPL v3+</li>\n<li>Mentors: Andre Rebentisch</li>\n<li>Code: <a href=\"https://github.com/pudo/parltrack/\">https://github.com/pudo/parltrack/</a>\n</li>\n<li>Website: <a href=\"http://parltrack.euwiki.org\">http://parltrack.euwiki.org</a>\n</li>\n<li>Mailing List: <a href=\"https://lists.ffii.org/mailman/listinfo/mepdb-parl\">https://lists.ffii.org/mailman/listinfo/mepdb-parl</a>\n</li>\n</ul>\n\n<h3>\n<a id=\"project-1-1\" class=\"anchor\" href=\"#project-1-1\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 1</h3>\n\n<p>Task: Implement Open Data Visualizations of Parliament Decisions<br>\nTechnologies: JSON, HTML, Shell Script, Linux, API, Maps, Google Map, OpenStreetMap</p>\n\n<h3>\n<a id=\"project-2-1\" class=\"anchor\" href=\"#project-2-1\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 2</h3>\n\n<p>Task: Automate regular Data Dumps in an Exchangeable Format<br>\nTechnologies: JSON, Shell Script, Python, Django, Database, NoSQL, SQL</p>\n\n<h2>\n<a id=\"cjk-internationalisation-of-text-processing\" class=\"anchor\" href=\"#cjk-internationalisation-of-text-processing\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>CJK Internationalisation of Text Processing</h2>\n\n<p>CJK stands for \"Chinese, Japanese, Korean\". The goal of the FFII project for Internationalisation of Text Processing is to embed Asian text into texts document using the Latin alphabet. There is also CJK version version available as a LaTeX 2e macro package release which enables the use of CJK scripts (Chinese/Japanese/Korean) in various encodings, written by Werner Lemberg. With Mule (multilingual Emacs) you can write texts in multiple languages. This editor is especially designed to handle the various encodings and character sets of Asian scripts such as Big 5 and GB for Chinese, JIS for Japanese, etc. Even more, you can use multiple CJK character sets simultaneously which enables e.g. Chinese users to write simplified (jiˇantˇız<code>ı 简体字) and traditional Chinese characters (f ́antˇız</code>ı 繁體字) at the same time. An article about the CJK package can be found in <a href=\"http://tug.org/TUGboat/Articles/tb18-3/cjkintro600.pdf\">TUGBoat</a>.</p>\n\n<ul>\n<li>License: GNU General Public License.</li>\n<li>Mentor: Hartmut Pilch</li>\n<li>Code: <a href=\"http://cjk.ffii.org/cjk-4.8.3.tar.gz\">http://cjk.ffii.org/cjk-4.8.3.tar.gz</a>\n</li>\n<li>Website: <a href=\"http://cjk.ffii.org\">http://cjk.ffii.org</a>\n</li>\n<li>Mailing List: <a href=\"http://lists.ffii.org/mailman/listinfo/cjk\">http://lists.ffii.org/mailman/listinfo/cjk</a>\n</li>\n</ul>\n\n<h3>\n<a id=\"project-1-2\" class=\"anchor\" href=\"#project-1-2\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 1</h3>\n\n<p>Task: Implement new commands for typical use. See the example file `CJKfntef.tex'<br>\nTechnologies: Command Line, Internationalization, UTF8 Standardization, Linux, Latex</p>\n\n<h3>\n<a id=\"project-2-2\" class=\"anchor\" href=\"#project-2-2\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 2</h3>\n\n<p>Task: Implement support of Emacs version above 23<br>\nTechnologies: Command Line, Internationalization, UTF8 Standardization, Linux, Latex</p>\n\n<h3>\n<a id=\"project-3-1\" class=\"anchor\" href=\"#project-3-1\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 3</h3>\n\n<p>Task: Implement support for Khmer and Vietnamese for UTF-8 encoding, making emacs<br>\nTechnologies: Command Line, Internationalization, UTF8 Standardization, Linux, Latex</p>\n\n<h2>\n<a id=\"crypto-stick-for-encrypted-key-communication\" class=\"anchor\" href=\"#crypto-stick-for-encrypted-key-communication\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Crypto-Stick for Encrypted Key Communication</h2>\n\n<p>The Crypto Stick is a USB stick in a small form factor containing an integrated OpenPGP smart card to allow easy and high-secure encryption e.g. of e-mail or for authentication in network environments. As opposed to ordinary software solutions, private keys are always inside the Crypto Stick so that their exposure is impossible. All cryptographic operations (precisely: decryption and signature because of public key cryptography) are executed on the PIN-protected Crypto Stick. In case the Crypto Stick was stolen, got lost, or is used on a virus-contaminated computer (e.g. Trojan horse) no attacker is able to access the private keys so that all encrypted data stays secure. The Crypto Stick is developed as a non-profit open source project and ensures a very high level of security due to verifiability and an attractive price. The open interface of the used OpenPGP smart card allows optimal compatibility with various software applications (e.g. GnuPG, Mozilla Thunderbird + Enigmail, OpenSSH, Linux PAM, OpenVPN, Mozilla Firefox).</p>\n\n<ul>\n<li>License: Different Open Source Licenses</li>\n<li>Mentor: Jan Suhr</li>\n<li>Project Site: <a href=\"https://tasks.ffii.org/projects/cryptostick\">https://tasks.ffii.org/projects/cryptostick</a>\n</li>\n<li>Code: <a href=\"https://www.assembla.com/spaces/cryptostick\">https://www.assembla.com/spaces/cryptostick</a>\n</li>\n<li>Mailing List: <a href=\"https://lists.ffii.org/mailman/listinfo/crypto\">https://lists.ffii.org/mailman/listinfo/crypto</a>\n</li>\n</ul>\n\n<h3>\n<a id=\"project-1-3\" class=\"anchor\" href=\"#project-1-3\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 1</h3>\n\n<p>Task: One Time Password Optimization<br>\nDetails: The current One Time Password (OTP) implementation doesn't encrypt the secrets in the Crypto Stick. (Earlier it was planned to trigger the OTP with a dedicated button only). Now the firmware should be improved so that the secrets are encrypted with the embedded smart card. In addition, mechanisms to prevent the creation of large amounts of tokens should be prevented.The challenge-responds version of OTP called OCRA should be implemented.<br>\nTo do:</p>\n\n<ul>\n<li>Integrate the smart card to encrypt and decrypt the OTP secrets </li>\n<li>Add throttling mechanisms</li>\n<li>Add OCRA feature to OTP</li>\n<li>Update the client tool to support OCRA, potentially create a FireFox addon for this purpose</li>\n<li>Test</li>\n</ul>\n\n<h3>\n<a id=\"project-2-3\" class=\"anchor\" href=\"#project-2-3\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 2</h3>\n\n<p>Task: Support for Google's U2F (FIDO Alliance) - Implement support for the FIDO Alliance's U2F token<br>\nDetails:</p>\n\n<ul>\n<li>Get familiar with the U2F specification </li>\n<li>Draft an approach to integrate U2F to the Crypto Stick </li>\n<li>Implement U2F to the firmware </li>\n<li>Implement U2F support into the Crypto Stick Tool </li>\n<li>Test </li>\n</ul>\n\n<h3>\n<a id=\"project-3-2\" class=\"anchor\" href=\"#project-3-2\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 3</h3>\n\n<p>Task: L4-Based Secure eCash Server<br>\nDetails: OpenCoin is a related open source project to build an anonymous digital cash system. L4 is a microkernel for secure embedded environments. This project is to implement a secure server for OpenCoin based on L4re. The server would perform the following activities: receive a token, verify its integrity, create a new token, sign it by calling a HSM, store the old token in an external DB, send back the new token.<br>\nTo do:\nG* et familiar with the OpenCoin protocol and L4re. </p>\n\n<ul>\n<li>Agree the architecture with mentor </li>\n<li>Implement the external interfaces </li>\n<li>Implement JSON parsing and token structures etc. </li>\n<li>Implement SHA2 hashing and RSA signature validation, preferrable by utilizing existing libraries.</li>\n<li>Port and integrate existing PKCS#11 driver to L4re </li>\n<li>Documentation, testing</li>\n</ul>\n\n<h3>\n<a id=\"project-4-1\" class=\"anchor\" href=\"#project-4-1\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 4</h3>\n\n<p>Task: OpenPGP JavaCard<br>\nDetails: Re-implement the OpenPGP Card specification on a JavaCard device. A project space has already been setup here but this implementation seems to be more mature. </p>\n\n<h3>\n<a id=\"project-5-1\" class=\"anchor\" href=\"#project-5-1\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Project 5</h3>\n\n<p>Task: Secure firmware update<br>\nDetails: The purpose is to prevent (or make it more difficult) flashing of malicious firmware when an attacker has access to the device for a short time. Legitimate firmwares would be signed with a firmware signing key. Crypto Stick would be shipped with the public signing key. User downloads a signed firmware update for their device, and loads it onto the Crypto Stick. Crypto Stick verifies the signature, ensuring that the firmware is authentic. If it is, the firmware updates itself, otherwise it rejects it. The entire logic might be implemented in a separate boot loader either for the current STM32-based Crypto Stick 1.4 or for the new Crypto Stick 2 which is Atmel AT43UC-based.<br>\nTo do:</p>\n\n<ul>\n<li>Get familiar with Crypto Stick's firmware.</li>\n<li>Decide for a bootloader to use</li>\n<li>Get the bootloader running</li>\n<li>Integrate hash- and RSA signature verification functions</li>\n<li>Implement load-firmware function</li>\n<li>If necessary: write client tool to send new firmware to Crypto Stick</li>\n<li>Test </li>\n</ul>\n\n<h1>\n<a id=\"about-ffii\" class=\"anchor\" href=\"#about-ffii\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>About FFII</h1>\n\n<p>The FFII, Foundation for Free Information Infrastructures, is a not-for-profit association active in over fifty countries, dedicated to the development of information goods for the public benefit, based on copyright, free competition, and open standards. More than 1000 members, 3,500 companies and 100,000 supporters have entrusted the FFII to act as their voice in public policy questions concerning exclusion rights in data processing. </p>\n\n<ul>\n<li><a href=\"http://ffii.org\">http://ffii.org</a></li>\n<li><a href=\"http://blog.ffii.org\">http://blog.ffii.org</a></li>\n<li><a href=\"http://tasks.ffii.org\">http://tasks.ffii.org</a></li>\n</ul>\n      </section>\n      <footer>\n        <p><small>Hosted on GitHub Pages &mdash; Theme by <a href=\"https://twitter.com/michigangraham\">mattgraham</a></small></p>\n      </footer>\n    </div>\n    <!--[if !IE]><script>fixScale(document);</script><![endif]-->\n    \n  </body>\n</html>\n"
        },
        {
          "name": "javascripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "params.json",
          "type": "blob",
          "size": 11.564453125,
          "content": "{\n  \"name\": \"FFII.Github.io\",\n  \"tagline\": \"FFII Developer Site\",\n  \"body\": \"# FFII Software Projects\\r\\n* [Groff Typesetting](http://groff.ffii.org)\\r\\n* [Parliament Data Information System](http://parltrack.euwiki.org)\\r\\n* [CJK Internationalisation of Text Processing](http://lists.ffii.org/mailman/listinfo/cjk)\\r\\n* [Crypto-Stick for Encrypted Key Communication](https://tasks.ffii.org/projects/cryptostick)\\r\\n* [TIO Open Cloud Infrastructure](https://lists.ffii.org/mailman/listinfo/tio)\\r\\n* [GAUSS Patent Information System (scheduled maintenance until March 5, 2015)](http://gauss.ffii.org)\\r\\n* [Multilingual Hypertext](https://lists.ffii.org/mailman/listinfo/mlhtapp-help)\\r\\n\\r\\n\\r\\n#Ideas\\r\\nBelow are projects, where we are looking for contributions of students. There are some ideas for developments, but we love to get your own ideas as well. If you have a project that is in line with our mission of free information infrastructures, please feel free to propose one. You can make a pull request and add your idea to this list at https://github.com/ffii/ffii.github.io\\r\\n\\r\\n##  Groff (GNU troff) Typesetting\\r\\nGroff is a typesetting system that reads plain text mixed with formatting commands and produces formatted output. Output may be PostScript or PDF, html, or ASCII/UTF8 for display at the terminal. Formatting commands may be either low-level typesetting requests (“primitives”) or macros from a supplied set. Users may also write their own macros. All three may be combined. Present on most Unix systems owing to its long association with Unix manuals (manpages), groff is capable of producing typographically sophisticated documents while consuming only minimal system resources. \\r\\n* License: GNU General Public License.\\r\\n* Mentors: User issues lead: Ted Harding, Technical issues lead: Werner Lemberg\\r\\n* Code: https://savannah.gnu.org/git/?group=groff\\r\\n* Website: http://groff.ffii.org\\r\\n* Mailing List: http://lists.gnu.org/mailman/listinfo/groff/\\r\\n* Issue Tracker: https://savannah.gnu.org/projects/groff/\\r\\n\\r\\n### Project 1\\r\\nTask: Let document define kern pairs, including between characters in different fonts  \\r\\nDetails: Groff should allow a document author to define new kern pairs, including ones between characters from different fonts. This functionality is available in Heirloom troff's .kernpair request.  \\r\\n\\r\\n### Project 2\\r\\nTask: Provide a way to redefine an existing symbol in a specific font  \\r\\nDetails: When searching for a symbol, groff first checks whether the symbol has been defined with the .char request. If not, it checks the current font. Only if it is not in the current font does groff check other user-defined symbols. Thus, while .char can override an existing symbol across all fonts, there is no way to override an existing symbol only in a specific font, because all other symbol rules are of lower precedence than checking the current font. The mailing list thread beginning with http://lists.gnu.org/archive/html/groff/2015-02/msg00029.html contains examples of situations where this lack of functionality makes performing certain tasks ponderous.  \\r\\n\\r\\n### Project 3\\r\\nTask: Improve Unicode support  \\r\\n\\r\\n### Project 4\\r\\nTask: Implement shrinkable space  \\r\\nDetails: Perhaps the third entry in the list of the most important improvements to GNU troff: shrinkable space. I guess that this has to be implemented while adding support for TeX-like paragraph formatting  \\r\\n\\r\\n### Project 5\\r\\nTask: Modernize Font Support  \\r\\nDetails: Update to today's font world. What groff currently supports natively (PostScript Type 1) is out of date since 15 years. Heirloom troff has support for this. http://heirloom.sourceforge.net/doctools.html   \\r\\n\\r\\n## Parliament Data Information Systems\\r\\nParltrack is a European initiative to improve the transparency of legislative processes. It combines information on dossiers, representatives, vote results and committee agendas into a unique database and allows the tracking of dossiers using email and RSS. Most of the data presented is also available for further processing in JSON format. Using Parltrack it's easy to see at a glance which dossiers are being handled by committees and MEPs.\\r\\n* License: Affero GPL v3+\\r\\n* Mentors: Andre Rebentisch\\r\\n* Code: https://github.com/pudo/parltrack/\\r\\n* Website: http://parltrack.euwiki.org\\r\\n* Mailing List: https://lists.ffii.org/mailman/listinfo/mepdb-parl\\r\\n\\r\\n### Project 1\\r\\nTask: Implement Open Data Visualizations of Parliament Decisions  \\r\\nTechnologies: JSON, HTML, Shell Script, Linux, API, Maps, Google Map, OpenStreetMap\\r\\n\\r\\n### Project 2\\r\\nTask: Automate regular Data Dumps in an Exchangeable Format  \\r\\nTechnologies: JSON, Shell Script, Python, Django, Database, NoSQL, SQL\\r\\n\\r\\n## CJK Internationalisation of Text Processing\\r\\nCJK stands for \\\"Chinese, Japanese, Korean\\\". The goal of the FFII project for Internationalisation of Text Processing is to embed Asian text into texts document using the Latin alphabet. There is also CJK version version available as a LaTeX 2e macro package release which enables the use of CJK scripts (Chinese/Japanese/Korean) in various encodings, written by Werner Lemberg. With Mule (multilingual Emacs) you can write texts in multiple languages. This editor is especially designed to handle the various encodings and character sets of Asian scripts such as Big 5 and GB for Chinese, JIS for Japanese, etc. Even more, you can use multiple CJK character sets simultaneously which enables e.g. Chinese users to write simplified (jiˇantˇız`ı 简体字) and traditional Chinese characters (f ́antˇız`ı 繁體字) at the same time. An article about the CJK package can be found in [TUGBoat](http://tug.org/TUGboat/Articles/tb18-3/cjkintro600.pdf).\\r\\n* License: GNU General Public License.\\r\\n* Mentor: Hartmut Pilch\\r\\n* Code: http://cjk.ffii.org/cjk-4.8.3.tar.gz\\r\\n* Website: http://cjk.ffii.org\\r\\n* Mailing List: http://lists.ffii.org/mailman/listinfo/cjk\\r\\n\\r\\n### Project 1\\r\\nTask: Implement new commands for typical use. See the example file `CJKfntef.tex'  \\r\\nTechnologies: Command Line, Internationalization, UTF8 Standardization, Linux, Latex\\r\\n\\r\\n### Project 2\\r\\nTask: Implement support of Emacs version above 23  \\r\\nTechnologies: Command Line, Internationalization, UTF8 Standardization, Linux, Latex\\r\\n\\r\\n### Project 3\\r\\nTask: Implement support for Khmer and Vietnamese for UTF-8 encoding, making emacs  \\r\\nTechnologies: Command Line, Internationalization, UTF8 Standardization, Linux, Latex\\r\\n\\r\\n## Crypto-Stick for Encrypted Key Communication\\r\\nThe Crypto Stick is a USB stick in a small form factor containing an integrated OpenPGP smart card to allow easy and high-secure encryption e.g. of e-mail or for authentication in network environments. As opposed to ordinary software solutions, private keys are always inside the Crypto Stick so that their exposure is impossible. All cryptographic operations (precisely: decryption and signature because of public key cryptography) are executed on the PIN-protected Crypto Stick. In case the Crypto Stick was stolen, got lost, or is used on a virus-contaminated computer (e.g. Trojan horse) no attacker is able to access the private keys so that all encrypted data stays secure. The Crypto Stick is developed as a non-profit open source project and ensures a very high level of security due to verifiability and an attractive price. The open interface of the used OpenPGP smart card allows optimal compatibility with various software applications (e.g. GnuPG, Mozilla Thunderbird + Enigmail, OpenSSH, Linux PAM, OpenVPN, Mozilla Firefox).\\r\\n* License: Different Open Source Licenses\\r\\n* Mentor: Jan Suhr\\r\\n* Project Site: https://tasks.ffii.org/projects/cryptostick\\r\\n* Code: https://www.assembla.com/spaces/cryptostick\\r\\n* Mailing List: https://lists.ffii.org/mailman/listinfo/crypto\\r\\n\\r\\n### Project 1\\r\\nTask: One Time Password Optimization  \\r\\nDetails: The current One Time Password (OTP) implementation doesn't encrypt the secrets in the Crypto Stick. (Earlier it was planned to trigger the OTP with a dedicated button only). Now the firmware should be improved so that the secrets are encrypted with the embedded smart card. In addition, mechanisms to prevent the creation of large amounts of tokens should be prevented.The challenge-responds version of OTP called OCRA should be implemented.  \\r\\nTo do:\\r\\n* Integrate the smart card to encrypt and decrypt the OTP secrets \\r\\n* Add throttling mechanisms\\r\\n* Add OCRA feature to OTP\\r\\n* Update the client tool to support OCRA, potentially create a FireFox addon for this purpose\\r\\n* Test\\r\\n\\r\\n### Project 2\\r\\nTask: Support for Google's U2F (FIDO Alliance) - Implement support for the FIDO Alliance's U2F token  \\r\\nDetails:\\r\\n* Get familiar with the U2F specification \\r\\n* Draft an approach to integrate U2F to the Crypto Stick \\r\\n* Implement U2F to the firmware \\r\\n* Implement U2F support into the Crypto Stick Tool \\r\\n* Test \\r\\n\\r\\n### Project 3\\r\\nTask: L4-Based Secure eCash Server  \\r\\nDetails: OpenCoin is a related open source project to build an anonymous digital cash system. L4 is a microkernel for secure embedded environments. This project is to implement a secure server for OpenCoin based on L4re. The server would perform the following activities: receive a token, verify its integrity, create a new token, sign it by calling a HSM, store the old token in an external DB, send back the new token.  \\r\\nTo do:\\r\\nG* et familiar with the OpenCoin protocol and L4re. \\r\\n* Agree the architecture with mentor \\r\\n* Implement the external interfaces \\r\\n* Implement JSON parsing and token structures etc. \\r\\n* Implement SHA2 hashing and RSA signature validation, preferrable by utilizing existing libraries.\\r\\n* Port and integrate existing PKCS#11 driver to L4re \\r\\n* Documentation, testing\\r\\n\\r\\n### Project 4\\r\\nTask: OpenPGP JavaCard  \\r\\nDetails: Re-implement the OpenPGP Card specification on a JavaCard device. A project space has already been setup here but this implementation seems to be more mature. \\r\\n\\r\\n### Project 5\\r\\nTask: Secure firmware update  \\r\\nDetails: The purpose is to prevent (or make it more difficult) flashing of malicious firmware when an attacker has access to the device for a short time. Legitimate firmwares would be signed with a firmware signing key. Crypto Stick would be shipped with the public signing key. User downloads a signed firmware update for their device, and loads it onto the Crypto Stick. Crypto Stick verifies the signature, ensuring that the firmware is authentic. If it is, the firmware updates itself, otherwise it rejects it. The entire logic might be implemented in a separate boot loader either for the current STM32-based Crypto Stick 1.4 or for the new Crypto Stick 2 which is Atmel AT43UC-based.  \\r\\nTo do:\\r\\n* Get familiar with Crypto Stick's firmware.\\r\\n* Decide for a bootloader to use\\r\\n* Get the bootloader running\\r\\n* Integrate hash- and RSA signature verification functions\\r\\n* Implement load-firmware function\\r\\n* If necessary: write client tool to send new firmware to Crypto Stick\\r\\n* Test \\r\\n\\r\\n# About FFII\\r\\nThe FFII, Foundation for Free Information Infrastructures, is a not-for-profit association active in over fifty countries, dedicated to the development of information goods for the public benefit, based on copyright, free competition, and open standards. More than 1000 members, 3,500 companies and 100,000 supporters have entrusted the FFII to act as their voice in public policy questions concerning exclusion rights in data processing. \\r\\n* http://ffii.org\\r\\n* http://blog.ffii.org\\r\\n* http://tasks.ffii.org\",\n  \"google\": \"\",\n  \"note\": \"Don't delete this file! It's used internally to help with page regeneration.\"\n}"
        },
        {
          "name": "stylesheets",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}