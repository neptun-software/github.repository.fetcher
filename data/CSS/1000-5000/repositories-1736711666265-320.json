{
  "metadata": {
    "timestamp": 1736711666265,
    "page": 320,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hedyorg/hedy",
      "stars": 1354,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0537109375,
          "content": ".git\n.github\n*.md\n.dockerignore\nDockerfile\nLicense.txt\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3671875,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\n\n# Set default charset\n[*.{ts,js,py}] # Matches multiple files with brace expansion notation\ncharset = utf-8\n\n# 4 space indentation\n[*.py]\nindent_style = space\nindent_size = 4\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.9794921875,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Python template\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nvenv/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ntests/cypress/screenshots/\ntests/.nyc_output/\ntests/coverage/\n\n# Translations -> the .mo files are automatically compiled on deploy\n*.mo\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n.run\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\n.weblate\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n.idea/\n\n# Don't checkin log file (otherwise it'd be overwritten on Heroku on push)\nlogs.txt\n\n#macos things\n.DS_Store\n.jsonbin.*\n\n# Ignore vim swap files\n*.swp\n*.swo\n.local\nnode_modules\n\n# Ignore things that start with underscores (except __init__.py)\n_*\n!__init__.py\n# Ignore pickled versions of YAML files\n*.yaml.pickle\ndev_database.json\n\nbatchhedy/input/*\nbatchhedy/output_*\n#generated grammars\ngrammars-Total/*.lark\n*.tsbuildinfo\n!/content/adventures-transformed/\n!/content/level-defaults-transformed/\n\n#vscode excludes\n.vscode\n\n#exclude all .dst files generated but not deleted\n.dst\n*.mp4\n*.pid\n\n# Prod css doesn't have to be checked in, only leads to merge conflicts\n./static/css/generated.css\n\n# hedy test cache\n.test-cache\n\n.doit.db\n.doit.db.*\ndist/\n\n# hide file_logger.json\nfile_logger.json\n*.tmp\n\n# This file is generated by the flask-commonmark package.\n# We submitted a PR to the package, but it's still wating to be approved\n# Until then, we can include it in .gitignore\n# More info in #4540\nfoo.txt\n\n# Generated schema json files\n*.generated.schema.json\n"
        },
        {
          "name": ".mergify.yml",
          "type": "blob",
          "size": 1.240234375,
          "content": "# Using a Merge queue makes Mergify automatically keep the PR\n# up-to-date with 'main', one PR at a time.\nqueue_rules:\n  - name: default_queue\n    conditions:\n        - \"check-success=build\"\n    merge_method: squash\n    commit_message_template: |-\n      {{ title }} (#{{number}})\n      {{ body }}\n      {# Add co-author information at the end of the squash merge commit message #}\n      {% for co_author in co_authors | unique -%}\n      Co-Authored-By: {{ co_author.name }} <{{ co_author.email }}>\n      {% endfor -%}\n      {# `Co-Authored-By` lines must the be last ones for GitHub to recognize them #}\n\npull_request_rules:\n  - name: Automatic squash merge on approval\n    conditions:\n        - and:\n          - \"#approved-reviews-by>=1\"\n          - \"#changes-requested-reviews-by=0\"\n          - \"check-success=build\"\n          - \"check-success=cypress\"\n    actions:\n      comment:\n        message: Thank you for contributing! Your pull request is now going on the merge train (choo choo! Do not click update from main anymore, and be sure to [allow changes to be pushed to your fork](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork)).\n      queue:\n        name: default_queue\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.181640625,
          "content": "repos:\n  - repo: https://github.com/hhatto/autopep8\n    rev: v2.3.1\n    hooks:\n    -   id: autopep8\n  - repo: https://github.com/pycqa/flake8\n    rev: 7.1.1\n    hooks:\n    -   id: flake8"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 0.041015625,
          "content": "[MASTER]\nextension-pkg-whitelist=pydantic\n"
        },
        {
          "name": "CITATION",
          "type": "blob",
          "size": 0.3984375,
          "content": "# YAML 1.2\n---\nauthors: \n  -\n    family-names: Hermans\n    given-names: Felienne\n    orcid: \"https://orcid.org/0000-0003-0722-0156\"\ncff-version: \"1.1.0\"\ndoi: \"https://dl.acm.org/doi/10.1145/3372782.3406262\"\nmessage: \"If you use this software and write a paper about it, please cite the original Hedy paper that appeared at ICER 2020 (see doi).\"\ntitle: \"Hedy: A Gradual Language for Programming Education\"\n..."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.376953125,
          "content": "FROM python:3.12-slim\nCOPY requirements.txt /tmp/requirements.txt\n\nRUN apt update &&  \\\n    apt install build-essential -y && \\\n    apt install -y curl &&  \\\n    curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - &&  \\\n    apt-get install -y nodejs && \\\n    pip3 install --no-cache-dir -r /tmp/requirements.txt\n\nWORKDIR /app\nCOPY . .\nEXPOSE 8080\nENTRYPOINT [\"python\", \"app.py\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 13.5029296875,
          "content": "                      EUROPEAN UNION PUBLIC LICENCE v. 1.2\n                      EUPL © the European Union 2007, 2016\n\nThis European Union Public Licence (the ‘EUPL’) applies to the Work (as defined\nbelow) which is provided under the terms of this Licence. Any use of the Work,\nother than as authorised under this Licence is prohibited (to the extent such\nuse is covered by a right of the copyright holder of the Work).\n\nThe Work is provided under the terms of this Licence when the Licensor (as\ndefined below) has placed the following notice immediately following the\ncopyright notice for the Work:\n\n        Licensed under the EUPL\n\nor has expressed by any other means his willingness to license under the EUPL.\n\n1. Definitions\n\nIn this Licence, the following terms have the following meaning:\n\n- ‘The Licence’: this Licence.\n\n- ‘The Original Work’: the work or software distributed or communicated by the\n  Licensor under this Licence, available as Source Code and also as Executable\n  Code as the case may be.\n\n- ‘Derivative Works’: the works or software that could be created by the\n  Licensee, based upon the Original Work or modifications thereof. This Licence\n  does not define the extent of modification or dependence on the Original Work\n  required in order to classify a work as a Derivative Work; this extent is\n  determined by copyright law applicable in the country mentioned in Article 15.\n\n- ‘The Work’: the Original Work or its Derivative Works.\n\n- ‘The Source Code’: the human-readable form of the Work which is the most\n  convenient for people to study and modify.\n\n- ‘The Executable Code’: any code which has generally been compiled and which is\n  meant to be interpreted by a computer as a program.\n\n- ‘The Licensor’: the natural or legal person that distributes or communicates\n  the Work under the Licence.\n\n- ‘Contributor(s)’: any natural or legal person who modifies the Work under the\n  Licence, or otherwise contributes to the creation of a Derivative Work.\n\n- ‘The Licensee’ or ‘You’: any natural or legal person who makes any usage of\n  the Work under the terms of the Licence.\n\n- ‘Distribution’ or ‘Communication’: any act of selling, giving, lending,\n  renting, distributing, communicating, transmitting, or otherwise making\n  available, online or offline, copies of the Work or providing access to its\n  essential functionalities at the disposal of any other natural or legal\n  person.\n\n2. Scope of the rights granted by the Licence\n\nThe Licensor hereby grants You a worldwide, royalty-free, non-exclusive,\nsublicensable licence to do the following, for the duration of copyright vested\nin the Original Work:\n\n- use the Work in any circumstance and for all usage,\n- reproduce the Work,\n- modify the Work, and make Derivative Works based upon the Work,\n- communicate to the public, including the right to make available or display\n  the Work or copies thereof to the public and perform publicly, as the case may\n  be, the Work,\n- distribute the Work or copies thereof,\n- lend and rent the Work or copies thereof,\n- sublicense rights in the Work or copies thereof.\n\nThose rights can be exercised on any media, supports and formats, whether now\nknown or later invented, as far as the applicable law permits so.\n\nIn the countries where moral rights apply, the Licensor waives his right to\nexercise his moral right to the extent allowed by law in order to make effective\nthe licence of the economic rights here above listed.\n\nThe Licensor grants to the Licensee royalty-free, non-exclusive usage rights to\nany patents held by the Licensor, to the extent necessary to make use of the\nrights granted on the Work under this Licence.\n\n3. Communication of the Source Code\n\nThe Licensor may provide the Work either in its Source Code form, or as\nExecutable Code. If the Work is provided as Executable Code, the Licensor\nprovides in addition a machine-readable copy of the Source Code of the Work\nalong with each copy of the Work that the Licensor distributes or indicates, in\na notice following the copyright notice attached to the Work, a repository where\nthe Source Code is easily and freely accessible for as long as the Licensor\ncontinues to distribute or communicate the Work.\n\n4. Limitations on copyright\n\nNothing in this Licence is intended to deprive the Licensee of the benefits from\nany exception or limitation to the exclusive rights of the rights owners in the\nWork, of the exhaustion of those rights or of other applicable limitations\nthereto.\n\n5. Obligations of the Licensee\n\nThe grant of the rights mentioned above is subject to some restrictions and\nobligations imposed on the Licensee. Those obligations are the following:\n\nAttribution right: The Licensee shall keep intact all copyright, patent or\ntrademarks notices and all notices that refer to the Licence and to the\ndisclaimer of warranties. The Licensee must include a copy of such notices and a\ncopy of the Licence with every copy of the Work he/she distributes or\ncommunicates. The Licensee must cause any Derivative Work to carry prominent\nnotices stating that the Work has been modified and the date of modification.\n\nCopyleft clause: If the Licensee distributes or communicates copies of the\nOriginal Works or Derivative Works, this Distribution or Communication will be\ndone under the terms of this Licence or of a later version of this Licence\nunless the Original Work is expressly distributed only under this version of the\nLicence — for example by communicating ‘EUPL v. 1.2 only’. The Licensee\n(becoming Licensor) cannot offer or impose any additional terms or conditions on\nthe Work or Derivative Work that alter or restrict the terms of the Licence.\n\nCompatibility clause: If the Licensee Distributes or Communicates Derivative\nWorks or copies thereof based upon both the Work and another work licensed under\na Compatible Licence, this Distribution or Communication can be done under the\nterms of this Compatible Licence. For the sake of this clause, ‘Compatible\nLicence’ refers to the licences listed in the appendix attached to this Licence.\nShould the Licensee's obligations under the Compatible Licence conflict with\nhis/her obligations under this Licence, the obligations of the Compatible\nLicence shall prevail.\n\nProvision of Source Code: When distributing or communicating copies of the Work,\nthe Licensee will provide a machine-readable copy of the Source Code or indicate\na repository where this Source will be easily and freely available for as long\nas the Licensee continues to distribute or communicate the Work.\n\nLegal Protection: This Licence does not grant permission to use the trade names,\ntrademarks, service marks, or names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the copyright notice.\n\n6. Chain of Authorship\n\nThe original Licensor warrants that the copyright in the Original Work granted\nhereunder is owned by him/her or licensed to him/her and that he/she has the\npower and authority to grant the Licence.\n\nEach Contributor warrants that the copyright in the modifications he/she brings\nto the Work are owned by him/her or licensed to him/her and that he/she has the\npower and authority to grant the Licence.\n\nEach time You accept the Licence, the original Licensor and subsequent\nContributors grant You a licence to their contributions to the Work, under the\nterms of this Licence.\n\n7. Disclaimer of Warranty\n\nThe Work is a work in progress, which is continuously improved by numerous\nContributors. It is not a finished work and may therefore contain defects or\n‘bugs’ inherent to this type of development.\n\nFor the above reason, the Work is provided under the Licence on an ‘as is’ basis\nand without warranties of any kind concerning the Work, including without\nlimitation merchantability, fitness for a particular purpose, absence of defects\nor errors, accuracy, non-infringement of intellectual property rights other than\ncopyright as stated in Article 6 of this Licence.\n\nThis disclaimer of warranty is an essential part of the Licence and a condition\nfor the grant of any rights to the Work.\n\n8. Disclaimer of Liability\n\nExcept in the cases of wilful misconduct or damages directly caused to natural\npersons, the Licensor will in no event be liable for any direct or indirect,\nmaterial or moral, damages of any kind, arising out of the Licence or of the use\nof the Work, including without limitation, damages for loss of goodwill, work\nstoppage, computer failure or malfunction, loss of data or any commercial\ndamage, even if the Licensor has been advised of the possibility of such damage.\nHowever, the Licensor will be liable under statutory product liability laws as\nfar such laws apply to the Work.\n\n9. Additional agreements\n\nWhile distributing the Work, You may choose to conclude an additional agreement,\ndefining obligations or services consistent with this Licence. However, if\naccepting obligations, You may act only on your own behalf and on your sole\nresponsibility, not on behalf of the original Licensor or any other Contributor,\nand only if You agree to indemnify, defend, and hold each Contributor harmless\nfor any liability incurred by, or claims asserted against such Contributor by\nthe fact You have accepted any warranty or additional liability.\n\n10. Acceptance of the Licence\n\nThe provisions of this Licence can be accepted by clicking on an icon ‘I agree’\nplaced under the bottom of a window displaying the text of this Licence or by\naffirming consent in any other similar way, in accordance with the rules of\napplicable law. Clicking on that icon indicates your clear and irrevocable\nacceptance of this Licence and all of its terms and conditions.\n\nSimilarly, you irrevocably accept this Licence and all of its terms and\nconditions by exercising any rights granted to You by Article 2 of this Licence,\nsuch as the use of the Work, the creation by You of a Derivative Work or the\nDistribution or Communication by You of the Work or copies thereof.\n\n11. Information to the public\n\nIn case of any Distribution or Communication of the Work by means of electronic\ncommunication by You (for example, by offering to download the Work from a\nremote location) the distribution channel or media (for example, a website) must\nat least provide to the public the information requested by the applicable law\nregarding the Licensor, the Licence and the way it may be accessible, concluded,\nstored and reproduced by the Licensee.\n\n12. Termination of the Licence\n\nThe Licence and the rights granted hereunder will terminate automatically upon\nany breach by the Licensee of the terms of the Licence.\n\nSuch a termination will not terminate the licences of any person who has\nreceived the Work from the Licensee under the Licence, provided such persons\nremain in full compliance with the Licence.\n\n13. Miscellaneous\n\nWithout prejudice of Article 9 above, the Licence represents the complete\nagreement between the Parties as to the Work.\n\nIf any provision of the Licence is invalid or unenforceable under applicable\nlaw, this will not affect the validity or enforceability of the Licence as a\nwhole. Such provision will be construed or reformed so as necessary to make it\nvalid and enforceable.\n\nThe European Commission may publish other linguistic versions or new versions of\nthis Licence or updated versions of the Appendix, so far this is required and\nreasonable, without reducing the scope of the rights granted by the Licence. New\nversions of the Licence will be published with a unique version number.\n\nAll linguistic versions of this Licence, approved by the European Commission,\nhave identical value. Parties can take advantage of the linguistic version of\ntheir choice.\n\n14. Jurisdiction\n\nWithout prejudice to specific agreement between parties,\n\n- any litigation resulting from the interpretation of this License, arising\n  between the European Union institutions, bodies, offices or agencies, as a\n  Licensor, and any Licensee, will be subject to the jurisdiction of the Court\n  of Justice of the European Union, as laid down in article 272 of the Treaty on\n  the Functioning of the European Union,\n\n- any litigation arising between other parties and resulting from the\n  interpretation of this License, will be subject to the exclusive jurisdiction\n  of the competent court where the Licensor resides or conducts its primary\n  business.\n\n15. Applicable Law\n\nWithout prejudice to specific agreement between parties,\n\n- this Licence shall be governed by the law of the European Union Member State\n  where the Licensor has his seat, resides or has his registered office,\n\n- this licence shall be governed by Belgian law if the Licensor has no seat,\n  residence or registered office inside a European Union Member State.\n\nAppendix\n\n‘Compatible Licences’ according to Article 5 EUPL are:\n\n- GNU General Public License (GPL) v. 2, v. 3\n- GNU Affero General Public License (AGPL) v. 3\n- Open Software License (OSL) v. 2.1, v. 3.0\n- Eclipse Public License (EPL) v. 1.0\n- CeCILL v. 2.0, v. 2.1\n- Mozilla Public Licence (MPL) v. 2\n- GNU Lesser General Public Licence (LGPL) v. 2.1, v. 3\n- Creative Commons Attribution-ShareAlike v. 3.0 Unported (CC BY-SA 3.0) for\n  works other than software\n- European Union Public Licence (EUPL) v. 1.1, v. 1.2\n- Québec Free and Open-Source Licence — Reciprocity (LiLiQ-R) or Strong\n  Reciprocity (LiLiQ-R+).\n\nThe European Commission may update this Appendix to later versions of the above\nlicences without producing a new version of the EUPL, as long as they provide\nthe rights granted in Article 2 of this Licence and protect the covered Source\nCode from exclusive appropriation.\n\nAll other changes or additions to this Appendix require the production of a new\nEUPL version.\n"
        },
        {
          "name": "OFFLINE_README.txt",
          "type": "blob",
          "size": 1.78515625,
          "content": "    _    _          _\n   | |  | |        | |\n   | |__| | ___  __| |_   _\n   |  __  |/ _ \\/ _` | | | |\n   | |  | |  __/ (_| | |_| |\n   |_|  |_|\\___|\\__,_|\\__, |\n                       __/ |\n      o f f l i n e   |___/\n\nWelcome to offline Hedy! You can use offline Hedy to run Hedy on your own\ncomputer, and it can be used by anyone on the same network.\n\n\nFor you\n=======\n\nWhen you first start up offline Hedy on a Windows computer, two things can\nhappen:\n\n- Windows Firewall will ask you whether or not to allow network connections.\n  You should click \"Allow\".\n- Windows Defender may say that Hedy is a dangerous program and ask you whether\n  or not it should be run. You should click \"More Info\" and then \"Run Anyway\".\n\nYou can create a teacher account for yourself by visiting the following link\nand then clicking \"Create Account\".\n\n    http://localhost/invite/newteacher\n\nYou can also use one of the built-in accounts, which is named \"teacher1\"\nwith password \"123456\".\n\n\nFor students\n============\n\nWhen Hedy starts up, it will print a web address made from numbers. Your students\nshould type this address into the address bar of their browser.\n\nThe address will look something like this, but it will be different on every\ncomputer. It can also change every time your computer starts up:\n\n    http://192.168.31.13/\n\n\nUpgrading to a newer version\n============================\n\nAll your data and your student's data is stored in the file `database.json`\nthat you will see in the program's directory. When you download a newer version\nof Offline Hedy it will come with its own empty database. To keep all programs\naround, you can copy over the `database.json` file from the old version to the\nnew version of Hedy.\n\nTo keep it simple, you can also start fresh and use the newer version only for a\ndifferent class or different year."
        },
        {
          "name": "Procfile",
          "type": "blob",
          "size": 0.0322265625,
          "content": "web: gunicorn 'app:create_app()'\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.462890625,
          "content": "[![](https://zenodo.org/badge/226863521.svg)](https://zenodo.org/doi/10.5281/zenodo.10084456)\n![](https://img.shields.io/github/commit-activity/m/hedyorg/hedy)\n![](https://img.shields.io/github/last-commit/hedyorg/hedy)\n![](https://img.shields.io/github/stars/hedyorg/hedy)\n![](https://img.shields.io/github/contributors/hedyorg/hedy)\n![](https://img.shields.io/github/issues/hedyorg/hedy)\n\n![](static/images/Hedy-logo-96x96-round.png)\n<div id=\"top\"></div>\n\n# Hedy\n\nHedy is a gradual programming language aimed at teaching programming and teaching Python. It teaches using different levels. The first level just offers printing text and asking for input. This level is meant to introduce learners to the idea of a programming language, and the environment. From there, Hedy builds up to include more complex syntax and additional concepts.\n\n[Bug Report](https://github.com/hedyorg/hedy/issues/new?assignees=&labels=&projects=&template=bug_report.md&title=%5BBUG%5D) · [Content Issue](https://github.com/hedyorg/hedy/issues/new?assignees=&labels=&projects=&template=content.md&title=%5BCONTENT%5D) · [Idea for the Hedy interface](https://github.com/hedyorg/hedy/issues/new?assignees=&labels=&projects=&template=idea-for-the-hedy-interface.md&title=%5BUI+idea%5D) · [Idea for the Hedy language](https://github.com/hedyorg/hedy/issues/new?assignees=&labels=&projects=&template=idea-for-the-hedy-language.md&title=%5BLANGUAGE+idea%5D)\n\n# Preview\n\n![](https://user-images.githubusercontent.com/1003685/230636245-668ef2a1-c38b-47cf-84e4-0896ee6a72e8.png)\n\nThe latest version of Hedy can be found at [hedy.org](https://hedy.org).\n\nYou can also download Hedy and run it on your own machine. For more information, see [Offline Hedy](https://github.com/hedyorg/hedy/wiki/Offline-Hedy).\n\n# Repo stats\n\n![Repo Beats statistics](https://repobeats.axiom.co/api/embed/a3206e7c42293ee71446a7081b9c98636953501c.svg \"Repobeats analytics image\")\n\n## What's next?\n\nIf you want to see what the core team will work on next, you can follow [our Project Board](https://github.com/orgs/hedyorg/projects/1/views/5), the [Discussions](https://github.com/hedyorg/hedy/discussions) or join our [Discord](https://discord.gg/8yY7dEme9r) channel.\n\n## Živjo Hedy! Привет Хеди! !سلام هيدي\n\nA simple way to help out Hedy is to [help us translate Hedy](https://github.com/hedyorg/hedy/wiki/Hedy-Translation-Tutorial) using Weblate! You do not need programming experience or knowledge to translate Hedy. Below the current status, help us complete a language, or add a new one.\n\n[![](https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg)](https://hosted.weblate.org/engage/hedy/)\n\n## I found a bug!\n\nOh no! Here is how you can let us know:\n\n* If it is a small fix and clearly wrong (such as a crash or a wrong error message) please [make an issue](https://github.com/hedyorg/hedy/issues/new/choose). \n\n* If it is more of an idea, please reach out to us on [Discord](https://discord.gg/8yY7dEme9r).\n\nPlease note that we are a friendly and welcoming open source project. If you submit an issue, refrain from saying things are \"bad\", or \"wrong\" or \"broken\". Assume that code that is there was made by people that do their best! Neutrally phrased messages are nicer for everyone. For example use \"did not do what I expected\", \"appears not to work\" or \"could be improved\". For full community guidelines, please read the [Hedy Wiki](https://github.com/hedyorg/hedy/wiki)\nAlso feel free to join our [Discord](https://discord.gg/8yY7dEme9r) server to discuss ideas, and get in touch with us our show of your Hedy related creations.\n\n## I want to contribute \n\nGreat, thanks!! \n\nBefore you start, please consult the [\"before your first contribution\"](https://github.com/hedyorg/hedy/wiki#getting-started-on-your-first-contribution) section of our Wiki. First contributions that are not linked to issues either labeled \"good first issue\" or \"approved\", or that do not link to any issues will be closed. We don't have the bandwidth to inspect pull requests that are not aligned with our goals. If you need any help getting started, the Wiki is the best place to start, and you can also always drop into the Discord! (in #programmers-general).\n\n## Thanks to all Contributors\n\nThank you very much for taking your time to help Hedy.\n\n[![Contributors](https://contrib.rocks/image?repo=hedyorg/hedy)]([https://github.com/codemaniac-sahil/news-webapp-api](https://github.com/hedyorg/hedy)https://github.com/hedyorg/hedy/graphs/contributors)\n<p align=\"right\">(<a href=\"#top\">🔼 Back to top</a>)</p>\n"
        },
        {
          "name": "app.py",
          "type": "blob",
          "size": 127.046875,
          "content": "# coding=utf-8\nimport base64\nimport binascii\nimport collections\nimport logging\nimport datetime\nimport os\nimport re\n# TEST\nimport subprocess\nimport sys\nimport traceback\nimport textwrap\nimport unicodedata\nimport zipfile\nimport jinja_partials\nfrom typing import Optional\nfrom logging.config import dictConfig as logConfig\nfrom os import path\nfrom iso639 import languages\n\nimport static_babel_content\nfrom markupsafe import Markup\nfrom flask import (Flask, Response, abort, after_this_request, g, jsonify, make_response,\n                   redirect, request, send_file, url_for, Blueprint,\n                   send_from_directory, session, current_app)\nfrom flask_babel import Babel\nfrom website.flask_helpers import gettext_with_fallback as gettext\nfrom website.flask_commonmark import Commonmark\nfrom flask_compress import Compress\nfrom urllib.parse import quote_plus\n\nimport hedy\nimport hedy_content\nimport hedy_translation\nimport hedyweb\nimport utils\nfrom dataclasses import dataclass\nfrom hedy_error import get_error_text\nfrom safe_format import safe_format\nfrom config import config\nfrom website.flask_helpers import render_template, proper_tojson, JinjaCompatibleJsonProvider\nfrom hedy_content import (ADVENTURE_ORDER_PER_LEVEL, KEYWORDS_ADVENTURES, ALL_KEYWORD_LANGUAGES,\n                          ALL_LANGUAGES, COUNTRIES, HOUR_OF_CODE_ADVENTURES)\n\nfrom logging_config import LOGGING_CONFIG\nfrom utils import dump_yaml_rt, is_debug_mode, load_yaml_rt, timems, version, strip_accents\nfrom website import (ab_proxying, admin, auth_pages, aws_helpers,\n                     cdn, classes, database, for_teachers, s3_logger, parsons,\n                     profile, programs, querylog, quiz, statistics,\n                     translating, tags, surveys, super_teacher, public_adventures, user_activity, feedback)\nfrom website.auth import (current_user, is_admin, is_teacher, is_second_teacher, is_super_teacher, is_students_teacher,\n                          has_public_profile, login_user_from_token_cookie, requires_login, requires_login_redirect,\n                          requires_teacher, forget_current_user, hide_explore)\nfrom website.log_fetcher import log_fetcher\nfrom website.frontend_types import Adventure, Program, ExtraStory, SaveInfo\nfrom website.flask_hedy import g_db\n\nlogConfig(LOGGING_CONFIG)\nlogger = logging.getLogger(__name__)\n\nACHIEVEMENTS_TRANSLATIONS = None\nACHIEVEMENTS = None\nSURVEYS = None\nSTATISTICS = None\n\n# Todo TB: This can introduce a possible app breaking bug when switching\n# to Python 4 -> e.g. Python 4.0.1 is invalid\nif (sys.version_info.major < 3 or sys.version_info.minor < 7):\n    print('Hedy requires Python 3.7 or newer to run. However, your version of Python is', '.'.join(\n        [str(sys.version_info.major), str(sys.version_info.minor), str(sys.version_info.micro)]))\n    quit()\n\n\n# Set the current directory to the root Hedy folder\nos.chdir(os.path.join(os.getcwd(), __file__.replace(\n    os.path.basename(__file__), '')))\n\n\nCOMMANDS = collections.defaultdict(hedy_content.NoSuchCommand)\nfor lang in ALL_LANGUAGES.keys():\n    COMMANDS[lang] = hedy_content.Commands(lang)\n\nADVENTURES = collections.defaultdict(hedy_content.NoSuchAdventure)\nfor lang in ALL_LANGUAGES.keys():\n    ADVENTURES[lang] = hedy_content.Adventures(lang)\n\nPARSONS = collections.defaultdict()\nfor lang in ALL_LANGUAGES.keys():\n    PARSONS[lang] = hedy_content.ParsonsProblem(lang)\n\nQUIZZES = collections.defaultdict(hedy_content.NoSuchQuiz)\nfor lang in ALL_LANGUAGES.keys():\n    QUIZZES[lang] = hedy_content.Quizzes(lang)\n\nTUTORIALS = collections.defaultdict(hedy_content.NoSuchTutorial)\nfor lang in ALL_LANGUAGES.keys():\n    TUTORIALS[lang] = hedy_content.Tutorials(lang)\n\nSLIDES = collections.defaultdict(hedy_content.NoSuchSlides)\nfor lang in ALL_LANGUAGES.keys():\n    SLIDES[lang] = hedy_content.Slides(lang)\n\nTAGS = collections.defaultdict(hedy_content.NoSuchAdventure)\nfor lang in ALL_LANGUAGES.keys():\n    TAGS[lang] = hedy_content.Tags(lang)\n\n\n# This is the root blueprint. It's what was previously the App object,\n# which is why it's still called 'app'. We now create a new App object dynamically,\n# so that we can use it in tests.\napp = Blueprint('app', __name__, template_folder='templates', static_url_path='')\n\n\ndef create_app(for_testing=False):\n    \"\"\"Factory for the Flask App.\n\n    This creates a fresh Flask App object, so that we can use it in tests.\n    \"\"\"\n    # Setting up Flask and babel (web and translations)\n    app_obj = Flask(__name__, static_url_path='')\n    app_obj.url_map.strict_slashes = False  # Ignore trailing slashes in URLs\n    app_obj.json = JinjaCompatibleJsonProvider(app_obj)\n    app_obj.register_blueprint(app)\n\n    # An extra object to hold per-Flask app global variables\n    app_obj.config['hedy_globals'] = {}\n\n    Babel(app_obj, locale_selector=get_locale)\n\n    jinja_partials.register_extensions(app_obj)\n    app_obj.template_filter('tojson')(proper_tojson)\n\n    # Most files should be loaded through the CDN which has its own caching period and invalidation.\n    # Use 5 minutes as a reasonable default for all files we load elsewise.\n    app_obj.config['SEND_FILE_MAX_AGE_DEFAULT'] = datetime.timedelta(minutes=5)\n    cdn.Cdn(app_obj, os.getenv('CDN_PREFIX'), os.getenv('HEROKU_SLUG_COMMIT', 'dev'))\n\n    app_obj.add_template_global(utils.prepare_content_for_ckeditor, name=\"prepare_content_for_ckeditor\")\n\n    # Unique random key for sessions.\n    # For settings with multiple workers, an environment variable is required,\n    # otherwise cookies will be constantly removed and re-set by different\n    # workers.\n    if utils.is_production():\n        if not os.getenv('SECRET_KEY'):\n            raise RuntimeError(\n                'The SECRET KEY must be provided for non-dev environments.')\n\n        app_obj.config['SECRET_KEY'] = os.getenv('SECRET_KEY')\n\n    else:\n        # The value doesn't matter for dev environments, but it needs to be a constant\n        # so that our cookies don't get invalidated every time we restart the server.\n        app_obj.config['SECRET_KEY'] = os.getenv('SECRET_KEY', 'WeAreDeveloping')\n\n    if for_testing:\n        app_obj.config.update(TESTING=True)\n\n    if utils.is_heroku():\n        app_obj.config.update(\n            SESSION_COOKIE_SECURE=True,\n            SESSION_COOKIE_HTTPONLY=True,\n            SESSION_COOKIE_SAMESITE='Lax',\n        )\n\n    # Set security attributes for cookies in a central place - but not when\n    # running locally, so that session cookies work well without HTTPS\n    Compress(app_obj)\n    Commonmark(app_obj)\n\n    # Explicitly substitute the flask gettext function with our custom definition which uses fallback languages\n    app_obj.jinja_env.globals.update(_=gettext)\n\n    # If present, PROXY_TO_TEST_HOST should be the 'http[s]://hostname[:port]' of the target environment\n    if os.getenv('PROXY_TO_TEST_HOST') and not os.getenv('IS_TEST_ENV'):\n        ab_proxying.ABProxying(app_obj, os.getenv(\n            'PROXY_TO_TEST_HOST'), app_obj.config['SECRET_KEY'])\n\n    # These used to be app-level globals, but they now need to become per-Flask-obj \"globals\"\n    db = database.Database(for_testing=for_testing)\n    auth_module = auth_pages.AuthModule(db)\n    teachers_mod = for_teachers.ForTeachersModule(db, auth_module)\n\n    app_obj.config['hedy_globals']['DATABASE'] = db\n    app_obj.config['hedy_globals']['FOR_TEACHERS'] = teachers_mod\n\n    app_obj.register_blueprint(auth_pages.AuthModule(db))\n    app_obj.register_blueprint(profile.ProfileModule(db))\n    app_obj.register_blueprint(programs.ProgramsModule(db, teachers_mod))\n    app_obj.register_blueprint(for_teachers.ForTeachersModule(db, auth_module))\n    app_obj.register_blueprint(classes.ClassModule(db))\n    app_obj.register_blueprint(classes.MiscClassPages(db))\n    app_obj.register_blueprint(super_teacher.SuperTeacherModule(db))\n    app_obj.register_blueprint(admin.AdminModule(db))\n    app_obj.register_blueprint(quiz.QuizModule(db, QUIZZES))\n    app_obj.register_blueprint(parsons.ParsonsModule(PARSONS))\n    app_obj.register_blueprint(statistics.StatisticsModule(db))\n    app_obj.register_blueprint(user_activity.UserActivityModule(db))\n    app_obj.register_blueprint(tags.TagsModule(db))\n    app_obj.register_blueprint(public_adventures.PublicAdventuresModule(db))\n    app_obj.register_blueprint(surveys.SurveysModule(db))\n    app_obj.register_blueprint(feedback.FeedbackModule(db))\n\n    return app_obj\n\n\ndef get_locale():\n    return session.get(\"lang\", request.accept_languages.best_match(ALL_LANGUAGES.keys(), 'en'))\n\n\ndef load_all_adventures_for_index(customizations, subset=None):\n    \"\"\"\n    Loads all the default adventures in a dictionary that will be used to populate\n    the index, therfore we only need the titles and short names of the adventures.\n    \"\"\"\n\n    keyword_lang = g.keyword_lang\n    if subset:\n        adventures = ADVENTURES[g.lang].get_adventures_subset(subset, keyword_lang)\n    else:\n        adventures = ADVENTURES[g.lang].get_adventures(keyword_lang)\n\n    all_adventures = {i: [] for i in range(1, hedy.HEDY_MAX_LEVEL + 1)}\n    for short_name, adventure in adventures.items():\n        for level in adventure['levels']:\n            all_adventures[int(level)].append({\n                'short_name': short_name,\n                'name': adventure['name'],\n                'is_teacher_adventure': False,\n                'is_command_adventure': short_name in KEYWORDS_ADVENTURES\n            })\n    for level, adventures in all_adventures.items():\n        adventures_order = ADVENTURE_ORDER_PER_LEVEL.get(level, [])\n        index_map = {v: i for i, v in enumerate(adventures_order)}\n        adventures.sort(key=lambda pair: index_map.get(\n            pair['short_name'],\n            len(adventures_order)))\n\n    sorted_adventures = customizations.get('sorted_adventures')\n    if not sorted_adventures:\n        return all_adventures\n\n    builtin_map = {i: [] for i in range(1, hedy.HEDY_MAX_LEVEL + 1)}\n    adventure_ids = []\n    for level, order_for_level in sorted_adventures.items():\n        for a in order_for_level:\n            if a['from_teacher']:\n                adventure_ids.append(a['name'])\n        builtin_map[int(level)] = {a['short_name']: a for a in all_adventures[int(level)]}\n\n    teacher_adventure_map = g_db().batch_get_adventures(adventure_ids)\n    all_adventures = {i: [] for i in range(1, hedy.HEDY_MAX_LEVEL + 1)}\n    for level, order_for_level in sorted_adventures.items():\n        for adventure in order_for_level:\n            if adventure['from_teacher'] and (db_row := teacher_adventure_map.get(adventure['name'])):\n                all_adventures[int(level)].append({\n                    'short_name': db_row['id'],\n                    'name': db_row['name'],\n                    'is_teacher_adventure': True,\n                    'is_command_adventure': False\n                })\n            if not adventure['from_teacher'] and (adv := builtin_map[int(level)].get(adventure['name'])):\n                all_adventures[int(level)].append(adv)\n\n    return all_adventures\n\n\ndef load_adventures_for_level(level, subset=None):\n    \"\"\"Load the adventures available to the current user at the given level.\n\n    These are the default adventures, with the customizations implied\n    by any class they are a part of. We also load any programs the user has\n    that apply to the current level.\n\n    Adventures are loaded in the current language, with the keywords in the code\n    translated to the default (or explicitly requested) keyword language.\n    \"\"\"\n    keyword_lang = g.keyword_lang\n\n    all_adventures = []\n    # NOTE: if we ever have ADVENTURES in the DB, adjust how the \"levels\" field is used.\n    if subset:\n        adventures = ADVENTURES[g.lang].get_adventures_subset(subset, keyword_lang)\n    else:\n        adventures = ADVENTURES[g.lang].get_adventures(keyword_lang)\n\n    for short_name, adventure in adventures.items():\n        adventure_level = adventure['levels'].get(level, None)\n        if not adventure_level:\n            continue\n\n        # Sometimes we have multiple text and example_code -> iterate these and add as well!\n\n        extra_stories = [\n            ExtraStory(\n                text=adventure_level.get(f'story_text_{i}'),\n                example_code=adventure_level.get(f'example_code_{i}'))\n            for i in range(2, 10)\n            if adventure_level.get(f'story_text_{i}', '')\n        ]\n\n        default_save_name = adventure.get('default_save_name')\n        if not default_save_name or default_save_name == 'intro':\n            default_save_name = adventure['name']\n\n        # only add adventures that have been added to the adventure list of this level\n        if short_name in ADVENTURE_ORDER_PER_LEVEL.get(level, []):\n            current_adventure = Adventure(\n                short_name=short_name,\n                name=adventure['name'],\n                image=adventure.get('image', None),\n                text=adventure['levels'][level].get('story_text', \"\"),\n                example_code=adventure['levels'][level].get('example_code', \"\"),\n                extra_stories=extra_stories,\n                is_teacher_adventure=False,\n                is_command_adventure=short_name in KEYWORDS_ADVENTURES,\n                save_name=f'{default_save_name} {level}')\n\n            all_adventures.append(current_adventure)\n\n    # Sort the adventures based on the default ordering\n    adventures_order = ADVENTURE_ORDER_PER_LEVEL.get(level, [])\n    index_map = {v: i for i, v in enumerate(adventures_order)}\n    all_adventures.sort(key=lambda pair: index_map.get(\n        pair['short_name'],\n        len(adventures_order)))\n\n    return all_adventures\n\n\ndef load_saved_programs(level, into_adventures, preferential_program: Optional[Program]):\n    \"\"\"Load saved previous saved programs by the current user into the given adventures array.\n\n    Mutates the adventures in-place, by setting the 'save_name'\n    and 'save_info' attributes of adventures.\n    \"\"\"\n    if not current_user()['username']:\n        return\n\n    loaded_programs = {k: Program.from_database_row(r)\n                       for k, r in g_db().last_level_programs_for_user(current_user()['username'], level).items()}\n\n    # If there is a preferential program, overwrite any other one that might exist so we definitely\n    # load this one.\n    if preferential_program:\n        loaded_programs[preferential_program.adventure_name] = preferential_program\n\n    # Copy them into the adventures array\n    #\n    # For every adventure, find a program in the `loaded_programs` dictionary.\n    # Since the program may be saved under either the id or the actual name, check both.\n    for adventure in into_adventures:\n        program = loaded_programs.get(adventure.short_name)\n        if not program:\n            program = loaded_programs.get(adventure.name)\n        if not program:\n            continue\n        student_adventure_id = f\"{current_user()['username']}-{program['adventure_name']}-{level}\"\n        student_adventure = g_db().student_adventure_by_id(student_adventure_id)\n        adventure.save_name = program.name\n        adventure.editor_contents = program.code\n        adventure.save_info = SaveInfo.from_program(program)\n        adventure.is_checked = (student_adventure and student_adventure['ticked']) is True\n\n\ndef load_customized_adventures(level, customizations, into_adventures):\n    \"\"\"Load the teacher customizations into the set of adventures.\n\n    It would have been nicer if the complete set of adventures had come\n    out of 'load_adventures_for_level', but looking up customizations is\n    a bit expensive and since we've already done that in the caller, we pass\n    it in here.\n\n    Mutates the 'into_adventures' list in-place. On entry, it is the list of\n    default `Adventure` objects in the default order. On exit, it may have been\n    reordered and enhanced with teacher-written adventures.\n    \"\"\"\n    # First find the list of all teacher adventures for the current level,\n    # batch-get all of them, then put them into the adventures array in the correct\n    # location.\n\n    # { <str>level -> [ { <str>name, <bool>from_teacher ] }\n    # 'name' is either a shortname or an ID into the teacher table\n    sorted_adventures = customizations.get('sorted_adventures', {})\n    order_for_this_level = sorted_adventures.get(str(level), [])\n    if not order_for_this_level:\n        return  # Nothing to do\n\n    adventure_ids = {a['name'] for a in order_for_this_level if a['from_teacher']}\n    teacher_adventure_map = g_db().batch_get_adventures(adventure_ids)\n    builtin_adventure_map = {a.short_name: a for a in into_adventures}\n\n    # Replace `into_adventures`\n    into_adventures[:] = []\n    for a in order_for_this_level:\n        if a['from_teacher'] and (db_row := teacher_adventure_map.get(a['name'])):\n            try:\n                if 'formatted_content' in db_row:\n                    db_row['formatted_content'] = safe_format(db_row['formatted_content'],\n                                                              **hedy_content.KEYWORDS.get(g.keyword_lang))\n                else:\n                    db_row['content'] = safe_format(db_row['content'],\n                                                    **hedy_content.KEYWORDS.get(g.keyword_lang))\n                if 'solution_example' in db_row:\n                    db_row['solution_example'] = safe_format(db_row['solution_example'],\n                                                             **hedy_content.KEYWORDS.get(g.keyword_lang))\n            except Exception:\n                # We don't want teacher being able to break the student UI -> pass this adventure\n                pass\n\n            into_adventures.append(Adventure.from_teacher_adventure_database_row(db_row))\n        if not a['from_teacher'] and (adv := builtin_adventure_map.get(a['name'])):\n            into_adventures.append(adv)\n\n\n@app.before_app_request\ndef redirect_outdated_domains():\n    \"\"\"If Hedy is being loaded from a domain we no longer use or advertise,\n    do a 301 redirect to the official 'hedy.org' domain.\n\n    If we keep this up for long enough, eventually Google will update its index\n    to forget about the old domains.\n    \"\"\"\n    # request.host looks like 'hostname[:port]'\n    host = request.host.split(':')[0]\n\n    if host in ['www.hedycode.com', 'hedycode.com', 'hedy-beta.herokuapp.com']:\n        # full_path starts with '/' and has everything\n        return redirect(f'https://hedy.org{request.full_path}', code=301)\n\n\n@app.before_app_request\ndef before_request_begin_logging():\n    \"\"\"Initialize the query logging.\n\n    This needs to happen as one of the first things, as the database calls\n    etc. depend on it.\n    \"\"\"\n    path = (str(request.path) + '?' + request.query_string.decode('utf-8')\n            ) if request.query_string else str(request.path)\n    querylog.begin_global_log_record(\n        path=path,\n        method=request.method,\n        remote_ip=request.headers.get('X-Forwarded-For', request.remote_addr),\n        user_agent=request.headers.get('User-Agent'))\n\n\n@app.after_app_request\ndef after_request_log_status(response):\n    querylog.log_value(http_code=response.status_code)\n    return response\n\n\n@app.before_app_request\ndef initialize_session():\n    \"\"\"Make sure the session is initialized.\n\n    - Each session gets a unique session ID, so we can tell user sessions apart\n      and know what programs get submitted after each other.\n    - If the user has a cookie with a long-lived login token, log them in from\n      that cookie (copy the user info into the session for efficient access\n      later on).\n    \"\"\"\n    # Set the database object on the global object (auth.py needs it)\n    g.db = current_app.config['hedy_globals']['DATABASE']\n\n    # Invoke session_id() for its side effect\n    utils.session_id()\n    login_user_from_token_cookie()\n\n    g.user = current_user()\n    querylog.log_value(session_id=utils.session_id(), username=g.user['username'],\n                       is_teacher=is_teacher(g.user), is_admin=is_admin(g.user), is_super_teacher=is_admin(g.user))\n\n\nif os.getenv('IS_PRODUCTION'):\n    @app.before_app_request\n    def reject_e2e_requests():\n        if utils.is_testing_request(request):\n            return 'No E2E tests are allowed in production', 400\n\n\ndef g_for_teachers():\n    \"\"\"Get the FOR_TEACHERS object from the current Flask app.\"\"\"\n    return current_app.config['hedy_globals']['FOR_TEACHERS']\n\n\n@app.before_app_request\ndef before_request_proxy_testing():\n    if utils.is_testing_request(request) and os.getenv('IS_TEST_ENV'):\n        session['test_session'] = 'test'\n\n\n# HTTP -> HTTPS redirect\n# https://stackoverflow.com/questions/32237379/python-flask-redirect-to-https-from-http/32238093\nif os.getenv('REDIRECT_HTTP_TO_HTTPS'):\n    @app.before_app_request\n    def before_request_https():\n        if request.url.startswith('http://'):\n            url = request.url.replace('http://', 'https://', 1)\n            # We use a 302 in case we need to revert the redirect.\n            return redirect(url, code=302)\n\n\n# We don't need to log in offline mode\nif utils.is_offline_mode():\n    parse_logger = s3_logger.NullLogger()\nelse:\n    parse_logger = s3_logger.S3Logger(name=\"parse\", config_key=\"s3-parse-logs\")\n    querylog.LOG_QUEUE.set_transmitter(\n        aws_helpers.s3_querylog_transmitter_from_env())\n\n\n@app.before_app_request\ndef setup_language():\n    # Determine the user's requested language code.\n    #\n    # If not in the request parameters, use the browser's accept-languages\n    # header to do language negotiation. Can be changed in the session by\n    # POSTing to `/change_language`, and be overwritten by remember_current_user().\n    if lang_from_request := request.args.get('language', None):\n        session['lang'] = lang_from_request\n    if 'lang' not in session:\n        session['lang'] = request.accept_languages.best_match(\n            ALL_LANGUAGES.keys(), 'en')\n    g.lang = session['lang']\n    querylog.log_value(lang=session['lang'])\n\n    if 'keyword_lang' not in session:\n        session['keyword_lang'] = g.lang if g.lang in ALL_KEYWORD_LANGUAGES.keys() else 'en'\n    # If there is a '?keyword_language=' parameter, it overrides the current keyword lang, permanently\n    if request.args.get('keyword_language', None):\n        session['keyword_lang'] = request.args.get('keyword_language', None)\n    g.keyword_lang = session['keyword_lang']\n\n    # Set the page direction -> automatically set it to \"left-to-right\"\n    # Switch to \"right-to-left\" if one of the language is rtl according to Locale (from Babel) settings.\n    # This is the only place to expand / shrink the list of RTL languages ->\n    # front-end is fixed based on this value\n    g.dir = static_babel_content.TEXT_DIRECTIONS.get(g.lang, 'ltr')\n\n    # True if it is a Latin alphabet, False if not\n    g.latin = all('LATIN' in unicodedata.name(char, '').upper() for char in current_language()['sym'])\n\n    # Check that requested language is supported, otherwise return 404\n    if g.lang not in ALL_LANGUAGES.keys():\n        return make_response(gettext(\"request_invalid\"), 404)\n\n\nif utils.is_heroku() and not os.getenv('HEROKU_RELEASE_CREATED_AT'):\n    logger.warning(\n        'Cannot determine release; enable Dyno metadata by running'\n        '\"heroku labs:enable runtime-dyno-metadata -a <APP_NAME>\"')\n\n\n# A context processor injects variables in the context that are available to all templates.\n@app.app_context_processor\ndef enrich_context_with_user_info():\n    user = current_user()\n    data = {'username': user.get('username', ''),\n            'is_teacher': is_teacher(user), 'is_second_teacher': is_second_teacher(user),\n            'is_admin': is_admin(user), 'has_public_profile': has_public_profile(user),\n            'is_super_teacher': is_super_teacher(user),\n            'hide_explore': hide_explore(g.user)}\n    return data\n\n\n@app.app_context_processor\ndef add_generated_css_file():\n    return {\n        \"generated_css_file\": '/css/generated.full.css' if is_debug_mode() else '/css/generated.css'\n    }\n\n\n@app.app_context_processor\ndef add_hx_detection():\n    \"\"\"Detect when a request is sent by HTMX.\n\n    A template may decide to render things differently when it is vs. when it isn't.\n    \"\"\"\n    hx_request = bool(request.headers.get('Hx-Request'))\n    return {\n        \"hx_request\": hx_request,\n        \"hx_layout\": 'htmx-layout-yes.html' if hx_request else 'htmx-layout-no.html',\n    }\n\n\n@app.after_app_request\ndef set_security_headers(response):\n    security_headers = {\n        'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',\n        'X-XSS-Protection': '1; mode=block',\n    }\n    # Not X-Frame-Options on purpose -- we are being embedded by Online Masters\n    # and that's okay.\n    response.headers.update(security_headers)\n    return response\n\n\n@app.teardown_request\ndef teardown_request_finish_logging(exc):\n    log_record = querylog.finish_global_log_record(exc)\n    if is_debug_mode():\n        logger.debug(repr(log_record.as_data()))\n\n\n@app.route('/session_test', methods=['GET'])\ndef echo_session_vars_test():\n    if not utils.is_testing_request(request):\n        return make_response(gettext(\"request_invalid\"), 400)\n    return make_response({'session': dict(session)})\n\n\n@app.route('/session_main', methods=['GET'])\ndef echo_session_vars_main():\n    if not utils.is_testing_request(request):\n        return make_response(gettext(\"request_invalid\"), 400)\n    return make_response({'session': dict(session),\n                          'proxy_enabled': bool(os.getenv('PROXY_TO_TEST_HOST'))})\n\n\n@app.route('/parse', methods=['POST'])\n@querylog.timed_as('parse_handler')\ndef parse():\n    body = request.json\n    if not body:\n        return make_response(gettext(\"request_invalid\"), 400)\n    if 'code' not in body:\n        return make_response(gettext(\"request_invalid\"), 400)\n    if 'level' not in body:\n        return make_response(gettext(\"request_invalid\"), 400)\n    if 'adventure_name' in body and not isinstance(body['adventure_name'], str):\n        return make_response(gettext(\"request_invalid\"), 400)\n    if 'is_debug' not in body:\n        return make_response(gettext(\"request_invalid\"), 400)\n    if 'raw' not in body:\n        return make_response(gettext(\"request_invalid\"), 400)\n    error_check = False\n    if 'error_check' in body:\n        error_check = True\n\n    code = body['code']\n    level = int(body['level'])\n    is_debug = bool(body['is_debug'])\n    # Language should come principally from the request body,\n    # but we'll fall back to browser default if it's missing for whatever\n    # reason.\n    lang = body.get('lang', g.lang)\n\n    # true if kid enabled the read aloud option\n    read_aloud = body.get('read_aloud', False)\n    response = {}\n    username = current_user()['username'] or None\n    exception = None\n\n    querylog.log_value(level=level, lang=lang,\n                       session_id=utils.session_id(), username=username)\n\n    try:\n        keyword_lang = current_keyword_language()[\"lang\"]\n        with querylog.log_time('transpile'):\n            try:\n                transpile_result = transpile_add_stats(code, level, lang, is_debug)\n            except hedy.exceptions.WarningException as ex:\n                translated_error = get_error_text(ex, keyword_lang)\n                if isinstance(ex, hedy.exceptions.InvalidSpaceException):\n                    response['Warning'] = translated_error\n                elif isinstance(ex, hedy.exceptions.UnusedVariableException):\n                    response['Warning'] = translated_error\n                else:\n                    response['Error'] = translated_error\n                response['Location'] = ex.error_location\n                transpile_result = ex.fixed_result\n                exception = ex\n            except hedy.exceptions.UnquotedEqualityCheckException as ex:\n                response['Error'] = get_error_text(ex, keyword_lang)\n                response['Location'] = ex.error_location\n                exception = ex\n\n        try:\n            response['Code'] = transpile_result.code\n            source_map_result = transpile_result.source_map.get_result()\n\n            for i, mapping in source_map_result.items():\n                if mapping['error'] is not None:\n                    source_map_result[i]['error'] = get_error_text(source_map_result[i]['error'], keyword_lang)\n\n            response['source_map'] = source_map_result\n\n            if transpile_result.has_pressed:\n                response['has_pressed'] = True\n\n            if transpile_result.has_turtle:\n                response['has_turtle'] = True\n\n            if transpile_result.has_clear:\n                response['has_clear'] = True\n\n            if transpile_result.has_music:\n                response['has_music'] = True\n\n            if transpile_result.has_sleep:\n                response['has_sleep'] = True\n\n            response['variables'] = transpile_result.roles_of_variables\n        except Exception:\n            pass\n\n    except hedy.exceptions.HedyException as ex:\n        traceback.print_exc()\n        response = hedy_error_to_response(ex)\n        exception = ex\n\n    except Exception as E:\n        traceback.print_exc()\n        print(f\"error transpiling {code}\")\n        response[\"Error\"] = str(E)\n        exception = E\n\n    # Save this program (if the user is logged in)\n    if username and body.get('save_name'):\n        try:\n            program_logic = programs.ProgramsLogic(g_db(), g_for_teachers())\n            program = program_logic.store_user_program(\n                user=current_user(),\n                level=level,\n                name=body.get('save_name'),\n                program_id=body.get('program_id'),\n                adventure_name=body.get('adventure_name'),\n                short_name=body.get('short_name'),\n                code=code,\n                error=exception is not None)\n\n            response['save_info'] = SaveInfo.from_program(Program.from_database_row(program))\n            if program.get('is_modified'):\n                response['is_modified'] = True\n        except programs.NotYourProgramError:\n            # No permissions to overwrite, no biggie\n            pass\n\n    querylog.log_value(server_error=response.get('Error'))\n    parse_logger.log({\n        'session': utils.session_id(),\n        'date': str(datetime.datetime.now()),\n        'level': level,\n        'lang': lang,\n        'code': code,\n        'server_error': response.get('Error'),\n        'exception': get_class_name(exception),\n        'version': version(),\n        'username': username,\n        'read_aloud': read_aloud,\n        'is_test': 1 if os.getenv('IS_TEST_ENV') else None,\n        'adventure_name': body.get('adventure_name', None)\n    })\n\n    if \"Error\" in response and error_check:\n        response[\"message\"] = gettext('program_contains_error')\n    return make_response(response, 200)\n\n\n@app.route('/parse-by-id', methods=['POST'])\n@requires_login\ndef parse_by_id(user):\n    body = request.json\n    # Validations\n    if not isinstance(body, dict):\n        return 'body must be an object', 400\n    if not isinstance(body.get('id'), str):\n        return 'class id must be a string', 400\n\n    program = g_db().program_by_id(body.get('id'))\n    if program and program.get('username') == user['username']:\n        try:\n            hedy.transpile(\n                program.get('code'),\n                program.get('level'),\n                program.get('lang')\n            )\n            return make_response('', 204)\n        except BaseException:\n            make_response(gettext(\"request_invalid\"), 200)\n    else:\n        return make_response(gettext(\"request_invalid\"), 400)\n\n\n@app.route('/parse_tutorial', methods=['POST'])\n@requires_login\ndef parse_tutorial(user):\n    body = request.json\n\n    code = body['code']\n    level = try_parse_int(body['level'])\n    try:\n        result = hedy.transpile(code, level, \"en\")\n        # this is not a return, is this code needed?\n        make_response(({'code': result.code}), 200)\n    except BaseException:\n        return make_response(gettext(\"request_invalid\"), 400)\n\n\n@app.route(\"/generate_machine_files\", methods=['POST'])\ndef prepare_files():\n    body = request.json\n    # Prepare the file -> return the \"secret\" filename as response\n    transpiled_code = hedy.transpile(body.get(\"code\"), body.get(\"level\"), body.get(\"lang\"))\n    filename = utils.random_id_generator(12)\n\n    # We have to turn the turtle 90 degrees to align with the user perspective app.ts#16\n    # This is not a really nice solution, but as we store the prefix on the\n    # front-end it should be good for now\n    threader = textwrap.dedent(\"\"\"\n        import time\n        from turtlethread import Turtle\n        def int_with_error(value, error_message):\n            try:\n                return int(value)\n            except ValueError:\n                raise ValueError(error_message.format(value))\n\n        t = Turtle()\n        t.left(90)\n        with t.running_stitch(stitch_length=20):\n        \"\"\")\n    lines = transpiled_code.code.split(\"\\n\")\n\n    # remove all sleeps for speeed, and remove all colors for compatibility:\n    lines = [x for x in lines if (\"time.sleep\" not in x) and (\"t.pencolor\" not in x)]\n\n    threader += \"  \" + \"\\n  \".join(lines)\n    threader += \"\\n\" + 't.save(\"machine_files/' + filename + '.dst\")'\n    threader += \"\\n\" + 't.save(\"machine_files/' + filename + '.png\")'\n    if not os.path.isdir('machine_files'):\n        os.makedirs('machine_files')\n    exec(threader)\n\n    # stolen from: https://stackoverflow.com/questions/28568687/send-with-multiple-csvs-using-flask\n\n    zip_file = zipfile.ZipFile(f'machine_files/{filename}.zip', 'w', zipfile.ZIP_DEFLATED)\n    for root, dirs, files in os.walk('machine_files/'):\n        # only zip files for this request, and exclude the zip file itself:\n        for file in [x for x in files if x[:len(filename)] == filename and x[-3:] != 'zip']:\n            zip_file.write('machine_files/' + file)\n    zip_file.close()\n    return make_response({'filename': filename}, 200)\n\n\n@app.route(\"/download_machine_files/<filename>\", methods=['GET'])\ndef download_machine_file(filename, extension=\"zip\"):\n    # https://stackoverflow.com/questions/24612366/delete-an-uploaded-file-after-downloading-it-from-flask\n\n    # Once the file is downloaded -> remove it\n    @after_this_request\n    def remove_file(response):\n        try:\n            os.remove(\"machine_files/\" + filename + \".zip\")\n            os.remove(\"machine_files/\" + filename + \".dst\")\n            os.remove(\"machine_files/\" + filename + \".png\")\n        except BaseException:\n            print(\"Error removing one of the generated files!\")\n        return response\n\n    return send_file(\"machine_files/\" + filename + \".\" + extension, as_attachment=True)\n\n\nMICROBIT_FEATURE = False\n\n\n@app.route('/generate_microbit_files', methods=['POST'])\ndef generate_microbit_file():\n    if MICROBIT_FEATURE:\n        # Extract variables from request body\n        body = request.json\n        code = body.get(\"code\")\n        level = body.get(\"level\")\n\n        transpile_result = hedy.transpile_and_return_python(code, level)\n        save_transpiled_code_for_microbit(transpile_result)\n        return make_response({'filename': 'Micro-bit.py', 'microbit': True}, 200)\n    else:\n        return make_response({'message': 'Microbit feature is disabled'}, 403)\n\n\ndef save_transpiled_code_for_microbit(transpiled_python_code):\n    folder = 'Micro-bit'\n    filepath = os.path.join(folder, 'Micro-bit.py')\n\n    if not os.path.exists(folder):\n        os.makedirs(folder)\n    with open(filepath, 'w') as file:\n        custom_string = \"from microbit import *\\nimport random\"\n        file.write(custom_string + \"\\n\")\n        # file.write(transpiled_python_code + \"\\n\")\n\n        # Splitting strings to new lines, so it can be properly displayed by Micro:bit\n        processed_code = \"\"\n        lines = transpiled_python_code.split('\\n')\n        for line in lines:\n            if \"display.scroll\" in line:\n                # Extract the content inside display.scroll()\n                match = re.search(r\"display\\.scroll\\((.*)\\)\", line)\n                if match:\n                    content = match.group(1)\n                    # Split the content by quoted strings and variables\n                    parts = re.findall(r\"('[^']*')|([^',]+)\", content)\n                    for part in parts:\n                        part = part[0] or part[1]\n                        if part.strip():\n                            processed_code += f\"display.scroll({part.strip()})\\n\"\n            else:\n                processed_code += line + \"\\n\"\n\n        # Write the processed code\n        file.write(processed_code)\n\n\n@app.route('/download_microbit_files/', methods=['GET'])\ndef convert_to_hex_and_download():\n    if MICROBIT_FEATURE:\n        flash_micro_bit()\n        current_directory = os.path.dirname(os.path.abspath(__file__))\n        micro_bit_directory = os.path.join(current_directory, 'Micro-bit')\n\n        @after_this_request\n        def remove_file(response):\n            try:\n                os.remove(\"Micro-bit/micropython.hex\")\n                os.remove(\"Micro-bit/Micro-bit.py\")\n            except BaseException:\n                print(\"Error removing one of the generated files!\")\n            return response\n\n        return send_file(os.path.join(micro_bit_directory, \"micropython.hex\"), as_attachment=True)\n    else:\n        return make_response({'message': 'Microbit feature is disabled'}, 403)\n\n\ndef flash_micro_bit():\n    subprocess.run(['uflash', \"Micro-bit/Micro-bit.py\", \"Micro-bit\"])\n\n\ndef transpile_add_stats(code, level, lang_, is_debug):\n    username = current_user()['username'] or None\n    number_of_lines = code.count('\\n')\n    try:\n        result = hedy.transpile(code, level, lang_, is_debug=is_debug)\n        statistics.add(\n            username, lambda id_: g_db().add_program_stats(id_, level, number_of_lines, None))\n        return result\n    except Exception as ex:\n        class_name = get_class_name(ex)\n        statistics.add(username, lambda id_: g_db().add_program_stats(\n            id_, level, number_of_lines, class_name))\n        raise\n\n\ndef get_class_name(i):\n    if i is not None:\n        return str(i.__class__.__name__)\n    return i\n\n\ndef hedy_error_to_response(ex):\n    keyword_lang = current_keyword_language()[\"lang\"]\n    return {\n        \"Error\": get_error_text(ex, keyword_lang),\n        \"Location\": ex.error_location\n    }\n\n\n@app.route('/report_error', methods=['POST'])\ndef report_error():\n    post_body = request.json\n\n    parse_logger.log({\n        'session': utils.session_id(),\n        'date': str(datetime.datetime.now()),\n        'level': post_body.get('level'),\n        'code': post_body.get('code'),\n        'client_error': post_body.get('client_error'),\n        'version': version(),\n        'username': current_user()['username'] or None,\n        'is_test': 1 if os.getenv('IS_TEST_ENV') else None\n    })\n\n    return 'logged'\n\n\n@app.route('/client_exception', methods=['POST'])\ndef report_client_exception():\n    post_body = request.json\n\n    querylog.log_value(\n        session=utils.session_id(),\n        date=str(datetime.datetime.now()),\n        client_error=post_body,\n        version=version(),\n        username=current_user()['username'] or None,\n        is_test=1 if os.getenv('IS_TEST_ENV') else None\n    )\n\n    # Return a 500 so the HTTP status codes will stand out in our monitoring/logging\n    return 'logged', 500\n\n\n@app.route('/version', methods=['GET'])\ndef version_page():\n    \"\"\"\n    Generate a page with some diagnostic information and a useful GitHub URL on upcoming changes.\n\n    This is an admin-only page, it does not need to be linked.\n   (Also does not have any sensitive information so it's fine to be unauthenticated).\n    \"\"\"\n    app_name = os.getenv('HEROKU_APP_NAME')\n\n    vrz = os.getenv('HEROKU_RELEASE_CREATED_AT')\n    the_date = datetime.date.fromisoformat(\n        vrz[:10]) if vrz else datetime.date.today()\n\n    commit = os.getenv('HEROKU_SLUG_COMMIT', '????')[0:6]\n\n    return render_template('version-page.html',\n                           app_name=app_name,\n                           heroku_release_time=the_date,\n                           commit=commit)\n\n\n@app.route('/commands/<id>')\ndef all_commands(id):\n    program = g_db().program_by_id(id)\n    code = program.get('code')\n    level = program.get('level')\n    lang = program.get('lang')\n    return render_template(\n        'commands.html',\n        commands=hedy.all_commands(code, level, lang))\n\n\n@app.route('/programs', methods=['GET'])\n@requires_login_redirect\ndef programs_page(user):\n    username = user['username']\n    if not username:\n        # redirect users to /login if they are not logged in\n        url = request.url.replace('/programs', '/login')\n        return redirect(url, code=302)\n\n    from_user = request.args.get('user') or None\n    if from_user and from_user == \"None\":\n        from_user = None\n\n    # If from_user -> A teacher is trying to view the user programs\n    if from_user and not is_admin(user):\n        if not is_teacher(user):\n            return utils.error_page(error=401, ui_message=gettext('not_teacher'))\n        students = g_db().get_teacher_students(username)\n        if from_user not in students:\n            return utils.error_page(error=403, ui_message=gettext('not_enrolled'))\n\n    # We request our own page -> also get the public_profile settings\n    public_profile = None\n    if not from_user:\n        public_profile = g_db().get_public_profile_settings(username)\n\n    keyword_lang = g.keyword_lang\n\n    adventure_names = hedy_content.Adventures(g.lang).get_adventure_names(keyword_lang)\n    level = request.args.get('level', default=None, type=str) or None\n    adventure = request.args.get('adventure', default=None, type=str) or None\n    page = request.args.get('page', default=None, type=str)\n    filter = request.args.get('filter', default=None, type=str)\n    submitted = True if filter == 'submitted' else None\n    if page == '':\n        page = None\n    all_programs = g_db().filtered_programs_for_user(from_user or username,\n                                                     submitted=submitted,\n                                                     pagination_token=page)\n    ids_to_fetch = []\n    # Some old programs don't have adventure_name in them, or the field is emtpy.\n    for program in all_programs:\n        if 'adventure_name' in program and program['adventure_name'] and \\\n                program['adventure_name'] not in adventure_names:\n            ids_to_fetch.append(program['adventure_name'])\n\n    # When saving a program, 'is_modified' is set to True or False\n    # But for older programs, 'is_modified' doesn't exist yet, therefore the check\n    all_programs = [program for program in all_programs if program.get('is_modified') or 'is_modified' not in program]\n\n    teacher_adventures = g_db().batch_get_adventures(ids_to_fetch)\n    for id, teacher_adventure in teacher_adventures.items():\n        if teacher_adventure is not None:\n            adventure_names[id] = teacher_adventure['name']\n    swapped_adventure_names = {value: key for key, value in adventure_names.items()}\n    result = g_db().filtered_programs_for_user(from_user or username,\n                                               level=level,\n                                               adventure=swapped_adventure_names.get(adventure),\n                                               submitted=submitted,\n                                               pagination_token=page,\n                                               limit=10)\n\n    programs = []\n    for item in result:\n        date = utils.delta_timestamp(item['date'])\n        # This way we only keep the first 4 lines to show as preview to the user\n        preview_code = \"\\n\".join(item['code'].split(\"\\n\")[:4])\n        # When saving a program, 'is_modified' is set to True or False\n        # But for older programs, 'is_modified' doesn't exist yet, therefore the check\n        if item.get('is_modified') or 'is_modified' not in item:\n            programs.append(\n                {'id': item['id'],\n                 'preview_code': preview_code,\n                 'code': item['code'],\n                 'date': date,\n                 'level': item['level'],\n                 'name': item['name'],\n                 'adventure_name': item.get('adventure_name'),\n                 'submitted': item.get('submitted'),\n                 'public': item.get('public'),\n                 'number_lines': item['code'].count('\\n') + 1\n                 }\n            )\n\n    sorted_level_programs = hedy_content.Adventures(g.lang) \\\n        .get_sorted_level_programs(all_programs, adventure_names)\n    sorted_adventure_programs = hedy_content.Adventures(g.lang) \\\n        .get_sorted_adventure_programs(all_programs, adventure_names)\n\n    next_page_url = url_for('.programs_page', **dict(request.args, page=result.next_page_token)\n                            ) if result.next_page_token else None\n    prev_page_url = url_for('.programs_page', **dict(request.args, page=result.prev_page_token)\n                            ) if result.prev_page_token else None\n\n    return render_template(\n        'programs.html',\n        programs=programs,\n        page_title=gettext('title_programs'),\n        current_page='programs',\n        from_user=from_user,\n        public_profile=public_profile,\n        sorted_level_programs=sorted_level_programs,\n        sorted_adventure_programs=sorted_adventure_programs,\n        adventure_names=adventure_names,\n        max_level=hedy.HEDY_MAX_LEVEL,\n        next_page_url=next_page_url,\n        prev_page_url=prev_page_url,\n        second_teachers_programs=False,\n        user_program_count=len(programs))\n\n\n@app.route('/logs/query', methods=['POST'])\ndef query_logs():\n    user = current_user()\n    if not is_admin(user) and not is_teacher(user):\n        return utils.error_page(error=401, ui_message=gettext('unauthorized'))\n\n    body = request.json\n    if body is not None and not isinstance(body, dict):\n        return 'body must be an object', 400\n\n    class_id = body.get('class_id')\n    if not is_admin(user):\n        username_filter = body.get('username')\n        if not class_id or not username_filter:\n            return utils.error_page(error=401, ui_message=gettext('unauthorized'))\n\n        class_ = g_db().get_class(class_id)\n        if not class_ or class_['teacher'] != user['username'] or username_filter not in class_.get('students', [\n        ]):\n            return utils.error_page(error=401, ui_message=gettext('unauthorized'))\n\n    (exec_id, status) = log_fetcher.query(body)\n    response = {'query_status': status, 'query_execution_id': exec_id}\n    return make_response(response, 200)\n\n\n@app.route('/logs/results', methods=['GET'])\ndef get_log_results():\n    query_execution_id = request.args.get(\n        'query_execution_id', default=None, type=str)\n    next_token = request.args.get('next_token', default=None, type=str)\n\n    user = current_user()\n    if not is_admin(user) and not is_teacher(user):\n        return utils.error_page(error=401, ui_message=gettext('unauthorized'))\n\n    data, next_token = log_fetcher.get_query_results(\n        query_execution_id, next_token)\n    response = {'data': data, 'next_token': next_token}\n    return make_response(response, 200)\n\n\n@app.route('/tutorial', methods=['GET'])\ndef tutorial_index():\n    if not current_user()['username']:\n        return redirect('/login')\n    level = 1\n    cheatsheet = COMMANDS[g.lang].get_commands_for_level(level, g.keyword_lang)\n    commands = hedy.commands_per_level.get(level)\n    adventures = load_adventures_for_level(level)\n    parsons = len(PARSONS[g.lang].get_parsons_data_for_level(level))\n    initial_tab = adventures[0].short_name\n    initial_adventure = adventures[0]\n\n    max_level = hedy.HEDY_MAX_LEVEL  # do we need to fetch the max level per language?\n\n    return render_template(\n        \"code-page.html\",\n        intro_tutorial=True,\n        next_level=2,\n        level_nr=str(level),\n        level=str(level),\n        adventures=adventures,\n        initial_tab=initial_tab,\n        commands=commands,\n        quiz=True,\n        max_level=max_level,\n        parsons=True if parsons else False,\n        parsons_exercises=parsons,\n        initial_adventure=initial_adventure,\n        cheatsheet=cheatsheet,\n        blur_button_available=False,\n        current_user_is_in_class=len(current_user().get('classes') or []) > 0,\n        # See initialize.ts\n        javascript_page_options=dict(\n            page='code',\n            level=level,\n            lang=g.lang,\n            adventures=adventures,\n            initial_tab=initial_tab,\n            current_user_name=current_user()['username'],\n            start_tutorial=True,\n        ))\n\n\n@app.route('/teacher-tutorial', methods=['GET'])\n@requires_teacher\ndef teacher_tutorial(user):\n    teacher_classes = g_db().get_teacher_classes(user['username'], True)\n    adventures = []\n    for adventure in g_db().get_teacher_adventures(user['username']):\n        adventures.append(\n            {'id': adventure.get('id'),\n             'name': adventure.get('name'),\n             'date': utils.localized_date_format(adventure.get('date')),\n             'level': adventure.get('level')\n             }\n        )\n\n    return render_template('for-teachers.html', current_page='my-profile',\n                           page_title=gettext('title_for-teacher'),\n                           teacher_classes=teacher_classes,\n                           teacher_adventures=adventures,\n                           tutorial=True,\n                           content=hedyweb.PageTranslations('for-teachers').get_page_translations(g.lang),\n                           javascript_page_options=dict(\n                               page='for-teachers',\n                               tutorial=True,\n                           ))\n\n\n# routing to index.html\n\n\n@app.route('/hour-of-code/<int:level>', methods=['GET'])\n@app.route('/hour-of-code', methods=['GET'], defaults={'level': 1})\ndef hour_of_code(level, program_id=None):\n    try:\n        level = int(level)\n        if level < 1 or level > hedy.HEDY_MAX_LEVEL:\n            return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n    except BaseException:\n        return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n\n    loaded_program = None\n    if program_id:\n        result = g_db().program_by_id(program_id)\n        if not result or not get_current_user_program_permissions(result):\n            return utils.error_page(error=404, ui_message=gettext('no_such_program'))\n\n        loaded_program = Program.from_database_row(result)\n\n    subset = [adv.strip() for adv in request.args.get(\"subset\", \"\").strip().split(\",\")]\n    subset = subset if subset[0] else HOUR_OF_CODE_ADVENTURES[level]\n    adventures = load_adventures_for_level(level, subset=subset)\n\n    if not adventures:\n        return utils.error_page(error=404, ui_message=gettext(\"no_such_adventure\"))\n\n    # Initially all levels are available -> strip those for which conditions\n    # are not met or not available yet\n    available_levels = list(range(1, hedy.HEDY_MAX_LEVEL + 1))\n\n    customizations = {}\n    if current_user()['username']:\n        customizations = g_db().get_student_class_customizations(current_user()['username'])\n\n    if 'levels' in customizations:\n        available_levels = customizations['levels']\n        now = timems()\n        for current_level, timestamp in customizations.get('opening_dates', {}).items():\n            if utils.datetotimeordate(timestamp) > utils.datetotimeordate(utils.mstoisostring(now)):\n                try:\n                    available_levels.remove(int(current_level))\n                except BaseException:\n                    print(\"Error: there is an openings date without a level\")\n\n    if 'levels' in customizations and level not in available_levels:\n        if available_levels:\n            return index(available_levels[0], program_id)\n        return utils.error_page(error=403, ui_message=gettext('level_not_class'))\n\n    # At this point we can have the following scenario:\n    # - The level is allowed and available\n    # - But, if there is a quiz threshold we have to check again if the user has reached it\n\n    if 'level_thresholds' in customizations:\n        if 'quiz' in customizations.get('level_thresholds'):\n            # Temporary store the threshold\n            threshold = customizations.get('level_thresholds').get('quiz')\n            # Get the max quiz score of the user in the previous level\n            # A bit out-of-scope, but we want to enable the next level button directly after finishing the quiz\n            # Todo: How can we fix this without a re-load?\n            quiz_stats = g_db().get_quiz_stats([current_user()['username']])\n            # Only check the quiz threshold if there is a quiz to obtain a score on the previous level\n            if level - 1 in available_levels and level > 1 and QUIZZES[g.lang].get_quiz_data_for_level(level - 1):\n                scores = [x.get('scores', []) for x in quiz_stats if x.get('level') == level - 1]\n                scores = [score for week_scores in scores for score in week_scores]\n                max_score = 0 if len(scores) < 1 else max(scores)\n                if max_score < threshold:\n                    return utils.error_page(\n                        error=403, ui_message=gettext('quiz_threshold_not_reached'))\n\n            # We also have to check if the next level should be removed from the available_levels\n            # Only check the quiz threshold if there is a quiz to obtain a score on the current level\n            if level < hedy.HEDY_MAX_LEVEL and QUIZZES[g.lang].get_quiz_data_for_level(level):\n                scores = [x.get('scores', []) for x in quiz_stats if x.get('level') == level]\n                scores = [score for week_scores in scores for score in week_scores]\n                max_score = 0 if len(scores) < 1 else max(scores)\n                # We don't have the score yet for the next level -> remove all upcoming\n                # levels from 'available_levels'\n                if max_score < threshold:\n                    # if this level is currently available, but score is below max score\n                    customizations[\"below_threshold\"] = (level + 1 in available_levels)\n                    available_levels = available_levels[:available_levels.index(level) + 1]\n\n    # Add the available levels to the customizations dict -> simplify\n    # implementation on the front-end\n    customizations['available_levels'] = available_levels\n    cheatsheet = COMMANDS[g.lang].get_commands_for_level(level, g.keyword_lang)\n\n    load_customized_adventures(level, customizations, adventures)\n    load_saved_programs(level, adventures, loaded_program)\n    initial_tab = adventures[0].short_name\n\n    if loaded_program:\n        # Make sure that there is an adventure(/tab) for a loaded program, otherwise make one\n        initial_tab = loaded_program.adventure_name\n        if not any(a.short_name == loaded_program.adventure_name for a in adventures):\n            adventures.append(Adventure(\n                short_name=loaded_program.adventure_name,\n                # This is not great but we got nothing better :)\n                name=gettext('your_program'),\n                text='',\n                example_code='',\n                editor_contents=loaded_program.code,\n                save_name=loaded_program.name,\n                is_teacher_adventure=False,\n                is_command_adventure=loaded_program.adventure_name in KEYWORDS_ADVENTURES\n            ))\n\n    adventures_map = {a.short_name: a for a in adventures}\n\n    enforce_developers_mode = False\n    if 'other_settings' in customizations and 'developers_mode' in customizations['other_settings']:\n        enforce_developers_mode = True\n\n    hide_cheatsheet = False\n    if 'other_settings' in customizations and 'hide_cheatsheet' in customizations['other_settings']:\n        hide_cheatsheet = True\n\n    quiz = True if QUIZZES[g.lang].get_quiz_data_for_level(level) else False\n    tutorial = True if TUTORIALS[g.lang].get_tutorial_for_level(level) else False\n\n    quiz_questions = 0\n\n    if quiz:\n        quiz_questions = len(QUIZZES[g.lang].get_quiz_data_for_level(level))\n\n    if 'other_settings' in customizations and 'hide_quiz' in customizations['other_settings']:\n        quiz = False\n\n    max_level = hedy.HEDY_MAX_LEVEL\n    level_number = int(level)\n    prev_level, next_level = utils.find_prev_next_levels(\n        list(available_levels), level_number)\n\n    commands = hedy.commands_per_level.get(level)\n    return render_template(\n        \"code-page.html\",\n        level_nr=str(level_number),\n        level=level_number,\n        current_page='Hour of Code',\n        max_level=max_level,\n        prev_level=prev_level,\n        next_level=next_level,\n        HOC_tracking_pixel=True,\n        customizations=customizations,\n        hide_cheatsheet=hide_cheatsheet,\n        enforce_developers_mode=enforce_developers_mode,\n        loaded_program=loaded_program,\n        adventures=adventures,\n        initial_tab=initial_tab,\n        commands=commands,\n        # parsons=parsons,\n        # parsons_exercises=parson_exercises,\n        tutorial=tutorial,\n        latest=version(),\n        quiz=quiz,\n        quiz_questions=quiz_questions,\n        cheatsheet=cheatsheet,\n        blur_button_available=False,\n        initial_adventure=adventures_map[initial_tab],\n        current_user_is_in_class=len(current_user().get('classes') or []) > 0,\n        # See initialize.ts\n        javascript_page_options=dict(\n            page='code',\n            level=level_number,\n            lang=g.lang,\n            adventures=adventures,\n            initial_tab=initial_tab,\n            current_user_name=current_user()['username'],\n            enforce_developers_mode=enforce_developers_mode,\n        ))\n\n\n# routing to index.html\n\n\n@app.route('/ontrack', methods=['GET'], defaults={'level': '1', 'program_id': None})\n@app.route('/onlinemasters', methods=['GET'], defaults={'level': '1', 'program_id': None})\n@app.route('/onlinemasters/<int:level>', methods=['GET'], defaults={'program_id': None})\n@app.route('/hedy', methods=['GET'], defaults={'program_id': None, 'level': '1'})\n@app.route('/hedy/<int:level>', methods=['GET'], defaults={'program_id': None})\n@app.route('/hedy/<int:level>/<program_id>', methods=['GET'])\ndef index(level, program_id):\n    try:\n        level = int(level)\n        if level < 1 or level > hedy.HEDY_MAX_LEVEL:\n            return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n    except BaseException:\n        return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n\n    loaded_program = None\n    if program_id:\n        result = g_db().program_by_id(program_id)\n        if not result or not get_current_user_program_permissions(result):\n            return utils.error_page(error=404, ui_message=gettext('no_such_program'))\n\n        loaded_program = Program.from_database_row(result)\n\n    # Initially all levels are available -> strip those for which conditions\n    # are not met or not available yet\n    available_levels = list(range(1, hedy.HEDY_MAX_LEVEL + 1))\n\n    customizations = {}\n    if current_user()['username']:\n        # class_to_preview is for teachers to preview a class they own\n        customizations = g_db().get_student_class_customizations(\n            current_user()['username'], class_to_preview=session.get(\"preview_class\", {}).get(\"id\"))\n\n    if 'levels' in customizations:\n        available_levels = customizations['levels']\n        now = timems()\n        for current_level, timestamp in customizations.get('opening_dates', {}).items():\n            if utils.datetotimeordate(timestamp) > utils.datetotimeordate(utils.mstoisostring(now)):\n                try:\n                    available_levels.remove(int(current_level))\n                except BaseException:\n                    print(\"Error: there is an openings date without a level\")\n\n    if 'levels' in customizations and level not in available_levels:\n        if available_levels:\n            return index(available_levels[0], program_id)\n        return utils.error_page(error=403, ui_message=gettext('level_not_class'))\n\n    # At this point we can have the following scenario:\n    # - The level is allowed and available\n    # - But, if there is a quiz threshold we have to check again if the user has reached it\n    if 'level_thresholds' in customizations:\n        # If quiz in level and in some of the previous levels, then we check the threshold level.\n        check_threshold = 'other_settings' in customizations and 'hide_quiz' not in customizations['other_settings']\n\n        if check_threshold and 'quiz' in customizations.get('level_thresholds'):\n\n            # Temporary store the threshold\n            threshold = customizations.get('level_thresholds').get('quiz')\n            level_quiz_data = QUIZZES[g.lang].get_quiz_data_for_level(level)\n            # Get the max quiz score of the user in the previous level\n            # A bit out-of-scope, but we want to enable the next level button directly after finishing the quiz\n            # Todo: How can we fix this without a re-load?\n            quiz_stats = g_db().get_quiz_stats([current_user()['username']])\n\n            previous_quiz_level = level\n            for _prev_level in range(level - 1, 0, -1):\n                if _prev_level in available_levels and \\\n                        customizations[\"sorted_adventures\"][str(_prev_level)][-1].get(\"name\") == \"quiz\" and \\\n                        not any(x.get(\"scores\") for x in quiz_stats if x.get(\"level\") == _prev_level):\n                    previous_quiz_level = _prev_level\n                    break\n\n            # Not current leve-quiz's data because some levels may have no data for quizes,\n            # but we still need to check for the threshold.\n            if level - 1 in available_levels and level > 1 and \\\n                    (not level_quiz_data or QUIZZES[g.lang].get_quiz_data_for_level(level - 1)):\n\n                # Only if we have found a quiz in previous levels with quiz data, we check the threshold.\n                if previous_quiz_level < level:\n                    # scores = [x.get('scores', []) for x in quiz_stats if x.get('level') == level - 1]\n                    scores = [x.get('scores', []) for x in quiz_stats if x.get('level') == previous_quiz_level]\n                    scores = [score for week_scores in scores for score in week_scores]\n                    max_score = 0 if len(scores) < 1 else max(scores)\n                    if max_score < threshold:\n                        # Instead of sending this level isn't available, we could send them to the right level?!\n                        # return redirect(f\"/hedy/{previous_quiz_level}\")\n                        return utils.error_page(\n                            error=403, ui_message=gettext('quiz_threshold_not_reached'))\n\n            # We also have to check if the next level should be removed from the available_levels\n            # Only check the quiz threshold if there is a quiz to obtain a score on the current level\n            if level <= hedy.HEDY_MAX_LEVEL and level_quiz_data:\n                next_level_with_quiz = level - 1\n                for _next_level in range(level, hedy.HEDY_MAX_LEVEL):\n                    # find the next level whose quiz isn't answered.\n                    if _next_level in available_levels and \\\n                            customizations[\"sorted_adventures\"][str(_next_level)][-1].get(\"name\") == \"quiz\" and \\\n                            not any(x.get(\"scores\") for x in quiz_stats if x.get(\"level\") == _next_level):\n                        next_level_with_quiz = _next_level\n                        break\n\n                # If the next quiz is in the current or upcoming level,\n                # we attempt to adjust available levels beginning from that level.\n                # e.g., student2 completed quiz 2, levels 3,4 and 5 have not quizes, 6 does.\n                # We should start from that level. If next_level_with_quiz >= level,\n                # meaning we don't need to adjust available levels ~ all available/quizes done!\n                if next_level_with_quiz >= level:\n                    scores = [x.get('scores', []) for x in quiz_stats if x.get('level') == next_level_with_quiz]\n                    scores = [score for week_scores in scores for score in week_scores]\n                    max_score = 0 if len(scores) < 1 else max(scores)\n                    # We don't have the score yet for the next level -> remove all upcoming\n                    # levels from 'available_levels'\n                    if max_score < threshold:\n                        # if this level is currently available, but score is below max score\n                        customizations[\"below_threshold\"] = (next_level_with_quiz + 1 in available_levels)\n                        available_levels = available_levels[:available_levels.index(next_level_with_quiz) + 1]\n\n    # Add the available levels to the customizations dict -> simplify\n    # implementation on the front-end\n    customizations['available_levels'] = available_levels\n    cheatsheet = COMMANDS[g.lang].get_commands_for_level(level, g.keyword_lang)\n\n    adventures = load_adventures_for_level(level)\n    load_customized_adventures(level, customizations, adventures)\n    load_saved_programs(level, adventures, loaded_program)\n    adventures_for_index = load_all_adventures_for_index(customizations)\n    initial_tab = adventures[0].short_name\n\n    if loaded_program:\n        # Make sure that there is an adventure(/tab) for a loaded program, otherwise make one\n        initial_tab = loaded_program.adventure_name\n        if not any(a.short_name == loaded_program.adventure_name for a in adventures):\n            adventures.append(Adventure(\n                short_name=loaded_program.adventure_name,\n                # This is not great but we got nothing better :)\n                name=gettext('your_program'),\n                text='',\n                example_code='',\n                editor_contents=loaded_program.code,\n                save_name=loaded_program.name,\n                is_teacher_adventure=False,\n                is_command_adventure=loaded_program.adventure_name in KEYWORDS_ADVENTURES\n            ))\n\n    adventures_map = {a.short_name: a for a in adventures}\n\n    enforce_developers_mode = False\n    if 'other_settings' in customizations and 'developers_mode' in customizations['other_settings']:\n        enforce_developers_mode = True\n    hide_cheatsheet = False\n    if 'other_settings' in customizations and 'hide_cheatsheet' in customizations['other_settings']:\n        hide_cheatsheet = True\n\n    parsons = True if PARSONS[g.lang].get_parsons_data_for_level(level) else False\n    quiz = True if QUIZZES[g.lang].get_quiz_data_for_level(level) else False\n    tutorial = True if TUTORIALS[g.lang].get_tutorial_for_level(level) else False\n\n    quiz_questions = 0\n    parson_exercises = 0\n\n    if quiz:\n        quiz_questions = len(QUIZZES[g.lang].get_quiz_data_for_level(level))\n    if parsons:\n        parson_exercises = len(PARSONS[g.lang].get_parsons_data_for_level(level))\n\n    parsons_hidden = 'other_settings' in customizations and 'hide_parsons' in customizations['other_settings']\n    quizzes_hidden = 'other_settings' in customizations and 'hide_quiz' in customizations['other_settings']\n\n    if customizations:\n        g_for_teachers().migrate_quizzes_parsons_tabs(customizations, parsons_hidden, quizzes_hidden)\n\n    parsons_in_level = True\n    quiz_in_level = True\n    if customizations.get(\"sorted_adventures\") and\\\n            len(customizations.get(\"sorted_adventures\", {str(level): []})[str(level)]) > 2:\n        last_two_adv_names = [adv[\"name\"] for adv in customizations[\"sorted_adventures\"][str(level)][-2:]]\n        parsons_in_level = \"parsons\" in last_two_adv_names\n        quiz_in_level = \"quiz\" in last_two_adv_names\n\n    if not parsons_in_level or parsons_hidden:\n        parsons = False\n    if not quiz_in_level or quizzes_hidden:\n        quiz = False\n\n    max_level = hedy.HEDY_MAX_LEVEL\n    level_number = int(level)\n    prev_level, next_level = utils.find_prev_next_levels(\n        list(available_levels), level_number)\n\n    completed = 0\n    for i, adventure in enumerate(adventures):\n        if adventure.save_info:\n            completed = i\n    commands = hedy.commands_per_level.get(level)\n    return render_template(\n        \"code-page.html\",\n        level_nr=str(level_number),\n        level=level_number,\n        current_page='hedy',\n        max_level=max_level,\n        prev_level=prev_level,\n        next_level=next_level,\n        customizations=customizations,\n        hide_cheatsheet=hide_cheatsheet,\n        enforce_developers_mode=enforce_developers_mode,\n        loaded_program=loaded_program,\n        adventures=adventures,\n        initial_tab=initial_tab,\n        commands=commands,\n        parsons=parsons,\n        parsons_exercises=parson_exercises,\n        tutorial=tutorial,\n        latest=version(),\n        quiz=quiz,\n        quiz_questions=quiz_questions,\n        cheatsheet=cheatsheet,\n        progress={'completed': completed, 'total': len(adventures)},\n        blur_button_available=False,\n        initial_adventure=adventures_map[initial_tab],\n        current_user_is_in_class=len(current_user().get('classes') or []) > 0,\n        microbit_feature=MICROBIT_FEATURE,\n        adventures_for_index=adventures_for_index,\n        # See initialize.ts\n        javascript_page_options=dict(\n            enforce_developers_mode=enforce_developers_mode,\n            page='code',  # change to tryit\n            level=level_number,\n            lang=g.lang,\n            adventures=adventures,\n            initial_tab=initial_tab,\n            current_user_name=current_user()['username'],\n        ))\n\n\n@app.route('/tryit', methods=['GET'], defaults={'program_id': None, 'level': '1'})\n@app.route('/tryit/<int:level>', methods=['GET'], defaults={'program_id': None})\n@app.route('/tryit/<int:level>/<program_id>', methods=['GET'])\ndef tryit(level, program_id):\n    try:\n        level = int(level)\n        if level < 1 or level > hedy.HEDY_MAX_LEVEL:\n            return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n    except BaseException:\n        return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n\n    loaded_program = None\n    if program_id:\n        result = g_db().program_by_id(program_id)\n        if not result or not get_current_user_program_permissions(result):\n            return utils.error_page(error=404, ui_message=gettext('no_such_program'))\n\n        loaded_program = Program.from_database_row(result)\n\n    # Initially all levels are available -> strip those for which conditions\n    # are not met or not available yet\n    available_levels = list(range(1, hedy.HEDY_MAX_LEVEL + 1))\n\n    customizations = {}\n    if current_user()['username']:\n        # class_to_preview is for teachers to preview a class they own\n        customizations = g_db().get_student_class_customizations(\n            current_user()['username'], class_to_preview=session.get(\"preview_class\", {}).get(\"id\"))\n\n    if 'levels' in customizations:\n        available_levels = customizations['levels']\n        now = timems()\n        for current_level, timestamp in customizations.get('opening_dates', {}).items():\n            if utils.datetotimeordate(timestamp) > utils.datetotimeordate(utils.mstoisostring(now)):\n                try:\n                    available_levels.remove(int(current_level))\n                except BaseException:\n                    print(\"Error: there is an openings date without a level\")\n\n    if 'levels' in customizations and level not in available_levels:\n        if available_levels:\n            return index(available_levels[0], program_id)\n        return utils.error_page(error=403, ui_message=gettext('level_not_class'))\n\n    # At this point we can have the following scenario:\n    # - The level is allowed and available\n    # - But, if there is a quiz threshold we have to check again if the user has reached it\n    if 'level_thresholds' in customizations:\n        # If quiz in level and in some of the previous levels, then we check the threshold level.\n        check_threshold = 'other_settings' in customizations and 'hide_quiz' not in customizations['other_settings']\n\n        if check_threshold and 'quiz' in customizations.get('level_thresholds'):\n\n            # Temporary store the threshold\n            threshold = customizations.get('level_thresholds').get('quiz')\n            level_quiz_data = QUIZZES[g.lang].get_quiz_data_for_level(level)\n            # Get the max quiz score of the user in the previous level\n            # A bit out-of-scope, but we want to enable the next level button directly after finishing the quiz\n            # Todo: How can we fix this without a re-load?\n            quiz_stats = g_db().get_quiz_stats([current_user()['username']])\n\n            previous_quiz_level = level\n            for _prev_level in range(level - 1, 0, -1):\n                if _prev_level in available_levels and \\\n                        customizations[\"sorted_adventures\"][str(_prev_level)][-1].get(\"name\") == \"quiz\" and \\\n                        not any(x.get(\"scores\") for x in quiz_stats if x.get(\"level\") == _prev_level):\n                    previous_quiz_level = _prev_level\n                    break\n\n            # Not current leve-quiz's data because some levels may have no data for quizes,\n            # but we still need to check for the threshold.\n            if level - 1 in available_levels and level > 1 and \\\n                    (not level_quiz_data or QUIZZES[g.lang].get_quiz_data_for_level(level - 1)):\n\n                # Only if we have found a quiz in previous levels with quiz data, we check the threshold.\n                if previous_quiz_level < level:\n                    # scores = [x.get('scores', []) for x in quiz_stats if x.get('level') == level - 1]\n                    scores = [x.get('scores', []) for x in quiz_stats if x.get('level') == previous_quiz_level]\n                    scores = [score for week_scores in scores for score in week_scores]\n                    max_score = 0 if len(scores) < 1 else max(scores)\n                    if max_score < threshold:\n                        # Instead of sending this level isn't available, we could send them to the right level?!\n                        # return redirect(f\"/hedy/{previous_quiz_level}\")\n                        return utils.error_page(\n                            error=403, ui_message=gettext('quiz_threshold_not_reached'))\n\n            # We also have to check if the next level should be removed from the available_levels\n            # Only check the quiz threshold if there is a quiz to obtain a score on the current level\n            if level <= hedy.HEDY_MAX_LEVEL and level_quiz_data:\n                next_level_with_quiz = level - 1\n                for _next_level in range(level, hedy.HEDY_MAX_LEVEL):\n                    # find the next level whose quiz isn't answered.\n                    if _next_level in available_levels and \\\n                            customizations[\"sorted_adventures\"][str(_next_level)][-1].get(\"name\") == \"quiz\" and \\\n                            not any(x.get(\"scores\") for x in quiz_stats if x.get(\"level\") == _next_level):\n                        next_level_with_quiz = _next_level\n                        break\n\n                # If the next quiz is in the current or upcoming level,\n                # we attempt to adjust available levels beginning from that level.\n                # e.g., student2 completed quiz 2, levels 3,4 and 5 have not quizes, 6 does.\n                # We should start from that level. If next_level_with_quiz >= level,\n                # meaning we don't need to adjust available levels ~ all available/quizes done!\n                if next_level_with_quiz >= level:\n                    scores = [x.get('scores', []) for x in quiz_stats if x.get('level') == next_level_with_quiz]\n                    scores = [score for week_scores in scores for score in week_scores]\n                    max_score = 0 if len(scores) < 1 else max(scores)\n                    # We don't have the score yet for the next level -> remove all upcoming\n                    # levels from 'available_levels'\n                    if max_score < threshold:\n                        # if this level is currently available, but score is below max score\n                        customizations[\"below_threshold\"] = (next_level_with_quiz + 1 in available_levels)\n                        available_levels = available_levels[:available_levels.index(next_level_with_quiz) + 1]\n\n    # Add the available levels to the customizations dict -> simplify\n    # implementation on the front-end\n    customizations['available_levels'] = available_levels\n    cheatsheet = COMMANDS[g.lang].get_commands_for_level(level, g.keyword_lang)\n\n    adventures = load_adventures_for_level(level)\n    load_customized_adventures(level, customizations, adventures)\n    load_saved_programs(level, adventures, loaded_program)\n    adventures_for_index = load_all_adventures_for_index(customizations)\n    initial_tab = adventures[0].short_name\n\n    if loaded_program:\n        # Make sure that there is an adventure(/tab) for a loaded program, otherwise make one\n        initial_tab = loaded_program.adventure_name\n        if not any(a.short_name == loaded_program.adventure_name for a in adventures):\n            adventures.append(Adventure(\n                short_name=loaded_program.adventure_name,\n                # This is not great but we got nothing better :)\n                name=gettext('your_program'),\n                text='',\n                example_code='',\n                editor_contents=loaded_program.code,\n                save_name=loaded_program.name,\n                is_teacher_adventure=False,\n                is_command_adventure=loaded_program.adventure_name in KEYWORDS_ADVENTURES\n            ))\n\n    adventures_map = {a.short_name: a for a in adventures}\n\n    enforce_developers_mode = False\n    if 'other_settings' in customizations and 'developers_mode' in customizations['other_settings']:\n        enforce_developers_mode = True\n    hide_cheatsheet = False\n    if 'other_settings' in customizations and 'hide_cheatsheet' in customizations['other_settings']:\n        hide_cheatsheet = True\n\n    parsons = True if PARSONS[g.lang].get_parsons_data_for_level(level) else False\n    quiz = True if QUIZZES[g.lang].get_quiz_data_for_level(level) else False\n    tutorial = True if TUTORIALS[g.lang].get_tutorial_for_level(level) else False\n\n    quiz_questions = 0\n    parson_exercises = 0\n\n    if quiz:\n        quiz_questions = len(QUIZZES[g.lang].get_quiz_data_for_level(level))\n    if parsons:\n        parson_exercises = len(PARSONS[g.lang].get_parsons_data_for_level(level))\n\n    parsons_hidden = 'other_settings' in customizations and 'hide_parsons' in customizations['other_settings']\n    quizzes_hidden = 'other_settings' in customizations and 'hide_quiz' in customizations['other_settings']\n\n    if customizations:\n        g_for_teachers().migrate_quizzes_parsons_tabs(customizations, parsons_hidden, quizzes_hidden)\n\n    parsons_in_level = True\n    quiz_in_level = True\n    if customizations.get(\"sorted_adventures\") and\\\n            len(customizations.get(\"sorted_adventures\", {str(level): []})[str(level)]) > 2:\n        last_two_adv_names = [adv[\"name\"] for adv in customizations[\"sorted_adventures\"][str(level)][-2:]]\n        parsons_in_level = \"parsons\" in last_two_adv_names\n        quiz_in_level = \"quiz\" in last_two_adv_names\n\n    if not parsons_in_level or parsons_hidden:\n        parsons = False\n    if not quiz_in_level or quizzes_hidden:\n        quiz = False\n\n    max_level = hedy.HEDY_MAX_LEVEL\n    level_number = int(level)\n    prev_level, next_level = utils.find_prev_next_levels(\n        list(available_levels), level_number)\n\n    completed = 0\n    for i, adventure in enumerate(adventures):\n        if adventure.save_info:\n            completed = i\n    commands = hedy.commands_per_level.get(level)\n    return render_template(\n        \"hedy-page/code-page.html\",\n        level_nr=str(level_number),\n        level=level_number,\n        current_page='tryit',\n        max_level=max_level,\n        prev_level=prev_level,\n        next_level=next_level,\n        customizations=customizations,\n        hide_cheatsheet=hide_cheatsheet,\n        enforce_developers_mode=enforce_developers_mode,\n        loaded_program=loaded_program,\n        adventures=adventures,\n        initial_tab=initial_tab,\n        commands=commands,\n        parsons=parsons,\n        parsons_exercises=parson_exercises,\n        tutorial=tutorial,\n        latest=version(),\n        quiz=quiz,\n        quiz_questions=quiz_questions,\n        cheatsheet=cheatsheet,\n        progress={'completed': completed, 'total': len(adventures)},\n        blur_button_available=False,\n        initial_adventure=adventures_map[initial_tab],\n        current_user_is_in_class=len(current_user().get('classes') or []) > 0,\n        microbit_feature=MICROBIT_FEATURE,\n        adventures_for_index=adventures_for_index,\n        # See initialize.ts\n        javascript_page_options=dict(\n            enforce_developers_mode=enforce_developers_mode,\n            page='tryit',\n            level=level_number,\n            lang=g.lang,\n            adventures=adventures,\n            initial_tab=initial_tab,\n            current_user_name=current_user()['username'],\n        ))\n\n\n@app.route('/hedy', methods=['GET'])\ndef index_level():\n    if current_user()['username']:\n        highest_quiz = get_highest_quiz_level(current_user()['username'])\n        # This function returns the character '-' in case there are no finished quizes\n        if highest_quiz == '-':\n            level_rendered = 1\n        elif highest_quiz == hedy.HEDY_MAX_LEVEL:\n            level_rendered = hedy.HEDY_MAX_LEVEL\n        else:\n            level_rendered = highest_quiz + 1\n        return index(level_rendered, None)\n    else:\n        return index(1, None)\n\n\n@app.route('/hedy/<id>/view', methods=['GET'])\n@requires_login\ndef view_program(user, id):\n    result = g_db().program_by_id(id)\n\n    prog_perms = get_current_user_program_permissions(result)\n    if not result or not prog_perms:\n        return utils.error_page(error=404, ui_message=gettext('no_such_program'))\n\n    # The program is valid, verify if the creator also have a public profile\n    result['public_profile'] = True if g_db().get_public_profile_settings(\n        result['username']) else None\n\n    code = result['code']\n    level = int(result.get('level', 1))\n\n    # Try to translate the program from the language of the program to the language of the viewer\n    #\n    # - We do this in 2 steps: first translate from the source language to English,\n    #   then from English to the target language. There must be a reason for this, but I don't\n    #   know what it is.\n    # - In the past we used to do this \"normalization via English\" step for every program,\n    #   even if we would end up translating nl -> nl. I don't know if that was for a particular\n    #   reason but I've changed it to only do the translation if the source and target languages\n    #   are different.\n    # - Translation may fail, because it requires parsing the program and the program\n    #   may be syntactically invalid (missing indentation, programming mistakes, etc). Or it\n    #   may contain blanks, which will always yield an unparseable program.\n    # - We don't currently have a way to surface this error to the user. I don't know if\n    #   that matters.\n    source_language = result.get(\"lang\")\n    target_language = g.keyword_lang\n    if source_language != target_language and source_language in ALL_KEYWORD_LANGUAGES.keys():\n        try:\n            code = hedy_translation.translate_keywords(\n                code, from_lang=source_language, to_lang=target_language, level=level)\n        except Exception as e:\n            # Not really a good place to leave this error, but at least we don't\n            # want it crashing the page load. Log it as a warning then.\n            logger.warning(f\"Error translating program {id} from {source_language} to {target_language}: {e}\")\n\n    result['code'] = code\n    student_adventure_id = f\"{result['username']}-{result['adventure_name']}-{result['level']}\"\n    student_adventure = g_db().student_adventure_by_id(student_adventure_id)\n    if not student_adventure:\n        # store the adventure in case it's not in the table\n        student_adventure = g_db().store_student_adventure(\n            dict(id=f\"{student_adventure_id}\", ticked=False, program_id=id))\n\n    arguments_dict = {\n        'program_id': id,\n        'page_title': f'{result[\"name\"]} – Hedy',\n        'level': result['level'],  # Necessary for running\n        'initial_adventure': dict(result, editor_contents=code),\n        'editor_readonly': True,\n        'student_adventure': student_adventure,\n        'is_students_teacher': False\n    }\n\n    if \"submitted\" in result and result['submitted']:\n        arguments_dict['show_edit_button'] = False\n        arguments_dict['program_timestamp'] = utils.localized_date_format(result['date'])\n    else:\n        arguments_dict['show_edit_button'] = True\n\n    classes = g_db().get_student_classes_ids(result['username'])\n    next_classmate_adventure_id = None\n    if classes:\n        class_id = classes[0]\n        class_ = g_db().get_class(class_id) or {}\n        students = sorted(class_.get('students', []))\n        index = students.index(result['username'])\n        for student in students[index + 1:]:\n            id = f\"{student}-{result['adventure_name']}-{result['level']}\"\n            next_classmate_adventure = g_db().student_adventure_by_id(id) or {}\n            next_classmate_adventure_id = next_classmate_adventure.get('program_id')\n            if next_classmate_adventure_id:\n                break\n\n    student_customizations = g_db().get_student_class_customizations(result['username'])\n    adventure_index = 0\n    adventures_for_this_level = student_customizations.get('sorted_adventures', {}).get(str(result['level']), [])\n    for index, adventure in enumerate(adventures_for_this_level):\n        if adventure['name'] == result['adventure_name']:\n            adventure_index = index\n            break\n\n    next_program_id = None\n    for i in range(adventure_index + 1, len(adventures_for_this_level)):\n        next_adventure = adventures_for_this_level[i]\n        next_adventure_id = f\"{result['username']}-{next_adventure['name']}-{result['level']}\"\n        next_student_adventure = g_db().student_adventure_by_id(next_adventure_id) or {}\n        next_program_id = next_student_adventure.get('program_id')\n        if next_program_id:\n            break\n\n    arguments_dict['can_checkoff_program'] = prog_perms.can_checkoff\n    arguments_dict['can_unsubmit_program'] = prog_perms.can_unsubmit\n\n    return render_template(\"view-program-page.html\",\n                           blur_button_available=True,\n                           javascript_page_options=dict(\n                               page='view-program',\n                               lang=g.lang,\n                               level=int(result['level']),\n                               code=code),\n                           class_id=student_customizations.get('id'),\n                           next_program_id=next_program_id,\n                           next_classmate_program_id=next_classmate_adventure_id,\n                           **arguments_dict)\n\n\n@app.route('/render_code/<level>/', methods=['GET'])\ndef render_code_in_editor(level):\n    code = request.args['code']\n\n    try:\n        level = int(level)\n        if level == 0:  # in level 0, the intro slides, we use codes from level 1\n            level = 1\n    except BaseException:\n        return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n\n    if session.get(\"previous_keyword_lang\"):\n        code = hedy_translation.translate_keywords(\n            code, session[\"previous_keyword_lang\"], g.keyword_lang, level=int(level))\n\n    a = Adventure(\n        short_name='start',\n        name='start',\n        text='start',\n        save_name='start',\n        editor_contents=code)\n    adventures = [a]\n\n    return render_template(\"code-page.html\",\n                           specific_adventure=True,\n                           level_nr=str(level),\n                           level=level,\n                           adventures=adventures,\n                           raw=True,\n                           menu=False,\n                           blur_button_available=False,\n                           # See initialize.ts\n                           javascript_page_options=dict(\n                               page='code',\n                               lang=g.lang,\n                               level=level,\n                               adventures=adventures,\n                               initial_tab='start',\n                               current_user_name=current_user()['username'],\n                               suppress_save_and_load_for_slides=True,\n                           ))\n\n\n@app.route('/adventure/<name>', methods=['GET'], defaults={'level': 1, 'mode': 'full'})\n@app.route('/adventure/<name>/<level>', methods=['GET'], defaults={'mode': 'full'})\n@app.route('/adventure/<name>/<level>/<mode>', methods=['GET'])\ndef get_specific_adventure(name, level, mode):\n    try:\n        level = int(level)\n    except BaseException:\n        return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n\n    adventures = [x for x in load_adventures_for_level(level) if x.short_name == name]\n    customizations = {}\n    prev_level = None  # we are not rendering buttons in raw, no lookup needed here\n    next_level = None\n    if not adventures:\n        # By adventure's name and creator; since an adventure can be clone in /public-adventures\n        if request.args.get(\"creator\"):\n            user = g_db().user_by_username(request.args[\"creator\"])\n        else:\n            user = current_user()\n        adventure = None\n        if user and is_teacher(user):\n            adventure = g_db().get_adventure_by_creator_and_name(name, user['username'])\n\n        if not adventure:\n            return utils.error_page(error=404, ui_message=gettext('no_such_adventure'))\n\n        available_levels = adventure[\"levels\"] if adventure.get(\"levels\") else [adventure[\"level\"]]\n\n        customizations[\"available_levels\"] = [int(adv_level) for adv_level in available_levels]\n        if level not in customizations[\"available_levels\"]:\n            return utils.error_page(error=404, ui_message=gettext('no_such_adventure'))\n\n        adventure[\"content\"] = safe_format(adventure.get(\"content\", \"\"), **hedy_content.KEYWORDS.get(g.keyword_lang))\n        if \"formatted_content\" in adventure:\n            adventure['formatted_content'] = safe_format(adventure['formatted_content'],\n                                                         **hedy_content.KEYWORDS.get(g.keyword_lang))\n        customizations[\"teachers_adventure\"] = True\n\n        current_adventure = Adventure.from_teacher_adventure_database_row(adventure)\n\n        adventures.append(current_adventure)\n        prev_level, next_level = utils.find_prev_next_levels(customizations[\"available_levels\"], level)\n\n    # Add the commands to enable the language switcher dropdown\n    commands = hedy.commands_per_level.get(level)\n    raw = mode == 'raw'\n    initial_tab = name\n    initial_adventure = adventures[0]\n\n    return render_template(\"code-page.html\",\n                           specific_adventure=True,\n                           level_nr=str(level),\n                           commands=commands,\n                           level=level,\n                           prev_level=prev_level,\n                           next_level=next_level,\n                           max_level=hedy.HEDY_MAX_LEVEL,\n                           customizations=customizations,\n                           hide_cheatsheet=None,\n                           enforce_developers_mode=None,\n                           teacher_adventures=[],\n                           adventures=adventures,\n                           initial_tab=initial_tab,\n                           initial_adventure=initial_adventure,\n                           latest=version(),\n                           raw=raw,\n                           progress=0,\n                           menu=not raw,\n                           blur_button_available=False,\n                           current_user_is_in_class=len(current_user().get('classes') or []) > 0,\n                           # See initialize.ts\n                           javascript_page_options=dict(\n\n                               page='code',\n                               lang=g.lang,\n                               level=level,\n                               adventures=adventures,\n                               initial_tab='',\n                               current_user_name=current_user()['username'],\n                           ))\n\n\n@app.route('/embedded/<int:level>', methods=['GET'])\ndef get_embedded_code_editor(level):\n    forget_current_user()\n\n    # Start with an empty program\n    program = ''\n\n    # If for any reason the level is invalid, set to level 1\n    try:\n        level = int(level)\n        if level < 1 or level > hedy.HEDY_MAX_LEVEL:\n            program = gettext('invalid_level_comment')\n            level = 1\n    except ValueError:\n        program = gettext('invalid_level_comment')\n        level = 1\n\n    run = True if request.args.get('run') == 'true' else False\n    fullWidth = True if request.args.get('fullWidth') == 'true' else False\n    readOnly = True if request.args.get('readOnly') == 'true' else False\n    encoded_program = request.args.get('program')\n\n    # Set a fallback for default use\n    language = request.args.get('lang', 'en')\n    if language not in ALL_LANGUAGES.keys():\n        language = 'nl'\n        program = gettext('invalid_language_comment')\n\n    keyword_language = request.args.get('keyword', 'en')\n    if keyword_language not in ALL_KEYWORD_LANGUAGES.keys():\n        language = 'en'\n        program = gettext('invalid_keyword_language_comment')\n\n    # Make sure to set the session lang to enforce the correct translated strings to be rendered\n    session['lang'] = language\n\n    if encoded_program and not program:\n        try:\n            program = base64.b64decode(encoded_program)\n            program = program.decode('utf-8')\n        except binascii.Error:\n            program = gettext('invalid_program_comment')\n\n    return render_template(\"embedded-editor.html\", fullWidth=fullWidth, run=run, language=language,\n                           keyword_language=keyword_language, readOnly=readOnly,\n                           level=level, javascript_page_options=dict(\n                               page='view-program',\n                               lang=language,\n                               level=level,\n                               code=program\n                           ))\n\n\n@app.route('/cheatsheet/', methods=['GET'], defaults={'level': 1})\n@app.route('/cheatsheet/<level>', methods=['GET'])\ndef get_cheatsheet_page(level):\n    try:\n        level = int(level)\n        if level < 1 or level > hedy.HEDY_MAX_LEVEL:\n            return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n    except BaseException:\n        return utils.error_page(error=404, ui_message=gettext('no_such_level'))\n\n    commands = COMMANDS[g.lang].get_commands_for_level(level, g.keyword_lang)\n\n    return render_template(\"printable/cheatsheet.html\", commands=commands, level=level)\n\n\n@app.route('/certificate/<username>', methods=['GET'])\ndef get_certificate_page(username):\n    if not current_user()['username']:\n        return utils.error_page(error=401, ui_message=gettext('unauthorized'))\n    username = username.lower()\n    user = g_db().user_by_username(username)\n    if not user:\n        return utils.error_page(error=403, ui_message=gettext('user_inexistent'))\n    quiz_score = get_highest_quiz_score(username)\n    quiz_level = get_highest_quiz_level(username)\n\n    programs = g_db().get_program_stats([username])\n    longest_program = max(programs)\n\n    congrats_message = safe_format(gettext('congrats_message'), username=username)\n    user = g_db().user_by_username(username)\n    if user.get('program_count'):\n        user_program_count = user.get('program_count')\n\n    return render_template(\"printable/certificate.html\",\n                           quiz_score=quiz_score,\n                           longest_program=longest_program,\n                           user_program_count=user_program_count,\n                           quiz_level=quiz_level,\n                           congrats_message=congrats_message)\n\n\ndef get_highest_quiz_level(username):\n    quiz_scores = g_db().get_quiz_stats([username])\n    # Verify if the user did finish any quiz before getting the max() of the finished levels\n    finished_quizzes = any(\"finished\" in x for x in quiz_scores)\n    return max([x.get(\"level\") for x in quiz_scores if x.get(\"finished\")]) if finished_quizzes else \"-\"\n\n\ndef get_highest_quiz_score(username):\n    max = 0\n    quizzes = g_db().get_quiz_stats([username])\n    for q in quizzes:\n        for score in q.get('scores', []):\n            if score > max:\n                max = score\n    return max\n\n\n@app.errorhandler(404)\ndef not_found(exception):\n    return utils.error_page(error=404, ui_message=gettext('page_not_found'))\n\n\n@app.errorhandler(500)\ndef internal_error(exception):\n    import traceback\n    print(traceback.format_exc())\n    return utils.error_page(error=500, exception=exception)\n\n\n@app.route('/signup', methods=['GET'])\ndef signup_page():\n    if current_user()['username']:\n        return redirect('/my-profile')\n    return render_template('signup.html', page_title=gettext('title_signup'), current_page='login')\n\n\n@app.route('/login', methods=['GET'])\ndef login_page():\n    if current_user()['username']:\n        return redirect('/my-profile')\n    return render_template('login.html', page_title=gettext('title_login'), current_page='login')\n\n\n@app.route('/recover', methods=['GET'])\ndef recover_page():\n    if current_user()['username']:\n        return redirect('/my-profile')\n    return render_template(\n        'recover.html',\n        page_title=gettext('title_recover'),\n        current_page='login')\n\n\n@app.route('/reset', methods=['GET'])\ndef reset_page():\n    # If there is a user logged in -> don't allow password reset\n    if current_user()['username']:\n        return redirect('/my-profile')\n\n    username = request.args.get('username', default=None, type=str)\n    token = request.args.get('token', default=None, type=str)\n    username = None if username == \"null\" else username\n    token = None if token == \"null\" else token\n\n    if not username or not token:\n        return utils.error_page(error=401, ui_message=gettext('unauthorized'))\n    return render_template(\n        'reset.html',\n        page_title=gettext('title_reset'),\n        reset_username=username,\n        reset_token=token,\n        current_page='login')\n\n\n@app.route('/my-profile', methods=['GET'])\n@requires_login_redirect\ndef profile_page(user):\n    profile = g_db().user_by_username(user['username'])\n    programs = g_db().filtered_programs_for_user(user['username'], public=True)\n    public_profile_settings = g_db().get_public_profile_settings(current_user()['username'])\n\n    classes = []\n    if profile.get('classes'):\n        for class_id in profile.get('classes'):\n            classes.append(g_db().get_class(class_id))\n\n    invitations = g_db().get_user_invitations(user['username'])\n    if invitations:\n        session['messages'] = len(invitations)\n        # If there are invitations: retrieve the class information\n        for invite in invitations:\n            class_info = g_db().get_class(invite.get('class_id', None))\n            if class_info:\n                invite['teacher'] = class_info.get('teacher')\n                invite['class_name'] = class_info.get('name')\n                invite['join_link'] = class_info.get('link')\n    else:\n        session['messages'] = 0\n\n    return render_template(\n        'profile.html',\n        page_title=gettext('title_my-profile'),\n        programs=programs,\n        user_data=profile,\n        invitations=invitations,\n        public_settings=public_profile_settings,\n        user_classes=classes,\n        current_page='my-profile',\n        javascript_page_options=dict(\n            page='my-profile',\n        ))\n\n\n@app.route('/research/<filename>', methods=['GET'])\ndef get_research(filename):\n    return send_from_directory('content/research/', filename)\n\n\n@app.route('/favicon.ico')\ndef favicon():\n    abort(404)\n\n\n@app.route('/')\n@app.route('/index.html')\ndef main_page():\n    sections = hedyweb.PageTranslations('start').get_page_translations(g.lang)['home-sections']\n    sections = sections[:]\n\n    # Sections have 'title', 'text'\n    # Annotate sections with display styles, based on the order which we know sections will appear\n    # Styles are one of: 'block', 'pane-with-image-{left,right}', 'columns'\n    # Do this by mutating the list in place\n    content = []\n    content.append(dict(style='block', **sections.pop(0)))\n\n    section_images = [\n        '/images/hedy-multilang.png',\n        '/images/hedy-grows.png',\n        '/images/hedy-classroom.png'\n    ]\n\n    for i, image in enumerate(section_images):\n        if not sections:\n            break\n        content.append(dict(\n            style='pane-with-image-' + ('right' if i % 2 == 0 else 'left'),\n            image=image,\n            **sections.pop(0)))\n\n    if sections:\n        content.append(dict(style='block', **sections.pop(0)))\n    if sections:\n        content.append(dict(style='columns', columns=sections))\n\n    custom_logo = False\n    if os.path.isfile(f'static/images/hero-graphic/hero-graphic-{g.lang}.png'):\n        custom_logo = True\n\n    user = current_user()\n\n    return render_template('main-page.html', page_title=gettext('title_start'), custom_logo=custom_logo,\n                           current_page='start', content=content, user=user)\n\n\n@app.route('/subscribe')\ndef subscribe():\n    return render_template('subscribe.html', current_page='subscribe')\n\n\n@app.route('/learn-more')\ndef learn_more():\n    learn_more_translations = hedyweb.PageTranslations('learn-more').get_page_translations(g.lang)\n    return render_template(\n        'learn-more.html',\n        papers=hedy_content.RESEARCH,\n        page_title=gettext('title_learn-more'),\n        current_page='learn-more',\n        content=learn_more_translations)\n\n\n@app.route('/join')\ndef join():\n    join_translations = hedyweb.PageTranslations('join').get_page_translations(g.lang)\n    return render_template('join.html', page_title=gettext('title_learn-more'),\n                           current_page='join', content=join_translations)\n\n\n@app.route('/kerndoelen')\ndef poster():\n    return send_from_directory('content/', 'kerndoelenposter.pdf')\n\n\n@app.route('/start')\ndef start():\n    start_translations = hedyweb.PageTranslations('start').get_page_translations(g.lang)\n    return render_template('start.html', page_title=gettext('title_learn-more'),\n                           current_page='start', content=start_translations)\n\n\n@app.route('/privacy')\ndef privacy():\n    privacy_translations = hedyweb.PageTranslations('privacy').get_page_translations(g.lang)\n    return render_template('privacy.html', page_title=gettext('title_privacy'),\n                           content=privacy_translations)\n\n\n@app.route('/explore', methods=['GET'])\ndef explore():\n    if not current_user()['username']:\n        return redirect('/login')\n\n    level = try_parse_int(request.args.get('level', default=None, type=str))\n    adventure = request.args.get('adventure', default=None, type=str)\n    page = request.args.get('page', default=None, type=str)\n    language = g.lang\n\n    result = g_db().get_public_programs(\n        limit=42,  # 3 columns so make it a multiple of 3\n        level_filter=level,\n        language_filter=language,\n        adventure_filter=adventure,\n        pagination_token=page)\n    next_page_url = url_for('.explore', **dict(request.args, page=result.next_page_token)\n                            ) if result.next_page_token else None\n    prev_page_url = url_for('.explore', **dict(request.args, page=result.prev_page_token)\n                            ) if result.prev_page_token else None\n\n    favourite_programs = g_db().get_hedy_choices()\n\n    # Do 'normalize_public_programs' on both sets at once, to save database calls\n    normalized = normalize_public_programs(list(result) + list(favourite_programs.records))\n    programs, favourite_programs = split_at(len(result), normalized)\n\n    # Filter out programs that are Hedy favorite choice.\n    programs = [program for program in programs if program['id'] not in {fav['id'] for fav in favourite_programs}]\n\n    keyword_lang = g.keyword_lang\n    adventures_names = hedy_content.Adventures(session['lang']).get_adventure_names(keyword_lang)\n\n    return render_template(\n        'explore.html',\n        programs=programs,\n        favourite_programs=favourite_programs,\n        filtered_level=str(level) if level else None,\n        next_page_url=next_page_url,\n        prev_page_url=prev_page_url,\n        filtered_adventure=adventure,\n        filtered_lang=language,\n        max_level=hedy.HEDY_MAX_LEVEL,\n        adventures_names=adventures_names,\n        page_title=gettext('title_explore'),\n        current_page='explore')\n\n\ndef normalize_public_programs(programs):\n    \"\"\"Normalize the content for all programs in the given array, for showing on the /explore or /user page.\n\n    Does the following thing:\n\n    - Try to compile and add 'error' field to show if this worked\n    - Adds public_user: True|None fields to each program\n    - Preprocess keywords into the current language\n    - Turn 'hedy_choice' from an integer into a boolean\n    - Change 'code' to only show the first 4 lines\n    - Add 'number_lines'\n    \"\"\"\n    ret = []\n    for program in programs:\n        program = pre_process_explore_program(program)\n\n        # There is a record somewhere that doesn't have a code field, guard against that\n        code = program.get('code', '')\n\n        ret.append(dict(program,\n                        hedy_choice=True if program.get('hedy_choice') == 1 else False,\n                        code=\"\\n\".join(code.split(\"\\n\")[:4]),\n                        number_lines=code.count('\\n') + 1))\n    g_db().add_public_profile_information(ret)\n    return ret\n\n\n@querylog.timed\ndef pre_process_explore_program(program):\n    # If program does not have an error value set -> parse it and set value\n    if 'error' not in program:\n        try:\n            hedy.transpile(program.get('code'), program.get('level'), program.get('lang'))\n            program['error'] = False\n        except BaseException:\n            program['error'] = True\n        g_db().store_program(program)\n\n    return program\n\n\n@app.route('/change_language', methods=['POST'])\ndef change_language():\n    body = request.json\n    session['lang'] = body.get('lang')\n    # Remove 'keyword_lang' from session, it will automatically be renegotiated from 'lang'\n    # on the next page load.\n    session.pop('keyword_lang')\n    # if this is changed to make_response(), it gives an error, I don't know why\n    return jsonify({'success': 204})\n\n\n@app.route('/slides', methods=['GET'], defaults={'level': '1'})\n@app.route('/slides/<level>', methods=['GET'])\ndef get_slides(level):\n    # In case of a \"forced keyword language\" -> load that one, otherwise: load\n    # the one stored in the g object\n\n    keyword_language = request.args.get('keyword_language', default=g.keyword_lang, type=str)\n\n    try:\n        level = int(level)\n    except ValueError:\n        return utils.error_page(error=404, ui_message=\"Slides do not exist!\")\n\n    if not SLIDES[g.lang].get_slides_for_level(level, keyword_language):\n        return utils.error_page(error=404, ui_message=\"Slides do not exist!\")\n\n    slides = SLIDES[g.lang].get_slides_for_level(level, keyword_language)\n    return render_template('slides.html', level=level, slides=slides)\n\n\n@app.route('/translate_keywords', methods=['POST'])\ndef translate_keywords():\n    body = request.json\n    try:\n        translated_code = hedy_translation.translate_keywords(body.get('code'), body.get(\n            'start_lang'), body.get('goal_lang'), level=int(body.get('level', 1)))\n        if translated_code or translated_code == '':  # empty string is False, so explicitly allow it\n            session[\"previous_keyword_lang\"] = body.get(\"start_lang\")\n            session[\"keyword_lang\"] = body.get(\"goal_lang\")\n            return make_response({'code': translated_code}, 200)\n        else:\n            return make_response(gettext(\"translate_error\"), 400)\n    except BaseException:\n        return make_response(gettext('translate_error'), 400)\n\n\n# TODO TB: Think about changing this to sending all steps to the front-end at once\n@app.route('/get_tutorial_step/<level>/<step>', methods=['GET'])\ndef get_tutorial_translation(level, step):\n    # Keep this structure temporary until we decide on a nice code / parse structure\n    if step == \"code_snippet\":\n        code = hedy_content.deep_translate_keywords(gettext('tutorial_code_snippet'), g.keyword_lang)\n        return make_response({'code': code}, 200)\n    try:\n        step = int(step)\n    except ValueError:\n        return make_response(gettext('invalid_tutorial_step'), 400)\n\n    data = TUTORIALS[g.lang].get_tutorial_for_level_step(level, step, g.keyword_lang)\n    if not data:\n        data = {'title': gettext('tutorial_title_not_found'),\n                'text': gettext('tutorial_message_not_found')}\n    return make_response((data), 200)\n\n\n@app.route('/store_parsons_order', methods=['POST'])\ndef store_parsons_order():\n    body = request.json\n    # Validations\n    if not isinstance(body, dict):\n        return 'body must be an object', 400\n    if not isinstance(body.get('level'), int):\n        return 'level must be an integer', 400\n    if not isinstance(body.get('exercise'), str):\n        return 'exercise must be a string', 400\n    if not isinstance(body.get('order'), list):\n        return 'order must be a list', 400\n\n    attempt = {\n        'id': utils.random_id_generator(12),\n        'username': current_user()['username'] or f'anonymous:{utils.session_id()}',\n        'level': str(body['level']),\n        'exercise': str(body['exercise']),\n        'order': body['order'],\n        'correct': '1' if body['correct'] else '0',\n        'timestamp': utils.timems()\n    }\n\n    g_db().store_parsons(attempt)\n    return make_response('', 204)\n\n\n@app.app_template_global()\ndef current_language():\n    return make_lang_obj(g.lang)\n\n\n@app.app_template_global()\ndef current_keyword_language():\n    return make_keyword_lang_obj(g.keyword_lang)\n\n\n@app.app_template_global()\ndef other_keyword_language():\n    # If the current keyword language isn't English: we are sure the other option is English\n    # But, only if the user has an existing keyword language -> on the session\n    if session.get('keyword_lang') and session['keyword_lang'] != \"en\":\n        return make_keyword_lang_obj(\"en\")\n    return None\n\n\n@app.app_template_global()\ndef translate_command(command):\n    # Return the translated command found in KEYWORDS, if not found return the command itself\n    return hedy_content.KEYWORDS[g.lang].get(command, command)\n\n\n@app.app_template_filter()\ndef markdown_retain_newlines(x):\n    \"\"\"Force newlines in to the input MarkDown string to be rendered as <br>\"\"\"\n    # This works by adding two spaces before every newline. That's a signal to MarkDown\n    # that the newlines should be forced.\n    #\n    # Nobody is going to type this voluntarily to distinguish between linebreaks line by\n    # line, but you can use this filter to do this for all line breaks.\n    return x.replace('\\n', '  \\n')\n\n\n@app.app_template_filter()\ndef nl2br(x):\n    \"\"\"Turn newlines into <br>\"\"\"\n    # The input to this object will either be a literal string or a 'Markup' object.\n    # In case of a literal string, we need to escape it first, because we have\n    # to be able to make a distinction between safe and unsafe characters.\n    #\n    # In case of a Markup object, make sure to tell it the <br> we're adding is safe\n    if not isinstance(x, Markup):\n        x = Markup.escape(x)\n    return x.replace('\\n', Markup('<br />'))\n\n\nSLUGIFY_RE = re.compile('[^a-z0-9_]+')\n\n\n@app.app_template_filter()\ndef slugify(s):\n    \"\"\"Convert arbitrary text into a text that's safe to use in a URL.\"\"\"\n    if s is None:\n        return None\n    return SLUGIFY_RE.sub('-', strip_accents(s).lower())\n\n\n@app.app_template_filter()\ndef chunk(x, size):\n    \"\"\"Chunk a list into groups of size at most 'size'.\"\"\"\n    return (x[pos:pos + size] for pos in range(0, len(x), size))\n\n\n@app.app_template_filter()\ndef format_date(date):\n    if not isinstance(date, int):\n        return date\n    return utils.localized_date_format(date)\n\n\n@app.app_template_global()\ndef hedy_link(level_nr, assignment_nr, subpage=None):\n    \"\"\"Make a link to a Hedy page.\"\"\"\n    parts = ['/hedy']\n    parts.append('/' + str(level_nr))\n    if str(assignment_nr) != '1' or subpage:\n        parts.append('/' + str(assignment_nr if assignment_nr else '1'))\n    if subpage and subpage != 'code':\n        parts.append('/' + subpage)\n    return ''.join(parts)\n\n\n@app.app_template_global()\ndef all_countries():\n    return COUNTRIES\n\n\n@app.app_template_global()\ndef other_languages(lang_param=None):\n    \"\"\"Return a list of language objects that are NOT the current language.\"\"\"\n    current_lang = lang_param or g.lang\n    # these are the languages that iso doesn't have the English translations for\n    non_iso_transl = {\n        'kmr': 'Kurdish',\n        'nb_NO': 'Norwegian',\n        'pa_PK': 'Punjabi',\n        'pap': 'Papiamento',\n        'pt_BR': 'Portuguese',\n        'pt_PT': 'Portuguese',\n        'zh_Hans': 'Chinese',\n        'zh_Hant': 'Chinese'\n    }\n\n    # get all Hedy supported languages\n    other_langs = [make_lang_obj(lang) for lang in ALL_LANGUAGES.keys() if lang != current_lang]\n\n    # Get English names for all Hedy supported languages using iso639 and their codes\n    for lang_code in other_langs:\n        lang = lang_code.get('lang')\n        if lang in languages.part1:\n            language = languages.get(part1=lang)\n            lang_code['english'] = language.name\n        else:\n            lang_code['english'] = non_iso_transl.get(lang, '')\n\n    return other_langs\n\n\n@app.app_template_global()\ndef lang_to_sym(lang):\n    return ALL_LANGUAGES[lang]\n\n\n@app.app_template_global()\ndef other_keyword_languages():\n    \"\"\"Return a list of language objects that are NOT the current language, and that have translated keywords.\"\"\"\n    current_lang = g.lang\n    return [make_lang_obj(lang) for lang in ALL_KEYWORD_LANGUAGES.keys() if lang != current_lang]\n\n\n@app.app_template_global()\ndef keyword_languages():\n    \"\"\"Return a list of language objects that have translated keywords.\"\"\"\n    return [make_lang_obj(lang) for lang in ALL_KEYWORD_LANGUAGES.keys()]\n\n\n@app.app_template_global()\ndef keyword_languages_keys():\n    \"\"\"Return the language codes for all languages that have translated keywords.\"\"\"\n    return [lang for lang in ALL_KEYWORD_LANGUAGES.keys()]\n\n\n@app.app_template_global()\ndef get_country(country):\n    return COUNTRIES.get(country, \"-\")\n\n\n@app.app_template_global()\n# If the current user language supports localized keywords: return this value, else: english\ndef get_syntax_language(lang):\n    if lang in ALL_KEYWORD_LANGUAGES.keys():\n        return lang\n    else:\n        return \"en\"\n\n\n@app.app_template_global()\ndef parse_keyword(keyword):\n    return hedy_content.KEYWORDS.get(g.keyword_lang).get(keyword)\n\n\ndef make_lang_obj(lang):\n    \"\"\"Make a language object for a given language.\"\"\"\n    return {\n        'sym': ALL_LANGUAGES[lang],\n        'lang': lang\n    }\n\n\ndef make_keyword_lang_obj(lang):\n    \"\"\"Make a language object for a given language.\"\"\"\n    return {\n        'sym': ALL_KEYWORD_LANGUAGES[lang],\n        'lang': lang\n    }\n\n\n@app.app_template_global()\ndef modify_query(**new_values):\n    args = request.args.copy()\n\n    for key, value in new_values.items():\n        args[key] = value\n\n    return '{}?{}'.format(request.path, quote_plus(args))\n\n\n@app.app_template_global()\ndef get_user_messages():\n    if not session.get('messages'):\n        # Todo TB: In the future this should contain the class invites + other messages\n        # As the class invites are binary (you either have one or you have none, we can possibly simplify this)\n        # Simply set it to 1 if we have an invite, otherwise keep at 0\n        invitations = g_db().get_user_invitations(current_user()['username'])\n        session['messages'] = len(invitations) if invitations else 0\n    if session.get('messages') > 0:\n        return session.get('messages')\n    return None\n\n\n@app.route('/translating')\ndef translating_page():\n    return render_template('translating.html')\n\n\n@app.route('/update_yaml', methods=['POST'])\ndef update_yaml():\n    filename = path.join('coursedata', request.form['file'])\n    # The file MUST point to something inside our 'coursedata' directory\n    filepath = path.abspath(filename)\n    expected_path = path.abspath('coursedata')\n    if not filepath.startswith(expected_path):\n        raise RuntimeError('Invalid path given')\n\n    data = load_yaml_rt(filepath)\n    for key, value in request.form.items():\n        if key.startswith('c:'):\n            translating.apply_form_change(\n                data, key[2:], translating.normalize_newlines(value))\n\n    data = translating.normalize_yaml_blocks(data)\n\n    return Response(dump_yaml_rt(data), mimetype='application/x-yaml',\n                    headers={'Content-disposition': 'attachment; filename=' + request.form['file'].replace('/', '-')})\n\n\n@app.route('/user/<username>')\ndef public_user_page(username):\n    if not current_user()['username']:\n        return utils.error_page(error=401, ui_message=gettext('unauthorized'))\n    username = username.lower()\n    user = g_db().user_by_username(username)\n    if not user:\n        return utils.error_page(error=404, ui_message=gettext('user_not_private'))\n    user_public_info = g_db().get_public_profile_settings(username)\n    page = request.args.get('page', default=None, type=str)\n    if page == '':\n        page = None\n\n    keyword_lang = g.keyword_lang\n    adventure_names = hedy_content.Adventures(g.lang).get_adventure_names(keyword_lang)\n    swapped_adventure_names = {value: key for key, value in adventure_names.items()}\n\n    level = request.args.get('level', default=None, type=str) or None\n    adventure = request.args.get('adventure', default=None, type=str) or None\n\n    if user_public_info:\n        user_programs = g_db().filtered_programs_for_user(username,\n                                                          level=level,\n                                                          adventure=swapped_adventure_names.get(adventure),\n                                                          public=True,\n                                                          limit=10,\n                                                          pagination_token=page)\n        next_page_token = user_programs.next_page_token\n        user_programs = normalize_public_programs(user_programs)\n\n        all_programs = g_db().filtered_programs_for_user(username,\n                                                         public=True,\n                                                         pagination_token=page)\n\n        modified_programs = []\n        for program in all_programs:\n            if program.get('is_modified') or 'is_modified' not in program:\n                modified_programs.append(program)\n\n        sorted_level_programs = hedy_content.Adventures(\n            g.lang).get_sorted_level_programs(modified_programs, adventure_names)\n        sorted_adventure_programs = hedy_content.Adventures(\n            g.lang).get_sorted_adventure_programs(modified_programs, adventure_names)\n\n        favorite_program = None\n        if 'favourite_program' in user_public_info and user_public_info['favourite_program']:\n            favorite_program = g_db().program_by_id(\n                user_public_info['favourite_program'])\n\n        last_achieved = None\n        certificate_message = safe_format(gettext('see_certificate'), username=username)\n        next_page_url = url_for(\n            '.public_user_page',\n            username=username, **dict(request.args,\n                                      page=next_page_token)) if next_page_token else None\n\n        user = g_db().user_by_username(username)\n        if user.get('program_count'):\n            user_program_count = user.get('program_count')\n        else:\n            user_program_count = 0\n        achievements = g_db().achievements_by_username(username)\n        user_from_db = g_db().user_by_username(username)\n        has_certificate = (achievements and 'achieved' in achievements\n                           and 'hedy_certificate' in achievements['achieved'])\\\n            or user_from_db.get('certificate', False)\n        return render_template(\n            'public-page.html',\n            user_info=user_public_info,\n            favorite_program=favorite_program,\n            programs=user_programs,\n            last_achieved=last_achieved,\n            certificate_message=certificate_message,\n            next_page_url=next_page_url,\n            sorted_level_programs=sorted_level_programs,\n            sorted_adventure_programs=sorted_adventure_programs,\n            user_program_count=user_program_count,\n            has_certificate=has_certificate,\n        )\n    return utils.error_page(error=404, ui_message=gettext('user_not_private'))\n\n\ndef valid_invite_code(code):\n    if not code:\n        return False\n\n    # Get the value from the environment, use literal_eval to convert from\n    # string list to an actual list\n    valid_codes = []\n    if os.getenv('TEACHER_INVITE_CODE'):\n        valid_codes.append(os.getenv('TEACHER_INVITE_CODE'))\n    if os.getenv('TEACHER_INVITE_CODES'):\n        valid_codes.extend(os.getenv('TEACHER_INVITE_CODES').split(','))\n\n    return code in valid_codes\n\n\n@app.route('/invite/<code>', methods=['GET'])\ndef teacher_invitation(code):\n    user = current_user()\n\n    if not valid_invite_code(code):\n        return utils.error_page(error=404, ui_message=gettext('invalid_teacher_invitation_code'))\n\n    if not user['username']:\n        return render_template('teacher-invitation.html')\n\n    admin.update_is_teacher(g_db(), user)\n    # When visiting this link we update the current user to a teacher -> also update user in session\n    session.get('user')['is_teacher'] = True\n\n    session['welcome-teacher'] = True\n    url = request.url.replace(f'/invite/{code}', '/for-teachers')\n    return redirect(url)\n\n\n@dataclass\nclass ProgramPermissions:\n    can_edit: bool\n    can_checkoff: bool\n    can_unsubmit: bool\n\n\ndef get_current_user_program_permissions(program):\n    \"\"\"Check if the current user is allowed to view, edit, checkoff or unsubmit the given program.\n\n    Verify that the program is either public, the current user is the creator, teacher or the user is admin.\n    \"\"\"\n    user = current_user()\n\n    is_current_user_author = program['username'] == user['username']\n    students_teacher = is_teacher(user) and is_students_teacher(student=program['username'], teacher=user['username'])\n\n    can_view = program.get('public') or is_current_user_author or is_admin(user) or students_teacher\n\n    if can_view:\n        can_edit = is_current_user_author\n        can_checkoff = students_teacher\n        can_unsubmit = program.get('submitted', False) and (is_admin or students_teacher)\n        return ProgramPermissions(can_edit, can_checkoff, can_unsubmit)\n\n    return None\n\n\n# *** START SERVER ***\n\n\ndef try_parse_int(x):\n    \"\"\"Try to parse an int, return None on failure.\"\"\"\n    try:\n        return int(x) if x else None\n    except ValueError:\n        return None\n\n\ndef analyze_memory_snapshot(start_snapshot, end_snapshot):\n    filters = [\n        tracemalloc.Filter(False, \"<frozen importlib._bootstrap>\"),\n        tracemalloc.Filter(False, \"<frozen importlib._bootstrap_external>\"),\n        tracemalloc.Filter(False, \"<unknown>\"),\n    ]\n    start_snapshot = start_snapshot.filter_traces(filters)\n    end_snapshot = end_snapshot.filter_traces(filters)\n    top_stats = end_snapshot.compare_to(start_snapshot, 'traceback')\n\n    limit = 10\n\n    print(\"Top %s leaking locations\" % limit)\n    for index, stat in enumerate(top_stats[:limit], 1):\n        print(\"#%s: %.1f KiB (count=%d)\" % (index, stat.size / 1024, stat.count))\n        for line in stat.traceback.format():\n            print(' ', line)\n        print('')\n\n    other = top_stats[limit:]\n    if other:\n        size = sum(stat.size for stat in other)\n        print(\"%s other: %.1f KiB\" % (len(other), size / 1024))\n    total = sum(stat.size for stat in top_stats)\n    print(\"Total allocated size: %.1f KiB\" % (total / 1024))\n\n\ndef split_at(n, xs):\n    \"\"\"Split a collection at an index.\"\"\"\n    return xs[:n], xs[n:]\n\n\ndef on_offline_mode():\n    \"\"\"Prepare for running in offline mode.\"\"\"\n    # We are running in a standalone build made using pyinstaller.\n    # cd to the directory that has the data files, disable debug mode, and\n    # use port 80 (unless overridden).\n    # There will be a standard teacher invite code that everyone can use\n    # by going to `http://localhost/invite/newteacher`.\n    os.chdir(utils.offline_data_dir())\n    config['port'] = int(os.environ.get('PORT', 80))\n    if not os.getenv('TEACHER_INVITE_CODES'):\n        os.environ['TEACHER_INVITE_CODES'] = 'newteacher'\n    utils.set_debug_mode(False)\n\n    # Disable logging, so Werkzeug doesn't log all requests and tell users with big red\n    # letters they're running a non-production server.\n    # from werkzeug import serving\n    # def do_nothing(*args, **kwargs): pass\n    # serving.WSGIRequestHandler.log_request = do_nothing\n    log = logging.getLogger('werkzeug')\n    log.setLevel(logging.ERROR)\n\n    # Get our IP addresses so we can print a helpful hint\n    import socket\n    ip_addresses = [addr[4][0] for addr in socket.getaddrinfo(\n        socket.gethostname(), None, socket.AF_INET, socket.SOCK_STREAM)]\n    ip_addresses = [i for i in ip_addresses if i != '127.0.0.1']\n\n    from colorama import colorama_text, Fore, Back, Style\n    g = Fore.GREEN\n    lines = [\n        ('', ''),\n        ('', ''),\n        (g, r' _    _          _       '),\n        (g, r'| |  | |        | |      '),\n        (g, r'| |__| | ___  __| |_   _ '),\n        (g, r'|  __  |/ _ \\/ _` | | | |'),\n        (g, r'| |  | |  __/ (_| | |_| |'),\n        (g, r'|_|  |_|\\___|\\__,_|\\__, |'),\n        (g, r'                    __/ |'),\n        (g, r'   o f f l i n e   |___/ '),\n        ('', ''),\n        ('', 'Use a web browser to visit the following website:'),\n        ('', ''),\n        *[(Fore.BLUE, f'   http://{ip}/') for ip in ip_addresses],\n        ('', ''),\n        ('', ''),\n    ]\n    # This is necessary to make ANSI color codes work on Windows.\n    # Init and deinit so we don't mess with Werkzeug's use of this library later on.\n    with colorama_text():\n        for style, text in lines:\n            print(Back.WHITE + Fore.BLACK + ''.ljust(10) + style + text.ljust(60) + Style.RESET_ALL)\n\n    # We have this option for testing the offline build. A lot of modules read\n    # files upon import, and those happen before the offline build 'cd' we do\n    # here and need to be written to use __file__. During the offline build,\n    # we want to run the actual code to see that nobody added file accesses that\n    # crash, but we don't actually want to start the server.\n    smoke_test = '--smoketest' in sys.argv\n    if smoke_test:\n        sys.exit(0)\n\n\nif __name__ == '__main__':\n    # Start the server on a developer machine. Flask is initialized in DEBUG mode, so it\n    # hot-reloads files. We also flip our own internal \"debug mode\" flag to True, so our\n    # own file loading routines also hot-reload.\n    no_debug_mode_requested = os.getenv('NO_DEBUG_MODE')\n    utils.set_debug_mode(not no_debug_mode_requested)\n\n    if utils.is_offline_mode():\n        on_offline_mode()\n\n    app_obj = create_app()\n\n    # Set some default environment variables for development mode\n    env_defaults = dict(\n        BASE_URL=f\"http://localhost:{config['port']}/\",\n        ADMIN_USER=\"admin\",\n    )\n    for key, value in env_defaults.items():\n        if key not in os.environ:\n            os.environ[key] = value\n\n    if utils.is_debug_mode():\n        # For local debugging, fetch all static files on every request\n        app_obj.config['SEND_FILE_MAX_AGE_DEFAULT'] = None\n\n    # If we are running in a Python debugger, don't use flasks reload mode. It creates\n    # subprocesses which make debugging harder.\n    is_in_debugger = sys.gettrace() is not None\n\n    # Set PYTHONTRACEMALLOC=10 to debug memory usage\n    profile_memory = os.getenv('PYTHONTRACEMALLOC')\n    start_snapshot = None\n    if profile_memory:\n        import tracemalloc\n\n        tracemalloc.start()\n        start_snapshot = tracemalloc.take_snapshot()\n    debug = utils.is_debug_mode() and not (is_in_debugger or profile_memory)\n    if debug:\n        logger.debug('app starting in debug mode')\n\n    # Threaded option enables multiple instances for multiple user access support\n    app_obj.run(threaded=True, debug=debug,\n                port=config['port'], host=\"0.0.0.0\")\n\n    # See `Procfile` for how the server is started on Heroku.\n\n    # If we hit Ctrl-C, we end up here\n    if profile_memory:\n        print('⏳ Taking memory snapshot. This may take a moment.')\n        import gc\n\n        gc.collect()\n        end_snapshot = tracemalloc.take_snapshot()\n        analyze_memory_snapshot(start_snapshot, end_snapshot)\n"
        },
        {
          "name": "app.spec",
          "type": "blob",
          "size": 1.62109375,
          "content": "#----------------------------------------------------------\n# PyInstaller configuration file\n#\n# This file controls how we build a standalone distribution of\n# Hedy that can run in environments where Internet access might\n# be spotty.\n#----------------------------------------------------------\n# -*- mode: python ; coding: utf-8 -*-\nfrom os import path\nimport sys\n\ndirname = 'offlinehedy'\nappname = 'run-hedy-server'\n\n# Find the venv directory. We need to be able to pass this to\n# pyinstaller, otherwise it will not bundle the libraries we installed\n# from the venv.\nvenv_dir = [p for p in sys.path if 'site-packages' in p][0]\n\n\ndata_files = [\n    # Files\n    ('README.md', '.'),\n    ('static_babel_content.json', '.'),\n\n    # Folders\n    ('content', 'content'),\n    ('grammars', 'grammars'),\n    ('grammars-Total', 'grammars-Total'),\n    ('prefixes', 'prefixes'),\n    ('static', 'static'),\n    ('templates', 'templates'),\n    ('translations', 'translations'),\n]\n\na = Analysis(\n    ['app.py'],\n    pathex=[venv_dir],\n    binaries=[],\n    datas=data_files,\n    hiddenimports=[],\n    hookspath=[],\n    hooksconfig={},\n    runtime_hooks=[],\n    excludes=[],\n    noarchive=False,\n)\npyz = PYZ(a.pure)\n\nexe = EXE(\n    pyz,\n    a.scripts,\n    [],\n    exclude_binaries=True,\n    name=appname,\n    debug=False,\n    bootloader_ignore_signals=False,\n    strip=False,\n    upx=True,\n    console=True,\n    disable_windowed_traceback=False,\n    argv_emulation=False,\n    target_arch=None,\n    codesign_identity=None,\n    entitlements_file=None,\n)\ncoll = COLLECT(\n    exe,\n    a.binaries,\n    a.datas,\n    strip=False,\n    upx=False,\n    upx_exclude=[],\n    name=dirname,\n)\n"
        },
        {
          "name": "babel.cfg",
          "type": "blob",
          "size": 0.1826171875,
          "content": "[python: website/**.py]\n[python: app.py]\n[python: utils.py]\n[python: hedy.py]\n[python: content/**.txt]\n[python: build-tools/heroku/generate-client-messages.py]\n[jinja2: templates/**.html]"
        },
        {
          "name": "build-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.py",
          "type": "blob",
          "size": 1.697265625,
          "content": "import os\nimport socket\n\napp_name = os.getenv('HEROKU_APP_NAME', socket.gethostname())\ndyno = os.getenv('DYNO')\nathena_query = os.getenv('AWS_ATHENA_PREPARE_STATEMENT')\n\nconfig = {\n    'port': os.getenv('PORT') or 8080,\n    'session': {\n        'cookie_name': 'hedy',\n        # in minutes\n        'session_length': 60 * 24 * 14,\n        'reset_length': 60 * 4,\n        'invite_length': 60 * 24 * 7\n    },\n    'email': {\n        'sender': 'Hedy <hello@hedy.org>',\n        'region': 'eu-central-1',\n    },\n    # The bcrypt library's default is 12\n    'bcrypt_rounds': 9,\n    'dynamodb': {\n        'region': 'eu-west-1'\n    },\n    's3-query-logs': {\n        'bucket': 'hedy-query-logs',\n        'prefix': app_name + '/',\n        # Make logs from different instances/processes unique\n        'postfix': ('-' + dyno if dyno else '') + '-' + str(os.getpid()),\n        'region': 'eu-west-1'\n    },\n    's3-parse-logs': {\n        'bucket': 'hedy-parse-logs',\n        'prefix': app_name + '/',\n        # Make logs from different instances/processes unique\n        'postfix': ('-' + dyno if dyno else '') + '-' + str(os.getpid()),\n        'region': 'eu-west-1'\n    },\n    's3-activity-logs': {\n        'bucket': 'hedy-activity-logs',\n        'prefix': app_name + '/',\n        # Make logs from different instances/processes unique\n        'postfix': ('-' + dyno if dyno else '') + '-' + str(os.getpid()),\n        'region': 'eu-west-1'\n    },\n    'athena': {\n        'region': 'eu-west-1',\n        'database': 'hedy-logs',\n        'prepare_statement': athena_query,\n        's3_output': 's3://hedy-query-outputs/',\n        'max_results': 50\n    },\n    # enables the quiz environment by setting the config variable on True\n    'quiz-enabled': True,\n}\n"
        },
        {
          "name": "content",
          "type": "tree",
          "content": null
        },
        {
          "name": "data-for-testing.json",
          "type": "blob",
          "size": 88.896484375,
          "content": "{\n  \"users\": [\n    {\n      \"username\": \"user1\",\n      \"password\": \"$2b$09$1lZSLTxPBn1p6sOBpXy6H./9Fho7fXed.ZZJPBOd4lHu1QwRDiKW6\",\n      \"email\": \"user1@dummy.com\",\n      \"language\": \"fr\",\n      \"keyword_language\": \"fr\",\n      \"created\": 1667487371548,\n      \"teacher_request\": null,\n      \"third_party\": null,\n      \"verification_pending\": \"$2b$09$W/lHayOzZttUVDf6nW0OWuXErrXFV3WC.OXAMTHVJ5hZOahFxPzYW\",\n      \"last_login\": 1733164176272,\n      \"country\": \"VE\",\n      \"birth_year\": 1999,\n      \"gender\": \"f\",\n      \"prog_experience\": \"no\",\n      \"epoch\": 1,\n      \"program_count\": 2\n    },\n    {\n      \"username\": \"user2\",\n      \"password\": \"$2b$09$BlvY7/i5T1/tyGABEFJOx.6W8LcQHz9HaPrwhxXVZ7gILs4GkYyFe\",\n      \"email\": \"user2@dummy.com\",\n      \"language\": \"nl\",\n      \"keyword_language\": \"nl\",\n      \"created\": 1667487426140,\n      \"teacher_request\": null,\n      \"third_party\": null,\n      \"verification_pending\": \"$2b$09$8ce7rVDk8ZbMASMP1CRDBepWWXNGZLNuXlhz.2yhXkJUyXELuOdGO\",\n      \"last_login\": 1733164180631,\n      \"country\": \"NL\",\n      \"birth_year\": 2010,\n      \"gender\": \"m\",\n      \"prog_experience\": \"no\",\n      \"epoch\": 1,\n      \"program_count\": 1\n    },\n    {\n      \"username\": \"user3\",\n      \"password\": \"$2b$09$GWt5bDJW9v29.MdoTwN83eIZohhEXHl2ONDIvlcjNVEuam0h1mJIy\",\n      \"email\": \"user3@dummy.com\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667487492531,\n      \"teacher_request\": null,\n      \"third_party\": null,\n      \"verification_pending\": \"$2b$09$ow9EgfbzfPr4RCHRxeijIe4iaXplfJdAjREnOqSUq7vhRWFieva4e\",\n      \"last_login\": 1667488295323,\n      \"country\": \"VE\",\n      \"birth_year\": 2010,\n      \"gender\": \"o\",\n      \"prog_experience\": \"no\",\n      \"epoch\": 1,\n      \"program_count\": 2\n    },\n    {\n      \"username\": \"user4\",\n      \"password\": \"$2b$09$T6Luudha26LTejzXC6YbOOgdiPY/ugb2IkGYywwFbSISfs7M3UNSK\",\n      \"email\": \"user4@dummy.com\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667487730407,\n      \"teacher_request\": null,\n      \"third_party\": null,\n      \"verification_pending\": \"$2b$09$/P.MWgcXZvErG84LfB9.OOHYkmiKl8vYtAf/WTKJ3lKBg7/sUh9eK\",\n      \"last_login\": 1667487730407,\n      \"country\": \"NL\",\n      \"birth_year\": 2010,\n      \"gender\": \"m\",\n      \"prog_experience\": \"yes\",\n      \"experience_languages\": [\n        \"scratch\",\n        \"python\"\n      ],\n      \"epoch\": 1\n    },\n    {\n      \"username\": \"admin\",\n      \"password\": \"$2b$09$z0uyQ3Mwper/DShjqgRrlOjxFngQLn8Itsl.gNkH/GcNYaFI5lvr6\",\n      \"email\": \"admin@dummy.com\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667487831171,\n      \"teacher_request\": null,\n      \"third_party\": null,\n      \"verification_pending\": \"$2b$09$KhXUpOL.zMuCH.4Hsqs.HeKW3E5.JzKWk0IFm3YBiOEtJrxPeomTq\",\n      \"last_login\": 1667487831171,\n      \"country\": \"VE\",\n      \"birth_year\": 2010,\n      \"gender\": \"o\",\n      \"prog_experience\": \"no\",\n      \"epoch\": 1,\n      \"program_count\": 1\n    },\n    {\n      \"username\": \"teacher1\",\n      \"password\": \"$2b$09$cVw1Or9FqSPOw7dtoOk5duBSomBIc1MmYxvecUInyuoxJJ86ectfS\",\n      \"email\": \"teacher1@dummy.com\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667489525229,\n      \"is_teacher\": true,\n      \"third_party\": null,\n      \"verification_pending\": \"$2b$09$TrfAq86Hl0akKmFPO.gCQu.JHJYFIp3Tf7iCy9SU4mB61ESG393NO\",\n      \"last_login\": 1727539539146,\n      \"country\": \"VE\",\n      \"birth_year\": 1999,\n      \"gender\": \"f\",\n      \"heard_about\": [\n        \"from_magazine_website\",\n        \"other_source\"\n      ],\n      \"prog_experience\": \"yes\",\n      \"experience_languages\": [\n        \"scratch\",\n        \"other_block\",\n        \"python\",\n        \"other_text\"\n      ],\n      \"epoch\": 1,\n      \"program_count\": 7,\n      \"is_super_teacher\": 1\n    },\n    {\n      \"username\": \"teacher2\",\n      \"password\": \"$2b$09$cVw1Or9FqSPOw7dtoOk5duBSomBIc1MmYxvecUInyuoxJJ86ectfS\",\n      \"email\": \"teacher2@dummy.com\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667489525229,\n      \"is_teacher\": true,\n      \"third_party\": null,\n      \"verification_pending\": \"$2b$09$TrfAq86Hl0akKmFPO.gCQu.JHJYFIp3Tf7iCy9SU4mB61ESG393NO\",\n      \"last_login\": 1667491121184,\n      \"country\": \"NL\",\n      \"birth_year\": 1999,\n      \"gender\": \"m\",\n      \"heard_about\": [\n        \"from_magazine_website\",\n        \"other_source\"\n      ],\n      \"prog_experience\": \"yes\",\n      \"experience_languages\": [\n        \"scratch\",\n        \"other_block\",\n        \"python\",\n        \"other_text\"\n      ],\n      \"epoch\": 1\n    },\n    {\n      \"username\": \"teacher3\",\n      \"password\": \"$2b$09$cVw1Or9FqSPOw7dtoOk5duBSomBIc1MmYxvecUInyuoxJJ86ectfS\",\n      \"email\": \"teacher3@dummy.com\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667489525229,\n      \"is_teacher\": true,\n      \"third_party\": null,\n      \"verification_pending\": \"$2b$09$TrfAq86Hl0akKmFPO.gCQu.JHJYFIp3Tf7iCy9SU4mB61ESG393NO\",\n      \"last_login\": 1667491121184,\n      \"country\": \"NL\",\n      \"birth_year\": 1999,\n      \"gender\": \"m\",\n      \"heard_about\": [\n        \"from_magazine_website\",\n        \"other_source\"\n      ],\n      \"prog_experience\": \"yes\",\n      \"experience_languages\": [\n        \"scratch\",\n        \"other_block\",\n        \"python\",\n        \"other_text\"\n      ],\n      \"epoch\": 1\n    },\n    {\n      \"username\": \"teacher4\",\n      \"password\": \"$2b$09$cVw1Or9FqSPOw7dtoOk5duBSomBIc1MmYxvecUInyuoxJJ86ectfS\",\n      \"email\": \"teacher4@dummy.com\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667489525229,\n      \"is_teacher\": true,\n      \"third_party\": null,\n      \"verification_pending\": \"$2b$09$TrfAq86Hl0akKmFPO.gCQu.JHJYFIp3Tf7iCy9SU4mB61ESG393NO\",\n      \"last_login\": 1667491121184,\n      \"country\": \"NL\",\n      \"birth_year\": 1999,\n      \"gender\": \"m\",\n      \"heard_about\": [\n        \"from_magazine_website\",\n        \"other_source\"\n      ],\n      \"prog_experience\": \"yes\",\n      \"experience_languages\": [\n        \"scratch\",\n        \"other_block\",\n        \"python\",\n        \"other_text\"\n      ],\n      \"epoch\": 1,\n      \"second_teacher_in\": [\n        \"5c39c2a936f24db1a4935c52fab77cd7\"\n      ]\n    },\n    {\n      \"username\": \"student1\",\n      \"password\": \"$2b$09$K0kbmoec3Bxt27KrqX9VOOT7CZW0hqpjKlJbzUFxvaJWxDfKc9TOK\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667489872364,\n      \"teacher\": \"teacher1\",\n      \"last_login\": 1727543192005,\n      \"epoch\": 1,\n      \"classes\": {\n        \"$type\": \"set\",\n        \"elements\": [\n          \"5c39c2a936f24db1a4935c52fab77cd7\"\n        ]\n      },\n      \"program_count\": 9\n    },\n    {\n      \"username\": \"student3\",\n      \"password\": \"$2b$09$yiorC.aOTGu.K81yTqOhE.pbsqisxNzma7QeDZRq7mMzvbDz65kBa\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667489872408,\n      \"teacher\": \"teacher1\",\n      \"last_login\": 1727726024225,\n      \"epoch\": 1,\n      \"classes\": {\n        \"$type\": \"set\",\n        \"elements\": [\n          \"5c39c2a936f24db1a4935c52fab77cd7\"\n        ]\n      },\n      \"program_count\": 6\n    },\n    {\n      \"username\": \"student4\",\n      \"password\": \"$2b$09$bc4OdLLnTC.pLkavsMYGuexnpZBqvE7iBuE187gPWdsbPub73vmi2\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667489872452,\n      \"teacher\": \"teacher1\",\n      \"verification_pending\": \"$2b$09$TkXnwyfZ8Tf0xRO2.5QWIOZjDCg97gTKIvuUbZTuMcO55gUyqdaeK\",\n      \"last_login\": 1667489872452,\n      \"epoch\": 1,\n      \"classes\": {\n        \"$type\": \"set\",\n        \"elements\": [\n          \"5c39c2a936f24db1a4935c52fab77cd7\"\n        ]\n      }\n    },\n    {\n      \"username\": \"student5\",\n      \"password\": \"$2b$09$aineT99XTPYvr083ykXHoeLHg8H7YxWXr5AfHvjzRyk7WHHC7/OxW\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667489872497,\n      \"teacher\": \"teacher1\",\n      \"last_login\": 1727711630834,\n      \"epoch\": 1,\n      \"classes\": {\n        \"$type\": \"set\",\n        \"elements\": [\n          \"5c39c2a936f24db1a4935c52fab77cd7\"\n        ]\n      },\n      \"program_count\": 20\n    },\n    {\n      \"username\": \"student2\",\n      \"password\": \"$2b$09$OUr8iyX7/HepeG2WVSaPqejsBAoF8PyWcOzjtCSgCXr1Y3NnimCtq\",\n      \"language\": \"en\",\n      \"keyword_language\": \"en\",\n      \"created\": 1667489872541,\n      \"teacher\": \"teacher1\",\n      \"last_login\": 1667490151276,\n      \"epoch\": 1,\n      \"classes\": {\n        \"$type\": \"set\",\n        \"elements\": [\n          \"5c39c2a936f24db1a4935c52fab77cd7\"\n        ]\n      }\n    }\n  ],\n  \"tokens\": [\n    {\n      \"id\": \"$2b$09$R0tt4aYqsOUqVb.y66WSyu\",\n      \"username\": \"student5\",\n      \"ttl\": 1668701770\n    },\n    {\n      \"id\": \"$2b$09$ot86mCX5S29QS0f/EeFjYO\",\n      \"username\": \"teacher1\",\n      \"ttl\": 1728749139\n    },\n    {\n      \"id\": \"$2b$09$FSvukQjf4Dt0d6MTuq9UI.\",\n      \"username\": \"student1\",\n      \"ttl\": 1728752792\n    },\n    {\n      \"id\": \"$2b$09$EW1c0OGdZTGk.TmEBAHKlO\",\n      \"username\": \"student3\",\n      \"ttl\": 1728935624\n    },\n    {\n      \"id\": \"$2b$09$hOgREabUhtSYJqYcMOJHYe\",\n      \"username\": \"user2\",\n      \"ttl\": 1734365878\n    },\n    {\n      \"id\": \"$2b$09$JTGMQfOlo2EeirZKfINqm.\",\n      \"username\": \"user2\",\n      \"ttl\": 1734367672\n    },\n    {\n      \"id\": \"$2b$09$RduILnwU0OJpatkLKskhne\",\n      \"username\": \"user2\",\n      \"ttl\": 1734367828\n    },\n    {\n      \"id\": \"$2b$09$8CpzZGeM1UWMr2W/cJ8jY.\",\n      \"username\": \"user2\",\n      \"ttl\": 1734367841\n    },\n    {\n      \"id\": \"$2b$09$RV4PJ3FGJpsAeCwzfZJ0ru\",\n      \"username\": \"user2\",\n      \"ttl\": 1734367865\n    },\n    {\n      \"id\": \"$2b$09$PPYtDymTu1RGAUd.0dAjAO\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373078\n    },\n    {\n      \"id\": \"$2b$09$gspQ9bUqdbiBopapdPrrVe\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373123\n    },\n    {\n      \"id\": \"$2b$09$hSpDFQKER5Y8YRyIDPyPFO\",\n      \"username\": \"user1\",\n      \"ttl\": 1734373216\n    },\n    {\n      \"id\": \"$2b$09$sQrSrn4j3WlVS2wqt9qYwO\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373269\n    },\n    {\n      \"id\": \"$2b$09$PDyCvZooze4.cadtQT6pme\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373727\n    },\n    {\n      \"id\": \"$2b$09$heT8/OUFvvTIYvym.U44y.\",\n      \"username\": \"user1\",\n      \"ttl\": 1734373730\n    },\n    {\n      \"id\": \"$2b$09$Z/jyNesRibsyhnT55Z2Wn.\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373734\n    },\n    {\n      \"id\": \"$2b$09$IEznXTGO83YguCP4s9HySe\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373740\n    },\n    {\n      \"id\": \"$2b$09$IVKAK/k9rD.nrY6RZ1TaOe\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373765\n    },\n    {\n      \"id\": \"$2b$09$krAdaOhtLvD0MrN/Kw1CMu\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373771\n    },\n    {\n      \"id\": \"$2b$09$xrOnx9MiPAiNa0RTzojr8O\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373774\n    },\n    {\n      \"id\": \"$2b$09$oycpoO97Gace4uMYrgFcRe\",\n      \"username\": \"user2\",\n      \"ttl\": 1734373781\n    }\n  ],\n  \"program-stats\": [\n    {\n      \"id#level\": \"admin#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"admin\",\n      \"level\": 1,\n      \"number_of_lines\": 1,\n      \"successful_runs\": 4\n    },\n    {\n      \"id#level\": \"@all-logged#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"@all-logged\",\n      \"level\": 1,\n      \"number_of_lines\": 0,\n      \"successful_runs\": 5\n    },\n    {\n      \"id#level\": \"user2#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"user2\",\n      \"level\": 1,\n      \"number_of_lines\": 0,\n      \"successful_runs\": 1\n    },\n    {\n      \"id#level\": \"user2#10\",\n      \"week\": \"2022-44\",\n      \"id\": \"user2\",\n      \"level\": 10,\n      \"number_of_lines\": 2,\n      \"ParseException\": 1,\n      \"successful_runs\": 1\n    },\n    {\n      \"id#level\": \"@all-logged#10\",\n      \"week\": \"2022-44\",\n      \"id\": \"@all-logged\",\n      \"level\": 10,\n      \"number_of_lines\": 2,\n      \"ParseException\": 1,\n      \"successful_runs\": 1\n    },\n    {\n      \"id#level\": \"user3#18\",\n      \"week\": \"2022-44\",\n      \"id\": \"user3\",\n      \"level\": 18,\n      \"number_of_lines\": 2,\n      \"successful_runs\": 1\n    },\n    {\n      \"id#level\": \"@all-logged#18\",\n      \"week\": \"2022-44\",\n      \"id\": \"@all-logged\",\n      \"level\": 18,\n      \"number_of_lines\": 2,\n      \"successful_runs\": 1\n    },\n    {\n      \"id#level\": \"user3#6\",\n      \"week\": \"2022-44\",\n      \"id\": \"user3\",\n      \"level\": 6,\n      \"number_of_lines\": 18,\n      \"successful_runs\": 1\n    },\n    {\n      \"id#level\": \"@all-logged#6\",\n      \"week\": \"2022-44\",\n      \"id\": \"@all-logged\",\n      \"level\": 6,\n      \"number_of_lines\": 18,\n      \"successful_runs\": 1\n    },\n    {\n      \"id#level\": \"student1#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"student1\",\n      \"level\": 1,\n      \"number_of_lines\": 9,\n      \"successful_runs\": 3,\n      \"MissingCommandException\": 1,\n      \"LonelyEchoException\": 1\n    },\n    {\n      \"id#level\": \"@all-students#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"@all-students\",\n      \"level\": 1,\n      \"number_of_lines\": 0,\n      \"successful_runs\": 11,\n      \"MissingCommandException\": 1,\n      \"LonelyEchoException\": 1,\n      \"IncompleteCommandException\": 1\n    },\n    {\n      \"id#level\": \"student2#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"student2\",\n      \"level\": 1,\n      \"number_of_lines\": 0,\n      \"successful_runs\": 2,\n      \"IncompleteCommandException\": 1\n    },\n    {\n      \"id#level\": \"student5#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"student5\",\n      \"level\": 1,\n      \"number_of_lines\": 4,\n      \"successful_runs\": 5\n    },\n    {\n      \"id#level\": \"student3#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"student3\",\n      \"level\": 1,\n      \"number_of_lines\": 0,\n      \"successful_runs\": 1\n    },\n    {\n      \"id#level\": \"@all-anonymous#13\",\n      \"week\": \"2024-39\",\n      \"id\": \"@all-anonymous\",\n      \"level\": 13,\n      \"number_of_lines\": 24,\n      \"UnquotedTextException\": 1,\n      \"chart_history\": [\n        0\n      ]\n    },\n    {\n      \"id#level\": \"student1#1\",\n      \"week\": \"2024-39\",\n      \"id\": \"student1\",\n      \"level\": 1,\n      \"number_of_lines\": 20,\n      \"successful_runs\": 44,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"@all-students#1\",\n      \"week\": \"2024-39\",\n      \"id\": \"@all-students\",\n      \"level\": 1,\n      \"number_of_lines\": 20,\n      \"successful_runs\": 44,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"student5#1\",\n      \"week\": \"2024-40\",\n      \"id\": \"student5\",\n      \"level\": 1,\n      \"number_of_lines\": 24,\n      \"successful_runs\": 35,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"@all-students#1\",\n      \"week\": \"2024-40\",\n      \"id\": \"@all-students\",\n      \"level\": 1,\n      \"number_of_lines\": 24,\n      \"successful_runs\": 50,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"student5#2\",\n      \"week\": \"2024-40\",\n      \"id\": \"student5\",\n      \"level\": 2,\n      \"number_of_lines\": 24,\n      \"successful_runs\": 10,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"@all-students#2\",\n      \"week\": \"2024-40\",\n      \"id\": \"@all-students\",\n      \"level\": 2,\n      \"number_of_lines\": 24,\n      \"successful_runs\": 10,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"student5#3\",\n      \"week\": \"2024-40\",\n      \"id\": \"student5\",\n      \"level\": 3,\n      \"number_of_lines\": 24,\n      \"successful_runs\": 9,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"@all-students#3\",\n      \"week\": \"2024-40\",\n      \"id\": \"@all-students\",\n      \"level\": 3,\n      \"number_of_lines\": 24,\n      \"successful_runs\": 9,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"student5#7\",\n      \"week\": \"2024-40\",\n      \"id\": \"student5\",\n      \"level\": 7,\n      \"number_of_lines\": 24,\n      \"UnquotedTextException\": 4,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        0\n      ]\n    },\n    {\n      \"id#level\": \"@all-students#7\",\n      \"week\": \"2024-40\",\n      \"id\": \"@all-students\",\n      \"level\": 7,\n      \"number_of_lines\": 24,\n      \"UnquotedTextException\": 4,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        0\n      ]\n    },\n    {\n      \"id#level\": \"student3#1\",\n      \"week\": \"2024-40\",\n      \"id\": \"student3\",\n      \"level\": 1,\n      \"number_of_lines\": 24,\n      \"successful_runs\": 15,\n      \"chart_history\": [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"user1#9\",\n      \"week\": \"2024-49\",\n      \"id\": \"user1\",\n      \"level\": 9,\n      \"number_of_lines\": 2,\n      \"NoIndentationException\": 10,\n      \"chart_history\": [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ]\n    },\n    {\n      \"id#level\": \"@all-logged#9\",\n      \"week\": \"2024-49\",\n      \"id\": \"@all-logged\",\n      \"level\": 9,\n      \"number_of_lines\": 12,\n      \"NoIndentationException\": 10,\n      \"chart_history\": [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        1,\n        1,\n        1\n      ],\n      \"IndentationException\": 2,\n      \"successful_runs\": 3\n    },\n    {\n      \"id#level\": \"user2#9\",\n      \"week\": \"2024-49\",\n      \"id\": \"user2\",\n      \"level\": 9,\n      \"number_of_lines\": 2,\n      \"IndentationException\": 2,\n      \"chart_history\": [\n        0,\n        0\n      ]\n    },\n    {\n      \"id#level\": \"teacher1#9\",\n      \"week\": \"2024-49\",\n      \"id\": \"teacher1\",\n      \"level\": 9,\n      \"number_of_lines\": 12,\n      \"successful_runs\": 3,\n      \"chart_history\": [\n        1,\n        1,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"user1#8\",\n      \"week\": \"2024-49\",\n      \"id\": \"user1\",\n      \"level\": 8,\n      \"number_of_lines\": 3,\n      \"successful_runs\": 3,\n      \"chart_history\": [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]\n    },\n    {\n      \"id#level\": \"@all-logged#8\",\n      \"week\": \"2024-49\",\n      \"id\": \"@all-logged\",\n      \"level\": 8,\n      \"number_of_lines\": 3,\n      \"successful_runs\": 3,\n      \"chart_history\": [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        1,\n        1,\n        1,\n        1\n      ]\n    }\n  ],\n  \"achievements\": [\n    {\n      \"username\": \"admin\",\n      \"run_programs\": 4,\n      \"commands\": [\n        \"print\"\n      ],\n      \"achieved\": [\n        \"getting_started_I\",\n        \"one_to_remember_I\",\n        \"adventure_is_worthwhile\",\n        \"double_check\"\n      ],\n      \"saved_programs\": 4\n    },\n    {\n      \"username\": \"user1\",\n      \"achieved\": [\n        \"go_live\"\n      ]\n    },\n    {\n      \"username\": \"user2\",\n      \"achieved\": [\n        \"well_begun_is_half_done\",\n        \"getting_started_I\",\n        \"one_to_remember_I\",\n        \"adventure_is_worthwhile\",\n        \"double_check\"\n      ],\n      \"run_programs\": 1,\n      \"commands\": [\n        \"print\",\n        \"for\",\n        \"is\"\n      ],\n      \"saved_programs\": 2\n    },\n    {\n      \"username\": \"user3\",\n      \"run_programs\": 2,\n      \"commands\": [\n        \"print\",\n        \"for\",\n        \"ask\",\n        \"if\",\n        \"is\",\n        \"else\"\n      ],\n      \"achieved\": [\n        \"getting_started_I\",\n        \"one_to_remember_I\",\n        \"adventure_is_worthwhile\",\n        \"double_check\",\n        \"go_live\",\n        \"did_you_say_please\",\n        \"hedy_honor\",\n        \"indiana_jones\",\n        \"next_question\",\n        \"quiz_master\"\n      ],\n      \"saved_programs\": 3\n    },\n    {\n      \"username\": \"teacher1\",\n      \"achieved\": [\n        \"ready_set_education\",\n        \"my_class_my_rules\"\n      ]\n    },\n    {\n      \"username\": \"student1\",\n      \"run_programs\": 3,\n      \"commands\": [\n        \"print\",\n        \"echo\",\n        \"ask\"\n      ],\n      \"achieved\": [\n        \"getting_started_I\",\n        \"did_you_say_please\"\n      ]\n    },\n    {\n      \"username\": \"student2\",\n      \"achieved\": [\n        \"well_begun_is_half_done\",\n        \"getting_started_I\"\n      ],\n      \"run_programs\": 1,\n      \"commands\": [\n        \"print\"\n      ]\n    },\n    {\n      \"username\": \"student5\",\n      \"run_programs\": 5,\n      \"commands\": [\n        \"print\",\n        \"ask\",\n        \"echo\",\n        \"turn\",\n        \"forward\"\n      ],\n      \"achieved\": [\n        \"getting_started_I\",\n        \"did_you_say_please\",\n        \"hedy_honor\",\n        \"one_to_remember_I\",\n        \"adventure_is_worthwhile\",\n        \"double_check\",\n        \"ninja_turtle\",\n        \"next_question\",\n        \"next_question\",\n        \"quiz_master\",\n        \"quiz_master\"\n      ],\n      \"saved_programs\": 2\n    },\n    {\n      \"username\": \"student3\",\n      \"achieved\": [\n        \"well_begun_is_half_done\"\n      ]\n    }\n  ],\n  \"programs\": [\n    {\n      \"id\": \"0e538f041638423297420216385fbd02\",\n      \"session\": \"d88c181e6a0c4f43919130d42f279f2f\",\n      \"date\": 1667488047709,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print This is a saved program\\nprint this is a test!!!\",\n      \"name\": \"Level 1\",\n      \"username\": \"admin\",\n      \"public\": 1,\n      \"error\": false,\n      \"adventure_name\": \"default\"\n    },\n    {\n      \"id\": \"30bd4e4ce84f40bca40b24b9295e1483\",\n      \"session\": \"d88c181e6a0c4f43919130d42f279f2f\",\n      \"date\": 1667488252222,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 10,\n      \"code\": \"friends is robert, peter, carlos, juan, eli\\nfor friend in friends\\n    print 'Whats up ' friend\",\n      \"name\": \"Level 10\",\n      \"username\": \"user2\",\n      \"public\": 1,\n      \"error\": false,\n      \"adventure_name\": \"default\"\n    },\n    {\n      \"id\": \"a24e2453366248fb9359fffa3089d209\",\n      \"session\": \"d88c181e6a0c4f43919130d42f279f2f\",\n      \"date\": 1667488320813,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 18,\n      \"code\": \"print('Hello!')\\nfor i in range(1, 10):\\n    print('This is line ', i)\",\n      \"name\": \"Level 18\",\n      \"username\": \"user3\",\n      \"public\": 1,\n      \"error\": false,\n      \"adventure_name\": \"default\"\n    },\n    {\n      \"id\": \"01c1af908479409390cd0c4dc3444eec\",\n      \"session\": \"d88c181e6a0c4f43919130d42f279f2f\",\n      \"date\": 1667488660769,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 6,\n      \"code\": \"print 'Welcome to Hedys restaurant'\\nprint 'Here is our menu:'\\nprint 'Our starters are salad, soup, or carpaccio'\\nprint 'Our main courses are pizza, lasagne, or spaghetti'\\nprint 'Our desserts are brownie, icecream, or milkshake'\\nstarter = ask 'Which starter would you like to have?'\\nmain = ask 'Which main course would you like?'\\ndessert = ask 'Which dessert do you pick?'\\nprice = 0\\nif starter is soup price = price + 6 else price = price + 7\\nif main is pizza price = price + 10\\nif main is lasagne price = price + 12\\nif main is spaghetti price = price + 8\\nif dessert is brownie price = price + 7\\nif dessert is icecream price = price + 5\\nif dessert is milkshake price = price + 4\\nprint 'You have ordered ' starter ' , ' main ' and ' dessert\\nprint 'That will be ' price ' dollars, please'\\nprint 'Thank you, enjoy your meal!'\",\n      \"name\": \"Restaurant - Level 6\",\n      \"username\": \"user3\",\n      \"public\": 1,\n      \"error\": false,\n      \"adventure_name\": \"restaurant\",\n      \"hedy_choice\": 1\n    },\n    {\n      \"id\": \"18c9161454324622a9c5dfa06f2981ac\",\n      \"session\": \"d88c181e6a0c4f43919130d42f279f2f\",\n      \"date\": 1667490487613,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Welcome to Hedy's restaurant \\ud83c\\udf5f\\nask What would you like to order?\\necho So you would like to order\\nprint Thanks you for your order!\\nprint It's on its way!\",\n      \"name\": \"Restaurant - Level 1\",\n      \"username\": \"student5\",\n      \"public\": 1,\n      \"error\": false,\n      \"adventure_name\": \"restaurant\"\n    },\n    {\n      \"id\": \"0e538f041638423297420216385fbd02\",\n      \"session\": \"d88c181e6a0c4f43919130d42f279f2f\",\n      \"date\": 1667488047709,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print This is a saved program\\nprint it has been modified!!!\",\n      \"name\": \"Level 1\",\n      \"username\": \"teacher1\",\n      \"public\": 1,\n      \"error\": false,\n      \"adventure_name\": \"default\",\n      \"is_modified\": true\n    },\n    {\n      \"id\": \"18c9161454324622a9c5dfa06f2981ac\",\n      \"session\": \"d88c181e6a0c4f43919130d42f279f2f\",\n      \"date\": 1667490487613,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Welcome to Hedy's restaurant \\ud83c\\udf5f\\nask What would you like to order?\\necho So you would like to order\\nprint Thanks you for your order!\\nprint It's on its way!\",\n      \"name\": \"Restaurant - Level 1\",\n      \"username\": \"teacher1\",\n      \"public\": 1,\n      \"error\": false,\n      \"adventure_name\": \"restaurant\"\n    },\n    {\n      \"id\": \"94aae222be5a49388e9899f3d9b3d4ab\",\n      \"session\": \"d88c181e6a0c4f43919130d42f279f2f\",\n      \"date\": 1667488047709,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hi there, programmer!\\nprint Welcome to Hedy!\",\n      \"name\": \"Level 1\",\n      \"username\": \"teacher1\",\n      \"public\": 0,\n      \"error\": false,\n      \"adventure_name\": \"print\",\n      \"is_modified\": false\n    },\n    {\n      \"session\": \"fac24066d19f4fd8ac44508ac4a7fdae\",\n      \"date\": 1716482478177,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hi there, programmer!\\nprint Welcome to Hedy!\\nprint Hi there, programmer!\\nprint Welcome to Hedy!\\nprint Hi there, programmer!\\nprint Welcome to Hedy!\\nprint Hi there, programmer!\\nprint Welcome to Hedy!\\nprint Hi there, programmer!\\nprint Welcome to Hedy!\\n\",\n      \"name\": \"print 1\",\n      \"username\": \"teacher1\",\n      \"error\": false,\n      \"adventure_name\": \"print_command\",\n      \"id\": \"4c426ff4cd5a40d7bb65bfbb35907f8b\",\n      \"username_level\": \"teacher1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"fac24066d19f4fd8ac44508ac4a7fdae\",\n      \"date\": 1716484205262,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 2,\n      \"code\": \"ask hello world\",\n      \"name\": \"Introducci\\u00f3n 2\",\n      \"username\": \"teacher1\",\n      \"error\": null,\n      \"adventure_name\": \"default\",\n      \"id\": \"195d94e733ff49b08079848409e664b6\",\n      \"username_level\": \"teacher1-2\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"fac24066d19f4fd8ac44508ac4a7fdae\",\n      \"date\": 1716486094966,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 2,\n      \"code\": \"var1 is 1\\nvar2 is 2\\nvar3 is 3\\nprint var1 var2 var3\\n\",\n      \"name\": \"Story 2\",\n      \"username\": \"teacher1\",\n      \"error\": false,\n      \"adventure_name\": \"story\",\n      \"id\": \"3e8926c0515d47a5aeb116164b1278c9\",\n      \"username_level\": \"teacher1-2\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"fac24066d19f4fd8ac44508ac4a7fdae\",\n      \"date\": 1716493926819,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello!\\nask What is your name?\\nprint Hello!\\nask What is your name?\\nprint Hello!\\nask What is your name?\\nprint Hello!\\nask What is your name?\\n\",\n      \"name\": \"ask_command 1\",\n      \"username\": \"teacher1\",\n      \"error\": false,\n      \"adventure_name\": \"ask_command\",\n      \"id\": \"e1d94726655947c5b0309abb18cc17ca\",\n      \"username_level\": \"teacher1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a7bed8139a064612a64a5e1df83fc249\",\n      \"date\": 1727543218089,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Introduction 1\",\n      \"username\": \"student1\",\n      \"error\": false,\n      \"adventure_name\": \"default\",\n      \"id\": \"1e29e08e54644e2f81d4e96fa3f0572f\",\n      \"username_level\": \"student1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a7bed8139a064612a64a5e1df83fc249\",\n      \"date\": 1727543225548,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"adventure1\",\n      \"username\": \"student1\",\n      \"error\": false,\n      \"adventure_name\": \"3f8aea42eb324f08a16776671498dd1b\",\n      \"id\": \"f3412588eeb245609f6c4067800a28bb\",\n      \"username_level\": \"student1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a7bed8139a064612a64a5e1df83fc249\",\n      \"date\": 1727543231865,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Parrot 1\",\n      \"username\": \"student1\",\n      \"error\": false,\n      \"adventure_name\": \"parrot\",\n      \"id\": \"b0b5822d859e4025ac45212ef8b8fb6e\",\n      \"username_level\": \"student1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a7bed8139a064612a64a5e1df83fc249\",\n      \"date\": 1727543234556,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Fortune Teller 1\",\n      \"username\": \"student1\",\n      \"error\": false,\n      \"adventure_name\": \"fortune\",\n      \"id\": \"3f9720d9495249df8c83efeb9ed1a89e\",\n      \"username_level\": \"student1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a7bed8139a064612a64a5e1df83fc249\",\n      \"date\": 1727543238360,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Haunted House 1\",\n      \"username\": \"student1\",\n      \"error\": false,\n      \"adventure_name\": \"haunted\",\n      \"id\": \"0fec58f3e1b34588aee7a3bf478dac23\",\n      \"username_level\": \"student1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a7bed8139a064612a64a5e1df83fc249\",\n      \"date\": 1727543242117,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Restaurant 1\",\n      \"username\": \"student1\",\n      \"error\": false,\n      \"adventure_name\": \"restaurant\",\n      \"id\": \"60a3eb541cf64f95a42d576a05db5ec0\",\n      \"username_level\": \"student1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a7bed8139a064612a64a5e1df83fc249\",\n      \"date\": 1727543245458,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Story 1\",\n      \"username\": \"student1\",\n      \"error\": false,\n      \"adventure_name\": \"story\",\n      \"id\": \"1276a87cb5fa4c9e83b627592420d364\",\n      \"username_level\": \"student1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a7bed8139a064612a64a5e1df83fc249\",\n      \"date\": 1727543250029,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Turtle 1\",\n      \"username\": \"student1\",\n      \"error\": false,\n      \"adventure_name\": \"turtle\",\n      \"id\": \"e00e95248f0d4edb823c2b5dbce31254\",\n      \"username_level\": \"student1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a7bed8139a064612a64a5e1df83fc249\",\n      \"date\": 1727543253652,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Rock_2 1\",\n      \"username\": \"student1\",\n      \"error\": false,\n      \"adventure_name\": \"rock\",\n      \"id\": \"0dc61ace147b46ecbd2c71f1c3fc6c88\",\n      \"username_level\": \"student1-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727711706894,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Rock_2 1\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"rock\",\n      \"id\": \"8f24af7e4185492087ba697ca3f56190\",\n      \"username_level\": \"student5-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712395430,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 2,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Rock_2 2\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"rock\",\n      \"id\": \"641ce96348504ba4b891ce981ba2775f\",\n      \"username_level\": \"student5-2\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712396919,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 2,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Rock_2 2\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"rock\",\n      \"id\": \"4defa229da8d4af984fe6b9351f29567\",\n      \"username_level\": \"student5-2\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712397286,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 2,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Rock_2 2\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"rock\",\n      \"id\": \"735fab044f024bc5880c488a01e933cd\",\n      \"username_level\": \"student5-2\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712397392,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 2,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Rock_2 2\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"rock\",\n      \"id\": \"282a23d192ca47e69ebe383bf32a0de5\",\n      \"username_level\": \"student5-2\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712398450,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 2,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Introduction 2\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"default\",\n      \"id\": \"4d86425cc5324caeba917caa139fa52a\",\n      \"username_level\": \"student5-2\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712398243,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 2,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Introduction 2\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"default\",\n      \"id\": \"620ddd04547b424b98ef7e7452d817e3\",\n      \"username_level\": \"student5-2\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712401750,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 2,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Haunted House 2\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"haunted\",\n      \"id\": \"33534135dd434726980a46a7ad2b087f\",\n      \"username_level\": \"student5-2\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712410596,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 3,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Haunted House 3\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"haunted\",\n      \"id\": \"f78b86d9f79c49cfa9d3626b78dd82fa\",\n      \"username_level\": \"student5-3\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712410096,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 3,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Haunted House 3\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"haunted\",\n      \"id\": \"4fe5cca9da354add9b33b11ae1845a51\",\n      \"username_level\": \"student5-3\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712414310,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 3,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Introduction 3\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"default\",\n      \"id\": \"507c1c830a0f4e1fb35862ffc4948e76\",\n      \"username_level\": \"student5-3\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712416525,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 3,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Turtle 3\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"turtle\",\n      \"id\": \"c08be9c5367046c79c97b2954ca14956\",\n      \"username_level\": \"student5-3\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712424976,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 7,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Introduction 7\",\n      \"username\": \"student5\",\n      \"error\": true,\n      \"adventure_name\": \"default\",\n      \"id\": \"2078caff4a714951b89df1542555dea9\",\n      \"username_level\": \"student5-7\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712425644,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 7,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Introduction 7\",\n      \"username\": \"student5\",\n      \"error\": true,\n      \"adventure_name\": \"default\",\n      \"id\": \"c3152d0250cf4df3bc5e8e18261174eb\",\n      \"username_level\": \"student5-7\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712426030,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 7,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Introduction 7\",\n      \"username\": \"student5\",\n      \"error\": true,\n      \"adventure_name\": \"default\",\n      \"id\": \"53c131e5be9f4eea9aa01d1dbde5c95c\",\n      \"username_level\": \"student5-7\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727712426124,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 7,\n      \"code\": \"print what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\nprint what do you choose?\\n\",\n      \"name\": \"Introduction 7\",\n      \"username\": \"student5\",\n      \"error\": true,\n      \"adventure_name\": \"default\",\n      \"id\": \"8c8269ecce6f4983832b24d39f124dec\",\n      \"username_level\": \"student5-7\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727725996205,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Introduction 1\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"default\",\n      \"id\": \"67b0098c0fc6495d96d7b5a6ba693f87\",\n      \"username_level\": \"student5-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727726006578,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Fortune Teller 1\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"fortune\",\n      \"id\": \"9676bb4a856e4025b5d6a7c60123f616\",\n      \"username_level\": \"student5-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727726010272,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Haunted House 1\",\n      \"username\": \"student5\",\n      \"error\": false,\n      \"adventure_name\": \"haunted\",\n      \"id\": \"c5dba732996344a095f0f5615376bd31\",\n      \"username_level\": \"student5-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727726027871,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Introduction 1\",\n      \"username\": \"student3\",\n      \"error\": false,\n      \"adventure_name\": \"default\",\n      \"id\": \"02930e0a15894bc68331775f08e12a32\",\n      \"username_level\": \"student3-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727726030492,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Parrot 1\",\n      \"username\": \"student3\",\n      \"error\": false,\n      \"adventure_name\": \"parrot\",\n      \"id\": \"7a229194799f47ba940de9e9071fcec7\",\n      \"username_level\": \"student3-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727726032876,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Fortune Teller 1\",\n      \"username\": \"student3\",\n      \"error\": false,\n      \"adventure_name\": \"fortune\",\n      \"id\": \"a999d6d38c7c411095a2571e784d40aa\",\n      \"username_level\": \"student3-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727726035636,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Story 1\",\n      \"username\": \"student3\",\n      \"error\": false,\n      \"adventure_name\": \"story\",\n      \"id\": \"9ea5a534bc6047fdb17c20e4c98259ae\",\n      \"username_level\": \"student3-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727726037481,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Turtle 1\",\n      \"username\": \"student3\",\n      \"error\": false,\n      \"adventure_name\": \"turtle\",\n      \"id\": \"c70631ec3b2d410596f813c9d6b57709\",\n      \"username_level\": \"student3-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"8198996e0606458999482d1a1a7cbe9c\",\n      \"date\": 1727726040001,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 1,\n      \"code\": \"print Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\nprint Hello world!\\n\",\n      \"name\": \"Rock_2 1\",\n      \"username\": \"student3\",\n      \"error\": false,\n      \"adventure_name\": \"rock\",\n      \"id\": \"48ec04d60a4c4990a60b9e5e81121e71\",\n      \"username_level\": \"student3-1\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"a583433caabc41af9cff634103fc315d\",\n      \"date\": 1733156126001,\n      \"lang\": \"fr\",\n      \"version\": \"DEV\",\n      \"level\": 9,\n      \"code\": \"r\\u00e9p\\u00e8te 1 fois\\ntourne 3\\n    avance 50\",\n      \"name\": \"Introduction 9\",\n      \"username\": \"user1\",\n      \"error\": true,\n      \"adventure_name\": \"default\",\n      \"id\": \"fb23d0fa90ce48b5bf87c0632969fc28\",\n      \"username_level\": \"user1-9\",\n      \"is_modified\": true,\n      \"public\": 1\n    },\n    {\n      \"session\": \"173c7cd2f263450dad41ee7ebd418c17\",\n      \"date\": 1733159847416,\n      \"lang\": \"en\",\n      \"version\": \"DEV\",\n      \"level\": 9,\n      \"code\": \"points = 0\\nletters = a, b, c, d, e\\nrepeat 10 times\\n    letter = letters at random\\n    print 'Press the letter ' letter\\n    if letter is pressed\\n        print 'great'\\n        points = points + 1\\n    else\\n        print 'oops wrong letter'\\n        points = points - 2\\n\\nprint points\",\n      \"name\": \"Introduction 9\",\n      \"username\": \"teacher1\",\n      \"adventure_name\": \"default\",\n      \"id\": \"859c72b5842e4fa1a2d95ed747707f4e\",\n      \"username_level\": \"teacher1-9\",\n      \"is_modified\": true\n    },\n    {\n      \"session\": \"3d86da3dabd1432fa99902a894139edc\",\n      \"date\": 1733163649867,\n      \"lang\": \"fr\",\n      \"version\": \"DEV\",\n      \"level\": 8,\n      \"code\": \"r\\u00e9p\\u00e8te 5 fois\\n    affiche \\\"Salut tout le monde\\\"\\n    affiche\\\"Tout ceci sera r\\u00e9p\\u00e9t\\u00e9 5 fois\\\"\\n\",\n      \"name\": \"repeat_command 8\",\n      \"username\": \"user1\",\n      \"error\": false,\n      \"adventure_name\": \"repeat_command\",\n      \"id\": \"4386f49502344c5cb915b37acb959a27\",\n      \"username_level\": \"user1-8\",\n      \"is_modified\": true,\n      \"public\": 1\n    }\n  ],\n  \"public_profiles\": [\n    {\n      \"username\": \"user1\",\n      \"image\": \"1\",\n      \"personal_text\": \"I like Hedy!\",\n      \"agree_terms\": \"on\",\n      \"tags\": [],\n      \"country\": \"VE\"\n    },\n    {\n      \"username\": \"user3\",\n      \"image\": \"1\",\n      \"personal_text\": \"I like Hedy!\",\n      \"agree_terms\": \"on\",\n      \"tags\": [],\n      \"achievements\": 10,\n      \"last_achievement\": 1667489184479\n    },\n    {\n      \"username\": \"teacher1\",\n      \"image\": \"1\",\n      \"personal_text\": \"I like Hedy!\",\n      \"agree_terms\": \"on\",\n      \"tags\": []\n    }\n  ],\n  \"quiz-stats\": [\n    {\n      \"id#level\": \"user3#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"user3\",\n      \"level\": 1,\n      \"started\": 1,\n      \"finished\": 1,\n      \"scores\": [\n        100\n      ]\n    },\n    {\n      \"id#level\": \"@all-logged#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"@all-logged\",\n      \"level\": 1,\n      \"started\": 1,\n      \"finished\": 1,\n      \"scores\": [\n        100\n      ]\n    },\n    {\n      \"id#level\": \"student5#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"student5\",\n      \"level\": 1,\n      \"started\": 1,\n      \"finished\": 1,\n      \"scores\": [\n        100\n      ]\n    },\n    {\n      \"id#level\": \"@all-students#1\",\n      \"week\": \"2022-44\",\n      \"id\": \"@all-students\",\n      \"level\": 1,\n      \"started\": 2,\n      \"finished\": 1,\n      \"scores\": [\n        100\n      ]\n    }\n  ],\n  \"quizAnswers\": [\n    {\n      \"user\": \"user3\",\n      \"levelAttempt\": \"0001_fd60809034f345b2890b725d76d16611\",\n      \"attemptId\": \"fd60809034f345b2890b725d76d16611\",\n      \"level\": 1,\n      \"date\": 1667489183,\n      \"q1\": [\n        \"A\"\n      ],\n      \"correct\": {\n        \"$type\": \"set\",\n        \"elements\": [\n          1,\n          2,\n          3,\n          4,\n          5,\n          6,\n          7,\n          8,\n          9,\n          10\n        ]\n      },\n      \"q2\": [\n        \"B\"\n      ],\n      \"q3\": [\n        \"C\"\n      ],\n      \"q4\": [\n        \"A\"\n      ],\n      \"q5\": [\n        \"D\"\n      ],\n      \"q6\": [\n        \"B\"\n      ],\n      \"q7\": [\n        \"D\"\n      ],\n      \"q8\": [\n        \"C\"\n      ],\n      \"q9\": [\n        \"B\"\n      ],\n      \"q10\": [\n        \"A\"\n      ]\n    },\n    {\n      \"user\": \"student5\",\n      \"levelAttempt\": \"0001_d5e89acbe5d647fa85825f384075b20e\",\n      \"attemptId\": \"d5e89acbe5d647fa85825f384075b20e\",\n      \"level\": 1,\n      \"date\": 1667490670,\n      \"q1\": [\n        \"A\"\n      ],\n      \"correct\": {\n        \"$type\": \"set\",\n        \"elements\": [\n          1,\n          2,\n          3,\n          4,\n          5,\n          6,\n          7,\n          8,\n          9,\n          10\n        ]\n      },\n      \"q2\": [\n        \"B\"\n      ],\n      \"q3\": [\n        \"C\"\n      ],\n      \"q4\": [\n        \"A\"\n      ],\n      \"q5\": [\n        \"D\"\n      ],\n      \"q6\": [\n        \"B\"\n      ],\n      \"q7\": [\n        \"D\"\n      ],\n      \"q8\": [\n        \"C\"\n      ],\n      \"q9\": [\n        \"B\"\n      ],\n      \"q10\": [\n        \"A\"\n      ]\n    },\n    {\n      \"user\": \"student3\",\n      \"levelAttempt\": \"0001_75f5cfe08a214fbdac9f9be69dd539ad\",\n      \"attemptId\": \"75f5cfe08a214fbdac9f9be69dd539ad\",\n      \"level\": 1,\n      \"date\": 1667491095,\n      \"q1\": [\n        \"A\"\n      ],\n      \"correct\": {\n        \"$type\": \"set\",\n        \"elements\": [\n          1\n        ]\n      }\n    }\n  ],\n  \"classes\": [\n    {\n      \"id\": \"5c39c2a936f24db1a4935c52fab77cd7\",\n      \"date\": 1667489642339,\n      \"teacher\": \"teacher1\",\n      \"link\": \"26EUkkL\",\n      \"name\": \"CLASS1\",\n      \"students\": {\n        \"$type\": \"set\",\n        \"elements\": [\n          \"student2\",\n          \"student1\",\n          \"student5\",\n          \"student4\",\n          \"student3\"\n        ]\n      },\n      \"second_teachers\": [\n        {\n          \"username\": \"teacher4\",\n          \"role\": \"teacher\"\n        }\n      ],\n      \"last_viewed_level\": 1\n    }\n  ],\n  \"class_customizations\": [\n    {\n      \"id\": \"5c39c2a936f24db1a4935c52fab77cd7\",\n      \"levels\": [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18\n      ],\n      \"opening_dates\": {},\n      \"other_settings\": [],\n      \"level_thresholds\": {\n        \"quiz\": 90\n      },\n      \"sorted_adventures\": {\n        \"1\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"3f8aea42eb324f08a16776671498dd1b\",\n            \"from_teacher\": true\n          },\n          {\n            \"name\": \"parrot\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"fortune\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"haunted\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"turtle\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"rock\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"2\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parrot\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"haunted\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"turtle\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"rock\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"3\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parrot\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"fortune\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"haunted\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"turtle\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dishes\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dice\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"rock\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"4\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"fortune\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"haunted\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"turtle\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dishes\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dice\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"rock\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"5\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parrot\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"fortune\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"haunted\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"turtle\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dishes\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dice\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"rock\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"language\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"6\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"fortune\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"songs\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"turtle\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dishes\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dice\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"calculator\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"7\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"fortune\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"songs\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"turtle\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dishes\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dice\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"8\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"fortune\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"songs\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"turtle\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"9\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"haunted\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"rock\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"calculator\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"10\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"fortune\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"songs\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dishes\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dice\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"rock\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"calculator\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"11\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"haunted\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"songs\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"12\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"fortune\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"songs\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"calculator\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"piggybank\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"secret\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"parsons\",\n            \"from_teacher\": false\n          }\n        ],\n        \"13\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"rock\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"secret\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"tic\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          }\n        ],\n        \"14\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"haunted\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"calculator\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"piggybank\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quizmaster\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"tic\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          }\n        ],\n        \"15\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"restaurant\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"story\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"dice\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"rock\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"calculator\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"tic\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          }\n        ],\n        \"16\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"haunted\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"songs\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"language\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          }\n        ],\n        \"17\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"tic\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"blackjack\",\n            \"from_teacher\": false\n          },\n          {\n            \"name\": \"quiz\",\n            \"from_teacher\": false\n          }\n        ],\n        \"18\": [\n          {\n            \"name\": \"default\",\n            \"from_teacher\": false\n          }\n        ]\n      },\n      \"available_levels\": [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18\n      ],\n      \"quiz_parsons_tabs_migrated\": 1,\n      \"updated_by\": \"teacher1\"\n    }\n  ],\n  \"adventures\": [\n    {\n      \"id\": \"3f8aea42eb324f08a16776671498dd1b\",\n      \"date\": 1668695742716,\n      \"creator\": \"teacher1\",\n      \"name\": \"adventure1\",\n      \"language\": \"en\",\n      \"level\": \"1\",\n      \"levels\": [\n        \"1\",\n        \"2\"\n      ],\n      \"content\": \"This is the explanation of my adventure!\\n\\nThis way I can show a command: <code>print</code>\\n\\nBut sometimes I might want to show a piece of code, like this:\\n<pre class=\\\"no-copy-button\\\">ask What's your name?\\necho so your name is \\n</pre>\",\n      \"public\": 1,\n      \"tags\": [\n        \"test\"\n      ]\n    },\n    {\n      \"id\": \"c9ccb61ae9334416aba972f5d5089939\",\n      \"date\": 1709899719928,\n      \"creator\": \"teacher2\",\n      \"name\": \"adventure2\",\n      \"level\": \"1\",\n      \"content\": \"<p>This is the explanation of my adventure! This way I can show a command: <code>{print}</code> But sometimes I might want to show a piece of code, like this:</p><pre><code class=\\\"language-python\\\">{ask} What's your name?\\n{echo} so your name is</code></pre><p>&nbsp;</p>\",\n      \"language\": \"nl\",\n      \"levels\": [\n        \"1\"\n      ],\n      \"public\": 1\n    },\n    {\n      \"id\": \"01f34a6453ff420a8fb83a3fc0f18d8d\",\n      \"date\": 1709899719928,\n      \"creator\": \"teacher1\",\n      \"name\": \"adventure3\",\n      \"level\": \"2\",\n      \"content\": \"<p>This is the explanation of my adventure! This way I can show a command: <code>{print}</code> But sometimes I might want to show a piece of code, like this:</p><pre><code class=\\\"language-python\\\">{ask} What's your name?\\n{echo} so your name is</code></pre><p>&nbsp;</p>\",\n      \"language\": \"ar\",\n      \"levels\": [\n        \"2\",\n        \"3\"\n      ],\n      \"public\": 0\n    },\n    {\n      \"id\": \"7f9bea42eb324f08a16776671498dd19\",\n      \"date\": 1683691242791,\n      \"creator\": \"teacher2\",\n      \"name\": \"adventure4\",\n      \"language\": \"en\",\n      \"level\": \"1\",\n      \"levels\": [\n        \"1\"\n      ],\n      \"content\": \"This is an English public adventure for level 1\",\n      \"public\": 1\n    },\n    {\n      \"id\": \"812bea42eb324f08a16776671498aa20\",\n      \"date\": 1683345431214,\n      \"creator\": \"teacher1\",\n      \"name\": \"language-less\",\n      \"level\": \"1\",\n      \"levels\": [\n        \"1\",\n        \"2\",\n        \"3\"\n      ],\n      \"content\": \"This is a public adventure without a language for levels 1, 2 and 3\",\n      \"public\": 1\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": \"01f34a6453ff420a8fb83a3fc0f18d8d\",\n      \"name\": \"test\",\n      \"tagged_in\": [\n        {\n          \"id\": \"3f8aea42eb324f08a16776671498dd1b\",\n          \"public\": true,\n          \"language\": \"en\"\n        }\n      ],\n      \"popularity\": 1\n    }\n  ],\n  \"surveys\": [\n    {\n      \"id\": \"class_5c39c2a936f24db1a4935c52fab77cd7\"\n    }\n  ],\n  \"student_adventures\": [\n    {\n      \"id\": \"student5-restaurant-1\",\n      \"ticked\": true,\n      \"program_id\": \"18c9161454324622a9c5dfa06f2981ac\"\n    },\n    {\n      \"id\": \"student1-rock-1\",\n      \"ticked\": true,\n      \"program_id\": \"0dc61ace147b46ecbd2c71f1c3fc6c88\"\n    },\n    {\n      \"id\": \"student1-turtle-1\",\n      \"ticked\": false,\n      \"program_id\": \"e00e95248f0d4edb823c2b5dbce31254\"\n    },\n    {\n      \"id\": \"student1-story-1\",\n      \"ticked\": false,\n      \"program_id\": \"1276a87cb5fa4c9e83b627592420d364\"\n    },\n    {\n      \"id\": \"student1-restaurant-1\",\n      \"ticked\": true,\n      \"program_id\": \"60a3eb541cf64f95a42d576a05db5ec0\"\n    },\n    {\n      \"id\": \"student1-haunted-1\",\n      \"ticked\": true,\n      \"program_id\": \"0fec58f3e1b34588aee7a3bf478dac23\"\n    },\n    {\n      \"id\": \"student1-fortune-1\",\n      \"ticked\": true,\n      \"program_id\": \"3f9720d9495249df8c83efeb9ed1a89e\"\n    },\n    {\n      \"id\": \"student1-parrot-1\",\n      \"ticked\": true,\n      \"program_id\": \"b0b5822d859e4025ac45212ef8b8fb6e\"\n    },\n    {\n      \"id\": \"student1-3f8aea42eb324f08a16776671498dd1b-1\",\n      \"ticked\": true,\n      \"program_id\": \"f3412588eeb245609f6c4067800a28bb\"\n    },\n    {\n      \"id\": \"student1-default-1\",\n      \"ticked\": true,\n      \"program_id\": \"1e29e08e54644e2f81d4e96fa3f0572f\"\n    },\n    {\n      \"id\": \"student5-rock-1\",\n      \"ticked\": true,\n      \"program_id\": \"8f24af7e4185492087ba697ca3f56190\"\n    },\n    {\n      \"id\": \"student5-haunted-2\",\n      \"ticked\": true,\n      \"program_id\": \"33534135dd434726980a46a7ad2b087f\"\n    },\n    {\n      \"id\": \"student5-default-2\",\n      \"ticked\": false,\n      \"program_id\": \"4d86425cc5324caeba917caa139fa52a\"\n    },\n    {\n      \"id\": \"student5-rock-2\",\n      \"ticked\": false,\n      \"program_id\": \"282a23d192ca47e69ebe383bf32a0de5\"\n    },\n    {\n      \"id\": \"student5-turtle-3\",\n      \"ticked\": false,\n      \"program_id\": \"c08be9c5367046c79c97b2954ca14956\"\n    },\n    {\n      \"id\": \"student5-default-3\",\n      \"ticked\": true,\n      \"program_id\": \"507c1c830a0f4e1fb35862ffc4948e76\"\n    },\n    {\n      \"id\": \"student5-haunted-3\",\n      \"ticked\": false,\n      \"program_id\": \"f78b86d9f79c49cfa9d3626b78dd82fa\"\n    },\n    {\n      \"id\": \"student5-default-7\",\n      \"ticked\": false,\n      \"program_id\": \"8c8269ecce6f4983832b24d39f124dec\"\n    },\n    {\n      \"id\": \"student5-default-1\",\n      \"ticked\": false,\n      \"program_id\": \"67b0098c0fc6495d96d7b5a6ba693f87\"\n    },\n    {\n      \"id\": \"student5-haunted-1\",\n      \"ticked\": false,\n      \"program_id\": \"c5dba732996344a095f0f5615376bd31\"\n    },\n    {\n      \"id\": \"student5-fortune-1\",\n      \"ticked\": false,\n      \"program_id\": \"9676bb4a856e4025b5d6a7c60123f616\"\n    },\n    {\n      \"id\": \"student3-rock-1\",\n      \"ticked\": false,\n      \"program_id\": \"48ec04d60a4c4990a60b9e5e81121e71\"\n    },\n    {\n      \"id\": \"student3-turtle-1\",\n      \"ticked\": false,\n      \"program_id\": \"c70631ec3b2d410596f813c9d6b57709\"\n    },\n    {\n      \"id\": \"student3-story-1\",\n      \"ticked\": false,\n      \"program_id\": \"9ea5a534bc6047fdb17c20e4c98259ae\"\n    },\n    {\n      \"id\": \"student3-fortune-1\",\n      \"ticked\": false,\n      \"program_id\": \"a999d6d38c7c411095a2571e784d40aa\"\n    },\n    {\n      \"id\": \"student3-parrot-1\",\n      \"ticked\": false,\n      \"program_id\": \"7a229194799f47ba940de9e9071fcec7\"\n    },\n    {\n      \"id\": \"student3-default-1\",\n      \"ticked\": false,\n      \"program_id\": \"02930e0a15894bc68331775f08e12a32\"\n    },\n    {\n      \"id\": \"user1-default-9\",\n      \"ticked\": false,\n      \"program_id\": \"fb23d0fa90ce48b5bf87c0632969fc28\"\n    },\n    {\n      \"id\": \"user1-repeat_command-8\",\n      \"ticked\": false,\n      \"program_id\": \"4386f49502344c5cb915b37acb959a27\"\n    }\n  ]\n}\n"
        },
        {
          "name": "docs.py",
          "type": "blob",
          "size": 1.869140625,
          "content": "from ruamel import yaml\nimport glob\nimport re\nimport unicodedata\n\n\ndef slugify(s):\n    if s is None:\n        return None\n    return re.sub('[^a-zA-Z0-9]', '-', strip_accents(s)).lower()\n\n\ndef strip_accents(s):\n    return ''.join(c for c in unicodedata.normalize('NFD', s)\n                   if unicodedata.category(c) != 'Mn')\n\n\nclass DocCollection:\n    def __init__(self, keys=[], synth={}):\n        self.docs = []\n        self.index = {}\n        self.keys = keys\n        self.synth = synth\n\n    def get(self, *keys):\n        v = self.index\n        for key in keys:\n            v = v.get(key)\n            if not v:\n                return {} if len(keys) < len(self.keys) else None\n        return v\n\n    def load_dir(self, rootdir):\n        files = glob.glob(f'{rootdir}/**/*.md', recursive=True)\n        for file in sorted(files):\n            doc = MarkdownDoc.from_file(file)\n\n            for k, v in self.synth.items():\n                doc.front_matter[k] = v(doc)\n\n            self.docs.append(doc)\n            self.add_to_index(doc)\n\n    def add_to_index(self, doc):\n        if not self.keys:\n            return\n\n        d = self.index\n        for key in self.keys[:-1]:\n            value = doc.front_matter.get(key, None)\n            if not value:\n                return\n            d = d.setdefault(value, {})\n\n        key = self.keys[-1]\n        value = doc.front_matter.get(key, None)\n        if value:\n            d[value] = doc\n\n\nclass MarkdownDoc:\n    @staticmethod\n    def from_file(filename):\n        with open(filename, 'r', encoding='utf-8') as f:\n            contents = f.read()\n        parts = re.split('^---+$', contents, maxsplit=1, flags=re.M)\n        if len(parts) == 1:\n            return MarkdownDoc({}, parts[0])\n        return MarkdownDoc(yaml.safe_load(parts[0]), parts[1])\n\n    def __init__(self, front_matter, doc):\n        self.front_matter = front_matter\n        self.markdown = doc\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dodo.py",
          "type": "blob",
          "size": 17.06640625,
          "content": "##\n# This file contains various build steps used to make sure the data the Hedy application\n# uses is up-to-date.\n#\n# Functions that start with the name `task_` create a \"task\", which runs one or more\n# \"actions\" (shell commands or Python functions). Tasks can have file dependencies and\n# file outputs, as well as other task dependencies. If none of the files that a task\n# depends on have changed since the last time it ran, the task will be skipped. That's\n# good for speed!\n#\n# Keep the following in mind:\n# - You can specify commands as a string `'mkdir dir'` or as an array `['mkdir', 'dir']`.\n#   The second case doesn't allow shell features, but is safer in case of variables.\n# - `file_dep` requires a list of source files, but you can use `glob('*.yaml')`\n#   to have Python list them. That way you don't have to keep the list of files up-to-date\n#   by hand.\n# - It's important to be complete in the list of inputs that go into a build step. You\n#   have to list all input files, or the step will not accurately re-run when you change\n#   one of the forgotten dependencies.\n# - For eexample: include the script itself in the list of `file_dep`s as well;\n#   otherwise, even if you change the script the task won't re-run.\n\nimport os\nfrom os import path\nfrom glob import glob\nimport sys\nimport platform\n\nfrom doit.tools import LongRunning\n\nif os.getenv('GITHUB_ACTION') and platform.system() == 'Windows':\n    # Add MSYS2 to the path, so we can use commands like 'bash' and 'cp' and 'mv'.\n    # https://github.com/actions/runner-images/blob/win22/20240204.1/images/windows/Windows2022-Readme.md\n    print('Detected a Windows GitHub runner. Adding MSYS2 to the PATH.')\n    msys_dir = 'C:\\\\msys64\\\\usr\\\\bin'\n    os.environ['PATH'] = msys_dir + ';' + os.environ['PATH']\n\n    # We need to explicitly invoke bash from this directory, otherwise\n    # it will pick up a bash that requires WSL to run, which is not installed.\n    # And npx must be invoked like this as well.\n    npx = 'npx.cmd'\n    bash = f'{msys_dir}\\\\bash.exe'\nelse:\n    npx = 'npx'\n    bash = 'bash'\n\n# The current Python interpreter, use to run other Python scripts as well\npython3 = sys.executable\n\n# When run without arguments, run deploy\nDOIT_CONFIG = {'default_tasks': ['deploy']}\n\n\ndef task_npm():\n    \"\"\"Install NPM dependencies.\n\n    If the `package-lock.json` file changes, we will automatically re-install\n    NPM dependencies.\n\n    This makes sure everyone's NPM dependencies are at the same version when\n    scripts are being run, so build results are consistent and (for example)\n    generated Tailwind CSS files are the exact same and don't introduce random\n    floating diffs.\n\n    NPM works like this:\n\n    ```\n        package.json          # contains version RANGES that you would like to use\n            ---> npm install  # install the most recent POINT VERSIONs that match the requested ranges\n        package-lock.json     # contains the point versions selected by the last `npm install`\n            ---> npm ci       # install exactly the point versions found in the lock file\n    ```\n    \"\"\"\n    # This task gives problems whhen deploying to Heroku, so not execute it if we are there\n    if is_running_on_heroku():\n        return dict(title=lambda _: 'Do not install NPM on Heroku', actions=[])\n\n    return dict(\n        # `package-lock.json` contains the actual dependency versions that `npm ci` will install\n        file_dep=['package-lock.json'],\n        title=lambda _: 'Install NPM dependencies',\n        actions=[\n            'npm ci',\n        ],\n    )\n\n\ndef task_tailwind():\n    \"\"\"Build Tailwind.\n\n    We will automatically switch between DEV and PROD mode depending\n    on where we run.\n    \"\"\"\n    prod = os.getenv('DYNO') is not None\n\n    if prod:\n        script = 'build-tools/heroku/tailwind/generate-prod-css'\n        target = 'static/css/generated.css'\n    else:\n        script = 'build-tools/heroku/tailwind/generate-development-css'\n        target = 'static/css/generated.full.css'\n\n    return dict(\n        file_dep=[\n            *glob('templates/**/*.html'),\n            *glob('templates/*.html'),\n            *glob('main/**/*.md'),\n            *glob('content/**/*.md'),\n            # exclude files generated for translations\n            *[file for file in glob('static/js/*.ts') if file not in\n                ['static/js/message-translations.ts', 'static/js/client-messages.ts']\n              ],\n            'build-tools/heroku/tailwind/styles.css',\n            script,\n        ],\n        task_dep=['npm'],\n        title=lambda _: 'Generate Tailwind CSS',\n        actions=[\n            [bash, script],\n        ],\n        targets=[target],\n\n        verbosity=0,  # stderr is too noisy by default\n    )\n\n\ndef task_generate_highlighting():\n    \"\"\"Generate JSON files that will be used for syntax highlighting.\"\"\"\n    script = 'highlighting/generate-rules-highlighting.py'\n\n    return dict(\n        title=lambda _: 'Generate highlighting rules',\n        file_dep=[\n            *glob('highlighting/*.py'),\n            script,\n        ],\n        actions=[\n            [python3, script],\n        ],\n        targets=['highlighting/highlighting.json', 'highlighting/highlighting-trad.json'],\n    )\n\n\ndef task_compile_babel():\n    \"\"\"Compile .po files for use with Babel.\"\"\"\n    return dict(\n        title=lambda _: 'Compile Babel files',\n        file_dep=pofiles,\n        actions=[\n            'pybabel compile -f -d translations',\n        ],\n        # Every .po file leads to a .mo file\n        targets=mofiles,\n\n        verbosity=0,  # stderr is too noisy by default\n    )\n\n\ndef task_generate_static_babel_content():\n    \"\"\"Extract information from Babel at build time.\n\n    We do this so we don't have to keep Babel's locale database in memory at\n    runtime.\n    \"\"\"\n    script = 'build-tools/heroku/generate-static-babel-content'\n    return dict(\n        title=lambda _: 'Generate static Babel content',\n        file_dep=[script],\n        actions=[\n            [python3, script],\n        ],\n        targets=['static_babel_content.json'],\n        uptodate=[babel_version_unchanged],\n    )\n\n\ndef task_client_messages():\n    \"\"\"Use Python to extract messages to a .ts file that will be used in the frontend.\"\"\"\n    script = 'build-tools/heroku/generate-client-messages.py'\n\n    return dict(\n        title=lambda _: 'Generate client messages',\n\n        # Depends on a specific YAML file and the .mo files\n        file_dep=[\n            *glob('content/client-messages/*.yaml'),\n            *mofiles,\n            script,\n        ],\n        actions=[\n            [python3, script],\n        ],\n        targets=[\n            'static/js/message-translations.ts',\n        ],\n    )\n\n\ndef task_typescript():\n    \"\"\"Compile typescript.\"\"\"\n    return dict(\n        file_dep=[\n            *glob('static/js/**/*.ts', recursive=True),\n            # Some non-.ts files that we also own\n            'static/js/buttons.js',\n            'static/js/skulpt_debugger.js',\n        ],\n        task_dep=['generate_highlighting', 'client_messages', 'npm'],\n        title=lambda _: 'Compile TypeScript',\n        actions=[\n            # Use tsc to do type checking of the .ts files, but don't actually emit.\n            # We will bundle using `esbuild`, which will properly handle including the `tw-elements`\n            # library (which is ESM-only) from otherwise CommonJS packages.\n            [npx, 'tsc', '--noEmit'],\n\n            # Then bundle JavaScript into a single bundle\n            [npx, 'esbuild', 'static/js/index.ts',\n             '--bundle', '--sourcemap', '--target=es2017',\n             '--global-name=hedyApp', '--platform=browser',\n             '--outfile=static/js/appbundle.js'],\n        ],\n        targets=['static/js/appbundle.js'],\n        verbosity=0,  # stderr is too noisy by default\n    )\n\n\ndef task_lark():\n    \"\"\"Generate Lark grammar files based on keyword information in YAMLs.\"\"\"\n    script = 'content/yaml_to_lark_utils.py'\n    keyword_yamls = glob('content/keywords/*.yaml')\n    grammars = ['grammars/keywords-' + replace_ext(path.basename(y), '.lark') for y in keyword_yamls]\n\n    return dict(\n        title=lambda _: 'Create Lark grammar files',\n        file_dep=[\n            script,\n            'grammars/keywords-template.lark',\n            *keyword_yamls,\n        ],\n        actions=[\n            [python3, script],\n        ],\n        targets=grammars,\n    )\n\n\ndef task_prefixes():\n    \"\"\"Generate Python prefixes for TypeScript\"\"\"\n    script = 'build-tools/heroku/generate-prefixes-ts'\n\n    return dict(\n        title=lambda _: 'Generate Python prefixes for TypeScript',\n        file_dep=[\n            script,\n            *glob('prefixes/*.py'),\n        ],\n        actions=[\n            [bash, script],\n        ],\n        targets=[\n            'static/js/pythonPrefixes.ts'\n        ],\n    )\n\n\ndef task_lezer_parsers():\n    \"\"\"Generate Lezer parsers.\"\"\"\n    script = 'build-tools/heroku/generate-lezer-parsers'\n    grammars = glob('highlighting/lezer-grammars/level*.grammar')\n    lezer_files = []\n    for grammar in grammars:\n        base = replace_ext(path.basename(grammar), '')\n        lezer_files.append(f'static/js/lezer-parsers/{base}-parser.ts')\n        lezer_files.append(f'static/js/lezer-parsers/{base}-parser.terms.ts')\n\n    return dict(\n        title=lambda _: 'Generate Lezer parsers',\n        file_dep=[\n            *grammars,\n            script,\n        ],\n        task_dep=['npm'],\n        actions=[\n            [bash, script],\n        ],\n        targets=lezer_files,\n    )\n\n\ndef task_extract():\n    \"\"\"Extract new translateable keys from the code.\n\n    To avoid merge conflicts with Weblate as much as possible, we will avoid\n    updating the PO file header (which usually contains metadata like\n    timestamps etc) -- this is likely to lead to conflicts when both Weblate\n    and this script have updated the PO files at the same time.\n    \"\"\"\n    restore_po_header = 'build-tools/github/restore-po-header.py'\n    return dict(\n        title=lambda _: 'Extract new keys from the code',\n        actions=[\n            # Save current files\n            'cp messages.pot messages.pot.tmp',\n            *[f'cp {pofile} {pofile}.tmp' for pofile in pofiles],\n\n            # Extract\n            'pybabel extract -F babel.cfg -o messages.pot . --no-location --sort-output',\n            'pybabel update -i messages.pot -d translations -N --no-wrap',\n\n            # Restore headers, remove tempfiles\n            [python3, restore_po_header, 'messages.pot.tmp', 'messages.pot'],\n            'rm messages.pot.tmp',\n            *[[python3, restore_po_header, f'{pofile}.tmp', pofile] for pofile in pofiles],\n            *[f'rm {pofile}.tmp' for pofile in pofiles],\n        ],\n        # These commands print a bunch of progress to stderr that looks intimidating\n        verbosity=0,\n    )\n\n\ndef task_generate_optional_yaml_schemas():\n    \"\"\"\n    Generate yaml schemas with all fields optional\n    \"\"\"\n    schemas = glob('content/*/*.schema.json')\n\n    return dict(\n        title=lambda _: 'Generate optional yaml schemas',\n        file_dep=[\n            'tools/generate-yaml-schemas.py',\n            *schemas\n        ],\n        actions=[\n            [python3, 'tools/generate-yaml-schemas.py']\n        ]\n    )\n\n\ndef task_devserver():\n    \"\"\"Run a copy of the development server.\n\n    This server is configured to be useful for running cypress tests against.\n\n    No file dependencies, so this task is never skipped.\n\n    Be careful to only depend on `backend` tasks, not `frontend` tasks, so that\n    the people running this command still don't need to have Node installed\n    if they don't want to work on the frontend.\n    \"\"\"\n    return dict(\n        title=lambda _: 'Run development server',\n        task_dep=['backend'],\n        actions=[\n            LongRunning([python3, 'app.py'], shell=False, env=dict(\n                os.environ,\n                # These are required to make some local features work.\n                BASE_URL=\"http://localhost:8080/\",\n                ADMIN_USER=\"admin\",))\n        ],\n        verbosity=2,  # show everything live\n    )\n\n\ndef task_normalize_yaml():\n    \"\"\"Normalize the YAML files by running a script.\n\n    Makes indentation and key ordering uniform, even if the files get rewritten by\n    Weblate.\n    \"\"\"\n    yamls = glob('content/**/*.yaml', recursive=True)\n\n    return dict(\n        title=lambda _: 'Normalize YAML',\n        file_dep=[\n            'tools/rewrite-content-yaml.py',\n            *yamls,\n        ],\n        actions=[\n            [python3, 'tools/rewrite-content-yaml.py', *yamls]\n        ]\n    )\n\n\n######################################################################################\n# Some useful task groups\n#\n\ndef task_backend():\n    \"\"\"Run all tasks necessary to prepare the backend.\"\"\"\n    return dict(\n        actions=None,\n        task_dep=[\n            'generate_optional_yaml_schemas',\n            'compile_babel',\n            'generate_static_babel_content',\n            'lark',\n        ],\n    )\n\n\ndef task_frontend():\n    \"\"\"Run all tasks necessary to prepare the frontend.\"\"\"\n    return dict(\n        actions=None,\n        task_dep=[\n            'lezer_parsers',\n            'tailwind',\n            'typescript',\n        ]\n    )\n\n\ndef task_deploy():\n    \"\"\"Commands to run at deploy time on Heroku.\n\n    This groups other commands.\n    \"\"\"\n    return dict(\n        actions=None,\n        task_dep=['frontend', 'backend']\n    )\n\n\ndef task_devdb():\n    \"\"\"Reset the testing database.\"\"\"\n    return dict(\n        title=lambda _: 'Reset testing database (restart app.py to take effect)',\n        actions=[\n            'cp data-for-testing.json dev_database.json',\n        ],\n        # No dependencies, so that this script will always run when you invoke it\n        targets=['dev_database.json'],\n    )\n\n\ndef task__offline():\n    \"\"\"Build the offline Hedy distribution.\"\"\"\n\n    return dict(\n        title=lambda _: 'Build offline Hedy',\n        task_dep=['backend', 'frontend'],\n        actions=[\n            'pyinstaller -y app.spec',\n            # We copy this here instead of in the 'spec' file so that we can rename\n            # the file (spec file copies cannot do that).\n            'cp data-for-testing.json dist/offlinehedy/database.json',\n            'cp OFFLINE_README.txt dist/offlinehedy/README.txt',\n            # There are some research papers in the distribution that take up a lot\n            # of space.\n            'rm -rf dist/offlinehedy/_internal/content/research/*',\n        ],\n    )\n\n\ndef task__autopr():\n    \"\"\"Run code generation tasks that should commit to PRs.\n\n    This runs some tasks, mostly around translation, that contributors should\n    run on their machines but tend to forget. That's what machines are for!\n\n    We used to run heavy normalization over the translation files here. However,\n    if we do that Weblate will nearly always be in a state of conflicts, which\n    leads to scary warnings. Instead, we let Weblate decide what these files\n    should look like.\n    \"\"\"\n\n    return dict(\n        title=lambda _: 'Run automatic commit updates',\n        task_dep=[\n            'extract',\n            'backend',\n            'frontend',\n            # No normalization for now!\n            # 'normalize_yaml',\n        ],\n        actions=[\n            # No normalization for now!\n            # Run a script to strip things that lead to conflicts from po files\n            # [python3, 'build-tools/github/normalize-pofiles.py'],\n        ])\n\n\ndef task__autopr_weblate():\n    \"\"\"Run code generation tasks that should commit to PRs, only for Weblate PRs.\n\n    This runs YAML snippet tests, in a way that will revert snippets to Enligsh\n    if they fail.\n\n    These are separate from normal autofixes because unit tests may take a long time\n    to run, and we don't want to hold up normal PRs.\n\n    This script can produce a `.tmp.md` file reporting reverted snippets. When run from\n    GitHub Actions, the result will be posted to the PR as a comment.\n    \"\"\"\n    os.environ['FIX_FOR_WEBLATE'] = '1'\n    return dict(\n        title=lambda _: 'Automatic tasks for Weblate only',\n        actions=[\n            [python3, '-m', 'pytest', '-n', '4', 'tests/test_snippets/'],\n        ])\n\n######################################################################################\n# Below this line are helpers for the task definitions\n#\n\n\ndef replace_ext(filename, ext):\n    \"\"\"Replace the extension of a filename.\"\"\"\n    return path.splitext(filename)[0] + ext\n\n\ndef babel_version_unchanged(task, values):\n    \"\"\"Return True if the Babel version is the same as the last time we ran.\"\"\"\n    babel_version = 0\n    try:\n        import babel\n        babel_version = babel.__version__\n    except Exception:\n        # This might fail, that's annoying but shouldn't stop the presses.\n        print('oops')\n        pass\n\n    def save_on_success():\n        \"\"\"This function gets called at the end of a successful build.\"\"\"\n        return {'babel-version': babel_version}\n    task.value_savers.append(save_on_success)\n\n    return values.get('babel-version') == babel_version\n\n\ndef is_running_on_heroku():\n    \"\"\"Return True if we are running on Heroku.\n\n    Check an environment variable that Heroku sets by default.\n    \"\"\"\n    return 'DYNO' in os.environ\n\n\n# These are used in more than one task. Find all .po files, and calculate the\n# .mo files that would be generated from them.\npofiles = glob('translations/*/*/*.po')\nmofiles = [replace_ext(f, '.mo') for f in pofiles]\n"
        },
        {
          "name": "exceptions.py",
          "type": "blob",
          "size": 14.044921875,
          "content": "import inspect\n\"\"\"\n    Any exception added in this file must be also added to error-messages.txt\n    So we can translate the error message. The exception must also be assigned\n    an Exception Type in the exception_types dictionary in statistics.py\n\"\"\"\n\n\nclass HedyException(Exception):\n    def __init__(self, error_code, **arguments):\n        \"\"\"Create a new HedyException.\n\n        You should not create a HedyException directly. Instead, use any of\n        the subclasses of HedyException below.\n\n        The keyword arguments passed into this constructor become available\n        in exception translation strings. In those arguments, the keywords\n        'location' and 'line_number' are special: they will be used to indicate\n        the error location in the client.\n        \"\"\"\n        super().__init__(error_code)\n\n        self.error_code = error_code\n        self.arguments = arguments\n\n    @property\n    def error_location(self):\n        \"\"\"Return the location where the error was found.\n\n        Returns either an array of [row, col] or just [row].\n\n        If 'location' is part of the keyword arguments, return that.\n        Otherwise, if 'line_number' is part of the keyword arguments, return that instead\n        wrapped in a list so we are sure the return type is always a list.\n\n        \"\"\"\n        if 'location' in self.arguments:\n            return self.arguments['location']\n        if 'line_number' in self.arguments:\n            return [self.arguments['line_number']]\n        return None\n\n\nclass WarningException(HedyException):\n    \"\"\"Fixed That For You warning/exception.\n\n    Not really a failure case: instead it represents a warning to\n    the user that they made a mistake we recovered for them.\n\n    'fixed_code' and 'fixed_result' will contain the repaired\n    code, and the result of compiling that repaired code.\n    \"\"\"\n\n    def __init__(self, error_code, fixed_code, fixed_result, **arguments):\n        super().__init__(error_code, **arguments)\n        self.fixed_code = fixed_code\n        self.fixed_result = fixed_result\n\n\nclass InvalidSpaceException(WarningException):\n    def __init__(self, level, line_number, fixed_code, fixed_result):\n        super().__init__('Invalid Space',\n                         level=level,\n                         line_number=line_number,\n                         fixed_code=fixed_code,\n                         fixed_result=fixed_result)  # what is the difference??\n\n\nclass UnusedVariableException(WarningException):\n    def __init__(self, level, line_number, variable_name, fixed_code, fixed_result):\n        super().__init__('Unused Variable',\n                         level=level,\n                         line_number=line_number,\n                         variable_name=variable_name,\n                         fixed_code=fixed_code,\n                         fixed_result=fixed_result)\n\n\nclass ParseException(HedyException):\n    def __init__(self, level, location, found, fixed_code=None):\n        super().__init__('Parse',\n                         level=level,\n                         location=location,\n                         found=found,\n                         # 'character_found' for backwards compatibility\n                         character_found=found)\n\n        # TODO (FH, 8 dec 21) many exceptions now support fixed code maybe we\n        # should move it to hedyexception?\n        self.fixed_code = fixed_code\n\n\nclass UnquotedEqualityCheckException(HedyException):\n    def __init__(self, line_number):\n        super().__init__('Unquoted Equality Check',\n                         line_number=line_number)\n        self.location = [line_number]\n\n\nclass AccessBeforeAssignException(HedyException):\n    def __init__(self, name, access_line_number, definition_line_number):\n        super().__init__('Access Before Assign',\n                         name=name,\n                         access_line_number=access_line_number,\n                         line_number=access_line_number,\n                         definition_line_number=definition_line_number)\n\n\nclass UndefinedVarException(HedyException):\n    def __init__(self, name, line_number):\n        super().__init__('Var Undefined',\n                         name=name,\n                         line_number=line_number)\n\n\nclass UndefinedFunctionException(HedyException):\n    def __init__(self, name, line_number):\n        super().__init__('Function Undefined',\n                         name=name,\n                         line_number=line_number)\n\n\nclass CyclicVariableDefinitionException(HedyException):\n    def __init__(self, variable, line_number):\n        super().__init__('Cyclic Var Definition',\n                         variable=variable,\n                         line_number=line_number)\n\n\nclass InvalidArgumentTypeException(HedyException):\n    def __init__(self, command, invalid_type, allowed_types, invalid_argument, line_number):\n        super().__init__('Invalid Argument Type',\n                         command=command,\n                         invalid_type=invalid_type,\n                         allowed_types=allowed_types,\n                         invalid_argument=invalid_argument,\n                         line_number=line_number)\n\n\nclass InvalidTypeCombinationException(HedyException):\n    def __init__(self, command, arg1, arg2, type1, type2, line_number):\n        super().__init__('Invalid Type Combination',\n                         command=command,\n                         invalid_argument=arg1,\n                         invalid_argument_2=arg2,\n                         invalid_type=type1,\n                         invalid_type_2=type2,\n                         line_number=line_number)\n\n\nclass InvalidArgumentException(HedyException):\n    def __init__(self, command, allowed_types, invalid_argument, line_number):\n        super().__init__('Invalid Argument',\n                         command=command,\n                         allowed_types=allowed_types,\n                         invalid_argument=invalid_argument,\n                         line_number=line_number)\n\n\nclass WrongLevelException(HedyException):\n    def __init__(self, working_level, offending_keyword, tip, line_number):\n        super().__init__('Wrong Level',\n                         working_level=working_level,\n                         offending_keyword=offending_keyword,\n                         tip=tip,\n                         line_number=line_number)\n\n\nclass InputTooBigException(HedyException):\n    def __init__(self, lines_of_code, max_lines):\n        super().__init__('Too Big',\n                         lines_of_code=lines_of_code,\n                         max_lines=max_lines)\n\n\nclass InvalidCommandException(WarningException):\n    def __init__(\n            self,\n            level,\n            invalid_command,\n            guessed_command,\n            line_number,\n            fixed_code,\n            fixed_result):\n        super().__init__('Invalid',\n                         invalid_command=invalid_command,\n                         level=level,\n                         guessed_command=guessed_command,\n                         line_number=line_number,\n                         fixed_code=fixed_code,\n                         fixed_result=fixed_result)\n        self.location = [line_number]\n\n\nclass MissingCommandException(HedyException):\n    def __init__(self, level, line_number):\n        super().__init__('Missing Command',\n                         level=level,\n                         line_number=line_number)\n\n\nclass MissingInnerCommandException(HedyException):\n    def __init__(self, command, level, line_number):\n        super().__init__('Missing Inner Command',\n                         command=command,\n                         level=level,\n                         line_number=line_number)\n\n\nclass MissingVariableException(HedyException):\n    def __init__(self, command, level, line_number):\n        super().__init__('Missing Variable',\n                         command=command,\n                         level=level,\n                         line_number=line_number)\n\n\nclass InvalidAtCommandException(HedyException):\n    def __init__(self, command, level, line_number):\n        super().__init__('Invalid At Command',\n                         command=command,\n                         level=level,\n                         line_number=line_number)\n\n\nclass IncompleteRepeatException(HedyException):\n    def __init__(self, command, level, line_number):\n        super().__init__('Incomplete Repeat',\n                         command=command,\n                         level=level,\n                         line_number=line_number)\n\n\nclass LonelyTextException(HedyException):\n    def __init__(self, level, line_number):\n        super().__init__('Lonely Text',\n                         level=level,\n                         line_number=line_number)\n\n\nclass IncompleteCommandException(HedyException):\n    def __init__(self, incomplete_command, level, line_number):\n        super().__init__('Incomplete',\n                         incomplete_command=incomplete_command,\n                         level=level,\n                         line_number=line_number)\n\n        # Location is copied here so that 'hedy_error_to_response' will find it\n        # Location can be either [row, col] or just [row]\n        self.location = [line_number]\n\n\nclass UnquotedTextException(HedyException):\n    def __init__(self, level, line_number, unquotedtext=None):\n        super().__init__('Unquoted Text',\n                         level=level,\n                         unquotedtext=unquotedtext,\n                         line_number=line_number)\n\n\nclass MissingAdditionalCommand(HedyException):\n    def __init__(self, command, missing_command, line_number):\n        super().__init__('Missing Additional Command',\n                         command=command,\n                         missing_command=missing_command,\n                         line_number=line_number)\n\n\nclass MisspelledAtCommand(HedyException):\n    def __init__(self, command, arg1, line_number):\n        super().__init__('Misspelled At Command',\n                         command=command,\n                         invalid_argument=arg1,\n                         line_number=line_number)\n\n\nclass NonDecimalVariable(HedyException):\n    def __init__(self, line_number):\n        super().__init__('Non Decimal Variable',\n                         line_number=line_number)\n\n\nclass UnquotedAssignTextException(HedyException):\n    def __init__(self, text, line_number):\n        super().__init__('Unquoted Assignment', text=text, line_number=line_number)\n\n\nclass MissingBracketsException(HedyException):\n    def __init__(self, level, line_number):\n        super().__init__('Missing Square Brackets',\n                         line_number=line_number)\n\n\nclass LonelyEchoException(HedyException):\n    def __init__(self):\n        super().__init__('Lonely Echo')\n\n\nclass CodePlaceholdersPresentException(HedyException):\n    def __init__(self, line_number):\n        super().__init__('Has Blanks', line_number=line_number)\n\n\nclass TooManyIndentsStartLevelException(HedyException):\n    def __init__(self, line_number, leading_spaces, fixed_code=None):\n        super().__init__('Too Many Indents', line_number=line_number, leading_spaces=leading_spaces)\n        self.fixed_code = fixed_code\n\n\nclass TooFewIndentsStartLevelException(HedyException):\n    def __init__(self, line_number, leading_spaces, fixed_code=None):\n        super().__init__('Too Few Indents', line_number=line_number, leading_spaces=leading_spaces)\n        self.fixed_code = fixed_code\n\n\nclass NoIndentationException(HedyException):\n    def __init__(self, line_number, leading_spaces, indent_size, fixed_code=None):\n        super().__init__('No Indentation',\n                         line_number=line_number,\n                         leading_spaces=leading_spaces,\n                         indent_size=indent_size)\n        self.fixed_code = fixed_code\n\n\nclass IndentationException(HedyException):\n    def __init__(self, line_number, leading_spaces, indent_size, fixed_code=None):\n        super().__init__('Unexpected Indentation',\n                         line_number=line_number,\n                         leading_spaces=leading_spaces,\n                         indent_size=indent_size)\n        self.fixed_code = fixed_code\n\n\nclass UnsupportedFloatException(HedyException):\n    def __init__(self, value):\n        super().__init__('Unsupported Float', value=value)\n\n\nclass UnsupportedStringValue(HedyException):\n    def __init__(self, invalid_value):\n        super().__init__('Unsupported String Value', invalid_value=invalid_value)\n\n\nclass MissingElseForPressitException(HedyException):\n    def __init__(self, command, level, line_number):\n        super().__init__('Pressit Missing Else',\n                         command=command,\n                         level=level,\n                         line_number=line_number)\n\n\nclass NestedFunctionException(HedyException):\n    def __init__(self):\n        super().__init__('Nested Function')\n\n\nclass WrongNumberofArguments(HedyException):\n    def __init__(self, name, defined_number, used_number, line_number):\n        super().__init__('Wrong Number of Arguments',\n                         name=name,\n                         defined_number=defined_number,\n                         used_number=used_number,\n                         line_number=line_number)\n\n\nclass InvalidErrorSkippedException(HedyException):\n    def __init__(self):\n        super().__init__('Invalid Error Skipped')\n\n\nclass RuntimeValueException(HedyException):\n    def __init__(self, command, value, tip):\n        super().__init__('Runtime Value Error', command=command, value=value, tip=tip)\n\n\nclass RuntimeValuesException(HedyException):\n    def __init__(self, command, value, tip):\n        super().__init__('Runtime Values Error', command=command, value=value, tip=tip)\n\n\nclass RuntimeIndexException(HedyException):\n    def __init__(self, name):\n        super().__init__('Runtime Index Error', name=name)\n\n\nclass ElseWithoutIfException(HedyException):\n    def __init__(self, line_number):\n        super().__init__('Else Without If Error', line_number=line_number)\n\n\nclass MissingColonException(HedyException):\n    def __init__(self, command, line_number):\n        super().__init__('Missing Colon Error', command=command, line_number=line_number)\n\n\nHEDY_EXCEPTIONS = {name: cls for name, cls in globals().items() if inspect.isclass(cls)}\n"
        },
        {
          "name": "grammars-Total",
          "type": "tree",
          "content": null
        },
        {
          "name": "grammars",
          "type": "tree",
          "content": null
        },
        {
          "name": "gunicorn.conf.py",
          "type": "blob",
          "size": 0.400390625,
          "content": "# This file is used to configure gunicorn,\n# used on Heroku.\n\ndef worker_exit(server, worker):\n    # When the worker is being exited (perhaps because of a timeout),\n    # give the query_log handler a chance to flush to disk.\n    from website import querylog, user_activity\n    import app\n    querylog.emergency_shutdown()\n    app.parse_logger.emergency_shutdown()\n    user_activity.logger.emergency_shutdown()\n"
        },
        {
          "name": "hedy.py",
          "type": "blob",
          "size": 173.3427734375,
          "content": "import textwrap\nfrom functools import lru_cache\n\nimport lark\nfrom website.flask_helpers import gettext_with_fallback as gettext\nfrom lark import Lark\nfrom lark.exceptions import UnexpectedEOF, UnexpectedCharacters, VisitError\nfrom lark import Tree, Transformer, visitors, v_args\nfrom os import path, getenv\n\nimport hedy\nimport hedy_error\nimport hedy_grammar\nimport hedy_translation\nfrom utils import atomic_write_file\nfrom hedy_content import ALL_KEYWORD_LANGUAGES\nfrom collections import namedtuple\nimport re\nimport regex\nfrom dataclasses import dataclass, field\nimport exceptions\nimport program_repair\nimport yaml\nimport hashlib\nimport os\nimport pickle\nimport sys\nimport tempfile\nimport utils\n\n# Some useful constants\nfrom hedy_content import KEYWORDS\nfrom hedy_sourcemap import SourceMap, source_map_transformer\n\nfrom prefixes.music import present_in_notes_mapping\nfrom prefixes.normal import get_num_sys\n\nHEDY_MAX_LEVEL = 18\nHEDY_MAX_LEVEL_SKIPPING_FAULTY = 5\nMAX_LINES = 100\nLEVEL_STARTING_INDENTATION = 8\n\n# Boolean variables to allow code which is under construction to not be executed\nlocal_keywords_enabled = True\n\n# dictionary to store transpilers\nTRANSPILER_LOOKUP = {}\nMICROBIT_TRANSPILER_LOOKUP = {}\n\n# define source-map\nsource_map = SourceMap()\n\n# builtins taken from 3.11.0 docs: https://docs.python.org/3/library/functions.html\nPYTHON_BUILTIN_FUNCTIONS = [\n    'abs',\n    'aiter',\n    'all',\n    'any',\n    'anext',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip']\nPYTHON_KEYWORDS = [\n    'and',\n    'except',\n    'lambda',\n    'with',\n    'as',\n    'finally',\n    'nonlocal',\n    'while',\n    'assert',\n    'False',\n    'None',\n    'yield',\n    'break',\n    'for',\n    'not',\n    'class',\n    'from',\n    'or',\n    'continue',\n    'global',\n    'pass',\n    'def',\n    'if',\n    'raise',\n    'del',\n    'import',\n    'return',\n    'elif',\n    'in',\n    'True',\n    'else',\n    'is',\n    'try',\n    'int']\n\nLIBRARIES = ['time']\n# Python keywords and function names need hashing when used as var names\nreserved_words = set(PYTHON_BUILTIN_FUNCTIONS + PYTHON_KEYWORDS + LIBRARIES)\n\n# Let's retrieve all keywords dynamically from the cached KEYWORDS dictionary\nindent_keywords = {}\nfor lang_, keywords in KEYWORDS.items():\n    indent_keywords[lang_] = []\n    for keyword in ['if', 'elif', 'for', 'repeat', 'while', 'else', 'define', 'def']:\n        indent_keywords[lang_].append(keyword)  # always also check for En\n        indent_keywords[lang_].append(keywords.get(keyword))\n\n\ndef make_value_error(command, tip, lang, value='{}'):\n    return make_error_text(exceptions.RuntimeValueException(command=command, value=value, tip=tip), lang)\n\n\ndef make_values_error(command, tip, lang):\n    return make_error_text(exceptions.RuntimeValuesException(command=command, value='{}', tip=tip), lang)\n\n\ndef make_error_text(ex, lang):\n    # The error text is transpiled in f-strings with \", ' and ''' quotes. The only option is to use \"\"\".\n    return f'\"\"\"{hedy_error.get_error_text(ex, lang)}\"\"\"'\n\n\ndef translate_suggestion(suggestion_type):\n    # Right now we only have three types of suggestion\n    # In the future we might change this if the number increases\n    if suggestion_type == 'number':\n        return gettext('suggestion_number')\n    elif suggestion_type == 'color':\n        return gettext('suggestion_color')\n    elif suggestion_type == 'note':\n        return gettext('suggestion_note')\n    elif suggestion_type == 'numbers_or_strings':\n        return gettext('suggestion_numbers_or_strings')\n    return ''\n\n\nclass Command:\n    print = 'print'\n    ask = 'ask'\n    echo = 'echo'\n    turn = 'turn'\n    forward = 'forward'\n    sleep = 'sleep'\n    color = 'color'\n    add_to_list = 'add to list'\n    remove_from_list = 'remove from list'\n    list_access = 'at random'\n    in_list = 'in list'\n    not_in_list = 'not in list'\n    equality = 'is (equality)'\n    repeat = 'repeat'\n    for_list = 'for in'\n    for_loop = 'for in range'\n    if_ = 'if'\n    else_ = 'else'\n    elif_ = 'elif'\n    addition = '+'\n    subtraction = '-'\n    multiplication = '*'\n    division = '/'\n    smaller = '<'\n    smaller_equal = '<='\n    bigger = '>'\n    bigger_equal = '>='\n    not_equal = '!='\n    pressed = 'pressed'\n    clear = 'clear'\n    define = 'define'\n    call = 'call'\n    returns = 'return'\n    play = 'play'\n    while_ = 'while'\n\n\ntranslatable_commands = {Command.print: ['print'],\n                         Command.ask: ['ask'],\n                         Command.echo: ['echo'],\n                         Command.turn: ['turn'],\n                         Command.sleep: ['sleep'],\n                         Command.color: ['color'],\n                         Command.forward: ['forward'],\n                         Command.add_to_list: ['add', 'to_list'],\n                         Command.remove_from_list: ['remove', 'from'],\n                         Command.list_access: ['at', 'random'],\n                         Command.in_list: ['in'],\n                         Command.not_in_list: ['not in'],\n                         Command.equality: ['is', '=', '=='],\n                         Command.repeat: ['repeat', 'times'],\n                         Command.for_list: ['for', 'in'],\n                         Command.for_loop: ['in', 'range', 'to'],\n                         Command.define: ['define'],\n                         Command.call: ['call'],\n                         Command.returns: ['return'], }\n\n\nclass HedyType:\n    any = 'any'\n    none = 'none'\n    string = 'string'\n    integer = 'integer'\n    list = 'list'\n    float = 'float'\n    boolean = 'boolean'\n    input = 'input'\n\n\n# Type promotion rules are used to implicitly convert one type to another, e.g. integer should be auto converted\n# to float in 1 + 1.5. Additionally, before level 12, we want to convert numbers to strings, e.g. in equality checks.\nint_to_float = (HedyType.integer, HedyType.float)\nint_to_string = (HedyType.integer, HedyType.string)\nfloat_to_string = (HedyType.float, HedyType.string)\ninput_to_int = (HedyType.input, HedyType.integer)\ninput_to_float = (HedyType.input, HedyType.float)\ninput_to_boolean = (HedyType.input, HedyType.boolean)\ninput_to_string = (HedyType.input, HedyType.string)\n\n\ndef promote_types(types, rules):\n    for (from_type, to_type) in rules:\n        if to_type in types:\n            types = [to_type if t == from_type else t for t in types]\n    return types\n\n\ndef add_level(commands, level, add=None, remove=None):\n    # Adds the commands for the given level by taking the commands of the previous level\n    # and adjusting the list based on which keywords need to be added or/and removed\n    if not add:\n        add = []\n    if not remove:\n        remove = []\n    commands[level] = [c for c in commands[level - 1] if c not in remove] + add\n\n\n# Commands per Hedy level which are used to suggest the closest command when kids make a mistake\ncommands_per_level = {1: ['ask', 'color', 'echo', 'forward', 'play', 'print', 'turn']}\nadd_level(commands_per_level, level=2, add=['is', 'sleep'], remove=['echo'])\nadd_level(commands_per_level, level=3, add=['add', 'at', 'from', 'random', 'remove', 'to'])\nadd_level(commands_per_level, level=4, add=['clear'])\nadd_level(commands_per_level, level=5, add=['else', 'if', 'if_pressed', 'in', 'not_in'])\nadd_level(commands_per_level, level=6)\nadd_level(commands_per_level, level=7, add=['repeat', 'times'])\nadd_level(commands_per_level, level=8)\nadd_level(commands_per_level, level=9)\nadd_level(commands_per_level, level=10, add=['for'])\nadd_level(commands_per_level, level=11, add=['range'], remove=['times'])\nadd_level(commands_per_level, level=12, add=['define', 'call'])\nadd_level(commands_per_level, level=13, add=['and', 'or'])\nadd_level(commands_per_level, level=14)\nadd_level(commands_per_level, level=15, add=['while'])\nadd_level(commands_per_level, level=16)\nadd_level(commands_per_level, level=17, add=['elif'])\nadd_level(commands_per_level, level=18, add=['input'], remove=['ask'])\n\ncommand_turn_literals = ['right', 'left']\nenglish_colors = ['black', 'blue', 'brown', 'gray', 'green', 'orange', 'pink', 'purple', 'red', 'white', 'yellow']\n\n\ndef color_commands_local(language):\n    colors_local = [hedy_translation.translate_keyword_from_en(k, language) for k in english_colors]\n    return colors_local\n\n\ndef command_make_color_local(language):\n    if language == \"en\":\n        return english_colors\n    else:\n        return english_colors + color_commands_local(language)\n\n\n# Commands and their types per level (only partially filled!)\ncommands_and_types_per_level = {\n    Command.print: {\n        1: [HedyType.string, HedyType.integer, HedyType.input, HedyType.list],\n        4: [HedyType.string, HedyType.integer, HedyType.input],\n        12: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float],\n        15: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float, HedyType.boolean],\n        16: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float, HedyType.boolean, HedyType.list]\n    },\n    Command.ask: {\n        1: [HedyType.string, HedyType.integer, HedyType.input, HedyType.list],\n        4: [HedyType.string, HedyType.integer, HedyType.input],\n        12: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float],\n        15: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float, HedyType.boolean],\n        16: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float, HedyType.boolean, HedyType.list]\n    },\n    Command.turn: {\n        1: command_turn_literals,\n        2: [HedyType.integer, HedyType.input],\n        12: [HedyType.integer, HedyType.input, HedyType.float]\n    },\n    Command.color: {\n        1: [english_colors, HedyType.list],\n        2: [english_colors, HedyType.string, HedyType.input, HedyType.list]},\n    Command.forward: {\n        1: [HedyType.integer, HedyType.input],\n        12: [HedyType.integer, HedyType.input, HedyType.float]\n    },\n    Command.sleep: {\n        1: [HedyType.integer, HedyType.input],\n        12: [HedyType.integer, HedyType.input, HedyType.float]\n    },\n    Command.list_access: {1: [HedyType.list]},\n    Command.in_list: {1: [HedyType.list]},\n    Command.not_in_list: {1: [HedyType.list]},\n    Command.add_to_list: {1: [HedyType.list]},\n    Command.remove_from_list: {1: [HedyType.list]},\n    Command.equality: {\n        1: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float],\n        14: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float, HedyType.list],\n        15: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float, HedyType.list, HedyType.boolean]\n    },\n    Command.addition: {\n        6: [HedyType.integer, HedyType.input],\n        12: [HedyType.string, HedyType.integer, HedyType.input, HedyType.float]\n    },\n    Command.subtraction: {\n        1: [HedyType.integer, HedyType.input],\n        12: [HedyType.integer, HedyType.float, HedyType.input],\n    },\n    Command.multiplication: {\n        1: [HedyType.integer, HedyType.input],\n        12: [HedyType.integer, HedyType.float, HedyType.input],\n    },\n    Command.division: {\n        1: [HedyType.integer, HedyType.input],\n        12: [HedyType.integer, HedyType.float, HedyType.input],\n    },\n    Command.repeat: {7: [HedyType.integer, HedyType.input]},\n    Command.for_list: {10: {HedyType.list}},\n    Command.for_loop: {11: [HedyType.integer, HedyType.input]},\n    Command.smaller: {14: [HedyType.integer, HedyType.float, HedyType.input]},\n    Command.smaller_equal: {14: [HedyType.integer, HedyType.float, HedyType.input]},\n    Command.bigger: {14: [HedyType.integer, HedyType.float, HedyType.input]},\n    Command.bigger_equal: {14: [HedyType.integer, HedyType.float, HedyType.input]},\n    Command.not_equal: {\n        14: [HedyType.integer, HedyType.float, HedyType.string, HedyType.input, HedyType.list, HedyType.boolean]\n    },\n    Command.pressed: {5: [HedyType.string]}  # TODO: maybe use a seperate type character in the future.\n}\n\n# we generate Python strings with ' always, so ' needs to be escaped but \" works fine\n# \\ also needs to be escaped because it eats the next character\ncharacters_that_need_escaping = [\"\\\\\", \"'\"]\n\ncharacter_skulpt_cannot_parse = re.compile('[^a-zA-Z0-9_]')\n\n\ndef get_list_keywords(commands, to_lang):\n    \"\"\" Returns a list with the local keywords of the argument 'commands'\n    \"\"\"\n\n    translation_commands = []\n    dir = path.abspath(path.dirname(__file__))\n    path_keywords = dir + \"/content/keywords\"\n\n    to_yaml_filesname_with_path = path.join(path_keywords, to_lang + '.yaml')\n    en_yaml_filesname_with_path = path.join(path_keywords, 'en' + '.yaml')\n\n    with open(en_yaml_filesname_with_path, 'r', encoding='utf-8') as stream:\n        en_yaml_dict = yaml.safe_load(stream)\n\n    try:\n        with open(to_yaml_filesname_with_path, 'r', encoding='utf-8') as stream:\n            to_yaml_dict = yaml.safe_load(stream)\n        for command in commands:\n            if command == 'if_pressed':  # TODO: this is a bit of a hack\n                command = 'pressed'  # since in the yamls they are called pressed\n            try:\n                translation_commands.append(to_yaml_dict[command])\n            except Exception:\n                translation_commands.append(en_yaml_dict[command])\n    except Exception:\n        for command in commands:\n            translation_commands.append(en_yaml_dict[command])\n\n    return translation_commands\n\n\ndef get_suggestions_for_language(lang, level):\n    if not local_keywords_enabled:\n        lang = 'en'\n\n    lang_commands = get_list_keywords(commands_per_level[level], lang)\n\n    # if we allow multiple keyword languages:\n    en_commands = get_list_keywords(commands_per_level[level], 'en')\n    en_lang_commands = list(set(en_commands + lang_commands))\n\n    return en_lang_commands\n\n\ndef escape_var(var):\n    var_name = var\n    if isinstance(var, LookupEntry):\n        var_name = var.name\n    return \"_\" + var_name if var_name in reserved_words else var_name\n\n\ndef style_command(command):\n    return f'<span class=\"command-highlighted\">{command}</span>'\n\n\ndef closest_command(input_, known_commands, threshold=2):\n    # Find the closest command to the input, i.e. the one with the smallest distance within the threshold. Returns:\n    #  (None, _)  No suggestion. There is no command similar enough to the input. For example, the distance\n    #             between 'eechoooo' and 'echo' is higher than the specified threshold.\n    #  (False, _) Invalid suggestion. The suggested command is identical to the input, so it is not a suggestion.\n    #             This is to prevent \"print is not a command in Hedy level 3, did you mean print?\" error message.\n    #  (True, 'sug') Valid suggestion. A command is similar enough to the input but not identical, e.g. 'aks' -> 'ask'\n\n    # FH, early 2020: simple string distance, could be more sophisticated MACHINE LEARNING!\n    minimum_distance = 1000\n    result = None\n    for command in known_commands:\n        minimum_distance_for_command = calculate_minimum_distance(command, input_)\n        if minimum_distance_for_command < minimum_distance and minimum_distance_for_command <= threshold:\n            minimum_distance = minimum_distance_for_command\n            result = command\n\n    if result:\n        if result != input_:\n            return True, result  # Valid suggestion\n        return False, ''  # Invalid suggestion\n    return None, ''  # No suggestion\n\n\ndef calculate_minimum_distance(s1, s2):\n    \"\"\"Return string distance between 2 strings.\"\"\"\n    if len(s1) > len(s2):\n        s1, s2 = s2, s1\n    distances = range(len(s1) + 1)\n    for index2, char2 in enumerate(s2):\n        new_distances = [index2 + 1]\n        for index1, char1 in enumerate(s1):\n            if char1 == char2:\n                new_distances.append(distances[index1])\n            else:\n                new_distances.append(1 + min((distances[index1], distances[index1 + 1], new_distances[-1])))\n        distances = new_distances\n    return distances[-1]\n\n\n@dataclass\nclass InvalidInfo:\n    error_type: str\n    command: str = ''\n    arguments: list = field(default_factory=list)\n    line: int = 0\n    column: int = 0\n\n\n# used in to construct lookup table entries and infer their type\n@dataclass\nclass LookupEntry:\n    name: str\n    tree: Tree\n    definition_line: int\n    skip_hashing: bool\n    access_line: int = None\n    type_: str = None\n    currently_inferring: bool = False  # used to detect cyclic type inference\n\n    def is_func(self):\n        return '(' in self.name and '[' not in self.name\n\n    def is_var(self):\n        return '(' not in self.name and '[' not in self.name\n\n\nclass LookupTable:\n    \"\"\"The lookup table has a naive implementation of scopes: the start and end lines of every local scope is stored\n     in a list. Everything else falls in the global scope. Since local scopes cannot be nested, every line in the\n     code could either belong to one local scope or the global scope.\"\"\"\n\n    def __init__(self, local_scopes, entries):\n        self.local_scopes = local_scopes\n        self.entries = entries\n        self.__local_scopes = local_scopes\n        self.__entries = entries\n        self.entries = entries\n\n    def get_all(self):\n        return self.__entries\n\n    def get_only_vars(self):\n        \"\"\"Returns entries which do not represent list access or function definitions\"\"\"\n        return [e for e in self.__entries if e.is_var()]\n\n    def try_get_local_scope(self, line):\n        for (n, s, e) in self.__local_scopes:\n            if s <= line <= e:\n                return n, s, e\n        return None\n\n    def get_all_in_scope(self, access_line):\n        \"\"\"Returns the lookup entries for the scope of the given access line.\"\"\"\n        def in_global_scope(entry):\n            is_func = entry.name.endswith('()')\n            line = entry.definition_line\n            # functions are always part of the global scope since they cannot be nested\n            return is_func or not [s for (_, s, e) in self.__local_scopes if s <= line <= e]\n\n        def is_func_definition(entry):\n            return entry.is_func() and entry.definition_line in [s for (_, s, _) in self.__local_scopes]\n\n        local_scope = self.try_get_local_scope(access_line)\n        if local_scope:\n            _, start, end = local_scope\n            # if the variable is in local scope, return the whole local scope combined with the part of the global\n            # scope defined before the local scope. Note that we return the whole local scope, not just the part\n            # before the access line. The decision whether to throw an error if a variable is used before it is\n            # defined or to interpret the variable as a literal string, must be made by the caller.\n            loc = [e for e in self.__entries if start <= e.definition_line <= end]\n            glo = [e for e in self.__entries if e.definition_line < start and in_global_scope(e)]\n            return loc + glo\n\n        # if the variable is in the global scope, return the whole global scope\n        # combined with the function definitions\n        glo = [e for e in self.__entries if in_global_scope(e)]\n        funcs = [e for e in self.__entries if is_func_definition(e)]\n        return glo + funcs\n\n    def get_matching(self, var, access_line):\n        \"\"\"Returns the lookup entries that match the provided variable name. The access_line is needed to determine\n        the scope in which the variable is used. Note that in the lookup table, variables are escaped but functions\n        are not. In other words, the variable `sum` is stored as `_sum`, but the function `sum` is stored as `sum()`.\n        When calling this method, don't escape func names. \"\"\"\n\n        def escape(arg):\n            arg = str(arg)\n            letter_or_underscore = r\"[\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_]\"\n            letter_or_numeral = r\"[\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·]\"\n            var_regex = fr\"{letter_or_underscore}({letter_or_underscore}|{letter_or_numeral})*\"\n            function_regex = fr\"{var_regex}\\(\"\n            if regex.match(function_regex, arg):\n                return escape_var(arg.split('(')[0])\n            return escape_var(arg)\n\n        entries_in_scope = self.get_all_in_scope(access_line)\n        return [entry for entry in entries_in_scope if escape(entry.name) == escape(var)]\n\n\nclass TypedTree(Tree):\n    def __init__(self, data, children, meta, type_):\n        super().__init__(data, children, meta)\n        self.type_ = type_\n\n\n@v_args(meta=True)\nclass ExtractAST(Transformer):\n    # simplifies the tree: f.e. flattens arguments of text, var and punctuation for further processing\n    def text(self, meta, args):\n        return Tree('text', [' '.join([str(c) for c in args])], meta)\n\n    def NAME(self, args):\n        return ''.join([str(c) for c in args])\n\n    def NOT_LETTER_OR_NUMERAL(self, args):\n        return ''.join([str(c) for c in args])\n\n    def INT(self, args):\n        return Tree('integer', [str(args)])\n\n    def NUMBER(self, args):\n        return Tree('number', [str(args)])\n\n    def POSITIVE_NUMBER(self, args):\n        return Tree('number', [str(args)])\n\n    def NEGATIVE_NUMBER(self, args):\n        return Tree('number', [str(args)])\n\n    def TRUE(self, args):\n        return Tree('true', [str(args)])\n\n    def FALSE(self, args):\n        return Tree('false', [str(args)])\n\n    def boolean(self, meta, args):\n        return args[0]\n\n    # level 2\n    def var(self, meta, args):\n        return Tree('var', [''.join([str(c) for c in args])], meta)\n\n    def list_access(self, meta, args):\n        if isinstance(args[1], Tree) and \"random\" in args[1].data:\n            return Tree('list_access', [args[0], 'random'], meta)\n        return Tree('list_access', [args[0], args[1]], meta)\n\n    # level 5\n    def error_unsupported_number(self, meta, args):\n        return Tree('unsupported_number', [''.join([str(c) for c in args])], meta)\n\n\n# This visitor collects all entries that should be part of the lookup table. It only stores the name of the entry\n# (e.g. 'animal') and its value as a tree node (e.g. Tree['text', ['cat']]) which is later used to infer the type\n# of the entry. This preliminary traversal is needed to avoid issues with loops in which an iterator variable is\n# used in the inner commands which are visited before the iterator variable is added to the lookup.\n\nclass LookupEntryCollector(visitors.Visitor):\n    def __init__(self, level, has_pressed):\n        super().__init__()\n        self.level = level\n        self.has_pressed = has_pressed\n        self.local_scopes = []\n        self.lookup_entries = []\n\n    def ask(self, tree):\n        # in level 1 there is no variable name on the left side of the ask command\n        if self.level > 1:\n            self.add_to_lookup(tree.children[0].children[0], tree, tree.meta.line)\n\n    def input_empty_brackets(self, tree):\n        self.input(tree)\n\n    def input(self, tree):\n        var_name = tree.children[0].children[0]\n        self.add_to_lookup(var_name, tree, tree.meta.line)\n\n    # def var_access(self, tree):\n    #     variable_name = tree.children[0].children[0]\n    #     # store the line of access (or string value) in the lookup table\n    #     # so we know what variable is used where\n    #     vars = [a for a in self.lookup if a.name == variable_name]\n    #     if vars:\n    #         corresponding_lookup_entry = vars[0]\n    #         corresponding_lookup_entry.access_line = tree.meta.line\n\n    def assign(self, tree):\n        # when the left-hand-side is a list access, let the 'list_access' child visit to add an entry to the lookup\n        if tree.children[0].data != 'list_access':\n            var_name = tree.children[0].children[0]\n            self.add_to_lookup(var_name, tree.children[1], tree.meta.line)\n\n    def assign_list(self, tree):\n        var_name = tree.children[0].children[0]\n        self.add_to_lookup(var_name, tree, tree.meta.line)\n\n    # list access is added to the lookup table not because it must be escaped\n    # for example we print(dieren[1]) not print('dieren[1]')\n\n    def change_list_item(self, tree):\n        self.add_to_lookup(tree.children[0].children[0], tree, tree.meta.line, True)\n\n    def for_list(self, tree):\n        iterator = str(tree.children[0].children[0])\n        # the tree is trimmed to skip contain the inner commands of the loop since\n        # they are not needed to infer the type of the iterator variable\n        trimmed_tree = Tree(tree.data, tree.children[0:2], tree.meta)\n        self.add_to_lookup(iterator, trimmed_tree, tree.meta.line)\n\n    def for_loop(self, tree):\n        iterator = str(tree.children[0].children[0])\n        # the tree is trimmed to skip contain the inner commands of the loop since\n        # they are not needed to infer the type of the iterator variable\n        trimmed_tree = Tree(tree.data, tree.children[0:3], tree.meta)\n        self.add_to_lookup(iterator, trimmed_tree, tree.meta.line)\n\n    def define(self, tree):\n        func_name = str(tree.children[0].children[0])\n        self.add_local_scope(func_name, tree.meta.line, tree.meta.end_line)\n        self.add_to_lookup(func_name + \"()\", tree, tree.meta.line)\n\n        # add arguments to lookup\n        if tree.children[1].data == 'arguments':\n            for x in (c for c in tree.children[1].children if isinstance(c, Tree)):\n                self.add_to_lookup(x.children[0], tree.children[1], tree.meta.line)\n\n    def call(self, tree):\n        function_name = tree.children[0].children[0]\n        names = [x.name for x in self.lookup_entries]\n        if function_name + \"()\" not in names:\n            raise exceptions.UndefinedFunctionException(function_name, tree.meta.line)\n\n    def add_to_lookup(self, name, tree, definition_line, skip_hashing=False):\n        entry = LookupEntry(name, tree, definition_line, skip_hashing)\n        hashed_name = escape_var(entry)\n        entry.name = hashed_name\n        self.lookup_entries.append(entry)\n\n    def add_local_scope(self, scope_name, start_line, end_line):\n        self.local_scopes.append((scope_name, start_line, end_line))\n\n\n# The transformer traverses the whole AST and infers the type of each node. It alters the lookup table entries with\n# their inferred type. It also performs type validation for commands, e.g. 'text' + 1 results in error.\n@v_args(tree=True)\nclass TypeValidator(Transformer):\n    def __init__(self, lookup, level, lang, input_string):\n        super().__init__()\n        self.lookup = lookup\n        self.level = level\n        self.lang = lang\n        self.input_string = input_string\n\n    def print(self, tree):\n        self.validate_args_type_allowed(Command.print, tree.children, tree.meta)\n\n        return self.to_typed_tree(tree)\n\n    def ask(self, tree):\n        if self.level > 1:\n            self.save_type_to_lookup(tree.children[0].children[0], tree.meta.line, HedyType.input)\n        self.validate_args_type_allowed(Command.ask, tree.children[1:], tree.meta)\n        return self.to_typed_tree(tree, HedyType.input)\n\n    def input(self, tree):\n        self.validate_args_type_allowed(Command.ask, tree.children[1:], tree.meta)\n        return self.to_typed_tree(tree, HedyType.input)\n\n    def forward(self, tree):\n        if tree.children:\n            self.validate_args_type_allowed(Command.forward, tree.children, tree.meta)\n        return self.to_typed_tree(tree)\n\n    def color(self, tree):\n        if tree.children:\n            self.validate_args_type_allowed(Command.color, tree.children, tree.meta)\n        return self.to_typed_tree(tree)\n\n    def turn(self, tree):\n        if tree.children:\n            name = tree.children[0].data\n            if self.level > 1 or name not in command_turn_literals:\n                self.validate_args_type_allowed(Command.turn, tree.children, tree.meta)\n        return self.to_typed_tree(tree)\n\n    def sleep(self, tree):\n        if tree.children:\n            self.validate_args_type_allowed(Command.sleep, tree.children, tree.meta)\n        return self.to_typed_tree(tree)\n\n    def assign(self, tree):\n        try:\n            type_ = self.get_type(tree.children[1])\n            self.save_type_to_lookup(tree.children[0].children[0], tree.meta.line, type_)\n        except hedy.exceptions.UndefinedVarException as ex:\n            if self.level >= 12:\n                raise hedy.exceptions.UnquotedAssignTextException(\n                    text=ex.arguments['name'],\n                    line_number=tree.meta.line)\n            else:\n                raise\n\n        return self.to_typed_tree(tree, HedyType.none)\n\n    def assign_list(self, tree):\n        self.save_type_to_lookup(tree.children[0].children[0], tree.meta.line, HedyType.list)\n        return self.to_typed_tree(tree, HedyType.list)\n\n    def list_access(self, tree):\n        self.validate_args_type_allowed(Command.list_access, tree.children[0], tree.meta)\n\n        list_name = escape_var(tree.children[0].children[0])\n        if tree.children[1] == 'random':\n            name = f'random.choice({list_name}.data)'\n        else:\n            # We want list access to be 1-based instead of 0-based, hence the -1\n            name = f'{list_name}.data[int({tree.children[1]})-1]'\n        self.save_type_to_lookup(name, tree.meta.line, HedyType.any)\n\n        return self.to_typed_tree(tree, HedyType.any)\n\n    def add(self, tree):\n        self.validate_args_type_allowed(Command.add_to_list, tree.children[1], tree.meta)\n        return self.to_typed_tree(tree)\n\n    def remove(self, tree):\n        self.validate_args_type_allowed(Command.remove_from_list, tree.children[1], tree.meta)\n        return self.to_typed_tree(tree)\n\n    def in_list_check(self, tree):\n        self.validate_args_type_allowed(Command.in_list, tree.children[1], tree.meta)\n        return self.to_typed_tree(tree, HedyType.boolean)\n\n    def not_in_list_check(self, tree):\n        self.validate_args_type_allowed(Command.not_in_list, tree.children[1], tree.meta)\n        return self.to_typed_tree(tree, HedyType.boolean)\n\n    def equality_check(self, tree):\n        if self.level < 12:\n            rules = [int_to_float, int_to_string, float_to_string, input_to_string, input_to_int, input_to_float]\n        else:\n            rules = [int_to_float, input_to_string, input_to_int, input_to_float, input_to_boolean]\n        self.validate_binary_command_args_type(Command.equality, tree, rules)\n        return self.to_typed_tree(tree, HedyType.boolean)\n\n    def repeat(self, tree):\n        command = Command.repeat\n        allowed_types = get_allowed_types(command, self.level)\n        self.check_type_allowed(command, allowed_types, tree.children[0], tree.meta)\n        return self.to_typed_tree(tree, HedyType.none)\n\n    def for_list(self, tree):\n        command = Command.for_list\n        allowed_types = get_allowed_types(command, self.level)\n        self.check_type_allowed(command, allowed_types, tree.children[1], tree.meta)\n        self.save_type_to_lookup(tree.children[0].children[0], tree.meta.line, HedyType.any)\n        return self.to_typed_tree(tree, HedyType.none)\n\n    def for_loop(self, tree):\n        command = Command.for_loop\n        allowed_types = get_allowed_types(command, self.level)\n\n        start_type = self.check_type_allowed(command, allowed_types, tree.children[1], tree.meta)\n        self.check_type_allowed(command, allowed_types, tree.children[2], tree.meta)\n\n        iterator = str(tree.children[0])\n        self.save_type_to_lookup(iterator, tree.meta.line, start_type)\n\n        return self.to_typed_tree(tree, HedyType.none)\n\n    def integer(self, tree):\n        return self.to_typed_tree(tree, HedyType.integer)\n\n    def text(self, tree):\n        # under level 12 integers appear as text, so we parse them\n        if self.level < 12:\n            type_ = HedyType.integer if ConvertToPython.is_int(tree.children[0]) else HedyType.string\n        else:\n            type_ = HedyType.string\n        return self.to_typed_tree(tree, type_)\n\n    def text_in_quotes(self, tree):\n        t = tree.children[0] if tree.children else tree\n        return self.to_typed_tree(t, HedyType.string)\n\n    def var_access(self, tree):\n        return self.to_typed_tree(tree, HedyType.string)\n\n    def var_access_print(self, tree):\n        return self.var_access(tree)\n\n    def var(self, tree):\n        return self.to_typed_tree(tree, HedyType.none)\n\n    def number(self, tree):\n        number = tree.children[0]\n        if ConvertToPython.is_int(number):\n            return self.to_typed_tree(tree, HedyType.integer)\n        if ConvertToPython.is_float(number):\n            return self.to_typed_tree(tree, HedyType.float)\n        # We managed to parse a number that cannot be parsed by python\n        raise exceptions.ParseException(level=self.level, location='', found=number)\n\n    def true(self, tree):\n        return self.to_typed_tree(tree, HedyType.boolean)\n\n    def false(self, tree):\n        return self.to_typed_tree(tree, HedyType.boolean)\n\n    def subtraction(self, tree):\n        return self.to_sum_typed_tree(tree, Command.subtraction)\n\n    def addition(self, tree):\n        return self.to_sum_typed_tree(tree, Command.addition)\n\n    def multiplication(self, tree):\n        return self.to_sum_typed_tree(tree, Command.multiplication)\n\n    def division(self, tree):\n        return self.to_sum_typed_tree(tree, Command.division)\n\n    def to_sum_typed_tree(self, tree, command):\n        rules = [int_to_float, input_to_int, input_to_float, input_to_string]\n        prom_left_type, prom_right_type = self.validate_binary_command_args_type(command, tree, rules)\n        return TypedTree(tree.data, tree.children, tree.meta, prom_left_type)\n\n    def smaller(self, tree):\n        return self.to_comparison_tree(Command.smaller, tree)\n\n    def smaller_equal(self, tree):\n        return self.to_comparison_tree(Command.smaller_equal, tree)\n\n    def bigger(self, tree):\n        return self.to_comparison_tree(Command.bigger, tree)\n\n    def bigger_equal(self, tree):\n        return self.to_comparison_tree(Command.bigger_equal, tree)\n\n    def not_equal(self, tree):\n        rules = [int_to_float, input_to_int, input_to_float, input_to_string]\n        self.validate_binary_command_args_type(Command.not_equal, tree, rules)\n        return self.to_typed_tree(tree, HedyType.boolean)\n\n    def to_comparison_tree(self, command, tree):\n        allowed_types = get_allowed_types(command, self.level)\n        self.check_type_allowed(command, allowed_types, tree.children[0], tree.meta)\n        self.check_type_allowed(command, allowed_types, tree.children[1], tree.meta)\n        return self.to_typed_tree(tree, HedyType.boolean)\n\n    def validate_binary_command_args_type(self, command, tree, type_promotion_rules):\n        allowed_types = get_allowed_types(command, self.level)\n\n        left_type = self.check_type_allowed(command, allowed_types, tree.children[0], tree.meta)\n        right_type = self.check_type_allowed(command, allowed_types, tree.children[1], tree.meta)\n\n        if self.ignore_type(left_type) or self.ignore_type(right_type):\n            return HedyType.any, HedyType.any\n\n        prom_left_type, prom_right_type = promote_types([left_type, right_type], type_promotion_rules)\n\n        if prom_left_type != prom_right_type:\n            left_arg = tree.children[0].children[0]\n            right_arg = tree.children[1].children[0]\n            raise hedy.exceptions.InvalidTypeCombinationException(\n                command, left_arg, right_arg, left_type, right_type, tree.meta.line)\n        return prom_left_type, prom_right_type\n\n    def validate_args_type_allowed(self, command, children, meta):\n        allowed_types = get_allowed_types(command, self.level)\n        children = children if type(children) is list else [children]\n        for child in children:\n            self.check_type_allowed(command, allowed_types, child, meta)\n\n    def check_type_allowed(self, command, allowed_types, tree, meta=None):\n        arg_type = self.get_type(tree)\n        if arg_type not in allowed_types and not self.ignore_type(arg_type):\n            variable = tree.children[0]\n\n            if command in translatable_commands:\n                keywords = translatable_commands[command]\n                result = hedy_translation.find_command_keywords(\n                    self.input_string,\n                    self.lang,\n                    self.level,\n                    keywords,\n                    meta.line,\n                    meta.end_line,\n                    meta.column - 1,\n                    meta.end_column - 2)\n                result = {k: v for k, v in result.items()}\n                command = ' '.join([v.strip() for v in result.values() if v is not None])\n            raise exceptions.InvalidArgumentTypeException(command=command, invalid_type=arg_type,\n                                                          invalid_argument=variable, allowed_types=allowed_types,\n                                                          line_number=meta.line)\n        return arg_type\n\n    def get_type(self, tree):\n        # The rule var_access is used in the grammars definitions only in places where a variable needs to be accessed.\n        # var_access_print is identical to var_access and is introduced only to differentiate error messages.\n        # So, if it cannot be found in the lookup table, then it is an undefined variable for sure.\n        if tree.data in ['var_access', 'var_access_print']:\n            var_name = tree.children[0]\n            in_lookup, type_in_lookup = self.try_get_type_from_lookup(var_name, tree.meta.line)\n            if in_lookup:\n                return type_in_lookup\n            else:\n                self.get_var_access_error(tree, var_name)\n\n        # TypedTree with type 'None' and 'string' could be in the lookup because of the grammar definitions\n        # If the tree has more than 1 child, then it is not a leaf node, so do not search in the lookup\n        if tree.type_ in [HedyType.none, HedyType.string] and len(tree.children) == 1:\n            in_lookup, type_in_lookup = self.try_get_type_from_lookup(tree.children[0], tree.meta.line)\n            if in_lookup:\n                return type_in_lookup\n        # If the value is not in the lookup or the type is other than 'None' or 'string', return evaluated type\n        return tree.type_\n\n    def get_var_access_error(self, tree, var_name):\n        # var_access_print is a var_access used in print statements to provide the following better error messages\n        if tree.data == 'var_access_print':\n            # is there a variable that is mildly similar? if so, we probably meant that one\n            minimum_distance_allowed = 4\n            for var_in_lookup in self.lookup.get_all_in_scope(tree.meta.line):\n                if calculate_minimum_distance(var_in_lookup.name, var_name) <= minimum_distance_allowed:\n                    raise hedy.exceptions.UndefinedVarException(name=var_name, line_number=tree.meta.line)\n\n            # no variable which looks similar? Then, fall back to UnquotedTextException\n            raise hedy.exceptions.UnquotedTextException(\n                level=self.level, unquotedtext=var_name, line_number=tree.meta.line)\n\n        # for all other var_access instances, use UndefinedVarException\n        raise hedy.exceptions.UndefinedVarException(name=var_name, line_number=tree.meta.line)\n\n    def ignore_type(self, type_):\n        return type_ in [HedyType.any, HedyType.none]\n\n    def save_type_to_lookup(self, name, line, inferred_type):\n        for entry in self.lookup.get_matching(name, line):\n            entry.type_ = inferred_type\n\n    # Usually, variable definitions are sequential and by the time we need the type of a lookup entry, it would already\n    #  be inferred. However, there are valid cases in which the lookup entries will be accessed before their type\n    #  is inferred. This is the case with for loops:\n    #      for i in 1 to 10\n    #          print i\n    #  In the above case, we visit `print i`, before the definition of i in the for cycle. In this case, the tree of\n    #  lookup entry is used to infer the type and continue the started validation. This approach might cause issues\n    #  in case of cyclic references, e.g. b is b + 1. The flag `inferring` is used as a guard against these cases.\n    def try_get_type_from_lookup(self, name, access_line):\n        matches = self.lookup.get_matching(name, access_line)\n        if matches:\n            match = matches[0]\n            if not match.type_:\n                if match.currently_inferring:  # there is a cyclic var reference, e.g. b = b + 1\n                    raise exceptions.CyclicVariableDefinitionException(\n                        variable=match.name, line_number=match.tree.meta.line)\n                else:\n                    match.currently_inferring = True\n                    try:\n                        TypeValidator(self.lookup, self.level, self.lang, self.input_string).transform(match.tree)\n                    except VisitError as ex:\n                        raise ex.orig_exc\n                    match.currently_inferring = False\n\n            return True, self.lookup_type_fallback(matches[0].type_)\n        return False, None\n\n    def lookup_type_fallback(self, type_in_lookup):\n        # If the entry is in the lookup table but its type has not been evaluated yet, then most probably this is a\n        # variable referenced before it is defined. In this case, we rely on python to return an error. For now.\n        return HedyType.any if type_in_lookup is None else type_in_lookup\n\n    def to_typed_tree(self, tree, type_=HedyType.none):\n        return TypedTree(tree.data, tree.children, tree.meta, type_)\n\n    def __default__(self, data, children, meta):\n        return TypedTree(data, children, meta, HedyType.none)\n\n\ndef flatten_list_of_lists_to_list(args):\n    flat_list = []\n    for element in args:\n        if isinstance(\n                element,\n                str):  # str needs a special case before list because a str is also a list and we don't want to split all letters out\n            flat_list.append(element)\n        elif isinstance(element, list):\n            flat_list += flatten_list_of_lists_to_list(element)\n        else:\n            flat_list.append(element)\n    return flat_list\n\n\ndef are_all_arguments_true(args):\n    bool_arguments = [x[0] for x in args]\n    arguments_of_false_nodes = flatten_list_of_lists_to_list([x[1] for x in args if not x[0]])\n    return all(bool_arguments), arguments_of_false_nodes\n\n\n# this class contains code shared between IsValid and IsComplete, which are quite similar\n# because both filter out some types of 'wrong' nodes\n@v_args(meta=True)\nclass Filter(Transformer):\n    def __default__(self, data, children, meta):\n        result, args = are_all_arguments_true(children)\n        return result, args, meta\n\n    def program(self, meta, args):\n        bool_arguments = [x[0] for x in args]\n        if all(bool_arguments):\n            return [True]  # all complete\n        else:\n            for a in args:\n                if not a[0]:\n                    return False, a[1]\n\n    # leafs are treated differently, they are True + their arguments flattened\n    def var(self, meta, args):\n        return True, ''.join([str(c) for c in args]), meta\n\n    def random(self, meta, args):\n        return True, 'random', meta\n\n    def number(self, meta, args):\n        return True, ''.join([c for c in args]), meta\n\n    def NEGATIVE_NUMBER(self, args):\n        return True, ''.join([c for c in args]), None\n\n    def true(self, meta, args):\n        return True, args[0], meta\n\n    def false(self, meta, args):\n        return True, args[0], meta\n\n    def text(self, meta, args):\n        return all(args), ''.join([c for c in args]), meta\n\n\nclass AllCommands(Transformer):\n    def __init__(self, level):\n        self.level = level\n\n    def standardize_keyword(self, keyword):\n        # some keywords have names that are not a valid name for a command\n        # that's why we call them differently in the grammar\n        # we have to translate them to the regular names here for further communciation\n        if keyword in ['assign', 'assign_list']:\n            return 'is'\n        if keyword == 'ifelse':\n            return 'else'\n        if keyword == 'ifs':\n            return 'if'\n        if keyword == 'elifs':\n            return 'elif'\n        if keyword == 'for_loop':\n            return 'for'\n        if keyword == 'for_list':\n            return 'for'\n        if keyword == 'or_condition':\n            return 'or'\n        if keyword == 'and_condition':\n            return 'and'\n        if keyword == 'while_loop':\n            return 'while'\n        if keyword == 'in_list_check':\n            return 'in'\n        if keyword == 'input_empty_brackets':\n            return 'input'\n        if keyword == 'print_empty_brackets':\n            return 'print'\n        return str(keyword)\n\n    def __default__(self, args, children, meta):\n        # if we are matching a rule that is a command\n        production_rule_name = self.standardize_keyword(args)\n        leaves = flatten_list_of_lists_to_list(children)\n        # for the achievements we want to be able to also detect which operators were used by a kid\n        operators = ['addition', 'subtraction', 'multiplication', 'division']\n\n        if production_rule_name in commands_per_level[\n                self.level] or production_rule_name in operators or production_rule_name == 'if_pressed_else':\n            # if_pressed_else is not in the yamls, upsetting lookup code to get an alternative later\n            # lookup should be fixed instead, making a special case for now\n            if production_rule_name == 'else':  # use of else also has an if\n                return ['if', 'else'] + leaves\n            return [production_rule_name] + leaves\n        else:\n            return leaves  # 'pop up' the children\n\n    def command(self, args):\n        return args\n\n    def program(self, args):\n        return flatten_list_of_lists_to_list(args)\n\n    # somehow tokens are not picked up by the default rule so they need their own rule\n    def INT(self, args):\n        return []\n\n    def NAME(self, args):\n        return []\n\n    def NUMBER(self, args):\n        return []\n\n    def POSITIVE_NUMBER(self, args):\n        return []\n\n    def NEGATIVE_NUMBER(self, args):\n        return []\n\n    def text(self, args):\n        return []\n\n\ndef all_commands(input_string, level, lang='en'):\n    \"\"\"Return the commands used in a program string.\n\n    This function is still used in the web frontend, and some tests, but no longer by 'transpile'.\n    \"\"\"\n    input_string = process_input_string(input_string, level, lang)\n    program_root = parse_input(input_string, level, lang)\n\n    return AllCommands(level).transform(program_root)\n\n\ndef all_variables(input_string, level, lang='en'):\n    \"\"\" Return all variables used in a program string.\n    This function is still used by the roles of variables detection \"\"\"\n    program_root = parse_input(input_string, level, lang)\n    abstract_syntax_tree = ExtractAST().transform(program_root)\n\n    commands = AllCommands(level).transform(program_root)\n    has_pressed = \"if_pressed\" in commands or \"if_pressed_else\" in commands\n\n    lookup = create_lookup_table(abstract_syntax_tree, level, lang, input_string, has_pressed)\n\n    # list access and functions are intentionally omitted here\n    variables = [str(v.name) for v in lookup.get_only_vars()]\n    return list(set(variables))\n\n\n@v_args(meta=True)\nclass IsValid(Filter):\n    # all rules are valid except for the \"Invalid\" production rule\n    # this function is used to generate more informative error messages\n    # tree is transformed to a node of [Bool, args, command number]\n\n    def __init__(self, level, lang, input_string):\n        self.level = level\n        self.lang = lang\n        self.input_string = input_string\n\n    def error_invalid_space(self, meta, args):\n        line = args[0][2].line\n        # the error here is a space at the beginning of a line, we can fix that!\n        fixed_code, result = repair_leading_space(self.input_string, self.lang, self.level, line)\n        raise exceptions.InvalidSpaceException(\n            level=self.level, line_number=line, fixed_code=fixed_code, fixed_result=result)\n\n    def error_ask_missing_variable(self, meta, args):\n        raise exceptions.MissingVariableException(command='is ask', level=self.level, line_number=meta.line)\n\n    def error_print_nq(self, meta, args):\n        words = [str(x[1]).replace('\\\\\\\\', '\\\\') for x in args]  # second half of the list is the word\n        text = find_unquoted_segments(' '.join(words))\n\n        raise exceptions.UnquotedTextException(\n            level=self.level,\n            unquotedtext=text,\n            line_number=meta.line\n        )\n\n    def error_ask_dep_2(self, meta, args):\n        # ask is no longer usable this way, raise!\n        # ask_needs_var is an entry in lang.yaml in texts where we can add extra info on this error\n        raise hedy.exceptions.WrongLevelException(1, 'ask', \"ask_needs_var\", meta.line)\n\n    def error_echo_dep_2(self, meta, args):\n        # echo is no longer usable this way, raise!\n        # ask_needs_var is an entry in lang.yaml in texts where we can add extra info on this error\n        raise hedy.exceptions.WrongLevelException(1, 'echo', \"echo_out\", meta.line)\n\n    def error_list_access(self, meta, args):\n        raise exceptions.MisspelledAtCommand(command='at', arg1=str(args[1][1]), line_number=meta.line)\n\n    def error_add_missing_to(self, meta, args):\n        raise exceptions.MissingAdditionalCommand(command='add', missing_command='to', line_number=meta.line)\n\n    def error_remove_missing_from(self, meta, args):\n        raise exceptions.MissingAdditionalCommand(command='remove', missing_command='from', line_number=meta.line)\n\n    def error_add_missing_list(self, meta, args):\n        raise exceptions.IncompleteCommandException(incomplete_command='add', level=self.level, line_number=meta.line)\n\n    def error_remove_missing_list(self, meta, args):\n        raise exceptions.IncompleteCommandException(incomplete_command='remove', level=self.level,\n                                                    line_number=meta.line)\n\n    def error_non_decimal(self, meta, args):\n        raise exceptions.NonDecimalVariable(line_number=meta.line)\n\n    def error_invalid(self, meta, args):\n        invalid_command = args[0][1]\n        sug_exists, suggestion = closest_command(invalid_command, get_suggestions_for_language(self.lang, self.level))\n\n        if sug_exists is None:  # there is no suggestion\n            raise exceptions.MissingCommandException(level=self.level, line_number=meta.line)\n        if not sug_exists:  # the suggestion is invalid, i.e. identical to the command\n            invalid_command_en = hedy_translation.translate_keyword_to_en(invalid_command, self.lang)\n            if invalid_command_en == Command.turn:\n                arg = args[1][1]\n                raise hedy.exceptions.InvalidArgumentException(\n                    command=invalid_command,\n                    allowed_types=get_allowed_types(Command.turn, self.level),\n                    invalid_argument=arg,\n                    line_number=meta.line)\n            # clearly the error message here should be better or it should be a different one!\n            raise exceptions.ParseException(level=self.level, location=[meta.line, meta.column], found=invalid_command)\n        else:  # there is a valid suggestion\n            result = None\n            fixed_code = self.input_string.replace(invalid_command, suggestion)\n            if fixed_code != self.input_string:  # only if we have made a successful fix\n                try:\n                    fixed_result = transpile_inner(fixed_code, self.level)\n                    result = fixed_result\n                except exceptions.HedyException:\n                    # The fixed code contains another error. Only report the original error for now.\n                    pass\n\n        raise exceptions.InvalidCommandException(invalid_command=invalid_command, level=self.level,\n                                                 guessed_command=suggestion, line_number=meta.line,\n                                                 fixed_code=fixed_code, fixed_result=result)\n\n    def error_unsupported_number(self, meta, args):\n        # add in , line=meta.line, column=meta.column\n        raise exceptions.UnsupportedFloatException(value=''.join(str(args[0])))\n\n    def error_condition(self, meta, args):\n        raise exceptions.UnquotedEqualityCheckException(line_number=meta.line)\n\n    def error_repeat_no_command(self, meta, args):\n        raise exceptions.MissingInnerCommandException(command='repeat', level=self.level, line_number=meta.line)\n\n    def error_repeat_no_print(self, meta, args):\n        raise exceptions.IncompleteRepeatException(command='print', level=self.level, line_number=meta.line)\n\n    def error_repeat_no_times(self, meta, args):\n        raise exceptions.IncompleteRepeatException(command='times', level=self.level, line_number=meta.line)\n\n    def error_repeat_dep_8(self, meta, args):\n        # repeat is no longer usable this way, raise!\n        raise hedy.exceptions.WrongLevelException(7, 'repeat', \"repeat_dep\", meta.line)\n\n    def error_text_no_print(self, meta, args):\n        raise exceptions.LonelyTextException(level=self.level, line_number=meta.line)\n\n    def error_list_access_at(self, meta, args):\n        raise exceptions.InvalidAtCommandException(command='at', level=self.level, line_number=meta.line)\n\n    # flat if no longer allowed in level 8 and up\n    def error_ifelse(self, meta, args):\n        raise exceptions.WrongLevelException(\n            offending_keyword='if',\n            working_level=7,\n            tip='no_more_flat_if',\n            line_number=meta.line)\n\n    def error_else_no_if(self, meta, args):\n        raise exceptions.ElseWithoutIfException(meta.line)\n\n    def error_for_missing_in(self, meta, args):\n        raise exceptions.MissingAdditionalCommand(command='for', missing_command='in', line_number=meta.line)\n\n    def error_for_missing_to(self, meta, args):\n        raise exceptions.MissingAdditionalCommand(command='for', missing_command='to', line_number=meta.line)\n\n    def error_for_missing_command(self, meta, args):\n        raise exceptions.IncompleteCommandException(incomplete_command='for', level=self.level, line_number=meta.line)\n\n    def error_assign_list_missing_brackets(self, meta, args):\n        raise exceptions.MissingBracketsException(level=self.level, line_number=meta.line)\n\n    def error_nested_define(self, meta, args):\n        raise exceptions.NestedFunctionException()\n\n    def error_if_pressed_missing_else(self, meta, args):\n        raise exceptions.MissingElseForPressitException(\n            command='ifpressed_else', level=self.level, line_number=meta.line)\n\n    def if_pressed_no_colon(self, meta, args):\n        raise exceptions.MissingColonException(command=Command.if_, line_number=meta.line)\n\n    def if_pressed_elifs_no_colon(self, meta, args):\n        # if_pressed_elifs starts with _EOL, so we need to add +1 to its line\n        raise exceptions.MissingColonException(command=Command.elif_, line_number=meta.line + 1)\n\n    def if_pressed_elses_no_colon(self, meta, args):\n        # if_pressed_elses starts with _EOL, so we need to add +1 to its line\n        raise exceptions.MissingColonException(command=Command.else_, line_number=meta.line + 1)\n\n    def ifs_no_colon(self, meta, args):\n        raise exceptions.MissingColonException(command=Command.if_, line_number=meta.line)\n\n    def elifs_no_colon(self, meta, args):\n        # elifs starts with _EOL, so we need to add +1 to its line\n        raise exceptions.MissingColonException(command=Command.elif_, line_number=meta.line + 1)\n\n    def elses_no_colon(self, meta, args):\n        # elses starts with _EOL, so we need to add +1 to its line\n        raise exceptions.MissingColonException(command=Command.else_, line_number=meta.line + 1)\n\n    def for_list_no_colon(self, meta, args):\n        raise exceptions.MissingColonException(command=Command.for_list, line_number=meta.line)\n\n    def for_loop_no_colon(self, meta, args):\n        raise exceptions.MissingColonException(command=Command.for_loop, line_number=meta.line)\n\n    def while_loop_no_colon(self, meta, args):\n        raise exceptions.MissingColonException(command=Command.while_, line_number=meta.line)\n\n    def define_no_colon(self, meta, args):\n        raise exceptions.MissingColonException(command=Command.define, line_number=meta.line)\n\n    # other rules are inherited from Filter\n\n\n@v_args(meta=True)\ndef valid_echo(ast):\n    commands = ast.children\n    command_names = [x.children[0].data for x in commands]\n    no_echo = 'echo' not in command_names\n\n    # no echo is always ok!\n\n    # otherwise, both have to be in the list and echo should come after\n    return no_echo or ('echo' in command_names and 'ask' in command_names) and command_names.index(\n        'echo') > command_names.index('ask')\n\n\n@v_args(meta=True)\nclass IsComplete(Filter):\n    def __init__(self, level):\n        self.level = level\n\n    # ah so we actually have 2 types of \"error productions\"!\n    # true ones that live in the grammar like error_ask_dep_2\n    # and these ones where the parser combines valid and not valid\n    # versions, like print: _PRINT (text)?\n\n    # print, ask and echo can miss arguments and then are not complete\n    # used to generate more informative error messages\n    # tree is transformed to a node of [True] or [False, args, line_number]\n\n    def ask(self, meta, args):\n        # in level 1 ask without arguments means args == []\n        # in level 2 and up, ask without arguments is a list of 1, namely the var name\n        incomplete = (args == [] and self.level == 1) or (len(args) == 1 and self.level >= 2)\n        if meta is not None:\n            return not incomplete, ('ask', meta.line)\n        else:\n            return not incomplete, ('ask', 1)\n\n    def print(self, meta, args):\n        return args != [], ('print', meta.line)\n\n    def input(self, meta, args):\n        return len(args) > 1, ('input', meta.line)\n\n    def length(self, meta, args):\n        return args != [], ('len', meta.line)\n\n    def error_print_nq(self, meta, args):\n        return args != [], ('print level 2', meta.line)\n\n    def echo(self, meta, args):\n        # echo may miss an argument\n        return True, ('echo', meta.line)\n\n    # other rules are inherited from Filter\n\n\ndef process_characters_needing_escape(value):\n    # defines what happens if a kids uses ' or \\ in in a string\n    for c in characters_that_need_escaping:\n        value = value.replace(c, f'\\\\{c}')\n    return value\n\n\nsupported_quotes = {\n    \"'\": [\"'\"],  # single straight quotation marks\n    '\"': ['\"'],  # double straight quotation marks\n    '‘': ['’'],  # single curved quotation marks\n    \"“\": [\"”\"],  # double curved quotation marks or English quotes\n    \"„\": [\"“\",   # inward double curved quotation marks or German quotes\n          \"”\"],  # rightward double curved quotation marks or Polish quotes\n    '”': ['”'],  # rightward double curved quotation marks or Swedish/Finish quotes\n    \"«\": [\"»\"],  # guillemets or double angular marks or French quotes\n    \"《\": [\"》\"],  # Korean quotes\n    \"「\": [\"」\"],  # Japanese quotes\n}\n\n\ndef is_quoted(s):\n    return isinstance(s, str) and len(s) > 1 and s[0] in supported_quotes and s[-1] in supported_quotes[s[0]]\n\n\ndef find_unquoted_segments(s):\n    result = ''\n    segment = ''\n    used_quote = None\n    for c in s:\n        if not used_quote and c in supported_quotes:\n            # if it is a valid opening quote, append the segment to the result and clear the buffer\n            used_quote = c\n            result += segment\n            segment = c\n        elif used_quote and c in supported_quotes[used_quote]:\n            # if this is a valid closing quote, then empty the buffer as it holds a correctly quoted segment\n            used_quote = None\n            segment = ''\n        else:\n            segment += c\n\n    # add a segment with a missing closing quote, if any\n    result += segment\n    return result\n\n\ndef get_allowed_types(command, level):\n    # get only the allowed types of the command for all levels before the requested level\n    allowed = [values for key, values in commands_and_types_per_level[command].items() if key <= level]\n    # use the allowed types of the highest level available\n    return allowed[-1] if allowed else []\n\n\ndef add_sleep_to_command(commands, indent=True, is_debug=False, location=\"after\"):\n    if is_debug:\n        return commands\n\n    lines = commands.split()\n    if lines[-1] == \"time.sleep(0.1)\":  # we don't sleep double so skip if final line is a sleep already\n        return commands\n\n    sleep_command = \"time.sleep(0.1)\" if indent is False else \"  time.sleep(0.1)\"\n    if location == \"after\":\n        return commands + \"\\n\" + sleep_command\n    else:  # location is before\n        return sleep_command + \"\\n\" + commands\n\n\nclass BaseValue:\n    \"\"\" Used to preserve localization information, such as numeral system, during transpilation. It has the following\n    properties:\n      - data holds the already transpiled Python value, e.g. 1, -50.5, 'Hedy', True, 'sum * 15'\n      - num_sys keeps the used numeral system, e.g. 'Latin', 'Arabic'\n      - bool_sys holds the actual keywords used to create the boolean value, e.g. {True: 'вярно', False: 'невярно'}\"\"\"\n\n    def __init__(self, data, num_sys, bool_sys):\n        self.data = data\n        self.num_sys = num_sys\n        self.bool_sys = bool_sys\n\n    def __str__(self):\n        return f\"{self.__class__.__name__}({self.data}, {self.num_sys}, {self.bool_sys})\"\n\n    def __repr__(self):\n        return f\"{self.__class__.__name__}({self.data}, {self.num_sys}, {self.bool_sys})\"\n\n\nclass LiteralValue(BaseValue):\n    \"\"\" Used to transpile numbers, booleans and texts. The `data` property contains the already transpiled value,\n    e.g. 1, -50.5, 'Hedy', True, false. Note that in some cases variable access is parsed to a text node instead\n    of a var_access and gets converted to a LiteralValue. If you need to check for variables, always assume they\n    could come as plain strings or LiteralValues, i.e. 'variable' or LiteralValue('variable'). \"\"\"\n\n    def __init__(self, data, num_sys=None, bool_sys=None):\n        super().__init__(data, num_sys, bool_sys)\n\n\nclass ExpressionValue(BaseValue):\n    \"\"\" Used to transpile expressions. The data property contains the already transpiled expression,\n    e.g. '5 * a', 'sum_with_error(a, b, get_error('error_name'))'. \"\"\"\n\n    def __init__(self, data, num_sys=None, bool_sys=None):\n        super().__init__(data, num_sys, bool_sys)\n\n\n# decorator used to store each class in the lookup table\ndef hedy_transpiler(level, microbit=False):\n    def decorator(c):\n        if not microbit:\n            TRANSPILER_LOOKUP[level] = c\n        else:\n            MICROBIT_TRANSPILER_LOOKUP[level] = c\n        c.level = level\n        return c\n\n    return decorator\n\n\n@v_args(meta=True)\nclass ConvertToPython(Transformer):\n    def __init__(self, lookup, language=\"en\", is_debug=False, has_pressed=False):\n        super().__init__()\n        self.lookup = lookup\n        self.language = language\n        self.is_debug = is_debug\n        self.has_pressed = has_pressed\n\n    def add_debug_breakpoint(self):\n        if self.is_debug:\n            return f\" # __BREAKPOINT__\"\n        else:\n            return \"\"\n\n    def get_fresh_var(self, name):\n        while self.is_variable(name):\n            name = '_' + name\n        return name\n\n    def is_var_defined_before_access(self, var, access_line, var_to_escape=''):\n        \"\"\" Returns true if a variable is defined before being accessed. The `var_to_escape` parameter allows\n        the ask command to force the left-hand-side variable to not be defined on the same line.\"\"\"\n        def is_before(entry, line):\n            if entry.name != var_to_escape:\n                return entry.definition_line <= line\n            else:\n                return entry.definition_line < line\n\n        matching_lookup_entries = self.lookup.get_matching(var, access_line)\n        return any([e for e in matching_lookup_entries if is_before(e, access_line)])\n\n    def is_variable(self, arg, access_line=100):\n        \"\"\" Checks whether the argument is a variable. However, this method DOES NOT require a var definition and should\n        be used in places where the unquoted text can be interpreted also as a literal string. For example, in\n        `add value to list` the arg `value` could be a variable or the literal string `value`. If the argument turns out\n        to be a variable (and not an expression, a number or a quoted string):\n         - its access will be registered in the lookup table\n         - an exception will be raised if it is accessed before definition. Note that the default for access line is\n         max lines of Hedy code. So, if it is not provided, there is no check on whether the var is defined.\"\"\"\n        # Unpacking is needed because sometimes a var reference is parsed as 'text' and transpiled to a LiteralValue\n        var = self.unpack(arg)\n        entries = self.lookup.get_matching(var, access_line)\n        if entries:\n            if not self.is_var_defined_before_access(var, access_line):\n                raise hedy.exceptions.AccessBeforeAssignException(var, access_line, entries[0].definition_line)\n\n            for e in entries:  # vars can be defined multiple times, access validates all of them\n                e.access_line = access_line\n\n        return entries != []\n\n    def try_register_variable_access(self, var_name, access_line):\n        \"\"\" Identical to is_variable() but used in places where no return value is needed (thus, the different name)\"\"\"\n        self.is_variable(var_name, access_line)\n\n    def is_variable_with_definition(self, arg, access_line=100):\n        \"\"\" In case the arguments is an unquoted string, this method checks if it is correct variable usage with\n        definition. This method should be used in places where an unquoted text CANNOT be interpreted as a literal\n        string. For example, in `print 'Answer is ' answer` the arg `answer` must be a variable defined before the print\n        statement. If the argument turns out to be a variable (and not an expression, a number or a quoted string):\n         - its access will be registered in the lookup table\n         - an exception will be raised if the variable is not defined, or it is accessed before definition.\"\"\"\n        value = self.unpack(arg)\n        # expressions and trees are excluded from the check because they are not variables.\n        # note that we need to unpack to do the boolean, number and quoted checks.\n        is_var_candidate = not isinstance(arg, Tree) and \\\n            not isinstance(arg, ExpressionValue) and \\\n            not self.is_bool(value) and \\\n            not self.is_int(value) and \\\n            not self.is_float(value) and \\\n            not is_quoted(value)\n\n        if is_var_candidate and not (self.is_variable(arg, access_line) or self.is_list_access(value)):\n            raise exceptions.UndefinedVarException(name=value, line_number=access_line)\n\n        return is_var_candidate\n\n    def has_variable_with_definition(self, args, access_line=100):\n        \"\"\" Checks whether the unquoted text arguments are correct variable usages with definitions.\n        Returns True if at least one of the provided arguments is a variable.\"\"\"\n        return any([self.is_variable_with_definition(a, access_line) for a in args])\n\n    def check_variable_usage_and_definition(self, args, access_line=100):\n        \"\"\" Identical to has_variable_with_definition() but used in places where no return value is needed\n        Thus, the different name\"\"\"\n        self.has_variable_with_definition(args, access_line)\n\n    def merge_localization_info(self, args, line):\n        \"\"\" Merges the localization information of all arguments. Currently, it works in the following manner:\n            - take the numeral system of the first argument. If the arg is a LV or EV, return its numeral system.\n              If it is a variable, determine the numeral system at runtime.\n            - take the boolean representation of the first LV or EV argument that has booleans stored.\n              Unfortunately, at this point we don't have a way to determine the boolean representation at runtime.\"\"\"\n\n        num_sys, bool_sys = None, None\n        if args:\n            arg = self.scoped_var_access(args[0], line) if self.is_variable(args[0], line) else args[0]\n            num_sys = arg.num_sys if isinstance(arg, BaseValue) else f'get_num_sys({arg})'\n            bool_sys = next((a.bool_sys for a in args if isinstance(a, BaseValue) and a.bool_sys is not None), None)\n        return num_sys, bool_sys\n\n    def scoped_var_access_for_fstring(self, name, line):\n        arg = self.scoped_var_access(name, line)\n        return f\"{{{arg}}}\"\n\n    def scoped_var_access(self, name, line, parentheses=False):\n        if self.has_pressed:\n            loc_scope = self.lookup.try_get_local_scope(line)\n            if loc_scope:\n                ls_name = f'local_scope_{loc_scope[0]}_'\n                value = f'{ls_name}.get(\"{name}\") or global_scope_.get(\"{name}\") or {name}'\n            else:\n                value = f'global_scope_.get(\"{name}\") or {name}'\n            return f'({value})' if parentheses else value\n        return f\"{name}\"\n\n    def scoped_var_assign(self, name, line):\n        if self.has_pressed:\n            loc_scope = self.lookup.try_get_local_scope(line)\n            scope_name = f'local_scope_{loc_scope[0]}_' if loc_scope else 'global_scope_'\n            return f'{scope_name}[\"{name}\"]'\n        return f\"{name}\"\n\n    def get_localization_info_from_arg(self, arg, access_line):\n        if self.is_variable(arg, access_line) or self.is_list_access(arg):\n            return f'get_num_sys({escape_var(arg)})'\n        elif isinstance(arg, BaseValue):\n            return f\"'{arg.num_sys}'\"\n        else:\n            return f'get_num_sys({arg})'\n\n    def process_arg_for_data_access(self, arg, access_line=100, use_var_value=True, use_scope=True):\n        if self.is_variable(arg, access_line) or self.is_list_access(arg):\n            a = escape_var(arg)\n            return self.scoped_var_access(a, access_line) if use_scope else a\n        if is_quoted(arg):\n            arg = arg[1:-1]\n        return f\"'{process_characters_needing_escape(arg)}'\"\n\n    def process_arg_for_fstring(self, arg, access_line=100, var_to_escape=''):\n        \"\"\" Returns an argument prepared for a fstring. Note that it has a custom is_variable check. This is required,\n        because until level 3 variables are sometimes interpreted as literal strings in fstrings. For example, consider:\n           color = red, blue, yellow\n           print What is your favorite color?\n        In the print statement, `color` is not a var reference, but the literal string 'color'\n        because at this level we cannot print whole lists, so we revert to the literal string.\"\"\"\n\n        matching_entries = self.lookup.get_matching(arg, access_line)\n        is_list = [e for e in matching_entries if e.type_ == HedyType.list and '[' not in e.name]\n        is_var = not is_list and self.is_var_defined_before_access(arg, access_line, var_to_escape)\n\n        if is_var or self.is_list_access(arg):\n            self.try_register_variable_access(arg, access_line)\n            return \"{\" + escape_var(arg) + \"}\"\n        else:\n            return process_characters_needing_escape(arg)\n\n    #\n    # static methods\n    #\n\n    @staticmethod\n    def check_if_error_skipped(tree):\n        return hasattr(IsValid, tree.data)\n\n    @staticmethod\n    def is_int(n):\n        try:\n            int(n)\n            return True\n        except (ValueError, TypeError):\n            return False\n\n    @staticmethod\n    def is_float(n):\n        try:\n            float(n)\n            return True\n        except (ValueError, TypeError):\n            return False\n\n    @staticmethod\n    def is_index_list_access(s):\n        return isinstance(s, str) and '[int(' in s and ')-1]' in s\n\n    @staticmethod\n    def is_list_access(s):\n        is_random = isinstance(s, str) and 'random.choice(' in s and ')' in s\n        return is_random or ConvertToPython.is_index_list_access(s)\n\n    @staticmethod\n    def is_bool(s):\n        return s in ['True', 'False']\n\n    @staticmethod\n    def indent(s, spaces_amount=2):\n        lines = s.split('\\n')\n        return '\\n'.join([' ' * spaces_amount + line for line in lines])\n\n    @staticmethod\n    def unpack(arg):\n        if isinstance(arg, Tree):\n            # colors come as Tree('red', []), so we need get the Tree data\n            return arg.data\n        if isinstance(arg, BaseValue):\n            return arg.data\n        return arg\n\n    @staticmethod\n    def unpack_if_literal(arg):\n        if isinstance(arg, LiteralValue):\n            return arg.data\n        return arg\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=1)\n@source_map_transformer(source_map)\nclass ConvertToPython_1(ConvertToPython):\n\n    def __init__(self, lookup, language, is_debug, has_pressed):\n        super().__init__(lookup, language, is_debug, has_pressed)\n        __class__.level = 1\n\n    def program(self, meta, args):\n        lines = [str(a) for a in args]\n        if self.has_pressed:\n            lines.insert(0, \"global_scope_ = dict()\")\n        return '\\n'.join(lines)\n\n    def command(self, meta, args):\n        return args[0]\n\n    def text(self, meta, args):\n        return LiteralValue(''.join([str(c) for c in args]))\n\n    def integer(self, meta, args):\n        input_text = args[0].replace(' ', '')  # remove whitespaces\n        return LiteralValue(int(input_text), num_sys=get_num_sys(input_text))\n\n    def number(self, meta, args):\n        input_text = ''.join([x for x in args])\n        return LiteralValue(int(args[0]), num_sys=get_num_sys(input_text))\n\n    def NEGATIVE_NUMBER(self, meta, args):\n        input_text = ''.join([x for x in args])\n        return LiteralValue(int(args[0]), num_sys=get_num_sys(input_text))\n\n    def print(self, meta, args):\n        argument = process_characters_needing_escape(self.unpack(args[0]))\n        return f\"print('{argument}'){self.add_debug_breakpoint()}\"\n\n    def ask(self, meta, args):\n        argument = process_characters_needing_escape(self.unpack(args[0]))\n        return f\"answer = input('{argument}'){self.add_debug_breakpoint()}\"\n\n    def echo(self, meta, args):\n        if not args:\n            return f\"print(answer){self.add_debug_breakpoint()}\"  # no arguments, just print answer\n\n        argument = process_characters_needing_escape(self.unpack(args[0]))\n        return f\"print('{argument} '+answer){self.add_debug_breakpoint()}\"\n\n    def play(self, meta, args):\n        if not args:\n            return self.make_play('C4', meta)\n\n        note = self.unpack(args[0]).upper()  # will we also support multiple notes at once?\n        return self.make_play(note, meta)\n\n    def comment(self, meta, args):\n        return f\"#{''.join(args)}\"\n\n    def empty_line(self, meta, args):\n        return ''\n\n    def forward(self, meta, args):\n        if not args:\n            return add_sleep_to_command(f't.forward(50){self.add_debug_breakpoint()}',\n                                        indent=False, is_debug=self.is_debug, location=\"after\")\n        return self.make_forward(int(self.unpack(args[0])))\n\n    def color(self, meta, args):\n        if not args:\n            return f\"t.pencolor('black'){self.add_debug_breakpoint()}\"  # no arguments defaults to black ink\n\n        arg = self.unpack(args[0])\n        if arg in command_make_color_local(self.language):\n            return f\"t.pencolor('{arg}'){self.add_debug_breakpoint()}\"\n        else:\n            # the TypeValidator should protect against reaching this line:\n            raise exceptions.InvalidArgumentTypeException(command=Command.color, invalid_type='', invalid_argument=arg,\n                                                          allowed_types=get_allowed_types(Command.color, self.level),\n                                                          line_number=meta.line)\n\n    def turn(self, meta, args):\n        if not args:\n            return f\"t.right(90){self.add_debug_breakpoint()}\"  # no arguments defaults to a right turn\n\n        arg = args[0].data\n        if arg == 'left':\n            return f\"t.left(90){self.add_debug_breakpoint()}\"\n        elif arg == 'right':\n            return f\"t.right(90){self.add_debug_breakpoint()}\"\n        else:\n            # the TypeValidator should protect against reaching this line:\n            raise exceptions.InvalidArgumentTypeException(command=Command.turn, invalid_type='', invalid_argument=arg,\n                                                          allowed_types=get_allowed_types(Command.turn, self.level),\n                                                          line_number=meta.line)\n\n    def make_turn(self, parameter):\n        return self.make_turtle_command(parameter, Command.turn, 'right', False, HedyType.integer)\n\n    def make_forward(self, parameter):\n        return self.make_turtle_command(parameter, Command.forward, 'forward', True, HedyType.integer)\n\n    def make_play(self, note, meta):\n        ex = make_value_error(Command.play, 'suggestion_note', self.language)\n\n        return textwrap.dedent(f\"\"\"\\\n                play(note_with_error(localize('{note}'), {ex}))\n                time.sleep(0.5)\"\"\") + self.add_debug_breakpoint()\n\n    def make_turtle_command(self, parameter, command, command_text, add_sleep, target_type):\n        list_index_exception = self.make_index_error_check_if_list([parameter]) if isinstance(parameter, str) else ''\n        variable = self.get_fresh_var('__trtl')\n        func = 'int_with_error' if target_type == HedyType.integer else 'number_with_error'\n        ex = make_value_error(command, 'suggestion_number', self.language)\n        transpiled = list_index_exception + textwrap.dedent(f\"\"\"\\\n            {variable} = {func}({parameter}, {ex})\n            t.{command_text}(min(600, {variable}) if {variable} > 0 else max(-600, {variable})){self.add_debug_breakpoint()}\"\"\")\n        if add_sleep and not self.is_debug:\n            return add_sleep_to_command(transpiled, False, self.is_debug, location=\"after\")\n        return transpiled\n\n    def make_turtle_color_command(self, parameter, command, command_text, language):\n        both_colors = command_make_color_local(language)\n        variable = self.get_fresh_var('__trtl')\n\n        # we translate the color value to English at runtime, since it might be decided at runtime\n        # coming from a random list or ask\n\n        color_dict = {hedy_translation.translate_keyword_from_en(x, language): x for x in english_colors}\n        ex = make_value_error(command, 'suggestion_color', self.language, parameter)\n        return textwrap.dedent(f\"\"\"\\\n            {variable} = f'{parameter}'\n            color_dict = {color_dict}\n            if {variable} not in {both_colors}:\n              raise Exception(f{ex})\n            else:\n              if not {variable} in {english_colors}:\n                {variable} = color_dict[{variable}]\n            t.{command_text}({variable}){self.add_debug_breakpoint()}\"\"\")\n\n    def make_index_error_check_if_list(self, args):\n        # TODO: it is not nice to detect whether there is list access in the arguments using regular expressions.\n        #  We parsed the string to a ParseTree, transpiled that to a string, and now we are parsing it again via regex?\n        #  Perhaps we could store this information in the lookup table?\n\n        simple_var = r\"([\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_]+|[\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·]+)(?:\\.data)?\"\n        scope = fr'(?:{simple_var}+\\.get\\(\"{simple_var}\"\\))'\n        scoped_var = fr'''(\\(?((?:{scope}\\s+or)+\\s+{simple_var})\\)?(?:\\.data)?)'''\n\n        def build_regex_for_var(var):\n            # list access could be indexing or random choice\n            index = fr\"(({var})+\\[int\\(({simple_var})\\)-1\\])\"\n            index_pressed = fr\"(({var})+\\[int\\(({var})\\)-1\\])\"\n            random_access = fr\"(random\\.choice\\(({var})\\))\"\n            return f\"{index}|{random_access}|{index_pressed}\"\n\n        var_regex = scoped_var if self.has_pressed else simple_var\n        list_regex = build_regex_for_var(var_regex)\n\n        list_args = {}\n        for arg in args:\n            arg = str(self.unpack(arg))  # arg could be a literal value, expression value or a tree, so unpack it\n            for group in regex.findall(list_regex, arg):\n                match = [e for e in group if e][:2]\n                # match[0] is the access, e.g. animals[int(1)-1]; match[2] is the list name, e.g. animals\n                list_args[match[0]] = match[1]\n\n        errors = [self.make_index_error(list_access, list_name) for list_access, list_name in list_args.items()]\n        return ''.join(errors)\n\n    def make_index_error(self, code, list_name):\n        # after level 6 lists references look like `animals.data`, so remove the suffix\n        if list_name.endswith('.data'):\n            list_name = list_name[:-5]\n        # if has_pressed is True, then list references look like `(global_scope_.get('animals') or animals).data`\n        if self.has_pressed:\n            list_name = list_name.strip(')')\n            list_name = list_name.split('or')[-1].strip()\n        exception_text = make_error_text(exceptions.RuntimeIndexException(name=list_name), self.language)\n        return textwrap.dedent(f\"\"\"\\\n            try:\n              {code}\n            except IndexError:\n              raise Exception({exception_text})\n            \"\"\")\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=2)\n@source_map_transformer(source_map)\nclass ConvertToPython_2(ConvertToPython_1):\n    def color(self, meta, args):\n        if not args:\n            return f\"t.pencolor('black'){self.add_debug_breakpoint()}\"\n\n        value = self.unpack(args[0])\n        value = self.process_arg_for_fstring(value)\n\n        return self.make_turtle_color_command(value, Command.color, 'pencolor', self.language)\n\n    def turn(self, meta, args):\n        if not args:\n            return f\"t.right(90){self.add_debug_breakpoint()}\"  # no arguments defaults to a right turn\n        arg = self.unpack(args[0])\n        if self.is_variable(arg, meta.line) and not self.is_list_access(arg):\n            return self.make_turn(escape_var(arg))\n        # if not a variable, then the arg is an int\n        return self.make_turn(arg)\n\n    def forward(self, meta, args):\n        if not args:\n            return add_sleep_to_command(f't.forward(50){self.add_debug_breakpoint()}',\n                                        indent=False, is_debug=self.is_debug, location=\"after\")\n        arg = self.unpack(args[0])\n        if not self.is_variable(arg, meta.line) and not self.is_list_access(arg):\n            arg = int(arg)  # if not a variable, then the arg is an int\n        return self.make_forward(escape_var(arg))\n\n    def var(self, meta, args):\n        name = args[0]\n        return escape_var(name)\n\n    def var_access(self, meta, args):\n        name = args[0]\n        self.is_variable_with_definition(name, meta.line)\n        return escape_var(name)\n\n    def var_access_print(self, meta, args):\n        return self.var_access(meta, args)\n\n    def print(self, meta, args):\n        argument_string = self.process_print_ask_args(args, meta)\n        exception = self.make_index_error_check_if_list(args)\n        return exception + f\"print(f'{argument_string}'){self.add_debug_breakpoint()}\"\n\n    def ask(self, meta, args):\n        var = args[0]\n        argument_string = self.process_print_ask_args(args[1:], meta, var)\n        exception = self.make_index_error_check_if_list(args)\n        return exception + f\"{var} = input(f'{argument_string}'){self.add_debug_breakpoint()}\"\n\n    def process_print_ask_args(self, args, meta, var_to_escape=''):\n        # list access has been already rewritten since it occurs lower in the tree\n        # so when we encounter it as a child of print it will not be a subtree, but\n        # transpiled code (for example: random.choice(dieren))\n        # therefore we should not process it anymore and treat it as a variable:\n        # we set the line number to 100 so there is never an issue with variable access before\n        # assignment (regular code will not work since random.choice(dieren) is never defined as var as such)\n        result = []\n        for arg in args:\n            arg = self.unpack(arg)\n            if self.is_list_access(arg):\n                result.append(self.process_arg_for_fstring(arg, meta.line, var_to_escape))\n            else:\n                # this regex splits words from non-letter characters, such that name! becomes [name, !]\n                p = (r\"[·\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}]+|\"\n                     r\"[^·\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}]+\")\n                words = regex.findall(p, arg)\n                result.append(''.join([self.process_arg_for_fstring(w, meta.line, var_to_escape) for w in words]))\n        return ' '.join(result)\n\n    def play(self, meta, args):\n        if not args:\n            return self.make_play('C4', meta)\n\n        note = escape_var(self.unpack(args[0]))\n        if present_in_notes_mapping(note):  # this is a supported note\n            return self.make_play(note.upper(), meta)\n\n        if not self.is_variable_with_definition(note, meta.line):\n            note = f\"'{note}'\"\n\n        ex = make_value_error(Command.play, 'suggestion_note', self.language)\n        return textwrap.dedent(f\"\"\"\\\n                play(note_with_error(localize({note}), {ex}))\n                time.sleep(0.5)\"\"\") + self.add_debug_breakpoint()\n\n    def assign(self, meta, args):\n        var_name = self.scoped_var_assign(args[0], meta.line)\n        value = self.unpack(args[1])\n\n        exception = self.make_index_error_check_if_list([value])\n        if self.is_variable(value, meta.line) or self.is_list_access(value):\n            # if the assigned value is a variable, this is a reassign\n            value = escape_var(value)\n        else:\n            # if it is not a variable, put it in single quotes and escape them\n            value = f\"'{process_characters_needing_escape(value)}'\"\n        return f\"{exception}{var_name} = {value}{self.add_debug_breakpoint()}\"\n\n    def sleep(self, meta, args):\n        if not args:\n            return f\"time.sleep(1){self.add_debug_breakpoint()}\"\n\n        value = escape_var(self.unpack(args[0]))\n        value = f'\"{value}\"' if self.is_int(value) else value\n        self.try_register_variable_access(value, meta.line)\n        index_exception = self.make_index_error_check_if_list(args)\n        ex = make_value_error(Command.sleep, 'suggestion_number', self.language)\n        return f\"{index_exception}time.sleep(int_with_error({value}, {ex})){self.add_debug_breakpoint()}\"\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=3)\n@source_map_transformer(source_map)\nclass ConvertToPython_3(ConvertToPython_2):\n    def assign_list(self, meta, args):\n        parameter = self.unpack(args[0])\n        values = [f\"'{process_characters_needing_escape(str(self.unpack(a)))}'\" for a in args[1:]]\n        return f\"{parameter} = [{', '.join(values)}]{self.add_debug_breakpoint()}\"\n\n    def list_access(self, meta, args):\n        args = [escape_var(str(self.unpack(a))) for a in args]\n        # filter the word `random` since it has a special meaning here and is not excluded in the check var usage\n        vars_to_check = [a for a in args if a != 'random']\n        self.check_variable_usage_and_definition(vars_to_check, meta.line)\n\n        list_name = args[0]\n        index = args[1]\n        if index == 'random':\n            return f'random.choice({list_name})'\n        else:\n            return f'{list_name}[int({index})-1]'\n\n    def add(self, meta, args):\n        value = self.process_add_to_remove_from_list_argument(self.unpack(args[0]), meta)\n        list_name = self.unpack(args[1])\n\n        # both sides have been used now\n        self.try_register_variable_access(value, meta.line)\n        self.try_register_variable_access(list_name, meta.line)\n        return f\"{list_name}.append({value}){self.add_debug_breakpoint()}\"\n\n    def remove(self, meta, args):\n        value = self.process_add_to_remove_from_list_argument(self.unpack(args[0]), meta)\n        list_name = self.unpack(args[1])\n\n        # both sides have been used now\n        self.try_register_variable_access(value, meta.line)\n        self.try_register_variable_access(list_name, meta.line)\n\n        return textwrap.dedent(f\"\"\"\\\n        try:\n          {list_name}.remove({value}){self.add_debug_breakpoint()}\n        except:\n          pass\"\"\")\n\n    def process_add_to_remove_from_list_argument(self, arg, meta):\n        return self.process_arg_for_data_access(self.unpack(arg), meta.line)\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=4)\n@source_map_transformer(source_map)\nclass ConvertToPython_4(ConvertToPython_3):\n    def process_arg_for_fstring(self, name, access_line=100, var_to_escape=''):\n        name = escape_var(self.unpack(name))\n\n        if self.is_variable(name, access_line):\n            return self.scoped_var_access_for_fstring(name, access_line)\n        elif self.is_list_access(name):\n            return f\"{{{name}}}\"\n\n        if is_quoted(name):\n            name = name[1:-1]\n\n        # at level 4 backslashes are escaped in preprocessing, so we escape only '\n        escaped_single_quotes = name.replace(\"'\", \"\\\\'\")\n        return escaped_single_quotes\n\n    def var_access(self, meta, args):\n        name = args[0]\n        return escape_var(name)\n\n    def var_access_print(self, meta, args):\n        return self.var_access(meta, args)\n\n    def process_print_ask_args(self, args, meta, var_to_escape=''):\n        self.check_variable_usage_and_definition(args, meta.line)\n        return ''.join([self.process_arg_for_fstring(a, meta.line) for a in args])\n\n    def print(self, meta, args):\n        argument_string = self.process_print_ask_args(args, meta)\n        ex = self.make_index_error_check_if_list(args)\n        return f\"{ex}print(f'{argument_string}'){self.add_debug_breakpoint()}\"\n\n    def ask(self, meta, args):\n        var = args[0]\n        argument_string = self.process_print_ask_args(args[1:], meta)\n        ex = self.make_index_error_check_if_list(args)\n        return f\"{ex}{var} = input(f'{argument_string}'){self.add_debug_breakpoint()}\"\n\n    def error_print_nq(self, meta, args):\n        return ConvertToPython_2.print(self, meta, args)\n\n    def clear(self, meta, args):\n        command = textwrap.dedent(f\"\"\"\\\n        extensions.clear(){self.add_debug_breakpoint()}\n        try:\n            # If turtle is being used, reset canvas\n            t.hideturtle()\n            turtle.resetscreen()\n            t.left(90)\n            t.showturtle()\n        except NameError:\n            pass\"\"\")\n\n        # add two sleeps, one is a bit brief\n        command = add_sleep_to_command(command, False, self.is_debug, \"before\")\n        command = add_sleep_to_command(command, False, self.is_debug, \"before\")\n\n        return command\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=5)\n@source_map_transformer(source_map)\nclass ConvertToPython_5(ConvertToPython_4):\n    def ask(self, meta, args):\n        var = self.scoped_var_assign(escape_var(self.unpack(args[0])), meta.line)\n        argument_string = self.process_print_ask_args(args[1:], meta)\n        ex = self.make_index_error_check_if_list(args)\n        return f\"{ex}{var} = input(f'{argument_string}'){self.add_debug_breakpoint()}\"\n\n    def assign_list(self, meta, args):\n        parameter = self.scoped_var_assign(self.unpack(args[0]), meta.line)\n        values = [f\"'{process_characters_needing_escape(str(self.unpack(a)))}'\" for a in args[1:]]\n        return f\"{parameter} = [{', '.join(values)}]{self.add_debug_breakpoint()}\"\n\n    def list_access(self, meta, args):\n        args = [escape_var(str(self.unpack(a))) for a in args]\n        # filter the word `random` since it has a special meaning here and is not excluded in the check var usage\n        vars_to_check = [a for a in args if a != 'random']\n        self.check_variable_usage_and_definition(vars_to_check, meta.line)\n\n        list_name = self.scoped_var_access(args[0], meta.line)\n        index = args[1]\n        if index == 'random':\n            return f'random.choice({list_name})'\n        else:\n            if self.is_variable(index, meta.line):\n                index = self.scoped_var_access(index, meta.line)\n            list_name = f'({list_name})' if self.has_pressed else list_name\n            return f'{list_name}[int({index})-1]'\n\n    def add(self, meta, args):\n        value = self.process_add_to_remove_from_list_argument(args[0], meta)\n        list_name = self.unpack(args[1])\n        # register variable usage with the unprocessed list name\n        self.try_register_variable_access(list_name, meta.line)\n        list_name = self.scoped_var_access(list_name, meta.line, parentheses=True)\n\n        return f\"{list_name}.append({value}){self.add_debug_breakpoint()}\"\n\n    def remove(self, meta, args):\n        value = self.process_add_to_remove_from_list_argument(args[0], meta)\n        list_name = self.scoped_var_access(args[1], meta.line, parentheses=True)\n        self.try_register_variable_access(list_name, meta.line)\n\n        return textwrap.dedent(f\"\"\"\\\n        try:\n          {list_name}.remove({value}){self.add_debug_breakpoint()}\n        except:\n          pass\"\"\")\n\n    def ifs(self, meta, args):  # might be worth asking if we want a debug breakpoint here\n        return f\"\"\"if {args[0]}:{self.add_debug_breakpoint()}\n{ConvertToPython.indent(args[1])}\"\"\"\n\n    def ifelse(self, meta, args):\n        return f\"\"\"if {args[0]}:{self.add_debug_breakpoint()}\n{ConvertToPython.indent(args[1])}\nelse:{self.add_debug_breakpoint()}\n{ConvertToPython.indent(args[2])}\"\"\"\n\n    def condition(self, meta, args):\n        return ' and '.join(args)\n\n    def condition_spaces(self, meta, args):\n        arg0 = self.process_arg_for_data_access(self.unpack(args[0]), meta.line)\n        arg1 = self.process_arg_for_data_access(' '.join([self.unpack(a) for a in args[1:]]), meta.line)\n        return f\"localize({arg0}) == localize({arg1})\"\n\n    def equality_check(self, meta, args):\n        lhs = self.process_arg_for_data_access(str(self.unpack(args[0])), meta.line)\n        rhs = self.process_arg_for_data_access(str(self.unpack(args[1])).strip(), meta.line)\n        # In level 5 the values of variables are always strings (numbers are added in level 6)\n        # So, to compare numbers of diff numeral systems, we use localize()\n        return f\"localize({lhs}) == localize({rhs})\"\n\n    def in_list_check(self, meta, args):\n        arg0 = self.process_arg_for_data_access(self.unpack(args[0]), meta.line)\n        arg1 = self.process_arg_for_data_access(self.unpack(args[1]), meta.line)\n        # In level 5 the values of variables are always strings (numbers are added in level 6)\n        # So, to check if a number is in a list of numbers with diff numeral system, we use localize()\n        return f\"localize({arg0}) in [localize(__la) for __la in {arg1}]\"\n\n    def not_in_list_check(self, meta, args):\n        arg0 = self.process_arg_for_data_access(self.unpack(args[0]), meta.line)\n        arg1 = self.process_arg_for_data_access(self.unpack(args[1]), meta.line)\n        # In level 5 the values of variables are always strings (numbers are added in level 6)\n        # So, to check if a number is not in a list of numbers with diff numeral system, we use localize()\n        return f\"localize({arg0}) not in [localize(__la) for __la in {arg1}]\"\n\n    def make_function_name(self, key_name, line):\n        loc_scope = self.lookup.try_get_local_scope(line)\n        if loc_scope:\n            return f'if_pressed_{loc_scope[0]}_{key_name}_'\n        return f'if_pressed_{key_name}_'\n\n    def make_function(self, function_name, body):\n        return (\n            f'def {function_name}():' + '\\n' +\n            ConvertToPython.indent(body)\n        )\n\n    def clear_key_mapping(self):\n        return 'if_pressed_mapping = {\"else\": \"if_pressed_default_else\"}'\n\n    def add_if_key_mapping(self, key, function_name):\n        return f\"if_pressed_mapping[{key}] = '{function_name}'\"\n\n    def add_else_key_mapping(self, function_name):\n        return f\"if_pressed_mapping['else'] = '{function_name}'\"\n\n    def make_extension_call(self):\n        return 'extensions.if_pressed(if_pressed_mapping)'\n\n    def if_pressed_without_else(self, meta, args):\n        raise exceptions.MissingElseForPressitException(\n            command='if_pressed_else', level=self.level, line_number=meta.line\n        )\n\n    def if_pressed_else(self, meta, args):\n        key = self.process_arg_for_data_access(args[0], meta.line)\n\n        if_code = args[1]\n        if_function_name = self.make_function_name(args[0], meta.line)\n\n        else_code = args[2]\n        else_function_name = self.make_function_name('else', meta.line)\n\n        return (\n            self.clear_key_mapping() + '\\n' +\n            self.add_if_key_mapping(key, if_function_name) + '\\n' +\n            self.add_else_key_mapping(else_function_name) + '\\n' +\n            self.make_function(if_function_name, if_code) + '\\n' +\n            self.make_function(else_function_name, else_code) + '\\n' +\n            self.make_extension_call()\n        )\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=6)\n@source_map_transformer(source_map)\nclass ConvertToPython_6(ConvertToPython_5):\n    def turn(self, meta, args):\n        if not args:\n            return \"t.right(90)\" + self.add_debug_breakpoint()  # no arguments defaults to a right turn\n        arg = args[0]\n        if self.is_variable_with_definition(arg, meta.line):\n            value = f'{escape_var(self.unpack(arg))}.data'\n        else:\n            value = f'{self.unpack(arg)}'\n        return self.make_turn(value)\n\n    def forward(self, meta, args):\n        if not args:\n            return add_sleep_to_command('t.forward(50)' + self.add_debug_breakpoint(), indent=False,\n                                        is_debug=self.is_debug, location=\"after\")\n        arg = args[0]\n        if self.is_variable_with_definition(arg, meta.line):\n            value = f'{escape_var(self.unpack(arg))}.data'\n        else:\n            value = f'{self.unpack(arg)}'\n        return self.make_forward(value)\n\n    def sleep(self, meta, args):\n        if not args:\n            return \"time.sleep(1)\"\n\n        arg = args[0]\n        if type(arg) is Tree and self.check_if_error_skipped(arg):\n            raise hedy.exceptions.InvalidErrorSkippedException\n\n        if self.is_variable_with_definition(arg, meta.line):\n            value = f'{escape_var(self.unpack(arg))}.data'\n        else:\n            value = f'\"{self.unpack(arg)}\"'\n        index_exception = self.make_index_error_check_if_list(args)\n        ex = make_value_error(Command.sleep, 'suggestion_number', self.language)\n        return index_exception + textwrap.dedent(f\"time.sleep(int_with_error({value}, {ex}))\")\n\n    def ask(self, meta, args):\n        var = escape_var(self.unpack(args[0]))\n        var_assign = self.scoped_var_assign(var, meta.line)\n        var_access = self.scoped_var_access(var, meta.line)\n        argument_string = self.process_print_ask_args(args[1:], meta)\n        ex = self.make_index_error_check_if_list(args)\n        return ex + textwrap.dedent(f\"\"\"\\\n            {var_assign} = input(f'{argument_string}'){self.add_debug_breakpoint()}\n            __ns = get_num_sys({var_access})\n            {var_assign} = Value({var_access}, num_sys=__ns)\"\"\")\n\n    def play(self, meta, args):\n        if not args:\n            return self.make_play('C4', meta)\n\n        arg = args[0]\n        note = escape_var(self.unpack(arg))\n        if present_in_notes_mapping(note):  # this is a supported note\n            return self.make_play(note.upper(), meta)\n\n        if self.is_variable_with_definition(arg, meta.line):\n            arg = f'{escape_var(self.unpack(arg))}.data'\n        elif isinstance(arg, LiteralValue):\n            arg = f\"{arg.data}\" if is_quoted(arg.data) else f\"'{arg.data}'\"\n        elif isinstance(arg, ExpressionValue):\n            arg = arg.data\n        else:\n            # We end up here in case of list access, e.g. 'random.choice[animals]'\n            arg = f\"{arg}.data\"\n\n        ex = make_value_error(Command.play, 'suggestion_note', self.language)\n        return textwrap.dedent(f\"\"\"\\\n                play(note_with_error(localize({arg}), {ex}))\n                time.sleep(0.5)\"\"\") + self.add_debug_breakpoint()\n\n    def process_arg_for_fstring(self, name, access_line=100, var_to_escape=''):\n        if self.is_variable(name, access_line):\n            return self.scoped_var_access_for_fstring(escape_var(self.unpack(name)), access_line)\n        elif self.is_list_access(name):\n            return f\"{{{name}}}\"\n        elif isinstance(name, LiteralValue):\n            return self.process_literal_for_fstring(name)\n        elif isinstance(name, ExpressionValue):\n            return self.process_expression_for_fstring(name)\n        elif is_quoted(name):\n            name = name[1:-1]\n            return name.replace(\"'\", \"\\\\'\")\n        elif not ConvertToPython.is_int(name) and not ConvertToPython.is_float(name):\n            # We end up here with colors\n            return name.replace(\"'\", \"\\\\'\")\n        return str(name)\n\n    def equality_check(self, meta, args):\n        left_hand_side = self.process_arg_for_data_access(args[0], meta.line)\n        right_hand_side = self.process_arg_for_data_access(args[1], meta.line)\n\n        # Until level 12 numbers are often represented as strings, e.g. `a = Value('10')`. Thus, when checking for\n        # equality, we convert all args to string and to the default numeral system and then compare the result.\n        return f\"localize({left_hand_side}) == localize({right_hand_side})\"\n\n    def process_arg_for_data_access(self, arg, access_line=100, use_var_value=True, use_scope=True):\n        if self.is_variable(arg, access_line):\n            # In some cases, we don't need to use the data of a variable, e.g. `for a in animals`\n            data_part = '.data' if use_var_value else ''\n            a = escape_var(self.unpack(arg))\n            var_access = self.scoped_var_access(a, access_line, parentheses=True) if use_scope else a\n            return f\"{var_access}{data_part}\"\n        elif isinstance(arg, LiteralValue):\n            val = arg.data[1:-1] if is_quoted(arg.data) else arg.data\n            # equality does not have an f string and requires quotes to be added manually\n            return f\"'{process_characters_needing_escape(str(val))}'\"\n        elif self.is_list_access(arg):\n            return f'{arg}.data'\n        else:\n            # We end up here when if-pressed receives a Token(LETTER_OR_NUMBER, 'x')\n            # We also en up here when equality deals with an arg with spaces. We need to unpack, join them and pass it.\n            # And since equality does not have an f string and requires quotes to be added manually\n            val = arg[1:-1] if is_quoted(arg) else arg\n            return f\"'{process_characters_needing_escape(str(val))}'\"\n\n    def process_arg_for_func(self, arg, access_line):\n        if self.is_variable_with_definition(arg, access_line) and not self.is_list_access(arg):\n            var_name = self.scoped_var_access(escape_var(self.unpack(arg)), access_line)\n            return f\"{var_name}\"\n        return self.process_assign_argument(arg)\n\n    def assign(self, meta, args):\n        left_hand_side = self.scoped_var_assign(args[0], meta.line)\n        right_hand_side = args[1]\n\n        var = escape_var(self.unpack(right_hand_side))\n        if self.is_variable(right_hand_side, meta.line):\n            right_hand_side = self.scoped_var_access(var, meta.line)\n            return f\"{left_hand_side} = {right_hand_side}\"\n        elif self.is_list_access(var):\n            exception = self.make_index_error_check_if_list([var])\n            return f\"{exception}{left_hand_side} = {right_hand_side}{self.add_debug_breakpoint()}\"\n        else:\n            value = self.process_assign_argument(right_hand_side, escape_quotes=True)\n            return f\"{left_hand_side} = {value}{self.add_debug_breakpoint()}\"\n\n    def assign_list(self, meta, args):\n        parameter = self.scoped_var_assign(args[0], meta.line)\n        # list elements cannot be variables, only integers, strings and booleans\n        arguments = [self.process_assign_argument(v, escape_quotes=True) for v in args[1:]]\n\n        return f\"{parameter} = Value([{', '.join(arguments)}]){self.add_debug_breakpoint()}\"\n\n    def process_assign_argument(self, arg, escape_quotes=False):\n        # TODO: why don't we take into account variables here?\n        if isinstance(arg, LiteralValue):\n            return self.process_literal_to_value(arg, escape=escape_quotes)\n        elif isinstance(arg, ExpressionValue):\n            return self.process_expression_to_value(arg)\n        else:\n            return arg\n\n    def list_access(self, meta, args):\n        args = [escape_var(a) for a in args]\n        # filter the word `random` since it has a special meaning here and is not excluded in the check var usage\n        vars_to_check = [a for a in args if a != 'random']\n        self.check_variable_usage_and_definition(vars_to_check, meta.line)\n\n        list_name = self.scoped_var_access(escape_var(self.unpack(args[0])), meta.line, parentheses=True)\n        list_index = args[1]\n        if str(list_index) == 'random':\n            return f'random.choice({list_name}.data)'\n\n        value = escape_var(self.unpack(list_index))\n        if self.is_variable_with_definition(list_index, meta.line):\n            value = f'{self.scoped_var_access(value, meta.line, parentheses=True)}.data'\n        return f'{list_name}.data[int({value})-1]'\n\n    def add(self, meta, args):\n        value = self.process_add_to_remove_from_list_argument(args[0], meta)\n        list_name = self.unpack(args[1])\n        # register variable usage with the unprocessed list name\n        self.try_register_variable_access(list_name, meta.line)\n        list_name = self.scoped_var_access(list_name, meta.line, parentheses=True)\n\n        return f\"{list_name}.data.append({value}){self.add_debug_breakpoint()}\"\n\n    def remove(self, meta, args):\n        value = self.process_add_to_remove_from_list_argument(args[0], meta)\n        list_name = self.unpack(args[1])\n        # register variable usage with the unprocessed list name\n        self.try_register_variable_access(list_name, meta.line)\n        list_name = self.scoped_var_access(list_name, meta.line, parentheses=True)\n\n        return textwrap.dedent(f\"\"\"\\\n        try:\n          {list_name}.data.remove({value}){self.add_debug_breakpoint()}\n        except:\n          pass\"\"\")\n\n    def process_add_to_remove_from_list_argument(self, arg, meta):\n        if self.is_variable(arg, meta.line) or self.is_list_access(arg):\n            return self.scoped_var_access(escape_var(self.unpack(arg)), meta.line)\n        elif isinstance(arg, LiteralValue):\n            return self.process_literal_to_value(arg)\n        elif isinstance(arg, ExpressionValue):\n            return self.process_expression_to_value(arg)\n        else:\n            return f\"{arg}\"\n\n    def in_list_check(self, meta, args):\n        arg0 = self.process_arg_for_data_access(self.unpack(args[0]), meta.line)\n        arg1 = self.process_arg_for_data_access(self.unpack(args[1]), meta.line)\n        # In level 6 the values of variables could be either a number or a string, e.g. 5 or '5'.\n        # So, to check if a number is in a list of numbers with diff numeral system, we use localize()\n        return f\"localize({arg0}) in [localize(__la.data) for __la in {arg1}]\"\n\n    def not_in_list_check(self, meta, args):\n        arg0 = self.process_arg_for_data_access(self.unpack(args[0]), meta.line)\n        arg1 = self.process_arg_for_data_access(self.unpack(args[1]), meta.line)\n        # In level 6 the values of variables could be either a number or a string, e.g. 5 or '5'.\n        # So, to check if a number is not in a list of numbers with diff numeral system, we use localize()\n        return f\"localize({arg0}) not in [localize(__la.data) for __la in {arg1}]\"\n\n    def addition(self, meta, args):\n        return self.process_calculation(args, '+', meta)\n\n    def subtraction(self, meta, args):\n        return self.process_calculation(args, '-', meta)\n\n    def multiplication(self, meta, args):\n        return self.process_calculation(args, '*', meta)\n\n    def division(self, meta, args):\n        return self.process_calculation(args, '//', meta)\n\n    def process_calculation(self, args, operator, meta):\n        lhs = self.unpack(args[0])\n        rhs = self.unpack(args[1])\n        self.check_variable_usage_and_definition(args, meta.line)\n        num_sys, bool_sys = self.merge_localization_info(args, meta.line)\n\n        only_literal_values = all([isinstance(a, LiteralValue) for a in args])\n        if only_literal_values:\n            value = f'{lhs} {operator} {rhs}'\n        else:\n            lhs = self.scoped_var_access(lhs, meta.line) if self.is_variable(lhs, meta.line) else lhs\n            rhs = self.scoped_var_access(rhs, meta.line) if self.is_variable(rhs, meta.line) else rhs\n            exception_text = make_value_error(operator, 'suggestion_number', self.language)\n            value = f'number_with_error({lhs}, {exception_text}) {operator} number_with_error({rhs}, {exception_text})'\n        return ExpressionValue(value, num_sys, bool_sys)\n\n    def process_literal_to_value(self, lv, escape=False):\n        \"\"\" Transpiles a Literal Value to a Value instance, which exists in prefixes. For example,\n        LiteralValue(1, num_sys='Arabic') is converted to Value(1, num_sys='Arabic'). \"\"\"\n        arg = lv.data\n        data = f\"'{process_characters_needing_escape(str(arg))}'\"\n        num_sys = f\", num_sys='{lv.num_sys}'\" if lv.num_sys else ''\n        bool_sys = f', bool_sys={lv.bool_sys}' if lv.bool_sys else ''\n        return f\"Value({data}{num_sys}{bool_sys})\"\n\n    def process_expression_to_value(self, ev):\n        \"\"\" Transpiles an Expression Value instance to a Value instance, which exists in prefixes.\n        For example, ExpressionValue('100 / 2', num_sys='Arabic') is converted to Value(100 / 2, num_sys='Arabic'). \"\"\"\n        # The data of the expression value is exactly as it would be transpiled, so quotes must already be in it.\n        data = ev.data\n        num_sys_value = ev.num_sys if ev.num_sys and 'get_num_sys' in ev.num_sys else f\"'{ev.num_sys}'\"\n        num_sys = f\", num_sys={num_sys_value}\" if ev.num_sys else ''\n        bool_sys = f', bool_sys={ev.bool_sys}' if ev.bool_sys else ''\n        return f\"Value({data}{num_sys}{bool_sys})\"\n\n    def process_literal_for_fstring(self, lv):\n        value = lv.data\n        if is_quoted(value):\n            value = value[1:-1].replace(\"'\", \"\\\\'\")\n        if (lv.num_sys is None or lv.num_sys == 'Latin') and lv.bool_sys is None:\n            return str(value)\n        num_sys_part = f', num_sys=\"{lv.num_sys}\"' if lv.num_sys else ''\n        bool_sys_part = f', bool_sys={lv.bool_sys}' if lv.bool_sys else ''\n        return f\"{{localize({value}{num_sys_part}{bool_sys_part})}}\"\n\n    def process_expression_for_fstring(self, ev):\n        num_sys_value = ev.num_sys if ev.num_sys and 'get_num_sys' in ev.num_sys else f'\"{ev.num_sys}\"'\n        num_sys = f\", num_sys={num_sys_value}\" if ev.num_sys else ''\n        bool_sys = f', bool_sys={ev.bool_sys}' if ev.bool_sys else ''\n        return f\"{{localize({ev.data}{num_sys}{bool_sys})}}\"\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=7)\n@source_map_transformer(source_map)\nclass ConvertToPython_7(ConvertToPython_6):\n    def repeat(self, meta, args):\n        return self.make_repeat(meta, args, multiline=False)\n\n    def make_repeat(self, meta, args, multiline):\n        var_name = self.get_fresh_var('__i')\n        times = self.process_arg_for_data_access(args[0], meta.line)\n\n        # In level 7, repeat can only have 1 line in its body\n        if not multiline:\n            body = self.indent(args[1])\n        # In level 8 and up, repeat can have multiple lines in its body\n        else:\n            body = \"\\n\".join([self.indent(x) for x in args[1:]])\n\n        body = add_sleep_to_command(body, indent=True, is_debug=self.is_debug, location=\"after\")\n        ex = make_value_error(Command.repeat, 'suggestion_number', self.language)\n        return f\"for {var_name} in range(int_with_error({times}, {ex})):{self.add_debug_breakpoint()}\\n{body}\"\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=8)\n@v_args(meta=True)\n@hedy_transpiler(level=9)\n@source_map_transformer(source_map)\nclass ConvertToPython_8_9(ConvertToPython_7):\n    def command(self, meta, args):\n        return \"\".join(args)\n\n    def repeat(self, meta, args):\n        return self.make_repeat(meta, args, multiline=True)\n\n    def ifs(self, meta, args):\n        all_lines = [ConvertToPython.indent(x) for x in args[1:]]\n        return \"if \" + args[0] + \":\" + self.add_debug_breakpoint() + \"\\n\" + \"\\n\".join(all_lines)\n\n    def if_pressed(self, meta, args):\n        key = self.process_arg_for_data_access(args[0], meta.line)\n        args = [a for a in args if a != \"\"]  # filter out in|dedent tokens\n\n        if_code = '\\n'.join(args[1:])\n        if_function_name = self.make_function_name(args[0], meta.line)\n\n        return (\n            self.clear_key_mapping() + '\\n' +\n            self.add_if_key_mapping(key, if_function_name) + '\\n' +\n            self.make_function(if_function_name, if_code) + '\\n'\n        )\n\n    def if_pressed_elses(self, meta, args):\n        args = [a for a in args if a != \"\"]  # filter out in|dedent tokens\n        else_code = '\\n'.join(args)\n        else_function_name = self.make_function_name('else', meta.line)\n\n        return (\n            self.add_else_key_mapping(else_function_name) + '\\n' +\n            self.make_function(else_function_name, else_code) + '\\n' +\n            self.make_extension_call()\n        )\n\n    def elses(self, meta, args):\n        args = [a for a in args if a != \"\"]  # filter out in|dedent tokens\n        all_lines = [ConvertToPython.indent(x) for x in args]\n\n        return \"\\nelse:\\n\" + \"\\n\".join(all_lines)\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=10)\n@source_map_transformer(source_map)\nclass ConvertToPython_10(ConvertToPython_8_9):\n    def for_list(self, meta, args):\n        times = self.process_arg_for_data_access(args[0], meta.line, use_var_value=False, use_scope=False)\n        list_name = self.process_arg_for_data_access(args[1], meta.line, use_var_value=True)\n\n        lines = self.prepend_for_variable_to_body(args[2:], times)\n        body = \"\\n\".join([self.indent(line) for line in lines])\n        body = add_sleep_to_command(body, True, self.is_debug, location=\"after\")\n\n        return f\"for {times} in {list_name}:{self.add_debug_breakpoint()}\\n{body}\"\n\n    def prepend_for_variable_to_body(self, lines, for_var):\n        # if self.has_pressed:\n        #     # TODO this should a local scope if the for-list is in a function\n        #     # Also, this leaks a variable from the loop to the outer scope\n        #     lines.insert(0, f'global_scope_[\"{escape_var(for_var)}\"] = {escape_var(for_var)}')\n        return lines\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=11)\n@source_map_transformer(source_map)\nclass ConvertToPython_11(ConvertToPython_10):\n    def for_loop(self, meta, args):\n        iterator = escape_var(args[0])\n        # iterator is always a used variable\n        self.try_register_variable_access(iterator, meta.line)\n\n        step = self.get_fresh_var('__step')\n        step_begin = self.process_for_loop_args(args[1], meta, runtime_error=True)\n        step_end = self.process_for_loop_args(args[2], meta, runtime_error=True)\n        num_sys = self.get_localization_info_from_arg(args[1], meta.line)\n        range_var = self.get_fresh_var(\"__rv\")\n        range_begin = self.process_for_loop_args(args[1], meta)\n        range_end = self.process_for_loop_args(args[2], meta)\n        range_part = (f'[Value({range_var}, num_sys={num_sys}) '\n                      f'for {range_var} in range({range_begin}, {range_end} + {step}, {step})]')\n        lines = self.prepend_for_variable_to_body(args[3:], iterator)\n        body = \"\\n\".join([self.indent(x) for x in lines])\n        body = add_sleep_to_command(body, indent=True, is_debug=self.is_debug, location=\"after\")\n        # Adding runtime errors, i.e. int_with_error(arg, 'Very long error message'), can bloat the code a lot.\n        # To overcome this, we only add the runtime error the first time the arg is accessed - in the step definition.\n        # In later uses, such as the range definition, we use regular int() cast.\n        return textwrap.dedent(f\"\"\"\\\n            {step} = 1 if {step_begin} < {step_end} else -1\n            for {iterator} in {range_part}:{self.add_debug_breakpoint()}\n            \"\"\") + body\n\n    def process_for_loop_args(self, arg, meta, runtime_error=False):\n        if self.is_variable(arg, meta.line) or self.is_list_access(arg):\n            var = escape_var(arg)\n            if runtime_error:\n                ex = make_value_error(Command.sleep, 'suggestion_number', self.language)\n                return f'int_with_error({var}.data, {ex})'\n            else:\n                return f'int({var}.data)'\n        return f'int({self.unpack(arg)})'\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=12)\n@source_map_transformer(source_map)\nclass ConvertToPython_12(ConvertToPython_11):\n    def text_in_quotes(self, meta, args):\n        # We need to re-add the quotes, so that the Python code becomes name = 'Jan' or \"Jan's\"\n        if args:\n            text = args[0].data\n            text_in_quotes = f'\"{text}\"' if \"'\" in text else f\"'{text}'\"\n        else:\n            text_in_quotes = \"''\"\n        return LiteralValue(text_in_quotes)\n\n    def number(self, meta, args):\n        # try converting to ints\n        try:\n            value = ''.join([str(int(x)) for x in args])\n            value = int(value)\n        except Exception:\n            # if it does not work, convert to floats\n            value = ''.join([str(float(x)) for x in args])\n            value = float(value)\n        input_text = ''.join([x for x in args])\n        return LiteralValue(value, num_sys=get_num_sys(input_text))\n\n    def true(self, meta, args):\n        bool_sys = self.get_bool_sys(args[0], True)\n        return LiteralValue(True, bool_sys=bool_sys)\n\n    def false(self, meta, args):\n        bool_sys = self.get_bool_sys(args[0], False)\n        return LiteralValue(False, bool_sys=bool_sys)\n\n    def get_bool_sys(self, value, boolean):\n        def get_boolean_values(val, used_key, language, true_key, false_key):\n            if KEYWORDS[language][used_key] == val:\n                return KEYWORDS[language][true_key], KEYWORDS[language][false_key]\n            return None, None\n\n        booleans = ['true', 'True'] if boolean else ['false', 'False']\n        for lang in [self.language, 'en']:\n            keyword_true, keyword_false = get_boolean_values(value, booleans[0], lang, 'true', 'false')\n            if keyword_true:\n                return {True: keyword_true, False: keyword_false}\n\n            keyword_true, keyword_false = get_boolean_values(value, booleans[1], lang, 'True', 'False')\n            if keyword_true:\n                return {True: keyword_true, False: keyword_false}\n\n    def is_variable_with_definition(self, arg, access_line=100):\n        # This method should be used from level 12 and up where quotes around strings are required\n        # The arg is valid if it is either an int, a float, the 'random' operator, a quoted string,\n        # or a variable. If the arg is an unquoted string which is not in the lookup table, an\n        # UnquotedAssignTextException is raised. Most likely the real is that the kid forgot to add quotes.\n        # args = arg if type(arg) is list else [arg]\n        try:\n            return super().is_variable_with_definition(arg, access_line)\n        except exceptions.UndefinedVarException:\n            a = self.unpack(arg)\n            if not (self.is_int(a) or\n                    self.is_float(a) or\n                    self.is_list_access(a) or\n                    self.is_bool(a)):\n                raise exceptions.UnquotedAssignTextException(text=a, line_number=access_line)\n        return False\n\n    def play(self, meta, args):\n        if not args:\n            return self.make_play('C4', meta)\n\n        arg = args[0]\n        note = self.unpack(arg)\n        if present_in_notes_mapping(note):  # this is a supported note\n            return self.make_play(note.upper(), meta)\n\n        if self.is_variable_with_definition(arg, meta.line):\n            arg = f'{escape_var(self.unpack(arg))}.data'\n        elif isinstance(arg, LiteralValue):\n            arg = f\"{arg.data}\" if is_quoted(arg.data) else f\"'{arg.data}'\"\n        elif isinstance(arg, ExpressionValue):\n            arg = arg.data\n        else:\n            # We end up here in case of list access, e.g. 'random.choice[animals]'\n            arg = f\"{arg}.data\"\n\n        ex = make_value_error(Command.play, 'suggestion_note', self.language)\n        return textwrap.dedent(f\"\"\"\\\n                play(note_with_error(localize({arg}), {ex}))\n                time.sleep(0.5)\"\"\") + self.add_debug_breakpoint()\n\n    def addition(self, meta, args):\n        lhs = self.unpack(args[0])\n        rhs = self.unpack(args[1])\n        num_sys, bool_sys = self.merge_localization_info(args, meta.line)\n\n        if self.has_variable_with_definition(args, meta.line):\n            lhs = self.scoped_var_access(lhs, meta.line) if self.is_variable(lhs, meta.line) else lhs\n            rhs = self.scoped_var_access(rhs, meta.line) if self.is_variable(rhs, meta.line) else rhs\n            ex_text = make_values_error(Command.addition, 'suggestion_numbers_or_strings', self.language)\n            value = f'sum_with_error({lhs}, {rhs}, {ex_text})'\n        else:\n            value = f'{lhs} + {rhs}'\n        return ExpressionValue(value, num_sys, bool_sys)\n\n    def division(self, meta, args):\n        return self.process_calculation(args, '/', meta)\n\n    def sleep(self, meta, args):\n        if not args:\n            return \"time.sleep(1)\"\n\n        if type(args[0]) is Tree and self.check_if_error_skipped(args[0]):\n            raise hedy.exceptions.InvalidErrorSkippedException\n\n        if self.is_variable_with_definition(args[0], meta.line):\n            value = f'{escape_var(self.unpack(args[0]))}.data'\n        else:\n            value = f'{self.unpack(args[0])}'\n\n        index_exception = self.make_index_error_check_if_list(args)\n        ex = make_value_error(Command.sleep, 'suggestion_number', self.language)\n        return index_exception + textwrap.dedent(f\"time.sleep(int_with_error({value}, {ex}))\")\n\n    def turn(self, meta, args):\n        if not args:\n            return \"t.right(90)\" + self.add_debug_breakpoint()  # no arguments defaults to a right turn\n\n        if self.is_variable_with_definition(args[0], meta.line):\n            return self.make_turn(f'{escape_var(self.unpack(args[0]))}.data')\n\n        value = f'{self.unpack(args[0])}'\n        return self.make_turn(value)\n\n    def forward(self, meta, args):\n        if not args:\n            command = f't.forward(50){self.add_debug_breakpoint()}'\n            return add_sleep_to_command(command, False, self.is_debug)\n\n        if self.is_variable_with_definition(args[0], meta.line):\n            return self.make_forward(f'{escape_var(self.unpack(args[0]))}.data')\n\n        value = f'{self.unpack(args[0])}'\n        return self.make_forward(value)\n\n    def make_turn(self, parameter):\n        return self.make_turtle_command(parameter, Command.turn, 'right', False, HedyType.float)\n\n    def make_forward(self, parameter):\n        return self.make_turtle_command(parameter, Command.forward,\n                                        'forward', True, HedyType.float)\n\n    def assign(self, meta, args):\n        left_hand_side = self.scoped_var_assign(args[0], meta.line)\n        right_hand_side = args[1]\n\n        var = escape_var(self.unpack(right_hand_side))\n        if self.is_variable(right_hand_side, meta.line):\n            right_hand_side = self.scoped_var_access(var, meta.line)\n        else:\n            # we no longer escape quotes here because they are now needed\n            right_hand_side = self.process_assign_argument(right_hand_side)\n\n        exception = self.make_index_error_check_if_list([right_hand_side])\n        return f\"{exception}{left_hand_side} = {right_hand_side}{self.add_debug_breakpoint()}\"\n\n    def print(self, meta, args):\n        argument_string = self.process_print_ask_args(args, meta)\n        exception = self.make_index_error_check_if_list(args)\n        return exception + f\"print(f'''{argument_string}''')\" + self.add_debug_breakpoint()\n\n    def ask(self, meta, args):\n        var = escape_var(self.unpack(args[0]))\n        var_assign = self.scoped_var_assign(var, meta.line)\n        var_access = self.scoped_var_access(var, meta.line)\n        argument_string = self.process_print_ask_args(args[1:], meta)\n        exception = self.make_index_error_check_if_list(args)\n        return exception + textwrap.dedent(f\"\"\"\\\n            {var_assign} = input(f'''{argument_string}'''){self.add_debug_breakpoint()}\n            __ns = get_num_sys({var_access})\n            try:\n              {var_assign} = int({var_access})\n            except ValueError:\n              try:\n                {var_assign} = float({var_access})\n              except ValueError:\n                pass\n            {var_assign} = Value({var_access}, num_sys=__ns)\"\"\")  # no number? leave as string\n\n    def process_print_ask_args(self, args, meta, var_to_escape=''):\n        result = super().process_print_ask_args(args, meta)\n        if \"'''\" in result:\n            raise exceptions.UnsupportedStringValue(invalid_value=\"'''\")\n        return result\n\n    def process_arg_for_fstring(self, name, access_line=100, var_to_escape=''):\n        if self.is_variable(name, access_line):\n            return self.scoped_var_access_for_fstring(escape_var(self.unpack(name)), access_line)\n        elif self.is_list_access(name):\n            return f\"{{{name}}}\"\n        elif isinstance(name, LiteralValue):\n            return self.process_literal_for_fstring(name)\n        elif isinstance(name, ExpressionValue):\n            return self.process_expression_for_fstring(name)\n        elif is_quoted(name):\n            name = name[1:-1]\n            return name.replace(\"'\", \"\\\\'\")\n        elif not ConvertToPython.is_int(name) and not ConvertToPython.is_float(name):\n            # We end up here with colors\n            name = name if self.is_bool(name) else escape_var(name.replace(\"'\", \"\\\\'\"))\n            name = '\"' + name + '\"'\n        return str(name)\n\n    def list_access(self, meta, args):\n        args = [escape_var(a) for a in args]\n        # filter the word `random` since it has a special meaning here and is not excluded in the check var usage\n        vars_to_check = [a for a in args if str(a) != 'random']\n        self.check_variable_usage_and_definition(vars_to_check, meta.line)\n\n        list_name = self.scoped_var_access(args[0], meta.line, parentheses=True)\n        list_index = args[1]\n\n        if str(list_index) == 'random':\n            return f'random.choice({list_name}.data)'\n\n        value = self.unpack(list_index)\n        if self.is_variable_with_definition(list_index, meta.line):\n            value = f'{self.scoped_var_access(value, meta.line, parentheses=True)}.data'\n        return f'{list_name}.data[int({value})-1]'\n\n    def ifs(self, meta, args):\n        all_lines = [self.indent(x) for x in args[1:]]\n        exception = self.make_index_error_check_if_list([args[0]])\n        return exception + \"if \" + args[0] + \":\" + self.add_debug_breakpoint() + \"\\n\" + \"\\n\".join(all_lines)\n\n    def process_add_to_remove_from_list_argument(self, arg, meta):\n        if self.is_variable_with_definition(arg, meta.line):\n            return self.scoped_var_access(escape_var(self.unpack(arg)), meta.line)\n        elif isinstance(arg, LiteralValue):\n            return self.process_literal_to_value(arg)\n        elif isinstance(arg, ExpressionValue):\n            return self.process_expression_to_value(arg)\n        else:\n            return f\"{arg}\"\n\n    def in_list_check(self, meta, args):\n        value, list_name = self.process_in_not_in_list_args(meta, args)\n        return f\"{value} in {list_name}.data\"\n\n    def not_in_list_check(self, meta, args):\n        value, list_name = self.process_in_not_in_list_args(meta, args)\n        return f\"{value} not in {list_name}.data\"\n\n    def process_in_not_in_list_args(self, meta, args):\n        self.check_variable_usage_and_definition(args, meta.line)\n\n        value = self.unpack(args[0])\n        if self.is_variable_with_definition(args[0], meta.line) and not self.is_list_access(value):\n            value = self.scoped_var_access(value, meta.line, parentheses=True)\n        else:\n            value = self.process_assign_argument(args[0])\n        list_name = self.scoped_var_access(self.unpack(args[1]), meta.line, parentheses=True)\n        return value, list_name\n\n    def equality_check(self, meta, args):\n        left_hand_side = self.process_arg_for_data_access(args[0], meta.line)\n        right_hand_side = self.process_arg_for_data_access(args[1], meta.line)\n\n        # From level 12 we work only with the real values (e.g. int, floats, booleans), no string conversion is needed\n        return f\"{left_hand_side} == {right_hand_side}\"\n\n    def for_list(self, meta, args):\n        times = self.process_arg_for_data_access(args[0], meta.line, use_var_value=False, use_scope=False)\n        list_name = self.process_arg_for_data_access(args[1], meta.line, use_var_value=True)\n        # add the list to the lookup table, this used now too\n        self.try_register_variable_access(list_name, meta.line)\n\n        lines = self.prepend_for_variable_to_body(args[2:], times)\n        body = \"\\n\".join([self.indent(x) for x in lines])\n        body = add_sleep_to_command(body, is_debug=self.is_debug)\n        return f\"for {times} in {list_name}:{self.add_debug_breakpoint()}\\n{body}\"\n\n    def for_loop(self, meta, args):\n        iterator = escape_var(args[0])\n        # iterator is always a used variable\n        self.try_register_variable_access(iterator, meta.line)\n\n        lines = self.prepend_for_variable_to_body(args[3:], iterator)\n        body = \"\\n\".join([self.indent(x) for x in lines])\n        body = add_sleep_to_command(body, is_debug=self.is_debug)\n        step_var_name = self.get_fresh_var('__step')\n\n        begin = self.process_arg_for_data_access(args[1], meta.line)\n        end = self.process_arg_for_data_access(args[2], meta.line)\n        num_sys = self.get_localization_info_from_arg(args[1], meta.line)\n        range_var = self.get_fresh_var(\"__rv\")\n        range_part = (f'[Value({range_var}, num_sys={num_sys}) '\n                      f'for {range_var} in range({begin}, {end} + {step_var_name}, {step_var_name})]')\n\n        return textwrap.dedent(f\"\"\"\\\n            {step_var_name} = 1 if {begin} < {end} else -1\n            for {iterator} in {range_part}:{self.add_debug_breakpoint()}\n            \"\"\") + body\n\n    def process_arg_for_data_access(self, arg, access_line=100, use_var_value=True, use_scope=True):\n        if self.is_variable(arg, access_line):\n            # In some cases, we don't need to use the data of a variable, e.g. `for a in animals`\n            data_part = '.data' if use_var_value else ''\n            a = escape_var(self.unpack(arg))\n            var_name = self.scoped_var_access(a, access_line, parentheses=True) if use_scope else a\n            return f\"{var_name}{data_part}\"\n        elif isinstance(arg, LiteralValue):\n            if is_quoted(arg.data):\n                return f\"'{process_characters_needing_escape(arg.data[1:-1])}'\"\n            return arg.data\n        elif self.is_list_access(arg):\n            return f'{arg}.data'\n        else:\n            # We end up here when if-pressed receives a Token(LETTER_OR_NUMBER, 'x')\n            return f\"'{arg}'\"\n\n    def process_literal_to_value(self, lv, escape=False):\n        \"\"\" Transpiles a Literal Value to a Value instance, which exists in prefixes. For example,\n        LiteralValue(1, num_sys='Arabic') is converted to Value(1, num_sys='Arabic'). \"\"\"\n        # The data of the literal value is exactly as it would be transpiled, so quotes must already be in it.\n        # However, in some cases we need to strip quotes and re-add them as single quotes.\n        if escape and isinstance(lv.data, str):\n            arg = lv.data[1:-1] if is_quoted(lv.data) else lv.data\n            data = f\"'{process_characters_needing_escape(arg)}'\"\n        else:\n            data = lv.data\n        num_sys = f\", num_sys='{lv.num_sys}'\" if lv.num_sys else ''\n        bool_sys = f', bool_sys={lv.bool_sys}' if lv.bool_sys else ''\n        return f\"Value({data}{num_sys}{bool_sys})\"\n\n    def process_literal_for_fstring(self, lv):\n        value = lv.data\n        if is_quoted(value):\n            value = value[1:-1].replace(\"'\", \"\\\\'\")\n        if (lv.num_sys is None or lv.num_sys == 'Latin') and lv.bool_sys is None:\n            return str(value)\n        # In level 12, the f string uses ''', so we keep the status quo and use single quotes for the numeral system\n        num_sys_part = f\", num_sys='{lv.num_sys}'\" if lv.num_sys else ''\n        bool_sys_part = f', bool_sys={lv.bool_sys}' if lv.bool_sys else ''\n        return f\"{{localize({value}{num_sys_part}{bool_sys_part})}}\"\n\n    def process_expression_for_fstring(self, ev):\n        num_sys_value = ev.num_sys if ev.num_sys and 'get_num_sys' in ev.num_sys else f\"'{ev.num_sys}'\"\n        num_sys = f\", num_sys={num_sys_value}\" if ev.num_sys else ''\n        bool_sys = f', bool_sys={ev.bool_sys}' if ev.bool_sys else ''\n        return f\"{{localize({ev.data}{num_sys}{bool_sys})}}\"\n\n    def define(self, meta, args):\n        function_name = self.unpack(args[0])\n        has_args = isinstance(args[1], Tree) and args[1].data == \"arguments\"\n        args_str = \", \".join(str(x) for x in args[1].children) if has_args else \"\"\n\n        body_start = 2 if has_args else 1\n        lines = args[body_start:]\n        if self.has_pressed:\n            init_value = 'dict()'\n            if has_args:\n                init_value = f'''{{{', '.join(f'\"{str(x)}\": {str(x)}' for x in args[1].children)}}}'''\n            lines.insert(0, f'local_scope_{function_name}_ = {init_value}')\n        body = \"\\n\".join(self.indent(line) for line in lines)\n\n        return f\"def {function_name}({args_str}):\\n{body}\"\n\n    def call(self, meta, args):\n        function_name = self.unpack(args[0])\n        self.try_register_variable_access(function_name, meta.line)\n\n        function_tree = self.lookup.get_matching(function_name, meta.line)\n        tree_arguments = [c for c in function_tree[0].tree.children if c.data == 'arguments']\n\n        number_of_defined_arguments = 0 if tree_arguments == [] else len(tree_arguments[0].children)\n        number_of_used_arguments = 0 if len(args) == 1 else len(args[1].children)\n\n        if number_of_used_arguments != number_of_defined_arguments:\n            raise hedy.exceptions.WrongNumberofArguments(\n                name=function_name,\n                defined_number=number_of_defined_arguments,\n                used_number=number_of_used_arguments,\n                line_number=meta.line)\n\n        if len(args) > 1:\n            flat_args = [x.children[0] if isinstance(x, Tree) else x for x in args[1].children]\n            args_str = \", \".join([self.process_arg_for_func(a, meta.line) for a in flat_args])\n            for a in args[1].children:\n                self.try_register_variable_access(str(self.unpack(a)), meta.line)\n        else:\n            args_str = \"\"\n\n        return f\"{function_name}({args_str})\"\n\n    def returns(self, meta, args):\n        args_str = self.process_print_ask_args(args, meta)\n        exception = self.make_index_error_check_if_list(args)\n        return exception + textwrap.dedent(f\"\"\"\\\n            try:\n              return Value(int(f'''{args_str}'''), num_sys=get_num_sys(f'''{args_str}'''))\n            except ValueError:\n              try:\n                return Value(float(f'''{args_str}'''), num_sys=get_num_sys(f'''{args_str}'''))\n              except ValueError:\n                return Value(f'''{args_str}''')\"\"\")\n\n    def make_function(self, function_name, body):\n        return (\n            f'global {function_name}' + '\\n' +\n            f'def {function_name}():' + '\\n' +\n            ConvertToPython.indent(body)\n        )\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=13)\n@source_map_transformer(source_map)\nclass ConvertToPython_13(ConvertToPython_12):\n    def and_condition(self, meta, args):\n        return ' and '.join(args)\n\n    def or_condition(self, meta, args):\n        return ' or '.join(args)\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=14)\n@source_map_transformer(source_map)\nclass ConvertToPython_14(ConvertToPython_13):\n    def process_comparison(self, meta, args, operator):\n        arg0 = self.process_variable_for_comparisons(args[0], meta)\n        arg1 = self.process_variable_for_comparisons(args[1], meta)\n\n        return f\"{arg0}{operator}{arg1}\"\n\n    def process_variable_for_comparisons(self, arg, meta):\n        value = escape_var(self.unpack(arg))\n        if self.is_variable(arg, meta.line):\n            return f\"{self.scoped_var_access(value, meta.line, parentheses=True)}.data\"\n        elif self.is_list_access(arg):\n            return f\"{escape_var(arg)}.data\"\n        else:\n            return value\n\n    def equality_check_dequals(self, meta, args):\n        return self.equality_check(meta, args)\n\n    def smaller(self, meta, args):\n        return self.process_comparison(meta, args, \"<\")\n\n    def bigger(self, meta, args):\n        return self.process_comparison(meta, args, \">\")\n\n    def smaller_equal(self, meta, args):\n        return self.process_comparison(meta, args, \"<=\")\n\n    def bigger_equal(self, meta, args):\n        return self.process_comparison(meta, args, \">=\")\n\n    def not_equal(self, meta, args):\n        return self.process_comparison(meta, args, \"!=\")\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=15)\n@source_map_transformer(source_map)\nclass ConvertToPython_15(ConvertToPython_14):\n    def while_loop(self, meta, args):\n        args = [a for a in args if a != \"\"]  # filter out in|dedent tokens\n        body = self.indent(\"\\n\".join(args[1:]))\n        body = add_sleep_to_command(body, True, self.is_debug, location=\"after\")\n        exception = self.make_index_error_check_if_list([args[0]])\n        return exception + \"while \" + args[0] + \":\" + self.add_debug_breakpoint() + \"\\n\" + body\n\n    def if_pressed_without_else(self, meta, args):\n        code = args[0]\n        return code + self.make_extension_call()\n\n    def ask(self, meta, args):\n        var = self.unpack(args[0])\n        var_assign = self.scoped_var_assign(var, meta.line)\n        var_access = self.scoped_var_access(var, meta.line)\n        argument_string = self.process_print_ask_args(args[1:], meta)\n        exception = self.make_index_error_check_if_list(args)\n        boolean_keywords = self.get_boolean_system()\n\n        return exception + textwrap.dedent(f\"\"\"\\\n            {var_assign} = input(f'''{argument_string}'''){self.add_debug_breakpoint()}\n            __ns = get_num_sys({var_access})\n            __bs = None\n            try:\n              {var_assign} = int({var_access})\n            except ValueError:\n              try:\n                {var_assign} = float({var_access})\n              except ValueError:\n                __b, __bs = get_value_and_bool_sys({var_access}, {boolean_keywords})\n                if __b is not None:\n                  {var_assign} = __b\n            {var_assign} = Value({var_access}, num_sys=__ns, bool_sys=__bs)\"\"\")\n\n    def get_boolean_system(self):\n        \"\"\" Returns a list of localized boolean keywords and their respective boolean values in pairs.\n        For example: [{'true': True, 'false': False}, {'Вярно': True, 'Невярно': False}]\"\"\"\n        langs = [self.language] if self.language == 'en' else [self.language, 'en']\n        # unlike other keywords, booleans could start with uppercase or lowercase, so there are 4 keywords in total\n        bool_pairs = [('True', 'False'), ('true', 'false')]\n        return [{KEYWORDS[lang][t]: True, KEYWORDS[lang][f]: False} for t, f in bool_pairs for lang in langs]\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=16)\n@source_map_transformer(source_map)\nclass ConvertToPython_16(ConvertToPython_15):\n    def change_list_item(self, meta, args):\n        name = self.unpack(args[0])\n        index = self.unpack(args[1])\n        self.check_variable_usage_and_definition(args[0:3], meta.line)\n\n        index = f'{index}.data' if self.is_variable(args[1], meta.line) else index\n        left_side = f'{name}.data[int({index})-1]'\n        right_side = self.process_literal_to_value(args[2]) if isinstance(args[2], LiteralValue) else args[2]\n\n        exception = self.make_index_error_check_if_list([left_side])\n        return exception + left_side + ' = ' + right_side + self.add_debug_breakpoint()\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=17)\n@source_map_transformer(source_map)\nclass ConvertToPython_17(ConvertToPython_16):\n    def elifs(self, meta, args):\n        args = [a for a in args if a != \"\"]  # filter out in|dedent tokens\n        all_lines = [ConvertToPython.indent(x) for x in args[1:]]\n        return \"\\nelif \" + args[0] + \":\" + self.add_debug_breakpoint() + \"\\n\" + \"\\n\".join(all_lines)\n\n    def if_pressed_elifs(self, meta, args):\n        args = [a for a in args if a != \"\"]  # filter out in|dedent tokens\n        key = self.process_arg_for_data_access(args[0], meta.line)\n\n        elif_code = '\\n'.join(args[1:])\n        elif_function_name = self.make_function_name(args[0], meta.line)\n\n        return (\n            self.add_if_key_mapping(key, elif_function_name) + '\\n' +\n            self.make_function(elif_function_name, elif_code) + '\\n'\n        )\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=18)\n@source_map_transformer(source_map)\nclass ConvertToPython_18(ConvertToPython_17):\n    def input(self, meta, args):\n        return self.ask(meta, args)\n\n    def input_is(self, meta, args):\n        return self.input(meta, args)\n\n    def input_equals(self, meta, args):\n        return self.input(meta, args)\n\n    def input_empty_brackets(self, meta, args):\n        return self.input(meta, args)\n\n    def print_empty_brackets(self, meta, args):\n        return self.print(meta, args)\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=1, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_1(ConvertToPython_1):\n    def print(self, meta, args):\n        # escape needed characters\n        argument = process_characters_needing_escape(self.unpack(args[0]))\n        return f\"display.scroll('{argument}')\"\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=2, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_2(MicrobitConvertToPython_1, ConvertToPython_2):\n\n    def print(self, meta, args):\n        argument_string = self.process_print_ask_args(args, meta)\n        return f\"display.scroll({argument_string})\"\n\n    def process_print_ask_args(self, args, meta, var_to_escape=''):\n        return ' '.join([self.unpack(a) if self.is_variable(a, meta.line) else f\"'{self.unpack(a)}'\" for a in args])\n\n    def assign(self, meta, args):\n        variable_name = args[0]\n        value = self.unpack(args[1])\n\n        exception = self.make_index_error_check_if_list([value])\n        if self.is_variable(value, meta.line) or self.is_list_access(value):\n            # if the assigned value is a variable, this is a reassign\n            value = escape_var(value)\n        elif not self.is_int(value) and not self.is_float(value):\n            # if it is not a variable and not a number, add quotes\n            value = f\"'{process_characters_needing_escape(value)}'\"\n\n        return exception + variable_name + \" = \" + value + self.add_debug_breakpoint()\n\n    def sleep(self, meta, args):\n        if not args:\n            return f\"sleep(1000){self.add_debug_breakpoint()}\"  # Default 1-second sleep in milliseconds\n\n        variable = self.unpack(args[0])\n        if self.is_int(variable):\n            # Direct conversion of seconds to milliseconds\n            milliseconds = int(variable) * 1000\n        else:\n            milliseconds = f\"{variable} * 1000\"\n            self.try_register_variable_access(variable, meta.line)\n        return f\"sleep({milliseconds}){self.add_debug_breakpoint()}\"\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=3, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_3(MicrobitConvertToPython_2, ConvertToPython_3):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=4, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_4(MicrobitConvertToPython_3, ConvertToPython_4):\n\n    def process_print_ask_args(self, args, meta, var_to_escape=''):\n        return ''.join([self.unpack(a) if self.is_variable(a, meta.line) else f'{self.unpack(a)}' for a in args])\n\n    def print(self, meta, args):\n        argument_string = self.process_print_ask_args(args, meta)\n        return f\"display.scroll({argument_string})\"\n\n    def clear(self, meta, args):\n        return f\"display.clear()\"\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=5, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_5(MicrobitConvertToPython_4, ConvertToPython_5):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=6, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_6(MicrobitConvertToPython_5, ConvertToPython_6):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=7, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_7(MicrobitConvertToPython_6, ConvertToPython_7):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=8, microbit=True)\n@hedy_transpiler(level=9, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_8_9(MicrobitConvertToPython_7, ConvertToPython_8_9):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=10, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_10(MicrobitConvertToPython_8_9, ConvertToPython_10):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=11, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_11(MicrobitConvertToPython_10, ConvertToPython_11):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=12, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_12(MicrobitConvertToPython_11, ConvertToPython_12):\n    pass\n    # def print(self, meta, args):\n    #     argument_string = self.process_print_ask_args(args, meta)\n    #     return f\"display.scroll('{argument_string}')\"\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=13, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_13(MicrobitConvertToPython_12, ConvertToPython_13):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=14, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_14(MicrobitConvertToPython_13, ConvertToPython_14):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=15, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_15(MicrobitConvertToPython_14, ConvertToPython_15):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=16, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_16(MicrobitConvertToPython_15, ConvertToPython_16):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=17, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_17(MicrobitConvertToPython_16, ConvertToPython_17):\n    pass\n\n\n@v_args(meta=True)\n@hedy_transpiler(level=18, microbit=True)\n@source_map_transformer(source_map)\nclass MicrobitConvertToPython_18(MicrobitConvertToPython_17, ConvertToPython_18):\n    pass\n\n\ndef _get_parser_cache_directory():\n    # TODO we should maybe store this to .test-cache so we can\n    # re-use them in github actions caches for faster CI.\n    # We can do this after #4574 is merged.\n    return tempfile.gettempdir()\n\n\ndef _save_parser_to_file(lark, pickle_file):\n    # Store the parser to a file, a bit hacky because it is not\n    # pickle-able out of the box\n    # See https://github.com/lark-parser/lark/issues/1348\n\n    # Note that if Lark ever implements the cache for Earley parser\n    # or if we switch to a LALR parser we don't need this hack anymore\n\n    full_path = os.path.join(_get_parser_cache_directory(), pickle_file)\n\n    # These attributes can not be pickled as they are a module\n    lark.parser.parser.lexer_conf.re_module = None\n    lark.parser.lexer_conf.re_module = None\n\n    try:\n        with atomic_write_file(full_path) as fp:\n            pickle.dump(lark, fp)\n    except OSError:\n        # Ignore errors if another process already moved the file\n        # or if the destination already exist.\n        # These scenarios can happen under concurrent execution.\n        pass\n\n    # Restore the unpickle-able bits.\n    # Keep this in sync with the restore method!\n    lark.parser.parser.lexer_conf.re_module = regex\n    lark.parser.lexer_conf.re_module = regex\n\n\ndef _restore_parser_from_file_if_present(pickle_file):\n    full_path = os.path.join(_get_parser_cache_directory(), pickle_file)\n    if os.path.isfile(full_path):\n        try:\n            with open(full_path, \"rb\") as fp:\n                lark = pickle.load(fp)\n            # Restore the unpickle-able bits.\n            # Keep this in sync with the save method!\n            lark.parser.parser.lexer_conf.re_module = regex\n            lark.parser.lexer_conf.re_module = regex\n            return lark\n        except Exception:\n            # If anything goes wrong try to remove the file\n            # and we will try again in the next cycle\n            try:\n                os.unlink(full_path)\n            except Exception:\n                pass\n    return None\n\n\n@lru_cache(maxsize=0 if utils.is_production() else 100)\ndef get_parser(level, lang=\"en\", keep_all_tokens=False, skip_faulty=False):\n    \"\"\"Return the Lark parser for a given level.\n    Parser generation takes about 0.5 seconds depending on the level so\n    we want to cache it, or we have latency of 500ms on the calculations\n    and a high server load, and CI runs of 5+ hours.\n\n    We used to cache this to RAM but because of all the permutations we\n    had 1000s of parsers and got into out-of-memory issue in the\n    production environment.\n\n    Now we cache a limited number of the parsers to RAM, but introduce\n    a second tier of cache to disk.\n\n    This is not implemented by Lark natively for the Earley parser.\n    See https://github.com/lark-parser/lark/issues/1348.\n    \"\"\"\n    grammar = hedy_grammar.create_grammar(level, lang, skip_faulty)\n    parser_opts = {\n        \"regex\": True,\n        \"propagate_positions\": True,\n        \"keep_all_tokens\": keep_all_tokens,\n    }\n    unique_parser_hash = hashlib.sha1(\"_\".join((\n        grammar,\n        str(sys.version_info[:2]),\n        str(parser_opts),\n    )).encode()).hexdigest()\n\n    cached_parser_file = f\"cached-parser-{level}-{lang}-{unique_parser_hash}.pkl\"\n\n    use_cache = True\n    parser = None\n    if use_cache:\n        parser = _restore_parser_from_file_if_present(cached_parser_file)\n    if parser is None:\n        parser = Lark(grammar, **parser_opts)  # ambiguity='explicit'\n        if use_cache:\n            _save_parser_to_file(parser, cached_parser_file)\n\n    return parser\n\n\nParseResult = namedtuple('ParseResult', ['code', 'source_map', 'has_turtle',\n                                         'has_pressed', 'has_clear', 'has_music', 'has_sleep', 'commands',\n                                         'roles_of_variables'])\n\n\ndef transpile_inner_with_skipping_faulty(input_string, level, lang=\"en\", unused_allowed=True):\n    def skipping_faulty(meta, args):\n        return [True]\n\n    defined_errors = [method for method in dir(IsValid) if method.startswith('error')]\n    defined_errors_original = dict()\n\n    def set_error_to_allowed():\n        # override IsValid methods to always be valid & store original\n        for error in defined_errors:\n            defined_errors_original[error] = getattr(IsValid, error)\n            setattr(IsValid, error, skipping_faulty)\n\n    def set_errors_to_original():\n        # revert IsValid methods to original\n        for error in defined_errors:\n            setattr(IsValid, error, defined_errors_original[error])\n\n    try:\n        set_error_to_allowed()\n        transpile_result = transpile_inner(\n            input_string, level, lang, populate_source_map=True, unused_allowed=unused_allowed\n        )\n    finally:\n        # make sure to always revert IsValid methods to original\n        set_errors_to_original()\n\n    # If transpiled successfully while allowing errors, transpile mapped code again to get original error\n    # If none is found, raise error so that original error will be returned\n    at_least_one_error_found = False\n\n    for hedy_source_code, python_source_code in source_map.map.copy().items():\n        if hedy_source_code.error is not None or python_source_code.code == 'pass':\n            try:\n                transpile_inner(hedy_source_code.code, source_map.level, source_map.language)\n            except Exception as e:\n                hedy_source_code.error = e\n\n            if hedy_source_code.error is not None:\n                at_least_one_error_found = True\n\n    if not at_least_one_error_found:\n        raise Exception('Could not find original error for skipped code')\n\n    return transpile_result\n\n\ndef transpile(input_string, level, lang=\"en\", skip_faulty=True, is_debug=False, unused_allowed=False, microbit=False):\n    \"\"\"\n    Function that transpiles the Hedy code to Python\n\n    The first time we try to transpile the code without skipping faulty code\n    If an exception is caught (the Hedy code contains faults) an exception is raised\n\n    The second time, after the non-skipping approach raised an exception,\n    we try transpile the code with skipping faulty code, if skip_faulty is True.\n    After that either the partial program is returned or the original error\n    \"\"\"\n\n    try:\n        source_map.set_skip_faulty(False)\n        transpile_result = transpile_inner(input_string, level, lang, populate_source_map=True,\n                                           is_debug=is_debug, unused_allowed=unused_allowed, microbit=microbit)\n\n    except Exception as original_error:\n        hedy_amount_lines = len(input_string.strip().split('\\n'))\n\n        if getenv('ENABLE_SKIP_FAULTY', False) and skip_faulty and hedy_amount_lines > 1:\n            if isinstance(original_error, source_map.exceptions_not_to_skip):\n                raise original_error\n            try:\n                source_map.set_skip_faulty(True)\n                transpile_result = transpile_inner_with_skipping_faulty(input_string, level, lang)\n            except Exception:\n                raise original_error  # we could not skip faulty code, raise original exception\n        else:\n            raise original_error\n\n    return transpile_result\n\n\ndef translate_characters(s):\n    # this method is used to make it more clear to kids what is meant in error messages\n    # for example ' ' is hard to read, space is easier\n    commas = [',', \"،\", \"，\", \"、\"]\n    if s == ' ':\n        return 'space'\n    elif s in commas:\n        return 'comma'\n    elif s == '?':\n        return 'question mark'\n    elif s == '\\n':\n        return 'newline'\n    elif s == '.':\n        return 'period'\n    elif s == '!':\n        return 'exclamation mark'\n    elif s == '*':\n        return 'star'\n    elif s == \"'\":\n        return 'single quotes'\n    elif s == '\"':\n        return 'double quotes'\n    elif s == '/':\n        return 'slash'\n    elif s == '-':\n        return 'dash'\n    else:\n        return s\n\n\ndef beautify_parse_error(character_found):\n    character_found = translate_characters(character_found)\n    return character_found\n\n\ndef find_indent_length(line):\n    number_of_spaces = 0\n    for x in line:\n        if x == ' ':\n            number_of_spaces += 1\n        else:\n            break\n    return number_of_spaces\n\n\ndef line_requires_indentation(line, lang):\n    # this is done a bit half-assed, clearly *parsing* the one line would be superior\n    # because now a line like `repeat is 5` would also require indentation!\n\n    line = line.lstrip()  # remove spaces since also `    for    ` requires indentation\n    if lang not in indent_keywords.keys():  # some language like Greek or Czech do not have local keywords\n        lang = 'en'\n\n    local_indent_keywords = indent_keywords[lang]\n\n    for k in local_indent_keywords:\n        # does the line start with this keyword?\n        # We can't just split since some langs like French have keywords containing a space\n        # We also have to check space/lineending/: after or forward 100 wil also require indentation\n        end_of_line_or_word = (len(line) > len(k) and (\n            line[len(k)] == \" \" or line[len(k)] == \":\")) or len(line) == len(k)\n        if end_of_line_or_word and line[:len(k)] == k:\n            return True\n    return False\n\n\ndef preprocess_blocks(code, level, lang):\n    processed_code = []\n    lines = code.split(\"\\n\")\n    current_number_of_indents = 0\n    previous_number_of_indents = 0\n    indent_size = 4  # set at 4 for now\n    indent_size_adapted = False  # FH We can remove this now since we changed in indenter a bit in Nov 2022\n    line_number = 0\n    next_line_needs_indentation = False\n    for line in lines:\n        if ' _ ' in line or line == '_':\n            raise hedy.exceptions.CodePlaceholdersPresentException(line_number=line_number + 1)\n\n        leading_spaces = find_indent_length(line)\n\n        line_number += 1\n\n        # ignore whitespace-only lines\n        if leading_spaces == len(line):\n            processed_code.append('')\n            continue\n\n        # ignore lines that contain only a comment\n        comment_reg_ex = r' *\\#[^\\n]*'\n        if regex.fullmatch(comment_reg_ex, line):\n            processed_code.append(line)\n            continue\n\n        # first encounter sets indent size for this program\n        if not indent_size_adapted and leading_spaces > 0:\n            indent_size = leading_spaces\n            indent_size_adapted = True\n\n        # there is inconsistent indentation, not sure if that is too much or too little!\n        if (leading_spaces % indent_size) != 0:\n            fixed_code = program_repair.fix_indent(code, line_number, leading_spaces, indent_size)\n            if leading_spaces < current_number_of_indents * indent_size:\n                raise_too_few_indents_error(line_number, leading_spaces, indent_size, fixed_code, level)\n            else:\n                raise_too_many_indents_error(line_number, leading_spaces, indent_size, fixed_code, level)\n\n        # happy path, indentation is consistent, i.e. multiple of 2 or 4:\n        current_number_of_indents = leading_spaces // indent_size\n        if current_number_of_indents > 1 and level == hedy.LEVEL_STARTING_INDENTATION:\n            raise hedy.exceptions.TooManyIndentsStartLevelException(line_number=line_number,\n                                                                    leading_spaces=leading_spaces)\n\n        if current_number_of_indents > previous_number_of_indents and not next_line_needs_indentation:\n            # we are indenting, but this line is not following* one that even needs indenting, raise\n            # * note that we have not yet updated the value of 'next line needs indenting' so if refers to this line!\n            fixed_code = program_repair.fix_indent(code, line_number, leading_spaces, indent_size)\n            raise_too_many_indents_error(line_number, leading_spaces, indent_size, fixed_code, level)\n\n        if next_line_needs_indentation and current_number_of_indents <= previous_number_of_indents:\n            fixed_code = program_repair.fix_indent(code, line_number, leading_spaces, indent_size)\n            raise_too_few_indents_error(line_number, leading_spaces, indent_size, fixed_code, level)\n\n        if current_number_of_indents - previous_number_of_indents > 1:\n            fixed_code = program_repair.fix_indent(code, line_number, leading_spaces, indent_size)\n            raise_too_many_indents_error(line_number, leading_spaces, indent_size, fixed_code, level)\n\n        if current_number_of_indents < previous_number_of_indents:\n            # we are dedenting ('jumping back) so we need to and an end-block\n            # (multiple if multiple dedents are happening)\n\n            difference_in_indents = (previous_number_of_indents - current_number_of_indents)\n            for i in range(difference_in_indents):\n                processed_code[-1] += '#ENDBLOCK'\n\n        if line_requires_indentation(line, lang):\n            next_line_needs_indentation = True\n        else:\n            next_line_needs_indentation = False\n\n        # save to compare for next line\n        previous_number_of_indents = current_number_of_indents\n\n        # if indent remains the same, do nothing, just add line\n        processed_code.append(line)\n\n    # if the last line is indented, the end of the program is also the end of all indents\n    # so close all blocks\n    for i in range(current_number_of_indents):\n        processed_code[-1] += '#ENDBLOCK'\n    return \"\\n\".join(processed_code)\n\n\ndef raise_too_many_indents_error(line_number, leading_spaces, indent_size, fixed_code, level):\n    if level == hedy.LEVEL_STARTING_INDENTATION:\n        raise hedy.exceptions.TooManyIndentsStartLevelException(line_number=line_number, leading_spaces=leading_spaces,\n                                                                fixed_code=fixed_code)\n    else:\n        raise hedy.exceptions.IndentationException(line_number=line_number, leading_spaces=leading_spaces,\n                                                   indent_size=indent_size, fixed_code=fixed_code)\n\n\ndef raise_too_few_indents_error(line_number, leading_spaces, indent_size, fixed_code, level):\n    if level == hedy.LEVEL_STARTING_INDENTATION:\n        raise hedy.exceptions.TooFewIndentsStartLevelException(line_number=line_number, leading_spaces=leading_spaces,\n                                                               fixed_code=fixed_code)\n    else:\n        raise hedy.exceptions.NoIndentationException(line_number=line_number, leading_spaces=leading_spaces,\n                                                     indent_size=indent_size, fixed_code=fixed_code)\n\n\ndef preprocess_ifs(code, lang='en'):\n    processed_code = []\n    lines = code.split(\"\\n\")\n\n    def starts_with(command, line):\n        if lang in ALL_KEYWORD_LANGUAGES:\n            command_plus_translated_command = [command, KEYWORDS[lang].get(command)]\n            for c in command_plus_translated_command:\n                #  starts with the keyword and next character is a space\n                if line[0:len(c)] == c and (len(c) == len(line) or line[len(c)] == ' '):\n                    return True\n            return False\n        else:\n            return line[0:len(command)] == command\n\n    def starts_with_after_repeat(command, line):\n        elements_in_line = line.split()\n        keywords_in_lang = KEYWORDS.get(lang, KEYWORDS['en'])\n        repeat_plus_translated = ['repeat', keywords_in_lang.get('repeat')]\n        times_plus_translated = ['times', keywords_in_lang.get('times')]\n\n        if len(elements_in_line) > 2 and elements_in_line[0] in repeat_plus_translated and elements_in_line[\n                2] in times_plus_translated:\n            line = ' '.join(elements_in_line[3:])\n\n        if lang in ALL_KEYWORD_LANGUAGES:\n            command_plus_translated_command = [command, KEYWORDS[lang].get(command)]\n            for c in command_plus_translated_command:\n                #  starts with the keyword and next character is a space\n                if line[0:len(c)] == c and (len(c) == len(line) or line[len(c)] == ' '):\n                    return True\n            return False\n        else:\n            return line[0:len(command)] == command\n\n    def contains(command, line):\n        if lang in ALL_KEYWORD_LANGUAGES:\n            if not command == '=':\n                command_plus_translated_command = [command, KEYWORDS[lang].get(command)]\n            else:\n                command_plus_translated_command = [command]\n            for c in command_plus_translated_command:\n                if c in line:\n                    return True\n            return False\n        else:\n            return command in line\n\n    def contains_two(command, line):\n        if lang in ALL_KEYWORD_LANGUAGES:\n            command_plus_translated_command = [command, KEYWORDS[lang].get(command)]\n            for c in command_plus_translated_command:\n                if line.count(\n                        ' ' + c + ' ') >= 2:  # surround in spaces since we dont want to mathc something like 'dishwasher is sophie'\n                    return True\n            return False\n\n    def contains_any_of(commands, line):\n        # translation is not needed here, happens in contains\n        if lang in ALL_KEYWORD_LANGUAGES:\n            for c in commands:\n                if contains(c, line):\n                    return True\n            return False\n        else:\n            for c in commands:\n                if contains(c, line):\n                    return True\n            return False\n\n    def next_non_empty_line(lines, start_line_number):\n        if start_line_number > len(lines):\n            return ''  # end of code, return empty so that starts_with doesnt find anything\n        else:\n            for i in range(start_line_number + 1, len(lines)):\n                if lines[i] == '':\n                    continue\n                else:\n                    return lines[i]\n\n        return ''  # nothing found? return empty so that starts_with doesnt find anything\n\n    for i in range(len(lines) - 1):\n        line = lines[i]\n\n        # if this line starts with if but does not contain an else, and the next non-empty line too is not an else.\n        if (starts_with('if', line) or starts_with_after_repeat('if', line)) and (\n                not starts_with('else', next_non_empty_line(lines, i))) and (not contains('else', line)):\n            # is this line just a condition and no other keyword (because that is no problem)\n            commands = [\"print\", \"ask\", \"forward\", \"turn\", \"play\"]\n            excluded_commands = [\"pressed\"]\n\n            if (\n                (contains_any_of(commands, line) or contains_two('is', line)\n                 or (contains('is', line) and contains('=', line)))\n                and not contains_any_of(excluded_commands, line)\n            ):\n                # a second command, but also no else in this line -> check next line!\n\n                # no else in next line?\n                # add a nop (like 'Pass' but we just insert a meaningless assign)\n                line = line + \" else x__x__x__x is 5\"\n\n        processed_code.append(line)\n    processed_code.append(lines[-1])  # always add the last line (if it has if and no else that is no problem)\n    return \"\\n\".join(processed_code)\n\n\ndef location_of_first_blank(code_snippet):\n    # returns 0 if the code does not contain _\n    # otherwise returns the first location (line) of the blank\n    lines = code_snippet.split('\\n')\n    for i in range(len(lines)):\n        code = lines[i]\n        if len(code) > 0:\n            if (\" _\" in code) or (\"_ \" in code) or (code[-1] == \"_\"):\n                return i + 1\n    return 0\n\n\ndef check_program_size_is_valid(input_string):\n    number_of_lines = input_string.count('\\n')\n    # parser is not made for huge programs!\n    if number_of_lines > MAX_LINES:\n        raise exceptions.InputTooBigException(lines_of_code=number_of_lines, max_lines=MAX_LINES)\n\n\ndef process_input_string(input_string, level, lang, preprocess_ifs_enabled=True):\n    result = input_string.replace('\\r\\n', '\\n')\n\n    location = location_of_first_blank(result)\n    if location > 0:\n        raise exceptions.CodePlaceholdersPresentException(line_number=location)\n\n    if level >= 4:\n        result = result.replace(\"\\\\\", \"\\\\\\\\\")\n\n    # In levels 5 to 7 we do not allow if without else, we add an empty print to make it possible in the parser\n    if level >= 5 and level < 8 and preprocess_ifs_enabled:\n        result = preprocess_ifs(result, lang)\n\n    # In level 8 we add indent-dedent blocks to the code before parsing\n    if level >= hedy.LEVEL_STARTING_INDENTATION:\n        result = preprocess_blocks(result, level, lang)\n\n    return result\n\n\ndef parse_input(input_string, level, lang):\n    parser = get_parser(level, lang, skip_faulty=source_map.skip_faulty)\n    try:\n        parse_result = parser.parse(input_string + '\\n')\n        return parse_result.children[0]  # getting rid of the root could also be done in the transformer would be nicer\n    except lark.UnexpectedEOF:\n        lines = input_string.split('\\n')\n        last_line = len(lines)\n        raise exceptions.UnquotedEqualityCheckException(line_number=last_line)\n    except UnexpectedCharacters as e:\n        try:\n            location = e.line, e.column\n            # not yet in use, could be used in the future (when our parser rules are\n            # better organize, now it says ANON*__12 etc way too often!)\n            # characters_expected = str(e.allowed)\n            character_found = beautify_parse_error(e.char)\n            # print(e.args[0])\n            # print(location, character_found, characters_expected)\n            fixed_code = program_repair.remove_unexpected_char(input_string, location[0], location[1])\n            raise exceptions.ParseException(\n                level=level,\n                location=location,\n                found=character_found,\n                fixed_code=fixed_code) from e\n        except UnexpectedEOF:\n            # this one can't be beautified (for now), so give up :)\n            raise e\n\n\ndef is_program_valid(program_root, input_string, level, lang):\n    # IsValid raises the appropriate exception when an error production (starting with error_)\n    # is found in the parse tree\n    IsValid(level, lang, input_string).transform(program_root)\n\n\ndef repair_leading_space(input_string, lang, level, line):\n    fixed_code = program_repair.remove_leading_spaces(input_string)\n    result = None\n    if fixed_code != input_string:  # only if we have made a successful fix\n        try:\n            fixed_result = transpile_inner(fixed_code, level, lang)\n            result = fixed_result\n            raise exceptions.InvalidSpaceException(\n                level=level, line_number=line, fixed_code=fixed_code, fixed_result=result)\n        except exceptions.HedyException as E:\n            if type(E) is not exceptions.InvalidSpaceException:\n                transpile_inner(fixed_code, level)\n                # The fixed code contains another error. Only report the original error for now.\n    return fixed_code, result\n\n\ndef is_program_complete(abstract_syntax_tree, level):\n    is_complete = IsComplete(level).transform(abstract_syntax_tree)\n    if not is_complete[0]:\n        incomplete_command_and_line = is_complete[1][0]\n        incomplete_command = incomplete_command_and_line[0]\n        line = incomplete_command_and_line[1]\n        raise exceptions.IncompleteCommandException(incomplete_command=incomplete_command, level=level,\n                                                    line_number=line)\n\n\ndef create_lookup_table(abstract_syntax_tree, level, lang, input_string, has_pressed):\n    visitor = LookupEntryCollector(level, has_pressed)\n    visitor.visit_topdown(abstract_syntax_tree)\n    lookup_table = LookupTable(visitor.local_scopes, visitor.lookup_entries)\n\n    TypeValidator(lookup_table, level, lang, input_string).transform(abstract_syntax_tree)\n\n    return lookup_table\n\n\ndef create_AST(input_string, level, lang=\"en\"):\n    program_root = parse_input(input_string, level, lang)\n\n    # checks whether any error production nodes are present in the parse tree\n    is_program_valid(program_root, input_string, level, lang)\n    abstract_syntax_tree = ExtractAST().transform(program_root)\n    is_program_complete(abstract_syntax_tree, level)\n\n    if not valid_echo(abstract_syntax_tree):\n        raise exceptions.LonelyEchoException()\n\n    commands = AllCommands(level).transform(program_root)\n    # FH, dec 2023. I don't love how AllCommands works on program root and not on AST,\n    # but his will do for now. One day we should really start to clean up our AST!\n    has_pressed = \"if_pressed\" in commands or \"if_pressed_else\" in commands\n    lookup_table = create_lookup_table(abstract_syntax_tree, level, lang, input_string, has_pressed)\n\n    return abstract_syntax_tree, lookup_table, commands\n\n\ndef determine_roles(lookup, input_string, level, lang):\n    all_vars = all_variables(input_string, level, lang)\n    roles_dictionary = {}\n    for var in all_vars:\n        assignments = [x for x in lookup.get_all() if x.name == var]\n\n        if assignments[0].tree.data == 'for_list':\n            roles_dictionary[var] = gettext('walker_variable_role')\n        elif assignments[0].tree.data == 'for_loop':\n            roles_dictionary[var] = gettext('stepper_variable_role')\n        elif assignments[0].type_ == 'list':\n            roles_dictionary[var] = gettext('list_variable_role')\n        elif len(assignments) == 1:\n            if assignments[0].type_ == 'input':\n                roles_dictionary[var] = gettext('input_variable_role')\n            else:\n                roles_dictionary[var] = gettext('constant_variable_role')\n        else:\n            roles_dictionary[var] = gettext('unknown_variable_role')\n\n    return roles_dictionary\n\n\ndef transpile_inner(input_string, level, lang=\"en\", populate_source_map=False, is_debug=False, unused_allowed=False,\n                    microbit=False):\n    check_program_size_is_valid(input_string)\n    input_string = process_input_string(input_string, level, lang)\n\n    level = int(level)\n    if level > HEDY_MAX_LEVEL:\n        raise Exception(f'Levels over {HEDY_MAX_LEVEL} not implemented yet')\n\n    if populate_source_map:\n        source_map.clear()\n        source_map.set_level(level)\n        source_map.set_language(lang)\n        source_map.set_hedy_input(input_string)\n\n    try:\n        abstract_syntax_tree, lookup_table, commands = create_AST(input_string, level, lang)\n\n        has_clear = \"clear\" in commands\n        has_turtle = \"forward\" in commands or \"turn\" in commands or \"color\" in commands\n        has_pressed = \"if_pressed\" in commands or \"if_pressed_else\" in commands\n        has_music = \"play\" in commands\n        has_sleep = \"sleep\" in commands\n\n        # grab the right transpiler from the lookup\n        convertToPython = MICROBIT_TRANSPILER_LOOKUP[level] if microbit else TRANSPILER_LOOKUP[level]\n        python = convertToPython(lookup_table, lang, is_debug, has_pressed).transform(abstract_syntax_tree)\n\n        roles_of_variables = determine_roles(lookup_table, input_string, level, lang)\n\n        parse_result = ParseResult(python, source_map, has_turtle, has_pressed,\n                                   has_clear, has_music, has_sleep, commands, roles_of_variables)\n\n        if populate_source_map:\n            source_map.set_python_output(python)\n\n        if not unused_allowed:\n            for x in lookup_table.get_all():\n                if isinstance(x.name, str) and x.access_line is None and x.name != 'x__x__x__x':\n                    x.name = re.sub(r'^_', '', x.name)\n                    raise hedy.exceptions.UnusedVariableException(\n                        level, x.definition_line, x.name, fixed_code=python, fixed_result=parse_result)\n\n        return parse_result\n    except VisitError as E:\n        if isinstance(E, VisitError):\n            # Exceptions raised inside visitors are wrapped inside VisitError. Unwrap it if it is a\n            # HedyException to show the intended error message.\n            if isinstance(E.orig_exc, exceptions.HedyException):\n                raise E.orig_exc\n            else:\n                raise E\n\n\ndef execute(input_string, level):\n    python = transpile(input_string, level)\n    if python.has_turtle:\n        raise exceptions.HedyException(\"hedy.execute doesn't support turtle\")\n    exec(python.code)\n\n\ndef transpile_and_return_python(input_string, level):\n    python = transpile(input_string, level, microbit=True)\n    return str(python.code)\n"
        },
        {
          "name": "hedy_content.py",
          "type": "blob",
          "size": 19.76953125,
          "content": "import logging\nimport os\nfrom os import path\n\nimport static_babel_content\n\nfrom utils import customize_babel_locale\nfrom website.yaml_file import YamlFile\nfrom safe_format import safe_format\n\nlogger = logging.getLogger(__name__)\n\nCOUNTRIES = static_babel_content.COUNTRIES\n\n# Define dictionary for available languages. Fill dynamically later.\nALL_LANGUAGES = {}\nALL_KEYWORD_LANGUAGES = {}\n\n# Babel has a different naming convention than Weblate and doesn't support some languages -> fix this manually\n# Map our langauge code to the language code recognized by Babel, or 'en' if Babel doesn't support this locale\n# at all.\nCUSTOM_BABEL_LANGUAGES = {'pa_PK': 'pa_Arab_PK',\n                          'kmr': 'ku_TR',\n                          'tl': 'en',\n                          'iba': 'en',\n                          'peo': 'fa',\n                          }\n\n# For the non-existing language manually overwrite the display language to make sure it is displayed correctly\nCUSTOM_LANGUAGE_TRANSLATIONS = {'kmr': 'Kurdî (Tirkiye)',\n                                'tl': 'ᜆᜄᜎᜓᜄ᜔',\n                                'peo': 'Old Persian',\n                                'iba': 'Iban',\n                                'kab': 'Taqbaylit',\n                                }\n\ncustomize_babel_locale(CUSTOM_BABEL_LANGUAGES)\n\n# This changes the color of the adventure tab to pink\nKEYWORDS_ADVENTURES = {'print_command', 'ask_command', 'is_command', 'sleep_command', 'random_command',\n                       'add_remove_command', 'quotation_marks', 'if_command', 'in_command', 'maths', 'repeat_command',\n                       'repeat_command_2', 'for_command', 'and_or_command', 'while_command', 'elif_command',\n                       'clear_command', 'pressit', 'debugging', 'functions'}\n\nADVENTURE_ORDER_PER_LEVEL = {\n    1: [\n        'default',\n        'print_command',\n        'ask_command',\n        'parrot',\n        'rock',\n        'haunted',\n        'story',\n        'music',\n        'turtle',\n        'turtle_draw_it',\n        'restaurant',\n        'fortune',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    2: [\n        'default',\n        'is_command',\n        'rock',\n        'ask_command',\n        'rock_2',\n        'haunted',\n        'sleep_command',\n        'parrot',\n        'story',\n        'music',\n        'restaurant',\n        'turtle',\n        'turtle_draw_it',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    3: [\n        'default',\n        'random_command',\n        'dice',\n        'rock',\n        'music',\n        'fortune',\n        'restaurant',\n        'add_remove_command',\n        'parrot',\n        'dishes',\n        'story',\n        'haunted',\n        'turtle',\n        'turtle_draw_it',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    4: [\n        'default',\n        'quotation_marks',\n        'rock',\n        'dice',\n        'dishes',\n        'parrot',\n        'turtle',\n        'turtle_draw_it',\n        'clear_command',\n        'music',\n        'story',\n        'haunted',\n        'fortune',\n        'restaurant',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    5: [\n        'default',\n        'if_command',\n        'music',\n        'language',\n        'dice',\n        'dishes',\n        'story',\n        'rock',\n        'parrot',\n        'haunted',\n        'in_command',\n        'restaurant',\n        'fortune',\n        'pressit',\n        'turtle',\n        'turtle_draw_it',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    6: [\n        'default',\n        'maths',\n        'music',\n        'is_command',\n        'songs',\n        'dice',\n        'dishes',\n        'turtle',\n        'turtle_draw_it',\n        'calculator',\n        'fortune',\n        'restaurant',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    7: [\n        'default',\n        'repeat_command',\n        'story',\n        'songs',\n        'music',\n        'dishes',\n        'dice',\n        'repeat_command_2',\n        'fortune',\n        'restaurant',\n        'pressit',\n        'turtle_draw_it',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    8: [\n        'default',\n        'repeat_command',\n        'fortune',\n        'repeat_command_2',\n        'songs',\n        'music',\n        'if_command',\n        'story',\n        'haunted',\n        'restaurant',\n        'turtle',\n        'turtle_draw_it',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    9: [\n        'default',\n        'repeat_command',\n        'if_command',\n        'rock',\n        'story',\n        'calculator',\n        'music',\n        'restaurant',\n        'haunted',\n        'pressit',\n        'turtle',\n        'turtle_draw_it',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    10: [\n        'default',\n        'for_command',\n        'dishes',\n        'dice',\n        'fortune',\n        'turtle',\n        'turtle_draw_it',\n        'harry_potter',\n        'songs',\n        'story',\n        'rock',\n        'calculator',\n        'restaurant',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    11: [\n        'default',\n        'for_command',\n        'years',\n        'calculator',\n        'songs',\n        'restaurant',\n        'haunted',\n        'turtle_draw_it',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    12: [\n        'default',\n        'maths',\n        'quotation_marks',\n        'functions',\n        'fortune',\n        'music',\n        'songs',\n        'songs_2',\n        'restaurant',\n        'calculator',\n        'turtle',\n        'piggybank',\n        'secret',\n        'turtle_draw_it',\n        'debugging',\n        'parsons',\n        'quiz',\n    ],\n    13: [\n        'default',\n        'and_or_command',\n        'secret',\n        'functions',\n        'music',\n        'songs',\n        'story',\n        'rock',\n        'turtle_draw_it',\n        'restaurant',\n        'hotel',\n        'calculator',\n        'debugging',\n        'quiz',\n    ],\n    14: [\n        'default',\n        'is_command',\n        'guess_my_number',\n        'music',\n        'haunted',\n        'functions',\n        'turtle_draw_it',\n        'hotel',\n        'calculator',\n        'calculator_2',\n        'piggybank',\n        'quizmaster',\n        'debugging',\n        'quiz',\n    ],\n    15: [\n        'default',\n        'while_command',\n        'music',\n        'turtle_draw_it',\n        'restaurant',\n        'story',\n        'dice',\n        'rock',\n        'calculator',\n        'debugging',\n        'quiz',\n    ],\n    16: [\n        'default',\n        'random_command',\n        'haunted',\n        'songs',\n        'songs_2',\n        'music',\n        'language',\n        'tic',\n        'tic_2',\n        'tic_3',\n        'simon',\n        'simon_2',\n        'simon_3',\n        'debugging',\n        'quiz',\n    ],\n    17: [\n        'default',\n        'for_command',\n        'elif_command',\n        'music',\n        'tic',\n        'hangman',\n        'hangman_2',\n        'hangman_3',\n        'blackjack',\n        'blackjack_2',\n        'blackjack_3',\n        'blackjack_4',\n        'debugging',\n        'quiz',\n    ],\n    18: [\n        'default',\n        'print_command',\n        'ask_command',\n        'functions',\n        'for_command',\n        'story',\n        'songs',\n        'music',\n        'debugging'\n    ]\n}\n\nHOUR_OF_CODE_ADVENTURES = {\n    1: [\n        'print_command',\n        'parrot',\n        'turtle',\n        'debugging'\n    ],\n    2: [\n        'default',\n        'parrot',\n        'turtle',\n        'debugging'\n    ],\n    3: [\n        'parrot',\n        'dishes',\n        'turtle',\n        'debugging'\n    ],\n    4: [\n        'dishes',\n        'parrot',\n        'story',\n        'debugging'\n    ],\n    5: [\n        'language',\n        'parrot',\n        'turtle',\n        'debugging'\n    ],\n    6: [\n        'songs',\n        'dishes',\n        'turtle',\n        'debugging'\n    ],\n    7: [\n        'songs',\n        'dishes',\n        'restaurant',\n        'debugging'\n    ],\n    8: [\n        'songs',\n        'restaurant',\n        'turtle',\n        'debugging'\n    ],\n    9: [\n        'rock',\n        'restaurant',\n        'turtle',\n        'debugging'\n    ],\n    10: [\n        'dishes',\n        'dice',\n        'turtle',\n        'songs',\n        'debugging'\n    ],\n    11: [\n        'years',\n        'songs',\n        'restaurant',\n        'debugging'\n    ],\n    12: [\n        'maths',\n        'functions',\n        'story',\n        'turtle',\n        'debugging'\n    ],\n    13: [\n        'story',\n        'rock',\n        'restaurant',\n        'calculator',\n        'debugging'\n    ],\n    14: [\n        'guess_my_number',\n        'haunted',\n        'hotel',\n        'calculator',\n        'quizmaster',\n        'debugging'\n    ],\n    15: [\n        'restaurant',\n        'story',\n        'dice',\n        'rock',\n        'debugging'\n    ],\n    16: [\n        'haunted',\n        'songs',\n        'language',\n        'debugging'\n    ],\n    17: [\n        'blackjack',\n        'debugging'\n    ],\n    18: [\n        'story',\n        'songs',\n        'debugging'\n    ]\n}\n\n# We must find our data relative to this .py file. This will give the\n# correct answer both for when Hedy is run as a webserver on Heroku, as well\n# as when it has been bundled using pyinstaller.\ndata_root = path.dirname(__file__)\n\ncontent_dir = path.join(data_root, 'content')\ntranslations_dir = path.join(data_root, 'translations')\n\nRESEARCH = {}\nfor paper in sorted(os.listdir(f'{content_dir}/research'),\n                    key=lambda x: int(x.split(\"_\")[-1][:-4]),\n                    reverse=True):\n    # An_approach_to_describing_the_semantics_of_Hedy_2022.pdf -> 2022, An\n    # approach to describing the semantics of Hedy\n    name = paper.replace(\"_\", \" \").split(\".\")[0]\n    name = name[-4:] + \". \" + name[:-5]\n    RESEARCH[name] = paper\n\n\n# load all available languages in dict\n# list_translations of babel does about the same, but without territories.\nlanguages = {}\nif not os.path.isdir(translations_dir):\n    # should not be possible, but if it's moved someday, EN would still be working.\n    ALL_LANGUAGES['en'] = 'English'\n    ALL_KEYWORD_LANGUAGES['en'] = 'EN'\n\nfor folder in os.listdir(translations_dir):\n    locale_dir = os.path.join(translations_dir, folder, 'LC_MESSAGES')\n    if not os.path.isdir(locale_dir):\n        continue\n    if filter(lambda x: x.endswith('.mo'), os.listdir(locale_dir)):\n        languages[folder] = CUSTOM_LANGUAGE_TRANSLATIONS.get(folder,\n                                                             static_babel_content.LANGUAGE_NAMES.get(folder, folder))\n\n\nfor lang in sorted(languages):\n    ALL_LANGUAGES[lang] = languages[lang]\n    if os.path.exists(path.join(data_root, './grammars/keywords-' + lang + '.lark')):\n        ALL_KEYWORD_LANGUAGES[lang] = lang[0:2].upper()  # first two characters\n\n# Load and cache all keyword yamls\nKEYWORDS = {}\nfor lang in ALL_KEYWORD_LANGUAGES.keys():\n    KEYWORDS[lang] = YamlFile.for_file(f'{content_dir}/keywords/{lang}.yaml').to_dict()\n    for k, v in KEYWORDS[lang].items():\n        if isinstance(v, str) and \"|\" in v:\n            # when we have several options, pick the first one as default\n            # Some keys are ints, turn them into strings\n            KEYWORDS[lang][k] = v.split('|')[0]\n\n\nclass StructuredDataFile:\n    \"\"\"Base class for all data files in the content directory.\"\"\"\n\n    def __init__(self, filename):\n        self.filename = filename\n        self._file = None\n\n    @property\n    def file(self):\n        \"\"\"Lazily load the requested file.\"\"\"\n        if not self._file:\n            self._file = YamlFile.for_file(self.filename)\n        return self._file\n\n\nclass Commands(StructuredDataFile):\n    def __init__(self, language):\n        self.language = language\n        super().__init__(f'{content_dir}/cheatsheets/{self.language}.yaml')\n\n    def get_commands_for_level(self, level, keyword_lang):\n        return deep_translate_keywords(self.file.get(int(level), {}), keyword_lang)\n\n\ndef deep_translate_keywords(yaml, keyword_language):\n    \"\"\"Recurse through a data structure and replace keyword placeholders in any strings we encounter.\n\n    It's easy to make content that doesn't replace properly (make typos in the\n    amounts of `{` for example), and then our entire build stops. So what we'll\n    do instead is return the original, untranslated string. This makes it\n    obvious that something is wrong if the content is looked at, while not\n    stopping the build.\n    \"\"\"\n    try:\n        if isinstance(yaml, str):\n            # this is used to localize adventures linked in slides (PR 3860)\n            yaml = yaml.replace('/raw', f'/raw?keyword_language={keyword_language}')\n            return safe_format(yaml, **KEYWORDS.get(keyword_language))\n        if isinstance(yaml, list):\n            return [deep_translate_keywords(e, keyword_language) for e in yaml]\n        if isinstance(yaml, dict):\n            return {k: deep_translate_keywords(v, keyword_language) for k, v in yaml.items()}\n        return yaml\n    except Exception as E:\n        logger.exception(f'Issue in language {keyword_language}. Offending yaml: {yaml}. Error: {E}')\n        return yaml\n\n\ndef get_localized_name(name, keyword_lang):\n    return safe_format(name, **KEYWORDS.get(keyword_lang))\n\n# Todo TB -> We don't need these anymore as we guarantee with Weblate that\n# each language file is there\n\n\nclass NoSuchCommand:\n    def get_commands_for_level(self, level, keyword_lang):\n        return {}\n\n\nclass Adventures(StructuredDataFile):\n    def __init__(self, language):\n        self.language = language\n        super().__init__(f'{content_dir}/adventures/{self.language}.yaml')\n\n    def get_adventure_keyname_name_levels(self):\n        return {aid: {adv['name']: list(adv['levels'].keys())} for aid, adv in self.file.get('adventures', {}).items()}\n\n    def get_sorted_level_programs(self, programs, adventure_names):\n        programs_by_level = []\n        for item in programs:\n            programs_by_level.append(\n                {'level': item['level'],\n                 'adventure_name': item.get('adventure_name', item['name']),\n                 }\n            )\n\n        sort = {}\n\n        for program in programs_by_level:\n            if program['level'] in sort:\n                sort[program['level']].append(adventure_names.get(program['adventure_name'], program['adventure_name']))\n            else:\n                sort[program['level']] = [adventure_names.get(program['adventure_name'], program['adventure_name'])]\n        for level, adventures in sort.copy().items():\n            sort[level] = sorted(adventures, key=lambda s: s.lower() if s else \"\")\n\n        return dict(sorted(sort.items(), key=lambda item: item[0]))\n\n    def get_sorted_adventure_programs(self, programs, adventure_names):\n        programs_by_adventure = []\n        for item in programs:\n            if item.get('adventure_name'):\n                programs_by_adventure.append(\n                    {'adventure_name': adventure_names.get(item.get('adventure_name')) or item.get('adventure_name'),\n                     'level': item['level'],\n                     }\n                )\n\n        sort = {}\n        for program in programs_by_adventure:\n            if program['adventure_name'] in sort:\n                sort[program['adventure_name']].append(program['level'])\n            else:\n                sort[program['adventure_name']] = [program['level']]\n        for adventure, levels in sort.copy().items():\n            sort[adventure] = sorted(levels, key=lambda item: item)\n\n        return {key: sort[key]\n                for key in sorted(sort.keys(), key=lambda s: s.lower() if s else \"\")}\n\n    def get_adventure_names(self, keyword_lang):\n        return {aid: adv['name'] for aid, adv in deep_translate_keywords(\n            self.file.get('adventures'), keyword_lang).items()}\n\n    def get_adventures(self, keyword_lang=\"en\"):\n        return deep_translate_keywords(self.file.get('adventures'), keyword_lang)\n\n    def get_adventures_subset(self, subset=[\"print_command\", \"parrot\"], keyword_lang=\"en\"):\n        adventures = {aid: adv for aid, adv in self.file.get('adventures', {}).items() if aid in subset}\n        return deep_translate_keywords(adventures, keyword_lang)\n\n    def has_adventures(self):\n        return True if self.file.get('adventures') else False\n\n\nclass NoSuchAdventure:\n    def get_adventure(self):\n        return {}\n\n\nclass ParsonsProblem(StructuredDataFile):\n    def __init__(self, language):\n        self.language = language\n        super().__init__(f'{content_dir}/parsons/{self.language}.yaml')\n\n    def get_highest_exercise_level(self, level):\n        return max(int(lnum) for lnum in self.file.get('levels', {}).get(level, {}).keys())\n\n    def get_parsons_data_for_level(self, level, keyword_lang=\"en\"):\n        return deep_translate_keywords(self.file.get('levels', {}).get(level, None), keyword_lang)\n\n    def get_parsons_data_for_level_exercise(self, level, excercise, keyword_lang=\"en\"):\n        return deep_translate_keywords(self.file.get('levels', {}).get(level, {}).get(excercise), keyword_lang)\n\n\nclass Quizzes(StructuredDataFile):\n    def __init__(self, language):\n        self.language = language\n        super().__init__(f'{content_dir}/quizzes/{self.language}.yaml')\n\n    def get_highest_question_level(self, level):\n        return max(int(k) for k in self.file.get('levels', {}).get(level, {}))\n\n    def get_quiz_data_for_level(self, level, keyword_lang=\"en\"):\n        return deep_translate_keywords(self.file.get('levels', {}).get(level), keyword_lang)\n\n    def get_quiz_data_for_level_question(self, level, question, keyword_lang=\"en\"):\n        return deep_translate_keywords(self.file.get('levels', {}).get(level, {}).get(question), keyword_lang)\n\n\nclass NoSuchQuiz:\n    def get_quiz_data_for_level(self, level, keyword_lang):\n        return {}\n\n\nclass Tutorials(StructuredDataFile):\n    # Want to parse the keywords only once, they can be cached -> perform this\n    # action on server start\n    def __init__(self, language):\n        self.language = language\n        super().__init__(f'{content_dir}/tutorials/{self.language}.yaml')\n\n    def get_tutorial_for_level(self, level, keyword_lang=\"en\"):\n        if level not in [\"intro\", \"teacher\"]:\n            level = int(level)\n        return deep_translate_keywords(self.file.get(level, None), keyword_lang)\n\n    def get_tutorial_for_level_step(self, level, step, keyword_lang=\"en\"):\n        if level not in [\"intro\", \"teacher\"]:\n            level = int(level)\n        return deep_translate_keywords(self.file.get(level, {}).get('steps', {}).get(step), keyword_lang)\n\n\nclass NoSuchTutorial:\n    def get_tutorial_for_level(self, level, keyword_lang):\n        return {}\n\n\nclass Slides(StructuredDataFile):\n    def __init__(self, language):\n        self.language = language\n        super().__init__(f'{content_dir}/slides/{self.language}.yaml')\n\n    def get_slides_for_level(self, level, keyword_lang=\"en\"):\n        return deep_translate_keywords(self.file.get('levels', {}).get(level), keyword_lang)\n\n\nclass NoSuchSlides:\n    def get_slides_for_level(self, level, keyword_lang):\n        return {}\n\n\nclass NoSuchWorkbooks:\n    def get_workbook_for_level(self, level, keyword_lang):\n        return {}\n\n\nclass Workbooks(StructuredDataFile, NoSuchWorkbooks):\n    def __init__(self, language):\n        self.language = language\n        super().__init__(f'{content_dir}/workbooks/{self.language}.yaml')\n\n    def get_workbook_for_level(self, level, keyword_lang='en'):\n        workbook_for_level = self.file.get('levels', {}).get(level, {})\n        return deep_translate_keywords(workbook_for_level, keyword_lang)\n\n\nclass NoSuchTags:\n    def get_tags(self):\n        return {}\n\n\nclass Tags(StructuredDataFile):\n    def __init__(self, language):\n        self.language = language\n        super().__init__(f'{content_dir}/tags/{self.language}.yaml')\n\n    def get_tags_names(self):\n        return {tid: tags['items'] for tid, tags in self.file.get('tags', {}).items()}\n\n    def get_tags(self, keyword_lang=\"en\"):\n        return deep_translate_keywords(self.file.get('tags'), keyword_lang)\n\n    def has_tags(self):\n        return True if self.file.get('tags') else False\n"
        },
        {
          "name": "hedy_error.py",
          "type": "blob",
          "size": 4.818359375,
          "content": "import hedy\nimport hedy_translation\nimport re\nfrom website.flask_helpers import gettext_with_fallback as gettext\n\n\n# TODO: we should not maintain a list like this. Translation of exception arguments should happen when the exception\n#  is created, because then we know what language was used in every part of the code. For example, if a user creates\n#  the program `draai 50 forward 10` and mixes the languages of the keywords, an error regarding the turn command\n#  should use `draai` and an error about the forward command - `forward`.\narguments_that_require_translation = [\n    'allowed_types',\n    'invalid_type',\n    'invalid_type_2',\n    'offending_keyword',\n    'character_found',\n    'concept',\n    'tip',\n    'else',\n    'command',\n    'incomplete_command',\n    'missing_command',\n    'print',\n    'ask',\n    'echo',\n    'is',\n    'if',\n    'repeat',\n    'suggestion_color',\n    'suggestion_note',\n    'suggestion_number',\n    'suggestion_numbers_or_strings'\n]\n\n\ndef get_error_text(ex, lang):\n    \"\"\" Return a translated and highlighted text of the provided HedyException \"\"\"\n    # TODO: TB -> We have to find a more delicate way to fix this: returns some gettext() errors\n    error_template = gettext('' + str(ex.error_code))\n    arguments = ex.arguments\n\n    # Some of the arguments like 'allowed_types' or 'characters' need to be translated in the error message\n    for k, v in arguments.items():\n        if k in arguments_that_require_translation:\n            arguments[k] = _translate_error_arg(v, lang)\n\n    # Some of the already translated arguments like 'tip' and 'allowed_types' are translated to text, which\n    # in turn needs to be translated/highlighted. Atm we explicitly allow for 1 level of nested translation.\n    for k, v in arguments.items():\n        if k in arguments_that_require_translation:\n            nested_arguments = _extract_nested_arguments(v, lang)\n            if nested_arguments:\n                arguments[k] = v.format(**nested_arguments)\n\n    # Errors might contain hardcoded references to commands which are not supplied in the arguments, e.g. {print}, {ask}\n    arguments.update(_get_missing_arguments(error_template, arguments, lang))\n\n    # Do not use a safe_format here. Every exception is tested against every language in tests_translation_error\n    result = error_template.format(**arguments)\n    return _highlight(result)\n\n\ndef _highlight(input_):\n    \"\"\" Add highlight styling to the parts in the input surrounded by backticks, for example:\n    '`print` is incorrect' becomes '<span class=\"command-highlighted\">print</span> is incorrect'\n    This is a simple implementation that does not allow escaping backticks. Extend it in the future if needed. \"\"\"\n    quote_positions = [i for i, x in enumerate(input_) if x == \"`\"]\n    quotes_even = len(quote_positions) % 2 == 0\n    if not quote_positions or not quotes_even:\n        return input_\n\n    quote_positions.insert(0, 0)\n    result = []\n    for i, position in enumerate(quote_positions):\n        start_ = position if i == 0 else position + 1\n        end_ = quote_positions[i+1] if i + 1 < len(quote_positions) else len(input_)\n        if start_ < end_:\n            part = input_[start_:end_]\n            is_highlighted = i % 2 == 1\n            result.append(hedy.style_command(part) if is_highlighted else part)\n    return ''.join(result)\n\n\ndef _get_keys(input_):\n    pattern = r'\\{([^}]*)\\}'\n    return re.findall(pattern, input_)\n\n\ndef _get_missing_arguments(input_, args, lang):\n    \"\"\" Discover and translate keywords used in the template which are missing from the arguments, e.g. {print} \"\"\"\n    matches = _get_keys(input_)\n    existing_keywords = hedy_translation.keywords_to_dict_single_choice(lang)\n    used_keys = [k for k in matches if k not in args and k in existing_keywords]\n    translated_keywords = {k: _translate_error_arg(k, lang) for k in used_keys}\n    return translated_keywords\n\n\ndef _extract_nested_arguments(template, lang):\n    used_keys = _get_keys(template)\n    return {k: _translate_error_arg(k, lang) for k in used_keys}\n\n\ndef _translate_error_arg(arg, lang):\n    if isinstance(arg, list):\n        return _translate_list(arg, lang)\n\n    return _translate(arg, lang)\n\n\ndef _translate_list(args, lang):\n    translated_args = [_translate(a, lang) for a in args]\n    # deduplication is needed because diff values could be translated to the same value, e.g. int and float => a number\n    translated_args = list(dict.fromkeys(translated_args))\n\n    if len(translated_args) > 1:\n        return f\"{', '.join(translated_args[0:-1])}\" \\\n            f\" {gettext('or')} \" \\\n            f\"{translated_args[-1]}\"\n    return ''.join(translated_args)\n\n\ndef _translate(v, language):\n    translation = gettext('' + str(v))\n    # if there is no translation available, probably this is a keyword\n    if v == translation:\n        translation = hedy_translation.translate_keyword_from_en(v, language)\n    return translation\n"
        },
        {
          "name": "hedy_grammar.py",
          "type": "blob",
          "size": 13.158203125,
          "content": "import re\nimport warnings\nfrom os import path\nfrom functools import cache\nimport hedy_translation\n\n\"\"\"\nBecause of the gradual nature of Hedy, the grammar of every level is just slightly different than the grammar of the\nprevious one. With the current approach every level only describes the grammar differences from its preceding level.\nTo get the grammar of level N, the grammar of level 1 is merged consecutively with the change definitions of all\nlevels up to N. To facilitate this approach, 2 features are added:\n\n    - Preprocessing rules appear in grammar rule definitions and allow for custom python logic to be applied before the\n    rule is merged. For example, `for:<needs_colon>` fetches the `for` rule from the base grammar and adds a colon at\n    the end of its definition. Another example is `if_error:<old_rule_to_error ifs>` which fetches the definition of\n    `ifs` from the base grammar. Preprocessors are also used to construct regular expressions which have to avoid\n    specific translated keywords, e.g. `elses: /([^\\n ]| (?!<expand_keyword else>))+/` is transformed to\n    `elses: /([^\\n ]| (?!else|ellers))+/` in Danish and `elses: /([^\\n ]| (?!else|değilse))+/` in Turkish.\n\n    - Grammar mering operators, i.e. +=, -= and >>, allow adding, removing and moving last parts of a rule definition.\n    For example, if level 1 contains the following definition `command: repeat | while` and level 2 redefines the\n    rule as `command += for -= while >> repeat`, then the merged grammar of level 2 will have the following\n    definition `command: for | repeat`.\n\"\"\"\n\n\n@cache\ndef create_grammar(level, lang, skip_faulty):\n    \"\"\" Creates a grammar file for a chosen level and lang. Note that the language is required\n    to generate regular expressions that escape keywords (with negative lookahead).\n    Currently, it is only a couple of MB in total, so it is safe to cache. \"\"\"\n    # start with creating the grammar for level 1\n    merged_grammars = get_full_grammar_for_level(1)\n\n    # then keep merging new grammars in\n    for lvl in range(2, level + 1):\n        grammar_text_lvl = get_additional_rules_for_level(lvl)\n        merged_grammars = merge_grammars(merged_grammars, grammar_text_lvl, lang)\n\n    if skip_faulty:\n        skip_faulty_grammar = read_skip_faulty_file(level)\n        merged_grammars = merge_grammars(merged_grammars, skip_faulty_grammar, lang)\n\n    # keyword and other terminals never have merge-able rules, so we can just add them at the end\n    keywords = get_keywords_for_language(lang)\n    terminals = get_terminals()\n    merged_grammars = merged_grammars + '\\n' + keywords + '\\n' + terminals\n\n    # ready? Save to file to ease debugging\n    # this could also be done on each merge for performance reasons\n    save_total_grammar_file(level, merged_grammars, lang)\n    return merged_grammars\n\n\ndef merge_grammars(grammar_text_1, grammar_text_2, lang):\n    \"\"\" Merges two grammar files into one.\n    Rules that are redefined in the second file are overridden.\n    Rules that are new in the second file are added.\"\"\"\n    merged_grammar = []\n    rules_to_delete = []  # collects rules we no longer need\n\n    base_grammar = parse_grammar(grammar_text_1)\n    target_grammar = parse_grammar(grammar_text_2)\n\n    apply_preprocessing_rules(target_grammar, base_grammar, lang)\n\n    for base_rule in base_grammar.values():\n        if base_rule.name in target_grammar:\n            target_rule = target_grammar[base_rule.name]\n            if base_rule.value.strip() == target_rule.value.strip():\n                warnings.warn(f\"The rule {base_rule.name} is duplicated: {base_rule.value}. Please check!\")\n            # computes the rules that use the merge operators in the grammar, namely +=, -= and >>\n            merged_rule, to_delete = merge_rules_operator(base_rule.value, target_rule.value,\n                                                          base_rule.name, target_rule.line)\n            rules_to_delete.extend(to_delete)\n            merged_grammar.append(merged_rule)\n        else:\n            merged_grammar.append(base_rule.line)\n\n    for target_rule in target_grammar.values():\n        if target_rule.name not in base_grammar:\n            merged_grammar.append(target_rule.line)\n\n    # filters rules that are no longer needed\n    rules_to_keep = [rule for rule in merged_grammar if split_rule_name_and_value(rule)[0] not in rules_to_delete]\n    return '\\n'.join(sorted(rules_to_keep))\n\n\ndef read_file(*paths):\n    script_dir = path.abspath(path.dirname(__file__))\n    path_ = path.join(script_dir, *paths)\n    with open(path_, \"r\", encoding=\"utf-8\") as file:\n        return file.read()\n\n\ndef read_skip_faulty_file(level):\n    script_dir = path.abspath(path.dirname(__file__))\n    for lvl in range(level, 0, -1):\n        file_path = path.join(script_dir, 'grammars', f'skip-faulty-level{lvl}.lark')\n        if path.isfile(file_path):\n            with open(file_path, \"r\", encoding=\"utf-8\") as file:\n                return file.read()\n\n\ndef write_file(content, *paths):\n    script_dir = path.abspath(path.dirname(__file__))\n    path_ = path.join(script_dir, *paths)\n    with open(path_, \"w\", encoding=\"utf-8\") as file:\n        file.write(content)\n\n\ndef get_keywords_for_language(language):\n    try:\n        return read_file('grammars', f'keywords-{language}.lark')\n    except FileNotFoundError:\n        return read_file('grammars', 'keywords-en.lark')\n\n\ndef get_terminals():\n    return read_file('grammars', 'terminals.lark')\n\n\ndef save_total_grammar_file(level, grammar, lang_):\n    write_file(grammar, 'grammars-Total', f'level{level}.{lang_}-Total.lark')\n\n\ndef get_additional_rules_for_level(level):\n    return read_file('grammars', f'level{level}-Additions.lark')\n\n\ndef get_full_grammar_for_level(level):\n    return read_file('grammars', f'level{level}.lark')\n\n\ndef parse_grammar(grammar):\n    lines = grammar.split('\\n')\n    rules = [parse_grammar_rule(line) for line in lines if line != '' and line[0] != '/']\n    return {r.name: r for r in rules}\n\n\ndef parse_grammar_rule(line):\n    processor_rules = [re.findall(fr'<({rule})( +[\\w_]+)?>', line) for rule in PREPROCESS_RULES]\n    processor_rules = [\n        RuleProcessor(name, arg)\n        for rules in processor_rules\n        for name, arg in rules if rules\n    ]\n\n    name, value = split_rule_name_and_value(line)\n    return GrammarRule(line=line, name=name, value=value, processors=processor_rules)\n\n\nclass GrammarRule:\n    \"\"\"Used to store information about parsed grammar rules when merging grammars.\n    Valid examples of rules: name.-100: _DEFINITION, name<processor>, and name.1<processor argument>.\"\"\"\n\n    def __init__(self, line, name, value, processors=None):\n        self.line = line\n        self.name_with_priority = name\n        self.name = strip_priority_suffix(name).strip()\n        self.value = value\n        self.processors = processors\n\n    def apply_processors(self, base_grammar, lang):\n        if self.processors:\n            result = self.value\n            for processor in self.processors:\n                arg = processor.arg if processor.arg else self.name\n                target_part = processor.func(arg=arg, lang=lang, base_grammar=base_grammar)\n                result = result.replace(processor.match_string, target_part)\n            self.value = result\n            self.line = f'{self.name_with_priority}:{result}'\n\n    def __str__(self):\n        return f'{self.name}:{self.value}'\n\n    def __repr__(self):\n        return self.__str__()\n\n\nclass RuleProcessor:\n    def __init__(self, name, arg):\n        self.name = name\n        self.arg = arg.strip()\n        self.match_string = f'<{name}{arg}>'\n        self.func = PREPROCESS_RULES[name]\n\n\ndef split_rule_name_and_value(s):\n    # splits the name and the definition of a rule\n    parts = s.split(':')\n    if len(parts) <= 1:\n        return s, s\n    # we join because the rule definition could contain :\n    return parts[0], ':'.join(parts[1:])\n\n\ndef apply_preprocessing_rules(grammar, base_grammar, lang):\n    for rule in grammar.values():\n        rule.apply_processors(base_grammar, lang)\n\n\ndef get_rule_from_grammar(rule_name, grammar):\n    if rule_name not in grammar:\n        raise Exception(f'There is a reference to rule {rule_name} but it is not in the base grammar.')\n    return grammar[rule_name]\n\n\n#\n# Grammar rule preprocessing functions\n#\ndef needs_colon(**kwargs):\n    \"\"\" Returns the definition of the rule in the base grammar modified so that it is followed by a `:` \"\"\"\n    rule_name = kwargs['arg']\n    base_grammar = kwargs['base_grammar']\n\n    rule = get_rule_from_grammar(rule_name, base_grammar)\n    value = rule.value\n    pos = value.find('_EOL (_SPACE command)')\n    return f'{value[0:pos]} _COLON {value[pos:]}'\n\n\ndef old_rule_to_error(**kwargs):\n    \"\"\" Returns the 'old' version of the rule, i.e. the definition of the rule in the base grammar \"\"\"\n    arg = kwargs['arg']\n    base_grammar = kwargs['base_grammar']\n\n    rule = get_rule_from_grammar(arg, base_grammar)\n    return rule.value\n\n\ndef expand_keyword(**kwargs):\n    \"\"\" Creates a list of all values of a keyword. The keyword `else` produces `else|ellers` for Danish\"\"\"\n    keyword = kwargs['arg']\n    lang = kwargs['lang']\n\n    values = get_translated_keyword(keyword, lang)\n    values = sorted(list(set(values)))\n    return '|'.join(values)\n\n\ndef expand_keyword_first(**kwargs):\n    \"\"\" Creates a list of the first letter of all values of a keyword.\n    The keyword `else` produces `ei` for Ukrainian \"\"\"\n    keyword = kwargs['arg']\n    lang = kwargs['lang']\n\n    values = get_translated_keyword(keyword, lang)\n    values = sorted(list(set([v[0] for v in values])))\n    return ''.join(values)\n\n\ndef expand_keyword_not_followed_by_space(**kwargs):\n    \"\"\" Creates a negative lookahead for all values of a keyword (except their first letter) followed by a space.\n    The keyword `else` produces `e(?!lse |llers )` for Danish and `e(?!lse )|и(?!наче)` for Bulgarian\"\"\"\n    keyword = kwargs['arg']\n    lang = kwargs['lang']\n\n    values = get_translated_keyword(keyword, lang)\n    first_to_rest = dict()\n    for v in values:\n        first, rest = v[0], f'{v[1:]} '\n        if first in first_to_rest:\n            first_to_rest[first].append(rest)\n        else:\n            first_to_rest[first] = [rest]\n\n    result = [f'{k}(?!{\"|\".join(v)})' for k, v in first_to_rest.items()]\n    return '|'.join(result)\n\n\ndef get_translated_keyword(keyword, lang):\n    def get_keyword_value_from_lang(keyword_, lang_):\n        keywords = hedy_translation.keywords_to_dict(lang_)\n        if keyword_ in keywords:\n            return [k for k in keywords[keyword_] if k]\n        else:\n            raise Exception(f\"The keywords yaml file for language '{lang_}' has no definition for '{keyword_}'.\")\n\n    translated_keyword = get_keyword_value_from_lang(keyword, lang) if lang != 'en' else []\n    return translated_keyword + get_keyword_value_from_lang(keyword, 'en')\n\n\nPREPROCESS_RULES = {\n    'needs_colon': needs_colon,\n    'old_rule_to_error': old_rule_to_error,\n    'expand_keyword': expand_keyword,\n    'expand_keyword_first': expand_keyword_first,\n    'expand_keyword_not_followed_by_space': expand_keyword_not_followed_by_space,\n}\n\n\n#\n# Grammar merging operators: +=, -=, >>\n#\nADD_GRAMMAR_MERGE_OP = '+='\nREMOVE_GRAMMAR_MERGE_OP = '-='\nLAST_GRAMMAR_MERGE_OP = '>>'\nGRAMMAR_MERGE_OPERATORS = [ADD_GRAMMAR_MERGE_OP, REMOVE_GRAMMAR_MERGE_OP, LAST_GRAMMAR_MERGE_OP]\n\n\ndef merge_rules_operator(prev_definition, new_definition, name, complete_line):\n    op_to_arg = get_operator_to_argument(new_definition)\n\n    add_arg = op_to_arg.get(ADD_GRAMMAR_MERGE_OP, '')\n    remove_arg = op_to_arg.get(REMOVE_GRAMMAR_MERGE_OP, '')\n    last_arg = op_to_arg.get(LAST_GRAMMAR_MERGE_OP, '')\n    remaining_commands = get_remaining_rules(prev_definition, remove_arg, last_arg)\n    ordered_commands = split_rule(remaining_commands, add_arg, last_arg)\n\n    new_rule = f\"{name}: {' | '.join(ordered_commands)}\" if bool(op_to_arg) else complete_line\n    deletable = split_rule(remove_arg)\n    return new_rule, deletable\n\n\ndef get_operator_to_argument(definition):\n    \"\"\"Creates a map of all used operators and their respective arguments e.g. {'+=': 'print | play', '>>': 'echo'}\"\"\"\n    operator_to_index = [(op, definition.find(op)) for op in GRAMMAR_MERGE_OPERATORS if op in definition]\n    result = {}\n    for i, (op, index) in enumerate(operator_to_index):\n        start_index = index + len(op)\n        if i + 1 < len(operator_to_index):\n            _, next_index = operator_to_index[i + 1]\n            result[op] = definition[start_index:next_index].strip()\n        else:\n            result[op] = definition[start_index:].strip()\n    return result\n\n\ndef get_remaining_rules(orig_def, *sub_def):\n    original_commands = split_rule(orig_def)\n    commands_after_minus = split_rule(*sub_def)\n    misses = [c for c in commands_after_minus if c not in original_commands]\n    if misses:\n        raise Exception(f\"Command(s) {'|'.join(misses)} do not exist in the previous definition\")\n    remaining_commands = [cmd for cmd in original_commands if cmd not in commands_after_minus]\n    remaining_commands = ' | '.join(remaining_commands)  # turn the result list into a string\n    return remaining_commands\n\n\ndef split_rule(*rules):\n    return [c.strip() for rule in rules for c in rule.split('|') if c.strip() != '']\n\n\ndef strip_priority_suffix(rule):\n    if re.match(r\"\\w+\\.-?\\d+\", rule):\n        return rule.split('.')[0]\n    return rule\n"
        },
        {
          "name": "hedy_sourcemap.py",
          "type": "blob",
          "size": 12.9287109375,
          "content": "import re\nimport textwrap\nimport exceptions\nfrom os import path\nfrom lark import Tree\n\n\nclass SourceRange:\n    \"\"\"\n    A class used to represent source code ranges\n\n    The source code range is made out of:\n    from_line (int), from_column (int), to_line (int), to_column (int)\n\n    An example:\n    print Hello!\n    ask What is your name?\n\n    For the above snippet we could have the following mappings:\n    print Hello! - from_line (1), from_column (1), to_line (1), to_column (13)\n    ask What is your name? - from_line (2), from_column (1), to_line (2), to_column (23)\n    Hello! - from_line (1), from_column (7), to_line (1), to_column (13)\n\n    Tip: You can use a more advanced text editor like Notepad++ to get these values for a certain cursor position\n    \"\"\"\n\n    def __init__(self, from_line, from_column, to_line, to_column):\n        self.from_line = from_line\n        self.from_column = from_column\n        self.to_line = to_line\n        self.to_column = to_column\n\n    def __str__(self):\n        return f'{self.from_line}/{self.from_column}-{self.to_line}/{self.to_column}'\n\n    def __repr__(self):\n        return self.__str__()\n\n    def __eq__(self, other):\n        return (\n            self.from_line, self.from_column,\n            self.to_line, self.to_column\n        ) == (\n            other.from_line, other.from_column,\n            other.to_line, other.to_column\n        )\n\n\nclass SourceCode:\n    \"\"\"\n    A class used to represent Hedy/Python source code\n\n    The source code range is made out of:\n    a source_range (SourceRange) and the code (str)\n    \"\"\"\n\n    def __init__(self, source_range: SourceRange, code: str, error: Exception = None, command_name: str = None):\n        self.source_range = source_range\n        self.code = code\n        self.error = error\n        self.command_name = command_name\n\n    def __hash__(self):\n        return hash((\n            self.source_range.from_line, self.source_range.from_column,\n            self.source_range.to_line, self.source_range.to_column\n        ))\n\n    def __eq__(self, other):\n        return (\n            self.source_range.from_line, self.source_range.from_column,\n            self.source_range.to_line, self.source_range.to_column\n        ) == (\n            other.source_range.from_line, other.source_range.from_column,\n            other.source_range.to_line, other.source_range.to_column\n        )\n\n    def __ne__(self, other):\n        return not (self == other)\n\n    def __str__(self):\n        if self.error is None:\n            return f'{self.source_range} --- {self.code} --- {self.command_name}'\n        else:\n            return f'{self.source_range} -- ERROR[{self.error}] CODE[{self.code}]'\n\n    def __repr__(self):\n        return self.__str__()\n\n\ndef strip_priority_suffix(rule):\n    if re.match(r\"\\w+\\.\\d+\", rule):\n        return rule.split('.')[0]\n    return rule\n\n\nclass SourceMap:\n    \"\"\"\n    A class used to represent the Hedy - Python source map.\n\n    The map contains entries in the form of:\n    SourceCode object (Hedy) - SourceCode object (Python)\n\n    the string representation of the sourcemap is defined as:\n    [Start line]-[Start Character]/[End line]-[End Character] :\n        [Code]\n    \"\"\"\n\n    map = dict()\n    level = 0\n\n    skip_faulty = False\n\n    exceptions_not_to_skip = (\n        exceptions.UnsupportedStringValue,\n    )\n\n    language = 'en'\n    hedy_code = ''\n    python_code = ''\n    grammar_rules = []\n\n    def __init__(self):\n        self.get_grammar_rules()\n\n    def set_level(self, level):\n        self.level = level\n\n    def set_language(self, language):\n        self.language = language\n\n    def set_skip_faulty(self, skip_faulty):\n        # if the mapping encounters an error and skip_faulty is True we will 'skip' the exception\n        self.skip_faulty = skip_faulty\n\n    def set_hedy_input(self, hedy_code):\n        self.hedy_code = hedy_code\n\n    def set_python_output(self, python_code):\n        self.python_code = python_code\n        python_code_mapped = list()\n        hedy_lines = self.hedy_code.split('\\n')\n        indent_size = find_program_indent_length(hedy_lines)\n\n        def line_col(context, idx):\n            return context.count('\\n', 0, idx) + 1, idx - context.rfind('\\n', 0, idx)\n\n        for hedy_source_code, python_source_code in self.map.items():\n            if hedy_source_code.error is not None or python_source_code.code == '':\n                continue\n            if self.level <= 7:\n                start_index = -1\n                number_of_indents = 0\n                while start_index == -1 and number_of_indents < 10:\n                    python_statement_code = textwrap.indent(python_source_code.code, '  '*number_of_indents)\n                    start_index = python_code.find(python_statement_code)\n                    code_char_length = len(python_source_code.code)\n\n                    for i in range(python_code_mapped.count(python_source_code.code)):\n                        start_index = python_code.find(python_statement_code, start_index+code_char_length)\n                        start_index = max(0, start_index)  # not found (-1) means that start_index = 0\n                    number_of_indents += 1\n            else:\n                number_of_indents = find_indent_length(\n                    hedy_lines[hedy_source_code.source_range.from_line - 1]) // indent_size\n\n                python_statement_code = textwrap.indent(python_source_code.code, '  '*number_of_indents)\n                start_index = python_code.find(python_statement_code)\n                code_char_length = len(python_source_code.code)\n\n                for i in range(python_code_mapped.count(python_source_code.code)):\n                    start_index = python_code.find(python_statement_code, start_index+code_char_length)\n                    start_index = max(0, start_index)  # not found (-1) means that start_index = 0\n\n            end_index = start_index + code_char_length\n            start_line, start_column = line_col(python_code, start_index)\n            end_line, end_column = line_col(python_code, end_index)\n\n            python_source_code.source_range = SourceRange(\n                start_line,\n                start_column,\n                end_line,\n                end_column\n            )\n\n            python_code_mapped.append(python_source_code.code)\n\n    def get_grammar_rules(self):\n        script_dir = path.abspath(path.dirname(__file__))\n\n        with open(path.join(script_dir, \"grammars\", \"level1.lark\"), \"r\", encoding=\"utf-8\") as file:\n            grammar_text = file.read()\n\n        for i in range(2, 19):\n            with open(path.join(script_dir, \"grammars\", f'level{i}-Additions.lark'), \"r\", encoding=\"utf-8\") as file:\n                grammar_text += '\\n' + file.read()\n\n        self.grammar_rules = re.findall(r\"([\\w.]+):\", grammar_text)\n        self.grammar_rules = [rule for rule in self.grammar_rules if 'text' not in rule]  # exclude text from mapping\n        self.grammar_rules = list(set(self.grammar_rules))  # remove duplicates\n        self.grammar_rules = [strip_priority_suffix(r) for r in self.grammar_rules]\n\n    def add_source(self, hedy_code: SourceCode, python_code: SourceCode):\n        self.map[hedy_code] = python_code\n\n    def clear(self):\n        self.map.clear()\n        self.level = 0\n        self.language = 'en'\n        self.hedy_code = ''\n        self.python_code = ''\n\n    def get_result(self):\n        response_map = dict()\n        index = 0\n\n        for hedy_source_code, python_source_code in self.map.items():\n            response_map[index] = {\n                'hedy_range': {\n                    'from_line': hedy_source_code.source_range.from_line,\n                    'from_column': hedy_source_code.source_range.from_column,\n                    'to_line': hedy_source_code.source_range.to_line,\n                    'to_column': hedy_source_code.source_range.to_column,\n                },\n                'python_range': {\n                    'from_line': python_source_code.source_range.from_line,\n                    'from_column': python_source_code.source_range.from_column,\n                    'to_line': python_source_code.source_range.to_line,\n                    'to_column': python_source_code.source_range.to_column,\n                },\n                'error': hedy_source_code.error,\n                'command': hedy_source_code.command_name\n            }\n\n            index += 1\n        return response_map\n\n    def get_compressed_mapping(self):\n        response_map = dict()\n\n        for hedy_source_code, python_source_code in self.map.items():\n            response_map[str(hedy_source_code.source_range)] = str(python_source_code.source_range)\n\n        return response_map\n\n    def get_error_from_hedy_source_range(self, hedy_range: SourceRange) -> Exception:\n        for hedy_source_code, python_source_code in self.map.items():\n            if hedy_source_code.source_range == hedy_range:\n                return hedy_source_code.error\n\n    def print_source_map(self, d, indent=0):\n        for key, value in d.items():\n            print('\\t' * indent + str(key) + ':')\n            if isinstance(value, dict):\n                self.print_source_map(value, indent + 1)\n            else:\n                code_lines = str(value).splitlines()\n                code_lines = ['\\t' * (indent + 1) + str(x) for x in code_lines]\n                code = \"\\n\".join(code_lines)\n                print(code)\n            print('')\n\n    def __str__(self):\n        self.print_source_map(self.map)\n        return str()\n\n\ndef source_map_rule(source_map: SourceMap):\n    \"\"\" A decorator function that should decorator the transformer method (grammar rule)\n        the decorator adds the hedy code & python code to the map when the transformer method (grammar rule) is used\n    \"\"\"\n\n    def decorator(function):\n        def wrapper(*args, **kwargs):\n            meta = args[1]\n\n            hedy_code_input = source_map.hedy_code[meta.start_pos:meta.end_pos]\n            hedy_code_input = hedy_code_input.replace('#ENDBLOCK', '')  # ENDBLOCK is not part of the Hedy code, remove\n            error = None\n\n            if not source_map.skip_faulty:\n                generated_python = function(*args, **kwargs)\n            else:\n                try:\n                    generated_python = function(*args, **kwargs)\n\n                    # When parsing with skip_faulty enabled it could happen that because sanitization is not done\n                    # a tree is returned instead of a string containing valid Python code by a transformer method.\n                    # If this happens we have to raise an exception, we cannot map a Lark tree\n\n                    if (\n                        # if a Lark tree is returned\n                        isinstance(generated_python, Tree) or\n                        # if a Lark tree is returned as a string, we check with regex\n                        bool(re.match(r\".*Tree\\(.*Token\\(.*\\).*\\).*\", generated_python))\n                    ):\n                        raise Exception('Can not map a Lark tree, only strings')\n\n                except Exception as e:\n                    # If an exception is found, we set the Python code to pass (null operator)\n                    # we also map the error\n                    generated_python = 'pass'\n                    error = e\n\n            hedy_code = SourceCode(\n                SourceRange(\n                    meta.container_line, meta.container_column,\n                    meta.container_end_line, meta.container_end_column\n                ),\n                hedy_code_input,\n                error=error,\n                command_name=function.__name__\n            )\n\n            python_code = SourceCode(\n                # We don't know now, set_python_output will set the ranges later\n                SourceRange(None, None, None, None),\n                generated_python\n            )\n\n            source_map.add_source(hedy_code, python_code)\n            return generated_python\n\n        return wrapper\n\n    return decorator\n\n\ndef source_map_transformer(source_map: SourceMap):\n    \"\"\" A decorator function that should decorate a transformer class\n\n        This is used for convenience, instead of adding source_map_rule to all methods,\n        source_map_transformer needs only to be added to the transformer class.\n        This decorator add source_map_rule to all appropriate methods.\n    \"\"\"\n\n    def decorate(cls):\n        for rule in cls.__dict__:\n            if rule in source_map.grammar_rules:\n                setattr(cls, rule, source_map_rule(source_map)(getattr(cls, rule)))\n        return cls\n\n    return decorate\n\n\ndef find_indent_length(line):\n    number_of_spaces = 0\n    for x in line:\n        if x == ' ':\n            number_of_spaces += 1\n        else:\n            break\n    return number_of_spaces\n\n\ndef find_program_indent_length(program_lines):\n    indent_size = 4\n    found_indent_size = False\n    for line in program_lines:\n        leading_spaces = find_indent_length(line)\n        # continue if line is just spaces\n        if leading_spaces == len(line):\n            continue\n\n        if not found_indent_size and leading_spaces > 0:\n            indent_size = leading_spaces\n            found_indent_size = True\n\n    return indent_size\n"
        },
        {
          "name": "hedy_translation.py",
          "type": "blob",
          "size": 14.8203125,
          "content": "from collections import namedtuple\nfrom lark import Token, Transformer, v_args\nfrom lark.exceptions import VisitError\nimport hedy\nimport operator\nfrom os import path\nimport hedy_content\nfrom website.yaml_file import YamlFile\nimport copy\n\n# Holds the token that needs to be translated, its line number, start and\n# end indexes and its value (e.g. \", \").\nRule = namedtuple(\"Rule\", \"keyword line start end value\")\n\n\ndef keywords_to_dict(lang=\"nl\"):\n    \"\"\" \"Return a dictionary of keywords from language of choice. Key is english value is lang of choice\"\"\"\n    base = path.abspath(path.dirname(__file__))\n\n    keywords_path = \"content/keywords/\"\n    yaml_filesname_with_path = path.join(base, keywords_path, lang + \".yaml\")\n\n    # as we mutate this dict, we have to make a copy\n    # as YamlFile re-uses the yaml contents\n    command_combinations = copy.deepcopy(\n        YamlFile.for_file(yaml_filesname_with_path).to_dict()\n    )\n    for k, v in command_combinations.items():\n        command_combinations[k] = v.split(\"|\")\n\n    return command_combinations\n\n\ndef keywords_to_dict_single_choice(lang):\n    command_combinations = keywords_to_dict(lang)\n    return {k: v[0] for (k, v) in command_combinations.items()}\n\n\ndef all_keywords_to_dict():\n    \"\"\"Return a dictionary where each value is a list of the translations of that keyword (key). Used for testing\"\"\"\n    keyword_dict = {}\n    for lang in hedy_content.ALL_KEYWORD_LANGUAGES:\n        commands = keywords_to_dict_single_choice(lang)\n        keyword_dict[lang] = commands\n\n    all_translations = {k: [v.get(k, k) for v in keyword_dict.values()] for k in keyword_dict[\"en\"]}\n    return all_translations\n\n\ndef translate_keyword_from_en(keyword, lang=\"en\"):\n    # translated the keyword to a local lang\n    local_keywords = keywords_to_dict(lang)\n    if keyword in local_keywords.keys():\n        local_keyword = local_keywords[keyword][0]\n    else:\n        local_keyword = keyword\n    return local_keyword\n\n\ndef translate_keyword_to_en(keyword, lang):\n    # translated the keyword to from a local lang\n    original_keywords = keywords_to_dict(lang)\n    for k, v in original_keywords.items():\n        if keyword in v:\n            return k\n    return keyword\n\n\ndef get_target_keyword(keyword_dict, keyword):\n    if keyword in keyword_dict.keys():\n        return keyword_dict[keyword][0]\n    else:\n        return keyword\n\n\ndef translate_keywords(input_string, from_lang=\"en\", to_lang=\"nl\", level=1):\n    \"\"\" \"Return code with keywords translated to language of choice in level of choice\"\"\"\n\n    if input_string == \"\":\n        return \"\"\n\n    # remove leading spaces.\n    # FH, dec 23. This creates a bit of a different version of translation but that seems ok to me\n    # putting it back in seems overkill\n    input_string = input_string.lstrip()\n\n    try:\n        processed_input = hedy.process_input_string(input_string, level, from_lang, preprocess_ifs_enabled=False)\n\n        hedy.source_map.clear()\n        hedy.source_map.set_skip_faulty(False)\n\n        parser = hedy.get_parser(level, from_lang, True, hedy.source_map.skip_faulty)\n        keyword_dict_from = keywords_to_dict(from_lang)\n        keyword_dict_to = keywords_to_dict(to_lang)\n\n        program_root = parser.parse(processed_input + \"\\n\").children[0]\n\n        translator = Translator(processed_input)\n        translator.transform(program_root)\n        ordered_rules = reversed(sorted(translator.rules, key=operator.attrgetter(\"line\", \"start\")))\n\n        # checks whether any error production nodes are present in the parse tree\n        # hedy.is_program_valid(program_root, input_string, level, from_lang)\n\n        result = processed_input\n        for rule in ordered_rules:\n            if rule.keyword in keyword_dict_from and rule.keyword in keyword_dict_to:\n                lines = result.splitlines()\n                line = lines[rule.line - 1]\n                original = get_original_keyword(keyword_dict_from, rule.keyword, line)\n                target = get_target_keyword(keyword_dict_to, rule.keyword)\n                replaced_line = replace_token_in_line(line, rule, original, target)\n                result = replace_line(lines, rule.line - 1, replaced_line)\n\n        # For now the needed post processing is only removing the 'end-block's added during pre-processing\n        result = \"\\n\".join([line for line in result.splitlines()])\n        result = result.replace(\"#ENDBLOCK\", \"\")\n\n        # we have to reverse escaping or translating and retranslating will add an unlimited number of slashes\n        if level >= 4:\n            result = result.replace(\"\\\\\\\\\", \"\\\\\")\n\n        return result\n    except VisitError as E:\n        if isinstance(E, VisitError):\n            # Exceptions raised inside visitors are wrapped inside VisitError. Unwrap it if it is a\n            # HedyException to show the intended error message.\n            if isinstance(E.orig_exc, hedy.exceptions.HedyException):\n                raise E.orig_exc\n            else:\n                raise E\n    except Exception as E:\n        raise E\n\n\ndef replace_line(lines, index, line):\n    before = \"\\n\".join(lines[0:index])\n    after = \"\\n\".join(lines[index + 1:])\n    if len(before) > 0:\n        before = before + \"\\n\"\n    if len(after) > 0:\n        after = \"\\n\" + after\n    return \"\".join([before, line, after])\n\n\ndef replace_token_in_line(line, rule, original, target):\n    \"\"\"Replaces a token in a line from the user input with its translated equivalent\"\"\"\n    before = \"\" if rule.start == 0 else line[0: rule.start]\n    after = \"\" if rule.end == len(line) - 1 else line[rule.end + 1:]\n    # Note that we need to replace the target value in the original value because some\n    # grammar rules have ambiguous length and value, e.g. _COMMA: _SPACES*\n    # (latin_comma | arabic_comma) _SPACES*\n    return before + rule.value.replace(original, target) + after\n\n\ndef find_command_keywords(\n    input_string, lang, level, keywords, start_line, end_line, start_column, end_column\n):\n    parser = hedy.get_parser(level, lang, True, hedy.source_map.skip_faulty)\n    program_root = parser.parse(input_string).children[0]\n\n    translator = Translator(input_string)\n    translator.transform(program_root)\n\n    return {\n        k: find_keyword_in_rules(\n            translator.rules, k, start_line, end_line, start_column, end_column\n        )\n        for k in keywords\n    }\n\n\ndef find_keyword_in_rules(rules, keyword, start_line, end_line, start_column, end_column):\n    for rule in rules:\n        if rule.keyword == keyword and rule.line == start_line and rule.start >= start_column:\n            if rule.line < end_line or (rule.line == end_line and rule.end <= end_column):\n                return rule.value\n    return None\n\n\ndef get_original_keyword(keyword_dict, keyword, line):\n    for word in keyword_dict[keyword]:\n        if word in line:\n            return word\n\n    # If we can't find the keyword, it means that it isn't part of the valid keywords for this language\n    # so return original instead\n    return keyword\n\n\n@v_args(tree=True)\nclass Translator(Transformer):\n    \"\"\"The translator finds tokens that must be translated and stores information about their exact position\n    in the user input string and original value. The information is later used to replace the token in\n    the original user input with the translated token value. Please note that it is a transformer\n    instead of a visitor because we need tokens to be visited too.\"\"\"\n\n    def __init__(self, input_string):\n        super().__init__()\n        self.input_string = input_string\n        self.rules = []\n\n    def define(self, tree):\n        self.add_rule_for_grammar_token(\"_DEFINE\", \"define\", tree)\n\n    def defs(self, tree):\n        self.add_rule_for_grammar_token(\"_DEF\", \"def\", tree)\n\n    def call(self, tree):\n        self.add_rule_for_grammar_token(\"_CALL\", \"call\", tree)\n\n    def withs(self, tree):\n        self.add_rule_for_grammar_token(\"_WITH\", \"with\", tree)\n\n    def returns(self, tree):\n        self.add_rule_for_grammar_token(\"_RETURN\", \"return\", tree)\n\n    def print(self, tree):\n        self.add_rule_for_grammar_token(\"_PRINT\", \"print\", tree)\n\n    def print_empty_brackets(self, tree):\n        self.print(tree)\n\n    def ask(self, tree):\n        self.add_rule_for_grammar_token(\"_IS\", \"is\", tree)\n        self.add_rule_for_grammar_token(\"_ASK\", \"ask\", tree)\n\n    def echo(self, tree):\n        self.add_rule_for_grammar_token(\"_ECHO\", \"echo\", tree)\n\n    def color(self, tree):\n        self.add_rule_for_grammar_token(\"_COLOR\", \"color\", tree)\n\n    def forward(self, tree):\n        self.add_rule_for_grammar_token(\"_FORWARD\", \"forward\", tree)\n\n    def turn(self, tree):\n        self.add_rule_for_grammar_token(\"_TURN\", \"turn\", tree)\n\n    def left(self, tree):\n        self.add_rule_for_grammar_rule(\"left\", tree)\n\n    def right(self, tree):\n        self.add_rule_for_grammar_rule(\"right\", tree)\n\n    def black(self, tree):\n        self.add_rule_for_grammar_rule(\"black\", tree)\n\n    def blue(self, tree):\n        self.add_rule_for_grammar_rule(\"blue\", tree)\n\n    def brown(self, tree):\n        self.add_rule_for_grammar_rule(\"brown\", tree)\n\n    def gray(self, tree):\n        self.add_rule_for_grammar_rule(\"gray\", tree)\n\n    def green(self, tree):\n        self.add_rule_for_grammar_rule(\"green\", tree)\n\n    def orange(self, tree):\n        self.add_rule_for_grammar_rule(\"orange\", tree)\n\n    def pink(self, tree):\n        self.add_rule_for_grammar_rule(\"pink\", tree)\n\n    def yellow(self, tree):\n        self.add_rule_for_grammar_rule(\"yellow\", tree)\n\n    def purple(self, tree):\n        self.add_rule_for_grammar_rule(\"purple\", tree)\n\n    def white(self, tree):\n        self.add_rule_for_grammar_rule(\"white\", tree)\n\n    def red(self, tree):\n        self.add_rule_for_grammar_rule(\"red\", tree)\n\n    def clear(self, tree):\n        self.add_rule_for_grammar_rule(\"clear\", tree)\n\n    def TRUE(self, token):\n        name = 'True' if token and token[0].isupper() else 'true'\n        rule = Rule(name, token.line, token.column - 1, token.end_column - 2, token)\n        self.rules.append(rule)\n\n    def FALSE(self, token):\n        name = 'False' if token and token[0].isupper() else 'false'\n        rule = Rule(name, token.line, token.column - 1, token.end_column - 2, token)\n        self.rules.append(rule)\n\n    def assign_list(self, tree):\n        self.add_rule_for_grammar_token(\"_IS\", \"is\", tree)\n        commas = self.get_keyword_tokens(\"_COMMA\", tree)\n        for comma in commas:\n            rule = Rule(\"comma\", comma.line, comma.column - 1, comma.end_column - 2, comma.value)\n            self.rules.append(rule)\n\n    def assign(self, tree):\n        self.add_rule_for_grammar_token(\"_IS\", \"is\", tree)\n\n    def sleep(self, tree):\n        self.add_rule_for_grammar_token(\"_SLEEP\", \"sleep\", tree)\n\n    def add(self, tree):\n        self.add_rule_for_grammar_token(\"_ADD_LIST\", \"add\", tree)\n        self.add_rule_for_grammar_token(\"_TO_LIST\", \"to_list\", tree)\n\n    def remove(self, tree):\n        self.add_rule_for_grammar_token(\"_REMOVE\", \"remove\", tree)\n        self.add_rule_for_grammar_token(\"_FROM\", \"from\", tree)\n\n    def random(self, tree):\n        self.add_rule_for_grammar_rule(\"random\", tree)\n\n    def error_ask_dep_2(self, tree):\n        self.add_rule_for_grammar_token(\"_ASK\", \"ask\", tree)\n\n    def error_echo_dep_2(self, tree):\n        self.add_rule_for_grammar_token(\"_ECHO\", \"echo\", tree)\n\n    def ifs(self, tree):\n        self.add_rule_for_grammar_token(\"_IF\", \"if\", tree)\n\n    def ifelse(self, tree):\n        self.add_rule_for_grammar_token(\"_IF\", \"if\", tree)\n        self.add_rule_for_grammar_token(\"_ELSE\", \"else\", tree)\n\n    def elifs(self, tree):\n        self.add_rule_for_grammar_token(\"_ELIF\", \"elif\", tree)\n\n    def elses(self, tree):\n        self.add_rule_for_grammar_token(\"_ELSE\", \"else\", tree)\n\n    def condition_spaces(self, tree):\n        self.add_rule_for_grammar_token(\"_IS\", \"is\", tree)\n\n    def equality_check_is(self, tree):\n        self.equality_check(tree)\n\n    def equality_check(self, tree):\n        self.add_rule_for_grammar_token(\"_IS\", \"is\", tree)\n        self.add_rule_for_grammar_token(\"_EQUALS\", \"=\", tree)\n        self.add_rule_for_grammar_token(\"_DOUBLE_EQUALS\", \"==\", tree)\n\n    def in_list_check(self, tree):\n        self.add_rule_for_grammar_token(\"_IN\", \"in\", tree)\n\n    def list_access(self, tree):\n        self.add_rule_for_grammar_token(\"_AT\", \"at\", tree)\n\n    def list_access_var(self, tree):\n        self.add_rule_for_grammar_token(\"_IS\", \"is\", tree)\n        self.add_rule_for_grammar_token(\"_AT\", \"at\", tree)\n\n    def repeat(self, tree):\n        self.add_rule_for_grammar_token(\"_REPEAT\", \"repeat\", tree)\n        self.add_rule_for_grammar_token(\"_TIMES\", \"times\", tree)\n\n    def for_list(self, tree):\n        self.add_rule_for_grammar_token(\"_FOR\", \"for\", tree)\n        self.add_rule_for_grammar_token(\"_IN\", \"in\", tree)\n\n    def for_loop(self, tree):\n        self.add_rule_for_grammar_token(\"_FOR\", \"for\", tree)\n        self.add_rule_for_grammar_token(\"_IN\", \"in\", tree)\n        self.add_rule_for_grammar_token(\"_RANGE\", \"range\", tree)\n        self.add_rule_for_grammar_token(\"_TO\", \"to\", tree)\n\n    def while_loop(self, tree):\n        self.add_rule_for_grammar_token(\"_WHILE\", \"while\", tree)\n\n    def and_condition(self, tree):\n        self.add_rule_for_grammar_token(\"_AND\", \"and\", tree)\n\n    def or_condition(self, tree):\n        self.add_rule_for_grammar_token(\"_OR\", \"or\", tree)\n\n    def input(self, tree):\n        self.add_rule_for_grammar_token(\"_IS\", \"is\", tree)\n        self.add_rule_for_grammar_token(\"_INPUT\", \"input\", tree)\n\n    def input_empty_brackets(self, tree):\n        self.add_rule_for_grammar_token(\"_IS\", \"is\", tree)\n        self.add_rule_for_grammar_token(\"_INPUT\", \"input\", tree)\n\n    def pressed(self, tree):\n        self.add_rule_for_grammar_token(\"_PRESSED\", \"pressed\", tree)\n\n    def add_rule_for_grammar_rule(self, rule_name, tree):\n        \"\"\"Creates a translation rule for a rule defined in the lark grammar which\n        could have multiple children tokens, e.g. left, random, red\"\"\"\n        # somehow for some Arabic rules (left, right, random) the parser returns separate tokens instead of one!\n        token_start = tree.children[0]\n        token_end = tree.children[-1]\n        value = ''.join(tree.children)\n        rule = Rule(rule_name, token_start.line, token_start.column - 1, token_end.end_column - 2, value)\n        self.rules.append(rule)\n\n    def add_rule_for_grammar_token(self, token_name, token_keyword, tree):\n        \"\"\"Creates a translation rule for a token defined in the lark grammar, e.g. _DEFINE, _FOR, _TURN\"\"\"\n        token = self.get_keyword_token(token_name, tree)\n        if token:\n            rule = Rule(\n                token_keyword, token.line, token.column - 1, token.end_column - 2, token.value\n            )\n            self.rules.append(rule)\n\n    def get_keyword_token(self, token_type, node):\n        for c in node.children:\n            if type(c) is Token and c.type == token_type:\n                return c\n        return None\n\n    def get_keyword_tokens(self, token_type, node):\n        return [c for c in node.children if type(c) is Token and c.type == token_type]\n"
        },
        {
          "name": "hedyweb.py",
          "type": "blob",
          "size": 0.83984375,
          "content": "import collections\n\nfrom website.yaml_file import YamlFile\nimport glob\nfrom os import path\n\n\nclass PageTranslations:\n    def __init__(self, page):\n        self.data = {}\n        if page in ['start', 'join', 'learn-more', 'for-teachers']:\n            translations = glob.glob('content/pages/*.yaml')\n        else:\n            translations = glob.glob('content/pages/' + page + '/*.yaml')\n        for file in translations:\n            lang = path.splitext(path.basename(file))[0]\n            self.data[lang] = YamlFile.for_file(file)\n\n    def exists(self):\n        \"\"\"Whether or not any content was found for this page.\"\"\"\n        return len(self.data) > 0\n\n    def get_page_translations(self, language):\n        d = collections.defaultdict(lambda: '')\n        d.update(**self.data.get('en', {}))\n        d.update(**self.data.get(language, {}))\n        return d\n"
        },
        {
          "name": "highlighting",
          "type": "tree",
          "content": null
        },
        {
          "name": "logging_config.py",
          "type": "blob",
          "size": 0.6708984375,
          "content": "import os\n\n\nLOGGING_CONFIG = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'standard': {\n            'format': '[%(asctime)s] %(filename)s %(funcName)s %(lineno)d <%(levelname)s>: '\n                      '%(message)s'\n        },\n    },\n    'handlers': {\n        'default': {\n            'level': 'DEBUG' if not os.getenv('NO_DEBUG_MODE') else 'INFO',\n            'formatter': 'standard',\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'loggers': {\n        '': {\n            'handlers': ['default'],\n            'level': 'DEBUG' if not os.getenv('NO_DEBUG_MODE') else 'INFO',\n            'propagate': False\n        },\n    }\n}\n"
        },
        {
          "name": "messages.pot",
          "type": "blob",
          "size": 23.126953125,
          "content": "# Translations template for PROJECT.\n# Copyright (C) 2025 ORGANIZATION\n# This file is distributed under the same license as the PROJECT project.\n# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.\n#\n#, fuzzy\nmsgid \"\"\nmsgstr \"\"\n\"Project-Id-Version: PROJECT VERSION\\n\"\n\"Report-Msgid-Bugs-To: EMAIL@ADDRESS\\n\"\n\"POT-Creation-Date: 2024-10-28 19:29+0200\\n\"\n\"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n\"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n\"Language-Team: LANGUAGE <LL@li.org>\\n\"\n\"MIME-Version: 1.0\\n\"\n\"Content-Type: text/plain; charset=utf-8\\n\"\n\"Content-Transfer-Encoding: 8bit\\n\"\n\"Generated-By: Babel 2.14.0\\n\"\n\nmsgid \"Access Before Assign\"\nmsgstr \"\"\n\nmsgid \"Cyclic Var Definition\"\nmsgstr \"\"\n\nmsgid \"Else Without If Error\"\nmsgstr \"\"\n\nmsgid \"Function Undefined\"\nmsgstr \"\"\n\nmsgid \"Has Blanks\"\nmsgstr \"\"\n\nmsgid \"Incomplete\"\nmsgstr \"\"\n\nmsgid \"Incomplete Repeat\"\nmsgstr \"\"\n\nmsgid \"Invalid\"\nmsgstr \"\"\n\nmsgid \"Invalid Argument\"\nmsgstr \"\"\n\nmsgid \"Invalid Argument Type\"\nmsgstr \"\"\n\nmsgid \"Invalid At Command\"\nmsgstr \"\"\n\nmsgid \"Invalid Space\"\nmsgstr \"\"\n\nmsgid \"Invalid Type Combination\"\nmsgstr \"\"\n\nmsgid \"Lonely Echo\"\nmsgstr \"\"\n\nmsgid \"Lonely Text\"\nmsgstr \"\"\n\nmsgid \"Missing Additional Command\"\nmsgstr \"\"\n\nmsgid \"Missing Colon Error\"\nmsgstr \"\"\n\nmsgid \"Missing Command\"\nmsgstr \"\"\n\nmsgid \"Missing Inner Command\"\nmsgstr \"\"\n\nmsgid \"Missing Square Brackets\"\nmsgstr \"\"\n\nmsgid \"Missing Variable\"\nmsgstr \"\"\n\nmsgid \"Misspelled At Command\"\nmsgstr \"\"\n\nmsgid \"No Indentation\"\nmsgstr \"\"\n\nmsgid \"Non Decimal Variable\"\nmsgstr \"\"\n\nmsgid \"Parse\"\nmsgstr \"\"\n\nmsgid \"Pressit Missing Else\"\nmsgstr \"\"\n\nmsgid \"Runtime Index Error\"\nmsgstr \"\"\n\nmsgid \"Runtime Value Error\"\nmsgstr \"\"\n\nmsgid \"Runtime Values Error\"\nmsgstr \"\"\n\nmsgid \"Save Microbit code \"\nmsgstr \"\"\n\nmsgid \"Too Big\"\nmsgstr \"\"\n\nmsgid \"Too Few Indents\"\nmsgstr \"\"\n\nmsgid \"Too Many Indents\"\nmsgstr \"\"\n\nmsgid \"Unexpected Indentation\"\nmsgstr \"\"\n\nmsgid \"Unquoted Assignment\"\nmsgstr \"\"\n\nmsgid \"Unquoted Equality Check\"\nmsgstr \"\"\n\nmsgid \"Unquoted Text\"\nmsgstr \"\"\n\nmsgid \"Unsupported Float\"\nmsgstr \"\"\n\nmsgid \"Unsupported String Value\"\nmsgstr \"\"\n\nmsgid \"Unused Variable\"\nmsgstr \"\"\n\nmsgid \"Var Undefined\"\nmsgstr \"\"\n\nmsgid \"Wrong Level\"\nmsgstr \"\"\n\nmsgid \"Wrong Number of Arguments\"\nmsgstr \"\"\n\nmsgid \"account_overview\"\nmsgstr \"\"\n\nmsgid \"actions\"\nmsgstr \"\"\n\nmsgid \"add\"\nmsgstr \"\"\n\nmsgid \"add_students\"\nmsgstr \"\"\n\nmsgid \"add_your_language\"\nmsgstr \"\"\n\nmsgid \"admin\"\nmsgstr \"\"\n\nmsgid \"advance_button\"\nmsgstr \"\"\n\nmsgid \"adventure\"\nmsgstr \"\"\n\nmsgid \"adventure_cloned\"\nmsgstr \"\"\n\nmsgid \"adventure_code_button\"\nmsgstr \"\"\n\nmsgid \"adventure_codeblock_button\"\nmsgstr \"\"\n\nmsgid \"adventure_duplicate\"\nmsgstr \"\"\n\nmsgid \"adventure_empty\"\nmsgstr \"\"\n\nmsgid \"adventure_exp_3\"\nmsgstr \"\"\n\nmsgid \"adventure_exp_classes\"\nmsgstr \"\"\n\nmsgid \"adventure_flagged\"\nmsgstr \"\"\n\nmsgid \"adventure_id_invalid\"\nmsgstr \"\"\n\nmsgid \"adventure_length\"\nmsgstr \"\"\n\nmsgid \"adventure_name_invalid\"\nmsgstr \"\"\n\nmsgid \"adventure_prompt\"\nmsgstr \"\"\n\nmsgid \"adventure_terms\"\nmsgstr \"\"\n\nmsgid \"adventure_updated\"\nmsgstr \"\"\n\nmsgid \"adventures_completed\"\nmsgstr \"\"\n\nmsgid \"adventures_info\"\nmsgstr \"\"\n\nmsgid \"adventures_restored\"\nmsgstr \"\"\n\nmsgid \"adventures_ticked\"\nmsgstr \"\"\n\nmsgid \"adventures_tried\"\nmsgstr \"\"\n\nmsgid \"ago\"\nmsgstr \"\"\n\nmsgid \"agree_invalid\"\nmsgstr \"\"\n\nmsgid \"agree_with\"\nmsgstr \"\"\n\nmsgid \"ajax_error\"\nmsgstr \"\"\n\nmsgid \"all\"\nmsgstr \"\"\n\nmsgid \"all_class_highscores\"\nmsgstr \"\"\n\nmsgid \"all_rows_missing_separator\"\nmsgstr \"\"\n\nmsgid \"already_account\"\nmsgstr \"\"\n\nmsgid \"already_program_running\"\nmsgstr \"\"\n\nmsgid \"are_you_sure\"\nmsgstr \"\"\n\nmsgid \"ask_needs_var\"\nmsgstr \"\"\n\nmsgid \"available_in\"\nmsgstr \"\"\n\nmsgid \"back_to_class\"\nmsgstr \"\"\n\nmsgid \"become_a_sponsor\"\nmsgstr \"\"\n\nmsgid \"birth_year\"\nmsgstr \"\"\n\nmsgid \"by\"\nmsgstr \"\"\n\nmsgid \"cancel\"\nmsgstr \"\"\n\nmsgid \"cant_parse_exception\"\nmsgstr \"\"\n\nmsgid \"certificate\"\nmsgstr \"\"\n\nmsgid \"certified_teacher\"\nmsgstr \"\"\n\nmsgid \"change_password\"\nmsgstr \"\"\n\nmsgid \"cheatsheet_title\"\nmsgstr \"\"\n\nmsgid \"class_already_joined\"\nmsgstr \"\"\n\nmsgid \"class_customize_success\"\nmsgstr \"\"\n\nmsgid \"class_graph_explanation\"\nmsgstr \"\"\n\nmsgid \"class_logs\"\nmsgstr \"\"\n\nmsgid \"class_name_duplicate\"\nmsgstr \"\"\n\nmsgid \"class_name_empty\"\nmsgstr \"\"\n\nmsgid \"class_name_invalid\"\nmsgstr \"\"\n\nmsgid \"class_name_prompt\"\nmsgstr \"\"\n\nmsgid \"class_performance_graph\"\nmsgstr \"\"\n\nmsgid \"class_survey_description\"\nmsgstr \"\"\n\nmsgid \"class_survey_later\"\nmsgstr \"\"\n\nmsgid \"class_survey_question1\"\nmsgstr \"\"\n\nmsgid \"class_survey_question2\"\nmsgstr \"\"\n\nmsgid \"class_survey_question3\"\nmsgstr \"\"\n\nmsgid \"class_survey_question4\"\nmsgstr \"\"\n\nmsgid \"classes_info\"\nmsgstr \"\"\n\nmsgid \"clone\"\nmsgstr \"\"\n\nmsgid \"cloned_times\"\nmsgstr \"\"\n\nmsgid \"close\"\nmsgstr \"\"\n\nmsgid \"comma\"\nmsgstr \"\"\n\nmsgid \"command_not_available_yet_exception\"\nmsgstr \"\"\n\nmsgid \"command_unavailable_exception\"\nmsgstr \"\"\n\nmsgid \"commands\"\nmsgstr \"\"\n\nmsgid \"complete\"\nmsgstr \"\"\n\nmsgid \"congrats_message\"\nmsgstr \"\"\n\nmsgid \"connect_guest_teacher\"\nmsgstr \"\"\n\nmsgid \"constant_variable_role\"\nmsgstr \"\"\n\nmsgid \"content_invalid\"\nmsgstr \"\"\n\nmsgid \"continue\"\nmsgstr \"\"\n\nmsgid \"contributor\"\nmsgstr \"\"\n\nmsgid \"copy_accounts_to_clipboard\"\nmsgstr \"\"\n\nmsgid \"copy_clipboard\"\nmsgstr \"\"\n\nmsgid \"copy_code\"\nmsgstr \"\"\n\nmsgid \"copy_join_link\"\nmsgstr \"\"\n\nmsgid \"copy_link_success\"\nmsgstr \"\"\n\nmsgid \"copy_link_to_share\"\nmsgstr \"\"\n\nmsgid \"copy_mail_link\"\nmsgstr \"\"\n\nmsgid \"correct_answer\"\nmsgstr \"\"\n\nmsgid \"country\"\nmsgstr \"\"\n\nmsgid \"country_invalid\"\nmsgstr \"\"\n\nmsgid \"create_account\"\nmsgstr \"\"\n\nmsgid \"create_accounts\"\nmsgstr \"\"\n\nmsgid \"create_accounts_placeholder\"\nmsgstr \"\"\n\nmsgid \"create_accounts_prompt\"\nmsgstr \"\"\n\nmsgid \"create_adventure\"\nmsgstr \"\"\n\nmsgid \"create_class\"\nmsgstr \"\"\n\nmsgid \"create_student_account\"\nmsgstr \"\"\n\nmsgid \"create_student_account_explanation\"\nmsgstr \"\"\n\nmsgid \"create_student_accounts\"\nmsgstr \"\"\n\nmsgid \"create_teacher_account\"\nmsgstr \"\"\n\nmsgid \"create_teacher_account_explanation\"\nmsgstr \"\"\n\nmsgid \"create_usernames_and_passwords_desc\"\nmsgstr \"\"\n\nmsgid \"create_usernames_and_passwords_title\"\nmsgstr \"\"\n\nmsgid \"create_usernames_desc\"\nmsgstr \"\"\n\nmsgid \"create_usernames_title\"\nmsgstr \"\"\n\nmsgid \"creator\"\nmsgstr \"\"\n\nmsgid \"current_password\"\nmsgstr \"\"\n\nmsgid \"customization_deleted\"\nmsgstr \"\"\n\nmsgid \"customize\"\nmsgstr \"\"\n\nmsgid \"customize_adventure\"\nmsgstr \"\"\n\nmsgid \"customize_class\"\nmsgstr \"\"\n\nmsgid \"dash\"\nmsgstr \"\"\n\nmsgid \"debug\"\nmsgstr \"\"\n\nmsgid \"default_401\"\nmsgstr \"\"\n\nmsgid \"default_403\"\nmsgstr \"\"\n\nmsgid \"default_404\"\nmsgstr \"\"\n\nmsgid \"default_500\"\nmsgstr \"\"\n\nmsgid \"delete\"\nmsgstr \"\"\n\nmsgid \"delete_adventure_prompt\"\nmsgstr \"\"\n\nmsgid \"delete_class_prompt\"\nmsgstr \"\"\n\nmsgid \"delete_confirm\"\nmsgstr \"\"\n\nmsgid \"delete_invite\"\nmsgstr \"\"\n\nmsgid \"delete_invite_prompt\"\nmsgstr \"\"\n\nmsgid \"delete_public\"\nmsgstr \"\"\n\nmsgid \"delete_success\"\nmsgstr \"\"\n\nmsgid \"delete_tag_prompt\"\nmsgstr \"\"\n\nmsgid \"destroy_profile\"\nmsgstr \"\"\n\nmsgid \"developers_mode\"\nmsgstr \"\"\n\nmsgid \"directly_available\"\nmsgstr \"\"\n\nmsgid \"disable\"\nmsgstr \"\"\n\nmsgid \"disable_explore_page\"\nmsgstr \"\"\n\nmsgid \"disable_parsons\"\nmsgstr \"\"\n\nmsgid \"disable_quizes\"\nmsgstr \"\"\n\nmsgid \"disabled\"\nmsgstr \"\"\n\nmsgid \"disabled_button_quiz\"\nmsgstr \"\"\n\nmsgid \"discord_server\"\nmsgstr \"\"\n\nmsgid \"distinguished_user\"\nmsgstr \"\"\n\nmsgid \"double quotes\"\nmsgstr \"\"\n\nmsgid \"download\"\nmsgstr \"\"\n\nmsgid \"duplicate\"\nmsgstr \"\"\n\nmsgid \"echo_and_ask_mismatch_exception\"\nmsgstr \"\"\n\nmsgid \"echo_out\"\nmsgstr \"\"\n\nmsgid \"edit_adventure\"\nmsgstr \"\"\n\nmsgid \"edit_code_button\"\nmsgstr \"\"\n\nmsgid \"email\"\nmsgstr \"\"\n\nmsgid \"email_invalid\"\nmsgstr \"\"\n\nmsgid \"end_quiz\"\nmsgstr \"\"\n\nmsgid \"english\"\nmsgstr \"\"\n\nmsgid \"enter\"\nmsgstr \"\"\n\nmsgid \"enter_password\"\nmsgstr \"\"\n\nmsgid \"enter_text\"\nmsgstr \"\"\n\nmsgid \"error_logo_alt\"\nmsgstr \"\"\n\nmsgid \"errors\"\nmsgstr \"\"\n\nmsgid \"exclamation mark\"\nmsgstr \"\"\n\nmsgid \"exercise\"\nmsgstr \"\"\n\nmsgid \"exercise_doesnt_exist\"\nmsgstr \"\"\n\nmsgid \"exists_email\"\nmsgstr \"\"\n\nmsgid \"exists_username\"\nmsgstr \"\"\n\nmsgid \"exit_preview_mode\"\nmsgstr \"\"\n\nmsgid \"experience_invalid\"\nmsgstr \"\"\n\nmsgid \"expiration_date\"\nmsgstr \"\"\n\nmsgid \"favorite_program\"\nmsgstr \"\"\n\nmsgid \"favourite_confirm\"\nmsgstr \"\"\n\nmsgid \"favourite_program\"\nmsgstr \"\"\n\nmsgid \"favourite_program_invalid\"\nmsgstr \"\"\n\nmsgid \"favourite_success\"\nmsgstr \"\"\n\nmsgid \"feedback_message_error\"\nmsgstr \"\"\n\nmsgid \"female\"\nmsgstr \"\"\n\nmsgid \"flag_adventure_prompt\"\nmsgstr \"\"\n\nmsgid \"float\"\nmsgstr \"\"\n\nmsgid \"for_teachers\"\nmsgstr \"\"\n\nmsgid \"forgot_password\"\nmsgstr \"\"\n\nmsgid \"from_another_teacher\"\nmsgstr \"\"\n\nmsgid \"from_magazine_website\"\nmsgstr \"\"\n\nmsgid \"from_video\"\nmsgstr \"\"\n\nmsgid \"fun_statistics_msg\"\nmsgstr \"\"\n\nmsgid \"gender\"\nmsgstr \"\"\n\nmsgid \"gender_invalid\"\nmsgstr \"\"\n\nmsgid \"general_settings\"\nmsgstr \"\"\n\nmsgid \"get_certificate\"\nmsgstr \"\"\n\nmsgid \"give_link_to_teacher\"\nmsgstr \"\"\n\nmsgid \"go_back\"\nmsgstr \"\"\n\nmsgid \"go_back_to_main\"\nmsgstr \"\"\n\nmsgid \"go_to_question\"\nmsgstr \"\"\n\nmsgid \"go_to_quiz_result\"\nmsgstr \"\"\n\nmsgid \"goto_profile\"\nmsgstr \"\"\n\nmsgid \"graph_title\"\nmsgstr \"\"\n\nmsgid \"hand_in\"\nmsgstr \"\"\n\nmsgid \"hand_in_exercise\"\nmsgstr \"\"\n\nmsgid \"heard_about_hedy\"\nmsgstr \"\"\n\nmsgid \"heard_about_invalid\"\nmsgstr \"\"\n\nmsgid \"hedy_choice_title\"\nmsgstr \"\"\n\nmsgid \"hedy_introduction_slides\"\nmsgstr \"\"\n\nmsgid \"hedy_logo_alt\"\nmsgstr \"\"\n\nmsgid \"hedy_on_github\"\nmsgstr \"\"\n\nmsgid \"hello_logo\"\nmsgstr \"\"\n\nmsgid \"hide_adventures\"\nmsgstr \"\"\n\nmsgid \"hide_cheatsheet\"\nmsgstr \"\"\n\nmsgid \"hide_classes\"\nmsgstr \"\"\n\nmsgid \"hide_keyword_switcher\"\nmsgstr \"\"\n\nmsgid \"hide_slides\"\nmsgstr \"\"\n\nmsgid \"highest_level_reached\"\nmsgstr \"\"\n\nmsgid \"highest_quiz_score\"\nmsgstr \"\"\n\nmsgid \"hint\"\nmsgstr \"\"\n\nmsgid \"ill_work_some_more\"\nmsgstr \"\"\n\nmsgid \"image_invalid\"\nmsgstr \"\"\n\nmsgid \"incomplete_command_exception\"\nmsgstr \"\"\n\nmsgid \"incorrect_handling_of_quotes_exception\"\nmsgstr \"\"\n\nmsgid \"incorrect_use_of_types_exception\"\nmsgstr \"\"\n\nmsgid \"incorrect_use_of_variable_exception\"\nmsgstr \"\"\n\nmsgid \"indentation_exception\"\nmsgstr \"\"\n\nmsgid \"input\"\nmsgstr \"\"\n\nmsgid \"input_variable_role\"\nmsgstr \"\"\n\nmsgid \"integer\"\nmsgstr \"\"\n\nmsgid \"invalid_class_link\"\nmsgstr \"\"\n\nmsgid \"invalid_command_exception\"\nmsgstr \"\"\n\nmsgid \"invalid_keyword_language_comment\"\nmsgstr \"\"\n\nmsgid \"invalid_language_comment\"\nmsgstr \"\"\n\nmsgid \"invalid_level_comment\"\nmsgstr \"\"\n\nmsgid \"invalid_program_comment\"\nmsgstr \"\"\n\nmsgid \"invalid_teacher_invitation_code\"\nmsgstr \"\"\n\nmsgid \"invalid_tutorial_step\"\nmsgstr \"\"\n\nmsgid \"invalid_username_password\"\nmsgstr \"\"\n\nmsgid \"invite_by_username\"\nmsgstr \"\"\n\nmsgid \"invite_date\"\nmsgstr \"\"\n\nmsgid \"invite_message\"\nmsgstr \"\"\n\nmsgid \"invite_prompt\"\nmsgstr \"\"\n\nmsgid \"invite_teacher\"\nmsgstr \"\"\n\nmsgid \"join_class\"\nmsgstr \"\"\n\nmsgid \"join_prompt\"\nmsgstr \"\"\n\nmsgid \"keybinding_waiting_for_keypress\"\nmsgstr \"\"\n\nmsgid \"keyword_language_invalid\"\nmsgstr \"\"\n\nmsgid \"landcode_phone_number\"\nmsgstr \"\"\n\nmsgid \"language\"\nmsgstr \"\"\n\nmsgid \"language_invalid\"\nmsgstr \"\"\n\nmsgid \"languages\"\nmsgstr \"\"\n\nmsgid \"last_edited\"\nmsgstr \"\"\n\nmsgid \"last_update\"\nmsgstr \"\"\n\nmsgid \"lastname\"\nmsgstr \"\"\n\nmsgid \"leave_class\"\nmsgstr \"\"\n\nmsgid \"level\"\nmsgstr \"\"\n\nmsgid \"level_accessible\"\nmsgstr \"\"\n\nmsgid \"level_disabled\"\nmsgstr \"\"\n\nmsgid \"level_future\"\nmsgstr \"\"\n\nmsgid \"level_invalid\"\nmsgstr \"\"\n\nmsgid \"level_not_class\"\nmsgstr \"\"\n\nmsgid \"level_title\"\nmsgstr \"\"\n\nmsgid \"levels\"\nmsgstr \"\"\n\nmsgid \"link\"\nmsgstr \"\"\n\nmsgid \"list\"\nmsgstr \"\"\n\nmsgid \"list_variable_role\"\nmsgstr \"\"\n\nmsgid \"logged_in_to_share\"\nmsgstr \"\"\n\nmsgid \"login\"\nmsgstr \"\"\n\nmsgid \"login_long\"\nmsgstr \"\"\n\nmsgid \"login_to_save_your_work\"\nmsgstr \"\"\n\nmsgid \"logout\"\nmsgstr \"\"\n\nmsgid \"longest_program\"\nmsgstr \"\"\n\nmsgid \"mail_change_password_body\"\nmsgstr \"\"\n\nmsgid \"mail_change_password_subject\"\nmsgstr \"\"\n\nmsgid \"mail_error_change_processed\"\nmsgstr \"\"\n\nmsgid \"mail_goodbye\"\nmsgstr \"\"\n\nmsgid \"mail_hello\"\nmsgstr \"\"\n\nmsgid \"mail_recover_password_body\"\nmsgstr \"\"\n\nmsgid \"mail_recover_password_subject\"\nmsgstr \"\"\n\nmsgid \"mail_reset_password_body\"\nmsgstr \"\"\n\nmsgid \"mail_reset_password_subject\"\nmsgstr \"\"\n\nmsgid \"mail_welcome_teacher_body\"\nmsgstr \"\"\n\nmsgid \"mail_welcome_teacher_subject\"\nmsgstr \"\"\n\nmsgid \"mail_welcome_verify_body\"\nmsgstr \"\"\n\nmsgid \"mail_welcome_verify_subject\"\nmsgstr \"\"\n\nmsgid \"mailing_title\"\nmsgstr \"\"\n\nmsgid \"main_subtitle\"\nmsgstr \"\"\n\nmsgid \"main_title\"\nmsgstr \"\"\n\nmsgid \"make_sure_you_are_done\"\nmsgstr \"\"\n\nmsgid \"male\"\nmsgstr \"\"\n\nmsgid \"mandatory_mode\"\nmsgstr \"\"\n\nmsgid \"more_info\"\nmsgstr \"\"\n\nmsgid \"more_options\"\nmsgstr \"\"\n\nmsgid \"multiple_keywords_warning\"\nmsgstr \"\"\n\nmsgid \"multiple_levels_warning\"\nmsgstr \"\"\n\nmsgid \"my_account\"\nmsgstr \"\"\n\nmsgid \"my_adventures\"\nmsgstr \"\"\n\nmsgid \"my_classes\"\nmsgstr \"\"\n\nmsgid \"my_messages\"\nmsgstr \"\"\n\nmsgid \"my_public_profile\"\nmsgstr \"\"\n\nmsgid \"name\"\nmsgstr \"\"\n\nmsgid \"nav_explore\"\nmsgstr \"\"\n\nmsgid \"nav_hedy\"\nmsgstr \"\"\n\nmsgid \"nav_learn_more\"\nmsgstr \"\"\n\nmsgid \"nav_start\"\nmsgstr \"\"\n\nmsgid \"new_password\"\nmsgstr \"\"\n\nmsgid \"new_password_repeat\"\nmsgstr \"\"\n\nmsgid \"newline\"\nmsgstr \"\"\n\nmsgid \"next_adventure\"\nmsgstr \"\"\n\nmsgid \"next_exercise\"\nmsgstr \"\"\n\nmsgid \"next_page\"\nmsgstr \"\"\n\nmsgid \"next_step_tutorial\"\nmsgstr \"\"\n\nmsgid \"next_student\"\nmsgstr \"\"\n\nmsgid \"no\"\nmsgstr \"\"\n\nmsgid \"no_account\"\nmsgstr \"\"\n\nmsgid \"no_accounts\"\nmsgstr \"\"\n\nmsgid \"no_adventures_yet\"\nmsgstr \"\"\n\nmsgid \"no_more_flat_if\"\nmsgstr \"\"\n\nmsgid \"no_programs\"\nmsgstr \"\"\n\nmsgid \"no_shared_programs\"\nmsgstr \"\"\n\nmsgid \"no_students\"\nmsgstr \"\"\n\nmsgid \"no_such_adventure\"\nmsgstr \"\"\n\nmsgid \"no_such_class\"\nmsgstr \"\"\n\nmsgid \"no_such_level\"\nmsgstr \"\"\n\nmsgid \"no_such_program\"\nmsgstr \"\"\n\nmsgid \"no_tag\"\nmsgstr \"\"\n\nmsgid \"not_adventure_yet\"\nmsgstr \"\"\n\nmsgid \"not_enrolled\"\nmsgstr \"\"\n\nmsgid \"not_in_class_no_handin\"\nmsgstr \"\"\n\nmsgid \"not_logged_in_cantsave\"\nmsgstr \"\"\n\nmsgid \"not_logged_in_handin\"\nmsgstr \"\"\n\nmsgid \"not_teacher\"\nmsgstr \"\"\n\nmsgid \"number\"\nmsgstr \"\"\n\nmsgid \"number_lines\"\nmsgstr \"\"\n\nmsgid \"number_of_errors\"\nmsgstr \"\"\n\nmsgid \"number_programs\"\nmsgstr \"\"\n\nmsgid \"ok\"\nmsgstr \"\"\n\nmsgid \"one_level_error\"\nmsgstr \"\"\n\nmsgid \"only_you_can_see\"\nmsgstr \"\"\n\nmsgid \"open\"\nmsgstr \"\"\n\nmsgid \"opening_date\"\nmsgstr \"\"\n\nmsgid \"opening_dates\"\nmsgstr \"\"\n\nmsgid \"option\"\nmsgstr \"\"\n\nmsgid \"or\"\nmsgstr \"\"\n\nmsgid \"other\"\nmsgstr \"\"\n\nmsgid \"other_block\"\nmsgstr \"\"\n\nmsgid \"other_settings\"\nmsgstr \"\"\n\nmsgid \"other_source\"\nmsgstr \"\"\n\nmsgid \"other_text\"\nmsgstr \"\"\n\nmsgid \"overwrite_warning\"\nmsgstr \"\"\n\nmsgid \"owner\"\nmsgstr \"\"\n\nmsgid \"page_not_found\"\nmsgstr \"\"\n\nmsgid \"pair_with_teacher\"\nmsgstr \"\"\n\nmsgid \"parsons_title\"\nmsgstr \"\"\n\nmsgid \"password\"\nmsgstr \"\"\n\nmsgid \"password_change_not_allowed\"\nmsgstr \"\"\n\nmsgid \"password_change_prompt\"\nmsgstr \"\"\n\nmsgid \"password_change_success\"\nmsgstr \"\"\n\nmsgid \"password_invalid\"\nmsgstr \"\"\n\nmsgid \"password_repeat\"\nmsgstr \"\"\n\nmsgid \"password_resetted\"\nmsgstr \"\"\n\nmsgid \"password_six\"\nmsgstr \"\"\n\nmsgid \"password_updated\"\nmsgstr \"\"\n\nmsgid \"passwords_six\"\nmsgstr \"\"\n\nmsgid \"passwords_too_short\"\nmsgstr \"\"\n\nmsgid \"pending_invites\"\nmsgstr \"\"\n\nmsgid \"people_with_a_link\"\nmsgstr \"\"\n\nmsgid \"percentage\"\nmsgstr \"\"\n\nmsgid \"period\"\nmsgstr \"\"\n\nmsgid \"personal_text\"\nmsgstr \"\"\n\nmsgid \"personal_text_invalid\"\nmsgstr \"\"\n\nmsgid \"phone_number\"\nmsgstr \"\"\n\nmsgid \"preferred_keyword_language\"\nmsgstr \"\"\n\nmsgid \"preferred_language\"\nmsgstr \"\"\n\nmsgid \"preview\"\nmsgstr \"\"\n\nmsgid \"preview_teacher_mode\"\nmsgstr \"\"\n\nmsgid \"previewing_adventure\"\nmsgstr \"\"\n\nmsgid \"previewing_class\"\nmsgstr \"\"\n\nmsgid \"previous_campaigns\"\nmsgstr \"\"\n\nmsgid \"previous_page\"\nmsgstr \"\"\n\nmsgid \"print_accounts\"\nmsgstr \"\"\n\nmsgid \"print_accounts_title\"\nmsgstr \"\"\n\nmsgid \"print_logo\"\nmsgstr \"\"\n\nmsgid \"privacy_terms\"\nmsgstr \"\"\n\nmsgid \"private\"\nmsgstr \"\"\n\nmsgid \"profile_logo_alt\"\nmsgstr \"\"\n\nmsgid \"profile_picture\"\nmsgstr \"\"\n\nmsgid \"profile_updated\"\nmsgstr \"\"\n\nmsgid \"profile_updated_reload\"\nmsgstr \"\"\n\nmsgid \"program_contains_error\"\nmsgstr \"\"\n\nmsgid \"program_header\"\nmsgstr \"\"\n\nmsgid \"program_too_large_exception\"\nmsgstr \"\"\n\nmsgid \"programming_experience\"\nmsgstr \"\"\n\nmsgid \"programming_invalid\"\nmsgstr \"\"\n\nmsgid \"programs\"\nmsgstr \"\"\n\nmsgid \"prompt_join_class\"\nmsgstr \"\"\n\nmsgid \"provided_username_duplicates\"\nmsgstr \"\"\n\nmsgid \"public\"\nmsgstr \"\"\n\nmsgid \"public_adventures\"\nmsgstr \"\"\n\nmsgid \"public_content\"\nmsgstr \"\"\n\nmsgid \"public_content_info\"\nmsgstr \"\"\n\nmsgid \"public_invalid\"\nmsgstr \"\"\n\nmsgid \"public_profile\"\nmsgstr \"\"\n\nmsgid \"public_profile_info\"\nmsgstr \"\"\n\nmsgid \"public_profile_updated\"\nmsgstr \"\"\n\nmsgid \"put\"\nmsgstr \"\"\n\nmsgid \"question mark\"\nmsgstr \"\"\n\nmsgid \"quiz_logo_alt\"\nmsgstr \"\"\n\nmsgid \"quiz_score\"\nmsgstr \"\"\n\nmsgid \"quiz_tab\"\nmsgstr \"\"\n\nmsgid \"quiz_threshold_not_reached\"\nmsgstr \"\"\n\nmsgid \"read_code_label\"\nmsgstr \"\"\n\nmsgid \"recent\"\nmsgstr \"\"\n\nmsgid \"recover_password\"\nmsgstr \"\"\n\nmsgid \"regress_button\"\nmsgstr \"\"\n\nmsgid \"remove\"\nmsgstr \"\"\n\nmsgid \"remove_customization\"\nmsgstr \"\"\n\nmsgid \"remove_customizations_prompt\"\nmsgstr \"\"\n\nmsgid \"remove_student_prompt\"\nmsgstr \"\"\n\nmsgid \"remove_user_prompt\"\nmsgstr \"\"\n\nmsgid \"rename_class\"\nmsgstr \"\"\n\nmsgid \"rename_class_prompt\"\nmsgstr \"\"\n\nmsgid \"repair_program_logo_alt\"\nmsgstr \"\"\n\nmsgid \"repeat_dep\"\nmsgstr \"\"\n\nmsgid \"repeat_match_password\"\nmsgstr \"\"\n\nmsgid \"repeat_new_password\"\nmsgstr \"\"\n\nmsgid \"report_failure\"\nmsgstr \"\"\n\nmsgid \"report_program\"\nmsgstr \"\"\n\nmsgid \"report_success\"\nmsgstr \"\"\n\nmsgid \"request_invalid\"\nmsgstr \"\"\n\nmsgid \"request_teacher\"\nmsgstr \"\"\n\nmsgid \"request_teacher_account\"\nmsgstr \"\"\n\nmsgid \"required_field\"\nmsgstr \"\"\n\nmsgid \"reset_adventure_prompt\"\nmsgstr \"\"\n\nmsgid \"reset_adventures\"\nmsgstr \"\"\n\nmsgid \"reset_button\"\nmsgstr \"\"\n\nmsgid \"reset_password\"\nmsgstr \"\"\n\nmsgid \"restart\"\nmsgstr \"\"\n\nmsgid \"retrieve_adventure_error\"\nmsgstr \"\"\n\nmsgid \"retrieve_class_error\"\nmsgstr \"\"\n\nmsgid \"retrieve_tag_error\"\nmsgstr \"\"\n\nmsgid \"role\"\nmsgstr \"\"\n\nmsgid \"run_code_button\"\nmsgstr \"\"\n\nmsgid \"save_parse_warning\"\nmsgstr \"\"\n\nmsgid \"save_prompt\"\nmsgstr \"\"\n\nmsgid \"save_success_detail\"\nmsgstr \"\"\n\nmsgid \"score\"\nmsgstr \"\"\n\nmsgid \"search\"\nmsgstr \"\"\n\nmsgid \"search_button\"\nmsgstr \"\"\n\nmsgid \"second_teacher\"\nmsgstr \"\"\n\nmsgid \"second_teacher_copy_prompt\"\nmsgstr \"\"\n\nmsgid \"second_teacher_prompt\"\nmsgstr \"\"\n\nmsgid \"second_teacher_warning\"\nmsgstr \"\"\n\nmsgid \"see_certificate\"\nmsgstr \"\"\n\nmsgid \"select\"\nmsgstr \"\"\n\nmsgid \"select_adventures\"\nmsgstr \"\"\n\nmsgid \"select_all\"\nmsgstr \"\"\n\nmsgid \"select_lang\"\nmsgstr \"\"\n\nmsgid \"select_levels\"\nmsgstr \"\"\n\nmsgid \"select_tag\"\nmsgstr \"\"\n\nmsgid \"selected\"\nmsgstr \"\"\n\nmsgid \"self_removal_prompt\"\nmsgstr \"\"\n\nmsgid \"send_password_recovery\"\nmsgstr \"\"\n\nmsgid \"sent_by\"\nmsgstr \"\"\n\nmsgid \"sent_password_recovery\"\nmsgstr \"\"\n\nmsgid \"settings\"\nmsgstr \"\"\n\nmsgid \"share\"\nmsgstr \"\"\n\nmsgid \"share_by_giving_link\"\nmsgstr \"\"\n\nmsgid \"share_your_program\"\nmsgstr \"\"\n\nmsgid \"signup_student_or_teacher\"\nmsgstr \"\"\n\nmsgid \"single quotes\"\nmsgstr \"\"\n\nmsgid \"slash\"\nmsgstr \"\"\n\nmsgid \"sleeping\"\nmsgstr \"\"\n\nmsgid \"slides\"\nmsgstr \"\"\n\nmsgid \"slides_for_level\"\nmsgstr \"\"\n\nmsgid \"slides_info\"\nmsgstr \"\"\n\nmsgid \"social_media\"\nmsgstr \"\"\n\nmsgid \"solution_example\"\nmsgstr \"\"\n\nmsgid \"solution_example_explanation\"\nmsgstr \"\"\n\nmsgid \"some_rows_missing_separator\"\nmsgstr \"\"\n\nmsgid \"something_went_wrong_keyword_parsing\"\nmsgstr \"\"\n\nmsgid \"space\"\nmsgstr \"\"\n\nmsgid \"star\"\nmsgstr \"\"\n\nmsgid \"start_learning\"\nmsgstr \"\"\n\nmsgid \"start_quiz\"\nmsgstr \"\"\n\nmsgid \"start_teaching\"\nmsgstr \"\"\n\nmsgid \"step_title\"\nmsgstr \"\"\n\nmsgid \"stepper_variable_role\"\nmsgstr \"\"\n\nmsgid \"stop\"\nmsgstr \"\"\n\nmsgid \"stop_code_button\"\nmsgstr \"\"\n\nmsgid \"string\"\nmsgstr \"\"\n\nmsgid \"student\"\nmsgstr \"\"\n\nmsgid \"student_accounts_created\"\nmsgstr \"\"\n\nmsgid \"student_adventures_table\"\nmsgstr \"\"\n\nmsgid \"student_adventures_table_explanation\"\nmsgstr \"\"\n\nmsgid \"student_already_in_class\"\nmsgstr \"\"\n\nmsgid \"student_already_invite\"\nmsgstr \"\"\n\nmsgid \"student_in_another_class\"\nmsgstr \"\"\n\nmsgid \"student_information\"\nmsgstr \"\"\n\nmsgid \"student_information_explanation\"\nmsgstr \"\"\n\nmsgid \"student_not_existing\"\nmsgstr \"\"\n\nmsgid \"student_signup_header\"\nmsgstr \"\"\n\nmsgid \"students\"\nmsgstr \"\"\n\nmsgid \"submission_time\"\nmsgstr \"\"\n\nmsgid \"submit_answer\"\nmsgstr \"\"\n\nmsgid \"submit_program\"\nmsgstr \"\"\n\nmsgid \"submit_warning\"\nmsgstr \"\"\n\nmsgid \"submitted\"\nmsgstr \"\"\n\nmsgid \"submitted_header\"\nmsgstr \"\"\n\nmsgid \"subscribe\"\nmsgstr \"\"\n\nmsgid \"subscribe_newsletter\"\nmsgstr \"\"\n\nmsgid \"successful_runs\"\nmsgstr \"\"\n\nmsgid \"suggestion_color\"\nmsgstr \"\"\n\nmsgid \"suggestion_note\"\nmsgstr \"\"\n\nmsgid \"suggestion_number\"\nmsgstr \"\"\n\nmsgid \"suggestion_numbers_or_strings\"\nmsgstr \"\"\n\nmsgid \"surname\"\nmsgstr \"\"\n\nmsgid \"survey\"\nmsgstr \"\"\n\nmsgid \"survey_completed\"\nmsgstr \"\"\n\nmsgid \"survey_skip\"\nmsgstr \"\"\n\nmsgid \"survey_submit\"\nmsgstr \"\"\n\nmsgid \"tag_in_adventure\"\nmsgstr \"\"\n\nmsgid \"tag_input_placeholder\"\nmsgstr \"\"\n\nmsgid \"tags\"\nmsgstr \"\"\n\nmsgid \"teacher\"\nmsgstr \"\"\n\nmsgid \"teacher_invalid\"\nmsgstr \"\"\n\nmsgid \"teacher_invitation_require_login\"\nmsgstr \"\"\n\nmsgid \"teacher_manual\"\nmsgstr \"\"\n\nmsgid \"teacher_signup_header\"\nmsgstr \"\"\n\nmsgid \"teacher_welcome\"\nmsgstr \"\"\n\nmsgid \"teachers\"\nmsgstr \"\"\n\nmsgid \"template_code\"\nmsgstr \"\"\n\nmsgid \"this_turns_in_assignment\"\nmsgstr \"\"\n\nmsgid \"title\"\nmsgstr \"\"\n\nmsgid \"title_admin\"\nmsgstr \"\"\n\nmsgid \"title_class-overview\"\nmsgstr \"\"\n\nmsgid \"title_customize-adventure\"\nmsgstr \"\"\n\nmsgid \"title_customize-class\"\nmsgstr \"\"\n\nmsgid \"title_explore\"\nmsgstr \"\"\n\nmsgid \"title_for-teacher\"\nmsgstr \"\"\n\nmsgid \"title_join-class\"\nmsgstr \"\"\n\nmsgid \"title_learn-more\"\nmsgstr \"\"\n\nmsgid \"title_login\"\nmsgstr \"\"\n\nmsgid \"title_my-profile\"\nmsgstr \"\"\n\nmsgid \"title_privacy\"\nmsgstr \"\"\n\nmsgid \"title_programs\"\nmsgstr \"\"\n\nmsgid \"title_public-adventures\"\nmsgstr \"\"\n\nmsgid \"title_recover\"\nmsgstr \"\"\n\nmsgid \"title_reset\"\nmsgstr \"\"\n\nmsgid \"title_signup\"\nmsgstr \"\"\n\nmsgid \"title_start\"\nmsgstr \"\"\n\nmsgid \"title_view-adventure\"\nmsgstr \"\"\n\nmsgid \"token_invalid\"\nmsgstr \"\"\n\nmsgid \"too_many_accounts\"\nmsgstr \"\"\n\nmsgid \"tooltip_level_locked\"\nmsgstr \"\"\n\nmsgid \"translate_error\"\nmsgstr \"\"\n\nmsgid \"translating_hedy\"\nmsgstr \"\"\n\nmsgid \"translator\"\nmsgstr \"\"\n\nmsgid \"turned_into_teacher\"\nmsgstr \"\"\n\nmsgid \"tutorial\"\nmsgstr \"\"\n\nmsgid \"tutorial_code_snippet\"\nmsgstr \"\"\n\nmsgid \"tutorial_message_not_found\"\nmsgstr \"\"\n\nmsgid \"tutorial_title_not_found\"\nmsgstr \"\"\n\nmsgid \"unauthorized\"\nmsgstr \"\"\n\nmsgid \"unfavourite_confirm\"\nmsgstr \"\"\n\nmsgid \"unfavourite_success\"\nmsgstr \"\"\n\nmsgid \"unknown_variable_role\"\nmsgstr \"\"\n\nmsgid \"unlock_thresholds\"\nmsgstr \"\"\n\nmsgid \"unsaved_class_changes\"\nmsgstr \"\"\n\nmsgid \"unsubmit_program\"\nmsgstr \"\"\n\nmsgid \"unsubmit_warning\"\nmsgstr \"\"\n\nmsgid \"unsubmitted\"\nmsgstr \"\"\n\nmsgid \"update_adventure_prompt\"\nmsgstr \"\"\n\nmsgid \"update_public\"\nmsgstr \"\"\n\nmsgid \"updating_indicator\"\nmsgstr \"\"\n\nmsgid \"use_custom_passwords\"\nmsgstr \"\"\n\nmsgid \"use_generated_passwords\"\nmsgstr \"\"\n\nmsgid \"use_of_blanks_exception\"\nmsgstr \"\"\n\nmsgid \"use_of_nested_functions_exception\"\nmsgstr \"\"\n\nmsgid \"used_in\"\nmsgstr \"\"\n\nmsgid \"user\"\nmsgstr \"\"\n\nmsgid \"user_inexistent\"\nmsgstr \"\"\n\nmsgid \"user_not_private\"\nmsgstr \"\"\n\nmsgid \"username\"\nmsgstr \"\"\n\nmsgid \"username_contains_invalid_symbol\"\nmsgstr \"\"\n\nmsgid \"username_contains_separator\"\nmsgstr \"\"\n\nmsgid \"username_empty\"\nmsgstr \"\"\n\nmsgid \"username_invalid\"\nmsgstr \"\"\n\nmsgid \"username_special\"\nmsgstr \"\"\n\nmsgid \"username_three\"\nmsgstr \"\"\n\nmsgid \"usernames_too_short\"\nmsgstr \"\"\n\nmsgid \"usernames_unavailable\"\nmsgstr \"\"\n\nmsgid \"value\"\nmsgstr \"\"\n\nmsgid \"view_adventures\"\nmsgstr \"\"\n\nmsgid \"view_classes\"\nmsgstr \"\"\n\nmsgid \"view_program\"\nmsgstr \"\"\n\nmsgid \"view_slides\"\nmsgstr \"\"\n\nmsgid \"waiting_for_submit\"\nmsgstr \"\"\n\nmsgid \"walker_variable_role\"\nmsgstr \"\"\n\nmsgid \"website\"\nmsgstr \"\"\n\nmsgid \"what_is_your_role\"\nmsgstr \"\"\n\nmsgid \"what_should_my_code_do\"\nmsgstr \"\"\n\nmsgid \"workbook_circle_question_text\"\nmsgstr \"\"\n\nmsgid \"workbook_circle_question_title\"\nmsgstr \"\"\n\nmsgid \"workbook_define_question_text\"\nmsgstr \"\"\n\nmsgid \"workbook_define_question_title\"\nmsgstr \"\"\n\nmsgid \"workbook_input_question_text\"\nmsgstr \"\"\n\nmsgid \"workbook_input_question_title\"\nmsgstr \"\"\n\nmsgid \"workbook_multiple_choice_question_text\"\nmsgstr \"\"\n\nmsgid \"workbook_multiple_choice_question_title\"\nmsgstr \"\"\n\nmsgid \"workbook_open_question_title\"\nmsgstr \"\"\n\nmsgid \"workbook_output_question_text\"\nmsgstr \"\"\n\nmsgid \"workbook_output_question_title\"\nmsgstr \"\"\n\nmsgid \"year_invalid\"\nmsgstr \"\"\n\nmsgid \"yes\"\nmsgstr \"\"\n\nmsgid \"your_personal_text\"\nmsgstr \"\"\n\nmsgid \"your_program\"\nmsgstr \"\"\n\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 586.142578125,
          "content": "{\n  \"name\": \"hedy\",\n  \"version\": \"0.0.1\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"hedy\",\n      \"version\": \"0.0.1\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-build-classic\": \"^43.1.1\",\n        \"@ckeditor/ckeditor5-code-block\": \"^43.1.1\",\n        \"@codemirror/commands\": \"^6.2.5\",\n        \"@codemirror/state\": \"^6.4.0\",\n        \"@codemirror/theme-one-dark\": \"^6.1.2\",\n        \"@codemirror/view\": \"^6.22.1\",\n        \"@istanbuljs/nyc-config-typescript\": \"^1.0.2\",\n        \"@lezer/generator\": \"^1.7.1\",\n        \"@lezer/highlight\": \"^1.2.0\",\n        \"@lezer/lr\": \"^1.4.2\",\n        \"@types/dompurify\": \"^2.3.3\",\n        \"@types/jqueryui\": \"^1.12.16\",\n        \"autoprefixer\": \"^10.4.2\",\n        \"chai-colors\": \"^1.0.1\",\n        \"chart.js\": \"^4.4.2\",\n        \"codemirror\": \"^6.0.1\",\n        \"cypress-real-events\": \"^1.12.0\",\n        \"dompurify\": \"^2.5.4\",\n        \"istanbul-lib-coverage\": \"^3.2.0\",\n        \"jquery-ui-dist\": \"^1.13.1\",\n        \"jszip\": \"^3.10.1\",\n        \"postcss\": \"^8.4.31\",\n        \"sortablejs\": \"^1.15.0\",\n        \"source-map-support\": \"^0.5.21\",\n        \"tone\": \"^14.7.77\",\n        \"ts-node\": \"^10.9.1\",\n        \"tw-elements\": \"^1.0.0\"\n      },\n      \"devDependencies\": {\n        \"@cypress/code-coverage\": \"^3.10.0\",\n        \"@types/ace\": \"^0.0.47\",\n        \"@types/jquery\": \"^3.5.6\",\n        \"@types/sortablejs\": \"^1.15.1\",\n        \"cypress\": \"^13.17.0\",\n        \"esbuild\": \"^0.13.15\",\n        \"jqueryui\": \"^1.11.1\",\n        \"minify\": \"^7.0.1\",\n        \"nyc\": \"^15.1.0\",\n        \"tailwindcss\": \"^3.0.13\",\n        \"typescript\": \"^5.0.0\",\n        \"yaml\": \"2.2.2\"\n      }\n    },\n    \"node_modules/@ampproject/remapping\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.0.tgz\",\n      \"integrity\": \"sha512-qRmjj8nj9qmLTQXXmaR1cck3UXSRMPrbsLJAasZpF+t3riI71BXed5ebIOYwQntykeZuhjsdweEc9BxH5Jc26w==\",\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.1.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@ampproject/remapping/node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz\",\n      \"integrity\": \"sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==\",\n      \"dependencies\": {\n        \"@jridgewell/set-array\": \"^1.0.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.22.13\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.22.13.tgz\",\n      \"integrity\": \"sha512-XktuhWlJ5g+3TJXc5upd9Ks1HutSArik6jf2eAjYFyIOf4ej3RN+184cZbzDvbPnuTJIUhPKKJE3cIsYTiAT3w==\",\n      \"dependencies\": {\n        \"@babel/highlight\": \"^7.22.13\",\n        \"chalk\": \"^2.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\"\n    },\n    \"node_modules/@babel/code-frame/node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/compat-data\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.21.0.tgz\",\n      \"integrity\": \"sha512-gMuZsmsgxk/ENC3O/fRw5QY8A9/uxQbbCEypnLIiYYc/qVJtEV7ouxC3EllIIwNzMqAQee5tanFabWsUOutS7g==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/core\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.21.0.tgz\",\n      \"integrity\": \"sha512-PuxUbxcW6ZYe656yL3EAhpy7qXKq0DmYsrJLpbB8XrsCP9Nm+XCg9XFMb5vIDliPD7+U/+M+QJlH17XOcB7eXA==\",\n      \"dependencies\": {\n        \"@ampproject/remapping\": \"^2.2.0\",\n        \"@babel/code-frame\": \"^7.18.6\",\n        \"@babel/generator\": \"^7.21.0\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-module-transforms\": \"^7.21.0\",\n        \"@babel/helpers\": \"^7.21.0\",\n        \"@babel/parser\": \"^7.21.0\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.0\",\n        \"@babel/types\": \"^7.21.0\",\n        \"convert-source-map\": \"^1.7.0\",\n        \"debug\": \"^4.1.0\",\n        \"gensync\": \"^1.0.0-beta.2\",\n        \"json5\": \"^2.2.2\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/babel\"\n      }\n    },\n    \"node_modules/@babel/core/node_modules/json5\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n      \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\",\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/@babel/generator\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.23.0.tgz\",\n      \"integrity\": \"sha512-lN85QRR+5IbYrMWM6Y4pE/noaQtg4pNiqeNGX60eqOfo6gtEj6uw/JagelB8vVztSd7R6M5n1+PQkDbHbBRU4g==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.23.0\",\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"@jridgewell/trace-mapping\": \"^0.3.17\",\n        \"jsesc\": \"^2.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-annotate-as-pure\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz\",\n      \"integrity\": \"sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-builder-binary-assignment-operator-visitor\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.18.9.tgz\",\n      \"integrity\": \"sha512-yFQ0YCHoIqarl8BCRwBL8ulYUaZpz3bNsA7oFepAzee+8/+ImtADXNOmO5vJvsPff3qi+hvpkY/NYBTrBQgdNw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-explode-assignable-expression\": \"^7.18.6\",\n        \"@babel/types\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.20.7.tgz\",\n      \"integrity\": \"sha512-4tGORmfQcrc+bvrjb5y3dG9Mx1IOZjsHqQVUz7XCNHO+iTmqxWnVg3KRygjGmpRLJGdQSKuvFinbIb0CnZwHAQ==\",\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.20.5\",\n        \"@babel/helper-validator-option\": \"^7.18.6\",\n        \"browserslist\": \"^4.21.3\",\n        \"lru-cache\": \"^5.1.1\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets/node_modules/lru-cache\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz\",\n      \"integrity\": \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\",\n      \"dependencies\": {\n        \"yallist\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets/node_modules/yallist\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz\",\n      \"integrity\": \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\"\n    },\n    \"node_modules/@babel/helper-create-class-features-plugin\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.21.0.tgz\",\n      \"integrity\": \"sha512-Q8wNiMIdwsv5la5SPxNYzzkPnjgC0Sy0i7jLkVOCdllu/xcVNkr3TeZzbHBJrj+XXRqzX5uCyCoV9eu6xUG7KQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.21.0\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/helper-replace-supers\": \"^7.20.7\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-create-regexp-features-plugin\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.21.0.tgz\",\n      \"integrity\": \"sha512-N+LaFW/auRSWdx7SHD/HiARwXQju1vXTW4fKr4u5SgBUTm51OKEjKgj+cs00ggW3kEvNqwErnlwuq7Y3xBe4eg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"regexpu-core\": \"^5.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-define-polyfill-provider\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.3.3.tgz\",\n      \"integrity\": \"sha512-z5aQKU4IzbqCC1XH0nAqfsFLMVSo22SBKUc0BxGrLkolTdPTructy0ToNnlO2zA4j9Q/7pjMZf0DSY+DSTYzww==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-compilation-targets\": \"^7.17.7\",\n        \"@babel/helper-plugin-utils\": \"^7.16.7\",\n        \"debug\": \"^4.1.1\",\n        \"lodash.debounce\": \"^4.0.8\",\n        \"resolve\": \"^1.14.2\",\n        \"semver\": \"^6.1.2\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.4.0-0\"\n      }\n    },\n    \"node_modules/@babel/helper-environment-visitor\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.22.20.tgz\",\n      \"integrity\": \"sha512-zfedSIzFhat/gFhWfHtgWvlec0nqB9YEIVrpuwjruLlXfUSnA8cJB0miHKwqDnQ7d32aKo2xt88/xZptwxbfhA==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-explode-assignable-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-eyAYAsQmB80jNfg4baAtLeWAQHfHFiR483rzFK+BhETlGZaQC9bsfrugfXDCbRHLQbIA7U5NxhhOxN7p/dWIcg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-function-name\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.23.0.tgz\",\n      \"integrity\": \"sha512-OErEqsrxjZTJciZ4Oo+eoZqeW9UIiOcuYKRJA4ZAgV9myA+pOXhhmpfNCKjEH/auVfEYVFJ6y1Tc4r0eIApqiw==\",\n      \"dependencies\": {\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/types\": \"^7.23.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-hoist-variables\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.22.5.tgz\",\n      \"integrity\": \"sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-member-expression-to-functions\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.21.0.tgz\",\n      \"integrity\": \"sha512-Muu8cdZwNN6mRRNG6lAYErJ5X3bRevgYR2O8wN0yn7jJSnGDu6eG59RfT29JHxGUovyfrh6Pj0XzmR7drNVL3Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.21.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-imports\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.18.6.tgz\",\n      \"integrity\": \"sha512-0NFvs3VkuSYbFi1x2Vd6tKrywq+z/cLeYC/RJNFrIX/30Bf5aiGYbtvGXolEktzJH8o5E5KJ3tT+nkxuuZFVlA==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-transforms\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.21.0.tgz\",\n      \"integrity\": \"sha512-eD/JQ21IG2i1FraJnTMbUarAUkA7G988ofehG5MDCRXaUU91rEBJuCeSoou2Sk1y4RbLYXzqEg1QLwEmRU4qcQ==\",\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-module-imports\": \"^7.18.6\",\n        \"@babel/helper-simple-access\": \"^7.20.2\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.0\",\n        \"@babel/types\": \"^7.21.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-optimise-call-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-plugin-utils\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.20.2.tgz\",\n      \"integrity\": \"sha512-8RvlJG2mj4huQ4pZ+rU9lqKi9ZKiRmuvGuM2HlWmkmgOhbs6zEAw6IEiJ5cQqGbDzGZOhwuOQNtZMi/ENLjZoQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-remap-async-to-generator\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.18.9.tgz\",\n      \"integrity\": \"sha512-dI7q50YKd8BAv3VEfgg7PS7yD3Rtbi2J1XMXaalXO0W0164hYLnh8zpjRS0mte9MfVp/tltvr/cfdXPvJr1opA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-wrap-function\": \"^7.18.9\",\n        \"@babel/types\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-replace-supers\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.20.7.tgz\",\n      \"integrity\": \"sha512-vujDMtB6LVfNW13jhlCrp48QNslK6JXi7lQG736HVbHz/mbf4Dc7tIRh1Xf5C0rF7BP8iiSxGMCmY6Ci1ven3A==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.20.7\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-simple-access\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.20.2.tgz\",\n      \"integrity\": \"sha512-+0woI/WPq59IrqDYbVGfshjT5Dmk/nnbdpcF8SnMhhXObpTq2KNBdLFRFrkVdbDOyUmHBCxzm5FHV1rACIkIbA==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-skip-transparent-expression-wrappers\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.20.0.tgz\",\n      \"integrity\": \"sha512-5y1JYeNKfvnT8sZcK9DVRtpTbGiomYIHviSP3OQWmDPU3DeH4a1ZlT/N2lyQ5P8egjcRaT/Y9aNqUxK0WsnIIg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.20.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-split-export-declaration\": {\n      \"version\": \"7.22.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.6.tgz\",\n      \"integrity\": \"sha512-AsUnxuLhRYsisFiaJwvp1QF+I3KjD5FOxut14q/GzovUe6orHLesW2C7d754kRm53h5gqrz6sFl6sxc4BVtE/g==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-string-parser\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.22.5.tgz\",\n      \"integrity\": \"sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz\",\n      \"integrity\": \"sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-option\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.21.0.tgz\",\n      \"integrity\": \"sha512-rmL/B8/f0mKS2baE9ZpyTcTavvEuWhTTW8amjzXNvYG4AwBsqTLikfXsEofsJEfKHf+HQVQbFOHy6o+4cnC/fQ==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-wrap-function\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.20.5.tgz\",\n      \"integrity\": \"sha512-bYMxIWK5mh+TgXGVqAtnu5Yn1un+v8DDZtqyzKRLUzrh70Eal2O3aZ7aPYiMADO4uKlkzOiRiZ6GX5q3qxvW9Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-function-name\": \"^7.19.0\",\n        \"@babel/template\": \"^7.18.10\",\n        \"@babel/traverse\": \"^7.20.5\",\n        \"@babel/types\": \"^7.20.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helpers\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.21.0.tgz\",\n      \"integrity\": \"sha512-XXve0CBtOW0pd7MRzzmoyuSj0e3SEzj8pgyFxnTT1NJZL38BD1MK7yYrm8yefRPIDvNNe14xR4FdbHwpInD4rA==\",\n      \"dependencies\": {\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.0\",\n        \"@babel/types\": \"^7.21.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.22.20.tgz\",\n      \"integrity\": \"sha512-dkdMCN3py0+ksCgYmGG8jKeGA/8Tk+gJwSYYlFGxG5lmhfKNoAy004YpLxpS1W2J8m/EK2Ew+yOs9pVRwO89mg==\",\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"chalk\": \"^2.4.2\",\n        \"js-tokens\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\"\n    },\n    \"node_modules/@babel/highlight/node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/parser\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.23.0.tgz\",\n      \"integrity\": \"sha512-vvPKKdMemU85V9WE/l5wZEmImpCtLqbnTvqDS2U1fJ96KrxoW7KrXhNsNCblQlg8Ck4b85yxdTyelsMUgFUXiw==\",\n      \"bin\": {\n        \"parser\": \"bin/babel-parser.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-Dgxsyg54Fx1d4Nge8UnvTrED63vrwOdPmyvPzlNN/boaliRP54pm3pGzZD1SJUwrBA+Cs/xdG8kXX6Mn/RfISQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.20.7.tgz\",\n      \"integrity\": \"sha512-sbr9+wNE5aXMBBFBICk01tt7sBf2Oc9ikRFEcem/ZORup9IMUdNhW7/wVLEbbtlWOsEubJet46mHAL2C8+2jKQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/plugin-proposal-optional-chaining\": \"^7.20.7\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.13.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-async-generator-functions\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.20.7.tgz\",\n      \"integrity\": \"sha512-xMbiLsn/8RK7Wq7VeVytytS2L6qE69bXPB10YCmMdDZbKF4okCqY74pI/jJQ/8U0b/F6NrT2+14b8/P9/3AMGA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.18.9\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-class-properties\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.18.6.tgz\",\n      \"integrity\": \"sha512-cumfXOF0+nzZrrN8Rf0t7M+tF6sZc7vhQwYQck9q1/5w2OExlD+b4v4RpMJFaV1Z7WcDRgO6FqvxqxGlwo+RHQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-class-static-block\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-static-block/-/plugin-proposal-class-static-block-7.21.0.tgz\",\n      \"integrity\": \"sha512-XP5G9MWNUskFuP30IfFSEFB0Z6HzLIUcjYM4bYOPHXl7eiJ9HFv8tWj6TXTN5QODiEhDZAeI4hLok2iHFFV4hw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.21.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.12.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-dynamic-import\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.18.6.tgz\",\n      \"integrity\": \"sha512-1auuwmK+Rz13SJj36R+jqFPMJWyKEDd7lLSdOj4oJK0UTgGueSAtkrCvz9ewmgyU/P941Rv2fQwZJN8s6QruXw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-export-namespace-from\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-export-namespace-from/-/plugin-proposal-export-namespace-from-7.18.9.tgz\",\n      \"integrity\": \"sha512-k1NtHyOMvlDDFeb9G5PhUXuGj8m/wiwojgQVEhJ/fsVsMCpLyOP4h0uGEjYJKrRI+EVPlb5Jk+Gt9P97lOGwtA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-json-strings\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.18.6.tgz\",\n      \"integrity\": \"sha512-lr1peyn9kOdbYc0xr0OdHTZ5FMqS6Di+H0Fz2I/JwMzGmzJETNeOFq2pBySw6X/KFL5EWDjlJuMsUGRFb8fQgQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-logical-assignment-operators\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-logical-assignment-operators/-/plugin-proposal-logical-assignment-operators-7.20.7.tgz\",\n      \"integrity\": \"sha512-y7C7cZgpMIjWlKE5T7eJwp+tnRYM89HmRvWM5EQuB5BoHEONjmQ8lSNmBUwOyy/GFRsohJED51YBF79hE1djug==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-nullish-coalescing-operator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.18.6.tgz\",\n      \"integrity\": \"sha512-wQxQzxYeJqHcfppzBDnm1yAY0jSRkUXR2z8RePZYrKwMKgMlE8+Z6LUno+bd6LvbGh8Gltvy74+9pIYkr+XkKA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-numeric-separator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.18.6.tgz\",\n      \"integrity\": \"sha512-ozlZFogPqoLm8WBr5Z8UckIoE4YQ5KESVcNudyXOR8uqIkliTEgJ3RoketfG6pmzLdeZF0H/wjE9/cCEitBl7Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-object-rest-spread\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.20.7.tgz\",\n      \"integrity\": \"sha512-d2S98yCiLxDVmBmE8UjGcfPvNEUbA1U5q5WxaWFUGRzJSVAZqm5W6MbPct0jxnegUZ0niLeNX+IOzEs7wYg9Dg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.20.5\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-transform-parameters\": \"^7.20.7\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-optional-catch-binding\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.18.6.tgz\",\n      \"integrity\": \"sha512-Q40HEhs9DJQyaZfUjjn6vE8Cv4GmMHCYuMGIWUnlxH6400VGxOuwWsPt4FxXxJkC/5eOzgn0z21M9gMT4MOhbw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-optional-chaining\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.21.0.tgz\",\n      \"integrity\": \"sha512-p4zeefM72gpmEe2fkUr/OnOXpWEf8nAgk7ZYVqqfFiyIG7oFfVZcCrU64hWn5xp4tQ9LkV4bTIa5rD0KANpKNA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-private-methods\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz\",\n      \"integrity\": \"sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-private-property-in-object\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0.tgz\",\n      \"integrity\": \"sha512-ha4zfehbJjc5MmXBlHec1igel5TJXXLDDRbuJ4+XT2TJcyD9/V1919BA8gMvsdHcNMBy4WBUBiRb3nw/EQUtBw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-create-class-features-plugin\": \"^7.21.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-unicode-property-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-2BShG/d5yoZyXZfVePH91urL5wTG6ASZU9M4o03lKK8u8UW1y08OMttBSOADTcJrnPMpvDXRG3G8fyLh4ovs8w==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-async-generators\": {\n      \"version\": \"7.8.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz\",\n      \"integrity\": \"sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-class-properties\": {\n      \"version\": \"7.12.13\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz\",\n      \"integrity\": \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.12.13\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-class-static-block\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz\",\n      \"integrity\": \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-dynamic-import\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz\",\n      \"integrity\": \"sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-export-namespace-from\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz\",\n      \"integrity\": \"sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.3\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-import-assertions\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.20.0.tgz\",\n      \"integrity\": \"sha512-IUh1vakzNoWalR8ch/areW7qFopR2AEw03JlG7BbrDqmQ4X3q9uuipQwSGrUn7oGiemKjtSLDhNtQHzMHr1JdQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.19.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-json-strings\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz\",\n      \"integrity\": \"sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-logical-assignment-operators\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz\",\n      \"integrity\": \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-nullish-coalescing-operator\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz\",\n      \"integrity\": \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-numeric-separator\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz\",\n      \"integrity\": \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-object-rest-spread\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz\",\n      \"integrity\": \"sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-catch-binding\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz\",\n      \"integrity\": \"sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-chaining\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz\",\n      \"integrity\": \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-private-property-in-object\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz\",\n      \"integrity\": \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-top-level-await\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz\",\n      \"integrity\": \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-arrow-functions\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.20.7.tgz\",\n      \"integrity\": \"sha512-3poA5E7dzDomxj9WXWwuD6A5F3kc7VXwIJO+E+J8qtDtS+pXPAhrgEyh+9GBwBgPq1Z+bB+/JD60lp5jsN7JPQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-async-to-generator\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.20.7.tgz\",\n      \"integrity\": \"sha512-Uo5gwHPT9vgnSXQxqGtpdufUiWp96gk7yiP4Mp5bm1QMkEmLXBO7PAGYbKoJ6DhAwiNkcHFBol/x5zZZkL/t0Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-imports\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-block-scoped-functions\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.18.6.tgz\",\n      \"integrity\": \"sha512-ExUcOqpPWnliRcPqves5HJcJOvHvIIWfuS4sroBUenPuMdmW+SMHDakmtS7qOo13sVppmUijqeTv7qqGsvURpQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-block-scoping\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.21.0.tgz\",\n      \"integrity\": \"sha512-Mdrbunoh9SxwFZapeHVrwFmri16+oYotcZysSzhNIVDwIAb1UV+kvnxULSYq9J3/q5MDG+4X6w8QVgD1zhBXNQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-classes\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.21.0.tgz\",\n      \"integrity\": \"sha512-RZhbYTCEUAe6ntPehC4hlslPWosNHDox+vAs4On/mCLRLfoDVHf6hVEd7kuxr1RnHwJmxFfUM3cZiZRmPxJPXQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-replace-supers\": \"^7.20.7\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"globals\": \"^11.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-computed-properties\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.20.7.tgz\",\n      \"integrity\": \"sha512-Lz7MvBK6DTjElHAmfu6bfANzKcxpyNPeYBGEafyA6E5HtRpjpZwU+u7Qrgz/2OR0z+5TvKYbPdphfSaAcZBrYQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/template\": \"^7.20.7\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-destructuring\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.20.7.tgz\",\n      \"integrity\": \"sha512-Xwg403sRrZb81IVB79ZPqNQME23yhugYVqgTxAhT99h485F4f+GMELFhhOsscDUB7HCswepKeCKLn/GZvUKoBA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-dotall-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-6S3jpun1eEbAxq7TdjLotAsl4WpQI9DxfkycRcKrjhQYzU87qpXdknpBg/e+TdcMehqGnLFi7tnFUBR02Vq6wg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-duplicate-keys\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.18.9.tgz\",\n      \"integrity\": \"sha512-d2bmXCtZXYc59/0SanQKbiWINadaJXqtvIQIzd4+hNwkWBgyCd5F/2t1kXoUdvPMrxzPvhK6EMQRROxsue+mfw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-exponentiation-operator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.18.6.tgz\",\n      \"integrity\": \"sha512-wzEtc0+2c88FVR34aQmiz56dxEkxr2g8DQb/KfaFa1JYXOFVsbhvAonFN6PwVWj++fKmku8NP80plJ5Et4wqHw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-builder-binary-assignment-operator-visitor\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-for-of\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.21.0.tgz\",\n      \"integrity\": \"sha512-LlUYlydgDkKpIY7mcBWvyPPmMcOphEyYA27Ef4xpbh1IiDNLr0kZsos2nf92vz3IccvJI25QUwp86Eo5s6HmBQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-function-name\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.18.9.tgz\",\n      \"integrity\": \"sha512-WvIBoRPaJQ5yVHzcnJFor7oS5Ls0PYixlTYE63lCj2RtdQEl15M68FXQlxnG6wdraJIXRdR7KI+hQ7q/9QjrCQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-compilation-targets\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.18.9\",\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-literals\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.18.9.tgz\",\n      \"integrity\": \"sha512-IFQDSRoTPnrAIrI5zoZv73IFeZu2dhu6irxQjY9rNjTT53VmKg9fenjvoiOWOkJ6mm4jKVPtdMzBY98Fp4Z4cg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-member-expression-literals\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.18.6.tgz\",\n      \"integrity\": \"sha512-qSF1ihLGO3q+/g48k85tUjD033C29TNTVB2paCwZPVmOsjn9pClvYYrM2VeJpBY2bcNkuny0YUyTNRyRxJ54KA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-amd\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.20.11.tgz\",\n      \"integrity\": \"sha512-NuzCt5IIYOW0O30UvqktzHYR2ud5bOWbY0yaxWZ6G+aFzOMJvrs5YHNikrbdaT15+KNO31nPOy5Fim3ku6Zb5g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-commonjs\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.20.11.tgz\",\n      \"integrity\": \"sha512-S8e1f7WQ7cimJQ51JkAaDrEtohVEitXjgCGAS2N8S31Y42E+kWwfSz83LYz57QdBm7q9diARVqanIaH2oVgQnw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-simple-access\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-systemjs\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.20.11.tgz\",\n      \"integrity\": \"sha512-vVu5g9BPQKSFEmvt2TA4Da5N+QVS66EX21d8uoOihC+OCpUoGvzVsXeqFdtAEfVa5BILAeFt+U7yVmLbQnAJmw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-hoist-variables\": \"^7.18.6\",\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-umd\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.18.6.tgz\",\n      \"integrity\": \"sha512-dcegErExVeXcRqNtkRU/z8WlBLnvD4MRnHgNs3MytRO1Mn1sHRyhbcpYbVMGclAqOjdW+9cfkdZno9dFdfKLfQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-named-capturing-groups-regex\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.20.5.tgz\",\n      \"integrity\": \"sha512-mOW4tTzi5iTLnw+78iEq3gr8Aoq4WNRGpmSlrogqaiCBoR1HFhpU4JkpQFOHfeYx3ReVIFWOQJS4aZBRvuZ6mA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.20.5\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-new-target\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.18.6.tgz\",\n      \"integrity\": \"sha512-DjwFA/9Iu3Z+vrAn+8pBUGcjhxKguSMlsFqeCKbhb9BAV756v0krzVK04CRDi/4aqmk8BsHb4a/gFcaA5joXRw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-object-super\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.18.6.tgz\",\n      \"integrity\": \"sha512-uvGz6zk+pZoS1aTZrOvrbj6Pp/kK2mp45t2B+bTDre2UgsZZ8EZLSJtUg7m/no0zOJUWgFONpB7Zv9W2tSaFlA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/helper-replace-supers\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-parameters\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.20.7.tgz\",\n      \"integrity\": \"sha512-WiWBIkeHKVOSYPO0pWkxGPfKeWrCJyD3NJ53+Lrp/QMSZbsVPovrVl2aWZ19D/LTVnaDv5Ap7GJ/B2CTOZdrfA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-property-literals\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.18.6.tgz\",\n      \"integrity\": \"sha512-cYcs6qlgafTud3PAzrrRNbQtfpQ8+y/+M5tKmksS9+M1ckbH6kzY8MrexEM9mcA6JDsukE19iIRvAyYl463sMg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-regenerator\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.20.5.tgz\",\n      \"integrity\": \"sha512-kW/oO7HPBtntbsahzQ0qSE3tFvkFwnbozz3NWFhLGqH75vLEg+sCGngLlhVkePlCs3Jv0dBBHDzCHxNiFAQKCQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"regenerator-transform\": \"^0.15.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-reserved-words\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.18.6.tgz\",\n      \"integrity\": \"sha512-oX/4MyMoypzHjFrT1CdivfKZ+XvIPMFXwwxHp/r0Ddy2Vuomt4HDFGmft1TAY2yiTKiNSsh3kjBAzcM8kSdsjA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-shorthand-properties\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.18.6.tgz\",\n      \"integrity\": \"sha512-eCLXXJqv8okzg86ywZJbRn19YJHU4XUa55oz2wbHhaQVn/MM+XhukiT7SYqp/7o00dg52Rj51Ny+Ecw4oyoygw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-spread\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.20.7.tgz\",\n      \"integrity\": \"sha512-ewBbHQ+1U/VnH1fxltbJqDeWBU1oNLG8Dj11uIv3xVf7nrQu0bPGe5Rf716r7K5Qz+SqtAOVswoVunoiBtGhxw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-sticky-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-kfiDrDQ+PBsQDO85yj1icueWMfGfJFKN1KCkndygtu/C9+XUfydLC8Iv5UYJqRwy4zk8EcplRxEOeLyjq1gm6Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-template-literals\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.18.9.tgz\",\n      \"integrity\": \"sha512-S8cOWfT82gTezpYOiVaGHrCbhlHgKhQt8XH5ES46P2XWmX92yisoZywf5km75wv5sYcXDUCLMmMxOLCtthDgMA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-typeof-symbol\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.18.9.tgz\",\n      \"integrity\": \"sha512-SRfwTtF11G2aemAZWivL7PD+C9z52v9EvMqH9BuYbabyPuKUvSWks3oCg6041pT925L4zVFqaVBeECwsmlguEw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-unicode-escapes\": {\n      \"version\": \"7.18.10\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.18.10.tgz\",\n      \"integrity\": \"sha512-kKAdAI+YzPgGY/ftStBFXTI1LZFju38rYThnfMykS+IXy8BVx+res7s2fxf1l8I35DV2T97ezo6+SGrXz6B3iQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-unicode-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-gE7A6Lt7YLnNOL3Pb9BNeZvi+d8l7tcRrG4+pwJjK9hD2xX4mEvjlQW60G9EEmfXVYRPv9VRQcyegIVHCql/AA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/preset-env\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.20.2.tgz\",\n      \"integrity\": \"sha512-1G0efQEWR1EHkKvKHqbG+IN/QdgwfByUpM5V5QroDzGV2t3S/WXNQd693cHiHTlCFMpr9B6FkPFXDA2lQcKoDg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.20.1\",\n        \"@babel/helper-compilation-targets\": \"^7.20.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-validator-option\": \"^7.18.6\",\n        \"@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": \"^7.18.6\",\n        \"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": \"^7.18.9\",\n        \"@babel/plugin-proposal-async-generator-functions\": \"^7.20.1\",\n        \"@babel/plugin-proposal-class-properties\": \"^7.18.6\",\n        \"@babel/plugin-proposal-class-static-block\": \"^7.18.6\",\n        \"@babel/plugin-proposal-dynamic-import\": \"^7.18.6\",\n        \"@babel/plugin-proposal-export-namespace-from\": \"^7.18.9\",\n        \"@babel/plugin-proposal-json-strings\": \"^7.18.6\",\n        \"@babel/plugin-proposal-logical-assignment-operators\": \"^7.18.9\",\n        \"@babel/plugin-proposal-nullish-coalescing-operator\": \"^7.18.6\",\n        \"@babel/plugin-proposal-numeric-separator\": \"^7.18.6\",\n        \"@babel/plugin-proposal-object-rest-spread\": \"^7.20.2\",\n        \"@babel/plugin-proposal-optional-catch-binding\": \"^7.18.6\",\n        \"@babel/plugin-proposal-optional-chaining\": \"^7.18.9\",\n        \"@babel/plugin-proposal-private-methods\": \"^7.18.6\",\n        \"@babel/plugin-proposal-private-property-in-object\": \"^7.18.6\",\n        \"@babel/plugin-proposal-unicode-property-regex\": \"^7.18.6\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n        \"@babel/plugin-syntax-class-properties\": \"^7.12.13\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\",\n        \"@babel/plugin-syntax-import-assertions\": \"^7.20.0\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\",\n        \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\",\n        \"@babel/plugin-transform-arrow-functions\": \"^7.18.6\",\n        \"@babel/plugin-transform-async-to-generator\": \"^7.18.6\",\n        \"@babel/plugin-transform-block-scoped-functions\": \"^7.18.6\",\n        \"@babel/plugin-transform-block-scoping\": \"^7.20.2\",\n        \"@babel/plugin-transform-classes\": \"^7.20.2\",\n        \"@babel/plugin-transform-computed-properties\": \"^7.18.9\",\n        \"@babel/plugin-transform-destructuring\": \"^7.20.2\",\n        \"@babel/plugin-transform-dotall-regex\": \"^7.18.6\",\n        \"@babel/plugin-transform-duplicate-keys\": \"^7.18.9\",\n        \"@babel/plugin-transform-exponentiation-operator\": \"^7.18.6\",\n        \"@babel/plugin-transform-for-of\": \"^7.18.8\",\n        \"@babel/plugin-transform-function-name\": \"^7.18.9\",\n        \"@babel/plugin-transform-literals\": \"^7.18.9\",\n        \"@babel/plugin-transform-member-expression-literals\": \"^7.18.6\",\n        \"@babel/plugin-transform-modules-amd\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-commonjs\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-systemjs\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-umd\": \"^7.18.6\",\n        \"@babel/plugin-transform-named-capturing-groups-regex\": \"^7.19.1\",\n        \"@babel/plugin-transform-new-target\": \"^7.18.6\",\n        \"@babel/plugin-transform-object-super\": \"^7.18.6\",\n        \"@babel/plugin-transform-parameters\": \"^7.20.1\",\n        \"@babel/plugin-transform-property-literals\": \"^7.18.6\",\n        \"@babel/plugin-transform-regenerator\": \"^7.18.6\",\n        \"@babel/plugin-transform-reserved-words\": \"^7.18.6\",\n        \"@babel/plugin-transform-shorthand-properties\": \"^7.18.6\",\n        \"@babel/plugin-transform-spread\": \"^7.19.0\",\n        \"@babel/plugin-transform-sticky-regex\": \"^7.18.6\",\n        \"@babel/plugin-transform-template-literals\": \"^7.18.9\",\n        \"@babel/plugin-transform-typeof-symbol\": \"^7.18.9\",\n        \"@babel/plugin-transform-unicode-escapes\": \"^7.18.10\",\n        \"@babel/plugin-transform-unicode-regex\": \"^7.18.6\",\n        \"@babel/preset-modules\": \"^0.1.5\",\n        \"@babel/types\": \"^7.20.2\",\n        \"babel-plugin-polyfill-corejs2\": \"^0.3.3\",\n        \"babel-plugin-polyfill-corejs3\": \"^0.6.0\",\n        \"babel-plugin-polyfill-regenerator\": \"^0.4.1\",\n        \"core-js-compat\": \"^3.25.1\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/preset-modules\": {\n      \"version\": \"0.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.5.tgz\",\n      \"integrity\": \"sha512-A57th6YRG7oR3cq/yt/Y84MvGgE0eJG2F1JLhKuyG+jFxEgrd/HAMJatiFtmOiZurz+0DkrvbheCLaV5f2JfjA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n        \"@babel/plugin-proposal-unicode-property-regex\": \"^7.4.4\",\n        \"@babel/plugin-transform-dotall-regex\": \"^7.4.4\",\n        \"@babel/types\": \"^7.4.4\",\n        \"esutils\": \"^2.0.2\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/regjsgen\": {\n      \"version\": \"0.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/regjsgen/-/regjsgen-0.8.0.tgz\",\n      \"integrity\": \"sha512-x/rqGMdzj+fWZvCOYForTghzbtqPDZ5gPwaoNGHdgDfF2QA/XZbCBp4Moo5scrkAMPhB7z26XM/AaHuIJdgauA==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.23.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.23.6.tgz\",\n      \"integrity\": \"sha512-zHd0eUrf5GZoOWVCXp6koAKQTfZV07eit6bGPmJgnZdnSAvvZee6zniW2XMF7Cmc4ISOOnPy3QaSiIJGJkVEDQ==\",\n      \"dependencies\": {\n        \"regenerator-runtime\": \"^0.14.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/template\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.22.15.tgz\",\n      \"integrity\": \"sha512-QPErUVm4uyJa60rkI73qneDacvdvzxshT3kksGqlGWYdOTIUOwJ7RDUL8sGqslY1uXWSL6xMFKEXDS3ox2uF0w==\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/parser\": \"^7.22.15\",\n        \"@babel/types\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/traverse\": {\n      \"version\": \"7.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.23.2.tgz\",\n      \"integrity\": \"sha512-azpe59SQ48qG6nu2CzcMLbxUudtN+dOM9kDbUqGq3HXUJRlo7i8fvPoxQUzYgLZ4cMVmuZgm8vvBpNeRhd6XSw==\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/generator\": \"^7.23.0\",\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-function-name\": \"^7.23.0\",\n        \"@babel/helper-hoist-variables\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"@babel/parser\": \"^7.23.0\",\n        \"@babel/types\": \"^7.23.0\",\n        \"debug\": \"^4.1.0\",\n        \"globals\": \"^11.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/types\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.23.0.tgz\",\n      \"integrity\": \"sha512-0oIyUfKoI3mSqMvsxBdclDwxXKXAUA8v/apZbc+iSyARYou1o8ZGDxbUYyLFoW2arqS2jDGqJuZvv1d/io1axg==\",\n      \"dependencies\": {\n        \"@babel/helper-string-parser\": \"^7.22.5\",\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"to-fast-properties\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-adapter-ckfinder\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-adapter-ckfinder/-/ckeditor5-adapter-ckfinder-43.1.1.tgz\",\n      \"integrity\": \"sha512-DCR98QdQKCYCQFT23CwR6PFLPLT3rlh89++hFIhUpykDz2pljEDC8uFNWjKY+b/5/P/jkTICLtt8+DlF8aN+/Q==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-alignment\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-alignment/-/ckeditor5-alignment-43.1.1.tgz\",\n      \"integrity\": \"sha512-mjQPDmfPgKbMQp8JCR7Vg7MpRax44tSrtyoofSl/oMKDh2bXtwEnMKJlv501scl95S8VN2Pfnxj5+31N89j0Xg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-autoformat\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-autoformat/-/ckeditor5-autoformat-43.1.1.tgz\",\n      \"integrity\": \"sha512-/NP29+d5y+AcffZEBJqH42Bj/M76OuBPG3DNEz9XEBbF9ADC9jqb2pYzDgiit/9VukNDtoLJjQ6HGxjdwzdLfg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-autosave\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-autosave/-/ckeditor5-autosave-43.1.1.tgz\",\n      \"integrity\": \"sha512-GYeEF0NL0KLS33lZ4Uc4R2hAofTH+EE/Pulzg1V0rSIPghLNULsvMRiqe6PnzYDKtD5et1YpaIZRp55DGzJ/gQ==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-basic-styles\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-basic-styles/-/ckeditor5-basic-styles-43.1.1.tgz\",\n      \"integrity\": \"sha512-xFfL6JaVkkNRnFET/ld6MGvbifFxJY8bv3zvAAlphXsCBxNDH9cZWzG605PF6SYTucCUXD4dtW0teLMmdzklaQ==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-block-quote\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-block-quote/-/ckeditor5-block-quote-43.1.1.tgz\",\n      \"integrity\": \"sha512-VYZlQisRptiiqVRnMVBcwc3yRilpSoFTKiMXTzrYukUZLhPL6fiWVeMe/N9ygtdtGp3oYF/rSNv9H/8e6nNVYw==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-build-classic\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-build-classic/-/ckeditor5-build-classic-43.1.1.tgz\",\n      \"integrity\": \"sha512-yCg+5u2ihdunYxieHsgHWACXbTMQZajy23wtGAuED7Tv+Uf41XPmBmQLoXSY43LyQOeSNvgEFdb6lUrl5Gi05w==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-adapter-ckfinder\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-autoformat\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-basic-styles\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-block-quote\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ckbox\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ckfinder\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-cloud-services\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-easy-image\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-classic\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-essentials\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-heading\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-image\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-indent\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-link\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-list\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-media-embed\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paragraph\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paste-from-office\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-table\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-ckbox\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-ckbox/-/ckeditor5-ckbox-43.1.1.tgz\",\n      \"integrity\": \"sha512-2suCDhe5HlutZz52iBXRaVAcht/E4wBdZsF6ZL+hELNuqvYM2PCb2/FZTtxQb50mDlWtJtLidRc49COAr0k1QA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"blurhash\": \"2.0.5\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-ckfinder\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-ckfinder/-/ckeditor5-ckfinder-43.1.1.tgz\",\n      \"integrity\": \"sha512-f5N9FtJTSRfEUaJqr0LpekoSAIMktyiwbWeGQhbYseCCV0+Qsw6W/wzuWMFNe5GELg0R/0tG0H59/2m1wTFFbw==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-clipboard\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-clipboard/-/ckeditor5-clipboard-43.1.1.tgz\",\n      \"integrity\": \"sha512-QF0zyq/NhLFm8V/VBBn+RWjiaAd5eyeCKz7zQKyBcSW27IaazAnG0+HHZeydZkT4vntad71t6bi6ZWzL/MJxwg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-cloud-services\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-cloud-services/-/ckeditor5-cloud-services-43.1.1.tgz\",\n      \"integrity\": \"sha512-YprETdoRcu/2yxVCuoOrY+f4G0Qus0hIMfMuRZ9jbFWDDwZgHiXrFXvE0W9o9N51rKffWnTbs0GljsaXVit1+g==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-code-block\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-code-block/-/ckeditor5-code-block-43.1.1.tgz\",\n      \"integrity\": \"sha512-Nil+MNeirroHop5Onj23L2v17Jokgc6wvJYqzH+85OvlrJeEsfFauxlW+S6TI3ypZT04yLJ0zdpaZ/FYC5+NxA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-core\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-core/-/ckeditor5-core-43.1.1.tgz\",\n      \"integrity\": \"sha512-qtbnD+24dK+ANVUgs+unZ0qX64NA0eG6k344q8fhXuHdPRKk55BDkjdmpv/Fh9Y0beo9EDqUPE/P7agv8lucBg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-watchdog\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-easy-image\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-easy-image/-/ckeditor5-easy-image-43.1.1.tgz\",\n      \"integrity\": \"sha512-BSiqxe6rFzNIROz7uny8SyGndQX070hlktJT5sQNO46lB+tsyFScUVXjzduSlm2fCG/2PFA83skR3/7cTAkBbg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-editor-balloon\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-balloon/-/ckeditor5-editor-balloon-43.1.1.tgz\",\n      \"integrity\": \"sha512-hIfocf3a/zXj1SLElF58LIVXOP3GphpajrsNXysSxccb4LNUQjvqMqwYaHDkib0Oh4AznsCwfBE3CJ3grUiI4g==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-editor-classic\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-classic/-/ckeditor5-editor-classic-43.1.1.tgz\",\n      \"integrity\": \"sha512-8/yuGbTtY/BF4Oi5wDd9/NHNmIvtb+f5YvqSkG7ZtWy0M+uHru8xM7hhUqUKwrG2jVxB2MFRcDGAE0YlVqs98Q==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-editor-decoupled\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-decoupled/-/ckeditor5-editor-decoupled-43.1.1.tgz\",\n      \"integrity\": \"sha512-Vs7yVUjOM+QiwnS6v987YGen0xwku07pQyhl+ihW6cphJymaJ/kPNvkR2ZCfE5e/Av0ckz14DQj4vOmotx+Vxg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-editor-inline\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-inline/-/ckeditor5-editor-inline-43.1.1.tgz\",\n      \"integrity\": \"sha512-6rNUJPG23c0Nm4cbb5ReYiARhBk8crdpkYig6sR+8m//ah9SzO0H4H/brHtYHsV6FxOYDwxEJdaMSDP7rWUwkQ==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-editor-multi-root\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-multi-root/-/ckeditor5-editor-multi-root-43.1.1.tgz\",\n      \"integrity\": \"sha512-M1NBPFLZZAVJt22Ipy/JYTeOPPGCRDy3nWnCoBR2U79/FkEQNRyUtkR58EA4dLHdaeAiaWX8w7z2DrLKxOUltw==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-engine\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-engine/-/ckeditor5-engine-43.1.1.tgz\",\n      \"integrity\": \"sha512-gOqbGwEqbJDgbSRM0Dv3ArQRGTmX2pySNdQIseLnENVaq9r5FUu9T2moKYJbGl8t/DIqBAxOtdHQPafrXtk7yg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-enter\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-enter/-/ckeditor5-enter-43.1.1.tgz\",\n      \"integrity\": \"sha512-7JjNCe4qVtiLgnGC8P5WJzcDGTOXzgpos8nPSR52vsqNANNZQ/iAByDoPP7WCIijJHHjeFoBk0ytk2qfXppjkw==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-essentials\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-essentials/-/ckeditor5-essentials-43.1.1.tgz\",\n      \"integrity\": \"sha512-qbo080qotWmq19SnUkFspT9swHy2160nHFOdtx4LrQtGPbjSzS2EBFNHmkf31gUmEcNZCbegSIl0UT5IvIIV8g==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-select-all\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-undo\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-find-and-replace\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-find-and-replace/-/ckeditor5-find-and-replace-43.1.1.tgz\",\n      \"integrity\": \"sha512-BmSwyTsL5fAo4I2gRq7gzbU+WNAoaxWOPZCip/cGNdqzV9Utl6kTLx/DdxAhh8B4KTj8Rqv8Cmg1862HMkfKkw==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-font\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-font/-/ckeditor5-font-43.1.1.tgz\",\n      \"integrity\": \"sha512-QQrLf3zWp1T0QttKdFoC/fbEF69hzsHxNzmOeGVwAavgW0qpbpSEvTT5kRHm1tYlGeSR8N6/SVXgb4xHUxwvHg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-heading\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-heading/-/ckeditor5-heading-43.1.1.tgz\",\n      \"integrity\": \"sha512-Gr4rxChoamevxNf/6DKRYltOcLuCqrqFOCWrOO00JRHN8dHW81TgMJVGf4xeM4bAlFbMSqM3Y2vRCPhtdTAarA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paragraph\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-highlight\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-highlight/-/ckeditor5-highlight-43.1.1.tgz\",\n      \"integrity\": \"sha512-hrzzTQ1tAHIUGdNingpyMsrBeb3herfSMXOGylkkTqg/SqtnUlVJbPZ8NVUrmlw6hQQMl7HDqBJGdHoesvB8TA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-horizontal-line\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-horizontal-line/-/ckeditor5-horizontal-line-43.1.1.tgz\",\n      \"integrity\": \"sha512-FLTTPShC+/E/fAUYAxyMHOLDYCYAAuB3eXHonPekXjiAdkhchPibkIz0c3DgdjRGFhfGE4/XQ4PyU5oa5BKt5w==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-html-embed\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-html-embed/-/ckeditor5-html-embed-43.1.1.tgz\",\n      \"integrity\": \"sha512-ggOFwmpNAiT0nwm/++GZR/9V256mHxA0l7riL422l9YOSToGf5kukemsc7PIifuNoBXCzFrkNipr53ctxZkomA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-html-support\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-html-support/-/ckeditor5-html-support-43.1.1.tgz\",\n      \"integrity\": \"sha512-eF2eZU6sbU0ml+z8nSd7cDhk3ihrV9R7gih/bWOGvWa94bpaNVOd4c7e3F0ZPQVlxfwT1X99Y7aDNSNcbWs53A==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-image\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-image/-/ckeditor5-image-43.1.1.tgz\",\n      \"integrity\": \"sha512-6xOJsG9nYIIpwf/Kj0MARts5KK+eZ+awpAvljYgx+xjII4KEAO1dKSKjX5Fmx3zjDWieJelbLit9tvQTcqyq8A==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-undo\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-indent\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-indent/-/ckeditor5-indent-43.1.1.tgz\",\n      \"integrity\": \"sha512-8UjEX0TlnQgxzRkIAwJMcrc4rQSrpFuxUmo4b4xWIuzTg2p/+XdmDebi1p0AekB14ZW9J4UjB0U8NTWJQ++NyA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-language\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-language/-/ckeditor5-language-43.1.1.tgz\",\n      \"integrity\": \"sha512-lNqZn3rTmGDPEvZwAZZF6R1CkhnAh0cPXU4kuIs0+sshUcWGTQTO1l38Qzr4BGLrH1u7S2OilDe5GwfujF2vaA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-link\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-link/-/ckeditor5-link-43.1.1.tgz\",\n      \"integrity\": \"sha512-pk/ginodZGD8H5ezH9uhPjV7bK2wKkx80Eno9pt/c05+rsrHOjcibrS+SXBQ6qbK/W6Zo9ZUFwWC9HyNIiCwqA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-list\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-list/-/ckeditor5-list-43.1.1.tgz\",\n      \"integrity\": \"sha512-hH9Ny4TRH87Iz7WDw8eVKHFFmY4sOrlbPcXutcZCfYGuiDGAvRaeinAwitnWwy+bs5mAdQcw/araWAgMoVbEpw==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-markdown-gfm\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-markdown-gfm/-/ckeditor5-markdown-gfm-43.1.1.tgz\",\n      \"integrity\": \"sha512-7hnOEZdow1/aR69RXqTPoTczyAeIkjwYxgXbvt+pWgtJinuGtW97pc2X6ZSivsq+SWa+6UCe3TnzbyUrIdcqzA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"marked\": \"4.0.12\",\n        \"turndown\": \"7.2.0\",\n        \"turndown-plugin-gfm\": \"1.0.2\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-media-embed\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-media-embed/-/ckeditor5-media-embed-43.1.1.tgz\",\n      \"integrity\": \"sha512-MEydmh/mNUpMpNNV6BDWK8pCC5qn++WPDyDMYSFi9bX8hr9EC7AufoNG+Lh46vEnPl49cAy18WZvlyoX7nCyCA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-undo\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-mention\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-mention/-/ckeditor5-mention-43.1.1.tgz\",\n      \"integrity\": \"sha512-ErKPpapKx7HXTDgfGg6h3IRac70gCn6cwLIfuSiJ3bg8DSV5q7Rbi5UG8fRdOiT3mu/ZWI7gdP0ei6t/R6ddeA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-minimap\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-minimap/-/ckeditor5-minimap-43.1.1.tgz\",\n      \"integrity\": \"sha512-igsONpmmJse/RY/3ZAbtp5mlUzFHHAnFvUaNDPpWVDZ67sSJfCurAJqkrA9zzz4+pErdpryms067c5TAp8H9OQ==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-page-break\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-page-break/-/ckeditor5-page-break-43.1.1.tgz\",\n      \"integrity\": \"sha512-QuY6TYsgDZfeYWw4CZGgUs/3B2gHq4GmfSO4RuOMaQYPPnFOPFlyHEst9LDE6BbAa9ZWCdGlvUVxCfuAEDueww==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-paragraph\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-paragraph/-/ckeditor5-paragraph-43.1.1.tgz\",\n      \"integrity\": \"sha512-9ehs/b2K95W0KPDKwnfxDYHs4ypOtDNT4yB/ZGkJP96NV5XJGGQVBJIVmq0HrMGh4thdwJWofq7ZBIBjN3HMwQ==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-paste-from-office\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-paste-from-office/-/ckeditor5-paste-from-office-43.1.1.tgz\",\n      \"integrity\": \"sha512-dMftOM7eFMqFFZGdzo04PalimSQgNnbAp4adiVVSQDQ9reenWJD9iE1VCT4C5MnX3q4MXGAIBmqOubsqwfI84g==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-remove-format\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-remove-format/-/ckeditor5-remove-format-43.1.1.tgz\",\n      \"integrity\": \"sha512-LhzNvdJ3SrynhCN0BwAmjG1wNcPFy0nYgraS6Nj+P57up64EzDMCsJZ5EY7SsDgtm1rCRZh8liHfbY/6DLz6Ng==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-restricted-editing\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-restricted-editing/-/ckeditor5-restricted-editing-43.1.1.tgz\",\n      \"integrity\": \"sha512-QwDclw+HEYxJ3uLP0VNo+L0YMhv8uc/6RflEkh2E2w/keiPVrE41vzrAW/G0VD85MMVMdUrmYi98soDPsvZGVA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-select-all\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-select-all/-/ckeditor5-select-all-43.1.1.tgz\",\n      \"integrity\": \"sha512-NAxjt604pS6LcEsmH+yMHphrUAV6koACwauyj9llfZErd+VWlzsComiqgEN0ZbZ+iVCem4Fl+TT/82rTcGgtbg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-show-blocks\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-show-blocks/-/ckeditor5-show-blocks-43.1.1.tgz\",\n      \"integrity\": \"sha512-vb9FCIAnWZ0E161x7ulJPtLKtvxI+Rxv8qAikGNrbvLr6x9U9j0Y7WnLtmoYUozKIsRPQ2zFl7qciv1dPoeJTA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-source-editing\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-source-editing/-/ckeditor5-source-editing-43.1.1.tgz\",\n      \"integrity\": \"sha512-NH5TSZJjroUk9u1eQBlGNSnHvcesednao+YeicZQzRBvPMqIV+6J+MdMj65hlqyfbEsbeHrIKCdMLo/H28+4ZA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-theme-lark\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-special-characters\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-special-characters/-/ckeditor5-special-characters-43.1.1.tgz\",\n      \"integrity\": \"sha512-PQ4E0Rn7dxftM/h6zRLFptrD2xgMHXUVRZJuV6iejK+C/fVAM51PWOOUGUAPKWH1tY2bryiqdxF3yNyU2fpC4w==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-style\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-style/-/ckeditor5-style-43.1.1.tgz\",\n      \"integrity\": \"sha512-sDrM3lCNlx9QdZaEeRUjf/ukO3sIriRn3dNs/6n6+pGJThlzju3/ikryywJ5AfxzmpCK7CVx1H2x2R9krSV4PQ==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-table\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-table/-/ckeditor5-table-43.1.1.tgz\",\n      \"integrity\": \"sha512-rm7RcyYdhKlokBPxianNJSVdAQS7ng9T8UMbc7wJBVIEUXgqbqQ57nGm4IIX59FXSA7H9Dj/EFW4DT9YAaITvg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-theme-lark\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-theme-lark/-/ckeditor5-theme-lark-43.1.1.tgz\",\n      \"integrity\": \"sha512-7huWGsetISvNOzQurO1zqLL25YnGP3vgsOysKHz0qKgOi+UwXWxG8IYnzHi0qN4ox78vgyCR+nJvzjVz33gJEg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-typing\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-typing/-/ckeditor5-typing-43.1.1.tgz\",\n      \"integrity\": \"sha512-2YB3IfGPWct1oIlYGCL5Z5JQ/g2dpn8zr9syVTQJ/fAPjqi8Ig53lTaCQvpftnq4I+jESXAl4Rr9bIosqDVjAQ==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-ui\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-ui/-/ckeditor5-ui-43.1.1.tgz\",\n      \"integrity\": \"sha512-GNf0y56cT1HzgaG8wPyNsXlG4lZJMag+UKL6L3Y8uYg9/HurqJjJVnZcCJZ7T1t3D26fOvCIZ3KhW6AtRrnDrA==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"color-convert\": \"2.0.1\",\n        \"color-parse\": \"1.4.2\",\n        \"lodash-es\": \"4.17.21\",\n        \"vanilla-colorful\": \"0.7.2\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-undo\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-undo/-/ckeditor5-undo-43.1.1.tgz\",\n      \"integrity\": \"sha512-qX8jy5d8H4emWNCmA4EN2ZE/UGfBN1AqhMYtdX73EIxnDwVzT6Hd+GUaScDQoKn7Y81vO5dELPKFddaQN077Ew==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-upload\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-upload/-/ckeditor5-upload-43.1.1.tgz\",\n      \"integrity\": \"sha512-VIylGThmbwCKazx2XZBS8WYW7AYOgZzS8zQ1WDwT80tfOC3cjykNvg59eH7OACDeWud1LD47/idTj0wVC8gsIg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-utils\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-utils/-/ckeditor5-utils-43.1.1.tgz\",\n      \"integrity\": \"sha512-x7d1Iy2j6be74Nqv5MwWjBtVX8xv3lsbkUc0n/K26Edql5d2sk05MeA5kyBowHzqFEVDgDOUCj9Thl5KrJpb5w==\",\n      \"dependencies\": {\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-watchdog\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-watchdog/-/ckeditor5-watchdog-43.1.1.tgz\",\n      \"integrity\": \"sha512-/IyxNGhYKzioxwzK+H5NbgzHPNOBHkNbUwnC3vM89OOLxu5g77edEn/kcSBsEABYweddUK8LrPrKKvTcYC+tuw==\",\n      \"dependencies\": {\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-widget\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-widget/-/ckeditor5-widget-43.1.1.tgz\",\n      \"integrity\": \"sha512-3S6T7bImVAX2OHkrKeTRRWn+WE5nJyvrRPNItPTXhxgDPrbAYRpvH3mtcoUjb24cw1dDfHRwolBTXRv1DxqAUw==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@ckeditor/ckeditor5-word-count\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-word-count/-/ckeditor5-word-count-43.1.1.tgz\",\n      \"integrity\": \"sha512-eMLf6iC/yH2ZSJtnfU9W/92J/JYwGhrU8AGsrffGqPkJkHSe9qbSUHhpEyae+Q+GTK6FMU1pEC6tAdlxOWmRcw==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"node_modules/@codemirror/autocomplete\": {\n      \"version\": \"6.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/autocomplete/-/autocomplete-6.9.0.tgz\",\n      \"integrity\": \"sha512-Fbwm0V/Wn3BkEJZRhr0hi5BhCo5a7eBL6LYaliPjOSwCyfOpnjXY59HruSxOUNV+1OYer0Tgx1zRNQttjXyDog==\",\n      \"dependencies\": {\n        \"@codemirror/language\": \"^6.0.0\",\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.6.0\",\n        \"@lezer/common\": \"^1.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@codemirror/language\": \"^6.0.0\",\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"@lezer/common\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@codemirror/commands\": {\n      \"version\": \"6.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/commands/-/commands-6.2.5.tgz\",\n      \"integrity\": \"sha512-dSi7ow2P2YgPBZflR9AJoaTHvqmeGIgkhignYMd5zK5y6DANTvxKxp6eMEpIDUJkRAaOY/TFZ4jP1ADIO/GLVA==\",\n      \"dependencies\": {\n        \"@codemirror/language\": \"^6.0.0\",\n        \"@codemirror/state\": \"^6.2.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"@lezer/common\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@codemirror/language\": {\n      \"version\": \"6.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/language/-/language-6.9.0.tgz\",\n      \"integrity\": \"sha512-nFu311/0ne/qGuGCL3oKuktBgzVOaxCHZPZv1tLSZkNjPYxxvkjSbzno3MlErG2tgw1Yw1yF8BxMCegeMXqpiw==\",\n      \"dependencies\": {\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"@lezer/common\": \"^1.0.0\",\n        \"@lezer/highlight\": \"^1.0.0\",\n        \"@lezer/lr\": \"^1.0.0\",\n        \"style-mod\": \"^4.0.0\"\n      }\n    },\n    \"node_modules/@codemirror/lint\": {\n      \"version\": \"6.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/lint/-/lint-6.4.1.tgz\",\n      \"integrity\": \"sha512-2Hx945qKX7FBan5/gUdTM8fsMYrNG9clIgEcPXestbLVFAUyQYFAuju/5BMNf/PwgpVaX5pvRm4+ovjbp9D9gQ==\",\n      \"dependencies\": {\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"crelt\": \"^1.0.5\"\n      }\n    },\n    \"node_modules/@codemirror/search\": {\n      \"version\": \"6.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/search/-/search-6.5.2.tgz\",\n      \"integrity\": \"sha512-WRihpqd0l9cEh9J3IZe45Yi+Z5MfTsEXnyc3V7qXHP4ZYtIYpGOn+EJ7fyLIkyAm/8S6QIr7/mMISfAadf8zCg==\",\n      \"dependencies\": {\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"crelt\": \"^1.0.5\"\n      }\n    },\n    \"node_modules/@codemirror/state\": {\n      \"version\": \"6.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/state/-/state-6.4.0.tgz\",\n      \"integrity\": \"sha512-hm8XshYj5Fo30Bb922QX9hXB/bxOAVH+qaqHBzw5TKa72vOeslyGwd4X8M0c1dJ9JqxlaMceOQ8RsL9tC7gU0A==\"\n    },\n    \"node_modules/@codemirror/theme-one-dark\": {\n      \"version\": \"6.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/theme-one-dark/-/theme-one-dark-6.1.2.tgz\",\n      \"integrity\": \"sha512-F+sH0X16j/qFLMAfbciKTxVOwkdAS336b7AXTKOZhy8BR3eH/RelsnLgLFINrpST63mmN2OuwUt0W2ndUgYwUA==\",\n      \"dependencies\": {\n        \"@codemirror/language\": \"^6.0.0\",\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"@lezer/highlight\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@codemirror/view\": {\n      \"version\": \"6.22.1\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/view/-/view-6.22.1.tgz\",\n      \"integrity\": \"sha512-38BRn1nPqZqiHbmWfI8zri23IbRVbmSpSmh1E/Ysvc+lIGGdBC17K8zlK7ZU6fhfy9x4De9Zyj5JQqScPq5DkA==\",\n      \"dependencies\": {\n        \"@codemirror/state\": \"^6.1.4\",\n        \"style-mod\": \"^4.1.0\",\n        \"w3c-keyname\": \"^2.2.4\"\n      }\n    },\n    \"node_modules/@colors/colors\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@colors/colors/-/colors-1.5.0.tgz\",\n      \"integrity\": \"sha512-ooWCrlZP11i8GImSjTHYHLkvFDP48nS4+204nGb1RiX/WXYHmJA2III9/e2DWVabCESdW7hBAEzHRqUn9OUVvQ==\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=0.1.90\"\n      }\n    },\n    \"node_modules/@cspotcode/source-map-support\": {\n      \"version\": \"0.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz\",\n      \"integrity\": \"sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==\",\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.9\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz\",\n      \"integrity\": \"sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==\",\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.0.3\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\"\n      }\n    },\n    \"node_modules/@cypress/code-coverage\": {\n      \"version\": \"3.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/@cypress/code-coverage/-/code-coverage-3.10.0.tgz\",\n      \"integrity\": \"sha512-K5pW2KPpK4vKMXqxd6vuzo6m9BNgpAv1LcrrtmqAtOJ1RGoEILXYZVost0L6Q+V01NyY7n7jXIIfS7LR3nP6YA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@cypress/webpack-preprocessor\": \"^5.11.0\",\n        \"chalk\": \"4.1.2\",\n        \"dayjs\": \"1.10.7\",\n        \"debug\": \"4.3.4\",\n        \"execa\": \"4.1.0\",\n        \"globby\": \"11.0.4\",\n        \"istanbul-lib-coverage\": \"3.0.0\",\n        \"js-yaml\": \"3.14.1\",\n        \"nyc\": \"15.1.0\"\n      },\n      \"peerDependencies\": {\n        \"cypress\": \"*\"\n      }\n    },\n    \"node_modules/@cypress/code-coverage/node_modules/istanbul-lib-coverage\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz\",\n      \"integrity\": \"sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@cypress/request\": {\n      \"version\": \"3.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/@cypress/request/-/request-3.0.7.tgz\",\n      \"integrity\": \"sha512-LzxlLEMbBOPYB85uXrDqvD4MgcenjRBLIns3zyhx7vTPj/0u2eQhzXvPiGcaJrV38Q9dbkExWp6cOHPJ+EtFYg==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"aws-sign2\": \"~0.7.0\",\n        \"aws4\": \"^1.8.0\",\n        \"caseless\": \"~0.12.0\",\n        \"combined-stream\": \"~1.0.6\",\n        \"extend\": \"~3.0.2\",\n        \"forever-agent\": \"~0.6.1\",\n        \"form-data\": \"~4.0.0\",\n        \"http-signature\": \"~1.4.0\",\n        \"is-typedarray\": \"~1.0.0\",\n        \"isstream\": \"~0.1.2\",\n        \"json-stringify-safe\": \"~5.0.1\",\n        \"mime-types\": \"~2.1.19\",\n        \"performance-now\": \"^2.1.0\",\n        \"qs\": \"6.13.1\",\n        \"safe-buffer\": \"^5.1.2\",\n        \"tough-cookie\": \"^5.0.0\",\n        \"tunnel-agent\": \"^0.6.0\",\n        \"uuid\": \"^8.3.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/@cypress/webpack-preprocessor\": {\n      \"version\": \"5.17.0\",\n      \"resolved\": \"https://registry.npmjs.org/@cypress/webpack-preprocessor/-/webpack-preprocessor-5.17.0.tgz\",\n      \"integrity\": \"sha512-HyFqHkrOrIIYOt4G+r3VK0kVYTcev1tEcqBI/0DJ4AzEuEgW/TB+cX56txy4Cgn60XXdJoul2utclZwUqOsPZA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bluebird\": \"3.7.1\",\n        \"debug\": \"^4.3.4\",\n        \"lodash\": \"^4.17.20\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.1\",\n        \"@babel/preset-env\": \"^7.0.0\",\n        \"babel-loader\": \"^8.0.2 || ^9\",\n        \"webpack\": \"^4 || ^5\"\n      }\n    },\n    \"node_modules/@cypress/webpack-preprocessor/node_modules/bluebird\": {\n      \"version\": \"3.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.7.1.tgz\",\n      \"integrity\": \"sha512-DdmyoGCleJnkbp3nkbxTLJ18rjDsE4yCggEwKNXkeV123sPNfOCYeDoeuOY+F2FrSjO1YXcTU+dsy96KMy+gcg==\",\n      \"dev\": true\n    },\n    \"node_modules/@cypress/xvfb\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/@cypress/xvfb/-/xvfb-1.2.4.tgz\",\n      \"integrity\": \"sha512-skbBzPggOVYCbnGgV+0dmBdW/s77ZkAOXIC1knS8NagwDjBrNC1LuXtQJeiN6l+m7lzmHtaoUw/ctJKdqkG57Q==\",\n      \"dependencies\": {\n        \"debug\": \"^3.1.0\",\n        \"lodash.once\": \"^4.1.1\"\n      }\n    },\n    \"node_modules/@cypress/xvfb/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz\",\n      \"integrity\": \"sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==\",\n      \"dependencies\": {\n        \"camelcase\": \"^5.3.1\",\n        \"find-up\": \"^4.1.0\",\n        \"get-package-type\": \"^0.1.0\",\n        \"js-yaml\": \"^3.13.1\",\n        \"resolve-from\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/resolve-from\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n      \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/nyc-config-typescript\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/nyc-config-typescript/-/nyc-config-typescript-1.0.2.tgz\",\n      \"integrity\": \"sha512-iKGIyMoyJuFnJRSVTZ78POIRvNnwZaWIf8vG4ZS3rQq58MMDrqEX2nnzx0R28V2X8JvmKYiqY9FP2hlJsm8A0w==\",\n      \"dependencies\": {\n        \"@istanbuljs/schema\": \"^0.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"peerDependencies\": {\n        \"nyc\": \">=15\"\n      }\n    },\n    \"node_modules/@istanbuljs/schema\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz\",\n      \"integrity\": \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz\",\n      \"integrity\": \"sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==\",\n      \"dependencies\": {\n        \"@jridgewell/set-array\": \"^1.0.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz\",\n      \"integrity\": \"sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/set-array\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz\",\n      \"integrity\": \"sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/source-map\": {\n      \"version\": \"0.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.5.tgz\",\n      \"integrity\": \"sha512-UTYAUj/wviwdsMfzoSJspJxbkH5o1snzwX0//0ENX1u/55kkZZkcTZP6u9bwKGkv+dkk9at4m1Cpt0uY80kcpQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.4.14\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz\",\n      \"integrity\": \"sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw==\"\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.25\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz\",\n      \"integrity\": \"sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==\",\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"node_modules/@kurkle/color\": {\n      \"version\": \"0.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@kurkle/color/-/color-0.3.2.tgz\",\n      \"integrity\": \"sha512-fuscdXJ9G1qb7W8VdHi+IwRqij3lBkosAm4ydQtEmbY58OzHXqQhvlxqEkoz0yssNVn38bcpRWgA9PP+OGoisw==\"\n    },\n    \"node_modules/@lezer/common\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@lezer/common/-/common-1.2.1.tgz\",\n      \"integrity\": \"sha512-yemX0ZD2xS/73llMZIK6KplkjIjf2EvAHcinDi/TfJ9hS25G0388+ClHt6/3but0oOxinTcQHJLDXh6w1crzFQ==\"\n    },\n    \"node_modules/@lezer/generator\": {\n      \"version\": \"1.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/@lezer/generator/-/generator-1.7.1.tgz\",\n      \"integrity\": \"sha512-MgPJN9Si+ccxzXl3OAmCeZuUKw4XiPl4y664FX/hnnyG9CTqUPq65N3/VGPA2jD23D7QgMTtNqflta+cPN+5mQ==\",\n      \"dependencies\": {\n        \"@lezer/common\": \"^1.1.0\",\n        \"@lezer/lr\": \"^1.3.0\"\n      },\n      \"bin\": {\n        \"lezer-generator\": \"src/lezer-generator.cjs\"\n      }\n    },\n    \"node_modules/@lezer/highlight\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@lezer/highlight/-/highlight-1.2.0.tgz\",\n      \"integrity\": \"sha512-WrS5Mw51sGrpqjlh3d4/fOwpEV2Hd3YOkp9DBt4k8XZQcoTHZFB7sx030A6OcahF4J1nDQAa3jXlTVVYH50IFA==\",\n      \"dependencies\": {\n        \"@lezer/common\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@lezer/lr\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/@lezer/lr/-/lr-1.4.2.tgz\",\n      \"integrity\": \"sha512-pu0K1jCIdnQ12aWNaAVU5bzi7Bd1w54J3ECgANPmYLtQKP0HBj2cE/5coBD66MT10xbtIuUr7tg0Shbsvk0mDA==\",\n      \"dependencies\": {\n        \"@lezer/common\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@mixmark-io/domino\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@mixmark-io/domino/-/domino-2.2.0.tgz\",\n      \"integrity\": \"sha512-Y28PR25bHXUg88kCV7nivXrP2Nj2RueZ3/l/jdx6J9f8J4nsEGcgX0Qe6lt7Pa+J79+kPiJU3LguR6O/6zrLOw==\"\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@popperjs/core\": {\n      \"version\": \"2.11.8\",\n      \"resolved\": \"https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz\",\n      \"integrity\": \"sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==\",\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/popperjs\"\n      }\n    },\n    \"node_modules/@tsconfig/node10\": {\n      \"version\": \"1.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.9.tgz\",\n      \"integrity\": \"sha512-jNsYVVxU8v5g43Erja32laIDHXeoNvFEpX33OK4d6hljo3jDhCBDhx5dhCCTMWUojscpAagGiRkBKxpdl9fxqA==\"\n    },\n    \"node_modules/@tsconfig/node12\": {\n      \"version\": \"1.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz\",\n      \"integrity\": \"sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==\"\n    },\n    \"node_modules/@tsconfig/node14\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz\",\n      \"integrity\": \"sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==\"\n    },\n    \"node_modules/@tsconfig/node16\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.3.tgz\",\n      \"integrity\": \"sha512-yOlFc+7UtL/89t2ZhjPvvB/DeAr3r+Dq58IgzsFkOAvVC6NMJXmCGjbptdXdR9qsX7pKcTL+s87FtYREi2dEEQ==\"\n    },\n    \"node_modules/@types/ace\": {\n      \"version\": \"0.0.47\",\n      \"resolved\": \"https://registry.npmjs.org/@types/ace/-/ace-0.0.47.tgz\",\n      \"integrity\": \"sha512-VoMFn09L8avwV0AGIaStj1MCJmgHKiPAGZYnmeHYp4Pz+ov4h/F61LJNFvq4d4K+YZmk0ClWByCDU81kZyCfoA==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/dompurify\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/dompurify/-/dompurify-2.3.3.tgz\",\n      \"integrity\": \"sha512-nnVQSgRVuZ/843oAfhA25eRSNzUFcBPk/LOiw5gm8mD9/X7CNcbRkQu/OsjCewO8+VIYfPxUnXvPEVGenw14+w==\",\n      \"dependencies\": {\n        \"@types/trusted-types\": \"*\"\n      }\n    },\n    \"node_modules/@types/estree\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.5.tgz\",\n      \"integrity\": \"sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@types/jquery\": {\n      \"version\": \"3.5.8\",\n      \"resolved\": \"https://registry.npmjs.org/@types/jquery/-/jquery-3.5.8.tgz\",\n      \"integrity\": \"sha512-cXk6NwqjDYg+UI9p2l3x0YmPa4m7RrXqmbK4IpVVpRJiYXU/QTo+UZrn54qfE1+9Gao4qpYqUnxm5ZCy2FTXAw==\",\n      \"dependencies\": {\n        \"@types/sizzle\": \"*\"\n      }\n    },\n    \"node_modules/@types/jqueryui\": {\n      \"version\": \"1.12.16\",\n      \"resolved\": \"https://registry.npmjs.org/@types/jqueryui/-/jqueryui-1.12.16.tgz\",\n      \"integrity\": \"sha512-6huAQDpNlso9ayaUT9amBOA3kj02OCeUWs+UvDmbaJmwkHSg/HLsQOoap/D5uveN9ePwl72N45Bl+Frp5xyG1Q==\",\n      \"dependencies\": {\n        \"@types/jquery\": \"*\"\n      }\n    },\n    \"node_modules/@types/json-schema\": {\n      \"version\": \"7.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.11.tgz\",\n      \"integrity\": \"sha512-wOuvG1SN4Us4rez+tylwwwCV1psiNVOkJeM3AUWUNWg/jDQY2+HE/444y5gc+jBmRqASOm2Oeh5c1axHobwRKQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"16.18.47\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-16.18.47.tgz\",\n      \"integrity\": \"sha512-yBaT6qZKmvaeTuv8kfv2QwIsgi/D4bYSLmHow/IBxjLNRHxYEXgwVRvBmnNLBXi3CkZg0Wdzu3NTUlUjjxconQ==\"\n    },\n    \"node_modules/@types/sinonjs__fake-timers\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/sinonjs__fake-timers/-/sinonjs__fake-timers-8.1.1.tgz\",\n      \"integrity\": \"sha512-0kSuKjAS0TrGLJ0M/+8MaFkGsQhZpB6pxOmvS3K8FYI72K//YmdfoW9X2qPsAKh1mkwxGD5zib9s1FIFed6E8g==\"\n    },\n    \"node_modules/@types/sizzle\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/sizzle/-/sizzle-2.3.3.tgz\",\n      \"integrity\": \"sha512-JYM8x9EGF163bEyhdJBpR2QX1R5naCJHC8ucJylJ3w9/CVBaskdQ8WqBf8MmQrd1kRvp/a4TS8HJ+bxzR7ZJYQ==\"\n    },\n    \"node_modules/@types/sortablejs\": {\n      \"version\": \"1.15.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/sortablejs/-/sortablejs-1.15.1.tgz\",\n      \"integrity\": \"sha512-g/JwBNToh6oCTAwNS8UGVmjO7NLDKsejVhvE4x1eWiPTC3uCuNsa/TD4ssvX3du+MLiM+SHPNDuijp8y76JzLQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/trusted-types\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/trusted-types/-/trusted-types-2.0.2.tgz\",\n      \"integrity\": \"sha512-F5DIZ36YVLE+PN+Zwws4kJogq47hNgX3Nx6WyDJ3kcplxyke3XIzB8uK5n/Lpm1HBsbGzd6nmGehL8cPekP+Tg==\"\n    },\n    \"node_modules/@types/yauzl\": {\n      \"version\": \"2.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.0.tgz\",\n      \"integrity\": \"sha512-Cn6WYCm0tXv8p6k+A8PvbDG763EDpBoTzHdA+Q/MF6H3sapGjCm9NzoaJncJS9tUKSuCoDs9XHxYYsQDgxR6kw==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@webassemblyjs/ast\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.12.1.tgz\",\n      \"integrity\": \"sha512-EKfMUOPRRUTy5UII4qJDGPpqfwjOmZ5jeGFwid9mnoqIFK+e0vqoi1qH56JpmZSzEL53jKnNzScdmftJyG5xWg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@webassemblyjs/helper-numbers\": \"1.11.6\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\"\n      }\n    },\n    \"node_modules/@webassemblyjs/floating-point-hex-parser\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.11.6.tgz\",\n      \"integrity\": \"sha512-ejAj9hfRJ2XMsNHk/v6Fu2dGS+i4UaXBXGemOfQ/JfQ6mdQg/WXtwleQRLLS4OvfDhv8rYnVwH27YJLMyYsxhw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@webassemblyjs/helper-api-error\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.11.6.tgz\",\n      \"integrity\": \"sha512-o0YkoP4pVu4rN8aTJgAyj9hC2Sv5UlkzCHhxqWj8butaLvnpdc2jOwh4ewE6CX0txSfLn/UYaV/pheS2Txg//Q==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@webassemblyjs/helper-buffer\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.12.1.tgz\",\n      \"integrity\": \"sha512-nzJwQw99DNDKr9BVCOZcLuJJUlqkJh+kVzVl6Fmq/tI5ZtEyWT1KZMyOXltXLZJmDtvLCDgwsyrkohEtopTXCw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@webassemblyjs/helper-numbers\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-numbers/-/helper-numbers-1.11.6.tgz\",\n      \"integrity\": \"sha512-vUIhZ8LZoIWHBohiEObxVm6hwP034jwmc9kuq5GdHZH0wiLVLIPcMCdpJzG4C11cHoQ25TFIQj9kaVADVX7N3g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@webassemblyjs/floating-point-hex-parser\": \"1.11.6\",\n        \"@webassemblyjs/helper-api-error\": \"1.11.6\",\n        \"@xtuc/long\": \"4.2.2\"\n      }\n    },\n    \"node_modules/@webassemblyjs/helper-wasm-bytecode\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.11.6.tgz\",\n      \"integrity\": \"sha512-sFFHKwcmBprO9e7Icf0+gddyWYDViL8bpPjJJl0WHxCdETktXdmtWLGVzoHbqUcY4Be1LkNfwTmXOJUFZYSJdA==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@webassemblyjs/helper-wasm-section\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.12.1.tgz\",\n      \"integrity\": \"sha512-Jif4vfB6FJlUlSbgEMHUyk1j234GTNG9dBJ4XJdOySoj518Xj0oGsNi59cUQF4RRMS9ouBUxDDdyBVfPTypa5g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-buffer\": \"1.12.1\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\",\n        \"@webassemblyjs/wasm-gen\": \"1.12.1\"\n      }\n    },\n    \"node_modules/@webassemblyjs/ieee754\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.11.6.tgz\",\n      \"integrity\": \"sha512-LM4p2csPNvbij6U1f19v6WR56QZ8JcHg3QIJTlSwzFcmx6WSORicYj6I63f9yU1kEUtrpG+kjkiIAkevHpDXrg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@xtuc/ieee754\": \"^1.2.0\"\n      }\n    },\n    \"node_modules/@webassemblyjs/leb128\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.11.6.tgz\",\n      \"integrity\": \"sha512-m7a0FhE67DQXgouf1tbN5XQcdWoNgaAuoULHIfGFIEVKA6tu/edls6XnIlkmS6FrXAquJRPni3ZZKjw6FSPjPQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@xtuc/long\": \"4.2.2\"\n      }\n    },\n    \"node_modules/@webassemblyjs/utf8\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.11.6.tgz\",\n      \"integrity\": \"sha512-vtXf2wTQ3+up9Zsg8sa2yWiQpzSsMyXj0qViVP6xKGCUT8p8YJ6HqI7l5eCnWx1T/FYdsv07HQs2wTFbbof/RA==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@webassemblyjs/wasm-edit\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.12.1.tgz\",\n      \"integrity\": \"sha512-1DuwbVvADvS5mGnXbE+c9NfA8QRcZ6iKquqjjmR10k6o+zzsRVesil54DKexiowcFCPdr/Q0qaMgB01+SQ1u6g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-buffer\": \"1.12.1\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\",\n        \"@webassemblyjs/helper-wasm-section\": \"1.12.1\",\n        \"@webassemblyjs/wasm-gen\": \"1.12.1\",\n        \"@webassemblyjs/wasm-opt\": \"1.12.1\",\n        \"@webassemblyjs/wasm-parser\": \"1.12.1\",\n        \"@webassemblyjs/wast-printer\": \"1.12.1\"\n      }\n    },\n    \"node_modules/@webassemblyjs/wasm-gen\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.12.1.tgz\",\n      \"integrity\": \"sha512-TDq4Ojh9fcohAw6OIMXqiIcTq5KUXTGRkVxbSo1hQnSy6lAM5GSdfwWeSxpAo0YzgsgF182E/U0mDNhuA0tW7w==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\",\n        \"@webassemblyjs/ieee754\": \"1.11.6\",\n        \"@webassemblyjs/leb128\": \"1.11.6\",\n        \"@webassemblyjs/utf8\": \"1.11.6\"\n      }\n    },\n    \"node_modules/@webassemblyjs/wasm-opt\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.12.1.tgz\",\n      \"integrity\": \"sha512-Jg99j/2gG2iaz3hijw857AVYekZe2SAskcqlWIZXjji5WStnOpVoat3gQfT/Q5tb2djnCjBtMocY/Su1GfxPBg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-buffer\": \"1.12.1\",\n        \"@webassemblyjs/wasm-gen\": \"1.12.1\",\n        \"@webassemblyjs/wasm-parser\": \"1.12.1\"\n      }\n    },\n    \"node_modules/@webassemblyjs/wasm-parser\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.12.1.tgz\",\n      \"integrity\": \"sha512-xikIi7c2FHXysxXe3COrVUPSheuBtpcfhbpFj4gmu7KRLYOzANztwUU0IbsqvMqzuNK2+glRGWCEqZo1WCLyAQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-api-error\": \"1.11.6\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\",\n        \"@webassemblyjs/ieee754\": \"1.11.6\",\n        \"@webassemblyjs/leb128\": \"1.11.6\",\n        \"@webassemblyjs/utf8\": \"1.11.6\"\n      }\n    },\n    \"node_modules/@webassemblyjs/wast-printer\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.12.1.tgz\",\n      \"integrity\": \"sha512-+X4WAlOisVWQMikjbcvY2e0rwPsKQ9F688lksZhBcPycBBuii3O7m8FACbDMWDojpAqvjIncrG8J0XHKyQfVeA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@xtuc/long\": \"4.2.2\"\n      }\n    },\n    \"node_modules/@xtuc/ieee754\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz\",\n      \"integrity\": \"sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@xtuc/long\": {\n      \"version\": \"4.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz\",\n      \"integrity\": \"sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/acorn\": {\n      \"version\": \"8.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.12.1.tgz\",\n      \"integrity\": \"sha512-tcpGyI9zbizT9JbV6oYE477V6mTlXvvi0T0G3SNIYE2apm/G5huBa1+K89VGeovbg+jycCrfhl3ADxErOuO6Jg==\",\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/acorn-import-attributes\": {\n      \"version\": \"1.9.5\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-import-attributes/-/acorn-import-attributes-1.9.5.tgz\",\n      \"integrity\": \"sha512-n02Vykv5uA3eHGM/Z2dQrcD56kL8TyDb2p1+0P83PClMnC/nc+anbQRhIOWnSq4Ke/KvDPrY3C9hDtC/A3eHnQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"peerDependencies\": {\n        \"acorn\": \"^8\"\n      }\n    },\n    \"node_modules/aggregate-error\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz\",\n      \"integrity\": \"sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==\",\n      \"dependencies\": {\n        \"clean-stack\": \"^2.0.0\",\n        \"indent-string\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"6.12.6\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ajv-formats\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz\",\n      \"integrity\": \"sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"ajv\": \"^8.0.0\"\n      },\n      \"peerDependencies\": {\n        \"ajv\": \"^8.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"ajv\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/ajv-formats/node_modules/ajv\": {\n      \"version\": \"8.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.12.0.tgz\",\n      \"integrity\": \"sha512-sRu1kpcO9yLtYxBKvqfTeh9KzZEwO3STyX1HT+4CaDzC6HpTGYhIhPIzj9XuKU7KYDwnaeh5hcOwjy1QuJzBPA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"json-schema-traverse\": \"^1.0.0\",\n        \"require-from-string\": \"^2.0.2\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ajv-formats/node_modules/json-schema-traverse\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/ajv-keywords\": {\n      \"version\": \"3.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.5.2.tgz\",\n      \"integrity\": \"sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"peerDependencies\": {\n        \"ajv\": \"^6.9.1\"\n      }\n    },\n    \"node_modules/ansi-colors\": {\n      \"version\": \"4.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.3.tgz\",\n      \"integrity\": \"sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"dependencies\": {\n        \"type-fest\": \"^0.21.3\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/any-promise\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz\",\n      \"integrity\": \"sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==\"\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/append-transform\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/append-transform/-/append-transform-2.0.0.tgz\",\n      \"integrity\": \"sha512-7yeyCEurROLQJFv5Xj4lEGTy0borxepjFv1g22oAdqFu//SrAlDl1O1Nxx15SH1RoliUml6p8dwJW9jvZughhg==\",\n      \"dependencies\": {\n        \"default-require-extensions\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/arch\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/arch/-/arch-2.2.0.tgz\",\n      \"integrity\": \"sha512-Of/R0wqp83cgHozfIYLbBMnej79U/SVGOOyuB3VVFv1NRM/PSFMK12x9KVtiYzJqmnU5WR2qp0Z5rHb7sWGnFQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/archy\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/archy/-/archy-1.0.0.tgz\",\n      \"integrity\": \"sha512-Xg+9RwCg/0p32teKdGMPTPnVXKD0w3DfHnFTficozsAgsvq2XenPJq/MYpzzQ/v8zrOyJn6Ds39VA4JIDwFfqw==\"\n    },\n    \"node_modules/arg\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/arg/-/arg-5.0.2.tgz\",\n      \"integrity\": \"sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==\"\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n      \"dependencies\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"node_modules/array-union\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n      \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/asn1\": {\n      \"version\": \"0.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz\",\n      \"integrity\": \"sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safer-buffer\": \"~2.1.0\"\n      }\n    },\n    \"node_modules/assert-plus\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",\n      \"integrity\": \"sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/astral-regex\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/astral-regex/-/astral-regex-2.0.0.tgz\",\n      \"integrity\": \"sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/async\": {\n      \"version\": \"3.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/async/-/async-3.2.4.tgz\",\n      \"integrity\": \"sha512-iAB+JbDEGXhyIUavoDl9WP/Jj106Kz9DEn1DPgYw5ruDn0e3Wgi3sKFm55sASdGBNOQB8F59d9qQ7deqrHA8wQ==\"\n    },\n    \"node_modules/asynckit\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n      \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/at-least-node\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/at-least-node/-/at-least-node-1.0.0.tgz\",\n      \"integrity\": \"sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==\",\n      \"engines\": {\n        \"node\": \">= 4.0.0\"\n      }\n    },\n    \"node_modules/automation-events\": {\n      \"version\": \"6.0.13\",\n      \"resolved\": \"https://registry.npmjs.org/automation-events/-/automation-events-6.0.13.tgz\",\n      \"integrity\": \"sha512-V1D19taPDEB7LUph6FpJv9m2i+UpLR096sAbPKt92sRChCOA6Jt2bcofU/YAwG8F8/qZp3GrrscJ1FzaEHd68w==\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.23.5\",\n        \"tslib\": \"^2.6.2\"\n      },\n      \"engines\": {\n        \"node\": \">=16.1.0\"\n      }\n    },\n    \"node_modules/autoprefixer\": {\n      \"version\": \"10.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.2.tgz\",\n      \"integrity\": \"sha512-9fOPpHKuDW1w/0EKfRmVnxTDt8166MAnLI3mgZ1JCnhNtYWxcJ6Ud5CO/AVOZi/AvFa8DY9RTy3h3+tFBlrrdQ==\",\n      \"dependencies\": {\n        \"browserslist\": \"^4.19.1\",\n        \"caniuse-lite\": \"^1.0.30001297\",\n        \"fraction.js\": \"^4.1.2\",\n        \"normalize-range\": \"^0.1.2\",\n        \"picocolors\": \"^1.0.0\",\n        \"postcss-value-parser\": \"^4.2.0\"\n      },\n      \"bin\": {\n        \"autoprefixer\": \"bin/autoprefixer\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.1.0\"\n      }\n    },\n    \"node_modules/aws-sign2\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz\",\n      \"integrity\": \"sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA==\",\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/aws4\": {\n      \"version\": \"1.13.2\",\n      \"resolved\": \"https://registry.npmjs.org/aws4/-/aws4-1.13.2.tgz\",\n      \"integrity\": \"sha512-lHe62zvbTB5eEABUVi/AwVh0ZKY9rMMDhmm+eeyuuUQbQ3+J+fONVQOZyj+DdrvD4BY33uYniyRJ4UJIaSKAfw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/babel-loader\": {\n      \"version\": \"9.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/babel-loader/-/babel-loader-9.1.2.tgz\",\n      \"integrity\": \"sha512-mN14niXW43tddohGl8HPu5yfQq70iUThvFL/4QzESA7GcZoC0eVOhvWdQ8+3UlSjaDE9MVtsW9mxDY07W7VpVA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"find-cache-dir\": \"^3.3.2\",\n        \"schema-utils\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 14.15.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.12.0\",\n        \"webpack\": \">=5\"\n      }\n    },\n    \"node_modules/babel-plugin-polyfill-corejs2\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.3.3.tgz\",\n      \"integrity\": \"sha512-8hOdmFYFSZhqg2C/JgLUQ+t52o5nirNwaWM2B9LWteozwIvM14VSwdsCAUET10qT+kmySAlseadmfeeSWFCy+Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.17.7\",\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\",\n        \"semver\": \"^6.1.1\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/babel-plugin-polyfill-corejs3\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.6.0.tgz\",\n      \"integrity\": \"sha512-+eHqR6OPcBhJOGgsIar7xoAB1GcSwVUA3XjAd7HJNzOXT4wv6/H7KIdA/Nc60cvUlDbKApmqNvD1B1bzOt4nyA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\",\n        \"core-js-compat\": \"^3.25.1\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/babel-plugin-polyfill-regenerator\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.4.1.tgz\",\n      \"integrity\": \"sha512-NtQGmyQDXjQqQ+IzRkBVwEOz9lQ4zxAQZgoAYEtU9dJjnl1Oc98qnN7jcp+bE7O7aYzVpavXE3/VKXNzUbh7aw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"\n    },\n    \"node_modules/base64-js\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\",\n      \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/bcrypt-pbkdf\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz\",\n      \"integrity\": \"sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"tweetnacl\": \"^0.14.3\"\n      }\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/blob-util\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/blob-util/-/blob-util-2.0.2.tgz\",\n      \"integrity\": \"sha512-T7JQa+zsXXEa6/8ZhHcQEW1UFfVM49Ts65uBkFL6fz2QmrElqmbajIDJvuA0tEhRe5eIjpV9ZF+0RfZR9voJFQ==\"\n    },\n    \"node_modules/bluebird\": {\n      \"version\": \"3.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz\",\n      \"integrity\": \"sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==\"\n    },\n    \"node_modules/blurhash\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/blurhash/-/blurhash-2.0.5.tgz\",\n      \"integrity\": \"sha512-cRygWd7kGBQO3VEhPiTgq4Wc43ctsM+o46urrmPOiuAe+07fzlSB9OJVdpgDL0jPqXUVQ9ht7aq7kxOeJHRK+w==\"\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/browserslist\": {\n      \"version\": \"4.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.23.3.tgz\",\n      \"integrity\": \"sha512-btwCFJVjI4YWDNfau8RhZ+B1Q/VLoUITrm3RlP6y1tYGWIOa+InuYiRGXUBXo8nA1qKmHMyLB/iVQg5TT4eFoA==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"caniuse-lite\": \"^1.0.30001646\",\n        \"electron-to-chromium\": \"^1.5.4\",\n        \"node-releases\": \"^2.0.18\",\n        \"update-browserslist-db\": \"^1.1.0\"\n      },\n      \"bin\": {\n        \"browserslist\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7\"\n      }\n    },\n    \"node_modules/buffer\": {\n      \"version\": \"5.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz\",\n      \"integrity\": \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.1.13\"\n      }\n    },\n    \"node_modules/buffer-crc32\": {\n      \"version\": \"0.2.13\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz\",\n      \"integrity\": \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/buffer-from\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz\",\n      \"integrity\": \"sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==\"\n    },\n    \"node_modules/cachedir\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/cachedir/-/cachedir-2.3.0.tgz\",\n      \"integrity\": \"sha512-A+Fezp4zxnit6FanDmv9EqXNAi3vt9DWp51/71UEhXukb7QUuvtv9344h91dyAxuTLoSYJFU299qzR3tzwPAhw==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/caching-transform\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/caching-transform/-/caching-transform-4.0.0.tgz\",\n      \"integrity\": \"sha512-kpqOvwXnjjN44D89K5ccQC+RUrsy7jB/XLlRrx0D7/2HNcTPqzsb6XgYoErwko6QsV184CA2YgS1fxDiiDZMWA==\",\n      \"dependencies\": {\n        \"hasha\": \"^5.0.0\",\n        \"make-dir\": \"^3.0.0\",\n        \"package-hash\": \"^4.0.0\",\n        \"write-file-atomic\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/call-bind-apply-helpers\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz\",\n      \"integrity\": \"sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/call-bound\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.3.tgz\",\n      \"integrity\": \"sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"get-intrinsic\": \"^1.2.6\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/camel-case\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/camel-case/-/camel-case-4.1.2.tgz\",\n      \"integrity\": \"sha512-gxGWBrTT1JuMx6R+o5PTXMmUnhnVzLQ9SNutD4YqKtI6ap897t3tKECYla6gCWEkplXnlNybEkZg9GEGxKFCgw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pascal-case\": \"^3.1.2\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/camelcase\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\n      \"integrity\": \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/camelcase-css\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz\",\n      \"integrity\": \"sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==\",\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/caniuse-lite\": {\n      \"version\": \"1.0.30001655\",\n      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001655.tgz\",\n      \"integrity\": \"sha512-jRGVy3iSGO5Uutn2owlb5gR6qsGngTw9ZTb4ali9f3glshcNmJ2noam4Mo9zia5P9Dk3jNNydy7vQjuE5dQmfg==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/caniuse-lite\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ]\n    },\n    \"node_modules/caseless\": {\n      \"version\": \"0.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz\",\n      \"integrity\": \"sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw==\",\n      \"license\": \"Apache-2.0\"\n    },\n    \"node_modules/chai-colors\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/chai-colors/-/chai-colors-1.0.1.tgz\",\n      \"integrity\": \"sha512-dHfkpLWbYx8jHxruZJWBO/TAh/kx6nK4FQ99bTGOxxChkGbq4x/1oOCbkoNo3CkyVZf5etG8qeaLaoAeCvC/mA==\",\n      \"dependencies\": {\n        \"onecolor\": \"~2.4.2\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/chart.js\": {\n      \"version\": \"4.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/chart.js/-/chart.js-4.4.3.tgz\",\n      \"integrity\": \"sha512-qK1gkGSRYcJzqrrzdR6a+I0vQ4/R+SoODXyAjscQ/4mzuNzySaMCd+hyVxitSY1+L2fjPD1Gbn+ibNqRmwQeLw==\",\n      \"dependencies\": {\n        \"@kurkle/color\": \"^0.3.0\"\n      },\n      \"engines\": {\n        \"pnpm\": \">=8\"\n      }\n    },\n    \"node_modules/chartjs-plugin-datalabels\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/chartjs-plugin-datalabels/-/chartjs-plugin-datalabels-2.2.0.tgz\",\n      \"integrity\": \"sha512-14ZU30lH7n89oq+A4bWaJPnAG8a7ZTk7dKf48YAzMvJjQtjrgg5Dpk9f+LbjCF6bpx3RAGTeL13IXpKQYyRvlw==\",\n      \"peerDependencies\": {\n        \"chart.js\": \">=3.0.0\"\n      }\n    },\n    \"node_modules/check-more-types\": {\n      \"version\": \"2.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/check-more-types/-/check-more-types-2.24.0.tgz\",\n      \"integrity\": \"sha512-Pj779qHxV2tuapviy1bSZNEL1maXr13bPYpsvSDB68HlYcYuhlDrmGd63i0JHMCLKzc7rUSNIrpdJlhVlNwrxA==\",\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/chokidar/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/chrome-trace-event\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.3.tgz\",\n      \"integrity\": \"sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=6.0\"\n      }\n    },\n    \"node_modules/ci-info\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-4.1.0.tgz\",\n      \"integrity\": \"sha512-HutrvTNsF48wnxkzERIXOe5/mlcfFcbfCmwcg6CJnizbSue78AbDt+1cgl26zwn61WFxhcPykPfZrbqjGmBb4A==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/sibiraj-s\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ckeditor5\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ckeditor5/-/ckeditor5-43.1.1.tgz\",\n      \"integrity\": \"sha512-/nVXYI81XT1xzE1SKrmgF5qViHYqf3hC+BhizC8r1RZ82SB28G9gRmahYSt2pMkpI6w165OwXCdWEoIVAtiYRg==\",\n      \"dependencies\": {\n        \"@ckeditor/ckeditor5-adapter-ckfinder\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-alignment\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-autoformat\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-autosave\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-basic-styles\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-block-quote\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ckbox\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ckfinder\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-cloud-services\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-code-block\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-easy-image\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-balloon\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-classic\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-decoupled\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-inline\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-multi-root\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-essentials\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-find-and-replace\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-font\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-heading\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-highlight\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-horizontal-line\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-html-embed\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-html-support\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-image\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-indent\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-language\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-link\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-list\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-markdown-gfm\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-media-embed\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-mention\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-minimap\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-page-break\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paragraph\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paste-from-office\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-remove-format\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-restricted-editing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-select-all\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-show-blocks\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-source-editing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-special-characters\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-style\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-table\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-theme-lark\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-undo\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-watchdog\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-word-count\": \"43.1.1\"\n      }\n    },\n    \"node_modules/clean-css\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/clean-css/-/clean-css-5.3.2.tgz\",\n      \"integrity\": \"sha512-JVJbM+f3d3Q704rF4bqQ5UUyTtuJ0JRKNbTKVEeujCCBoMdkEi+V+e8oktO9qGQNSvHrFTM6JZRXrUvGR1czww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"source-map\": \"~0.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0\"\n      }\n    },\n    \"node_modules/clean-stack\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz\",\n      \"integrity\": \"sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/cli-cursor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz\",\n      \"integrity\": \"sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==\",\n      \"dependencies\": {\n        \"restore-cursor\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/cli-table3\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/cli-table3/-/cli-table3-0.6.3.tgz\",\n      \"integrity\": \"sha512-w5Jac5SykAeZJKntOxJCrm63Eg5/4dhMWIcuTbo9rpE+brgaSZo0RuNJZeOyMgsUdhDeojvgyQLmjI+K50ZGyg==\",\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"10.* || >= 12.*\"\n      },\n      \"optionalDependencies\": {\n        \"@colors/colors\": \"1.5.0\"\n      }\n    },\n    \"node_modules/cli-truncate\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-truncate/-/cli-truncate-2.1.0.tgz\",\n      \"integrity\": \"sha512-n8fOixwDD6b/ObinzTrp1ZKFzbgvKZvuz/TvejnLn1aQfC6r52XEx85FmuC+3HI+JM7coBRXUvNqEU2PHVrHpg==\",\n      \"dependencies\": {\n        \"slice-ansi\": \"^3.0.0\",\n        \"string-width\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz\",\n      \"integrity\": \"sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==\",\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^6.2.0\"\n      }\n    },\n    \"node_modules/cliui/node_modules/wrap-ansi\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz\",\n      \"integrity\": \"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/codemirror\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/codemirror/-/codemirror-6.0.1.tgz\",\n      \"integrity\": \"sha512-J8j+nZ+CdWmIeFIGXEFbFPtpiYacFMDR8GlHK3IyHQJMCaVRfGx9NT+Hxivv1ckLWPvNdZqndbr/7lVhrf/Svg==\",\n      \"dependencies\": {\n        \"@codemirror/autocomplete\": \"^6.0.0\",\n        \"@codemirror/commands\": \"^6.0.0\",\n        \"@codemirror/language\": \"^6.0.0\",\n        \"@codemirror/lint\": \"^6.0.0\",\n        \"@codemirror/search\": \"^6.0.0\",\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\"\n    },\n    \"node_modules/color-parse\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/color-parse/-/color-parse-1.4.2.tgz\",\n      \"integrity\": \"sha512-RI7s49/8yqDj3fECFZjUI1Yi0z/Gq1py43oNJivAIIDSyJiOZLfYCRQEgn8HEVAj++PcRe8AnL2XF0fRJ3BTnA==\",\n      \"dependencies\": {\n        \"color-name\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/colorette\": {\n      \"version\": \"2.0.19\",\n      \"resolved\": \"https://registry.npmjs.org/colorette/-/colorette-2.0.19.tgz\",\n      \"integrity\": \"sha512-3tlv/dIP7FWvj3BsbHrGLJ6l/oKh1O3TcgBqMn+yyCagOxc23fyzDS6HypQbgxWbkpDnf52p1LuR4eWDQ/K9WQ==\"\n    },\n    \"node_modules/combined-stream\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"delayed-stream\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/commander\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-6.2.1.tgz\",\n      \"integrity\": \"sha512-U7VdrJFnJgo4xjrHpTzu0yrHPGImdsmD95ZlgYSEajAn2JKzDhDTPG9kBTefmObL2w/ngeZnilk+OV9CG3d7UA==\",\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/common-tags\": {\n      \"version\": \"1.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/common-tags/-/common-tags-1.8.2.tgz\",\n      \"integrity\": \"sha512-gk/Z852D2Wtb//0I+kRFNKKE9dIIVirjoqPoA1wJU+XePVXZfGeBpk45+A1rKO4Q43prqWBNY/MiIeRLbPWUaA==\",\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/commondir\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\n      \"integrity\": \"sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==\"\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\"\n    },\n    \"node_modules/convert-source-map\": {\n      \"version\": \"1.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz\",\n      \"integrity\": \"sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A==\"\n    },\n    \"node_modules/core-js-compat\": {\n      \"version\": \"3.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.28.0.tgz\",\n      \"integrity\": \"sha512-myzPgE7QodMg4nnd3K1TDoES/nADRStM8Gpz0D6nhkwbmwEnE0ZGJgoWsvQ722FR8D7xS0n0LV556RcEicjTyg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"browserslist\": \"^4.21.5\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/core-js\"\n      }\n    },\n    \"node_modules/core-util-is\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz\",\n      \"integrity\": \"sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ==\"\n    },\n    \"node_modules/create-require\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz\",\n      \"integrity\": \"sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==\"\n    },\n    \"node_modules/crelt\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/crelt/-/crelt-1.0.6.tgz\",\n      \"integrity\": \"sha512-VQ2MBenTq1fWZUH9DJNGti7kKv6EeAuYr3cLwxUWhIu1baTaXh4Ib5W2CqHVqib4/MqbYGJqiL3Zb8GJZr3l4g==\"\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n      \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/css-b64-images\": {\n      \"version\": \"0.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/css-b64-images/-/css-b64-images-0.2.5.tgz\",\n      \"integrity\": \"sha1-QgBdgyBLK0pdk7axpWRBM7WSegI=\",\n      \"dev\": true,\n      \"bin\": {\n        \"css-b64-images\": \"bin/css-b64-images\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/cssesc\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz\",\n      \"integrity\": \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\",\n      \"bin\": {\n        \"cssesc\": \"bin/cssesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/custom-event-polyfill\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/custom-event-polyfill/-/custom-event-polyfill-1.0.7.tgz\",\n      \"integrity\": \"sha512-TDDkd5DkaZxZFM8p+1I3yAlvM3rSr1wbrOliG4yJiwinMZN8z/iGL7BTlDkrJcYTmgUSb4ywVCc3ZaUtOtC76w==\"\n    },\n    \"node_modules/cypress\": {\n      \"version\": \"13.17.0\",\n      \"resolved\": \"https://registry.npmjs.org/cypress/-/cypress-13.17.0.tgz\",\n      \"integrity\": \"sha512-5xWkaPurwkIljojFidhw8lFScyxhtiFHl/i/3zov+1Z5CmY4t9tjIdvSXfu82Y3w7wt0uR9KkucbhkVvJZLQSA==\",\n      \"hasInstallScript\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@cypress/request\": \"^3.0.6\",\n        \"@cypress/xvfb\": \"^1.2.4\",\n        \"@types/sinonjs__fake-timers\": \"8.1.1\",\n        \"@types/sizzle\": \"^2.3.2\",\n        \"arch\": \"^2.2.0\",\n        \"blob-util\": \"^2.0.2\",\n        \"bluebird\": \"^3.7.2\",\n        \"buffer\": \"^5.7.1\",\n        \"cachedir\": \"^2.3.0\",\n        \"chalk\": \"^4.1.0\",\n        \"check-more-types\": \"^2.24.0\",\n        \"ci-info\": \"^4.0.0\",\n        \"cli-cursor\": \"^3.1.0\",\n        \"cli-table3\": \"~0.6.1\",\n        \"commander\": \"^6.2.1\",\n        \"common-tags\": \"^1.8.0\",\n        \"dayjs\": \"^1.10.4\",\n        \"debug\": \"^4.3.4\",\n        \"enquirer\": \"^2.3.6\",\n        \"eventemitter2\": \"6.4.7\",\n        \"execa\": \"4.1.0\",\n        \"executable\": \"^4.1.1\",\n        \"extract-zip\": \"2.0.1\",\n        \"figures\": \"^3.2.0\",\n        \"fs-extra\": \"^9.1.0\",\n        \"getos\": \"^3.2.1\",\n        \"is-installed-globally\": \"~0.4.0\",\n        \"lazy-ass\": \"^1.6.0\",\n        \"listr2\": \"^3.8.3\",\n        \"lodash\": \"^4.17.21\",\n        \"log-symbols\": \"^4.0.0\",\n        \"minimist\": \"^1.2.8\",\n        \"ospath\": \"^1.2.2\",\n        \"pretty-bytes\": \"^5.6.0\",\n        \"process\": \"^0.11.10\",\n        \"proxy-from-env\": \"1.0.0\",\n        \"request-progress\": \"^3.0.0\",\n        \"semver\": \"^7.5.3\",\n        \"supports-color\": \"^8.1.1\",\n        \"tmp\": \"~0.2.3\",\n        \"tree-kill\": \"1.2.2\",\n        \"untildify\": \"^4.0.0\",\n        \"yauzl\": \"^2.10.0\"\n      },\n      \"bin\": {\n        \"cypress\": \"bin/cypress\"\n      },\n      \"engines\": {\n        \"node\": \"^16.0.0 || ^18.0.0 || >=20.0.0\"\n      }\n    },\n    \"node_modules/cypress-real-events\": {\n      \"version\": \"1.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/cypress-real-events/-/cypress-real-events-1.12.0.tgz\",\n      \"integrity\": \"sha512-oiy+4kGKkzc2PT36k3GGQqkGxNiVypheWjMtfyi89iIk6bYmTzeqxapaLHS3pnhZOX1IEbTDUVxh8T4Nhs1tyQ==\",\n      \"peerDependencies\": {\n        \"cypress\": \"^4.x || ^5.x || ^6.x || ^7.x || ^8.x || ^9.x || ^10.x || ^11.x || ^12.x || ^13.x\"\n      }\n    },\n    \"node_modules/cypress/node_modules/semver\": {\n      \"version\": \"7.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.5.4.tgz\",\n      \"integrity\": \"sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==\",\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/cypress/node_modules/supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n      }\n    },\n    \"node_modules/dashdash\": {\n      \"version\": \"1.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz\",\n      \"integrity\": \"sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assert-plus\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/dayjs\": {\n      \"version\": \"1.10.7\",\n      \"resolved\": \"https://registry.npmjs.org/dayjs/-/dayjs-1.10.7.tgz\",\n      \"integrity\": \"sha512-P6twpd70BcPK34K26uJ1KT3wlhpuOAPoMwJzpsIWUxHZ7wpmbdZL/hQqBDfz7hGurYSa5PhzdhDHtt319hL3ig==\"\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/decamelize\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",\n      \"integrity\": \"sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/deepmerge\": {\n      \"version\": \"4.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n      \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/default-require-extensions\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/default-require-extensions/-/default-require-extensions-3.0.1.tgz\",\n      \"integrity\": \"sha512-eXTJmRbm2TIt9MgWTsOH1wEuhew6XGZcMeGKCtLedIg/NCsg1iBePXkceTdK4Fii7pzmN9tGsZhKzZ4h7O/fxw==\",\n      \"dependencies\": {\n        \"strip-bom\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/delayed-stream\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n      \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/detect-autofill\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/detect-autofill/-/detect-autofill-1.1.4.tgz\",\n      \"integrity\": \"sha512-utCBQwCR/beSnADQmBC7C4tTueBBkYCl6WSpfGUkYKO/+MzPxqYGj6G4MvHzcKmH1gCTK+VunX2vaagvkRXPvA==\",\n      \"dependencies\": {\n        \"custom-event-polyfill\": \"^1.0.7\"\n      }\n    },\n    \"node_modules/didyoumean\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz\",\n      \"integrity\": \"sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==\"\n    },\n    \"node_modules/diff\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-4.0.2.tgz\",\n      \"integrity\": \"sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==\",\n      \"engines\": {\n        \"node\": \">=0.3.1\"\n      }\n    },\n    \"node_modules/dir-glob\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n      \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-type\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/dlv\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz\",\n      \"integrity\": \"sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==\"\n    },\n    \"node_modules/dompurify\": {\n      \"version\": \"2.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/dompurify/-/dompurify-2.5.4.tgz\",\n      \"integrity\": \"sha512-l5NNozANzaLPPe0XaAwvg3uZcHtDBnziX/HjsY1UcDj1MxTK8Dd0Kv096jyPK5HRzs/XM5IMj20dW8Fk+HnbUA==\"\n    },\n    \"node_modules/dot-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/dot-case/-/dot-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-Kv5nKlh6yRrdrGvxeJ2e5y2eRUpkUosIW4A2AS38zwSz27zu7ufDwQPi5Jhs3XAlGNetl3bmnGhQsMtkKJnj3w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"no-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/dunder-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/ecc-jsbn\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz\",\n      \"integrity\": \"sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jsbn\": \"~0.1.0\",\n        \"safer-buffer\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/electron-to-chromium\": {\n      \"version\": \"1.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.13.tgz\",\n      \"integrity\": \"sha512-lbBcvtIJ4J6sS4tb5TLp1b4LyfCdMkwStzXPyAgVgTRAsep4bvrAGaBOP7ZJtQMNJpSQ9SqG4brWOroNaQtm7Q==\"\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"\n    },\n    \"node_modules/end-of-stream\": {\n      \"version\": \"1.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz\",\n      \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\",\n      \"dependencies\": {\n        \"once\": \"^1.4.0\"\n      }\n    },\n    \"node_modules/enhanced-resolve\": {\n      \"version\": \"5.17.1\",\n      \"resolved\": \"https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.17.1.tgz\",\n      \"integrity\": \"sha512-LMHl3dXhTcfv8gM4kEzIUeTQ+7fpdA0l2tUf34BddXPkz2A5xJ5L/Pchd5BL6rdccM9QGvu0sWZzK1Z1t4wwyg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.2.4\",\n        \"tapable\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/enquirer\": {\n      \"version\": \"2.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/enquirer/-/enquirer-2.3.6.tgz\",\n      \"integrity\": \"sha512-yjNnPr315/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ/odMA7cRkjhsPbltwBOrLg==\",\n      \"dependencies\": {\n        \"ansi-colors\": \"^4.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-module-lexer\": {\n      \"version\": \"1.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.5.4.tgz\",\n      \"integrity\": \"sha512-MVNK56NiMrOwitFB7cqDwq0CQutbw+0BvLshJSse0MUNU+y1FC3bUS/AQg7oUng+/wKrrki7JfmwtVHkVfPLlw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz\",\n      \"integrity\": \"sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es6-error\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es6-error/-/es6-error-4.1.1.tgz\",\n      \"integrity\": \"sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==\"\n    },\n    \"node_modules/esbuild\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.13.15.tgz\",\n      \"integrity\": \"sha512-raCxt02HBKv8RJxE8vkTSCXGIyKHdEdGfUmiYb8wnabnaEmHzyW7DCHb5tEN0xU8ryqg5xw54mcwnYkC4x3AIw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"bin\": {\n        \"esbuild\": \"bin/esbuild\"\n      },\n      \"optionalDependencies\": {\n        \"esbuild-android-arm64\": \"0.13.15\",\n        \"esbuild-darwin-64\": \"0.13.15\",\n        \"esbuild-darwin-arm64\": \"0.13.15\",\n        \"esbuild-freebsd-64\": \"0.13.15\",\n        \"esbuild-freebsd-arm64\": \"0.13.15\",\n        \"esbuild-linux-32\": \"0.13.15\",\n        \"esbuild-linux-64\": \"0.13.15\",\n        \"esbuild-linux-arm\": \"0.13.15\",\n        \"esbuild-linux-arm64\": \"0.13.15\",\n        \"esbuild-linux-mips64le\": \"0.13.15\",\n        \"esbuild-linux-ppc64le\": \"0.13.15\",\n        \"esbuild-netbsd-64\": \"0.13.15\",\n        \"esbuild-openbsd-64\": \"0.13.15\",\n        \"esbuild-sunos-64\": \"0.13.15\",\n        \"esbuild-windows-32\": \"0.13.15\",\n        \"esbuild-windows-64\": \"0.13.15\",\n        \"esbuild-windows-arm64\": \"0.13.15\"\n      }\n    },\n    \"node_modules/esbuild-android-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-m602nft/XXeO8YQPUDVoHfjyRVPdPgjyyXOxZ44MK/agewFFkPa8tUo6lAzSWh5Ui5PB4KR9UIFTSBKh/RrCmg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ]\n    },\n    \"node_modules/esbuild-darwin-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-ihOQRGs2yyp7t5bArCwnvn2Atr6X4axqPpEdCFPVp7iUj4cVSdisgvEKdNR7yH3JDjW6aQDw40iQFoTqejqxvQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/esbuild-darwin-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-i1FZssTVxUqNlJ6cBTj5YQj4imWy3m49RZRnHhLpefFIh0To05ow9DTrXROTE1urGTQCloFUXTX8QfGJy1P8dQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/esbuild-freebsd-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-G3dLBXUI6lC6Z09/x+WtXBXbOYQZ0E8TDBqvn7aMaOCzryJs8LyVXKY4CPnHFXZAbSwkCbqiPuSQ1+HhrNk7EA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ]\n    },\n    \"node_modules/esbuild-freebsd-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-KJx0fzEDf1uhNOZQStV4ujg30WlnwqUASaGSFPhznLM/bbheu9HhqZ6mJJZM32lkyfGJikw0jg7v3S0oAvtvQQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ]\n    },\n    \"node_modules/esbuild-linux-32\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.13.15.tgz\",\n      \"integrity\": \"sha512-ZvTBPk0YWCLMCXiFmD5EUtB30zIPvC5Itxz0mdTu/xZBbbHJftQgLWY49wEPSn2T/TxahYCRDWun5smRa0Tu+g==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/esbuild-linux-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-eCKzkNSLywNeQTRBxJRQ0jxRCl2YWdMB3+PkWFo2BBQYC5mISLIVIjThNtn6HUNqua1pnvgP5xX0nHbZbPj5oA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/esbuild-linux-arm\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.13.15.tgz\",\n      \"integrity\": \"sha512-wUHttDi/ol0tD8ZgUMDH8Ef7IbDX+/UsWJOXaAyTdkT7Yy9ZBqPg8bgB/Dn3CZ9SBpNieozrPRHm0BGww7W/jA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/esbuild-linux-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-bYpuUlN6qYU9slzr/ltyLTR9YTBS7qUDymO8SV7kjeNext61OdmqFAzuVZom+OLW1HPHseBfJ/JfdSlx8oTUoA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/esbuild-linux-mips64le\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.13.15.tgz\",\n      \"integrity\": \"sha512-KlVjIG828uFPyJkO/8gKwy9RbXhCEUeFsCGOJBepUlpa7G8/SeZgncUEz/tOOUJTcWMTmFMtdd3GElGyAtbSWg==\",\n      \"cpu\": [\n        \"mips64el\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/esbuild-linux-ppc64le\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.13.15.tgz\",\n      \"integrity\": \"sha512-h6gYF+OsaqEuBjeesTBtUPw0bmiDu7eAeuc2OEH9S6mV9/jPhPdhOWzdeshb0BskRZxPhxPOjqZ+/OqLcxQwEQ==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/esbuild-netbsd-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-3+yE9emwoevLMyvu+iR3rsa+Xwhie7ZEHMGDQ6dkqP/ndFzRHkobHUKTe+NCApSqG5ce2z4rFu+NX/UHnxlh3w==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"netbsd\"\n      ]\n    },\n    \"node_modules/esbuild-openbsd-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-wTfvtwYJYAFL1fSs8yHIdf5GEE4NkbtbXtjLWjM3Cw8mmQKqsg8kTiqJ9NJQe5NX/5Qlo7Xd9r1yKMMkHllp5g==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"openbsd\"\n      ]\n    },\n    \"node_modules/esbuild-sunos-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-lbivT9Bx3t1iWWrSnGyBP9ODriEvWDRiweAs69vI+miJoeKwHWOComSRukttbuzjZ8r1q0mQJ8Z7yUsDJ3hKdw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"sunos\"\n      ]\n    },\n    \"node_modules/esbuild-windows-32\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.13.15.tgz\",\n      \"integrity\": \"sha512-fDMEf2g3SsJ599MBr50cY5ve5lP1wyVwTe6aLJsM01KtxyKkB4UT+fc5MXQFn3RLrAIAZOG+tHC+yXObpSn7Nw==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/esbuild-windows-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-9aMsPRGDWCd3bGjUIKG/ZOJPKsiztlxl/Q3C1XDswO6eNX/Jtwu4M+jb6YDH9hRSUflQWX0XKAfWzgy5Wk54JQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/esbuild-windows-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-zzvyCVVpbwQQATaf3IG8mu1IwGEiDxKkYUdA4FpoCHi1KtPa13jeScYDjlW0Qh+ebWzpKfR2ZwvqAQkSWNcKjA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz\",\n      \"integrity\": \"sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/eslint-scope\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n      \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^4.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"bin\": {\n        \"esparse\": \"bin/esparse.js\",\n        \"esvalidate\": \"bin/esvalidate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/esrecurse/node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n      \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eventemitter2\": {\n      \"version\": \"6.4.7\",\n      \"resolved\": \"https://registry.npmjs.org/eventemitter2/-/eventemitter2-6.4.7.tgz\",\n      \"integrity\": \"sha512-tYUSVOGeQPKt/eC1ABfhHy5Xd96N3oIijJvN3O9+TsC28T5V9yX9oEfEK5faP0EFSNVOG97qtAS68GBrQB2hDg==\"\n    },\n    \"node_modules/events\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/events/-/events-3.3.0.tgz\",\n      \"integrity\": \"sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=0.8.x\"\n      }\n    },\n    \"node_modules/execa\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-4.1.0.tgz\",\n      \"integrity\": \"sha512-j5W0//W7f8UxAn8hXVnwG8tLwdiUy4FJLcSupCg6maBYZDpyBvTApK7KyuI4bKj8KOh1r2YH+6ucuYtJv1bTZA==\",\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"get-stream\": \"^5.0.0\",\n        \"human-signals\": \"^1.1.1\",\n        \"is-stream\": \"^2.0.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"npm-run-path\": \"^4.0.0\",\n        \"onetime\": \"^5.1.0\",\n        \"signal-exit\": \"^3.0.2\",\n        \"strip-final-newline\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n      }\n    },\n    \"node_modules/executable\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/executable/-/executable-4.1.1.tgz\",\n      \"integrity\": \"sha512-8iA79xD3uAch729dUG8xaaBBFGaEa0wdD2VkYLFHwlqosEj/jT66AzcreRDSgV7ehnNLBW2WR5jIXwGKjVdTLg==\",\n      \"dependencies\": {\n        \"pify\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/extend\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.2.tgz\",\n      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/extract-zip\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz\",\n      \"integrity\": \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\",\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"get-stream\": \"^5.1.0\",\n        \"yauzl\": \"^2.10.0\"\n      },\n      \"bin\": {\n        \"extract-zip\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.17.0\"\n      },\n      \"optionalDependencies\": {\n        \"@types/yauzl\": \"^2.9.1\"\n      }\n    },\n    \"node_modules/extsprintf\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz\",\n      \"integrity\": \"sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g==\",\n      \"engines\": [\n        \"node >=0.6.0\"\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/fast-glob\": {\n      \"version\": \"3.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz\",\n      \"integrity\": \"sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==\",\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"^2.0.2\",\n        \"@nodelib/fs.walk\": \"^1.2.3\",\n        \"glob-parent\": \"^5.1.2\",\n        \"merge2\": \"^1.3.0\",\n        \"micromatch\": \"^4.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6.0\"\n      }\n    },\n    \"node_modules/fast-glob/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/fastq\": {\n      \"version\": \"1.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz\",\n      \"integrity\": \"sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==\",\n      \"dependencies\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"node_modules/fd-slicer\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz\",\n      \"integrity\": \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\",\n      \"dependencies\": {\n        \"pend\": \"~1.2.0\"\n      }\n    },\n    \"node_modules/figures\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-3.2.0.tgz\",\n      \"integrity\": \"sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==\",\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^1.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/find-cache-dir\": {\n      \"version\": \"3.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.2.tgz\",\n      \"integrity\": \"sha512-wXZV5emFEjrridIgED11OoUKLxiYjAcqot/NJdAkOhlJ+vGzwhOAfcG5OX1jP+S0PcjEn8bdMJv+g2jwQ3Onig==\",\n      \"dependencies\": {\n        \"commondir\": \"^1.0.1\",\n        \"make-dir\": \"^3.0.2\",\n        \"pkg-dir\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/avajs/find-cache-dir?sponsor=1\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n      \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n      \"dependencies\": {\n        \"locate-path\": \"^5.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/foreground-child\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-2.0.0.tgz\",\n      \"integrity\": \"sha512-dCIq9FpEcyQyXKCkyzmlPTFNgrCzPudOe+mhvJU5zAtlBnGVy2yKxtfsxK2tQBThwq225jcvBjpw1Gr40uzZCA==\",\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"signal-exit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/forever-agent\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz\",\n      \"integrity\": \"sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw==\",\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/form-data\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.1.tgz\",\n      \"integrity\": \"sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"asynckit\": \"^0.4.0\",\n        \"combined-stream\": \"^1.0.8\",\n        \"mime-types\": \"^2.1.12\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/fraction.js\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/fraction.js/-/fraction.js-4.1.2.tgz\",\n      \"integrity\": \"sha512-o2RiJQ6DZaR/5+Si0qJUIy637QMRudSi9kU/FFzx9EZazrIdnBgpU+3sEWCxAVhH2RtxW2Oz+T4p2o8uOPVcgA==\",\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"type\": \"patreon\",\n        \"url\": \"https://www.patreon.com/infusion\"\n      }\n    },\n    \"node_modules/fromentries\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fromentries/-/fromentries-1.3.2.tgz\",\n      \"integrity\": \"sha512-cHEpEQHUg0f8XdtZCc2ZAhrHzKzT0MrFUTcvx+hfxYu7rGMDc5SKoXFh+n4YigxsHXRzc6OrCshdR1bWH6HHyg==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/fs-extra\": {\n      \"version\": \"9.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz\",\n      \"integrity\": \"sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==\",\n      \"dependencies\": {\n        \"at-least-node\": \"^1.0.0\",\n        \"graceful-fs\": \"^4.2.0\",\n        \"jsonfile\": \"^6.0.1\",\n        \"universalify\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\"\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/gensync\": {\n      \"version\": \"1.0.0-beta.2\",\n      \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n      \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.6.tgz\",\n      \"integrity\": \"sha512-qxsEs+9A+u85HhllWJJFicJfPDhRmjzoYdl64aMWW9yRIJmSyxdn8IEkuIM530/7T+lv0TIHd8L6Q/ra0tEoeA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"dunder-proto\": \"^1.0.0\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"math-intrinsics\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-package-type\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz\",\n      \"integrity\": \"sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==\",\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/get-stream\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz\",\n      \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\",\n      \"dependencies\": {\n        \"pump\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/getos\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/getos/-/getos-3.2.1.tgz\",\n      \"integrity\": \"sha512-U56CfOK17OKgTVqozZjUKNdkfEv6jk5WISBJ8SHoagjE6L69zOwl3Z+O8myjY9MEW3i2HPWQBt/LTbCgcC973Q==\",\n      \"dependencies\": {\n        \"async\": \"^3.2.0\"\n      }\n    },\n    \"node_modules/getpass\": {\n      \"version\": \"0.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz\",\n      \"integrity\": \"sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assert-plus\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.6.tgz\",\n      \"integrity\": \"sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/glob-to-regexp\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz\",\n      \"integrity\": \"sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/global-dirs\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/global-dirs/-/global-dirs-3.0.0.tgz\",\n      \"integrity\": \"sha512-v8ho2DS5RiCjftj1nD9NmnfaOzTdud7RRnVd9kFNOjqZbISlx5DQ+OrTkywgd0dIt7oFCvKetZSHoHcP3sDdiA==\",\n      \"dependencies\": {\n        \"ini\": \"2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/global-dirs/node_modules/ini\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ini/-/ini-2.0.0.tgz\",\n      \"integrity\": \"sha512-7PnF4oN3CvZF23ADhA5wRaYEQpJ8qygSkbtTXWBeXWXmEVRXK+1ITciHWwHhsjv1TmW0MgacIv6hEi5pX5NQdA==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/globals\": {\n      \"version\": \"11.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-11.12.0.tgz\",\n      \"integrity\": \"sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/globby\": {\n      \"version\": \"11.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.0.4.tgz\",\n      \"integrity\": \"sha512-9O4MVG9ioZJ08ffbcyVYyLOJLk5JQ688pJ4eMGLpdWLHq/Wr1D9BlriLQyL0E+jbkuePVZXYFj47QM/v093wHg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-union\": \"^2.1.0\",\n        \"dir-glob\": \"^3.0.1\",\n        \"fast-glob\": \"^3.1.1\",\n        \"ignore\": \"^5.1.4\",\n        \"merge2\": \"^1.3.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\"\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasha\": {\n      \"version\": \"5.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasha/-/hasha-5.2.2.tgz\",\n      \"integrity\": \"sha512-Hrp5vIK/xr5SkeN2onO32H0MgNZ0f17HRNH39WfL0SYUNOTZ5Lz1TJ8Pajo/87dYGEFlLMm7mIc/k/s6Bvz9HQ==\",\n      \"dependencies\": {\n        \"is-stream\": \"^2.0.0\",\n        \"type-fest\": \"^0.8.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/hasha/node_modules/type-fest\": {\n      \"version\": \"0.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz\",\n      \"integrity\": \"sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/he\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/he/-/he-1.2.0.tgz\",\n      \"integrity\": \"sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw==\",\n      \"dev\": true,\n      \"bin\": {\n        \"he\": \"bin/he\"\n      }\n    },\n    \"node_modules/html-escaper\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz\",\n      \"integrity\": \"sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\"\n    },\n    \"node_modules/html-minifier-terser\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/html-minifier-terser/-/html-minifier-terser-5.1.1.tgz\",\n      \"integrity\": \"sha512-ZPr5MNObqnV/T9akshPKbVgyOqLmy+Bxo7juKCfTfnjNniTAMdy4hz21YQqoofMBJD2kdREaqPPdThoR78Tgxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camel-case\": \"^4.1.1\",\n        \"clean-css\": \"^4.2.3\",\n        \"commander\": \"^4.1.1\",\n        \"he\": \"^1.2.0\",\n        \"param-case\": \"^3.0.3\",\n        \"relateurl\": \"^0.2.7\",\n        \"terser\": \"^4.6.3\"\n      },\n      \"bin\": {\n        \"html-minifier-terser\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/html-minifier-terser/node_modules/clean-css\": {\n      \"version\": \"4.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/clean-css/-/clean-css-4.2.4.tgz\",\n      \"integrity\": \"sha512-EJUDT7nDVFDvaQgAo2G/PJvxmp1o/c6iXLbswsBbUFXi1Nr+AjA2cKmfbKDMjMvzEe75g3P6JkaDDAKk96A85A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"source-map\": \"~0.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 4.0\"\n      }\n    },\n    \"node_modules/html-minifier-terser/node_modules/commander\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n      \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/html-minifier-terser/node_modules/terser\": {\n      \"version\": \"4.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-4.8.1.tgz\",\n      \"integrity\": \"sha512-4GnLC0x667eJG0ewJTa6z/yXrbLGv80D9Ru6HIpCQmO+Q4PfEtBFi0ObSckqwL6VyQv/7ENJieXHo2ANmdQwgw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"commander\": \"^2.20.0\",\n        \"source-map\": \"~0.6.1\",\n        \"source-map-support\": \"~0.5.12\"\n      },\n      \"bin\": {\n        \"terser\": \"bin/terser\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/html-minifier-terser/node_modules/terser/node_modules/commander\": {\n      \"version\": \"2.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.20.3.tgz\",\n      \"integrity\": \"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/http-signature\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.4.0.tgz\",\n      \"integrity\": \"sha512-G5akfn7eKbpDN+8nPS/cb57YeA1jLTVxjpCj7tmm3QKPdyDy7T+qSC40e9ptydSWvkwjSXw1VbkpyEm39ukeAg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assert-plus\": \"^1.0.0\",\n        \"jsprim\": \"^2.0.2\",\n        \"sshpk\": \"^1.18.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/human-signals\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-1.1.1.tgz\",\n      \"integrity\": \"sha512-SEQu7vl8KjNL2eoGBLF3+wAjpsNfA9XMlXAYj/3EdaNfAlxKthD1xjEQfGOUhllCGGJVNY34bRr6lPINhNjyZw==\",\n      \"engines\": {\n        \"node\": \">=8.12.0\"\n      }\n    },\n    \"node_modules/ieee754\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz\",\n      \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.2.4.tgz\",\n      \"integrity\": \"sha512-MAb38BcSbH0eHNBxn7ql2NH/kX33OkB3lZ1BNdh7ENeRChHTYsTvWrMubiIAMNS2llXEEgZ1MUOBtXChP3kaFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/immediate\": {\n      \"version\": \"3.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/immediate/-/immediate-3.0.6.tgz\",\n      \"integrity\": \"sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==\"\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n      \"engines\": {\n        \"node\": \">=0.8.19\"\n      }\n    },\n    \"node_modules/indent-string\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz\",\n      \"integrity\": \"sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\n      \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\n      \"dependencies\": {\n        \"hasown\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-installed-globally\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.4.0.tgz\",\n      \"integrity\": \"sha512-iwGqO3J21aaSkC7jWnHP/difazwS7SFeIqxv6wEtLU8Y5KlzFTjyqcSIT0d8s4+dDhKytsk9PJZ2BkS5eZwQRQ==\",\n      \"dependencies\": {\n        \"global-dirs\": \"^3.0.0\",\n        \"is-path-inside\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-path-inside\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-stream\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-typedarray\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz\",\n      \"integrity\": \"sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==\"\n    },\n    \"node_modules/is-unicode-supported\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz\",\n      \"integrity\": \"sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-windows\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz\",\n      \"integrity\": \"sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\n      \"integrity\": \"sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==\"\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\"\n    },\n    \"node_modules/isstream\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz\",\n      \"integrity\": \"sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/istanbul-lib-coverage\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.0.tgz\",\n      \"integrity\": \"sha512-eOeJ5BHCmHYvQK7xt9GkdHuzuCGS1Y6g9Gvnx3Ym33fz/HpLRYxiS0wHNr+m/MBC8B647Xt608vCDEvhl9c6Mw==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-hook\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-hook/-/istanbul-lib-hook-3.0.0.tgz\",\n      \"integrity\": \"sha512-Pt/uge1Q9s+5VAZ+pCo16TYMWPBIl+oaNIjgLQxcX0itS6ueeaA+pEfThZpH8WxhFgCiEb8sAJY6MdUKgiIWaQ==\",\n      \"dependencies\": {\n        \"append-transform\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-instrument\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-4.0.3.tgz\",\n      \"integrity\": \"sha512-BXgQl9kf4WTCPCCpmFGoJkz/+uhvm7h7PFKUYxh7qarQd3ER33vHG//qaE8eN25l07YqZPpHXU9I09l/RD5aGQ==\",\n      \"dependencies\": {\n        \"@babel/core\": \"^7.7.5\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-processinfo\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-processinfo/-/istanbul-lib-processinfo-2.0.3.tgz\",\n      \"integrity\": \"sha512-NkwHbo3E00oybX6NGJi6ar0B29vxyvNwoC7eJ4G4Yq28UfY758Hgn/heV8VRFhevPED4LXfFz0DQ8z/0kw9zMg==\",\n      \"dependencies\": {\n        \"archy\": \"^1.0.0\",\n        \"cross-spawn\": \"^7.0.3\",\n        \"istanbul-lib-coverage\": \"^3.2.0\",\n        \"p-map\": \"^3.0.0\",\n        \"rimraf\": \"^3.0.0\",\n        \"uuid\": \"^8.3.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-processinfo/node_modules/p-map\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-map/-/p-map-3.0.0.tgz\",\n      \"integrity\": \"sha512-d3qXVTF/s+W+CdJ5A29wywV2n8CQQYahlgz2bFiA+4eVNJbHJodPZ+/gXwPGh0bOqA+j8S+6+ckmvLGPk1QpxQ==\",\n      \"dependencies\": {\n        \"aggregate-error\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-report\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz\",\n      \"integrity\": \"sha512-wcdi+uAKzfiGT2abPpKZ0hSU1rGQjUQnLvtY5MpQ7QCTahD3VODhcu4wcfY1YtkGaDD5yuydOLINXsfbus9ROw==\",\n      \"dependencies\": {\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"make-dir\": \"^3.0.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-source-maps\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-4.0.1.tgz\",\n      \"integrity\": \"sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==\",\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"source-map\": \"^0.6.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-reports\": {\n      \"version\": \"3.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.1.5.tgz\",\n      \"integrity\": \"sha512-nUsEMa9pBt/NOHqbcbeJEgqIlY/K7rVWUX6Lql2orY5e9roQOthbR3vtY4zzf2orPELg80fnxxk9zUyPlgwD1w==\",\n      \"dependencies\": {\n        \"html-escaper\": \"^2.0.0\",\n        \"istanbul-lib-report\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-worker\": {\n      \"version\": \"27.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/jest-worker/-/jest-worker-27.5.1.tgz\",\n      \"integrity\": \"sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\",\n        \"merge-stream\": \"^2.0.0\",\n        \"supports-color\": \"^8.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/jest-worker/node_modules/supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n      }\n    },\n    \"node_modules/jiti\": {\n      \"version\": \"1.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/jiti/-/jiti-1.21.0.tgz\",\n      \"integrity\": \"sha512-gFqAIbuKyyso/3G2qhiO2OM6shY6EPP/R0+mkDbyspxKazh8BXDC5FiFsUjlczgdNz/vfra0da2y+aHrusLG/Q==\",\n      \"bin\": {\n        \"jiti\": \"bin/jiti.js\"\n      }\n    },\n    \"node_modules/jquery\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/jquery/-/jquery-3.6.0.tgz\",\n      \"integrity\": \"sha512-JVzAR/AjBvVt2BmYhxRCSYysDsPcssdmTFnzyLEts9qNwmjmu4JTAMYubEfwVOSwpQ1I1sKKFcxhZCI2buerfw==\"\n    },\n    \"node_modules/jquery-ui-dist\": {\n      \"version\": \"1.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/jquery-ui-dist/-/jquery-ui-dist-1.13.1.tgz\",\n      \"integrity\": \"sha512-Y711Pu4BRVrAlL58KSxX4ail74jaCJZaZcdNDLava+MgZeNwmVWmyYiK7KxyoJu1MB73eSunjJvYDbOuNrOA7w==\",\n      \"dependencies\": {\n        \"jquery\": \">=1.8.0 <4.0.0\"\n      }\n    },\n    \"node_modules/jqueryui\": {\n      \"version\": \"1.11.1\",\n      \"resolved\": \"https://registry.npmjs.org/jqueryui/-/jqueryui-1.11.1.tgz\",\n      \"integrity\": \"sha1-hxhVBwX1Vo0RmRlhaQlNtzsikbw=\",\n      \"dev\": true\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"3.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz\",\n      \"integrity\": \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\",\n      \"dependencies\": {\n        \"argparse\": \"^1.0.7\",\n        \"esprima\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsbn\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz\",\n      \"integrity\": \"sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsesc\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz\",\n      \"integrity\": \"sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==\",\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/json-parse-even-better-errors\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/json-schema\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz\",\n      \"integrity\": \"sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA==\",\n      \"license\": \"(AFL-2.1 OR BSD-3-Clause)\"\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/json-stringify-safe\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\",\n      \"integrity\": \"sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/jsonfile\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\",\n      \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==\",\n      \"dependencies\": {\n        \"universalify\": \"^2.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"graceful-fs\": \"^4.1.6\"\n      }\n    },\n    \"node_modules/jsprim\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-2.0.2.tgz\",\n      \"integrity\": \"sha512-gqXddjPqQ6G40VdnI6T6yObEC+pDNvyP95wdQhkWkg7crHH3km5qP1FsOXEkzEQwnz6gz5qGTn1c2Y52wP3OyQ==\",\n      \"engines\": [\n        \"node >=0.6.0\"\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assert-plus\": \"1.0.0\",\n        \"extsprintf\": \"1.3.0\",\n        \"json-schema\": \"0.4.0\",\n        \"verror\": \"1.10.0\"\n      }\n    },\n    \"node_modules/jszip\": {\n      \"version\": \"3.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/jszip/-/jszip-3.10.1.tgz\",\n      \"integrity\": \"sha512-xXDvecyTpGLrqFrvkrUSoxxfJI5AH7U8zxxtVclpsUtMCq4JQ290LY8AW5c7Ggnr/Y/oK+bQMbqK2qmtk3pN4g==\",\n      \"dependencies\": {\n        \"lie\": \"~3.3.0\",\n        \"pako\": \"~1.0.2\",\n        \"readable-stream\": \"~2.3.6\",\n        \"setimmediate\": \"^1.0.5\"\n      }\n    },\n    \"node_modules/lazy-ass\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/lazy-ass/-/lazy-ass-1.6.0.tgz\",\n      \"integrity\": \"sha512-cc8oEVoctTvsFZ/Oje/kGnHbpWHYBe8IAJe4C0QNc3t8uM/0Y8+erSz/7Y1ALuXTEZTMvxXwO6YbX1ey3ujiZw==\",\n      \"engines\": {\n        \"node\": \"> 0.8\"\n      }\n    },\n    \"node_modules/lie\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/lie/-/lie-3.3.0.tgz\",\n      \"integrity\": \"sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==\",\n      \"dependencies\": {\n        \"immediate\": \"~3.0.5\"\n      }\n    },\n    \"node_modules/lilconfig\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-2.1.0.tgz\",\n      \"integrity\": \"sha512-utWOt/GHzuUxnLKxB6dk81RoOeoNeHgbrXiuGk4yyF5qlRz+iIVWu56E2fqGHFrXz0QNUhLB/8nKqvRH66JKGQ==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/lines-and-columns\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\"\n    },\n    \"node_modules/listr2\": {\n      \"version\": \"3.14.0\",\n      \"resolved\": \"https://registry.npmjs.org/listr2/-/listr2-3.14.0.tgz\",\n      \"integrity\": \"sha512-TyWI8G99GX9GjE54cJ+RrNMcIFBfwMPxc3XTFiAYGN4s10hWROGtOg7+O6u6LE3mNkyld7RSLE6nrKBvTfcs3g==\",\n      \"dependencies\": {\n        \"cli-truncate\": \"^2.1.0\",\n        \"colorette\": \"^2.0.16\",\n        \"log-update\": \"^4.0.0\",\n        \"p-map\": \"^4.0.0\",\n        \"rfdc\": \"^1.3.0\",\n        \"rxjs\": \"^7.5.1\",\n        \"through\": \"^2.3.8\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"enquirer\": \">= 2.3.0 < 3\"\n      },\n      \"peerDependenciesMeta\": {\n        \"enquirer\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/loader-runner\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/loader-runner/-/loader-runner-4.3.0.tgz\",\n      \"integrity\": \"sha512-3R/1M+yS3j5ou80Me59j7F9IMs4PXs3VqRrm0TU3AbKPxlmpoY1TNscJV/oGJXo8qCatFGTfDbY6W6ipGOYXfg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=6.11.5\"\n      }\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n      \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n      \"dependencies\": {\n        \"p-locate\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\"\n    },\n    \"node_modules/lodash-es\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz\",\n      \"integrity\": \"sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==\"\n    },\n    \"node_modules/lodash.debounce\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz\",\n      \"integrity\": \"sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/lodash.flattendeep\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.flattendeep/-/lodash.flattendeep-4.4.0.tgz\",\n      \"integrity\": \"sha512-uHaJFihxmJcEX3kT4I23ABqKKalJ/zDrDg0lsFtc1h+3uw49SIJ5beyhx5ExVRti3AvKoOJngIj7xz3oylPdWQ==\"\n    },\n    \"node_modules/lodash.once\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz\",\n      \"integrity\": \"sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==\"\n    },\n    \"node_modules/log-symbols\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/log-symbols/-/log-symbols-4.1.0.tgz\",\n      \"integrity\": \"sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==\",\n      \"dependencies\": {\n        \"chalk\": \"^4.1.0\",\n        \"is-unicode-supported\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/log-update\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/log-update/-/log-update-4.0.0.tgz\",\n      \"integrity\": \"sha512-9fkkDevMefjg0mmzWFBW8YkFP91OrizzkW3diF7CpG+S2EYdy4+TVfGwz1zeF8x7hCx1ovSPTOE9Ngib74qqUg==\",\n      \"dependencies\": {\n        \"ansi-escapes\": \"^4.3.0\",\n        \"cli-cursor\": \"^3.1.0\",\n        \"slice-ansi\": \"^4.0.0\",\n        \"wrap-ansi\": \"^6.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/log-update/node_modules/slice-ansi\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slice-ansi/-/slice-ansi-4.0.0.tgz\",\n      \"integrity\": \"sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"astral-regex\": \"^2.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/slice-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/log-update/node_modules/wrap-ansi\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz\",\n      \"integrity\": \"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/lower-case\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/lower-case/-/lower-case-2.0.2.tgz\",\n      \"integrity\": \"sha512-7fm3l3NAF9WfN6W3JOmf5drwpVqX78JtoGJ3A6W0a6ZnldM41w2fV5D490psKFTpMds8TJse/eHLFFsNHHjHgg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/make-dir\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz\",\n      \"integrity\": \"sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==\",\n      \"dependencies\": {\n        \"semver\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/make-error\": {\n      \"version\": \"1.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz\",\n      \"integrity\": \"sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==\"\n    },\n    \"node_modules/marked\": {\n      \"version\": \"4.0.12\",\n      \"resolved\": \"https://registry.npmjs.org/marked/-/marked-4.0.12.tgz\",\n      \"integrity\": \"sha512-hgibXWrEDNBWgGiK18j/4lkS6ihTe9sxtV4Q1OQppb/0zzyPSzoFANBa5MfsG/zgsWklmNnhm0XACZOH/0HBiQ==\",\n      \"bin\": {\n        \"marked\": \"bin/marked.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/math-intrinsics\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.0.0.tgz\",\n      \"integrity\": \"sha512-4MqMiKP90ybymYvsut0CH2g4XWbfLtmlCkXmtmdcDCxNB+mQcu1w/1+L/VD7vi/PSv7X2JYV7SCcR+jiPXnQtA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/merge-stream\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n      \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\"\n    },\n    \"node_modules/merge2\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n      \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n      \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n      \"dependencies\": {\n        \"braces\": \"^3.0.3\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mimic-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/minify\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minify/-/minify-7.0.1.tgz\",\n      \"integrity\": \"sha512-U3CjnPKRjPu3DxZX7NsB833r2ijbw9af3fHsaChn6o7BHKvaT/zxYDQ8Q/3W7VFXGDrnkAx6XBx3ggEf5KJm7A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"clean-css\": \"^5.0.1\",\n        \"css-b64-images\": \"~0.2.5\",\n        \"debug\": \"^4.1.0\",\n        \"html-minifier-terser\": \"^5.1.1\",\n        \"terser\": \"^5.3.2\",\n        \"try-to-catch\": \"^3.0.0\"\n      },\n      \"bin\": {\n        \"minify\": \"bin/minify.js\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n      \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/mz\": {\n      \"version\": \"2.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/mz/-/mz-2.7.0.tgz\",\n      \"integrity\": \"sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==\",\n      \"dependencies\": {\n        \"any-promise\": \"^1.0.0\",\n        \"object-assign\": \"^4.0.1\",\n        \"thenify-all\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/nanoid\": {\n      \"version\": \"3.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.8.tgz\",\n      \"integrity\": \"sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"bin\": {\n        \"nanoid\": \"bin/nanoid.cjs\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n      }\n    },\n    \"node_modules/neo-async\": {\n      \"version\": \"2.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz\",\n      \"integrity\": \"sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/no-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/no-case/-/no-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-fgAN3jGAh+RoxUGZHTSOLJIqUc2wmoBwGR4tbpNAKmmovFoWq0OdRkb0VkldReO2a2iBT/OEulG9XSUc10r3zg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lower-case\": \"^2.0.2\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/node-preload\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/node-preload/-/node-preload-0.2.1.tgz\",\n      \"integrity\": \"sha512-RM5oyBy45cLEoHqCeh+MNuFAxO0vTFBLskvQbOKnEE7YTTSN4tbN8QWDIPQ6L+WvKsB/qLEGpYe2ZZ9d4W9OIQ==\",\n      \"dependencies\": {\n        \"process-on-spawn\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/node-releases\": {\n      \"version\": \"2.0.18\",\n      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.18.tgz\",\n      \"integrity\": \"sha512-d9VeXT4SJ7ZeOqGX6R5EM022wpL+eWPooLI+5UpWn2jCT1aosUQEhQP214x33Wkwx3JQMvIm+tIoVOdodFS40g==\"\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/normalize-range\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz\",\n      \"integrity\": \"sha1-LRDAa9/TEuqXd2laTShDlFa3WUI=\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/npm-run-path\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n      \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n      \"dependencies\": {\n        \"path-key\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/nyc\": {\n      \"version\": \"15.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/nyc/-/nyc-15.1.0.tgz\",\n      \"integrity\": \"sha512-jMW04n9SxKdKi1ZMGhvUTHBN0EICCRkHemEoE5jm6mTYcqcdas0ATzgUgejlQUHMvpnOZqGB5Xxsv9KxJW1j8A==\",\n      \"dependencies\": {\n        \"@istanbuljs/load-nyc-config\": \"^1.0.0\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"caching-transform\": \"^4.0.0\",\n        \"convert-source-map\": \"^1.7.0\",\n        \"decamelize\": \"^1.2.0\",\n        \"find-cache-dir\": \"^3.2.0\",\n        \"find-up\": \"^4.1.0\",\n        \"foreground-child\": \"^2.0.0\",\n        \"get-package-type\": \"^0.1.0\",\n        \"glob\": \"^7.1.6\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"istanbul-lib-hook\": \"^3.0.0\",\n        \"istanbul-lib-instrument\": \"^4.0.0\",\n        \"istanbul-lib-processinfo\": \"^2.0.2\",\n        \"istanbul-lib-report\": \"^3.0.0\",\n        \"istanbul-lib-source-maps\": \"^4.0.0\",\n        \"istanbul-reports\": \"^3.0.2\",\n        \"make-dir\": \"^3.0.0\",\n        \"node-preload\": \"^0.2.1\",\n        \"p-map\": \"^3.0.0\",\n        \"process-on-spawn\": \"^1.0.0\",\n        \"resolve-from\": \"^5.0.0\",\n        \"rimraf\": \"^3.0.0\",\n        \"signal-exit\": \"^3.0.2\",\n        \"spawn-wrap\": \"^2.0.0\",\n        \"test-exclude\": \"^6.0.0\",\n        \"yargs\": \"^15.0.2\"\n      },\n      \"bin\": {\n        \"nyc\": \"bin/nyc.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8.9\"\n      }\n    },\n    \"node_modules/nyc/node_modules/p-map\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-map/-/p-map-3.0.0.tgz\",\n      \"integrity\": \"sha512-d3qXVTF/s+W+CdJ5A29wywV2n8CQQYahlgz2bFiA+4eVNJbHJodPZ+/gXwPGh0bOqA+j8S+6+ckmvLGPk1QpxQ==\",\n      \"dependencies\": {\n        \"aggregate-error\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/nyc/node_modules/resolve-from\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n      \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-hash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz\",\n      \"integrity\": \"sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==\",\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.3\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.3.tgz\",\n      \"integrity\": \"sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/onecolor\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/onecolor/-/onecolor-2.4.2.tgz\",\n      \"integrity\": \"sha512-V2BitXZgajFyGmUNh+lYfoOQAKj31YhOBjqYVsVEkYUYUCr7MsVQbBKJdUWmLhu1c+y3imbdagOjbeC8ygrTyA==\",\n      \"engines\": {\n        \"node\": \">=0.4.8\"\n      }\n    },\n    \"node_modules/onetime\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\",\n      \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\",\n      \"dependencies\": {\n        \"mimic-fn\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ospath\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/ospath/-/ospath-1.2.2.tgz\",\n      \"integrity\": \"sha512-o6E5qJV5zkAbIDNhGSIlyOhScKXgQrSRMilfph0clDfM0nEnBOlKlH4sWDmG95BW/CvwNz0vmm7dJVtU2KlMiA==\"\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n      \"dependencies\": {\n        \"p-try\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n      \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n      \"dependencies\": {\n        \"p-limit\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/p-map\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz\",\n      \"integrity\": \"sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==\",\n      \"dependencies\": {\n        \"aggregate-error\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-try\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n      \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/package-hash\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/package-hash/-/package-hash-4.0.0.tgz\",\n      \"integrity\": \"sha512-whdkPIooSu/bASggZ96BWVvZTRMOFxnyUG5PnTSGKoJE2gd5mbVNmR2Nj20QFzxYYgAXpoqC+AiXzl+UMRh7zQ==\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.15\",\n        \"hasha\": \"^5.0.0\",\n        \"lodash.flattendeep\": \"^4.4.0\",\n        \"release-zalgo\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pako\": {\n      \"version\": \"1.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/pako/-/pako-1.0.11.tgz\",\n      \"integrity\": \"sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==\"\n    },\n    \"node_modules/param-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/param-case/-/param-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-RXlj7zCYokReqWpOPH9oYivUzLYZ5vAPIfEmCTNViosC78F8F0H9y7T7gG2M39ymgutxF5gcFEsyZQSph9Bp3A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dot-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/pascal-case\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/pascal-case/-/pascal-case-3.1.2.tgz\",\n      \"integrity\": \"sha512-uWlGT3YSnK9x3BQJaOdcZwrnV6hPpd8jFH1/ucpiLRPh/2zCVJKS19E4GvYHvaCcACn3foXZ0cLB9Wrx1KGe5g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"no-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\"\n    },\n    \"node_modules/path-type\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n      \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pend\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\",\n      \"integrity\": \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==\"\n    },\n    \"node_modules/perfect-scrollbar\": {\n      \"version\": \"1.5.5\",\n      \"resolved\": \"https://registry.npmjs.org/perfect-scrollbar/-/perfect-scrollbar-1.5.5.tgz\",\n      \"integrity\": \"sha512-dzalfutyP3e/FOpdlhVryN4AJ5XDVauVWxybSkLZmakFE2sS3y3pc4JnSprw8tGmHvkaG5Edr5T7LBTZ+WWU2g==\"\n    },\n    \"node_modules/performance-now\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz\",\n      \"integrity\": \"sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/picocolors\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.0.1.tgz\",\n      \"integrity\": \"sha512-anP1Z8qwhkbmu7MFP5iTt+wQKXgwzf7zTyGlcdzabySa9vd0Xt392U0rVmz9poOaBj0uHJKyyo9/upk0HrEQew==\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz\",\n      \"integrity\": \"sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pirates\": {\n      \"version\": \"4.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/pirates/-/pirates-4.0.6.tgz\",\n      \"integrity\": \"sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==\",\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/pkg-dir\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz\",\n      \"integrity\": \"sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==\",\n      \"dependencies\": {\n        \"find-up\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/postcss\": {\n      \"version\": \"8.4.31\",\n      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz\",\n      \"integrity\": \"sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"nanoid\": \"^3.3.6\",\n        \"picocolors\": \"^1.0.0\",\n        \"source-map-js\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      }\n    },\n    \"node_modules/postcss-import\": {\n      \"version\": \"14.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-import/-/postcss-import-14.1.0.tgz\",\n      \"integrity\": \"sha512-flwI+Vgm4SElObFVPpTIT7SU7R3qk2L7PyduMcokiaVKuWv9d/U+Gm/QAd8NDLuykTWTkcrjOeD2Pp1rMeBTGw==\",\n      \"dependencies\": {\n        \"postcss-value-parser\": \"^4.0.0\",\n        \"read-cache\": \"^1.0.0\",\n        \"resolve\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.0.0\"\n      }\n    },\n    \"node_modules/postcss-js\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.0.tgz\",\n      \"integrity\": \"sha512-77QESFBwgX4irogGVPgQ5s07vLvFqWr228qZY+w6lW599cRlK/HmnlivnnVUxkjHnCu4J16PDMHcH+e+2HbvTQ==\",\n      \"dependencies\": {\n        \"camelcase-css\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12 || ^14 || >= 16\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.3.3\"\n      }\n    },\n    \"node_modules/postcss-load-config\": {\n      \"version\": \"3.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-3.1.4.tgz\",\n      \"integrity\": \"sha512-6DiM4E7v4coTE4uzA8U//WhtPwyhiim3eyjEMFCnUpzbrkK9wJHgKDT2mR+HbtSrd/NubVaYTOpSpjUl8NQeRg==\",\n      \"dependencies\": {\n        \"lilconfig\": \"^2.0.5\",\n        \"yaml\": \"^1.10.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 10\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \">=8.0.9\",\n        \"ts-node\": \">=9.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"postcss\": {\n          \"optional\": true\n        },\n        \"ts-node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/postcss-load-config/node_modules/yaml\": {\n      \"version\": \"1.10.2\",\n      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz\",\n      \"integrity\": \"sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==\",\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/postcss-nested\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.0.0.tgz\",\n      \"integrity\": \"sha512-0DkamqrPcmkBDsLn+vQDIrtkSbNkv5AD/M322ySo9kqFkCIYklym2xEmWkwo+Y3/qZo34tzEPNUw4y7yMCdv5w==\",\n      \"dependencies\": {\n        \"postcss-selector-parser\": \"^6.0.10\"\n      },\n      \"engines\": {\n        \"node\": \">=12.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.2.14\"\n      }\n    },\n    \"node_modules/postcss-selector-parser\": {\n      \"version\": \"6.0.13\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.13.tgz\",\n      \"integrity\": \"sha512-EaV1Gl4mUEV4ddhDnv/xtj7sxwrwxdetHdWUGnT4VJQf+4d05v6lHYZr8N573k5Z0BViss7BDhfWtKS3+sfAqQ==\",\n      \"dependencies\": {\n        \"cssesc\": \"^3.0.0\",\n        \"util-deprecate\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/postcss-value-parser\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz\",\n      \"integrity\": \"sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==\"\n    },\n    \"node_modules/pretty-bytes\": {\n      \"version\": \"5.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-5.6.0.tgz\",\n      \"integrity\": \"sha512-FFw039TmrBqFK8ma/7OL3sDz/VytdtJr044/QUJtH0wK9lb9jLq9tJyIxUwtQJHwar2BqtiA4iCWSwo9JLkzFg==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/process\": {\n      \"version\": \"0.11.10\",\n      \"resolved\": \"https://registry.npmjs.org/process/-/process-0.11.10.tgz\",\n      \"integrity\": \"sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A==\",\n      \"engines\": {\n        \"node\": \">= 0.6.0\"\n      }\n    },\n    \"node_modules/process-nextick-args\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz\",\n      \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\"\n    },\n    \"node_modules/process-on-spawn\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/process-on-spawn/-/process-on-spawn-1.0.0.tgz\",\n      \"integrity\": \"sha512-1WsPDsUSMmZH5LeMLegqkPDrsGgsWwk1Exipy2hvB0o/F0ASzbpIctSCcZIK1ykJvtTJULEH+20WOFjMvGnCTg==\",\n      \"dependencies\": {\n        \"fromentries\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/proxy-from-env\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.0.0.tgz\",\n      \"integrity\": \"sha512-F2JHgJQ1iqwnHDcQjVBsq3n/uoaFL+iPW/eAeL7kVxy/2RrWaN4WroKjjvbsoRtv0ftelNyC01bjRhn/bhcf4A==\"\n    },\n    \"node_modules/pump\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz\",\n      \"integrity\": \"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==\",\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.1.0\",\n        \"once\": \"^1.3.1\"\n      }\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz\",\n      \"integrity\": \"sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.13.1.tgz\",\n      \"integrity\": \"sha512-EJPeIn0CYrGu+hli1xilKAPXODtJ12T0sP63Ijx2/khC2JtuaN3JyNIpvmnkmaEtha9ocbG4A4cMcr+TvqvwQg==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/queue-microtask\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/quick-lru\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz\",\n      \"integrity\": \"sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/randombytes\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz\",\n      \"integrity\": \"sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"node_modules/read-cache\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz\",\n      \"integrity\": \"sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==\",\n      \"dependencies\": {\n        \"pify\": \"^2.3.0\"\n      }\n    },\n    \"node_modules/readable-stream\": {\n      \"version\": \"2.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz\",\n      \"integrity\": \"sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\",\n      \"dependencies\": {\n        \"core-util-is\": \"~1.0.0\",\n        \"inherits\": \"~2.0.3\",\n        \"isarray\": \"~1.0.0\",\n        \"process-nextick-args\": \"~2.0.0\",\n        \"safe-buffer\": \"~5.1.1\",\n        \"string_decoder\": \"~1.1.1\",\n        \"util-deprecate\": \"~1.0.1\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/regenerate\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz\",\n      \"integrity\": \"sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/regenerate-unicode-properties\": {\n      \"version\": \"10.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.1.0.tgz\",\n      \"integrity\": \"sha512-d1VudCLoIGitcU/hEg2QqvyGZQmdC0Lf8BqdOMXGFSvJP4bNV1+XqbPQeHHLD51Jh4QJJ225dlIFvY4Ly6MXmQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"regenerate\": \"^1.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz\",\n      \"integrity\": \"sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==\"\n    },\n    \"node_modules/regenerator-transform\": {\n      \"version\": \"0.15.1\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.15.1.tgz\",\n      \"integrity\": \"sha512-knzmNAcuyxV+gQCufkYcvOqX/qIIfHLv0u5x79kRxuGojfYVky1f15TzZEu2Avte8QGepvUNTnLskf8E6X6Vyg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.8.4\"\n      }\n    },\n    \"node_modules/regexpu-core\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/regexpu-core/-/regexpu-core-5.3.1.tgz\",\n      \"integrity\": \"sha512-nCOzW2V/X15XpLsK2rlgdwrysrBq+AauCn+omItIz4R1pIcmeot5zvjdmOBRLzEH/CkC6IxMJVmxDe3QcMuNVQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/regjsgen\": \"^0.8.0\",\n        \"regenerate\": \"^1.4.2\",\n        \"regenerate-unicode-properties\": \"^10.1.0\",\n        \"regjsparser\": \"^0.9.1\",\n        \"unicode-match-property-ecmascript\": \"^2.0.0\",\n        \"unicode-match-property-value-ecmascript\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/regjsparser\": {\n      \"version\": \"0.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/regjsparser/-/regjsparser-0.9.1.tgz\",\n      \"integrity\": \"sha512-dQUtn90WanSNl+7mQKcXAgZxvUe7Z0SqXlgzv0za4LwiUhyzBC58yQO3liFoUgu8GiJVInAhJjkj1N0EtQ5nkQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"jsesc\": \"~0.5.0\"\n      },\n      \"bin\": {\n        \"regjsparser\": \"bin/parser\"\n      }\n    },\n    \"node_modules/regjsparser/node_modules/jsesc\": {\n      \"version\": \"0.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz\",\n      \"integrity\": \"sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      }\n    },\n    \"node_modules/relateurl\": {\n      \"version\": \"0.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/relateurl/-/relateurl-0.2.7.tgz\",\n      \"integrity\": \"sha1-VNvzd+UUQKypCkzSdGANP/LYiKk=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/release-zalgo\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/release-zalgo/-/release-zalgo-1.0.0.tgz\",\n      \"integrity\": \"sha512-gUAyHVHPPC5wdqX/LG4LWtRYtgjxyX78oanFNTMMyFEfOqdC54s3eE82imuWKbOeqYht2CrNf64Qb8vgmmtZGA==\",\n      \"dependencies\": {\n        \"es6-error\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/request-progress\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/request-progress/-/request-progress-3.0.0.tgz\",\n      \"integrity\": \"sha512-MnWzEHHaxHO2iWiQuHrUPBi/1WeBf5PkxQqNyNvLl9VAYSdXkP8tQ3pBSeCPD+yw0v0Aq1zosWLz0BdeXpWwZg==\",\n      \"dependencies\": {\n        \"throttleit\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/require-from-string\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz\",\n      \"integrity\": \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/require-main-filename\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz\",\n      \"integrity\": \"sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==\"\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.22.8\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\n      \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/restore-cursor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz\",\n      \"integrity\": \"sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==\",\n      \"dependencies\": {\n        \"onetime\": \"^5.1.0\",\n        \"signal-exit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/reusify\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz\",\n      \"integrity\": \"sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==\",\n      \"engines\": {\n        \"iojs\": \">=1.0.0\",\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/rfdc\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/rfdc/-/rfdc-1.3.0.tgz\",\n      \"integrity\": \"sha512-V2hovdzFbOi77/WajaSMXk2OLm+xNIeQdMMuB7icj7bk6zi2F8GGAxigcnDFpJHbNyNcgyJDiP+8nOrY5cZGrA==\"\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\",\n      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/run-parallel\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"queue-microtask\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/rxjs\": {\n      \"version\": \"7.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/rxjs/-/rxjs-7.5.6.tgz\",\n      \"integrity\": \"sha512-dnyv2/YsXhnm461G+R/Pe5bWP41Nm6LBXEYWI6eiFP4fiwx6WRI/CD0zbdVAudd9xwLEF2IDcKXLHit0FYjUzw==\",\n      \"dependencies\": {\n        \"tslib\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\"\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/schema-utils\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-4.2.0.tgz\",\n      \"integrity\": \"sha512-L0jRsrPpjdckP3oPug3/VxNKt2trR8TcabrM6FOAAlvC/9Phcmm+cuAgTlxBqdBR1WJx7Naj9WHw+aOmheSVbw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@types/json-schema\": \"^7.0.9\",\n        \"ajv\": \"^8.9.0\",\n        \"ajv-formats\": \"^2.1.1\",\n        \"ajv-keywords\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 12.13.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/webpack\"\n      }\n    },\n    \"node_modules/schema-utils/node_modules/ajv\": {\n      \"version\": \"8.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.12.0.tgz\",\n      \"integrity\": \"sha512-sRu1kpcO9yLtYxBKvqfTeh9KzZEwO3STyX1HT+4CaDzC6HpTGYhIhPIzj9XuKU7KYDwnaeh5hcOwjy1QuJzBPA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"json-schema-traverse\": \"^1.0.0\",\n        \"require-from-string\": \"^2.0.2\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/schema-utils/node_modules/ajv-keywords\": {\n      \"version\": \"5.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-5.1.0.tgz\",\n      \"integrity\": \"sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.3\"\n      },\n      \"peerDependencies\": {\n        \"ajv\": \"^8.8.2\"\n      }\n    },\n    \"node_modules/schema-utils/node_modules/json-schema-traverse\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/serialize-javascript\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.2.tgz\",\n      \"integrity\": \"sha512-Saa1xPByTTq2gdeFZYLLo+RFE35NHZkAbqZeWNd3BpzppeVisAqpDjcp8dyf6uIvEqJRd46jemmyA4iFIeVk8g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"randombytes\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/set-blocking\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz\",\n      \"integrity\": \"sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==\"\n    },\n    \"node_modules/setimmediate\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz\",\n      \"integrity\": \"sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA==\"\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz\",\n      \"integrity\": \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-list\": \"^1.0.0\",\n        \"side-channel-map\": \"^1.0.1\",\n        \"side-channel-weakmap\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-list\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz\",\n      \"integrity\": \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-map\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz\",\n      \"integrity\": \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-weakmap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz\",\n      \"integrity\": \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-map\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\",\n      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\"\n    },\n    \"node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/slice-ansi\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slice-ansi/-/slice-ansi-3.0.0.tgz\",\n      \"integrity\": \"sha512-pSyv7bSTC7ig9Dcgbw9AuRNUb5k5V6oDudjZoMBSr13qpLBG7tB+zgCkARjq7xIUgdz5P1Qe8u+rSGdouOOIyQ==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"astral-regex\": \"^2.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/sortablejs\": {\n      \"version\": \"1.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/sortablejs/-/sortablejs-1.15.0.tgz\",\n      \"integrity\": \"sha512-bv9qgVMjUMf89wAvM6AxVvS/4MX3sPeN0+agqShejLU5z5GX4C75ow1O2e5k4L6XItUyAK3gH6AxSbXrOM5e8w==\"\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/source-map-js\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.0.2.tgz\",\n      \"integrity\": \"sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/source-map-support\": {\n      \"version\": \"0.5.21\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz\",\n      \"integrity\": \"sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==\",\n      \"dependencies\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"source-map\": \"^0.6.0\"\n      }\n    },\n    \"node_modules/spawn-wrap\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/spawn-wrap/-/spawn-wrap-2.0.0.tgz\",\n      \"integrity\": \"sha512-EeajNjfN9zMnULLwhZZQU3GWBoFNkbngTUPfaawT4RkMiviTxcX0qfhVbGey39mfctfDHkWtuecgQ8NJcyQWHg==\",\n      \"dependencies\": {\n        \"foreground-child\": \"^2.0.0\",\n        \"is-windows\": \"^1.0.2\",\n        \"make-dir\": \"^3.0.0\",\n        \"rimraf\": \"^3.0.0\",\n        \"signal-exit\": \"^3.0.2\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n      \"integrity\": \"sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=\"\n    },\n    \"node_modules/sshpk\": {\n      \"version\": \"1.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/sshpk/-/sshpk-1.18.0.tgz\",\n      \"integrity\": \"sha512-2p2KJZTSqQ/I3+HX42EpYOa2l3f8Erv8MWKsy2I9uf4wA7yFIkXRffYdsx86y6z4vHtV8u7g+pPlr8/4ouAxsQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"asn1\": \"~0.2.3\",\n        \"assert-plus\": \"^1.0.0\",\n        \"bcrypt-pbkdf\": \"^1.0.0\",\n        \"dashdash\": \"^1.12.0\",\n        \"ecc-jsbn\": \"~0.1.1\",\n        \"getpass\": \"^0.1.1\",\n        \"jsbn\": \"~0.1.0\",\n        \"safer-buffer\": \"^2.0.2\",\n        \"tweetnacl\": \"~0.14.0\"\n      },\n      \"bin\": {\n        \"sshpk-conv\": \"bin/sshpk-conv\",\n        \"sshpk-sign\": \"bin/sshpk-sign\",\n        \"sshpk-verify\": \"bin/sshpk-verify\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/standardized-audio-context\": {\n      \"version\": \"25.3.60\",\n      \"resolved\": \"https://registry.npmjs.org/standardized-audio-context/-/standardized-audio-context-25.3.60.tgz\",\n      \"integrity\": \"sha512-h4ntLsHqnRESxyuU4C5/gvZTBqjBw1SoAR5lsQbqXPI4R3KKZTJWnMMpnRdiySr7cXokbEcepaPGGQ1V+UwlLw==\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.23.5\",\n        \"automation-events\": \"^6.0.13\",\n        \"tslib\": \"^2.6.2\"\n      }\n    },\n    \"node_modules/string_decoder\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n      \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.1.0\"\n      }\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-bom\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-4.0.0.tgz\",\n      \"integrity\": \"sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-final-newline\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz\",\n      \"integrity\": \"sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/style-mod\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/style-mod/-/style-mod-4.1.0.tgz\",\n      \"integrity\": \"sha512-Ca5ib8HrFn+f+0n4N4ScTIA9iTOQ7MaGS1ylHcoVqW9J7w2w8PzN6g9gKmTYgGEBH8e120+RCmhpje6jC5uGWA==\"\n    },\n    \"node_modules/sucrase\": {\n      \"version\": \"3.34.0\",\n      \"resolved\": \"https://registry.npmjs.org/sucrase/-/sucrase-3.34.0.tgz\",\n      \"integrity\": \"sha512-70/LQEZ07TEcxiU2dz51FKaE6hCTWC6vr7FOk3Gr0U60C3shtAN+H+BFr9XlYe5xqf3RA8nrc+VIwzCfnxuXJw==\",\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"commander\": \"^4.0.0\",\n        \"glob\": \"7.1.6\",\n        \"lines-and-columns\": \"^1.1.6\",\n        \"mz\": \"^2.7.0\",\n        \"pirates\": \"^4.0.1\",\n        \"ts-interface-checker\": \"^0.1.9\"\n      },\n      \"bin\": {\n        \"sucrase\": \"bin/sucrase\",\n        \"sucrase-node\": \"bin/sucrase-node\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/sucrase/node_modules/commander\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n      \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/tailwindcss\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.3.0.tgz\",\n      \"integrity\": \"sha512-hOXlFx+YcklJ8kXiCAfk/FMyr4Pm9ck477G0m/us2344Vuj355IpoEDB5UmGAsSpTBmr+4ZhjzW04JuFXkb/fw==\",\n      \"dependencies\": {\n        \"arg\": \"^5.0.2\",\n        \"chokidar\": \"^3.5.3\",\n        \"color-name\": \"^1.1.4\",\n        \"didyoumean\": \"^1.2.2\",\n        \"dlv\": \"^1.1.3\",\n        \"fast-glob\": \"^3.2.12\",\n        \"glob-parent\": \"^6.0.2\",\n        \"is-glob\": \"^4.0.3\",\n        \"jiti\": \"^1.17.2\",\n        \"lilconfig\": \"^2.0.6\",\n        \"micromatch\": \"^4.0.5\",\n        \"normalize-path\": \"^3.0.0\",\n        \"object-hash\": \"^3.0.0\",\n        \"picocolors\": \"^1.0.0\",\n        \"postcss\": \"^8.0.9\",\n        \"postcss-import\": \"^14.1.0\",\n        \"postcss-js\": \"^4.0.0\",\n        \"postcss-load-config\": \"^3.1.4\",\n        \"postcss-nested\": \"6.0.0\",\n        \"postcss-selector-parser\": \"^6.0.11\",\n        \"postcss-value-parser\": \"^4.2.0\",\n        \"quick-lru\": \"^5.1.1\",\n        \"resolve\": \"^1.22.1\",\n        \"sucrase\": \"^3.29.0\"\n      },\n      \"bin\": {\n        \"tailwind\": \"lib/cli.js\",\n        \"tailwindcss\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=12.13.0\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.0.9\"\n      }\n    },\n    \"node_modules/tapable\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/tapable/-/tapable-2.2.1.tgz\",\n      \"integrity\": \"sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/terser\": {\n      \"version\": \"5.31.6\",\n      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-5.31.6.tgz\",\n      \"integrity\": \"sha512-PQ4DAriWzKj+qgehQ7LK5bQqCFNMmlhjR2PFFLuqGCpuCAauxemVBWwWOxo3UIwWQx8+Pr61Df++r76wDmkQBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/source-map\": \"^0.3.3\",\n        \"acorn\": \"^8.8.2\",\n        \"commander\": \"^2.20.0\",\n        \"source-map-support\": \"~0.5.20\"\n      },\n      \"bin\": {\n        \"terser\": \"bin/terser\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/terser-webpack-plugin\": {\n      \"version\": \"5.3.10\",\n      \"resolved\": \"https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-5.3.10.tgz\",\n      \"integrity\": \"sha512-BKFPWlPDndPs+NGGCr1U59t0XScL5317Y0UReNrHaw9/FwhPENlq6bfgs+4yPfyP51vqC1bQ4rp1EfXW5ZSH9w==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.20\",\n        \"jest-worker\": \"^27.4.5\",\n        \"schema-utils\": \"^3.1.1\",\n        \"serialize-javascript\": \"^6.0.1\",\n        \"terser\": \"^5.26.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/webpack\"\n      },\n      \"peerDependencies\": {\n        \"webpack\": \"^5.1.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@swc/core\": {\n          \"optional\": true\n        },\n        \"esbuild\": {\n          \"optional\": true\n        },\n        \"uglify-js\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/terser-webpack-plugin/node_modules/schema-utils\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-3.3.0.tgz\",\n      \"integrity\": \"sha512-pN/yOAvcC+5rQ5nERGuwrjLlYvLTbCibnZ1I7B1LaiAz9BRBlE9GMgE/eqV30P7aJQUf7Ddimy/RsbYO/GrVGg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@types/json-schema\": \"^7.0.8\",\n        \"ajv\": \"^6.12.5\",\n        \"ajv-keywords\": \"^3.5.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/webpack\"\n      }\n    },\n    \"node_modules/terser/node_modules/commander\": {\n      \"version\": \"2.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.20.3.tgz\",\n      \"integrity\": \"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/test-exclude\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz\",\n      \"integrity\": \"sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==\",\n      \"dependencies\": {\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"glob\": \"^7.1.4\",\n        \"minimatch\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/thenify\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz\",\n      \"integrity\": \"sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==\",\n      \"dependencies\": {\n        \"any-promise\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/thenify-all\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz\",\n      \"integrity\": \"sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==\",\n      \"dependencies\": {\n        \"thenify\": \">= 3.1.0 < 4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/throttleit\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/throttleit/-/throttleit-1.0.0.tgz\",\n      \"integrity\": \"sha512-rkTVqu6IjfQ/6+uNuuc3sZek4CEYxTJom3IktzgdSxcZqdARuebbA/f4QmAxMQIxqq9ZLEUkSYqvuk1I6VKq4g==\"\n    },\n    \"node_modules/through\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n      \"integrity\": \"sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==\"\n    },\n    \"node_modules/tldts\": {\n      \"version\": \"6.1.68\",\n      \"resolved\": \"https://registry.npmjs.org/tldts/-/tldts-6.1.68.tgz\",\n      \"integrity\": \"sha512-JKF17jROiYkjJPT73hUTEiTp2OBCf+kAlB+1novk8i6Q6dWjHsgEjw9VLiipV4KTJavazXhY1QUXyQFSem2T7w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"tldts-core\": \"^6.1.68\"\n      },\n      \"bin\": {\n        \"tldts\": \"bin/cli.js\"\n      }\n    },\n    \"node_modules/tldts-core\": {\n      \"version\": \"6.1.68\",\n      \"resolved\": \"https://registry.npmjs.org/tldts-core/-/tldts-core-6.1.68.tgz\",\n      \"integrity\": \"sha512-85TdlS/DLW/gVdf2oyyzqp3ocS30WxjaL4la85EArl9cHUR/nizifKAJPziWewSZjDZS71U517/i6ciUeqtB5Q==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/tmp\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/tmp/-/tmp-0.2.3.tgz\",\n      \"integrity\": \"sha512-nZD7m9iCPC5g0pYmcaxogYKggSfLsdxl8of3Q/oIbqCqLLIO9IAF0GWjX1z9NZRHPiXv8Wex4yDCaZsgEw0Y8w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=14.14\"\n      }\n    },\n    \"node_modules/to-fast-properties\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz\",\n      \"integrity\": \"sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/tone\": {\n      \"version\": \"14.7.77\",\n      \"resolved\": \"https://registry.npmjs.org/tone/-/tone-14.7.77.tgz\",\n      \"integrity\": \"sha512-tCfK73IkLHyzoKUvGq47gyDyxiKLFvKiVCOobynGgBB9Dl0NkxTM2p+eRJXyCYrjJwy9Y0XCMqD3uOYsYt2Fdg==\",\n      \"dependencies\": {\n        \"standardized-audio-context\": \"^25.1.8\",\n        \"tslib\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/tough-cookie\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-5.0.0.tgz\",\n      \"integrity\": \"sha512-FRKsF7cz96xIIeMZ82ehjC3xW2E+O2+v11udrDYewUbszngYhsGa8z6YUMMzO9QJZzzyd0nGGXnML/TReX6W8Q==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"tldts\": \"^6.1.32\"\n      },\n      \"engines\": {\n        \"node\": \">=16\"\n      }\n    },\n    \"node_modules/tree-kill\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/tree-kill/-/tree-kill-1.2.2.tgz\",\n      \"integrity\": \"sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==\",\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"tree-kill\": \"cli.js\"\n      }\n    },\n    \"node_modules/try-to-catch\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/try-to-catch/-/try-to-catch-3.0.0.tgz\",\n      \"integrity\": \"sha512-eIm6ZXwR35jVF8By/HdbbkcaCDTBI5PpCPkejRKrYp0jyf/DbCCcRhHD7/O9jtFI3ewsqo9WctFEiJTS6i+CQA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/ts-interface-checker\": {\n      \"version\": \"0.1.13\",\n      \"resolved\": \"https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz\",\n      \"integrity\": \"sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==\"\n    },\n    \"node_modules/ts-node\": {\n      \"version\": \"10.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/ts-node/-/ts-node-10.9.1.tgz\",\n      \"integrity\": \"sha512-NtVysVPkxxrwFGUUxGYhfux8k78pQB3JqYBXlLRZgdGUqTO5wU/UyHop5p70iEbGhB7q5KmiZiU0Y3KlJrScEw==\",\n      \"dependencies\": {\n        \"@cspotcode/source-map-support\": \"^0.8.0\",\n        \"@tsconfig/node10\": \"^1.0.7\",\n        \"@tsconfig/node12\": \"^1.0.7\",\n        \"@tsconfig/node14\": \"^1.0.0\",\n        \"@tsconfig/node16\": \"^1.0.2\",\n        \"acorn\": \"^8.4.1\",\n        \"acorn-walk\": \"^8.1.1\",\n        \"arg\": \"^4.1.0\",\n        \"create-require\": \"^1.1.0\",\n        \"diff\": \"^4.0.1\",\n        \"make-error\": \"^1.1.1\",\n        \"v8-compile-cache-lib\": \"^3.0.1\",\n        \"yn\": \"3.1.1\"\n      },\n      \"bin\": {\n        \"ts-node\": \"dist/bin.js\",\n        \"ts-node-cwd\": \"dist/bin-cwd.js\",\n        \"ts-node-esm\": \"dist/bin-esm.js\",\n        \"ts-node-script\": \"dist/bin-script.js\",\n        \"ts-node-transpile-only\": \"dist/bin-transpile.js\",\n        \"ts-script\": \"dist/bin-script-deprecated.js\"\n      },\n      \"peerDependencies\": {\n        \"@swc/core\": \">=1.2.50\",\n        \"@swc/wasm\": \">=1.2.50\",\n        \"@types/node\": \"*\",\n        \"typescript\": \">=2.7\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@swc/core\": {\n          \"optional\": true\n        },\n        \"@swc/wasm\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/ts-node/node_modules/acorn-walk\": {\n      \"version\": \"8.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.2.0.tgz\",\n      \"integrity\": \"sha512-k+iyHEuPgSw6SbuDpGQM+06HQUa04DZ3o+F6CSzXMvvI5KMvnaEqXe+YVe555R9nn6GPt404fos4wcgpw12SDA==\",\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/ts-node/node_modules/arg\": {\n      \"version\": \"4.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/arg/-/arg-4.1.3.tgz\",\n      \"integrity\": \"sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==\"\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"2.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-2.6.2.tgz\",\n      \"integrity\": \"sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==\"\n    },\n    \"node_modules/tunnel-agent\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz\",\n      \"integrity\": \"sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/turndown\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/turndown/-/turndown-7.2.0.tgz\",\n      \"integrity\": \"sha512-eCZGBN4nNNqM9Owkv9HAtWRYfLA4h909E/WGAWWBpmB275ehNhZyk87/Tpvjbp0jjNl9XwCsbe6bm6CqFsgD+A==\",\n      \"dependencies\": {\n        \"@mixmark-io/domino\": \"^2.2.0\"\n      }\n    },\n    \"node_modules/turndown-plugin-gfm\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/turndown-plugin-gfm/-/turndown-plugin-gfm-1.0.2.tgz\",\n      \"integrity\": \"sha512-vwz9tfvF7XN/jE0dGoBei3FXWuvll78ohzCZQuOb+ZjWrs3a0XhQVomJEb2Qh4VHTPNRO4GPZh0V7VRbiWwkRg==\"\n    },\n    \"node_modules/tw-elements\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tw-elements/-/tw-elements-1.0.0.tgz\",\n      \"integrity\": \"sha512-pD2bA1bTGzvigU79dz4pGvO207CCOpzhwlxzb7hswx40SMMkJISOkoDxU2ot3OQ7LTZM5GwuLDkZ+dquK0wdYQ==\",\n      \"dependencies\": {\n        \"@popperjs/core\": \"^2.6.0\",\n        \"chart.js\": \"^3.7.1\",\n        \"chartjs-plugin-datalabels\": \"^2.0.0\",\n        \"deepmerge\": \"^4.2.2\",\n        \"detect-autofill\": \"^1.1.3\",\n        \"perfect-scrollbar\": \"^1.5.5\",\n        \"tailwindcss\": \"3.3.0\"\n      }\n    },\n    \"node_modules/tw-elements/node_modules/chart.js\": {\n      \"version\": \"3.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/chart.js/-/chart.js-3.9.1.tgz\",\n      \"integrity\": \"sha512-Ro2JbLmvg83gXF5F4sniaQ+lTbSv18E+TIf2cOeiH1Iqd2PGFOtem+DUufMZsCJwFE7ywPOpfXFBwRTGq7dh6w==\"\n    },\n    \"node_modules/tweetnacl\": {\n      \"version\": \"0.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz\",\n      \"integrity\": \"sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA==\",\n      \"license\": \"Unlicense\"\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\",\n      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typedarray-to-buffer\": {\n      \"version\": \"3.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz\",\n      \"integrity\": \"sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==\",\n      \"dependencies\": {\n        \"is-typedarray\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.3.3.tgz\",\n      \"integrity\": \"sha512-pXWcraxM0uxAS+tN0AG/BF2TyqmHO014Z070UsJ+pFvYuRSq8KH8DmWpnbXe0pEPDHXZV3FcAbJkijJ5oNEnWw==\",\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    },\n    \"node_modules/unicode-canonical-property-names-ecmascript\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.0.tgz\",\n      \"integrity\": \"sha512-yY5PpDlfVIU5+y/BSCxAJRBIS1Zc2dDG3Ujq+sR0U+JjUevW2JhocOF+soROYDSaAezOzOKuyyixhD6mBknSmQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unicode-match-property-ecmascript\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz\",\n      \"integrity\": \"sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"unicode-canonical-property-names-ecmascript\": \"^2.0.0\",\n        \"unicode-property-aliases-ecmascript\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unicode-match-property-value-ecmascript\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.1.0.tgz\",\n      \"integrity\": \"sha512-qxkjQt6qjg/mYscYMC0XKRn3Rh0wFPlfxB0xkt9CfyTvpX1Ra0+rAmdX2QyAobptSEvuy4RtpPRui6XkV+8wjA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unicode-property-aliases-ecmascript\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.1.0.tgz\",\n      \"integrity\": \"sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/universalify\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz\",\n      \"integrity\": \"sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==\",\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      }\n    },\n    \"node_modules/untildify\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/untildify/-/untildify-4.0.0.tgz\",\n      \"integrity\": \"sha512-KK8xQ1mkzZeg9inewmFVDNkg3l5LUhoq9kN6iWYB/CC9YMG8HA+c1Q8HwDe6dEX7kErrEVNVBO3fWsVq5iDgtw==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/update-browserslist-db\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.0.tgz\",\n      \"integrity\": \"sha512-EdRAaAyk2cUE1wOf2DkEhzxqOQvFOoRJFNS6NeyJ01Gp2beMRpBAINjM2iDXE3KCuKhwnvHIQCJm6ThL2Z+HzQ==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"escalade\": \"^3.1.2\",\n        \"picocolors\": \"^1.0.1\"\n      },\n      \"bin\": {\n        \"update-browserslist-db\": \"cli.js\"\n      },\n      \"peerDependencies\": {\n        \"browserslist\": \">= 4.21.0\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n      \"integrity\": \"sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\"\n    },\n    \"node_modules/uuid\": {\n      \"version\": \"8.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\n      \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\n      \"bin\": {\n        \"uuid\": \"dist/bin/uuid\"\n      }\n    },\n    \"node_modules/v8-compile-cache-lib\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz\",\n      \"integrity\": \"sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==\"\n    },\n    \"node_modules/vanilla-colorful\": {\n      \"version\": \"0.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/vanilla-colorful/-/vanilla-colorful-0.7.2.tgz\",\n      \"integrity\": \"sha512-z2YZusTFC6KnLERx1cgoIRX2CjPRP0W75N+3CC6gbvdX5Ch47rZkEMGO2Xnf+IEmi3RiFLxS18gayMA27iU7Kg==\"\n    },\n    \"node_modules/verror\": {\n      \"version\": \"1.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.10.0.tgz\",\n      \"integrity\": \"sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==\",\n      \"engines\": [\n        \"node >=0.6.0\"\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assert-plus\": \"^1.0.0\",\n        \"core-util-is\": \"1.0.2\",\n        \"extsprintf\": \"^1.2.0\"\n      }\n    },\n    \"node_modules/w3c-keyname\": {\n      \"version\": \"2.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/w3c-keyname/-/w3c-keyname-2.2.8.tgz\",\n      \"integrity\": \"sha512-dpojBhNsCNN7T82Tm7k26A6G9ML3NkhDsnw9n/eoxSRlVBB4CEtIQ/KTCLI2Fwf3ataSXRhYFkQi3SlnFwPvPQ==\"\n    },\n    \"node_modules/watchpack\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/watchpack/-/watchpack-2.4.2.tgz\",\n      \"integrity\": \"sha512-TnbFSbcOCcDgjZ4piURLCbJ3nJhznVh9kw6F6iokjiFPl8ONxe9A6nMDVXDiNbrSfLILs6vB07F7wLBrwPYzJw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"glob-to-regexp\": \"^0.4.1\",\n        \"graceful-fs\": \"^4.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/webpack\": {\n      \"version\": \"5.94.0\",\n      \"resolved\": \"https://registry.npmjs.org/webpack/-/webpack-5.94.0.tgz\",\n      \"integrity\": \"sha512-KcsGn50VT+06JH/iunZJedYGUJS5FGjow8wb9c0v5n1Om8O1g4L6LjtfxwlXIATopoQu+vOXXa7gYisWxCoPyg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.5\",\n        \"@webassemblyjs/ast\": \"^1.12.1\",\n        \"@webassemblyjs/wasm-edit\": \"^1.12.1\",\n        \"@webassemblyjs/wasm-parser\": \"^1.12.1\",\n        \"acorn\": \"^8.7.1\",\n        \"acorn-import-attributes\": \"^1.9.5\",\n        \"browserslist\": \"^4.21.10\",\n        \"chrome-trace-event\": \"^1.0.2\",\n        \"enhanced-resolve\": \"^5.17.1\",\n        \"es-module-lexer\": \"^1.2.1\",\n        \"eslint-scope\": \"5.1.1\",\n        \"events\": \"^3.2.0\",\n        \"glob-to-regexp\": \"^0.4.1\",\n        \"graceful-fs\": \"^4.2.11\",\n        \"json-parse-even-better-errors\": \"^2.3.1\",\n        \"loader-runner\": \"^4.2.0\",\n        \"mime-types\": \"^2.1.27\",\n        \"neo-async\": \"^2.6.2\",\n        \"schema-utils\": \"^3.2.0\",\n        \"tapable\": \"^2.1.1\",\n        \"terser-webpack-plugin\": \"^5.3.10\",\n        \"watchpack\": \"^2.4.1\",\n        \"webpack-sources\": \"^3.2.3\"\n      },\n      \"bin\": {\n        \"webpack\": \"bin/webpack.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/webpack\"\n      },\n      \"peerDependenciesMeta\": {\n        \"webpack-cli\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/webpack-sources\": {\n      \"version\": \"3.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/webpack-sources/-/webpack-sources-3.2.3.tgz\",\n      \"integrity\": \"sha512-/DyMEOrDgLKKIG0fmvtz+4dUX/3Ghozwgm6iPp8KRhvn+eQf9+Q7GWxVNMk3+uCPWfdXYC4ExGBckIXdFEfH1w==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/webpack/node_modules/schema-utils\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-3.3.0.tgz\",\n      \"integrity\": \"sha512-pN/yOAvcC+5rQ5nERGuwrjLlYvLTbCibnZ1I7B1LaiAz9BRBlE9GMgE/eqV30P7aJQUf7Ddimy/RsbYO/GrVGg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@types/json-schema\": \"^7.0.8\",\n        \"ajv\": \"^6.12.5\",\n        \"ajv-keywords\": \"^3.5.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/webpack\"\n      }\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/which-module\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz\",\n      \"integrity\": \"sha512-B+enWhmw6cjfVC7kS8Pj9pCrKSc5txArRyaYGe088shv/FGWH+0Rjx/xPgtsWfsUtS27FkP697E4DDhgrgoc0Q==\"\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\"\n    },\n    \"node_modules/write-file-atomic\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz\",\n      \"integrity\": \"sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==\",\n      \"dependencies\": {\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-typedarray\": \"^1.0.0\",\n        \"signal-exit\": \"^3.0.2\",\n        \"typedarray-to-buffer\": \"^3.1.5\"\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz\",\n      \"integrity\": \"sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==\"\n    },\n    \"node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\"\n    },\n    \"node_modules/yaml\": {\n      \"version\": \"2.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-2.2.2.tgz\",\n      \"integrity\": \"sha512-CBKFWExMn46Foo4cldiChEzn7S7SRV+wqiluAb6xmueD/fGyRHIhX8m14vVGgeFWjN540nKCNVj6P21eQjgTuA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"15.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz\",\n      \"integrity\": \"sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==\",\n      \"dependencies\": {\n        \"cliui\": \"^6.0.0\",\n        \"decamelize\": \"^1.2.0\",\n        \"find-up\": \"^4.1.0\",\n        \"get-caller-file\": \"^2.0.1\",\n        \"require-directory\": \"^2.1.1\",\n        \"require-main-filename\": \"^2.0.0\",\n        \"set-blocking\": \"^2.0.0\",\n        \"string-width\": \"^4.2.0\",\n        \"which-module\": \"^2.0.0\",\n        \"y18n\": \"^4.0.0\",\n        \"yargs-parser\": \"^18.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"18.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz\",\n      \"integrity\": \"sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==\",\n      \"dependencies\": {\n        \"camelcase\": \"^5.0.0\",\n        \"decamelize\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/yauzl\": {\n      \"version\": \"2.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz\",\n      \"integrity\": \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==\",\n      \"dependencies\": {\n        \"buffer-crc32\": \"~0.2.3\",\n        \"fd-slicer\": \"~1.1.0\"\n      }\n    },\n    \"node_modules/yn\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yn/-/yn-3.1.1.tgz\",\n      \"integrity\": \"sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    }\n  },\n  \"dependencies\": {\n    \"@ampproject/remapping\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.0.tgz\",\n      \"integrity\": \"sha512-qRmjj8nj9qmLTQXXmaR1cck3UXSRMPrbsLJAasZpF+t3riI71BXed5ebIOYwQntykeZuhjsdweEc9BxH5Jc26w==\",\n      \"requires\": {\n        \"@jridgewell/gen-mapping\": \"^0.1.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": {\n          \"version\": \"0.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz\",\n          \"integrity\": \"sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==\",\n          \"requires\": {\n            \"@jridgewell/set-array\": \"^1.0.0\",\n            \"@jridgewell/sourcemap-codec\": \"^1.4.10\"\n          }\n        }\n      }\n    },\n    \"@babel/code-frame\": {\n      \"version\": \"7.22.13\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.22.13.tgz\",\n      \"integrity\": \"sha512-XktuhWlJ5g+3TJXc5upd9Ks1HutSArik6jf2eAjYFyIOf4ej3RN+184cZbzDvbPnuTJIUhPKKJE3cIsYTiAT3w==\",\n      \"requires\": {\n        \"@babel/highlight\": \"^7.22.13\",\n        \"chalk\": \"^2.4.2\"\n      },\n      \"dependencies\": {\n        \"ansi-styles\": {\n          \"version\": \"3.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n          \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n          \"requires\": {\n            \"color-convert\": \"^1.9.0\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"2.4.2\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n          \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n          \"requires\": {\n            \"ansi-styles\": \"^3.2.1\",\n            \"escape-string-regexp\": \"^1.0.5\",\n            \"supports-color\": \"^5.3.0\"\n          }\n        },\n        \"color-convert\": {\n          \"version\": \"1.9.3\",\n          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n          \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n          \"requires\": {\n            \"color-name\": \"1.1.3\"\n          }\n        },\n        \"color-name\": {\n          \"version\": \"1.1.3\",\n          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n          \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\"\n        },\n        \"has-flag\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n          \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\"\n        },\n        \"supports-color\": {\n          \"version\": \"5.5.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n          \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n          \"requires\": {\n            \"has-flag\": \"^3.0.0\"\n          }\n        }\n      }\n    },\n    \"@babel/compat-data\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.21.0.tgz\",\n      \"integrity\": \"sha512-gMuZsmsgxk/ENC3O/fRw5QY8A9/uxQbbCEypnLIiYYc/qVJtEV7ouxC3EllIIwNzMqAQee5tanFabWsUOutS7g==\"\n    },\n    \"@babel/core\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.21.0.tgz\",\n      \"integrity\": \"sha512-PuxUbxcW6ZYe656yL3EAhpy7qXKq0DmYsrJLpbB8XrsCP9Nm+XCg9XFMb5vIDliPD7+U/+M+QJlH17XOcB7eXA==\",\n      \"requires\": {\n        \"@ampproject/remapping\": \"^2.2.0\",\n        \"@babel/code-frame\": \"^7.18.6\",\n        \"@babel/generator\": \"^7.21.0\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-module-transforms\": \"^7.21.0\",\n        \"@babel/helpers\": \"^7.21.0\",\n        \"@babel/parser\": \"^7.21.0\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.0\",\n        \"@babel/types\": \"^7.21.0\",\n        \"convert-source-map\": \"^1.7.0\",\n        \"debug\": \"^4.1.0\",\n        \"gensync\": \"^1.0.0-beta.2\",\n        \"json5\": \"^2.2.2\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"dependencies\": {\n        \"json5\": {\n          \"version\": \"2.2.3\",\n          \"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n          \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\"\n        }\n      }\n    },\n    \"@babel/generator\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.23.0.tgz\",\n      \"integrity\": \"sha512-lN85QRR+5IbYrMWM6Y4pE/noaQtg4pNiqeNGX60eqOfo6gtEj6uw/JagelB8vVztSd7R6M5n1+PQkDbHbBRU4g==\",\n      \"requires\": {\n        \"@babel/types\": \"^7.23.0\",\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"@jridgewell/trace-mapping\": \"^0.3.17\",\n        \"jsesc\": \"^2.5.1\"\n      }\n    },\n    \"@babel/helper-annotate-as-pure\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz\",\n      \"integrity\": \"sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-builder-binary-assignment-operator-visitor\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.18.9.tgz\",\n      \"integrity\": \"sha512-yFQ0YCHoIqarl8BCRwBL8ulYUaZpz3bNsA7oFepAzee+8/+ImtADXNOmO5vJvsPff3qi+hvpkY/NYBTrBQgdNw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-explode-assignable-expression\": \"^7.18.6\",\n        \"@babel/types\": \"^7.18.9\"\n      }\n    },\n    \"@babel/helper-compilation-targets\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.20.7.tgz\",\n      \"integrity\": \"sha512-4tGORmfQcrc+bvrjb5y3dG9Mx1IOZjsHqQVUz7XCNHO+iTmqxWnVg3KRygjGmpRLJGdQSKuvFinbIb0CnZwHAQ==\",\n      \"requires\": {\n        \"@babel/compat-data\": \"^7.20.5\",\n        \"@babel/helper-validator-option\": \"^7.18.6\",\n        \"browserslist\": \"^4.21.3\",\n        \"lru-cache\": \"^5.1.1\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"dependencies\": {\n        \"lru-cache\": {\n          \"version\": \"5.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz\",\n          \"integrity\": \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\",\n          \"requires\": {\n            \"yallist\": \"^3.0.2\"\n          }\n        },\n        \"yallist\": {\n          \"version\": \"3.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz\",\n          \"integrity\": \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\"\n        }\n      }\n    },\n    \"@babel/helper-create-class-features-plugin\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.21.0.tgz\",\n      \"integrity\": \"sha512-Q8wNiMIdwsv5la5SPxNYzzkPnjgC0Sy0i7jLkVOCdllu/xcVNkr3TeZzbHBJrj+XXRqzX5uCyCoV9eu6xUG7KQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.21.0\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/helper-replace-supers\": \"^7.20.7\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-create-regexp-features-plugin\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.21.0.tgz\",\n      \"integrity\": \"sha512-N+LaFW/auRSWdx7SHD/HiARwXQju1vXTW4fKr4u5SgBUTm51OKEjKgj+cs00ggW3kEvNqwErnlwuq7Y3xBe4eg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"regexpu-core\": \"^5.3.1\"\n      }\n    },\n    \"@babel/helper-define-polyfill-provider\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.3.3.tgz\",\n      \"integrity\": \"sha512-z5aQKU4IzbqCC1XH0nAqfsFLMVSo22SBKUc0BxGrLkolTdPTructy0ToNnlO2zA4j9Q/7pjMZf0DSY+DSTYzww==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-compilation-targets\": \"^7.17.7\",\n        \"@babel/helper-plugin-utils\": \"^7.16.7\",\n        \"debug\": \"^4.1.1\",\n        \"lodash.debounce\": \"^4.0.8\",\n        \"resolve\": \"^1.14.2\",\n        \"semver\": \"^6.1.2\"\n      }\n    },\n    \"@babel/helper-environment-visitor\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.22.20.tgz\",\n      \"integrity\": \"sha512-zfedSIzFhat/gFhWfHtgWvlec0nqB9YEIVrpuwjruLlXfUSnA8cJB0miHKwqDnQ7d32aKo2xt88/xZptwxbfhA==\"\n    },\n    \"@babel/helper-explode-assignable-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-eyAYAsQmB80jNfg4baAtLeWAQHfHFiR483rzFK+BhETlGZaQC9bsfrugfXDCbRHLQbIA7U5NxhhOxN7p/dWIcg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-function-name\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.23.0.tgz\",\n      \"integrity\": \"sha512-OErEqsrxjZTJciZ4Oo+eoZqeW9UIiOcuYKRJA4ZAgV9myA+pOXhhmpfNCKjEH/auVfEYVFJ6y1Tc4r0eIApqiw==\",\n      \"requires\": {\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/types\": \"^7.23.0\"\n      }\n    },\n    \"@babel/helper-hoist-variables\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.22.5.tgz\",\n      \"integrity\": \"sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw==\",\n      \"requires\": {\n        \"@babel/types\": \"^7.22.5\"\n      }\n    },\n    \"@babel/helper-member-expression-to-functions\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.21.0.tgz\",\n      \"integrity\": \"sha512-Muu8cdZwNN6mRRNG6lAYErJ5X3bRevgYR2O8wN0yn7jJSnGDu6eG59RfT29JHxGUovyfrh6Pj0XzmR7drNVL3Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.21.0\"\n      }\n    },\n    \"@babel/helper-module-imports\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.18.6.tgz\",\n      \"integrity\": \"sha512-0NFvs3VkuSYbFi1x2Vd6tKrywq+z/cLeYC/RJNFrIX/30Bf5aiGYbtvGXolEktzJH8o5E5KJ3tT+nkxuuZFVlA==\",\n      \"requires\": {\n        \"@babel/types\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-module-transforms\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.21.0.tgz\",\n      \"integrity\": \"sha512-eD/JQ21IG2i1FraJnTMbUarAUkA7G988ofehG5MDCRXaUU91rEBJuCeSoou2Sk1y4RbLYXzqEg1QLwEmRU4qcQ==\",\n      \"requires\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-module-imports\": \"^7.18.6\",\n        \"@babel/helper-simple-access\": \"^7.20.2\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.0\",\n        \"@babel/types\": \"^7.21.0\"\n      }\n    },\n    \"@babel/helper-optimise-call-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-plugin-utils\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.20.2.tgz\",\n      \"integrity\": \"sha512-8RvlJG2mj4huQ4pZ+rU9lqKi9ZKiRmuvGuM2HlWmkmgOhbs6zEAw6IEiJ5cQqGbDzGZOhwuOQNtZMi/ENLjZoQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@babel/helper-remap-async-to-generator\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.18.9.tgz\",\n      \"integrity\": \"sha512-dI7q50YKd8BAv3VEfgg7PS7yD3Rtbi2J1XMXaalXO0W0164hYLnh8zpjRS0mte9MfVp/tltvr/cfdXPvJr1opA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-wrap-function\": \"^7.18.9\",\n        \"@babel/types\": \"^7.18.9\"\n      }\n    },\n    \"@babel/helper-replace-supers\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.20.7.tgz\",\n      \"integrity\": \"sha512-vujDMtB6LVfNW13jhlCrp48QNslK6JXi7lQG736HVbHz/mbf4Dc7tIRh1Xf5C0rF7BP8iiSxGMCmY6Ci1ven3A==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.20.7\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\"\n      }\n    },\n    \"@babel/helper-simple-access\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.20.2.tgz\",\n      \"integrity\": \"sha512-+0woI/WPq59IrqDYbVGfshjT5Dmk/nnbdpcF8SnMhhXObpTq2KNBdLFRFrkVdbDOyUmHBCxzm5FHV1rACIkIbA==\",\n      \"requires\": {\n        \"@babel/types\": \"^7.20.2\"\n      }\n    },\n    \"@babel/helper-skip-transparent-expression-wrappers\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.20.0.tgz\",\n      \"integrity\": \"sha512-5y1JYeNKfvnT8sZcK9DVRtpTbGiomYIHviSP3OQWmDPU3DeH4a1ZlT/N2lyQ5P8egjcRaT/Y9aNqUxK0WsnIIg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.20.0\"\n      }\n    },\n    \"@babel/helper-split-export-declaration\": {\n      \"version\": \"7.22.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.6.tgz\",\n      \"integrity\": \"sha512-AsUnxuLhRYsisFiaJwvp1QF+I3KjD5FOxut14q/GzovUe6orHLesW2C7d754kRm53h5gqrz6sFl6sxc4BVtE/g==\",\n      \"requires\": {\n        \"@babel/types\": \"^7.22.5\"\n      }\n    },\n    \"@babel/helper-string-parser\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.22.5.tgz\",\n      \"integrity\": \"sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw==\"\n    },\n    \"@babel/helper-validator-identifier\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz\",\n      \"integrity\": \"sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A==\"\n    },\n    \"@babel/helper-validator-option\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.21.0.tgz\",\n      \"integrity\": \"sha512-rmL/B8/f0mKS2baE9ZpyTcTavvEuWhTTW8amjzXNvYG4AwBsqTLikfXsEofsJEfKHf+HQVQbFOHy6o+4cnC/fQ==\"\n    },\n    \"@babel/helper-wrap-function\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.20.5.tgz\",\n      \"integrity\": \"sha512-bYMxIWK5mh+TgXGVqAtnu5Yn1un+v8DDZtqyzKRLUzrh70Eal2O3aZ7aPYiMADO4uKlkzOiRiZ6GX5q3qxvW9Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-function-name\": \"^7.19.0\",\n        \"@babel/template\": \"^7.18.10\",\n        \"@babel/traverse\": \"^7.20.5\",\n        \"@babel/types\": \"^7.20.5\"\n      }\n    },\n    \"@babel/helpers\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.21.0.tgz\",\n      \"integrity\": \"sha512-XXve0CBtOW0pd7MRzzmoyuSj0e3SEzj8pgyFxnTT1NJZL38BD1MK7yYrm8yefRPIDvNNe14xR4FdbHwpInD4rA==\",\n      \"requires\": {\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.0\",\n        \"@babel/types\": \"^7.21.0\"\n      }\n    },\n    \"@babel/highlight\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.22.20.tgz\",\n      \"integrity\": \"sha512-dkdMCN3py0+ksCgYmGG8jKeGA/8Tk+gJwSYYlFGxG5lmhfKNoAy004YpLxpS1W2J8m/EK2Ew+yOs9pVRwO89mg==\",\n      \"requires\": {\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"chalk\": \"^2.4.2\",\n        \"js-tokens\": \"^4.0.0\"\n      },\n      \"dependencies\": {\n        \"ansi-styles\": {\n          \"version\": \"3.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n          \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n          \"requires\": {\n            \"color-convert\": \"^1.9.0\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"2.4.2\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n          \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n          \"requires\": {\n            \"ansi-styles\": \"^3.2.1\",\n            \"escape-string-regexp\": \"^1.0.5\",\n            \"supports-color\": \"^5.3.0\"\n          }\n        },\n        \"color-convert\": {\n          \"version\": \"1.9.3\",\n          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n          \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n          \"requires\": {\n            \"color-name\": \"1.1.3\"\n          }\n        },\n        \"color-name\": {\n          \"version\": \"1.1.3\",\n          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n          \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\"\n        },\n        \"has-flag\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n          \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\"\n        },\n        \"supports-color\": {\n          \"version\": \"5.5.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n          \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n          \"requires\": {\n            \"has-flag\": \"^3.0.0\"\n          }\n        }\n      }\n    },\n    \"@babel/parser\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.23.0.tgz\",\n      \"integrity\": \"sha512-vvPKKdMemU85V9WE/l5wZEmImpCtLqbnTvqDS2U1fJ96KrxoW7KrXhNsNCblQlg8Ck4b85yxdTyelsMUgFUXiw==\"\n    },\n    \"@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-Dgxsyg54Fx1d4Nge8UnvTrED63vrwOdPmyvPzlNN/boaliRP54pm3pGzZD1SJUwrBA+Cs/xdG8kXX6Mn/RfISQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.20.7.tgz\",\n      \"integrity\": \"sha512-sbr9+wNE5aXMBBFBICk01tt7sBf2Oc9ikRFEcem/ZORup9IMUdNhW7/wVLEbbtlWOsEubJet46mHAL2C8+2jKQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/plugin-proposal-optional-chaining\": \"^7.20.7\"\n      }\n    },\n    \"@babel/plugin-proposal-async-generator-functions\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.20.7.tgz\",\n      \"integrity\": \"sha512-xMbiLsn/8RK7Wq7VeVytytS2L6qE69bXPB10YCmMdDZbKF4okCqY74pI/jJQ/8U0b/F6NrT2+14b8/P9/3AMGA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.18.9\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\"\n      }\n    },\n    \"@babel/plugin-proposal-class-properties\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.18.6.tgz\",\n      \"integrity\": \"sha512-cumfXOF0+nzZrrN8Rf0t7M+tF6sZc7vhQwYQck9q1/5w2OExlD+b4v4RpMJFaV1Z7WcDRgO6FqvxqxGlwo+RHQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-proposal-class-static-block\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-static-block/-/plugin-proposal-class-static-block-7.21.0.tgz\",\n      \"integrity\": \"sha512-XP5G9MWNUskFuP30IfFSEFB0Z6HzLIUcjYM4bYOPHXl7eiJ9HFv8tWj6TXTN5QODiEhDZAeI4hLok2iHFFV4hw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.21.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-proposal-dynamic-import\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.18.6.tgz\",\n      \"integrity\": \"sha512-1auuwmK+Rz13SJj36R+jqFPMJWyKEDd7lLSdOj4oJK0UTgGueSAtkrCvz9ewmgyU/P941Rv2fQwZJN8s6QruXw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-export-namespace-from\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-export-namespace-from/-/plugin-proposal-export-namespace-from-7.18.9.tgz\",\n      \"integrity\": \"sha512-k1NtHyOMvlDDFeb9G5PhUXuGj8m/wiwojgQVEhJ/fsVsMCpLyOP4h0uGEjYJKrRI+EVPlb5Jk+Gt9P97lOGwtA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-json-strings\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.18.6.tgz\",\n      \"integrity\": \"sha512-lr1peyn9kOdbYc0xr0OdHTZ5FMqS6Di+H0Fz2I/JwMzGmzJETNeOFq2pBySw6X/KFL5EWDjlJuMsUGRFb8fQgQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-logical-assignment-operators\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-logical-assignment-operators/-/plugin-proposal-logical-assignment-operators-7.20.7.tgz\",\n      \"integrity\": \"sha512-y7C7cZgpMIjWlKE5T7eJwp+tnRYM89HmRvWM5EQuB5BoHEONjmQ8lSNmBUwOyy/GFRsohJED51YBF79hE1djug==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\"\n      }\n    },\n    \"@babel/plugin-proposal-nullish-coalescing-operator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.18.6.tgz\",\n      \"integrity\": \"sha512-wQxQzxYeJqHcfppzBDnm1yAY0jSRkUXR2z8RePZYrKwMKgMlE8+Z6LUno+bd6LvbGh8Gltvy74+9pIYkr+XkKA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-numeric-separator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.18.6.tgz\",\n      \"integrity\": \"sha512-ozlZFogPqoLm8WBr5Z8UckIoE4YQ5KESVcNudyXOR8uqIkliTEgJ3RoketfG6pmzLdeZF0H/wjE9/cCEitBl7Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\"\n      }\n    },\n    \"@babel/plugin-proposal-object-rest-spread\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.20.7.tgz\",\n      \"integrity\": \"sha512-d2S98yCiLxDVmBmE8UjGcfPvNEUbA1U5q5WxaWFUGRzJSVAZqm5W6MbPct0jxnegUZ0niLeNX+IOzEs7wYg9Dg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/compat-data\": \"^7.20.5\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-transform-parameters\": \"^7.20.7\"\n      }\n    },\n    \"@babel/plugin-proposal-optional-catch-binding\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.18.6.tgz\",\n      \"integrity\": \"sha512-Q40HEhs9DJQyaZfUjjn6vE8Cv4GmMHCYuMGIWUnlxH6400VGxOuwWsPt4FxXxJkC/5eOzgn0z21M9gMT4MOhbw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-optional-chaining\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.21.0.tgz\",\n      \"integrity\": \"sha512-p4zeefM72gpmEe2fkUr/OnOXpWEf8nAgk7ZYVqqfFiyIG7oFfVZcCrU64hWn5xp4tQ9LkV4bTIa5rD0KANpKNA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-private-methods\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz\",\n      \"integrity\": \"sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-proposal-private-property-in-object\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0.tgz\",\n      \"integrity\": \"sha512-ha4zfehbJjc5MmXBlHec1igel5TJXXLDDRbuJ4+XT2TJcyD9/V1919BA8gMvsdHcNMBy4WBUBiRb3nw/EQUtBw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-create-class-features-plugin\": \"^7.21.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-proposal-unicode-property-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-2BShG/d5yoZyXZfVePH91urL5wTG6ASZU9M4o03lKK8u8UW1y08OMttBSOADTcJrnPMpvDXRG3G8fyLh4ovs8w==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-syntax-async-generators\": {\n      \"version\": \"7.8.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz\",\n      \"integrity\": \"sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-class-properties\": {\n      \"version\": \"7.12.13\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz\",\n      \"integrity\": \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.12.13\"\n      }\n    },\n    \"@babel/plugin-syntax-class-static-block\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz\",\n      \"integrity\": \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-syntax-dynamic-import\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz\",\n      \"integrity\": \"sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-export-namespace-from\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz\",\n      \"integrity\": \"sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-syntax-import-assertions\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.20.0.tgz\",\n      \"integrity\": \"sha512-IUh1vakzNoWalR8ch/areW7qFopR2AEw03JlG7BbrDqmQ4X3q9uuipQwSGrUn7oGiemKjtSLDhNtQHzMHr1JdQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.19.0\"\n      }\n    },\n    \"@babel/plugin-syntax-json-strings\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz\",\n      \"integrity\": \"sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-logical-assignment-operators\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz\",\n      \"integrity\": \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      }\n    },\n    \"@babel/plugin-syntax-nullish-coalescing-operator\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz\",\n      \"integrity\": \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-numeric-separator\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz\",\n      \"integrity\": \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      }\n    },\n    \"@babel/plugin-syntax-object-rest-spread\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz\",\n      \"integrity\": \"sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-optional-catch-binding\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz\",\n      \"integrity\": \"sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-optional-chaining\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz\",\n      \"integrity\": \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-private-property-in-object\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz\",\n      \"integrity\": \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-syntax-top-level-await\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz\",\n      \"integrity\": \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-transform-arrow-functions\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.20.7.tgz\",\n      \"integrity\": \"sha512-3poA5E7dzDomxj9WXWwuD6A5F3kc7VXwIJO+E+J8qtDtS+pXPAhrgEyh+9GBwBgPq1Z+bB+/JD60lp5jsN7JPQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-async-to-generator\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.20.7.tgz\",\n      \"integrity\": \"sha512-Uo5gwHPT9vgnSXQxqGtpdufUiWp96gk7yiP4Mp5bm1QMkEmLXBO7PAGYbKoJ6DhAwiNkcHFBol/x5zZZkL/t0Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-module-imports\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-block-scoped-functions\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.18.6.tgz\",\n      \"integrity\": \"sha512-ExUcOqpPWnliRcPqves5HJcJOvHvIIWfuS4sroBUenPuMdmW+SMHDakmtS7qOo13sVppmUijqeTv7qqGsvURpQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-block-scoping\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.21.0.tgz\",\n      \"integrity\": \"sha512-Mdrbunoh9SxwFZapeHVrwFmri16+oYotcZysSzhNIVDwIAb1UV+kvnxULSYq9J3/q5MDG+4X6w8QVgD1zhBXNQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-classes\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.21.0.tgz\",\n      \"integrity\": \"sha512-RZhbYTCEUAe6ntPehC4hlslPWosNHDox+vAs4On/mCLRLfoDVHf6hVEd7kuxr1RnHwJmxFfUM3cZiZRmPxJPXQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-replace-supers\": \"^7.20.7\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"globals\": \"^11.1.0\"\n      }\n    },\n    \"@babel/plugin-transform-computed-properties\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.20.7.tgz\",\n      \"integrity\": \"sha512-Lz7MvBK6DTjElHAmfu6bfANzKcxpyNPeYBGEafyA6E5HtRpjpZwU+u7Qrgz/2OR0z+5TvKYbPdphfSaAcZBrYQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/template\": \"^7.20.7\"\n      }\n    },\n    \"@babel/plugin-transform-destructuring\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.20.7.tgz\",\n      \"integrity\": \"sha512-Xwg403sRrZb81IVB79ZPqNQME23yhugYVqgTxAhT99h485F4f+GMELFhhOsscDUB7HCswepKeCKLn/GZvUKoBA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-dotall-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-6S3jpun1eEbAxq7TdjLotAsl4WpQI9DxfkycRcKrjhQYzU87qpXdknpBg/e+TdcMehqGnLFi7tnFUBR02Vq6wg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-duplicate-keys\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.18.9.tgz\",\n      \"integrity\": \"sha512-d2bmXCtZXYc59/0SanQKbiWINadaJXqtvIQIzd4+hNwkWBgyCd5F/2t1kXoUdvPMrxzPvhK6EMQRROxsue+mfw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-exponentiation-operator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.18.6.tgz\",\n      \"integrity\": \"sha512-wzEtc0+2c88FVR34aQmiz56dxEkxr2g8DQb/KfaFa1JYXOFVsbhvAonFN6PwVWj++fKmku8NP80plJ5Et4wqHw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-builder-binary-assignment-operator-visitor\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-for-of\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.21.0.tgz\",\n      \"integrity\": \"sha512-LlUYlydgDkKpIY7mcBWvyPPmMcOphEyYA27Ef4xpbh1IiDNLr0kZsos2nf92vz3IccvJI25QUwp86Eo5s6HmBQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-function-name\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.18.9.tgz\",\n      \"integrity\": \"sha512-WvIBoRPaJQ5yVHzcnJFor7oS5Ls0PYixlTYE63lCj2RtdQEl15M68FXQlxnG6wdraJIXRdR7KI+hQ7q/9QjrCQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-compilation-targets\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.18.9\",\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-literals\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.18.9.tgz\",\n      \"integrity\": \"sha512-IFQDSRoTPnrAIrI5zoZv73IFeZu2dhu6irxQjY9rNjTT53VmKg9fenjvoiOWOkJ6mm4jKVPtdMzBY98Fp4Z4cg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-member-expression-literals\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.18.6.tgz\",\n      \"integrity\": \"sha512-qSF1ihLGO3q+/g48k85tUjD033C29TNTVB2paCwZPVmOsjn9pClvYYrM2VeJpBY2bcNkuny0YUyTNRyRxJ54KA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-modules-amd\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.20.11.tgz\",\n      \"integrity\": \"sha512-NuzCt5IIYOW0O30UvqktzHYR2ud5bOWbY0yaxWZ6G+aFzOMJvrs5YHNikrbdaT15+KNO31nPOy5Fim3ku6Zb5g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-modules-commonjs\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.20.11.tgz\",\n      \"integrity\": \"sha512-S8e1f7WQ7cimJQ51JkAaDrEtohVEitXjgCGAS2N8S31Y42E+kWwfSz83LYz57QdBm7q9diARVqanIaH2oVgQnw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-simple-access\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-modules-systemjs\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.20.11.tgz\",\n      \"integrity\": \"sha512-vVu5g9BPQKSFEmvt2TA4Da5N+QVS66EX21d8uoOihC+OCpUoGvzVsXeqFdtAEfVa5BILAeFt+U7yVmLbQnAJmw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-hoist-variables\": \"^7.18.6\",\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\"\n      }\n    },\n    \"@babel/plugin-transform-modules-umd\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.18.6.tgz\",\n      \"integrity\": \"sha512-dcegErExVeXcRqNtkRU/z8WlBLnvD4MRnHgNs3MytRO1Mn1sHRyhbcpYbVMGclAqOjdW+9cfkdZno9dFdfKLfQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-module-transforms\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-named-capturing-groups-regex\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.20.5.tgz\",\n      \"integrity\": \"sha512-mOW4tTzi5iTLnw+78iEq3gr8Aoq4WNRGpmSlrogqaiCBoR1HFhpU4JkpQFOHfeYx3ReVIFWOQJS4aZBRvuZ6mA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.20.5\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-new-target\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.18.6.tgz\",\n      \"integrity\": \"sha512-DjwFA/9Iu3Z+vrAn+8pBUGcjhxKguSMlsFqeCKbhb9BAV756v0krzVK04CRDi/4aqmk8BsHb4a/gFcaA5joXRw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-object-super\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.18.6.tgz\",\n      \"integrity\": \"sha512-uvGz6zk+pZoS1aTZrOvrbj6Pp/kK2mp45t2B+bTDre2UgsZZ8EZLSJtUg7m/no0zOJUWgFONpB7Zv9W2tSaFlA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/helper-replace-supers\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-parameters\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.20.7.tgz\",\n      \"integrity\": \"sha512-WiWBIkeHKVOSYPO0pWkxGPfKeWrCJyD3NJ53+Lrp/QMSZbsVPovrVl2aWZ19D/LTVnaDv5Ap7GJ/B2CTOZdrfA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-property-literals\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.18.6.tgz\",\n      \"integrity\": \"sha512-cYcs6qlgafTud3PAzrrRNbQtfpQ8+y/+M5tKmksS9+M1ckbH6kzY8MrexEM9mcA6JDsukE19iIRvAyYl463sMg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-regenerator\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.20.5.tgz\",\n      \"integrity\": \"sha512-kW/oO7HPBtntbsahzQ0qSE3tFvkFwnbozz3NWFhLGqH75vLEg+sCGngLlhVkePlCs3Jv0dBBHDzCHxNiFAQKCQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"regenerator-transform\": \"^0.15.1\"\n      }\n    },\n    \"@babel/plugin-transform-reserved-words\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.18.6.tgz\",\n      \"integrity\": \"sha512-oX/4MyMoypzHjFrT1CdivfKZ+XvIPMFXwwxHp/r0Ddy2Vuomt4HDFGmft1TAY2yiTKiNSsh3kjBAzcM8kSdsjA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-shorthand-properties\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.18.6.tgz\",\n      \"integrity\": \"sha512-eCLXXJqv8okzg86ywZJbRn19YJHU4XUa55oz2wbHhaQVn/MM+XhukiT7SYqp/7o00dg52Rj51Ny+Ecw4oyoygw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-spread\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.20.7.tgz\",\n      \"integrity\": \"sha512-ewBbHQ+1U/VnH1fxltbJqDeWBU1oNLG8Dj11uIv3xVf7nrQu0bPGe5Rf716r7K5Qz+SqtAOVswoVunoiBtGhxw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\"\n      }\n    },\n    \"@babel/plugin-transform-sticky-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-kfiDrDQ+PBsQDO85yj1icueWMfGfJFKN1KCkndygtu/C9+XUfydLC8Iv5UYJqRwy4zk8EcplRxEOeLyjq1gm6Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-template-literals\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.18.9.tgz\",\n      \"integrity\": \"sha512-S8cOWfT82gTezpYOiVaGHrCbhlHgKhQt8XH5ES46P2XWmX92yisoZywf5km75wv5sYcXDUCLMmMxOLCtthDgMA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-typeof-symbol\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.18.9.tgz\",\n      \"integrity\": \"sha512-SRfwTtF11G2aemAZWivL7PD+C9z52v9EvMqH9BuYbabyPuKUvSWks3oCg6041pT925L4zVFqaVBeECwsmlguEw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-unicode-escapes\": {\n      \"version\": \"7.18.10\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.18.10.tgz\",\n      \"integrity\": \"sha512-kKAdAI+YzPgGY/ftStBFXTI1LZFju38rYThnfMykS+IXy8BVx+res7s2fxf1l8I35DV2T97ezo6+SGrXz6B3iQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-unicode-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-gE7A6Lt7YLnNOL3Pb9BNeZvi+d8l7tcRrG4+pwJjK9hD2xX4mEvjlQW60G9EEmfXVYRPv9VRQcyegIVHCql/AA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/preset-env\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.20.2.tgz\",\n      \"integrity\": \"sha512-1G0efQEWR1EHkKvKHqbG+IN/QdgwfByUpM5V5QroDzGV2t3S/WXNQd693cHiHTlCFMpr9B6FkPFXDA2lQcKoDg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/compat-data\": \"^7.20.1\",\n        \"@babel/helper-compilation-targets\": \"^7.20.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-validator-option\": \"^7.18.6\",\n        \"@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": \"^7.18.6\",\n        \"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": \"^7.18.9\",\n        \"@babel/plugin-proposal-async-generator-functions\": \"^7.20.1\",\n        \"@babel/plugin-proposal-class-properties\": \"^7.18.6\",\n        \"@babel/plugin-proposal-class-static-block\": \"^7.18.6\",\n        \"@babel/plugin-proposal-dynamic-import\": \"^7.18.6\",\n        \"@babel/plugin-proposal-export-namespace-from\": \"^7.18.9\",\n        \"@babel/plugin-proposal-json-strings\": \"^7.18.6\",\n        \"@babel/plugin-proposal-logical-assignment-operators\": \"^7.18.9\",\n        \"@babel/plugin-proposal-nullish-coalescing-operator\": \"^7.18.6\",\n        \"@babel/plugin-proposal-numeric-separator\": \"^7.18.6\",\n        \"@babel/plugin-proposal-object-rest-spread\": \"^7.20.2\",\n        \"@babel/plugin-proposal-optional-catch-binding\": \"^7.18.6\",\n        \"@babel/plugin-proposal-optional-chaining\": \"^7.18.9\",\n        \"@babel/plugin-proposal-private-methods\": \"^7.18.6\",\n        \"@babel/plugin-proposal-private-property-in-object\": \"^7.18.6\",\n        \"@babel/plugin-proposal-unicode-property-regex\": \"^7.18.6\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n        \"@babel/plugin-syntax-class-properties\": \"^7.12.13\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\",\n        \"@babel/plugin-syntax-import-assertions\": \"^7.20.0\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\",\n        \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\",\n        \"@babel/plugin-transform-arrow-functions\": \"^7.18.6\",\n        \"@babel/plugin-transform-async-to-generator\": \"^7.18.6\",\n        \"@babel/plugin-transform-block-scoped-functions\": \"^7.18.6\",\n        \"@babel/plugin-transform-block-scoping\": \"^7.20.2\",\n        \"@babel/plugin-transform-classes\": \"^7.20.2\",\n        \"@babel/plugin-transform-computed-properties\": \"^7.18.9\",\n        \"@babel/plugin-transform-destructuring\": \"^7.20.2\",\n        \"@babel/plugin-transform-dotall-regex\": \"^7.18.6\",\n        \"@babel/plugin-transform-duplicate-keys\": \"^7.18.9\",\n        \"@babel/plugin-transform-exponentiation-operator\": \"^7.18.6\",\n        \"@babel/plugin-transform-for-of\": \"^7.18.8\",\n        \"@babel/plugin-transform-function-name\": \"^7.18.9\",\n        \"@babel/plugin-transform-literals\": \"^7.18.9\",\n        \"@babel/plugin-transform-member-expression-literals\": \"^7.18.6\",\n        \"@babel/plugin-transform-modules-amd\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-commonjs\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-systemjs\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-umd\": \"^7.18.6\",\n        \"@babel/plugin-transform-named-capturing-groups-regex\": \"^7.19.1\",\n        \"@babel/plugin-transform-new-target\": \"^7.18.6\",\n        \"@babel/plugin-transform-object-super\": \"^7.18.6\",\n        \"@babel/plugin-transform-parameters\": \"^7.20.1\",\n        \"@babel/plugin-transform-property-literals\": \"^7.18.6\",\n        \"@babel/plugin-transform-regenerator\": \"^7.18.6\",\n        \"@babel/plugin-transform-reserved-words\": \"^7.18.6\",\n        \"@babel/plugin-transform-shorthand-properties\": \"^7.18.6\",\n        \"@babel/plugin-transform-spread\": \"^7.19.0\",\n        \"@babel/plugin-transform-sticky-regex\": \"^7.18.6\",\n        \"@babel/plugin-transform-template-literals\": \"^7.18.9\",\n        \"@babel/plugin-transform-typeof-symbol\": \"^7.18.9\",\n        \"@babel/plugin-transform-unicode-escapes\": \"^7.18.10\",\n        \"@babel/plugin-transform-unicode-regex\": \"^7.18.6\",\n        \"@babel/preset-modules\": \"^0.1.5\",\n        \"@babel/types\": \"^7.20.2\",\n        \"babel-plugin-polyfill-corejs2\": \"^0.3.3\",\n        \"babel-plugin-polyfill-corejs3\": \"^0.6.0\",\n        \"babel-plugin-polyfill-regenerator\": \"^0.4.1\",\n        \"core-js-compat\": \"^3.25.1\",\n        \"semver\": \"^6.3.0\"\n      }\n    },\n    \"@babel/preset-modules\": {\n      \"version\": \"0.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.5.tgz\",\n      \"integrity\": \"sha512-A57th6YRG7oR3cq/yt/Y84MvGgE0eJG2F1JLhKuyG+jFxEgrd/HAMJatiFtmOiZurz+0DkrvbheCLaV5f2JfjA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n        \"@babel/plugin-proposal-unicode-property-regex\": \"^7.4.4\",\n        \"@babel/plugin-transform-dotall-regex\": \"^7.4.4\",\n        \"@babel/types\": \"^7.4.4\",\n        \"esutils\": \"^2.0.2\"\n      }\n    },\n    \"@babel/regjsgen\": {\n      \"version\": \"0.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/regjsgen/-/regjsgen-0.8.0.tgz\",\n      \"integrity\": \"sha512-x/rqGMdzj+fWZvCOYForTghzbtqPDZ5gPwaoNGHdgDfF2QA/XZbCBp4Moo5scrkAMPhB7z26XM/AaHuIJdgauA==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@babel/runtime\": {\n      \"version\": \"7.23.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.23.6.tgz\",\n      \"integrity\": \"sha512-zHd0eUrf5GZoOWVCXp6koAKQTfZV07eit6bGPmJgnZdnSAvvZee6zniW2XMF7Cmc4ISOOnPy3QaSiIJGJkVEDQ==\",\n      \"requires\": {\n        \"regenerator-runtime\": \"^0.14.0\"\n      }\n    },\n    \"@babel/template\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.22.15.tgz\",\n      \"integrity\": \"sha512-QPErUVm4uyJa60rkI73qneDacvdvzxshT3kksGqlGWYdOTIUOwJ7RDUL8sGqslY1uXWSL6xMFKEXDS3ox2uF0w==\",\n      \"requires\": {\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/parser\": \"^7.22.15\",\n        \"@babel/types\": \"^7.22.15\"\n      }\n    },\n    \"@babel/traverse\": {\n      \"version\": \"7.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.23.2.tgz\",\n      \"integrity\": \"sha512-azpe59SQ48qG6nu2CzcMLbxUudtN+dOM9kDbUqGq3HXUJRlo7i8fvPoxQUzYgLZ4cMVmuZgm8vvBpNeRhd6XSw==\",\n      \"requires\": {\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/generator\": \"^7.23.0\",\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-function-name\": \"^7.23.0\",\n        \"@babel/helper-hoist-variables\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"@babel/parser\": \"^7.23.0\",\n        \"@babel/types\": \"^7.23.0\",\n        \"debug\": \"^4.1.0\",\n        \"globals\": \"^11.1.0\"\n      }\n    },\n    \"@babel/types\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.23.0.tgz\",\n      \"integrity\": \"sha512-0oIyUfKoI3mSqMvsxBdclDwxXKXAUA8v/apZbc+iSyARYou1o8ZGDxbUYyLFoW2arqS2jDGqJuZvv1d/io1axg==\",\n      \"requires\": {\n        \"@babel/helper-string-parser\": \"^7.22.5\",\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"to-fast-properties\": \"^2.0.0\"\n      }\n    },\n    \"@ckeditor/ckeditor5-adapter-ckfinder\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-adapter-ckfinder/-/ckeditor5-adapter-ckfinder-43.1.1.tgz\",\n      \"integrity\": \"sha512-DCR98QdQKCYCQFT23CwR6PFLPLT3rlh89++hFIhUpykDz2pljEDC8uFNWjKY+b/5/P/jkTICLtt8+DlF8aN+/Q==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-alignment\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-alignment/-/ckeditor5-alignment-43.1.1.tgz\",\n      \"integrity\": \"sha512-mjQPDmfPgKbMQp8JCR7Vg7MpRax44tSrtyoofSl/oMKDh2bXtwEnMKJlv501scl95S8VN2Pfnxj5+31N89j0Xg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-autoformat\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-autoformat/-/ckeditor5-autoformat-43.1.1.tgz\",\n      \"integrity\": \"sha512-/NP29+d5y+AcffZEBJqH42Bj/M76OuBPG3DNEz9XEBbF9ADC9jqb2pYzDgiit/9VukNDtoLJjQ6HGxjdwzdLfg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-autosave\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-autosave/-/ckeditor5-autosave-43.1.1.tgz\",\n      \"integrity\": \"sha512-GYeEF0NL0KLS33lZ4Uc4R2hAofTH+EE/Pulzg1V0rSIPghLNULsvMRiqe6PnzYDKtD5et1YpaIZRp55DGzJ/gQ==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-basic-styles\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-basic-styles/-/ckeditor5-basic-styles-43.1.1.tgz\",\n      \"integrity\": \"sha512-xFfL6JaVkkNRnFET/ld6MGvbifFxJY8bv3zvAAlphXsCBxNDH9cZWzG605PF6SYTucCUXD4dtW0teLMmdzklaQ==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-block-quote\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-block-quote/-/ckeditor5-block-quote-43.1.1.tgz\",\n      \"integrity\": \"sha512-VYZlQisRptiiqVRnMVBcwc3yRilpSoFTKiMXTzrYukUZLhPL6fiWVeMe/N9ygtdtGp3oYF/rSNv9H/8e6nNVYw==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-build-classic\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-build-classic/-/ckeditor5-build-classic-43.1.1.tgz\",\n      \"integrity\": \"sha512-yCg+5u2ihdunYxieHsgHWACXbTMQZajy23wtGAuED7Tv+Uf41XPmBmQLoXSY43LyQOeSNvgEFdb6lUrl5Gi05w==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-adapter-ckfinder\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-autoformat\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-basic-styles\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-block-quote\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ckbox\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ckfinder\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-cloud-services\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-easy-image\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-classic\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-essentials\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-heading\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-image\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-indent\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-link\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-list\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-media-embed\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paragraph\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paste-from-office\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-table\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-ckbox\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-ckbox/-/ckeditor5-ckbox-43.1.1.tgz\",\n      \"integrity\": \"sha512-2suCDhe5HlutZz52iBXRaVAcht/E4wBdZsF6ZL+hELNuqvYM2PCb2/FZTtxQb50mDlWtJtLidRc49COAr0k1QA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"blurhash\": \"2.0.5\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-ckfinder\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-ckfinder/-/ckeditor5-ckfinder-43.1.1.tgz\",\n      \"integrity\": \"sha512-f5N9FtJTSRfEUaJqr0LpekoSAIMktyiwbWeGQhbYseCCV0+Qsw6W/wzuWMFNe5GELg0R/0tG0H59/2m1wTFFbw==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-clipboard\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-clipboard/-/ckeditor5-clipboard-43.1.1.tgz\",\n      \"integrity\": \"sha512-QF0zyq/NhLFm8V/VBBn+RWjiaAd5eyeCKz7zQKyBcSW27IaazAnG0+HHZeydZkT4vntad71t6bi6ZWzL/MJxwg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-cloud-services\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-cloud-services/-/ckeditor5-cloud-services-43.1.1.tgz\",\n      \"integrity\": \"sha512-YprETdoRcu/2yxVCuoOrY+f4G0Qus0hIMfMuRZ9jbFWDDwZgHiXrFXvE0W9o9N51rKffWnTbs0GljsaXVit1+g==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-code-block\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-code-block/-/ckeditor5-code-block-43.1.1.tgz\",\n      \"integrity\": \"sha512-Nil+MNeirroHop5Onj23L2v17Jokgc6wvJYqzH+85OvlrJeEsfFauxlW+S6TI3ypZT04yLJ0zdpaZ/FYC5+NxA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-core\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-core/-/ckeditor5-core-43.1.1.tgz\",\n      \"integrity\": \"sha512-qtbnD+24dK+ANVUgs+unZ0qX64NA0eG6k344q8fhXuHdPRKk55BDkjdmpv/Fh9Y0beo9EDqUPE/P7agv8lucBg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-watchdog\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-easy-image\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-easy-image/-/ckeditor5-easy-image-43.1.1.tgz\",\n      \"integrity\": \"sha512-BSiqxe6rFzNIROz7uny8SyGndQX070hlktJT5sQNO46lB+tsyFScUVXjzduSlm2fCG/2PFA83skR3/7cTAkBbg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-editor-balloon\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-balloon/-/ckeditor5-editor-balloon-43.1.1.tgz\",\n      \"integrity\": \"sha512-hIfocf3a/zXj1SLElF58LIVXOP3GphpajrsNXysSxccb4LNUQjvqMqwYaHDkib0Oh4AznsCwfBE3CJ3grUiI4g==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-editor-classic\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-classic/-/ckeditor5-editor-classic-43.1.1.tgz\",\n      \"integrity\": \"sha512-8/yuGbTtY/BF4Oi5wDd9/NHNmIvtb+f5YvqSkG7ZtWy0M+uHru8xM7hhUqUKwrG2jVxB2MFRcDGAE0YlVqs98Q==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-editor-decoupled\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-decoupled/-/ckeditor5-editor-decoupled-43.1.1.tgz\",\n      \"integrity\": \"sha512-Vs7yVUjOM+QiwnS6v987YGen0xwku07pQyhl+ihW6cphJymaJ/kPNvkR2ZCfE5e/Av0ckz14DQj4vOmotx+Vxg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-editor-inline\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-inline/-/ckeditor5-editor-inline-43.1.1.tgz\",\n      \"integrity\": \"sha512-6rNUJPG23c0Nm4cbb5ReYiARhBk8crdpkYig6sR+8m//ah9SzO0H4H/brHtYHsV6FxOYDwxEJdaMSDP7rWUwkQ==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-editor-multi-root\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-editor-multi-root/-/ckeditor5-editor-multi-root-43.1.1.tgz\",\n      \"integrity\": \"sha512-M1NBPFLZZAVJt22Ipy/JYTeOPPGCRDy3nWnCoBR2U79/FkEQNRyUtkR58EA4dLHdaeAiaWX8w7z2DrLKxOUltw==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-engine\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-engine/-/ckeditor5-engine-43.1.1.tgz\",\n      \"integrity\": \"sha512-gOqbGwEqbJDgbSRM0Dv3ArQRGTmX2pySNdQIseLnENVaq9r5FUu9T2moKYJbGl8t/DIqBAxOtdHQPafrXtk7yg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-enter\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-enter/-/ckeditor5-enter-43.1.1.tgz\",\n      \"integrity\": \"sha512-7JjNCe4qVtiLgnGC8P5WJzcDGTOXzgpos8nPSR52vsqNANNZQ/iAByDoPP7WCIijJHHjeFoBk0ytk2qfXppjkw==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-essentials\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-essentials/-/ckeditor5-essentials-43.1.1.tgz\",\n      \"integrity\": \"sha512-qbo080qotWmq19SnUkFspT9swHy2160nHFOdtx4LrQtGPbjSzS2EBFNHmkf31gUmEcNZCbegSIl0UT5IvIIV8g==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-select-all\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-undo\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-find-and-replace\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-find-and-replace/-/ckeditor5-find-and-replace-43.1.1.tgz\",\n      \"integrity\": \"sha512-BmSwyTsL5fAo4I2gRq7gzbU+WNAoaxWOPZCip/cGNdqzV9Utl6kTLx/DdxAhh8B4KTj8Rqv8Cmg1862HMkfKkw==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-font\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-font/-/ckeditor5-font-43.1.1.tgz\",\n      \"integrity\": \"sha512-QQrLf3zWp1T0QttKdFoC/fbEF69hzsHxNzmOeGVwAavgW0qpbpSEvTT5kRHm1tYlGeSR8N6/SVXgb4xHUxwvHg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-heading\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-heading/-/ckeditor5-heading-43.1.1.tgz\",\n      \"integrity\": \"sha512-Gr4rxChoamevxNf/6DKRYltOcLuCqrqFOCWrOO00JRHN8dHW81TgMJVGf4xeM4bAlFbMSqM3Y2vRCPhtdTAarA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paragraph\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-highlight\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-highlight/-/ckeditor5-highlight-43.1.1.tgz\",\n      \"integrity\": \"sha512-hrzzTQ1tAHIUGdNingpyMsrBeb3herfSMXOGylkkTqg/SqtnUlVJbPZ8NVUrmlw6hQQMl7HDqBJGdHoesvB8TA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-horizontal-line\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-horizontal-line/-/ckeditor5-horizontal-line-43.1.1.tgz\",\n      \"integrity\": \"sha512-FLTTPShC+/E/fAUYAxyMHOLDYCYAAuB3eXHonPekXjiAdkhchPibkIz0c3DgdjRGFhfGE4/XQ4PyU5oa5BKt5w==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-html-embed\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-html-embed/-/ckeditor5-html-embed-43.1.1.tgz\",\n      \"integrity\": \"sha512-ggOFwmpNAiT0nwm/++GZR/9V256mHxA0l7riL422l9YOSToGf5kukemsc7PIifuNoBXCzFrkNipr53ctxZkomA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-html-support\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-html-support/-/ckeditor5-html-support-43.1.1.tgz\",\n      \"integrity\": \"sha512-eF2eZU6sbU0ml+z8nSd7cDhk3ihrV9R7gih/bWOGvWa94bpaNVOd4c7e3F0ZPQVlxfwT1X99Y7aDNSNcbWs53A==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-image\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-image/-/ckeditor5-image-43.1.1.tgz\",\n      \"integrity\": \"sha512-6xOJsG9nYIIpwf/Kj0MARts5KK+eZ+awpAvljYgx+xjII4KEAO1dKSKjX5Fmx3zjDWieJelbLit9tvQTcqyq8A==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-undo\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-indent\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-indent/-/ckeditor5-indent-43.1.1.tgz\",\n      \"integrity\": \"sha512-8UjEX0TlnQgxzRkIAwJMcrc4rQSrpFuxUmo4b4xWIuzTg2p/+XdmDebi1p0AekB14ZW9J4UjB0U8NTWJQ++NyA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-language\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-language/-/ckeditor5-language-43.1.1.tgz\",\n      \"integrity\": \"sha512-lNqZn3rTmGDPEvZwAZZF6R1CkhnAh0cPXU4kuIs0+sshUcWGTQTO1l38Qzr4BGLrH1u7S2OilDe5GwfujF2vaA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-link\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-link/-/ckeditor5-link-43.1.1.tgz\",\n      \"integrity\": \"sha512-pk/ginodZGD8H5ezH9uhPjV7bK2wKkx80Eno9pt/c05+rsrHOjcibrS+SXBQ6qbK/W6Zo9ZUFwWC9HyNIiCwqA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-list\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-list/-/ckeditor5-list-43.1.1.tgz\",\n      \"integrity\": \"sha512-hH9Ny4TRH87Iz7WDw8eVKHFFmY4sOrlbPcXutcZCfYGuiDGAvRaeinAwitnWwy+bs5mAdQcw/araWAgMoVbEpw==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-markdown-gfm\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-markdown-gfm/-/ckeditor5-markdown-gfm-43.1.1.tgz\",\n      \"integrity\": \"sha512-7hnOEZdow1/aR69RXqTPoTczyAeIkjwYxgXbvt+pWgtJinuGtW97pc2X6ZSivsq+SWa+6UCe3TnzbyUrIdcqzA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"marked\": \"4.0.12\",\n        \"turndown\": \"7.2.0\",\n        \"turndown-plugin-gfm\": \"1.0.2\"\n      }\n    },\n    \"@ckeditor/ckeditor5-media-embed\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-media-embed/-/ckeditor5-media-embed-43.1.1.tgz\",\n      \"integrity\": \"sha512-MEydmh/mNUpMpNNV6BDWK8pCC5qn++WPDyDMYSFi9bX8hr9EC7AufoNG+Lh46vEnPl49cAy18WZvlyoX7nCyCA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-undo\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-mention\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-mention/-/ckeditor5-mention-43.1.1.tgz\",\n      \"integrity\": \"sha512-ErKPpapKx7HXTDgfGg6h3IRac70gCn6cwLIfuSiJ3bg8DSV5q7Rbi5UG8fRdOiT3mu/ZWI7gdP0ei6t/R6ddeA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-minimap\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-minimap/-/ckeditor5-minimap-43.1.1.tgz\",\n      \"integrity\": \"sha512-igsONpmmJse/RY/3ZAbtp5mlUzFHHAnFvUaNDPpWVDZ67sSJfCurAJqkrA9zzz4+pErdpryms067c5TAp8H9OQ==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-page-break\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-page-break/-/ckeditor5-page-break-43.1.1.tgz\",\n      \"integrity\": \"sha512-QuY6TYsgDZfeYWw4CZGgUs/3B2gHq4GmfSO4RuOMaQYPPnFOPFlyHEst9LDE6BbAa9ZWCdGlvUVxCfuAEDueww==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-paragraph\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-paragraph/-/ckeditor5-paragraph-43.1.1.tgz\",\n      \"integrity\": \"sha512-9ehs/b2K95W0KPDKwnfxDYHs4ypOtDNT4yB/ZGkJP96NV5XJGGQVBJIVmq0HrMGh4thdwJWofq7ZBIBjN3HMwQ==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-paste-from-office\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-paste-from-office/-/ckeditor5-paste-from-office-43.1.1.tgz\",\n      \"integrity\": \"sha512-dMftOM7eFMqFFZGdzo04PalimSQgNnbAp4adiVVSQDQ9reenWJD9iE1VCT4C5MnX3q4MXGAIBmqOubsqwfI84g==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-remove-format\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-remove-format/-/ckeditor5-remove-format-43.1.1.tgz\",\n      \"integrity\": \"sha512-LhzNvdJ3SrynhCN0BwAmjG1wNcPFy0nYgraS6Nj+P57up64EzDMCsJZ5EY7SsDgtm1rCRZh8liHfbY/6DLz6Ng==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-restricted-editing\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-restricted-editing/-/ckeditor5-restricted-editing-43.1.1.tgz\",\n      \"integrity\": \"sha512-QwDclw+HEYxJ3uLP0VNo+L0YMhv8uc/6RflEkh2E2w/keiPVrE41vzrAW/G0VD85MMVMdUrmYi98soDPsvZGVA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-select-all\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-select-all/-/ckeditor5-select-all-43.1.1.tgz\",\n      \"integrity\": \"sha512-NAxjt604pS6LcEsmH+yMHphrUAV6koACwauyj9llfZErd+VWlzsComiqgEN0ZbZ+iVCem4Fl+TT/82rTcGgtbg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-show-blocks\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-show-blocks/-/ckeditor5-show-blocks-43.1.1.tgz\",\n      \"integrity\": \"sha512-vb9FCIAnWZ0E161x7ulJPtLKtvxI+Rxv8qAikGNrbvLr6x9U9j0Y7WnLtmoYUozKIsRPQ2zFl7qciv1dPoeJTA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-source-editing\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-source-editing/-/ckeditor5-source-editing-43.1.1.tgz\",\n      \"integrity\": \"sha512-NH5TSZJjroUk9u1eQBlGNSnHvcesednao+YeicZQzRBvPMqIV+6J+MdMj65hlqyfbEsbeHrIKCdMLo/H28+4ZA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-theme-lark\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-special-characters\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-special-characters/-/ckeditor5-special-characters-43.1.1.tgz\",\n      \"integrity\": \"sha512-PQ4E0Rn7dxftM/h6zRLFptrD2xgMHXUVRZJuV6iejK+C/fVAM51PWOOUGUAPKWH1tY2bryiqdxF3yNyU2fpC4w==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-style\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-style/-/ckeditor5-style-43.1.1.tgz\",\n      \"integrity\": \"sha512-sDrM3lCNlx9QdZaEeRUjf/ukO3sIriRn3dNs/6n6+pGJThlzju3/ikryywJ5AfxzmpCK7CVx1H2x2R9krSV4PQ==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-table\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-table/-/ckeditor5-table-43.1.1.tgz\",\n      \"integrity\": \"sha512-rm7RcyYdhKlokBPxianNJSVdAQS7ng9T8UMbc7wJBVIEUXgqbqQ57nGm4IIX59FXSA7H9Dj/EFW4DT9YAaITvg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-theme-lark\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-theme-lark/-/ckeditor5-theme-lark-43.1.1.tgz\",\n      \"integrity\": \"sha512-7huWGsetISvNOzQurO1zqLL25YnGP3vgsOysKHz0qKgOi+UwXWxG8IYnzHi0qN4ox78vgyCR+nJvzjVz33gJEg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-typing\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-typing/-/ckeditor5-typing-43.1.1.tgz\",\n      \"integrity\": \"sha512-2YB3IfGPWct1oIlYGCL5Z5JQ/g2dpn8zr9syVTQJ/fAPjqi8Ig53lTaCQvpftnq4I+jESXAl4Rr9bIosqDVjAQ==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-ui\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-ui/-/ckeditor5-ui-43.1.1.tgz\",\n      \"integrity\": \"sha512-GNf0y56cT1HzgaG8wPyNsXlG4lZJMag+UKL6L3Y8uYg9/HurqJjJVnZcCJZ7T1t3D26fOvCIZ3KhW6AtRrnDrA==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"color-convert\": \"2.0.1\",\n        \"color-parse\": \"1.4.2\",\n        \"lodash-es\": \"4.17.21\",\n        \"vanilla-colorful\": \"0.7.2\"\n      }\n    },\n    \"@ckeditor/ckeditor5-undo\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-undo/-/ckeditor5-undo-43.1.1.tgz\",\n      \"integrity\": \"sha512-qX8jy5d8H4emWNCmA4EN2ZE/UGfBN1AqhMYtdX73EIxnDwVzT6Hd+GUaScDQoKn7Y81vO5dELPKFddaQN077Ew==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-upload\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-upload/-/ckeditor5-upload-43.1.1.tgz\",\n      \"integrity\": \"sha512-VIylGThmbwCKazx2XZBS8WYW7AYOgZzS8zQ1WDwT80tfOC3cjykNvg59eH7OACDeWud1LD47/idTj0wVC8gsIg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\"\n      }\n    },\n    \"@ckeditor/ckeditor5-utils\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-utils/-/ckeditor5-utils-43.1.1.tgz\",\n      \"integrity\": \"sha512-x7d1Iy2j6be74Nqv5MwWjBtVX8xv3lsbkUc0n/K26Edql5d2sk05MeA5kyBowHzqFEVDgDOUCj9Thl5KrJpb5w==\",\n      \"requires\": {\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-watchdog\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-watchdog/-/ckeditor5-watchdog-43.1.1.tgz\",\n      \"integrity\": \"sha512-/IyxNGhYKzioxwzK+H5NbgzHPNOBHkNbUwnC3vM89OOLxu5g77edEn/kcSBsEABYweddUK8LrPrKKvTcYC+tuw==\",\n      \"requires\": {\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-widget\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-widget/-/ckeditor5-widget-43.1.1.tgz\",\n      \"integrity\": \"sha512-3S6T7bImVAX2OHkrKeTRRWn+WE5nJyvrRPNItPTXhxgDPrbAYRpvH3mtcoUjb24cw1dDfHRwolBTXRv1DxqAUw==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@ckeditor/ckeditor5-word-count\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ckeditor/ckeditor5-word-count/-/ckeditor5-word-count-43.1.1.tgz\",\n      \"integrity\": \"sha512-eMLf6iC/yH2ZSJtnfU9W/92J/JYwGhrU8AGsrffGqPkJkHSe9qbSUHhpEyae+Q+GTK6FMU1pEC6tAdlxOWmRcw==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"ckeditor5\": \"43.1.1\",\n        \"lodash-es\": \"4.17.21\"\n      }\n    },\n    \"@codemirror/autocomplete\": {\n      \"version\": \"6.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/autocomplete/-/autocomplete-6.9.0.tgz\",\n      \"integrity\": \"sha512-Fbwm0V/Wn3BkEJZRhr0hi5BhCo5a7eBL6LYaliPjOSwCyfOpnjXY59HruSxOUNV+1OYer0Tgx1zRNQttjXyDog==\",\n      \"requires\": {\n        \"@codemirror/language\": \"^6.0.0\",\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.6.0\",\n        \"@lezer/common\": \"^1.0.0\"\n      }\n    },\n    \"@codemirror/commands\": {\n      \"version\": \"6.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/commands/-/commands-6.2.5.tgz\",\n      \"integrity\": \"sha512-dSi7ow2P2YgPBZflR9AJoaTHvqmeGIgkhignYMd5zK5y6DANTvxKxp6eMEpIDUJkRAaOY/TFZ4jP1ADIO/GLVA==\",\n      \"requires\": {\n        \"@codemirror/language\": \"^6.0.0\",\n        \"@codemirror/state\": \"^6.2.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"@lezer/common\": \"^1.0.0\"\n      }\n    },\n    \"@codemirror/language\": {\n      \"version\": \"6.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/language/-/language-6.9.0.tgz\",\n      \"integrity\": \"sha512-nFu311/0ne/qGuGCL3oKuktBgzVOaxCHZPZv1tLSZkNjPYxxvkjSbzno3MlErG2tgw1Yw1yF8BxMCegeMXqpiw==\",\n      \"requires\": {\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"@lezer/common\": \"^1.0.0\",\n        \"@lezer/highlight\": \"^1.0.0\",\n        \"@lezer/lr\": \"^1.0.0\",\n        \"style-mod\": \"^4.0.0\"\n      }\n    },\n    \"@codemirror/lint\": {\n      \"version\": \"6.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/lint/-/lint-6.4.1.tgz\",\n      \"integrity\": \"sha512-2Hx945qKX7FBan5/gUdTM8fsMYrNG9clIgEcPXestbLVFAUyQYFAuju/5BMNf/PwgpVaX5pvRm4+ovjbp9D9gQ==\",\n      \"requires\": {\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"crelt\": \"^1.0.5\"\n      }\n    },\n    \"@codemirror/search\": {\n      \"version\": \"6.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/search/-/search-6.5.2.tgz\",\n      \"integrity\": \"sha512-WRihpqd0l9cEh9J3IZe45Yi+Z5MfTsEXnyc3V7qXHP4ZYtIYpGOn+EJ7fyLIkyAm/8S6QIr7/mMISfAadf8zCg==\",\n      \"requires\": {\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"crelt\": \"^1.0.5\"\n      }\n    },\n    \"@codemirror/state\": {\n      \"version\": \"6.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/state/-/state-6.4.0.tgz\",\n      \"integrity\": \"sha512-hm8XshYj5Fo30Bb922QX9hXB/bxOAVH+qaqHBzw5TKa72vOeslyGwd4X8M0c1dJ9JqxlaMceOQ8RsL9tC7gU0A==\"\n    },\n    \"@codemirror/theme-one-dark\": {\n      \"version\": \"6.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/theme-one-dark/-/theme-one-dark-6.1.2.tgz\",\n      \"integrity\": \"sha512-F+sH0X16j/qFLMAfbciKTxVOwkdAS336b7AXTKOZhy8BR3eH/RelsnLgLFINrpST63mmN2OuwUt0W2ndUgYwUA==\",\n      \"requires\": {\n        \"@codemirror/language\": \"^6.0.0\",\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\",\n        \"@lezer/highlight\": \"^1.0.0\"\n      }\n    },\n    \"@codemirror/view\": {\n      \"version\": \"6.22.1\",\n      \"resolved\": \"https://registry.npmjs.org/@codemirror/view/-/view-6.22.1.tgz\",\n      \"integrity\": \"sha512-38BRn1nPqZqiHbmWfI8zri23IbRVbmSpSmh1E/Ysvc+lIGGdBC17K8zlK7ZU6fhfy9x4De9Zyj5JQqScPq5DkA==\",\n      \"requires\": {\n        \"@codemirror/state\": \"^6.1.4\",\n        \"style-mod\": \"^4.1.0\",\n        \"w3c-keyname\": \"^2.2.4\"\n      }\n    },\n    \"@colors/colors\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@colors/colors/-/colors-1.5.0.tgz\",\n      \"integrity\": \"sha512-ooWCrlZP11i8GImSjTHYHLkvFDP48nS4+204nGb1RiX/WXYHmJA2III9/e2DWVabCESdW7hBAEzHRqUn9OUVvQ==\",\n      \"optional\": true\n    },\n    \"@cspotcode/source-map-support\": {\n      \"version\": \"0.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz\",\n      \"integrity\": \"sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==\",\n      \"requires\": {\n        \"@jridgewell/trace-mapping\": \"0.3.9\"\n      },\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": {\n          \"version\": \"0.3.9\",\n          \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz\",\n          \"integrity\": \"sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==\",\n          \"requires\": {\n            \"@jridgewell/resolve-uri\": \"^3.0.3\",\n            \"@jridgewell/sourcemap-codec\": \"^1.4.10\"\n          }\n        }\n      }\n    },\n    \"@cypress/code-coverage\": {\n      \"version\": \"3.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/@cypress/code-coverage/-/code-coverage-3.10.0.tgz\",\n      \"integrity\": \"sha512-K5pW2KPpK4vKMXqxd6vuzo6m9BNgpAv1LcrrtmqAtOJ1RGoEILXYZVost0L6Q+V01NyY7n7jXIIfS7LR3nP6YA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@cypress/webpack-preprocessor\": \"^5.11.0\",\n        \"chalk\": \"4.1.2\",\n        \"dayjs\": \"1.10.7\",\n        \"debug\": \"4.3.4\",\n        \"execa\": \"4.1.0\",\n        \"globby\": \"11.0.4\",\n        \"istanbul-lib-coverage\": \"3.0.0\",\n        \"js-yaml\": \"3.14.1\",\n        \"nyc\": \"15.1.0\"\n      },\n      \"dependencies\": {\n        \"istanbul-lib-coverage\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz\",\n          \"integrity\": \"sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@cypress/request\": {\n      \"version\": \"3.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/@cypress/request/-/request-3.0.7.tgz\",\n      \"integrity\": \"sha512-LzxlLEMbBOPYB85uXrDqvD4MgcenjRBLIns3zyhx7vTPj/0u2eQhzXvPiGcaJrV38Q9dbkExWp6cOHPJ+EtFYg==\",\n      \"requires\": {\n        \"aws-sign2\": \"~0.7.0\",\n        \"aws4\": \"^1.8.0\",\n        \"caseless\": \"~0.12.0\",\n        \"combined-stream\": \"~1.0.6\",\n        \"extend\": \"~3.0.2\",\n        \"forever-agent\": \"~0.6.1\",\n        \"form-data\": \"~4.0.0\",\n        \"http-signature\": \"~1.4.0\",\n        \"is-typedarray\": \"~1.0.0\",\n        \"isstream\": \"~0.1.2\",\n        \"json-stringify-safe\": \"~5.0.1\",\n        \"mime-types\": \"~2.1.19\",\n        \"performance-now\": \"^2.1.0\",\n        \"qs\": \"6.13.1\",\n        \"safe-buffer\": \"^5.1.2\",\n        \"tough-cookie\": \"^5.0.0\",\n        \"tunnel-agent\": \"^0.6.0\",\n        \"uuid\": \"^8.3.2\"\n      }\n    },\n    \"@cypress/webpack-preprocessor\": {\n      \"version\": \"5.17.0\",\n      \"resolved\": \"https://registry.npmjs.org/@cypress/webpack-preprocessor/-/webpack-preprocessor-5.17.0.tgz\",\n      \"integrity\": \"sha512-HyFqHkrOrIIYOt4G+r3VK0kVYTcev1tEcqBI/0DJ4AzEuEgW/TB+cX56txy4Cgn60XXdJoul2utclZwUqOsPZA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bluebird\": \"3.7.1\",\n        \"debug\": \"^4.3.4\",\n        \"lodash\": \"^4.17.20\"\n      },\n      \"dependencies\": {\n        \"bluebird\": {\n          \"version\": \"3.7.1\",\n          \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.7.1.tgz\",\n          \"integrity\": \"sha512-DdmyoGCleJnkbp3nkbxTLJ18rjDsE4yCggEwKNXkeV123sPNfOCYeDoeuOY+F2FrSjO1YXcTU+dsy96KMy+gcg==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@cypress/xvfb\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/@cypress/xvfb/-/xvfb-1.2.4.tgz\",\n      \"integrity\": \"sha512-skbBzPggOVYCbnGgV+0dmBdW/s77ZkAOXIC1knS8NagwDjBrNC1LuXtQJeiN6l+m7lzmHtaoUw/ctJKdqkG57Q==\",\n      \"requires\": {\n        \"debug\": \"^3.1.0\",\n        \"lodash.once\": \"^4.1.1\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"3.2.7\",\n          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n          \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n          \"requires\": {\n            \"ms\": \"^2.1.1\"\n          }\n        }\n      }\n    },\n    \"@istanbuljs/load-nyc-config\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz\",\n      \"integrity\": \"sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==\",\n      \"requires\": {\n        \"camelcase\": \"^5.3.1\",\n        \"find-up\": \"^4.1.0\",\n        \"get-package-type\": \"^0.1.0\",\n        \"js-yaml\": \"^3.13.1\",\n        \"resolve-from\": \"^5.0.0\"\n      },\n      \"dependencies\": {\n        \"resolve-from\": {\n          \"version\": \"5.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n          \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\"\n        }\n      }\n    },\n    \"@istanbuljs/nyc-config-typescript\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/nyc-config-typescript/-/nyc-config-typescript-1.0.2.tgz\",\n      \"integrity\": \"sha512-iKGIyMoyJuFnJRSVTZ78POIRvNnwZaWIf8vG4ZS3rQq58MMDrqEX2nnzx0R28V2X8JvmKYiqY9FP2hlJsm8A0w==\",\n      \"requires\": {\n        \"@istanbuljs/schema\": \"^0.1.2\"\n      }\n    },\n    \"@istanbuljs/schema\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz\",\n      \"integrity\": \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\"\n    },\n    \"@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz\",\n      \"integrity\": \"sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==\",\n      \"requires\": {\n        \"@jridgewell/set-array\": \"^1.0.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      }\n    },\n    \"@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz\",\n      \"integrity\": \"sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==\"\n    },\n    \"@jridgewell/set-array\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz\",\n      \"integrity\": \"sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==\"\n    },\n    \"@jridgewell/source-map\": {\n      \"version\": \"0.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.5.tgz\",\n      \"integrity\": \"sha512-UTYAUj/wviwdsMfzoSJspJxbkH5o1snzwX0//0ENX1u/55kkZZkcTZP6u9bwKGkv+dkk9at4m1Cpt0uY80kcpQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      }\n    },\n    \"@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.4.14\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz\",\n      \"integrity\": \"sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw==\"\n    },\n    \"@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.25\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz\",\n      \"integrity\": \"sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==\",\n      \"requires\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"@kurkle/color\": {\n      \"version\": \"0.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@kurkle/color/-/color-0.3.2.tgz\",\n      \"integrity\": \"sha512-fuscdXJ9G1qb7W8VdHi+IwRqij3lBkosAm4ydQtEmbY58OzHXqQhvlxqEkoz0yssNVn38bcpRWgA9PP+OGoisw==\"\n    },\n    \"@lezer/common\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@lezer/common/-/common-1.2.1.tgz\",\n      \"integrity\": \"sha512-yemX0ZD2xS/73llMZIK6KplkjIjf2EvAHcinDi/TfJ9hS25G0388+ClHt6/3but0oOxinTcQHJLDXh6w1crzFQ==\"\n    },\n    \"@lezer/generator\": {\n      \"version\": \"1.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/@lezer/generator/-/generator-1.7.1.tgz\",\n      \"integrity\": \"sha512-MgPJN9Si+ccxzXl3OAmCeZuUKw4XiPl4y664FX/hnnyG9CTqUPq65N3/VGPA2jD23D7QgMTtNqflta+cPN+5mQ==\",\n      \"requires\": {\n        \"@lezer/common\": \"^1.1.0\",\n        \"@lezer/lr\": \"^1.3.0\"\n      }\n    },\n    \"@lezer/highlight\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@lezer/highlight/-/highlight-1.2.0.tgz\",\n      \"integrity\": \"sha512-WrS5Mw51sGrpqjlh3d4/fOwpEV2Hd3YOkp9DBt4k8XZQcoTHZFB7sx030A6OcahF4J1nDQAa3jXlTVVYH50IFA==\",\n      \"requires\": {\n        \"@lezer/common\": \"^1.0.0\"\n      }\n    },\n    \"@lezer/lr\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/@lezer/lr/-/lr-1.4.2.tgz\",\n      \"integrity\": \"sha512-pu0K1jCIdnQ12aWNaAVU5bzi7Bd1w54J3ECgANPmYLtQKP0HBj2cE/5coBD66MT10xbtIuUr7tg0Shbsvk0mDA==\",\n      \"requires\": {\n        \"@lezer/common\": \"^1.0.0\"\n      }\n    },\n    \"@mixmark-io/domino\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@mixmark-io/domino/-/domino-2.2.0.tgz\",\n      \"integrity\": \"sha512-Y28PR25bHXUg88kCV7nivXrP2Nj2RueZ3/l/jdx6J9f8J4nsEGcgX0Qe6lt7Pa+J79+kPiJU3LguR6O/6zrLOw==\"\n    },\n    \"@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"requires\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      }\n    },\n    \"@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\"\n    },\n    \"@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"requires\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      }\n    },\n    \"@popperjs/core\": {\n      \"version\": \"2.11.8\",\n      \"resolved\": \"https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz\",\n      \"integrity\": \"sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==\"\n    },\n    \"@tsconfig/node10\": {\n      \"version\": \"1.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.9.tgz\",\n      \"integrity\": \"sha512-jNsYVVxU8v5g43Erja32laIDHXeoNvFEpX33OK4d6hljo3jDhCBDhx5dhCCTMWUojscpAagGiRkBKxpdl9fxqA==\"\n    },\n    \"@tsconfig/node12\": {\n      \"version\": \"1.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz\",\n      \"integrity\": \"sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==\"\n    },\n    \"@tsconfig/node14\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz\",\n      \"integrity\": \"sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==\"\n    },\n    \"@tsconfig/node16\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.3.tgz\",\n      \"integrity\": \"sha512-yOlFc+7UtL/89t2ZhjPvvB/DeAr3r+Dq58IgzsFkOAvVC6NMJXmCGjbptdXdR9qsX7pKcTL+s87FtYREi2dEEQ==\"\n    },\n    \"@types/ace\": {\n      \"version\": \"0.0.47\",\n      \"resolved\": \"https://registry.npmjs.org/@types/ace/-/ace-0.0.47.tgz\",\n      \"integrity\": \"sha512-VoMFn09L8avwV0AGIaStj1MCJmgHKiPAGZYnmeHYp4Pz+ov4h/F61LJNFvq4d4K+YZmk0ClWByCDU81kZyCfoA==\",\n      \"dev\": true\n    },\n    \"@types/dompurify\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/dompurify/-/dompurify-2.3.3.tgz\",\n      \"integrity\": \"sha512-nnVQSgRVuZ/843oAfhA25eRSNzUFcBPk/LOiw5gm8mD9/X7CNcbRkQu/OsjCewO8+VIYfPxUnXvPEVGenw14+w==\",\n      \"requires\": {\n        \"@types/trusted-types\": \"*\"\n      }\n    },\n    \"@types/estree\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.5.tgz\",\n      \"integrity\": \"sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@types/jquery\": {\n      \"version\": \"3.5.8\",\n      \"resolved\": \"https://registry.npmjs.org/@types/jquery/-/jquery-3.5.8.tgz\",\n      \"integrity\": \"sha512-cXk6NwqjDYg+UI9p2l3x0YmPa4m7RrXqmbK4IpVVpRJiYXU/QTo+UZrn54qfE1+9Gao4qpYqUnxm5ZCy2FTXAw==\",\n      \"requires\": {\n        \"@types/sizzle\": \"*\"\n      }\n    },\n    \"@types/jqueryui\": {\n      \"version\": \"1.12.16\",\n      \"resolved\": \"https://registry.npmjs.org/@types/jqueryui/-/jqueryui-1.12.16.tgz\",\n      \"integrity\": \"sha512-6huAQDpNlso9ayaUT9amBOA3kj02OCeUWs+UvDmbaJmwkHSg/HLsQOoap/D5uveN9ePwl72N45Bl+Frp5xyG1Q==\",\n      \"requires\": {\n        \"@types/jquery\": \"*\"\n      }\n    },\n    \"@types/json-schema\": {\n      \"version\": \"7.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.11.tgz\",\n      \"integrity\": \"sha512-wOuvG1SN4Us4rez+tylwwwCV1psiNVOkJeM3AUWUNWg/jDQY2+HE/444y5gc+jBmRqASOm2Oeh5c1axHobwRKQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@types/node\": {\n      \"version\": \"16.18.47\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-16.18.47.tgz\",\n      \"integrity\": \"sha512-yBaT6qZKmvaeTuv8kfv2QwIsgi/D4bYSLmHow/IBxjLNRHxYEXgwVRvBmnNLBXi3CkZg0Wdzu3NTUlUjjxconQ==\"\n    },\n    \"@types/sinonjs__fake-timers\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/sinonjs__fake-timers/-/sinonjs__fake-timers-8.1.1.tgz\",\n      \"integrity\": \"sha512-0kSuKjAS0TrGLJ0M/+8MaFkGsQhZpB6pxOmvS3K8FYI72K//YmdfoW9X2qPsAKh1mkwxGD5zib9s1FIFed6E8g==\"\n    },\n    \"@types/sizzle\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/sizzle/-/sizzle-2.3.3.tgz\",\n      \"integrity\": \"sha512-JYM8x9EGF163bEyhdJBpR2QX1R5naCJHC8ucJylJ3w9/CVBaskdQ8WqBf8MmQrd1kRvp/a4TS8HJ+bxzR7ZJYQ==\"\n    },\n    \"@types/sortablejs\": {\n      \"version\": \"1.15.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/sortablejs/-/sortablejs-1.15.1.tgz\",\n      \"integrity\": \"sha512-g/JwBNToh6oCTAwNS8UGVmjO7NLDKsejVhvE4x1eWiPTC3uCuNsa/TD4ssvX3du+MLiM+SHPNDuijp8y76JzLQ==\",\n      \"dev\": true\n    },\n    \"@types/trusted-types\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/trusted-types/-/trusted-types-2.0.2.tgz\",\n      \"integrity\": \"sha512-F5DIZ36YVLE+PN+Zwws4kJogq47hNgX3Nx6WyDJ3kcplxyke3XIzB8uK5n/Lpm1HBsbGzd6nmGehL8cPekP+Tg==\"\n    },\n    \"@types/yauzl\": {\n      \"version\": \"2.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.0.tgz\",\n      \"integrity\": \"sha512-Cn6WYCm0tXv8p6k+A8PvbDG763EDpBoTzHdA+Q/MF6H3sapGjCm9NzoaJncJS9tUKSuCoDs9XHxYYsQDgxR6kw==\",\n      \"optional\": true,\n      \"requires\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"@webassemblyjs/ast\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.12.1.tgz\",\n      \"integrity\": \"sha512-EKfMUOPRRUTy5UII4qJDGPpqfwjOmZ5jeGFwid9mnoqIFK+e0vqoi1qH56JpmZSzEL53jKnNzScdmftJyG5xWg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@webassemblyjs/helper-numbers\": \"1.11.6\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\"\n      }\n    },\n    \"@webassemblyjs/floating-point-hex-parser\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.11.6.tgz\",\n      \"integrity\": \"sha512-ejAj9hfRJ2XMsNHk/v6Fu2dGS+i4UaXBXGemOfQ/JfQ6mdQg/WXtwleQRLLS4OvfDhv8rYnVwH27YJLMyYsxhw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@webassemblyjs/helper-api-error\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.11.6.tgz\",\n      \"integrity\": \"sha512-o0YkoP4pVu4rN8aTJgAyj9hC2Sv5UlkzCHhxqWj8butaLvnpdc2jOwh4ewE6CX0txSfLn/UYaV/pheS2Txg//Q==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@webassemblyjs/helper-buffer\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.12.1.tgz\",\n      \"integrity\": \"sha512-nzJwQw99DNDKr9BVCOZcLuJJUlqkJh+kVzVl6Fmq/tI5ZtEyWT1KZMyOXltXLZJmDtvLCDgwsyrkohEtopTXCw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@webassemblyjs/helper-numbers\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-numbers/-/helper-numbers-1.11.6.tgz\",\n      \"integrity\": \"sha512-vUIhZ8LZoIWHBohiEObxVm6hwP034jwmc9kuq5GdHZH0wiLVLIPcMCdpJzG4C11cHoQ25TFIQj9kaVADVX7N3g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@webassemblyjs/floating-point-hex-parser\": \"1.11.6\",\n        \"@webassemblyjs/helper-api-error\": \"1.11.6\",\n        \"@xtuc/long\": \"4.2.2\"\n      }\n    },\n    \"@webassemblyjs/helper-wasm-bytecode\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.11.6.tgz\",\n      \"integrity\": \"sha512-sFFHKwcmBprO9e7Icf0+gddyWYDViL8bpPjJJl0WHxCdETktXdmtWLGVzoHbqUcY4Be1LkNfwTmXOJUFZYSJdA==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@webassemblyjs/helper-wasm-section\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.12.1.tgz\",\n      \"integrity\": \"sha512-Jif4vfB6FJlUlSbgEMHUyk1j234GTNG9dBJ4XJdOySoj518Xj0oGsNi59cUQF4RRMS9ouBUxDDdyBVfPTypa5g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-buffer\": \"1.12.1\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\",\n        \"@webassemblyjs/wasm-gen\": \"1.12.1\"\n      }\n    },\n    \"@webassemblyjs/ieee754\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.11.6.tgz\",\n      \"integrity\": \"sha512-LM4p2csPNvbij6U1f19v6WR56QZ8JcHg3QIJTlSwzFcmx6WSORicYj6I63f9yU1kEUtrpG+kjkiIAkevHpDXrg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@xtuc/ieee754\": \"^1.2.0\"\n      }\n    },\n    \"@webassemblyjs/leb128\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.11.6.tgz\",\n      \"integrity\": \"sha512-m7a0FhE67DQXgouf1tbN5XQcdWoNgaAuoULHIfGFIEVKA6tu/edls6XnIlkmS6FrXAquJRPni3ZZKjw6FSPjPQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@xtuc/long\": \"4.2.2\"\n      }\n    },\n    \"@webassemblyjs/utf8\": {\n      \"version\": \"1.11.6\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.11.6.tgz\",\n      \"integrity\": \"sha512-vtXf2wTQ3+up9Zsg8sa2yWiQpzSsMyXj0qViVP6xKGCUT8p8YJ6HqI7l5eCnWx1T/FYdsv07HQs2wTFbbof/RA==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@webassemblyjs/wasm-edit\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.12.1.tgz\",\n      \"integrity\": \"sha512-1DuwbVvADvS5mGnXbE+c9NfA8QRcZ6iKquqjjmR10k6o+zzsRVesil54DKexiowcFCPdr/Q0qaMgB01+SQ1u6g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-buffer\": \"1.12.1\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\",\n        \"@webassemblyjs/helper-wasm-section\": \"1.12.1\",\n        \"@webassemblyjs/wasm-gen\": \"1.12.1\",\n        \"@webassemblyjs/wasm-opt\": \"1.12.1\",\n        \"@webassemblyjs/wasm-parser\": \"1.12.1\",\n        \"@webassemblyjs/wast-printer\": \"1.12.1\"\n      }\n    },\n    \"@webassemblyjs/wasm-gen\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.12.1.tgz\",\n      \"integrity\": \"sha512-TDq4Ojh9fcohAw6OIMXqiIcTq5KUXTGRkVxbSo1hQnSy6lAM5GSdfwWeSxpAo0YzgsgF182E/U0mDNhuA0tW7w==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\",\n        \"@webassemblyjs/ieee754\": \"1.11.6\",\n        \"@webassemblyjs/leb128\": \"1.11.6\",\n        \"@webassemblyjs/utf8\": \"1.11.6\"\n      }\n    },\n    \"@webassemblyjs/wasm-opt\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.12.1.tgz\",\n      \"integrity\": \"sha512-Jg99j/2gG2iaz3hijw857AVYekZe2SAskcqlWIZXjji5WStnOpVoat3gQfT/Q5tb2djnCjBtMocY/Su1GfxPBg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-buffer\": \"1.12.1\",\n        \"@webassemblyjs/wasm-gen\": \"1.12.1\",\n        \"@webassemblyjs/wasm-parser\": \"1.12.1\"\n      }\n    },\n    \"@webassemblyjs/wasm-parser\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.12.1.tgz\",\n      \"integrity\": \"sha512-xikIi7c2FHXysxXe3COrVUPSheuBtpcfhbpFj4gmu7KRLYOzANztwUU0IbsqvMqzuNK2+glRGWCEqZo1WCLyAQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@webassemblyjs/helper-api-error\": \"1.11.6\",\n        \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.6\",\n        \"@webassemblyjs/ieee754\": \"1.11.6\",\n        \"@webassemblyjs/leb128\": \"1.11.6\",\n        \"@webassemblyjs/utf8\": \"1.11.6\"\n      }\n    },\n    \"@webassemblyjs/wast-printer\": {\n      \"version\": \"1.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.12.1.tgz\",\n      \"integrity\": \"sha512-+X4WAlOisVWQMikjbcvY2e0rwPsKQ9F688lksZhBcPycBBuii3O7m8FACbDMWDojpAqvjIncrG8J0XHKyQfVeA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@webassemblyjs/ast\": \"1.12.1\",\n        \"@xtuc/long\": \"4.2.2\"\n      }\n    },\n    \"@xtuc/ieee754\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz\",\n      \"integrity\": \"sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"@xtuc/long\": {\n      \"version\": \"4.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz\",\n      \"integrity\": \"sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"acorn\": {\n      \"version\": \"8.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.12.1.tgz\",\n      \"integrity\": \"sha512-tcpGyI9zbizT9JbV6oYE477V6mTlXvvi0T0G3SNIYE2apm/G5huBa1+K89VGeovbg+jycCrfhl3ADxErOuO6Jg==\"\n    },\n    \"acorn-import-attributes\": {\n      \"version\": \"1.9.5\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-import-attributes/-/acorn-import-attributes-1.9.5.tgz\",\n      \"integrity\": \"sha512-n02Vykv5uA3eHGM/Z2dQrcD56kL8TyDb2p1+0P83PClMnC/nc+anbQRhIOWnSq4Ke/KvDPrY3C9hDtC/A3eHnQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {}\n    },\n    \"aggregate-error\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz\",\n      \"integrity\": \"sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==\",\n      \"requires\": {\n        \"clean-stack\": \"^2.0.0\",\n        \"indent-string\": \"^4.0.0\"\n      }\n    },\n    \"ajv\": {\n      \"version\": \"6.12.6\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      }\n    },\n    \"ajv-formats\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz\",\n      \"integrity\": \"sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"ajv\": \"^8.0.0\"\n      },\n      \"dependencies\": {\n        \"ajv\": {\n          \"version\": \"8.12.0\",\n          \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.12.0.tgz\",\n          \"integrity\": \"sha512-sRu1kpcO9yLtYxBKvqfTeh9KzZEwO3STyX1HT+4CaDzC6HpTGYhIhPIzj9XuKU7KYDwnaeh5hcOwjy1QuJzBPA==\",\n          \"dev\": true,\n          \"peer\": true,\n          \"requires\": {\n            \"fast-deep-equal\": \"^3.1.1\",\n            \"json-schema-traverse\": \"^1.0.0\",\n            \"require-from-string\": \"^2.0.2\",\n            \"uri-js\": \"^4.2.2\"\n          }\n        },\n        \"json-schema-traverse\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n          \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n          \"dev\": true,\n          \"peer\": true\n        }\n      }\n    },\n    \"ajv-keywords\": {\n      \"version\": \"3.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.5.2.tgz\",\n      \"integrity\": \"sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {}\n    },\n    \"ansi-colors\": {\n      \"version\": \"4.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.3.tgz\",\n      \"integrity\": \"sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==\"\n    },\n    \"ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"requires\": {\n        \"type-fest\": \"^0.21.3\"\n      }\n    },\n    \"ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"\n    },\n    \"ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"requires\": {\n        \"color-convert\": \"^2.0.1\"\n      }\n    },\n    \"any-promise\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz\",\n      \"integrity\": \"sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==\"\n    },\n    \"anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"requires\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      }\n    },\n    \"append-transform\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/append-transform/-/append-transform-2.0.0.tgz\",\n      \"integrity\": \"sha512-7yeyCEurROLQJFv5Xj4lEGTy0borxepjFv1g22oAdqFu//SrAlDl1O1Nxx15SH1RoliUml6p8dwJW9jvZughhg==\",\n      \"requires\": {\n        \"default-require-extensions\": \"^3.0.0\"\n      }\n    },\n    \"arch\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/arch/-/arch-2.2.0.tgz\",\n      \"integrity\": \"sha512-Of/R0wqp83cgHozfIYLbBMnej79U/SVGOOyuB3VVFv1NRM/PSFMK12x9KVtiYzJqmnU5WR2qp0Z5rHb7sWGnFQ==\"\n    },\n    \"archy\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/archy/-/archy-1.0.0.tgz\",\n      \"integrity\": \"sha512-Xg+9RwCg/0p32teKdGMPTPnVXKD0w3DfHnFTficozsAgsvq2XenPJq/MYpzzQ/v8zrOyJn6Ds39VA4JIDwFfqw==\"\n    },\n    \"arg\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/arg/-/arg-5.0.2.tgz\",\n      \"integrity\": \"sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==\"\n    },\n    \"argparse\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n      \"requires\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"array-union\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n      \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n      \"dev\": true\n    },\n    \"asn1\": {\n      \"version\": \"0.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz\",\n      \"integrity\": \"sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==\",\n      \"requires\": {\n        \"safer-buffer\": \"~2.1.0\"\n      }\n    },\n    \"assert-plus\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",\n      \"integrity\": \"sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==\"\n    },\n    \"astral-regex\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/astral-regex/-/astral-regex-2.0.0.tgz\",\n      \"integrity\": \"sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==\"\n    },\n    \"async\": {\n      \"version\": \"3.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/async/-/async-3.2.4.tgz\",\n      \"integrity\": \"sha512-iAB+JbDEGXhyIUavoDl9WP/Jj106Kz9DEn1DPgYw5ruDn0e3Wgi3sKFm55sASdGBNOQB8F59d9qQ7deqrHA8wQ==\"\n    },\n    \"asynckit\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n      \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\"\n    },\n    \"at-least-node\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/at-least-node/-/at-least-node-1.0.0.tgz\",\n      \"integrity\": \"sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==\"\n    },\n    \"automation-events\": {\n      \"version\": \"6.0.13\",\n      \"resolved\": \"https://registry.npmjs.org/automation-events/-/automation-events-6.0.13.tgz\",\n      \"integrity\": \"sha512-V1D19taPDEB7LUph6FpJv9m2i+UpLR096sAbPKt92sRChCOA6Jt2bcofU/YAwG8F8/qZp3GrrscJ1FzaEHd68w==\",\n      \"requires\": {\n        \"@babel/runtime\": \"^7.23.5\",\n        \"tslib\": \"^2.6.2\"\n      }\n    },\n    \"autoprefixer\": {\n      \"version\": \"10.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.2.tgz\",\n      \"integrity\": \"sha512-9fOPpHKuDW1w/0EKfRmVnxTDt8166MAnLI3mgZ1JCnhNtYWxcJ6Ud5CO/AVOZi/AvFa8DY9RTy3h3+tFBlrrdQ==\",\n      \"requires\": {\n        \"browserslist\": \"^4.19.1\",\n        \"caniuse-lite\": \"^1.0.30001297\",\n        \"fraction.js\": \"^4.1.2\",\n        \"normalize-range\": \"^0.1.2\",\n        \"picocolors\": \"^1.0.0\",\n        \"postcss-value-parser\": \"^4.2.0\"\n      }\n    },\n    \"aws-sign2\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz\",\n      \"integrity\": \"sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA==\"\n    },\n    \"aws4\": {\n      \"version\": \"1.13.2\",\n      \"resolved\": \"https://registry.npmjs.org/aws4/-/aws4-1.13.2.tgz\",\n      \"integrity\": \"sha512-lHe62zvbTB5eEABUVi/AwVh0ZKY9rMMDhmm+eeyuuUQbQ3+J+fONVQOZyj+DdrvD4BY33uYniyRJ4UJIaSKAfw==\"\n    },\n    \"babel-loader\": {\n      \"version\": \"9.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/babel-loader/-/babel-loader-9.1.2.tgz\",\n      \"integrity\": \"sha512-mN14niXW43tddohGl8HPu5yfQq70iUThvFL/4QzESA7GcZoC0eVOhvWdQ8+3UlSjaDE9MVtsW9mxDY07W7VpVA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"find-cache-dir\": \"^3.3.2\",\n        \"schema-utils\": \"^4.0.0\"\n      }\n    },\n    \"babel-plugin-polyfill-corejs2\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.3.3.tgz\",\n      \"integrity\": \"sha512-8hOdmFYFSZhqg2C/JgLUQ+t52o5nirNwaWM2B9LWteozwIvM14VSwdsCAUET10qT+kmySAlseadmfeeSWFCy+Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/compat-data\": \"^7.17.7\",\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\",\n        \"semver\": \"^6.1.1\"\n      }\n    },\n    \"babel-plugin-polyfill-corejs3\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.6.0.tgz\",\n      \"integrity\": \"sha512-+eHqR6OPcBhJOGgsIar7xoAB1GcSwVUA3XjAd7HJNzOXT4wv6/H7KIdA/Nc60cvUlDbKApmqNvD1B1bzOt4nyA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\",\n        \"core-js-compat\": \"^3.25.1\"\n      }\n    },\n    \"babel-plugin-polyfill-regenerator\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.4.1.tgz\",\n      \"integrity\": \"sha512-NtQGmyQDXjQqQ+IzRkBVwEOz9lQ4zxAQZgoAYEtU9dJjnl1Oc98qnN7jcp+bE7O7aYzVpavXE3/VKXNzUbh7aw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\"\n      }\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"\n    },\n    \"base64-js\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\",\n      \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\"\n    },\n    \"bcrypt-pbkdf\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz\",\n      \"integrity\": \"sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==\",\n      \"requires\": {\n        \"tweetnacl\": \"^0.14.3\"\n      }\n    },\n    \"binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\"\n    },\n    \"blob-util\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/blob-util/-/blob-util-2.0.2.tgz\",\n      \"integrity\": \"sha512-T7JQa+zsXXEa6/8ZhHcQEW1UFfVM49Ts65uBkFL6fz2QmrElqmbajIDJvuA0tEhRe5eIjpV9ZF+0RfZR9voJFQ==\"\n    },\n    \"bluebird\": {\n      \"version\": \"3.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz\",\n      \"integrity\": \"sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==\"\n    },\n    \"blurhash\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/blurhash/-/blurhash-2.0.5.tgz\",\n      \"integrity\": \"sha512-cRygWd7kGBQO3VEhPiTgq4Wc43ctsM+o46urrmPOiuAe+07fzlSB9OJVdpgDL0jPqXUVQ9ht7aq7kxOeJHRK+w==\"\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"requires\": {\n        \"fill-range\": \"^7.1.1\"\n      }\n    },\n    \"browserslist\": {\n      \"version\": \"4.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.23.3.tgz\",\n      \"integrity\": \"sha512-btwCFJVjI4YWDNfau8RhZ+B1Q/VLoUITrm3RlP6y1tYGWIOa+InuYiRGXUBXo8nA1qKmHMyLB/iVQg5TT4eFoA==\",\n      \"requires\": {\n        \"caniuse-lite\": \"^1.0.30001646\",\n        \"electron-to-chromium\": \"^1.5.4\",\n        \"node-releases\": \"^2.0.18\",\n        \"update-browserslist-db\": \"^1.1.0\"\n      }\n    },\n    \"buffer\": {\n      \"version\": \"5.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz\",\n      \"integrity\": \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\",\n      \"requires\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.1.13\"\n      }\n    },\n    \"buffer-crc32\": {\n      \"version\": \"0.2.13\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz\",\n      \"integrity\": \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\"\n    },\n    \"buffer-from\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz\",\n      \"integrity\": \"sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==\"\n    },\n    \"cachedir\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/cachedir/-/cachedir-2.3.0.tgz\",\n      \"integrity\": \"sha512-A+Fezp4zxnit6FanDmv9EqXNAi3vt9DWp51/71UEhXukb7QUuvtv9344h91dyAxuTLoSYJFU299qzR3tzwPAhw==\"\n    },\n    \"caching-transform\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/caching-transform/-/caching-transform-4.0.0.tgz\",\n      \"integrity\": \"sha512-kpqOvwXnjjN44D89K5ccQC+RUrsy7jB/XLlRrx0D7/2HNcTPqzsb6XgYoErwko6QsV184CA2YgS1fxDiiDZMWA==\",\n      \"requires\": {\n        \"hasha\": \"^5.0.0\",\n        \"make-dir\": \"^3.0.0\",\n        \"package-hash\": \"^4.0.0\",\n        \"write-file-atomic\": \"^3.0.0\"\n      }\n    },\n    \"call-bind-apply-helpers\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz\",\n      \"integrity\": \"sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==\",\n      \"requires\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\"\n      }\n    },\n    \"call-bound\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.3.tgz\",\n      \"integrity\": \"sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==\",\n      \"requires\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"get-intrinsic\": \"^1.2.6\"\n      }\n    },\n    \"camel-case\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/camel-case/-/camel-case-4.1.2.tgz\",\n      \"integrity\": \"sha512-gxGWBrTT1JuMx6R+o5PTXMmUnhnVzLQ9SNutD4YqKtI6ap897t3tKECYla6gCWEkplXnlNybEkZg9GEGxKFCgw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"pascal-case\": \"^3.1.2\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"camelcase\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\n      \"integrity\": \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\"\n    },\n    \"camelcase-css\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz\",\n      \"integrity\": \"sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==\"\n    },\n    \"caniuse-lite\": {\n      \"version\": \"1.0.30001655\",\n      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001655.tgz\",\n      \"integrity\": \"sha512-jRGVy3iSGO5Uutn2owlb5gR6qsGngTw9ZTb4ali9f3glshcNmJ2noam4Mo9zia5P9Dk3jNNydy7vQjuE5dQmfg==\"\n    },\n    \"caseless\": {\n      \"version\": \"0.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz\",\n      \"integrity\": \"sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw==\"\n    },\n    \"chai-colors\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/chai-colors/-/chai-colors-1.0.1.tgz\",\n      \"integrity\": \"sha512-dHfkpLWbYx8jHxruZJWBO/TAh/kx6nK4FQ99bTGOxxChkGbq4x/1oOCbkoNo3CkyVZf5etG8qeaLaoAeCvC/mA==\",\n      \"requires\": {\n        \"onecolor\": \"~2.4.2\"\n      }\n    },\n    \"chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"requires\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      }\n    },\n    \"chart.js\": {\n      \"version\": \"4.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/chart.js/-/chart.js-4.4.3.tgz\",\n      \"integrity\": \"sha512-qK1gkGSRYcJzqrrzdR6a+I0vQ4/R+SoODXyAjscQ/4mzuNzySaMCd+hyVxitSY1+L2fjPD1Gbn+ibNqRmwQeLw==\",\n      \"requires\": {\n        \"@kurkle/color\": \"^0.3.0\"\n      }\n    },\n    \"chartjs-plugin-datalabels\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/chartjs-plugin-datalabels/-/chartjs-plugin-datalabels-2.2.0.tgz\",\n      \"integrity\": \"sha512-14ZU30lH7n89oq+A4bWaJPnAG8a7ZTk7dKf48YAzMvJjQtjrgg5Dpk9f+LbjCF6bpx3RAGTeL13IXpKQYyRvlw==\",\n      \"requires\": {}\n    },\n    \"check-more-types\": {\n      \"version\": \"2.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/check-more-types/-/check-more-types-2.24.0.tgz\",\n      \"integrity\": \"sha512-Pj779qHxV2tuapviy1bSZNEL1maXr13bPYpsvSDB68HlYcYuhlDrmGd63i0JHMCLKzc7rUSNIrpdJlhVlNwrxA==\"\n    },\n    \"chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"requires\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"fsevents\": \"~2.3.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"dependencies\": {\n        \"glob-parent\": {\n          \"version\": \"5.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n          \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n          \"requires\": {\n            \"is-glob\": \"^4.0.1\"\n          }\n        }\n      }\n    },\n    \"chrome-trace-event\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.3.tgz\",\n      \"integrity\": \"sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"ci-info\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-4.1.0.tgz\",\n      \"integrity\": \"sha512-HutrvTNsF48wnxkzERIXOe5/mlcfFcbfCmwcg6CJnizbSue78AbDt+1cgl26zwn61WFxhcPykPfZrbqjGmBb4A==\"\n    },\n    \"ckeditor5\": {\n      \"version\": \"43.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ckeditor5/-/ckeditor5-43.1.1.tgz\",\n      \"integrity\": \"sha512-/nVXYI81XT1xzE1SKrmgF5qViHYqf3hC+BhizC8r1RZ82SB28G9gRmahYSt2pMkpI6w165OwXCdWEoIVAtiYRg==\",\n      \"requires\": {\n        \"@ckeditor/ckeditor5-adapter-ckfinder\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-alignment\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-autoformat\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-autosave\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-basic-styles\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-block-quote\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ckbox\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ckfinder\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-clipboard\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-cloud-services\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-code-block\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-core\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-easy-image\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-balloon\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-classic\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-decoupled\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-inline\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-editor-multi-root\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-engine\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-enter\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-essentials\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-find-and-replace\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-font\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-heading\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-highlight\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-horizontal-line\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-html-embed\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-html-support\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-image\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-indent\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-language\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-link\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-list\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-markdown-gfm\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-media-embed\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-mention\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-minimap\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-page-break\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paragraph\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-paste-from-office\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-remove-format\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-restricted-editing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-select-all\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-show-blocks\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-source-editing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-special-characters\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-style\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-table\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-theme-lark\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-typing\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-ui\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-undo\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-upload\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-utils\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-watchdog\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-widget\": \"43.1.1\",\n        \"@ckeditor/ckeditor5-word-count\": \"43.1.1\"\n      }\n    },\n    \"clean-css\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/clean-css/-/clean-css-5.3.2.tgz\",\n      \"integrity\": \"sha512-JVJbM+f3d3Q704rF4bqQ5UUyTtuJ0JRKNbTKVEeujCCBoMdkEi+V+e8oktO9qGQNSvHrFTM6JZRXrUvGR1czww==\",\n      \"dev\": true,\n      \"requires\": {\n        \"source-map\": \"~0.6.0\"\n      }\n    },\n    \"clean-stack\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz\",\n      \"integrity\": \"sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==\"\n    },\n    \"cli-cursor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz\",\n      \"integrity\": \"sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==\",\n      \"requires\": {\n        \"restore-cursor\": \"^3.1.0\"\n      }\n    },\n    \"cli-table3\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/cli-table3/-/cli-table3-0.6.3.tgz\",\n      \"integrity\": \"sha512-w5Jac5SykAeZJKntOxJCrm63Eg5/4dhMWIcuTbo9rpE+brgaSZo0RuNJZeOyMgsUdhDeojvgyQLmjI+K50ZGyg==\",\n      \"requires\": {\n        \"@colors/colors\": \"1.5.0\",\n        \"string-width\": \"^4.2.0\"\n      }\n    },\n    \"cli-truncate\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-truncate/-/cli-truncate-2.1.0.tgz\",\n      \"integrity\": \"sha512-n8fOixwDD6b/ObinzTrp1ZKFzbgvKZvuz/TvejnLn1aQfC6r52XEx85FmuC+3HI+JM7coBRXUvNqEU2PHVrHpg==\",\n      \"requires\": {\n        \"slice-ansi\": \"^3.0.0\",\n        \"string-width\": \"^4.2.0\"\n      }\n    },\n    \"cliui\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz\",\n      \"integrity\": \"sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==\",\n      \"requires\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^6.2.0\"\n      },\n      \"dependencies\": {\n        \"wrap-ansi\": {\n          \"version\": \"6.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz\",\n          \"integrity\": \"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==\",\n          \"requires\": {\n            \"ansi-styles\": \"^4.0.0\",\n            \"string-width\": \"^4.1.0\",\n            \"strip-ansi\": \"^6.0.0\"\n          }\n        }\n      }\n    },\n    \"codemirror\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/codemirror/-/codemirror-6.0.1.tgz\",\n      \"integrity\": \"sha512-J8j+nZ+CdWmIeFIGXEFbFPtpiYacFMDR8GlHK3IyHQJMCaVRfGx9NT+Hxivv1ckLWPvNdZqndbr/7lVhrf/Svg==\",\n      \"requires\": {\n        \"@codemirror/autocomplete\": \"^6.0.0\",\n        \"@codemirror/commands\": \"^6.0.0\",\n        \"@codemirror/language\": \"^6.0.0\",\n        \"@codemirror/lint\": \"^6.0.0\",\n        \"@codemirror/search\": \"^6.0.0\",\n        \"@codemirror/state\": \"^6.0.0\",\n        \"@codemirror/view\": \"^6.0.0\"\n      }\n    },\n    \"color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"requires\": {\n        \"color-name\": \"~1.1.4\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\"\n    },\n    \"color-parse\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/color-parse/-/color-parse-1.4.2.tgz\",\n      \"integrity\": \"sha512-RI7s49/8yqDj3fECFZjUI1Yi0z/Gq1py43oNJivAIIDSyJiOZLfYCRQEgn8HEVAj++PcRe8AnL2XF0fRJ3BTnA==\",\n      \"requires\": {\n        \"color-name\": \"^1.0.0\"\n      }\n    },\n    \"colorette\": {\n      \"version\": \"2.0.19\",\n      \"resolved\": \"https://registry.npmjs.org/colorette/-/colorette-2.0.19.tgz\",\n      \"integrity\": \"sha512-3tlv/dIP7FWvj3BsbHrGLJ6l/oKh1O3TcgBqMn+yyCagOxc23fyzDS6HypQbgxWbkpDnf52p1LuR4eWDQ/K9WQ==\"\n    },\n    \"combined-stream\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n      \"requires\": {\n        \"delayed-stream\": \"~1.0.0\"\n      }\n    },\n    \"commander\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-6.2.1.tgz\",\n      \"integrity\": \"sha512-U7VdrJFnJgo4xjrHpTzu0yrHPGImdsmD95ZlgYSEajAn2JKzDhDTPG9kBTefmObL2w/ngeZnilk+OV9CG3d7UA==\"\n    },\n    \"common-tags\": {\n      \"version\": \"1.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/common-tags/-/common-tags-1.8.2.tgz\",\n      \"integrity\": \"sha512-gk/Z852D2Wtb//0I+kRFNKKE9dIIVirjoqPoA1wJU+XePVXZfGeBpk45+A1rKO4Q43prqWBNY/MiIeRLbPWUaA==\"\n    },\n    \"commondir\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\n      \"integrity\": \"sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==\"\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\"\n    },\n    \"convert-source-map\": {\n      \"version\": \"1.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz\",\n      \"integrity\": \"sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A==\"\n    },\n    \"core-js-compat\": {\n      \"version\": \"3.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.28.0.tgz\",\n      \"integrity\": \"sha512-myzPgE7QodMg4nnd3K1TDoES/nADRStM8Gpz0D6nhkwbmwEnE0ZGJgoWsvQ722FR8D7xS0n0LV556RcEicjTyg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"browserslist\": \"^4.21.5\"\n      }\n    },\n    \"core-util-is\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz\",\n      \"integrity\": \"sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ==\"\n    },\n    \"create-require\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz\",\n      \"integrity\": \"sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==\"\n    },\n    \"crelt\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/crelt/-/crelt-1.0.6.tgz\",\n      \"integrity\": \"sha512-VQ2MBenTq1fWZUH9DJNGti7kKv6EeAuYr3cLwxUWhIu1baTaXh4Ib5W2CqHVqib4/MqbYGJqiL3Zb8GJZr3l4g==\"\n    },\n    \"cross-spawn\": {\n      \"version\": \"7.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n      \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n      \"requires\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      }\n    },\n    \"css-b64-images\": {\n      \"version\": \"0.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/css-b64-images/-/css-b64-images-0.2.5.tgz\",\n      \"integrity\": \"sha1-QgBdgyBLK0pdk7axpWRBM7WSegI=\",\n      \"dev\": true\n    },\n    \"cssesc\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz\",\n      \"integrity\": \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\"\n    },\n    \"custom-event-polyfill\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/custom-event-polyfill/-/custom-event-polyfill-1.0.7.tgz\",\n      \"integrity\": \"sha512-TDDkd5DkaZxZFM8p+1I3yAlvM3rSr1wbrOliG4yJiwinMZN8z/iGL7BTlDkrJcYTmgUSb4ywVCc3ZaUtOtC76w==\"\n    },\n    \"cypress\": {\n      \"version\": \"13.17.0\",\n      \"resolved\": \"https://registry.npmjs.org/cypress/-/cypress-13.17.0.tgz\",\n      \"integrity\": \"sha512-5xWkaPurwkIljojFidhw8lFScyxhtiFHl/i/3zov+1Z5CmY4t9tjIdvSXfu82Y3w7wt0uR9KkucbhkVvJZLQSA==\",\n      \"requires\": {\n        \"@cypress/request\": \"^3.0.6\",\n        \"@cypress/xvfb\": \"^1.2.4\",\n        \"@types/sinonjs__fake-timers\": \"8.1.1\",\n        \"@types/sizzle\": \"^2.3.2\",\n        \"arch\": \"^2.2.0\",\n        \"blob-util\": \"^2.0.2\",\n        \"bluebird\": \"^3.7.2\",\n        \"buffer\": \"^5.7.1\",\n        \"cachedir\": \"^2.3.0\",\n        \"chalk\": \"^4.1.0\",\n        \"check-more-types\": \"^2.24.0\",\n        \"ci-info\": \"^4.0.0\",\n        \"cli-cursor\": \"^3.1.0\",\n        \"cli-table3\": \"~0.6.1\",\n        \"commander\": \"^6.2.1\",\n        \"common-tags\": \"^1.8.0\",\n        \"dayjs\": \"^1.10.4\",\n        \"debug\": \"^4.3.4\",\n        \"enquirer\": \"^2.3.6\",\n        \"eventemitter2\": \"6.4.7\",\n        \"execa\": \"4.1.0\",\n        \"executable\": \"^4.1.1\",\n        \"extract-zip\": \"2.0.1\",\n        \"figures\": \"^3.2.0\",\n        \"fs-extra\": \"^9.1.0\",\n        \"getos\": \"^3.2.1\",\n        \"is-installed-globally\": \"~0.4.0\",\n        \"lazy-ass\": \"^1.6.0\",\n        \"listr2\": \"^3.8.3\",\n        \"lodash\": \"^4.17.21\",\n        \"log-symbols\": \"^4.0.0\",\n        \"minimist\": \"^1.2.8\",\n        \"ospath\": \"^1.2.2\",\n        \"pretty-bytes\": \"^5.6.0\",\n        \"process\": \"^0.11.10\",\n        \"proxy-from-env\": \"1.0.0\",\n        \"request-progress\": \"^3.0.0\",\n        \"semver\": \"^7.5.3\",\n        \"supports-color\": \"^8.1.1\",\n        \"tmp\": \"~0.2.3\",\n        \"tree-kill\": \"1.2.2\",\n        \"untildify\": \"^4.0.0\",\n        \"yauzl\": \"^2.10.0\"\n      },\n      \"dependencies\": {\n        \"semver\": {\n          \"version\": \"7.5.4\",\n          \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.5.4.tgz\",\n          \"integrity\": \"sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==\",\n          \"requires\": {\n            \"lru-cache\": \"^6.0.0\"\n          }\n        },\n        \"supports-color\": {\n          \"version\": \"8.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n          \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"cypress-real-events\": {\n      \"version\": \"1.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/cypress-real-events/-/cypress-real-events-1.12.0.tgz\",\n      \"integrity\": \"sha512-oiy+4kGKkzc2PT36k3GGQqkGxNiVypheWjMtfyi89iIk6bYmTzeqxapaLHS3pnhZOX1IEbTDUVxh8T4Nhs1tyQ==\",\n      \"requires\": {}\n    },\n    \"dashdash\": {\n      \"version\": \"1.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz\",\n      \"integrity\": \"sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==\",\n      \"requires\": {\n        \"assert-plus\": \"^1.0.0\"\n      }\n    },\n    \"dayjs\": {\n      \"version\": \"1.10.7\",\n      \"resolved\": \"https://registry.npmjs.org/dayjs/-/dayjs-1.10.7.tgz\",\n      \"integrity\": \"sha512-P6twpd70BcPK34K26uJ1KT3wlhpuOAPoMwJzpsIWUxHZ7wpmbdZL/hQqBDfz7hGurYSa5PhzdhDHtt319hL3ig==\"\n    },\n    \"debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"requires\": {\n        \"ms\": \"2.1.2\"\n      }\n    },\n    \"decamelize\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",\n      \"integrity\": \"sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==\"\n    },\n    \"deepmerge\": {\n      \"version\": \"4.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n      \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\"\n    },\n    \"default-require-extensions\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/default-require-extensions/-/default-require-extensions-3.0.1.tgz\",\n      \"integrity\": \"sha512-eXTJmRbm2TIt9MgWTsOH1wEuhew6XGZcMeGKCtLedIg/NCsg1iBePXkceTdK4Fii7pzmN9tGsZhKzZ4h7O/fxw==\",\n      \"requires\": {\n        \"strip-bom\": \"^4.0.0\"\n      }\n    },\n    \"delayed-stream\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n      \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\"\n    },\n    \"detect-autofill\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/detect-autofill/-/detect-autofill-1.1.4.tgz\",\n      \"integrity\": \"sha512-utCBQwCR/beSnADQmBC7C4tTueBBkYCl6WSpfGUkYKO/+MzPxqYGj6G4MvHzcKmH1gCTK+VunX2vaagvkRXPvA==\",\n      \"requires\": {\n        \"custom-event-polyfill\": \"^1.0.7\"\n      }\n    },\n    \"didyoumean\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz\",\n      \"integrity\": \"sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==\"\n    },\n    \"diff\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-4.0.2.tgz\",\n      \"integrity\": \"sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==\"\n    },\n    \"dir-glob\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n      \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"path-type\": \"^4.0.0\"\n      }\n    },\n    \"dlv\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz\",\n      \"integrity\": \"sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==\"\n    },\n    \"dompurify\": {\n      \"version\": \"2.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/dompurify/-/dompurify-2.5.4.tgz\",\n      \"integrity\": \"sha512-l5NNozANzaLPPe0XaAwvg3uZcHtDBnziX/HjsY1UcDj1MxTK8Dd0Kv096jyPK5HRzs/XM5IMj20dW8Fk+HnbUA==\"\n    },\n    \"dot-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/dot-case/-/dot-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-Kv5nKlh6yRrdrGvxeJ2e5y2eRUpkUosIW4A2AS38zwSz27zu7ufDwQPi5Jhs3XAlGNetl3bmnGhQsMtkKJnj3w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"no-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"dunder-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n      \"requires\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.2.0\"\n      }\n    },\n    \"ecc-jsbn\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz\",\n      \"integrity\": \"sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==\",\n      \"requires\": {\n        \"jsbn\": \"~0.1.0\",\n        \"safer-buffer\": \"^2.1.0\"\n      }\n    },\n    \"electron-to-chromium\": {\n      \"version\": \"1.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.13.tgz\",\n      \"integrity\": \"sha512-lbBcvtIJ4J6sS4tb5TLp1b4LyfCdMkwStzXPyAgVgTRAsep4bvrAGaBOP7ZJtQMNJpSQ9SqG4brWOroNaQtm7Q==\"\n    },\n    \"emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"\n    },\n    \"end-of-stream\": {\n      \"version\": \"1.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz\",\n      \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\",\n      \"requires\": {\n        \"once\": \"^1.4.0\"\n      }\n    },\n    \"enhanced-resolve\": {\n      \"version\": \"5.17.1\",\n      \"resolved\": \"https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.17.1.tgz\",\n      \"integrity\": \"sha512-LMHl3dXhTcfv8gM4kEzIUeTQ+7fpdA0l2tUf34BddXPkz2A5xJ5L/Pchd5BL6rdccM9QGvu0sWZzK1Z1t4wwyg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"graceful-fs\": \"^4.2.4\",\n        \"tapable\": \"^2.2.0\"\n      }\n    },\n    \"enquirer\": {\n      \"version\": \"2.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/enquirer/-/enquirer-2.3.6.tgz\",\n      \"integrity\": \"sha512-yjNnPr315/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ/odMA7cRkjhsPbltwBOrLg==\",\n      \"requires\": {\n        \"ansi-colors\": \"^4.1.1\"\n      }\n    },\n    \"es-define-property\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\"\n    },\n    \"es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\"\n    },\n    \"es-module-lexer\": {\n      \"version\": \"1.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.5.4.tgz\",\n      \"integrity\": \"sha512-MVNK56NiMrOwitFB7cqDwq0CQutbw+0BvLshJSse0MUNU+y1FC3bUS/AQg7oUng+/wKrrki7JfmwtVHkVfPLlw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"es-object-atoms\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz\",\n      \"integrity\": \"sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==\",\n      \"requires\": {\n        \"es-errors\": \"^1.3.0\"\n      }\n    },\n    \"es6-error\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es6-error/-/es6-error-4.1.1.tgz\",\n      \"integrity\": \"sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==\"\n    },\n    \"esbuild\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.13.15.tgz\",\n      \"integrity\": \"sha512-raCxt02HBKv8RJxE8vkTSCXGIyKHdEdGfUmiYb8wnabnaEmHzyW7DCHb5tEN0xU8ryqg5xw54mcwnYkC4x3AIw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"esbuild-android-arm64\": \"0.13.15\",\n        \"esbuild-darwin-64\": \"0.13.15\",\n        \"esbuild-darwin-arm64\": \"0.13.15\",\n        \"esbuild-freebsd-64\": \"0.13.15\",\n        \"esbuild-freebsd-arm64\": \"0.13.15\",\n        \"esbuild-linux-32\": \"0.13.15\",\n        \"esbuild-linux-64\": \"0.13.15\",\n        \"esbuild-linux-arm\": \"0.13.15\",\n        \"esbuild-linux-arm64\": \"0.13.15\",\n        \"esbuild-linux-mips64le\": \"0.13.15\",\n        \"esbuild-linux-ppc64le\": \"0.13.15\",\n        \"esbuild-netbsd-64\": \"0.13.15\",\n        \"esbuild-openbsd-64\": \"0.13.15\",\n        \"esbuild-sunos-64\": \"0.13.15\",\n        \"esbuild-windows-32\": \"0.13.15\",\n        \"esbuild-windows-64\": \"0.13.15\",\n        \"esbuild-windows-arm64\": \"0.13.15\"\n      }\n    },\n    \"esbuild-android-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-m602nft/XXeO8YQPUDVoHfjyRVPdPgjyyXOxZ44MK/agewFFkPa8tUo6lAzSWh5Ui5PB4KR9UIFTSBKh/RrCmg==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-darwin-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-ihOQRGs2yyp7t5bArCwnvn2Atr6X4axqPpEdCFPVp7iUj4cVSdisgvEKdNR7yH3JDjW6aQDw40iQFoTqejqxvQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-darwin-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-i1FZssTVxUqNlJ6cBTj5YQj4imWy3m49RZRnHhLpefFIh0To05ow9DTrXROTE1urGTQCloFUXTX8QfGJy1P8dQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-freebsd-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-G3dLBXUI6lC6Z09/x+WtXBXbOYQZ0E8TDBqvn7aMaOCzryJs8LyVXKY4CPnHFXZAbSwkCbqiPuSQ1+HhrNk7EA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-freebsd-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-KJx0fzEDf1uhNOZQStV4ujg30WlnwqUASaGSFPhznLM/bbheu9HhqZ6mJJZM32lkyfGJikw0jg7v3S0oAvtvQQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-32\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.13.15.tgz\",\n      \"integrity\": \"sha512-ZvTBPk0YWCLMCXiFmD5EUtB30zIPvC5Itxz0mdTu/xZBbbHJftQgLWY49wEPSn2T/TxahYCRDWun5smRa0Tu+g==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-eCKzkNSLywNeQTRBxJRQ0jxRCl2YWdMB3+PkWFo2BBQYC5mISLIVIjThNtn6HUNqua1pnvgP5xX0nHbZbPj5oA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-arm\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.13.15.tgz\",\n      \"integrity\": \"sha512-wUHttDi/ol0tD8ZgUMDH8Ef7IbDX+/UsWJOXaAyTdkT7Yy9ZBqPg8bgB/Dn3CZ9SBpNieozrPRHm0BGww7W/jA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-bYpuUlN6qYU9slzr/ltyLTR9YTBS7qUDymO8SV7kjeNext61OdmqFAzuVZom+OLW1HPHseBfJ/JfdSlx8oTUoA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-mips64le\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.13.15.tgz\",\n      \"integrity\": \"sha512-KlVjIG828uFPyJkO/8gKwy9RbXhCEUeFsCGOJBepUlpa7G8/SeZgncUEz/tOOUJTcWMTmFMtdd3GElGyAtbSWg==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-ppc64le\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.13.15.tgz\",\n      \"integrity\": \"sha512-h6gYF+OsaqEuBjeesTBtUPw0bmiDu7eAeuc2OEH9S6mV9/jPhPdhOWzdeshb0BskRZxPhxPOjqZ+/OqLcxQwEQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-netbsd-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-3+yE9emwoevLMyvu+iR3rsa+Xwhie7ZEHMGDQ6dkqP/ndFzRHkobHUKTe+NCApSqG5ce2z4rFu+NX/UHnxlh3w==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-openbsd-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-wTfvtwYJYAFL1fSs8yHIdf5GEE4NkbtbXtjLWjM3Cw8mmQKqsg8kTiqJ9NJQe5NX/5Qlo7Xd9r1yKMMkHllp5g==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-sunos-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-lbivT9Bx3t1iWWrSnGyBP9ODriEvWDRiweAs69vI+miJoeKwHWOComSRukttbuzjZ8r1q0mQJ8Z7yUsDJ3hKdw==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-windows-32\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.13.15.tgz\",\n      \"integrity\": \"sha512-fDMEf2g3SsJ599MBr50cY5ve5lP1wyVwTe6aLJsM01KtxyKkB4UT+fc5MXQFn3RLrAIAZOG+tHC+yXObpSn7Nw==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-windows-64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.13.15.tgz\",\n      \"integrity\": \"sha512-9aMsPRGDWCd3bGjUIKG/ZOJPKsiztlxl/Q3C1XDswO6eNX/Jtwu4M+jb6YDH9hRSUflQWX0XKAfWzgy5Wk54JQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-windows-arm64\": {\n      \"version\": \"0.13.15\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.13.15.tgz\",\n      \"integrity\": \"sha512-zzvyCVVpbwQQATaf3IG8mu1IwGEiDxKkYUdA4FpoCHi1KtPa13jeScYDjlW0Qh+ebWzpKfR2ZwvqAQkSWNcKjA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"escalade\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz\",\n      \"integrity\": \"sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==\"\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\"\n    },\n    \"eslint-scope\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n      \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^4.1.1\"\n      }\n    },\n    \"esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\"\n    },\n    \"esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"dependencies\": {\n        \"estraverse\": {\n          \"version\": \"5.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n          \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n          \"dev\": true,\n          \"peer\": true\n        }\n      }\n    },\n    \"estraverse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n      \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"eventemitter2\": {\n      \"version\": \"6.4.7\",\n      \"resolved\": \"https://registry.npmjs.org/eventemitter2/-/eventemitter2-6.4.7.tgz\",\n      \"integrity\": \"sha512-tYUSVOGeQPKt/eC1ABfhHy5Xd96N3oIijJvN3O9+TsC28T5V9yX9oEfEK5faP0EFSNVOG97qtAS68GBrQB2hDg==\"\n    },\n    \"events\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/events/-/events-3.3.0.tgz\",\n      \"integrity\": \"sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"execa\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-4.1.0.tgz\",\n      \"integrity\": \"sha512-j5W0//W7f8UxAn8hXVnwG8tLwdiUy4FJLcSupCg6maBYZDpyBvTApK7KyuI4bKj8KOh1r2YH+6ucuYtJv1bTZA==\",\n      \"requires\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"get-stream\": \"^5.0.0\",\n        \"human-signals\": \"^1.1.1\",\n        \"is-stream\": \"^2.0.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"npm-run-path\": \"^4.0.0\",\n        \"onetime\": \"^5.1.0\",\n        \"signal-exit\": \"^3.0.2\",\n        \"strip-final-newline\": \"^2.0.0\"\n      }\n    },\n    \"executable\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/executable/-/executable-4.1.1.tgz\",\n      \"integrity\": \"sha512-8iA79xD3uAch729dUG8xaaBBFGaEa0wdD2VkYLFHwlqosEj/jT66AzcreRDSgV7ehnNLBW2WR5jIXwGKjVdTLg==\",\n      \"requires\": {\n        \"pify\": \"^2.2.0\"\n      }\n    },\n    \"extend\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.2.tgz\",\n      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\"\n    },\n    \"extract-zip\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz\",\n      \"integrity\": \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\",\n      \"requires\": {\n        \"@types/yauzl\": \"^2.9.1\",\n        \"debug\": \"^4.1.1\",\n        \"get-stream\": \"^5.1.0\",\n        \"yauzl\": \"^2.10.0\"\n      }\n    },\n    \"extsprintf\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz\",\n      \"integrity\": \"sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g==\"\n    },\n    \"fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"fast-glob\": {\n      \"version\": \"3.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz\",\n      \"integrity\": \"sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==\",\n      \"requires\": {\n        \"@nodelib/fs.stat\": \"^2.0.2\",\n        \"@nodelib/fs.walk\": \"^1.2.3\",\n        \"glob-parent\": \"^5.1.2\",\n        \"merge2\": \"^1.3.0\",\n        \"micromatch\": \"^4.0.4\"\n      },\n      \"dependencies\": {\n        \"glob-parent\": {\n          \"version\": \"5.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n          \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n          \"requires\": {\n            \"is-glob\": \"^4.0.1\"\n          }\n        }\n      }\n    },\n    \"fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"fastq\": {\n      \"version\": \"1.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz\",\n      \"integrity\": \"sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==\",\n      \"requires\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"fd-slicer\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz\",\n      \"integrity\": \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\",\n      \"requires\": {\n        \"pend\": \"~1.2.0\"\n      }\n    },\n    \"figures\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-3.2.0.tgz\",\n      \"integrity\": \"sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==\",\n      \"requires\": {\n        \"escape-string-regexp\": \"^1.0.5\"\n      }\n    },\n    \"fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"requires\": {\n        \"to-regex-range\": \"^5.0.1\"\n      }\n    },\n    \"find-cache-dir\": {\n      \"version\": \"3.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.2.tgz\",\n      \"integrity\": \"sha512-wXZV5emFEjrridIgED11OoUKLxiYjAcqot/NJdAkOhlJ+vGzwhOAfcG5OX1jP+S0PcjEn8bdMJv+g2jwQ3Onig==\",\n      \"requires\": {\n        \"commondir\": \"^1.0.1\",\n        \"make-dir\": \"^3.0.2\",\n        \"pkg-dir\": \"^4.1.0\"\n      }\n    },\n    \"find-up\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n      \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n      \"requires\": {\n        \"locate-path\": \"^5.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      }\n    },\n    \"foreground-child\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-2.0.0.tgz\",\n      \"integrity\": \"sha512-dCIq9FpEcyQyXKCkyzmlPTFNgrCzPudOe+mhvJU5zAtlBnGVy2yKxtfsxK2tQBThwq225jcvBjpw1Gr40uzZCA==\",\n      \"requires\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"signal-exit\": \"^3.0.2\"\n      }\n    },\n    \"forever-agent\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz\",\n      \"integrity\": \"sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw==\"\n    },\n    \"form-data\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.1.tgz\",\n      \"integrity\": \"sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==\",\n      \"requires\": {\n        \"asynckit\": \"^0.4.0\",\n        \"combined-stream\": \"^1.0.8\",\n        \"mime-types\": \"^2.1.12\"\n      }\n    },\n    \"fraction.js\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/fraction.js/-/fraction.js-4.1.2.tgz\",\n      \"integrity\": \"sha512-o2RiJQ6DZaR/5+Si0qJUIy637QMRudSi9kU/FFzx9EZazrIdnBgpU+3sEWCxAVhH2RtxW2Oz+T4p2o8uOPVcgA==\"\n    },\n    \"fromentries\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fromentries/-/fromentries-1.3.2.tgz\",\n      \"integrity\": \"sha512-cHEpEQHUg0f8XdtZCc2ZAhrHzKzT0MrFUTcvx+hfxYu7rGMDc5SKoXFh+n4YigxsHXRzc6OrCshdR1bWH6HHyg==\"\n    },\n    \"fs-extra\": {\n      \"version\": \"9.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz\",\n      \"integrity\": \"sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==\",\n      \"requires\": {\n        \"at-least-node\": \"^1.0.0\",\n        \"graceful-fs\": \"^4.2.0\",\n        \"jsonfile\": \"^6.0.1\",\n        \"universalify\": \"^2.0.0\"\n      }\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\"\n    },\n    \"fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"optional\": true\n    },\n    \"function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\"\n    },\n    \"gensync\": {\n      \"version\": \"1.0.0-beta.2\",\n      \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n      \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\"\n    },\n    \"get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\"\n    },\n    \"get-intrinsic\": {\n      \"version\": \"1.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.6.tgz\",\n      \"integrity\": \"sha512-qxsEs+9A+u85HhllWJJFicJfPDhRmjzoYdl64aMWW9yRIJmSyxdn8IEkuIM530/7T+lv0TIHd8L6Q/ra0tEoeA==\",\n      \"requires\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"dunder-proto\": \"^1.0.0\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"math-intrinsics\": \"^1.0.0\"\n      }\n    },\n    \"get-package-type\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz\",\n      \"integrity\": \"sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==\"\n    },\n    \"get-stream\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz\",\n      \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\",\n      \"requires\": {\n        \"pump\": \"^3.0.0\"\n      }\n    },\n    \"getos\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/getos/-/getos-3.2.1.tgz\",\n      \"integrity\": \"sha512-U56CfOK17OKgTVqozZjUKNdkfEv6jk5WISBJ8SHoagjE6L69zOwl3Z+O8myjY9MEW3i2HPWQBt/LTbCgcC973Q==\",\n      \"requires\": {\n        \"async\": \"^3.2.0\"\n      }\n    },\n    \"getpass\": {\n      \"version\": \"0.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz\",\n      \"integrity\": \"sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==\",\n      \"requires\": {\n        \"assert-plus\": \"^1.0.0\"\n      }\n    },\n    \"glob\": {\n      \"version\": \"7.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.6.tgz\",\n      \"integrity\": \"sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==\",\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      }\n    },\n    \"glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n      \"requires\": {\n        \"is-glob\": \"^4.0.3\"\n      }\n    },\n    \"glob-to-regexp\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz\",\n      \"integrity\": \"sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"global-dirs\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/global-dirs/-/global-dirs-3.0.0.tgz\",\n      \"integrity\": \"sha512-v8ho2DS5RiCjftj1nD9NmnfaOzTdud7RRnVd9kFNOjqZbISlx5DQ+OrTkywgd0dIt7oFCvKetZSHoHcP3sDdiA==\",\n      \"requires\": {\n        \"ini\": \"2.0.0\"\n      },\n      \"dependencies\": {\n        \"ini\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/ini/-/ini-2.0.0.tgz\",\n          \"integrity\": \"sha512-7PnF4oN3CvZF23ADhA5wRaYEQpJ8qygSkbtTXWBeXWXmEVRXK+1ITciHWwHhsjv1TmW0MgacIv6hEi5pX5NQdA==\"\n        }\n      }\n    },\n    \"globals\": {\n      \"version\": \"11.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-11.12.0.tgz\",\n      \"integrity\": \"sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==\"\n    },\n    \"globby\": {\n      \"version\": \"11.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.0.4.tgz\",\n      \"integrity\": \"sha512-9O4MVG9ioZJ08ffbcyVYyLOJLk5JQ688pJ4eMGLpdWLHq/Wr1D9BlriLQyL0E+jbkuePVZXYFj47QM/v093wHg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"array-union\": \"^2.1.0\",\n        \"dir-glob\": \"^3.0.1\",\n        \"fast-glob\": \"^3.1.1\",\n        \"ignore\": \"^5.1.4\",\n        \"merge2\": \"^1.3.0\",\n        \"slash\": \"^3.0.0\"\n      }\n    },\n    \"gopd\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\"\n    },\n    \"graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\"\n    },\n    \"has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\"\n    },\n    \"has-symbols\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\"\n    },\n    \"hasha\": {\n      \"version\": \"5.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasha/-/hasha-5.2.2.tgz\",\n      \"integrity\": \"sha512-Hrp5vIK/xr5SkeN2onO32H0MgNZ0f17HRNH39WfL0SYUNOTZ5Lz1TJ8Pajo/87dYGEFlLMm7mIc/k/s6Bvz9HQ==\",\n      \"requires\": {\n        \"is-stream\": \"^2.0.0\",\n        \"type-fest\": \"^0.8.0\"\n      },\n      \"dependencies\": {\n        \"type-fest\": {\n          \"version\": \"0.8.1\",\n          \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz\",\n          \"integrity\": \"sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==\"\n        }\n      }\n    },\n    \"hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha5"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.9697265625,
          "content": "{\n  \"name\": \"hedy\",\n  \"private\": true,\n  \"version\": \"0.0.1\",\n  \"description\": \"This file exists to bring in NPM dependencies and orchestrate deploy-time build commands.\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/hedyorg/hedy.git\"\n  },\n  \"scripts\": {\n    \"build\": \"doit run deploy\",\n    \"cypress-gui\": \"cd tests && cypress open\",\n    \"cypress\": \"cd tests && cypress run --spec \\\"cypress/e2e/**/*\\\"\"\n  },\n  \"devDependencies\": {\n    \"@cypress/code-coverage\": \"^3.10.0\",\n    \"@types/ace\": \"^0.0.47\",\n    \"@types/jquery\": \"^3.5.6\",\n    \"@types/sortablejs\": \"^1.15.1\",\n    \"cypress\": \"^13.17.0\",\n    \"esbuild\": \"^0.13.15\",\n    \"jqueryui\": \"^1.11.1\",\n    \"minify\": \"^7.0.1\",\n    \"nyc\": \"^15.1.0\",\n    \"tailwindcss\": \"^3.0.13\",\n    \"typescript\": \"^5.0.0\",\n    \"yaml\": \"2.2.2\"\n  },\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"@ckeditor/ckeditor5-build-classic\": \"^43.1.1\",\n    \"@ckeditor/ckeditor5-code-block\": \"^43.1.1\",\n    \"@codemirror/commands\": \"^6.2.5\",\n    \"@codemirror/state\": \"^6.4.0\",\n    \"@codemirror/theme-one-dark\": \"^6.1.2\",\n    \"@codemirror/view\": \"^6.22.1\",\n    \"@istanbuljs/nyc-config-typescript\": \"^1.0.2\",\n    \"@lezer/generator\": \"^1.7.1\",\n    \"@lezer/highlight\": \"^1.2.0\",\n    \"@lezer/lr\": \"^1.4.2\",\n    \"@types/dompurify\": \"^2.3.3\",\n    \"@types/jqueryui\": \"^1.12.16\",\n    \"autoprefixer\": \"^10.4.2\",\n    \"chai-colors\": \"^1.0.1\",\n    \"chart.js\": \"^4.4.2\",\n    \"codemirror\": \"^6.0.1\",\n    \"cypress-real-events\": \"^1.12.0\",\n    \"dompurify\": \"^2.5.4\",\n    \"istanbul-lib-coverage\": \"^3.2.0\",\n    \"jquery-ui-dist\": \"^1.13.1\",\n    \"jszip\": \"^3.10.1\",\n    \"postcss\": \"^8.4.31\",\n    \"sortablejs\": \"^1.15.0\",\n    \"source-map-support\": \"^0.5.21\",\n    \"tone\": \"^14.7.77\",\n    \"ts-node\": \"^10.9.1\",\n    \"tw-elements\": \"^1.0.0\"\n  },\n  \"nyc\": {\n    \"extends\": \"@istanbuljs/nyc-config-typescript\",\n    \"all\": true,\n    \"report-dir\": \"cypress-coverage\",\n    \"extension\": [\n      \".ts\",\n      \".tsx\"\n    ],\n    \"exclude\": [\n      \"**/*.d.ts\"\n    ],\n    \"reporter\": [\n      \"html\"\n    ]\n  }\n}\n"
        },
        {
          "name": "prefixes",
          "type": "tree",
          "content": null
        },
        {
          "name": "program_repair.py",
          "type": "blob",
          "size": 1.37109375,
          "content": "def insert(input_string, line, column, new_string):\n    \"\"\"\"insert new_string at (line, column)\"\"\"\n    rows = input_string.splitlines()\n    rows[line] = rows[line][:column] + new_string + rows[line][column:]\n\n    return '\\n'.join(rows)\n\n\ndef delete(input_string, line, column, length):\n    \"\"\"\"delete length chars starting at (line, column)\"\"\"\n    rows = input_string.splitlines()\n    rows[line] = rows[line][:column] + rows[line][column + length:]\n\n    return '\\n'.join(rows)\n\n\ndef replace(input_string, line, column, length, new_string):\n    \"\"\"\"replace at (line, column) length chars with new_string\"\"\"\n    result = delete(input_string, line, column, length)\n    result = insert(result, line, column, new_string)\n\n    return result\n\n\ndef remove_leading_spaces(input_string):\n    # the only repair we can do now is remove leading spaces, more can be added!\n    return '\\n'.join([x.lstrip() for x in input_string.split('\\n')])\n\n\ndef remove_unexpected_char(input_string, line, column):\n    return delete(input_string, line - 1, column - 1, 1)\n\n\ndef fix_indent(input_string, line, leading_spaces, indent_size):\n    if leading_spaces < indent_size:\n        # not enough spaces, add spaces\n        return insert(input_string, line - 1, 0, ' ' * (indent_size - leading_spaces))\n    else:\n        # too many spaces, remove spaces\n        return delete(input_string, line - 1, 0, leading_spaces - indent_size)\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.1083984375,
          "content": "[tool.doit]\nbackend = \"json\"\ndep_file = \".doit.db.json\"\n\n[tool.doit.plugins.command]\nwatch = \"doit_watch:Watch\""
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.6474609375,
          "content": "Flask==3.0.2\nWerkzeug==3.0.6\nlark==1.1.1\ngunicorn==22.0.0\nflask-compress==1.4.0\nrequests==2.32.0\nattrs>=22.2.0\nbcrypt==3.2.0\nboto3>=1.16.50\nMarkupSafe==2.1.2\nruamel.yaml==0.18.6\ndocopt==0.6.2\npydantic==1.10.13\nlazy==1.4\nPySumTypes==0.0.1\nbeautifulsoup4==4.9.3\nregex==2021.8.28\nretrying==1.3.3\npytest==8.0.0\nparameterized==0.8.1\nFlask-Babel==4.0.0\niso-639>=0.4.5\niso3166~=2.0.2\nturtlethread>=0.0.6\npre-commit==2.20.0\nbabel==2.14.0\njinja-partials==0.1.1\nhypothesis==6.98.4\ntqdm==4.66.3\npytest-xdist==3.3.1\nemail-validator==2.1.0.post1\ndoit==0.36.0\ndoit_watch>=0.1.0\nuflash>=2.0.0\npyinstaller==6.11.1\npylint==3.1.0\ncommonmark==0.9.1\ncolorama==0.4.6\ncheck-jsonschema\n"
        },
        {
          "name": "runtime.txt",
          "type": "blob",
          "size": 0.013671875,
          "content": "python-3.12.2\n"
        },
        {
          "name": "safe_format.py",
          "type": "blob",
          "size": 0.455078125,
          "content": "from string import Formatter\n\n\ndef safe_format(s: str, /, **kwargs):\n    \"\"\"A replacement for str.format() that does NOT explode if values are missing from kwargs.\"\"\"\n    return FORMATTER.format(s, **kwargs)\n\n\nclass SafeFormatter(Formatter):\n    def get_value(self, field_name, args, kwargs):\n        if field_name not in kwargs:\n            return '{' + str(field_name) + '}'\n        return super().get_value(field_name, args, kwargs)\n\n\nFORMATTER = SafeFormatter()\n"
        },
        {
          "name": "semantics",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.3115234375,
          "content": "[autopep8]\nexclude =\n    .git,\n    .env,\n    venv,\n    __pycache__,\n    ./tests/*\nmax-line-length = 120\n\n[flake8]\nexclude = \n    .git,\n    .env,\n    venv,\n    __pycache__,\n    ./tests/*\nper-file-ignores = \n    ./utils.py:E501    \n    ./highlighting/list_keywords.py:E501\n    ./hedy.py:E501, F541\nmax-line-length = 120\n\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "static_babel_content.json",
          "type": "blob",
          "size": 12.8837890625,
          "content": "{\n    \"000 __ help\": [\n        \"!!! THIS FILE HAS BEEN GENERATED. DO NOT EDIT !!! Run build-tools/heroku/generate-static-babel-content to regenerate.\"\n    ],\n    \"COUNTRIES\": {\n        \"AD\": \"Andorra\",\n        \"AE\": \"\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\",\n        \"AF\": \"\\u0627\\u0641\\u063a\\u0627\\u0646\\u0633\\u062a\\u0627\\u0646\",\n        \"AG\": \"Antigua & Barbuda\",\n        \"AI\": \"Anguilla\",\n        \"AL\": \"Shqip\\u00ebri\",\n        \"AM\": \"\\u0540\\u0561\\u0575\\u0561\\u057d\\u057f\\u0561\\u0576\",\n        \"AO\": \"Angola\",\n        \"AQ\": \"Antarctica\",\n        \"AR\": \"Argentina\",\n        \"AS\": \"American Samoa\",\n        \"AT\": \"\\u00d6sterreich\",\n        \"AU\": \"Australia\",\n        \"AW\": \"Aruba\",\n        \"AX\": \"\\u00c5land\",\n        \"AZ\": \"Az\\u0259rbaycan\",\n        \"BA\": \"Bosna i Hercegovina\",\n        \"BB\": \"Barbados\",\n        \"BD\": \"\\u09ac\\u09be\\u0982\\u09b2\\u09be\\u09a6\\u09c7\\u09b6\",\n        \"BE\": \"Belgium\",\n        \"BF\": \"Burkina Faso\",\n        \"BG\": \"\\u0411\\u044a\\u043b\\u0433\\u0430\\u0440\\u0438\\u044f\",\n        \"BH\": \"\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\",\n        \"BI\": \"Uburundi\",\n        \"BJ\": \"B\\u00e9nin\",\n        \"BL\": \"Saint-Barth\\u00e9lemy\",\n        \"BM\": \"Bermuda\",\n        \"BN\": \"Brunei\",\n        \"BO\": \"Bolivia\",\n        \"BQ\": \"Caribisch Nederland\",\n        \"BR\": \"Brasil\",\n        \"BS\": \"Bahamas\",\n        \"BT\": \"\\u0f60\\u0f56\\u0fb2\\u0f74\\u0f42\",\n        \"BV\": \"Bouvet Island\",\n        \"BW\": \"Botswana\",\n        \"BY\": \"\\u0411\\u0435\\u043b\\u0430\\u0440\\u0443\\u0441\\u044c\",\n        \"BZ\": \"Belize\",\n        \"CA\": \"Canada\",\n        \"CC\": \"Cocos (Keeling) Islands\",\n        \"CD\": \"Jamhuri ya Kidemokrasia ya Kongo\",\n        \"CF\": \"R\\u00e9publique centrafricaine\",\n        \"CG\": \"Congo-Brazzaville\",\n        \"CH\": \"Schweiz\",\n        \"CI\": \"C\\u00f4te d\\u2019Ivoire\",\n        \"CK\": \"Cook Islands\",\n        \"CL\": \"Chile\",\n        \"CM\": \"Cameroun\",\n        \"CN\": \"\\u4e2d\\u56fd\",\n        \"CO\": \"Colombia\",\n        \"CR\": \"Costa Rica\",\n        \"CU\": \"Cuba\",\n        \"CV\": \"Kabu Verdi\",\n        \"CW\": \"K\\u00f2rsou\",\n        \"CX\": \"Christmas Island\",\n        \"CY\": \"\\u039a\\u03cd\\u03c0\\u03c1\\u03bf\\u03c2\",\n        \"CZ\": \"\\u010cesko\",\n        \"DE\": \"Deutschland\",\n        \"DJ\": \"Yabuuti\",\n        \"DK\": \"Danmark\",\n        \"DM\": \"Dominica\",\n        \"DO\": \"Rep\\u00fablica Dominicana\",\n        \"DZ\": \"\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\",\n        \"EC\": \"Ecuador\",\n        \"EE\": \"Eesti\",\n        \"EG\": \"\\u0645\\u0635\\u0631\",\n        \"EH\": \"\\u0627\\u0644\\u0635\\u062d\\u0631\\u0627\\u0621 \\u0627\\u0644\\u063a\\u0631\\u0628\\u064a\\u0629\",\n        \"ER\": \"\\u12a4\\u122d\\u1275\\u122b\",\n        \"ES\": \"Espa\\u00f1a\",\n        \"ET\": \"\\u12a2\\u1275\\u12ee\\u1335\\u12eb\",\n        \"FI\": \"Suomi\",\n        \"FJ\": \"Fiji\",\n        \"FK\": \"Falkland Islands\",\n        \"FM\": \"Micronesia\",\n        \"FO\": \"F\\u00f8royar\",\n        \"FR\": \"France\",\n        \"GA\": \"Gabon\",\n        \"GB\": \"United Kingdom\",\n        \"GD\": \"Grenada\",\n        \"GE\": \"\\u10e1\\u10d0\\u10e5\\u10d0\\u10e0\\u10d7\\u10d5\\u10d4\\u10da\\u10dd\",\n        \"GF\": \"Guyane fran\\u00e7aise\",\n        \"GG\": \"Guernsey\",\n        \"GH\": \"Gaana\",\n        \"GI\": \"Gibraltar\",\n        \"GL\": \"Kalaallit Nunaat\",\n        \"GM\": \"Gambia\",\n        \"GN\": \"Guin\\u00e9e\",\n        \"GP\": \"Guadeloupe\",\n        \"GQ\": \"Guinea Ecuatorial\",\n        \"GR\": \"\\u0395\\u03bb\\u03bb\\u03ac\\u03b4\\u03b1\",\n        \"GS\": \"South Georgia and the South Sandwich Islands\",\n        \"GT\": \"Guatemala\",\n        \"GU\": \"Guam\",\n        \"GW\": \"Guin\\u00e9-Bissau\",\n        \"GY\": \"Guyana\",\n        \"HK\": \"\\u4e2d\\u570b\\u9999\\u6e2f\\u7279\\u5225\\u884c\\u653f\\u5340\",\n        \"HM\": \"Heard Island and McDonald Islands\",\n        \"HN\": \"Honduras\",\n        \"HR\": \"Hrvatska\",\n        \"HT\": \"Ha\\u00efti\",\n        \"HU\": \"Magyarorsz\\u00e1g\",\n        \"ID\": \"Indonesia\",\n        \"IE\": \"Ireland\",\n        \"IL\": \"\\u05d9\\u05e9\\u05e8\\u05d0\\u05dc\",\n        \"IM\": \"Isle of Man\",\n        \"IN\": \"\\u092d\\u093e\\u0930\\u0924\",\n        \"IO\": \"British Indian Ocean Territory\",\n        \"IQ\": \"\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\",\n        \"IR\": \"\\u0627\\u06cc\\u0631\\u0627\\u0646\",\n        \"IS\": \"\\u00cdsland\",\n        \"IT\": \"Italia\",\n        \"JE\": \"Jersey\",\n        \"JM\": \"Jamaica\",\n        \"JO\": \"\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\",\n        \"JP\": \"\\u65e5\\u672c\",\n        \"KE\": \"Kenya\",\n        \"KG\": \"\\u041a\\u044b\\u0440\\u0433\\u044b\\u0437\\u0441\\u0442\\u0430\\u043d\",\n        \"KH\": \"\\u1780\\u1798\\u17d2\\u1796\\u17bb\\u1787\\u17b6\",\n        \"KI\": \"Kiribati\",\n        \"KM\": \"\\u062c\\u0632\\u0631 \\u0627\\u0644\\u0642\\u0645\\u0631\",\n        \"KN\": \"St Kitts & Nevis\",\n        \"KP\": \"\\uc870\\uc120\\ubbfc\\uc8fc\\uc8fc\\uc758\\uc778\\ubbfc\\uacf5\\ud654\\uad6d\",\n        \"KR\": \"\\ub300\\ud55c\\ubbfc\\uad6d\",\n        \"KW\": \"\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\",\n        \"KY\": \"Cayman Islands\",\n        \"KZ\": \"\\u041a\\u0430\\u0437\\u0430\\u0445\\u0441\\u0442\\u0430\\u043d\",\n        \"LA\": \"\\u0ea5\\u0eb2\\u0ea7\",\n        \"LB\": \"\\u0644\\u0628\\u0646\\u0627\\u0646\",\n        \"LC\": \"St Lucia\",\n        \"LI\": \"Liechtenstein\",\n        \"LK\": \"\\u0dc1\\u0dca\\u200d\\u0dbb\\u0dd3 \\u0dbd\\u0d82\\u0d9a\\u0dcf\\u0dc0\",\n        \"LR\": \"Liberia\",\n        \"LS\": \"Lesotho\",\n        \"LT\": \"Lietuva\",\n        \"LU\": \"Luxembourg\",\n        \"LV\": \"Latvija\",\n        \"LY\": \"\\u0644\\u064a\\u0628\\u064a\\u0627\",\n        \"MA\": \"\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\",\n        \"MC\": \"Monaco\",\n        \"MD\": \"Republica Moldova\",\n        \"ME\": \"Crna Gora\",\n        \"MF\": \"Saint-Martin\",\n        \"MG\": \"Madagasikara\",\n        \"MH\": \"Marshall Islands\",\n        \"MK\": \"\\u0421\\u0435\\u0432\\u0435\\u0440\\u043d\\u0430 \\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0438\\u0458\\u0430\",\n        \"ML\": \"Mali\",\n        \"MM\": \"\\u1019\\u103c\\u1014\\u103a\\u1019\\u102c\",\n        \"MN\": \"\\u041c\\u043e\\u043d\\u0433\\u043e\\u043b\",\n        \"MO\": \"\\u4e2d\\u570b\\u6fb3\\u9580\\u7279\\u5225\\u884c\\u653f\\u5340\",\n        \"MP\": \"Northern Mariana Islands\",\n        \"MQ\": \"Martinique\",\n        \"MR\": \"\\u0645\\u0648\\u0631\\u064a\\u062a\\u0627\\u0646\\u064a\\u0627\",\n        \"MS\": \"Montserrat\",\n        \"MT\": \"Malta\",\n        \"MU\": \"Moris\",\n        \"MV\": \"\\u078b\\u07a8\\u0788\\u07ac\\u0780\\u07a8 \\u0783\\u07a7\\u0787\\u07b0\\u0796\\u07ac\",\n        \"MW\": \"Malawi\",\n        \"MX\": \"M\\u00e9xico\",\n        \"MY\": \"Malaysia\",\n        \"MZ\": \"Mo\\u00e7ambique\",\n        \"NA\": \"Namibi\\u00eb\",\n        \"NC\": \"Nouvelle-Cal\\u00e9donie\",\n        \"NE\": \"Nijar\",\n        \"NF\": \"Norfolk Island\",\n        \"NG\": \"Nigeria\",\n        \"NI\": \"Nicaragua\",\n        \"NL\": \"Nederland\",\n        \"NO\": \"Norge\",\n        \"NP\": \"\\u0928\\u0947\\u092a\\u093e\\u0932\",\n        \"NR\": \"Nauru\",\n        \"NU\": \"Niue\",\n        \"NZ\": \"New Zealand\",\n        \"OM\": \"\\u0639\\u064f\\u0645\\u0627\\u0646\",\n        \"PA\": \"Panam\\u00e1\",\n        \"PE\": \"Per\\u00fa\",\n        \"PF\": \"Polyn\\u00e9sie fran\\u00e7aise\",\n        \"PG\": \"Papua Niugini\",\n        \"PH\": \"Philippines\",\n        \"PK\": \"\\u067e\\u0627\\u06a9\\u0633\\u062a\\u0627\\u0646\",\n        \"PL\": \"Polska\",\n        \"PM\": \"Saint-Pierre-et-Miquelon\",\n        \"PN\": \"Pitcairn Islands\",\n        \"PR\": \"Puerto Rico\",\n        \"PS\": \"\\u0627\\u0644\\u0623\\u0631\\u0627\\u0636\\u064a \\u0627\\u0644\\u0641\\u0644\\u0633\\u0637\\u064a\\u0646\\u064a\\u0629\",\n        \"PT\": \"Portugal\",\n        \"PW\": \"Palau\",\n        \"PY\": \"Paraguai\",\n        \"QA\": \"\\u0642\\u0637\\u0631\",\n        \"RE\": \"La R\\u00e9union\",\n        \"RO\": \"Rom\\u00e2nia\",\n        \"RS\": \"\\u0421\\u0440\\u0431\\u0438\\u0458\\u0430\",\n        \"RU\": \"\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f\",\n        \"RW\": \"U Rwanda\",\n        \"SA\": \"\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\",\n        \"SB\": \"Solomon Islands\",\n        \"SC\": \"Seychelles\",\n        \"SD\": \"\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\",\n        \"SE\": \"Sverige\",\n        \"SG\": \"Singapore\",\n        \"SH\": \"St Helena\",\n        \"SI\": \"Slovenija\",\n        \"SJ\": \"Svalbard og Jan Mayen\",\n        \"SK\": \"Slovensko\",\n        \"SL\": \"Sierra Leone\",\n        \"SM\": \"San Marino\",\n        \"SN\": \"Senegaal\",\n        \"SO\": \"Soomaaliya\",\n        \"SR\": \"Suriname\",\n        \"SS\": \"\\u062c\\u0646\\u0648\\u0628 \\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\",\n        \"ST\": \"S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe\",\n        \"SV\": \"El Salvador\",\n        \"SX\": \"Sint Maarten\",\n        \"SY\": \"Syrian Arab Republic\",\n        \"SZ\": \"Eswatini\",\n        \"TC\": \"Turks & Caicos Islands\",\n        \"TD\": \"Tchad\",\n        \"TF\": \"French Southern Territories\",\n        \"TG\": \"Togo\",\n        \"TH\": \"\\u0e44\\u0e17\\u0e22\",\n        \"TJ\": \"\\u0422\\u043e\\u04b7\\u0438\\u043a\\u0438\\u0441\\u0442\\u043e\\u043d\",\n        \"TK\": \"Tokelau\",\n        \"TL\": \"Timor-Leste\",\n        \"TM\": \"T\\u00fcrkmenistan\",\n        \"TN\": \"\\u062a\\u0648\\u0646\\u0633\",\n        \"TO\": \"Tonga\",\n        \"TR\": \"T\\u00fcrkiye\",\n        \"TT\": \"Trinidad & Tobago\",\n        \"TV\": \"Tuvalu\",\n        \"TW\": \"\\u53f0\\u7063\",\n        \"TZ\": \"Tanzania\",\n        \"UA\": \"\\u0423\\u043a\\u0440\\u0430\\u0457\\u043d\\u0430\",\n        \"UG\": \"Uganda\",\n        \"UM\": \"U.S. Outlying Islands\",\n        \"US\": \"United States\",\n        \"UY\": \"Uruguay\",\n        \"UZ\": \"O\\u02bbzbekiston\",\n        \"VA\": \"Citt\\u00e0 del Vaticano\",\n        \"VC\": \"St Vincent & the Grenadines\",\n        \"VE\": \"Venezuela\",\n        \"VG\": \"British Virgin Islands\",\n        \"VI\": \"U.S. Virgin Islands\",\n        \"VN\": \"Vi\\u1ec7t Nam\",\n        \"VU\": \"Vanuatu\",\n        \"WF\": \"Wallis-et-Futuna\",\n        \"WS\": \"Samoa\",\n        \"XK\": \"Kosov\\u00eb\",\n        \"YE\": \"\\u0627\\u0644\\u064a\\u0645\\u0646\",\n        \"YT\": \"Mayotte\",\n        \"ZA\": \"South Africa\",\n        \"ZM\": \"Zambia\",\n        \"ZW\": \"Zimbabwe\"\n    },\n    \"LANGUAGE_NAMES\": {\n        \"ar\": \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\",\n        \"bg\": \"\\u0411\\u044a\\u043b\\u0433\\u0430\\u0440\\u0441\\u043a\\u0438\",\n        \"bn\": \"\\u09ac\\u09be\\u0982\\u09b2\\u09be\",\n        \"ca\": \"Catal\\u00e0\",\n        \"cs\": \"\\u010ce\\u0161tina\",\n        \"cy\": \"Cymraeg\",\n        \"da\": \"Dansk\",\n        \"de\": \"Deutsch\",\n        \"el\": \"\\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ac\",\n        \"en\": \"English\",\n        \"eo\": \"Esperanto\",\n        \"es\": \"Espa\\u00f1ol\",\n        \"et\": \"Eesti\",\n        \"fa\": \"\\u0641\\u0627\\u0631\\u0633\\u06cc\",\n        \"fi\": \"Suomi\",\n        \"fr\": \"Fran\\u00e7ais\",\n        \"fr_CA\": \"Fran\\u00e7ais (Canada)\",\n        \"fy\": \"Frysk\",\n        \"ga\": \"Gaeilge\",\n        \"he\": \"\\u05e2\\u05d1\\u05e8\\u05d9\\u05ea\",\n        \"hi\": \"\\u0939\\u093f\\u0928\\u094d\\u0926\\u0940\",\n        \"hr\": \"Hrvatski\",\n        \"hu\": \"Magyar\",\n        \"ia\": \"Interlingua\",\n        \"id\": \"Indonesia\",\n        \"it\": \"Italiano\",\n        \"ja\": \"\\u65e5\\u672c\\u8a9e\",\n        \"kab\": \"Taqbaylit\",\n        \"kmr\": \"Kurd\\u00ee (Tirkiye)\",\n        \"ko\": \"\\ud55c\\uad6d\\uc5b4\",\n        \"mi\": \"M\\u0101ori\",\n        \"ml\": \"\\u0d2e\\u0d32\\u0d2f\\u0d3e\\u0d33\\u0d02\",\n        \"ms\": \"Melayu\",\n        \"nb_NO\": \"Norsk Bokm\\u00e5l (Norge)\",\n        \"ne\": \"\\u0928\\u0947\\u092a\\u093e\\u0932\\u0940\",\n        \"nl\": \"Nederlands\",\n        \"pa_PK\": \"\\u067e\\u0646\\u062c\\u0627\\u0628\\u06cc (\\u0639\\u0631\\u0628\\u06cc, \\u067e\\u0627\\u06a9\\u0633\\u062a\\u0627\\u0646)\",\n        \"pap\": \"Papiamentu\",\n        \"pl\": \"Polski\",\n        \"pt_BR\": \"Portugu\\u00eas (Brasil)\",\n        \"pt_PT\": \"Portugu\\u00eas (Portugal)\",\n        \"ro\": \"Rom\\u00e2n\\u0103\",\n        \"ru\": \"\\u0420\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439\",\n        \"sl\": \"Sloven\\u0161\\u010dina\",\n        \"sq\": \"Shqip\",\n        \"sr\": \"\\u0421\\u0440\\u043f\\u0441\\u043a\\u0438\",\n        \"sv\": \"Svenska\",\n        \"sw\": \"Kiswahili\",\n        \"ta\": \"\\u0ba4\\u0bae\\u0bbf\\u0bb4\\u0bcd\",\n        \"te\": \"\\u0c24\\u0c46\\u0c32\\u0c41\\u0c17\\u0c41\",\n        \"th\": \"\\u0e44\\u0e17\\u0e22\",\n        \"tl\": \"Filipino (Pilipinas)\",\n        \"tn\": \"Setswana\",\n        \"tr\": \"T\\u00fcrk\\u00e7e\",\n        \"uk\": \"\\u0423\\u043a\\u0440\\u0430\\u0457\\u043d\\u0441\\u044c\\u043a\\u0430\",\n        \"ur\": \"\\u0627\\u0631\\u062f\\u0648\",\n        \"uz\": \"O\\u2018Zbek\",\n        \"vi\": \"Ti\\u1ebfng Vi\\u1ec7t\",\n        \"zh_Hans\": \"\\u4e2d\\u6587 (\\u7b80\\u4f53)\",\n        \"zh_Hant\": \"\\u4e2d\\u6587 (\\u7e41\\u9ad4)\"\n    },\n    \"TEXT_DIRECTIONS\": {\n        \"ar\": \"rtl\",\n        \"bg\": \"ltr\",\n        \"bn\": \"ltr\",\n        \"ca\": \"ltr\",\n        \"cs\": \"ltr\",\n        \"cy\": \"ltr\",\n        \"da\": \"ltr\",\n        \"de\": \"ltr\",\n        \"el\": \"ltr\",\n        \"en\": \"ltr\",\n        \"eo\": \"ltr\",\n        \"es\": \"ltr\",\n        \"et\": \"ltr\",\n        \"fa\": \"rtl\",\n        \"fi\": \"ltr\",\n        \"fr\": \"ltr\",\n        \"fr_CA\": \"ltr\",\n        \"fy\": \"ltr\",\n        \"ga\": \"ltr\",\n        \"he\": \"rtl\",\n        \"hi\": \"ltr\",\n        \"hr\": \"ltr\",\n        \"hu\": \"ltr\",\n        \"ia\": \"ltr\",\n        \"id\": \"ltr\",\n        \"it\": \"ltr\",\n        \"ja\": \"ltr\",\n        \"kab\": \"ltr\",\n        \"kmr\": \"ltr\",\n        \"ko\": \"ltr\",\n        \"mi\": \"ltr\",\n        \"ml\": \"ltr\",\n        \"ms\": \"ltr\",\n        \"nb_NO\": \"ltr\",\n        \"ne\": \"ltr\",\n        \"nl\": \"ltr\",\n        \"pa_PK\": \"rtl\",\n        \"pap\": \"ltr\",\n        \"pl\": \"ltr\",\n        \"pt_BR\": \"ltr\",\n        \"pt_PT\": \"ltr\",\n        \"ro\": \"ltr\",\n        \"ru\": \"ltr\",\n        \"sl\": \"ltr\",\n        \"sq\": \"ltr\",\n        \"sr\": \"ltr\",\n        \"sv\": \"ltr\",\n        \"sw\": \"ltr\",\n        \"ta\": \"ltr\",\n        \"te\": \"ltr\",\n        \"th\": \"ltr\",\n        \"tl\": \"ltr\",\n        \"tn\": \"ltr\",\n        \"tr\": \"ltr\",\n        \"uk\": \"ltr\",\n        \"ur\": \"rtl\",\n        \"uz\": \"ltr\",\n        \"vi\": \"ltr\",\n        \"zh_Hans\": \"ltr\",\n        \"zh_Hant\": \"ltr\"\n    }\n}\n"
        },
        {
          "name": "static_babel_content.py",
          "type": "blob",
          "size": 0.2451171875,
          "content": "from os import path\nimport json\n\nwith open(path.join(path.dirname(__file__), 'static_babel_content.json')) as f:\n    data = json.load(f)\n\n\nCOUNTRIES = data[\"COUNTRIES\"]\nLANGUAGE_NAMES = data[\"LANGUAGE_NAMES\"]\nTEXT_DIRECTIONS = data[\"TEXT_DIRECTIONS\"]\n"
        },
        {
          "name": "tailwind",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests_e2e.py",
          "type": "blob",
          "size": 63.6767578125,
          "content": "# *** NATIVE DEPENDENCIES ***\nimport os\nimport collections\nimport random\nimport json\nimport re\nfrom http.cookies import SimpleCookie\n\n# *** LIBRARIES ***\nimport unittest\nimport requests\n\n# *** HEDY RESOURCES ***\nimport utils\nfrom config import config as CONFIG\n\n# *** GLOBAL VARIABLES ***\nfrom hedy import HEDY_MAX_LEVEL\nfrom hedy_content import ALL_LANGUAGES\n\nHOST = os.getenv('ENDPOINT', 'http://localhost:' + str(CONFIG['port']) + '/')\nif not HOST.endswith('/'):\n    HOST += '/'\n\n# This dict has global scope and holds all created users and their still\n# current sessions (as cookies), for convenient reuse wherever needed\nUSERS = {}\n\n# *** HELPERS ***\n\n\ndef request(method, path, headers={}, body='', cookies=None, follow_redirects=True):\n\n    if method not in ['get', 'post', 'put', 'delete']:\n        raise Exception('request - Invalid method: ' + str(method))\n\n    # We pass the X-Testing header to let the server know that this is a\n    # request coming from an E2E test, thus no transactional emails should be\n    # sent.\n    headers['X-Testing'] = '1'\n\n    # If sending an object as body, stringify it and set the proper content-type header\n    if isinstance(body, dict):\n        headers['content-type'] = 'application/json'\n        body = json.dumps(body)\n\n    start = utils.timems()\n\n    response = getattr(requests, method)(HOST + path, headers=headers, data=body,\n                                         cookies=cookies, allow_redirects=follow_redirects)\n\n    # Remember all cookies in the cookie jar\n    if cookies is not None:\n        cookies.update(response.cookies)\n\n    ret = {'time': utils.timems() - start}\n\n    if response.history and response.history[0]:\n        # This code branch will be executed if there is a redirect\n        ret['code'] = response.history[0].status_code\n        ret['headers'] = response.history[0].headers\n        if getattr(response.history[0], '_content'):\n            # We can assume that bodies returned from redirected responses are always\n            # plain text, since no JSON endpoint in the server is reachable through a\n            # redirect.\n            ret['body'] = getattr(response.history[0], '_content').decode('utf-8')\n    else:\n        ret['code'] = response.status_code\n        ret['headers'] = response.headers\n        if 'Content-Type' in response.headers and response.headers['Content-Type'] == 'application/json':\n            ret['body'] = response.json()\n        else:\n            ret['body'] = response.text\n\n    return ret\n\n\nclass AuthHelper(unittest.TestCase):\n    def setUp(self):\n        \"\"\"SetUp gets called on a fresh instance of this object, before each test.\n\n        We have a collection of users in the USER global array. However, we store\n        the cookies for individual users, so that cookies from different sessions don't\n        interfere with each other (i.e., every user must login again in each test).\n        \"\"\"\n        self.user_cookies = collections.defaultdict(requests.cookies.RequestsCookieJar)\n        self.user = None\n\n    @property\n    def username(self):\n        return self.user['username'] if self.user else None\n\n    def make_username(self):\n        # We create usernames with a random component so that if a test fails, we don't have to do a cleaning\n        #  of the DB so that the test suite can run again\n        # This also allows us to run concurrent tests without having username conflicts.\n        username = 'user' + str(random.randint(10000, 100000))\n        return username\n\n    # If user with `username` exists, return it. Otherwise, create it.\n    def assert_user_exists(self, username):\n        if not isinstance(username, str):\n            raise Exception('AuthHelper.assert_user_exists - Invalid username: ' + str(username))\n\n        if username in USERS:\n            return USERS[username]\n        body = {\n            'username': username,\n            'email': username + '@hedy.com',\n            'language': 'en',\n            'keyword_language': 'en',\n            'agree_terms': 'yes',\n            'password': 'foobar',\n            'password_repeat': 'foobar'}\n        response = request('post', 'auth/signup', {}, body, cookies=self.user_cookies[username])\n\n        # It might sometimes happen that by the time we attempted to create the user, another test did it already.\n        # In this case, we get a 403. We invoke the function recursively.\n        if response['code'] == 403:\n            return self.assert_user_exists(username)\n\n        # Store the user & also the verify token for use in upcoming tests\n        USERS[username] = body\n\n        USERS[username]['verify_token'] = response['body']['token']\n        return USERS[username]\n\n    # Returns the first created user, if any; otherwise, creates one.\n    def get_any_user(self):\n        if len(USERS.keys()) > 0:\n            return USERS[next(iter(USERS))]\n        return self.assert_user_exists(self.make_username())\n\n    def get_any_logged_user(self):\n        # If there's no logged in user, we login the user\n        user = self.get_any_user()\n        return self.login_user(user['username'])\n\n    def login_user(self, username):\n        \"\"\"Login another user. Does not BECOME that user for all subsequent request.\"\"\"\n        self.assert_user_exists(username)\n        user = USERS[username]\n        request('post',\n                'auth/login',\n                {},\n                {'username': user['username'],\n                 'password': user['password']},\n                cookies=self.user_cookies[username])\n        return user\n\n    def given_specific_user_is_logged_in(self, username):\n        \"\"\"Become this specific user for all subsequent calls.\"\"\"\n        self.user = self.login_user(username)\n\n    def get_hedy_cookie(self, cookie_string):\n        cookie = SimpleCookie()\n        cookie.load(cookie_string)\n\n        for key, cookie in cookie.items():\n            if key == CONFIG['session']['cookie_name']:\n                return cookie\n\n    def given_fresh_user_is_logged_in(self):\n        username = self.make_username()\n        self.user = self.login_user(username)\n\n    def make_current_user_teacher(self):\n        \"\"\"Mark the current user as teacher.\n\n        Need to log in again to refresh the session.\n        \"\"\"\n        self.post_data('admin/mark-as-teacher/' + self.username, {'is_teacher': True})\n        return self.login_user(self.username)\n\n    def make_current_user_super_teacher(self):\n        \"\"\"Mark the current user as super-teacher.\n\n        Need to log in again to refresh the session.\n        \"\"\"\n        self.post_data('admin/mark-super-teacher/' + self.username, {})\n        return self.login_user(self.username)\n\n    def given_user_is_logged_in(self):\n        self.user = self.get_any_logged_user()\n\n    def given_teacher_is_logged_in(self):\n        self.given_user_is_logged_in()\n        self.make_current_user_teacher()\n\n    def given_fresh_teacher_is_logged_in(self):\n        self.given_fresh_user_is_logged_in()\n        self.make_current_user_teacher()\n\n    def given_any_user(self):\n        self.user = self.get_any_user()\n\n    def switch_user(self, user):\n        self.user = self.login_user(user['username'])\n\n    def post_data(\n            self,\n            path,\n            body,\n            expect_http_code=200,\n            no_cookie=False,\n            return_headers=False,\n            put_data=False):\n        cookies = self.user_cookies[self.username] if self.username and not no_cookie else None\n\n        method = 'put' if put_data else 'post'\n        response = request(method, path, body=body, cookies=cookies)\n        self.assertEqual(\n            response['code'],\n            expect_http_code,\n            f'While {method}ing {body} to {path} (user: {self.username}). Response: {response[\"body\"]}')\n\n        return response['headers'] if return_headers else response['body']\n\n    def delete_data(self, path, expect_http_code=200, no_cookie=False, return_headers=False):\n        cookies = self.user_cookies[self.username] if self.username and not no_cookie else None\n\n        method = 'delete'\n        response = request(method, path, cookies=cookies)\n        self.assertEqual(response['code'], expect_http_code,\n                         f'While {method}ing {path} (user: {self.username})')\n\n        return response['headers'] if return_headers else response['body']\n\n    def get_data(self, path, expect_http_code=200, no_cookie=False, return_headers=False, follow_redirects=True):\n        cookies = self.user_cookies[self.username] if self.username and not no_cookie else None\n        response = request('get', path, body='', cookies=cookies, follow_redirects=follow_redirects)\n\n        self.assertEqual(\n            response['code'],\n            expect_http_code,\n            f'While reading {path} (user: {self.username}). Response: {response[\"body\"]}')\n\n        return response['headers'] if return_headers else response['body']\n\n    def destroy_current_user(self):\n        assert self.username is not None\n        self.post_data('auth/destroy', '', 204)\n        # Remove any records of this user\n        USERS.pop(self.username)\n\n# *** TESTS ***\n\n\nclass TestPages(AuthHelper):\n    def test_get_login_page(self):\n        # WHEN attempting to get the login page\n        # THEN receive an OK response code from the server\n        self.get_data('/login')\n\n    def test_get_signup_pages(self):\n        # WHEN attempting to get the signup flow\n        # THEN receive an OK response code from the server\n        self.get_data('/signup')\n\n    def test_get_recover_page(self):\n        # WHEN attempting to get the signup page\n        # THEN receive an OK response code from the server\n        self.get_data('/recover')\n\n    def test_get_admin_page(self):\n        # WHEN attempting to get the admin page\n        # THEN receive an OK response code from the server\n        # (Note: this only happens in a dev environment)\n        self.get_data('/admin')\n\n    def test_get_cheatsheet(self):\n        # WHEN attempting to get the cheatsheet page\n        # THEN receive an OK response code from the server\n        self.get_data('/cheatsheet')\n\n    def test_invalid_get_cheatsheet(self):\n        # WHEN attempting to get the cheatsheet page with an invalid value\n        # THEN receive an 404 response code from the server\n        self.get_data('/cheatsheet/123', expect_http_code=404)\n        self.get_data('/cheatsheet/panda', expect_http_code=404)\n\n    def test_valid_program_filtering_page(self):\n        # WHEN a fresh user\n        self.given_fresh_user_is_logged_in()\n\n        # THEN we can retrieve the different filtering options of the programs page\n        filters = [\n            \"?level=null&adventure=null\",\n            \"?level=4&adventure=null\"\n            \"?level=2&adventure=story\"\n        ]\n        for filter in filters:\n            self.get_data(\"/programs\" + filter)\n\n    def test_valid_explore_filtering_page(self):\n        # WHEN a fresh user\n        self.given_fresh_user_is_logged_in()\n\n        # THEN we can retrieve the different filtering options of the explore page\n        filters = [\n            \"?level=null&adventure=null&lang=null\",\n            \"?level=3&adventure=parrot&lang=null\",\n            \"?level=11&adventure=fortune&lang=es\"\n        ]\n        for filter in filters:\n            self.get_data(\"/explore\" + filter)\n\n    def test_all_languages(self):\n        # WHEN trying all languages to reach all pages\n        # THEN receive an OK response from the server\n        self.given_fresh_user_is_logged_in()\n\n        body = {'email': self.user['email'], 'keyword_language': self.user['keyword_language']}\n        pages = [\n            '/',\n            '/hedy',\n            '/tutorial',\n            '/explore',\n            '/learn-more',\n            '/programs',\n            '/my-profile']\n\n        for language in ALL_LANGUAGES.keys():\n            body['language'] = language\n            self.post_data('profile', body)\n\n            for page in pages:\n                if page == \"/hedy\":\n                    self.get_data(page)  # this loads level 1\n                    for i in range(2, HEDY_MAX_LEVEL + 1):\n                        self.get_data(page + \"/\" + str(i))\n\n\nclass TestSessionVariables(AuthHelper):\n    def test_get_session_variables(self):\n        # WHEN getting session variables from the main environment\n        body = self.get_data('/session_main')\n\n        # THEN the body should contain a `session` with `session_id` and a `proxy_enabled` field\n        self.assertIn('session', body)\n        self.assertIn('session_id', body['session'])\n        self.assertIn('proxy_enabled', body)\n\n        session = body['session']\n        proxy_enabled = body['proxy_enabled']\n\n        # WHEN getting session variables from the test environment\n        test_body = self.get_data('/session_test')\n        if not proxy_enabled:\n            # If proxying to test is disabled, there is nothing else to test.\n            return\n\n        # THEN the body should contain a `session` with `session_id` and a `test_session` field\n        self.assertIn('session', test_body)\n        self.assertIn('session_id', test_body['session'])\n        self.assertIn('test_session', test_body['session'])\n        self.assertEqual(test_body['session']['session_id'], session['id'])\n\n        # WHEN getting session variables from the main environment\n        body = self.get_data('/session_main')\n        # THEN the body should have a session with a session_id that is still the\n        # same and a `test_session` field as well\n        self.assertEqual(body['session']['session_id'], session['id'])\n        self.assertEqual(body['session']['test_session'], test_body['session']['session_id'])\n\n\nclass TestAuth(AuthHelper):\n    def test_invalid_signups(self):\n        # GIVEN a valid username\n        username = self.make_username()\n        # WHEN attempting signups with invalid bodies\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'username': 1},\n            {'username': 'user@me', 'password': 'foobar', 'email': 'a@a.com'},\n            {'username:': 'user: me', 'password': 'foobar', 'email': 'a@a.co'},\n            {'username': 't'},\n            {'username': '    t    '},\n            {'username': username},\n            {'username': username, 'password': 1},\n            {'username': username, 'password': 'foo'},\n            {'username': username, 'password': 'foobar'},\n            {'username': username, 'password': 'foobar', 'email': 'me@something'},\n            {'username': username, 'password': 'foobar', 'email': 'me@something.com', 'language': 123},\n            {'username': username, 'password': 'foobar', 'email': 'me@something.com', 'language': True},\n            {'username': username, 'password': 'foobar', 'email': 'me@something.com', 'heard_about': 'foo'},\n            {'username': username, 'password': 'foobar',\n                'email': 'me@something.com', 'heard_about': ['other_source', 'foo']},\n            {'username': username, 'password': 'foobar', 'email': 'me@something.com', 'heard_about': [2]},\n            {'username': username, 'password': 'foobar', 'email': 'me@something.com', 'prog_experience': [2]},\n            {'username': username, 'password': 'foobar', 'email': 'me@something.com', 'prog_experience': 'foo'},\n            {'username': username, 'password': 'foobar', 'email': 'me@something.com', 'experience_languages': 'python'}\n        ]\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data('auth/signup', invalid_body, expect_http_code=400)\n\n    def test_signup(self):\n        # GIVEN a valid username and signup body\n        username = self.make_username()\n        user = {\n            'username': username,\n            'email': username + '@hedy.com',\n            'password': 'foobar',\n            'password_repeat': 'foobar',\n            'language': 'nl',\n            'keyword_language': 'en',\n            'heard_about': 'from_another_teacher',\n            'agree_terms': 'yes'}\n\n        # WHEN signing up a new user\n        # THEN receive an OK response code from the server\n        body = self.post_data('auth/signup', user)\n\n        # THEN receive a body containing a token\n        self.assertIsInstance(body, dict)\n        self.assertIsInstance(body['token'], str)\n\n        # FINALLY Store the user and its token for upcoming tests\n        user['verify_token'] = body['token']\n        USERS[username] = user\n\n    def test_invalid_login(self):\n        # WHEN attempting logins with invalid bodies\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'username': 1},\n            {'username': 'user@me'},\n            {'username:': 'user: me'}\n        ]\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data('auth/login', invalid_body, expect_http_code=400)\n\n    def test_login(self):\n        # GIVEN an existing user\n        self.given_any_user()\n\n        # WHEN logging in the user\n        # THEN receive an OK response code from the server\n        headers = self.post_data('auth/login',\n                                 {'username': self.username,\n                                  'password': self.user['password']},\n                                 return_headers=True)\n\n        # THEN validate the cookie sent in the response\n        self.assertIsInstance(headers['Set-Cookie'], str)\n        hedy_cookie = self.get_hedy_cookie(headers['Set-Cookie'])\n        self.assertNotEqual(hedy_cookie, None)\n        self.assertEqual(hedy_cookie['httponly'], True)\n        self.assertEqual(hedy_cookie['path'], '/')\n        self.assertEqual(hedy_cookie['samesite'], 'Lax,')\n\n    def test_logout(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN logging out the user\n        # THEN receive an OK response code from the server\n        self.post_data('auth/logout', '', 204)\n\n        # WHEN retrieving the user profile with the same cookie\n        # THEN first receive a redirect response code from the server, and the next\n        # page load will be a 403. Need to have 'follow_redirects=False' or we won't see\n        # the 302 code.\n        self.get_data('profile', expect_http_code=302, follow_redirects=False)\n        self.get_data('profile', expect_http_code=401)\n\n    def test_destroy_account(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN deleting the user account\n        # THEN receive an OK response code from the server\n        self.destroy_current_user()\n\n        # WHEN retrieving the profile of the user\n        # THEN first receive a redirect response response code from the server, and\n        # the next page load will be a forbidden\n        self.get_data('profile', expect_http_code=302, follow_redirects=False)\n        self.get_data('profile', expect_http_code=401)\n\n    def test_invalid_change_password(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN attempting change password with invalid bodies\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'old_password': 123456},\n            {'old_password': 'pass1'},\n            {'old_password': 'pass1', 'new-password': 123456},\n            {'old_password': 'pass1', 'new-password': 'short'},\n            {'old_password': 'pass1', 'new-password': 123456, 'password_repeat': 'panda'},\n            {'old_password': 'pass1', 'new-password': 'panda'},\n        ]\n\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data('auth/change_password', invalid_body, expect_http_code=400)\n\n        # WHEN attempting to change password without sending the correct old password\n        # THEN receive an invalid response code from the server\n        body = {'old_password': 'pass1', 'new-password': '123456', 'password_repeat': '123456'}\n        self.post_data('auth/change_password', body, expect_http_code=403)\n\n    def test_change_password(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN attempting to change the user's password\n        new_password = 'pas1234'\n        # THEN receive an OK response code from the server\n        self.post_data('auth/change_password',\n                       {'old_password': self.user['password'],\n                        'new-password': 'pas1234',\n                        'password_repeat': 'pas1234'})\n\n        # WHEN attempting to login with old password\n        # THEN receive a forbidden response code from the server\n        self.post_data('auth/login',\n                       {'username': self.username,\n                        'password': self.user['password']},\n                       expect_http_code=403)\n\n        # GIVEN the same user\n\n        # WHEN attempting to login with new password\n        # THEN receive an OK response code from the server\n        self.post_data('auth/login', {'username': self.username, 'password': new_password})\n\n        # FINALLY update password on user\n        self.user['password'] = new_password\n\n    def test_profile_get(self):\n        # GIVEN a new user\n        # (we create a new user to ensure that the user has a clean profile)\n        self.given_fresh_user_is_logged_in()\n\n        # WHEN retrieving the user profile\n        # THEN receive an OK response code from the server\n        profile = self.get_data('profile')\n\n        # THEN check that the fields returned by the server have the correct values\n        self.assertIsInstance(profile, dict)\n        self.assertEqual(profile['username'], self.username),\n        self.assertEqual(profile['email'], self.user['email']),\n        self.assertEqual(profile['verification_pending'], True)\n        self.assertIsInstance(profile['student_classes'], list)\n        self.assertEqual(len(profile['student_classes']), 0)\n        self.assertIsInstance(profile['session_expires_at'], int)\n\n    def test_invalid_profile_modify(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN attempting profile modifications with invalid bodies\n        invalid_bodies = [\n            '',\n            [],\n            {'email': 'foobar'},\n            {'birth_year': 'a'},\n            {'birth_year': 20},\n            {'gender': 0},\n            {'gender': 'a'},\n            {'language': True},\n            {'language': 123},\n            {'keyword_language': True},\n            {'keyword_language': 123},\n        ]\n\n        for invalid_body in invalid_bodies:\n            # Create a valid body that we overwrite with invalid values\n            if isinstance(invalid_body, dict):\n                body = {\n                    'email': self.user['email'],\n                    'language': self.user['language'],\n                    'keyword_language': self.user['keyword_language']\n                }\n                body.update(invalid_body)\n                invalid_body = body\n            # THEN receive an invalid response code from the server\n            self.post_data('profile', invalid_body, expect_http_code=400)\n\n    def test_profile_modify(self):\n        # GIVEN a new user\n        # (we create a new user to ensure that the user has a clean profile)\n        self.given_fresh_user_is_logged_in()\n\n        # WHEN submitting valid profile changes\n        profile_changes = {\n            'birth_year': 1989,\n            'country': 'NL',\n            'gender': 'o'\n        }\n\n        body = {\n            'email': self.user['email'],\n            'language': self.user['language'],\n            'keyword_language': self.user['keyword_language']\n        }\n        for key in profile_changes:\n            body[key] = profile_changes[key]\n            # THEN receive an OK response code from the server\n            self.post_data('profile', body)\n\n            # WHEN retrieving the profile\n            profile = self.get_data('profile')\n            # THEN confirm that our modification has been stored by the server and\n            # returned in the latest version of the profile\n            self.assertEqual(profile[key], profile_changes[key])\n\n        # WHEN updating the user's email\n        # (we check email change separately since it involves a flow with a token)\n        # THEN receive an OK response code from the server\n        new_email = self.username + '@newhedy.com'\n        body = self.post_data('profile',\n                              {'email': new_email,\n                               'language': self.user['language'],\n                                  'keyword_language': self.user['keyword_language']})\n\n        # THEN confirm that the server replies with an email verification token\n        self.assertIsInstance(body['token'], str)\n\n        # FINALLY update the email & email verification token on user\n        self.user['email'] = new_email\n        self.user['verify_token'] = body['token']\n\n    def test_invalid_change_language(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN trying to update the profile with an invalid language\n        body = {\n            'email': self.user['email'],\n            'language': 'abc',\n            'keyword_language': self.user['keyword_language']\n        }\n        # THEN receive an invalid response code from the server\n        self.post_data('profile', body, expect_http_code=400)\n\n    def test_valid_change_language(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN trying to update the profile with a valid language\n        body = {\n            'email': self.user['email'],\n            'language': 'nl',\n            'keyword_language': 'nl'\n        }\n        # THEN receive a valid response code from the server\n        self.post_data('profile', body, expect_http_code=200)\n\n        # WHEN trying to retrieve the current profile\n        profile = self.get_data('profile')\n        # THEN verify that the language is successfully changed\n        self.assertEqual(profile['language'], body['language'])\n\n    def test_invalid_keyword_language(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN trying to update the profile with an invalid keyword language\n        invalid_keyword_language = [\n            'nl',\n            123,\n            'panda'\n        ]\n\n        body = {\n            'email': self.user['email'],\n            'language': 'en'\n        }\n        for invalid_lang in invalid_keyword_language:\n            body['keyword_language'] = invalid_lang\n            # THEN receive an invalid response code from the server\n            self.post_data('profile', body, expect_http_code=400)\n\n    def test_valid_keyword_language(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN trying to update the profile with a valid keyword language\n        body = {\n            'email': self.user['email'],\n            'language': 'nl',\n            'keyword_language': 'nl'\n        }\n        # THEN receive a valid response code from the server\n        self.post_data('profile', body, expect_http_code=200)\n\n    def test_invalid_recover_password(self):\n        # GIVEN an existing user\n        self.given_any_user()\n\n        # WHEN attempting a password recovery with invalid bodies\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'username': 1}\n        ]\n\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data('auth/recover', invalid_body, expect_http_code=400)\n\n        # WHEN attempting a password recovery with a non-existing username\n        # THEN receive a forbidden response code from the server\n        self.post_data('auth/recover', {'username': self.make_username()}, expect_http_code=403)\n\n    def test_recover_password(self):\n        # GIVEN an existing user\n        self.given_any_user()\n\n        # WHEN attempting a password recovery\n        # THEN receive an OK response code from the server\n        body = self.post_data('auth/recover', {'username': self.username})\n        # THEN check that we have received a password recovery token from the server\n        self.assertIsInstance(body['token'], str)\n\n    def test_invalid_reset_password(self):\n        # GIVEN an existing user\n        self.given_any_user()\n\n        # WHEN attempting a password reset with invalid bodies\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'username': 1},\n            {'username': 'foobar', 'token': 1},\n            {'username': 'foobar', 'token': 'some'},\n            {'username': 'foobar', 'token': 'some', 'password': 1},\n            {'username': 'foobar', 'token': 'some', 'password': 'short'},\n            {'username': 'foobar', 'token': 'some', 'password': 'short', 'password_repeat': 123},\n            {'username': 'foobar', 'token': 'some', 'password_repeat': 'panda123'}\n        ]\n\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data('auth/reset', invalid_body, expect_http_code=400)\n\n        # WHEN attempting a password reset with an invalid token\n        # THEN receive a forbidden response code from the server\n        self.post_data('auth/reset',\n                       {'username': self.username,\n                        'password': '123456',\n                        'password_repeat': '123456',\n                        'token': 'foobar'},\n                       expect_http_code=401)\n\n    def test_reset_password(self):\n        # GIVEN an existing user\n        self.given_any_user()\n\n        # WHEN attempting a password reset with a valid username & token combination\n        new_password = 'pas1234'\n        recover_token = self.post_data('auth/recover', {'username': self.username})['token']\n        # THEN receive an OK response code from the server\n        self.post_data('auth/reset', {'username': self.username, 'password': new_password,\n                                      'password_repeat': new_password, 'token': recover_token})\n\n        # WHEN attempting a login with the new password\n        # THEN receive an OK response code from the server\n        self.post_data('auth/login', {'username': self.username, 'password': new_password})\n\n        # FINALLY update user's password and attempt login with new password\n        self.user['password'] = new_password\n\n    def test_invalid_public_profile(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # Create a program -> make sure it is not public\n        program = {'code': 'print testing programs creation',\n                   'name': 'program 1',\n                   'level': 1,\n                   'adventure_name': 'default',\n                   'shared': False\n                   }\n        program_id = self.post_data('programs', program)['id']\n\n        # WHEN attempting to create a public profile with invalid bodies\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'image': 123456},\n            {'image': '123'},\n            {'image': '123', 'personal_text': 123},\n            {'image': '123', 'personal_text': 123},\n            {'image': '123', 'personal_text': 123, 'favourite_program': 123},\n            {'image': '123', 'personal_text': 'Welcome to my profile!', 'favourite_program': 123},\n            {'image': '5', 'personal_text': 'Welcome to my profile!', 'favourite_program': 123},\n            {'image': '5', 'personal_text': 'Welcome to my profile!', 'favourite_program': \"abcdefghi\"},\n            {'image': '5', 'personal_text': 'Welcome to my profile!', 'favourite_program': program_id},\n        ]\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data('auth/public_profile', invalid_body, expect_http_code=400)\n\n    def test_public_profile_without_favourite(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        public_profile = {'image': '9', 'personal_text': 'welcome to my profile!'}\n\n        # WHEN creating a new public profile\n        # THEN receive an OK response code from the server\n        self.post_data('auth/public_profile', public_profile, expect_http_code=200)\n\n    def test_public_profile_with_favourite(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # Create a program that is public -> can be set as favourite on the public profile\n        program = {'code': 'print testing programs creation',\n                   'name': 'program 1',\n                   'level': 1,\n                   'adventure_name': 'default',\n                   'shared': True\n                   }\n        program_id = self.post_data('programs', program)['id']\n\n        public_profile = {\n            'image': '9',\n            'personal_text': 'welcome to my profile!',\n            'favourite_program': program_id\n        }\n\n        # WHEN creating a new public profile with favourite program\n        # THEN receive an OK response code from the server\n        self.post_data('auth/public_profile', public_profile, expect_http_code=200)\n\n    def test_destroy_public_profile(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        public_profile = {'image': '9', 'personal_text': 'welcome to my profile!'}\n\n        # WHEN creating a new public profile with favourite program\n        # THEN receive an OK response code from the server\n        self.post_data('auth/public_profile', public_profile, expect_http_code=200)\n\n        # WHEN destroying the public profile\n        # THEN receive an OK response from the server\n        self.post_data('auth/destroy_public', public_profile, expect_http_code=204)\n\n\nclass TestProgram(AuthHelper):\n    def test_invalid_get_programs(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN retrieving own programs but without sending a cookie\n        # THEN receive a forbidden response code from the server\n        self.get_data('programs/list', expect_http_code=401, no_cookie=True)\n\n    def test_get_programs(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN retrieving own programs sending a cookie\n        # THEN receive an OK response code from the server\n        body = self.get_data('programs/list')\n\n        # THEN verify that the server sent a body that is an object of the shape `{programs:[...]}`.\n        self.assertIsInstance(body, dict)\n        self.assertIsInstance(body['programs'], list)\n\n    def test_invalid_create_program(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN attempting to create an invalid program\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'code': 1},\n            {'code': ['1']},\n            {'code': 'hello world'},\n            {'code': 'hello world', 'name': 1},\n            {'code': 'hello world', 'name': 'program 1'},\n            {'code': 'hello world', 'name': 'program 1', 'level': '1'},\n            {'code': 'hello world', 'name': 'program 1', 'level': 1, 'adventure_name': 1},\n        ]\n\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data('programs', invalid_body, expect_http_code=400)\n\n        # WHEN submitting a program without being logged in\n        # THEN receive a forbidden response code from the server\n        self.post_data('programs',\n                       {'code': 'hello world',\n                        'name': 'program 1',\n                        'level': 1,\n                        'shared': False},\n                       expect_http_code=401,\n                       no_cookie=True)\n\n    def test_create_program(self):\n        # GIVEN a new user\n        # (we create a new user to ensure that the user has no programs yet)\n        self.given_fresh_user_is_logged_in()\n\n        # WHEN submitting a valid program\n        program = {\n            'code': 'print testing programs creation',\n            'name': 'program 1',\n            'level': 1,\n            'adventure_name': 'default',\n            'shared': False\n        }\n        # THEN receive an OK response code from the server\n        program = self.post_data('programs', program)\n        # THEN verify that the returned program has both a name and an id\n        self.assertIsInstance(program, dict)\n        self.assertIsInstance(program['id'], str)\n        self.assertIsInstance(program['name'], str)\n\n        # WHEN retrieving programs after saving a program\n        saved_programs = self.get_data('programs/list')['programs']\n        print(saved_programs)\n\n        # THEN verify that the program we just saved is in the list\n        self.assertEqual(len(saved_programs), 1)\n        saved_program = saved_programs[0]\n\n        keys_to_ignore = set([\"achievements\", \"message\", \"share_message\", \"save_info\"])\n        for key in program:\n            # WHEN we create a program an achievement is achieved, being in the response but not the saved_program\n            if key not in keys_to_ignore:\n                self.assertEqual(program.get(key, None), saved_program.get(key, None), f'Difference on key {key}')\n\n    def test_invalid_make_program_public(self):\n        # GIVEN a logged in user\n        self.given_user_is_logged_in()\n\n        # WHEN sharing a program without being logged in\n        # THEN receive a forbidden response code from the server\n        self.post_data('programs/share/123456/False', {'id': '123456'},\n                       expect_http_code=401,\n                       no_cookie=True)\n\n        # WHEN sharing a program that does not exist\n        # THEN receive a not found response code from the server\n        self.post_data('programs/share/123456/0', {'id': '123456'}, expect_http_code=404)\n\n    def test_valid_make_program_public(self):\n        # GIVEN a logged in user with at least one program\n        self.given_user_is_logged_in()\n        program = {\n            'code': 'print testing programs creation',\n            'name': 'program 1',\n            'level': 1,\n            'adventure_name': 'default',\n            'shared': False\n        }\n        program_id = self.post_data('programs', program)['id']\n\n        # WHEN making a program public\n        # THEN receive an OK response code from the server\n        self.post_data('programs/share/' + program_id + '/False', {'id': program_id})\n\n        saved_programs = self.get_data('programs/list')['programs']\n        for program in saved_programs:\n            if program['id'] != program_id:\n                continue\n            # THEN the program must have its `public` field enabled\n            self.assertEqual(program['public'], 1)\n\n        # GIVEN another user\n        self.given_fresh_user_is_logged_in()\n        # WHEN requesting a public program\n        # THEN receive an OK response code from the server\n        self.get_data('hedy/1/' + program_id, expect_http_code=200)\n\n    def test_valid_make_program_private(self):\n        # GIVEN a logged in user with at least one public program\n        self.given_user_is_logged_in()\n        program = {\n            'code': 'print testing programs creation',\n            'name': 'program 1',\n            'level': 1,\n            'adventure_name': 'default',\n            'shared': False\n        }\n        program_id = self.post_data('programs', program)['id']\n        self.post_data('programs/share/' + program_id + '/0', {'id': program_id})\n\n        # WHEN making a program private\n        # THEN receive an OK response code from the server\n        self.post_data('programs/share/' + program_id + '/False', {'id': program_id})\n\n        saved_programs = self.get_data('programs/list')['programs']\n        for program in saved_programs:\n            if program['id'] != program_id:\n                continue\n            # THEN the program must have a '0' value for Public\n            self.assertEqual(program['public'], 0)\n\n        # GIVEN another user\n        self.given_fresh_user_is_logged_in()\n        # WHEN requesting a public program\n        # THEN receive a not found response code from the server\n        self.get_data('hedy/1/' + program_id, expect_http_code=404)\n\n    def test_invalid_delete_program(self):\n        # GIVEN a logged in user with at least one program\n        self.given_user_is_logged_in()\n        program = {\n            'code': 'print testing programs creation',\n            'name': 'program 1',\n            'level': 1,\n            'adventure_name': 'default',\n            'shared': False\n        }\n        self.post_data('programs', program)['id']\n        program_id = '123456'\n\n        # WHEN deleting a program that does not exist\n        # THEN receive a not found response code from the server\n        self.post_data('programs/delete/', {'id': program_id}, expect_http_code=404)\n\n    def test_valid_delete_program(self):\n        # GIVEN a logged in user with at least one program\n        self.given_user_is_logged_in()\n        program = {\n            'code': 'print testing programs creation',\n            'name': 'program 1',\n            'level': 1,\n            'adventure_name': 'default',\n            'shared': False\n        }\n        program_id = self.post_data('programs', program)['id']\n\n        # WHEN deleting a program\n        # THEN receive an OK response code from the server\n        self.post_data('programs/delete/', {'id': program_id}, return_headers=True)\n\n        saved_programs = self.get_data('programs/list')['programs']\n        for program in saved_programs:\n            # THEN the program should not be any longer in the list of programs\n            self.assertNotEqual(program['id'], program_id)\n\n    def test_destroy_account_with_programs(self):\n        # GIVEN a logged in user with at least one program\n        self.given_user_is_logged_in()\n        program = {\n            'code': 'print testing programs creation',\n            'name': 'program 1',\n            'level': 1,\n            'adventure_name': 'default',\n            'shared': False\n        }\n        self.post_data('programs', program)['id']\n\n        # WHEN deleting the user account\n        # THEN receive an OK response code from the server\n        self.destroy_current_user()\n\n\nclass TestClasses(AuthHelper):\n    def test_invalid_create_class(self):\n        # GIVEN a new user\n        # (we create a new user to ensure that the user has no teacher permissions yet)\n        self.given_fresh_user_is_logged_in()\n\n        # WHEN creating a class without teacher permissions\n        # THEN receive a forbidden response code from the server\n        self.post_data('class', {'name': 'class1'}, expect_http_code=401)\n\n        # WHEN marking the user as teacher\n        self.make_current_user_teacher()\n\n        # GIVEN a user with teacher permissions\n\n        # WHEN attempting to create a class with an invalid body\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'name': 1},\n            {'name': ['foobar']}\n        ]\n\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data('class', invalid_body, expect_http_code=400)\n\n    def test_create_class(self):\n        # GIVEN a user with teacher permissions\n        # (we create a new user to ensure that the user has no classes yet)\n        self.given_fresh_teacher_is_logged_in()\n\n        # WHEN retrieving the list of classes\n        class_list = self.get_data('classes')\n\n        # THEN receive a body containing an empty list\n        self.assertIsInstance(class_list, list)\n        self.assertEqual(len(class_list), 0)\n\n        # WHEN creating a class\n        # THEN receive an OK response code with the server\n        self.post_data('class', {'name': 'class1'})\n\n        # GIVEN a class already saved\n        # WHEN retrieving the list of classes\n        class_list = self.get_data('classes')\n        # THEN receive a body containing an list with one element\n        self.assertEqual(len(class_list), 1)\n\n        # THEN validate the fields of the class\n        Class = class_list[0]\n        self.assertIsInstance(Class, dict)\n        self.assertIsInstance(Class['id'], str)\n        self.assertIsInstance(Class['date'], int)\n        self.assertIsInstance(Class['link'], str)\n        self.assertEqual(Class['name'], 'class1')\n        self.assertIsInstance(Class['students'], list)\n        self.assertEqual(len(Class['students']), 0)\n        self.assertEqual(Class['teacher'], self.username)\n\n        # WHEN retrieving the class\n        # THEN receive an OK response code from the server\n        Class = self.get_data('for-teachers/class/' + Class['id'])\n\n        # THEN validate the fields of the class\n        self.assertIsInstance(Class, dict)\n        self.assertIsInstance(Class['id'], str)\n        self.assertIsInstance(Class['link'], str)\n        self.assertEqual(Class['name'], 'class1')\n        self.assertIsInstance(Class['students'], list)\n        self.assertEqual(len(Class['students']), 0)\n\n    def test_invalid_update_class(self):\n        # GIVEN a user with teacher permissions and a class\n        self.given_teacher_is_logged_in()\n        self.post_data('class', {'name': 'class1'})\n        Class = self.get_data('classes')[0]\n\n        # WHEN attempting to update a class with no cookie\n        # THEN receive a forbidden status code from the server\n        self.post_data('class/' + Class['id'],\n                       {'name': 'class2'},\n                       expect_http_code=401,\n                       put_data=True,\n                       no_cookie=True)\n\n        # WHEN attempting to update a class that does not exist\n        # THEN receive a not found status code from the server\n        self.post_data('class/foo', {'name': 'class2'}, expect_http_code=404, put_data=True)\n\n        # WHEN attempting to update a class with an invalid body\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'name': 1},\n            {'name': ['foobar']}\n        ]\n\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data(\n                'class/' + Class['id'],\n                invalid_body,\n                expect_http_code=400,\n                put_data=True)\n\n    def test_update_class(self):\n        # GIVEN a user with teacher permissions and a class\n        self.given_teacher_is_logged_in()\n        self.post_data('class', {'name': 'class1'})\n        Class = self.get_data('classes')[0]\n\n        # WHEN attempting to update a class\n        # THEN receive an OK status code from the server\n        self.post_data('class/' + Class['id'], {'name': 'class2'}, put_data=True)\n\n        # WHEN retrieving the class\n        # THEN receive an OK response code from the server\n        Class = self.get_data('for-teachers/class/' + Class['id'])\n\n        # THEN the name of the class should be updated\n        self.assertEqual(Class['name'], 'class2')\n\n    def test_copy_class(self):\n        # GIVEN a user with teacher permissions and a class\n        self.given_teacher_is_logged_in()\n        self.post_data('class', {'name': 'class1'})\n        Class = self.get_data('classes')[0]\n\n        # WHEN attempting to duplicate a class\n        # THEN receive an OK status code from the server\n        self.post_data('/duplicate_class', {'id': Class['id'], 'name': 'class2'})\n\n    def test_join_class(self):\n        # GIVEN a teacher\n        self.given_teacher_is_logged_in()\n\n        # GIVEN a class\n        self.post_data('class', {'name': 'class1'})\n        Class = self.get_data('classes')[0]\n\n        # WHEN attempting to join a class without being logged in\n        # THEN receive a forbidden status code from the server\n        self.post_data('class/join', {'id': Class['id']}, no_cookie=True, expect_http_code=403)\n\n        # GIVEN a student (user without teacher permissions)\n        self.given_fresh_user_is_logged_in()\n\n        # WHEN retrieving the short link of a class\n        # THEN receive a redirect to `class/ID/join/LINK`\n        body = self.get_data('hedy/l/' + Class['link'], expect_http_code=302)\n        if not re.search(HOST + 'class/' + Class['id'] + '/prejoin/' + Class['link'], body):\n            raise Exception('Invalid or missing redirect link')\n\n        # WHEN joining a class\n        # THEN we receive a 200 code\n        body = self.post_data('class/join', {'id': Class['id']}, expect_http_code=200)\n\n        # WHEN getting own profile after joining a class\n        profile = self.get_data('profile')\n        # THEN verify that the class is there and contains the right fields\n        self.assertIsInstance(profile['student_classes'], list)\n        self.assertEqual(len(profile['student_classes']), 1)\n        student_class = profile['student_classes'][0]\n        self.assertIsInstance(student_class, dict)\n        self.assertEqual(student_class['id'], Class['id'])\n        self.assertEqual(student_class['name'], Class['name'])\n\n    def test_see_students_in_class(self):\n        # GIVEN a teacher (no classes yet)\n        self.given_fresh_teacher_is_logged_in()\n        teacher = self.user\n        # GIVEN a class\n        self.post_data('class', {'name': 'class1'})\n        Class = self.get_data('classes')[0]\n\n        # GIVEN a student (user without teacher permissions) that has joined the class\n        self.given_fresh_user_is_logged_in()\n        student = self.user\n        self.post_data('class/join', {'id': Class['id']}, expect_http_code=200)\n\n        # GIVEN the aforementioned teacher\n        self.switch_user(teacher)\n\n        # WHEN retrieving the class with a student in it\n        Class_data = self.get_data('for-teachers/class/' + Class['id'])\n        # THEN the class should contain a student with valid fields\n        self.assertEqual(len(Class_data['students']), 1)\n        class_student = Class_data['students'][0]\n        self.assertEqual(class_student['adventures_tried'], 0)\n        self.assertEqual(class_student['programs'], 0)\n        self.assertEqual(class_student['number_of_errors'], 0)\n        self.assertEqual(class_student['successful_runs'], 0)\n        self.assertEqual(class_student['username'], student['username'])\n\n        # WHEN retrieving the student's programs\n        # THEN receive an OK response code from the server\n        self.get_data('programs?user=' + student['username'], expect_http_code=200)\n\n    def test_see_students_with_programs_in_class(self):\n        # GIVEN a teacher (no classes yet)\n        self.given_fresh_teacher_is_logged_in()\n        teacher = self.user\n        # GIVEN a class\n        self.post_data('class', {'name': 'class1'})\n        Class = self.get_data('classes')[0]\n\n        # GIVEN a student (user without teacher permissions) that has joined the\n        # class and has a public program\n        self.given_fresh_user_is_logged_in()\n        self.post_data('class/join', {'id': Class['id']}, expect_http_code=200)\n        # GIVEN a student with two programs, one public and one private\n        public_program = {\n            'code': 'print testing programs creation',\n            'name': 'program 1',\n            'level': 1,\n            'adventure_name': 'default',\n            'shared': False\n        }\n        public_program_id = self.post_data('programs', public_program)['id']\n        self.post_data('programs/share/' + public_program_id + '/False', {'id': public_program_id})\n        private_program = {\n            'code': 'print testing programs creation',\n            'name': 'program 2',\n            'level': 2,\n            'adventure_name': 'default',\n            'shared': False\n        }\n        self.post_data('programs', private_program)['id']\n\n        # GIVEN the aforementioned teacher\n        self.switch_user(teacher)\n\n        # WHEN retrieving the class with a student in it\n        Class_data = self.get_data('for-teachers/class/' + Class['id'])\n        # THEN the class should contain a student with valid fields\n        self.assertEqual(len(Class_data['students']), 1)\n\n\nclass TestCustomizeClasses(AuthHelper):\n    def test_not_allowed_customization(self):\n        # GIVEN a new user without teacher permissions\n        self.given_fresh_user_is_logged_in()\n\n        # We create a fake class_id as the access should be denied before checking\n        # if the class exists\n        class_id = \"123\"\n\n        # WHEN customizing a class without being a teacher\n        # THEN receive a forbidden response code from the server\n        self.post_data('for-teachers/customize-class/' + class_id, {}, expect_http_code=401)\n\n    def test_invalid_customization(self):\n        # GIVEN a user with teacher permissions\n        # (we create a new user to ensure that the user has no classes yet)\n        self.given_fresh_teacher_is_logged_in()\n\n        # WHEN creating a class\n        # THEN receive an OK response code with the server\n        # AND retrieve the class_id from the first class of your classes\n        self.post_data('class', {'name': 'class1'})\n        class_id = self.get_data('classes')[0].get('id')\n        self.get_data('for-teachers/customize-class/' + class_id)\n        # WHEN attempting to create an invalid customization\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'levels': 1},\n            {'levels': [1, 2, 3]},\n            {'levels': [1, 2, 3], 'other_settings': {}},\n            {'levels': [1, 2, 3], 'opening_dates': []},\n            {'opening_dates': {}},\n        ]\n\n        for invalid_body in invalid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data(\n                'for-teachers/customize-class/' +\n                class_id,\n                invalid_body,\n                expect_http_code=400)\n\n        # WHEN customizing a class that doesn't exist\n        # THEN receive a not found response code from the server\n        self.post_data('for-teachers/customize-class/123' + class_id, {}, expect_http_code=404)\n\n    def test_valid_customization(self):\n        # GIVEN a user with teacher permissions\n        # (we create a new user to ensure that the user has no classes yet)\n        self.given_fresh_teacher_is_logged_in()\n\n        # WHEN creating a class\n        # THEN receive an OK response code with the server\n        # AND retrieve the class_id from the first class of your classes\n        self.post_data('class', {'name': 'class1'})\n        class_id = self.get_data('classes')[0].get('id')\n        self.get_data('for-teachers/customize-class/' + class_id)\n        valid_bodies = [\n            {\n                'levels': [],\n                'opening_dates': {},\n                'other_settings': [],\n                'level_thresholds': {}\n            },\n            {\n                'levels': ['1'],\n                'opening_dates': {'1': '2022-03-16'},\n                'other_settings': [],\n                'level_thresholds': {}\n            },\n            {\n                'levels': ['1', '2', '3'],\n                'opening_dates': {'1': '', '2': '', '3': ''},\n                'other_settings': [],\n                'level_thresholds': {}\n            },\n            {\n                'levels': ['1', '2', '3'],\n                'opening_dates': {'1': '', '2': '', '3': ''},\n                'teacher_adventures': [],\n                'other_settings': ['developers_mode', 'hide_cheatsheet'],\n                'level_thresholds': {}\n            },\n        ]\n\n        for valid_body in valid_bodies:\n            # THEN receive an invalid response code from the server\n            self.post_data(\n                'for-teachers/customize-class/' +\n                class_id,\n                valid_body,\n                expect_http_code=200)\n\n    def test_remove_customization(self):\n        # GIVEN a user with teacher permissions\n        # (we create a new user to ensure that the user has no classes yet)\n        self.given_fresh_teacher_is_logged_in()\n\n        # WHEN creating a class\n        # THEN receive an OK response code with the server\n        # AND retrieve the class_id from the first class of your classes\n        self.post_data('class', {'name': 'class1'})\n        class_id = self.get_data('classes')[0].get('id')\n\n        # WHEN creating class customizations\n        # THEN receive an OK response code with the server\n        self.get_data('for-teachers/customize-class/' + class_id, expect_http_code=200)\n        # WHEN deleting class customizations\n        # THEN receive an OK response code with the server\n        self.post_data('for-teachers/restore-customizations?level=1', {}, expect_http_code=200)\n\n\nclass TestCustomAdventures(AuthHelper):\n    def test_not_allowed_create_adventure(self):\n        # GIVEN a new user without teacher permissions\n        self.given_fresh_user_is_logged_in()\n\n        # WHEN attempting to start creating a valid adventure\n        # THEN receive a forbidden response code from the server\n        self.get_data('for-teachers/customize-adventure', expect_http_code=401)\n\n    def test_create_adventure(self):\n        # GIVEN a new teacher\n        self.given_fresh_teacher_is_logged_in()\n\n        # WHEN attempting to start creating a valid adventure\n        # THEN receive an OK response with the server\n        self.get_data('for-teachers/customize-adventure', expect_http_code=302)\n\n    def test_invalid_view_adventure(self):\n        # GIVEN a new user\n        self.given_fresh_user_is_logged_in()\n\n        # WHEN attempting to view a custom adventure\n        # THEN receive a 403 error from the server\n        self.get_data('for-teachers/customize-adventure/view/123', expect_http_code=401)\n\n        # GIVEN a new teacher\n        self.given_fresh_teacher_is_logged_in()\n\n        # WHEN attempting to view a custom adventure that doesn't exist\n        # THEN receive a 404 error from the server\n        self.get_data('for-teachers/customize-adventure/view/123', expect_http_code=404)\n\n    def test_invalid_adventure_id(self):\n        # WHEN attempting to view a custom adventure that doesn't exist\n        # THEN receive a 404 error from the server\n        self.get_data('for-teachers/customize-adventure/INVALID_NONEXISTING_ID', expect_http_code=401)\n\n    def test_invalid_update_adventure(self):\n        # GIVEN a new teacher\n        self.given_fresh_teacher_is_logged_in()\n\n        # WHEN attempting to updating an adventure with invalid data\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {\n                'id': 123\n            },\n            {\n                'id': 123,\n                'name': 123\n            },\n            {\n                'id': '123',\n                'name': 123\n            },\n            {\n                'id': '123',\n                'name': 123,\n                'classes': ['Class1']\n            },\n            {\n                'id': '123',\n                'name': 123,\n                'classes': ['Class1'],\n                'level': 5\n            },\n            {\n                'id': '123',\n                'name': 123,\n                'classes': ['Class1'],\n                'level': 5,\n                'content': 123\n            },\n            {\n                'id': \"some id\",\n                'name': 'panda',\n                'classes': ['Class1'],\n                'level': '5',\n                'content': 'too short!'\n            },\n            {\n                'id': \"some id\",\n                'name': 'panda',\n                'classes': ['Class1'],\n                'level': '5',\n                'content': 'This is just long enough!',\n                'public': 'panda',\n                'language': None,\n            },\n        ]\n\n        # THEN receive a 400 error from the server\n        for invalid_body in invalid_bodies:\n            self.post_data('for-teachers/customize-adventure', invalid_body, expect_http_code=400)\n\n    def test_valid_update_adventure(self):\n        # GIVEN a new teacher\n        self.given_fresh_teacher_is_logged_in()\n\n        self.post_data('class', {'name': 'class1'})\n        class_id = self.get_data('classes')[0].get('id')\n        # WHEN attempting to update an adventure with a valid body\n        # THEN receive an OK response from the server\n        body = {\n            'id': \"123\",\n            'name': 'test_adventure',\n            'classes': [class_id],\n            'levels': ['1', ],\n            'content': 'This is just long enough!',\n            'public': 1,\n            'language': 'en', }\n        self.post_data('for-teachers/customize-adventure', body, expect_http_code=200)\n\n    def test_destroy_adventure(self):\n        # GIVEN a user with teacher permissions\n        # (we create a new user to ensure that the user has no classes yet)\n        self.given_fresh_teacher_is_logged_in()\n\n        # WHEN attempting to create a valid adventure\n        # THEN receive an OK response from the server\n        adventure_id = self.post_data('for-teachers/create-adventure', {}, expect_http_code=200)\n\n        # WHEN attempting to remove the adventure\n        # THEN receive an OK response from the server\n        self.delete_data('for-teachers/customize-adventure/' +\n                         adventure_id, expect_http_code=200)\n\n\nclass TestMultipleAccounts(AuthHelper):\n    def test_not_allowed_create_accounts(self):\n        # GIVEN a new user without teacher permissions\n        self.given_fresh_user_is_logged_in()\n\n        # WHEN trying to create multiple accounts\n        # THEN receive a forbidden response code from the server\n        self.post_data('for-teachers/create-accounts', {}, expect_http_code=401)\n\n    def test_invalid_create_accounts(self):\n        # GIVEN a new teacher\n        self.given_fresh_teacher_is_logged_in()\n\n        # WHEN attempting to create invalid accounts\n        invalid_bodies = [\n            '',\n            [],\n            {},\n            {'accounts': []},\n            {'accounts': [{'username': 123}]},\n            {'accounts': [{'username': 'panda', 'password': 123}]},\n            {'accounts': [{'username': '@', 'password': 'test123'}]},\n            {'accounts': [{'username': 'panda', 'password': 'test123'}, {'username': 'panda2', 'password': 123}]}\n        ]\n\n        for invalid_body in invalid_bodies:\n            self.post_data('for-teachers/create-accounts', invalid_body, expect_http_code=400)\n\n    def test_create_accounts(self):\n        # GIVEN a new teacher with a new class\n        self.given_fresh_teacher_is_logged_in()\n        class_ = self.post_data('class', {'name': 'class1'})\n\n        # WHEN attempting to create a valid adventure\n        # THEN receive an OK response with the server\n        body = {\n            'class': class_['id'],\n            'generate_passwords': False,\n            'accounts': '''\n                platypus;test123\n                platypus2;test321\n            '''\n        }\n        self.post_data('for-teachers/create-accounts', body, expect_http_code=200)\n\n\nclass TestHedyPage(AuthHelper):\n    def test_valid_parsons(self):\n        self.given_fresh_user_is_logged_in()\n\n        # WHEN attempting a parsons program\n        # THEN should store attempt and receive OK from server\n        body = {\n            'id': utils.random_id_generator(12),\n            'username': self.user['username'],\n            'level': 1,\n            'exercise': '1',\n            'order': ['1', '2', '3', '4'],\n            'correct': '1',\n            'timestamp': utils.timems()\n        }\n\n        self.post_data('store_parsons_order', body, expect_http_code=204)\n\n    def test_invalid_parsons(self):\n        self.given_fresh_user_is_logged_in()\n\n        invalid_bodies = [\n            {},\n            {\n                'id': str(utils.random_id_generator(12)),\n                'username': self.user,\n                'level': '1',\n                'exercise': '1',\n                'order': ['1', '2', '3', '4'],\n                'correct': '1',\n                'timestamp': utils.timems()\n            },\n            {\n                'id': str(utils.random_id_generator(12)),\n                'username': self.user,\n                'level': '1',\n                'exercise': '1',\n                'order': [1, 2, 3, 4],\n                'correct': '1',\n                'timestamp': utils.timems()\n            },\n            {\n                'id': str(utils.random_id_generator(12)),\n                'username': self.user,\n                'level': '1',\n                'exercise': 1,\n                'order': ['1', '2', '3', '4'],\n                'correct': '1',\n                'timestamp': utils.timems()\n            }\n        ]\n\n        for body in invalid_bodies:\n            self.post_data('store_parsons_order', body, expect_http_code=400)\n\n\n# *** CLEANUP OF USERS CREATED DURING THE TESTS ***\n\n\ndef tearDownModule():\n    auth_helper = AuthHelper()\n    auth_helper.setUp()\n    for username in USERS.copy():\n        auth_helper.given_specific_user_is_logged_in(username)\n        auth_helper.destroy_current_user()\n\n\ndef remove_keys(dct, *keys):\n    return {k: v for k, v in dct.items() if k not in keys}\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracking_data.csv",
          "type": "blob",
          "size": 7.99609375,
          "content": "class_id,username,is_teacher,gender,time,id,page\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707758742231,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707758745283,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707758751760,create_adventure_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707758761319,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707758767936,create_adventure_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707759964378,debug_button,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707759968358,developers_toggle,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707759976613,developers_toggle,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707759983411,speak_dropdown,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760351639,debug_button,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760354953,developers_toggle,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760357680,debug_button,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760368596,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760372431,create_adventure_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760380436,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760786705,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760786705,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760786705,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760828106,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760839792,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760849625,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760868867,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760868867,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760952966,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760967220,debug_button,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,true,f,1707760970471,developers_toggle,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707813706053,debug_button,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707813876435,developers_toggle,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707813925847,public-adventures-link,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814442678,,/public-adventures,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814448680,,/public-adventures,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814454683,,/public-adventures,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814478183,,/public-adventures,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814484188,,/public-adventures,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814490190,,/public-adventures,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814501305,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814505857,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814511866,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814517856,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814523854,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814529858,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814535855,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814541855,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814547858,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814553850,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814562856,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707814568854,,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707816553195,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828011268,go_back_to_teacher_page_button,/for-teachers/class/5c39c2a936f24db1a4935c52fab77cd7,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828146937,download-slides-2,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828238144,live_stats_button,/for-teachers/class/5c39c2a936f24db1a4935c52fab77cd7,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828280481,grid_overview_button,/for-teachers/class/5c39c2a936f24db1a4935c52fab77cd7,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828291922,to_class_button,/grid_overview/class/5c39c2a936f24db1a4935c52fab77cd7,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828337275,speak_dropdown,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828550350,debug_button,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828556784,speak_dropdown,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828599610,debug_button,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828600294,developers_toggle,/hedy,on\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707828603276,speak_dropdown,/hedy,Google UK English Male\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1707829664302,create_adventure_button,/for-teachers,\r\n,student2,False,m,1707902853952,level_button_4,/hedy,\r\n,student2,False,m,1707902873235,debug_button,/hedy/2,\r\n,student2,False,m,1707902880146,speak_dropdown,/hedy/2,\r\n,student2,False,m,1707902886973,speak_dropdown,/hedy/2,urn:moz-tts:speechd:English%20(Lancaster)+Denis?en-GB-X-GBCLAN\r\n,student2,False,m,1707902895896,speak_dropdown,/hedy/2,urn:moz-tts:speechd:English%20(Lancaster)+Denis?en-GB-X-GBCLAN\r\n,student2,False,m,1707902897469,speak_dropdown,/hedy/2,urn:moz-tts:speechd:English%20(America)+Robert?en-US\r\n,student2,False,m,1707902899659,speak_dropdown,/hedy/2,urn:moz-tts:speechd:English%20(America)+Robert?en-US\r\n,student2,False,m,1707902901928,speak_dropdown,/hedy/2,urn:moz-tts:speechd:English%20(America)+Miguel?en-US\r\n,student2,False,m,1707902904298,speak_dropdown,/hedy/2,urn:moz-tts:speechd:English%20(America)+Miguel?en-US\r\n,student2,False,m,1707902907167,speak_dropdown,/hedy/2,urn:moz-tts:speechd:English%20(Scotland)+Steph?en-GB-SCOTLAND\r\n,student2,False,m,1707902920635,language-dropdown,/hedy/2,\r\n,user1,False,f,1707903117016,speak_dropdown,/hedy,\r\n,user1,False,f,1707903117680,speak_dropdown,/hedy,\r\n,user1,False,f,1707903144457,speak_dropdown,/hedy,\r\n,user1,False,f,1707903146236,speak_dropdown,/hedy,urn:moz-tts:speechd:English%20(America)+Pedro?en-US\r\n,user1,False,f,1707903168066,debug_button,/hedy/01c1af908479409390cd0c4dc3444eec/view,\r\n,teacher4,True,m,1707906066975,explore_page_level,/explore,2\r\n,teacher4,True,m,1707906069847,explore_page_adventure,/explore,add_remove_command\r\n,teacher4,True,m,1707906136249,public-adventures-link,/for-teachers,\r\n,teacher4,True,m,1707906163415,debug_button,/hedy/01c1af908479409390cd0c4dc3444eec/view,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher4,True,m,1707906194736,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher4,True,m,1707906202489,create_class_button,/for-teachers,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher4,True,m,1707906294261,live_stats_button,/for-teachers/class/5c39c2a936f24db1a4935c52fab77cd7,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher4,True,m,1707906298799,go_back_to_teacher_page_button,/for-teachers/class/5c39c2a936f24db1a4935c52fab77cd7,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1708426173336,developers_toggle,/hedy,on\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1708426184520,debug_button,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1708426280874,debug_button,/hedy,\r\n5c39c2a936f24db1a4935c52fab77cd7,teacher1,True,f,1708426281951,developers_toggle,/hedy,on\r\n"
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 2.9404296875,
          "content": "{\n  \"compilerOptions\": {\n    \"baseUrl\": \"http://localhost:8080/\",\n    /* Projects */\n    \"incremental\": true,                              /* Enable incremental compilation */\n    \"sourceMap\": false,\n    /* Language and Environment */\n    \"target\": \"ES6\",\n    \"module\": \"CommonJS\",\n    \"lib\": [\"es2019\", \"dom\", \"dom.iterable\"],\n    \"esModuleInterop\": true,\n\n    /* Type Checking */\n    \"strict\": true,                                      /* Enable all strict type-checking options. */\n    \"noImplicitAny\": true,                            /* Enable error reporting for expressions and declarations with an implied `any` type.. */\n    \"strictNullChecks\": true,                         /* When type checking, take into account `null` and `undefined`. */\n    \"strictFunctionTypes\": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */\n    \"strictBindCallApply\": true,                      /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */\n    \"strictPropertyInitialization\": true,             /* Check for class properties that are declared but not set in the constructor. */\n    \"noImplicitThis\": true,                           /* Enable error reporting when `this` is given the type `any`. */\n    // \"useUnknownInCatchVariables\": true,               /* Type catch clause variables as 'unknown' instead of 'any'. */\n    \"alwaysStrict\": true,                             /* Ensure 'use strict' is always emitted. */\n    \"noUnusedLocals\": true,                           /* Enable error reporting when a local variables aren't read. */\n    \"noUnusedParameters\": true,                       /* Raise an error when a function parameter isn't read */\n    // \"exactOptionalPropertyTypes\": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */\n    \"noImplicitReturns\": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */\n    \"noFallthroughCasesInSwitch\": true,               /* Enable error reporting for fallthrough cases in switch statements. */\n    // \"noUncheckedIndexedAccess\": true,                 /* Include 'undefined' in index signature results */\n    // \"noImplicitOverride\": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */\n    \"noPropertyAccessFromIndexSignature\": true,       /* Enforces using indexed accessors for keys declared using an indexed type */\n    // \"allowUnusedLabels\": true,                        /* Disable error reporting for unused labels. */\n    // \"allowUnreachableCode\": true,                     /* Disable error reporting for unreachable code. */\n    \"resolveJsonModule\": true,\n    /* Completeness */\n    \"skipDefaultLibCheck\": true,\n    \"skipLibCheck\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"downlevelIteration\": false  /* Required by charts.js */\n  }\n}\n"
        },
        {
          "name": "utils.py",
          "type": "blob",
          "size": 15.3662109375,
          "content": "from flask import session, request, make_response\nfrom website.flask_helpers import render_template\nfrom bs4 import BeautifulSoup\nimport contextlib\nimport datetime\nimport time\nimport functools\nimport os\nfrom io import StringIO\nfrom os import path\nimport re\nimport string\nimport random\nimport uuid\nimport unicodedata\nimport sys\nimport traceback\nimport collections\n\nfrom email_validator import EmailNotValidError, validate_email\nfrom flask_babel import format_date, format_datetime, format_timedelta\nfrom website.flask_helpers import gettext_with_fallback as gettext\nfrom ruamel import yaml\nimport commonmark\n\ncommonmark_parser = commonmark.Parser()\ncommonmark_renderer = commonmark.HtmlRenderer()\n\nIS_WINDOWS = os.name == 'nt'\n\nprefixes_dir = path.join(path.dirname(__file__), 'prefixes')\n\n# Define code that will be used if some turtle command is present\nwith open(f'{prefixes_dir}/turtle.py', encoding='utf-8') as f:\n    TURTLE_PREFIX_CODE = f.read()\n\n# Preamble that will be used for non-Turtle programs\n# numerals list generated from: https://replit.com/@mevrHermans/multilangnumerals\nwith open(f'{prefixes_dir}/normal.py', encoding='utf-8') as f:\n    NORMAL_PREFIX_CODE = f.read()\n\n# Define code that will be used if a pressed command is used\nwith open(f'{prefixes_dir}/pressed.py', encoding='utf-8') as f:\n    PRESSSED_PREFIX_CODE = f.read()\n\n# Define code that will be used if music code is used\nwith open(f'{prefixes_dir}/music.py', encoding='utf-8') as f:\n    MUSIC_PREFIX_CODE = f.read()\n\n\nclass Timer:\n    \"\"\"A quick and dirty timer.\"\"\"\n\n    def __init__(self, name):\n        self.name = name\n\n    def __enter__(self):\n        self.start = time.time()\n\n    def __exit__(self, type, value, tb):\n        delta = time.time() - self.start\n        print(f'{self.name}: {delta}s')\n\n\ndef timer(fn):\n    \"\"\"Decoractor for fn.\"\"\"\n    @functools.wraps(fn)\n    def wrapper(*args, **kwargs):\n        with Timer(fn.__name__):\n            return fn(*args, **kwargs)\n    return wrapper\n\n\ndef timems():\n    \"\"\"Return the UNIX timestamp in milliseconds.\n\n    You only need to use this function if you are doing performance-sensitive\n    timing. Otherwise, `times` (which returns second-resolution) is probably\n    a better choice.\n    \"\"\"\n    return int(round(time.time() * 1000))\n\n\ndef times():\n    \"\"\"Return the UNIX timestamp in seconds.\n\n    If you need to store a date/time in the database, prefer this function.\n    \"\"\"\n    return int(round(time.time()))\n\n\nDEBUG_MODE = False\n\n\ndef is_debug_mode():\n    \"\"\"Return whether or not we're in debug mode.\n\n    We do more expensive things that are better for development in debug mode.\n    \"\"\"\n    return DEBUG_MODE\n\n\ndef is_offline_mode():\n    \"\"\"Return whether or not we're in offline mode.\n\n    Offline mode is a special build of Hedy that teachers can download and run\n    on their own computers.\n    \"\"\"\n    return getattr(sys, 'frozen', False) and offline_data_dir() is not None\n\n\ndef offline_data_dir():\n    \"\"\"Return the data directory in offline mode.\"\"\"\n    return getattr(sys, '_MEIPASS')\n\n\ndef set_debug_mode(debug_mode):\n    \"\"\"Switch debug mode to given value.\"\"\"\n    global DEBUG_MODE\n    DEBUG_MODE = debug_mode\n\n\ndef rt_yaml():\n    y = yaml.YAML(typ='rt')\n    # Needs to match the Weblate YAML settings for all components\n    y.indent = 4\n    y.preserve_quotes = True\n    y.width = 30000\n    return y\n\n\ndef load_yaml_rt(filename):\n    \"\"\"Load YAML with the round trip loader.\"\"\"\n    try:\n        rt = rt_yaml()\n        with open(filename, 'r', encoding='utf-8') as f:\n            return rt.load(f)\n    except IOError:\n        return {}\n\n\ndef dump_yaml_rt(data):\n    \"\"\"Dump round-tripped YAML.\"\"\"\n    out = StringIO()\n    rt_yaml().dump(data, out)\n    return out.getvalue()\n\n\ndef slash_join(*args):\n    ret = []\n    for arg in args:\n        if not arg:\n            continue\n\n        if ret and not ret[-1].endswith('/'):\n            ret.append('/')\n        ret.append(arg.lstrip('/') if ret else arg)\n    return ''.join(ret)\n\n\ndef is_testing_request(request):\n    \"\"\"Whether the current request is a test request.\n\n    Test requests are performed by the e2e tests and have special privileges\n    to do things other requests cannot do.\n\n    Test requests are only allowed on non-Heroku instances.\n    \"\"\"\n    return not is_heroku() and bool('X-Testing' in request.headers and request.headers['X-Testing'])\n\n\ndef is_redesign_enabled():\n    return REDESIGN_2025_ENABLED_BY_DEFAULT or is_opted_in_to_preview()\n\n\ndef is_opted_in_to_preview():\n    opt = request.args.get(\"tryit\", False)\n    return False if opt in ['0', 'false', 'no'] else bool(opt)\n\n\n# Flip this to True when we are ready to release\nREDESIGN_2025_ENABLED_BY_DEFAULT = False\n\n\ndef extract_bcrypt_rounds(hash):\n    return int(re.match(r'\\$2b\\$\\d+', hash)[0].replace('$2b$', ''))\n\n\ndef isoformat(timestamp):\n    \"\"\"Turn a timestamp into an ISO formatted string.\"\"\"\n    dt = datetime.datetime.utcfromtimestamp(timestamp)\n    return dt.isoformat() + 'Z'\n\n\ndef is_production():\n    \"\"\"Whether we are serving production traffic.\"\"\"\n    return os.getenv('IS_PRODUCTION', '') != ''\n\n\ndef is_heroku():\n    \"\"\"Whether we are running on Heroku.\n\n    Only use this flag if you are making a decision that really has to do with\n    Heroku-based hosting or not.\n\n    If you are trying to make a decision whether something needs to be done\n    \"for real\" or not, prefer using:\n\n    - `is_production()` to see if we're serving customer traffic and trying to\n      optimize for safety and speed.\n    - `is_debug_mode()` to see if we're on a developer machine and we're trying\n      to optimize for developer productivity.\n\n    \"\"\"\n    return os.getenv('DYNO', '') != ''\n\n\ndef version():\n    # \"\"\"Get the version from the Heroku environment variables.\"\"\"\n    if not is_heroku():\n        return 'DEV'\n\n    vrz = os.getenv('HEROKU_RELEASE_CREATED_AT')\n    the_date = datetime.date.fromisoformat(vrz[:10]) if vrz else datetime.date.today()\n\n    commit = os.getenv('HEROKU_SLUG_COMMIT', '????')[0:6]\n    return the_date.strftime('%Y %b %d') + f'({commit})'\n\n\ndef valid_email(s):\n    try:\n        _ = validate_email(s, check_deliverability=False)\n        return True\n    except EmailNotValidError:\n        return False\n\n\n@contextlib.contextmanager\ndef atomic_write_file(filename, mode='wb'):\n    \"\"\"Write to a filename atomically.\n\n    First write to a unique tempfile, then rename the tempfile into\n    place. Use replace instead of rename to make it atomic on windows as well.\n    Use as a context manager:\n\n        with atomic_write_file('file.txt') as f:\n            f.write('hello')\n    \"\"\"\n\n    tmp_file = f'{filename}.{os.getpid()}'\n    with open(tmp_file, mode) as f:\n        yield f\n\n    os.replace(tmp_file, filename)\n\n\n# This function takes a date in milliseconds from the Unix epoch and transforms it into a printable date\n# It operates by converting the date to a string, removing its last 3 digits, converting it back to an int\n# and then invoking the `isoformat` date function on it\ndef mstoisostring(date):\n    return datetime.datetime.fromtimestamp(int(str(date)[:-3])).isoformat()\n\n\ndef string_date_to_date(date):\n    return datetime.datetime.strptime(date, \"%Y-%m-%d\")\n\n\ndef timestamp_to_date(timestamp, short_format=False):\n    try:\n        if short_format:\n            return datetime.datetime.fromtimestamp(int(str(timestamp)))\n        else:\n            return datetime.datetime.fromtimestamp(int(str(timestamp)[:-3]))\n    except BaseException:\n        return None\n\n\ndef delta_timestamp(date, short_format=False):\n    if short_format:\n        delta = datetime.datetime.now() - datetime.datetime.fromtimestamp(int(str(date)))\n    else:\n        delta = datetime.datetime.now() - datetime.datetime.fromtimestamp(int(str(date)[:-3]))\n    return format_timedelta(delta)\n\n\ndef stoisostring(date):\n    return datetime.datetime.fromtimestamp(date)\n\n\ndef localized_date_format(date, short_format=False):\n    # Improve the date by using the Flask Babel library and return timestamp as expected by language\n    if short_format:\n        timestamp = datetime.datetime.fromtimestamp(int(str(date)))\n    else:\n        timestamp = datetime.datetime.fromtimestamp(int(str(date)[:-3]))\n    return format_date(timestamp, format='medium') + \" \" + format_datetime(timestamp, \"H:mm\")\n\n\ndef datetotimeordate(date):\n    print(date)\n    return date.replace(\"T\", \" \")\n\n\n# https://stackoverflow.com/a/2257449\n\n\ndef random_id_generator(\n        size=6,\n        chars=string.ascii_uppercase +\n        string.ascii_lowercase +\n        string.digits):\n    return ''.join(random.choice(chars) for _ in range(size))\n\n\ndef markdown_to_html_tags(markdown):\n    \"\"\"\n    This function takes a Markdown string and returns a list with each of the HTML elements obtained\n    by rendering the Markdown into HTML.\n    \"\"\"\n    _html = commonmark_renderer.render(commonmark_parser.parse(markdown))\n    soup = BeautifulSoup(_html, 'html.parser')\n    return soup.find_all()\n\n\nMarkdownCode = collections.namedtuple('MarkdownCode', ('code', 'info'))\n\n\ndef code_blocks_from_markdown(markdown):\n    \"\"\"\n    Takes a MarkDown string and returns a list of code blocks, along with their metadata.\n\n    Returns pairs of `(code, info)`, where 'info' is the text that appears after the three\n    backticks (usually used to indicate the programming language).\n    \"\"\"\n    md = commonmark_parser.parse(markdown)\n    for node, _ in md.walker():\n        # We will only ever see '_entered == True' for CodeBlock nodes.\n        if node.t == 'code_block':\n            yield MarkdownCode(node.literal.strip(), node.info)\n\n\ndef error_page(error=404, page_error=None, ui_message=None, menu=True, iframe=None, exception=None):\n    if error not in [400, 403, 404, 500, 401]:\n        error = 404\n    default = gettext('default_404')\n    error_image = error\n    if error == 401:\n        default = gettext('default_401')\n        error_image = 403\n    if error == 403:\n        default = gettext('default_403')\n    elif error == 500:\n        default = gettext('default_500')\n\n    hx_request = bool(request.headers.get('Hx-Request'))\n    if hx_request:\n        # For HTMX-request, just return the error as plain text body\n        return make_response(f'{default} {exception}', error)\n\n    if request.accept_mimetypes.accept_json and not request.accept_mimetypes.accept_html:\n        # Produce a JSON response instead of an HTML response\n        return make_response({\"code\": error,\n                              \"error\": default,\n                              \"exception\": traceback.format_exception(type(exception), exception, exception.__traceback__) if exception else None}, error)\n\n    return render_template(\"error-page.html\", menu=menu, error_image=error_image, iframe=iframe,\n                           page_error=page_error or ui_message or default or '', default=default), error\n\n\ndef session_id():\n    \"\"\"Returns or sets the current session ID.\"\"\"\n    if 'session_id' not in session:\n        if os.getenv('IS_TEST_ENV') and 'X-session_id' in request.headers:\n            session['session_id'] = request.headers['X-session_id']\n        else:\n            session['session_id'] = uuid.uuid4().hex\n    return session['session_id']\n\n# https://github.com/python-babel/babel/issues/454\n\n\ndef customize_babel_locale(custom_locales: dict):\n    from babel.core import get_global\n    db = get_global('likely_subtags')\n    for custom_name in custom_locales:\n        db[custom_name] = custom_name\n    import babel.localedata\n\n    o_exists, o_load = babel.localedata.exists, babel.localedata.load\n    if o_exists.__module__ != __name__:\n        def exists(name):\n            name = custom_locales.get(name, name)\n            return o_exists(name)\n\n        def load(name, merge_inherited=True):\n            name = custom_locales.get(name, name)\n            return o_load(name, merge_inherited)\n\n        babel.localedata.exists = exists\n        babel.localedata.load = load\n\n\ndef strip_accents(s):\n    return ''.join(c for c in unicodedata.normalize('NFD', s)\n                   if unicodedata.category(c) != 'Mn')\n\n\ndef base_url():\n    \"\"\"Return the base URL, excluding the leading slash\n\n    Returns either from configuration or otherwise from Flask.\n    \"\"\"\n    url = os.getenv('BASE_URL')\n    if not url:\n        url = request.host_url\n\n    return url if not url.endswith('/') else url[:-1]\n\n\ndef can_edit_class(user, Class):\n    \"\"\"\n    Check if a given user has the permission to edit a class.\n\n    Returns:\n        bool: True if the user has edit permission, False otherwise.\n    \"\"\"\n    return Class[\"teacher\"] == user[\"username\"] or \\\n        any(second_teacher[\"username\"] == user[\"username\"] and second_teacher[\"role\"] == \"teacher\"\n            for second_teacher in Class.get(\"second_teachers\", []))\n\n\ndef get_unanswered_questions(survey, new_questions):\n    unanswered_questions = []\n    db = survey.get('responses')\n\n    if not db:\n        return new_questions, \"\"\n\n    for key, value in db.items():\n        if value['answer'] == '':\n            unanswered_questions.append(new_questions[int(key)-1])\n\n    i = 0\n    for key, value in db.items():\n        if value['answer'] == '':\n            value['question'] = unanswered_questions[i]\n            i += 1\n\n    return unanswered_questions, db\n\n\ndef find_prev_next_levels(level_list, target_level):\n    sorted_levels = level_list\n    index = sorted_levels.index(target_level)\n\n    prev_level = sorted_levels[index - 1] if index > 0 else None\n    next_level = sorted_levels[index + 1] if index < len(sorted_levels) - 1 else None\n\n    return prev_level, next_level\n\n\ndef preserve_html_tags(content):\n    \"\"\"\n    Transforms HTML tags in the content.\n    \"\"\"\n    # Define patterns to match target tags\n    tag_pattern = r\"&lt;(?P<tag_name>[^>]+)(?P<attributes>.*?)&gt;(?P<inner_content>.*?)&lt;/(?P=tag_name)&gt;\"\n\n    def replace(match):\n        tag_name = match.group(\"tag_name\")\n        attributes = match.group(\"attributes\")\n        inner_content = match.group(\"inner_content\")\n        return f\"<{tag_name}{attributes}>{inner_content}</{tag_name}>\"\n\n    return re.sub(tag_pattern, replace, content, flags=re.DOTALL)\n\n\ndef transform_encoded_tags_secure(content):\n    \"\"\"\n    Transforms encoded HTML tags in adventure content, removing any script tags.\n    This is an extra step on top of the DOMPurify when saving an adventure.\n    \"\"\"\n\n    def pre_process(content):\n        # Remove script tags and their content using regular expression\n        script_pattern = r\"<script(?:\\s[^>]*?)?>(?P<content>.*?)</script>\"\n        return re.sub(script_pattern, \"\", content, flags=re.DOTALL)\n\n    # Pre-process the input to remove scripts\n    processed_content = pre_process(content)\n\n    transformed_content = preserve_html_tags(processed_content)\n\n    return transformed_content\n\n\ndef prepare_content_for_ckeditor(content):\n    \"\"\"\n    Adds code tags to pre blocks that don't have them, reserving existing attributes as well.\n    \"\"\"\n    pattern = r\"<pre(?P<attributes>.*?)>(?P<inner_content>.*?)</pre>\"\n\n    def replace(match):\n        attributes = match.group(\"attributes\")\n        inner_content = match.group(\"inner_content\").strip()  # Strip leading/trailing whitespaces\n        if not inner_content.startswith(\"<code>\"):\n            inner_content = f\"<code>{inner_content}</code>\"\n        return f\"<pre{attributes}>{inner_content}</pre>\"\n\n    content = transform_encoded_tags_secure(content)\n    content = re.sub(pattern, replace, content, flags=re.DOTALL)\n    # Add \"<p>&nbsp;</p>\" (an extra line) if not exists\n    if len(content) and not content.endswith(\"<p>&nbsp;</p>\"):\n        content += \"<p>&nbsp;</p>\"\n\n    return content\n\n\ndef remove_class_preview():\n    try:\n        del session[\"preview_class\"]\n    except KeyError:\n        pass\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}