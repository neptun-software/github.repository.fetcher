{
  "metadata": {
    "timestamp": 1736711680594,
    "page": 360,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "delight-im/HTML-Sheets-of-Paper",
      "stars": 1224,
      "defaultBranch": "gh-pages",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1884765625,
          "content": "# editorconfig.org\nroot = true\n\n[*]\ncharset = utf-8\nindent_style = tab\ntrim_trailing_whitespace = true\nend_of_line = lf\ninsert_final_newline = true\n\n[*.md]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.072265625,
          "content": "The MIT License (MIT)\n\nCopyright (c) delight.im (https://www.delight.im/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.7080078125,
          "content": "# Sheets of Paper\n\nWord processor in your browser using HTML and CSS (e.g. for invoices, legal notices, etc.)\n\n * Poor man's Google Docs\n * Like the foundation of Microsoft Word or LibreOffice — but in your web browser\n * Emulates sheets of paper in web documents (but without skeuomorphic paper textures)\n\n[**Live demo**](https://delight-im.github.io/HTML-Sheets-of-Paper/): Try modifying or printing the page\n\n## Usage\n\n 1. Copy all files to any desired directory\n 2. Modify the HTML source in [`index.html`](index.html) to your liking\n\n## Browser compatibility\n\n * Chrome 4+\n * Firefox 19+\n * Safari 5+\n * Opera 10.1+\n * Internet Explorer 9+\n * Edge 12+\n\n## Paper sizes\n\n * `A4` (21cm × 29.7cm) — `sheets-of-paper-a4.css`\n * `A3` (29.7cm × 42cm) — `sheets-of-paper-a3.css`\n * `US Letter` (21.6cm × 27.9cm) — `sheets-of-paper-usletter.css`\n * `US Legal` (21.6cm × 35.6cm) — `sheets-of-paper-uslegal.css`\n * `US Tabloid` (27.9cm × 43.2cm) — `sheets-of-paper-ustabloid.css`\n\n### Landscape orientation\n\n 1. In the `css/sheets-of-paper-*.css` variant that you’re using:\n    1. Swap the values of `width` and `min-height`\n    1. Set the second value of the `size` attribute to `landscape`\n 1. In `index.html`, set `Config.pageHeightInCentimeter` to your new `min-height` value from above\n\n## Printing\n\n### Chrome\n\n * Change the `Destination` to `Save as PDF`.\n * Make sure the `Paper size` is set to the one defined in your CSS.\n * From the `Margins` list, choose `None` to prevent the browser from overriding our CSS.\n * In the `Options` section, uncheck `Headers and footers` and check `Background colors and images`.\n\n## License\n\nThis project is licensed under the terms of the [MIT License](https://opensource.org/licenses/MIT).\n"
        },
        {
          "name": "css",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 8.8212890625,
          "content": "<!DOCTYPE html>\n<!--\n * HTML-Sheets-of-Paper (https://github.com/delight-im/HTML-Sheets-of-Paper)\n * Copyright (c) delight.im (https://www.delight.im/)\n * Licensed under the MIT License (https://opensource.org/licenses/MIT)\n-->\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"description\" content=\"Emulating real sheets of paper in web documents (using HTML and CSS)\">\n\t\t<title>Sheets of Paper</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/sheets-of-paper-a4.css\">\n\t</head>\n\t<body class=\"document\">\n\t\t<div class=\"page\" contenteditable=\"true\">\n\t\t\t<p>First <code>.page</code> element</p>\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipisici elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n\t\t\t<p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.</p>\n\t\t\t<p>Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</p>\n\t\t</div>\n\t\t<div class=\"page\" contenteditable=\"true\">\n\t\t\t<p>Second <code>.page</code> element</p>\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipisici elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n\t\t\t<p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.</p>\n\t\t\t<p>Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</p>\n\t\t\t<p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</p>\n\t\t\t<div class=\"page-break\" contenteditable=\"false\"></div>\n\t\t\t<p>This sentence is preceded by a manual page break:<br />&nbsp;&nbsp;&nbsp;&nbsp;<code>&lt;div class=\"page-break\" contenteditable=\"false\"&gt;&lt;/div&gt;</code></p>\n\t\t\t<p>At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat.</p>\n\t\t\t<p>Consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t// window.print();\n\n\t\tvar Config = {};\n\t\tConfig.pixelsPerInch = 96;\n\t\tConfig.pageHeightInCentimeter = 29.7; // must match 'min-height' from 'css/sheets-of-paper-*.css' being used\n\t\tConfig.pageMarginBottomInCentimeter = 2; // must match 'padding-bottom' and 'margin-bottom' from 'css/sheets-of-paper-*.css' being used\n\n\t\twindow.addEventListener(\"DOMContentLoaded\", function () {\n\t\t\tapplyPageBreaks();\n\t\t});\n\n\t\tfunction applyPageBreaks() {\n\t\t\tapplyManualPageBreaks();\n\t\t\tapplyAutomaticPageBreaks(Config.pixelsPerInch, Config.pageHeightInCentimeter, Config.pageMarginBottomInCentimeter);\n\n\t\t\tdocument.querySelectorAll(\".document .page\").forEach(function (element) {\n\t\t\t\tif (!element.classList.contains(\"has-events\")) {\n\t\t\t\t\telement.addEventListener(\"blur\", function () {\n\t\t\t\t\t\tapplyPageBreaks();\n\t\t\t\t\t});\n\n\t\t\t\t\telement.classList.add(\"has-events\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/* Applies any manual page breaks in preview mode (screen, non-print) where CSS Paged Media is not fully supported */\n\t\tfunction applyManualPageBreaks() {\n\t\t\tvar docs, pages, snippets;\n\t\t\tdocs = document.querySelectorAll(\".document\");\n\n\t\t\tfor (var d = docs.length - 1; d >= 0; d--) {\n\t\t\t\tpages = docs[d].querySelectorAll(\".page\");\n\n\t\t\t\tfor (var p = pages.length - 1; p >= 0; p--) {\n\t\t\t\t\tsnippets = pages[p].children;\n\n\t\t\t\t\tfor (var s = snippets.length - 1; s >= 0; s--) {\n\t\t\t\t\t\tif (snippets[s].classList.contains(\"page-break\")) {\n\t\t\t\t\t\t\tpages[p].insertAdjacentHTML(\"afterend\", \"<div class=\\\"page\\\" contenteditable=\\\"true\\\"></div>\");\n\n\t\t\t\t\t\t\tfor (var n = snippets.length - 1; n > s; n--) {\n\t\t\t\t\t\t\t\tpages[p].nextElementSibling.insertBefore(snippets[n], pages[p].nextElementSibling.firstChild);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsnippets[s].remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Applies (where necessary) automatic page breaks in preview mode (screen, non-print) where CSS Paged Media is not fully supported */\n\t\tfunction applyAutomaticPageBreaks(pixelsPerInch, pageHeightInCentimeter, pageMarginBottomInCentimeter) {\n\t\t\tvar inchPerCentimeter = 0.393701;\n\t\t\tvar pageHeightInInch = pageHeightInCentimeter * inchPerCentimeter;\n\t\t\tvar pageHeightInPixels = Math.ceil(pageHeightInInch * pixelsPerInch);\n\t\t\tvar pageMarginBottomInInch = pageMarginBottomInCentimeter * inchPerCentimeter;\n\t\t\tvar pageMarginBottomInPixels = Math.ceil(pageMarginBottomInInch * pixelsPerInch);\n\t\t\tvar docs, pages, snippets, pageCoords, snippetCoords;\n\t\t\tdocs = document.querySelectorAll(\".document\");\n\n\t\t\tfor (var d = docs.length - 1; d >= 0; d--) {\n\t\t\t\tpages = docs[d].querySelectorAll(\".page\");\n\n\t\t\t\tfor (var p = 0; p < pages.length; p++) {\n\t\t\t\t\tif (pages[p].clientHeight > pageHeightInPixels) {\n\t\t\t\t\t\tpages[p].insertAdjacentHTML(\"afterend\", \"<div class=\\\"page\\\" contenteditable=\\\"true\\\"></div>\");\n\t\t\t\t\t\tpageCoords = pages[p].getBoundingClientRect();\n\t\t\t\t\t\tsnippets = pages[p].querySelectorAll(\"h1, h2, h3, h4, h5, h6, p, ul, ol\");\n\n\t\t\t\t\t\tfor (var s = snippets.length - 1; s >= 0; s--) {\n\t\t\t\t\t\t\tsnippetCoords = snippets[s].getBoundingClientRect();\n\n\t\t\t\t\t\t\tif ((snippetCoords.bottom - pageCoords.top + pageMarginBottomInPixels) > pageHeightInPixels) {\n\t\t\t\t\t\t\t\tpages[p].nextElementSibling.insertBefore(snippets[s], pages[p].nextElementSibling.firstChild);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages = docs[d].querySelectorAll(\".page\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t</script>\n\t</body>\n</html>\n"
        }
      ]
    }
  ]
}