{
  "metadata": {
    "timestamp": 1736711603323,
    "page": 189,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "abc-club/programmer-book",
      "stars": 1909,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.017578125,
          "content": "/node_modules\nq.md"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vuepress",
          "type": "tree",
          "content": null
        },
        {
          "name": "ASSETS",
          "type": "tree",
          "content": null
        },
        {
          "name": "AWESOME",
          "type": "tree",
          "content": null
        },
        {
          "name": "BACKEND.md",
          "type": "blob",
          "size": 7.240234375,
          "content": "# 后端\n\n## rust\n- [rust中文官网](https://www.rust-lang.org/zh-CN/)\n- [RUST 是 JavaScript 基建的未来](https://juejin.cn/post/7030997083582627870)\n- [写给前端看的Rust教程](https://juejin.cn/post/7038877104175824909)\n\n\n\n\n## python\n\n* [Python - 100天从新手到大师](https://github.com/jackfrued/Python-100-Days)\n* [《动手学深度学习》](https://github.com/d2l-ai/d2l-zh)\n* [看完本文 若还不能让你精通python，我愿永久退出IT编程界](https://www.toutiao.com/a6748701222158483982)\n* [最全数据分析资料汇总（含python、爬虫、数据库、大数据、tableau、统计学等）](https://zhuanlan.zhihu.com/p/69869004)\n\n### 开源\n* [如何一小时爬取百万知乎用户信息，并做了简单的分析](https://juejin.im/entry/58e0878f570c3500579eed28)\n* [网易云音乐爬虫，数据可视化](https://github.com/GreatV/CloudMusic-Crawler)\n* [Real-Time-Voice-Cloning](https://github.com/CorentinJ/Real-Time-Voice-Cloning)(语音伪装神器 语音识别 机器学习)\n\n\n### 文章\n* [火爆网络的《神经网络与深度学习》，有人把它翻译成了中文版！](https://zhuanlan.zhihu.com/p/58144032)\n\n\n## java\n* [toBeTopJavaer](https://github.com/hollischuang/toBeTopJavaer)\n* [JavaGuide](https://github.com/Snailclimb/JavaGuide)  ![Github stars](https://img.shields.io/github/stars/Snailclimb/JavaGuide.svg)\n\n### 学习路线\n* [Java后端学习路线（适合科班、非科班和已工作的仔）](https://juejin.im/post/5e5bc9a66fb9a07c817619fb)\n* [Java入门第一季](https://www.imooc.com/learn/85)\n* [JAVA遇见HTML——Servlet篇](https://www.imooc.com/learn/269)\n* [Spring入门篇](https://www.imooc.com/learn/196)\n* [Spring MVC起步](https://www.imooc.com/learn/47)\n* [极速入门SpringCloud之API网关与服务发现](https://www.imooc.com/learn/1134)\n* [Java 语言快速入门](https://wiki.jikexueyuan.com/project/java/)\n* [Spring 教程](https://wiki.jikexueyuan.com/project/spring/)\n* [《Spring Boot Cookbook》阅读笔记](http://wiki.jikexueyuan.com/project/spring-boot-cookbook-zh/)\n\n\n### spring\n* [官网](https://spring.io/projects/spring-boot)\n* [Spring Boot 学习资料汇总](http://www.ityouknow.com/springboot/2015/12/30/springboot-collect.html)\n* [spring-boot-examples](https://github.com/ityouknow/spring-boot-examples)(21K+ star)\n* [精通 Spring Boot 42 讲](https://gitbook.cn/gitchat/column/5b86228ce15aa17d68b5b55a/topic/5b864c65e15aa17d68b5db58)(收费)\n* [《今天面试了吗》-Spring](https://www.zhihu.com/question/56110328/answer/370752381)\n\n\n\n#### spring-boot(1)\n* [spring-boot-api-project-seed](https://github.com/lihengming/spring-boot-api-project-seed)(脚手架)\n\n\n#### spring-boot(2)\n* [Github 上热门的 Spring Boot 项目实战推荐](https://juejin.im/post/5da3c3dce51d4578034d2dc3)\n\n![](https://user-gold-cdn.xitu.io/2020/3/14/170d96d802c833d0?w=2124&h=1550&f=png&s=1306299)\n\n#### spring-Cloud\n* [一个不容错过的Spring Cloud实战项目！](https://juejin.im/post/5e68dd5651882549564b6c28)\n\n\n\n### 开源\n* [史上最全的整合第三方登录的开源库JustAuth](https://github.com/justauth/JustAuth)\n* [guava](https://github.com/google/guava)(Google core libraries for Java)\n* [pdman](https://gitee.com/robergroup/pdman)(PDMan是一款开源免费的数据库模型建模工具)\n\n\n\n\n## golang\n\n### 文章\n- [500 + Go 语言开源项目合集（2021版）](https://zhuanlan.zhihu.com/p/424624289)\n- [对Golang一知半解？这里是上百篇掘金Golang优质文章｜ Go主题月](https://juejin.cn/post/6953073994383753223)\n\n### 书\n\n- [Golang标准库文档](https://studygolang.com/pkgdoc)\n- [Go 入门指南](https://learnku.com/docs/the-way-to-go)\n- [Go语言圣经（中文版)](https://yar999.gitbook.io/gopl-zh/)\n- [awesome-go](https://github.com/avelino/awesome-go)\n- [awesome-go-cn](https://github.com/jobbole/awesome-go-cn)\n- [GO语言学习资源整理](https://zhuanlan.zhihu.com/p/25493806)\n- [怎么学习 Golang](https://www.zhihu.com/question/23486344) https://zhuanlan.zhihu.com/p/25493806\n- [可能是国内最火的开源项目 —— Go 篇](https://my.oschina.net/editorial-story/blog/1546551)\n- [consul](https://www.consul.io/)\n- [Consul入门](https://book-consul-guide.vnzmi.com/)\n- [Go开源项目速查表](https://www.ctolib.com/cheatsheets-go-project.html)\n\n### 微服务\n- [go-micro](https://github.com/micro/go-micro)\n\n### web框架\n\n- [beego](https://github.com/astaxie/beego)(https://beego.me/docs/mvc/)\n\n\n### rpc\n\n- [基于go的 rpc框架实践](https://blog.csdn.net/RA681t58CJxsgCkJ31/article/details/82455716)\n\n### 常遇到的问题\n\n- [beego 脚手架 安装错误提示](https://blog.csdn.net/longchenghui20/article/details/107251152/)\n- [unrecognized import path - install error](https://github.com/Rivalo/discord-cli/issues/33)\n- [cannot find module providing package或cannot find main module](https://www.cnblogs.com/jasonLiu2018/p/12935071.html)\n\n\n\n\n## cmake\n\n- [CMake从入门到精通系列链接整理](https://zhuanlan.zhihu.com/p/393316878)\n## linux\n\n- [6w字搞定Linux基本操作，建议收藏](https://juejin.cn/post/6917096816118857736)\n* [史上最牛的Linux视频教程—兄弟连](https://www.bilibili.com/video/av18156598/?p=1)(b站视频)\n* [GitHub 60000+ Star：命令行的艺术](https://juejin.im/post/5d8b1899f265da5b9d1edee2)\n\n### 文章\n* [ubuntu16.4 开启ftp服务（使用协议:SFTP）](https://blog.csdn.net/weixin_41216652/article/details/81364130)\n* [Mac自带FTP工具用法](https://jingyan.baidu.com/article/39810a23436d3db636fda6db.html)\n\n\n\n\n## 编译原理\n\n* [编译原理（哈工大）](https://www.bilibili.com/video/av17649289/?p=3)(b站视频)\n\n## 人工智能\n* [人工智能入门](https://www.bilibili.com/video/av50927301?p=2)(b站视频)\n\n## ubuntu部署\n* [浅谈前端线上部署与运维](https://juejin.im/post/5a12881a6fb9a044fd115dd4)\n* [Ubuntu Nginx 配置](https://www.cnblogs.com/loseself/p/8888009.html)\n\n\n## 操作系统\n* [写给大忙人看的操作系统](https://juejin.im/post/5e58905f6fb9a07caa270bb0)\n\n\n## 区块链\n* [区块链 - 中文资源](https://github.com/LiuBoyu/blockchain)\n\n\n## 黑客\n* [黑客擅长的sql注入攻击，你真的懂吗？](https://www.toutiao.com/a6748663058152817166)\n* [2019年最受欢迎的20款黑客工具](https://zhuanlan.zhihu.com/p/100870206)\n\n## 微服务\n* [什么是微服务架构？](https://www.zhihu.com/question/65502802)\n* [构建你的第一个 Node.js 微服务](https://www.jianshu.com/p/352eb5f419b4)\n* [Seneca ：NodeJS 微服务框架入门指南](https://segmentfault.com/a/1190000008501410)\n* [vastify](https://github.com/Cecil0o0/vastify)\n* [Node微服务](https://www.bilibili.com/video/av74669898)\n* [Node.js微服务实践(一)](https://www.cnblogs.com/zhuanzhuanfe/p/10500848.html)\n\n### 项目\n\n#### nodejs\n* [seneca](https://github.com/senecajs/seneca)(微服务框架)\n* [nest](https://github.com/nestjs/nest)\n* [nestjs中文官网](https://docs.nestjs.cn/)\n* [nestjs官网](https://docs.nestjs.com/)\n* [hprose-nodejs](https://github.com/hprose/hprose-nodejs)\n\n\n#### c++\n* [Tars](https://github.com/TarsCloud/Tars)(腾讯)\n* [TarsDocs](https://tarscloud.github.io/TarsDocs/)\n- [如何系统地学习 C++ 语言？](https://www.zhihu.com/question/23447320/answer/1685865607)\n\n\n# 运维\n\n- [马蜂窝容器化平台前端赋能实践](https://juejin.im/post/5d0c413af265da1bc07e40f5)(abtest)\n\n\n\n"
        },
        {
          "name": "BACKUP.md",
          "type": "blob",
          "size": 0.00390625,
          "content": "\n\n\n\n"
        },
        {
          "name": "BITCOIN.md",
          "type": "blob",
          "size": 1.794921875,
          "content": "\n\n## 交易所\n\n币安：https://www.aicoin.cn/\n\n\n## 炒币秘籍\n区块链【币神 】炒币秘籍\n    \n     《 珍 藏 版 》\n\n秘诀 1\n    币圈进场，先准备\n    宁可少进，勿冒进\n\n秘诀 2\n    低位横盘，再新低\n    重仓买进，好时机\n\n秘诀 3\n     冲高抛，跳水进\n     横盘尽量不交易\n\n秘诀 4    \n    如果一直横盘\n    就是以横代跌的意思\n    要牢牢握住自己的币\n    随时有可能拉升\n\n秘诀 5   \n    极速拉升的时候\n    要时刻准备卖出\n    随时有可能暴跌\n\n秘诀 6\n    缓慢下降的时候\n    就是一点点补仓的时候\n\n秘诀 7\n    高低盘整，先等一等\n\n秘诀 8\n    高位横盘，又冲高\n    抓紧时机，赶紧抛\n    低位横盘，又新低\n    全仓买进，好时机\n\n秘诀 9\n    不冲高，不卖\n    不跳水，不买\n    横盘，不交易\n\n秘诀 10  \n    买阴，不买阳\n    卖阳，不卖阴\n    逆市而动，方为英雄\n\n秘诀11\n    早上大跌，要买\n    早上大涨，要卖\n    下午大涨，不追\n    下午大跌，次日买\n    早上大跌，不割\n    不涨不跌，睡觉\n\n秘诀 12\n     套牢补仓，求保本\n     奢求盈利，乃为贪\n\n秘诀 13\n     平静水面，一波高\n     当心后面，大波涛\n\n秘诀 14\n     大涨之后，必回调\n     K 线多日，画三角\n\n秘诀 15\n    上涨趋势中，看支撑位\n    下跌趋势中，看阻力位\n\n秘诀 16\n    满仓操作，是大忌\n    一意孤行，不可取\n    无常变化，要知止\n    进出自如，在观机\n\n秘诀 17\n    炒币玩的，是心态\n    贪婪恐惧，是大害\n    追涨杀跌，要谨慎\n    心平气和，要自在\n\n秘诀 18  \n    币圈⭕️成功的核心\n    就两句话\n    手中有币，握住不放 \n\n   每天读一遍，受益匪浅\n\n   仅 供 参 考，建议收藏"
        },
        {
          "name": "BLACKLIST.md",
          "type": "blob",
          "size": 0.3984375,
          "content": "<h1 align=\"center\">互联网315</h1>\n\n本文用于对各种互联网公司打假，\n\n希望能够揭露一些不道德不地道行为，并宣传出去，让更多人知道\n\n同时希望能够帮助被害者，不向恶势力低头\n\n人在做 天在看\n\n\n### 网易\n\n* [网易裁员，让保安把身患绝症的我赶出公司。我在网易亲身经历的噩梦！](https://zhuanlan.zhihu.com/p/93349725)\n\n"
        },
        {
          "name": "BLOG",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHECKLIST.md",
          "type": "blob",
          "size": 1.0537109375,
          "content": "<h1 align=\"center\">前端技术清单汇总</h1>\n\n前端自检技术清单，查漏补缺，还不快来看看~\n\n持续更新中……\n\n\n## 目录\n\n* [文章](#文章)\n\n## 仓库\n* [Front-End-Checklist](https://github.com/thedaviddias/Front-End-Checklist)\n* [A-to-Z-Resources-for-Students](https://github.com/dipakkr/A-to-Z-Resources-for-Students)\n- [前端roadmap](https://github.com/kamranahmedse/developer-roadmap/tree/master/translations/chinese)\n\n## 文章\n * [一名【合格】前端工程师的自检清单](https://juejin.im/post/5cc1da82f265da036023b628)\n * [年终回顾，为你汇总一份「前端技术清单」](https://juejin.im/post/5bdfb387e51d452c8e0aa902)\n * [8年前端开发的知识点沉淀(不知道会多少字，一直写下去吧...)](https://juejin.im/post/5d0878aaf265da1b83338f74)\n * [一个合格(优秀)的前端都应该阅读这些文章](https://juejin.im/post/5d387f696fb9a07eeb13ea60)\n * [史上最全的前端资源大汇总](https://www.jianshu.com/p/6cb49271cd2a#)\n * [最全前端资源汇集](https://www.jianshu.com/p/c3dae0951f74)\n \n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.0166015625,
          "content": "share.aoping.club"
        },
        {
          "name": "CSS",
          "type": "tree",
          "content": null
        },
        {
          "name": "DEMO",
          "type": "tree",
          "content": null
        },
        {
          "name": "DIY.md",
          "type": "blob",
          "size": 5.3623046875,
          "content": "<h1 align=\"center\">自己动手系列</h1>\n\nDo it yourself!!!\n\n只有动手，你才能真的理解作者的构思的巧妙\n\n只有动手，你才能真正掌握一门技术\n\n持续更新中……\n\n## 目录\n\n- [目录](#目录)\n- [源码系列](#源码系列)\n- [实战](#实战)\n- [开源项目](#开源项目)\n\n## 源码系列\n\n- [跟 underscore 一起学如何写函数库](https://juejin.im/post/5c7e9680e51d451581086bc4)\n- [「中高级前端面试」JavaScript 手写代码无敌秘籍](https://juejin.im/post/5c9c3989e51d454e3a3902b6)\n- [如何用不到 200 行代码写一款属于自己的 js 类库](https://juejin.im/post/5d1e26a2e51d45595319e3a9)\n- [学习 sentry 源码整体架构，打造属于自己的前端异常监控SDK](https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744551&idx=1&sn=4d79c2fa97d7c737aab70055c7ec7fa3&chksm=8866256bbf11ac7d9e2269f3638a705d5e5f45056d53ad2faf17b814e4c46ec6b0ba52571bde&scene=21#wechat_redirect)\n\n\n## 实战\n\n- [从零实现react](https://pomb.us/build-your-own-react/)(react)\n- [从零自己编写一个React框架 【中高级前端杀手锏级别技能】](https://segmentfault.com/a/1190000020034137)\n- [手把手教你使用 nodejs 编写 cli(命令行)](https://juejin.im/post/5bd90d3ce51d4579362b0390)\n- [手摸手，带你用 vue 撸后台 系列五(v4.0 新版本)](https://juejin.im/post/5c92ff94f265da6128275a85)\n- [从零开始编写一个 React 框架 【彻底了解 React 的设计思想】](https://segmentfault.com/a/1190000020034137#articleHeader0)\n- [9102 年：手写一个 React 脚手架 【优化极致版】](https://segmentfault.com/a/1190000019126657)\n- [9102 年：手写一个 Vue 的脚手架 【极致优化版】](https://segmentfault.com/a/1190000019207033)\n- [教你从零开始搭建一款前端脚手架工具](https://segmentfault.com/a/1190000006190814)\n- [面试官：自己搭建过vue开发环境吗？](https://juejin.im/post/5cc55c336fb9a032086dd701)\n- [【中高级前端必备】手摸手教你撸一个脚手架](https://juejin.im/post/5d37d982e51d45108c59a635)\n- [从零实现 Vue 的组件库](https://juejin.im/post/5c0b8ece5188254f9e2809fe)\n- 从零到一，撸一个在线斗地主\n  - [从零到一，撸一个在线斗地主上篇](http://www.alloyteam.com/2019/07/13829/)\n  - [从零到一，撸一个在线斗地主下篇](http://www.alloyteam.com/2019/07/13834/)\n- [用纯 JavaScript 撸一个 MVC 程序](https://segmentfault.com/a/1190000020007033)\n- [一步步教你用 WebVR 实现虚拟现实游戏](https://segmentfault.com/a/1190000019135847)\n- [轻松 10 步用 es6 写出俄罗斯方块](https://segmentfault.com/a/1190000008181905)\n- 从零开始打造 Mock 平台\n  - [从零开始打造 Mock 平台 - 核心篇](https://juejin.im/post/5a746514f265da4e8e7835bd)\n  - [从零开始打造 Mock 平台 - 功能模块篇](https://juejin.im/post/5a7a8f195188257a6a78b457)\n- [从 0 到 1 搭建和部署个人博客](https://juejin.im/post/5ae170e1f265da0b7527d0dc)\n- [如何从零开始定义一个类似 websocket 的即时通讯协议](https://segmentfault.com/a/1190000019560096)\n- [从 0 到 1 搭建和部署个人博客](https://juejin.im/post/5ae170e1f265da0b7527d0dc)\n- [一行代码实现一个简单的模板字符串替换](https://github.com/jawil/blog/issues/32)\n- [DIY 一个前端监控平台（上）](https://juejin.im/post/5c8cd7bd5188257ed47b22fe)\n- [一步一步搭建前端监控系统：如何记录用户行为？](https://juejin.im/post/5d44ec1cf265da039a2869c0)\n- [【数据可视化之采集】如何设计一个前端监控系统](https://juejin.im/entry/58834ecb1b69e60058d8f73a)\n- [7 天打造前端性能监控系统](http://fex.baidu.com/blog/2014/05/build-performance-monitor-in-7-days/)\n- [zanePerfor 一款完整、高性能、高可用的前端性能监控和统计平台](https://github.com/wangweianger/zanePerfor)\n- [Node+Koa2+Mysql 搭建简易博客](http://www.wclimb.site/2017/07/12/Node-Koa2-Mysql-%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2/)\n- [从零开始实现一套 pc 端 vue 的 ui 组件库](https://segmentfault.com/a/1190000020193444)\n- [【手把手】15 分钟搭一个企业级脚手架](https://juejin.im/post/5d650613f265da03951a0364)\n- [Build Yourself a Redux](https://zapier.com/engineering/how-to-build-redux/)\n- [重磅!带你从零实现一个 axios 网络请求框架](https://segmentfault.com/a/1190000020601672)\n- [[技术翻译]9 个可以让你在 2020 年成为前端专家的项目](https://juejin.im/post/5db71290f265da4d1c6999a0)\n- [vue 小实现](https://juejin.im/post/5a4df4965188252a3d386ae6)\n- [读懂源码：一步一步实现一个 Vue](https://www.cnblogs.com/kidney/p/8018226.html)\n- [各种源码实现，你想要的这里都有](https://juejin.im/post/5dc3894051882517a652dbd7)\n\n## 开源项目\n\n- https://github.com/justjavac/Programming-Alpha-To-Omega\n\n* [俄罗斯方块](https://github.com/timmyLan/tetris)\n* [手写的 Node.js 静态资源服务器](https://segmentfault.com/a/1190000019936510)\n* [MVW-demos](https://github.com/livoras/MVW-demos)\n* [前端开发常用工具](https://github.com/yimogit/metools-plugin)\n* [DIY 前端路由](https://github.com/biaochenxuying/route)(原生 js 实现的轻量级路由，且页面跳转间有缓存功能)\n* [自己动手实现 mvvm](https://github.com/DMQ/mvvm)\n* [easy-team](https://github.com/easy-team)(完整的前端脚手架示例)\n* [这次，带你写个操作系统](https://zhuanlan.zhihu.com/p/371860808)\n* \n"
        },
        {
          "name": "EQ.md",
          "type": "blob",
          "size": 0.1826171875,
          "content": "# 情商课\n\n\n## 工作上\n\n### 不拍马屁也能搞定领导\n1. 比领导早想一步\n2. 比领导多想一步\n3. 主动交代\n4. 替领导做恶人\n\n## \n\n\n## 人际交往\n\n\n## 恋爱\n\n"
        },
        {
          "name": "EXPERIENCE.md",
          "type": "blob",
          "size": 5.00390625,
          "content": "<h1 align=\"center\">前辈经验汇总</h1>\n\n每个人都会迷茫，\n\n在这里你可以通过前辈的一些经验，\n\n找到自己的方向。\n\n持续更新中……\n\n\n## 目录\n\n- [目录](#目录)\n- [个人篇](#个人篇)\n- [团队篇](#团队篇)\n  - [前端方向](#前端方向)\n  - [中后台方向](#中后台方向)\n- [解惑](#解惑)\n\n\n## 个人篇\n* [我在淘宝做前端的这三年 — 第一年](https://juejin.im/post/5c74d4b9e51d4512c37ea03b)\n* [我如何零基础转行成为一个自信的前端](https://juejin.im/post/5c75d34851882564965edb23)\n* [写给初入门/半路出家的前端er](https://juejin.im/post/5cb4b881f265da0374186fd9)\n* [2018 年，我的本命年 - 前端工作师的年终总结](https://github.com/biaochenxuying/blog/issues/19)\n* [那个三本的“家伙”自学前端五个月经历了什么？](https://juejin.im/post/5d5bf4dd51882554a13f850a)\n* [if 我是前端团队 Leader，怎么做好概要设计](https://juejin.im/post/5d71cec6e51d4561b674c4d0)\n* [if 我是前端团队 Leader，怎么制定前端协作规范?](https://juejin.im/post/5d3a7134f265da1b5d57f1ed)\n* [玉伯：我的前端成长之路](https://mp.weixin.qq.com/s/3ORJ6AArKKCqvseV163Upg)\n* [月薪80k阿里架构师漫谈他是如何从一名小码农走到今天这一步](https://www.toutiao.com/a6756774125286457864)\n* [从P4到P9，在马云家写代码到双11前端PM](https://www.toutiao.com/a6759408674239676931)\n* [如何成为公司独当一面的工程师](https://juejin.im/post/5dd4cc71f265da0bca7899cf)\n* [程序员怎么赚钱?](https://www.zhihu.com/question/352477026/answer/871265211)\n* [从淘汰边缘到阿里资深前端技术专家，他总结了 8 点](https://mp.weixin.qq.com/s/duMf_OsUpj83VoUwHPoVQA)\n\n\n## 团队篇\n\n### 前端方向\n* [技术栈：小菜前端的技术栈是如何规划和演进的](https://juejin.im/post/5c99c17df265da6129788ae2)\n* [微店前端工程化的迭代史](https://juejin.im/post/5d4cee556fb9a06b30702eda)\n* [那些技术选型背后的思考](https://www.infoq.cn/article/X5pY_PyBX1T5Vay0wOfJ)\n* [干货分享：蚂蚁金服前端框架和工程化实践](https://mp.weixin.qq.com/s/C629e_uEWv9ZfxtYGvFxMg)\n* [某小公司RESTful、共用接口、前后端分离、接口约定的实践](https://juejin.im/post/59eafab36fb9a045076eccc3)\n* [干货分享：蚂蚁金服前端框架和工程化实践](https://mp.weixin.qq.com/s/C629e_uEWv9ZfxtYGvFxMg)\n* [干货 | 浅谈Node.js在携程的应用](https://mp.weixin.qq.com/s/0tcpVTldQHTcYpmhCqXizA)\n* [我在北京这3年前端团队Leader经历](https://juejin.im/post/5d78a9ecf265da03c128c47f)\n* [蚂蚁金服体验技术部](https://www.yuque.com/afx/about)\n* [职场突围：前端工程师的晋升逻辑到底是什么](https://zhuanlan.zhihu.com/p/83203422)\n* [解密阿里巴巴的web前端技术体系，技术不断迭代，如何突破？](https://www.toutiao.com/a6752123820376588808)\n* [从技术细节看美团的架构](https://www.toutiao.com/a6748669354352574988)\n* [滴滴后端架构实战](https://www.toutiao.com/a6755393930998579725)\n* [“12306”的架构到底有多牛逼？](https://mp.weixin.qq.com/s/oqjbW4ylAwVm5iUWsuJiEQ)\n\n### 中后台方向\n* [有赞前端质量保障体系](https://juejin.im/post/5d24096ee51d454d1d6285a1)\n* [有赞零售财务中台架构的实践](https://www.toutiao.com/a6723064994306458123)\n\n## 解惑\n\n* [关于裸辞，关于前端面试](https://juejin.im/post/5cf3365ff265da1b9612ec78)\n* [早聊上期：从这 6 个前端的成长故事中你能学到什么](https://mp.weixin.qq.com/s/2SrfnmjsF7gCRmwiKm_u5w)\n* [前端架构师亲述：前端工程师成长之路的 N 问 及 回答 ](https://github.com/biaochenxuying/blog/issues/33)\n* [程序员30岁前月薪达不到30K，该何去何从](https://segmentfault.com/a/1190000018224157)\n* [职业思考：技术人需要突破的 10 个困局](https://mp.weixin.qq.com/s/6TPo76QoBrUQadFNmDbSzg)\n* [电击、警棍、爆头，被骗去柬埔寨的程序员有多惨？](https://mp.weixin.qq.com/s/HML11GgMZemtf_3mqdyQbA)\n* [如何打造一个破千 Star 的开源项目](https://mp.weixin.qq.com/s/gdvgHjPxjd2I6X4uWF56QQ)\n* [如何在疲劳的JS世界中持续学习](https://juejin.im/post/5ae97bd05188256719521ae0)\n* [前端工程师如何持续保持热情（一）](https://juejin.im/post/5d6419dee51d4561eb0b26af)\n* [【35岁程序员裸辞去培训机构学习算法，结果发现，又交了4万智商税】](https://m.toutiaocdn.com/a6731318989785399822)\n* [孙正义：下一个30年将发生什么](https://m.toutiaocdn.net/a6728971898190823950)\n* [解密初、中、高级程序员的进化之路（前端）](https://juejin.im/post/5d3a6d9e51882570d50f5566)\n* [阿里6年多程序员的经验总结，写给还在迷茫中的朋友](https://www.toutiao.com/a6735313188658610702)\n* [感觉自己不会的东西太多了，不知道如何下手？](https://juejin.im/post/5da3d6a16fb9a04dfd26728f)\n- [我在阿里半年收获的成长](https://juejin.cn/post/6923016622273724430)\n- [浅谈：前端如何赋能业务](https://zhuanlan.zhihu.com/p/62722892)(职业规划)\n"
        },
        {
          "name": "FOLLOW.md",
          "type": "blob",
          "size": 4.6650390625,
          "content": "<h1 align=\"center\">TO FOLLOW</h1>\n\n怀揣着将来有一天成为大神的梦想\n\n跟随大神的脚步\n\n走在成为大神的路上\n\n持续更新中……\n\n## 目录\n\n- [目录](#目录)\n- [平台](#平台)\n- [博客](#博客)\n  - [团队](#团队)\n  - [个人](#个人)\n- [技术社区](#技术社区)\n- [公众号](#公众号)\n- [github 大神](#github-大神)\n  - [组织](#组织)\n  - [个人](#个人-1)\n- [掘金大神](#掘金大神)\n- [中文独立博客列表](#中文独立博客列表)\n\n## 平台\n- [openbase](https://openbase.com/)(github排行rank)\n\n## 博客\n\n- https://github.com/FrankFang/best-chinese-front-end-blogs (博客集合)\n\n* [因为知道了这 32 个网站，我成了别人眼中的大神！](https://segmentfault.com/a/1190000021870068)\n\n### 团队\n\n- [腾讯 alloyteam](http://www.alloyteam.com/)\n- [淘宝前端](https://fed.taobao.org/)\n- [京东凹凸实验室](https://aotu.io/)\n- [360 奇舞团](https://75team.com/)\n- [奇舞周刊](https://weekly.75team.com/)\n- [百度前端](http://fex.baidu.com/articles/)\n- [美团](https://tech.meituan.com/)\n- [有赞](https://tech.youzan.com/)\n- [微店前端](https://github.com/weidian-inc/weidian-tech-blog)\n- [政采云前端](https://www.zoo.team/)\n\n### 个人\n\n- [阮一峰的网络日志](http://www.ruanyifeng.com/blog/)\n- [阮一峰的语雀](https://www.yuque.com/ruanyf)\n- https://github.com/hoperyy/blog\n- https://github.com/biaochenxuying/blog\n- [前端工匠](https://github.com/ljianshu/Blog)\n- [前端小密圈](https://github.com/jawil/blog)\n\n## 技术社区\n\n- [bestofjs](https://bestofjs.org/)\n- [掘金](https://juejin.im/timeline)\n- [stackoverflow](https://stackoverflow.com/)\n- [github](https://github.com/)\n- [segmentfault](https://segmentfault.com/)\n- [v2ex](https://www.v2ex.com/)\n- [smashingmagazine](https://www.smashingmagazine.com/)\n- [cnodejs](https://cnodejs.org/)\n- [jstips](http://www.jstips.co/)\n- [印记中文](https://www.docschina.org)\n- [w3cplus](https://www.w3cplus.com/)\n- [HTML5 梦工厂](http://www.html5dw.com/)\n- [w3ctech](https://w3ctech.com/)\n- [大前端](http://www.daqianduan.com/)\n- [github 趋势](https://trends.now.sh/)\n\n## 公众号\n\n- 凹凸实验室\n\n![](ASSETS/IMAGES/FOLLOW/009.jpg)\n\n- 美团技术团队\n\n![](ASSETS/IMAGES/FOLLOW/008.png)\n\n- 奇舞周刊\n\n![](ASSETS/IMAGES/FOLLOW/010.png)\n\n- infoQ\n\n![](ASSETS/IMAGES/FOLLOW/001.jpeg)\n\n- 前端早读课\n\n![](ASSETS/IMAGES/FOLLOW/002.jpeg)\n\n- 程序员那些事\n\n![](ASSETS/IMAGES/FOLLOW/003.jpeg)\n\n- javascript\n\n![](ASSETS/IMAGES/FOLLOW/004.jpeg)\n\n- 前端大学\n\n![](ASSETS/IMAGES/FOLLOW/005.jpeg)\n\n- 高级前端\n\n![](ASSETS/IMAGES/FOLLOW/006.jpeg)\n\n- 前端技术优选\n\n![](ASSETS/IMAGES/FOLLOW/007.jpeg)\n\n- 阮一峰的网络日志\n\n![](ASSETS/IMAGES/FOLLOW/011.jpeg)\n\n## github 大神\n\n- [Github 中国和全球用户排名](https://github.com/jaywcjlove/github-rank)\n\n### 组织\n\n- [阿里巴巴](https://github.com/alibaba)\n- [腾讯](https://github.com/Tencent)\n- [百度前端](https://github.com/fex-team/)\n- [大众点评网](https://github.com/dianping)\n- [美团点评](https://github.com/Meituan-Dianping)\n- [丁香园前端组](https://github.com/DXY-F2E)\n- [去哪儿网大前端技术中心](https://github.com/YMFE)\n- [链家](https://github.com/LianjiaTech)\n- [滴滴](https://github.com/DDFE)\n- [igola](https://github.com/yougola)(iGola 骑鹅旅行 - 国际机票,机票比价,特价机票查询预订)\n\n### 个人\n\n- [Github 中国和全球用户排名](https://github.com/jaywcjlove/github-rank)\n- [tj](https://github.com/tj)\n- [阮一峰](https://github.com/ruanyf)\n- [尤雨溪](https://github.com/yyx990803)\n- [justjavac](https://github.com/justjavac)\n- [木易杨](https://github.com/yygmind)\n- [HuangYi](https://github.com/ustbhuangyi)\n- [颜海镜](https://github.com/yanhaijing)\n- [cangdu](https://github.com/bailicangdu)\n- [Luke Hoban](https://github.com/lukehoban)\n- [Alex Crichton](https://github.com/alexcrichton)\n- [Charlie Robbins](https://github.com/indexzero)\n- [勾三股四](https://github.com/Jinjiang)\n- [Joyee Cheung](https://github.com/joyeecheung)\n- [sorrycc](https://github.com/sorrycc)\n- [mocheng](https://github.com/mocheng)\n- [天猪](https://github.com/atian25)\n- [张云龙](https://github.com/fouber)\n- [狼叔](https://github.com/i5ting)\n- [Ryan Dahl](https://github.com/ry)\n- [舒克·贝塔](https://github.com/cucygh)\n- [vczero](https://github.com/vczero)\n- [Tobias Koppers](https://github.com/sokra)\n- [Feross Aboukhadijeh](https://github.com/feross)\n- [Andrey Sitnik](https://github.com/ai)\n- [轮子哥](https://github.com/vczh)\n\n## 掘金大神\n\n- [D2 开源组](https://juejin.im/user/57a48b632e958a006691b946)\n\n## 中文独立博客列表\n\n- [中文独立博客列表](https://github.com/timqian/chinese-independent-blogs)\n"
        },
        {
          "name": "FRONTEND.md",
          "type": "blob",
          "size": 62.0107421875,
          "content": "<h1 align=\"center\">前端乐园</h1>\n\n本文收集学习过程中使用到的资源。\n\n持续更新中……\n\n所有可以用 JavaScript 编写的应用程序最终都会用 JavaScript 编写 -- Jeff Atwood @2007\n\n## 目录\n\n- [中后台](NODEJS.md)\n- [混合应用](HYBRID.md)\n- [小程序](WEAPP.md)\n- [css](CSS/README.md)\n- [前端代码片段汇总](FRONTEND/SNIPPETS.md)\n- [工具](SOFTWARE/README.md)\n- [awesome chrome 插件](AWESOME/AWESOME-CHROME-EXTENTION.md)\n- [awesome 微前端](AWESOME/AWESOME-MICRO-FRONTENDS.md)\n\n- [vue](#vue)\n- [react](#react)\n- [typescript](#typescript)\n- [常用库](#常用库)\n- [js](#js)\n- [es6](#es6)\n- [移动端](#移动端)\n- [h5 游戏](#h5游戏)\n- [微信公众号](#微信公众号)\n- [webpack](#webpack)\n- [性能与监控、seo](#性能与监控)\n- [高质文章](#高质文章)\n- [趋势](#趋势)\n- [动效](#动效)\n- [可视化](#可视化)\n- [低代码](#低代码)\n- [数据结构与算法 机器学习](#数据结构与算法)\n- [js core](#js-core)\n- [代码规范](#代码规范)\n- [canvas](#canvas)\n- [测试](#测试)\n- [网络请求](#网络请求)\n- [pwa](#pwa)\n- [其他必备知识](#其他必备知识)\n- [git](#git)\n- [安全](#安全)\n- [框架](#框架)\n- [jquery](#jquery)\n- [学习网站](#学习网站)\n- [工程化](#工程化)\n- [值得注意的库](#值得注意的库)\n- [效率](#效率)\n- [web ide](#web ide)\n- [书](#书)\n\n## vue\n\n- [benchmark](https://stefankrause.net/js-frameworks-benchmark8/table.html)(各个框架对比)\n\n### 官方\n\n- [awesome-vue](https://github.com/vuejs/awesome-vue)\n- [mpvue](https://github.com/Meituan-Dianping/mpvue)(vue 小程序)\n- [vuepress](https://github.com/vuejs/vuepress)\n- [vue-i18n](https://github.com/kazupon/vue-i18n)\n- [vuepress](https://github.com/vuejs/vuepress)(静态网站生成器)\n- [jsx](https://github.com/vuejs/jsx)\n- [Vue Template Explorer (Vue version: 2.6.11)](https://template-explorer.vuejs.org)\n\n### vue3\n\n- [vue提案](https://github.com/vuejs/rfcs)\n- [vue3官网](https://v3.vuejs.org/)\n- [vue3中文官网](https://v3.cn.vuejs.org)\n- [vue3](https://github.com/vuejs/vue-next)\n- [vue-next-template-explorer](https://vue-next-template-explorer.netlify.app)\n\n- [Vue3.0】尤雨溪 - 聊聊 Vue.js 3.0 Beta 官方直播完整版](https://www.bilibili.com/video/BV1ke411W7WB)\n- [尤雨溪-VueConf 2019-上海演讲视频](https://www.bilibili.com/video/BV1N4411V7Wi)\n- [Vue 作者尤雨溪为你分享：Vue 3.0 进展@VueConf CN 2018](https://www.bilibili.com/video/BV1Lt411e75w)\n- [从零实现 Vue3.0 响应式源码(正式版)](https://www.bilibili.com/video/BV1nE411d7eW?p=1)\n- [Vue Composition API](https://composition-api.vuejs.org)\n- [Vue3 中的数据侦测](https://juejin.im/post/5d99be7c6fb9a04e1e7baa34)\n- [Vue3.0 前的 TypeScript 最佳入门实践](https://juejin.im/post/5d0259f2518825405d15ae62)\n- [Vue3 究竟好在哪里？（和 React Hook 的详细对比）](https://juejin.im/post/5e9ce011f265da47b8450c11)\n- [Vue3 体验卡～](https://juejin.im/post/5e1451385188253ab54142e9)\n- [mini-vue](https://github.com/cuixiaorui/mini-vue)\n\n\n### vite\n\n- [Vue 2 系统如何快速迁移 Vite 作为开发工具](https://juejin.cn/post/6981626324880195614)\n- [vue-cli 迁移 vite2 实践小结](https://juejin.cn/post/6934316962952544269)\n- [wp2vite](https://github.com/tnfe/wp2vite)(webpack转vite)\n- [add-vue-suffix](https://github.com/BryanAdamss/add-vue-suffix)(加.vue)\n- [vue2迁移vite(vue2+ vite2 + ts)](https://juejin.cn/post/6975094506915889160)\n\n\n### 组件库或框架\n\n- [vue-tailwind](https://github.com/alfonsobries/vue-tailwind)(tailwind规范组件)\n- [uni-app](https://github.com/dcloudio/uni-app)(uni-app 是一个使用 Vue.js 开发小程序、H5、App 的统一前端框架)\n- [chameleon](https://github.com/didi/chameleon)(滴滴一套代码运行多端，一端所见即多端所见)\n\n- [overwatch-ui](https://github.com/Haixiang6123/overwatch-ui)\n- [element](https://github.com/ElemeFE/element)\n- [iview \\*22k+](https://github.com/iview/iview)\n- [vuetify](https://github.com/vuetifyjs/vuetify)\n- [mint-ui \\*14k+](https://github.com/ElemeFE/mint-ui)\n- [bootstrap-vue](https://github.com/bootstrap-vue/bootstrap-vue)\n- [ant-design-vue](https://github.com/vueComponent/ant-design-vue)\n- [cube-ui](https://github.com/didi/cube-ui)\n- [kpc](https://github.com/ksc-fe/kpc)(同时支持 vue 和 react 的组件库)\n- [如何开发跨框架的组件](https://mp.weixin.qq.com/s/BehjH5xVXFWohQXFl3u-kQ)\n\n* [vue-echarts](https://github.com/ecomfe/vue-echarts)\n* [v-charts](https://github.com/ElemeFE/v-charts)\n* [vue-awesome-swiper](https://github.com/surmon-china/vue-awesome-swiper)\n* [vee-validate](https://github.com/logaretm/vee-validate)\n* [vue-lazyload](https://github.com/hilongjw/vue-lazyload)\n* [vue-quill-editor](https://github.com/surmon-china/vue-quill-editor)\n* [vue-form-making](https://github.com/GavinZhuLei/vue-form-making)\n* [vuex-router-sync]()\n\n\n#### vue3\n- [nutui](https://github.com/jdf2e/nutui)(京东移动端组件库)\n\n\n### 文章\n\n- [逐行分析 vue](https://github.com/HcySunYang/vue-design)(vue 源码分析)\n- [learnVue](https://github.com/answershuto/learnVue)(vue 源码分析)\n- [vue-analysis](https://github.com/ustbhuangyi/vue-analysis)(vue 源码分析)\n- [浅谈使用 Vue 构建前端 10w+ 代码量的单页面应用开发底层](https://juejin.im/post/5b29c3bde51d45588d4d7110)\n- [VUE 单页应用骨架屏方案](https://juejin.im/post/5c3d952ff265da616e4ca9ad)\n- [一个 Vue 引发的性能问题](https://juejin.im/post/5c97691fe51d4522c55f9ead)\n- [Vue.js 组件精讲](https://juejin.im/book/5bc844166fb9a05cd676ebca)\n- [剖析 Vue.js 内部运行机制](https://juejin.im/book/5a36661851882538e2259c0f)\n- [Vuejs 建议和最佳实践](https://juejin.im/post/5d48f3b7e51d4561e224a2c8)\n- [Vue 项目性能优化 — 实践指南（网上最全 / 详细）](https://juejin.im/post/5d548b83f265da03ab42471d)\n- [vue / react 的 UI 库都在用的几个 DOM API🚀](https://juejin.im/post/5d808601f265da03ef7a469b)\n- [观众老爷们，来试试这个用 Vue 撸的数据可视化后台吧](https://juejin.im/post/5d08405a5188253049042d72)\n- [收下这波 vue 技巧，让开发效率翻倍](https://juejin.im/post/5d8f0475f265da5b9d1ee503)\n- [vue-router 源码：实现一个简单的 vue-router](https://juejin.im/post/5b35dcb5f265da59a117344d)\n- [前端路由简介以及 vue-router 实现原理](https://juejin.im/post/5b10b46df265da6e2a08a724)\n- [vue-router 源码分析-整体流程](https://juejin.im/post/584040e1ac502e006cbedb23)\n- [解密 vue-router: 从源码开始](https://juejin.im/post/5af108dc518825672565cf31)\n- [vue-router 源码：实现一个简单的 vue-router](https://juejin.im/post/5b35dcb5f265da59a117344d)\n\n- [Github 上 36 个最实用的 Vue 开源库](https://www.toutiao.com/a6740807773254107651)\n- [利用 VuePress 快速搭建项目文档管理系统](https://www.toutiao.com/a6740976049183523341)\n- [50 个好用的前端框架，千万收好以留备用](https://www.toutiao.com/a6741905003897684493)\n- [1 小时搞定 vuepress 快速制作 vue 文档/博客+免费部署预览](https://juejin.im/post/5dce1e0e5188254eda3936c5)\n\n### 开源项目\n\n- [vue-sell](https://github.com/ustbhuangyi/vue-sell)\n- [vue2-elm \\*29k+](https://github.com/bailicangdu/vue2-elm)\n- [iview-admin](https://github.com/iview/iview-admin)\n- [vue-element-admin \\*38k+](https://github.com/PanJiaChen/vue-element-admin)\n- [vue-data-board](https://github.com/dongsuo/vue-data-board)\n- [bilibili-vue](https://github.com/lybenson/bilibili-vue)\n- [best-resume-ever ](https://github.com/salomonelli/best-resume-ever)\n- [vue2-manage](https://github.com/bailicangdu/vue2-manage)\n- [JSUI](https://github.com/kitze/JSUI)\n- [mall-admin-web](https://github.com/macrozheng/mall-admin-web)\n- [vue-framework-wz](https://github.com/herozhou/vue-framework-wz)\n- [Vue-cnodejs](https://github.com/shinygang/Vue-cnodejs)\n- [gridea](https://github.com/getgridea/gridea)(一个静态博客写作客户端 ts vue )\n- [postwoman](https://github.com/liyasthomas/postwoman)(接口管理 类似 postman)\n- [微人事](https://github.com/lenve/vhr)(SpringBoot+Vue)\n- [V 部落](https://github.com/lenve/VBlog)(SpringBoot+Vue)\n- [KTV 点歌系统,含后台管理系统(完整版)](https://github.com/1046224544/ktv-select_music-system)\n- [profile-summary-for-github](https://github.com/tipsy/profile-summary-for-github)(Tool for visualizing GitHub profiles)\n- [Vue + Koa 从零打造一个 H5 页面可视化编辑器——Quark-h5](https://juejin.im/post/5dc81428e51d4523632ee793)\n- [vue-admin-beautiful](https://github.com/chuzhixin/vue-admin-beautiful)(适配 pc 移动端)\n- \n\n### vue ssr\n\nhttps://github.com/zbysir/go-vue-ssr\n\n- [实测 Vue SSR 的渲染性能：避开 20 倍耗时](https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&mid=2247485601&idx=1&sn=97a45254a771d13789faed81316b465a&=41#wechat_redirect)\n- [SSR 性能优化的误区](https://zhuanlan.zhihu.com/p/150259940)\n- [基于 VUE-SSR 的性能优化](https://segmentfault.com/a/1190000022257834?utm_source=tag-newest)\n- https://github.com/BFjacky/vue-ssr-template\n\n### 常用工具\n\n#### husky\n\n- [husky](https://github.com/typicode/husky)(git hook)\n- [yorkie](https://github.com/yyx990803/yorkie)(git hook 与 husky 功能相同)\n  注意：一定要使用 npm 安装 eslint 和 husky，因为在 windows 操作系统下, 用 yarn 安装依赖，不会触发 husky pre-commit 钩子命令。\n  还有就是注意 husky 的版本，否则也可能不触发 git 钩子\n\n\n\n\n#### 常用组件或工具\n\n- [vue-count-to](http://panjiachen.github.io/countTo/demo/)\n- [vue-cookieconsent-component](https://www.npmjs.com/package/vue-cookieconsent-component)\n- [vue-if-bot](https://www.npmjs.com/package/vue-if-bot)(防止机器人看到)\n- [vue-cropperjs](https://www.npmjs.com/package/vue-cropperjs)\n- [vue-virtual-scroll-list](https://github.com/tangbc/vue-virtual-scroll-list) (无尽列表) - Recommend\n- [vue-virtual-scroller](https://github.com/Akryum/vue-virtual-scroller) (无尽列表) - Easy to use\n\n### nuxt\n\n- [nuxt](https://github.com/nuxt/nuxt.js)(vue 服务端渲染)\n- [官网](https://nuxtjs.org/)\n- [中文官网](https://www.nuxtjs.cn/)\n- [awesome-nuxt](https://github.com/nuxt-community/awesome-nuxt)\n- [nuxt+pm2 自动化部署及打包后文件自动上传阿里云 oss](http://quanzhan.applemei.com/webStack/TkRjNU5BPT0=)\n\n\n### 常见问题\n\n- [vue 项目使用 svg 图片（svg-sprite-loader 以及 vue2-svg-icon 的使用）](https://blog.csdn.net/txfyteen/article/details/84865157)\n- [VUE-cli3 使用 svg-sprite-loader](https://juejin.im/post/6844903695478439949)\n\n\n## monorepo\n\n\n### lerna\n\n- [lerna](https://github.com/lerna/lerna)(多个包在一起打包)\n- [基于 Lerna 管理 packages 的 Monorepo 项目最佳实践](https://juejin.im/post/5d4aa8905188250e4258249e)\n- [Vue CLI 3 结合 Lerna 进行 UI 框架设计](https://juejin.im/post/5cb12844e51d456e7a303b64)\n- [lerna帮助项目多包管理](https://www.zhangjinglin.cn/blog/d3dd7adfcdbaeb5f7adb7d78ded8ad95.html)\n\n### turborepo\n- [turborepo](https://github.com/vercel/turborepo)\n\n\n\n## react\n\n### 官网\n\n- React 官网 https://reactjs.org/\n- React 中文网 https://react.docschina.org/\n- React-router https://reacttraining.com/react-router\n- redux https://redux.js.org/introduction/getting-started\n- redux 中文 http://cn.redux.js.org/\n- umi https://umijs.org/\n- dva https://dvajs.com\n\n* [react-devtools-tutorial](https://react-devtools-tutorial.now.sh/)\n* [react-native-web](https://github.com/necolas/react-native-web)(rn 转 web)\n\n### 参考资料\n\n- [86张脑图，一口气看完 React 🎉](https://juejin.cn/post/7085145274200358949)\n- [三天精通 React](https://bytedance.feishu.cn/docs/doccnmgIb5KcV3F0zeE47o6PvCh#)\n- [React 技术揭秘](https://react.iamkasong.com)\n- [React 源码解析](https://github.com/KieSun/react-interpretation)\n- [你真的了解 React 生命周期吗](https://juejin.im/post/5df648836fb9a016526eba01)\n\n* awesome https://github.com/enaqx/awesome-react\n* react-hook https://github.com/streamich/react-use\n* React.js 小书 https://juejin.im/post/58c7a16e2f301e006bd03dbe\n* React 入门看这篇就够了 https://segmentfault.com/a/1190000012921279#articleHeader0\n* react demo https://gist.github.com/sAbakumoff/7b8510adcb16bded189d747e34f5e114\n* React 同构与极致的性能优化 https://segmentfault.com/a/1190000012464033\n* 阿里开源项目 https://segmentfault.com/a/1190000016773002\n\n- [一文速览 React 全栈](https://juejin.im/post/5d0ee2906fb9a07ea33c1f8b)\n- [掘金最污的 React16.x 图文视频教程(2 万 5 千字长文-慎入)](https://juejin.im/post/5d085be0f265da1bac401937)\n- [你要的 React 面试知识点，都在这了](https://juejin.im/post/5cf0733de51d4510803ce34e)\n- [如何优化你的超大型 React 应用 【原创精读】](https://juejin.im/post/5d35d3ecf265da1bc23fb654)\n- [React 实战：设计模式和最佳实践](https://juejin.im/book/5ba42844f265da0a8a6aa5e9)\n- [21 个让 React 开发更高效更有趣的工具](https://segmentfault.com/a/1190000020038593#articleHeader2)\n- [在 react/redux 中使用 Immutable](https://www.cnblogs.com/greatluoluo/p/8469224.html)\n- [从头开始，彻底理解服务端渲染原理(8 千字汇总长文)](https://zhuanlan.zhihu.com/p/76967335)\n- [【长文慎入】一文吃透 React SSR 服务端渲染和同构原理](https://cloud.tencent.com/developer/article/1599720)\n- [React + Koa 实现服务端渲染(SSR)](https://juejin.cn/post/6844903608501141512)\n- [React 的性能优化（一）当 PureComponent 遇上 ImmutableJS](https://tech.youzan.com/purecomponent-immutablejs)\n- [Profiling React performance with React 16 and Chrome Devtools.](https://calibreapp.com/blog/react-performance-profiling-optimization/)\n- [React 性能优化技巧总结](https://segmentfault.com/a/1190000018257360)\n- [介绍 React Profiler](https://reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html)\n- [React Router 中文文档（一）](https://segmentfault.com/a/1190000014294604)\n- [React Router 4 简易入门](https://segmentfault.com/a/1190000010174260)\n- [看完这篇，你也能把 React Hooks 玩出花](https://juejin.im/post/5d754dbde51d4561cd2466bf)\n- [React16 常用 api 解析以及原理剖析](https://juejin.im/post/5d75a881f265da03d211666c)\n- [React 面试全解](https://zhuanlan.zhihu.com/p/76909668)\n- [React 路由鉴权](https://juejin.im/post/5d6352116fb9a06ae8361932)\n- [ReactRouter-V5 免费图文视频教程（我免费，有培训机构什么事，就出！）](https://juejin.im/post/5d50dd4ff265da039a2879cd)\n- [精读《React Hooks 最佳实践》](https://juejin.im/post/5d75ae7a6fb9a06b0f2407e8)\n- [收藏！送给 React 研发人员的 22 款超强工具](https://zhuanlan.zhihu.com/p/83675159)\n- [全栈 React + GraphQL 教程（一）](https://www.zcfy.cc/article/full-stack-react-graphql-tutorial-apollo-graphql-4341.html?t=new)\n- [React Hooks 详解 【近 1W 字】+ 项目实战](https://juejin.im/post/5dbbdbd5f265da4d4b5fe57d)\n- [React 之 CLODOP 实战：(一)手写并打印快递单](https://juejin.im/post/5e699522e51d4526c3591397)\n- [Redux - redux-toolkit](https://juejin.cn/post/6927665767651966990)\n- [使用redux-toolkit 改造你的redux](https://juejin.cn/post/6844904129178009613)\n- [redux-toolkit 黑魔法](https://juejin.cn/post/6906401963655561223)\n- [最受欢迎的5个React动画库](https://juejin.cn/post/6945015156933918734)\n- [「react进阶」一文吃透react-hooks原理](https://juejin.cn/post/6944863057000529933)\n\n\n### 常用库\n\n- [ant-design](https://ant.design/index-cn)\n- [ant-design-mobile](https://mobile.ant.design/index-cn)\n\n- [redux-actions](https://github.com/redux-utilities/redux-actions)\n- [redux-toolkit](https://redux-toolkit.js.org/) (Redux官方出品)\n\n* react-intl\n* rc-form https://github.com/react-component/form\n\n- [nivo](https://github.com/plouc/nivo)(React 数据可视化库)\n- [react-virtualized](https://github.com/bvaughn/react-virtualized)(无尽列表)\n- [react-window](https://github.com/bvaughn/react-window)(无尽列表)\n- [immerjs](https://github.com/immerjs/immer)(数据不可变)\n- immutable https://github.com/immutable-js/immutable-js\n- [immer.js:也许更适合你的 immutable js 库](https://juejin.im/post/5e83e532f265da47e02a6d5a)\n- [rxjs](https://rxjs.dev/guide/overview)(函数响应式编程)(https://cn.rx.js.org/manual/overview.html)\n- [rxjs-hooks](https://github.com/LeetCode-OpenSource/rxjs-hooks)(力扣开源)\n\n\n\n### 框架\n\n- umi https://umijs.org/\n- [dumi](https://github.com/umijs/dumi)(react 文档站点)\n- 飞冰 https://ice.work/\n- beidou https://github.com/alibaba/beidou\n- egg-react-ssr https://github.com/ykfe/egg-react-ssr\n- react-server https://github.com/redfin/react-server\n\n* [Vulcan.js](https://github.com/vulcanjs/vulcan)(The full-stack React+GraphQL framework)\n\n\n### 解决方案\n\n- [react-templates](https://github.com/wix/react-templates)(类似vue的写法)\n\n### 服务端渲染\n\n- next.js https://github.com/zeit/next.js\n- [nextjs 官网](https://nextjs.org/)\n- [nextjs 官网](https://www.nextjs.cn/)\n\n### Demo\n\n- [realworld ★31k+](https://github.com/gothinkster/realworld)\n\n### 开源项目\n\n- [wexond](https://github.com/wexond/desktop)(A privacy-focused, extensible and beautiful web browser)\n- [房屋租赁平台](https://github.com/TrillCyborg/fullstack)(React/ApolloGraphQL/Node/Mongo demo written in Typescript)\n- [lz-h5-edit](https://github.com/lzuntalented/lz-h5-edit)(react 版 h5 微场景编辑器 )\n- [基于中间件思想设计可扩展的 UI 组件库](https://juejin.im/post/5dc4f40f5188250acf57e965)\n\n## typescript\n\n\n### 官网\n\n### 参考资料\n\n- [2021 TypeScript史上最强学习入门文章 ( 2w 字)](https://zhuanlan.zhihu.com/p/455991366)(看这篇就够了)\n- 深入理解 TypeScript https://github.com/jkchao/typescript-book-chinese https://jkchao.github.io/typescript-book-chinese/ https://github.com/basarat/typescript-book/\n- typescript 中文 https://www.tslang.cn/\n- typescript 中文 https://ts.xcatliu.com/ https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html\n- typescript https://www.html.cn/doc/typescript/doc/handbook/tutorials/React.html\n- typescript 进阶 https://www.jianshu.com/p/13a4eb1001f1\n- awesome https://github.com/dzharii/awesome-typescript\n- TypeScript 入门指南（基础篇） https://juejin.im/post/5d3bb567f265da1b8f1b09c1\n- TypeScript 入门指南 https://mp.weixin.qq.com/s/Oyawvb5BD-OKvMuF2tQ0pw?\n- [你不知道的 TypeScript 高级类型](https://segmentfault.com/a/1190000023800536)\n\n\n\n### react+typescript demo\n\n- React+redux+typescript https://github.com/piotrwitek/react-redux-typescript-guide\n\n- https://github.com/fi3ework/blog/tree/master/react-typescript-cheatsheet-cn\n- typescript-tutorial https://github.com/xcatliu/typescript-tutorial\n- https://github.com/Lemoncode/react-typescript-samples\n- https://github.com/rokoroku/react-redux-typescript-boilerplate\n- https://github.com/alibaba/pont(前端接口层工具)\n\n### 文章\n\n- [三千字讲清 TypeScript 与 React 的实战技巧](https://juejin.im/post/5d3aad8b6fb9a07ecb0bef5e)\n- [一篇朴实的文章带你 30 分钟捋完 TypeScript,方法是正反对比](https://juejin.im/post/5d53a8895188257fad671cbc)\n\n## 常用库\n\n- [core-js](https://github.com/zloirock/core-js)(es6 垫片)\n- [driver.js](https://kamranahmed.info/driver.js/)(新手指引)\n- [responsively](https://responsively.app/)(开发响应式网站效率)\n\n\n\n### 数据\n\n- Immutablejs https://github.com/immutable-js/immutable-js\n\n### 富文本编辑器\n\n- simditor https://github.com/mycolorway/simditor\n- https://mdnice.com/?from=juejin\n- [ueditor]([ueditor](https://github.com/fex-team/ueditor))\n- [wangEditor](https://github.com/wangeditor-team/wangEditor)\n- [prosemirror](https://prosemirror.net/)\n- [vue-element-admin](https://github.com/PanJiaChen/vue-element-admin)(里面的文本编辑器)\n- [monaco-editor](https://github.com/microsoft/monaco-editor)(代码编辑器)\n\n#### 文章\n- [富文本编辑器初探](https://juejin.cn/post/6844903555900375048)\n- [富文本原理了解一下？](https://juejin.cn/post/6844903871110709256)\n\n\n### markdown\n- [marktext](https://github.com/marktext/marktext)(markdown editor)\n- [bytemd](https://github.com/bytedance/bytemd)(字节开源的md编辑器)\n- \n\n\n### 时间\n\n- moment\n\n* [dayjs](https://github.com/iamkun/dayjs)(时间格式转换)\n\n### 网络请求\n\n- [axios](https://github.com/axios/axios)\n- [mande](https://github.com/posva/mande)(fetch链式工具库)\n- [fetch/node-fetch]\n\n### 图片\n\n- [cropperjs](https://github.com/fengyuanchen/cropperjs)(图片裁剪)\n- [imgcook](https://imgcook.taobao.org/)(由设计稿一键智能生成代码)\n\n### canvas\n\n- [spritejs](https://spritejs.org/#/)(360)\n\n### 其他\n\n- [clipboard](https://github.com/zenorocha/clipboard.js)(剪贴板)\n- [FileSaver](https://github.com/eligrey/FileSaver.js)(文件另存为)\n- [excel-js ](https://github.com/SheetJS/js-xlsx)(xlsx 转换)\n- [jsPDF](https://github.com/MrRio/jsPDF)(生成 pdf)\n- [fileApi](https://github.com/mailru/FileAPI)(上传, 支持进度/分段)\n- [swiper](https://github.com/nolimits4web/swiper)(轮播)\n- [qrcodejs](https://github.com/davidshimjs/qrcodejs)(二维码生成器)\n- [autosize](https://github.com/jackmoore/autosize)(textara 高度自适应文字)\n- [shake.js](https://github.com/alexgibson/shake.js)(监听手机震动)\n- [progressbar](https://github.com/kimmobrunfeldt/progressbar.js)(进度条)\n- [DoraemonKit](https://github.com/didi/DoraemonKit)(简称 \"DoKit\" 。一款功能齐全的客户端（ iOS 、Android、微信小程序 ）研发助手，你值得拥有。)\n\n## 物联网\n\n- mosca https://github.com/mcollina/mosca\n- MQTT https://github.com/mqttjs/MQTT.js\n\n### 文章\n\n- [一步步搭建物联网系统](https://github.com/phodal/designiot)\n- [11 个开源物联网平台和工具](https://www.toutiao.com/a6754237961857925639)\n\n### demo\n\n- javascript-mqtt-demo-wearingTip https://github.com/coolnameismy/javascript-mqtt-demo-wearingTip\n- 面试官(7): 聊一聊 Babel? https://juejin.im/post/5c03b85ae51d450c740de19c\n\n## js\n\n- [2020年 JavaScript 明星项目](https://risingstars.js.org/2020/zh)(bestofjs)\n\n- [JS 官方教程](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript)\n- [JS 代码片段](./JS/JS代码片段.md)\n- [JavaScript 八张思维导图](https://zhuanlan.zhihu.com/p/60003120)\n- [前端开发中 79 条不可忽视的知识点汇总](https://juejin.im/post/5d8989296fb9a06b1f147070)\n- [一张刮刮卡竟包含这么多前端知识点](https://juejin.im/post/5d8a3d62e51d45780f060490)\n- [透过现象看本质: 常见的前端架构风格和案例](https://juejin.im/post/5d7ffad551882545ff173083)\n- [灵活运用 JS 开发技巧](https://juejin.im/post/5cc7afdde51d456e671c7e48)\n- [JavaScript 工具函数大全（新）](https://juejin.im/post/5da1a04ae51d45783d6122bf)\n- [js 运算符优先级](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence)\n- [书到用时方恨少，一大波 JS 开发工具函数来了](https://juejin.im/post/5e6cf42bf265da57397e3694)\n- [JavaScript 20 年](https://github.com/doodlewind/jshistory-cn)\n- [mocha1995](https://github.com/doodlewind/mocha1995)\n- [freecodecamp](https://learn.freecodecamp.one/)\n- [网页端「应用跳转」技术实现演变](https://zhuanlan.zhihu.com/p/33170734)\n\n\n### console\n- [devtools-frontend](https://github.com/ChromeDevTools/devtools-frontend)\n- [eruda](https://github.com/liriliri/eruda)\n- [vConsole](https://github.com/Tencent/vConsole)\n- [WeConsole](https://github.com/weimobGroup/WeConsole)(微信小程序console)\n- [mdebug](https://github.com/tnfe/mdebug)(腾讯开源)\n- \n\n### 正则表达式\n\n- [练完这篇就会写正则](https://juejin.im/post/5d89edb1518825097619ecfe)\n- [learn-regex ★22k+](https://github.com/ziishaned/learn-regex) :100:\n- [正则表达式 30 分钟入门教程](https://www.cnblogs.com/deerchao/archive/2006/08/24/zhengzhe30fengzhongjiaocheng.html)\n- [正则表达式不要背](https://juejin.im/post/5cdcd42551882568651554e6)\n- [2019 年 JS 正则大全(常用)](https://juejin.im/post/5d245d4151882555300feb77)\n- [JS 正则表达式完整教程（略长）](https://juejin.im/post/5965943ff265da6c30653879)\n\n### 函数式编程\n- [函数式编程，真香](https://juejin.cn/post/6844903743117361165)\n- [Pragmatic, balanced FP in JavaScript](https://github.com/getify/Functional-Light-JS)(English)\n- [JavaScript 轻量级函数式编程](https://segmentfault.com/a/1190000010887890)(中文翻译)\n- [「前端进阶」彻底弄懂函数组合](https://juejin.im/post/5d50bfebf265da03cb122b6f)\n- [函数式编程，真香](https://juejin.im/post/5c19c3ffe51d45059b632eef)\n- [深入学习 javascript 函数式编程](https://juejin.im/post/5c1a231de51d452ce364d945)\n- [一文带你了解 JavaScript 函数式编程](https://mp.weixin.qq.com/s/AKYMse3cSyMhT95kdzdldw)\n- [不要再尝试函数式编程了](https://mp.weixin.qq.com/s/1pAzdyBR4qE1A2aZF4GVIw)\n- [范式篇 - 如何把函数式编程合理运用到日常工作中](https://juejin.im/post/5d8f0866e51d4578110dc765)\n- [帮你揭开函数式编程的底层面纱——喜提国庆 buff](https://juejin.im/post/5d7683bd6fb9a06ad229f557)\n- [Typescript 版图解 Functor , Applicative 和 Monad](https://juejin.im/post/5d6298c75188255625591ae6)\n- [Ramda 函数库参考教程](http://www.ruanyifeng.com/blog/2017/03/ramda.html)\n\n### 兼容性\n\n- [在 javascript 中的浏览器兼容问题以及兼容浏览器汇总（默认事件，阻止冒泡，事件监听。。。）以及解决方式详解](https://www.cnblogs.com/zxlone/p/11483457.html)\n\n### 其他\n\n- [【THE LAST TIME】彻底吃透 JavaScript 执行机制](https://juejin.im/post/5d901418518825539312f587)\n- [【译】JavaScript 的工作原理：事件循环及异步编程的出现和 5 种更好的 async/await 编程方式](https://juejin.im/post/5c32b971f265da61407f1057)\n- [优秀 JavaScript 开发人员应掌握的 9 个技巧](https://juejin.im/post/5c4506c9e51d45524c7cf206)\n- [JS 中轻松遍历对象属性的几种方式](https://juejin.im/post/5d48c275f265da03b12032a1)\n- [你不懂 JS（系列丛书）](https://github.com/JoeHetfield/You-Dont-Know-JS)\n- [前端开发变量命名系列 - JavaScript 篇](https://segmentfault.com/a/1190000020039039)\n- [一文带你了解 JavaScript 函数式编程](https://mp.weixin.qq.com/s/AKYMse3cSyMhT95kdzdldw)\n- [你真的知道 0.1+0.2 为何不等于 0.3 吗？](https://juejin.im/post/5d6e74c35188254628237d5d)\n- [收下这波 JS 技巧，从此少加班](https://juejin.im/post/5d7659c76fb9a06b307068ed)\n- [JavaScript 基础——前端不懂它，会再多框架也不过只是会用而已](https://www.toutiao.com/a6738734261286732291)\n- [Tasks, microtasks, queues and schedules](https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/)\n- [尾调用和尾递归](https://juejin.im/post/5acdd7486fb9a028ca53547c)\n- [js 中的 stopImmediatePropagation 方法和 stopPropagation 方法的区别](https://www.cnblogs.com/EnSnail/p/9796237.html)\n- [二进制(原码、反码、补码)](https://www.cnblogs.com/fuhaots2009/p/3476502.html)\n- [用 js 获取页面元素的位置图文总结](https://juejin.im/post/5b0eb6146fb9a009f74bf1a5)\n- [前端导出Excel，让后端刮目相看](https://juejin.cn/post/7030291455243452429)\n\n### 开源项目\n\n- [layout-ui](https://github.com/0123cf/layout-ui)(可视化布局 纯 css 布局 Layout-UI)\n- [resume](https://github.com/resume/resume.github.com)(A service that creates a résumé based on your GitHub repos/activity.)\n- [10 个后台管理 UI 框架](https://www.jianshu.com/p/3e6c9ebbd8fd)\n- [muuri](https://github.com/haltu/muuri)(Responsive, sortable, filterable and draggable grid layouts)\n- [odoo](https://github.com/odoo/odoo)(免费开源的企业数智化管理平台)\n\n### 常用库\n\n- [velocity](https://github.com/julianshapiro/velocity)(js 动画库)\n- [TweenJS](https://github.com/CreateJS/TweenJS)\n- [tween.js](https://github.com/tweenjs/tween.js)\n- [GSAP](https://github.com/greensock/GSAP)(高性能 js 动画库)\n- [color-js](https://github.com/brehaut/color-js)(A color management API )\n- [path-to-regexp](https://github.com/pillarjs/path-to-regexp)(用正则匹配路径)\n\n## es6\n\n- [1.5 万字概括 ES6 全部特性(看图就能记下，值得收藏)](https://juejin.im/post/5d9bf530518825427b27639d)\n- [ECMAScript 6 入门](https://es6.ruanyifeng.com/)\n- [前端模块化详解(完整版)](https://juejin.im/post/5c17ad756fb9a049ff4e0a62)\n- [一口(很长的)气了解 babel](https://juejin.im/post/5c19c5e0e51d4502a232c1c6)\n- [Promise 源码详解](https://juejin.im/post/5b32f552f265da59991155f0)\n- [最后一次搞懂 Event Loop](https://juejin.im/post/5cbc0a9cf265da03b11f3505)\n- [深入浅出 Babel 上篇：架构和原理 + 实战](https://juejin.im/post/5d94bfbf5188256db95589be)\n- [babel-handbook](https://github.com/jamiebuilds/babel-handbook)\n\n### babel\n\n- [你真的会用 Babel 吗?](https://juejin.im/post/59b9ffa8f265da06710d8e89)\n\n## 移动端\n\n### 文章\n\n- [移动端适配深度探究](https://juejin.im/post/5c9830e65188252d64583343)\n- [第三代移动端布局方案](https://juejin.im/post/5cb078f05188251ace1fedb4)\n- [移动端 1px 解决方案](https://juejin.im/post/5d19b729f265da1bb2774865)\n- [拿到一份设计稿，我该如何进行移动端开发？](https://juejin.im/post/5d736747e51d4561ff66688c)\n- [前端基础知识概述 -- 移动端开发的屏幕、图像、字体与布局的兼容适配](https://juejin.im/post/5d70747cf265da03e16897c8)\n- [移动端 1px 细线解决方案总结](https://www.cnblogs.com/lunarorbitx/p/5287309.html)\n- [稍微整理了几个经常在 H5 移动端开发遇到的东西](https://juejin.im/post/5d6e1899e51d453b1e478b29)\n- [中高级前端必须注意的40条移动端H5坑位指南 | 网易三年实践](https://juejin.cn/post/6921886428158754829)\n\n\n### 常用库\n\n- lib-flexible https://github.com/amfe/lib-flexible\n\n\n### 常见问题\n- [iOS 上拉边界 下拉出现 白色空白](https://segmentfault.com/a/1190000023512164)\n- [ios input输入时弹出键盘框 页面整体上移键盘框消失后页面不能回弹的问题](https://blog.csdn.net/zhangkeke_/article/details/88739521)\n- [12个前端必会 H5 问题及解决方法](https://zhuanlan.zhihu.com/p/181212066)\n- [VUE前端界面在iOS中遇到的坑](https://www.jianshu.com/p/dcdec7572987)\n\n## h5 游戏\n\n### 开源项目\n\n- [Hilo - HTML5 互动游戏引擎](https://github.com/hiloteam/Hilo)\n- [github games](https://github.com/leereilly/games)\n\n### demo\n\n- [🎮 你见过凌晨 4 点的洛杉矶吗？]（https://juejin.im/post/5e37ec2a6fb9a02fec665530)\n\n## 微信公众号\n\n### 实战项目\n\n- wechaty https://github.com/Chatie/wechaty\n- wechatBot https://github.com/gengchen528/wechatBot\n\n### 文章\n\n- [微信 H5 页面兼容性解决方案](https://mp.weixin.qq.com/s/5-BzKF0ME-vHaY51kkh6YA)\n\n## webpack\n\n### 官网\n\n- [webpack](https://github.com/webpack/webpack)\n- [webpack 官方文档](https://webpack.js.org)\n- [webpack 中文文档](https://github.com/docschina/webpack.js.org)(https://webpack.docschina.org/)\n- [深入浅出 Webpack](https://webpack.wuhaolin.cn/)(书)\n\n### webpack\n\n- [webpack 源码阅读之主流程分析](https://segmentfault.com/a/1190000020264009)\n- [webpack 系列之一总览](https://juejin.im/post/5bf7c2186fb9a049fd0f7e8a)(滴滴)\n- [Webpack 源码（二）—— 如何阅读源码](https://segmentfault.com/a/1190000008060484)\n- [Webpack 源码解读：理清编译主流程](https://juejin.im/post/5dc01199f265da4d12067ebe)\n- [从 Webpack 源码探究打包流程，萌新也能看懂～](https://juejin.im/post/5c0206626fb9a049bc4c6540)\n- [webpack4.0 源码分析之 Tapable](https://juejin.im/post/5abf33f16fb9a028e46ec352)\n- [webpack 原理](https://segmentfault.com/a/1190000015088834)\n- [webpack 详解](https://juejin.im/post/5aa3d2056fb9a028c36868aa)\n- [Webpack 4 配置最佳实践](https://juejin.im/post/5b304f1f51882574c72f19b0)\n\n### loader\n\n- [编写一个 loader](https://webpack.docschina.org/contribute/writing-a-loader/)\n- [webpack loader—自己写一个按需加载插件](https://juejin.im/post/5b8e3162f265da432f655639)\n- [手把手教你撸一个 Webpack Loader](https://juejin.im/post/5a698a316fb9a01c9f5b9ca0)\n- [编写自己的 Webpack Loader](https://juejin.im/post/59df06e6f265da430d5701d0)\n\n### 插件\n\n- [编写一个插件](https://webpack.docschina.org/contribute/writing-a-plugin/)\n- [干货！撸一个 webpack 插件(内含 tapable 详解+webpack 流程)](https://juejin.im/post/5beb8875e51d455e5c4dd83f)\n- [编写自定义 webpack 插件从理解 Tapable 开始](https://juejin.im/post/5dcba29f6fb9a04abb01fd77)\n\n### 文章\n\n- [前端构建秘籍](https://juejin.im/post/5c9075305188252d5c743520)\n- [【Cute-Webpack】Webpack4 入门手册（共 18 章）](https://segmentfault.com/a/1190000020063707)\n- [Webpack 实用技巧高效实战](https://mp.weixin.qq.com/s?__biz=MzI1NjEwMTM4OA==&mid=2651231994&idx=1&sn=17a344ef74809ddd7e8e5b13b00c5652&scene=1&srcid=0804usmqGwAu6Ih2HtQaeZj4#rd)\n- [一步步从零开始用 webpack 搭建一个大型项目](https://juejin.im/post/5de06aa851882572d672c1ad)\n- [手写 webpack 核心原理，再也不怕面试官问我 webpack 原理](https://juejin.im/post/5f1a2e226fb9a07eb1525d17)\n- [手写一个简易的 Webpack](https://juejin.im/post/5ccfe03f51882541e37e6959)\n- [从 0 到 1，手写 webpack 的开发之路](https://juejin.im/post/5e0ae192e51d454165776c7b)\n- [带你深度解锁Webpack系列(优化篇)](https://segmentfault.com/a/1190000022205477)\n- [聊一聊 webpack 的打包优化实践](https://juejin.cn/post/6844904105031237645)\n\n## 性能与监控\n\n- [quicklink](https://github.com/GoogleChromeLabs/quicklink)(prefetch 视野内的链接)\n\n### 文章\n\n- [悟空活动中台 - H5 活动加载优化](https://mp.weixin.qq.com/s/6gtVR0nVNcZvREjwftZgzA)\n- [前端性能优化原理与实践](https://juejin.im/book/5b936540f265da0a9624b04b)\n- [GMTC 大前端时代前端监控的最佳实践](https://segmentfault.com/a/1190000015426924)\n- [你必须懂的前端性能优化](https://segmentfault.com/a/1190000019897234)\n- [前端性能优化不完全手册](https://segmentfault.com/a/1190000018827395)\n- [那些你不知道的 meta 标签](https://juejin.im/post/5c288546e51d451a6b51554a)\n- [node 实战前端缓存总结](https://juejin.im/post/5ca083eaf265da30bd3e459b)\n- [前端异常监控解决方案研究 – 腾讯 CDC](https://juejin.im/entry/5d624d09e51d453bdc41c0ec)\n- [从 0 到 1 的前端异常监控项目实战](https://mp.weixin.qq.com/s/Q1KGbkcF-AMWsWN7Ae7E1A)\n- [炫技，从 12.67s 到 1.06s 的网站性能优化实战](https://mp.weixin.qq.com/s/sU4Y2pBU659O1vNyZSSX5Q)\n- [H5 秒开方案大全](https://www.toutiao.com/a6753544973569753607)\n- [撸一个前端监控系统（React + Node + Mysql + Webpack plugin + Docker）—— （上）](https://juejin.im/post/5e3146cce51d453176604809)\n\n### 性能\n\n#### 文章\n\n- [「中高级前端」高性能渲染十万条数据](https://juejin.im/post/5d76f469f265da039a28aff7)\n- [2018 前端性能优化清单](https://juejin.im/post/5a966bd16fb9a0635172a50a)\n- [Front-End Performance Checklist 2019 [PDF, Apple Pages, MS Word]](https://www.smashingmagazine.com/2019/01/front-end-performance-checklist-2019-pdf-pages/)\n- [关于用户访问请求慢,TTFB 时间长的问题分析](https://blog.csdn.net/ankeway/article/details/78669044/)\n- [性能优化魔法师：中文字体实践篇](https://juejin.im/post/5e57419f51882549431fef71)\n\n### 监控\n\n#### 开源库\n\n- https://github.com/BetterJS\n- https://github.com/iv-web/aegis-report\n- https://github.com/RicardoCao-Biker/Front-End-Monitoring\n- https://github.com/MriLiuJY/monitorFE\n- https://github.com/710leo/urlooker\n\n#### 文章\n\n- [搭建一个前端监控系统,不再错过 BUG](https://juejin.im/post/5a372716518825258a5fbc80)\n- [捕获未处理的 Promise 错误方法](https://www.jb51.net/article/125664.htm)\n- [前端异常监控、上报及 js 压缩代码定位](https://juejin.im/post/5b55c3495188251acb0cf907)\n- [5 分钟撸一个前端性能监控工具](https://juejin.im/post/5b7a50c0e51d4538af60d995)\n- [前端异常监控解决方案研究](https://cdc.tencent.com/2018/09/13/frontend-exception-monitor-research/)\n- [从无到有<前端异常监控系统>落地](https://juejin.im/post/5a3dca226fb9a04515441686)\n- [轨迹回放（录屏）功能- 前端监控之数据收集篇](https://juejin.im/post/5d3ebe00e51d4561f95ee9b2)\n- [前端性能监控新工具 perfume](https://juejin.im/post/5d81f82df265da03ae78ac33)\n- [自己动手打造前端性能监控系统](https://www.musicfe.cn/page/17)\n- [蚂蚁金服如何把前端性能监控做到极致?](https://www.infoq.cn/article/Dxa8aM44oz*Lukk5Ufhy)\n- [DIY 一个前端监控平台（上）](https://juejin.im/post/5c8cd7bd5188257ed47b22fe)\n- [手刃前端监控系统](https://juejin.im/post/5bbc2695e51d4539701e7ea6)\n- [一步一步搭建前端监控系统：如何监控资源加载错误？](https://juejin.im/post/5d576c9e51882562945d1623)\n- [撸一个前端监控系统（React + Node + Mysql + Webpack plugin + Docker）—— （上）](https://juejin.im/post/5e3146cce51d453176604809)\n\n### 常用工具\n\n- [阿里云监控](https://help.aliyun.com/document_detail/58652.html?spm=a2c4g.11174283.3.2.3245668cvlC7WK) (网站性能、错误等监控)\n- [growingio](https://www.growingio.com) (网站访问量监控)\n- [sentry](https://sentry.io) (错误监控)\n- [fundebug](https://www.fundebug.com/?utm_source=random) (错误监控)\n- [gtmetrix](https://gtmetrix.com) (网站访问速度)\n- [zanePerfor](https://github.com/wangweianger/zanePerfor) (网站访问速度)\n- [pingdom](https://www.pingdom.com/) (网站状况监控)\n\n### 开源库\n\n- [hiper \\*2k+](https://github.com/pod4g/hiper)\n\n### SEO\n\n- [为什么单页面的 seo 不友好？如何解决这一问题？](https://juejin.im/post/5d9848306fb9a04ddf2c341b)\n\n## 高质文章\n\n- [if 我是前端团队 Leader，怎么制定前端协作规范?](https://juejin.im/post/5d3a7134f265da1b5d57f1ed#heading-44)\n- [阿里大佬浅谈大型项目前端架构设计](https://mp.weixin.qq.com/s/8K4b2qLU3SWcADBlpAFtZg)\n- [年终回顾，为你汇总一份「前端技术清单」](https://juejin.im/post/5bdfb387e51d452c8e0aa902)\n- [8 年前端开发的知识点沉淀(不知道会多少字，一直写下去吧...)](https://juejin.im/post/5d0878aaf265da1b83338f74)\n- [fullstack tutorial](https://github.com/frank-lam/fullstack-tutorial)\n- [五星推荐的系列文章清单](https://juejin.im/post/5c1f01fef265da61587723f4)\n- [端动态化方案详细设计](https://juejin.im/post/5c274d0151882504bd0e80b3)\n- [让虚拟 DOM 和 DOM-diff 不再成为你的绊脚石](https://juejin.im/post/5c8e5e4951882545c109ae9c)\n- [彻底理清前端单页面应用（SPA）的实现原理 【精读源码】](https://segmentfault.com/a/1190000019936510)\n- [原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的](https://juejin.im/post/59c60691518825396f4f71a1)\n- [使用 postMessage 解决 iframe 跨域通信问题](https://juejin.im/post/590c3983ac502e006531df11)\n- [基于工程经验的『RESTful 接口设计规范』](https://juejin.im/post/5afee0e86fb9a07ab379b371)\n- [RESTful API 编写指南](https://juejin.im/post/57d168e9bf22ec005f98a3a5)\n- [前端技术栈干货文章链接（精品）](https://zhuanlan.zhihu.com/p/76184208)\n- [新时代下前端工程师的推荐书籍和必备知识](https://juejin.im/post/5c7129b0f265da2d9710f7ca)\n- [一个全栈增长工程师的练手项目集](https://github.com/phodal/ideabook)\n- [一篇文章让你明白你多级缓存的分层架构](https://juejin.im/post/5d86cf7f6fb9a06b211724e7)\n- [一文读懂前端缓存](https://juejin.im/post/5c22ee806fb9a049fb43b2c5)\n- [看完这篇还不清楚缓存，求你打我 😈（有彩蛋）](https://juejin.im/post/5d9d539ee51d45780f0604fa)\n- [GitHub 上有哪些优秀的项目？](https://www.zhihu.com/question/20584141/answer/774922972?hb_wx_block=0)\n- [史上最全前端基础进阶系列](https://zhuanlan.zhihu.com/p/82998199)\n\n## 趋势\n\n- [从微前端到智能化：2020 前端开源技术趋势](https://juejin.im/post/5e55ed5fe51d4526c148131c)\n\n### 微前端\n\n- [awesome-microfrontends](https://github.com/abc-club/awesome-microfrontends)\n- [一线大厂前端怎么做？百度资深前端工程师，带你手写微前端框架](https://www.toutiao.com/a6753519385958154763)\n- [字节跳动的微前端沙盒实践](https://juejin.im/post/5e4941d46fb9a07c8334d3e9)\n- [微前端在美团外卖的实践](https://juejin.im/post/5e57b6f0f265da57547794c9)\n- [未来魔法校的微前端实践](https://juejin.im/post/5e6a0428e51d4527110a9f61)\n- [Berial，一个硬了的微前端框架](https://juejin.im/post/6856170280600109064)\n- [你必须知道的11个微前端框架](https://cloud.tencent.com/developer/news/709687)\n- [万字长文+图文并茂+全面解析微前端框架 qiankun 源码 - qiankun 篇](https://segmentfault.com/a/1190000022275991)\n- [微前端连载 6/7：微前端框架 - qiankun 大法好](https://juejin.cn/post/6846687602439897101)\n- [阿里云开放平台微前端方案的沙箱实现](https://mp.weixin.qq.com/s?__biz=Mzg4MjE5OTI4Mw==&mid=2247484715&idx=1&sn=7412b30838d652df5bdbc058e790bae2&scene=21#wechat_redirect)\n\n\n#### 标准\n\n\n#### 框架\n\n- [magic-microservices](https://github.com/bytedance/magic-microservices)(字节开源)\n- [qiankun](https://qiankun.umijs.org/zh/guide)(阿里开源)\n- [garfish](https://github.com/bytedance/garfish)(字节开源)\n- [emp](https://github.com/efoxTeam/emp)(yy开源)\n- [icestark](https://github.com/ice-lab/icestark/)\n- [rallie](https://juejin.cn/post/7046695961170706463)\n- \n\n\n### WebAssembly\n\n- [花椒前端基于 WebAssembly 的 H.265 播放器研发](https://mp.weixin.qq.com/s/cXbanMq93jyx5gCuaP2oTw)\n\n### Serverless\n\n- [serverless](https://github.com/serverless/serverless)\n- [Serverless——前端的 3.0 时代](https://zhuanlan.zhihu.com/p/84054729)\n- [基于 Serverless 的 VuePress 极简静态网站](https://zhuanlan.zhihu.com/p/110280999)\n- [webiny-js](https://github.com/webiny/webiny-js)\n\n### web components\n\n- [w3c webcomponents](https://github.com/w3c/webcomponents)\n- [Web Components 是个什么样的东西](https://juejin.im/post/57c40fd3128fe1005fd4629a)\n- [Web Components 入门实例教程](http://www.ruanyifeng.com/blog/2019/08/web_components.html)\n- [深度介绍：💾 你听说过原生 HTML 组件吗？](https://juejin.im/post/5bc7ead7f265da0afc2c2c6b)\n- [[译] 2018 来谈谈 Web Component](https://juejin.im/post/5b780a98e51d4538980bf5cf)\n- [JavaScript 是如何工作：Shadow DOM 的内部结构 + 如何编写独立的组件！](https://juejin.im/post/5c4fac7ef265da6147709696)\n- [再加 150 行代码教你实现一个低配版的 web component 库](https://segmentfault.com/a/1190000011015980)\n- [使用web-component搭建企业级组件库](https://juejin.cn/post/6844903602746556429)\n\n#### 框架\n- [stenciljs](https://stenciljs.com/docs/getting-started)\n- [lit-element](https://github.com/polymer/lit-element)(下一代 polymer)\n- [polymer](https://polymer-library.polymer-project.org/3.0/docs/devguide/feature-overview)\n- [polymer](https://github.com/Polymer/polymer)\n\n#### 组件\n- [omi](https://github.com/Tencent/omi)(前端跨框架跨平台框架)\n- [shoelace](https://github.com/shoelace-style/shoelace)\n- [xy-ui](https://github.com/XboxYan/xy-ui)\n- [duiba-components](https://github.com/azl397985856/duiba-components)(脚手架)\n\n\n\n### 打包\n\n- [vite](https://github.com/vitejs/vite)\n- [snowpack](https://github.com/pikapkg/snowpack)\n- [open-wc](https://github.com/open-wc/open-wc)\n\n## 动效\n\n### 工具库\n\n- [可能是最全的前端动效库汇总](https://juejin.im/post/5cc089eae51d456e7d189f9d)\n\n### demo\n\n- [2018 最佳前端动效集锦](https://tympanus.net/codrops/2018/12/27/awesome-demos-from-2018/)\n\n## 可视化\n\n- [数据可视化工具目录](https://datavizcatalogue.com/ZH/)\n\n### 库\n\n- [Echart](https://github.com/apache/incubator-echarts)\n- [zrender](https://github.com/ecomfe/zrender)(A lightweight canvas library which providing 2d draw for ECharts)\n- [chartjs](https://www.chartjs.org)\n- [D3](https://github.com/d3/d3)\n- [Highchart](https://github.com/highcharts/highcharts)\n- [plotly](https://github.com/plotly/plotly.js)(基于 d3 的 chart 库)\n- [zdog](https://github.com/metafizzy/zdog)\n- [Leaflet](https://leafletjs.com/examples.html)\n- [zeu](https://github.com/shzlw/zeu)\n- [SandDance](https://github.com/microsoft/SandDance)(microsoft 出品)\n\n* [Antv](https://github.com/antvis/)\n* [recharts](https://github.com/recharts/recharts)\n* [BizCharts](https://github.com/alibaba/BizCharts)\n\n- [vue-echarts](https://github.com/ecomfe/vue-echarts)\n- [v-charts](https://github.com/ElemeFE/v-charts)\n\n- [LogicFlow](https://github.com/didi/LogicFlow)(滴滴开源的流程可视化前端框架)\n- \n### 开源项目\n\n- [Vue + Koa 从零打造一个 H5 页面可视化编辑器——Quark-h5](https://juejin.im/post/5dc81428e51d4523632ee793)\n- [luban-h5](https://github.com/ly525/luban-h5)(类似易企秀的H5制作、建站工具)\n- [Vue-Layout](https://github.com/jaweii/Vue-Layout)(vue可视化搭建)\n- [h5-Dooring](https://github.com/MrXujiang/h5-Dooring)(react)\n- [可视化生成页面](https://juejin.cn/post/7005051399100710949)(react)\n\n### 文章\n\n- [14 个最好的 JavaScript 数据可视化库](https://segmentfault.com/a/1190000018646425)\n- [前端必看的数据可视化入门指南](https://segmentfault.com/a/1190000019934874)\n- [一步步带你实现 web 全景看房——three.js](https://juejin.im/post/5d57967a6fb9a06b017e4b62)\n- [阿里基于 G6 和 React 打造的开源可视化图形编辑器——GGEditor](https://m.toutiaocdn.net/a6730972736664912387)\n- [ECharts 实现地图散点图（上）](https://juejin.im/post/58cf43b3128fe1006c9817af)\n- [一些好用的开源监控工具汇总](https://mp.weixin.qq.com/s/hUscNc_f9wBohHJTKzlGBw)\n- [美团外卖前端可视化界面组装平台 —— 乐高](https://zhuanlan.zhihu.com/p/27288444)\n- [页面可视化搭建工具前生今世](https://juejin.im/post/5b0324f4518825426a20008d)\n- [可视化搭建前端工程 - 阿里飞冰了解一下](https://juejin.im/post/5b6349716fb9a04f834669d6)\n- [前端工程实践之可视化搭建系统（一）](https://juejin.im/post/5d8774bff265da03ae78b2a1)\n- [【第 1282 期】页面可视化搭建工具前生今世](https://mp.weixin.qq.com/s?__biz=MjM5MTA1MjAxMQ==)\n- [【第 1524 期】页面可视化搭建工具技术要点](https://mp.weixin.qq.com/s/90JJAFhGokKmicOQZxdAGg)\n- [几个开源的自定义表单设计器源码，推荐给需要的人](https://www.toutiao.com/a6756932532094108174)\n- [看似复杂炫酷的数据可视化设计，用这波神器轻松搞定](https://www.toutiao.com/a6733161074633212428)\n- [H5DS 编辑器技术解析](https://mp.weixin.qq.com/s/Z48FdbtM7D03gFoaE61swg)\n- [[第 1 期] H5 海报生成 核心原理解析](https://mp.weixin.qq.com/s/wpSYdWmYYxd-Qyib-tOJvA)\n- [一篇文章彻底搞定富文本原理 + 实战](https://mp.weixin.qq.com/s/kmqT6x-59vkHMdPa8vY4tQ)\n\n\n微软power apps\ngoogle app maker\n阿里妈妈创意中心\n云凤蝶\nimgcook\n飞冰\n\n## 低代码\n- [🔥 重磅推荐，Github上一批优秀的「低代码」项目 ，点赞收藏按需取用](https://zhuanlan.zhihu.com/p/435316515)\n- [前端页面可视化搭建工具业界的轮子](https://juejin.cn/post/6858881797490098190)\n- [Low code 之从零搭建一个h5可视化平台](https://juejin.cn/post/7015890033622646792)\n- [前端可视化搭建整理--所见即所得](https://juejin.cn/post/7021024517019402270)\n- [mometa](https://github.com/imcuttle/mometa)(mometa 是面向研发的、代码可视设计编辑平台)\n- []()\n\n\n## 数据结构与算法\n\n### 算法\n\n#### 官网\n\n- [leetcode](https://leetcode.com/)\n- [leetcode 中国](https://leetcode-cn.com)\n\n#### 文章\n\n- [优秀程序员都应该学习的数据结构与算法项目（GitHub 开源清单）](https://zhuanlan.zhihu.com/p/74584796)\n- [labuladong 的算法小抄](https://labuladong.gitbook.io/algo/)\n- [数据结构与算法（三）—— 常见排序算法和 swift 实现](https://juejin.im/post/5c46b05d51882524a23f3a12)\n- [大家都是如何刷 LeetCode 的？](https://www.zhihu.com/question/280279208)\n- [程序员必须掌握哪些算法？](https://www.zhihu.com/question/23148377/answer/820437568?hb_wx_block=0)\n- [怎么学好数据结构？](https://www.zhihu.com/question/19830721/answer/667233164?hb_wx_block=0)\n- [(1.8w 字)负重前行，前端工程师如何系统练习数据结构和算法？【上】](https://juejin.im/post/5e2f88156fb9a02fdd38a184)\n- [一份我转行数据分析时候的学习清单](https://zhuanlan.zhihu.com/p/111519808)\n\n#### 开源库\n\n- [和小浩学算法](https://github.com/geekxh/hello-algorithm)\n- [javascript-algorithms](https://github.com/trekhleb/javascript-algorithms)\n- [leetcode](https://github.com/azl397985856/leetcode)\n- [LeetCodeAnimation \\*39k+](https://github.com/MisterBooo/LeetCodeAnimation)\n- [algorithm-visualizer](https://github.com/algorithm-visualizer/algorithm-visualizer)\n- [Algorithm_Interview_Notes-Chinese](https://github.com/imhuay/Algorithm_Interview_Notes-Chinese)\n- [JavaScriptAlgorithms](https://github.com/vJechsmayr/JavaScriptAlgorithms)(算法 js 实现)\n- [fucking-algorithm](https://github.com/labuladong/fucking-algorithm)\n\n### 机器学习\n\n- [tfjs](https://github.com/tensorflow/tfjs)(tensorflow.js)\n- [pipcook](https://github.com/alibaba/pipcook)(基于 tfjs-node 的前端算法工程框架)\n- [一文看尽 TensorFlow“奋斗史”！| CSDN 博文精选](https://mp.weixin.qq.com/s/iQ8azTcyW4oJLSacJ84w-g)\n- [tensorflow 中文](https://tensorflow.google.cn/)\n- [TensorFlow 如何入门，如何快速学习？](https://www.zhihu.com/question/49909565/answer/807076121)\n- [前端如何学习机器学习之 TensorFlow.js](https://juejin.im/post/5b971b295188255c581a8ff0)\n- [DeepLearning-500-questions](https://github.com/scutan90/DeepLearning-500-questions)(深度学习 500 问)\n- [斯坦福机器学习 CS229 课程讲义的中文翻译](https://github.com/Kivy-CN/Stanford-CS-229-CN)\n- [吴恩达《Machine Learning Yearning》完整中文版开源](https://www.toutiao.com/a6747535039598166531)\n\n#### 项目\n\n- [christmas-hat](https://github.com/hk029/christmas-hat)\n- [goddess-hat](https://github.com/shenghanqin/goddess-hat)\n\n## js-core\n\n### 库\n\n- [QuickJS](https://github.com/quickjs-zh/QuickJS)\n\n\n\n### 文章\n\n- [JavaScriptCore 全面解析](https://juejin.im/post/5c46ecec6fb9a049d1327821)\n- [这一次，彻底弄懂 JavaScript 执行机制](https://juejin.im/post/59e85eebf265da430d571f89)\n- [你不知道的浏览器页面渲染机制](https://juejin.im/post/5ca0c0abe51d4553a942c17d)\n- [JavaScript 引擎是如何工作的？从调用栈到 Promise 你需要知道的一切](https://segmentfault.com/a/1190000019205065)\n- [🤔 移动端 JS 引擎哪家强？美国硅谷找......](https://mp.weixin.qq.com/s/2cxe1L9_vyB8oNg2jr2rkg)\n\n\n\n## 代码规范\n\n- [前端小纠结--集成 gitflow 和 standard-version 使用](https://juejin.im/post/6844903847924596743)\n- [前端团队代码评审 CheckList 清单](https://juejin.im/post/5d1c6550518825330a3bfa01)\n- [【译】Google 官方文章——如何去做 coder review](https://juejin.im/post/5d84b93f5188251d482413c8)\n- [如何保证前端项目代码质量](https://zhuanlan.zhihu.com/p/82546272)\n- [前端规范](http://ku.zzfriend.com/yanshi/qianduanguifan/)\n- [作为 CTO，我为什么必须要求代码进行 Code Review](https://www.toutiao.com/a6739679493524308487)\n- [Git 进阶：如何提交标准化的 Git Commit Message](https://www.toutiao.com/a6740794433769308684)\n- [让你的 commit 更有价值(规范)](https://mp.weixin.qq.com/s/PscfzgKYV7vK1ESQ-XVWpA)\n- [Git 在团队中的最佳实践--如何正确使用 Git Flow](https://www.cnblogs.com/cnblogsfans/p/5075073.html)\n\n- [解决 vscode eslint 与 prettier 冲突 - 知乎](https://zhuanlan.zhihu.com/p/101241781?from_voters_page=true)\n- [sonarqube](https://www.sonarqube.org/)(代码检查)\n- [字节研发设施下的 Git 工作流](https://juejin.im/post/6875874533228838925)\n- [Introduction to GitLab Flow](https://docs.gitlab.com/ee/topics/gitlab_flow.html)\n\n## canvas\n\n### 开源项目\n\n- [spritejs](https://github.com/spritejs/spritejs) (Draw graphics on a canvas through DOM-like APIs. Vue & React/Preact supported. )\n\n## 测试\n\n#### 文章\n\n- [javascript-testing-best-practices](https://github.com/goldbergyoni/javascript-testing-best-practices)\n- [2018 前端自动化测试综述 [英]](https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2018-f68950900bc3)\n- [2019 前端自动化测试综述 [英]](https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2019-264e19514d0a)\n- [测试你的前端代码（介绍篇）[英]](https://hackernoon.com/testing-your-frontend-code-part-i-introduction-7e307eac4446)\n- [万字长文总结前端测试体系建设与最佳实践](https://mp.weixin.qq.com/s?__biz=MzI5MjYyODYyNQ==&mid=2247483987&idx=1&sn=132aea5d5185a1e4fa2fab5037a2fb3e)\n- [花椒测试平台 - 接口篇](https://mp.weixin.qq.com/s/xDwEv8r_RfJ99CSir3kCfg)\n- [浅谈前端单元测试](https://juejin.im/post/5b2da89cf265da597f1c7cab)\n- [从 0 到 1 构建美团压测工具](https://tech.meituan.com/2016/01/08/loading-test.html)\n\n### 单元测试\n\n测试框架：\n\n- 推荐 jest,功能比较完善，包含断言(facebook 开发)\n- mocha + chai/expect\n- karma + mocha + chai\n\n用 sinonjs 生成函数\n\n站在程序员的角度测试\nunit 测试是把代码看成是一个个的组件。从而实现每一个组件的单独测试，测试内容主要是组件内每一个函数的返回结果是不是和期望值一样。\n\n#### 库\n\n- [jest](https://github.com/facebook/jest)(推荐)\n- [karma](https://github.com/karma-runner/karma)(Spectacular Test Runner for JavaScript )\n- [mocha](https://github.com/mochajs/mocha)(simple, flexible, fun javascript test framework for node.js & the browser)\n- [enzyme](https://github.com/airbnb/enzyme/)(JavaScript Testing utilities for React )\n- [vue-test-utils](https://vue-test-utils.vuejs.org/)(JavaScript Testing utilities for vue )\n- [sinonjs](https://sinonjs.org/)(模拟生成函数)\n\n#### 文章\n\n### e2e 测试\n\n站在用户角度的测试\ne2e 测试是把我们的程序堪称是一个黑盒子，我不懂你内部是怎么实现的，我只负责打开浏览器，把测试内容在页面上输入一遍，看是不是我想要得到的结果。\n\n#### 库\n\n- [cypress](https://github.com/cypress-io/cypress)\n- [nightwatch](https://github.com/nightwatchjs/nightwatch)\n- [puppeteer](https://github.com/GoogleChrome/puppeteer)(Headless Chrome Node API )\n- [Macaca](https://github.com/alibaba/macaca)\n- [appium](http://appium.io/)(app 测试)\n- [Selenium](https://docs.seleniumhq.org/)\n\n#### 文章\n\n- [端到端测试哪家强？不容错过的 Cypress](https://segmentfault.com/a/1190000014907041)\n- [Puppeteer E2E 测试入门](https://juejin.im/post/5bffb344e51d45378d0d39f4)\n- [大前端神器安利之 Puppeteer](https://www.jeffjade.com/2017/12/17/134-kinds-of-toss-using-puppeteer/)\n\n### 视觉回归测试\n\n简单来说就是测试应用整体界面是否达到了 UI 设计图的要求。\n\n#### 库\n\n- [hermione](https://github.com/gemini-testing/hermione)\n- [PhantomCSS](https://github.com/HuddleEng/PhantomCSS)(archived)\n- [gemini](https://github.com/gemini-testing/gemini)(DEPRECATED)\n\n### 性能测试\n\nChrome DevTools\n\n- [脱离 996，Chrome DevTools 面板全攻略！！！](https://juejin.im/post/5f1542e16fb9a07e6f7b80fe)\n- [vivo 快应用归档](https://quickapp.vivo.com.cn/archives)\n- [快应用 IDE 定制 Devtools 元素面板系列一：背景需求及方案分析](https://quickapp.vivo.com.cn/quickapp-ide-customize-devtools-element-panel-series-1/)\n- [devtools-frontend/wiki](https://github.com/ChromeDevTools/devtools-frontend/wiki)\n- [devtools-protocol/](https://chromedevtools.github.io/devtools-protocol/)\n- [chrome-devtools](https://developers.google.com/web/tools/chrome-devtools)\n- [chrome-remote-interface](https://github.com/cyrus-and/chrome-remote-interface)\n- [Chrome DevTools 远程调试协议分析及实战](https://blog.csdn.net/LuckyWinty/article/details/105743305)\n- [Web 调试技术详解](https://juejin.im/post/5cbe60fd6fb9a0324b27bda2)\n\n### api 测试\n\n#### 库\n\n- [去哪儿 yapi](https://github.com/ymfe/yapi)(支持接口文档、mock 和 api 自动化测试):100:\n  - [接口文档](https://hellosean1025.github.io/yapi/documents/index.html)\n  - [Json Schema 快速入门](https://www.jianshu.com/p/8278eb2458c4?winzoom=1)\n  - [【GitHub 项目推荐｜ YApi 打通前后端及 QA 可视化接口管理平台｜神级项目】](https://m.toutiaocdn.com/a6731281999819964935)\n- [rap2](http://rap2.taobao.org)\n- [swagger](https://swagger.io/)(https://swagger.io/)(https://github.com/swagger-api)\n- [丁香园 api-mocker \\*998](https://github.com/DXY-F2E/api-mocker)\n- [大搜车 Easy-Mock \\*6k+](https://github.com/easy-mock/easy-mock)\n- [APIJSON](https://github.com/APIJSON/APIJSON)(后端接口和文档自动化)\n- [mockjs](http://mockjs.com/)\n\n#### 文章\n\n- [去哪儿 Api 自动化测试实践](https://juejin.im/post/5a388892f265da430e4f4681)\n- [使用 YApi 管理 API 文档，测试， mock](https://juejin.im/post/5acc879f6fb9a028c42e8822#heading-0)\n- [YApi 新版如何查看 http 请求数据](https://juejin.im/post/5c888a3e5188257dee0322af)\n- [自动更新 Swagger 接口数据到 YApi 平台](https://juejin.im/post/5af500e251882567096140dd)\n- [Jenkins+postman+newman 之 API 全自动化测试](https://blog.csdn.net/wanglin_lin/article/details/51959342)\n- [Postman 调试技巧之接口签名](https://juejin.im/post/5b4579a0e51d4519133f7e28)\n- [丁香园开源接口管理系统 - API Mocker](https://juejin.im/post/59bba3c0f265da067374bd1f)\n- [Swagger 从入门到精通](https://huangwenchao.gitbooks.io/swagger/content/)\n- [Swagger 与其他 API 文档编写工具对比](https://haofly.net/swagger/)\n\n#### 自动化\n\n- [Auto.js](https://github.com/hyb1996/Auto.js)(安卓平台上的 JavaScript 自动化工具)\n- [taobaoVisitingVenues](https://github.com/sleepybear1113/taobaoVisitingVenues)(双十一活动自动化地操作淘宝浏览店铺得喵币脚本 for Android)\n- [travis-ci](https://www.travis-ci.org/)(自动触发 GitHub 项目测试)\n\n## 网络请求\n\n- [axios 中文文档翻译](https://segmentfault.com/a/1190000008470355)\n- [封装 axios 拦截器实现用户无感刷新 access_token](https://juejin.im/post/5f1ba98ae51d4534b73a9d7a)\n\n## pwa\n\n- [progressive-web-apps](https://web.dev/progressive-web-apps/)\n- [饿了么的 PWA 升级实践](https://huangxuan.me/2017/07/12/upgrading-eleme-to-pwa/)\n\n## 其他必备知识\n\n- [前端开发者必备的 Nginx 知识](https://juejin.im/post/5c85a64d6fb9a04a0e2e038c)\n- [多站点单点登录实现方案](https://juejin.im/post/5d04d946f265da1b9163915a)\n- [github 开发官方文档](https://developer.github.com/v3/)\n- [【10 个基于 JavaScript 的机器学习实例】](https://m.toutiaocdn.net/a6730835071474860547)\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)\n- [一文看懂：网址，URL，域名，IP 地址，DNS，域名解析](https://www.toutiao.com/a6751517219382886925)\n- [87 个前端必备开发网站](https://zhuanlan.zhihu.com/p/86777413)\n- [前端开发的历史和趋势](https://www.toutiao.com/a6748272721014030862)\n- [什么是 SEO](https://mp.weixin.qq.com/s/rGSNZDzhtQL87wm1hzeHxg)\n  ![](ASSETS/IMAGES/imgs/seo.png)\n\n### 常用技术\n\n- [face++](https://www.faceplusplus.com.cn)(人脸识别)\n- 前端物料中台\n  - [飞冰](https://ice.work/)\n  - [lugia](https://zhuanlan.zhihu.com/p/77255855)\n  - [前端物料中台建设](https://juejin.im/post/5d5b542e6fb9a06acb3ea2b0)\n\n## git\n\n## 安全\n\n- [我知道的跨域与安全](https://juejin.im/post/5a6320d56fb9a01cb64ee191)\n- [前端安全知识](https://juejin.im/post/59dc2b7a6fb9a0451869ae3a)\n\n## 框架\n\n### 编译器 compiler\n\n- [js-code-to-svg-flowchart](https://github.com/Bogdan-Lyashenko/js-code-to-svg-flowchart)\n- [the-super-tiny-compiler](https://github.com/jamiebuilds/the-super-tiny-compiler)\n\n### AST\n\n- [平庸前端码农之蜕变 — AST](https://juejin.im/post/5bfc21d2e51d4544313df666)\n- [从 babel 讲到 AST](https://juejin.im/post/5ab35c3cf265da23771951a2)\n- [AST 与前端工程化实战](https://juejin.im/post/5d50d1d9f265da03aa25607b)\n- [高级前端基础-JavaScript 抽象语法树 AST](https://juejin.im/post/5c8d3c48f265da2d8763bdaf)\n- [astexplorer](https://astexplorer.net/)\n- [面试官: 你了解过 Babel 吗？写过 Babel 插件吗? 答: 没有。卒](https://juejin.im/post/5a9315e46fb9a0633a711f25)\n- [动态模板生成小技巧](https://mp.weixin.qq.com/s/Yd7WNO8Ix8CaOM2APoeUgg)\n- [plopjs](https://plopjs.com/documentation/)\n- \n#### html\n\n- [htmlparser2](https://github.com/fb55/htmlparser2)\n\n### 数据响应式\n\n- [observable-membrane](https://github.com/salesforce/observable-membrane)(vue3 proxy 机制)\n\n### 框架\n\n- [cyclejs](https://github.com/cyclejs/cyclejs/)\n- [functional-frontend-architecture](https://github.com/paldepind/functional-frontend-architecture)\n\n## jquery\n\n### ui 框架\n\n- []\n- [semantic-ui](https://github.com/semantic-org/semantic-ui/)\n\n## 学习网站\n\n- [frontendmasters](https://frontendmasters.com)(各种大牛视频 英文)\n- [all-of-frontend](https://github.com/KieSun/all-of-frontend)\n\n## 架构\n\n- [前端架构-让重构不那么痛苦（译）](https://juejin.im/post/5d849084e51d456206115acb)(推荐！！！)\n- [基于 React 的 PC 网站前端架构分析](https://juejin.im/post/5bc336c26fb9a05cd24dbd03)\n- [大型项目前端架构浅谈（8000 字原创）](https://juejin.im/post/5cea1f705188250640005472)\n- [十年•杭研技术秀 | 网易蜂巢的工业化前端架构](https://mp.weixin.qq.com/s/d0OF4IflXqYs6NJZk2kW0A?)\n- [阿里 9 年，我总结的前端架构演进 3 大阶段及团队管理心法](https://mp.weixin.qq.com/s/PK5eaBnSg0fG1RvPsbeJwQ)\n- [【第 1399 期】美菜无线前端架构模型 2018](https://mp.weixin.qq.com/s/2IjsJZY78FQcOdTI5JC7ow)\n- [前端插拔式 SPA 应用架构实现方案](https://juejin.im/post/5b768ffce51d45666f799ba2)\n\n## 工程化\n\n- [喜大普奔，Pont 1.0 发布了](https://juejin.im/post/5e82e7f1518825738a5ac1f3)(前后端数据服务层解决方案)\n- [为什么你在辛苦做项目国际化，而别人在喝茶？](https://juejin.im/post/5e7c6ce051882535e07a3d0f)(国际化全流程解决方案)\n- [研发效能提升和敏捷实施 36 计 资料合集](https://developer.aliyun.com/article/715161)\n\n## 值得注意的库\n\n-[技术选型](https://open.mizhousoft.com/artifact/list.action?cid=3)\n- [hyperapp](https://github.com/jorgebucaran/hyperapp)(类似 react vue)\n\n* [开发者手册](https://cloud.tencent.com/developer/doc/1070)\n\n# web ide\n- [如何在团队内快速落地WebIDE](https://zhuanlan.zhihu.com/p/411030285)\n\n## 效率\n- [【告别复制粘贴】动态模板生成小技巧](https://mp.weixin.qq.com/s/Yd7WNO8Ix8CaOM2APoeUgg)\n- [bit](https://github.com/teambit/bit)(搭建组件平台)\n\n# 书\n\n\n\n[↑ 返回目录 ↑](#目录)\n"
        },
        {
          "name": "FRONTEND",
          "type": "tree",
          "content": null
        },
        {
          "name": "GITHUB.md",
          "type": "blob",
          "size": 0.427734375,
          "content": "<h1 align=\"center\">GITHUB开源清单</h1>\n\n本文收集github上优秀的开源项目\n\n持续更新中……\n\n\n## 目录\n\n* [文章](文章.md)\n\n## 文章\n* [优秀前端都应该了解学习的开源实战项目（GitHub 开源清单）](https://zhuanlan.zhihu.com/p/69268226)\n\n## 项目\n* [GitHub中文排行榜](https://github.com/kon9chunkit/GitHub-Chinese-Top-Charts)\n* [HelloGitHub](https://github.com/521xueweihan/HelloGitHub)\n\n\n\n"
        },
        {
          "name": "HYBRID.md",
          "type": "blob",
          "size": 3.82421875,
          "content": "<h1 align=\"center\">混合应用技术汇总</h1>\n\n本文收集关于混合应用技术的文章和开源项目等，技术包括react native、 flutter、 weex等\n\n\n持续更新中……\n\n\n## 目录\n\n- [目录](#目录)\n- [uni-app](#uni-app)\n- [react-native](#react-native)\n  - [组件库](#组件库)\n  - [参考资料](#参考资料)\n- [Weex](#weex)\n  - [文章](#文章)\n- [flutter](#flutter)\n  - [官方](#官方)\n  - [文章](#文章-1)\n  - [开源库](#开源库)\n  - [demo](#demo)\n- [electron](#electron)\n  - [项目](#项目)\n  - [demo](#demo-1)\n- [ios](#ios)\n- [android](#android)\n\n## uni-app\n\n- [跨端开发框架深度横评之2020版](https://zhuanlan.zhihu.com/p/127915625)\n\n\n## react-native\n\n### 组件库\n* [beeshell](https://github.com/Meituan-Dianping/beeshell)\n\n### 参考资料\n- react-native-awesome  https://github.com/crazycodeboy/react-native-awesome\n\n## Weex\n* [官网](https://weex.apache.org/zh/)\n* [weex-ui](https://github.com/alibaba/weex-ui)\n* [bui](http://dev.bingocc.com/buiweex/docs/)\n* [nat](http://natjs.com/)(weex 插件)\n* [Weex、RN还是Flutter？聊聊阿里跨平台开发框架选型思路](https://mp.weixin.qq.com/s/7Qz4NqJ8Uae4Y1btGF8sVw)\n \n### 文章\n* [WeexBox快速上手](https://juejin.im/post/5c1c627ae51d45778a5c6eb7)\n\n## flutter\n\n### 官方\n* [flutter github](https://github.com/flutter/flutter)\n* [中文官网](https://flutter-io.cn/)\n* [官网](https://flutter.dev/)\n* [awesome-flutter](https://github.com/Solido/awesome-flutter)\n\n### 文章\n* [《Flutter in action》](https://files.alicdn.com/tpsservice/f91cbfb31d27f1a470c4ee138f9120b9.pdf?spm=a2c6h.12873639.0.0.416d5ef14Zjvoo&file=f91cbfb31d27f1a470c4ee138f9120b9.pdf&short_name=I3.ZZpRl&app=chrome)\n* [Flutter资源](https://github.com/nieyafei/flutter-resources)\n* [Flutter 完全手册](https://juejin.im/book/5c5423ef6fb9a049cd54a213)\n* [写给前端工程师的Flutter教程](https://juejin.im/post/5d56605ef265da03f77e6519)\n* [京东技术中台的Flutter实践之路](https://mp.weixin.qq.com/s/5cmYG_WzyQKlnPNhpsd0oQ)\n* [Flutter-learning](https://github.com/AweiLoveAndroid/Flutter-learning)\n* [Flutter完整开发实战详解](https://juejin.im/post/5d9067026fb9a04df00ece14)\n* [Flutter实战 | 从 0 搭建「网易云音乐」APP（三、每日推荐、推荐歌单）](https://juejin.im/post/5da6d2b0f265da5bbe2a3f86)\n- [跨平台技术趋势及字节跳动 Flutter 架构实践 | Flutter 沙龙回顾](https://juejin.im/post/5de75c6b518825127c26f0e7)\n\n\n\n### 开源库\n* [flutter-go *16k+](https://github.com/alibaba/flutter-go)\n* [awesome-fluttercn](https://github.com/fluttercnclub/awesome-fluttercn)\n* [material design](https://material-io.cn/)\n* [thresh](https://github.com/ymm-tech/thresh)(运满满开源flutter方案) https://github.com/ymm-tech/thresh-template https://github.com/ymm-tech/thresh-cli\n* \n\n\n\n\n\n### demo\n\n* [demo集合](https://github.com/XXApple/AndroidLibs/tree/master/Flutter)\n* [FlutterDouBan](https://github.com/kaina404/FlutterDouBan)\n\n## electron\n\n- [electron](https://github.com/electron)\n- [electron中文](https://www.electronjs.org/docs)\n- [electron-vue](https://github.com/SimulatedGREG/electron-vue)\n- [electron-vue中文](https://simulatedgreg.gitbooks.io/electron-vue/content/cn/)\n- [Electron构建跨平台应用Mac/Windows/Linux](https://juejin.im/post/5c46ab47e51d45522b4f55b1)\n- [Electron：PC 端多端融合方案](https://segmentfault.com/a/1190000022543101?utm_source=tag-newest)\n- [Chrome 远程调试协议原理](https://juejin.im/post/5db7b33ce51d452a1f3442c8)\n\n\n### 项目\n- [Vue 全家桶 + Electron 开发的一个跨三端的应用](https://juejin.im/post/5946af9661ff4b006cf40040)\n- [Sugar-Electron 基于Electron的轻量级开发框架](https://juejin.im/post/6857402778122190856)\n\n### demo\n* [focus *81](https://github.com/HelKyle/focus)(一款离线，高颜值的🍅工作软件)\n\n\n## ios\n\n- [objccn](https://objccn.io/)\n\n## android\n\n"
        },
        {
          "name": "INTERVIEW copy.md",
          "type": "blob",
          "size": 1.201171875,
          "content": "<h1 align=\"center\">面试准备过程</h1>\n\n本文主要记录准备面试过程中每日进度\n\n持续更新中……\n\n\n## 目录\n\n\n## Day 1(2019-11-04 周一)\n\n### 目标\n1. 设定目标：查看目标职位的jd, 已确定准备的范围\n2. 制定计划：制定每日复习计划\n\n### 完成度\n\n#### 复习范围\n* 算法和数据结构\n* js es基础\n* ts\n* webpack rollup gulp \n* vue react\n* css html\n* nodejs express koa eggjs\n* redis eleasticsearch mongodb kafaka\n* 优化\n* 项目经验\n* 设计模式 函数式编程\n\n#### es6\n\n* let和var和const的区别\n```\nlet 不存在变量提升，不能重复定义，会产生块级作用域，存在暂时性死区\nconst 声明就得赋值，变量的值不得改动\n```\n\n* 对象的解构赋值可以取到继承的属性\n```\nconst obj1 = {};\nconst obj2 = { foo: 'bar' };\nObject.setPrototypeOf(obj1, obj2);\n\nconst { foo } = obj1;\nfoo // \"bar\"\n```\n\n* 正则表达式\n\n\n* 获取字符串长度的方法\n\n```js\nfunction codePointLength(text) {\n  var result = text.match(/[\\s\\S]/gu);\n  return result ? result.length : 0;\n}\n\nvar s = '𠮷𠮷';\n\ns.length // 4\ncodePointLength(s) // 2\n```\n\n```js\nfunction length(str) {\n  return [...str].length;\n}\n\nlength('x\\uD83D\\uDE80y') // 3\n```"
        },
        {
          "name": "INTERVIEW.md",
          "type": "blob",
          "size": 17.04296875,
          "content": "<h1 align=\"center\">面试资源汇总</h1>\n\n本文主要收集前端面试题和面试经验，希望帮助大家在面试中能游刃有余\n\n持续更新中……\n\n\n## 目录\n\n- [目录](#目录)\n- [简历](#简历)\n  - [简历技巧](#简历技巧)\n  - [简历模板](#简历模板)\n- [面试秘籍](#面试秘籍)\n- [面试题集](#面试题集)\n- [面试题](#面试题)\n  - [算法篇](#算法篇)\n  - [CSS](#css)\n- [面试技巧](#面试技巧)\n- [面试经验](#面试经验)\n  - [阿里](#阿里)\n  - [腾讯](#腾讯)\n  - [百度](#百度)\n  - [小米](#小米)\n  - [bilibili](#bilibili)\n  - [头条](#头条)\n  - [其他](#其他)\n- [github面试题仓库](#github面试题仓库)\n- [薪资福利](#薪资福利)\n- [招聘官网](#招聘官网)\n- [如果你是面试官](#如果你是面试官)\n- [待遇](#待遇)\n- [其他](#其他-1)\n\n\n## 简历\n* [面试官到底想看什么样的简历？](https://juejin.im/post/5d1d52aff265da1bb2774de0)\n* [2019 面试系列 - 简历](https://juejin.im/post/5d05ca79f265da1bc75237ea)\n* [OpenDoc - 前端简历评级标准](https://juejin.im/post/58b6679461ff4b006ccd825e)\n* [别的程序员是怎么读你的简历的](http://coolshell.cn/articles/1695.html)\n\n### 简历技巧\n* [[译] 如何写一篇杀手级的软件工程师简历](https://juejin.im/post/5c6ca8b9f265da2dc13c7a10)\n* [面试你之前，我希望在简历上看到这些！](https://juejin.im/post/58355801880741006c013286)\n* [工欲善其事必先利其器-前端实习简历篇](https://juejin.im/post/58c75dbf128fe1006b473f96)\n* [手把手教你写一份优质的前端技术简历](https://juejin.im/post/5b195106518825139c614cc2)\n* [如何写一份更好的简历](https://juejin.im/post/5b2fb0e1f265da59584d98b9)\n* [2016/04/11 基本素养：改良程序员的问题简历，从反模式到最佳实践](https://github.com/sivagao/blog/issues/16)\n\n\n### 简历模板\n* [best-resume-ever](https://github.com/salomonelli/best-resume-ever)(👔 💼 Build fast 🚀 and easy multiple beautiful resumes and create your best CV ever! Made with Vue and LESS.)\n* [Resumes generated using the GitHub informations](https://github.com/resume/resume.github.com)(Resumes generated using the GitHub informations )\n* [送给大家一个好看的简历神器](https://juejin.im/post/59926d2251882548997aa2f8)\n* [5款精致简洁求职简历](https://xituqu.com/768.html)\n* [6款简洁多风格的求职简历](https://xituqu.com/769.html)\n* [10+ 优秀简洁的个人简历下载（五](https://xituqu.com/586.html)\n* [实战项目之自动简历](https://juejin.im/post/5b9d27ddf265da0ad7019775)\n* [又双叒叕是一个动态简历](https://juejin.im/post/5c1fd3f1f265da61171cb8bf)\n* [My resume implement by Vue.js](https://github.com/ustbhuangyi/resume)\n* [切图仔面试宝典](https://github.com/Wscats/CV)\n\n\n## 面试秘籍\n* [中高级前端大厂面试秘籍，为你保驾护航金三银四，直通大厂(上)](https://juejin.im/post/5c64d15d6fb9a049d37f9c20)\n* [前端面试 - 收藏集 - 掘金](https://segmentfault.com/a/1190000009261526)\n* [2万5千字大厂面经](https://juejin.im/post/5ba34e54e51d450e5162789b#heading-105)\n* [前端面试之道](https://juejin.im/book/5bdc715fe51d454e755f75ef)\n* [(2.4w字,建议收藏)😇原生JS灵魂之问(下), 冲刺🚀进阶最后一公里(附个人成长经验分享)](https://juejin.im/post/5dd8b3a851882572f56b578f)\n\n\n## 面试题集\n\n* [前端开发面试题](https://juejin.im/entry/5781b8db0a2b58005765e628)\n* [前端 100 问：能搞懂 80% 的请把简历给我](https://juejin.im/post/5d23e750f265da1b855c7bbe)\n* [前端面试每日 3+1 —— 第61天](https://juejin.im/post/5d05576af265da1bba590291)\n* [这儿有20道大厂面试题等你查收](https://juejin.im/post/5d124a12f265da1b9163a28d)\n* [【周刊-1】三年大厂面试官-面试题精选及答案](https://juejin.im/post/5ca9de22e51d452b5372ed90)\n* [【周刊-2】三年大厂面试官-前端面试题（偏难）](https://juejin.im/post/5cb0315f518825215e61ec14)\n* [【周刊-3】三年大厂面试官-十道前端面试题（欢迎挑战）](https://juejin.im/post/5cd82463518825692330d440)\n* [Flutter 面试知识点集锦](https://juejin.im/post/5cd9875ae51d453d022cb662)\n* [面试必备的13道可以举一反三的Vue面试题](https://juejin.im/post/5d41eec26fb9a06ae439d29f)\n* [2018前端面试准备](https://segmentfault.com/a/1190000012428851)\n* [史上前端面试最全知识点（附答案）](https://segmentfault.com/a/1190000010869619)\n* [以面试官的角度来看 React 工作面试](https://juejin.im/post/5bca74cfe51d450e9163351b)\n* [jsliang 的 2019 面试准备](https://juejin.im/post/5c8e4cd3f265da67c87454a0)\n* [总结了17年初到18年初百场前端面试的面试经验(含答案)](https://juejin.im/post/5b44a485e51d4519945fb6b7)\n* [2019 前端面试 | “HTML + CSS + JS”专题](https://juejin.im/post/5ce4171ff265da1bd04eb4f3)\n* [面试30秒(含答案)](https://juejin.im/post/5c9243f96fb9a070ce31ab46)\n* [五年面试，三年模拟](https://juejin.im/post/5ca0425e51882567ce181037)\n* [面试的信心来源于过硬的基础](https://segmentfault.com/a/1190000013331105)\n* [20道JS原理题助你面试一臂之力](https://juejin.im/post/5d2ee123e51d4577614761f8)\n* [几道高级前端面试题解析](https://juejin.im/post/5aa8a07cf265da238a3022a4)\n* [地表最强面试图谱](https://juejin.im/post/5b4a9136f265da0f990d49cb)\n* [一篇文章搞定前端面试](https://juejin.im/post/5bbaa549e51d450e827b6b13)\n* [【面试篇】寒冬求职季之你必须要懂的原生JS(上)](https://juejin.im/post/5cab0c45f265da2513734390)\n* [【面试篇】寒冬求职季之你必须要懂的原生JS(中)](https://juejin.im/post/5cbd1e33e51d45789161d053)\n* [【前端面试分享】- 寒冬求职上篇](https://juejin.im/post/5cdb7bc26fb9a0321557044d)\n* [关于 Git 的 20 个面试题](https://segmentfault.com/a/1190000019315509)\n* [22道高频JavaScript手写面试题及答案](https://juejin.im/post/5d51e16d6fb9a06ae17d6bbc)\n\n\n## 面试题\n\n* [面试官系列(1): 如何实现深克隆](https://juejin.im/post/5abb55ee6fb9a028e33b7e0a)\n* [面试官系列(2): Event Bus的实现](https://juejin.im/post/5ac2fb886fb9a028b86e328c)\n* [面试官系列(3): 前端路由的实现](https://juejin.im/post/5ac61da66fb9a028c71eae1b)\n* [面试官系列(4): 基于Proxy 数据劫持的双向绑定优势所在](https://juejin.im/post/5acd0c8a6fb9a028da7cdfaf)\n* [面试官系列(5): 你为什么使用前端框架](https://juejin.im/post/5b16c0415188257d42153bac)\n* [面试官(6): 写过『通用前端组件』吗?](https://juejin.im/post/5c02142fe51d4511be77aad7)\n* [面试官(7): 聊一聊 Babel?](https://juejin.im/post/5c03b85ae51d450c740de19c)\n* [面试官系列(8):  React 强调的『不可变数据结构』怎么实现?](https://juejin.im/post/5bf8dab3f265da61590b55d4)\n* [面试官（9）：可能是全网最全的http面试答案](https://juejin.im/post/5d032b77e51d45777a126183)\n* [一道常被人轻视的前端 JS 面试题](https://juejin.im/entry/580cdbeec4c9710058943151)\n* [面试官: 你对虚拟DOM原理的理解?](https://juejin.im/post/5d3f3bf36fb9a06af824b3e2)\n* [面试官：JavaScript的数组有什么特殊之处？](https://juejin.im/post/5d2832a5f265da1bc07e669e)\n* [面试时，你被问到过 TCP/IP 协议吗?](https://juejin.im/post/58e36d35b123db15eb748856)\n* [面试精选之Promise](https://juejin.im/post/5b31a4b7f265da595725f322)\n* [面试官眼中的Promise](https://juejin.im/post/5c233a8ee51d450d5a01b712)\n* [Excuse me？这个前端面试在搞事！](https://zhuanlan.zhihu.com/p/25407758)\n* [面试官：自己搭建过vue开发环境吗？](https://juejin.im/post/5cc55c336fb9a032086dd701)\n* [2019 面试准备 - JS 原型与原型链](https://juejin.im/post/5c72a1766fb9a049ea3993e6)\n* [面试：页面加载海量数据](https://juejin.im/post/5ae17a386fb9a07abc299cdd)\n* [面试 -- 网络 TCP/IP](https://juejin.im/post/586cfcf8da2f600055ce8a8d)\n* [面试 -- 网络 HTTP](https://juejin.im/post/5872309261ff4b005c4580d4)\n* [面试：页面加载海量数据](https://juejin.im/post/5ae17a386fb9a07abc299cdd)\n* [面试官问：JS的this指向](https://juejin.im/post/5c0c87b35188252e8966c78a)\n* [8道经典JavaScript面试题解析，你真的掌握JavaScript了吗？](https://segmentfault.com/a/1190000020026378)\n* [前端20个真正灵魂拷问，吃透这些你就是中级前端工程师 【上篇】](https://segmentfault.com/a/1190000020062444)\n* [js基础-面试官想知道你有多理解call,apply,bind？[不看后悔系列]](https://juejin.im/post/5d469e0851882544b85c32ef)\n* [面试 -- 网络 HTTP](https://juejin.im/post/5872309261ff4b005c4580d4)\n* [面试官: 100万个成员的数组取第一个和最后一个有性能差距吗?](https://juejin.im/post/5d75a5266fb9a06b1a56b137)\n* [再也不怕面试官问你express和koa的区别了](https://juejin.im/post/5da6eef5f265da5b6b631115)\n* [聊聊面试必考-递归思想与实战](https://juejin.im/post/5d85cda3f265da03b638e918)\n* [面试官：不用背概念，说清楚cookie和session是怎么交互的？](https://www.toutiao.com/a6739163770385351179)\n* [面试官问: 如何理解Virtual DOM？](https://juejin.im/post/5d5d32e251882545e41e655d)\n* [Web 安全总结(面试必备良药)](https://juejin.im/post/5dca1b376fb9a04a9f11c82e)\n* [async/await 原理及执行顺序分析](https://juejin.im/post/5dc28ea66fb9a04a881d1ac0)\n* [动画: 一个浏览器是如何工作的？](https://juejin.im/post/5de0e4dfe51d45359c14e1af)\n* [MVC、MVP、MVVM 模式](http://www.linuxidc.com/Linux/2015-10/124622.htm)\n* [html和css中常见的浏览器兼容性处理](http://www.zymseo.com/16.html)\n* [一道常被人轻视的前端JS面试题](http://www.cnblogs.com/xxcanghai/p/5189353.html)\n* [浅析浏览器输入URL到页面输出执行流程](https://zhuanlan.zhihu.com/p/25680692?utm_medium=social&utm_source=wechat_session)\n* [前端程序员经常忽视的一个JavaScript面试题](https://github.com/Wscats/articles/issues/85)\n* [大厂面试题分享：如何让(a===1&&a===2&&a===3)的值为true?](https://juejin.im/post/5e66dc416fb9a07cab3aaa0a)\n\n### 算法篇\n\n\n### CSS\n* [关于CSS优先级的详细解说](http://homepage.yesky.com/257/8915757all.shtml#p8915757)\n* [CSS基线之道](http://blog.jobbole.com/31926/)\n* [CSS深入理解vertical-align和line-height的基友关系](http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/)\n\n\n\n## 面试技巧\n* [「技术面试」问答中有什么十分实用的面试技巧?](https://juejin.im/post/5d30c0cd6fb9a07efd474427)\n* [5分钟谈前端面试](https://juejin.im/post/5d04fc1c51882559ef78e88f)\n* [面试前如何准备才能提高成功率（含前端面试押题）](https://juejin.im/post/5c6d4789f265da2d8e70e164)\n* [作为技术面试官，为什么把你pass了](https://juejin.im/post/5c1e7a086fb9a049b82a7310)\n* [精读《最佳前端面试题》及面试官技巧](https://zhuanlan.zhihu.com/p/28333260)\n* [写给初级前端的面试经验](https://juejin.im/post/5c8bb79e6fb9a04a006fe79a)\n* [前端面试指南](https://zhuanlan.zhihu.com/p/25859524)\n* [关于面试流程](https://juejin.im/post/59ec3d50f265da431c6f7339)\n* [程序员面试时这样介绍自己的项目经验，成功率能达到98.99%](https://www.toutiao.com/a6750279305806217739)\n\n\n\n## 面试经验\n\n### 阿里\n* [我在阿里招前端，我该怎么帮你？(文末有惊喜)](https://mp.weixin.qq.com/s/pP-qvi6XK14zoGxtc2dqfA)\n* [面试分享：2018阿里巴巴前端面试总结](https://juejin.im/post/5ab0da85f265da23866fb9b7)\n* [阿里健康面试总结](https://juejin.im/post/5d8896e5e51d45621512ae4a)\n* [大揭秘！“恐怖”的阿里一面，我究竟想问什么](https://juejin.im/post/5d4cd42a6fb9a06aea618155)\n* [面试分享：专科半年经验面试阿里前端P6+总结(附面试真题及答案)](https://juejin.im/post/5a92c23b5188257a6b06110b)\n* [面试分享：2018阿里巴巴前端面试总结(题目+答案)](https://blog.ihoey.com/posts/Interview/2018-02-28-alibaba-interview.html)\n* [一年半经验，百度、有赞、阿里前端面试总结](https://juejin.im/post/5befeb5051882511a8527dbe)\n* [面试分享：两年工作经验成功面试阿里P6总结](https://juejin.im/post/5d690c726fb9a06b155dd40d)\n* [想进阿里吗？送你一份 4000 字《阿里内推指南》](https://juejin.im/post/5da67a41f265da5b681ff295)\n* [我想加入阿里，我该怎么做](https://mp.weixin.qq.com/s/5usQY8a_6eI7PTXLXJ2Nlw)\n* [阿里六面，挂在hrg，我真的不甘心](https://www.toutiao.com/a6753809422167835139)\n* [前端面试总结（at, md）](https://juejin.im/post/5a3134bf6fb9a0452405d507)\n\n\n### 腾讯\n* [腾讯前端面试篇（一）](https://juejin.im/post/5c19c1b6e51d451d1e06c163)\n* [腾讯前端面试篇（二）](https://juejin.im/post/5c1869ab6fb9a049f154207a)\n* [腾讯面试篇（三）——终章](https://juejin.im/post/5c1eec7bf265da61477034ae)\n\n### 百度\n* [我的 web 前端面试经历 - 百度](https://juejin.im/post/5d1d52aff265da1bb2774de0)\n\n\n### 小米\n* [记一次凉凉的小米面试](https://juejin.im/post/5b4d543ce51d4519610dea67)\n\n### bilibili\n* [【面试总结】记一次失败的 bilibili 面试总结(1)](https://juejin.im/post/5c878397f265da2dde07293b)\n* [【面试总结】记一次失败的 bilibili 面试总结(2)](https://juejin.im/post/5c88d34fe51d4559d83381af)\n* [【面试总结】记一次失败的 bilibili 面试总结(3)](https://juejin.im/post/5ca2ba0ee51d4524fd28778a)\n\n### 头条\n* [两年前端头条面试记](https://juejin.im/post/5de5a2d0e51d451aec2b8883)\n\n### 其他\n* [关于裸辞，关于前端面试](https://juejin.im/post/5cf3365ff265da1b9612ec78)\n* [一年经验前端 杭州几家二线厂面试题梳理](https://juejin.im/post/5d3a538bf265da1b9163d947)\n* [1月前端面试记](https://juejin.im/post/587dab348d6d810058d87a0a)\n* [前端面试经](https://juejin.im/post/59aa6be06fb9a0248e5cddf0)\n* [2018年6月前端面试经历(上)](https://juejin.im/post/5b39bb696fb9a00e57630e27)\n* [2019 面试实战 - 第一回合](https://juejin.im/post/5c7bc11d6fb9a04a0956c325)\n* [2018春招前端面试: 闯关记(精排精校) | 掘金技术征文](https://juejin.im/post/5a998991f265da237f1dbdf9)\n* [2018春节后前端面试小记](https://juejin.im/post/5a99108f51882555666f1bca)\n* [Web前端岗位面试题有哪些？](https://www.zhihu.com/question/41466747/answer/747323907)\n* [2019年，看了这一份， 再也不怕前端面试了](https://zhuanlan.zhihu.com/p/87043003)\n* [横扫9家大厂前端校招offer，全文14560字，阅读需80分钟](https://mp.weixin.qq.com/s/tM2lvhJEhXXl0nO92hf7yQ\\)\n\n\n\n\n## github面试题仓库\n- https://github.com/jwasham/coding-interview-university/blob/master/translations/README-cn.md([译] Coding Interview University 一套完整的学习手册帮助自己准备 Google 的面试)\n- https://github.com/haizlin/fe-interview\n- https://github.com/30-seconds/30-seconds-of-interviews\n- https://github.com/xiaomuzhu/front-end-interview\n- https://github.com/yisainan/web-interview\n- https://github.com/woai3c/Front-end-basic-knowledge\n- https://github.com/qiu-deqing/FE-interview\n- https://github.com/poetries/FE-Interview-Questions\n- https://github.com/azl397985856/fe-interview\n* [张云龙blog](https://github.com/fouber/blog)\n* [阿里，腾讯，百度，美团，头条等技术面试题目，以及答案](https://github.com/yttsam/interview_internal_reference)\n* [如何通过饿了么 Node.js 面试](https://github.com/ElemeFE/node-interview/tree/master/sections/zh-cn)\n* [面试的图谱](https://github.com/InterviewMap/CS-Interview-Knowledge-Map)\n\n## 薪资福利\n* [阿里福利](https://campus.alibaba.com/welfare.htm)\n\n\n## 招聘官网\n* [阿里社招](https://job.alibaba.com/zhaopin/positionList.htm)\n* [阿里校招](https://campus.alibaba.com/positionList.htm)\n* [腾讯社招](https://careers.tencent.com/search.html?query=at_1,ci_5&keyword=%e5%89%8d%e7%ab%af)\n* [今日头条社招](https://job.bytedance.com/society?summary=873&city=45&q1=%E5%89%8D%E7%AB%AF&position_type=)\n\n\n* [知乎](https://app.mokahr.com/apply/zhihu/3819#/?_k=t046ya)(北京 上海 成都 广州)\n\n\n## 如果你是面试官\n* [谈谈面试与面试题](https://github.com/wintercn/blog/issues/4)\n* [面试数十人有感](https://juejin.im/post/5bd2d92c6fb9a05d0f17218c)\n\n\n\n## 待遇\n* [【阿里员工一年挣多少钱？聊一聊阿里薪酬职级体系】](https://m.toutiaocdn.com/a6724307251558875652)\n* [阿里的绩效考核：赏明星，杀白兔，野狗要示众](https://m.toutiaocdn.com/a6726291727654584839)\n* [在字节跳动做程序员是一种什么样的体验？](https://www.toutiao.com/a6751338039886217736)\n* [入职字节跳动48小时后，我发现了抖音的秘密](https://www.toutiao.com/a6751311464365031948)\n* [一文揭秘BAT互联网大厂薪资](https://www.toutiao.com/a6750467774801248782)\n- [头条、美团、滴滴、阿里、腾讯、百度、华为、京东职级体系及对应薪酬](https://www.cnblogs.com/dhcn/p/11983157.html)\n- [百度、腾讯和阿里内部的级别和薪资待遇是什么样的](https://lusongsong.com/info/post/1015.html)\n- [字节跳动开始新一轮股权激励，上市的前奏么？](https://www.sohu.com/a/307140186_696911)\n\n\n## 其他\n* [我的职业是前端工程师](https://github.com/phodal/fe)\n* [博主文章](https://www.jianshu.com/u/10ae59f49b13)\n\n"
        },
        {
          "name": "INTERVIEW",
          "type": "tree",
          "content": null
        },
        {
          "name": "INTERVIEWMOCK.md",
          "type": "blob",
          "size": 41.9013671875,
          "content": "## 目录\n\n面试分为面试准备、基础知识面、进阶知识面、项目经验面、hr 面等几个阶段\n\n下面就每个阶段需要准备哪些知识进行详解，希望每位同学都能拿到心仪的 offer!!!\n\n> 本文已收录到以下个人网站和 github，欢迎 follow 和 star\n\n- [博客](https://abc-club.github.io/js-paradise/)\n\n- [github](https://github.com/abc-club/js-paradise)\n\n## 面试准备\n\n在开始面试前，我们首先得了解应聘的岗位的要求，并做针对性的准备。\n\n准备包括以下几个方面：\n\n1. 职位描述(JD)分析\n2. 了解业务/项目\n3. 简历\n4. 自我介绍\n\n### 职位描述(JD)分析\n\n招聘网站上招聘的岗位都会有个职位描述，这个职位描述往往比较精简，以至于大家经常忽略了其深层的意义\n\n下面的文章是比较好的分析范例，希望大家多多研究\n\n- [我在阿里招前端，我该怎么帮你？](https://mp.weixin.qq.com/s/pP-qvi6XK14zoGxtc2dqfA)\n\n- [1.5 年经验如何准备阿里巴巴 P6 前端面试](https://juejin.im/post/5e5522b36fb9a07ce152c51c)\n\n### 了解业务/项目\n\n分成两步：\n\n1. 了解业务，比如该公司主要经营机票业务，我们是不是应该了解一下机票的一个购买流程\n2. 了解项目，我们应该去了解该公司目前的项目，是 to B 还是 to C,是否有 m 站、海外站、小程序等，使用的是 vue 还是 react\n\n### 简历\n\n一份好的简历，给我们的面试加分不少。那怎样写出一份优秀的（至少是好的）简历呢？下面这些文章也许能够帮助到您。不需要每篇都看，参考一两篇即可！\n\n- [一份优秀的前端开发工程师简历是怎么样的？](https://www.zhihu.com/question/23150301/answer/410066018)\n- [面试官到底想看什么样的简历？](https://juejin.im/post/5d1d52aff265da1bb2774de0)\n- [2019 面试系列 - 简历](https://juejin.im/post/5d05ca79f265da1bc75237ea)\n- [OpenDoc - 前端简历评级标准](https://juejin.im/post/58b6679461ff4b006ccd825e)\n- [别的程序员是怎么读你的简历的](http://coolshell.cn/articles/1695.html)\n\n#### 简历模板\n\n- [best-resume-ever](https://github.com/salomonelli/best-resume-ever)(👔 💼 Build fast 🚀 and easy multiple beautiful resumes and create your best CV ever! Made with Vue and LESS.)\n- [Resumes generated using the GitHub informations](https://github.com/resume/resume.github.com)(Resumes generated using the GitHub informations )\n- [送给大家一个好看的简历神器](https://juejin.im/post/59926d2251882548997aa2f8)\n- [5 款精致简洁求职简历](https://xituqu.com/768.html)\n- [6 款简洁多风格的求职简历](https://xituqu.com/769.html)\n- [10+ 优秀简洁的个人简历下载（五](https://xituqu.com/586.html)\n- [实战项目之自动简历](https://juejin.im/post/5b9d27ddf265da0ad7019775)\n- [又双叒叕是一个动态简历](https://juejin.im/post/5c1fd3f1f265da61171cb8bf)\n- [My resume implement by Vue.js](https://github.com/ustbhuangyi/resume)\n\n### 自我介绍\n\n面试中第一个问题就是让我们自我介绍，准备好这个问题，能让面试官对我们有一个准确的了解，同时我们也可以通过自我介绍，引导面试官问出我们比较拿手的问题。\n\n## 一面\n\n侧重考察基础知识，这部分开始我们会准备一些面试中常遇到的问题\n\n### CSS\n\n#### 使用 css 实现一个持续的动画效果\n\n<details>\n<summary>答案</summary>\n\n```js\nanimation:mymove 5s infinite;\n@keyframes mymove {\nfrom {top:0px;}\nto {top:200px;}\n}\n\n```\n\n主要考察\n\n|            值             |                   描述                   |\n| :-----------------------: | :--------------------------------------: |\n|      animation-name       | 规定需要绑定到选择器的 keyframe 名称。。 |\n|    animation-duration     | 规定完成动画所花费的时间，以秒或毫秒计。 |\n| animation-timing-function |           规定动画的速度曲线。           |\n|      animation-delay      |        规定在动画开始之前的延迟。        |\n| animation-iteration-count |         规定动画应该播放的次数。         |\n|    animation-direction    |      规定是否应该轮流反向播放动画。      |\n\n</details>\n\n扩展：\n\n- 使用 js 实现一个持续的动画效果\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>js动画</title>\n    <style>\n      #app {\n        position: absolute;\n        width: 300px;\n        height: 300px;\n        background-color: #f00;\n      }\n    </style>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <script>\n      const end = 300,\n        duration = 5;\n      const $app = document.getElementById(\"app\");\n      let starttime;\n      function move() {\n        let percent = (((Date.now() - starttime) / 1000) % duration) / duration;\n        $app.style.left = percent * end + \"px\";\n      }\n      // 方法一\n      // function start() {\n      //   starttime = Date.now()\n      //   let timer = setInterval(() => {\n      //     move()\n      //   }, 1000/60);\n      // }\n      // start()\n\n      // 方法二\n      // function start() {\n      //   let timer = setTimeout(() => {\n      //     move()\n      //     start()\n      //   }, 1000/60);\n      // }\n      // starttime = Date.now()\n      // start()\n\n      // 方法三\n      function start() {\n        requestAnimationFrame(() => {\n          move();\n          start();\n        });\n      }\n      starttime = Date.now();\n      start();\n    </script>\n  </body>\n</html>\n```\n\n#### css3 新特性\n\n![](https://user-gold-cdn.xitu.io/2020/2/18/1705850abf39af4b?w=1554&h=962&f=png&s=250353)\n\n\n1. HTML5 和 CSS3 有哪些\n\nhttps://www.cnblogs.com/star91/p/5659134.html\n\n\n#### 如何清除浮动\n\n<details>\n<summary>答案</summary>\n\n1. clear\n\n```\n.floatfix{\n    *zoom:1;\n}\n.floatfix:after{\n    content:\"\";\n    display:table;\n    clear:both;\n}\n```\n\n2. BFC\n\n- [CSS 清浮动处理（Clear 与 BFC）](https://www.cnblogs.com/dolphinX/p/3508869.html)\n\n注意事项：\n\n1. clear 只对块级元素有效\n\n2. clear 并不是清除了浮动效果，而是使当前元素盒子的边不能和前面的浮动元素 相邻。\n\n</details>\n扩展：\n  什么是BFC？BFC的好处是什么？ 如何创建BFC?\n\n- [史上最全面、最透彻的 BFC 原理剖析](https://github.com/zuopf769/notebook/blob/master/fe/BFC%E5%8E%9F%E7%90%86%E5%89%96%E6%9E%90/README.md)\n- [学习 BFC (Block Formatting Context)](https://juejin.im/post/59b73d5bf265da064618731d)\n\n那什么时候会触发BFC呢？常见的情况如下：\n\n<html>根元素；\n\nfloat的值不为none； \n\noverflow的值为auto、scroll或hidden； \n\ndisplay的值为table-cell、table-caption和inline-block中 的任何一个；\n\nposition的值不为relative和static。\n\n#### css 盒模型\n\n<details>\n<summary>答案</summary>\n\n标准模型和 IE 模型\n\ncontent padding border margin\n\n</details>\n\n#### 四种定位的区别\n\n<details>\n<summary>答案</summary>\n\n```\nstatic 是默认值 不会创建BFC\nrelative 相对定位 相对于自身原有位置进行偏移，仍处于标准文档流中\nabsolute 绝对定位 相对于最近的已定位的祖先元素, 有已定位(指position不是static的元素)祖先元素, 以最近的祖先元素为参考标准。如果无已定位祖先元素, 以body元素为偏移参照基准, 完全脱离了标准文档流。\nfixed 固定定位的元素会相对于视窗来定位,这意味着即便页面滚动，它还是会停留在相同的位置。一个固定定位元素不会保留它原本在页面应有的空隙。\n\n\n```\n\n</details>\n\n#### 其他\n\n- [css 中的百分比](https://zhuanlan.zhihu.com/p/93084661)\n- [css 实现垂直水平居中] https://juejin.im/post/5854e137128fe100698e6271 https://demo.cssworld.cn/5/3-10.php\n- [实现等高布局]https://demo.cssworld.cn/4/3-2.php https://demo.cssworld.cn/4/4-4.php\n- [你真的理解 line-height 和 vertical-align 与 基线 吗？](https://www.jianshu.com/p/7d595f941012)\n- [利用 inline-block 基线原理的小图标对齐实例页面](https://demo.cssworld.cn/5/3-7.php)\n- [focus 锚点定位和 overflow 的选项卡切换效果实例页面](https://demo.cssworld.cn/6/4-3.php)\n- [flex 布局](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)\n- [grid 布局](http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html)\n\n### html\n\n### http\n\n#### http 的特点\n\n<details>\n<summary>答案</summary>\n\n```\n无状态 无连接\n```\n\n</details>\n\n#### http 报文的组成部分\n\n<details>\n<summary>答案</summary>\n\n```\n请求行 请求头 空行 请求体\n转态行 响应头 空行 响应体\n```\n\n</details>\n\n#### http 的方法\n\n<details>\n<summary>答案</summary>\n\n```\nGET POST PUT DELETE HEAD\n```\n\n</details>\n\n扩展：\n\n- GET 和 POST 的区别\n  ![](https://user-gold-cdn.xitu.io/2020/2/16/1704c9f21c446b15?w=2386&h=1248&f=png&s=1321893)\n\n#### http 的状态码\n\n<details>\n<summary>答案</summary>\n\n能记住以下几个就行\n![](https://user-gold-cdn.xitu.io/2020/2/16/1704ca219b81dbdc?w=2466&h=774&f=png&s=714664)\n\n![](https://user-gold-cdn.xitu.io/2020/2/16/1704ca288c9ed092?w=2562&h=800&f=png&s=871763)\n\n- [更多](https://www.runoob.com/http/http-status-codes.html)\n\n</details>\n  \n#### http的持久化和管线化\n\n了解概念即可，不必深究\n\nhttps://www.cnblogs.com/hyzm/p/9530392.html\n\n### DOM 事件类型\n\n#### 请问 DOM 事件级别\n\n<details>\n<summary>答案</summary>\n\n```\nDOM 0级： dom.onclick = function() {}\nDOM 2级： document.addEventListener('click', ()=>{})\nDOM 3级： document.addEventListener('keyup', ()=>{})\n```\n\n</details>\n\n#### DOM 事件模型\n\n<details>\n<summary>答案</summary>\n\n```\n捕获和冒泡\n```\n\n</details>\n\n#### DOM 事件流\n\n<details>\n<summary>答案</summary>\n\n```\n捕获>目标阶段>冒泡\n```\n\n</details>\n\n#### 描述 DOM 事件捕获的具体流程\n\n<details>\n<summary>答案</summary>\n\n```\nwindow>document>html>body>...\n```\n\n</details>\n\n延伸：\n\n- 如何获取 html？\n\n  <details>\n  <summary>答案</summary>\n\n  ```\n  document.documentElement\n  ```\n\n  </details>\n\n#### Event 对象的常见应用\n\n<details>\n<summary>答案</summary>\n\n```\nevent.preventDefault()\nevent.stopPropagation()\nevent.stopImmediatePropagation()\nevent.target\nevent.currentTarget\n```\n\n</details>\n\n延伸：\n\n- [js 中的 stopImmediatePropagation 方法和 stopPropagation 方法的区别](https://www.cnblogs.com/EnSnail/p/9796237.html)\n- [event.target 和 event.currentTarget 的区别](https://www.cnblogs.com/yzhihao/p/9398917.html)\n\n#### 自定义事件\n\n<details>\n<summary>可以用Event或CustomEvent</summary>\n\nEvent、CustomEvent 的区别是 CustomEvent 可以传参\n\n```js\n// 首先需要提前定义好事件，并且注册相关的EventListener\nvar myEvent = new CustomEvent(\"event_name\", {\n  detail: { title: \"This is title!\" }\n});\nwindow.addEventListener(\"event_name\", function(event) {\n  console.log(\"得到标题为：\", event.detail.title);\n});\n// 随后在对应的元素上触发该事件\nif (window.dispatchEvent) {\n  window.dispatchEvent(myEvent);\n} else {\n  window.fireEvent(myEvent);\n}\n// 根据listener中的callback函数定义，应当会在console中输出 \"得到标题为： This is title!\"\n```\n\n</details>\n\n#### fastclick 的作用是什么\n\n<details>\n<summary>答案</summary>\n\n```\n解决移动端点击300ms延迟\n```\n\n</details>\n\n扩展：\n\n- [如何移动端点击延迟事件](https://www.jianshu.com/p/67bae6dfca90)\n\n#### fastclick 原理\n\n<details>\n<summary>答案</summary>\n\n```\n利用event.preventDefault()阻止默认行为，然后派发自定义click事件\n```\n\n</details>\n\n### js\n\n#### var let const 的区别\n\n```\nlet 不存在变量提升，不能重复定义，会产生块级作用域，存在暂时性死区\nconst 声明就得赋值，变量的值不得改动\n```\n\n- [一道面试题引发的“血案”](https://juejin.im/post/5bab1d4ae51d450e4d2feb7a)\n\n#### 变量提升&作用域\n\n- [图解作用域及闭包](https://juejin.im/post/5af109426fb9a07aa047f1c7)\n- [深入理解 JavaScript, 从作用域与作用域链开始](https://juejin.im/post/5d13a5fce51d455a694f9560)\n- [深入理解 JavaScript 作用域和作用域链](https://juejin.im/post/5c8290455188257e5d0ec64f)\n\n#### 获取字符串长度的方法\n\n```js\nfunction codePointLength(text) {\n  var result = text.match(/[\\s\\S]/gu);\n  return result ? result.length : 0;\n}\n\nvar s = \"𠮷𠮷\";\n\ns.length; // 4\ncodePointLength(s); // 2\n```\n\n```js\nfunction length(str) {\n  return [...str].length;\n}\n\nlength(\"x\\uD83D\\uDE80y\"); // 3\n```\n\n#### 原型链\n\n- [用自己的方式（图）理解 constructor、prototype、**proto**和原型链](https://juejin.im/post/5cc99fdfe51d453b440236c3)\n\n#### This\n\n- [嗨，你真的懂 this 吗？](https://juejin.im/post/5c96d0c751882511c832ff7b)\n- [Js 中 this 的用法](http://xieyufei.com/2016/09/18/Explain-Js-This.html)\n- [通过运行机制看 this 绑定 、作用域、作用域链和闭包](https://juejin.im/post/5dde27615188256ebd1618fb)\n- [JavaScript this 的六道坎](https://blog.crimx.com/2016/05/12/understanding-this/)\n\n#### 闭包\n\n- [图解 JS 闭包形成的原因](https://segmentfault.com/a/1190000011504517)\n\n#### 继承\n\n<details>\n<summary>答案</summary>\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>面向对象</title>\n  </head>\n  <body>\n    <script type=\"text/javascript\">\n      /**\n       * 类的声明\n       */\n      var Animal = function() {\n        this.name = \"Animal\";\n      };\n\n      /**\n       * es6中class的声明\n       */\n      class Animal2 {\n        constructor() {\n          this.name = \"Animal2\";\n        }\n      }\n\n      /**\n       * 实例化\n       */\n      console.log(new Animal(), new Animal2());\n\n      /**\n       * 借助构造函数实现继承\n       */\n      function Parent1() {\n        this.name = \"parent1\";\n      }\n      Parent1.prototype.say = function() {};\n      function Child1() {\n        Parent1.call(this);\n        this.type = \"child1\";\n      }\n      console.log(new Child1(), new Child1().say());\n\n      /**\n       * 借助原型链实现继承\n       */\n      function Parent2() {\n        this.name = \"parent2\";\n        this.play = [1, 2, 3];\n      }\n      function Child2() {\n        this.type = \"child2\";\n      }\n      Child2.prototype = new Parent2();\n\n      var s1 = new Child2();\n      var s2 = new Child2();\n      console.log(s1.play, s2.play);\n      s1.play.push(4);\n\n      /**\n       * 组合方式\n       */\n      function Parent3() {\n        this.name = \"parent3\";\n        this.play = [1, 2, 3];\n      }\n      function Child3() {\n        Parent3.call(this);\n        this.type = \"child3\";\n      }\n      Child3.prototype = new Parent3();\n      var s3 = new Child3();\n      var s4 = new Child3();\n      s3.play.push(4);\n      console.log(s3.play, s4.play);\n\n      /**\n       * 组合继承的优化1\n       * @type {String}\n       */\n      function Parent4() {\n        this.name = \"parent4\";\n        this.play = [1, 2, 3];\n      }\n      function Child4() {\n        Parent4.call(this);\n        this.type = \"child4\";\n      }\n      Child4.prototype = Parent4.prototype;\n      var s5 = new Child4();\n      var s6 = new Child4();\n      console.log(s5, s6);\n\n      console.log(s5 instanceof Child4, s5 instanceof Parent4);\n      console.log(s5.constructor);\n\n      /**\n       * 组合继承的优化2\n       */\n      function Parent5() {\n        this.name = \"parent5\";\n        this.play = [1, 2, 3];\n      }\n      function Child5() {\n        Parent5.call(this);\n        this.type = \"child5\";\n      }\n      Child5.prototype = Object.create(Parent5.prototype);\n    </script>\n  </body>\n</html>\n```\n\n</details>\n\n#### 请问 new 执行的操作\n\n```\n1. 创建一个全新的对象。\n2. 这个新对象会被执行 [[Prototype]] 连接。\n3. 这个新对象会绑定到函数调用的 this。\n4. 如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象。\n```\n\n#### 你了解 Object.create 吗\n\n- [详解 Object.create(null)](https://juejin.im/post/5acd8ced6fb9a028d444ee4e)\n\n## 二面\n\n侧重考察知识面、高阶知识、深入原理等\n\n### js\n\n#### setTimeout 和 setInterval 和 requestAnimationFrame\n\n- [关于 setInterval 与 setTimeout 作用域问题](https://my.oschina.net/huskydog/blog/1553720)\n- [注意点——setTimeout、setInterval 使用](https://juejin.im/post/59cf06745188253fbe466f78)\n- [你真的了解 setTimeout 和 setInterval 吗？](http://qingbob.com/difference-between-settimeout-setinterval/)\n- [关于 setTimeout](https://juejin.im/post/5aa4c47af265da239866e236)\n- [深度解密 setTimeout 和 setInterval——为 setInterval 正名！](https://juejin.im/post/5c4044e1f265da614f708f7d)\n- [从 setTimeout/setInterval 看 JS 线程](https://palmer.arkstack.cn/2017/12/%E4%BB%8EsetTimeout-setInterval%E7%9C%8BJS%E7%BA%BF%E7%A8%8B/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n- [你知道的 requestAnimationFrame【从 0 到 0.1】](https://juejin.im/post/5c3ca3d76fb9a049a979f429)\n\n#### JSON.parse(JSON.stringify())的缺点\n\n在 JSON.stringify()阶段\n\n```\n1.如果obj里面有时间对象，则JSON.stringify后再JSON.parse的结果，时间将只是字符串的形式，而不是对象的形式\n\n2.如果obj里有RegExp(正则表达式的缩写)、Error对象，则序列化的结果将只得到空对象\n\n3、如果obj里有函数，undefined，则序列化的结果会把函数或 undefined丢失\n\n4、如果obj里有NaN、Infinity和-Infinity，则序列化的结果会变成null\n\n5、JSON.stringify()只能序列化对象的可枚举的自有属性，例如 如果obj中的对象是有构造函数生成的， 则使用JSON.parse(JSON.stringify(obj))深拷贝后，会丢弃对象的constructor\n\n6、如果对象中存在循环引用的情况也无法正确实现深拷贝\n```\n\n#### 对象与数组的遍历\n\n- [javaScript 遍历对象、数组总结](https://www.cnblogs.com/chenyablog/p/6477866.html)\n  对象的属性分为三种： 是否是自身属性 是否可以枚举 是否是 Symbol 属性\n  注意：对象没有 for...of...\n\n举个栗子\n\n```js\nvar a = { a: 1 };\nvar b = { b: 2 };\nb.__proto__ = a;\nObject.defineProperty(b, \"c\", {\n  value: 3\n});\nb[Symbol()] = 4;\n\nObject.keys(b); // [\"b\"]  返回一个数组,包括对象自身的(不含继承的)所有可枚举属性(不含Symbol属性).\n\nfor (var i in b) {\n  console.log(i, \":\", b[i]);\n} // b : 2 a : 1   循环遍历对象自身的和继承的可枚举属性(不含Symbol属性)\n\nObject.getOwnPropertyNames(obj); // [\"b\", \"c\"] 返回一个数组,包含对象自身的所有属性(不含Symbol属性,但是包括不可枚举属性).\nObject.getOwnPropertySymbols(obj); // [Symbol()]返回一个数组，包含对象自身的所有 Symbol 属性的键名。\nReflect.ownKeys(b); // [\"b\", \"c\", Symbol()] 返回一个数组,包含对象自身的所有属性,不管属性名是Symbol或字符串,也不管是否可枚举.\n```\n\n#### 什么是严格模式\n\n严格模式主要有以下限制。\n\n```\n变量必须声明后再使用\n函数的参数不能有同名属性，否则报错\n不能使用with语句\n不能对只读属性赋值，否则报错\n不能使用前缀 0 表示八进制数，否则报错\n不能删除不可删除的属性，否则报错\n不能删除变量delete prop，会报错，只能删除属性delete global[prop]\neval不会在它的外层作用域引入变量\neval和arguments不能被重新赋值\narguments不会自动反映函数参数的变化\n不能使用arguments.callee\n不能使用arguments.caller\n禁止this指向全局对象\n不能使用fn.caller和fn.arguments获取函数调用的堆栈\n增加了保留字（比如protected、static和interface）\n```\n\n### 设计模式\n\n- [JavaScript 设计模式 es6（23 种)](https://juejin.im/post/5e021eb96fb9a01628014095)\n- [JavaScript 中常见的十五种设计模式](https://www.cnblogs.com/imwtr/p/9451129.html)\n- [设计模式](https://www.runoob.com/design-pattern/factory-pattern.html)\n\n### 函数式编程\n\n- [JavaScript 函数式编程](https://juejin.im/post/5b4ac0d0f265da0fa959a785)\n- [函数式编程入门教程](http://www.ruanyifeng.com/blog/2017/02/fp-tutorial.html)\n- [ramda](https://github.com/ramda/ramda)\n- [Ramda 函数库参考教程](http://www.ruanyifeng.com/blog/2017/03/ramda.html)\n\n### 正则表达式\n\n- [JS 正则表达式完整教程（略长）](https://juejin.im/post/5965943ff265da6c30653879)\n\n### es6\n\n- [ES6 入门教程](http://es6.ruanyifeng.com)\n- [1.5 万字概括 ES6 全部特性](https://juejin.im/post/5d9bf530518825427b27639d)\n\n#### 什么叫暂时性死区\n\n在代码块内，使用 let 命令声明变量之前，该变量都是不可用的。这在语法上，称为“暂时性死区”（temporal dead zone，简称 TDZ）。\n\n#### CommonJS 中的 require/exports 和 ES6 中的 import/export 区别？\n\n```\n- CommonJS 模块的重要特性是加载时执行，即脚本代码在 require 的时候，就会全部执行。一旦出现某个模块被”循环加载”，就只输出已经执行的部分，还未执行的部分不会输出。\n- ES6 模块是动态引用，如果使用 import 从一个模块加载变量，那些变量不会被缓存，而是成为一个指向被加载模块的引用，需要开发者自己保证，真正取值的时候能够取到值。\n- import/export 最终都是编译为 require/exports 来执行的。\n- CommonJS 规范规定，每个模块内部，module 变量代表当前模块。这个变量是一个对象，它的 exports 属性（即 module.exports ）是对外的接口。加载某个模块，其实是加载该模块的 module.exports 属性。\n- export 命令规定的是对外的接口，必须与模块内部的变量建立一一对应关系。\n\n```\n\n- [前端模块化：CommonJS,AMD,CMD,ES6](https://juejin.im/post/5aaa37c8f265da23945f365c)\n- [ES6 模块与 CommonJS 模块的差异](http://es6.ruanyifeng.com/#docs/module-loader#ES6-%E6%A8%A1%E5%9D%97%E4%B8%8E-CommonJS-%E6%A8%A1%E5%9D%97%E7%9A%84%E5%B7%AE%E5%BC%82)\n\n\n### typescript\n\n- [typescript 中文官网](https://www.tslang.cn/docs/home.html)\n- [Typescript 中的 interface 和 type 到底有什么区别](https://juejin.im/post/5c2723635188252d1d34dc7d)\n\n### vue\n\n- [30 道 Vue 面试题，内含详细讲解（涵盖入门到精通，自测 Vue 掌握程度）](https://juejin.im/post/5d59f2a451882549be53b170)\n- [Vue 3 中令人兴奋的新功能](https://juejin.im/post/5dc3cfce6fb9a04a665f100e)\n- [面试官: 实现双向绑定 Proxy 比 defineproperty 优劣如何?](https://juejin.im/post/5acd0c8a6fb9a028da7cdfaf)\n- [【2019 前端进阶之路】Vue 组件间通信方式完整版](https://juejin.im/post/5c776ee4f265da2da53edfad)\n\n#### vue-cli\n\n- [改造 vue-cli，让它更好用](https://juejin.im/post/5b7392b16fb9a009b82c05de)\n- [这可能是 vue-cli 最全的解析了……](https://juejin.im/post/5b2872516fb9a00e8626e34f)\n- [Vue-cli 原理分析](https://juejin.im/post/5b592db551882536e5178ce6)\n\n![vue响应式原理](https://user-gold-cdn.xitu.io/2018/4/11/162b38ab2d635662?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n### react\n\n- [官网](https://zh-hans.reactjs.org/docs/getting-started.html)\n- [关于 Vue 和 React 的一些对比及个人思考（上）](https://juejin.im/post/5e153e096fb9a048297390c1)\n- [【React 深入】从 Mixin 到 HOC 再到 Hook](https://juejin.im/post/5cad39b3f265da03502b1c0a)\n\n### 小程序\n\n#### taro\n\n### weex\n\n#### 源码\n\n- [Weex 中别具匠心的 JS Framework](https://halfrost.com/weex_js_framework/)\n\n### webpack\n\n- [2020 年了,再不会 webpack 敲得代码就不香了(近万字实战)](https://juejin.im/post/5de87444518825124c50cd36)\n- [一步步从零开始用 webpack 搭建一个大型项目](https://juejin.im/post/5de06aa851882572d672c1ad)\n- [怎么优化 webpack 打包速度](https://webpack.docschina.org/guides/build-performance/)\n\n### 浏览器\n\n#### 网络请求\n\n- [七层网络结构](https://blog.csdn.net/u010359398/article/details/82142449)\n- [HTTP2 详解](https://juejin.im/post/5b88a4f56fb9a01a0b31a67e)\n- [深入研究：HTTP2 的真正性能到底如何](https://segmentfault.com/a/1190000007219256)\n- [Service Worker ——这应该是一个挺全面的整理](https://blog.csdn.net/huangpb123/article/details/89498418)\n\n#### 浏览器同源政策及跨域\n\n五种方法\n\n```\njsonp\nhash\ncors\nwebsocket\npostmessage\n```\n\n- [浏览器同源政策及其规避方法](http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html)\n- [跨域资源共享 CORS 详解](http://www.ruanyifeng.com/blog/2016/04/cors.html)\n- [ajax 跨域，这应该是最全的解决方案了](https://segmentfault.com/a/1190000012469713)\n- [HTTP 访问控制（CORS）](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS)\n\n#### 网络安全\n\n- [CSRF 是什么](https://zhuanlan.zhihu.com/p/22521378)\n- [前端安全系列（一）：如何防止 XSS 攻击？](https://juejin.im/post/5bad9140e51d450e935c6d64)\n- [前端安全系列（一）：如何防止 CSRF 攻击？](https://juejin.im/post/5bc009996fb9a05d0a055192)\n\n```\n1. XSS（cross-site-scripting, 跨站脚本）攻击\n\n解决方法： 字符串转义\n\n2. 跨站请求伪造（CSRF）\n\n解决方法： 1.明文传递cookie\n         2. 请求一个随机字符串（只能用一次）\n         3. 判断referer\n\n```\n\n#### 浏览器渲染机制\n\n- [从输入 URL 到页面加载的过程？如何由一道题完善自己的前端知识体系！](https://zhuanlan.zhihu.com/p/34453198?group_id=957277540147056640)\n- [从浏览器多进程到 JS 单线程，JS 运行机制最全面的一次梳理](https://juejin.im/post/5a6547d0f265da3e283a1df7)\n\n#### js 运行机制\n\n- [这一次，彻底弄懂 JavaScript 执行机制](https://juejin.im/post/59e85eebf265da430d571f89)\n- [JavaScript 运行机制详解：再谈 Event Loop](http://www.ruanyifeng.com/blog/2014/10/event-loop.html)\n- [JavaScript 的 Event Loop 详解](https://juejin.im/post/5d21c6d56fb9a07ea4209ffc)\n- [Visualizing the javascript runtime at runtime](https://github.com/latentflip/loupe)\n\n#### 页面性能\n\n![](https://user-gold-cdn.xitu.io/2020/2/16/1704ddffd050262b?w=2516&h=1064&f=png&s=840739)\n\n- [用 100 行代码提升 10 倍的性能](https://juejin.im/post/5bec223f5188250c102116b5)\n\n#### 进程与线程\n\n- [深入理解 Node.js 中的进程与线程](https://juejin.im/post/5d43017be51d4561f40adcf9)\n- [进程与线程的一个简单解释](http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html)\n- [一篇让你明白进程与线程之间的区别与联系](https://juejin.im/post/5c932660f265da612524ad6d)\n- [浅析操作系统的进程、线程区别](https://blog.csdn.net/zhuoxiuwu/article/details/77850724)\n\n#### 页面渲染\n\n- [你不知道的浏览器页面渲染机制](https://juejin.im/post/5ca0c0abe51d4553a942c17d)\n- [浏览器页面渲染机制，你真的弄懂了吗？](https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&mid=2247489674)\n\n#### 缓存\n\n- [彻底理解浏览器的缓存机制](https://juejin.im/entry/5ad86c16f265da505a77dca4)\n- [浏览器缓存](https://segmentfault.com/a/1190000008377508)\n- [前端静态资源缓存最优解以及 max-age 的陷阱](https://blog.csdn.net/weixin_42817899/article/details/84553595)\n- [面试精选之 http 缓存](https://juejin.im/post/5b3c87386fb9a04f9a5cb037)\n\n#### 垃圾回收\n\n- [图解 JavaScript 垃圾回收 — 现代 JavaScript 教程](https://juejin.im/post/5e0ddc24f265da5d1805ee6f)\n\n#### 架构\n\n- [一文带你看透 Chrome 浏览器架构](https://juejin.im/post/5e11cd225188253a73288212)\n\n### nodejs\n\n- [npx 使用教程](http://www.ruanyifeng.com/blog/2019/02/npx.html)\n- [傻傻分不清之 Cookie、Session、Token、JWT](https://juejin.im/post/5e055d9ef265da33997a42cc)\n- [图文并茂，为你揭开“单点登录“的神秘面纱](https://juejin.im/post/5e11a6e96fb9a048411a4eca)\n- [当浏览器全面禁用三方 Cookie](https://juejin.im/post/5e97124df265da47b27d97ff)\n\n### 算法\n\n- [如何系统地学习算法？](https://www.zhihu.com/question/20588261/answer/926157817)\n- [前端该如何准备数据结构和算法？](https://juejin.im/post/5d5b307b5188253da24d3cd1)\n- [js 实现排序算法（冒泡、选择、插入、二分插入、快速、希尔）](http://blog.csdn.net/charlene0824/article/details/51387165)\n- [前端面试中的常见的算法问题](https://www.jackpu.com/qian-duan-mian-shi-zhong-de-chang-jian-de-suan-fa-wen-ti/)\n- [图形算法（邻接矩阵）](https://juejin.im/post/5de7c053518825125d1497e2)\n- [5 分钟带你领略:某跳动公司面试出镜率最高的算法之一——虚拟十叉树建模问题](https://juejin.im/post/5d7fb1e16fb9a06ac76de435)\n- [【从蛋壳到满天飞】JS 数据结构解析和算法实现-集合和映射](https://juejin.im/post/5c9242926fb9a070b33c4f57)\n- [聊聊面试必考-递归思想与实战](https://juejin.im/post/5d85cda3f265da03b638e918)\n\n#### 复杂度\n\n- [算法的时间和空间复杂度，就是这么简单](https://www.toutiao.com/a6750625828465279495)\n\n#### 二叉树\n\n- [JavaScript 二叉树深入理解](https://www.jianshu.com/p/61f75e0f549f)\n- [3 分钟理解完全二叉树、平衡二叉树、二叉查找树](https://mp.weixin.qq.com/s/K_oGI2rl3epTirxkST5LVQ)\n\n### 手写代码\n\n#### 手动实现 new\n\n```\nfunction New(Constructor, ...args){\n    let obj = {};   // 创建一个新对象\n    Object.setPrototypeOf(obj, Constructor.prototype);  // 连接新对象与函数的原型\n    return Constructor.apply(obj, args) || obj;   // 执行函数，改变 this 指向新的对象\n}\n\nfunction Foo(a){\n    this.a = a;\n}\n\nNew(Foo, 1);  // Foo { a: 1 }\n\n```\n\n```\nfunction _new() {\n    let target = {}; //创建的新对象\n    //第一个参数是构造函数\n    let [constructor, ...args] = [...arguments];\n    //执行[[原型]]连接;target 是 constructor 的实例\n    target.__proto__ = constructor.prototype;\n    //执行构造函数，将属性或方法添加到创建的空对象上\n    let result = constructor.apply(target, args);\n    if (result && (typeof (result) == \"object\" || typeof (result) == \"function\")) {\n        //如果构造函数执行的结构返回的是一个对象，那么返回这个对象\n        return result;\n    }\n    //如果构造函数返回的不是一个对象，返回创建的新对象\n    return target;\n}\n\n```\n\n#### 实现深拷贝\n\n- [如何写出一个惊艳面试官的深拷贝?](https://juejin.im/post/5d6aa4f96fb9a06b112ad5b1)\n- [浅拷贝与深拷贝](https://juejin.im/post/5b5dcf8351882519790c9a2e)\n\n#### 防抖与节流\n\n- [js 史上最精简！防抖节流（你的比我精简，算我输）](https://juejin.im/post/5da7c77a51882554c0757f46)\n- [2019 面试准备 - JS 防抖与节流](https://juejin.im/post/5c87b54ce51d455f7943dddb)\n\n#### 数组去重\n\n- [JavaScript 专题之数组去重](https://juejin.im/post/5949d85f61ff4b006c0de98b)\n- [如何答一道惊艳面试官的数组去重问题？](https://mp.weixin.qq.com/s/IA41OWhKS062WzTOQ6hDAA)\n\n#### 实现一个简易版 vue2\n\n- [【手把手系列之】实现一个简易版 vue2](https://juejin.im/post/5dd89a416fb9a07aa6226e6d)\n\n#### 其他\n\n- [【面试题】js 各种源码实现](https://juejin.im/post/5e05c8a96fb9a016470c375e)\n- [23 行代码实现一个带并发数限制的 fetch 请求函数](https://juejin.im/post/5c89d447f265da2dd37c604c)\n- [字节跳动面试官：请你实现一个大文件上传和断点续传](https://juejin.im/post/5dff8a26e51d4558105420ed)\n- [[译] 无尽滚动的复杂度 -- 来自 Google 大神的拆解](https://juejin.im/post/58a3c81e128fe10058c57a8b)\n\n### 代码质量\n\n- [代码整洁的 JavaScript](https://github.com/beginor/clean-code-javascript)\n- [如何提升 Web 应用的代码质量](https://juejin.im/post/5b21ae895188257d5e3b9f89)\n\n### 工程化\n\n- [关于前端工程化（基建）的一些总结和思考](https://juejin.im/post/5e5b869a6fb9a07cac1d61e5)\n\n## 三面\n\n侧重考察以下能力\n\n```\n业务能力\n团队协作能力\n事务推动能力\n带人能力\n架构能力\n项目经验\n```\n\n### 项目\n\n面试官往往会让你说一说，都做过哪些项目，并就其中一两个深入了解。\n\n我们需要从这些方面准备：\n\n1. 负责的项目做出了什么业绩\n2. 使用了什么技术方案\n3. 有什么技术难点\n4. 遇到了什么困难\n5. 收获了什么\n\n### 架构与事务推动\n\n1. 是否自己搭建过项目？\n2. 你当时选择的技术栈是什么？\n3. 为什么这样选择？\n4. 讲讲遇到的困难\n5. 作为技术负责人你是怎么推动项目顺利进行的\n\n### 带人与团队协作\n\n1. 是否带过人？\n2. 团队成员间怎样协作的？\n3. 是否有 code review?\n4. git 命令了解多少？\n5. 与后端、产品、设计、项目经理间是怎样协作的？\n\n### 解决问题的能力\n\n1. 是否遇到过什么困难，你是怎么解决的？\n2. 你平时都是怎样学习的？\n3. 你平常都上哪些网站？\n\n### 对技术的热情\n\n1. 你是否了解 vue3？vue3 做了哪些优化？与 vue2 有什么不同？\n2. 你是否了解微服务？web component? http3?等\n3. 是否有开源项目？\n\n## 终面（hr 面）\n\n侧重考察性格、潜力\n\n到了这一面，offer 基本已经到手了，但也不可掉以轻心，因为 hr 往往有一票否决权。\n\n可以参考\n\n- [面试应答有哪些话术和技巧？](https://www.zhihu.com/question/35953016/answer/674369195)\n- [面试应答有哪些话术和技巧？](https://www.zhihu.com/question/35953016/answer/1007150239)\n- [如何回答面试官的：你对薪资有什么要求之类的问题？](https://www.zhihu.com/question/24564013/answer/28230832)\n- [如何回答“你的期望薪资是多少？”](https://zhuanlan.zhihu.com/p/32698287)\n- [你有哪些面试失败的惨痛经验？](https://www.zhihu.com/question/290543744/answer/595815243)\n\n### 这面需要我们展现以下特性：\n\n1. 乐观积极\n2. 主动沟通\n3. 逻辑顺畅\n4. 上进有责任心\n5. 有主张，做事果断\n\n### 可能会有以下问题：\n\n1.  对加班的看法\n2.  职业规划是什么\n3.  你有什么要问的\n4.  你大学都参加了什么社团\n5.  你平时都喜欢干什么\n6.  如果和同事有了冲突，你会怎么办\n\n---\n\n至此面试结束，恭喜你拿到了心仪的 offer！\n\n接下来要讲的是面试技巧以及经验，以帮助大家更好的应对面试！！！\n\n## 面试技巧\n\n- [「技术面试」问答中有什么十分实用的面试技巧?](https://juejin.im/post/5d30c0cd6fb9a07efd474427)\n- [5 分钟谈前端面试](https://juejin.im/post/5d04fc1c51882559ef78e88f)\n- [面试前如何准备才能提高成功率（含前端面试押题）](https://juejin.im/post/5c6d4789f265da2d8e70e164)\n- [作为技术面试官，为什么把你 pass 了](https://juejin.im/post/5c1e7a086fb9a049b82a7310)\n- [精读《最佳前端面试题》及面试官技巧](https://zhuanlan.zhihu.com/p/28333260)\n- [写给初级前端的面试经验](https://juejin.im/post/5c8bb79e6fb9a04a006fe79a)\n- [前端面试指南](https://zhuanlan.zhihu.com/p/25859524)\n- [关于面试流程](https://juejin.im/post/59ec3d50f265da431c6f7339)\n- [程序员面试时这样介绍自己的项目经验，成功率能达到 98.99%](https://www.toutiao.com/a6750279305806217739)\n\n## 如果你是面试官\n\n- [谈谈面试与面试题](https://github.com/wintercn/blog/issues/4)\n- [面试数十人有感](https://juejin.im/post/5bd2d92c6fb9a05d0f17218c)\n\n## 面试经验\n\n- [记一次大厂的面试过程](https://juejin.im/post/5db556376fb9a0207a6ddce7)\n- [【新鲜面经】 四月面试不用慌，掘友攻略来帮忙| 掘金技术征文展（第一弹）](https://juejin.im/post/5e86e9da5188257391463c1d)\n\n### 阿里\n\n- [面试分享：2018 阿里巴巴前端面试总结 | 掘金技术征文](https://juejin.im/post/5ab0da85f265da23866fb9b7)\n- [我在阿里招前端，我该怎么帮你？(文末有惊喜)](https://mp.weixin.qq.com/s/pP-qvi6XK14zoGxtc2dqfA)\n- [面试分享：2018 阿里巴巴前端面试总结](https://juejin.im/post/5ab0da85f265da23866fb9b7)\n- [阿里健康面试总结](https://juejin.im/post/5d8896e5e51d45621512ae4a)\n- [大揭秘！“恐怖”的阿里一面，我究竟想问什么](https://juejin.im/post/5d4cd42a6fb9a06aea618155)\n- [面试分享：专科半年经验面试阿里前端 P6+总结(附面试真题及答案)](https://juejin.im/post/5a92c23b5188257a6b06110b)\n- [面试分享：2018 阿里巴巴前端面试总结(题目+答案)](https://blog.ihoey.com/posts/Interview/2018-02-28-alibaba-interview.html)\n- [一年半经验，百度、有赞、阿里前端面试总结](https://juejin.im/post/5befeb5051882511a8527dbe)\n- [面试分享：两年工作经验成功面试阿里 P6 总结](https://juejin.im/post/5d690c726fb9a06b155dd40d)\n- [想进阿里吗？送你一份 4000 字《阿里内推指南》](https://juejin.im/post/5da67a41f265da5b681ff295)\n- [我想加入阿里，我该怎么做](https://mp.weixin.qq.com/s/5usQY8a_6eI7PTXLXJ2Nlw)\n- [阿里六面，挂在 hrg，我真的不甘心](https://www.toutiao.com/a6753809422167835139)\n- [前端面试总结（at, md）](https://juejin.im/post/5a3134bf6fb9a0452405d507)\n- [进入大厂的面试经验（P7）](https://juejin.im/post/5e664bdd6fb9a07cd80f3192)\n- [2020 面试，已拿到头条跟阿里 offer](https://juejin.im/post/5e6b05116fb9a07cb83e39c6)\n\n### 腾讯\n\n- [腾讯前端面试篇（一）](https://juejin.im/post/5c19c1b6e51d451d1e06c163)\n- [腾讯前端面试篇（二）](https://juejin.im/post/5c1869ab6fb9a049f154207a)\n- [腾讯面试篇（三）——终章](https://juejin.im/post/5c1eec7bf265da61477034ae)\n\n### 百度\n\n- [我的 web 前端面试经历 - 百度](https://juejin.im/post/5d1d52aff265da1bb2774de0)\n\n### 京东\n\n- [面试篇 - 京东（商城用户体验设计部 - 前端架构组）](https://juejin.im/post/5c97a086f265da6116246b30)\n\n### 小米\n\n- [记一次凉凉的小米面试](https://juejin.im/post/5b4d543ce51d4519610dea67)\n\n### bilibili\n\n- [【面试总结】记一次失败的 bilibili 面试总结(1)](https://juejin.im/post/5c878397f265da2dde07293b)\n- [【面试总结】记一次失败的 bilibili 面试总结(2)](https://juejin.im/post/5c88d34fe51d4559d83381af)\n- [【面试总结】记一次失败的 bilibili 面试总结(3)](https://juejin.im/post/5ca2ba0ee51d4524fd28778a)\n\n### 头条\n\n- [两年前端头条面试记](https://juejin.im/post/5de5a2d0e51d451aec2b8883)\n- [艺术喵 2 年前端面试心路历程（字节跳动、YY、虎牙、BIGO）| 掘金技术征文](https://juejin.im/post/5e85ec79e51d4547153d0738)\n\n### 拼多多\n\n- [金三银四魔都两年半前端面经 (拼多读、猫眼、B 站等)](https://mp.weixin.qq.com/s/_qI0R15lrMwKildQ-6vY1w)\n\n### 其他\n\n- [关于裸辞，关于前端面试](https://juejin.im/post/5cf3365ff265da1b9612ec78)\n- [一年经验前端 杭州几家二线厂面试题梳理](https://juejin.im/post/5d3a538bf265da1b9163d947)\n- [1 月前端面试记](https://juejin.im/post/587dab348d6d810058d87a0a)\n- [前端面试经](https://juejin.im/post/59aa6be06fb9a0248e5cddf0)\n- [2018 年 6 月前端面试经历(上)](https://juejin.im/post/5b39bb696fb9a00e57630e27)\n- [2019 面试实战 - 第一回合](https://juejin.im/post/5c7bc11d6fb9a04a0956c325)\n- [2018 春招前端面试: 闯关记(精排精校) | 掘金技术征文](https://juejin.im/post/5a998991f265da237f1dbdf9)\n- [2018 春节后前端面试小记](https://juejin.im/post/5a99108f51882555666f1bca)\n- [Web 前端岗位面试题有哪些？](https://www.zhihu.com/question/41466747/answer/747323907)\n- [2019 年，看了这一份， 再也不怕前端面试了](https://zhuanlan.zhihu.com/p/87043003)\n- [横扫 9 家大厂前端校招 offer，全文 14560 字，阅读需 80 分钟](https://mp.weixin.qq.com/s/tM2lvhJEhXXl0nO92hf7yQ)\n\n## 招聘官网\n\n- [阿里社招](https://job.alibaba.com/zhaopin/positionList.htm)\n- [阿里校招](https://campus.alibaba.com/positionList.htm)\n- [腾讯社招](https://careers.tencent.com/search.html?query=at_1,ci_5&keyword=%e5%89%8d%e7%ab%af)\n- [今日头条社招](https://job.bytedance.com/society?summary=873&city=45&q1=%E5%89%8D%E7%AB%AF&position_type=)\n- [知乎](https://app.mokahr.com/apply/zhihu/3819#/?_k=t046ya)(北京 上海 成都 广州)\n\n## 内推\n\n- [牛客网](https://www.nowcoder.com/discuss/referral/index)\n- [一亩三分地](https://instant.1point3acres.com/tag/%E5%86%85%E6%8E%A8)\n- 脉脉\n\n## 待遇\n\n- [一文揭秘字节跳动、华为、京东的薪资职级](https://blog.csdn.net/c6E5UlI1N/article/details/105212641)\n- [阿里福利](https://campus.alibaba.com/welfare.htm)\n- [【阿里员工一年挣多少钱？聊一聊阿里薪酬职级体系】](https://m.toutiaocdn.com/a6724307251558875652)\n- [阿里的绩效考核：赏明星，杀白兔，野狗要示众](https://m.toutiaocdn.com/a6726291727654584839)\n- [在字节跳动做程序员是一种什么样的体验？](https://www.toutiao.com/a6751338039886217736)\n- [入职字节跳动 48 小时后，我发现了抖音的秘密](https://www.toutiao.com/a6751311464365031948)\n- [一文揭秘 BAT 互联网大厂薪资](https://www.toutiao.com/a6750467774801248782)\n- [最新·前端的工资分布情况 - 你拖后腿了吗？](https://juejin.im/post/5de25a9c5188255df3295809)\n\n---\n\n## 面试题仓库\n\n- [10 小时掌握前端面试题（2019 年最新版）](https://www.bilibili.com/video/BV1aE411C7pt)\n- [挑战一轮大厂后的面试总结 (含六个方向) - javascript 篇(万字长文)](https://juejin.im/post/5e523e726fb9a07c9a195a95)\n- [Front-End-Interview-Notebook](https://github.com/CavsZhouyou/Front-End-Interview-Notebook)\n- [javascript-questions](https://github.com/lydiahallie/javascript-questions/blob/master/zh-CN/README-zh_CN.md)\n* https://github.com/kdn251/interviews/blob/master/README-zh-cn.md\n\n- [2020 年从基础到进阶，测试你有多了解 JavaScript，刷新你的知识！](https://juejin.im/post/5e1830c05188254c461313dc)\n\n* https://github.com/jwasham/coding-interview-university/blob/master/translations/README-cn.md([译] Coding Interview University 一套完整的学习手册帮助自己准备 Google 的面试)\n* https://github.com/haizlin/fe-interview\n* https://github.com/30-seconds/30-seconds-of-interviews\n* https://github.com/xiaomuzhu/front-end-interview\n* https://github.com/yisainan/web-interview\n* https://github.com/woai3c/Front-end-basic-knowledge\n* https://github.com/qiu-deqing/FE-interview\n* https://github.com/poetries/FE-Interview-Questions\n* https://github.com/azl397985856/fe-interview\n\n- [张云龙 blog](https://github.com/fouber/blog)\n- [阿里，腾讯，百度，美团，头条等技术面试题目，以及答案](https://github.com/yttsam/interview_internal_reference)\n- [如何通过饿了么 Node.js 面试](https://github.com/ElemeFE/node-interview/tree/master/sections/zh-cn)\n- [面试的图谱](https://github.com/InterviewMap/CS-Interview-Knowledge-Map)\n"
        },
        {
          "name": "JS",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.2978515625,
          "content": " GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>."
        },
        {
          "name": "LIST.md",
          "type": "blob",
          "size": 2.1025390625,
          "content": "<h1 align=\"center\">系列汇总</h1>\n\n本文主要收集，针对某个问题进行了深入探讨的文章。\n\n每个系列都是精品。\n\n持续更新中……\n\n- [《语雀 IT 百科》](https://www.yuque.com/yuque/blog/yuque-info-tech-encyclopedia)\n- [JavaScript 是如何工作的系列](https://github.com/qq449245884/xiaozhi)\n- [ 前端性能优化 系列](https://github.com/qq449245884/xiaozhi)\n- [前端进阶必备，github 优质资源整理分享！](https://juejin.im/post/5d3edad9f265da03a652f133)\n\n* JavaScript 的工作原理\n  - [JavaScript 的工作原理：引擎，运行时和调用堆栈的概述](https://juejin.im/post/5bc86770e51d450e97054ac7)\n  - [JavaScript 的工作原理：V8 引擎内部+关于如何编写优化代码的 5 个技巧](https://juejin.im/post/5bc98224f265da0af213a09a)\n  - [JavaScript 的工作原理：内存管理和 4 种常见的内存泄漏](https://juejin.im/post/5c1737876fb9a049c43d935c)\n  - [JavaScript 的工作原理：事件循环及异步编程的出现和 5 种更好的 async/await 编程方式](https://juejin.im/post/5c32b971f265da61407f1057)\n  - [【译】JavaScript 的工作原理：V8 引擎内部+关于如何编写优化代码的 5 个技巧](https://juejin.im/post/5bc98224f265da0af213a09a)\n  - [V8 是怎么跑起来的 —— V8 的 JavaScript 执行管道](https://juejin.im/post/5dc4d823f265da4d4c202d3b)\n  - [js 中 v8 引擎的详解－看的吐血](https://blog.csdn.net/qq_30638831/article/details/90552912)\n\n- [JavaScript 数据结构与算法之美](https://github.com/biaochenxuying/blog)\n- [stateofjs](https://stateofjs.com/)\n- [2018js 生态趋势](https://2018.stateofjs.com/cn/introduction/)\n- [2020js 生态趋势](https://2020.stateofjs.com/zh-Hans/)\n\n- [前端技术栈干货文章链接（精品）](https://zhuanlan.zhihu.com/p/76184208)\n- [掘金排行前 5000 大佬 | 掘金文章排行 看这里](https://juejin.im/post/5d57f9a6f265da03b1204953)\n- [the-book-of-secret-knowledge](https://github.com/trimstray/the-book-of-secret-knowledge)\n- [2018 上半年掘金微信群日报优质文章合集：前端篇](https://juejin.im/post/5b3adfe2e51d4555b17e85df)\n"
        },
        {
          "name": "MATH.md",
          "type": "blob",
          "size": 0.7099609375,
          "content": "## 文章\n\n- [有什么学习数学的好网站？](https://www.zhihu.com/question/19559151)\n\n## 视频\n\n- [专为程序员设计的线性代数课程](https://www.bilibili.com/video/av68609135)\n\n## 网站\n\n- [mathigon](https://mathigon.org/courses#foundations)(初级-高级数学)\n- [brilliant](https://brilliant.org/courses/?tour=true)\n\n## 书\n\n- [immersive linear algebra](http://immersivemath.com/ila/index.html)(线性代数)\n- [统计概率](https://seeing-theory.brown.edu/cn.html#firstPage)(统计概率)\n- [1900 页数学基础：面向 CS 的线性代数、拓扑、微积分和最优化](https://zhuanlan.zhihu.com/p/75735442)\n\n## 论坛\n\n- [机器之心](https://www.jiqizhixin.com/)\n\n## 公众号\n\n- 机器之心\n"
        },
        {
          "name": "MINDMAPPING",
          "type": "tree",
          "content": null
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 2.62890625,
          "content": "\n<h1 align=\"center\">行业新闻汇总</h1>\n\n\n时刻保持警惕，随时做好准备~\n\n\n## 目录\n\n- [目录](#目录)\n- [201908](#201908)\n- [202007](#202007)\n\n\n\n## 201908\n* [“疯狂”的便利蜂，除了烧钱还能怎么扩张](https://www.toutiao.com/a6724224085456339467)\n* [破产重整！一代鞋王倒下了：欠债40多亿多家机构遭殃](https://www.toutiao.com/a6724486044286190084)\n* [电击、警棍、爆头，被骗去柬埔寨的程序员有多惨？](https://mp.weixin.qq.com/s/HML11GgMZemtf_3mqdyQbA)\n* [你以为蔚来很惨？其实比它惨的大有人在](https://www.toutiao.com/a6725196654900675085)\n* [云吞智能完成数千万元Pre-A轮融资，广发信德投资](https://www.toutiao.com/a6725192657250812424)\n* [广东首富果然名不虚传！产业总值超5.8万亿，远超马化腾、许家印](https://www.toutiao.com/a6724985002011918862)\n* [奇点杭州｜网易考拉或将作价20亿美金卖身阿里巴巴 中国首款“人造肉”将于9月上市](https://www.toutiao.com/a6724822391387587079)\n* [2019互联网百强榜出炉：蚂蚁金服、字节跳动首次闯入前十](https://www.toutiao.com/a6724869299476890115)\n* [开发网络游戏赚来130亿，离婚却隐瞒财产，搞教育遭遇滑铁卢](https://www.toutiao.com/a6725714875424719373)\n* [如果联想没错，谁错了](https://www.toutiao.com/a6725376101301879300)\n* [V神万字长文亲述以太坊2.0 Serenity设计原理](https://www.toutiao.com/a6725657770042851852)\n* [【19岁少年玩出150万天使投资，还拿到苹果公司邀请函！他玩了什么】](https://m.toutiaocdn.com/a6730904360038957575)\n* [【又想骗我搞程序吗？给你说一个业余做开源月赚8万美金的例子】](https://m.toutiaocdn.net/a6731563645907501582)\n* [【减半之后，莱特币将出现100%的上涨】](https://m.toutiaocdn.com/a6730426149576376845)\n* [柬埔寨的互联网电商发展史](https://m.toutiaocdn.com/a6726441783863017991)\n* [为什么阿里的价值观值得你关注？](https://m.igetget.com/share/audio/aid/udlvbbuZ0XtOSa0YVOJr)\n* [17年前四川农村洗碗，现在定居新加坡，我看到的世界是分层的](https://www.toutiao.com/a6738314965456781836)\n* [字节跳动的崛起史](https://www.toutiao.com/a6720765999898968589)\n* [西西弗书店](https://www.toutiao.com/a6758748236548145671)\n* [400 亿买下成格力第一大股东，硬塞给刘强东 3 亿美元，他说最好的投资机会在于“傻 x 窗口”](https://mp.weixin.qq.com/s/IlPP44uB33hXhobGnPIFSg)\n\n## 202007\n* [头条、抖音后，谁是字节跳动的新引擎？](https://maimai.cn/article/detail?fid=1506774072&efid=_NAzDDewnCQR9Kezoo-fkA&use_rn=1)"
        },
        {
          "name": "NODEJS.md",
          "type": "blob",
          "size": 20.568359375,
          "content": "<h1 align=\"center\">nodejs汇总</h1>\n\n持续更新中……\n\n## 目录\n\n- [nodejs](#nodejs)\n- [Puppeteer](#Puppeteer)\n- [爬虫](#爬虫)\n- [koa](#koa)\n- [fastify](#fastify)\n- [eggjs](#eggjs)\n- [GraphQL](#GraphQL)\n- [数据存储](#数据存储)\n- [docker](#docker)\n- [java](#java)\n- [其他](#其他)\n\n## nodejs\n\n### 官网\n\n- 官网 https://nodejs.org/zh-cn/\n- 中文官网(网友翻译) http://nodejs.cn/\n- [awesome-nodejs](https://github.com/sindresorhus/awesome-nodejs)\n\n* [nvm](https://github.com/nvm-sh/nvm)(nodejs 管理工具)\n* [nvm-windows](https://github.com/coreybutler/nvm-windows)(nodejs 管理工具)\n* [n](https://github.com/tj/n)(nodejs 管理工具)\n\n### 参考资料\n\n- [2 小时让你掌握 Node 基础（前端进阶必看）](https://www.bilibili.com/video/BV12541147Ag)\n- [2020Node.js 开发者报告](https://github.com/NoderSurvey/reporters)\n- 七天学会 NodeJS 文档 http://nqdeng.github.io/7-days-nodejs/\n- node 面试题 https://github.com/ElemeFE/node-interview\n- Node 应用内存泄漏分析方法论与实战 https://github.com/alibaba/beidou/blob/master/packages/beidou-docs/articles/node-memory-leak.md\n- nodejs 最佳实践 https://github.com/i0natan/nodebestpractices/blob/master/README.chinese.md\n\n* [深入理解 Node.js 中的进程与线程](https://juejin.im/post/5d43017be51d4561f40adcf9)\n* [node debugger](http://www.ruanyifeng.com/blog/2018/03/node-debugger.html)\n* [《Node.js 调试指南》](https://github.com/nswbmw/node-in-debugging)\n* [Node.js 技术栈](https://github.com/Q-Angelo/Nodejs-Roadmap)\n* [Node.JS 应用最佳实践：日志](https://zhuanlan.zhihu.com/p/81989446)\n* [使用 verdaccio 搭建 npm 私有仓库](https://www.jianshu.com/p/16b0a2f124fb)\n* [npm 包管理和配置 npm 的 nexus 私服](https://www.jianshu.com/p/bc71053e644c)\n* [抛弃 jenkins，使用 node 从零搭建自动化部署管理平台](https://mp.weixin.qq.com/s/UVcZh0QE8g52Iv5UB_61tQ)\n* [每天都在用 SSH，你知道 SSH 的原理吗？](https://juejin.im/post/5e4e30dfe51d4527107c8835)\n* [对 node 工程进行压力测试与性能分析](https://juejin.im/post/5b827cbbe51d4538c021f2da)\n* [使用 Node.js 构建 API 网关](https://blog.risingstack.com/building-an-api-gateway-using-nodejs/)\n\n### 开源项目\n\n- [Node.js 实现远程桌面监控](https://juejin.im/post/5d18d4c36fb9a07ecb0bbe7b)\n- [Egg + React 实战日记本（万字长文，望收藏点赞）](https://juejin.im/post/5e2a6215e51d454d50351f9b)\n- [DoraCMS](https://github.com/doramart/DoraCMS)(DoraCMS 是基于 Nodejs+eggjs+mongodb 编写的一套内容管理系统)\n\n### 微服务\n\n- [moleculerjs](https://github.com/moleculerjs/moleculer) (https://img.shields.io/github/stars/moleculerjs/moleculer.svg)\n- [nodejs 微服务 用什么框架](https://cnodejs.org/topic/5895870f800323b708f7bbf4)\n- [seneca](https://github.com/senecajs/seneca) (https://img.shields.io/github/stars/senecajs/seneca.svg)\n- [microless](https://github.com/Authing/microless) (https://img.shields.io/github/stars/Authing/microless.svg)\n- [感觉 Nodejs 社区，在微服务架构层面的软件太少了啊！有没有类似于 Spring Cloud 这种的？](https://cnodejs.org/topic/59f6e8ff688da99d4fa91e11)\n- [利用 dubbo 打造真正的 nodejs 端的微服务体系](https://juejin.im/post/5d60fec06fb9a06b19734382)\n- [risingstack](https://risingstack.com/)(用 nodejs 搭建微服务的公司)\n- [5 分钟搭建 Node.js 微服务原型](https://juejin.im/post/5e60aec0e51d45271d5d4382)\n\n### 常用库\n\n- [winston](https://github.com/winstonjs/winston)(A logger for just about everything)\n- [node-bunyan](https://github.com/trentm/node-bunyan)(a simple and fast JSON logging module for node.js services)\n- [gh-pages](https://github.com/tschaub/gh-pages)\n- [中华人民共和国行政区划代码](https://www.npmjs.com/package/province-city-china)\n- [pinyin](https://github.com/hotoo/pinyin)\n- [jsdom](https://github.com/jsdom/jsdom)(一个 JavaScript 实现各种 web 标准,使用 node . js)\n- [connect-history-api-fallback](https://github.com/bripkens/connect-history-api-fallback)(服务端不匹配 index.html 回退)\n- [joi](https://joi.dev/api/?v=17.3.0)(nodejs参数校验)\n- [fdir](https://github.com/thecodrr/fdir)(The Fastest Directory Crawler & Globber for NodeJS)\n- [nodegit](https://github.com/nodegit/nodegit)(nodegit操作)\n\n\n### 高并发\n- [过完618！来看看 Node.js 如何实现秒杀系统](https://mp.weixin.qq.com/s/veK1nn_0O5HYwkvAEZJG9w)\n- [性能优化](https://juejin.cn/post/6932290083794583566)\n- \n## npm\n\n- [npm scripts 使用指南](http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html)\n\n## Puppeteer\n\n- [无头浏览器 Puppeteer 初探](https://juejin.im/post/59e5a86c51882578bf185dba)\n\n## 爬虫\n\n- [爬虫被封怎么办？用 Node 构建一个私人 IP 代理池](https://juejin.im/post/5cc45db8f265da037129a5f2)\n- [awesome-spider](https://github.com/facert/awesome-spider)\n- [crawlab](https://github.com/crawlab-team/crawlab)(基于 Golang 的分布式爬虫管理平台)\n- [某团外卖 H5 版本爬虫开发和 JS 逆向过程](https://zhuanlan.zhihu.com/p/81773389)\n- [GitHub 上有哪些优秀的 Python 爬虫项目？](https://www.zhihu.com/question/58151047/answer/859783454)\n\n### 开源项目\n\n- [spider-flow](https://gitee.com/jmxd/spider-flow)(新一代爬虫平台，以图形化方式定义爬虫流程，不写代码即可完成爬虫)\n\n## express\n\n- [expressjs 中文](https://www.expressjs.com.cn/)\n- [express 源码阅读（全）](https://segmentfault.com/a/1190000011090124)\n- [awesome-express](https://github.com/wabg/awesome-express)\n\n## koa\n\n- [koa](https://github.com/koajs/koa)\n- [koa 文档](https://koajs.com/)\n- [koa 中文文档](https://demopark.github.io/koa-docs-Zh-CN/)\n- [Koa2 进阶学习笔记](https://github.com/chenshenhai/koa2-note)\n- [koa example](https://github.com/koajs/examples)\n- [koa+jwt 实现 token 验证与刷新](https://segmentfault.com/a/1190000019338195)\n- [node 进阶——之事无巨细手写 koa 源码](https://juejin.im/post/5ba48fc4e51d450e704277fa)\n- [awesome-koa](https://github.com/ellerbrock/awesome-koa)\n\n## fastify\n\n- [fastify](https://github.com/fastify/fastify)\n\n## eggjs\n\n- [一文看懂 Eggjs-基础全面讲解（下）](https://juejin.im/post/5d37ba17f265da1bc94f2f97)\n\n### 常用工具库\n\n- [cron-parser](https://www.npmjs.com/package/cron-parser)(用于定时任务)\n  - 文档 https://segmentfault.com/a/1190000020403852\n- [egg-valparams](https://www.npmjs.com/package/egg-valparams)(参数校验)\n  - 文档 https://github.com/D780/valparams/blob/HEAD/doc/api.md\n- [egg-cors]()(解决跨域)\n\n### 文章\n\n- [如何更优雅的使用 egg 的日志体系？](https://github.com/eggjs/egg/issues/2006)\n- [基于 Egg 框架的日志链路追踪实践分享](https://juejin.im/post/5cf5f78951882574ce0133f3)\n\n## 脚手架开发\n\n- [google/zx](https://github.com/google/zx)(用于写脚本)\n- [clipanion](https://github.com/arcanis/clipanion)(面向对象的cli工具)\n- [commondjs]()\n- [cac]()\n\n### node 内置\n\n- path\n- util.promisify\n- child_process.execSync\n\n### 常用库\n\n#### 必用\n\n- babel-cli/babel-env: 语法转换\n- semver: 提供版本比较\n- minimist: 解析用户命令，将 process.argv 解析成对象\n- commander: 命令行工具\n- inquirer: 交互式命令行工具\n- ora: 显示 loading 动画\n- chalk: 修改控制台输出内容样式\n- easy-table: 类似 console.table，输出漂亮的表格\n- log-symbols: 显示出 √ 或 × 等的图标\n- figlet: console.log 出一个漂亮的大 logo\n- consolidate：Template engine consolidation library for node.js 。\n- execa：更友好的 child_process.exec。\n- arg: 类似 commander，arg is yet another command line option parser.\n- yargs: 命令行\n\n\n#### 经常用\n\n- handlebars：一个 javascript 语以模版库。\n- cross-spawn: 跨平台的 child_process (跨 Windows/Mac)\n- fs-extra: 对 fs 库的扩展，支持 promise\n- import-from: 类似 require，但支持指定目录，让你可以跨工程目录进行 require，比如全局包想引用工程路径下的内容\n- resolve-from: 同上，只不过是 require.resolve\n- yeoman-environment: 【核心】用于执行一个「模板插件包」，后文详细描述\n- yeoman-generator:\n- open: 跨平台打开 app，比如调试的时候开打 chrome\n- download-git-repo: 用来下载远程模板\n- ini: 格式转换\n- metalsmith；An extremely simple, pluggable static site generator。\n- slash: 把 windows 反斜线路径转换为斜线路径，foo\\\\bar ➔ foo/bar\n\n- cfonts: 打印文字\n- multispinner  加载\n- lowdb   small json数据库\n\n#### 跨平台\n\n- osenv: 跨平台的系统信息\n- mkdirp 跨平台的创建文件夹\n- cross-spawn: 跨平台的 child_process\n\n## GraphQL\n\n### 官方\n\n- [graphql-js github](https://github.com/graphql/graphql-js/)\n- [express-graphql](https://github.com/graphql/express-graphql)\n- [apollo-server](https://github.com/apollographql/apollo-server)\n- [react-apollo](https://github.com/apollographql/react-apollo)\n- [GraphQL 中文](https://graphql.cn)\n- [apollo](https://github.com/apollographql/apollo)(文档：https://www.apollographql.com/docs/)\n\n### 开源项目\n\n- [graphpack](https://github.com/glennreyes/graphpack)(零配置 graphql 服务器)\n- [rejoiner](https://github.com/google/rejoiner)(Uniform GraphQL schema from gRPC microservices)\n- [gql-generator](https://github.com/timqian/gql-generator)(通过 schema 生成 query)\n\n### 文章\n\n- [前端 er 了解 GraphQL，看这篇就够了](https://juejin.im/post/5ca1b7be51882543ea4b7f27)\n- [GraphQL 入门看这篇就够了](https://mp.weixin.qq.com/s/cpPN5o_mbti9H8e-kZAY5Q)\n- [awesome-graphql](https://github.com/chentsulin/awesome-graphql)\n- [GraphQL 搭配 Koa 最佳入门实践](https://segmentfault.com/a/1190000012720317)\n- [GraphQL 为何没有火起来?](https://www.zhihu.com/question/38596306)\n- [全栈 React + GraphQL 教程（一）](https://www.zcfy.cc/article/full-stack-react-graphql-tutorial-apollo-graphql-4341.html?t=new)\n\n## 数据存储\n\n### level\n\n- [level](https://github.com/Level/level)(Fast & simple storage)\n- [then-levelup]()(level promisify)\n\n### mysql\n\n- [官网](https://www.mysql.com/)\n- [mysqljs](https://github.com/mysqljs/mysql)\n- [21 分钟 MySQL 基础入门](https://segmentfault.com/a/1190000006876419)\n- [15000 字的 SQL 语句大全](https://zhuanlan.zhihu.com/p/179168307)\n- [2019-01-11 亲测 Navicat Premium for Mac 破解](https://www.jianshu.com/p/4e93b48f9f63)\n- [MySQL 命令，一篇文章替你全部搞定](https://juejin.im/post/5ae55861f265da0ba062ec71)\n- [bookshelf](https://github.com/bookshelf/bookshelf)(A simple Node.js ORM for PostgreSQL, MySQL and SQLite3 built on top of Knex.js)\n- [Mysql 常用命令行大全](https://www.cnblogs.com/bluealine/p/7832219.html)\n- [MySQL5.7 常用命令](https://blog.csdn.net/m0_37774790/article/details/81007192)\n- [sequelize](https://github.com/sequelize/sequelize)(An easy-to-use multi SQL dialect ORM for Node.js )\n- [sequelize 官网](https://sequelize.org/master/)\n- [Sequelize Docs 中文版](https://github.com/demopark/sequelize-docs-Zh-CN/tree/master)\n- [sequelize-auto](https://github.com/sequelize/sequelize-auto)\n- [typeorm](https://github.com/typeorm/typeorm)\n\n\n### sqlite\n- [sqlite](https://www.runoob.com/sqlite/sqlite-installation.html)\n\n#### 客户端\n\n- [navicat-premium](https://www.navicat.com.cn/download/navicat-premium)\n- [mac 破解版 navicat 安装直接即可](https://www.52pojie.cn/thread-957406-1-1.html)\n\n#### 常见问题\n\n- [mysql8.0 版本 报错：Error: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol...](https://www.jianshu.com/p/c8eb6d2471f8)\n- [解决 2003 - 2003 - Can't connect to MySQL server on '127.0.0.1'(61 \"Connection refused\")](https://blog.csdn.net/zeal9s/article/details/98873165)\n- [Mac mysql 忘记密码](https://segmentfault.com/a/1190000020679306)\n- [出现 connect ECONNREFUSED 127.0.0.1:3306 报错的解决方法](http://blog.ttionya.com/article-1709.html)\n\n### mongodb\n\n- [mongoose github](https://github.com/Automattic/mongoose)\n- [mongoose 中文网](http://www.mongoosejs.net)\n- [MongoDB 中文](https://www.mongodb.org.cn/tutorial/)\n- [MongoDB 中文文档](http://www.mongoing.com/docs/)\n- [MongoDB 教程 | 菜鸟教程](https://www.runoob.com/mongodb/mongodb-tutorial.html)\n\n### cassandra\n\n- [cassandra 教程](https://www.w3cschool.cn/cassandra/)(分布式数据库)(java)\n\n### redis\n\n- [Redis 可视化工具](https://www.jianshu.com/p/721c3762a777)\n- [Redis 入门](https://juejin.im/post/5b4dd82ee51d451925629622)\n- [Redis 命令参考](http://doc.redisfans.com/index.html)\n- [基于 prometheus+grafana 体系监控 redis 缓存服务](https://www.toutiao.com/a6740202216994374147)\n- [Redis 优化高并发下的秒杀功能](https://www.toutiao.com/a6755813844909556237)\n\n#### 工具\n\n- RedisDesktopManager\n- FastRedis\n- [AnotherRedisDesktopManager](https://github.com/qishibo/AnotherRedisDesktopManager)\n\n### 图数据库\n\n- [neo4j](https://github.com/neo4j/neo4j)\n- [hive](https://github.com/apache/hive)\n\n#### 文章\n\n- [《一起学图数据库》之一：图数据库介绍](https://zhuanlan.zhihu.com/p/32857155)\n\n### ELK\n\n- [elasticsearch GitHub](https://github.com/elastic/elasticsearch)\n- [elastic 官网](https://www.elastic.co/cn/#)\n- [elastic 官方文档](https://www.elastic.co/guide/en/elasticsearch/reference/6.0/getting-started.html)\n- [elk 入门](https://segmentfault.com/a/1190000016665082)\n- [elastic 中文社区](https://elasticsearch.cn/)\n- [大搜车 NodeJS 日志规范化与分析监控](http://f2e.souche.com/blog/ri-zhi-gui-fan-hua-yu-fen-xi-jian-kong/)\n- [Node 框架接入 ELK 实践总结](https://juejin.im/post/5bf4c7ff5188250e8601d432)\n\n#### logstash\n\n- [logstash 下载](https://www.elastic.co/cn/downloads/logstash)\n\n#### ElasticSearch\n\n- [手把手教你搭建一个 Elasticsearch 集群](https://juejin.im/post/5bad9520f265da0afe62ed95)\n- [终于有人把 Elasticsearch 原理讲透了！](http://developer.51cto.com/art/201904/594615.htm)\n- [elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html)\n- [elasticsearch 中文文档](https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html)\n- [Elasticsearch 权威指南（中文版）](https://es.xiaoleilu.com/index.html)\n- [ElasticSearch 学习文档](https://juejin.im/post/5d82e5955188251b764b76ff)\n- [全文搜索引擎 Elasticsearch 入门教程](http://www.ruanyifeng.com/blog/2017/08/elasticsearch.html)\n- [Elasticsearch 就这么简单](https://juejin.im/post/5ab4496e518825556d0e0713)\n- [Elasticsearch 学习笔记](https://juejin.im/post/5b9292b75188255c6b64eee5)\n- [Elasticsearch 入门使用](https://juejin.im/post/58d1d7530ce4630057e6053a)\n- [一文上手 Elasticsearch 常用可视化管理工具](https://juejin.im/post/5bd797ce6fb9a05cd7778f8d)\n- [ElasticSearch 中\"distinct\",\"count\"和\"group by\"的实现](https://www.jianshu.com/p/62bed9cc8349)\n- [[转]23 个最有用的 Elasticsearch 检索技巧](https://juejin.im/post/5b7fe4a46fb9a019d92469a9)\n- [看完这篇还不会 Elasticsearch，我跪搓衣板，90%程序员已收藏](https://www.jianshu.com/p/ae9271012b7b)\n- [Elasticsearch 聚合——Pipeline Aggregations ](https://my.oschina.net/bingzhong/blog/1975879)\n- [ES Pipeline Aggregation(管道聚合)](https://www.jianshu.com/p/eb0645b9f620)\n\n##### 插件\n\n- [opendistro](https://opendistro.github.io/for-elasticsearch-docs/)(监控报警)\n- [elastalert](https://github.com/Yelp/elastalert)(监控报警)\n\n##### 遇到的问题\n\n- The bulk request must be terminated by a newline [\\\\n]\n  https://www.jianshu.com/p/1c8ba834e15c?utm_source=oschina-app\n\n- 关于 ElasticSearch 的聚类时出现 fielddata=true 问题\n  加`.keyword`\n\n- GET 查询，加.keyword 与不加.keyword 的区别是什么，为什么没有结果\n  https://segmentfault.com/q/1010000017312707\n\n* ElasticSearch 如何先聚合后过滤？\n  https://elasticsearch.cn/question/656\n\n#### kafka\n\n- [Kibana Guide](https://www.elastic.co/guide/en/kibana/7.4/index.html)\n- [震惊了！原来这才是 kafka！](https://www.jianshu.com/p/d3e963ff8b70)\n- [kafka 中文教程](https://www.orchome.com/kafka/index)\n\n## 中台\n\n- [漫画：什么是中台？](https://juejin.im/post/5d995f82f265da5ba308389d)\n\n## docker\n\n- [docker 官网](https://docs.docker.com/)(英)\n- [Docker Cheat Sheet](https://github.com/wsargent/docker-cheat-sheet/blob/master/zh-cn/README.md)\n- [写给前端工程师看的 Docker 教程-基础篇](https://zhuanlan.zhihu.com/p/84891860)\n- [Docker 教程](https://www.runoob.com/docker/docker-tutorial.html)\n- [Docker 中文文档](http://www.dockerinfo.net/document)\n- [Docker 中文社区](http://www.docker.org.cn/)\n- [awesome-docker](https://github.com/veggiemonk/awesome-docker)(英)\n- [awesome-dockercompose](https://github.com/bboysoulcn/awesome-dockercompose)\n- [Chef Cookbook for Docker ](https://github.com/chef-cookbooks/docker)(英)\n- [docker hub](https://hub.docker.com/)\n- [docker-windows](https://docker.com/docker-windows)\n\n### 常用命令\n\n```\ndocker container ls -a     #获得容器信息\ndocker container ls -a  -p   #获得容器id\ndocker container stop <container ID>  #停止运行容器\ndocker container rm  <container ID> #删除容器\ndocker container stop $(docker container ls -a -q)  #批量停止容器\ndocker container rm $(docker container ls -a -q)    #批量删除容器\n\n\n# 停止和删除Exited的docker实例\ndocker ps -a | grep \"Exited\" | awk '{print $1 }'|xargs docker stop\ndocker ps -a | grep \"Exited\" | awk '{print $1 }'|xargs docker rm\n# 删除none的镜像\ndocker images|grep none|awk '{print $3 }'|xargs docker rmi\n\n# 删除所有未被容器使用的镜像\ndocker image prune -a\n\n```\n\n### 文章\n\n- [写给前端的 Docker 实战教程](https://juejin.im/post/5d8440ebe51d4561eb0b2751)\n- [[手把手系列之]Docker 部署 vue 项目](https://juejin.im/post/5cce4b1cf265da0373719819)\n- [[手把手系列之]docker 部署 node+mongodb 项目](https://juejin.im/post/5db7b549f265da4d556cecbc)\n- [jenkins+docker+nodejs 项目的自动部署环境](https://my.oschina.net/gaochunzhang/blog/2246923)\n- [docker 安装 jenkins](https://github.com/jenkinsci/docker/blob/master/README.md)\n- [从零搭建 docker+jenkins+node.js 自动化部署环境](https://juejin.im/post/5b8ddb70e51d45389153f288)\n- [jenkins+docker+nodejs](https://www.codercto.com/a/72878.html)\n- [Docker 部署 nodejs 项目](https://www.jianshu.com/p/ab76ba86eafc)\n- [jenkins 自动化部署 vue](https://blog.csdn.net/jonsonler/article/details/81317352)\n- [Jenkins 一键部署 vue 项目](https://blog.csdn.net/qq_34479912/article/details/82417869)\n- [使用 Jenkins 自动部署 Docker 服务（一、Jenkins 搭建篇）](https://blog.csdn.net/z497896143/article/details/81703016)\n- [终于有人把 Docker 讲清楚了，万字详解](https://www.toutiao.com/a6753476749108969998)\n- [全栈之路：从零搭建 docker+jenkins+node.js 自动化部署环境](https://www.toutiao.com/a6740132922214334979)\n- [为什么你不必害怕 Kubernetes](https://www.toutiao.com/a6755667559334281742)\n- [我花了 10 个小时，写出了这篇 K8S 架构解析](https://www.toutiao.com/a6759071724785893891)\n\n## jenkins\n\n- [让自动化工作流解放你的双手](https://juejin.im/post/5d3fb5046fb9a06b0935f47d)\n- [jenkins 插件](http://updates.jenkins-ci.org/download/plugins/)\n- [构建 gitlab、Jenkins、harbor、kubernetes 的 DevOps 持续集成](https://learning.snssdk.com/feoffline/toutiao_wallet_bundles/toutiao_learning_wap/online/article.html?item_id=6751538964366098958&app_name=news_article)\n\n## linux\n\n- [Linux 教程](https://www.runoob.com/linux/linux-vim.html)\n- [Mac 使用 ssh 公钥登录 Linux](https://segmentfault.com/a/1190000015369885)\n\n## java\n\n- [电商系统](https://github.com/macrozheng/mall)(包括前台商城系统及后台管理系统)\n\n## nginx\n\n- [前端想要了解的 Nginx](https://juejin.im/post/5cae9de95188251ae2324ec3)\n- [一文弄懂 Nginx 的 location 匹配](https://juejin.im/post/5cbe89b6f265da0373718707)\n- [nginx 这一篇就够了](https://juejin.im/post/5d81906c518825300a3ec7ca)\n- [为 docker 中的 nginx 配置 https](https://www.cnblogs.com/sparkdev/p/9163162.html)\n\n## 其他\n\n- [k8s 日志收集实战](https://juejin.im/post/5b6eaef96fb9a04fa25a0d37)\n- [[译] Kubernetes 儿童插图指南](https://juejin.im/post/5d1b2a656fb9a07edc0b7058)\n- [不要用 JWT 来做 Web 应用的会话管理](https://juejin.im/entry/59748def518825592c4f9ac0)\n- [万网云解析设置二级域名解析到同 IP 不同端口](https://jingyan.baidu.com/article/eb9f7b6d8a02a5869364e827.html)\n- [怎样用 Bash 编程：语法和工具](https://www.toutiao.com/a6756741451649909259)\n\n## 运维部署\n\n- [jhipster](https://github.com/jhipster/generator-jhipster)(JHipster 是一个创建、开发、部署 Spring Boot + Angular/React 架构的 Web 应用或 Spring 微服务应用的开发平台。)\n- [jhipster 官网](https://www.jhipster.tech)\n- [jhipster 中文](https://www.jhipster-cn.tech/)\n"
        },
        {
          "name": "NOTES.md",
          "type": "blob",
          "size": 0.0634765625,
          "content": "苹果每年 6 月开 WWDC\n\niPad Pro 16 个月才会更新一次\n"
        },
        {
          "name": "OTHER.md",
          "type": "blob",
          "size": 2.966796875,
          "content": "## 2020\n* [全球崩盘背后真相（信息量巨大）](https://zhuanlan.zhihu.com/p/113016153)\n\n\n## 未归档\n\n* [把时间当作朋友](https://github.com/xiaolai/time-as-a-friend)\n* [我也有话要说](https://github.com/xiaolai/public-speaking-with-meaning)\n* [超强的学习能力是怎样练就的？](https://www.zhihu.com/question/35103080/answer/414223605)\n* [iPhone 被免费 App 扣费怎么办？App Store 如何申请退款？](http://www.i4.cn/news_detail_28087.html)\n* [App Store偷偷扣费？赶紧关闭这个功能，减少不必要的资金流失](https://baijiahao.baidu.com/s?id=1631511478013181040&wfr=spider&for=pc)\n\n\n## 英语\n* [人人都能用英语](https://github.com/xiaolai/everyone-can-use-english)\n* [怎么在一个月内让英语听力有明显的提高？](https://www.zhihu.com/question/24706380/answer/387403508)\n* [专为程序员编写的英语学习指南 v1.2](https://github.com/yujiangshui/A-Programmers-Guide-to-English)\n\n\n## 投资\n* [杭州房产知识扫盲](https://github.com/houshanren/hangzhou_house_knowledge)\n* [定投 —— 大佬的自我修养](https://github.com/xiaolai/regular-investing-in-box)\n* [如何分析一只股票？](https://www.zhihu.com/question/21089794/answer/854148445)\n\n## 宠物\n* [怎么训练狗狗，就这样一周一个动作！](https://jingyan.baidu.com/article/c910274b5455b9cd361d2df1.html)\n* [终于有人把MACD讲明白了：零上金叉买，零下死叉抛！此文很短很深](https://www.toutiao.com/a6742336421668848142)\n\n\n## 二次元\n\n\n## 历史\n* [欧亚5000年历史版图变迁，中国很牛，配乐很燃，看得热血沸腾](https://www.ixigua.com/i6745890875898855943/)\n\n\n## 旅游\n\n## 时事\n* [这是一篇分析香港世界格局最透彻的雄文](https://mp.weixin.qq.com/s/1xPkw4D5DyEhWCE20-bzqw)\n## 新型冠状病毒\n\n### 工具\n* [丁香园疫情实时动态](https://ncov.dxy.cn/ncovh5/view/pneumonia?scene=2&clicktime=1579612226&enterid=1579612226&from=groupmessage&isappinstalled=0)\n* [新冠肺炎小区速查](https://ncov.html5.qq.com/community?channelid=17&from=groupmessage&isappinstalled=&jump_from=16EtfjWXTxUcS55xUKC3aK-E)\n* [密切接触者查询](https://2019ncov.cetccloud.com/#/)\n\n\n### 大事件\n* [一个武汉女生的真实日记](https://new.qq.com/omn/20200210/20200210A05S1800.html)\n* [你可能戴的是假口罩！曝光！这些全是假货！内附鉴别指南](https://mp.weixin.qq.com/s/9_HvBDNvbZiLhzea76ka-A)\n* [大变化！广州口罩预约时间、规则、入口均有调整！可别错过了！](https://mp.weixin.qq.com/s/qc1dshgPVQG_SvjNTNyfow)\n* [当当网一人确诊66人隔离被指防控不力，员工如何用法律武器保护自己？](https://mp.weixin.qq.com/s/uygP-Sr7S-Z1UF2inUHJNg)\n* [非典时期的北京孩子](https://mp.weixin.qq.com/s/AzwmdYSqvEJ45VYm7j6HeA)\n\n\n## 科技\n\n\n## 经济\n\n- [重读《一本书读懂财报》](https://zhuanlan.zhihu.com/p/131573559)\n- [税前2万4，到手1万4，心态崩了！](https://mp.weixin.qq.com/s/ggc0YtHHqCyEIQrjYIVXPA)\n\n"
        },
        {
          "name": "OTHER",
          "type": "tree",
          "content": null
        },
        {
          "name": "PMP.md",
          "type": "blob",
          "size": 0.6767578125,
          "content": "- [PMP 应该如何备考？](https://www.zhihu.com/question/363128773)\n- [PMP 认证考试申请及预约报名指南](https://zhuanlan.zhihu.com/p/48203494)\n- [零基础的我是如何在三个月通过 PMP 考试的](https://www.jianshu.com/p/b5c6cb6799f7)\n- [我在考 pmp，想知道如何去学习 pmbok？](https://www.zhihu.com/question/21789391)\n\n- [PMP 项目管理第六版培训教程](https://www.bilibili.com/video/BV11E411V7Ei?from=search&seid=6761117522051072653)\n- [2020 年 PMP 认证考试课程-零基础也能听懂学会的 PMP 课程](https://www.bilibili.com/video/BV1EJ411y7Ez?from=search&seid=6761117522051072653)\n\n公众号和 APP 模拟做题\nb 站看视频\n买书\n"
        },
        {
          "name": "Promotion.md",
          "type": "blob",
          "size": 0.4091796875,
          "content": "<h1 align=\"center\">转正、述职、晋升</h1>\n\n- [年底晋升，全网最详细的通关指南来了！](https://juejin.cn/post/6908380219028029453)\n- [工作两三年了，整不明白架构图都画啥？](https://juejin.cn/post/6934513564774301704)\n- [写代码水平的几个发展阶段](https://juejin.cn/post/6844903549852188685)\n- [大厂P8晋升答辩干货分享](https://zhuanlan.zhihu.com/p/344992817)\n\n"
        },
        {
          "name": "QUESTIONS.md",
          "type": "blob",
          "size": 20.537109375,
          "content": "## html\n\n1. HTML5 和 CSS3 有哪些\n\nhttps://www.cnblogs.com/star91/p/5659134.html\n\n2.\n\n## css\n\n1. BFC\n\n- [史上最全面、最透彻的 BFC 原理剖析](https://github.com/zuopf769/notebook/blob/master/fe/BFC%E5%8E%9F%E7%90%86%E5%89%96%E6%9E%90/README.md)\n- [学习 BFC (Block Formatting Context)](https://juejin.im/post/59b73d5bf265da064618731d)\n\n2. CSS 清浮动处理\n\n- [CSS 清浮动处理（Clear 与 BFC）](https://www.cnblogs.com/dolphinX/p/3508869.html)\n\n3. 移动端 1px\n\n- [移动端 1px 解决方案](https://juejin.im/post/5d19b729f265da1bb2774865)\n- [移动端 1px 像素问题及解决办法](https://www.jianshu.com/p/31f8907637a6)\n- [吃透移动端 1px ｜从基本原理到开源解决方案](https://juejin.im/post/5df3053ce51d45583d425ada)\n- [CSS3 border-image 彻底明白](https://segmentfault.com/a/1190000010969367)\n\n首先要了解虚拟像素（css 像素）、物理像素（设备像素）、逻辑像素 和设备像素比(dpr)的概念，然后要了解我们设计师的设计稿一般都是 750\\*1334，这个设计稿上的 1px 是 css 像素, 而设计师要的效果是 1px 的物理像素，所以需要除于设备像素比(dpr)，比如 iPhone6 的 dpr 是 2，就 1/2\n\ndpr 的意思可以这样理解，1css 像素要用 dpr 个物理像素来表示\n\n4. 圣杯布局和双飞翼布局\n\n- [圣杯布局和双飞翼布局的理解与思考](https://www.jianshu.com/p/81ef7e7094e8)\n\n5. CSS 画扇形\n\n- [css 画扇形的几种实现方式](https://blog.csdn.net/young_Emily/article/details/80091667)\n- [你真的理解 CSS 的 linear-gradient？](https://www.w3cplus.com/css3/do-you-really-understand-css-linear-gradients.html)\n\n## js\n\n### 表达式和语句\n\n表达式是由运算符构成，并运算产生结果的语法结构。每个表达式都会产生一个值，它可以放在任何需要一个值的地方\n\n语句则是由“；（分号）”分隔的句子或命令。如果在表达式后面加上一个“；”分隔符，这就被称为“表达式语句”。\n\n1. getcomputedstyle 和 style 的区别\n\n```\n1.只读与可写\n  getComputedStyle方法是只读的，只能获取样式，不能设置；而element.style能读能写，能屈能伸。\n2.获取的对象范围\n  getComputedStyle方法获取的是最终应用在元素上的所有CSS属性对象（即使没有CSS代码，也会把默认的祖宗八代都显示出来）；\n  而element.style只能获取元素style属性中的CSS样式。\n  因此对于一个光秃秃的元素<p>，getComputedStyle方法返回对象中length属性值（如果有）就是190+(据我测试FF:192, IE9:195, Chrome:253, 不同环境结果可能有差异),\n  而element.style就是0。\n3.作用\n  getComputedStyle方法有一个很重要的，类似css()方法没有的功能——获取伪类元素样式\n4.兼容性\n  getComputedStyle方法IE6~8是不支持的\n\n```\n\n2. 判断数据类型的方法\n\n- typeof\n\n```\nconsole.log(typeof 2);               // number\nconsole.log(typeof true);            // boolean\nconsole.log(typeof 'str');           // string\nconsole.log(typeof undefined);       // undefined\nconsole.log(typeof []);              // object\nconsole.log(typeof {});              // object\nconsole.log(typeof function(){});    // function\nconsole.log(typeof null);            // object\n\n```\n\n- instanceof\n\n```\nconsole.log(2 instanceof Number);                    // false\nconsole.log(true instanceof Boolean);                // false\nconsole.log('str' instanceof String);                // false\nconsole.log([] instanceof Array);                    // true\nconsole.log(function(){} instanceof Function);       // true\nconsole.log({} instanceof Object);                   // true\n```\n\n- Object.prototype.toString.call()\n\n```\nvar toString = Object.prototype.toString;\n\nconsole.log(toString.call(2));                      //[object Number]\nconsole.log(toString.call(true));                   //[object Boolean]\nconsole.log(toString.call('str'));                  //[object String]\nconsole.log(toString.call([]));                     //[object Array]\nconsole.log(toString.call(function(){}));           //[object Function]\nconsole.log(toString.call({}));                     //[object Object]\nconsole.log(toString.call(undefined));              //[object Undefined]\nconsole.log(toString.call(null));                   //[object Null]\n```\n\n3. 变量提升&作用域\n\n- [图解作用域及闭包](https://juejin.im/post/5af109426fb9a07aa047f1c7)\n- [深入理解 JavaScript, 从作用域与作用域链开始](https://juejin.im/post/5d13a5fce51d455a694f9560)\n- [深入理解 JavaScript 作用域和作用域链](https://juejin.im/post/5c8290455188257e5d0ec64f)\n\n4. 闭包\n\n- [图解 JS 闭包形成的原因](https://segmentfault.com/a/1190000011504517)\n\n5. this\n\n- [嗨，你真的懂 this 吗？](https://juejin.im/post/5c96d0c751882511c832ff7b)\n- [Js 中 this 的用法](http://xieyufei.com/2016/09/18/Explain-Js-This.html)\n- [通过运行机制看 this 绑定 、作用域、作用域链和闭包](https://juejin.im/post/5dde27615188256ebd1618fb)\n- [JavaScript this 的六道坎](https://blog.crimx.com/2016/05/12/understanding-this/)\n\n```\n1. 普通函数的调用：this指向window(浏览器环境)。\n2. 对象方法的调用：this指向调用对象。（隐式绑定）\n3. 构造函数：this指向构造函数实例。\n4. apply、call、bind：this指向绑定值。（显示绑定）\n5. 箭头函数this：this指向外层第一个普通函数调用的this。（默认绑定）(对于箭头函数，只要看它在哪里创建)\n\n\n优先级\n1. 函数是否存在new绑定调用：如果是的话this绑定到新创建的对象上。\n2. 函数是否通过apply、call、bind显示绑定：如果是，this绑定到指定对象上。\n3. 函数是否在对象方法隐式调用：如果是的话，this绑定到调用对象。\n4. 如果上面三条都不满足的话：在严格模型下，this绑定到undefined，在非严格模式下，this绑定到全局对象上。\n\n```\n\n5.0 new 执行的操作\n\n```\n1. 创建一个全新的对象。\n2. 这个新对象会被执行 [[Prototype]] 连接。\n3. 这个新对象会绑定到函数调用的 this。\n4. 如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象。\n```\n\n手动实现 new\n\n```\nfunction New(Constructor, ...args){\n    let obj = {};   // 创建一个新对象\n    Object.setPrototypeOf(obj, Constructor.prototype);  // 连接新对象与函数的原型\n    return Constructor.apply(obj, args) || obj;   // 执行函数，改变 this 指向新的对象\n}\n\nfunction Foo(a){\n    this.a = a;\n}\n\nNew(Foo, 1);  // Foo { a: 1 }\n\n```\n\n```\nfunction _new() {\n    let target = {}; //创建的新对象\n    //第一个参数是构造函数\n    let [constructor, ...args] = [...arguments];\n    //执行[[原型]]连接;target 是 constructor 的实例\n    target.__proto__ = constructor.prototype;\n    //执行构造函数，将属性或方法添加到创建的空对象上\n    let result = constructor.apply(target, args);\n    if (result && (typeof (result) == \"object\" || typeof (result) == \"function\")) {\n        //如果构造函数执行的结构返回的是一个对象，那么返回这个对象\n        return result;\n    }\n    //如果构造函数返回的不是一个对象，返回创建的新对象\n    return target;\n}\n\n```\n\n### Object.create\n\n- [详解 Object.create(null)](https://juejin.im/post/5acd8ced6fb9a028d444ee4e)\n\n6. 理解 constructor、prototype、**proto**和原型链\n\n- [用自己的方式（图）理解 constructor、prototype、**proto**和原型链](https://juejin.im/post/5cc99fdfe51d453b440236c3)\n\n```\n任何一个对象都有constructor\n对象和函数的constructor都是Function\n\n```\n\n7. let const var\n\n- [一道面试题引发的“血案”](https://juejin.im/post/5bab1d4ae51d450e4d2feb7a)\n\n8. setTimeout 和 setInterval 和 requestAnimationFrame\n\n- [关于 setInterval 与 setTimeout 作用域问题](https://my.oschina.net/huskydog/blog/1553720)\n- [注意点——setTimeout、setInterval 使用](https://juejin.im/post/59cf06745188253fbe466f78)\n- [你真的了解 setTimeout 和 setInterval 吗？](http://qingbob.com/difference-between-settimeout-setinterval/)\n- [关于 setTimeout](https://juejin.im/post/5aa4c47af265da239866e236)\n- [深度解密 setTimeout 和 setInterval——为 setInterval 正名！](https://juejin.im/post/5c4044e1f265da614f708f7d)\n- [从 setTimeout/setInterval 看 JS 线程](https://palmer.arkstack.cn/2017/12/%E4%BB%8EsetTimeout-setInterval%E7%9C%8BJS%E7%BA%BF%E7%A8%8B/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n- [你知道的 requestAnimationFrame【从 0 到 0.1】](https://juejin.im/post/5c3ca3d76fb9a049a979f429)\n\n9. Event Loop\n\n- [这一次，彻底弄懂 JavaScript 执行机制](https://juejin.im/post/59e85eebf265da430d571f89)\n- [JavaScript 运行机制详解：再谈 Event Loop](http://www.ruanyifeng.com/blog/2014/10/event-loop.html)\n- [JavaScript 的 Event Loop 详解](https://juejin.im/post/5d21c6d56fb9a07ea4209ffc)\n- [Visualizing the javascript runtime at runtime](https://github.com/latentflip/loupe)\n\n### JSON.parse(JSON.stringify())的缺点\n\n在 JSON.stringify()阶段\n\n```\n1.如果obj里面有时间对象，则JSON.stringify后再JSON.parse的结果，时间将只是字符串的形式，而不是对象的形式\n\n2.如果obj里有RegExp(正则表达式的缩写)、Error对象，则序列化的结果将只得到空对象\n\n3、如果obj里有函数，undefined，则序列化的结果会把函数或 undefined丢失\n\n4、如果obj里有NaN、Infinity和-Infinity，则序列化的结果会变成null\n\n5、JSON.stringify()只能序列化对象的可枚举的自有属性，例如 如果obj中的对象是有构造函数生成的， 则使用JSON.parse(JSON.stringify(obj))深拷贝后，会丢弃对象的constructor\n\n6、如果对象中存在循环引用的情况也无法正确实现深拷贝\n```\n\n### 进程与线程\n\n- [深入理解 Node.js 中的进程与线程](https://juejin.im/post/5d43017be51d4561f40adcf9)\n- [进程与线程的一个简单解释](http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html)\n- [一篇让你明白进程与线程之间的区别与联系](https://juejin.im/post/5c932660f265da612524ad6d)\n- [浅析操作系统的进程、线程区别](https://blog.csdn.net/zhuoxiuwu/article/details/77850724)\n\n### 函数式编程\n\n- [JavaScript 函数式编程](https://juejin.im/post/5b4ac0d0f265da0fa959a785)\n- [函数式编程入门教程](http://www.ruanyifeng.com/blog/2017/02/fp-tutorial.html)\n- [ramda](https://github.com/ramda/ramda)\n- [Ramda 函数库参考教程](http://www.ruanyifeng.com/blog/2017/03/ramda.html)\n\n### 深拷贝与浅拷贝\n\n- [浅拷贝与深拷贝](https://juejin.im/post/5b5dcf8351882519790c9a2e)\n- [如何写出一个惊艳面试官的深拷贝?](https://juejin.im/post/5d6aa4f96fb9a06b112ad5b1)\n- [一步一步实现深拷贝](https://github.com/950905/record-summary/blob/master/common/%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D.md)\n\n### 防抖与节流\n\n- [js 史上最精简！防抖节流（你的比我精简，算我输）](https://juejin.im/post/5da7c77a51882554c0757f46)\n- [2019 面试准备 - JS 防抖与节流](https://juejin.im/post/5c87b54ce51d455f7943dddb)\n\n### 对象与数组的遍历\n\n- [javaScript 遍历对象、数组总结](https://www.cnblogs.com/chenyablog/p/6477866.html)\n  对象的属性分为三种： 是否是自身属性 是否可以枚举 是否是 Symbol 属性\n  注意：对象没有 for...of...\n\n举个栗子\n\n```js\nvar a = { a: 1 };\nvar b = { b: 2 };\nb.__proto__ = a;\nObject.defineProperty(b, \"c\", {\n  value: 3\n});\nb[Symbol()] = 4;\n\nObject.keys(b); // [\"b\"]  返回一个数组,包括对象自身的(不含继承的)所有可枚举属性(不含Symbol属性).\n\nfor (var i in b) {\n  console.log(i, \":\", b[i]);\n} // b : 2 a : 1   循环遍历对象自身的和继承的可枚举属性(不含Symbol属性)\n\nObject.getOwnPropertyNames(obj); // [\"b\", \"c\"] 返回一个数组,包含对象自身的所有属性(不含Symbol属性,但是包括不可枚举属性).\nReflect.ownKeys(b); // [\"b\", \"c\", Symbol()] 返回一个数组,包含对象自身的所有属性,不管属性名是Symbol或字符串,也不管是否可枚举.\n```\n\n### 数组去重\n\n- [JavaScript 专题之数组去重](https://juejin.im/post/5949d85f61ff4b006c0de98b)\n- [如何答一道惊艳面试官的数组去重问题？](https://mp.weixin.qq.com/s/IA41OWhKS062WzTOQ6hDAA)\n\n### 严格模式\n\n严格模式主要有以下限制。\n\n```\n变量必须声明后再使用\n函数的参数不能有同名属性，否则报错\n不能使用with语句\n不能对只读属性赋值，否则报错\n不能使用前缀 0 表示八进制数，否则报错\n不能删除不可删除的属性，否则报错\n不能删除变量delete prop，会报错，只能删除属性delete global[prop]\neval不会在它的外层作用域引入变量\neval和arguments不能被重新赋值\narguments不会自动反映函数参数的变化\n不能使用arguments.callee\n不能使用arguments.caller\n禁止this指向全局对象\n不能使用fn.caller和fn.arguments获取函数调用的堆栈\n增加了保留字（比如protected、static和interface）\n```\n\n### 异常处理\n\n- [[html] script 的 crossorigin 属性](https://www.jianshu.com/p/a45c9d089c93)\n\n### 代码质量\n\n- [代码整洁的 JavaScript](https://github.com/beginor/clean-code-javascript)\n- [如何提升 Web 应用的代码质量](https://juejin.im/post/5b21ae895188257d5e3b9f89)\n\n### 正则表达式\n\n- [JS 正则表达式完整教程（略长）](https://juejin.im/post/5965943ff265da6c30653879)\n\n## typescript\n\n- [typescript 中文官网](https://www.tslang.cn/docs/home.html)\n- [Typescript 中的 interface 和 type 到底有什么区别](https://juejin.im/post/5c2723635188252d1d34dc7d)\n\n## vue\n\n- [30 道 Vue 面试题，内含详细讲解（涵盖入门到精通，自测 Vue 掌握程度）](https://juejin.im/post/5d59f2a451882549be53b170)\n- [Vue 3 中令人兴奋的新功能](https://juejin.im/post/5dc3cfce6fb9a04a665f100e)\n- [面试官: 实现双向绑定 Proxy 比 defineproperty 优劣如何?](https://juejin.im/post/5acd0c8a6fb9a028da7cdfaf)\n\n![vue响应式原理](https://user-gold-cdn.xitu.io/2018/4/11/162b38ab2d635662?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n### vue-cli\n\n- [改造 vue-cli，让它更好用](https://juejin.im/post/5b7392b16fb9a009b82c05de)\n- [这可能是 vue-cli 最全的解析了……](https://juejin.im/post/5b2872516fb9a00e8626e34f)\n- [Vue-cli 原理分析](https://juejin.im/post/5b592db551882536e5178ce6)\n\n### vue3\n\n- [面试官: 实现双向绑定 Proxy 比 defineproperty 优劣如何?](https://juejin.im/post/5acd0c8a6fb9a028da7cdfaf)\n\n### 组件间通信示例\n\n- [EventBus （$emit / $on）](https://codesandbox.io/s/vue-bus-tms87)\n- [$attrs/$listeners](https://codesandbox.io/s/vue-attrs-listeners-z5rwe)\n- [provide / inject ](https://codesandbox.io/s/affectionate-matsumoto-w5l8h)\n\n### react 组件间通信示例\n\n- Context\n- render prop\n- 组合组件，提升组件层次，把组件作为 prop\n- redux\n\n## es6\n\n- [ES6 入门教程](http://es6.ruanyifeng.com)\n- [1.5 万字概括 ES6 全部特性](https://juejin.im/post/5d9bf530518825427b27639d)\n\n### 什么叫暂时性死区\n\n在代码块内，使用 let 命令声明变量之前，该变量都是不可用的。这在语法上，称为“暂时性死区”（temporal dead zone，简称 TDZ）。\n\n## weex\n\n### 源码\n\n- [Weex 中别具匠心的 JS Framework](https://halfrost.com/weex_js_framework/)\n\n## react\n\n- [官网](https://zh-hans.reactjs.org/docs/getting-started.html)\n- [关于 Vue 和 React 的一些对比及个人思考（上）](https://juejin.im/post/5e153e096fb9a048297390c1)\n- [【React 深入】从 Mixin 到 HOC 再到 Hook](https://juejin.im/post/5cad39b3f265da03502b1c0a)\n\n## 小程序\n\n### taro\n\n## webpack\n\n- [2020 年了,再不会 webpack 敲得代码就不香了(近万字实战)](https://juejin.im/post/5de87444518825124c50cd36)\n- [一步步从零开始用 webpack 搭建一个大型项目](https://juejin.im/post/5de06aa851882572d672c1ad)\n\n## 浏览器\n\n- [从输入 URL 到页面加载的过程？如何由一道题完善自己的前端知识体系！](https://zhuanlan.zhihu.com/p/34453198?group_id=957277540147056640)\n- [从浏览器多进程到 JS 单线程，JS 运行机制最全面的一次梳理](https://juejin.im/post/5a6547d0f265da3e283a1df7)\n\n### 页面渲染\n\n- [你不知道的浏览器页面渲染机制](https://juejin.im/post/5ca0c0abe51d4553a942c17d)\n- [浏览器页面渲染机制，你真的弄懂了吗？](https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&mid=2247489674)\n\n### 缓存\n\n- [彻底理解浏览器的缓存机制](https://juejin.im/entry/5ad86c16f265da505a77dca4)\n- [浏览器缓存](https://segmentfault.com/a/1190000008377508)\n- [前端静态资源缓存最优解以及 max-age 的陷阱](https://blog.csdn.net/weixin_42817899/article/details/84553595)\n- [面试精选之 http 缓存](https://juejin.im/post/5b3c87386fb9a04f9a5cb037)\n\n### 跨域与安全\n\n- [我知道的跨域与安全](https://juejin.im/post/5a6320d56fb9a01cb64ee191)\n\n- 跨站攻击\n\n```\n1. XSS（cross-site-scripting, 跨站脚本）攻击\n\n解决方法： 字符串转义\n\n2. 跨站请求伪造（CSRF）\n\n解决方法： 1.明文传递cookie\n         2. 请求一个随机字符串（只能用一次）\n\n```\n\n- [ajax 跨域，这应该是最全的解决方案了](https://segmentfault.com/a/1190000012469713)\n- [浏览器同源政策及其规避方法](http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html)\n- [跨域资源共享 CORS 详解](http://www.ruanyifeng.com/blog/2016/04/cors.html)\n- 可以通过 Symbol 进行 iframe 的跨域 http://es6.ruanyifeng.com/#docs/symbol\n\n```\niframe = document.createElement('iframe');\niframe.src = String(window.location);\ndocument.body.appendChild(iframe);\n\niframe.contentWindow.Symbol.for('foo') === Symbol.for('foo')\n// true\n```\n\n- 限制网站被 iframe 包裹\n\n添加这个 http 头可以限制别人把你的网站套成它的 iframe\n\n```\nX-Frame-Options: SAMEORIGIN\n```\n- [JS判断页面是否被iframe及禁止页面被iframe](https://www.cnblogs.com/bella-lin/p/9266994.html)\n\n\n### http\n\n- [七层网络结构](https://blog.csdn.net/u010359398/article/details/82142449)\n\n### 垃圾回收\n\n- [图解 JavaScript 垃圾回收 — 现代 JavaScript 教程](https://juejin.im/post/5e0ddc24f265da5d1805ee6f)\n\n### 架构\n\n- [一文带你看透 Chrome 浏览器架构](https://juejin.im/post/5e11cd225188253a73288212)\n\n## 性能优化\n\n- [用 100 行代码提升 10 倍的性能](https://juejin.im/post/5bec223f5188250c102116b5)\n\n## 移动端\n\n- [吃透移动端 H5 与 Hybrid ｜实践踩坑 12 种问题汇总](https://juejin.im/post/5dfadb91e51d45584006e486)\n- [前端基础知识概述 -- 移动端开发的屏幕、图像、字体与布局的兼容适配](https://juejin.im/post/5d70747cf265da03e16897c8)\n- [移动前端知识总结](http://caibaojian.com/mobile-knowledge.html)\n\n## nodejs\n\n### npm\n\n- [npx 使用教程](http://www.ruanyifeng.com/blog/2019/02/npx.html)\n\n## 服务端相关\n\n- [傻傻分不清之 Cookie、Session、Token、JWT](https://juejin.im/post/5e055d9ef265da33997a42cc)\n- [图文并茂，为你揭开“单点登录“的神秘面纱](https://juejin.im/post/5e11a6e96fb9a048411a4eca)\n\n## 算法与数据结构\n\n- [前端该如何准备数据结构和算法？](https://juejin.im/post/5d5b307b5188253da24d3cd1)\n- [js 实现排序算法（冒泡、选择、插入、二分插入、快速、希尔）](http://blog.csdn.net/charlene0824/article/details/51387165)\n- [前端面试中的常见的算法问题](https://www.jackpu.com/qian-duan-mian-shi-zhong-de-chang-jian-de-suan-fa-wen-ti/)\n- [图形算法（邻接矩阵）](https://juejin.im/post/5de7c053518825125d1497e2)\n- [5 分钟带你领略:某跳动公司面试出镜率最高的算法之一——虚拟十叉树建模问题](https://juejin.im/post/5d7fb1e16fb9a06ac76de435)\n- [【从蛋壳到满天飞】JS 数据结构解析和算法实现-集合和映射](https://juejin.im/post/5c9242926fb9a070b33c4f57)\n- [聊聊面试必考-递归思想与实战](https://juejin.im/post/5d85cda3f265da03b638e918)\n\n### 复杂度\n\n- [算法的时间和空间复杂度，就是这么简单](https://www.toutiao.com/a6750625828465279495)\n\n### 二叉树\n\n- [JavaScript 二叉树深入理解](https://www.jianshu.com/p/61f75e0f549f)\n- [3 分钟理解完全二叉树、平衡二叉树、二叉查找树](https://mp.weixin.qq.com/s/K_oGI2rl3epTirxkST5LVQ)\n\n```\n\n```\n\n## 选择题\n\n- [2020 年从基础到进阶，测试你有多了解 JavaScript，刷新你的知识！](https://juejin.im/post/5e1830c05188254c461313dc)\n\n## 手写题\n\n- [23 行代码实现一个带并发数限制的 fetch 请求函数](https://juejin.im/post/5c89d447f265da2dd37c604c)\n- [字节跳动面试官：请你实现一个大文件上传和断点续传](https://juejin.im/post/5dff8a26e51d4558105420ed)\n\n## 服务端渲染\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3818359375,
          "content": "---\nhome: true\nheroImage: null\nheroText: 资源汇总\ntagline: 本文收集学习过程中收藏的资源 相信对大家会有帮助 喜欢的可以star, 持续更新中大家可以watch\nactionText: 快速开始 →\nactionLink: /INTERVIEWMOCK\nfeatures:\n# - title: 简洁至上\n#   details: 以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。\n# - title: Vue驱动\n#   details: 享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。\n# - title: 高性能\n#   details: VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。\n# footer: MIT Licensed | Copyright © 2019-present Ping Ao. ICP:[粤ICP备19152421号](http://beian.miit.gov.cn)\n---\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/abc-club/js-paradise.svg)](https://starchart.cc/abc-club/js-paradise)\n\n\n## 目录\n\n- [从面试前到终面，全面为您保驾护航](INTERVIEWMOCK.md)\n- [前端](FRONTEND.md)\n- [自己动手](DIY.md)\n- [前辈经验](EXPERIENCE.md)\n- [面试](INTERVIEW.md)\n- [源码解析](SOURCECODE.md)\n- [前端自检](CHECKLIST.md)\n- [装机必备及软件安装](SOFTWARE/README.md)\n- [精品系列](LIST.md)\n- [后端&运维](BACKEND.md)\n- [常用技巧](SKILLS.md)\n- [GITHUB 优秀开源项目](GITHUB.md)\n- [你需要关注的公众号、博客、大神等](FOLLOW.md)\n- [行业新闻](NEWS.md)\n- [其他](OTHER.md)\n- [abc-club 技术博客](BLOG/README.md)\n- [数学](MATH.md)\n\n## buy me coffee\n\n<img src=\"https://camo.githubusercontent.com/ea9531f3faf680e7b3665f18a2938c615067103c/68747470733a2f2f757365722d676f6c642d63646e2e786974752e696f2f323032302f332f32372f313731316262386332356537356130663f773d3132343226683d3136383626663d706e6726733d343531353933\" width=\"30%\" alt=\"weixin\">\n<div style=\"display:inline-block;width:30%;\"></div>\n<img src=\"https://camo.githubusercontent.com/39250ebe4edd8b2284965ef217489fb093585b45/68747470733a2f2f757365722d676f6c642d63646e2e786974752e696f2f323032302f332f32372f313731316262386437626636323337653f773d39303026683d3133353026663d706e6726733d343033373430\" width=\"30%\" alt=\"alipay\">\n\n<p style='padding: 2.5rem;\n    border-top: 1px solid #eaecef;\n    text-align: center;\n    color: #4e6e8e;'>\n    MIT Licensed | Copyright © 2019-present Ping Ao. \n    ICP:<a target='_blank' href='http://beian.miit.gov.cn'>粤ICP备19152421号</a>\n</p>\n"
        },
        {
          "name": "SKILLS.md",
          "type": "blob",
          "size": 7.0263671875,
          "content": "- mac 关闭端口：\n\nps -ef|grep mysqld”\n```\nsudo lsof -i :8100\nsudo kill -9 8100\n```\n\n- npm 清理缓存\n\n```\nnpm cache clean -f\n```\n\n- - 控制台输出到 txt\n\n```\nC:\\你输入的命令 >output.txt\n```\n\n- [Mac Chrome 浏览器取消自动升级（看这一篇就够了）](https://blog.csdn.net/chenyufeng1991/article/details/78568919)\n\n## 翻墙\n\n- [翻墙-科学上网 ](https://github.com/bannedbook/fanqiang)\n- [一键脚本搭建 SSR 服务器教程 ](https://github.com/xiaoming2028/FreeNetwork/wiki)\n\n## mac 调试 ios 手机上的移动端页面\n\n第一步：打开 iphone 手机的开发者模式，流程是：【设置】->【Safari】->【高级】->开启【Web 检查器】\n\n第二步：打开 Mac 上 Safari 的开发者模式，流程是【Safari】->【偏好设置】->【高级】->【在菜单栏中显示“开发”菜单】勾选\n\n第三步：用数据线将 iphone 手机和 mac 连接起来，在电脑的 safari 中按照流程执行：【开发】->【手机名称】->【正在调试的网站】\n\n- [MAC 自动加载.bash_profile 文件通过.zshrc](https://blog.csdn.net/YaphetZhao/article/details/88027831)\n\n- [在 Github Pages 上将子目录设置为网站根目录(Set subdirectory as website root on Github Pages)](http://www.it1352.com/798173.html)\n\n```\ngit subtree push --prefix .vuepress/dist origin gh-pages\n```\n\n- [解决从 github 上拉取代码慢的问题](https://blog.csdn.net/yyou33459/article/details/84947819)\n- [Linux/Mac/Windows-刷新 DNS 的方法](https://baijiahao.baidu.com/s?id=1616353495084098905&wfr=spider&for=pc)\n\n* 生成图片 https://shields.io/ https://github.com/badges/shields\n\n```\n* []()  ![Github stars](https://img.shields.io/github/stars/Snailclimb/JavaGuide.svg)\n```\n\nnpm link 不用安装依赖\n- [npm link的使用](https://www.jianshu.com/p/aaa7db89a5b2)  npm unlink xxx\n- \nnpm publish 个人不允许发布@xxx/yyy这种名字的包  要加 `npm publish --access public`, 这里的xxx还必须和我们的用户名相同\n\n\n\nmac 录屏 使用 qq 提供的录屏工具 ctrl+command+r,或者 quicktime\n\n## 备份公司邮箱邮件\n\n### 查询企业邮箱的 POP、SMTP、IMAP 服务器地址设置\n\nhttps://qiye.163.com/help/client-profile.html\n\n### 如何将 outlook 邮件保存到本地\n\nhttps://zhidao.baidu.com/question/1604321182206045747.html\n\n### 如何查看 fps\n\n如果你用的是 Chrome，只需几步，快速测试性能：\n\n打开开发者工具\n按 Command+Shift+P (Mac) or Control+Shift+P (Windows, Linux) 来打开命令菜单\n输入 render，下拉框中选择 Show Rendering。\n点击 render 页签，FPS Meter 前打钩。\n滚动列表\n\n### ssh\n\n- [每天都在用 SSH，你知道 SSH 的原理吗？](https://juejin.im/post/5e4e30dfe51d4527107c8835)\n- [SSH 协议基本原理及 wireshark 抓包分析](https://juejin.im/post/5baaf517e51d453df0442dce)\n- [Mac 使用 ssh 公钥登录 Linux](https://segmentfault.com/a/1190000015369885)\n\n生成证书\n// openssl req -x509 -newkey rsa:2048 -nodes -sha256 -subj '/CN=localhost' -keyout 密钥.pem -out 证书.pem\n\n使用`ssh-keygen`生成私钥`id_rsa`和公钥`id_rsa.pub`(目录为`~/.ssh`)\n\n把`id_rsa.pub`放到服务器（或 github）上\n\nTODO:不明白 session key 是什么时候生成的\n\n1. ssh 到服务器\n2. 服务器会用`公钥`加密一段信息，\n3. 如果我们的电脑能用`私钥`解密出来，然后再用`session key`加密返回给服务器，\n4. 服务器用`session key`解密后发现是自己原来发送的信息那么就建立连接，此后的信息都用`session key`加密传送\n\n// 未免密的情况\n\n1. ssh 到服务器\n2. 服务器发来 Host Key，\n3. 我们确认\n4. 服务器与我们协商生成`session key`（用 DH 算法）\n5. 服务器要求我们输入密码\n6. 我们输入密码，用`session key`加密发给服务器\n7. 服务器用`session key`解密后，发现密码正确，允许登录\n8. 此后我们与服务器之间的所有消息都通过`session key`加密\n\n// 免密登录\n\n1. ssh 到服务器，我们用 Private Key 生成签名向服务器发起登录请求\n2. 服务端验证签名，检查自己有没有和这个签名匹配的 Public Key，如果有，则进入下一步。\n3. 服务端生成一串随机字符串，用 Public Key 加密后发送给客户端\n4. 客户端用相应的 Private Key 解密这串字符串，再使用 MD5 hash 和 Session Key 加密该字符串，将结果发送给服务端。\n5. 服务端使用同样的 MD5 hash 和 Session Key 计算这串字符的加密结果，并和客户端发来的结果做比对，如果结果一样，则允许客户端登录。\n\n#### github 增加 ssh 的方法\n\n在.ssh 目录下\n\n1. ssh-keygen -t rsa -C \"youremail@example.com\"\n2. ssh-add ~/.ssh/id_rsa\n3. 复制.pub 到 GitHub\n\n## 服务器相关\n\n- [腾讯云实现全站 HTTPS 方案](https://cloud.tencent.com/document/product/400/6813)\n\n## charles 抓不到包的原因\n\n可能是以下原因\n\n1. 没勾选 Proxy -> macOS Proxy，勾选上 macOS Proxy\n2. 浏览器装的插件拦截了\n3. 不支持对应的协议，如 https http2 等需要另外配置\n\n\n## iterm2找不到nvm命令\n\n需要在iterm2离source\n\n## vscode按照code命令\n\n打开面板，输入install code安装\n\n\n## 解决github提交commit,contributions不统计显示绿色的问题\n\nhttps://www.cnblogs.com/dongliu/p/5782329.html\n\n\n## 网页性能代码\n\n```js\nfunction getTiming() {\n  try {\n    var timing = performance.timing;\n    var timingObj = {};\n\n    var loadTime = (timing.loadEventEnd - timing.loadEventStart) / 1000;\n\n    if(loadTime < 0) {\n      setTimeout(function() {\n        getTiming();\n      }, 0);\n      return;\n    }\n\n    timingObj['重定向时间'] = (timing.redirectEnd - timing.redirectStart);\n    timingObj['DNS 解析时间'] = (timing.domainLookupEnd - timing.domainLookupStart);\n    timingObj['TCP 完成握手时间'] = (timing.connectEnd - timing.connectStart);\n    timingObj['HTTP 请求响应完成时间'] = (timing.responseEnd - timing.requestStart);\n    timingObj['DOM 开始加载前所花费时间'] = (timing.responseEnd - timing.navigationStart);\n    timingObj['DOM 加载完成时间'] = ((timing.domComplete || timing.domLoading) - timing.domLoading);\n    timingObj['DOM 结构解析完成时间'] = (timing.domInteractive - timing.domLoading);\n    timingObj['总体网络交互耗时，即开始跳转到服务器资源下载完成时间'] = (timing.responseEnd - timing.navigationStart);\n    timingObj['可交互的时间'] = (timing.domContentLoadedEventEnd - timing.domContentLoadedEventStart);\n    timingObj['首次出现内容'] = (timing.domLoading - timing.navigationStart);\n    timingObj['onload 事件时间'] = (timing.loadEventEnd - timing.loadEventStart);\n    timingObj['页面完全加载时间'] = (timingObj['重定向时间'] + timingObj['DNS 解析时间'] + timingObj['TCP 完成握手时间'] + timingObj['HTTP 请求响应完成时间'] + timingObj['DOM 结构解析完成时间'] + timingObj['DOM 加载完成时间']);\n\n    for(item in timingObj) {\n      console.log(item + \":\" + timingObj[item] + '(ms)');\n    }\n\n    console.log(performance.timing);\n\n  } catch(e) {\n    console.log(performance.timing);\n  }\n}\ngetTiming()\n\n```"
        },
        {
          "name": "SOFTSKILLS.md",
          "type": "blob",
          "size": 3.3798828125,
          "content": "\n# 架构师\n\n模块化、组件化、规范化、自动化\n\n- [前端面试 - 如何考察候选人的架构能力](https://juejin.cn/post/6844904182307094536)\n\n# 方案文档\n- [设计方案，写了才知道有多香](https://juejin.cn/post/6996819856033054756)\n- [如何编写前端设计文档](https://juejin.cn/post/7017643726944108558)\n- [if 我是前端团队 Leader，怎么做好概要设计](https://juejin.cn/post/6844903936504119304)\n- [现代软件开发中，详细设计这一步要如何来做？](https://www.zhihu.com/question/300407894)\n\n\n# 规范\n\n## 协作规范\n\n- [if 我是前端团队 Leader，怎么制定前端协作规范?](https://juejin.cn/post/6844903897610321934)\n\n\n## 前端规范\n- [推荐几个大厂的前端代码规范，学会了，你也能写出诗一样的代码！](https://juejin.cn/post/6893891476913291278)\n- [你来弄一个团队代码规范](https://juejin.cn/post/7033210664844066853)\n- \n## git规范\n- [开发工作流规范(基于Git)](https://github.com/GDJiaMi/frontend-standards/blob/master/development.md#git-%E5%88%86%E6%94%AF%E6%A8%A1%E5%9E%8B)\n\n## 日志规范\n- [实战！日志打印的15个好建议](https://juejin.cn/post/7010889983149998117)\n\n\n# 代码质量\n- [怎么提高代码质量？-来自Google的研发经验总结](https://juejin.cn/post/6844903795873284109)\n\n## 设计模式\n- [前端渣渣唠嗑一下前端中的设计模式（真实场景例子）](https://juejin.cn/post/6844904138707337229)\n\n\n# 体验优化\n- [前端优秀实践不完全指南](https://juejin.cn/post/6932647134944886797)\n\n\n# 前端知识体系\n- [前端劝退之前端知识体系（前端面试体系）](https://juejin.cn/post/6994657097220620319)\n\n\n# 领导力\n\n- [做了六年多技术管理，聊一些经验总结](https://juejin.cn/post/6943492053795880991)\n- [2022年如何成为一名优秀的大前端Leader？](https://juejin.cn/post/7034419410706104356)\n- [前端小团队管理实践](https://juejin.cn/post/7063408145229414407)\n\n# 架构设计\n- [从 16 个方向逐步搭建基于 vue3 的前端架构](https://juejin.cn/post/7025524870842679310)\n- [从零带你架构一个企业级 React 项目](https://juejin.cn/post/6983853725987110919)\n- [我所理解的前端DDD（领域驱动设计）](https://juejin.cn/post/7012192812380717069)\n- [大型项目前端架构浅谈（8000字原创）](https://juejin.cn/post/6844903853859536903)\n\n## 请求\n- [减少重复的请求，也许这个库能帮到你](https://juejin.cn/post/7046667393405304868)\n\n# 架构图\n- [前端架构 - 来少年, 一起画个架构图](https://juejin.cn/post/6846687603979206664)\n\n## 权限设计\n- [浅谈前端权限设计方案](https://juejin.cn/post/6949453195987025927)\n- [有赞权限系统](https://juejin.cn/post/6844903576720916487)\n\n# 成长\n-[前端架构师亲述：前端工程师成长之路的 N 问 及 回答](https://juejin.cn/post/6844903872108953613)\n\n# 研发效率\n\n## 工具\n- [粉丝推荐 7 个 GitHub 项目，果然 yyds](https://juejin.cn/post/7046260884158562317)\n\n\n# 专业技能\n\n\n\n## 计算机基础\n- [计算机自学之旅](https://github.com/ossu/computer-science)\n- [CS-Notes](https://github.com/CyC2018/CS-Notes)\n\n\n## 前端\n\n### 微前端\n- []()\n\n\n## 服务端\n\n### java\n- [微服务实战教程](https://github.com/sqshq/piggymetrics)\n\n## 前沿\n\n### 跨平台\nflutter\nTauri\n\n\n### web3.0\n\n\n### ar\n@react-three/xr\nreact-force-graph\n\n\n### vr\n\n\n### 区块链\n\n\n### webgl threejs\n\n"
        },
        {
          "name": "SOFTWARE",
          "type": "tree",
          "content": null
        },
        {
          "name": "SOURCECODE.md",
          "type": "blob",
          "size": 2.0244140625,
          "content": "<h1 align=\"center\">前端源码解析汇总</h1>\n\n\n持续更新中……\n\n\n* [Promise源码分析](https://juejin.im/post/5c1cb4b0e51d455fb3109f48)\n* [一年内的前端看不懂前端框架源码怎么办？](https://www.zhihu.com/question/350289336/answer/873350617)\n* [来聊聊源码学习](https://juejin.im/post/5b18d2d7f265da6e410e0e20)\n\n## vue\n* [逐行级别的vue源码分析](https://github.com/HcySunYang/vue-design)(HcySunYang)\n* [👍 Vue.js 源码分析](https://github.com/ustbhuangyi/vue-analysis)(ustbhuangyi)\n* [入口文件开始，分析Vue源码实现](https://juejin.im/post/5adead636fb9a07aaf34d794)\n* [vue-cli 源码分析](https://github.com/KuangPF/vue-cli-analysis)\n* [做面试的不倒翁：浅谈 Vue 中 computed 实现原理](https://juejin.im/post/5b98c4da6fb9a05d353c5fd7)\n* [Vue.js 源码解析](https://github.com/answershuto/learnVue)(染陌)\n* [Vue 3 源码导读](https://juejin.im/post/5d977f47e51d4578453274b3)\n* [Vue 3 源码解读](https://github.com/KieSun/vue-interpretation)\n\n## snabbdom\n* [解析 snabbdom 源码，教你实现精简的 Virtual DOM 库 ](https://github.com/creeperyang/blog/issues/33)\n* [snabbdom 源码阅读分析](https://juejin.im/post/5b9200865188255c672e8cfd)\n* [Vue基于snabbdom做了哪些事](https://juejin.im/post/5d1037e9e51d455d877e0d43)\n\n\n## react\n* [《React源码解析》系列完结！](https://juejin.im/post/5a84682ef265da4e83266cc4)\n* [剖析 React 源码：先热个身](https://juejin.im/user/574f8d8d2e958a005fd4edac)\n\n\n## vscode\n* [VSCode 是怎么运行起来的？](https://www.barretlee.com/blog/2019/08/03/vscode-source-code-reading-notes/)\n* [微软 VSCode IDE 源码分析揭秘](https://zhuanlan.zhihu.com/p/99587182)\n- [VSCode 工作区切换](https://geek-docs.com/vscode/vscode-tutorials/vscode-workspace-switch.html)\n\n\n## weex\n* [Weex 中别具匠心的 JS Framework](https://halfrost.com/weex_js_framework/)\n\n\n## koa\n* [学习 koa 源码的整体架构，浅析koa洋葱模型原理和co原理](https://juejin.im/post/5e69925cf265da571e262fe6)\n\n## 其他\n* [fastclick]()"
        },
        {
          "name": "TODOS.md",
          "type": "blob",
          "size": 0.3330078125,
          "content": "\n- [2019 34 个今年11月最受欢迎的 JavaScript 库](https://juejin.im/post/5df65fbdf265da33d83e70b7)\n\n- [cube.js](https://github.com/cube-js/cube.js)(js分析框架)\n\n\n## 无代码\n\nhttps://github.com/taowen/awesome-lowcode\n\n\n## 字体压缩\nhttps://github.com/ecomfe/fontmin\n\n## 机器学习\n- [trackingjs](https://trackingjs.com/)\n- "
        },
        {
          "name": "TOOLS.md",
          "type": "blob",
          "size": 1.556640625,
          "content": "\n## 轮播 swiper slider Carousel\n\n### js\n- [swiper](https://www.swiper.com.cn/)\n\n### vue\n- [vue-awesome-swiper](https://github.com/surmon-china/vue-awesome-swiper)\n- [vue-slider-component](https://github.com/NightCatSama/vue-slider-component)\n\n\n## 滚动 scroll\n\n### js\n\n- [iscroll](https://github.com/cubiq/iscroll)\n- [better-scroll](https://github.com/ustbhuangyi/better-scroll)\n\n### vue\n- [vue-infinite-loading](https://github.com/PeachScript/vue-infinite-loading)\n\n\n## 网络请求\n- [axios](https://github.com/axios/axios)\n- [cross-fetch](https://github.com/lquixada/cross-fetch)(在服务端用node-fetch，在浏览器用whatwg-fetch，Universal WHATWG Fetch API for Node, Browsers and React Native.)\n- [whatwg-fetch](https://github.com/github/fetch)(window.fetch polyfill)\n- [node-fetch](https://github.com/node-fetch/node-fetch)(A light-weight module that brings window.fetch to Node.js)\n- \n\n\n## hook\n\n### react\n- [react-use](https://github.com/streamich/react-use)\n- [swr](https://github.com/vercel/swr)(React Hooks library for remote data fetching)\n- [umijs hooks](https://github.com/umijs/hooks)\n\n\n## 不可变数据\n- immutable https://github.com/immutable-js/immutable-js\n\n\n## 匹配\n- [micromatch](https://github.com/micromatch/micromatch)\n\n## pwa\n\n- [workbox](https://github.com/GoogleChrome/workbox)\n- [workbox-webpack-plugin](https://github.com/GoogleChrome/workbox/blob/master/packages/workbox-webpack-plugin)\n\n## xss\n- [xss](https://github.com/leizongmin/js-xss/blob/master/README.zh.md)(npm install xss)\n\n# 工具\n- [json转ts工具](https://apihelper.jccore.cn/jsontool)\n"
        },
        {
          "name": "UTILS.md",
          "type": "blob",
          "size": 1.166015625,
          "content": "\n## 重复\n\n```js\nconst repeat = (str, n) => {\n    let res = ''\n    while (n) {\n      if (n % 2 === 1) res += str\n      if (n > 1) str += str\n      n >>= 1\n    }\n    return res\n  }\n\n```\n\n## 缓存结果\n\n```js\nfunction cached(fn) {\n  const cache = Object.create(null)\n  return function cachedFn (str) {\n    const hit = cache[str]\n    return hit || (cache[str] = fn(str))\n  }\n}\n\n```\n\n## 复制属性\n```js\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (const key in _from) {\n    to[key] = _from[key]\n  }\n  return to\n}\n\n```\n\n## \n\n```js\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nexport function makeMap (str, expectsLowerCase) {\n  const map = Object.create(null)\n  const list = str.split(',')\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true\n  }\n  return expectsLowerCase\n    ? val => map[val.toLowerCase()]\n    : val => map[val]\n}\n\n```\n\n## 常用常量或方法\n\n```js\n/**\n * Perform no operation.\n */\nexport function noop () {}\n\n/**\n * Always return false.\n */\nexport const no = () => false\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nexport const identity = (_) => _\n\n```"
        },
        {
          "name": "WEAPP.md",
          "type": "blob",
          "size": 2.2587890625,
          "content": "\n<h1 align=\"center\">小程序资源汇总</h1>\n\n本文收集小程序资源\n\n持续更新中……\n\n\n## 目录\n\n* [nodejs](NODEJS.md)\n\n\n## 架构\n\n- [flutter-mini-program](https://github.com/zhaomenghuan/flutter-mini-program)(flutter小程序)\n\n\n### 文章\n\n\n\n## 微信小程序\n\n### 文章\n* [awesome-wechat-weapp](https://github.com/justjavac/awesome-wechat-weapp)\n* [近两万字小程序攻略发布了](https://juejin.im/post/5b8fd1416fb9a05cf3710690)\n\n### 组件库\n * [ColorUI](https://github.com/weilanwl/ColorUI/)\n\n\n### 开源项目\n* [微信小程序商城](https://github.com/EastWorld/wechat-app-mall)\n* [口罩全家福 - 求帮头像 P 上 N95口罩](https://mp.weixin.qq.com/s/V_gNCAZlI6-UoZhM6WLvZQ)\n- [list-of-wechat-mini-program-list](https://github.com/JackonYang/list-of-wechat-mini-program-list)(开源微信小程序列表)\n\n\n## Taro\n### 参考资料\n- taro https://taro.aotu.io/\n- taro小册 https://juejin.im/book/5b73a131f265da28065fb1cd\n- awesome https://github.com/NervJS/awesome-taro\n\n### 组件库\n- mounted https://github.com/fjc0k/mounted\n- taro-ui https://taro-ui.jd.com\n\n### 文章\n * [小程序开发：用原生还是选框架（wepy/mpvue/taro/uni-app）](https://ask.dcloud.net.cn/article/35947)\n * [小程序多端框架全面测评：chameleon、Taro、uni-app、mpvue、WePY](https://blog.fundebug.com/2019/03/28/compare-wechat-app-frameworks/)\n * [dva+ts+taro 小程序构建-资料总汇](https://juejin.im/post/5d1041436fb9a07eeb13b2fa)\n * [Taro撸一个简版的微信读书小程序](https://juejin.im/post/5d1e16676fb9a07ebd48f488)\n * [Abraham - 用Taro写个垃圾分类微信小程序](https://juejin.im/post/5d2a0774518825290726fa7a)\n * [小程序跨框架开发的探索与实践](https://mp.weixin.qq.com/s?__biz=MzU3NDkzMTI3MA==&mid=2247483770&idx=1&sn=ba2cdea5256e1c4e7bb513aa4c837834)(taro架构)\n\n\n### 精选demo\n- https://github.com/huangzhuangjia/taro-music\n- https://github.com/lsqy/taro-music\n- https://github.com/Izayawww/my-taro\n- https://github.com/Duanruilong/taro_dva_typescript\n- https://github.com/js-newbee/taro-yanxuan\n- https://github.com/EasyTuan/taro-msparis\n- https://github.com/huangjianke/Gitter\n- https://juejin.im/post/5d2a0774518825290726fa7a\n\n\n\n## 字节小程序\n\n- [头条号第三方平台](https://open.mp.toutiao.com/#/?_k=ly2kgs)"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.025390625,
          "content": "theme: jekyll-theme-cayman"
        },
        {
          "name": "algorithms.md",
          "type": "blob",
          "size": 3.314453125,
          "content": "## 算法\n\n### 递归\n\n- [如何写递归](https://leetcode-cn.com/circle/article/koSrVI/)\n\n递归的套路\n\n```\npublic int sum(int n) {\n    if (n < 2) return n;       // ① 跳出时返回基本情况的结果\n    int childSum = sum(n - 1); // ② 先递归\n    return n + childSum;       // ③ 再计算，依赖递归的返回值\n}\n\n\n```\n\n尾递归的套路\n\n```\npublic int sum2(int n, int sum) {\n    if (n < 2) return 1 + sum; // ① 跳出时返回基本情况的结果与中间变量的计算结果\n    sum += n;                   // ② 根据函数参数与中间变量重新计算出新的中间变量\n    return sum2(n - 1, sum);    // ③ 由基本情况条件触发决定，最终返回 B + sum\n}\n\n```\n\n### 动态规划\n\n- [闫氏 DP 分析法，从此再也不怕 DP 问题！](https://www.bilibili.com/video/BV1X741127ZM/)\n\n## 数学\n\n### 求最大公约数\n\n- [js 计算最大公约数和最小公倍数代码实例](https://www.jb51.net/article/169844.htm)\n\n## 算法技巧\n\n### 数字技巧\n\n#### 数字一半反转\n\nx =1221 rev =0 每次 x/10, rev\\*10 当 rev>x 时停止迭代，这就到了一半位置\n\n### 小数靠近 0 取整\n\n```\nfunction f(n) {\n  return n | 0\n}\n```\n\n### 循环遍历数组\n\n需求： [1,2,3,4]，4 后再到 1\n\n```\nd = (d+1)%4\n```\n\n### 二维数组初始化\n\n```\nvar dp = new Array(nums.length)\n    for(var i=0;i<nums.length;i++) {\n        dp[i] = []\n        for (var sum = -1000; sum <= 1000; sum++) {\n            dp[i][sum+1000] = 0\n        }\n    }\n```\n\n### 求中间位置(偏左)\n\n```\nvar mid = Math.floor((left+right)/2)\n\n// Prevent (left + right) overflow\nvar mid = Math.floor(right+(right-left)/2)\n\n l + r >>> 1;\n\n```\n\n### 二分查找\n\n模板一\n\n```js\nvar search = function(nums, target) {\n  var left = 0,\n    right = nums.length - 1;\n  while (left <= right) {\n    var mid = Math.floor((left + right) / 2);\n    if (nums[mid] > target) right = mid - 1;\n    else if (nums[mid] < target) left = mid + 1;\n    else return mid;\n  }\n  return -1;\n};\n```\n\n模板二\n\n用于找分界点 left\n\n```js\n// 初始条件：left = 0, right = length-1\n// 终止：left == right\n// 向左查找：right = mid\n// 向右查找：left = mid+1\nvar search = function(nums, target) {\n  var left = 0,\n    right = nums.length - 1;\n  while (left < right) {\n    var mid = Math.floor((left + right) / 2);\n    if (nums[mid] > target) right = mid;\n    else if (nums[mid] < target) left = mid + 1;\n    else return mid;\n  }\n  if (nums[left] === target) return left;\n  return -1;\n};\nsearch([1, 1, 1, 10, 10, 10], 9);\n```\n\n模板三\n\n```js\nvar search = function(nums, target) {\n  var left = 0,\n    right = nums.length - 1;\n  while (left + 1 < right) {\n    var mid = Math.floor((left + right) / 2);\n    if (nums[mid] > target) right = mid;\n    else if (nums[mid] < target) left = mid;\n    else return mid;\n  }\n  if (nums[left] === target) return left;\n  if (nums[right] === target) return right;\n  return -1;\n};\nsearch([1, 2, 3], 3);\n```\n\n### 截取 index 周围 k 个元素\n\n```js\nvar start = index - Math.floor(k / 2);\nif (start < 0) start = 0;\nreturn arr.slice(start, start + k);\n```\n\n理解 ArrayBuffer\n\n```\nconst buffer = new ArrayBuffer(8);\n\nconst arr1 = new Uint16Array(buffer);\nconst arr2 = new Uint8Array(buffer);\n\n\narr2[7] = 1;\n\nconsole.log(arr1); // [0, 0, 0, 256]  这里每两位反转一下\nconsole.log(arr2); // [0, 0, 0, 0, 0, 0, 0, 1]\nconsole.log(buffer);\n```\n"
        },
        {
          "name": "deploy.sh",
          "type": "blob",
          "size": 0.5830078125,
          "content": "#!/usr/bin/env sh\n\n# 当发生错误时中止脚本\nset -e\n\n# 构建\nnpm run build\n\n# cd 到构建输出的目录下 \ncd .vuepress/dist\n\n# 部署到自定义域域名\n# echo 'www.example.com' > CNAME\n\ngit init\ngit add -A\ngit commit -m 'deploy'\n\n# 部署到 https://<USERNAME>.github.io\n# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master\n\n# 部署到 https://<USERNAME>.github.io/<REPO>\n# git push -f git@github.com:abc-club/js-paradise.git master:gh-pages\ncd ../../\n\ngit init\ngit add -A\ngit commit -m 'deploy'\ngit push\ngit subtree push --prefix .vuepress/dist origin gh-pages\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.95703125,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        .editor {\n            height: 100px;\n        }\n\n        .edit-panel {\n            position: relative;\n            width: 100%;\n            height: auto;\n            font-size: 14px;\n            line-height: 20px;\n            border: 1px solid;\n        }\n\n        .show-placeholder::before {\n            content: attr(placeholder);\n            position: absolute;\n            top: 4px;\n            left: 8px;\n            color: #555;\n            pointer-events: none;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"parent\">\n        <form>\n            <input type=\"text\">\n        </form>\n    </div>\n    <style>\n        .parent:hover input {\n            background: green;\n        }\n\n        .parent:hover form {\n            background: orange;\n        }\n    </style>\n</body>\n\n</html>"
        },
        {
          "name": "interview-prepare.md",
          "type": "blob",
          "size": 24.1298828125,
          "content": "## NODEJS\n\n- [nodejs 官网](https://nodejs.org/zh-cn)\n- [NodeJS 从入门到精通](https://www.bilibili.com/video/BV15W411J7Uz)\n  http https http2 的区别与实践\n\n### nodejs的特点\n\n单线程\n\n非阻塞IO\n\n事件驱动\n\n\n每个线程需要耗费大约2MB内存。也就是说，理论上，一个8GB内存的服务器可以同时连接的最大用户数为4000个左右。\n\n### 事件循环\n- [浏览器与Node的事件循环(Event Loop)有何区别?](https://juejin.im/post/5c337ae06fb9a049bc4cd218)\n- [剖析nodejs的事件循环](https://juejin.im/post/5af1413ef265da0b851cce80)\n### 模块\n\n需要复习一下模块\n\n#### module\n\n- [require() 源码解读](http://www.ruanyifeng.com/blog/2015/05/require.html)(nodejs 加载机制)\n\n#### CommonJS 中的 require/exports 和 ES6 中的 import/export 区别？\n\n```\n- CommonJS 模块的重要特性是加载时执行，即脚本代码在 require 的时候，就会全部执行。一旦出现某个模块被”循环加载”，就只输出已经执行的部分，还未执行的部分不会输出。\n- ES6 模块是动态引用，如果使用 import 从一个模块加载变量，那些变量不会被缓存，而是成为一个指向被加载模块的引用，需要开发者自己保证，真正取值的时候能够取到值。\n- import/export 最终都是编译为 require/exports 来执行的。\n- CommonJS 规范规定，每个模块内部，module 变量代表当前模块。这个变量是一个对象，它的 exports 属性（即 module.exports ）是对外的接口。加载某个模块，其实是加载该模块的 module.exports 属性。\n- export 命令规定的是对外的接口，必须与模块内部的变量建立一一对应关系。\n\n- CommonJS运行时加载\n  CommonJS 模块输出的是一个值的拷贝，\n\n- ES6编译时加载（或叫静态加载）\n  ES6 模块是动态引用 ES6 模块输出的是值的引用。\n  export命令规定的是对外的接口，必须与模块内部的变量建立一一对应关系。\n  import命令具有提升效果，会提升到整个模块的头部，首先执行。\n  如果多次重复执行同一句import语句，那么只会执行一次，而不会执行多次。\n\n```\n\n**export 如果后面跟的是会变量提升的 var/function,那么会变量提升**\n**module.exports/exports 不会变量提升**\n\n#### exports 与 module.exports 的区别\n\nnodejs 暴露模块需要用 module.exports，其实 exports = module.exports，当我们给 epxorts.a = xxx 时，其实就是在 module.exports 上加属性\n\n这就是为什么不能给 exports 赋值的原因，即赋值会改变 exports 的指向\n\nevent\n\nhttp/http2/https\nurl\nbuffer\nfs\npath\nquerystring\n\nconsole\ndebugger\nglobal\nprocess\nchild_process\nreadline\ncluster\n\n## npm\n- [package.json字段全解](https://www.cnblogs.com/liaojie970/p/7155903.html)\n- [package.json 中 你还不清楚的 browser，module，main 字段优先级](https://segmentfault.com/a/1190000019438150)\n\n\n### npm init\n\n```js\nnpm init egg --type=simple\n\n// 等价于\nnpx create-egg --type=simple\n```\n\n## koa\n\n- [koa 官网](https://demopark.github.io/koa-docs-Zh-CN/)\n- [node 进阶——之事无巨细手写 koa 源码](https://juejin.im/post/5ba48fc4e51d450e704277fa)\n- [傻傻分不清之 Cookie、Session、Token、JWT](https://juejin.im/post/5e055d9ef265da33997a42cc)\n- [koa+jwt 实现 token 验证与刷新](https://segmentfault.com/a/1190000019338195)\n\n## express\n\n- [expressjs 中文](https://www.expressjs.com.cn/)\n- [express 源码阅读（全）](https://segmentfault.com/a/1190000011090124)\n- [awesome-express](https://github.com/wabg/awesome-express)\n\n## egg\n\n### egg 周边\n\negg egg-init egg-bin egg-scripts\n\n- [eggjs](https://eggjs.org/zh-cn/intro/)\n\n## es6\n\ncallback promise generator async\n\n### string\n\n- [unicode 表](https://unicode-table.com/cn/#cyrillic)\n- [unicode 官网](https://home.unicode.org/)\n- [汉字对应表](http://www.chi2ko.com/tool/CJK.htm)\n\n```js\n\"z\" === \"z\"; // true\n\"\\172\" === \"z\"; // true 8进制\n\"\\x7A\" === \"z\"; // true 16进制\n\"\\u007A\" === \"z\"; // true utf-16编码\n\"\\u{7A}\" === \"z\"; // true utf-16编码\n```\n\n#### 为什么\"\\u{20BB7}\" === \"\\uD842\\uDFB7\" === \"𠮷\"\n\n简单讲就是 utf-16 编码转换\n\n- [字符编码笔记：ASCII，Unicode 和 UTF-8](http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html)\n- [字符编码的那些事](https://segmentfault.com/a/1190000009560472)\n- [一次性搞清字符编码](http://www.ccc5.cc/2517.html?cwtwns=wshh11)\n\n### Number\n\n由于 JavaScript 采用 IEEE 754 标准，数值存储为 64 位双精度格式，数值精度最多可以达到 53 个二进制位（1 个隐藏位与 52 个有效位）。\n范围： -Math.pow(2,53) ~ Math.pow(2,53) 不包括两个端点\n\n32 为的浮点数\n分为 3 部分：\n\n第一部分是符号位，用 s 表示，代表正负，要记住的是在浮点数的范围内，所有数字都是有符号的；\n第二部分是指数位，用 e 表示，代表指数，用 8 位 bit 表示的数字范围是 0~255，为了同时表示大数和小数，我们把 0~255 去掉头尾（0，255 后面会用到）的 1~254 去映射到-126~127，这样同时可以表示最大最小数字；\n第三部分是有效数位，用 f 表示，代表的是有效的数位；\n综合上述表示和科学计数法，我们的浮点数就可以表示为公式\n\n```js\n(-1)^s * 1.f * 2^e\n```\n\n- [二进制(原码、反码、补码)](https://www.cnblogs.com/fuhaots2009/p/3476502.html)\n- [你真的知道 0.1+0.2 为何不等于 0.3 吗？](https://juejin.im/post/5d6e74c35188254628237d5d)\n- [JS 的二进制操作](https://segmentfault.com/a/1190000018167547)\n\n### 函数\n\n#### 箭头函数有几个使用注意点。\n\n（1）函数体内的 this 对象，就是定义时所在的对象，而不是使用时所在的对象。\n\n（2）不可以当作构造函数，也就是说，不可以使用 new 命令，否则会抛出一个错误。\n\n（3）不可以使用 arguments 对象，该对象在函数体内不存在。如果要用，可以用 rest 参数代替。\n\n（4）不可以使用 yield 命令，因此箭头函数不能用作 Generator 函数。\n\n### array\n\nES5 对空位的处理，已经很不一致了，大多数情况下会忽略空位。\n\nforEach(), filter(), reduce(), every() 和 some()都会跳过空位。\nmap()会跳过空位，但会保留这个值\njoin()和 toString()会将空位视为 undefined，而 undefined 和 null 会被处理成空字符串。\n\nES6 则是明确将空位转为 undefined。\n\n```js\n[, \"a\", undefined, null].join(\"#\"); // \"#a##\"\n[, \"a\", undefined, null].toString(); // \",a,,\"\n```\n\n### Object\n\n#### Object.create\n\nObject.create 第二个参数是对象描述\n\n```js\nconst obj = Object.create({}, { p: { value: 42 } }); // p是不可枚举的\nObject.values(obj); // []\n```\n\n```js\nconst obj = Object.create(\n  {},\n  {\n    p: {\n      value: 42,\n      enumerable: true,\n    },\n  }\n);\nObject.values(obj); // [42]\n```\n\n#### 对象与数组的遍历\n\n- [javaScript 遍历对象、数组总结](https://www.cnblogs.com/chenyablog/p/6477866.html)\n  对象的属性分为三种： 是否是自身属性 是否可以枚举 是否是 Symbol 属性\n  注意：对象没有 for...of...\n\n对象的扩展运算符（...）用于取出参数对象`自身`的所有`可遍历`属性，拷贝到当前对象之中。\n\n举个栗子\n\n```js\nvar a = { a: 1 };\nObject.defineProperty(a, \"aa\", {\n  value: 3,\n});\nvar b = { b: 2 };\nb.__proto__ = a;\n\nObject.defineProperty(b, \"c\", {\n  value: 3,\n});\nb[Symbol()] = 4;\n\nObject.keys(b); // [\"b\"]  返回一个数组,包括对象自身的(不含继承的)所有可枚举属性(不含Symbol属性).\n\nfor (var i in b) {\n  console.log(i, \":\", b[i]);\n} // b : 2 a : 1   循环遍历对象自身的和继承的可枚举属性(不含Symbol属性)\n\nObject.getOwnPropertyNames(obj); // [\"b\", \"c\"] 返回一个数组,包含对象自身的所有属性(不含Symbol属性,但是包括不可枚举属性).\nReflect.ownKeys(b); // [\"b\", \"c\", Symbol()] 返回一个数组,包含对象自身的所有属性,不管属性名是Symbol或字符串,也不管是否可枚举.\n\nvar c = { ...b }; // {b: 2, Symbol(): 4}\n```\n\n### Promise\n- [Promise 源码详解](https://juejin.im/post/5b32f552f265da59991155f0)\n- [捕获未处理的 Promise 错误方法](https://www.jb51.net/article/125664.htm)\n- [JavaScript 引擎是如何工作的？从调用栈到 Promise 你需要知道的一切](https://segmentfault.com/a/1190000019205065)\n* [面试精选之Promise](https://juejin.im/post/5b31a4b7f265da595725f322)\n* [面试官眼中的Promise](https://juejin.im/post/5c233a8ee51d450d5a01b712)\n- [Promise 必知必会（十道题）](https://juejin.im/post/5a04066351882517c416715d)\n- [你能手写一个Promise吗？Yes I promise。](https://juejin.im/post/5c41297cf265da613356d4ec)\n- [Promise之你看得懂的Promise](https://juejin.im/post/5b32f552f265da59991155f0)\n\n ### async/await\n* [async/await 原理及执行顺序分析](https://juejin.im/post/5dc28ea66fb9a04a881d1ac0)\n- [【译】JavaScript 的工作原理：事件循环及异步编程的出现和 5 种更好的 async/await 编程方式](https://juejin.im/post/5c32b971f265da61407f1057)\n\nasync继发与并发\n\n```js\n// 继发\nlet foo = await getFoo();\nlet bar = await getBar();\n\n\n// 并发\n// 写法一\nlet [foo, bar] = await Promise.all([getFoo(), getBar()]);\n\n// 写法二\nlet fooPromise = getFoo();\nlet barPromise = getBar();\nlet foo = await fooPromise;\nlet bar = await barPromise;\n```\n\n```js\n\n// 继发\n// 方法一\nasync function dbFuc(db) { //这里不需要 async\n  let docs = [{}, {}, {}];\n\n  for (let doc of docs) {\n    await db.post(doc);\n  }\n}\n\n// 方法二\nasync function dbFuc(db) {\n  let docs = [{}, {}, {}];\n\n  await docs.reduce(async (_, doc) => {\n    await _;\n    await db.post(doc);\n  }, undefined);\n}\n\n// 并发\nfunction dbFuc(db) { //这里不需要 async\n  let docs = [{}, {}, {}];\n\n  // 可能得到错误结果\n  docs.forEach(async function (doc) {\n    await db.post(doc);\n  });\n}\n\nasync function dbFuc(db) {\n  let docs = [{}, {}, {}];\n  let promises = docs.map((doc) => db.post(doc));\n\n  let results = await Promise.all(promises);\n  console.log(results);\n}\n\n// 或者使用下面的写法\n\nasync function dbFuc(db) {\n  let docs = [{}, {}, {}];\n  let promises = docs.map((doc) => db.post(doc));\n\n  let results = [];\n  for (let promise of promises) {\n    results.push(await promise);\n  }\n  console.log(results);\n}\n```\n\n\n\n### class\n#### super\n\n`super`指向当前对象的原型对象\n\n注意，super 关键字表示原型对象时，只能用在对象的方法之中，用在其他地方都会报错。\n目前，只有对象方法的简写法可以让 JavaScript 引擎确认，定义的是对象的方法。\n\n```js\n// 报错\nconst obj = {\n  foo: super.foo,\n};\n\n// 报错\nconst obj = {\n  find: () => super.foo,\n};\n\n// 报错\nconst obj = {\n  find: function() {\n    return super.foo;\n  },\n};\n// 正确\nconst obj = {\n  foo: \"world\",\n  find() {\n    return super.foo;\n  },\n};\n```\n\n#### 扩展运算符的解构赋值，不能复制继承自原型对象的属性\n\n```js\nconst o = Object.create({ x: 1, y: 2 });\no.z = 3;\n\nlet { x, ...newObj } = o;\nlet { y, z } = newObj;\nx; // 1\ny; // undefined\nz; // 3\n```\n\n#### 注意，简写的对象方法不能用作构造函数，会报错。\n\n```js\nconst obj = {\n  f() {\n    this.foo = \"bar\";\n  },\n};\n\nnew obj.f(); // 报错\n```\n\n#### 如果对象的方法使用了取值函数（getter）和存值函数（setter），则 name 属性不是在该方法上面，而是该方法的属性的描述对象的 get 和 set 属性上面，返回值是方法名前加上 get 和 set。\n\n```js\nconst obj = {\n  get foo() {},\n  set foo(x) {},\n};\n\nobj.foo.name;\n// TypeError: Cannot read property 'name' of undefined\n\nconst descriptor = Object.getOwnPropertyDescriptor(obj, \"foo\");\n\ndescriptor.get.name; // \"get foo\"\ndescriptor.set.name; // \"set foo\"\n```\n\n#### 函数的 name 属性\n\n```js\nnew Function().name; // \"anonymous\"\n\nvar doSomething = function() {\n  // ...\n};\ndoSomething.name; // \"doSomething\"\ndoSomething.bind().name; // \"bound doSomething\"\n\nconst key1 = Symbol(\"description\");\nconst key2 = Symbol();\nlet obj = {\n  [key1]() {},\n  [key2]() {},\n};\nobj[key1].name; // \"[description]\"\nobj[key2].name; // \"\"\n```\n\n#### Object.assign\n\n- 可以用来处理数组，但是会把数组视为对象\n  Object.assign([1, 2, 3], [4, 5]) // [4, 5, 3]\n\n- 取值函数的处理\n\n```js\nconst source = {\n  get foo() {\n    return 1;\n  },\n};\nconst target = {};\n\nObject.assign(target, source);\n// { foo: 1 }\n```\n\n### export\n\n`export *`命令会忽略模块的 default 方法\n\n```js\nexport var a = 1;\n// 或者\nvar a = 1;\nexport { a };\n```\n\n```js\nexport defalut 1\n\n```\n\n```js\n// modules.js\nfunction add(x, y) {\n  return x * y;\n}\nexport { add as default };\n// 等同于\n// export default add;\n\n// app.js\nimport { default as foo } from \"modules\";\n// 等同于\n// import foo from 'modules';\n```\n\n#### super\n\n* super的指向以及super中this的指向问题\n```\nsuper可以作为函数和对象使用\n作为函数时指向父类的构造函数，只能在构造函数中使用\n作为对象时，在普通方法中指向父类原型对象，在静态方法中指向父类\nsuper调用的方法中this指向，普通方法中this指向自身实例，静态方法中指向自身类\n\n```\n\nsuper在普通方法中等于this\n\n易错题\n\n```js\nclass A {\n  constructor() {\n    this.x = 1;\n  }\n}\n\nclass B extends A {\n  constructor() {\n    super();\n    this.x = 2;\n    super.x = 3; // super等于this\n    console.log(super.x); // undefined\n    console.log(this.x); // 3\n  }\n}\n\nlet b = new B();\n```\n\n## babel\n\n**注意 babel 只转换新的句法（语法），不会转换新的 API，比如 Iterator、Generator、Set、Map、Proxy、Reflect、Symbol、Promise 等全局对象，以及一些定义在全局对象上的方法（比如 Object.assign）都不会转码。**\n\n- [caniuse](https://caniuse.com/#feat=es5)\n- [browserlist](https://browserl.ist/)(查看浏览器市场占比)\n- [kangax](https://kangax.github.io/compat-table/es6/)(查看 es6 支持情况)\n\n## typescript\n\n- [TypeScript 完全解读-26 课时](https://www.bilibili.com/video/BV12a4y1v7j9)\n- [as const](http://www.fly63.com/article/detial/3399)\n-  [unkonwn和any的区别](https://cloud.tencent.com/developer/article/1591256)\n\n## JS\n\n- [都 2020 了，还不懂 js 运算符优先级？](https://juejin.im/post/5e1eecf75188254dc022beea)\n- [「前端进阶」从多线程到 Event Loop 全面梳理](https://juejin.im/post/5d5b4c2df265da03dd3d73e5)(宏任务微任务 cup 进程线程)\n\n### performance\n\n#### performance.timing\n\nhttps://developer.mozilla.org/zh-CN/docs/Web/API/PerformanceTiming\n- [前端性能监控：window.performance](https://www.cnblogs.com/libin-1/p/6501951.html)\n\n\n### Object.defineProperty\n\n先看 configurable，再看 writable\nconfigurable 为 false 表示不能修改属性描述符，不能删除属性\nconfigurable 和 writable 同时为 fasle 时，不可以修改任何描述符\nconfigurable 为 false 时，只可以修改 writable\n\n扩展：\n\n严格模式下 o.a 会报错\n\nObject.isExtensible()\nObject.seal() // 方法封闭一个对象，阻止添加新属性并将所有现有属性标记为不可配置。当前属性的值只要原来是可写的就可以改变。\nObject.isSealed()\nObject.freeze() // 方法可以冻结一个对象。一个被冻结的对象再也不能被修改；冻结了一个对象则不能向这个对象添加新的属性，不能删除已有属性，不能修改该对象已有属性的可枚举性、可配置性、可写性，以及不能修改已有属性的值。此外，冻结一个对象后该对象的原型也不能被修改。freeze() 返回和传入的参数相同的对象。\nObject.isFrozen()\nObject.preventExtensions() // 方法让一个对象变的不可扩展，也就是永远不能再添加新的属性。\n\n### 正则\n- [面试题之正则表达式解析一个完整的url](https://juejin.im/post/5aab72fd518825188038af9b)\n- [【收藏】常用JavaScript正则表达式汇编与示例](https://juejin.im/post/5cc2c1a3e51d456e31164a3c)\n- [[JS]正则精简教程](https://juejin.im/post/5e1d26dae51d4501fb53546b)\n- [2019 年 JS 正则大全(常用)](https://juejin.im/post/5d245d4151882555300feb77)\n\n\n\n## vue\n\nvue vue-router vuex vue-ssr nuxt\n实现自己的 vue2 vue3\n\n// TODO:vue-cli\n\n- [Vue 兼容 ie9 的全面解决方案](https://juejin.im/post/5b2868b46fb9a00e6f65f87e)\n\n### vue面试题\n* 描述下diff算法\n\n\n### Vue 是如何监控到子组件修改了props属性并给出警告的\n\n\n## vue3\n\n\n## react\n\n实现一个 react\n- [你要的 React 面试知识点，都在这了](https://juejin.im/post/5cf0733de51d4510803ce34e)\n- [你真的了解 React 生命周期吗](https://juejin.im/post/5df648836fb9a016526eba01)\n- [React 源码解析](https://github.com/KieSun/react-interpretation)\n- [redux](https://www.redux.org.cn/)\n- [react-router](https://reacttraining.com/react-router/)\n\n\n## webpack\n\n- [Webpack4+Babel7+ES6 兼容 IE8](https://juejin.im/post/5cabf7b0e51d456e8b07dd04)\n- [minipack](https://github.com/ronami/minipack)(最小打包器)\n\n\n## 优化\n\n- 域名预解析\n\n  <meta http-equiv=\"x-dns-prefetch-control\" content=\"on\">\n  <link rel=\"dns-prefetch\" href=\"//www.zhix.net\">\n\n- 域名分散处理， 突破浏览器对单个域名的最大并发连接数\n  分散到 img0.guoweiwei.com/img1.guoweiwei.com/img2.guoweiwei.com/…等不同域名\n\n\n## 浏览器\n\n### 缓存\n- [一文读懂前端缓存](https://juejin.im/post/5c22ee806fb9a049fb43b2c5)\n- [浏览器缓存策略](https://www.jianshu.com/p/5b8d61afe52d)(注意有个启发式缓存的过程)\n- [web性能优化之：no-cache与must-revalidate深入探究](https://zhuanlan.zhihu.com/p/23281814)\n\n### prefetch preload\nprefetch(预取)：将来某些导航下可能需要的资源\npreload(预加载)：当前导航下可能需要资源\n\n与 prefetch 指令相比，preload 指令有许多不同之处：\n\npreload chunk 会在父 chunk 加载时，以并行方式开始加载。prefetch chunk 会在父 chunk 加载结束后开始加载。\npreload chunk 具有中等优先级，并立即下载。prefetch chunk 在浏览器闲置时下载。\npreload chunk 会在父 chunk 中立即请求，用于当下时刻。prefetch chunk 会用于未来的某个时刻。\n浏览器支持程度不同。\n\n### 网络\n- [一文看懂CDN加速原理](https://blog.csdn.net/xiangzhihong8/article/details/83147542)\n\n\n## css\n\n### BFC\n  什么是BFC？BFC的好处是什么？ 如何创建BFC?\n\n- [史上最全面、最透彻的 BFC 原理剖析](https://github.com/zuopf769/notebook/blob/master/fe/BFC%E5%8E%9F%E7%90%86%E5%89%96%E6%9E%90/README.md)\n- [学习 BFC (Block Formatting Context)](https://juejin.im/post/59b73d5bf265da064618731d)\n\n### 百分比\n\n- [css 中的百分比](https://zhuanlan.zhihu.com/p/93084661)\n\n### display: none 和visibility: hidden 和opacity: 0的区别\n\ndisplay: none;\nDOM 结构：浏览器不会渲染 display 属性为 none 的元素，不占据空间；\n事件监听：无法进行 DOM 事件监听；\n性能：动态改变此属性时会引起重排，性能较差；\n继承：不会被子元素继承，毕竟子类也不会被渲染；\ntransition：transition 不支持 display。\n\nvisibility: hidden;\nDOM 结构：元素被隐藏，但是会被渲染不会消失，占据空间；\n事件监听：无法进行 DOM 事件监听；\n性 能：动态改变此属性时会引起重绘，性能较高；\n继 承：会被子元素继承，子元素可以通过设置 visibility: visible; 来取消隐藏；\ntransition：transition 不支持 visibility\n\nopacity: 0;\nDOM 结构：透明度为 100%，元素隐藏，占据空间；\n事件监听：可以进行 DOM 事件监听；\n性 能：提升为合成层，不会触发重绘，性能较高；\n继 承：会被子元素继承,且，子元素并不能通过 opacity: 1 来取消隐藏；\ntransition：transition 支持 opacity。\n\n### flex grid布局\n- [flex 布局](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)\n- [grid 布局](http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html)\n\n\n### 水平垂直居中\n- [css 实现垂直水平居中] https://juejin.im/post/5854e137128fe100698e6271 https://demo.cssworld.cn/5/3-10.php\n\n### 选择器\nhttps://www.runoob.com/cssref/css-selectors.html\n\n- [css选择器有哪些，选择器的权重的优先级](https://www.cnblogs.com/wuwangxiaochou/p/10856655.html)\n\n\n## 算法\n- [前端该如何准备数据结构和算法？](https://juejin.im/post/5d5b307b5188253da24d3cd1)\n\n\n\n## 手写\n\n\n## 项目\n- [前端大文件上传](https://juejin.im/post/5cf765275188257c6b51775f)\n\n## hr面\n\n- [面试被问感情状况，怎样回答最加分？](https://zhuanlan.zhihu.com/p/75932700)\n  先找到一份满意的工作，让自己经济独立才是最为重要。\n\n\n## 面试题\n\n### 如何做好seo\n站内优化\n1. 内容优化，我们的网站是博客？落地页？论坛社区？\n2. 关键词优化\n3. 标题\n4. Meta信息号称TKD元描述，就是Title/Description/Keyword  如何查看一个网站的Meta信息？最方便的就是安装Chrome的一个插件：meta seo inspector\n5. 导航一般是面包屑导航\n6. 内链优化的有助于我们给站内不同的页面导流，传递页面权重\n7. 图片最好加ALT标签\n8. 标签嵌套层次不能太深\n\n\n技术性优化\n1. 加载速度\n2. 移动适配 Google搜索的63％来自移动设备\n3. 重复内容检测 网站的重复内容过多，会让Google认为该站的质量很低，从而降低网站的评分\n4. 不要让网站出现大量404页面\n5. 重定向，不要删除之前的\n6. sitemap.xml\n7. robots.txt\n\n\n站外优化\n1. 友情链接\n2. 社区推广\n3. 社交网站\n4. 掏钱买\n\n怎么优化\n通过谷歌分析，看跳出率来定位问题\n\n\n### 线上出现一个bug 怎么定位\n\n首先我们会有一个前端监控系统，通过这个系统我们可以看到用户的行为轨迹，可以还原一个用户现场，\n其次我们会看看测试同学有没有线索，能不能还原现场，\n无法还原现场的，我们会通过调试代码的方式，进行一个排查\n\n常见的错误：\n用户的数据缓存问题\n脚本的版本问题\n用户的数据比较特殊，比如确实某个字段，\n没有进行一个容错，\n\n\n### 怎么优化webpack打包速度\n通用\n1. 提升webpack的版本\n2. 并行打包\n3. loader里面设置include\\exclude\n4. 每个额外的 loader/plugin 都有启动时间。尽量少使用不同的工具。\n5. 尽量少用resolve\n6. 使用 cache-loader 启用持久化缓存\n\n开发环境\n1. 在内存中编译，用webpack-dev-server\n2. 增量编译，开启hot\n3. Devtool 设置source-map\n4. 避免在生产环境下才会用到的工具, 如压缩代码\n\n生产环境\n1. 多个编译时 parallel-webpack\n2. Source maps\n\n### 怎么配置webpack\n\n\n### 怎么优化网站\n1. 首屏优化\n2. 内存优化\n3. \n\n### 怎么优化首屏加载速度\n1. 应用骨架屏\n2. 对代码进行分包\n3. 如果是多图片的话 进行图片懒加载\n4. 如果有很多小图标的话 就利用雪碧图\n5. 懒加载 可以按路由进行加载\n6. dns prefetch\n7. async defer\n8. preload prefetch\n9. ssr\n\n\n### 怎么带人的\n1. 管理就是通过下属实现经营者的目标，管理只不能简单复述领导层的话，需要加上自己的理解，并变成可以执行的任务，分配给下属\n2. 主要分为业务管理、员工管理\n3. 管理团队要有一个好的、透明的晋升机制，做的好的就需要奖励，做的不好也要严厉批评\n4. 要根据下属的性格（ffs测试）、意愿、能力等综合分析，把对的人安排到对的位置上，这样才能实现1+1>2的效果\n5. 要适度的区分指示和人文关怀\n6. 面试候选人或者提拔下属，需要选择跟公司价值观一致的候选人\n7. 遇到问题，需要保护好自己的下属，自己来担责，这样下属才会有冲劲\n8. 使用目标管理，让团队成员理解目标，并需告知目标是一定要完成的\n9. 作为管理者，一定要比下属看得远，需要指引下属往对的方向发展\n10. 业务管理，分配任务，并告知详细执行，然后中间主动询问进度等，也可让下属自己汇报\n11. 让下属自己汇报自己的成绩，保证公平公正\n\n### 公司的开发流程\n\n\n### 怎么避免组员写垃圾代码\n1. eslint 代码规范\n2. code review(这里介绍公司的四个环境)\n\n\n### 火焰图调试网站性能\n\n顶部有平台的一般都有性能问题\n\n### 项目场景\n\n#### 让你来设计一个瀑布流图片展示，你需要考虑哪些\n- [蘑菇街PC首页瀑布流实践](https://juejin.im/post/5e05acf0f265da33d158a1b1)\n\n#### 无尽列表加载\n\n\n#### 大文件上传\n\n\n"
        },
        {
          "name": "java.md",
          "type": "blob",
          "size": 1.1826171875,
          "content": "ssh 通常使用 Struts2 为控制器(controller) ，spring 为事务层(service)， hibernate 负责持久层（dao）\nssm 通常使用 springMVC 为控制器(controller) ，spring 为事务层(service)， MyBatis 负责持久层（dao）\n\n### 项目启动\n\njava play2 项目启动\n\nidea 打开 sbt 文件，选择 jdk1.8,不下载源码（会链接到内网，下载依赖）,然后配置启动项 play2 app，play2 module 选当前项目,点击运行。\n\nigola 技术选型：play2+ lagom +模板引擎 Twirl\n\n## intellij idea\n\n- [插件](https://plugins.jetbrains.com/)\n\n## 周边\n\n- [marathon](https://github.com/mesosphere/marathon)\n- 包管理 maven gradle sbt https://blog.csdn.net/xyhshen/article/details/86656370\n- https://github.com/akka/akka Akka 是 JAVA 虚拟机平台上构建高并发、分布式和容错应用的工具包和运行时\n- https://www.cloudera.com/\n\n## 资料\n\n- [武林外传—一灯大师与众弟子漫谈 Api 网关选型](https://mp.weixin.qq.com/s/jlfCFsItlfdplqEK9yMpng)\n- [微服务之总体架构篇](https://www.cnblogs.com/tlj2018/articles/10455552.html)\n\n## 依赖注入\n\n- [Google Guice 一个轻量级的依赖注入框架](https://www.jianshu.com/p/7fba7b43146a)\n"
        },
        {
          "name": "learn.md",
          "type": "blob",
          "size": 0.87109375,
          "content": "\n# 学习网站\n- [中国大学MOOC](https://www.icourse163.org/channel/3002.htm)\n- []()\n\n\n# 书\n\n## 合集\n- [free-programming-books-zh](https://github.com/EbookFoundation/free-programming-books/blob/master/books/free-programming-books-zh.md)\n- [程序员的书籍资源](https://zhuanlan.zhihu.com/p/23857699)\n- [不同领域的圣经级书籍有哪些？](https://www.zhihu.com/question/28438145)\n- [经典编程书籍大全](https://github.com/jobbole/awesome-programming-books)\n- [免费的编程中文书籍索引](https://github.com/justjavac/free-programming-books-zh_CN)\n\n## 计算机\n- [真·程序员必修书单](https://juejin.cn/post/6844904048831758350)\n- []()\n\n\n## 前端\n- [新时代下前端工程师的推荐书籍和必备知识](https://juejin.cn/post/6844903781897863176)\n- [2021前端学习路径书单—自我成长之路](https://juejin.cn/post/6930419481835470861)\n"
        },
        {
          "name": "mynote.md",
          "type": "blob",
          "size": 0.0380859375,
          "content": "## webpack\n\n学习路径： 指南-》\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.6357421875,
          "content": "{\n  \"name\": \"js-paradise\",\n  \"version\": \"1.0.0\",\n  \"description\": \"<h1 align=\\\"center\\\">资源汇总</h1>\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"dev\": \"vuepress dev .\",\n    \"build\": \"vuepress build .\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/abc-club/js-paradise.git\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/abc-club/js-paradise/issues\"\n  },\n  \"homepage\": \"https://github.com/abc-club/js-paradise#readme\",\n  \"devDependencies\": {\n    \"@vuepress/plugin-google-analytics\": \"^1.4.0\",\n    \"copy-webpack-plugin\": \"^5.1.1\",\n    \"vuepress\": \"^1.3.0\"\n  }\n}\n"
        },
        {
          "name": "punchline.md",
          "type": "blob",
          "size": 0.119140625,
          "content": "> 本文收纳一些punchline，以备后面查阅\n\n* [esbuild](https://github.com/evanw/esbuild)(js打包比webpack快)\n\n"
        },
        {
          "name": "sourcecode",
          "type": "tree",
          "content": null
        },
        {
          "name": "template",
          "type": "blob",
          "size": 0.1162109375,
          "content": "<details>\n<summary>答案</summary>\n\n```\n\n```\n\n</details>\n\n\n字符|描述\n:---:|:---:\n[0-9]|\t匹配 0-9 之间的数字"
        }
      ]
    }
  ]
}