{
  "metadata": {
    "timestamp": 1736711574872,
    "page": 130,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vitorfs/bootcamp",
      "stars": 2296,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0322265625,
          "content": ".*\n!.coveragerc\n!.env\n!.pylintrc\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.958984375,
          "content": "# PostgreSQL conf\nPOSTGRES_HOST=postgres\nPOSTGRES_PORT=5432\nPOSTGRES_PASSWORD=mysecretpass\nPOSTGRES_USER=bootcamp_usr\nPOSTGRES_DB=bootcamp\nDATABASE_URL=postgresql://postgres@127.0.0.1:5432/bootcamp\n# Full PostgreSQL URL example\n# DATABASE_URL=postgresql://bootcamp_usr:mysecretpass@127.0.0.1:5432/bootcamp\n# CONN_MAX_AGE=\n# To uncomment for an SQLite local testing\n# DATABASE_URL=sqlite:///db.sqlite3\n\n# Domain name, used by caddy\n# DOMAIN_NAME=http://trybootcamp.vitorfs.com\n\n# General settings\nREAD_DOT_ENV_FILE=True\nADMIN_URL=\nSETTINGS_MODULE=config.settings.test\nSECRET_KEY=Sup3rS3cr3tP@22word\nDEBUG=True\nALLOWED_HOSTS=*\nACCOUNT_ALLOW_REGISTRATION=True\n\n# AWS Settings\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_STORAGE_BUCKET_NAME=\n\n# Used with email\nMAILGUN_API_KEY=\nSERVER_EMAIL=\nMAILGUN_SENDER_DOMAIN=\n\n# Security! Better to use DNS for this task, but you can use redirect\nSECURE_SSL_REDIRECT=False\n\n# Sentry\nSENTRY_DSN=\n\n# URL for Redis\nREDIS_URL=redis://127.0.0.1:6379\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6708984375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbin/\nbuild/\ndevelop-eggs/\ndist/\neggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n.vscode/\n*.egg-info/\n.installed.cfg\n*.egg\n.idea\n*.sublime-project\n*.sublime-workspace\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.pytest_cache/\n.tox/\n.coverage\n.cache\nnosetests.xml\ncoverage.xml\n\n# Translations\n*.mo\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\n\n# Rope\n.ropeproject\n\n# Django stuff:\n*.log\n*.pot\n\n# Sphinx documentation\ndocs/_build/\n\n.DS_Store\n*.sqlite3\nmedia/\nnode_modules/\n\n.env\n\nvenv_bootcamp/\nstaticfiles\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.568359375,
          "content": "language: python\npython:\n  - \"3.6\"\n  - \"3.7\"\nenv:\n  - DJANGO_VERSION=2.2.9\n  - DJANGO_VERSION=3.0.3\nbranches:\n  only:\n    - master\n# Start services.\nservices:\n  - redis-server\n  - postgresql\n# command to install dependencies\ninstall:\n  - pip install -q Django==$DJANGO_VERSION\n  - pip install -r requirements/local.txt\n  - pip install coveralls\nbefore_script:\n  - psql -c \"CREATE DATABASE bootcamp;\" -U postgres\n  - cp .env.example .env\n  - python manage.py migrate\n  - python manage.py collectstatic --noinput\n# command to run tests\nscript:\n  - pytest\nafter_success:\n  - coveralls\n"
        },
        {
          "name": "CODE_OF_CONDUCT.rst",
          "type": "blob",
          "size": 3.416015625,
          "content": "\n    # with overline, for parts\n    * with overline, for chapters\n    =, for sections\n    -, for subsections\n    ^, for subsubsections\n    â€œ, for paragraphs\n\n#####################################\nContributor Covenant Code of Conduct\n#####################################\n\n***********\nOur Pledge\n***********\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\nOur Standards\n==============\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\nOur Responsibilities\n=====================\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\nScope\n======\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\nEnforcement\n============\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at vitor@freitas.com or at sebaslander@gmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\nAttribution\n============\n\nThis Code of Conduct is adapted from the `Contributor Covenant`_ homepage, version 1.4_\n\n.. _`Contributor Covenant`: http://contributor-covenant.org\n.. _1.4: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 4.220703125,
          "content": "#############################\nContributing to this project\n#############################\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n***********************\nTypes of Contributions\n***********************\n\n=====================\nPull Request Process\n=====================\n\nIf you wish to make suggestions to this project's code, please keep this few considerations in mind before pushing your **Pull Requests**:\n\n* Ensure any install or build dependencies are removed before the end of the layer when doing a build.\n* Update the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters.\n* This project code is a work in progress, so there is always room for improvement, but there is no need to impoverish the code base quality; have that in mind when submitting your suggestions and **Pull Requests**.\n* Until a better release cycle is implemented,the branch **master** is the most recent, most stable code base.\n* Always push your **PR** to *develop* branch, any other will not be considered, and giving the case is easy to do, we guess there will be no difficulties with that.\n* Any code submitted should have it's own UnitTest added inside the same code structure the project has right now.\n* This projects uses PyTest, Coverage, Flake8 and PyLint for testing and static analysis, install them and use them for your development process.\n* Before submitting code to the project, run PyTest on the code base, just type `pytest` to run the UnitTest on the code, is your responsibility to guarantee all the test pass and at least to keep the same coverage level previous to your changes.\n* PyTest runs Coverage at the end of the process, and throws a brief report, simpler than the traditional one called with `coverage report -m`, which you also are still able to run if there is need for a more detailed version.\n* Before submitting code to the project, run Flake8 and PyLint (which we are still tuning so beware of false alarms there, if you detect them, feel free to fix it through your **PR**), look at the reports and fix those lines where there is need to.\n* Try your best to validate your signature on GitHub, that way your commits will be signed and validated by the platform.\n\n============\nReport Bugs\n============\n\nReport bugs at the issues section of `this project`_.\n\nIf you find a bug, try your best to provide the necessary information to replicate the resulting error, the expected result and the actual one, if there is additional information you think will be useful, please add it, please include at least:\n\n* Your operating system name and version.\n* Any details about your local setup that might be helpful in troubleshooting.\n* Detailed steps to reproduce the bug.\n\n.. _`this project`: https://github.com/vitorfs/bootcamp/issues\n\n===================\nFix Bugs\n===================\n\nLook through the GitHub issues for bugs. Anything tagged with \"bug\" is open to whoever wants to implement it.\n\n===================\nImplement Features\n===================\n\nLook through the GitHub issues for features. Anything tagged with \"feature\" is open to whoever wants to implement it.\n\n===================\nWrite Documentation\n===================\n\nBootcamp could always use more documentation, whether as part of the official docs, in docstrings, or even on the web in blog posts, articles, and such.\n\n===================\nSubmit Feedback\n===================\n\nThe best way to send feedback is to file an issue at the issues section of `this project`_.\n\nIf you are proposing a feature:\n\n* Explain in detail how it would work.\n* Keep the scope as narrow as possible, to make it easier to implement.\n* Remember that this is a volunteer-driven project, and that contributions are welcome :)\n\n.. _`this project`: https://github.com/vitorfs/bootcamp/issues\n\n===================\nIssues and support\n===================\n\nWe will try our best to provide help and orientation with this project implementation, but keep in mind than this is done in our spare time, and that has a lot of implications, please, be patient.\n"
        },
        {
          "name": "CONTRIBUTORS.txt",
          "type": "blob",
          "size": 0.283203125,
          "content": "Vitor Freitas - vitor@freitas.com\nSebastian Reyes - sebaslander@gmail.com\nSurajKamble\nWUJISHANXIA\nchetanya-shrimali\nDylanGuedes\nralphite\nigr-santos\nfabianogoes\nKatherineMichel\npaulovictor\nrthel\narpit1997\nAgricultures\nyashLadha\nNazarTkachuk\nThalmann\nDmitri-Sintsov\nlomatus\nshabinesh\nrmasoni\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "\nThe MIT License (MIT)\nCopyright (c) 2018, Vitor Freitas\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "Procfile",
          "type": "blob",
          "size": 0.0537109375,
          "content": "web: daphne -b 0.0.0.0 -p 8000 config.asgi:application\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.2470703125,
          "content": "Bootcamp\n========\n\nAn enterprise oriented social network\n\n.. image:: https://travis-ci.org/vitorfs/bootcamp.svg?branch=master\n    :target: https://travis-ci.org/vitorfs/bootcamp\n    :alt: TravisCI Status\n\n.. image:: https://coveralls.io/repos/github/vitorfs/bootcamp/badge.svg?branch=master\n    :target: https://coveralls.io/github/vitorfs/bootcamp?branch=master\n    :alt: Coverage\n\n.. image:: https://requires.io/github/vitorfs/bootcamp/requirements.svg?branch=master\n    :target: https://requires.io/github/vitorfs/bootcamp/requirements/?branch=master\n    :alt: Requirements\n\n.. image:: https://img.shields.io/badge/built%20with-Cookiecutter%20Django-ff69b4.svg\n    :target: https://github.com/pydanny/cookiecutter-django/\n    :alt: Built with Cookiecutter Django\n\n:License: MIT\n\nBootcamp is an open source **enterprise social network** of open purpose, on which you can build for your own ends.\n\nThe project has four basic apps:\n\n* News (A Twitter-like microblog)\n* Articles (A collaborative blog)\n* Question & Answers (A Stack Overflow-like platform)\n* Messenger (A basic chat-a-like tool for asynchronous communication.)\n\nTechnology Stack\n----------------\n\n* Python_ 3.6.x / 3.7.x\n* `Django Web Framework`_ 2.2.x\n* PostgreSQL_\n* `Redis 5.0`_\n* Daphne_\n* Caddy_\n* Docker_\n* docker-compose_\n* WhiteNoise_\n* `Twitter Bootstrap 4`_\n* `jQuery 3`_\n* Django-channels_ (for WebSockets)\n* Sentry_\n* Mailgun_\n* Cookiecutter_\n\n.. _Python: https://www.python.org/\n.. _`Django Web Framework`: https://www.djangoproject.com/\n.. _PostgreSQL: https://www.postgresql.org/\n.. _`Redis 5.0`: https://redis.io/documentation\n.. _Daphne: https://github.com/django/daphne/\n.. _Caddy: https://caddyserver.com/docs\n.. _Docker: https://docs.docker.com/\n.. _docker-compose: https://docs.docker.com/compose/\n.. _WhiteNoise: http://whitenoise.evans.io/en/stable/\n.. _`Twitter Bootstrap 4`: https://getbootstrap.com/docs/4.0/getting-started/introduction/\n.. _`jQuery 3`: https://api.jquery.com/\n.. _Django-channels: https://channels.readthedocs.io/en/latest/\n.. _Sentry: https://docs.sentry.io/\n.. _Mailgun: https://www.mailgun.com/\n.. _Cookiecutter: http://cookiecutter-django.readthedocs.io/en/latest/index.html\n\nBasic Commands\n--------------\n\nTest coverage\n^^^^^^^^^^^^^\n\nTo run the tests, check your test coverage, and generate a simplified coverage report::\n\n    $ pytest\n\nTo generate an HTML report::\n\n    $ coverage html\n    $ open htmlcov/index.html\n\nTo check the report in console::\n\n    $ coverage report -m\n\nSentry\n^^^^^^\n\nSentry is an error logging aggregator service. You can `sign up`_ for a free account  or download and host it yourself.\nThe system is setup with reasonable defaults, including 404 logging and integration with the WSGI application.\n\n.. _`sign up`: https://sentry.io/signup/?code=cookiecutter\n\nYou must set the DSN url in production.\n\n\nDeployment\n----------\n\nThe following details how to deploy this application.\n\n\nHeroku\n^^^^^^\n\nSee detailed `cookiecutter-django Heroku documentation`_.\n\n.. _`cookiecutter-django Heroku documentation`: http://cookiecutter-django.readthedocs.io/en/latest/deployment-on-heroku.html\n\n\nDocker\n^^^^^^\n\nSee detailed `cookiecutter-django Docker documentation`_.\n\n.. _`cookiecutter-django Docker documentation`: http://cookiecutter-django.readthedocs.io/en/latest/deployment-with-docker.html\n"
        },
        {
          "name": "bootcamp",
          "type": "tree",
          "content": null
        },
        {
          "name": "compose",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev.yml",
          "type": "blob",
          "size": 0.2626953125,
          "content": "version: '2'\n\nvolumes:\n  postgres_data: {}\n\nservices:\n\n  postgres:\n    image: postgres:11-alpine\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    env_file: .env\n    ports:\n      - '5432:5432'\n\n  redis:\n    image: redis:5.0\n    ports:\n      - '6379:6379'\n"
        },
        {
          "name": "env.example",
          "type": "blob",
          "size": 0.974609375,
          "content": "# PostgreSQL conf\n# POSTGRES_PASSWORD=mysecretpass\n# POSTGRES_USER=my_super_user\n# POSTGRES_DB=bootcamp\n# DATABASE_URL=postgresql://my_super_user:mysecretpass@127.0.0.1:5432/bootcamp\n# CONN_MAX_AGE=\n# To uncomment for an SQLite local testing\n# DATABASE_URL=sqlite:///db.sqlite3\n# URL to have SQLite example and to pass TravisCI\nDATABASE_URL=sqlite:////tmp/db.sqlite3\n\n# Domain name, used by caddy\n# DOMAIN_NAME=http://trybootcamp.vitorfs.com\n\n# General settings\nREAD_DOT_ENV_FILE=True\nADMIN_URL=\nSETTINGS_MODULE=config.settings.test\nSECRET_KEY=Sup3rS3cr3tP@22word\nDEBUG=True\nALLOWED_HOSTS=*\n# ALLOWED_HOSTS=.http://trybootcamp.vitorfs.com\n# ACCOUNT_ALLOW_REGISTRATION=True\n\n# AWS Settings\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_STORAGE_BUCKET_NAME=\n\n# Used with email\nMAILGUN_API_KEY=\nSERVER_EMAIL=\nMAILGUN_SENDER_DOMAIN=\n\n# Security! Better to use DNS for this task, but you can use redirect\nSECURE_SSL_REDIRECT=False\n\n# Sentry\nSENTRY_DSN=\n\n# URL for Redis\nREDIS_URL=redis://127.0.0.1:6379\n"
        },
        {
          "name": "local.yml",
          "type": "blob",
          "size": 0.59765625,
          "content": "version: '2'\n\nvolumes:\n  postgres_data_local: {}\n  postgres_backup_local: {}\n\nservices:\n  django:\n    build:\n      context: .\n      dockerfile: ./compose/local/django/Dockerfile\n    depends_on:\n      - postgres\n      - redis\n    volumes:\n      - .:/app\n    env_file: .env\n    ports:\n      - \"8000:8000\"\n    command: /start.sh\n\n  postgres:\n    build:\n      context: .\n      dockerfile: ./compose/production/postgres/Dockerfile\n    volumes:\n      - postgres_data_local:/var/lib/postgresql/data\n      - postgres_backup_local:/backups\n    env_file: .env\n\n  redis:\n    image: redis:5.0\n    ports:\n      - '6379:6379'\n"
        },
        {
          "name": "locale",
          "type": "tree",
          "content": null
        },
        {
          "name": "manage.py",
          "type": "blob",
          "size": 0.966796875,
          "content": "import os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"config.settings.local\")\n\n    try:\n        from django.core.management import execute_from_command_line\n\n    except ImportError:\n        # The above import may fail for some other reason. Ensure that the\n        # issue is really that Django is missing to avoid masking other\n        # exceptions.\n        try:\n            import django  # noqa\n\n        except ImportError:\n            raise ImportError(\n                \"Couldn't import Django. Are you sure it's installed and \"\n                \"available on your PYTHONPATH environment variable? Did you \"\n                \"forget to activate a virtual environment?\"\n            )\n\n        raise\n\n    # This allows easy placement of apps within the inner bootcamp directory.\n    current_path = os.path.dirname(os.path.abspath(__file__))\n    sys.path.append(os.path.join(current_path, \"bootcamp\"))\n\n    execute_from_command_line(sys.argv)\n"
        },
        {
          "name": "production.yml",
          "type": "blob",
          "size": 0.9599609375,
          "content": "version: '2'\n\nvolumes:\n  postgres_data: {}\n  postgres_backup: {}\n  caddy: {}\n\nservices:\n  django:\n    build:\n      context: .\n      dockerfile: ./compose/production/django/Dockerfile\n    env_file: .env\n    depends_on:\n      - postgres\n      - redis\n    command: daphne -b 0.0.0.0 -p 8000 config.asgi:application\n\n  worker:\n    build:\n      context: .\n      dockerfile: ./compose/production/django/Dockerfile\n    command: python manage.py runworker\n    env_file: .env\n    depends_on:\n      - postgres\n      - redis\n\n  postgres:\n    build:\n      context: .\n      dockerfile: ./compose/production/postgres/Dockerfile\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - postgres_backup:/backups\n\n  caddy:\n    build:\n      context: .\n      dockerfile: ./compose/production/caddy/Dockerfile\n    depends_on:\n      - django\n    volumes:\n      - caddy:/root/.caddy\n    env_file: .env\n    ports:\n      - \"0.0.0.0:80:80\"\n      - \"0.0.0.0:443:443\"\n\n  redis:\n    image: redis:5.0\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0654296875,
          "content": "# This file is expected by Heroku.\n\n-r requirements/production.txt\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "runtime.txt",
          "type": "blob",
          "size": 0.0126953125,
          "content": "python-3.6.4\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 15.4130859375,
          "content": "[pycodestyle]\nmax-line-length = 120\nexclude=.tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules\n\n[isort]\ndefault_section = THIRDPARTY\nknown_first_party = bootcamp\nknown_django = django\nsections = FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER\n\n## http://pytest.org/latest/customize.html#adding-default-options\n[tool:pytest]\nDJANGO_SETTINGS_MODULE=config.settings.test\npython_files=tests.py test_*.py *_tests.py\naddopts=--cov=bootcamp --cov-config setup.cfg\n\n[coverage:run]\nsource=bootcamp/*\nomit=*/migrations/*,*/tests/*\n#plugins=django_coverage_plugin\n\n[flake8]\nmax-line-length=120\nexclude=.tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,build,dist,*.egg-info\nstatistics=True\n\n## Run with: pylint --rcfile=setup.cfg somepackage\n[pylint]\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=migrations,test\n# Pickle collected data for later comparisons.\npersistent=no\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=pylint_common, pylint_django, pylint_plugin_utils\n# Use multiple processes to speed up Pylint.\n# DO NOT CHANGE THIS VALUES >1 HIDE RESULTS!!!!!\njobs=1\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-whitelist=\n# Allow optimization of some AST trees. This will activate a peephole AST\n# optimizer, which will apply various small optimizations. For instance, it can\n# be used to obtain the result of joining multiple strings with the addition\n# operator. Joining a lot of strings can lead to a maximum recursion error in\n# Pylint and this flag can prevent that. It has one side effect, the resulting\n# AST will be different than the one from reality.\noptimize-ast=no\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time. See also the \"--disable\" option for examples.\ndisable=all\nenable=import-error,import-self,reimported,wildcard-import,misplaced-future,deprecated-module,unpacking-non-sequence,invalid-all-object,undefined-all-variable,used-before-assignment,cell-var-from-loop,global-variable-undefined,redefine-in-handler,unused-import,unused-wildcard-import,global-variable-not-assigned,undefined-loop-variable,global-statement,global-at-module-level,bad-open-mode,redundant-unittest-assert,boolean-datetimedeprecated-method,anomalous-unicode-escape-in-string,anomalous-backslash-in-string,not-in-loop,continue-in-finally,abstract-class-instantiated,star-needs-assignment-target,duplicate-argument-name,return-in-init,too-many-star-expressions,nonlocal-and-global,return-outside-function,return-arg-in-generator,invalid-star-assignment-target,bad-reversed-sequence,nonexistent-operator,yield-outside-function,init-is-generator,nonlocal-without-binding,lost-exception,assert-on-tuple,dangerous-default-value,duplicate-key,useless-else-on-loopexpression-not-assigned,confusing-with-statement,unnecessary-lambda,pointless-statement,pointless-string-statement,unnecessary-pass,unreachable,eval-used,exec-used,using-constant-test,bad-super-call,missing-super-argument,slots-on-old-class,super-on-old-class,property-on-old-class,not-an-iterable,not-a-mapping,format-needs-mapping,truncated-format-string,missing-format-string-key,mixed-format-string,too-few-format-args,bad-str-strip-call,too-many-format-args,bad-format-character,format-combined-specification,bad-format-string-key,bad-format-string,missing-format-attribute,missing-format-argument-key,unused-format-string-argumentunused-format-string-key,invalid-format-index,bad-indentation,mixed-indentation,unnecessary-semicolon,lowercase-l-suffix,invalid-encoded-data,unpacking-in-except,import-star-module-level,long-suffix,old-octal-literal,old-ne-operator,backtick,old-raise-syntax,metaclass-assignment,next-method-called,dict-iter-method,dict-view-method,indexing-exception,raising-string,using-cmp-argument,cmp-method,coerce-method,delslice-method,getslice-method,hex-method,nonzero-method,t-method,setslice-method,old-division,logging-format-truncated,logging-too-few-args,logging-too-many-args,logging-unsupported-format,logging-format-interpolation,invalid-unary-operand-type,unsupported-binary-operation,not-callable,redundant-keyword-arg,assignment-from-no-return,assignment-from-none,not-context-manager,repeated-keyword,missing-kwoa,no-value-for-parameter,invalid-sequence-index,invalid-slice-index,unexpected-keyword-arg,unsupported-membership-test,unsubscriptable-object,access-member-before-definition,method-hidden,assigning-non-slot,duplicate-bases,inconsistent-mro,inherit-non-class,invalid-slots,invalid-slots-object,no-method-argument,no-self-argument,unexpected-special-method-signature,non-iterator-returned,signature-differs,bad-staticmethod-argument,non-parent-init-called,bad-except-order,catching-non-exception,bad-exception-context,notimplemented-raised,raising-bad-type,raising-non-exception,misplaced-bare-raise,duplicate-except,broad-except,nonstandard-exception,binary-op-exception,bare-except,not-async-context-manager,yield-inside-async-function\n# Needs investigation:\n# abstract-method (might be indicating a bug? probably not though)\n# protected-access (requires some refactoring)\n# attribute-defined-outside-init (requires some refactoring)\n# super-init-not-called (requires some cleanup)\n# Things we'd like to enable someday:\n# redefined-builtin (requires a bunch of work to clean up our code first)\n# redefined-outer-name (requires a bunch of work to clean up our code first)\n# undefined-variable (re-enable when pylint fixes https://github.com/PyCQA/pylint/issues/760)\n# no-name-in-module (giving us spurious warnings https://github.com/PyCQA/pylint/issues/73)\n# unused-argument (need to clean up or code a lot, e.g. prefix unused_?)\n# function-redefined (@overload causes lots of spurious warnings)\n# too-many-function-args (@overload causes spurious warnings... I think)\n# parameter-unpacking (needed for eventual Python 3 compat)\n# print-statement (needed for eventual Python 3 compat)\n# filter-builtin-not-iterating (Python 3)\n# map-builtin-not-iterating (Python 3)\n# range-builtin-not-iterating (Python 3)\n# zip-builtin-not-iterating (Python 3)\n# many others relevant to Python 3\n# unused-variable (a little work to cleanup, is all)\n\n# ...\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=colorized\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\".\nfiles-output=no\n# Tells whether to display a full report or only the messages\nreports=no\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n# Maximum number of characters on a single line.\nmax-line-length=80\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=trailing-comma,dict-separator\n# Maximum number of lines in a module\nmax-module-lines=1000\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=4\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n# List of classes names for which member attributes should not be checked\n# (useful for classes with attributes dynamically set). This supports can work\n# with qualified names.\nignored-classes=\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=REQUEST,acl_users,aq_parent,\"[a-zA-Z]+_set{1,2}\",save,delete\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=_$|dummy\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n# Ignore comments when computing similarities.\nignore-comments=yes\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n# Ignore imports when computing similarities.\nignore-imports=no\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX,TODO\n# List of builtins function names that should not be used, separated by a comma\nbad-functions=map,filter,input\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,j,k,ex,Run,_\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n# Regular expression matching correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,30}$\n# Naming hint for function names\nfunction-name-hint=[a-z_][a-z0-9_]{2,30}$\n# Regular expression matching correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{2,30}$\n# Naming hint for variable names\nvariable-name-hint=[a-z_][a-z0-9_]{2,30}$\n# Regular expression matching correct constant names\nconst-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n# Naming hint for constant names\nconst-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n# Regular expression matching correct attribute names\nattr-rgx=[a-z_][a-z0-9_]{2,30}$\n# Naming hint for attribute names\nattr-name-hint=[a-z_][a-z0-9_]{2,30}$\n# Regular expression matching correct argument names\nargument-rgx=[a-z_][a-z0-9_]{2,30}$\n# Naming hint for argument names\nargument-name-hint=[a-z_][a-z0-9_]{2,30}$\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n# Naming hint for class attribute names\nclass-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n# Naming hint for inline iteration names\ninlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$\n# Regular expression matching correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n# Naming hint for class names\nclass-name-hint=[A-Z_][a-zA-Z0-9]+$\n# Regular expression matching correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n# Naming hint for module names\nmodule-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n# Regular expression matching correct method names\nmethod-rgx=[a-z_][a-z0-9_]{2,30}$\n# Naming hint for method names\nmethod-name-hint=[a-z_][a-z0-9_]{2,30}$\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,TERMIOS,Bastion,rexec\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n# Maximum number of arguments for function / method\nmax-args=5\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*\n# Maximum number of locals for function / method body\nmax-locals=15\n# Maximum number of return / yield for function / method body\nmax-returns=6\n# Maximum number of branch for function / method body\nmax-branches=12\n# Maximum number of statements in function / method body\nmax-statements=50\n# Maximum number of parents for a class (see R0901).\nmax-parents=13\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n# Maximum number of boolean expressions in a if statement\nmax-bool-expr=5\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=Exception\n"
        },
        {
          "name": "utility",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}