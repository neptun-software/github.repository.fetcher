{
  "metadata": {
    "timestamp": 1736711571391,
    "page": 121,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jukanntenn/django-blog-tutorial",
      "stars": 2361,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1435546875,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Python template\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# IPython Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# dotenv\n.env\n\n# virtualenv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n\ndatabase/\nmedia/\nwhoosh_index/\n.idea/\n*.sqlite3\nfabfile.py"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.7587890625,
          "content": "**第二版已发布！第二版已发布！第二版已发布！**\n\nDjango博客教程第二版全面升级，带来以下新特性，帮助初学者更好地学习 django：\n\n1. 基于最新版 django 2.2\n2. Pipenv 无痛管理虚拟环境和依赖\n3. 更加简单无痛苦的部署流程，几条命令快速上线，一键脚本无痛更新\n4. 开启 HTTPS 新时代\n5. Elasticsearch 全文搜索\n\n**强烈不再建议学习旧版**，第二版教程戳下面直达：\n\n- [HelloDjango-blog-tutorial GitHub 仓库](https://github.com/HelloGitHub-Team/HelloDjango-blog-tutorial)\n- [Django博客教程（第二版）](https://www.zmrenwu.com/courses/hellodjango-blog-tutorial/)\n\n> PS：\n>\n> Django 全栈计划已启动，戳 [这里](https://www.zmrenwu.com/courses/hellodjango-blog-tutorial/) 了解详情，感兴趣的童鞋请持续关注我的博客：[追梦人物的博客](https://www.zmrenwu.com/)。\n\n--------\n\n免费、中文、零基础，完整的项目，基于最新版 Django 1.10 和 Python 3.5。带你从零开始一步步开发属于自己的博客网站，帮助你以最快的速度掌握 Django 开发的技巧。\n\n## 资源列表\n\n- 项目演示：[Demo](http://demo.zmrenwu.com/)\n- 教程：[Django 博客开发入门教程](http://zmrenwu.com/category/django-blog-tutorial/)\n- 博客模板：[Blog templates](https://github.com/zmrenwu/django-blog-tutorial-templates)\n- 答疑与求助：[Pythonzhcn - Python 中文社区](http://www.pythonzh.cn/)\n\n## 分支说明\n\n每篇教程的代码都位于项目相应的分支中，点击上方的 **Branch** 按钮可以查看到，例如分支 Step1_build-development-environment 对应第 1 篇教程 [1 - 搭建开发环境](http://zmrenwu.com/post/3/)。\n\nmaster 主分支是项目的完整代码。\n\ndemo 分支是演示项目的分支代码。\n\n## 在本地运行项目\n\n1. 克隆项目到本地\n\n   打开命令行，进入到保存项目的文件夹，输入如下命令：\n\n   ```\n   git clone https://github.com/zmrenwu/django-blog-tutorial.git\n   ```\n\n2. 创建并激活虚拟环境\n\n   在命令行进入到保存虚拟环境的文件夹，输入如下命令创建并激活虚拟环境：\n\n   ```\n   virtualenv blogproject_env\n\n   # windows\n   blogproject_env\\Scripts\\activate\n\n   # linux\n   source blogproject_env/bin/activate\n   ```\n\n   关于如何使用虚拟环境，参阅：[搭建开发环境](http://zmrenwu.com/post/3/) 的 Virtualenv 部分。如果不想使用虚拟环境，可以跳过这一步。\n\n3. 安装项目依赖\n\n   如果使用了虚拟环境，确保激活并进入了虚拟环境，在命令行进入项目所在的 django-blog-tutorial 文件夹，运行如下命令：\n\n   ```\n   pip install -r requirements.txt\n   ```\n\n4. 迁移数据库\n\n   在上一步所在的位置运行如下命令迁移数据库：\n\n   ```\n   python manage.py migrate\n   ```\n\n5. 创建后台管理员账户\n\n   在上一步所在的位置运行如下命令创建后台管理员账户\n\n   ```\n   python manage.py createsuperuser\n   ```\n\n   具体请参阅 [在 Django Admin 后台发布文章](http://zmrenwu.com/post/9/)\n\n6. 运行开发服务器\n\n   在上一步所在的位置运行如下命令开启开发服务器：\n\n   ```\n   python manage.py runserver\n   ```\n\n   在浏览器输入：127.0.0.1:8000\n\n7. 进入后台发布文章\n\n   在浏览器输入：127.0.0.1:8000/admin\n\n   使用第 5 步创建的后台管理员账户登录\n\n   具体请参阅 [在 Django Admin 后台发布文章](http://zmrenwu.com/post/9/)\n\n## 教程目录索引\n\n**基础部分**\n\n- [0 - Django 博客教程：前言](http://zmrenwu.com/post/2/)\n- [1 - 搭建开发环境](http://zmrenwu.com/post/3/)\n- [2 - 建立 Django 博客应用](http://zmrenwu.com/post/4/)\n- [3 - 创建 Django 博客的数据库模型](http://zmrenwu.com/post/5/)\n- [4 - 让 Django 完成翻译：迁移数据库](http://zmrenwu.com/post/6/)\n- [5 - Django 博客首页视图](http://zmrenwu.com/post/7/)\n- [6 - 真正的 Django 博客首页视图](http://zmrenwu.com/post/8/)\n- [7 - 在 Django Admin 后台发布文章](http://zmrenwu.com/post/9/)\n- [8 - 博客文章详情页](http://zmrenwu.com/post/10/)\n- [9 - 支持 Markdown 语法和代码高亮](http://zmrenwu.com/post/11/)\n- [10 - 页面侧边栏：使用自定义模板标签](http://zmrenwu.com/post/12/)\n- [11 - 分类与归档](http://zmrenwu.com/post/13/)\n- [12 - 评论](http://zmrenwu.com/post/14/)\n- [13 - 已知小问题修正](http://zmrenwu.com/post/16/)\n- [14 - 使用 Nginx 和 Gunicorn 部署 Django 博客](http://zmrenwu.com/post/20/)\n- [15 - 使用 Fabric 自动化部署](http://zmrenwu.com/post/21/)\n\n**进阶部分**\n\n- [16 - 统计文章阅读量](http://zmrenwu.com/post/29/)\n- [17 - 自动生成文章摘要](http://zmrenwu.com/post/32/)\n- [18 - 基于类的通用视图：ListView 和 DetailView](http://zmrenwu.com/post/33/)\n- [19 - Django Pagination 简单分页](http://zmrenwu.com/post/34/)\n- [20 - Django Pagination 完善分页](http://zmrenwu.com/post/37/)\n- [21 - 统计各个分类下的文章数](http://zmrenwu.com/post/38/)\n- [22 - 标签云](http://zmrenwu.com/post/39/)\n- [23 - RSS 订阅](http://zmrenwu.com/post/41/)\n- [24 - 自动生成目录](http://zmrenwu.com/post/43/)\n- [25 - 简单全文搜索](http://zmrenwu.com/post/44/)\n- [26 - Django Haystack 全文检索与关键词高亮](http://zmrenwu.com/post/45/)\n\n## 交流讨论和继续学习 Django\n\n这里汇聚了大量经验丰富的 Django 开发者，遇到问题随时请教，以及获取更多的 Django 学习资料。\n\n- Django 博客，更多 Django 开发文章和教程：[追梦人物的博客](http://zmrenwu.com/)\n- Django 学习小组 QQ 群：561422498\n- Django 学习交流论坛：[Pythonzhcn - Python 中文社区](http://www.pythonzh.cn/)\n- Django 学习小组邮件列表：django_study@groups.163.com\n- [Django 入门学习规划与资料推荐](http://zmrenwu.com/post/15/)"
        },
        {
          "name": "blog",
          "type": "tree",
          "content": null
        },
        {
          "name": "blogproject",
          "type": "tree",
          "content": null
        },
        {
          "name": "comments",
          "type": "tree",
          "content": null
        },
        {
          "name": "manage.py",
          "type": "blob",
          "size": 0.7900390625,
          "content": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"blogproject.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError:\n        # The above import may fail for some other reason. Ensure that the\n        # issue is really that Django is missing to avoid masking other\n        # exceptions on Python 2.\n        try:\n            import django\n        except ImportError:\n            raise ImportError(\n                \"Couldn't import Django. Are you sure it's installed and \"\n                \"available on your PYTHONPATH environment variable? Did you \"\n                \"forget to activate a virtual environment?\"\n            )\n        raise\n    execute_from_command_line(sys.argv)\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1064453125,
          "content": "django==1.10.6\nMarkdown==2.6.8\nPygments==2.2.0\npytz==2016.10\ndjango-haystack==2.6.1\njieba==0.38\nWhoosh==2.7.4"
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}