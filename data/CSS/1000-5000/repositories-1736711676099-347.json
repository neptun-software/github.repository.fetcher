{
  "metadata": {
    "timestamp": 1736711676099,
    "page": 347,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rafalbromirski/sass-mediaqueries",
      "stars": 1263,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.02734375,
          "content": ".DS_Store\n/demo/.sass-cache\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.638671875,
          "content": "# sass-mediaqueries\n\nIt's a collection of useful **Media Queries** mixins for **Sass** (including iOS devices, TVs and more). Fully customizable and very easy to use.\n\n#### Online: <http://rafalbromirski.github.com/sass-mediaqueries>\n#### Demo: <http://rafalbromirski.github.com/sass-mediaqueries/demo.html>\n\n### How to install:\n\nUsing **bower**:\n\n```\nbower install sass-mediaqueries\n```\n\nUsing **npm**:\n\n```\nnpm install sass-mediaqueries\n```\n\nUsing **curl**:\n\n```\ncurl -O https://raw.githubusercontent.com/rafalbromirski/sass-mediaqueries/master/_media-queries.scss\n```\n\nThen, at the top of your sass/scss file (ie. `application.scss`) add:\n\n```scss\n@import \"media-queries\";\n```\n\n## Doc:\n\n#### Generator (v1.6.0):\n\n```\nmq($args...)\n```\n\nGenerator allows you to create custom media-queries mixins by passing [**keywords arguments**](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#keyword_arguments) based on w3c [**media features**](http://www.w3.org/TR/css3-mediaqueries/#media1) specification (make sure you always provide key and value).\n\nIt's also a syntactic sugar for the standard media queries [syntax](http://www.w3.org/TR/css3-mediaqueries/#media0) (CSS).\n\n**Examples**:\n\n```scss\n@include mq($max-width: 1000px) {\n  ...\n}\n\n// will generate\n\n@media only screen and (max-width: 1000px) {\n  ...\n}\n```\n\nCreating new mixins (like `max-screen`) is even easier:\n\n```scss\n@mixin max-screen($max)\n  @include mq($max-width: $max) {\n    @content;\n  }\n}\n\n// usage\n\n@include max-screen(1000px) {\n  ...\n}\n\n// will generate\n\n@media only screen and (max-width: 1000px) {\n  ...\n}\n```\n\nOr if you want to change `$media-type` and other properies:\n\n```scss\n@mixin custom-device($min, $max)\n  @include mq($media-type: 'all', $min-width: $min, $max-width: $max) {\n    @content;\n  }\n}\n\n// usage\n\n@include custom-device(500px, 1000px) {\n  ...\n}\n\n// will generate\n\n@media all and (min-width: 500px) and (max-width: 1000px) {\n  ...\n}\n```\n\nHow cool is that?\n\n---\n\n#### Other Mixins:\n\n```\n@  screen(min-width, max-width, orientation)\n@  min-screen(width)\n@  max-screen(width)\n--\n@  screen-height(min-height, max-height, orientation)\n@  min-screen-height(height)\n@  max-screen-height(height)\n--\n@  hdpi(ratio)\n--\n@  landscape\n@  portrait\n--\n@  iphone4(orientation)\n@  iphone5(orientation)\n@  iphone6(orientation)\n@  iphone6-plus(orientation)\n--\n@  ipad(orientation)\n@  ipad-retina(orientation)\n--\n@  hdtv(standard)\n```\n\n---\n\n#### - screen($min-width, $max-width, $orientation: false)\n\nIt targets group of devices or just one with particular screen width and orientation (optional).\n\n###### # Example:\n\n```scss\n@include screen(320px, 640px) { ... }\n@include screen(768px, 1024px, landscape) { ... }\n```\n\nIt will be compiled to:\n\n```css\n@media screen and (min-width: 768px) and (max-width: 1280px) { ... }\n@media screen and (min-width: 320px) and (max-width: 640px) and (orientation: landscape) { ... }\n```\n\n#### - min-screen($width)\n\nIt's a shortcut for `@media screen and (min-width ... )`\n\n###### # Example:\n\n```scss\n@include min-screen(768px) { ... }\n@include min-screen(1024px) { ... }\n```\n\nIt will be compiled to:\n\n```css\n@media screen and (min-width: 768px) { ... }\n@media screen and (min-width: 1024px) { ... }\n```\n\n\n#### - max-screen($width)\n\nIt's a shortcut for `@media screen and (max-width ... )`\n\n###### # Example:\n\n```scss\n@include max-screen(1024px) { ... }\n@include max-screen(768px) { ... }\n```\n\nIt will be compiled to:\n\n```css\n@media screen and (max-width: 1024px) { ... }\n@media screen and (max-width: 768px) { ... }\n```\n\n---\n\n#### - screen-height($min-height, $max-height, $orientation: false)\n\nIt targets group of devices or just one with particular screen height and orientation (optional).\n\n###### # Example:\n\n```scss\n@include screen-height(640px, 768px) { ... }\n@include screen-height(640px, 768px, landscape) { ... }\n```\n\nIt will be compiled to:\n\n```css\n@media screen and (min-height: 768px) and (max-height: 1280px) { ... }\n@media screen and (min-height: 768px) and (max-height: 1280px) and (orientation: landscape) { ... }\n```\n\n#### - min-screen-height($width)\n\nIt's a shortcut for `@media screen and (min-height ... )`\n\n###### # Example:\n\n```scss\n@include min-screen-height(768px) { ... }\n@include min-screen-height(1024px) { ... }\n```\n\nIt will be compiled to:\n\n```css\n@media screen and (min-height: 768px) { ... }\n@media screen and (min-height: 1024px) { ... }\n```\n\n\n#### - max-screen-height($width)\n\nIt's a shortcut for `@media screen and (max-height ... )`\n\n###### # Example:\n\n```scss\n@include max-screen-height(1024px) { ... }\n@include max-screen-height(768px) { ... }\n```\n\nIt will be compiled to:\n\n```css\n@media screen and (max-height: 1024px) { ... }\n@media screen and (max-height: 768px) { ... }\n```\n\n---\n\n#### - hdpi($ratio: 1.3)\n\nIt targets devices with hdpi display.\n\n###### # Example:\n\n```scss\n.brand {\n\tbackground-image: url(logo.png);\n\n\t@include hdpi {\n\t\tbackground-image: url(logo_2x.png);\n\t}\n}\n```\n\n---\n\n#### - landscape() & portrait()\n\nBoth mixins target different screen orientations.\n\n###### # Example:\n\n```scss\n@include landscape { ... }\n@include portrait { ... }\n```\n\nIt will be compiled to:\n\n```css\n@media screen and (orientation: landscape) { ... }\n@media screen and (orientation: portrait) { ... }\n```\n\n---\n\n```\n$orientation: all | portrait | landscape\n```\n\n#### - iphone4($orientation: all)\n\nIt targets only **iPhone 4** + orientation\n\n#### - iphone5($orientation: all)\n\nIt targets only **iPhone 5** + orientation\n\n#### - iphone6($orientation: all)\n\nIt targets only **iPhone 6** + orientation\n\n#### - iphone6-plus($orientation: all)\n\nIt targets only **iPhone 6 Plus** + orientation\n\n#### - ipad($orientation: all)\n\nIt targets all **iPads** + orientation\n\n#### - ipad-retina($orientation: all)\n\nIt targets only **iPads with retina** display + orientation\n\n###### # Example:\n\n```scss\n@include ipad { ... }                 // all iPads\n@include ipad-retina { ... }          // only iPad with retina\n\n@include iphone5 { ... }              // only iPhone 5\n@include iphone4 { ... }              // only iPhone 4/4S\n```\n\n###### # Example:\n\n```scss\n// common part for iPhone 5 - landscape & portrait\n@include iphone5 { ... }\n\n@include iphone5(landscape) { ... }\n@include iphone5(portrait) { ... }\n```\n\n---\n\n```\n$standard: '720p' | '1080' | '2K' | '4K'\n```\n\n#### - hdtv($standard: '1080')\n\nIt targets TVs with particular standard like `1080` or `4K`\n\n###### # Example:\n```scss\n.title {\n\tfont-size: 5vm;\n\n\t@include hdtv {\n\t\tfont-size: 10vm;\n\t}\n\n\t@include hdtv('4K') {\n\t\tfont-size: 15vm;\n\t}\n}\n```\n\n---\n\n### Credits:\n\nFeel free to check my <a href=\"http://rafalbromirski.com\">website</a> or follow me on <a href=\"https://twitter.com/rafalbromirski\">twitter</a>.\n\n---\n\n### License:\n\nThe MIT license\n\nCopyright &copy; 2015 [Rafal Bromirski](http://rafalbromirski.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "_media-queries.scss",
          "type": "blob",
          "size": 4.6103515625,
          "content": "//  Author: Rafal Bromirski\n//  www: http://rafalbromirski.com/\n//  github: http://github.com/rafalbromirski/sass-mediaqueries\n//\n//  Licensed under a MIT License\n//\n//  Version:\n//  1.6.1\n\n// --- generator ---------------------------------------------------------------\n\n@mixin mq($args...) {\n  $media-type: 'only screen';\n  $media-type-key: 'media-type';\n  $args: keywords($args);\n  $expr: '';\n\n  @if map-has-key($args, $media-type-key) {\n    $media-type: map-get($args, $media-type-key);\n    $args: map-remove($args, $media-type-key);\n  }\n\n  @each $key, $value in $args {\n    @if $value {\n      $expr: \"#{$expr} and (#{$key}: #{$value})\";\n    }\n  }\n\n  @media #{$media-type} #{$expr} {\n    @content;\n  }\n}\n\n// --- screen ------------------------------------------------------------------\n\n@mixin screen($min, $max, $orientation: false) {\n  @include mq($min-width: $min, $max-width: $max, $orientation: $orientation) {\n    @content;\n  }\n}\n\n@mixin max-screen($max) {\n  @include mq($max-width: $max) {\n    @content;\n  }\n}\n\n@mixin min-screen($min) {\n  @include mq($min-width: $min) {\n    @content;\n  }\n}\n\n@mixin screen-height($min, $max, $orientation: false) {\n  @include mq($min-height: $min, $max-height: $max, $orientation: $orientation) {\n    @content;\n  }\n}\n\n@mixin max-screen-height($max) {\n  @include mq($max-height: $max) {\n    @content;\n  }\n}\n\n@mixin min-screen-height($min) {\n  @include mq($min-height: $min) {\n    @content;\n  }\n}\n\n// --- hdpi --------------------------------------------------------------------\n\n@mixin hdpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min-resolution: #{round($ratio*96)}dpi) {\n    @content;\n  }\n}\n\n// --- hdtv --------------------------------------------------------------------\n\n@mixin hdtv($standard: '1080') {\n  $min-width: false;\n  $min-height: false;\n\n  $standards: ('720p', 1280px, 720px)\n              ('1080', 1920px, 1080px)\n              ('2K', 2048px, 1080px)\n              ('4K', 4096px, 2160px);\n\n  @each $s in $standards {\n    @if $standard == nth($s, 1) {\n      $min-width: nth($s, 2);\n      $min-height: nth($s, 3);\n    }\n  }\n\n  @include mq(\n    $min-device-width: $min-width,\n    $min-device-height: $min-height,\n    $min-width: $min-width,\n    $min-height: $min-height\n  ) {\n    @content;\n  }\n}\n\n// --- iphone4 -----------------------------------------------------------------\n\n@mixin iphone4($orientation: false) {\n  $min: 320px;\n  $max: 480px;\n  $pixel-ratio: 2;\n  $aspect-ratio: '2/3';\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $device-aspect-ratio: $aspect-ratio,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- iphone5 -----------------------------------------------------------------\n\n@mixin iphone5($orientation: false) {\n  $min: 320px;\n  $max: 568px;\n  $pixel-ratio: 2;\n  $aspect-ratio: '40/71';\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $device-aspect-ratio: $aspect-ratio,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- iphone6 -----------------------------------------------------------------\n\n@mixin iphone6($orientation: false) {\n  $min: 375px;\n  $max: 667px;\n  $pixel-ratio: 2;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- iphone6 plus ------------------------------------------------------------\n\n@mixin iphone6-plus($orientation: false) {\n  $min: 414px;\n  $max: 736px;\n  $pixel-ratio: 3;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- ipad (all) --------------------------------------------------------------\n\n@mixin ipad($orientation: false) {\n  $min: 768px;\n  $max: 1024px;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation\n  ) {\n    @content;\n  }\n}\n\n// --- ipad-retina -------------------------------------------------------------\n\n@mixin ipad-retina($orientation: false) {\n  $min: 768px;\n  $max: 1024px;\n  $pixel-ratio: 2;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- orientation -------------------------------------------------------------\n\n@mixin landscape() {\n  @include mq($orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin portrait() {\n  @include mq($orientation: portrait) {\n    @content;\n  }\n}\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.51171875,
          "content": "{\n  \"name\": \"sass-mediaqueries\",\n  \"version\": \"1.6.1\",\n  \"homepage\": \"https://github.com/rafalbromirski/sass-mediaqueries\",\n  \"authors\": [\n    \"Rafal Bromirski <rafal.bromirski@gmail.com>\"\n  ],\n  \"description\": \"Media Queries mixins for Sass - fully customizable and very easy to use. Great extension for compass or bourbon.\",\n  \"main\": \"_media-queries.scss\",\n  \"ignore\": [\"demo\"],\n  \"keywords\": [\n    \"sass\",\n    \"scss\",\n    \"css\",\n    \"media\",\n    \"queries\",\n    \"mediaqueries\",\n    \"responsive\"\n  ],\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.96875,
          "content": "{\n  \"name\": \"sass-mediaqueries\",\n  \"version\": \"1.6.1\",\n  \"homepage\": \"https://github.com/rafalbromirski/sass-mediaqueries\",\n  \"author\": {\n    \"name\": \"Rafal Bromirski\",\n    \"email\": \"rafal.bromirski@gmail.com\",\n    \"web\": \"http://rafalbromirski.com\"\n  },\n  \"contributors\": [{\n    \"name\": \"Rafal Bromirski\",\n    \"email\": \"rafal.bromirski@gmail.com\",\n    \"web\": \"http://rafalbromirski.com\"\n  }],\n  \"description\": \"Media Queries mixins for Sass - fully customizable and very easy to use. Great extension for compass or bourbon.\",\n  \"files\": [\n    \"_media-queries.scss\",\n    \"README.md\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:rafalbromirski/sass-mediaqueries.git\"\n  },\n  \"bugs\": {\n    \"url\" : \"https://github.com/rafalbromirski/sass-mediaqueries/issues\",\n    \"email\" : \"rafal.bromirski@gmail.com\"\n  },\n  \"dependencies\": {},\n  \"keywords\": [\n    \"sass\",\n    \"scss\",\n    \"css\",\n    \"media\",\n    \"queries\",\n    \"mediaqueries\",\n    \"responsive\"\n  ],\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "sache.json",
          "type": "blob",
          "size": 0.2783203125,
          "content": "{\n  \"name\": \"sass-mediaqueries\",\n  \"description\": \"Media Queries mixins for Sass - fully customizable and very easy to use. Great extension for compass or bourbon.\",\n  \"tags\": [\"media-queries\", \"media\", \"queries\", \"responsive\", \"rwd\", \"mixins\", \"sass\", \"scss\", \"compass\", \"bourbon\"]\n}\n"
        }
      ]
    }
  ]
}