{
  "metadata": {
    "timestamp": 1736711558763,
    "page": 88,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rstacruz/flatdoc",
      "stars": 2677,
      "defaultBranch": "gh-pages",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0126953125,
          "content": "node_modules\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0654296875,
          "content": "language: node_js\nnode_js: [\"iojs\"]\nbranches:\n  only: [\"gh-pages\"]\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.4462890625,
          "content": "Contributing guidelines\n=======================\n\nIn general:\n\n * Read [Notes.md] for developer notes.\n * Be familiar with [pull request etiquette].\n\nFor submitting .js updates:\n\n * When submitting new features, add tests.\n * When submitting fixes, try to add a test for the failing case.\n\nFor submitting .css updates:\n\n * Be sure to make your changes to the stylus (.styl) files.\n\n[pull request etiquette]: http://google.com/search?q=pull+request+etiquette\n"
        },
        {
          "name": "History.md",
          "type": "blob",
          "size": 1.6455078125,
          "content": "## v0.9.0 - November 9, 2014\n\n * Changed prescribed URLs to use [https://cdn.rawgit.com](http://rawgit.com), supporting HTTPS. (#27)\n * Support multiple markdown files in `Flatdoc.file`. (#15, #45, @gjong)\n * Fix readme example to be workable. (#7)\n * Deprecate `src/`, making PR's a bit easier to manage.\n * Fix navbar offset with images. (#31, #44, @UziTech)\n\n## v0.8.7 - unreleased\n\n * Publish to Bower.\n * Fix issue where linking to a location hash doesn't scroll the document down. (#21, #35, @malthe)\n\n## v0.8.6 - June 24, 2014\n\n * Hotfix: fix JS syntax highlighting. (#37)\n * Internal: add more unit tests.\n\n## v0.8.5 - June 24, 2014\n\nPlease use v0.8.6 instead.\n\n * Fix a minor issue where navigation would break. (#36, @malthe)\n * Add support for external highlighters. (#37, @malthe)\n * theme-white: Remove the *jQuery.fillsize* plugin.\n * theme-white: Simplify the JS file.\n\n## v0.8.4 - June 22, 2014\n\n * Use `jQuery.fn.addBack()` instead of `andSelf()`. (#24, @jonschlinkert)\n * Fix JS error in older versions of IE.  (#30, @vijayakumarrg)\n * Fix sticky sidebar glitches when resizing. (#14, @grmlin)\n\n## v0.8.3 - June 21, 2014\n\n * Fix issue with `h3` headings following `h1`s. (#34, @malthe)\n * Fix issues with multiple headings that have the same text. (#33, #32, @malthe)\n * Fix issue with HTTPS errors concerning Google Fonts. (#27, #29)\n \n## v0.8.2 - June 16, 2014\n\n * Fix HTML keyword highlighting when tags don't have attributes. (#28, @oderwat)\n * Fix `slugify()` raising an error when the given text is not a string.\n\n## v0.8.1 - April 25, 2014\n\n * Add support for tables. (#22, #5, @huangyq23)\n * Add bitbucket support. (#16, @palday)\n\n## v0.8.0\n\nInitial release.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.9619140625,
          "content": "UGLIFY := ./node_modules/.bin/uglifyjs --comments \"/^!/\"\nSTYLUS := ./node_modules/.bin/stylus -U -u nib\nDOX := ./node_modules/.bin/dox\n\nall: \\\n\tlegacy.js \\\n\ttheme-white/style.css \\\n\ttheme-white/script.js \\\n\tReference.md\n\nwatch:\n\twhile true; do make all | grep -v \"Nothing\"; sleep 1; done\n\n# Legacy shims for IE\nlegacy.js: \\\n\tsupport/legacy-header.js \\\n\tsupport/vendor/html5shiv.js \\\n\tsupport/vendor/respond.js\n\tcat $^ > $@\n\n%.css: %.styl\n\t(echo \"/*\\n\\nPlease don't edit this file directly.\\nInstead, edit the stylus (.styl) files and compile it to CSS on your machine.\\n\\n*/\" ; $(STYLUS) < $<) > $@\n\nReference.md: flatdoc.js\n\t$(DOX) -r < $< | node support/dox2md.js --default-level 3 > $@\n\n# $ make v/0.1.0\n# Makes a distribution.\n#\nv/%: all\n\tmkdir -p $@\n\t$(UGLIFY) < flatdoc.js > $@/flatdoc.js\n\t$(UGLIFY) < legacy.js > $@/legacy.js\n\tcp -R templates $@/templates\n\tmkdir -p $@/theme-white\n\tcp theme-white/style.css $@/theme-white\n\tcp theme-white/script.js $@/theme-white\n\n.PHONY: watch\n"
        },
        {
          "name": "Notes.md",
          "type": "blob",
          "size": 1.3974609375,
          "content": "Developer notes\n===============\n\n### Distributions\n\nThere are 4 official ways to point to flatdoc releases. That is:\n\n    # via cdnjs:\n    https://cdn.rawgit.com/rstacruz/flatdoc/v0.8.6/flatdoc.js\n\n    # Specific versions\n    # (built using `make v/0.8.1`)\n    http://rstacruz.github.io/flatdoc/v/0.8.6/*\n\n    # Latest from the 0.8 series.\n    # Updated every time there's a 0.8 release.\n    # (built using `make v/0.8`)\n    http://rstacruz.github.io/flatdoc/v/0.8/*\n\n    # Latest\n    # (built using `make`)\n    http://rstacruz.github.io/flatdoc/*\n\n...just replace `*` with `flatdoc.js` (or any of the other support files).\n\n### GNU make\n\nThis project uses GNU make (`Makefile`) to manage the builds.\n\n * `make` - builds the latest version\n * `make v/0.x.x` - builds a given version distribution\n * `make watch` - keep rebuilding as needed (useful for development)\n\n### Notes on structure\n\n * `flatdoc.js` is the main script.\n * Distributions are stored in `/v/{version}/*`.\n * CSS files are compiled from Stylus sources.\n\n### Updating files\n\n    # build files\n    make\n\n    # ensure it works, and install build tools\n    npm install\n    npm test\n\n    # update prescribed versions\n    perl -p -i -e \"s/v\\d+\\.\\d+\\.\\d+/v0.9.0/g\" templates/*.html Readme.md\n    bump package.json\n    git diff\n\n    # build files\n    make\n    make v/0.9\n    make v/0.9.0\n\n    # add release date\n    vim History.md\n    git release v0.8.3\n    npm publish\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 7.115234375,
          "content": "Flatdoc\n=======\n\nFlatdoc is a small JavaScript file that fetches Markdown files and renders them\nas full pages. Essentially, it's the easiest\nway to make open source documentation from *Readme* files.\n\n * No server-side components\n * No build process needed\n * Deployable via GitHub Pages\n * Can fetch GitHub Readme files\n * Gorgeous default theme (and it's responsive)\n * Just create an HTML file and deploy!\n\n*Current version: [v0.9.0][dist]*\n\n[![Build Status](https://travis-ci.org/rstacruz/flatdoc.svg?branch=gh-pages)](https://travis-ci.org/rstacruz/flatdoc)\n\nGetting started\n---------------\n\nCreate a file based on the template, which has a bare DOM, link to the\nscripts, and a link to a theme. It will look something like this (not exact).\nFor GitHub projects, simply place this file in your [GitHub pages] branch and\nyou're all good to go.\n\n*In short: just download this file and upload it somewhere.*\n\nThe main JS and CSS files are also available in [npm] and [bower].\n\n[Default theme template >][template]\n\n[Blank template >][blank]\n\n[bower]: http://bower.io/search/?q=flatdoc\n[npm]: https://www.npmjs.org/package/flatdoc\n\n### Via GitHub\n\nTo fetch a Github Repository's readme file, use the `Flatdoc.github` fetcher.\nThis will fetch the Readme file of the repository's default branch.\n\n``` javascript\nFlatdoc.run({\n  fetcher: Flatdoc.github('USER/REPO')\n});\n```\n\nYou may also fetch another file other than the Readme file, just specify it as\nthe 2nd parameter.\n\n``` javascript\nFlatdoc.run({\n  fetcher: Flatdoc.github('USER/REPO', 'Changelog.md')\n});\n```\n\nAfter you've done this, you probably want to deploy it via [GitHub Pages].\n\n[GitHub Pages guide >][GitHub Pages]\n\n### Via a file\n\nYou may also fetch a file. In this example, this fetches the file `Readme.md` in\nthe same folder as the HTML file.\n\n``` javascript\nFlatdoc.run({\n  fetcher: Flatdoc.file('Readme.md')\n});\n```\n\nYou may actually supply any URL here. It will be fetched via AJAX. This is\nuseful for local testing.\n\n``` javascript\nFlatdoc.run({\n  fetcher: Flatdoc.file('http://yoursite.com/Readme.md')\n});\n```\n\nHow it works\n------------\n\nFlatdoc is a hosted `.js` file (along with a theme and its assets) that you can\nadd into any page hosted anywhere.\n\n#### All client-side\n\nThere are no build scripts or 3rd-party services involved. Everything is done in\nthe browser. Worried about performance? Oh, It's pretty fast.\n\nFlatdoc utilizes the [GitHub API] to fetch your project's Readme files. You may\nalso configure it to fetch any arbitrary URL via AJAX.\n\n#### Lightning-fast parsing\n\nNext, it uses [marked], an extremely fast Markdown parser that has support for\nGitHub flavored Markdown.\n\nFlatdoc then simply renders *menu* and *content* DOM elements to your HTML\ndocument. Flatdoc also comes with a default theme to style your page for you, or\nyou may opt to create your own styles.\n\nMarkdown extras\n---------------\n\nFlatdoc offers a few harmless, unobtrusive extras that come in handy in building\ndocumentation sites.\n\n#### Code highlighting\n\nYou can use Markdown code fences to make syntax-highlighted text. Simply\nsurround your text with three backticks. This works in GitHub as well.\nSee [GitHub Syntax Highlighting][fences] for more info.\n\n    ``` html\n    <strong>Hola, mundo</strong>\n    ```\n\n#### Blockquotes\n\nBlockquotes show up as side figures. This is useful for providing side\ninformation or non-code examples.\n\n> Blockquotes are blocks that begin with `>`.\n\n#### Smart quotes\n\nSingle quotes, double quotes, and double-hyphens are automatically replaced to\ntheir typographically-accurate equivalent. This, of course, does not apply to\n`<code>` and `<pre>` blocks to leave code alone.\n\n> \"From a certain point onward there is no longer any turning back. That is the\n> point that must be reached.\"  \n> --Franz Kafka\n\n#### Buttons\n\nIf your link text has a `>` at the end (for instance: `Continue >`), they show\nup as buttons.\n\n> [View in GitHub >][project]\n\nCustomizing\n===========\n\nBasic\n-----\n\n### Theme options\n\nFor the default theme (*theme-white*), You can set theme options by adding\nclasses to the `<body>` element. The available options are:\n\n#### big-h3\nMakes 3rd-level headings bigger.\n\n``` html\n<body class='big-h3'>\n```\n\n#### no-literate\nDisables \"literate\" mode, where code appears on the right and content text\nappear on the left.\n\n``` html\n<body class='no-literate'>\n```\n\n#### large-brief\nMakes the opening paragraph large.\n\n``` html\n<body class='large-brief'>\n```\n\n### Adding more markup\n\nYou have full control over the HTML file, just add markup wherever you see fit.\nAs long as you leave `role='flatdoc-content'` and `role='flatdoc-menu'` empty as\nthey are, you'll be fine.\n\nHere are some ideas to get you started.\n\n * Add a CSS file to make your own CSS adjustments.\n * Add a 'Tweet' button on top.\n * Add Google Analytics.\n * Use CSS to style the IDs in menus (`#acknowledgements + p`).\n\n### JavaScript hooks\n\nFlatdoc emits the events `flatdoc:loading` and `flatdoc:ready` to help you make\ncustom behavior when the document loads.\n\n``` js\n$(document).on('flatdoc:ready', function() {\n  // I don't like this section to appear\n  $(\"#acknowledgements\").remove();\n});\n```\n\nFull customization\n------------------\n\nYou don't have to be restricted to the given theme. Flatdoc is just really one\n`.js` file that expects 2 HTML elements (for *menu* and *content*). Start with\nthe blank template and customize as you see fit.\n\n[Get blank template >][template]\n\nMisc\n====\n\nInspirations\n------------\n\nThe following projects have inspired Flatdoc.\n\n * [Backbone.js] - Jeremy's projects have always adopted this \"one page\n documentation\" approach which I really love.\n\n * [Docco] - Jeremy's Docco introduced me to the world of literate programming,\n and side-by-side documentation in general.\n\n * [Stripe] - Flatdoc took inspiration on the look of their API documentation.\n\n * [DocumentUp] - This service has the same idea but does a hosted readme \n parsing approach.\n\nAttributions\n------------\n\n[Photo](http://www.flickr.com/photos/doug88888/2953428679/) taken from Flickr,\nlicensed under Creative Commons.\n\nAcknowledgements\n----------------\n\n© 2013, 2014, Rico Sta. Cruz. Released under the [MIT \nLicense](http://www.opensource.org/licenses/mit-license.php).\n\n**Flatdoc** is authored and maintained by [Rico Sta. Cruz][rsc] with help from its \n[contributors][c].\n\n * [My website](http://ricostacruz.com) (ricostacruz.com)\n * [Github](http://github.com/rstacruz) (@rstacruz)\n * [Twitter](http://twitter.com/rstacruz) (@rstacruz)\n\n[rsc]: http://ricostacruz.com\n[c]:   http://github.com/rstacruz/flatdoc/contributors\n\n[GitHub API]: http://github.com/api\n[marked]: https://github.com/chjj/marked\n[Backbone.js]: http://backbonejs.org\n[dox]: https://github.com/visionmedia/dox\n[Stripe]: https://stripe.com/docs/api\n[Docco]: http://jashkenas.github.com/docco\n[GitHub pages]: https://pages.github.com\n[fences]:https://help.github.com/articles/github-flavored-markdown#syntax-highlighting\n[DocumentUp]: http://documentup.com\n\n[project]: https://github.com/rstacruz/flatdoc\n[template]: https://github.com/rstacruz/flatdoc/raw/gh-pages/templates/template.html\n[blank]: https://github.com/rstacruz/flatdoc/raw/gh-pages/templates/blank.html\n[dist]: https://github.com/rstacruz/flatdoc/tree/gh-pages/v/0.9.0\n"
        },
        {
          "name": "Reference.md",
          "type": "blob",
          "size": 5.2421875,
          "content": "Flatdoc\n=======\n\nBasic Flatdoc module.\n\nThe main entry point is `Flatdoc.run()`, which invokes the [Runner].\n\n```js\nFlatdoc.run({\n  fetcher: Flatdoc.github('rstacruz/backbone-patterns');\n});\n```\n\nThese fetcher functions are available:\n\n```js\nFlatdoc.github('owner/repo')\nFlatdoc.github('owner/repo', 'API.md')\nFlatdoc.github('owner/repo', 'API.md', 'branch')\nFlatdoc.bitbucket('owner/repo')\nFlatdoc.bitbucket('owner/repo', 'API.md')\nFlatdoc.bitbucket('owner/repo', 'API.md', 'branch')\nFlatdoc.file('http://path/to/url')\nFlatdoc.file([ 'http://path/to/url', ... ])\n```\n\n\n\n### Flatdoc.run()\n\nCreates a runner.\nSee [Flatdoc].\n\n### Flatdoc.file()\n\nFile fetcher function.\n\nFetches a given `url` via AJAX.\nSee [Runner#run()] for a description of fetcher functions.\n\n### Flatdoc.github()\n\nGithub fetcher.\nFetches from repo `repo` (in format 'user/repo').\n\nIf the parameter `filepath` is supplied, it fetches the contents of that\ngiven file in the repo's default branch. To fetch the contents of\n`filepath` from a different branch, the parameter `ref` should be\nsupplied with the target branch name.\n\nSee [Runner#run()] for a description of fetcher functions.\n\nSee: http://developer.github.com/v3/repos/contents/\n\n### Flatdoc.bitbucket()\n\nBitbucket fetcher.\nFetches from repo `repo` (in format 'user/repo').\n\nIf the parameter `filepath` is supplied, it fetches the contents of that\ngiven file in the repo.\n\nSee [Runner#run()] for a description of fetcher functions.\n\nSee: https://confluence.atlassian.com/display/BITBUCKET/src+Resources#srcResources-GETrawcontentofanindividualfile\nSee: http://ben.onfabrik.com/posts/embed-bitbucket-source-code-on-your-website\nBitbucket appears to have stricter restrictions on\nAccess-Control-Allow-Origin, and so the method here is a bit\nmore complicated than for Github\n\nIf you don't pass a branch name, then 'default' for Hg repos is assumed\nFor git, you should pass 'master'. In both cases, you should also be able\nto pass in a revision number here -- in Mercurial, this also includes\nthings like 'tip' or the repo-local integer revision number\nDefault to Mercurial because Git users historically tend to use GitHub\n\nParser\n------\n\nParser module.\nParses a given Markdown document and returns a JSON object with data\non the Markdown document.\n\n```js\nvar data = Flatdoc.parser.parse('markdown source here');\nconsole.log(data);\n\ndata == {\n  title: 'My Project',\n  content: '<p>This project is a...',\n  menu: {...}\n}\n```\n\n\n\n### Parser.parse()\n\nParses a given Markdown document.\nSee `Parser` for more info.\n\nTransformer\n-----------\n\nTransformer module.\nThis takes care of any HTML mangling needed.  The main entry point is\n`.mangle()` which applies all transformations needed.\n\n```js\nvar $content = $(\"<p>Hello there, this is a docu...\");\nFlatdoc.transformer.mangle($content);\n```\n\nIf you would like to change any of the transformations, decorate any of\nthe functions in `Flatdoc.transformer`.\n\n### Transformer.mangle()\n\nTakes a given HTML `$content` and improves the markup of it by executing\nthe transformations.\n\n> See: [Transformer](#transformer)\n\n### Transformer.addIDs()\n\nAdds IDs to headings.\n\n### Transformer.getMenu()\n\nReturns menu data for a given HTML.\n\n```js\nmenu = Flatdoc.transformer.getMenu($content);\nmenu == {\n  level: 0,\n  items: [{\n    section: \"Getting started\",\n    level: 1,\n    items: [...]}, ...]}\n```\n\n\n\n### Transformer.buttonize()\n\nChanges \"button >\" text to buttons.\n\n### Transformer.smartquotes()\n\nApplies smart quotes to a given element.\nIt leaves `code` and `pre` blocks alone.\n\nHighlighters\n------------\n\nSyntax highlighters.\n\nYou may add or change more highlighters via the `Flatdoc.highlighters`\nobject.\n\n```js\nFlatdoc.highlighters.js = function(code) {\n};\n```\n\nEach of these functions\n\n### Highlighters.js\n\nJavaScript syntax highlighter.\n\nThanks @visionmedia!\n\nMenuView\n--------\n\nMenu view. Renders menus\n\nRunner\n------\n\nA runner module that fetches via a `fetcher` function.\n\n```js\nvar runner = new Flatdoc.runner({\n  fetcher: Flatdoc.url('readme.txt')\n});\nrunner.run();\n```\n\nThe following options are available:\n\n - `fetcher` - a function that takes a callback as an argument and\n   executes that callback when data is returned.\n\nSee: [Flatdoc.run()]\n\n### Runner#highlight()\n\nSyntax highlighting.\n\nYou may define a custom highlight function such as `highlight` from\nthe highlight.js library.\n\n```js\nFlatdoc.run({\n  highlight: function (code, value) {\n    return hljs.highlight(lang, code).value;\n  },\n  ...\n});\n```\n\n\n\n### Runner#run()\n\nLoads the Markdown document (via the fetcher), parses it, and applies it\nto the elements.\n\n### Runner#applyData()\n\nApplies given doc data `data` to elements in object `elements`.\n\n\n[Flatdoc]: #flatdoc\n[Flatdoc.run()]: #flatdoc-run\n[Flatdoc.file()]: #flatdoc-file\n[Flatdoc.github()]: #flatdoc-github\n[Flatdoc.bitbucket()]: #flatdoc-bitbucket\n[Parser]: #parser\n[Parser.parse()]: #parser-parse\n[Transformer]: #transformer\n[Transformer.mangle()]: #transformer-mangle\n[Transformer.addIDs()]: #transformer-addids\n[Transformer.getMenu()]: #transformer-getmenu\n[Transformer.buttonize()]: #transformer-buttonize\n[Transformer.smartquotes()]: #transformer-smartquotes\n[Highlighters]: #highlighters\n[Highlighters.js]: #highlighters-js\n[MenuView]: #menuview\n[Runner]: #runner\n[Runner#highlight()]: #runner-highlight\n[Runner#run()]: #runner-run\n[Runner#applyData()]: #runner-applydata\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.521484375,
          "content": "{\n  \"name\": \"flatdoc\",\n  \"main\": [\n    \"flatdoc.js\",\n    \"legacy.js\",\n    \"theme-white/script.js\",\n    \"theme-white/style.css\"\n  ],\n  \"homepage\": \"https://github.com/rstacruz/flatdoc\",\n  \"authors\": [\n    \"Rico Sta. Cruz <hi@ricostacruz.com>\"\n  ],\n  \"description\": \"Fetch Markdown files and render them as full pages.\",\n  \"moduleType\": [\n    \"globals\"\n  ],\n  \"keywords\": [\n    \"documentation\",\n    \"markdown\"\n  ],\n  \"license\": \"MIT\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\"\n  ]\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatdoc.js",
          "type": "blob",
          "size": 34.5673828125,
          "content": "/*!\n * Flatdoc - (c) 2013, 2014 Rico Sta. Cruz\n * http://ricostacruz.com/flatdoc\n * @license MIT\n */\n\n(function($) {\n  var exports = this;\n\n  var marked;\n\n  /**\n   * Basic Flatdoc module.\n   *\n   * The main entry point is `Flatdoc.run()`, which invokes the [Runner].\n   *\n   *     Flatdoc.run({\n   *       fetcher: Flatdoc.github('rstacruz/backbone-patterns');\n   *     });\n   *\n   * These fetcher functions are available:\n   *\n   *     Flatdoc.github('owner/repo')\n   *     Flatdoc.github('owner/repo', 'API.md')\n   *     Flatdoc.github('owner/repo', 'API.md', 'branch')\n   *     Flatdoc.bitbucket('owner/repo')\n   *     Flatdoc.bitbucket('owner/repo', 'API.md')\n   *     Flatdoc.bitbucket('owner/repo', 'API.md', 'branch')\n   *     Flatdoc.file('http://path/to/url')\n   *     Flatdoc.file([ 'http://path/to/url', ... ])\n   */\n\n  var Flatdoc = exports.Flatdoc = {};\n\n  /**\n   * Creates a runner.\n   * See [Flatdoc].\n   */\n\n  Flatdoc.run = function(options) {\n    $(function() { (new Flatdoc.runner(options)).run(); });\n  };\n\n  /**\n   * File fetcher function.\n   *\n   * Fetches a given `url` via AJAX.\n   * See [Runner#run()] for a description of fetcher functions.\n   */\n\n  Flatdoc.file = function(url) {\n    function loadData(locations, response, callback) {\n      if (locations.length === 0) callback(null, response);\n\n      else $.get(locations.shift())\n        .fail(function(e) {\n          callback(e, null);\n        })\n        .done(function (data) {\n          if (response.length > 0) response += '\\n\\n';\n          response += data;\n          loadData(locations, response, callback);\n        });\n    }\n\n    return function(callback) {\n      loadData(url instanceof Array ?\n        url : [url], '', callback);\n    };\n  };\n\n  /**\n   * Github fetcher.\n   * Fetches from repo `repo` (in format 'user/repo').\n   *\n   * If the parameter `filepath` is supplied, it fetches the contents of that\n   * given file in the repo's default branch. To fetch the contents of\n   * `filepath` from a different branch, the parameter `ref` should be\n   * supplied with the target branch name.\n   *\n   * See [Runner#run()] for a description of fetcher functions.\n   *\n   * See: http://developer.github.com/v3/repos/contents/\n   */\n  Flatdoc.github = function(opts) {\n    if (typeof opts === 'string') {\n      opts = {\n        repo: arguments[0],\n        filepath: arguments[1]\n      };\n    }\n    var url;\n    if (opts.filepath) {\n      url = 'https://api.github.com/repos/'+opts.repo+'/contents/'+opts.filepath;\n    } else {\n      url = 'https://api.github.com/repos/'+opts.repo+'/readme';\n    }\n    var data = {};\n    if (opts.token) {\n      data.access_token = opts.token;\n    }\n    if (opts.ref) {\n      data.ref = opts.ref;\n    }\n    return function(callback) {\n      $.get(url, data)\n        .fail(function(e) { callback(e, null); })\n        .done(function(data) {\n          var markdown = exports.Base64.decode(data.content);\n          callback(null, markdown);\n        });\n    };\n  };\n\n  /**\n   * Bitbucket fetcher.\n   * Fetches from repo `repo` (in format 'user/repo').\n   *\n   * If the parameter `filepath` is supplied, it fetches the contents of that\n   * given file in the repo.\n   *\n   * See [Runner#run()] for a description of fetcher functions.\n   *\n   * See: https://confluence.atlassian.com/display/BITBUCKET/src+Resources#srcResources-GETrawcontentofanindividualfile\n   * See: http://ben.onfabrik.com/posts/embed-bitbucket-source-code-on-your-website\n   * Bitbucket appears to have stricter restrictions on\n   * Access-Control-Allow-Origin, and so the method here is a bit\n   * more complicated than for Github\n   *\n   * If you don't pass a branch name, then 'default' for Hg repos is assumed\n   * For git, you should pass 'master'. In both cases, you should also be able\n   * to pass in a revision number here -- in Mercurial, this also includes\n   * things like 'tip' or the repo-local integer revision number\n   * Default to Mercurial because Git users historically tend to use GitHub\n   */\n  Flatdoc.bitbucket = function(opts) {\n    if (typeof opts === 'string') {\n      opts = {\n        repo: arguments[0],\n        filepath: arguments[1],\n        branch: arguments[2]\n      };\n    }\n    if (!opts.filepath) opts.filepath = 'readme.md';\n    if (!opts.branch) opts.branch = 'default';\n\n    var url = 'https://bitbucket.org/api/1.0/repositories/'+opts.repo+'/src/'+opts.branch+'/'+opts.filepath;\n\n   return function(callback) {\n     $.ajax({\n      url: url,\n      dataType: 'jsonp',\n      error: function(xhr, status, error) {\n        alert(error);\n      },\n      success: function(response) {\n        var markdown = response.data;\n        callback(null, markdown);\n      }\n  });\n};\n};\n\n  /**\n   * Parser module.\n   * Parses a given Markdown document and returns a JSON object with data\n   * on the Markdown document.\n   *\n   *     var data = Flatdoc.parser.parse('markdown source here');\n   *     console.log(data);\n   *\n   *     data == {\n   *       title: 'My Project',\n   *       content: '<p>This project is a...',\n   *       menu: {...}\n   *     }\n   */\n\n  var Parser = Flatdoc.parser = {};\n\n  /**\n   * Parses a given Markdown document.\n   * See `Parser` for more info.\n   */\n  Parser.parse = function(source, highlight) {\n    marked = exports.marked;\n\n    Parser.setMarkedOptions(highlight);\n\n    var html = $(\"<div>\" + marked(source));\n    var h1 = html.find('h1').eq(0);\n    var title = h1.text();\n\n    // Mangle content\n    Transformer.mangle(html);\n    var menu = Transformer.getMenu(html);\n\n    return { title: title, content: html, menu: menu };\n  };\n\n  Parser.setMarkedOptions = function(highlight) {\n    marked.setOptions({\n      highlight: function(code, lang) {\n        if (lang) {\n          return highlight(code, lang);\n        }\n        return code;\n      }\n    });\n  };\n\n  /**\n   * Transformer module.\n   * This takes care of any HTML mangling needed.  The main entry point is\n   * `.mangle()` which applies all transformations needed.\n   *\n   *     var $content = $(\"<p>Hello there, this is a docu...\");\n   *     Flatdoc.transformer.mangle($content);\n   *\n   * If you would like to change any of the transformations, decorate any of\n   * the functions in `Flatdoc.transformer`.\n   */\n\n  var Transformer = Flatdoc.transformer = {};\n\n  /**\n   * Takes a given HTML `$content` and improves the markup of it by executing\n   * the transformations.\n   *\n   * > See: [Transformer](#transformer)\n   */\n  Transformer.mangle = function($content) {\n    this.addIDs($content);\n    this.buttonize($content);\n    this.smartquotes($content);\n  };\n\n  /**\n   * Adds IDs to headings.\n   */\n\n  Transformer.addIDs = function($content) {\n    var slugs = ['', '', ''];\n    $content.find('h1, h2, h3').each(function() {\n      var $el = $(this);\n      var num = parseInt(this.nodeName[1]);\n      var text = $el.text();\n      var slug = Flatdoc.slugify(text);\n      if (num > 1) slug = slugs[num - 2] + '-' + slug;\n      slugs.length = num - 1;\n      slugs = slugs.concat([slug, slug]);\n      $el.attr('id', slug);\n    });\n  };\n\n  /**\n   * Returns menu data for a given HTML.\n   *\n   *     menu = Flatdoc.transformer.getMenu($content);\n   *     menu == {\n   *       level: 0,\n   *       items: [{\n   *         section: \"Getting started\",\n   *         level: 1,\n   *         items: [...]}, ...]}\n   */\n\n  Transformer.getMenu = function($content) {\n    var root = {items: [], id: '', level: 0};\n    var cache = [root];\n\n    function mkdir_p(level) {\n      cache.length = level + 1;\n      var obj = cache[level];\n      if (!obj) {\n        var parent = (level > 1) ? mkdir_p(level-1) : root;\n        obj = { items: [], level: level };\n        cache = cache.concat([obj, obj]);\n        parent.items.push(obj);\n      }\n      return obj;\n    }\n\n    $content.find('h1, h2, h3').each(function() {\n      var $el = $(this);\n      var level = +(this.nodeName.substr(1));\n\n      var parent = mkdir_p(level-1);\n\n      var obj = { section: $el.text(), items: [], level: level, id: $el.attr('id') };\n      parent.items.push(obj);\n      cache[level] = obj;\n    });\n\n    return root;\n  };\n\n  /**\n   * Changes \"button >\" text to buttons.\n   */\n\n  Transformer.buttonize = function($content) {\n    $content.find('a').each(function() {\n      var $a = $(this);\n\n      var m = $a.text().match(/^(.*) >$/);\n      if (m) $a.text(m[1]).addClass('button');\n    });\n  };\n\n  /**\n   * Applies smart quotes to a given element.\n   * It leaves `code` and `pre` blocks alone.\n   */\n\n  Transformer.smartquotes = function ($content) {\n    var nodes = getTextNodesIn($content), len = nodes.length;\n    for (var i=0; i<len; i++) {\n      var node = nodes[i];\n      node.nodeValue = quotify(node.nodeValue);\n    }\n  };\n\n  /**\n   * Syntax highlighters.\n   *\n   * You may add or change more highlighters via the `Flatdoc.highlighters`\n   * object.\n   *\n   *     Flatdoc.highlighters.js = function(code) {\n   *     };\n   *\n   * Each of these functions\n   */\n\n  var Highlighters = Flatdoc.highlighters = {};\n\n  /**\n   * JavaScript syntax highlighter.\n   *\n   * Thanks @visionmedia!\n   */\n\n  Highlighters.js = Highlighters.javascript = function(code) {\n    return code\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/(\"[^\\\"]*?\")/g, '<span class=\"string\">$1</span>')\n      .replace(/('[^\\']*?')/g, '<span class=\"string\">$1</span>')\n      .replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n      .replace(/\\/\\*(.*)\\*\\//gm, '<span class=\"comment\">/*$1*/</span>')\n      .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n      .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n      .replace(/\\bnew *(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n      .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>');\n  };\n\n  Highlighters.html = function(code) {\n    return code\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/(\"[^\\\"]*?\")/g, '<span class=\"string\">$1</span>')\n      .replace(/('[^\\']*?')/g, '<span class=\"string\">$1</span>')\n      .replace(/&lt;!--(.*)--&gt;/g, '<span class=\"comment\">&lt;!--$1--&gt;</span>')\n      .replace(/&lt;([^!][^\\s&]*)/g, '&lt;<span class=\"keyword\">$1</span>');\n  };\n\n  Highlighters.generic = function(code) {\n    return code\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/(\"[^\\\"]*?\")/g, '<span class=\"string\">$1</span>')\n      .replace(/('[^\\']*?')/g, '<span class=\"string\">$1</span>')\n      .replace(/(\\/\\/|#)(.*)/gm, '<span class=\"comment\">$1$2</span>')\n      .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n      .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>');\n  };\n\n  /**\n   * Menu view. Renders menus\n   */\n\n  var MenuView = Flatdoc.menuView = function(menu) {\n    var $el = $(\"<ul>\");\n\n    function process(node, $parent) {\n      var id = node.id || 'root';\n\n      var $li = $('<li>')\n        .attr('id', id + '-item')\n        .addClass('level-' + node.level)\n        .appendTo($parent);\n\n      if (node.section) {\n        var $a = $('<a>')\n          .html(node.section)\n          .attr('id', id + '-link')\n          .attr('href', '#' + node.id)\n          .addClass('level-' + node.level)\n          .appendTo($li);\n      }\n\n      if (node.items.length > 0) {\n        var $ul = $('<ul>')\n          .addClass('level-' + (node.level+1))\n          .attr('id', id + '-list')\n          .appendTo($li);\n\n        node.items.forEach(function(item) {\n          process(item, $ul);\n        });\n      }\n    }\n\n    process(menu, $el);\n    return $el;\n  };\n\n  /**\n   * A runner module that fetches via a `fetcher` function.\n   *\n   *     var runner = new Flatdoc.runner({\n   *       fetcher: Flatdoc.url('readme.txt')\n   *     });\n   *     runner.run();\n   *\n   * The following options are available:\n   *\n   *  - `fetcher` - a function that takes a callback as an argument and\n   *    executes that callback when data is returned.\n   *\n   * See: [Flatdoc.run()]\n   */\n\n  var Runner = Flatdoc.runner = function(options) {\n    this.initialize(options);\n  };\n\n  Runner.prototype.root    = '[role~=\"flatdoc\"]';\n  Runner.prototype.menu    = '[role~=\"flatdoc-menu\"]';\n  Runner.prototype.title   = '[role~=\"flatdoc-title\"]';\n  Runner.prototype.content = '[role~=\"flatdoc-content\"]';\n\n  Runner.prototype.initialize = function(options) {\n    $.extend(this, options);\n  };\n\n  /**\n   * Syntax highlighting.\n   *\n   * You may define a custom highlight function such as `highlight` from\n   * the highlight.js library.\n   *\n   *     Flatdoc.run({\n   *       highlight: function (code, value) {\n   *         return hljs.highlight(lang, code).value;\n   *       },\n   *       ...\n   *     });\n   *\n   */\n\n  Runner.prototype.highlight = function(code, lang) {\n    var fn = Flatdoc.highlighters[lang] || Flatdoc.highlighters.generic;\n    return fn(code);\n  };\n\n  /**\n   * Loads the Markdown document (via the fetcher), parses it, and applies it\n   * to the elements.\n   */\n\n  Runner.prototype.run = function() {\n    var doc = this;\n    $(doc.root).trigger('flatdoc:loading');\n    doc.fetcher(function(err, markdown) {\n      if (err) {\n        console.error('[Flatdoc] fetching Markdown data failed.', err);\n        return;\n      }\n      var data = Flatdoc.parser.parse(markdown, doc.highlight);\n      doc.applyData(data, doc);\n      var id = location.hash.substr(1);\n      if (id) {\n        var el = document.getElementById(id);\n        if (el) el.scrollIntoView(true);\n      }\n      $(doc.root).trigger('flatdoc:ready');\n    });\n  };\n\n  /**\n   * Applies given doc data `data` to elements in object `elements`.\n   */\n\n  Runner.prototype.applyData = function(data) {\n    var elements = this;\n\n    elements.el('title').html(data.title);\n    elements.el('content').html(data.content.find('>*'));\n    elements.el('menu').html(MenuView(data.menu));\n  };\n\n  /**\n   * Fetches a given element from the DOM.\n   *\n   * Returns a jQuery object.\n   * @api private\n   */\n\n  Runner.prototype.el = function(aspect) {\n    return $(this[aspect], this.root);\n  };\n\n  /*\n   * Helpers\n   */\n\n  // http://stackoverflow.com/questions/298750/how-do-i-select-text-nodes-with-jquery\n  function getTextNodesIn(el) {\n    var exclude = 'iframe,pre,code';\n    return $(el).find(':not('+exclude+')').andSelf().contents().filter(function() {\n      return this.nodeType == 3 && $(this).closest(exclude).length === 0;\n    });\n  }\n\n  // http://www.leancrew.com/all-this/2010/11/smart-quotes-in-javascript/\n  function quotify(a) {\n    a = a.replace(/(^|[\\-\\u2014\\s(\\[\"])'/g, \"$1\\u2018\");        // opening singles\n    a = a.replace(/'/g, \"\\u2019\");                              // closing singles & apostrophes\n    a = a.replace(/(^|[\\-\\u2014\\/\\[(\\u2018\\s])\"/g, \"$1\\u201c\"); // opening doubles\n    a = a.replace(/\"/g, \"\\u201d\");                              // closing doubles\n    a = a.replace(/\\.\\.\\./g, \"\\u2026\");                         // ellipses\n    a = a.replace(/--/g, \"\\u2014\");                             // em-dashes\n    return a;\n  }\n\n})(jQuery);\n\n/* jshint ignore:start */\n\n/*!\n * marked - a markdown parser\n * Copyright (c) 2011-2013, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n(function(){var t={newline:/^\\n+/,code:/^( {4}[^\\n]+\\n*)+/,fences:o,hr:/^( *[-*_]){3,} *(?:\\n+|$)/,heading:/^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,nptable:o,lheading:/^([^\\n]+)\\n *(=|-){3,} *\\n*/,blockquote:/^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+/,list:/^( *)(bull) [\\s\\S]+?(?:hr|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,html:/^ *(?:comment|closed|closing) *(?:\\n{2,}|\\s*$)/,def:/^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,table:o,paragraph:/^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,text:/^[^\\n]+/};t.bullet=/(?:[*+-]|\\d+\\.)/;t.item=/^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;t.item=l(t.item,\"gm\")(/bull/g,t.bullet)();t.list=l(t.list)(/bull/g,t.bullet)(\"hr\",/\\n+(?=(?: *[-*_]){3,} *(?:\\n+|$))/)();t._tag=\"(?!(?:\"+\"a|em|strong|small|s|cite|q|dfn|abbr|data|time|code\"+\"|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo\"+\"|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|@)\\\\b\";t.html=l(t.html)(\"comment\",/<!--[\\s\\S]*?-->/)(\"closed\",/<(tag)[\\s\\S]+?<\\/\\1>/)(\"closing\",/<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)(/tag/g,t._tag)();t.paragraph=l(t.paragraph)(\"hr\",t.hr)(\"heading\",t.heading)(\"lheading\",t.lheading)(\"blockquote\",t.blockquote)(\"tag\",\"<\"+t._tag)(\"def\",t.def)();t.normal=h({},t);t.gfm=h({},t.normal,{fences:/^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,paragraph:/^/});t.gfm.paragraph=l(t.paragraph)(\"(?!\",\"(?!\"+t.gfm.fences.source.replace(\"\\\\1\",\"\\\\2\")+\"|\")();t.tables=h({},t.gfm,{nptable:/^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,table:/^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/});function e(e){this.tokens=[];this.tokens.links={};this.options=e||a.defaults;this.rules=t.normal;if(this.options.gfm){if(this.options.tables){this.rules=t.tables}else{this.rules=t.gfm}}}e.rules=t;e.lex=function(t,n){var s=new e(n);return s.lex(t)};e.prototype.lex=function(t){t=t.replace(/\\r\\n|\\r/g,\"\\n\").replace(/\\t/g,\"    \").replace(/\\u00a0/g,\" \").replace(/\\u2424/g,\"\\n\");return this.token(t,true)};e.prototype.token=function(e,n){var e=e.replace(/^ +$/gm,\"\"),s,i,r,l,o,h,a,u,p;while(e){if(r=this.rules.newline.exec(e)){e=e.substring(r[0].length);if(r[0].length>1){this.tokens.push({type:\"space\"})}}if(r=this.rules.code.exec(e)){e=e.substring(r[0].length);r=r[0].replace(/^ {4}/gm,\"\");this.tokens.push({type:\"code\",text:!this.options.pedantic?r.replace(/\\n+$/,\"\"):r});continue}if(r=this.rules.fences.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"code\",lang:r[2],text:r[3]});continue}if(r=this.rules.heading.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"heading\",depth:r[1].length,text:r[2]});continue}if(n&&(r=this.rules.nptable.exec(e))){e=e.substring(r[0].length);h={type:\"table\",header:r[1].replace(/^ *| *\\| *$/g,\"\").split(/ *\\| */),align:r[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:r[3].replace(/\\n$/,\"\").split(\"\\n\")};for(u=0;u<h.align.length;u++){if(/^ *-+: *$/.test(h.align[u])){h.align[u]=\"right\"}else if(/^ *:-+: *$/.test(h.align[u])){h.align[u]=\"center\"}else if(/^ *:-+ *$/.test(h.align[u])){h.align[u]=\"left\"}else{h.align[u]=null}}for(u=0;u<h.cells.length;u++){h.cells[u]=h.cells[u].split(/ *\\| */)}this.tokens.push(h);continue}if(r=this.rules.lheading.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"heading\",depth:r[2]===\"=\"?1:2,text:r[1]});continue}if(r=this.rules.hr.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"hr\"});continue}if(r=this.rules.blockquote.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"blockquote_start\"});r=r[0].replace(/^ *> ?/gm,\"\");this.token(r,n);this.tokens.push({type:\"blockquote_end\"});continue}if(r=this.rules.list.exec(e)){e=e.substring(r[0].length);l=r[2];this.tokens.push({type:\"list_start\",ordered:l.length>1});r=r[0].match(this.rules.item);s=false;p=r.length;u=0;for(;u<p;u++){h=r[u];a=h.length;h=h.replace(/^ *([*+-]|\\d+\\.) +/,\"\");if(~h.indexOf(\"\\n \")){a-=h.length;h=!this.options.pedantic?h.replace(new RegExp(\"^ {1,\"+a+\"}\",\"gm\"),\"\"):h.replace(/^ {1,4}/gm,\"\")}if(this.options.smartLists&&u!==p-1){o=t.bullet.exec(r[u+1])[0];if(l!==o&&!(l.length>1&&o.length>1)){e=r.slice(u+1).join(\"\\n\")+e;u=p-1}}i=s||/\\n\\n(?!\\s*$)/.test(h);if(u!==p-1){s=h[h.length-1]===\"\\n\";if(!i)i=s}this.tokens.push({type:i?\"loose_item_start\":\"list_item_start\"});this.token(h,false);this.tokens.push({type:\"list_item_end\"})}this.tokens.push({type:\"list_end\"});continue}if(r=this.rules.html.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:this.options.sanitize?\"paragraph\":\"html\",pre:r[1]===\"pre\"||r[1]===\"script\",text:r[0]});continue}if(n&&(r=this.rules.def.exec(e))){e=e.substring(r[0].length);this.tokens.links[r[1].toLowerCase()]={href:r[2],title:r[3]};continue}if(n&&(r=this.rules.table.exec(e))){e=e.substring(r[0].length);h={type:\"table\",header:r[1].replace(/^ *| *\\| *$/g,\"\").split(/ *\\| */),align:r[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:r[3].replace(/(?: *\\| *)?\\n$/,\"\").split(\"\\n\")};for(u=0;u<h.align.length;u++){if(/^ *-+: *$/.test(h.align[u])){h.align[u]=\"right\"}else if(/^ *:-+: *$/.test(h.align[u])){h.align[u]=\"center\"}else if(/^ *:-+ *$/.test(h.align[u])){h.align[u]=\"left\"}else{h.align[u]=null}}for(u=0;u<h.cells.length;u++){h.cells[u]=h.cells[u].replace(/^ *\\| *| *\\| *$/g,\"\").split(/ *\\| */)}this.tokens.push(h);continue}if(n&&(r=this.rules.paragraph.exec(e))){e=e.substring(r[0].length);this.tokens.push({type:\"paragraph\",text:r[1][r[1].length-1]===\"\\n\"?r[1].slice(0,-1):r[1]});continue}if(r=this.rules.text.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"text\",text:r[0]});continue}if(e){throw new Error(\"Infinite loop on byte: \"+e.charCodeAt(0))}}return this.tokens};var n={escape:/^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,autolink:/^<([^ >]+(@|:\\/)[^ >]+)>/,url:o,tag:/^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,link:/^!?\\[(inside)\\]\\(href\\)/,reflink:/^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,nolink:/^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,strong:/^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,em:/^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,code:/^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,br:/^ {2,}\\n(?!\\s*$)/,del:o,text:/^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/};n._inside=/(?:\\[[^\\]]*\\]|[^\\]]|\\](?=[^\\[]*\\]))*/;n._href=/\\s*<?([^\\s]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;n.link=l(n.link)(\"inside\",n._inside)(\"href\",n._href)();n.reflink=l(n.reflink)(\"inside\",n._inside)();n.normal=h({},n);n.pedantic=h({},n.normal,{strong:/^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,em:/^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/});n.gfm=h({},n.normal,{escape:l(n.escape)(\"])\",\"~|])\")(),url:/^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,del:/^~~(?=\\S)([\\s\\S]*?\\S)~~/,text:l(n.text)(\"]|\",\"~]|\")(\"|\",\"|https?://|\")()});n.breaks=h({},n.gfm,{br:l(n.br)(\"{2,}\",\"*\")(),text:l(n.gfm.text)(\"{2,}\",\"*\")()});function s(t,e){this.options=e||a.defaults;this.links=t;this.rules=n.normal;if(!this.links){throw new Error(\"Tokens array requires a `links` property.\")}if(this.options.gfm){if(this.options.breaks){this.rules=n.breaks}else{this.rules=n.gfm}}else if(this.options.pedantic){this.rules=n.pedantic}}s.rules=n;s.output=function(t,e,n){var i=new s(e,n);return i.output(t)};s.prototype.output=function(t){var e=\"\",n,s,i,l;while(t){if(l=this.rules.escape.exec(t)){t=t.substring(l[0].length);e+=l[1];continue}if(l=this.rules.autolink.exec(t)){t=t.substring(l[0].length);if(l[2]===\"@\"){s=l[1][6]===\":\"?this.mangle(l[1].substring(7)):this.mangle(l[1]);i=this.mangle(\"mailto:\")+s}else{s=r(l[1]);i=s}e+='<a href=\"'+i+'\">'+s+\"</a>\";continue}if(l=this.rules.url.exec(t)){t=t.substring(l[0].length);s=r(l[1]);i=s;e+='<a href=\"'+i+'\">'+s+\"</a>\";continue}if(l=this.rules.tag.exec(t)){t=t.substring(l[0].length);e+=this.options.sanitize?r(l[0]):l[0];continue}if(l=this.rules.link.exec(t)){t=t.substring(l[0].length);e+=this.outputLink(l,{href:l[2],title:l[3]});continue}if((l=this.rules.reflink.exec(t))||(l=this.rules.nolink.exec(t))){t=t.substring(l[0].length);n=(l[2]||l[1]).replace(/\\s+/g,\" \");n=this.links[n.toLowerCase()];if(!n||!n.href){e+=l[0][0];t=l[0].substring(1)+t;continue}e+=this.outputLink(l,n);continue}if(l=this.rules.strong.exec(t)){t=t.substring(l[0].length);e+=\"<strong>\"+this.output(l[2]||l[1])+\"</strong>\";continue}if(l=this.rules.em.exec(t)){t=t.substring(l[0].length);e+=\"<em>\"+this.output(l[2]||l[1])+\"</em>\";continue}if(l=this.rules.code.exec(t)){t=t.substring(l[0].length);e+=\"<code>\"+r(l[2],true)+\"</code>\";continue}if(l=this.rules.br.exec(t)){t=t.substring(l[0].length);e+=\"<br>\";continue}if(l=this.rules.del.exec(t)){t=t.substring(l[0].length);e+=\"<del>\"+this.output(l[1])+\"</del>\";continue}if(l=this.rules.text.exec(t)){t=t.substring(l[0].length);e+=r(l[0]);continue}if(t){throw new Error(\"Infinite loop on byte: \"+t.charCodeAt(0))}}return e};s.prototype.outputLink=function(t,e){if(t[0][0]!==\"!\"){return'<a href=\"'+r(e.href)+'\"'+(e.title?' title=\"'+r(e.title)+'\"':\"\")+\">\"+this.output(t[1])+\"</a>\"}else{return'<img src=\"'+r(e.href)+'\" alt=\"'+r(t[1])+'\"'+(e.title?' title=\"'+r(e.title)+'\"':\"\")+\">\"}};s.prototype.smartypants=function(t){if(!this.options.smartypants)return t;return t.replace(/--/g,\"—\").replace(/'([^']*)'/g,\"‘$1’\").replace(/\"([^\"]*)\"/g,\"“$1”\").replace(/\\.{3}/g,\"…\")};s.prototype.mangle=function(t){var e=\"\",n=t.length,s=0,i;for(;s<n;s++){i=t.charCodeAt(s);if(Math.random()>.5){i=\"x\"+i.toString(16)}e+=\"&#\"+i+\";\"}return e};function i(t){this.tokens=[];this.token=null;this.options=t||a.defaults}i.parse=function(t,e){var n=new i(e);return n.parse(t)};i.prototype.parse=function(t){this.inline=new s(t.links,this.options);this.tokens=t.reverse();var e=\"\";while(this.next()){e+=this.tok()}return e};i.prototype.next=function(){return this.token=this.tokens.pop()};i.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0};i.prototype.parseText=function(){var t=this.token.text;while(this.peek().type===\"text\"){t+=\"\\n\"+this.next().text}return this.inline.output(t)};i.prototype.tok=function(){switch(this.token.type){case\"space\":{return\"\"}case\"hr\":{return\"<hr>\\n\"}case\"heading\":{return\"<h\"+this.token.depth+\">\"+this.inline.output(this.token.text)+\"</h\"+this.token.depth+\">\\n\"}case\"code\":{if(this.options.highlight){var t=this.options.highlight(this.token.text,this.token.lang);if(t!=null&&t!==this.token.text){this.token.escaped=true;this.token.text=t}}if(!this.token.escaped){this.token.text=r(this.token.text,true)}return\"<pre><code\"+(this.token.lang?' class=\"'+this.options.langPrefix+this.token.lang+'\"':\"\")+\">\"+this.token.text+\"</code></pre>\\n\"}case\"table\":{var e=\"\",n,s,i,l,o;e+=\"<thead>\\n<tr>\\n\";for(s=0;s<this.token.header.length;s++){n=this.inline.output(this.token.header[s]);e+=this.token.align[s]?'<th align=\"'+this.token.align[s]+'\">'+n+\"</th>\\n\":\"<th>\"+n+\"</th>\\n\"}e+=\"</tr>\\n</thead>\\n\";e+=\"<tbody>\\n\";for(s=0;s<this.token.cells.length;s++){i=this.token.cells[s];e+=\"<tr>\\n\";for(o=0;o<i.length;o++){l=this.inline.output(i[o]);e+=this.token.align[o]?'<td align=\"'+this.token.align[o]+'\">'+l+\"</td>\\n\":\"<td>\"+l+\"</td>\\n\"}e+=\"</tr>\\n\"}e+=\"</tbody>\\n\";return\"<table>\\n\"+e+\"</table>\\n\"}case\"blockquote_start\":{var e=\"\";while(this.next().type!==\"blockquote_end\"){e+=this.tok()}return\"<blockquote>\\n\"+e+\"</blockquote>\\n\"}case\"list_start\":{var h=this.token.ordered?\"ol\":\"ul\",e=\"\";while(this.next().type!==\"list_end\"){e+=this.tok()}return\"<\"+h+\">\\n\"+e+\"</\"+h+\">\\n\"}case\"list_item_start\":{var e=\"\";while(this.next().type!==\"list_item_end\"){e+=this.token.type===\"text\"?this.parseText():this.tok()}return\"<li>\"+e+\"</li>\\n\"}case\"loose_item_start\":{var e=\"\";while(this.next().type!==\"list_item_end\"){e+=this.tok()}return\"<li>\"+e+\"</li>\\n\"}case\"html\":{return!this.token.pre&&!this.options.pedantic?this.inline.output(this.token.text):this.token.text}case\"paragraph\":{return\"<p>\"+this.inline.output(this.token.text)+\"</p>\\n\"}case\"text\":{return\"<p>\"+this.parseText()+\"</p>\\n\"}}};function r(t,e){return t.replace(!e?/&(?!#?\\w+;)/g:/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#39;\")}function l(t,e){t=t.source;e=e||\"\";return function n(s,i){if(!s)return new RegExp(t,e);i=i.source||i;i=i.replace(/(^|[^\\[])\\^/g,\"$1\");t=t.replace(s,i);return n}}function o(){}o.exec=o;function h(t){var e=1,n,s;for(;e<arguments.length;e++){n=arguments[e];for(s in n){if(Object.prototype.hasOwnProperty.call(n,s)){t[s]=n[s]}}}return t}function a(t,n,s){if(s||typeof n===\"function\"){if(!s){s=n;n=null}if(n)n=h({},a.defaults,n);var l=e.lex(l,n),o=n.highlight,u=0,p=l.length,g=0;if(!o||o.length<3){return s(null,i.parse(l,n))}var c=function(){delete n.highlight;var t=i.parse(l,n);n.highlight=o;return s(null,t)};for(;g<p;g++){(function(t){if(t.type!==\"code\")return;u++;return o(t.text,t.lang,function(e,n){if(n==null||n===t.text){return--u||c()}t.text=n;t.escaped=true;--u||c()})})(l[g])}return}try{if(n)n=h({},a.defaults,n);return i.parse(e.lex(t,n),n)}catch(f){f.message+=\"\\nPlease report this to https://github.com/chjj/marked.\";if((n||a.defaults).silent){return\"<p>An error occured:</p><pre>\"+r(f.message+\"\",true)+\"</pre>\"}throw f}}a.options=a.setOptions=function(t){h(a.defaults,t);return a};a.defaults={gfm:true,tables:true,breaks:false,pedantic:false,sanitize:false,smartLists:false,silent:false,highlight:null,langPrefix:\"lang-\"};a.Parser=i;a.parser=i.parse;a.Lexer=e;a.lexer=e.lex;a.InlineLexer=s;a.inlineLexer=s.output;a.parse=a;if(typeof exports===\"object\"){module.exports=a}else if(typeof define===\"function\"&&define.amd){define(function(){return a})}else{this.marked=a}}).call(function(){return this||(typeof window!==\"undefined\"?window:global)}());\n\n/*!\n * base64.js\n * http://github.com/dankogai/js-base64\n */\n\n(function(r){\"use strict\";if(r.Base64)return;var e=\"2.1.2\";var t;if(typeof module!==\"undefined\"&&module.exports){t=require(\"buffer\").Buffer}var n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";var a=function(r){var e={};for(var t=0,n=r.length;t<n;t++)e[r.charAt(t)]=t;return e}(n);var o=String.fromCharCode;var u=function(r){if(r.length<2){var e=r.charCodeAt(0);return e<128?r:e<2048?o(192|e>>>6)+o(128|e&63):o(224|e>>>12&15)+o(128|e>>>6&63)+o(128|e&63)}else{var e=65536+(r.charCodeAt(0)-55296)*1024+(r.charCodeAt(1)-56320);return o(240|e>>>18&7)+o(128|e>>>12&63)+o(128|e>>>6&63)+o(128|e&63)}};var c=/[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;var i=function(r){return r.replace(c,u)};var f=function(r){var e=[0,2,1][r.length%3],t=r.charCodeAt(0)<<16|(r.length>1?r.charCodeAt(1):0)<<8|(r.length>2?r.charCodeAt(2):0),a=[n.charAt(t>>>18),n.charAt(t>>>12&63),e>=2?\"=\":n.charAt(t>>>6&63),e>=1?\"=\":n.charAt(t&63)];return a.join(\"\")};var h=r.btoa||function(r){return r.replace(/[\\s\\S]{1,3}/g,f)};var d=t?function(r){return new t(r).toString(\"base64\")}:function(r){return h(i(r))};var v=function(r,e){return!e?d(r):d(r).replace(/[+\\/]/g,function(r){return r==\"+\"?\"-\":\"_\"}).replace(/=/g,\"\")};var g=function(r){return v(r,true)};var l=new RegExp([\"[À-ß][-¿]\",\"[à-ï][-¿]{2}\",\"[ð-÷][-¿]{3}\"].join(\"|\"),\"g\");var A=function(r){switch(r.length){case 4:var e=(7&r.charCodeAt(0))<<18|(63&r.charCodeAt(1))<<12|(63&r.charCodeAt(2))<<6|63&r.charCodeAt(3),t=e-65536;return o((t>>>10)+55296)+o((t&1023)+56320);case 3:return o((15&r.charCodeAt(0))<<12|(63&r.charCodeAt(1))<<6|63&r.charCodeAt(2));default:return o((31&r.charCodeAt(0))<<6|63&r.charCodeAt(1))}};var s=function(r){return r.replace(l,A)};var p=function(r){var e=r.length,t=e%4,n=(e>0?a[r.charAt(0)]<<18:0)|(e>1?a[r.charAt(1)]<<12:0)|(e>2?a[r.charAt(2)]<<6:0)|(e>3?a[r.charAt(3)]:0),u=[o(n>>>16),o(n>>>8&255),o(n&255)];u.length-=[0,0,2,1][t];return u.join(\"\")};var C=r.atob||function(r){return r.replace(/[\\s\\S]{1,4}/g,p)};var b=t?function(r){return new t(r,\"base64\").toString()}:function(r){return s(C(r))};var B=function(r){return b(r.replace(/[-_]/g,function(r){return r==\"-\"?\"+\":\"/\"}).replace(/[^A-Za-z0-9\\+\\/]/g,\"\"))};r.Base64={VERSION:e,atob:C,btoa:h,fromBase64:B,toBase64:v,utob:i,encode:v,encodeURI:g,btou:s,decode:B};if(typeof Object.defineProperty===\"function\"){var S=function(r){return{value:r,enumerable:false,writable:true,configurable:true}};r.Base64.extendString=function(){Object.defineProperty(String.prototype,\"fromBase64\",S(function(){return B(this)}));Object.defineProperty(String.prototype,\"toBase64\",S(function(r){return v(this,r)}));Object.defineProperty(String.prototype,\"toBase64URI\",S(function(){return v(this,true)}))}}})(this);\n\n/*!\n * node-parameterize 0.0.7\n * https://github.com/fyalavuz/node-parameterize\n * Exported as `Flatdoc.slugify`\n */\n\n(function(r){var LATIN_MAP={\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ő\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ű\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ő\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ű\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\"};var LATIN_SYMBOLS_MAP={\"©\":\"(c)\"};var GREEK_MAP={\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ά\":\"a\",\"έ\":\"e\",\"ί\":\"i\",\"ό\":\"o\",\"ύ\":\"y\",\"ή\":\"h\",\"ώ\":\"w\",\"ς\":\"s\",\"ϊ\":\"i\",\"ΰ\":\"y\",\"ϋ\":\"y\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ή\":\"H\",\"Ώ\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\"};var TURKISH_MAP={\"ş\":\"s\",\"Ş\":\"S\",\"ı\":\"i\",\"İ\":\"I\",\"ç\":\"c\",\"Ç\":\"C\",\"ü\":\"u\",\"Ü\":\"U\",\"ö\":\"o\",\"Ö\":\"O\",\"ğ\":\"g\",\"Ğ\":\"G\"};var RUSSIAN_MAP={\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ё\":\"yo\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ё\":\"Yo\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\"};var UKRAINIAN_MAP={\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ґ\":\"G\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ґ\":\"g\"};var CZECH_MAP={\"č\":\"c\",\"ď\":\"d\",\"ě\":\"e\",\"ň\":\"n\",\"ř\":\"r\",\"š\":\"s\",\"ť\":\"t\",\"ů\":\"u\",\"ž\":\"z\",\"Č\":\"C\",\"Ď\":\"D\",\"Ě\":\"E\",\"Ň\":\"N\",\"Ř\":\"R\",\"Š\":\"S\",\"Ť\":\"T\",\"Ů\":\"U\",\"Ž\":\"Z\"};var POLISH_MAP={\"ą\":\"a\",\"ć\":\"c\",\"ę\":\"e\",\"ł\":\"l\",\"ń\":\"n\",\"ó\":\"o\",\"ś\":\"s\",\"ź\":\"z\",\"ż\":\"z\",\"Ą\":\"A\",\"Ć\":\"C\",\"Ę\":\"e\",\"Ł\":\"L\",\"Ń\":\"N\",\"Ó\":\"o\",\"Ś\":\"S\",\"Ź\":\"Z\",\"Ż\":\"Z\"};var LATVIAN_MAP={\"ā\":\"a\",\"č\":\"c\",\"ē\":\"e\",\"ģ\":\"g\",\"ī\":\"i\",\"ķ\":\"k\",\"ļ\":\"l\",\"ņ\":\"n\",\"š\":\"s\",\"ū\":\"u\",\"ž\":\"z\",\"Ā\":\"A\",\"Č\":\"C\",\"Ē\":\"E\",\"Ģ\":\"G\",\"Ī\":\"i\",\"Ķ\":\"k\",\"Ļ\":\"L\",\"Ņ\":\"N\",\"Š\":\"S\",\"Ū\":\"u\",\"Ž\":\"Z\"};var ALL_DOWNCODE_MAPS=new Array;ALL_DOWNCODE_MAPS[0]=LATIN_MAP;ALL_DOWNCODE_MAPS[1]=LATIN_SYMBOLS_MAP;ALL_DOWNCODE_MAPS[2]=GREEK_MAP;ALL_DOWNCODE_MAPS[3]=TURKISH_MAP;ALL_DOWNCODE_MAPS[4]=RUSSIAN_MAP;ALL_DOWNCODE_MAPS[5]=UKRAINIAN_MAP;ALL_DOWNCODE_MAPS[6]=CZECH_MAP;ALL_DOWNCODE_MAPS[7]=POLISH_MAP;ALL_DOWNCODE_MAPS[8]=LATVIAN_MAP;var Downcoder=new Object;Downcoder.Initialize=function(){if(Downcoder.map)return;Downcoder.map={};Downcoder.chars=\"\";for(var i in ALL_DOWNCODE_MAPS){var lookup=ALL_DOWNCODE_MAPS[i];for(var c in lookup){Downcoder.map[c]=lookup[c];Downcoder.chars+=c}}Downcoder.regex=new RegExp(\"[\"+Downcoder.chars+\"]|[^\"+Downcoder.chars+\"]+\",\"g\")};downcode=function(slug){Downcoder.Initialize();var downcoded=\"\";var pieces=slug.match(Downcoder.regex);if(pieces){for(var i=0;i<pieces.length;i++){if(pieces[i].length==1){var mapped=Downcoder.map[pieces[i]];if(mapped!=null){downcoded+=mapped;continue}}downcoded+=pieces[i]}}else{downcoded=slug}return downcoded};Flatdoc.slugify=function(s,num_chars){s=downcode(s);s=s.replace(/[^-\\w\\s]/g,\"\");s=s.replace(/^\\s+|\\s+$/g,\"\");s=s.replace(/[-\\s]+/g,\"-\");s=s.toLowerCase();return s.substring(0,num_chars)};})();\n\n/* jshint ignore:end */\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 4.4287109375,
          "content": "<!doctype html>\n<html>\n<head>\n  <meta charset='utf-8'>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n\n  <title>Flatdoc</title>\n\n  <!-- Flatdoc -->\n  <script src='support/vendor/jquery.js'></script>\n  <script src='legacy.js'></script>\n  <script src='flatdoc.js?94850'></script>\n\n  <!-- Flatdoc theme -->\n  <link  href='theme-white/style.css?94850' rel='stylesheet'>\n  <script src='theme-white/script.js?94850'></script>\n  <link  href='support/theme.css?94850' rel='stylesheet'>\n  <script src='support/theme.js?94850'></script>\n\n  <!-- Initializer -->\n  <script>\n    Flatdoc.run({\n      fetcher: Flatdoc.file('Readme.md')\n    });\n  </script>\n\n  <!-- Meta -->\n  <meta content=\"Flatdoc\" property=\"og:site_name\">\n  <meta content=\"Flatdoc\" property=\"og:title\">\n  <meta content=\"website\" property=\"og:type\">\n  <meta content=\"Flatdoc is the fastest way to create a site for your open source project.\" name=\"description\">\n  <meta content=\"Flatdoc is the fastest way to create a site for your open source project.\" property=\"og:description\">\n  <meta content=\"http://ricostacruz.com/flatdoc/support/preview.jpg\" property=\"og:image\">\n\n  <!-- Analytics -->\n  <script>if (location.hostname.match(/ricostacruz\\.com/)){var _gaq=_gaq||[];_gaq.push([\"_setAccount\",\"UA-20473929-1\"]);_gaq.push([\"_trackPageview\"]);!function(){var ga=document.createElement(\"script\");ga.type=\"text/javascript\";ga.async=true;ga.src=(\"https:\"==document.location.protocol?\"https://ssl\":\"http://www\")+\".google-analytics.com/ga.js\";var s=document.getElementsByTagName(\"script\")[0];s.parentNode.insertBefore(ga,s)}();}</script>\n</head>\n<body role='flatdoc' class='big-h3 large-brief'>\n\n  <div class='title-area title-card' style='background-image: url(support/blur.jpg)'>\n    <div class='in'>\n      <div class='headline'>\n        <h1>Documentation is easy.</h1>\n        <p>Flatdoc is the fastest way to create a site for your open source project.</p>\n        <h5><span>Flatdoc</span></h5>\n      </div>\n    </div>\n  </div>\n\n  <div class='header'>\n    <div class='left'>\n      <h1><a href='.'>Flatdoc</a></h1>\n      <ul>\n        <li><a href='https://github.com/rstacruz/flatdoc'>View on GitHub</a></li>\n        <li><a href='https://github.com/rstacruz/flatdoc/issues'>Issues</a></li>\n        <li><a href='reference.html'>API reference</a></li>\n      </ul>\n    </div>\n    <div class='right'>\n      <iframe src=\"http://ghbtns.com/github-btn.html?user=rstacruz&amp;type=follow&amp;count=true\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"170\" height=\"20\"></iframe>\n      <iframe src=\"http://ghbtns.com/github-btn.html?user=rstacruz&amp;repo=flatdoc&amp;type=watch&amp;count=true\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"110\" height=\"20\"></iframe>\n    </div>\n  </div>\n\n  <div class='content-root'>\n    <div class='menubar'>\n      <div class='section'>\n        <a class='big button' href='https://raw.github.com/rstacruz/flatdoc/gh-pages/templates/template.html' target='_blank'>Download</a>\n        <!-- <a href='https://github.com/rstacruz/flatdoc' target='_blank'>View in GitHub</a> -->\n      </div>\n      <div class='menu section' role='flatdoc-menu'></div>\n      <div class='bottom section'>\n        <iframe src='http://ghbtns.com/github-btn.html?user=rstacruz&amp;repo=flatdoc&amp;type=watch&amp;count=true' allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"170\" height=\"20\"></iframe>\n        <br>\n        <a href=\"https://news.ycombinator.com/submit\" class=\"hn-button\" data-title=\"Flatdoc is the fastest way to create a site for your open source project\" data-url=\"http://ricostacruz.com/flatdoc/\" data-count=\"horizontal\" data-style=\"twitter\">HN</a>\n        <br>\n        <a href='https://github.com/rstacruz/flatdoc'>View on GitHub</a><br>\n        <a href='https://raw.github.com/rstacruz/flatdoc/gh-pages/Readme.md' target='_blank'>See .md source</a>\n      </div>\n    </div>\n    <div role='flatdoc-content' class='content'></div>\n  </div>\n\n  <script>var HN=[];HN.factory=function(e){return function(){HN.push([e].concat(Array.prototype.slice.call(arguments,0)))};},HN.on=HN.factory(\"on\"),HN.once=HN.factory(\"once\"),HN.off=HN.factory(\"off\"),HN.emit=HN.factory(\"emit\"),HN.load=function(){var e=\"hn-button.js\";if(document.getElementById(e))return;var t=document.createElement(\"script\");t.id=e,t.src=\"//hn-button.herokuapp.com/hn-button.js\";var n=document.getElementsByTagName(\"script\")[0];n.parentNode.insertBefore(t,n)},HN.load();</script>\n</body>\n</html>\n"
        },
        {
          "name": "legacy.js",
          "type": "blob",
          "size": 12.2138671875,
          "content": "/*!\n\nSupport JS for legacy browsers.\nIncludes:\n\n  HTML5 Shiv\n    @afarkas @jdalton @jon_neal @rem\n    MIT/GPL2 Licensed\n    https://github.com/aFarkas/html5shiv\n\n  matchMedia() polyfill\n    (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license\n\n  Respond.js\n    min/max-width media query polyfill\n    (c) Scott Jehl. MIT/GPLv2 Lic.\n    http://j.mp/respondjs\n\n*/\n/*\n HTML5 Shiv v3.6.2 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n*/\n(function(l,f){function m(){var a=e.elements;return\"string\"==typeof a?a.split(\" \"):a}function i(a){var b=n[a[o]];b||(b={},h++,a[o]=h,n[h]=b);return b}function p(a,b,c){b||(b=f);if(g)return b.createElement(a);c||(c=i(b));b=c.cache[a]?c.cache[a].cloneNode():r.test(a)?(c.cache[a]=c.createElem(a)).cloneNode():c.createElem(a);return b.canHaveChildren&&!s.test(a)?c.frag.appendChild(b):b}function t(a,b){if(!b.cache)b.cache={},b.createElem=a.createElement,b.createFrag=a.createDocumentFragment,b.frag=b.createFrag();\na.createElement=function(c){return!e.shivMethods?b.createElem(c):p(c,a,b)};a.createDocumentFragment=Function(\"h,f\",\"return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(\"+m().join().replace(/\\w+/g,function(a){b.createElem(a);b.frag.createElement(a);return'c(\"'+a+'\")'})+\");return n}\")(e,b.frag)}function q(a){a||(a=f);var b=i(a);if(e.shivCSS&&!j&&!b.hasCSS){var c,d=a;c=d.createElement(\"p\");d=d.getElementsByTagName(\"head\")[0]||d.documentElement;c.innerHTML=\"x<style>article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}</style>\";\nc=d.insertBefore(c.lastChild,d.firstChild);b.hasCSS=!!c}g||t(a,b);return a}var k=l.html5||{},s=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,r=/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,j,o=\"_html5shiv\",h=0,n={},g;(function(){try{var a=f.createElement(\"a\");a.innerHTML=\"<xyz></xyz>\";j=\"hidden\"in a;var b;if(!(b=1==a.childNodes.length)){f.createElement(\"a\");var c=f.createDocumentFragment();b=\"undefined\"==typeof c.cloneNode||\n\"undefined\"==typeof c.createDocumentFragment||\"undefined\"==typeof c.createElement}g=b}catch(d){g=j=!0}})();var e={elements:k.elements||\"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup main mark meter nav output progress section summary time video\",version:\"3.6.2\",shivCSS:!1!==k.shivCSS,supportsUnknownElements:g,shivMethods:!1!==k.shivMethods,type:\"default\",shivDocument:q,createElement:p,createDocumentFragment:function(a,b){a||(a=f);if(g)return a.createDocumentFragment();\nfor(var b=b||i(a),c=b.frag.cloneNode(),d=0,e=m(),h=e.length;d<h;d++)c.createElement(e[d]);return c}};l.html5=e;q(f)})(this,document);\n/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\n\nwindow.matchMedia = window.matchMedia || (function( doc, undefined ) {\n\n  \"use strict\";\n\n  var bool,\n      docElem = doc.documentElement,\n      refNode = docElem.firstElementChild || docElem.firstChild,\n      // fakeBody required for <FF4 when executed in <head>\n      fakeBody = doc.createElement( \"body\" ),\n      div = doc.createElement( \"div\" );\n\n  div.id = \"mq-test-1\";\n  div.style.cssText = \"position:absolute;top:-100em\";\n  fakeBody.style.background = \"none\";\n  fakeBody.appendChild(div);\n\n  return function(q){\n\n    div.innerHTML = \"&shy;<style media=\\\"\" + q + \"\\\"> #mq-test-1 { width: 42px; }</style>\";\n\n    docElem.insertBefore( fakeBody, refNode );\n    bool = div.offsetWidth === 42;\n    docElem.removeChild( fakeBody );\n\n    return {\n      matches: bool,\n      media: q\n    };\n\n  };\n\n}( document ));\n\n\n\n\n\n/*! Respond.js v1.1.0: min/max-width media query polyfill. (c) Scott Jehl. MIT/GPLv2 Lic. j.mp/respondjs  */\n(function( win ){\n\n\t\"use strict\";\n\n\t//exposed namespace\n\tvar respond = {};\n\twin.respond = respond;\n\t\n\t//define update even in native-mq-supporting browsers, to avoid errors\n\trespond.update = function(){};\n\t\n\t//expose media query support flag for external use\n\trespond.mediaQueriesSupported\t= win.matchMedia && win.matchMedia( \"only all\" ).matches;\n\t\n\t//if media queries are supported, exit here\n\tif( respond.mediaQueriesSupported ){\n\t\treturn;\n\t}\n\t\n\t//define vars\n\tvar doc = win.document,\n\t\tdocElem = doc.documentElement,\n\t\tmediastyles = [],\n\t\trules = [],\n\t\tappendedEls = [],\n\t\tparsedSheets = {},\n\t\tresizeThrottle = 30,\n\t\thead = doc.getElementsByTagName( \"head\" )[0] || docElem,\n\t\tbase = doc.getElementsByTagName( \"base\" )[0],\n\t\tlinks = head.getElementsByTagName( \"link\" ),\n\t\trequestQueue = [],\n\t\t\n\t\t//loop stylesheets, send text content to translate\n\t\tripCSS = function(){\n\n\t\t\tfor( var i = 0; i < links.length; i++ ){\n\t\t\t\tvar sheet = links[ i ],\n\t\t\t\thref = sheet.href,\n\t\t\t\tmedia = sheet.media,\n\t\t\t\tisCSS = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\n\n\t\t\t\t//only links plz and prevent re-parsing\n\t\t\t\tif( !!href && isCSS && !parsedSheets[ href ] ){\n\t\t\t\t\t// selectivizr exposes css through the rawCssText expando\n\t\t\t\t\tif (sheet.styleSheet && sheet.styleSheet.rawCssText) {\n\t\t\t\t\t\ttranslate( sheet.styleSheet.rawCssText, href, media );\n\t\t\t\t\t\tparsedSheets[ href ] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( (!/^([a-zA-Z:]*\\/\\/)/.test( href ) && !base) ||\n\t\t\t\t\t\t\thref.replace( RegExp.$1, \"\" ).split( \"/\" )[0] === win.location.host ){\n\t\t\t\t\t\t\trequestQueue.push( {\n\t\t\t\t\t\t\t\thref: href,\n\t\t\t\t\t\t\t\tmedia: media\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tmakeRequests();\n\t\t},\n\t\t\n\t\t//recurse through request queue, get css text\n\t\tmakeRequests\t= function(){\n\t\t\tif( requestQueue.length ){\n\t\t\t\tvar thisRequest = requestQueue.shift();\n\t\t\t\t\n\t\t\t\tajax( thisRequest.href, function( styles ){\n\t\t\t\t\ttranslate( styles, thisRequest.href, thisRequest.media );\n\t\t\t\t\tparsedSheets[ thisRequest.href ] = true;\n\n\t\t\t\t\t// by wrapping recursive function call in setTimeout \n\t\t\t\t\t// we prevent \"Stack overflow\" error in IE7\n\t\t\t\t\twin.setTimeout(function(){ makeRequests(); },0);\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t\n\t\t//find media blocks in css text, convert to style blocks\n\t\ttranslate = function( styles, href, media ){\n\t\t\tvar qs = styles.match(  /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi ),\n\t\t\t\tql = qs && qs.length || 0;\n\n\t\t\t//try to get CSS path\n\t\t\thref = href.substring( 0, href.lastIndexOf( \"/\" ) );\n\n\t\t\tvar repUrls\t= function( css ){\n\t\t\t\t\treturn css.replace( /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g, \"$1\" + href + \"$2$3\" );\n\t\t\t\t},\n\t\t\t\tuseMedia = !ql && media;\n\n\t\t\t//if path exists, tack on trailing slash\n\t\t\tif( href.length ){ href += \"/\"; }\t\n\t\t\t\t\n\t\t\t//if no internal queries exist, but media attr does, use that\t\n\t\t\t//note: this currently lacks support for situations where a media attr is specified on a link AND\n\t\t\t\t//its associated stylesheet has internal CSS media queries.\n\t\t\t\t//In those cases, the media attribute will currently be ignored.\n\t\t\tif( useMedia ){\n\t\t\t\tql = 1;\n\t\t\t}\n\n\t\t\tfor( var i = 0; i < ql; i++ ){\n\t\t\t\tvar fullq, thisq, eachq, eql;\n\n\t\t\t\t//media attr\n\t\t\t\tif( useMedia ){\n\t\t\t\t\tfullq = media;\n\t\t\t\t\trules.push( repUrls( styles ) );\n\t\t\t\t}\n\t\t\t\t//parse for styles\n\t\t\t\telse{\n\t\t\t\t\tfullq = qs[ i ].match( /@media *([^\\{]+)\\{([\\S\\s]+?)$/ ) && RegExp.$1;\n\t\t\t\t\trules.push( RegExp.$2 && repUrls( RegExp.$2 ) );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\teachq = fullq.split( \",\" );\n\t\t\t\teql\t= eachq.length;\n\t\t\t\t\t\n\t\t\t\tfor( var j = 0; j < eql; j++ ){\n\t\t\t\t\tthisq = eachq[ j ];\n\t\t\t\t\tmediastyles.push( { \n\t\t\t\t\t\tmedia : thisq.split( \"(\" )[ 0 ].match( /(only\\s+)?([a-zA-Z]+)\\s?/ ) && RegExp.$2 || \"all\",\n\t\t\t\t\t\trules : rules.length - 1,\n\t\t\t\t\t\thasquery : thisq.indexOf(\"(\") > -1,\n\t\t\t\t\t\tminw : thisq.match( /\\(\\s*min\\-width\\s*:\\s*(\\s*[0-9\\.]+)(px|em)\\s*\\)/ ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" ), \n\t\t\t\t\t\tmaxw : thisq.match( /\\(\\s*max\\-width\\s*:\\s*(\\s*[0-9\\.]+)(px|em)\\s*\\)/ ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" )\n\t\t\t\t\t} );\n\t\t\t\t}\t\n\t\t\t}\n\n\t\t\tapplyMedia();\n\t\t},\n        \n\t\tlastCall,\n\t\t\n\t\tresizeDefer,\n\t\t\n\t\t// returns the value of 1em in pixels\n\t\tgetEmValue = function() {\n\t\t\tvar ret,\n\t\t\t\tdiv = doc.createElement('div'),\n\t\t\t\tbody = doc.body,\n\t\t\t\tfakeUsed = false;\n\t\t\t\t\t\t\t\t\t\n\t\t\tdiv.style.cssText = \"position:absolute;font-size:1em;width:1em\";\n\t\t\t\t\t\n\t\t\tif( !body ){\n\t\t\t\tbody = fakeUsed = doc.createElement( \"body\" );\n\t\t\t\tbody.style.background = \"none\";\n\t\t\t}\n\t\t\t\t\t\n\t\t\tbody.appendChild( div );\n\t\t\t\t\t\t\t\t\n\t\t\tdocElem.insertBefore( body, docElem.firstChild );\n\t\t\t\t\t\t\t\t\n\t\t\tret = div.offsetWidth;\n\t\t\t\t\t\t\t\t\n\t\t\tif( fakeUsed ){\n\t\t\t\tdocElem.removeChild( body );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbody.removeChild( div );\n\t\t\t}\n\t\t\t\n\t\t\t//also update eminpx before returning\n\t\t\tret = eminpx = parseFloat(ret);\n\t\t\t\t\t\t\t\t\n\t\t\treturn ret;\n\t\t},\n\t\t\n\t\t//cached container for 1em value, populated the first time it's needed \n\t\teminpx,\n\t\t\n\t\t//enable/disable styles\n\t\tapplyMedia = function( fromResize ){\n\t\t\tvar name = \"clientWidth\",\n\t\t\t\tdocElemProp = docElem[ name ],\n\t\t\t\tcurrWidth = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[ name ] || docElemProp,\n\t\t\t\tstyleBlocks\t= {},\n\t\t\t\tlastLink = links[ links.length-1 ],\n\t\t\t\tnow = (new Date()).getTime();\n\n\t\t\t//throttle resize calls\t\n\t\t\tif( fromResize && lastCall && now - lastCall < resizeThrottle ){\n\t\t\t\twin.clearTimeout( resizeDefer );\n\t\t\t\tresizeDefer = win.setTimeout( applyMedia, resizeThrottle );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlastCall = now;\n\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\tfor( var i in mediastyles ){\n\t\t\t\tif( mediastyles.hasOwnProperty( i ) ){\n\t\t\t\t\tvar thisstyle = mediastyles[ i ],\n\t\t\t\t\t\tmin = thisstyle.minw,\n\t\t\t\t\t\tmax = thisstyle.maxw,\n\t\t\t\t\t\tminnull = min === null,\n\t\t\t\t\t\tmaxnull = max === null,\n\t\t\t\t\t\tem = \"em\";\n\t\t\t\t\t\n\t\t\t\t\tif( !!min ){\n\t\t\t\t\t\tmin = parseFloat( min ) * ( min.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\n\t\t\t\t\t}\n\t\t\t\t\tif( !!max ){\n\t\t\t\t\t\tmax = parseFloat( max ) * ( max.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// if there's no media query at all (the () part), or min or max is not null, and if either is present, they're true\n\t\t\t\t\tif( !thisstyle.hasquery || ( !minnull || !maxnull ) && ( minnull || currWidth >= min ) && ( maxnull || currWidth <= max ) ){\n\t\t\t\t\t\tif( !styleBlocks[ thisstyle.media ] ){\n\t\t\t\t\t\t\tstyleBlocks[ thisstyle.media ] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleBlocks[ thisstyle.media ].push( rules[ thisstyle.rules ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//remove any existing respond style element(s)\n\t\t\tfor( var j in appendedEls ){\n\t\t\t\tif( appendedEls.hasOwnProperty( j ) ){\n\t\t\t\t\tif( appendedEls[ j ] && appendedEls[ j ].parentNode === head ){\n\t\t\t\t\t\thead.removeChild( appendedEls[ j ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//inject active styles, grouped by media type\n\t\t\tfor( var k in styleBlocks ){\n\t\t\t\tif( styleBlocks.hasOwnProperty( k ) ){\n\t\t\t\t\tvar ss = doc.createElement( \"style\" ),\n\t\t\t\t\t\tcss = styleBlocks[ k ].join( \"\\n\" );\n\t\t\t\t\t\n\t\t\t\t\tss.type = \"text/css\";\t\n\t\t\t\t\tss.media = k;\n\t\t\t\t\t\n\t\t\t\t\t//originally, ss was appended to a documentFragment and sheets were appended in bulk.\n\t\t\t\t\t//this caused crashes in IE in a number of circumstances, such as when the HTML element had a bg image set, so appending beforehand seems best. Thanks to @dvelyk for the initial research on this one!\n\t\t\t\t\thead.insertBefore( ss, lastLink.nextSibling );\n\t\t\t\t\t\n\t\t\t\t\tif ( ss.styleSheet ){ \n\t\t\t\t\t\tss.styleSheet.cssText = css;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tss.appendChild( doc.createTextNode( css ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t//push to appendedEls to track for later removal\n\t\t\t\t\tappendedEls.push( ss );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t//tweaked Ajax functions from Quirksmode\n\t\tajax = function( url, callback ) {\n\t\t\tvar req = xmlHttp();\n\t\t\tif (!req){\n\t\t\t\treturn;\n\t\t\t}\t\n\t\t\treq.open( \"GET\", url, true );\n\t\t\treq.onreadystatechange = function () {\n\t\t\t\tif ( req.readyState !== 4 || req.status !== 200 && req.status !== 304 ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcallback( req.responseText );\n\t\t\t};\n\t\t\tif ( req.readyState === 4 ){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treq.send( null );\n\t\t},\n\t\t//define ajax obj \n\t\txmlHttp = (function() {\n\t\t\tvar xmlhttpmethod = false;\t\n\t\t\ttry {\n\t\t\t\txmlhttpmethod = new win.XMLHttpRequest();\n\t\t\t}\n\t\t\tcatch( e ){\n\t\t\t\txmlhttpmethod = new win.ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t\t\t}\n\t\t\treturn function(){\n\t\t\t\treturn xmlhttpmethod;\n\t\t\t};\n\t\t})();\n\t\n\t//translate CSS\n\tripCSS();\n\t\n\t//expose update for re-running respond later on\n\trespond.update = ripCSS;\n\t\n\t//adjust on resize\n\tfunction callMedia(){\n\t\tapplyMedia( true );\n\t}\n\tif( win.addEventListener ){\n\t\twin.addEventListener( \"resize\", callMedia, false );\n\t}\n\telse if( win.attachEvent ){\n\t\twin.attachEvent( \"onresize\", callMedia );\n\t}\n})(this);\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.5673828125,
          "content": "{\n  \"name\": \"flatdoc\",\n  \"description\": \"Fetch Markdown files and render them as full pages.\",\n  \"keywords\": [\"documentation\", \"markdown\"],\n  \"author\": \"Rico Sta. Cruz <hi@ricostacruz.com>\",\n  \"version\": \"0.9.0\",\n  \"repository\": {\n     \"type\": \"git\",\n     \"url\": \"https://github.com/rstacruz/flatdoc.git\"\n   },\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"main\": \"flatdoc.js\",\n  \"devDependencies\": {\n    \"mocha\": \"1.10.0\",\n    \"chai\": \"1.6.0\",\n    \"jsdom\": \"*\",\n    \"uglify-js\": \"2.3.6\",\n    \"stylus\": \"0.46.3\",\n    \"nib\": \"0.9.1\",\n    \"commander\": \"1.1.1\",\n    \"dox\": \"0.4.3\"\n  }\n}\n"
        },
        {
          "name": "reference.html",
          "type": "blob",
          "size": 1.6142578125,
          "content": "<!doctype html>\n<html>\n<head>\n  <meta charset='utf-8'>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\" />\n  <meta name=\"viewport\" content=\"width=device-width\">\n\n  <title>Flatdoc</title>\n\n  <!-- Flatdoc -->\n  <script src='support/vendor/jquery.js'></script>\n  <script src='legacy.js'></script>\n  <script src='flatdoc.js'></script>\n\n  <!-- Flatdoc theme -->\n  <link  href='theme-white/style.css' rel='stylesheet'>\n  <script src='theme-white/script.js'></script>\n  <link  href='support/theme.css' rel='stylesheet'>\n\n  <!-- Initializer -->\n  <script>\n    Flatdoc.run({\n      fetcher: Flatdoc.file('Reference.md')\n    });\n  </script>\n</head>\n<body role='flatdoc'>\n\n  <div class='header'>\n    <div class='left'>\n      <h1><a href='.'>Flatdoc</a></h1>\n      <ul>\n        <li><a href='https://github.com/rstacruz/flatdoc'>View on Github</a></li>\n        <li><a href='https://github.com/rstacruz/flatdoc/issues'>Issues</a></li>\n        <li><a href='reference.html'>API reference</a></li>\n      </ul>\n    </div>\n    <div class='right'>\n      <iframe src=\"http://ghbtns.com/github-btn.html?user=rstacruz&amp;type=follow&amp;count=true\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"170\" height=\"20\"></iframe>\n      <iframe src=\"http://ghbtns.com/github-btn.html?user=rstacruz&amp;repo=flatdoc&amp;type=watch&amp;count=true\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"110\" height=\"20\"></iframe>\n    </div>\n  </div>\n\n  <div class='content-root'>\n    <div class='menubar'>\n      <div class='menu section' role='flatdoc-menu'></div>\n    </div>\n    <div role='flatdoc-content' class='content'></div>\n  </div>\n\n</body>\n</html>\n"
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "theme-white",
          "type": "tree",
          "content": null
        },
        {
          "name": "v",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}