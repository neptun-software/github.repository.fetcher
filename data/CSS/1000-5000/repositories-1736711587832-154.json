{
  "metadata": {
    "timestamp": 1736711587832,
    "page": 154,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "getpelican/pelican-themes",
      "stars": 2132,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.244140625,
          "content": "# OS generated files #\n######################\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nIcon?\nehthumbs.db\nThumbs.db\n\n# Editor temp files #\n#####################\n.*~\n*~\n.swp\n.*.swp\n\n# Preview artifacts #\n#####################\n_pelican\n_output\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 8.076171875,
          "content": "[submodule \"pelicanthemes-generator\"]\n\tpath = pelicanthemes-generator\n\turl = https://github.com/badele/pelicanthemes-generator.git\n[submodule \"Responsive-Pelican\"]\n\tpath = Responsive-Pelican\n\turl = https://github.com/ir193/Responsive-Pelican.git\n[submodule \"hauntr\"]\n        path = hauntr\n        url = https://github.com/kura/hauntr.git\n[submodule \"ghastly\"]\n\tpath = ghastly\n\turl = https://github.com/kura/ghastly.git\n[submodule \"svbtle\"]\n\tpath = svbtle\n\turl = https://github.com/wting/pelican-svbtle.git\n[submodule \"chunk\"]\n\tpath = chunk\n\turl = https://github.com/tbunnyman/pelican-chunk.git\n[submodule \"iris\"]\n\tpath = iris\n\turl = https://github.com/slok/iris.git\n[submodule \"relapse\"]\n\tpath = relapse\n\turl = https://github.com/wamonite/relapse.git\n[submodule \"neat\"]\n\tpath = neat\n\turl = https://github.com/BYK/pelican-neat.git\n[submodule \"pelican-mockingbird\"]\n\tpath = pelican-mockingbird\n\turl = https://github.com/wrl/pelican-mockingbird.git\n[submodule \"bold\"]\n\tpath = bold\n\turl = https://github.com/demianbrecht/pelican-bold.git\n[submodule \"lannisport\"]\n\tpath = lannisport\n\turl = https://github.com/siovene/lannisport.git\n[submodule \"fresh\"]\n\tpath = fresh\n\turl = https://github.com/jsliang/pelican-fresh.git\n[submodule \"variant-note\"]\n\tpath = pelican-variant-note\n\turl = https://github.com/mpancorbo/pelican-variant-note.git\n[submodule \"water-iris\"]\n\tpath = water-iris\n\turl = https://github.com/jarv/water-iris.git\n[submodule \"whispers\"]\n\tpath = whispersTheme\n\turl = https://github.com/deBorn/whispersTheme.git\n[submodule \"bluegrasshopper\"]\n\tpath = bluegrasshopper\n\turl = https://github.com/gregseth/pelican-bgh.git\n[submodule \"pelican-cait\"]\n\tpath = pelican-cait\n\turl = https://github.com/hdra/pelican-cait.git\n[submodule \"irfan\"]\n\tpath = irfan\n\turl = https://github.com/erfaan/pelican-theme-irfan.git\n[submodule \"svbhack\"]\n\tpath = svbhack\n\turl = https://github.com/gfidente/pelican-svbhack.git\n[submodule \"html5-dopetrope\"]\n\tpath = html5-dopetrope\n\turl = https://github.com/PierrePaul/html5-dopetrope.git\n[submodule \"plumage\"]\n\tpath = plumage\n\turl = https://github.com/kdeldycke/plumage.git\n[submodule \"sundown\"]\n\tpath = sundown\n\turl = https://github.com/keningle/pelican-sundown.git\n[submodule \"crowsfoot\"]\n\tpath = crowsfoot\n\turl = https://github.com/porterjamesj/crowsfoot.git\n[submodule \"elegant\"]\n\tpath = elegant\n\turl = https://github.com/Pelican-Elegant/elegant.git\n\tbranch = master\n[submodule \"niu-x2\"]\n\tpath = niu-x2\n\turl = https://github.com/wilbur-ma/niu-x2.git\n[submodule \"storm\"]\n\tpath = storm\n\turl = https://github.com/redVi/storm.git\n[submodule \"jesuislibre\"]\n\tpath = jesuislibre\n\turl = https://github.com/badele/pelican-theme-jesuislibre.git\n[submodule \"sora\"]\n\tpath = sora\n\turl = https://github.com/if1live/pelican-sora.git\n[submodule \"pelican-simplegrey\"]\n\tpath = pelican-simplegrey\n\turl = https://github.com/fle/pelican-simplegrey.git\n[submodule \"pujangga\"]\n\tpath = pujangga\n\turl = https://github.com/habibillah/pujangga.git\n[submodule \"lovers\"]\n\tpath = lovers\n\turl = https://github.com/chdoig/pelican-bootstrap3-lovers.git\n[submodule \"BT3-Flat\"]\n\tpath = BT3-Flat\n\turl = https://github.com/KenMercusLai/BT3-Flat.git\n[submodule \"voidy-bootstrap\"]\n\tpath = voidy-bootstrap\n\turl = https://github.com/robulouski/voidy-bootstrap.git\n[submodule \"burrito\"]\n\tpath = burrito\n\turl = https://github.com/fly/burrito.git\n[submodule \"maggner-pelican\"]\n\tpath = maggner-pelican\n\turl = https://github.com/kplaube/maggner-pelican.git\n[submodule \"pelican-sober\"]\n\tpath = pelican-sober\n\turl = https://github.com/fle/pelican-sober.git\n[submodule \"twenty-html5up\"]\n\tpath = twenty-html5up\n\turl = https://github.com/frankV/twenty-pelican-html5up.git\n[submodule \"lazystrap\"]\n\tpath = lazystrap\n\turl = https://github.com/lazycoder-ru/lazystrap.git\n[submodule \"pelican-twitchy\"]\n\tpath = pelican-twitchy\n\turl = https://github.com/ingwinlu/pelican-twitchy.git\n[submodule \"dev-random3\"]\n\tpath = dev-random3\n\turl = https://github.com/22decembre/dev-random3.git\n[submodule \"blue-penguin\"]\n\tpath = blue-penguin\n\turl = https://github.com/jody-frankowski/blue-penguin.git\n[submodule \"nikhil-theme\"]\n\tpath = nikhil-theme\n\turl = https://github.com/gunchu/nikhil-theme.git\n[submodule \"chameleon\"]\n\tpath = chameleon\n\turl = https://github.com/yuex/pelican-iliork.git\n[submodule \"mg\"]\n\tpath = mg\n\turl = https://github.com/lucachr/pelican-mg.git\n[submodule \"martin-pelican\"]\n\tpath = martin-pelican\n\turl = https://github.com/cpaulik/martin-pelican.git\n[submodule \"nest\"]\n\tpath = nest\n\turl = https://github.com/molivier/nest.git\n[submodule \"alchemy\"]\n\tpath = alchemy\n\turl = https://github.com/nairobilug/pelican-alchemy.git\n[submodule \"pjport\"]\n\tpath = pjport\n\turl = https://github.com/xm3ron/pjport.git\n[submodule \"cid\"]\n\tpath = cid\n\turl = https://github.com/hdra/Pelican-Cid.git\n[submodule \"Flex\"]\n\tpath = Flex\n\turl = https://github.com/alexandrevicenzi/Flex.git\n[submodule \"octopress\"]\n\tpath = octopress\n\turl = https://github.com/MrSenko/pelican-octopress-theme\n[submodule \"smoothie\"]\n\tpath = smoothie\n\turl = https://github.com/kdheepak89/pelican-smoothie.git\n[submodule \"material\"]\n\tpath = material\n\turl = https://github.com/greizgh/pelican-material.git\n[submodule \"w3-personal-blog\"]\n\tpath = w3-personal-blog\n\turl = https://github.com/samael500/w3-personal-blog.git\n[submodule \"free-agent\"]\n\tpath = free-agent\n\turl = https://github.com/callmefish/pelican-free-agent.git\n[submodule \"mediumfox\"]\n\tpath = mediumfox\n\turl = https://github.com/cprieto/pelican-mediumfox.git\n[submodule \"medius\"]\n\tpath = medius\n\turl = https://github.com/onuraslan/medius.git\n[submodule \"materialistic\"]\n\tpath = materialistic\n\turl = https://github.com/eswarm/materialistic-pelican.git\n[submodule \"hyde\"]\n\tpath = hyde\n\turl = https://github.com/jvanz/pelican-hyde.git\n[submodule \"clean-blog\"]\n\tpath = clean-blog\n\turl = https://github.com/gilsondev/pelican-clean-blog.git\n[submodule \"semantic-ui\"]\n\tpath = semantic-ui\n\turl = https://github.com/ellisonleao/pelican-semantic-ui.git\n[submodule \"yapeme\"]\n\tpath = yapeme\n\turl = https://github.com/kplaube/yapeme.git\n[submodule \"pelican-blue\"]\n\tpath = pelican-blue\n\turl = https://github.com/Parbhat/pelican-blue.git\n[submodule \"pelican-hss\"]\n\tpath = pelican-hss\n\turl = https://github.com/laughk/pelican-hss.git\n[submodule \"nice-blog\"]\n\tpath = nice-blog\n\turl = https://github.com/guilherme-toti/nice-blog.git\n[submodule \"apricot\"]\n\tpath = apricot\n\turl = https://github.com/livibetter-backup/apricot.git\n[submodule \"eevee\"]\n\tpath = eevee\n\turl = https://github.com/kura/eevee.git\n[submodule \"voce\"]\n\tpath = voce\n\turl = https://github.com/limbenjamin/voce.git\n[submodule \"genus\"]\n\tpath = genus\n\turl = https://github.com/vaiski/genus.git\n[submodule \"attila\"]\n\tpath = attila\n\turl = https://github.com/arulrajnet/attila\n[submodule \"bulrush\"]\n\tpath = bulrush\n\turl = https://github.com/textbook/bulrush.git\n[submodule \"jojo\"]\n\tpath = jojo\n\turl = https://github.com/dokelung/jojo.git\n[submodule \"resume\"]\n\tpath = resume\n\turl = https://github.com/suheb/resume.git\n[submodule \"taman\"]\n\tpath = taman\n\turl = https://github.com/karambir/taman.git\n[submodule \"MinimalXY\"]\n\tpath = MinimalXY\n\turl = https://github.com/petrnohejl/MinimalXY.git\n[submodule \"pelican-fh5co-marble\"]\n\tpath = pelican-fh5co-marble\n\turl = https://github.com/claudio-walser/pelican-fh5co-marble.git\n[submodule \"grid-focus\"]\n\tpath = grid-focus\n\turl = https://github.com/oulenz/pelican-grid-focus.git\n[submodule \"brutalist\"]\n\tpath = brutalist\n\turl = https://github.com/mamcmanus/brutalist.git\n[submodule \"simplify-theme\"]\n\tpath = simplify-theme\n\turl = https://github.com/vuquangtrong/simplify-theme.git\n[submodule \"buruma\"]\n\tpath = buruma\n\turl = https://github.com/ivanhercaz/buruma.git\n\tbranch = pelican-themes\n[submodule \"pelican-b-side\"]\n\tpath = pelican-b-side\n\turl = https://gitlab.com/jhauh/pelican_b_side.git\n[submodule \"stirring\"]\n\tpath = stirring\n\turl = https://github.com/hansliu/pelican-stirring.git\n[submodule \"Papyrus\"]\n\tpath = Papyrus\n\turl = https://github.com/aleylara/Papyrus\n[submodule \"blue-penguin-dark\"]\n\tpath = blue-penguin-dark\n\turl = https://github.com/tcarwash/blue-penguin-dark.git\n[submodule \"pelican-haerwu-theme\"]\n\tpath = pelican-haerwu-theme\n\turl = https://github.com/hrw/pelican-haerwu-theme.git\n[submodule \"Piccolo\"]\n\tpath = piccolo\n\turl = https://github.com/iamjameswalters/piccolo.git\n"
        },
        {
          "name": "BT3-Flat",
          "type": "commit",
          "content": null
        },
        {
          "name": "Flex",
          "type": "commit",
          "content": null
        },
        {
          "name": "Just-Read",
          "type": "tree",
          "content": null
        },
        {
          "name": "MinimalXY",
          "type": "commit",
          "content": null
        },
        {
          "name": "Papyrus",
          "type": "commit",
          "content": null
        },
        {
          "name": "Peli-Kiera",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.326171875,
          "content": "Pelican Themes\n##############\n\nThis repository contains themes for Pelican. Feel free to clone, add your own\ntheme, and submit a pull request. It's community-managed!\n\nA live version can be seen at http://www.pelicanthemes.com.\n\nUsing Themes\n############\n\nThese instructions assume you have already read all the `Pelican documentation`_,\nhave a working site, and would now like to apply a non-default theme.\n\n.. _Pelican documentation: http://docs.getpelican.com/\n\nFirst, choose a location to hold your themes. For this example, we'll use the\ndirectory ``~/pelican-themes``, but yours could be different. Clone the\n``pelican-themes`` repository to that location on your local machine:\n\n.. code-block:: sh\n\n\tgit clone --recursive https://github.com/getpelican/pelican-themes ~/pelican-themes\n\nNow you should have your ``pelican-themes`` repository stored at\n``~/pelican-themes/``.\n\nTo use one of the themes, edit your Pelican settings file to include this line:\n\n.. code-block:: python\n\n\tTHEME = \"/home/user/pelican-themes/theme-name\"\n\nSo, for instance, to use the ``mnmlist`` theme, you would edit your settings\nfile to include:\n\n.. code-block:: python\n\n\tTHEME = \"/home/user/pelican-themes/mnmlist\"\n\nSave the changes to your settings file and then regenerate your site by using\nthe Makefile you should already have set up using ``pelican-quickstart``:\n\n.. code-block:: sh\n\n\tmake html\n\nThemes can also be specified directly via the ``-t ~/pelican-themes/theme-name``\nparameter to the ``pelican`` command. If you want to edit your theme, make sure\nthat any edits you make are made to the copy stored in\n``~/pelican-themes/theme-name``. Any changes made to\nfiles stored in your site's ``output`` directory will be deleted the next\ntime you generate your site.\n\nGenerating Theme Previews\n#########################\n\nGenerating theme previews happens automatically via a GitHub Actions workflow,\nafter which those previews are published to https://pelicanthemes.com.\nIf you want to generate previews locally on your workstation, clone the Pelican\nrepository (for example, to `~/projects/pelican/`), clone this repository\nsomewhere, change to the root directory of that clone, and follow these steps:\n\n.. code-block:: sh\n\n\tpython -m pip install pelican[markdown] shot-scraper\n        mkdir _pelican\n        cp -r ~/projects/pelican/samples _pelican/\n        python build-theme-previews.py\n"
        },
        {
          "name": "Responsive-Pelican",
          "type": "commit",
          "content": null
        },
        {
          "name": "SOB",
          "type": "tree",
          "content": null
        },
        {
          "name": "SoMA",
          "type": "tree",
          "content": null
        },
        {
          "name": "SoMA2",
          "type": "tree",
          "content": null
        },
        {
          "name": "aboutwilson",
          "type": "tree",
          "content": null
        },
        {
          "name": "alchemy",
          "type": "commit",
          "content": null
        },
        {
          "name": "apricot",
          "type": "commit",
          "content": null
        },
        {
          "name": "attila",
          "type": "commit",
          "content": null
        },
        {
          "name": "backdrop",
          "type": "tree",
          "content": null
        },
        {
          "name": "basic",
          "type": "tree",
          "content": null
        },
        {
          "name": "blue-penguin",
          "type": "commit",
          "content": null
        },
        {
          "name": "blue-penguin-dark",
          "type": "commit",
          "content": null
        },
        {
          "name": "bluegrasshopper",
          "type": "commit",
          "content": null
        },
        {
          "name": "bold",
          "type": "commit",
          "content": null
        },
        {
          "name": "bootlex",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap2-dark",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap2",
          "type": "tree",
          "content": null
        },
        {
          "name": "bricabrac",
          "type": "tree",
          "content": null
        },
        {
          "name": "bricks",
          "type": "tree",
          "content": null
        },
        {
          "name": "brownstone",
          "type": "tree",
          "content": null
        },
        {
          "name": "brutalist",
          "type": "commit",
          "content": null
        },
        {
          "name": "build-theme-previews.py",
          "type": "blob",
          "size": 9.189453125,
          "content": "import argparse\nimport logging\nimport subprocess\nimport os\n\nfrom rich.logging import RichHandler\nfrom rich.console import Console\n\n\nFORMAT = \"%(message)s\"\nlogging.basicConfig(\n    level=\"NOTSET\",\n    format=FORMAT,\n    datefmt=\"[%X]\",\n    handlers=[RichHandler(show_path=False, console=Console(force_terminal=True))]\n)\nlogger = logging.getLogger()\n\n\nPELICANCONF_PATCH = \"\"\"\n\nclass i18n(object):\n    # looks for translations in\n    # {LOCALE_DIR}/{LANGUAGE}/LC_MESSAGES/{DOMAIN}.mo\n    # if not present, falls back to default\n\n    DOMAIN = 'messages'\n    LOCALE_DIR = 'does-not-matter/translations'\n    LANGUAGES = ['de']\n    NEWSTYLE = True\n\n    __name__ = 'i18n'\n\n    def register(self):\n        from pelican import signals\n        signals.generator_init.connect(self.install_translator)\n\n    def install_translator(self, generator):\n        import gettext\n        try:\n            translator = gettext.translation(\n                self.DOMAIN,\n                self.LOCALE_DIR,\n                self.LANGUAGES)\n        except (OSError, IOError):\n            translator = gettext.NullTranslations()\n        generator.env.install_gettext_translations(translator, self.NEWSTYLE)\n\n\nJINJA_ENVIRONMENT = {'extensions': ['jinja2.ext.i18n']}\nPLUGINS = [i18n(), 'webassets']\n\"\"\"\n\n\nHTML_HEADER = \"\"\"\\\n<!DOCTYPE html>\n<html>\n<head>\n<style>\n\nh1 {\n  margin: 20px auto;\n  text-align: center;\n}\n\nul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\nli {\n  width: 500px;\n  min-width: fit-content;\n  border: 1px solid gray;\n  background-color: whitesmoke;\n  border-radius: 5px;\n  margin: 25px 50px;\n  text-align: center;\n}\n\nli:hover {\n  background-color: lightgray;\n}\n\na {\n  display: block;\n  text-decoration: none;\n  color: black;\n  font-size: 1.5em;\n}\n\nimg {\n  max-width:450px;\n  border-radius: 5px;\n  margin: 25px auto;\n  border: 1px solid black;\n}\n\nfooter {\n  margin: 20px auto;\n  text-align: center;\n  font-size: 1.1em;\n}\n\nfooter a {\n  display: inline;\n  font-size: 1em;\n}\n\nfooter a.success {\n  color: green;\n}\n\nfooter a.fail {\n  color: red;\n}\n</style>\n</head>\n<body>\n<h1>pelican-themes Preview</h1>\n<ul>\"\"\"\n\nHTML_FOOTER = \"\"\"\\\n</ul>\n<footer>\nSuccessfully built <a href=\"index.html\" class=\"success\">{success} themes</a><br/>\nFailed to build <a href=\"failed.html\" class=\"fail\">{fail} themes</a>\n</footer>\n</body>\n</html>\n\"\"\"\n\nHTML_404 = \"\"\"\\\n<!DOCTYPE html>\n<html>\n<head>\n<title>Not Found</title>\n</head>\n<style>\nh1 {\n  margin: 20px auto;\n  text-align: center;\n}\np {text-align: center;}\nh3 {text-align: center;}\na {color: black;}\n.center {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n</style>\n<body>\n\n<h1>Not Found</h1>\n<h3>What you’re looking for isn’t here. <br> It may have moved, or something unfortunate may have befallen it.</h3>\n\n<p>Double-check the URL and try again, or <a href=\"https://pelicanthemes.com\">head home</a>.</p>\n\n<img src=\"pelican-sad.png\" alt=\"sad pelican\" class=\"center\">\n\n</body>\n</html>\n\"\"\"\n\n\ndef setup_folders(args):\n    theme_root = os.path.abspath(os.path.dirname(__file__))\n    output_root = os.path.abspath(os.path.join(theme_root, args.output))\n    samples_root = os.path.abspath(os.path.join(theme_root, args.samples))\n    screenshot_root = os.path.abspath(os.path.join(output_root, \"_screenshots\"))\n\n    # requires `getpelican/pelican` cloned in `_pelican` folder\n    if os.path.exists(samples_root):\n        os.makedirs(os.path.join(samples_root, \"content\", \"images\"), exist_ok=True)   # silence warning\n    else:\n        raise RuntimeError(\n            f\"Samples folder does not exist: {samples_root}. \"\n            \"You can use `samples` from pelican by cloning it to `_pelican` folder\"\n        )\n    # create output and screenshot folders\n    os.makedirs(output_root, exist_ok=True)\n    os.makedirs(screenshot_root, exist_ok=True)\n\n    return theme_root, samples_root, output_root, screenshot_root\n\n\ndef build_theme_previews(theme_root, samples_root, output_root, screenshot_root):\n    themes = [item for item in os.listdir(theme_root) if os.path.isdir(item) and not item.startswith((\".\", \"_\"))]\n    logger.info(f\"processing {len(themes)} themes...\")\n\n    # launch web server for taking screenshots\n    server = subprocess.Popen(\n        [\"python\", \"-m\", \"http.server\", \"-d\", output_root],\n        stdout=subprocess.PIPE, stderr=subprocess.PIPE\n    )\n\n    fail = {}\n    success = {}\n    screenshot_processes = []\n\n    modified_settings_path = os.path.join(output_root, \"pelicanconf.py\")\n    with open(os.path.join(samples_root, 'pelican.conf.py')) as infile:\n        with open(modified_settings_path, 'w') as outfile:\n            outfile.write(infile.read() + PELICANCONF_PATCH)\n\n    for theme in sorted(themes, key=lambda x: x.lower()):\n        theme_path = os.path.join(theme_root, theme)\n        if os.path.exists(os.path.join(theme_path, theme, \"templates\")):\n            # actual theme is in a subfolder\n            theme_path = os.path.join(theme_path, theme)\n        output_path = os.path.join(output_root, theme)\n        try:\n            process = subprocess.run([\n                \"pelican\",\n                os.path.join(samples_root, \"content\"),\n                \"--settings\", modified_settings_path,\n                \"--extra-settings\", f\"SITENAME=\\\"{theme} preview\\\"\",\n                \"--relative-urls\",\n                \"--theme-path\", theme_path,\n                \"--output\", output_path,\n                \"--ignore-cache\",\n                \"--delete-output-directory\",\n            ],\n            check=True, capture_output=True, universal_newlines=True)\n        except subprocess.CalledProcessError as exc:\n            logger.error(f\"[red]failed to generate     : {theme}[/]\", extra={\"markup\": True})\n            fail[theme] = exc.stdout\n            continue\n        success[theme] = output_path\n        screenshot_path = os.path.join(screenshot_root, f\"{theme}.png\")\n        screenshot_processes.append(\n            subprocess.Popen(\n                [\"shot-scraper\", f\"http://localhost:8000/{theme}\", \"-o\", screenshot_path, \"-w\", \"1280\", \"-h\", \"780\", \"--wait\", \"1000\"],\n                stdout=subprocess.PIPE, stderr=subprocess.PIPE\n            )\n        )\n        logger.info(f\"[green]successfully generated : {theme}[/]\", extra={\"markup\": True})\n\n    # cleanup\n    logger.info(\"finalizing screenshots...\")\n    for process in screenshot_processes:\n        process.wait()\n    server.terminate()\n    os.remove(modified_settings_path)\n    return success, fail\n\n\ndef write_index_files(output_root, success, fail):\n    logger.info(\"generating index files...\")\n    with open(os.path.join(output_root, \"index.html\"), \"w\") as outfile:\n        outfile.write(HTML_HEADER)\n        for theme, theme_path in sorted(success.items(), key=lambda x: x[0].lower()):\n            outfile.write(f'<li><a href=\"{theme}\">{theme}<br><img src=\"_screenshots/{theme}.png\"/></a></li>')\n        outfile.write(HTML_FOOTER.format(success=len(success), fail=len(fail)))\n\n    with open(os.path.join(output_root, \"failed.html\"), \"w\") as outfile:\n        outfile.write(HTML_HEADER)\n        for theme, reason in sorted(fail.items(), key=lambda x: x[0].lower()):\n            outfile.write(f'<li><h2>{theme}</h2><pre>{reason}</pre></li>')\n        outfile.write(HTML_FOOTER.format(success=len(success), fail=len(fail)))\n\n    logger.info(f\"built {len(success)} themes\")\n    logger.info(f\"failed {len(fail)} themes\")\n\n\ndef write_404_file(output_root):\n    logger.info(\"generating 404 page file...\")\n    with open(os.path.join(output_root, \"404.html\"), \"w\") as outfile:\n        outfile.write(HTML_404)\n\n    pelican_pic_path = os.path.join(output_root, \"pelican-sad.png\")\n    subprocess.call([\"cp\", \"pelican-sad.png\", pelican_pic_path])\n\n    logger.info(\"wrote 404 page file\")\n\n\ndef parse_args(argv=None):\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\n        \"--output\", required=False, default=\"_output\",\n        help=\"Output folder for generating the theme previews. Defaults to `_output` in themes folder root.\"\n    )\n    parser.add_argument(\n        \"--samples\", required=False, default=\"_pelican/samples\",\n        help=\"Sample website used to generate theme previews. Defaults to `_pelican/samples` in themes folder root.\"\n    )\n    return parser.parse_args(argv)\n\n\ndef check_requirements():\n    try:\n        proc = subprocess.run(\n            [\"pelican\", \"--version\"],\n            check=True, capture_output=True, universal_newlines=True\n        )\n        logger.info(\"using pelican: {}\".format(proc.stdout.strip()))\n    except subprocess.CalledProcessError:\n        raise RuntimeError(\"Requires `pelican`, see https://docs.getpelican.com\")\n    try:\n        proc = subprocess.run(\n            [\"shot-scraper\", \"--version\"],\n            check=True, capture_output=True, universal_newlines=True\n        )\n        logger.info(\"using shot-scraper: {}\".format(proc.stdout.strip()))\n    except subprocess.CalledProcessError:\n        raise RuntimeError(\"Requires `shot-scraper`, see https://shot-scraper.data\")\n\n\ndef main(argv=None):\n    check_requirements()\n    args = parse_args(argv)\n    theme_root, samples_root, output_root, screenshot_root = setup_folders(args)\n    success, fail = build_theme_previews(theme_root, samples_root, output_root, screenshot_root)\n    write_index_files(output_root, success, fail)\n    write_404_file(output_root)\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "built-texts",
          "type": "tree",
          "content": null
        },
        {
          "name": "bulrush",
          "type": "commit",
          "content": null
        },
        {
          "name": "burrito",
          "type": "commit",
          "content": null
        },
        {
          "name": "buruma",
          "type": "commit",
          "content": null
        },
        {
          "name": "cebong",
          "type": "tree",
          "content": null
        },
        {
          "name": "chameleon",
          "type": "commit",
          "content": null
        },
        {
          "name": "chunk",
          "type": "commit",
          "content": null
        },
        {
          "name": "cid",
          "type": "commit",
          "content": null
        },
        {
          "name": "clean-blog",
          "type": "commit",
          "content": null
        },
        {
          "name": "crowsfoot",
          "type": "commit",
          "content": null
        },
        {
          "name": "dev-random",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-random2",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-random3",
          "type": "commit",
          "content": null
        },
        {
          "name": "eevee",
          "type": "commit",
          "content": null
        },
        {
          "name": "elegant",
          "type": "commit",
          "content": null
        },
        {
          "name": "foundation-default-colours",
          "type": "tree",
          "content": null
        },
        {
          "name": "franticworld",
          "type": "tree",
          "content": null
        },
        {
          "name": "free-agent",
          "type": "commit",
          "content": null
        },
        {
          "name": "fresh",
          "type": "commit",
          "content": null
        },
        {
          "name": "genus",
          "type": "commit",
          "content": null
        },
        {
          "name": "graymill",
          "type": "tree",
          "content": null
        },
        {
          "name": "gum",
          "type": "tree",
          "content": null
        },
        {
          "name": "html5-dopetrope",
          "type": "commit",
          "content": null
        },
        {
          "name": "hyde",
          "type": "commit",
          "content": null
        },
        {
          "name": "irfan",
          "type": "commit",
          "content": null
        },
        {
          "name": "iris",
          "type": "commit",
          "content": null
        },
        {
          "name": "jesuislibre",
          "type": "commit",
          "content": null
        },
        {
          "name": "jojo",
          "type": "commit",
          "content": null
        },
        {
          "name": "lannisport",
          "type": "commit",
          "content": null
        },
        {
          "name": "lazystrap",
          "type": "commit",
          "content": null
        },
        {
          "name": "lightweight",
          "type": "tree",
          "content": null
        },
        {
          "name": "lovers",
          "type": "commit",
          "content": null
        },
        {
          "name": "maggner-pelican",
          "type": "commit",
          "content": null
        },
        {
          "name": "martin-pelican",
          "type": "commit",
          "content": null
        },
        {
          "name": "martyalchin",
          "type": "tree",
          "content": null
        },
        {
          "name": "material",
          "type": "commit",
          "content": null
        },
        {
          "name": "materialistic",
          "type": "commit",
          "content": null
        },
        {
          "name": "medio",
          "type": "tree",
          "content": null
        },
        {
          "name": "mediumfox",
          "type": "commit",
          "content": null
        },
        {
          "name": "medius",
          "type": "commit",
          "content": null
        },
        {
          "name": "mg",
          "type": "commit",
          "content": null
        },
        {
          "name": "mnmlist",
          "type": "tree",
          "content": null
        },
        {
          "name": "monospace",
          "type": "tree",
          "content": null
        },
        {
          "name": "neat",
          "type": "commit",
          "content": null
        },
        {
          "name": "nest",
          "type": "commit",
          "content": null
        },
        {
          "name": "new-bootstrap2",
          "type": "tree",
          "content": null
        },
        {
          "name": "nice-blog",
          "type": "commit",
          "content": null
        },
        {
          "name": "nikhil-theme",
          "type": "commit",
          "content": null
        },
        {
          "name": "niu-x2",
          "type": "commit",
          "content": null
        },
        {
          "name": "nmnlist",
          "type": "tree",
          "content": null
        },
        {
          "name": "notebook",
          "type": "tree",
          "content": null
        },
        {
          "name": "notmyidea-cms-fr",
          "type": "tree",
          "content": null
        },
        {
          "name": "notmyidea-cms",
          "type": "tree",
          "content": null
        },
        {
          "name": "octopress",
          "type": "commit",
          "content": null
        },
        {
          "name": "ops",
          "type": "tree",
          "content": null
        },
        {
          "name": "pelican-b-side",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelican-blue",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelican-bootstrap3",
          "type": "tree",
          "content": null
        },
        {
          "name": "pelican-cait",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelican-fh5co-marble",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelican-haerwu-theme",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelican-hss",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelican-mockingbird",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelican-sad.png",
          "type": "blob",
          "size": 1006.0341796875,
          "content": null
        },
        {
          "name": "pelican-simplegrey",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelican-sober",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelican-striped-html5up",
          "type": "tree",
          "content": null
        },
        {
          "name": "pelican-twitchy",
          "type": "commit",
          "content": null
        },
        {
          "name": "pelicanthemes-generator",
          "type": "commit",
          "content": null
        },
        {
          "name": "photowall",
          "type": "tree",
          "content": null
        },
        {
          "name": "pjport",
          "type": "commit",
          "content": null
        },
        {
          "name": "plumage",
          "type": "commit",
          "content": null
        },
        {
          "name": "pujangga",
          "type": "commit",
          "content": null
        },
        {
          "name": "relapse",
          "type": "commit",
          "content": null
        },
        {
          "name": "resume",
          "type": "commit",
          "content": null
        },
        {
          "name": "semantic-ui",
          "type": "commit",
          "content": null
        },
        {
          "name": "simple-bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplify-theme",
          "type": "commit",
          "content": null
        },
        {
          "name": "smoothie",
          "type": "commit",
          "content": null
        },
        {
          "name": "sneakyidea",
          "type": "tree",
          "content": null
        },
        {
          "name": "sora",
          "type": "commit",
          "content": null
        },
        {
          "name": "stirring",
          "type": "commit",
          "content": null
        },
        {
          "name": "storm",
          "type": "commit",
          "content": null
        },
        {
          "name": "subtle",
          "type": "tree",
          "content": null
        },
        {
          "name": "sundown",
          "type": "commit",
          "content": null
        },
        {
          "name": "svbhack",
          "type": "commit",
          "content": null
        },
        {
          "name": "svbtle",
          "type": "commit",
          "content": null
        },
        {
          "name": "syte",
          "type": "tree",
          "content": null
        },
        {
          "name": "taman",
          "type": "commit",
          "content": null
        },
        {
          "name": "tuxlite_tbs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tuxlite_zf",
          "type": "tree",
          "content": null
        },
        {
          "name": "twenty-html5up",
          "type": "commit",
          "content": null
        },
        {
          "name": "uikit",
          "type": "tree",
          "content": null
        },
        {
          "name": "voce",
          "type": "commit",
          "content": null
        },
        {
          "name": "voidy-bootstrap",
          "type": "commit",
          "content": null
        },
        {
          "name": "w3-personal-blog",
          "type": "commit",
          "content": null
        },
        {
          "name": "water-iris",
          "type": "commit",
          "content": null
        },
        {
          "name": "waterspill-en",
          "type": "tree",
          "content": null
        },
        {
          "name": "waterspill",
          "type": "tree",
          "content": null
        },
        {
          "name": "yapeme",
          "type": "commit",
          "content": null
        },
        {
          "name": "zurb-F5-basic",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}