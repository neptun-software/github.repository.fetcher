{
  "metadata": {
    "timestamp": 1736557769522,
    "page": 936,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "littlecodersh/ItChat",
      "stars": 25772,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1,
          "content": "build/*\r\ndist/*\r\ntests/*\r\nitchat.egg-info/*\r\n*.pyc\r\n*.pkl\r\n*.swp\r\ntest.py\r\nitchat.pkl\r\nQR.jpg\r\n.DS_Store\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.12,
          "content": "**The MIT License (MIT)**\n\nCopyright (c) 2017 LittleCoder ([littlecodersh@Github](https://github.com/littlecodersh))\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.52,
          "content": "# itchat\n\n[![Gitter][gitter-picture]][gitter] ![py27][py27] ![py35][py35] [English version][english-version]\n\nitchat是一个开源的微信个人号接口，使用python调用微信从未如此简单。\n\n使用不到三十行的代码，你就可以完成一个能够处理所有信息的微信机器人。\n\n当然，该api的使用远不止一个机器人，更多的功能等着你来发现，比如[这些][tutorial2]。\n\n该接口与公众号接口[itchatmp][itchatmp]共享类似的操作方式，学习一次掌握两个工具。\n\n如今微信已经成为了个人社交的很大一部分，希望这个项目能够帮助你扩展你的个人的微信号、方便自己的生活。\n\n## 安装\n\n可以通过本命令安装itchat：\n\n```python\npip install itchat\n```\n\n## 简单入门实例\n\n有了itchat，如果你想要给文件传输助手发一条信息，只需要这样：\n\n```python\nimport itchat\n\nitchat.auto_login()\n\nitchat.send('Hello, filehelper', toUserName='filehelper')\n```\n\n如果你想要回复发给自己的文本消息，只需要这样：\n\n```python\nimport itchat\n\n@itchat.msg_register(itchat.content.TEXT)\ndef text_reply(msg):\n    return msg.text\n\nitchat.auto_login()\nitchat.run()\n```\n\n一些进阶应用可以在下面的开源机器人的源码和进阶应用中看到，或者你也可以阅览[文档][document]。\n\n## 试一试\n\n这是一个基于这一项目的[开源小机器人][robot-source-code]，百闻不如一见，有兴趣可以尝试一下。\n\n由于好友数量实在增长过快，自动通过好友验证的功能演示暂时关闭。\n\n![QRCode][robot-qr]\n\n## 截屏\n\n![file-autoreply][robot-demo-file] ![login-page][robot-demo-login]\n\n## 进阶应用\n\n### 特殊的字典使用方式\n\n通过打印itchat的用户以及注册消息的参数，可以发现这些值都是字典。\n\n但实际上itchat精心构造了相应的消息、用户、群聊、公众号类。\n\n其所有的键值都可以通过这一方式访问：\n\n```python\n@itchat.msg_register(TEXT)\ndef _(msg):\n    # equals to print(msg['FromUserName'])\n    print(msg.fromUserName)\n```\n\n属性名为键值首字母小写后的内容。\n\n```python\nauthor = itchat.search_friends(nickName='LittleCoder')[0]\nauthor.send('greeting, littlecoder!')\n```\n\n### 各类型消息的注册\n\n通过如下代码，微信已经可以就日常的各种信息进行获取与回复。\n\n```python\nimport itchat, time\nfrom itchat.content import *\n\n@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING])\ndef text_reply(msg):\n    msg.user.send('%s: %s' % (msg.type, msg.text))\n\n@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\ndef download_files(msg):\n    msg.download(msg.fileName)\n    typeSymbol = {\n        PICTURE: 'img',\n        VIDEO: 'vid', }.get(msg.type, 'fil')\n    return '@%s@%s' % (typeSymbol, msg.fileName)\n\n@itchat.msg_register(FRIENDS)\ndef add_friend(msg):\n    msg.user.verify()\n    msg.user.send('Nice to meet you!')\n\n@itchat.msg_register(TEXT, isGroupChat=True)\ndef text_reply(msg):\n    if msg.isAt:\n        msg.user.send(u'@%s\\u2005I received: %s' % (\n            msg.actualNickName, msg.text))\n\nitchat.auto_login(True)\nitchat.run(True)\n```\n\n### 命令行二维码\n\n通过以下命令可以在登陆的时候使用命令行显示二维码：\n\n```python\nitchat.auto_login(enableCmdQR=True)\n```\n\n部分系统可能字幅宽度有出入，可以通过将enableCmdQR赋值为特定的倍数进行调整：\n\n```python\n# 如部分的linux系统，块字符的宽度为一个字符（正常应为两字符），故赋值为2\nitchat.auto_login(enableCmdQR=2)\n```\n\n默认控制台背景色为暗色（黑色），若背景色为浅色（白色），可以将enableCmdQR赋值为负值：\n\n```python\nitchat.auto_login(enableCmdQR=-1)\n```\n\n### 退出程序后暂存登陆状态\n\n通过如下命令登陆，即使程序关闭，一定时间内重新开启也可以不用重新扫码。\n\n```python\nitchat.auto_login(hotReload=True)\n```\n\n### 用户搜索\n\n使用`search_friends`方法可以搜索用户，有四种搜索方式：\n1. 仅获取自己的用户信息\n2. 获取特定`UserName`的用户信息\n3. 获取备注、微信号、昵称中的任何一项等于`name`键值的用户\n4. 获取备注、微信号、昵称分别等于相应键值的用户\n\n其中三、四项可以一同使用，下面是示例程序：\n\n```python\n# 获取自己的用户信息，返回自己的属性字典\nitchat.search_friends()\n# 获取特定UserName的用户信息\nitchat.search_friends(userName='@abcdefg1234567')\n# 获取任何一项等于name键值的用户\nitchat.search_friends(name='littlecodersh')\n# 获取分别对应相应键值的用户\nitchat.search_friends(wechatAccount='littlecodersh')\n# 三、四项功能可以一同使用\nitchat.search_friends(name='LittleCoder机器人', wechatAccount='littlecodersh')\n```\n\n关于公众号、群聊的获取与搜索在文档中有更加详细的介绍。\n\n### 附件的下载与发送\n\nitchat的附件下载方法存储在msg的Text键中。\n\n发送的文件的文件名（图片给出的默认文件名）都存储在msg的FileName键中。\n\n下载方法接受一个可用的位置参数（包括文件名），并将文件相应的存储。\n\n```python\n@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\ndef download_files(msg):\n    msg.download(msg.fileName)\n    itchat.send('@%s@%s' % (\n        'img' if msg['Type'] == 'Picture' else 'fil', msg['FileName']),\n        msg['FromUserName'])\n    return '%s received' % msg['Type']\n```\n\n如果你不需要下载到本地，仅想要读取二进制串进行进一步处理可以不传入参数，方法将会返回图片的二进制串。\n\n```python\n@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\ndef download_files(msg):\n    with open(msg.fileName, 'wb') as f:\n        f.write(msg.download())\n```\n\n### 用户多开\n\n使用如下命令可以完成多开的操作：\n\n```python\nimport itchat\n\nnewInstance = itchat.new_instance()\nnewInstance.auto_login(hotReload=True, statusStorageDir='newInstance.pkl')\n\n@newInstance.msg_register(itchat.content.TEXT)\ndef reply(msg):\n    return msg.text\n\nnewInstance.run()\n```\n\n### 退出及登陆完成后调用特定方法\n\n登陆完成后的方法需要赋值在`loginCallback`中。\n\n而退出后的方法需要赋值在`exitCallback`中。\n\n```python\nimport time\n\nimport itchat\n\ndef lc():\n    print('finish login')\ndef ec():\n    print('exit')\n\nitchat.auto_login(loginCallback=lc, exitCallback=ec)\ntime.sleep(3)\nitchat.logout()\n```\n\n若不设置loginCallback的值，则将会自动删除二维码图片并清空命令行显示。\n\n## 常见问题与解答\n\nQ: 如何通过这个包将自己的微信号变为控制器？\n\nA: 有两种方式：发送、接受自己UserName的消息；发送接收文件传输助手（filehelper）的消息\n\nQ: 为什么我发送信息的时候部分信息没有成功发出来？\n\nA: 有些账号是天生无法给自己的账号发送信息的，建议使用`filehelper`代替。\n\n## 作者\n\n[LittleCoder][littlecodersh]: 构架及维护Python2 Python3版本。\n\n[tempdban][tempdban]: 协议、构架及日常维护。\n\n[Chyroc][Chyroc]: 完成第一版本的Python3构架。\n\n## 类似项目\n\n[youfou/wxpy][youfou-wxpy]: 优秀的api包装和配套插件，微信机器人/优雅的微信个人号API\n\n[liuwons/wxBot][liuwons-wxBot]: 类似的基于Python的微信机器人\n\n[zixia/wechaty][zixia-wechaty]: 基于Javascript(ES6)的微信个人账号机器人NodeJS框架/库\n\n[sjdy521/Mojo-Weixin][Mojo-Weixin]: 使用Perl语言编写的微信客户端框架，可通过插件提供基于HTTP协议的api接口供其他语言调用\n\n[HanSon/vbot][HanSon-vbot]: 基于PHP7的微信个人号机器人，通过实现匿名函数可以方便地实现各种自定义的功能\n\n[yaphone/itchat4j][yaphone-itchat4j]: 用Java扩展个人微信号的能力\n\n[kanjielu/jeeves][kanjielu-jeeves]: 使用springboot开发的微信机器人\n\n## 问题和建议\n\n如果有什么问题或者建议都可以在这个[Issue][issue#1]和我讨论\n\n或者也可以在gitter上交流：[![Gitter][gitter-picture]][gitter]\n\n当然也可以加入我们新建的QQ群讨论：549762872, 205872856\n\n[gitter-picture]: https://badges.gitter.im/littlecodersh/ItChat.svg\n[gitter]: https://gitter.im/littlecodersh/ItChat?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\n[py27]: https://img.shields.io/badge/python-2.7-ff69b4.svg\n[py35]: https://img.shields.io/badge/python-3.5-red.svg\n[english-version]: https://github.com/littlecodersh/ItChat/blob/master/README_EN.md\n[itchatmp]: https://github.com/littlecodersh/itchatmp\n[document]: https://itchat.readthedocs.org/zh/latest/\n[tutorial2]: http://python.jobbole.com/86532/\n[robot-source-code]: https://gist.github.com/littlecodersh/ec8ddab12364323c97d4e36459174f0d\n[robot-qr]: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FQRCode2.jpg?imageView/2/w/400/\n[robot-demo-file]: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FScreenshots%2F%E5%BE%AE%E4%BF%A1%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%9B%BE%E7%89%87.png?imageView/2/w/300/\n[robot-demo-login]: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FScreenshots%2F%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E6%88%AA%E5%9B%BE.jpg?imageView/2/w/450/\n[littlecodersh]: https://github.com/littlecodersh\n[tempdban]: https://github.com/tempdban\n[Chyroc]: https://github.com/Chyroc\n[youfou-wxpy]: https://github.com/youfou/wxpy\n[liuwons-wxBot]: https://github.com/liuwons/wxBot\n[zixia-wechaty]: https://github.com/zixia/wechaty\n[Mojo-Weixin]: https://github.com/sjdy521/Mojo-Weixin\n[HanSon-vbot]: https://github.com/hanson/vbot\n[yaphone-itchat4j]: https://github.com/yaphone/itchat4j\n[kanjielu-jeeves]: https://github.com/kanjielu/jeeves\n[issue#1]: https://github.com/littlecodersh/ItChat/issues/1\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 7.44,
          "content": "itchat\n======\n\n|Python2| |Python3|\n\nitchat is an open source api for WeChat, a commonly-used Chinese social networking app.\n\nAccessing your personal wechat account through itchat in python has never been easier.\n\nA wechat robot can handle all the basic messages with only less than 30 lines of codes.\n\nAnd it's similiar to itchatmp (api for wechat massive platform), learn once and get two tools.\n\nNow Wechat is an important part of personal life, hopefully this repo can help you extend your personal wechat account's functionality and enbetter user's experience with wechat.\n\n**Installation**\n\n.. code:: bash\n\n    pip install itchat\n\n**Simple uses**\n\nWith itchat, if you want to send a message to filehelper, this is how:\n\n.. code:: python\n\n    import itchat\n\n    itchat.auto_login()\n\n    itchat.send('Hello, filehelper', toUserName='filehelper')\n\nAnd you only need to write this to reply personal text messages.\n\n.. code:: python\n    \n    import itchat\n\n    @itchat.msg_register(itchat.content.TEXT)\n    def text_reply(msg):\n        return msg.text\n\n    itchat.auto_login()\n    itchat.run()\n\nFor more advanced uses you may continue on reading or browse the `document <https://itchat.readthedocs.org/zh/latest/>`__.\n\n**Try**\n\nYou may have a try of the robot based on this project first:\n\n|QRCodeOfRobot|\n\nHere is the `code <https://gist.github.com/littlecodersh/ec8ddab12364323c97d4e36459174f0d>`__.\n\n**Advanced uses**\n\n*Special usage of message dictionary*\n\nYou may find out that all the users and messages of itchat are dictionaries by printing them out onto the screen.\n\nBut actually they are useful classes itchat created.\n\nThey have useful keys and useful interfaces, like:\n\n.. code:: python\n    \n    @itchat.msg_register(TEXT)\n    def _(msg):\n        # equals to print(msg['FromUserName'])\n        print(msg.fromUserName)\n\nAnd like:\n\n.. code:: python\n\n    author = itchat.search_friends(nickName='LittleCoder')[0]\n    author.send('greeting, littlecoder!')\n\n*Message register of various types*\n\nThe following is a demo of how itchat is configured to fetch and reply daily information.\n\n.. code:: python\n\n    import itchat, time\n    from itchat.content import *\n\n    @itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING])\n    def text_reply(msg):\n        msg.user.send('%s: %s' % (msg.type, msg.text))\n\n    @itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\n    def download_files(msg):\n        msg.download(msg.fileName)\n        typeSymbol = {\n            PICTURE: 'img',\n            VIDEO: 'vid', }.get(msg.type, 'fil')\n        return '@%s@%s' % (typeSymbol, msg.fileName)\n\n    @itchat.msg_register(FRIENDS)\n    def add_friend(msg):\n        msg.user.verify()\n        msg.user.send('Nice to meet you!')\n\n    @itchat.msg_register(TEXT, isGroupChat=True)\n    def text_reply(msg):\n        if msg.isAt:\n            msg.user.send(u'@%s\\u2005I received: %s' % (\n                msg.actualNickName, msg.text))\n\n    itchat.auto_login(True)\n    itchat.run(True)\n\n*Command line QR Code*\n\nYou can access the QR Code in command line through using this command:\n\n.. code:: python\n\n    itchat.auto_login(enableCmdQR=True)\n\nBecause of width of some character differs from systems, you may adjust the enableCmdQR to fix the problem.\n\n.. code:: python\n\n    # for some linux system, width of block character is one instead of two, so enableCmdQR should be 2\n    itchat.auto_login(enableCmdQR=2)\n\nDefault background color of command line is dark (black), if it's not, you may set enableCmdQR to be negative:\n\n.. code:: python\n\n    itchat.auto_login(enableCmdQR=-1)\n\n*Hot reload*\n\nBy using the following command, you may reload the program without re-scan QRCode in some time.\n\n.. code:: python\n\n    itchat.auto_login(hotReload=True)\n\n*User search*\n\nBy using `search_friends`, you have four ways to search a user:\n\n1. Get your own user information\n2. Get user information through `UserName`\n3. Get user information whose remark name or wechat account or nickname matches name key of the function\n4. Get user information whose remark name, wechat account and nickname match what are given to the function\n\nWay 3, 4 can be used together, the following is the demo program:\n\n.. code:: python\n\n    # get your own user information\n    itchat.search_friends()\n    # get user information of specific username\n    itchat.search_friends(userName='@abcdefg1234567')\n    # get user information of function 3\n    itchat.search_friends(name='littlecodersh')\n    # get user information of function 4\n    itchat.search_friends(wechatAccount='littlecodersh')\n    # combination of way 3, 4\n    itchat.search_friends(name='LittleCoder机器人', wechatAccount='littlecodersh')\n\nThere are detailed information about searching and getting of massive platforms and chatrooms in document.\n\n*Download and send attachments*\n\nThe attachment download function of itchat is in Text key of msg\n\nName of the file (default name of picture) is in FileName key of msg\n\nDownload function accept one location value (include the file name) and store attachment accordingly.\n\n.. code:: python\n\n    @itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\n    def download_files(msg):\n        msg.download(msg.fileName)\n        itchat.send('@%s@%s' % (\n            'img' if msg['Type'] == 'Picture' else 'fil', msg['FileName']),\n            msg['FromUserName'])\n        return '%s received' % msg['Type']\n\nIf you don't want a local copy of the picture, you may pass nothing to the function to get a binary string.\n\n.. code:: python\n\n    @itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\n    def download_files(msg):\n        with open(msg.fileName, 'wb') as f:\n            f.write(msg.download())\n\n*Multi instance*\n\nYou may use the following commands to open multi instance.\n\n.. code:: python\n\n    import itchat\n\n    newInstance = itchat.new_instance()\n    newInstance.auto_login(hotReload=True, statusStorageDir='newInstance.pkl')\n\n    @newInstance.msg_register(itchat.content.TEXT)\n    def reply(msg):\n        return msg['Text']\n\n    newInstance.run()\n\n*Set callback after login and logout*\n\nCallback of login and logout are set through `loginCallback` and `exitCallback`.\n\n.. code:: python\n\n    import time\n\n    import itchat\n\n    def lc():\n        print('finish login')\n    def ec():\n        print('exit')\n\n    itchat.auto_login(loginCallback=lc, exitCallback=ec)\n    time.sleep(3)\n    itchat.logout()\n\nIf loginCallback is not set, qr picture will be deleted and cmd will be cleared.\n\nIf you exit through phone, exitCallback will also be called.\n\n**FAQ**\n\nQ: Why I can't send files whose name is encoded in utf8?\n\nA: That's because of the upload setting of requests, you can put `this file <https://gist.github.com/littlecodersh/9a0c5466f442d67d910f877744011705>`__ (for py3 you need `this <https://gist.github.com/littlecodersh/e93532d5e7ddf0ec56c336499165c4dc>`__) into packages/urllib3 of requests package.\n\nQ: How to use this package to use my wechat as an monitor?\n\nA: There are two ways: communicate with your own account or with filehelper.\n\nQ: Why sometimes I can't send messages?\n\nA: Some account simply can't send messages to yourself, so use `filehelper` instead.\n\n**Comments**\n\nIf you have any problems or suggestions, you can talk to me in this `issue <https://github.com/littlecodersh/ItChat/issues/1>`__\n\nOr on `gitter <https://badges.gitter.im/littlecodersh/ItChat.svg>`__.\n\n.. |QRCodeOfRobot| image:: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FQRCode2.jpg?imageView/2/w/200/\n.. |Python2| image:: https://img.shields.io/badge/python-2.7-ff69b4.svg\n.. |Python3| image:: https://img.shields.io/badge/python-3.5-red.svg\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 8.57,
          "content": "# itchat\n\n[![Gitter][gitter-picture]][gitter] ![py27][py27] ![py35][py35] [Chinese version][chinese-version]\n\nitchat is an open source api for WeChat, a commonly-used Chinese social networking app.\n\nAccessing your personal wechat account through itchat in python has never been easier.\n\nA wechat robot can handle all the basic messages with only less than 30 lines of codes.\n\nAnd it's similiar to itchatmp (api for wechat massive platform), learn once and get two tools.\n\nNow Wechat is an important part of personal life, hopefully this repo can help you extend your personal wechat account's functionality and better user's experience with wechat.\n\n## Installation\n\nitchat can be installed with this little one-line command:\n\n```python\npip install itchat\n```\n\n## Simple uses\n\nWith itchat, if you want to send a message to filehelper, this is how:\n\n```python\nimport itchat\n\nitchat.auto_login()\n\nitchat.send('Hello, filehelper', toUserName='filehelper')\n```\n\nAnd you only need to write this to reply personal text messages.\n\n```python\nimport itchat\n\n@itchat.msg_register(itchat.content.TEXT)\ndef text_reply(msg):\n    return msg.text\n\nitchat.auto_login()\nitchat.run()\n```\n\nFor more advanced uses you may continue on reading or browse the [document][document].\n\n## Have a try\n\nThis QRCode is a wechat account based on the framework of [demo code][robot-source-code]. Seeing is believing, so have a try:)\n\n![QRCode][robot-qr]\n\n## Screenshots\n\n![file-autoreply][robot-demo-file] ![login-page][robot-demo-login]\n\n## Advanced uses\n\n### Special usage of message dictionary\n\nYou may find out that all the users and messages of itchat are dictionaries by printing them out onto the screen.\n\nBut actually they are useful classes itchat created.\n\nThey have useful keys and useful interfaces, like:\n\n```python\n@itchat.msg_register(TEXT)\ndef _(msg):\n    # equals to print(msg['FromUserName'])\n    print(msg.fromUserName)\n```\n\nAnd like:\n\n```python\nauthor = itchat.search_friends(nickName='LittleCoder')[0]\nauthor.send('greeting, littlecoder!')\n```\n\n### Message register of various types\n\nThe following is a demo of how itchat is configured to fetch and reply daily information.\n\n```python\nimport itchat, time\nfrom itchat.content import *\n\n@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING])\ndef text_reply(msg):\n    msg.user.send('%s: %s' % (msg.type, msg.text))\n\n@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\ndef download_files(msg):\n    msg.download(msg.fileName)\n    typeSymbol = {\n        PICTURE: 'img',\n        VIDEO: 'vid', }.get(msg.type, 'fil')\n    return '@%s@%s' % (typeSymbol, msg.fileName)\n\n@itchat.msg_register(FRIENDS)\ndef add_friend(msg):\n    msg.user.verify()\n    msg.user.send('Nice to meet you!')\n\n@itchat.msg_register(TEXT, isGroupChat=True)\ndef text_reply(msg):\n    if msg.isAt:\n        msg.user.send(u'@%s\\u2005I received: %s' % (\n            msg.actualNickName, msg.text))\n\nitchat.auto_login(True)\nitchat.run(True)\n```\n\n### Command line QR Code\n\nYou can access the QR Code in command line through using this command:\n\n```python\nitchat.auto_login(enableCmdQR=True)\n```\n\nBecause of width of some character differs from systems, you may adjust the enableCmdQR to fix the problem.\n\n```python\n# for some linux system, width of block character is one instead of two, so enableCmdQR should be 2\nitchat.auto_login(enableCmdQR=2)\n```\n\nDefault background color of command line is dark (black), if it's not, you may set enableCmdQR to be negative:\n\n```python\nitchat.auto_login(enableCmdQR=-1)\n```\n\n### Hot reload\n\nBy using the following command, you may reload the program without re-scan QRCode in some time.\n\n```python\nitchat.auto_login(hotReload=True)\n```\n\n### User search\n\nBy using `search_friends`, you have four ways to search a user:\n1. Get your own user information\n2. Get user information through `UserName`\n3. Get user information whose remark name or wechat account or nickname matches name key of the function\n4. Get user information whose remark name, wechat account and nickname match what are given to the function\n\nWay 3, 4 can be used together, the following is the demo program:\n\n```python\n# get your own user information\nitchat.search_friends()\n# get user information of specific username\nitchat.search_friends(userName='@abcdefg1234567')\n# get user information of function 3\nitchat.search_friends(name='littlecodersh')\n# get user information of function 4\nitchat.search_friends(wechatAccount='littlecodersh')\n# combination of way 3, 4\nitchat.search_friends(name='LittleCoder机器人', wechatAccount='littlecodersh')\n```\n\nThere is detailed information about searching and getting of massive platforms and chatrooms in document.\n\n### Download and send attachments\n\nThe attachment download function of itchat is in Text key of msg\n\nName of the file (default name of picture) is in FileName key of msg\n\nDownload function accept one location value (include the file name) and store attachment accordingly.\n\n```python\n@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\ndef download_files(msg):\n    msg.download(msg.fileName)\n    itchat.send('@%s@%s' % (\n        'img' if msg['Type'] == 'Picture' else 'fil', msg['FileName']),\n        msg['FromUserName'])\n    return '%s received' % msg['Type']\n```\n\nIf you don't want a local copy of the picture, you may pass nothing to the function to get a binary string.\n\n```python\n@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])\ndef download_files(msg):\n    with open(msg.fileName, 'wb') as f:\n        f.write(msg.download())\n```\n\n### Multi instance\n\nYou may use the following commands to open multi instance.\n\n```python\nimport itchat\n\nnewInstance = itchat.new_instance()\nnewInstance.auto_login(hotReload=True, statusStorageDir='newInstance.pkl')\n\n@newInstance.msg_register(itchat.content.TEXT)\ndef reply(msg):\n    return msg['Text']\n\nnewInstance.run()\n```\n\n### Set callback after login and logout\n\nCallback of login and logout are set through `loginCallback` and `exitCallback`.\n\n```python\nimport time\n\nimport itchat\n\ndef lc():\n    print('finish login')\ndef ec():\n    print('exit')\n\nitchat.auto_login(loginCallback=lc, exitCallback=ec)\ntime.sleep(3)\nitchat.logout()\n```\n\nIf loginCallback is not set, qr picture will be deleted and cmd will be cleared.\n\nIf you exit through phone, exitCallback will also be called.\n\n## FAQ\n\nQ: How to use this package to use my wechat as an monitor?\n\nA: There are two ways: communicate with your own account or with filehelper.\n\nQ: Why sometimes I can't send messages?\n\nA: Some account simply can't send messages to yourself, so use `filehelper` instead.\n\n## Author\n\n[LittleCoder][littlecodersh]: Structure and py2 py3 version\n\n[tempdban][tempdban]: Structure and daily maintainance\n\n[Chyroc][Chyroc]: first py3 version\n\n## See also\n\n[liuwons/wxBot][liuwons-wxBot]: A wechat robot similiar to the robot branch\n\n[zixia/wechaty][zixia-wechaty]: Wechat for bot in Javascript(ES6), Personal Account Robot Framework/Library\n\n[sjdy521/Mojo-Weixin][Mojo-Weixin]: Wechat web api in Perl, available with HTTP requests\n\n[yaphone/itchat4j][yaphone-itchat4j]: Extend your wechat with java\n\n## Comments\n\nIf you have any problems or suggestions, feel free to put it up in this [Issue][issue#1].\n\nOr you may also use [![Gitter][gitter-picture]][gitter]\n\n[gitter-picture]: https://badges.gitter.im/littlecodersh/ItChat.svg\n[gitter]: https://gitter.im/littlecodersh/ItChat?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\n[py27]: https://img.shields.io/badge/python-2.7-ff69b4.svg\n[py35]: https://img.shields.io/badge/python-3.5-red.svg\n[chinese-version]: https://github.com/littlecodersh/ItChat/blob/master/README.md\n[document]: https://itchat.readthedocs.org/zh/latest/\n[robot-source-code]: https://gist.github.com/littlecodersh/ec8ddab12364323c97d4e36459174f0d\n[robot-qr]: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FQRCode2.jpg?imageView/2/w/400/\n[robot-demo-file]: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FScreenshots%2F%E5%BE%AE%E4%BF%A1%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%9B%BE%E7%89%87.png?imageView/2/w/300/\n[robot-demo-login]: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FScreenshots%2F%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E6%88%AA%E5%9B%BE.jpg?imageView/2/w/450/\n[fields.py-2]: https://gist.github.com/littlecodersh/9a0c5466f442d67d910f877744011705\n[fields.py-3]: https://gist.github.com/littlecodersh/e93532d5e7ddf0ec56c336499165c4dc\n[littlecodersh]: https://github.com/littlecodersh\n[tempdban]: https://github.com/tempdban\n[Chyroc]: https://github.com/Chyroc\n[liuwons-wxBot]: https://github.com/liuwons/wxBot\n[zixia-wechaty]: https://github.com/zixia/wechaty\n[Mojo-Weixin]: https://github.com/sjdy521/Mojo-Weixin\n[yaphone-itchat4j]: https://github.com/yaphone/itchat4j\n[issue#1]: https://github.com/littlecodersh/ItChat/issues/1\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "itchat",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 0.73,
          "content": "site_name: 'itchat'\r\npages:\r\n- '介绍':\r\n    - '项目简介': 'index.md'\r\n    - '快速入门': 'intro/start.md'\r\n    - '登陆配置': 'intro/login.md'\r\n    - '回复方法': 'intro/reply.md'\r\n    - '注册方法': 'intro/handler.md'\r\n    - '消息内容': 'intro/messages.md'\r\n    - '各类账号': 'intro/contact.md'\r\n    - '部署程序': 'intro/deploy.md'\r\n- 'API列表': 'api.md'\r\n- 'FAQ': 'FAQ.md'\r\n- '教程文章':\r\n    - '基础新手入门': 'tutorial/tutorial0.md'\r\n    - '实践项目分享': 'tutorial/tutorial2.md'\r\n    - '抓包及原理入门': 'tutorial/tutorial1.md'\r\nextra_css: ['docs/bootstrap/css']\r\nextra_javascript: ['docs/bootstrap/js']\r\ntheme_dir: 'docs/bootstrap'\r\nrepo_url: 'https://github.com/littlecodersh/itchat'\r\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.33,
          "content": "\"\"\" A wechat personal account api project\nSee:\nhttps://github.com/littlecodersh/ItChat\n\"\"\"\n\nfrom setuptools import setup, find_packages\nfrom codecs import open\nfrom os import path\nimport itchat\n\nhere = path.abspath(path.dirname(__file__))\n\nwith open(path.join(here, 'README.rst'), encoding='utf-8') as f:\n    long_description = f.read()\n\nsetup(\n    name='itchat',\n\n    version=itchat.__version__,\n\n    description='A complete wechat personal account api',\n    long_description=long_description,\n\n    url='https://github.com/littlecodersh/ItChat',\n\n    author='LittleCoder',\n    author_email='i7meavnktqegm1b@qq.com',\n\n    license='MIT',\n\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n\n        'Intended Audience :: Developers',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n\n        'License :: OSI Approved :: MIT License',\n\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.6',\n        'Programming Language :: Python :: 2.7',\n    ],\n\n    keywords='wechat itchat api robot weixin personal extend',\n\n    # You can just specify the packages manually here if your project is\n    # simple. Or you can use find_packages().\n    packages=find_packages(),\n\n    install_requires=['requests', 'pyqrcode', 'pypng'],\n\n    # List additional groups of dependencies here\n    extras_require={},\n)\n"
        }
      ]
    }
  ]
}