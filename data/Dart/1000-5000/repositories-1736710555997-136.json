{
  "metadata": {
    "timestamp": 1736710555997,
    "page": 136,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Sub6Resources/flutter_html",
      "stars": 1810,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.35546875,
          "content": ".DS_Store\n\n# Created by https://www.gitignore.io/api/flutter\n# Edit at https://www.gitignore.io/?templates=flutter\n\n### Flutter ###\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.packages\n.pub-cache/\n.pub/\nbuild/\npubspec.lock\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/.last_build_id\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\n# End of https://www.gitignore.io/api/flutter\n\n### JetBrains+all ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### JetBrains+all Patch ###\n# Ignores the whole .idea folder and all .iml files\n# See https://github.com/joeblau/gitignore.io/issues/186 and https://github.com/joeblau/gitignore.io/issues/360\n\n.idea/\n\n# Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-249601023\n\n*.iml\nmodules.xml\n.idea/misc.xml\n*.ipr\n\n# Sonarlint plugin\n.idea/sonarlint\n\n# End of https://www.gitignore.io/api/flutter,jetbrains+all\n\n**/.flutter-plugins-dependencies\n\n**/flutter_export_environment.sh\n\n/example/ios/Flutter/Flutter.podspec\n\npackages/**/pubspec_overrides.yaml\n./pubspec_overrides.yaml\n/example/pubspec_overrides.yaml\n\ncoverage/"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 20e59316b8b8474554b38493b8ca888794b0234a\n  channel: stable\n\nproject_type: package\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 19.015625,
          "content": "# Change Log\n\n#### 3.0.0-beta.2 *May 2023*\n\n - Several Breaking Changes. See the [migration guide](https://github.com/Sub6Resources/flutter_html/wiki/Migration-Guides#300)\n\n - **FIX**: start list items on a new line ([#1281](https://github.com/sub6resources/flutter_html/issues/1281)). ([496d1aa8](https://github.com/sub6resources/flutter_html/commit/496d1aa8e655891d2f597c5e4d7e92057801d815))\n - **FIX**: Add \"display: Display.block\" to table ([#1278](https://github.com/sub6resources/flutter_html/issues/1278)). ([6350f023](https://github.com/sub6resources/flutter_html/commit/6350f02354b7de601ce294123717e2051be97eee))\n - **FIX**: improve API for ExtensionContext and export marker.dart ([#1273](https://github.com/sub6resources/flutter_html/issues/1273)). ([27e33a95](https://github.com/sub6resources/flutter_html/commit/27e33a955e872d47306db9480f74f6da2e9a028a))\n - **FIX**: Cleaned up whitespace processing and added whitespace tests ([#1267](https://github.com/sub6resources/flutter_html/issues/1267)). ([cc00406b](https://github.com/sub6resources/flutter_html/commit/cc00406b1d0c115e5c66dd4bdfb40db32496f55f))\n - **FIX**: a tag should not style as link if href is not provided ([#1265](https://github.com/sub6resources/flutter_html/issues/1265)). ([d7247cb3](https://github.com/sub6resources/flutter_html/commit/d7247cb303c25d0011f85f9b2d3687924de3d83d))\n - **FEAT**: Update CssBoxWidget to handle rtl marker boxes ([#1270](https://github.com/sub6resources/flutter_html/issues/1270)). ([d7091990](https://github.com/sub6resources/flutter_html/commit/d7091990d193e892e2f782ac8d91fc0326aff4bc))\n - **FEAT**: support vertical-align in inline styles ([#1266](https://github.com/sub6resources/flutter_html/issues/1266)). ([fe896de5](https://github.com/sub6resources/flutter_html/commit/fe896de5ed8b79425bb33800a26fa4ac328057fe))\n - **FEAT**: Add WrapperExtension helper ([#1264](https://github.com/sub6resources/flutter_html/issues/1264)). ([2ffa1dda](https://github.com/sub6resources/flutter_html/commit/2ffa1ddabb3f2a660ab85c551255b89fe8a24ab5))\n\n\n#### 3.0.0-beta.1 - *May 2023*\n\n - Several Breaking Changes. See the [migration guide](https://github.com/Sub6Resources/flutter_html/wiki/Migration-Guides#300)\n\n - **FIX**: Aspect ratio exception when height is 0 ([#1222](https://github.com/sub6resources/flutter_html/issues/1222)). ([ed75f8fe](https://github.com/sub6resources/flutter_html/commit/ed75f8fef779e920ecc1f27719a4150a29e3ebee))\n - **FIX**: Fix issue with font scaling introduced in 3.0.0-alpha.6 ([#1173](https://github.com/sub6resources/flutter_html/issues/1173)). ([c75e0dfb](https://github.com/sub6resources/flutter_html/commit/c75e0dfb1be6cb79748f719487043d12bc330c60))\n - **FIX**: Fix various issues with list rendering. ([520ff3c3](https://github.com/sub6resources/flutter_html/commit/520ff3c326d5dc8f5a601022c2a32d58e2e83cbb))\n - **FIX**: Apply margins to <table> properly. ([7581ea79](https://github.com/sub6resources/flutter_html/commit/7581ea798744b2830affaaf75bbdff016b03f7af))\n - **FIX**: Use enum instead of const int internally in length.dart. ([9dc7f08c](https://github.com/sub6resources/flutter_html/commit/9dc7f08ca238ff6a93314be5de716ad4e3baebb8))\n - **FIX**: Change CSSBoxWidget to CssBoxWidget. ([a62449a7](https://github.com/sub6resources/flutter_html/commit/a62449a77c18701a0faf8ffd650f9c535b2d006c))\n - **FEAT**: Support mmultiscripts. ([#1175](https://github.com/sub6resources/flutter_html/issues/1175)). ([a999a300](https://github.com/sub6resources/flutter_html/commit/a999a30027eff0aabb2825ffdbe383f9affab7f6))\n - **FEAT**: Support mfenced. ([#1174](https://github.com/sub6resources/flutter_html/issues/1174)). ([9ca23084](https://github.com/sub6resources/flutter_html/commit/9ca230848beb15332f96294083ed4989831130d7))\n - **FEAT**: Upgrade list-style-type to CSS3. ([deb726ae](https://github.com/sub6resources/flutter_html/commit/deb726ae2776f45305026c0aa081d4a5b5a1c71d))\n - **FEAT**: Support mtable, mtd, mtr for draw matrix. ([#1164](https://github.com/sub6resources/flutter_html/issues/1164)). ([e99e2cc1](https://github.com/sub6resources/flutter_html/commit/e99e2cc1553ab17b4ceff08f784e99283b28dff4))\n\n## 3.0.0-alpha.6 - *September 2022*\n\n - **FIX** #731 Resolve newline `<br>` issue\n - **FIX** Align the baseline of inline content with the baseline of its parent flow, even if it has padding or borders\n - **FIX** Improved fontSize inheritance when cascading styles\n - **FIX** `auto` margins now work for any `Display.BLOCK` element.\n - **FIX** `auto` width and height is now the default, rather than `null`\n - **FIX** New CSSBoxWidget that handles calculations of child sizes for a more accurate HTML/CSS layout\n - **BREAKING** New `Margin`, `Height`, and `Width` classes that allow `em`, `rem`, `px`, `auto`, and `%` values to be given\n - **FEAT** Negative margins are now allowed\n - **FIX** Updated default `p` and `h1-6` styles to use `em` for better font scaling\n - **BREAKING** Package now requires Dart sdk >= Dart 2.17\n - **FIX**: Apply margins to <table> properly. (7581ea79)\n - **FIX**: Use enum instead of const int internally in length.dart. (9dc7f08c)\n - **FIX**: Change CSSBoxWidget to CssBoxWidget. (a62449a7)\n - **FIX**: fix textShadow color declaration handler. (77ffe7cb)\n - **FIX**: ol use default style. (1c2412a2)\n - **FIX**: Crash when a tr tag includes text node. (ba8301c9)\n - **FEAT**: exposes fontFamilyFallback parameter. (1d65aafd)\n\n## [3.0.0-alpha.5] - June 9, 2022:\n* Fixed hot reloads, thanks @arjenmels\n* Fixed link taps not working\n* Improvements in README\n\n## [3.0.0-alpha.3] - April 14, 2022:\n* Fixed styling not being applied to list item markers\n* [video] Fixed crash when iframe or video tags used unsupported/incorrect height or width\n\n## [3.0.0-alpha.2] - January 5, 2022:\n* **BREAKING** Full modularization using split packages; see our upgrade guide or use flutter_html_all \n\n## [3.0.0-alpha.1] - December 21, 2021:\n* **BREAKING** Reworked custom renders pending full modularation in 3.0.0\n* Extended support custom render when using SelectableHtml\n* Updated flutter_svg to 1.0.0\n* Support flutter_webview 3.x\n* Automatic disposal of video and audio controllers\n* Fix block elements bottom spacing in table cells\n\n## [2.2.1] - December 8, 2021:\n* Allow styling on ruby tags\n* Allow width/height/alignment styling on table/tr/td tags\n* Prevent images causing rebuilding and leaking memory\n* Fixes display of list items on iOS with font weights below 400\n* Prevent crash on negative margins or paddings\n\n## [2.2.0] - November 29, 2021:\n* Explicitly declare multiplatform support\n* Extended and fixed list-style (marker) support\n* Basic support for height/width css properties\n* Support changing scroll physics of SelectableText.rich\n* Support text transform css property\n* Bumped minimum flutter_math_fork version for Flutter 2.5 compatibility\n* Fix styling of iframes\n* Fix nested font tag application\n* Fix whitespace rendering between list items\n* Prevent crash on empty <table> tag and tables with both colspan/rowspan\n* Prevent crash on use of negative margins in css\n\n## [2.1.5] - October 7, 2021:\n* Ignore unsupported custom style selectors when using fromCss\n* Fix SVG tag usage inside tables\n* Properly fix regression in usage of line breaks\n\n## [2.1.4] - October 3, 2021:\n* Fix regression in usage of line breaks in body being stripped\n\n## [2.1.3] - October 1, 2021:\n* Update minimum versions of dependencies for Flutter 2.5 compatibility\n* Extended and fixed support for css shadow\n* Fix block tags with explicit whitespace from being stripped\n\n## [2.1.2] - September 2, 2021:\n* Allow setting selectionControls with SelectableHtml\n* Fix onLinkTap not working with SelectableHtml\n* Don't crash when parsing unsupported :hover\n* Prevent endless loading when using animated images\n\n## [2.1.1] - July 28, 2021:\n* Stable release with all 2.1.1-preview.X changes\n\n## [2.1.1-preview.0] - July 27, 2021:\n* Improves hr tag support\n* Fixes a leading whitespace issue\n* Fixes some crashes with CSS parsing\n\n## [2.1.0] - June 3, 2021:\n* SelectableHtml widget (supporting a subset of tags) which allow text selection\n* Fixed shrinkWrap to actually shrink the horizontal space\n* Support style tags to apply styling from inline css\n* Support applying styles from Flutter themes\n* Mouse hover on links when using Flutter Web\n* Allow custom anchor link tap implementations\n* Support additional list styling options\n* Fix several minor whitespace issues in text flow\n* Fixed specific colspan/rowspan usages in tables\n* Fixed whitespace issues around images\n* Swallow duplicate ids to prevent crashing the widget\n* Fixes crashing tap detection when using both link and image taps\n* Updates external dependencies\n* Raised minimum Flutter version to 2.2.0\n\n## [2.0.0] - April 29, 2021:\n* Stable release with all 2.0.0-nullsafety.X changes\n\n## [2.0.0-nullsafety.1] - April 29, 2021:\n* Support basic MathML\n* Support inner links\n* Supply full context tree to custom render\n* Include or exclude specific tags via `tagsList` parameter\n* Fixed lists not rendering correctly\n* Fixes for colspans in tables\n* Fixed various exceptions when using inline styles\n* Fixed text decoration not cascading between parent and child\n* [BREAKING] support whitelisting tags\n   * See the README for details on how to migrate `blacklistedElements` (deprecated) to `tagsList`\n*  Fixed `failed assertion` error when tap-scrolling on any link\n* Updated dependencies\n\n## [2.0.0-nullsafety.0] - March 5, 2021:\n* Nullsafety support\n* Official Flutter Web support\n* New features & fixes for lists:\n   * Support start attribute (e.g. `start=\"5\";`)\n   * Support RTL direction\n   * Support setting padding - you can remove the starting padding if you choose\n   * Fixed unknown character box on iOS when font-weight is below w400\n* Upgraded link functions to provide more granular control\n* Fixed errors in text-decoration parsing\n* Fixed `<audio>` on iOS (\"_duration called on null\" exception)\n* Updated dependencies\n\n## [1.3.0] - February 16, 2021:\n* New image loading API\n* Image loading with request headers, from relative paths and custom loading widget\n* SVG image support from network or local assets\n* Support for `<details>`/`<summary>` tags\n* Allow returning spans from custom tag renders\n* Inline font styling\n* Content-based table column sizing\n* Respect iframe sandbox attribute\n* Fixed text flow and styling when using tags inside `<a>` links\n* Fixed issue where `shrinkWrap` property would not constrain the widget to take up the space it needs\n  * See the [Notes](https://github.com/Sub6Resources/flutter_html#notes) for an example usage with `shrinkWrap`\n* Fixed issue where iframes would not update when their `src`s changed in the HTML data\n* Updated dependencies for Flutter 1.26+\n\n## [1.2.0] - January 14, 2021:\n* Support irregular table sizes\n* Allow for returning `null` from a customRender function to disable the widget\n\n## [1.1.1] - November 22, 2020:\n* Update dependencies\n\n## [1.1.0] - November 22, 2020:\n* Add support for inline styles\n* Update dependencies\n\n## [1.0.2] - August 8, 2020:\n* Fix text scaling issues\n* Update dependencies\n\n## [1.0.1] - August 8, 2020:\n* Fixed flutter_svg: ^0.18.0\n\n# [1.0.0]\n* BREAKING CHANGES (see the [Migration Guide](https://github.com/Sub6Resources/flutter_html/wiki/1.0.0-Migration-Guide) for a full overview of breaking changes.):\n  * The default parser has been completely rewritten and the RichText parser has been removed.\n  * `useRichText` no longer is necessary (The new parser uses RichText under the hood)\n  * `customRender` now works for the default parser.\n* Adds support for `<audio>`, `<video>`, `<iframe>`, `<svg>`, `<ruby>`, `<rt>`, `<rp>`, `<sub>`, and `<sup>`\n* Adds support for over 20 CSS attributes when using the `style` parameter.\n* Fixes many many issues (see the list at [#122](https://github.com/Sub6Resources/flutter_html/pull/122))\n* The following parameters of `Html` have been removed and should no longer be used (see the migration guide):\n  * `useRichText`\n  * `padding`\n  * `backgroundColor`\n  * `defaultTextStyle`\n  * `renderNewlines`\n  * `customEdgeInsets`\n  * `customTextStyle`\n  * `blockSpacing`\n  * `customTextAlign`\n  * `linkStyle`\n  * `imageProperties`\n  * `showImages`\n* The default text style now matches the app's Material `TextTheme.bodyText2` (Fixes [#18](https://github.com/Sub6Resources/flutter_html/issues/18)).\n* Requires Flutter v1.17.0 or greater\n* Fixed quite a few issues with `img`\n* Added a fancy new `style` attribute (this should be used in place of the deprecated styling parameters).\n\n## [1.0.0-pre.1] - December 27, 2019\n\n* For a list of pre-release changes, including several BREAKING CHANGES, see release notes for 1.0.0 above.\n\n## [0.11.1] - December 14, 2019:\n\n* Add support for `AssetImage`s using the `asset:` prefix ([#162](https://github.com/Sub6Resources/flutter_html/pull/162)).\n\n## [0.11.0] - September 10, 2019:\n\n* Make it so `width=100%` doesn't throw error. Fixes [#118](https://github.com/Sub6Resources/flutter_html/issues/118).\n* You can now set width and/or height in `ImageProperties` to negative to ignore the `width` and/or `height` values from the html. Fixes [#97](https://github.com/Sub6Resources/flutter_html/issues/97)\n* The `img` `alt` property now renders correctly when the image fails to load and with the correct style. Fixes [#96](https://github.com/Sub6Resources/flutter_html/issues/96)\n* Add partial support for `sub` tag.\n* Add new option: `shrinkToFit` ([#148](https://github.com/Sub6Resources/flutter_html/pull/148)). Fixes [#75](https://github.com/Sub6Resources/flutter_html/issues/75).\n\n## [0.10.4] - June 22, 2019:\n\n* Add support for `customTextStyle` to block and specialty HTML elements.\n\n## [0.10.3] - June 20, 2019:\n\n* Add `src` to the `onImageTap` callback ([#93](https://github.com/Sub6Resources/flutter_html/pull/93))\n\n## [0.10.2] - June 19, 2019:\n\n* Add `customTextAlign` property ([#112](https://github.com/Sub6Resources/flutter_html/pull/112))\n* Use `tryParse` instead of `parse` for image width and height attributes so that `%` values are ignored safely. Fixes [#98](https://github.com/Sub6Resources/flutter_html/issues/98)\n\n## [0.10.1] - May 20, 2019:\n\n* Image properties and onImageTap for the richTextParser, plus some fixes ([#90](https://github.com/Sub6Resources/flutter_html/pull/90))\n* Hotfix 1 (June 6, 2019): Fixes [#100](https://github.com/Sub6Resources/flutter_html/issues/100)\n\n## [0.10.0] - May 18, 2019:\n\n* **BREAKING:** `useRichText` now defaults to `true`\n* Support for `aside`, `bdi`, `big`, `cite`, `data`, `ins`, `kbd`, `mark`, `nav`, `noscript`, `q`, `rp`, `rt`, `ruby`, `s`, `samp`, `strike`, `template`, `time`, `tt`, and `var` added to `RichText` parser.\n\n## [0.9.9] - May 17, 2019:\n\n* Fixes extra padding issue ([#87](https://github.com/Sub6Resources/flutter_html/issues/87))\n\n## [0.9.8] - May 14, 2019:\n\n* Add support for `address` tag in `RichText` parser.\n\n## [0.9.7] - May 13, 2019:\n* Added onImageError callback\n* Added custom textstyle and edgeinsets callback ([#72](https://github.com/Sub6Resources/flutter_html/pull/72))\n* Update dependency versions ([#84](https://github.com/Sub6Resources/flutter_html/issues/84))\n* Fixes [#82](https://github.com/Sub6Resources/flutter_html/issues/82) and [#86](https://github.com/Sub6Resources/flutter_html/issues/86)\n\n## [0.9.6] - March 11, 2019:\n\n* Fix whitespace issue. ([#59](https://github.com/Sub6Resources/flutter_html/issues/59))\n\n## [0.9.5] - March 11, 2019:\n\n* Add support for `span` in `RichText` parser. ([#61](https://github.com/Sub6Resources/flutter_html/issues/61))\n* Adds `linkStyle` attribute. ([#70](https://github.com/Sub6Resources/flutter_html/pull/70))\n* Adds tests for `header`, `hr`, and `i` ([#62](https://github.com/Sub6Resources/flutter_html/issues/62))\n\n## [0.9.4] - February 5, 2019:\n\n* Fixes `table` error in `RichText` parser. ([#58](https://github.com/Sub6Resources/flutter_html/issues/58))\n\n## [0.9.3] - January 31, 2019:\n\n* Adds support for base64 encoded images\n\n## [0.9.2] - January 31, 2019:\n\n* Adds partial support for deprecated `font` tag.\n\n## [0.9.1] - January 31, 2019:\n\n* Adds full support for `sub` and `sup`. ([#46](https://github.com/Sub6Resources/flutter_html/pull/46))\n* Fixes weak warning caught by Pub analysis ([#54](https://github.com/Sub6Resources/flutter_html/issues/54))\n\n## [0.9.0] - January 31, 2019:\n\n* Adds an alternate `RichText` parser and `useRichText` parameter. ([#37](https://github.com/Sub6Resources/flutter_html/pull/37))\n\n## [0.8.2] - November 1, 2018:\n\n* Removes debug prints.\n\n## [0.8.1] - October 19, 2018:\n\n* Adds `typedef` for `onLinkTap` function.\n\n## [0.8.0] - October 18, 2018:\n\n* Adds custom tag callback\n* Logging no longer shows up in production.\n\n## [0.7.1] - September 11, 2018:\n\n* Fixes issue with text nodes that contain only a space. ([#24](https://github.com/Sub6Resources/flutter_html/issues/24))\n* Fixes typo in README.md from 0.7.0.\n\n## [0.7.0] - September 10, 2018:\n\n* Adds full support for `ul` and `ol`\n\n## [0.6.2] - September 5, 2018:\n\n* Adds check for `img src` before trying to load it.\n* Adds support for `img alt` attribute.\n\n## [0.6.1] - September 4, 2018:\n\n* Fixed minor typo\n\n## [0.6.0] - September 4, 2018:\n\n* Update README.md and example\n* GitHub version 0.6.0 milestone reached\n\n## [0.5.6] - September 4, 2018:\n\n* Adds partial support for `center` and a `renderNewlines` property on the `Html` widget.\n\n## [0.5.5] - September 4, 2018:\n\n* Adds support for `acronym`, and `big`.\n\n## [0.5.4] - August 31, 2018:\n\n* Adds `onLinkTap` callback.\n\n## [0.5.3] - August 25, 2018:\n\n* Adds support for `strike`, and `tt`.\n\n## [0.5.2] - August 25, 2018:\n\n* Adds support for `bdi` and `bdo`\n\n## [0.5.1] - August 25, 2018:\n\n* Fixed issue with table rows not lining up correctly ([#4](https://github.com/Sub6Resources/flutter_html/issues/4))\n\n## [0.5.0] - August 23, 2018:\n\n* Major refactor that makes entire tree a Widget and eliminates the need to distinguish between inline and block elements.\n* Fixed [#7](https://github.com/Sub6Resources/flutter_html/issues/7), [#9](https://github.com/Sub6Resources/flutter_html/issues/9), [#10](https://github.com/Sub6Resources/flutter_html/issues/10), and [#11](https://github.com/Sub6Resources/flutter_html/issues/11).\n\n## [0.4.1] - August 15, 2018:\n\n* Fixed issue with images not loading when inside of `p` tag ([#6](https://github.com/Sub6Resources/flutter_html/issues/6))\n\n## [0.4.0] - August 15, 2018:\n\n* Adds support for `table`, `tbody`, `tfoot`, `thead`, `tr`, `td`, `th`, and `caption`\n\n## [0.3.1] - August 15, 2018:\n\n* Fixed issue where `p` was not rendered with the `defaultTextStyle`.\n\n## [0.3.0] - August 15, 2018:\n\n* Adds support for `abbr`, `address`, `article`, `aside`, `blockquote`, `br`, `cite`, `code`, `data`, `dd`, \n`del`, `dfn`, `dl`, `dt`, `figcaption`, `figure`, `footer`, `header`, `hr`, `img`, `ins`, `kbd`, `li`,\n`main`, `mark`, `nav`, `noscript`, `pre`, `q`, `rp`, `rt`, `ruby`, `s`, `samp`, `section`, `small`, `span`,\n`template`, `time`, and `var`\n\n* Adds partial support for `a`, `ol`, and `ul`\n\n## [0.2.0] - August 14, 2018:\n\n* Adds support for `img`.\n\n## [0.1.1] - August 14, 2018:\n\n* Fixed `b` to be bold, not italic...\n* Adds support for `em`, and `strong`\n* Adds support for a default `TextStyle`\n\n## [0.1.0] - August 14, 2018:\n\n* Renamed widget from `HtmlWidget` to `Html`\n* Adds support for `p`, `h1`, `h2`, `h3`, `h4`, `h5`, and `h6`.\n\n## [0.0.1] - August 14, 2018:\n\n* Adds support for `body`, `div`, `b`, `i`, and `u`.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.16796875,
          "content": "Thanks for your interest in contributing to `flutter_html`!\n\nPlease see the contribution guide in the wiki: https://github.com/Sub6Resources/flutter_html/wiki/Contributing\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0634765625,
          "content": "MIT License\n\nCopyright (c) 2019-2022 The flutter_html developers\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.28515625,
          "content": "# flutter_html\n[![pub package](https://img.shields.io/pub/v/flutter_html.svg)](https://pub.dev/packages/flutter_html)\n[![codecov](https://codecov.io/gh/Sub6Resources/flutter_html/branch/master/graph/badge.svg)](https://codecov.io/gh/Sub6Resources/flutter_html)\n[![CircleCI](https://circleci.com/gh/Sub6Resources/flutter_html.svg?style=svg)](https://circleci.com/gh/Sub6Resources/flutter_html)\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://github.com/Sub6Resources/flutter_html/blob/master/LICENSE)\n\nA Flutter widget for rendering HTML and CSS as Flutter widgets.\n\n```dart\nWidget build(context) {\n  return Html(\n    data: \"\"\"\n        <h1>Hello, World!</h1>\n        <p><span style=\"font-style:italic;\">flutter_html</span> supports a variety of HTML and CSS tags and attributes.</p>\n        <p>Over a hundred static tags are supported out of the box.</p>\n        <p>Or you can even define your own using an <code>Extension</code>: <flutter></flutter></p>\n        <p>Its easy to add custom styles to your Html as well using the <code>Style</code> class:</p>\n        <p class=\"fancy\">Here's a fancy &lt;p&gt; element!</p>\n        \"\"\",\n    extensions: [\n      TagExtension(\n        tagsToExtend: {\"flutter\"},\n        child: const FlutterLogo(),\n      ),\n    ],\n    style: {\n      \"p.fancy\": Style(\n        textAlign: TextAlign.center,\n        padding: const EdgeInsets.all(16),\n        backgroundColor: Colors.grey,\n        margin: Margins(left: Margin(50, Unit.px), right: Margin.auto()),\n        width: Width(300, Unit.px),\n        fontWeight: FontWeight.bold,\n      ),\n    },\n  );\n}\n```\n\nbecomes...\n\n<img src=\"https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/example/screenshots/flutter_html_readme_screenshot.png\" alt=\"A screenshot showing the above code snippet rendered using flutter_html\" />\n\n## Table of Contents:\n\n- [Supported HTML Tags](https://github.com/Sub6Resources/flutter_html/wiki/Supported-HTML-Elements)\n\n- [Supported CSS Attributes](https://github.com/Sub6Resources/flutter_html/wiki/Supported-CSS-Attributes)\n\n- [Why flutter_html?](#why-this-package)\n\n- [Migration Guide](#migration-guides)\n\n- [API Reference](#api-reference)\n\n  - [Constructors](#constructors)\n\n  - [Parameters Table](#parameters)\n  \n- [External Packages](#external-packages)\n  \n  - [`flutter_html_all`](#flutter_html_all)\n  \n  - [`flutter_html_audio`](#flutter_html_audio)\n  \n  - [`flutter_html_iframe`](#flutter_html_iframe)\n  \n  - [`flutter_html_math`](#flutter_html_math)\n  \n  - [`flutter_html_svg`](#flutter_html_svg)\n  \n  - [`flutter_html_table`](#flutter_html_table)\n\n  - [`flutter_html_video`](#flutter_html_video)\n  \n- [Frequently Asked Questions](#faq)\n\n- [Example](#example)\n\n\n## Why this package?\n\nThis package is designed with simplicity in mind. Originally created to allow basic rendering of HTML content into the Flutter widget tree,\nthis project has expanded to include support for basic styling as well! \n\nIf you need something more robust and customizable, the package also provides a number of extension APIs for extremely granular control over widget rendering!\n\n## Migration Guides\n\n[3.0.0 Migration Guide](https://github.com/Sub6Resources/flutter_html/wiki/Migration-Guides#300)\n\n## API Reference:\n\nFor the full API reference, see [here](https://pub.dev/documentation/flutter_html/latest/).\n\nFor a full example, see [here](https://github.com/Sub6Resources/flutter_html/tree/master/example).\n\nBelow, you will find brief descriptions of the parameters the`Html` widget accepts and some code snippets to help you use this package.\n\n### Constructors:\n\nThe package currently has two different constructors - `Html()` and `Html.fromDom()`. \n\nThe `Html()` constructor is for those who would like to directly pass HTML from the source to the package to be rendered. \n\nIf you would like to modify or sanitize the HTML before rendering it, then `Html.fromDom()` is for you - you can convert the HTML string to a `Document` and use its methods to modify the HTML as you wish. Then, you can directly pass the modified `Document` to the package. This eliminates the need to parse the modified `Document` back to a string, pass to `Html()`, and convert back to a `Document`, thus cutting down on load times.\n\n### Parameters:\n\n| Parameters             | Description                                                                                                                                                                                         |\n|------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `data`                 | The HTML data passed to the `Html` widget. This is required and cannot be null when using `Html()`.                                                                                                 |\n| `document`             | The DOM document passed to the `Html` widget. This is required and cannot be null when using `Html.fromDom()`.                                                                                      |\n| `onLinkTap`            | Optional. A function that defines what the widget should do when a link is tapped. The function exposes the `src` of the link as a `String` to use in your implementation.                          |\n| `extensions`           | Optional. A powerful API that allows you to customize everything when rendering a specific HTML tag.                                                                                                |\n| `shrinkWrap`           | Optional. A `bool` used while rendering different widgets to specify whether they should be shrink-wrapped or not, like `ContainerSpan`                                                             |\n| `onlyRenderTheseTags`  | Optional. An exclusive set of elements the `Html` widget should render. Note that your html will be wrapped in `<body>` and `<html>` if it isn't already, so you should include those in this list. |\n| `doNotRenderTheseTags` | Optional. A set of tags that should not be rendered by the `Html` widget.                                                                                                                           |\n| `style`                | Optional. A powerful API that allows you to customize the style that should be used when rendering a specific HTMl tag.                                                                             |\n\n\nMore examples and in-depth details are available:\n\n - [Style](https://github.com/Sub6Resources/flutter_html/wiki/How-To-Use-Style).\n - [HtmlExtension](https://github.com/Sub6Resources/flutter_html/wiki/How-To-Use-Extensions)\n\n## External Packages\n\n### `flutter_html_all`\n\nThis package is simply a convenience package that exports all the other external packages below. You should use this if you plan to render all the tags that require external dependencies.\n\n### `flutter_html_audio`\n\nThis package renders audio elements using the [`chewie_audio`](https://pub.dev/packages/chewie_audio) and the [`video_player`](https://pub.dev/packages/video_player) plugin.\n\nThe package considers the attributes `controls`, `loop`, `src`, `autoplay`, `width`, and `muted` when rendering the audio widget.\n\n#### Adding the `AudioHtmlExtension`:\n\nAdd the dependency to your pubspec.yaml:\n\n    flutter pub add flutter_html_audio\n\n```dart\nimport 'package:flutter_html_audio/flutter_html_audio';\n\nWidget html = Html(\n  data: myHtml,\n  extensions: [\n    AudioHtmlExtension(),\n  ],\n);\n```\n\n### `flutter_html_iframe`\n\nThis package renders iframes using the [`webview_flutter`](https://pub.dev/packages/webview_flutter) plugin. \n\nWhen rendering iframes, the package considers the width, height, and sandbox attributes. \n\nSandbox controls the JavaScript mode of the webview - a value of `null` or `allow-scripts` will set `javascriptMode: JavascriptMode.unrestricted`, otherwise it will set `javascriptMode: JavascriptMode.disabled`.\n\n#### Adding the `IframeHtmlExtension`:\n\nAdd the dependency to your pubspec.yaml:\n\n    flutter pub add flutter_html_iframe\n\n```dart\nimport 'package:flutter_html_iframe/flutter_html_iframe';\n\nWidget html = Html(\n  data: myHtml,\n  extensions: [\n    IframeHtmlExtension(),\n  ],\n);\n```\n\nYou can set the `navigationDelegate` of the webview with the `navigationDelegate` property on `IframeHtmlExtension`. This allows you to block or allow the loading of certain URLs.\n\n### `flutter_html_math`\n\nThis package renders MathML elements using the [`flutter_math_fork`](https://pub.dev/packages/flutter_math_fork) plugin.\n\nWhen rendering MathML, the package takes the MathML data within the `<math>` tag and tries to parse it to Tex. Then, it will pass the parsed string to `flutter_math_fork`.\n\nBecause this package is parsing MathML to Tex, it may not support some functionalities. The current list of supported tags can be found [on the Wiki](https://github.com/Sub6Resources/flutter_html/wiki/First-Party-Extensions#flutter_html_math), but some of these only have partial support at the moment.\n\n#### Adding the `MathHtmlExtension`:\n\nAdd the dependency to your pubspec.yaml:\n\n    flutter pub add flutter_html_math\n\n```dart\nimport 'package:flutter_html_math/flutter_html_math';\n\nWidget html = Html(\n  data: myHtml,\n  extensions: [\n    MathHtmlExtension(),\n  ],\n);\n```\n\nIf the parsing errors, you can use the `onMathErrorBuilder` property of `MathHtmlException` to catch the error and potentially fix it on your end.\n\nThe function exposes the parsed Tex `String`, as well as the error and error with type from `flutter_math_fork` as a `String`.\n\nYou can analyze the error and the parsed string, and finally return a new instance of `Math.tex()` with the corrected Tex string.\n\n#### Tex\n\nIf you have a Tex string you'd like to render inside your HTML you can do that using the same [`flutter_math_fork`](https://pub.dev/packages/flutter_math_fork) plugin.\n\nUse a custom tag inside your HTML (an example could be `<tex>`), and place your **raw** Tex string inside.\n \nThen, use the `extensions` parameter to add the widget to render Tex. It could look like this:\n\n```dart\nWidget htmlWidget = Html(\n  data: r\"\"\"<tex>i\\hbar\\frac{\\partial}{\\partial t}\\Psi(\\vec x,t) = -\\frac{\\hbar}{2m}\\nabla^2\\Psi(\\vec x,t)+ V(\\vec x)\\Psi(\\vec x,t)</tex>\"\"\",\n  extensions: [\n    TagExtension(\n      tagsToExtend: {\"tex\"},\n      builder: (extensionContext) {\n        return Math.tex(\n          extensionContext.innerHtml,\n          mathStyle: MathStyle.display,\n          textStyle: extensionContext.styledElement?.style.generateTextStyle(),\n          onErrorFallback: (FlutterMathException e) {\n            //optionally try and correct the Tex string here\n            return Text(e.message);\n          },\n        );\n      }\n    ),\n  ],\n);\n```\n\n### `flutter_html_svg`\n\nThis package renders svg elements using the [`flutter_svg`](https://pub.dev/packages/flutter_svg) plugin.\n\nWhen rendering SVGs, the package takes the SVG data within the `<svg>` tag and passes it to `flutter_svg`. The `width` and `height` attributes are considered while rendering, if given.\n\nThe package also exposes a few ways to render SVGs within an `<img>` tag, specifically base64 SVGs, asset SVGs, and network SVGs.\n\n#### Adding the `SvgHtmlExtension`:\n\nAdd the dependency to your pubspec.yaml:\n\n    flutter pub add flutter_html_svg\n\n```dart\nimport 'package:flutter_html_svg/flutter_html_svg';\n\nWidget html = Html(\n  data: myHtml,\n  extensions: [\n    SvgHtmlExtension(),\n  ],\n);\n```\n\n### `flutter_html_table`\n\nThis package renders table elements using the [`flutter_layout_grid`](https://pub.dev/packages/flutter_layout_grid) plugin.\n\nWhen rendering table elements, the package tries to calculate the best fit for each element and size its cell accordingly. `Rowspan`s and `colspan`s are considered in this process, so cells that span across multiple rows and columns are rendered as expected. Heights are determined intrinsically to maintain an optimal aspect ratio for the cell.\n\n#### Adding the `TableHtmlExtension`:\n\nAdd the dependency to your pubspec.yaml:\n\n    flutter pub add flutter_html_table\n\n```dart\nimport 'package:flutter_html_table/flutter_html_table';\n\nWidget html = Html(\n  data: myHtml,\n  extensions: [\n    TableHtmlExtension(),\n  ],\n);\n```\n\n### `flutter_html_video`\n\nThis package renders video elements using the [`chewie`](https://pub.dev/packages/chewie) and the [`video_player`](https://pub.dev/packages/video_player) plugin.\n\nThe package considers the attributes `controls`, `loop`, `src`, `autoplay`, `poster`, `width`, `height`, and `muted` when rendering the video widget.\n\n#### Adding the `VideoHtmlExtension`:\n\nAdd the dependency to your pubspec.yaml:\n\n    flutter pub add flutter_html_video\n\n```dart\nimport 'package:flutter_html_video/flutter_html_video';\n\nWidget html = Html(\n  data: myHtml,\n  extensions: [\n    VideoHtmlExtension(),\n  ],\n);\n```\n\n## FAQ\n\n### Why can't I get `<audio>`/`<iframe>`/`<math>`/`<svg>`/`<table>`/<video>` to show up?\n\nHave you followed the instructions as described [above](#external-packages)?\n\nIf so, feel free to file an issue or start a discussion for some extra help.\n\n### How can I render `LaTex` in my HTML?\n\nSee the [above example](#tex).\n\n### How do I use this inside of a `Row()`?\n\nIf you'd like to use this widget inside of a `Row()`, make sure to set `shrinkWrap: true` and place your widget inside expanded:\n\n```dart\nWidget row = Row(\n   children: [\n        Expanded(\n            child: Html(\n              shrinkWrap: true,\n              //other params\n            )\n        ),\n\t    //whatever other widgets\n   ]\n);\n```\n\n## Example\n\nHere's what the example in example/lib/main.dart looks like after being run (in Chrome):\n\n<table>\n<tr>\n<td><img src=\"https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/example/screenshots/flutter_html_screenshot.png\" alt=\"A screenshot showing the result of running the example\" /></td>\n<td><img src=\"https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/example/screenshots/flutter_html_screenshot1.png\" alt=\"A second screenshot showing the result of running the example\" /></td>\n<td><img src=\"https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/example/screenshots/flutter_html_screenshot2.png\" alt=\"A third screenshot showing the result of running the example\" /></td>\n<td><img src=\"https://raw.githubusercontent.com/Sub6Resources/flutter_html/master/example/screenshots/flutter_html_screenshot3.png\" alt=\"A fourth screenshot showing the result of running the example\" /></td>\n</tr>\n</table>\n\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 1.4140625,
          "content": "# This file configures the analyzer, which statically analyzes Dart code to\n# check for errors, warnings, and lints.\n#\n# The issues identified by the analyzer are surfaced in the UI of Dart-enabled\n# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be\n# invoked from the command line by running `flutter analyze`.\n\n# The following line activates a set of recommended lints for Flutter apps,\n# packages, and plugins designed to encourage good coding practices.\ninclude: package:flutter_lints/flutter.yaml\n\nlinter:\n  # The lint rules applied to this project can be customized in the\n  # section below to disable rules from the `package:flutter_lints/flutter.yaml`\n  # included above or to enable additional rules. A list of all available lints\n  # and their documentation is published at\n  # https://dart-lang.github.io/linter/lints/index.html.\n  #\n  # Instead of disabling a lint rule for the entire project in the\n  # section below, it can also be suppressed for a single line of code\n  # or a specific dart file by using the `// ignore: name_of_lint` and\n  # `// ignore_for_file: name_of_lint` syntax on the line or in the file\n  # producing the lint.\n  rules:\n  # avoid_print: false  # Uncomment to disable the `avoid_print` rule\n  # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule\n\n# Additional information about this file can be found at\n# https://dart.dev/guides/language/analysis-options"
        },
        {
          "name": "combine_coverage.sh",
          "type": "blob",
          "size": 0.4541015625,
          "content": "#!/usr/bin/env bash\n\nescapedPath=\"$(echo `pwd` | sed 's/\\//\\\\\\//g')\"\n\nif grep flutter pubspec.yaml > /dev/null; then\n  if [ -d \"coverage\" ]; then\n    # combine line coverage info from package tests to a common file\n    if [ ! -d \"$MELOS_ROOT_PATH/coverage_report\" ]; then\n      mkdir \"$MELOS_ROOT_PATH/coverage_report\"\n    fi\n    sed \"s/^SF:lib/SF:$escapedPath\\/lib/g\" coverage/lcov.info >> \"$MELOS_ROOT_PATH/coverage_report/lcov.info\"\n    rm -rf \"coverage\"\n  fi\nfi"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "melos.yaml",
          "type": "blob",
          "size": 0.7333984375,
          "content": "name: flutter_html\nrepository: https://github.com/sub6resources/flutter_html\n\npackages:\n  - packages/*\n  - .\n  - example\n\ncommand:\n  bootstrap:\n    usePubspecOverrides: true\n    runPubGetInParallel: false\n  version:\n    includeCommitId: true\n\nscripts:\n  analyze:\n    exec: flutter analyze . --fatal-infos\n\n  test:selective_unit_test:\n    run: melos exec --dir-exists=\"test\" --fail-fast -- flutter test --no-pub --coverage\n    description: Run Flutter tests for a specific package in this project.\n    select-package:\n      flutter: true\n      dir-exists: test\n\n  test:\n    run: melos run test:selective_unit_test --no-select\n    description: Run all Flutter tests in this project.\n\n  gen_coverage: melos exec -- \"\\$MELOS_ROOT_PATH/combine_coverage.sh\""
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 1.4140625,
          "content": "name: flutter_html\ndescription: A Flutter widget for rendering static HTML and CSS as Flutter widgets.\nversion: 3.0.0-beta.2\nhomepage: https://github.com/Sub6Resources/flutter_html\n\nenvironment:\n  sdk: '>=2.17.0 <4.0.0'\n  flutter: '>=2.2.0'\n\ndependencies:\n  # Plugin for parsing html\n  html: ^0.15.3\n\n  # Plugin for parsing css\n  csslib: ^0.17.2\n\n  # Plugin for firstWhereOrNull extension on lists\n  collection: ^1.17.0\n\n  # plugin to manage lists and counting in a variety of styles\n  list_counter: ^1.0.2\n\n  flutter:\n    sdk: flutter\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n  flutter_lints: ^2.0.1\n  meta: ^1.8.0\n  melos: ^3.0.1\n\nscreenshots:\n  - description: 'An example of the output produced by flutter_html'\n    path: example/screenshots/flutter_html_screenshot.png\n  - description: 'Continued example of the output produced by flutter_html'\n    path: example/screenshots/flutter_html_screenshot1.png\n  - description: 'Continued example of the output produced by flutter_html'\n    path: example/screenshots/flutter_html_screenshot2.png\n  - description: 'Continued example of the output produced by flutter_html'\n    path: example/screenshots/flutter_html_screenshot3.png\n  - description: 'Another example of the output produced by flutter_html'\n    path: example/screenshots/flutter_html_readme_screenshot.png\n\nfunding:\n  - https://opencollective.com/flutter_html\n\ntopics:\n  - html\n  - css\n  - widgets\n  - layout\n  - flutter_html\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}