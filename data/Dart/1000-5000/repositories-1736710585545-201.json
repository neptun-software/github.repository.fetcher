{
  "metadata": {
    "timestamp": 1736710585545,
    "page": 201,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jonbhanson/flutter_native_splash",
      "stars": 1371,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5078125,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n# Libraries should not include pubspec.lock, per https://dart.dev/guides/libraries/private-files#pubspeclock.\n/pubspec.lock\n**/doc/api/\n.dart_tool/\n.packages\nbuild/\n"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.267578125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled.\n\nversion:\n  revision: db747aa1331bd95bc9b3874c842261ca2d302cd5\n  channel: stable\n\nproject_type: plugin\n"
        },
        {
          "name": ".run",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.029296875,
          "content": "language: dart\n\ndart:\n  - dev\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 27.8232421875,
          "content": "## [2.4.4] - (2024-Dec-29)\n\n- Added the ability to generate all flavors with a single flag. Closes [#751](https://github.com/jonbhanson/flutter_native_splash/issues/751)\n- Update the docs to clarify dark mode parameters.  Closes [#720](https://github.com/jonbhanson/flutter_native_splash/issues/720).\n\n## [2.4.3] - (2024-Nov-17)\n\n- Add Swift Package Manager support.  Closes [#749](https://github.com/jonbhanson/flutter_native_splash/issues/749).\n- Update example to use Kotlin.\n\n## [2.4.2] - (2024-Oct-20)\n\n- Updated dependencies.\n- Clarified documentation.  Closes [#743](https://github.com/jonbhanson/flutter_native_splash/issues/743).\n\n## [2.4.1] - (2024-Jun-07)\n\n- Added support for bottom padding of branding image. Thanks [Mudassir](https://github.com/Lzyct) for [PR #709](https://github.com/jonbhanson/flutter_native_splash/pull/709). Closes [#694](https://github.com/jonbhanson/flutter_native_splash/issues/694).\n- Updated dependencies.\n- Corrected comment in template.  Closes [#705](https://github.com/jonbhanson/flutter_native_splash/issues/705).\n\n## [2.4.0] - (2024-Mar-17)\n\n- Migrate from [js](https://pub.dev/packages/js) to [js_interop](https://dart.dev/interop/js-interop). Closes [#676](https://github.com/jonbhanson/flutter_native_splash/issues/676). Closes [#671](https://github.com/jonbhanson/flutter_native_splash/issues/671).\n\n## [2.3.13] - (2024-Feb-18)\n\n- Added better exception handling based on [this comment](https://github.com/jonbhanson/flutter_native_splash/issues/643#issuecomment-1938416308). Thanks [BujusKrachus](https://github.com/BujusKrachus) for the detailed explanation.\n\n## [2.3.12] - (2024-Feb-18)\n\n- Fix incorrect rejection of parameter values. Fixes [#652](https://github.com/jonbhanson/flutter_native_splash/issues/652).\n- Updated dependencies.\n\n## [2.3.11] - (2024-Feb-14)\n\n- Updated dependencies.\n\n## [2.3.10] - (2024-Jan-28)\n\n- Fixed parameter `background_image_android`. Fixes [#652](https://github.com/jonbhanson/flutter_native_splash/issues/652).\n- Exit process with error code when unexpected config provided in YAML. Thanks [smit-ghl](https://github.com/smit-ghl) for [PR #657](https://github.com/jonbhanson/flutter_native_splash/pull/657).\n- Updated readme. Thanks [Mercutio1243](https://github.com/Mercutio1243) for the suggestions. Closes [#658](https://github.com/jonbhanson/flutter_native_splash/issues/658).\n\n## [2.3.9] - (2023-Dec-31)\n\n- Resolve lint warnings. Update readme.\n\n## [2.3.8] - (2023-Dec-07)\n\n- Make functions private that should not be public.\n\n## [2.3.7] - (2023-Dec-06)\n\n- Roll back web fade as it was a breaking change. Fixes [#628](https://github.com/jonbhanson/flutter_native_splash/issues/628). Fixes [#627](https://github.com/jonbhanson/flutter_native_splash/issues/627). Fixes [#622](https://github.com/jonbhanson/flutter_native_splash/issues/622).\n\n## [2.3.6] - (2023-Nov-20)\n\n- Add fade between splash and app on web. Thanks [eggp](https://github.com/eggp) for the suggestion and example code. Closes [#608](https://github.com/jonbhanson/flutter_native_splash/issues/608).\n- Add check of parameter names to catch user typos in the parameters.\n\n## [2.3.5] - (2023-Oct-29)\n\n- Remove white flash on web. Thanks [eggp](https://github.com/eggp) for pointing out the problem and solution. Closes [#607](https://github.com/jonbhanson/flutter_native_splash/issues/607).\n\n## [2.3.4] - (2023-Oct-16)\n\n- Use `average` for image interpolation to reduce aliasing. Thanks [Shawn](https://github.com/esDotDev) for the tip. Fixes [#598](https://github.com/jonbhanson/flutter_native_splash/issues/598).\n\n## [2.3.3] - (2023-Oct-02)\n\n- Updated dependencies.\n\n## [2.3.2] - (2023-Aug-13)\n\n- Update the example.\n- Update the `environment` value in the `pubspec.yaml`.\n\n## [2.3.1] - (2023-Jun-04)\n\n- Package speed up using Isolates to generate files at the same time. Thanks [Vladimir](https://github.com/vlazdra) for [PR #558](https://github.com/jonbhanson/flutter_native_splash/pull/558).\n- New command for generating all flavors at once: --flavors\n- Replaced deprecated 'flutter pub run' with 'dart run'. Thanks [Aditya](https://github.com/adityar224) for [PR #554](https://github.com/jonbhanson/flutter_native_splash/pull/554).\n- Fix fullscreen switch not working for Android <12v in System.dark mode. Fixes [#559](https://github.com/jonbhanson/flutter_native_splash/issues/559).\n\n## [2.3.0] - (2023-May-15)\n\n- Support for GIFs in splash screen for web. Thanks [OutdatedGuy](https://github.com/OutdatedGuy) for [PR #547](https://github.com/jonbhanson/flutter_native_splash/pull/547).\n- Using inline css & js in index.html to decrease load time. Thanks [OutdatedGuy](https://github.com/OutdatedGuy) for [PR #548](https://github.com/jonbhanson/flutter_native_splash/pull/548).\n- Update example app for Flutter 3.10. Thanks [OutdatedGuy](https://github.com/OutdatedGuy) for [PR #551](https://github.com/jonbhanson/flutter_native_splash/pull/551).\n- Replaced deprecated code with suggested ones. Thanks [OutdatedGuy](https://github.com/OutdatedGuy) for [PR #550](https://github.com/jonbhanson/flutter_native_splash/pull/550).\n- Update ci.yaml with latest flutter CLI commands. Thanks [OutdatedGuy](https://github.com/OutdatedGuy) for [PR #552](https://github.com/jonbhanson/flutter_native_splash/pull/552).\n- Fix compatibility with AGP 8.0. Thanks [Aljoscha](https://github.com/Almighty-Alpaca) for [PR #545](https://github.com/jonbhanson/flutter_native_splash/pull/545).\n- Migrate to systemUIMode. Thanks [Milind](https://github.com/milindgoel15) for [PR #534](https://github.com/jonbhanson/flutter_native_splash/pull/534).\n\n## [2.2.19] - (2023-Mar-05)\n\n- Refresh the example with the latest version of Flutter.\n- Fix Notification bar incorrectly still showing on Xiaomi devices. Fixes [#517](https://github.com/jonbhanson/flutter_native_splash/issues/517).\n- Updated dependencies.\n\n## [2.2.18] - (2023-Feb-19)\n\n- Remove `v31/styles.xml` files if not in use. Fixes [#514](https://github.com/jonbhanson/flutter_native_splash/issues/514).\n- Remove web changes on `remove` command. Fixes [#516](https://github.com/jonbhanson/flutter_native_splash/issues/516).\n\n## [2.2.17] - (2023-Jan-15)\n\n- Updated image dependency to v4.0.10. Fixes [#497](https://github.com/jonbhanson/flutter_native_splash/issues/497).\n- Changed image processing from linear to cubic to improve image quality. Fixes [#472](https://github.com/jonbhanson/flutter_native_splash/issues/472).\n\n## [2.2.16] - (2022-Nov-27)\n\n- Update documentation on Android 12.\n- Fix web background image. Thanks [Severin](https://github.com/Bungeefan) for [PR #459](https://github.com/jonbhanson/flutter_native_splash/pull/459).\n- Support more image formats. Thanks [Severin](https://github.com/Bungeefan) for [PR #460](https://github.com/jonbhanson/flutter_native_splash/pull/460).\n\n## [2.2.15] - (2022-Nov-20)\n\n- Fix iOS background image build incorrectly when background dark image is used. Fixes [#452](https://github.com/jonbhanson/flutter_native_splash/issues/452), fixes [#439](https://github.com/jonbhanson/flutter_native_splash/issues/439).\n- Correct background image/color handling on web. Fixes [#450](https://github.com/jonbhanson/flutter_native_splash/issues/450), fixes [324](https://github.com/jonbhanson/flutter_native_splash/issues/324).\n- Don't include dark styling in web if not specified in config. Fixes [#453](https://github.com/jonbhanson/flutter_native_splash/issues/453).\n- Add \\_Parameters class to hold parameters.\n\n## [2.2.14] - (2022-Nov-07)\n\n- Don't update `values-31` if there is no `android_12` section in the config. Closes [#447](https://github.com/jonbhanson/flutter_native_splash/issues/447).\n- Additional fix for index.html getting extra blank lines. Fixes [#430](https://github.com/jonbhanson/flutter_native_splash/issues/430).\n\n## [2.2.13] - (2022-Oct-30)\n\n- Corrected Android 12 dark parameters not defaulting to light parameters. Thanks [elliotrtd](https://github.com/elliotrtd) for the [heads up](https://github.com/jonbhanson/flutter_native_splash/issues/400#issuecomment-1235100173) on this issue.\n\n## [2.2.12] - (2022-Oct-23)\n\n- Updated readme and dependancies.\n- Add CI, resolve some lints, and fix tests. Thanks [lsaudon](https://github.com/lsaudon) for [PR #433](https://github.com/jonbhanson/flutter_native_splash/pull/433).\n\n## [2.2.11] - (2022-Oct-09)\n\n- Fixed Android 11 color issue. Fixes [#429](https://github.com/jonbhanson/flutter_native_splash/issues/429).\n- Fix index.html getting extra blank lines. Fixes [#430](https://github.com/jonbhanson/flutter_native_splash/issues/430).\n- Update the readme. Closes [#431](https://github.com/jonbhanson/flutter_native_splash/issues/431).\n\n## [2.2.10+1] - (2022-Sep-25)\n\n- Update bug report template.\n- Package housekeeping to stay up to date with Flutter.\n\n## [2.2.9] - (2022-Sep-07)\n\n- Update pub.dev links. Thanks [Joachim](https://github.com/nohli) for [PR #415](https://github.com/jonbhanson/flutter_native_splash/pull/415).\n- Fix Android 12 branding issue. Thanks [Matías](https://github.com/mirland) for [PR #414](https://github.com/jonbhanson/flutter_native_splash/pull/414).\n- Corrected copyright notice. Closes [#416](https://github.com/jonbhanson/flutter_native_splash/issues/416).\n- Added Android 12 example. Closes [#412](https://github.com/jonbhanson/flutter_native_splash/issues/412).\n\n## [2.2.8] - (2022-Aug-21)\n\n- Use Theme.Light.NoTitleBar. Fixes [#402](https://github.com/jonbhanson/flutter_native_splash/issues/402).\n- Correct android spelling in readme. Thanks [Muhammad](https://github.com/itsahmed-dev) for [PR #407](https://github.com/jonbhanson/flutter_native_splash/pull/407).\n- Use html parser. Thanks [OutdatedGuy](https://github.com/OutdatedGuy) for [PR #396](https://github.com/jonbhanson/flutter_native_splash/pull/396).\n- Separate branding property for Android 12. Closes [#405](https://github.com/jonbhanson/flutter_native_splash/issues/405).\n\n## [2.2.7] - (2022-July-31)\n\n- Remove branding on Android 12 if branding is not specified. Fixes [#399](https://github.com/jonbhanson/flutter_native_splash/issues/399).\n\n## [2.2.6] - (2022-July-24)\n\n- Fix parseColor test. Thanks [mihiro](https://github.com/mihiron) for [PR #393](https://github.com/jonbhanson/flutter_native_splash/pull/393).\n- Fix branding image source link broken and optimized code with optional chaining operator. Thanks [OutdatedGuy](https://github.com/OutdatedGuy) for [PR #394](https://github.com/jonbhanson/flutter_native_splash/pull/394) and [PR #395](https://github.com/jonbhanson/flutter_native_splash/pull/395).\n\n## [2.2.5] - (2022-July-17)\n\n- Added Branding Image support for the web platform. Thanks [OutdatedGuy](https://github.com/OutdatedGuy) for [PR #386](https://github.com/jonbhanson/flutter_native_splash/pull/386).\n- Fix android12 config name. Thanks [mihiro](https://github.com/mihiron) for [PR #390](https://github.com/jonbhanson/flutter_native_splash/pull/390).\n\n## [2.2.4] - (2022-July-03)\n\n- Added parameters for platform-specific images. Closes [#375](https://github.com/jonbhanson/flutter_native_splash/issues/375).\n- Remove black status bar which appeared on Android devices with a notch. Fixes [#311](https://github.com/jonbhanson/flutter_native_splash/issues/311).\n\n## [2.2.3+1] - (2022-June-12)\n\n- Updated readme.\n\n## [2.2.3] - (2022-June-5)\n\n- Create new storyboard file rather than try to modify existing file. Closes [#369](https://github.com/jonbhanson/flutter_native_splash/issues/369).\n- Reverted 2.1.6 change of using light settings for dark mode if omitted. Fixes [#368](https://github.com/jonbhanson/flutter_native_splash/issues/368).\n\n## [2.2.2] - (2022-May-29)\n\n- Corrected Android 12 color overriding color parameter. Closes [#365](https://github.com/jonbhanson/flutter_native_splash/issues/365).\n- Add support for setting screen orientation in Android. Closes [#344](https://github.com/jonbhanson/flutter_native_splash/issues/344).\n\n## [2.2.1] - (2022-May-22)\n\n- Updated dependencies. Closes [#358](https://github.com/jonbhanson/flutter_native_splash/issues/358).\n- Added Android 12 background color support. Closes [#357](https://github.com/jonbhanson/flutter_native_splash/issues/357).\n- Resolve exception that occurs when using remove command. Closes [#355](https://github.com/jonbhanson/flutter_native_splash/issues/355).\n\n## [2.2.0+1] - (2022-May-15)\n\n- Added flavor support. Thanks [Vladimir](https://github.com/vlazdra) for PR [#316](https://github.com/jonbhanson/flutter_native_splash/pull/316)! Closes [#160](https://github.com/jonbhanson/flutter_native_splash/issues/160).\n- Fix androidV31StylesXml not being generated when darkBackgroundImage is set. Thanks (Hallot)[https://github.com/Hallot] for PR [#349](https://github.com/jonbhanson/flutter_native_splash/pull/349).\n- Fix incorrect android_12 check for image_dark. Closes [#347](https://github.com/jonbhanson/flutter_native_splash/issues/347).\n- Fix Flutter v3 WidgetsBinding.Instance! Null check warning. Closes [#351](https://github.com/jonbhanson/flutter_native_splash/issues/351).\n\n## [2.1.6] - (2022-Apr-17)\n\n- Use light settings for dark mode if dark mode settings are omitted.\n- Add ALT tag for web. Fixes [#339](https://github.com/jonbhanson/flutter_native_splash/issues/339).\n\n## [2.1.5] - (2022-Apr-10)\n\n- Thanks [Yousef](https://github.com/YDA93) for [PR #332](https://github.com/jonbhanson/flutter_native_splash/pull/332) adding stricter lint rules and [zuboje](https://github.com/zuboje) for [PR #334](https://github.com/jonbhanson/flutter_native_splash/pull/334) adding deprecated message.\n\n## [2.1.3+1] - (2022-Apr-03)\n\n- Updated documentation. Closes [#327](https://github.com/jonbhanson/flutter_native_splash/issues/327).\n- `remove` correctly handles multiple plist files. Fixes [#247](https://github.com/jonbhanson/flutter_native_splash/issues/247).\n\n## [2.1.2+1] - (2022-Mar-27)\n\n- Add branding support in Android 12. Thanks [Vladimir](https://github.com/vlazdra) for the [PR](https://github.com/jonbhanson/flutter_native_splash/pull/316).\n- Updated readme. Closes [#317](https://github.com/jonbhanson/flutter_native_splash/issues/317). Closes [#318](https://github.com/jonbhanson/flutter_native_splash/issues/318).\n- Don't create a blank branding image set. Fixes [#264](https://github.com/jonbhanson/flutter_native_splash/issues/264).\n\n## [2.1.1] - (2022-Mar-13)\n\n- Fix for pixelated splash image on web. Fixes [#263](https://github.com/jonbhanson/flutter_native_splash/issues/263).\n\n## [2.1.0] - (2022-Mar-06)\n\n- Expanded options for Android 12. Thanks [Jose](https://github.com/JCQuintas) for the [PR](https://github.com/jonbhanson/flutter_native_splash/pull/300) that served as a good starting point.\n\n## [2.0.5] - (2022-Feb-20)\n\n- Converted to a plugin since there is now platform specific code.\n\n## [2.0.4] - (2022-Feb-15)\n\n- Fix Error: Not found: 'dart:js' error. Fixes [#292](https://github.com/jonbhanson/flutter_native_splash/issues/292).\n\n## [2.0.3+1] - (2022-Feb-14)\n\n- Added preserve() and remove() methods.\n- Remove splash from DOM in web.\n\n## [2.0.2] - (2022-Feb-07)\n\n- Update existing styles xml to support Xiaomi/Redmi devices. Fixes [#285](https://github.com/jonbhanson/flutter_native_splash/issues/285), fixes [#281](https://github.com/jonbhanson/flutter_native_splash/issues/281).\n- Avoid changing logo size on mobile browsers. Fixes [#276](https://github.com/jonbhanson/flutter_native_splash/issues/276).\n\n## [2.0.1+1] - (2022-Jan-29)\n\n- Provide BuildContext argument to the initialization function.\n\n## [2.0.0] - (2022-Jan-29)\n\n- BREAKING CHANGE: Added `removeAfter` method which allows the native splash to remain until an initialization routine is complete. In order to use this method, the `flutter_native_splash` dependency must be moved from `dev_dependencies` to `dependencies`. Thanks [Ahmed](https://github.com/Ahmed-gubara) for the tip. Closes [#271](https://github.com/jonbhanson/flutter_native_splash/issues/271).\n\n## [1.3.3] - (2022-Jan-01)\n\n- Merged PR that adds branding. Thanks [Faiizii](https://github.com/Faiizii) for PR. Closes [#256](https://github.com/jonbhanson/flutter_native_splash/issues/256).\n- Updated readme. Closes [#258](https://github.com/jonbhanson/flutter_native_splash/issues/258).\n- Fix so that the splash screen does not cover the app in web. Fixes [253](https://github.com/jonbhanson/flutter_native_splash/issues/253).\n- Updates per linter rules.\n\n## [1.3.2] - (2021-Nov-28)\n\n- Updated readme. Hide splash image in web from screen readers. Closes [#231](https://github.com/jonbhanson/flutter_native_splash/issues/231).\n\n## [1.3.1] - (2021-Oct-27)\n\n- Don't create Android 12 night res files if dark mode is not configured. Fixes [#227](https://github.com/jonbhanson/flutter_native_splash/issues/227). `Remove` command takes dark mode into account.\n\n## [1.3.0] - (2021-Oct-26)\n\n- Added Android 12 support. Closes [#204](https://github.com/jonbhanson/flutter_native_splash/issues/204), closes [#226](https://github.com/jonbhanson/flutter_native_splash/issues/226).\n\n## [1.2.4] - (2021-Sep-23)\n\n- Updated readme. Thanks [@j-j-gajjar](https://github.com/j-j-gajjar) for PR [#216](https://github.com/jonbhanson/flutter_native_splash/pull/216).\n- Remove references to background images in web when images are missing. Fixes [#196](https://github.com/jonbhanson/flutter_native_splash/issues/196).\n- Updated dependencies.\n\n## [1.2.3] - (2021-Sep-08)\n\n- Reverted XML dependency to be compatible with stable Flutter branch. Closes [#206](https://github.com/jonbhanson/flutter_native_splash/issues/206).\n\n## [1.2.2] - (2021-Sep-06)\n\n- Added a FAQ to address the deprecation of `SplashScreenDrawable`. Closes [#199](https://github.com/jonbhanson/flutter_native_splash/issues/199).\n- Added `<picture>` tag to `index.html` by finding the `</body>` tag instead of `src=\"main.dart.js`, which was removed in Flutter 2.5. Fixes [#202](https://github.com/jonbhanson/flutter_native_splash/issues/202).\n- Added `<item name=\"android:forceDarkAllowed\">false</item>` tag to dark mode `styles.xml` to improve Xiaomi support. Closes [#184](https://github.com/jonbhanson/flutter_native_splash/issues/184).\n\n## [1.2.1] - (2021-Jul-19)\n\n- Check the file type and exit with error if it is not a PNG.\n- Updated documentation with more FAQs.\n- Fixed bug that was preventing copying of images for web. Fixes [#192](https://github.com/jonbhanson/flutter_native_splash/issues/192).\n- Changed the example to show a secondary splash screen.\n- Check that android, web, and ios folders exist before updating respective splash screen.\n\n## [1.2.0] - (2021-Jun-09)\n\n- Added beta support for Android 12. Closes [#175](https://github.com/jonbhanson/flutter_native_splash/issues/175).\n\n## [1.1.9] - (2021-Jun-09)\n\n- Added path argument to command line. Thanks [@lyledean1](https://github.com/lyledean1) for PR [#180](https://github.com/jonbhanson/flutter_native_splash/pull/180).\n\n## [1.1.8+4] - (2021-Apr-20)\n\n- Fixed bug that was preventing copying of dark background. Fixes [#163](https://github.com/jonbhanson/flutter_native_splash/issues/163).\n\n## [1.1.7+1] - (2021-Apr-02)\n\n- flutter_native_splash:remove adheres to android/ios/web setting. Fixes [#159](https://github.com/jonbhanson/flutter_native_splash/issues/159).\n- Updated readme images.\n\n## [1.1.6+1] - (2021-Mar-29)\n\n- Corrected Android scaling. Thanks [@chris-efission](https://github.com/chris-efission).\n- Updated readme image.\n\n## [1.1.5+1] - (2021-Mar-23)\n\n- Added unit tests.\n- Updated dependency.\n\n## [1.1.4+1] - (2021-Mar-18)\n\n- Fixed bug that created duplicate android:windowFullscreen tags in styles.xml. Closes [#147](https://github.com/jonbhanson/flutter_native_splash/issues/147).\n- Fixed fullscreen in Android dark mode.\n- Print errors instead of throwing exceptions for cleaner output.\n- Added message for missing subviews in iOS LaunchScreen.storyboard. Fixes [#146](https://github.com/jonbhanson/flutter_native_splash/issues/146).\n- Removed duplicate exceptions for missing image file since that is now checked at package start.\n\n## [1.1.3] - (2021-Mar-18)\n\n- Fixed bug that was giving error on copying background image. Closes [#144](https://github.com/jonbhanson/flutter_native_splash/issues/144).\n\n## [1.1.2] - (2021-Mar-17)\n\n- Check that image files exist before starting. Throw an exception if image file not found.\n\n## [1.1.1+1] - (2021-Mar-16)\n\n- Create Styles.css before writing to it. Closes [#141](https://github.com/jonbhanson/flutter_native_splash/issues/141)\n- Make all file calls synchronously to make code cleaner.\n\n## [1.1.0] - (2021-Mar-15)\n\n- Added option for background image. Closes [#22](https://github.com/jonbhanson/flutter_native_splash/issues/22).\n\n## [1.0.3] - (2021-Mar-05)\n\n- Updated readme.\n\n## [1.0.2] - (2021-Mar-04)\n\n- Added exception for missing/renamed splash image in LaunchScreen.storyboard.\n\n## [1.0.1+1] - (2021-Mar-02)\n\n- Corrected location of `picture` tag in web to ensure that splash disappears. Thanks [Dawid Dziurla](https://github.com/dawidd6).\n\n## [1.0.0] - (2021-Feb-19)\n\n- Adds null safety. Closes [#127](https://github.com/jonbhanson/flutter_native_splash/issues/127).\n\n## [0.3.0] - (2021-Feb-10)\n\n- Added support for web. Closes [#30](https://github.com/jonbhanson/flutter_native_splash/issues/30).\n- Updated the example app to include web.\n\n## [0.2.11] - (2021-Feb-09)\n\n- Fixed `remove` command which was leaving splash images in place.\n\n## [0.2.10] - (2021-Feb-08)\n\n- Replaced `android_fullscreen` with `fullscreen` parameter, adding iOS support. closes [#75](https://github.com/jonbhanson/flutter_native_splash/issues/75), closes [#65](https://github.com/jonbhanson/flutter_native_splash/issues/65).\n- The package no longer modifies the AppDelegate. Fixes [#125](https://github.com/jonbhanson/flutter_native_splash/issues/125), fixes [#66](https://github.com/jonbhanson/flutter_native_splash/issues/66).\n- Added `remove` command. Closes [#97](https://github.com/jonbhanson/flutter_native_splash/issues/97), closes [#126](https://github.com/jonbhanson/flutter_native_splash/issues/126).\n- Updated docs.\n\n## [0.2.9] - (2021-Jan-27)\n\n- Correct iOS 2x scaling. Closes [#27](https://github.com/jonbhanson/flutter_native_splash/issues/27).\n- Fullscreen defaults to false. Closes [#122](https://github.com/jonbhanson/flutter_native_splash/issues/122).\n\n## [0.2.8] - (2021-Jan-25)\n\n- Allow users to set Android gravity and iOS ContentMode directly.\n- Parse LaunchScreen.storyboard with XML package for more reliability.\n- Updated install instructions.\n- Fixes [#18](https://github.com/jonbhanson/flutter_native_splash/issues/18). Closes [#63](https://github.com/jonbhanson/flutter_native_splash/pull/63).\n\n## [0.2.7] - (2021-Jan-18)\n\n- Added configuration parameter to specify the info.plist location(s).\n- Updated documentation.\n- Fixes [#120](https://github.com/jonbhanson/flutter_native_splash/issues/120), [#42](https://github.com/jonbhanson/flutter_native_splash/issues/42).\n\n## [0.2.6] - (2021-Jan-14)\n\n- Added support for Android -v21 resource folders, which appear in the Flutter beta channel.\n- Parse launch_background.xml with XML package for more reliability.\n- Fixes [#104](https://github.com/jonbhanson/flutter_native_splash/issues/104), [#118](https://github.com/jonbhanson/flutter_native_splash/issues/118).\n\n## [0.2.5] - (2021-Jan-13)\n\n- Handle color parameter that are passed as integers. Fixes [#103](https://github.com/jonbhanson/flutter_native_splash/issues/103)\n\n## [0.2.4] - (2021-Jan-12)\n\n- Update code that adds fullscreen mode to Android so that it selects the right style (LaunchTheme) in styles.xml. This should resolve [#39](https://github.com/jonbhanson/flutter_native_splash/issues/39), [#54](https://github.com/jonbhanson/flutter_native_splash/issues/54), [#67](https://github.com/jonbhanson/flutter_native_splash/issues/67), [#92](https://github.com/jonbhanson/flutter_native_splash/issues/92), [#112](https://github.com/jonbhanson/flutter_native_splash/issues/112), and [#117](https://github.com/jonbhanson/flutter_native_splash/issues/117).\n- Removed code that modifies MainActivity as it is not longer needed since Flutter embedding V2 uses two styles in styles.xml so full screen is set independently in the style.\n\n## [0.2.3] - (2021-Jan-11)\n\n- Further modifications to raise [pub points](https://pub.dev/help/scoring): The\n  public API's need to have dartdoc comments, so all public declarations that did not\n  need to be public were changed to private. Added doc comments for public APIs.\n\n## [0.2.2] - (2021-Jan-09)\n\n- Corrected color of background PNG for iOS. ([The channel order of a uint32 encoded color is BGRA.](https://pub.dev/documentation/image/latest/image/Color/fromRgb.html)) ([#115](https://github.com/jonbhanson/flutter_native_splash/issues/115))\n\n## [0.2.1] - (2021-Jan-08)\n\n- Modifications to raise [pub points](https://pub.dev/help/scoring): Adherence to [Pedantic](https://pub.dev/packages/pedantic) code standard, and [conditional imports](https://dart.dev/guides/libraries/create-library-packages#conditionally-importing-and-exporting-library-files) to avoid losing points for lack of multiple platform support.\n\n## [0.2.0+1] - (2021-Jan-08)\n\n- Updated version number in README.md (thanks [@M123-dev](https://github.com/M123-dev))\n\n## [0.2.0] - (2021-Jan-07)\n\n- Added dark mode.\n\n## [0.1.9] -\n\n- (2020-Jan-27) Added createSplashByConfig for external usage\n- (2020-Jan-05) Fix run the package command (thanks [@tenhobi](https://github.com/tenhobi))\n- (2019-Oct-31) Removing comments from the example (thanks [@lucalves](https://github.com/lucalves))\n- (2019-Oct-16) `image` parameter is now optional ([#26](https://github.com/jonbhanson/flutter_native_splash/issues/26))\n\n## [0.1.8+4] - (12th October 2019)\n\n- Fix bug on RegEx preventing `package` tag from being found in `AndroidManifest.xml` ([#25](https://github.com/jonbhanson/flutter_native_splash/issues/25))\n\n## [0.1.8+3] - (4th October 2019)\n\n- Prevent unhandled int exception in `color` argument (thanks [@wemersonrv](https://github.com/wemersonrv) - PR [#23](https://github.com/jonbhanson/flutter_native_splash/pull/23))\n\n## [0.1.8+2] - (16th September 2019)\n\n- Fix code being added multiple times to `MainActivity` ([#19](https://github.com/jonbhanson/flutter_native_splash/issues/19))\n\n## [0.1.8+1] - (16th September 2019)\n\n- Documentation improvements\n\n## [0.1.8] - (16th September 2019)\n\n- Added `fill` property to use full screen images on Android (thanks [@Bwofls2](https://github.com/Bwolfs2) - PR [#8](https://github.com/jonbhanson/flutter_native_splash/pull/8))\n- Added `android_disable_fullscreen` property to disable opening app in full screen on Android ([#14](https://github.com/jonbhanson/flutter_native_splash/issues/14))\n- Status bar color on Android is now generated dynamically by using same principles as Material Design (thanks [@yiss](https://github.com/yiss) - PR [#16](https://github.com/jonbhanson/flutter_native_splash/pull/16))\n\n## [0.1.7+2] - (1th September 2019)\n\n- Fix a bug on `minSdkVersion` reading ([#13](https://github.com/jonbhanson/flutter_native_splash/issues/13))\n\n## [0.1.7+1] - (1th September 2019)\n\n- Check for `minSdkVersion` >= 21 to add code for changing status bar color to transparent ([#12](https://github.com/jonbhanson/flutter_native_splash/issues/12))\n\n## [0.1.7] - (27th August 2019)\n\n- Fix a bug that duplicates entries on `Info.plist` when using multiple `</dict>` on iOS ([#5](https://github.com/jonbhanson/flutter_native_splash/issues/5))\n- Fix missing imports on `MainActivity` when not using default class signature ([#7](https://github.com/jonbhanson/flutter_native_splash/issues/7))\n\n## [0.1.6+2] - (27th August 2019)\n\n- Yup, I released a new version because a quote was missing\n\n## [0.1.6+1] - (27th August 2019)\n\n- Updated README.md adding quotes on `color` property\n- Add support for colors with `#` prefix\n\n## [0.1.6] - (26th August 2019)\n\n- Fix bug where `MainActivity` file could not be found with custom package names\n\n## [0.1.5] - (26th August 2019)\n\n- Add support for Kotlin\n- Add support for Swift\n- Add `await` to every step to create splash screen on Android and iOS to prevent async steps causing error\n\n## [0.1.4] - (25th August 2019)\n\n- Fix code style issues pointed by `dartanalzyer`\n- Fix typo in README.md\n\n## [0.1.3] - (25th August 2019)\n\n- Update README.md\n\n## [0.1.2] - (25th August 2019)\n\n- Fix Travis CI filename\n\n## [0.1.1] - (25th August 2019)\n\n- Added Travis CI and updates to README.md\n\n## [0.1.0] - (25th August 2019)\n\n- Initial release: generate Android and iOS splash screens with a background color and an image\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2022 Jon Hanson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.923828125,
          "content": "When your app is opened, there is a brief time while the native app loads Flutter. By default, during this time, the native app displays a white splash screen. This package automatically generates iOS, Android, and Web-native code for customizing this native splash screen background color and splash image. Supports dark mode, full screen, and platform-specific options.\n\n<p align='center'>\n    <img src=\"https://raw.githubusercontent.com/jonbhanson/flutter_native_splash/master/splash_demo.gif\" />\n    <img src=\"https://raw.githubusercontent.com/jonbhanson/flutter_native_splash/master/splash_demo_dark.gif\" />\n</p>\n\n# What's New\n\nSupport for GIF images in web.\n\nYou can now keep the splash screen up while your app initializes! No need for a secondary splash screen anymore. Just use the `preserve` and `remove` methods together to remove the splash screen after your initialization is complete. See [details below](https://pub.dev/packages/flutter_native_splash#3-set-up-app-initialization-optional).\n\n# Usage\n\nWould you prefer a video tutorial instead? Check out <a href=\"https://www.youtube.com/watch?v=dB0dOnc2k10\">Johannes Milke's tutorial</a>.\n\nFirst, add `flutter_native_splash` as a dependency in your pubspec.yaml file.\n\n```yaml\ndependencies:\n  flutter_native_splash: ^2.4.4\n```\n\nDon't forget to `flutter pub get`.\n\n## 1. Setting the splash screen\n\nCustomize the following settings and add to your project's `pubspec.yaml` file or place in a new file in your root project folder named `flutter_native_splash.yaml`.\n\n```yaml\nflutter_native_splash:\n  # This package generates native code to customize Flutter's default white native splash screen\n  # with background color and splash image.\n  # Customize the parameters below, and run the following command in the terminal:\n  # dart run flutter_native_splash:create\n  # To restore Flutter's default white splash screen, run the following command in the terminal:\n  # dart run flutter_native_splash:remove\n\n  # IMPORTANT NOTE: These parameter do not affect the configuration of Android 12 and later, which\n  # handle splash screens differently that prior versions of Android.  Android 12 and later must be\n  # configured specifically in the android_12 section below.\n\n  # color or background_image is the only required parameter.  Use color to set the background\n  # of your splash screen to a solid color.  Use background_image to set the background of your\n  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the\n  # size of the app. Only one parameter can be used, color and background_image cannot both be set.\n  color: \"#42a5f5\"\n  #background_image: \"assets/background.png\"\n\n  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing\n  # the leading # character.\n\n  # The image parameter allows you to specify an image used in the splash screen.  It must be a\n  # png file and should be sized for 4x pixel density.\n  #image: assets/splash.png\n\n  # The branding property allows you to specify an image used as branding in the splash screen.\n  # It must be a png file. It is supported for Android, iOS and the Web.  For Android 12,\n  # see the Android 12 section below.\n  #branding: assets/dart.png\n\n  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,\n  # and bottomLeft. The default values is bottom if not specified or specified something else.\n  #branding_mode: bottom\n  \n  # Set the branding padding from the bottom of the screen.  The default value is 0\n  # branding_bottom_padding: 24\n\n  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background\n  # and image when the device is in dark mode. If they are not specified, the app will use the\n  # parameters from above.  If there is no parameter above, the app will use the light mode values.\n  # If the image_dark parameter is specified, color_dark or background_image_dark must be specified.  \n  # color_dark and background_image_dark cannot both be set.\n  #color_dark: \"#042a49\"\n  #background_image_dark: \"assets/dark-background.png\"\n  #image_dark: assets/splash-invert.png\n  #branding_dark: assets/dart_dark.png\n\n  # From Android 12 onwards, the splash screen is handled differently than in previous versions.\n  # Please visit https://developer.android.com/guide/topics/ui/splash-screen\n  # Following are specific parameters for Android 12+.\n  android_12:\n    # The image parameter sets the splash screen icon image.  If this parameter is not specified,\n    # the app's launcher icon will be used instead.\n    # Please note that the splash screen will be clipped to a circle on the center of the screen.\n    # App icon with an icon background: This should be 960×960 pixels, and fit within a circle\n    # 640 pixels in diameter.\n    # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle\n    # 768 pixels in diameter.  To fit a 1152x1152 image within a circle with a 768 diameter, simply \n    # ensure that the most important design elements of your image are placed within a circular area\n    # with a 768 diameter at the center of the 1152x1152 canvas.\n    #image: assets/android12splash.png\n\n    # Splash screen background color.\n    #color: \"#42a5f5\"\n\n    # App icon background color.\n    #icon_background_color: \"#111111\"\n\n    # The branding property allows you to specify an image used as branding in the splash screen.\n    #branding: assets/dart.png\n\n    # The image_dark, color_dark, icon_background_color_dark, and branding_dark set values that\n    # apply when the device is in dark mode. If they are not specified, the app will use the\n    # parameters from above.  If there is no parameter above, the app will use the light mode values.\n    #image_dark: assets/android12splash-invert.png\n    #color_dark: \"#042a49\"\n    #icon_background_color_dark: \"#eeeeee\"\n\n  # The android, ios and web parameters can be used to disable generating a splash screen on a given\n  # platform.\n  #android: false\n  #ios: false\n  #web: false\n\n  # Platform specific images can be specified with the following parameters, which will override\n  # the respective parameter.  You may specify all, selected, or none of these parameters:\n  #color_android: \"#42a5f5\"\n  #color_dark_android: \"#042a49\"\n  #color_ios: \"#42a5f5\"\n  #color_dark_ios: \"#042a49\"\n  #color_web: \"#42a5f5\"\n  #color_dark_web: \"#042a49\"\n  #image_android: assets/splash-android.png\n  #image_dark_android: assets/splash-invert-android.png\n  #image_ios: assets/splash-ios.png\n  #image_dark_ios: assets/splash-invert-ios.png\n  #image_web: assets/splash-web.gif\n  #image_dark_web: assets/splash-invert-web.gif\n  #background_image_android: \"assets/background-android.png\"\n  #background_image_dark_android: \"assets/dark-background-android.png\"\n  #background_image_ios: \"assets/background-ios.png\"\n  #background_image_dark_ios: \"assets/dark-background-ios.png\"\n  #background_image_web: \"assets/background-web.png\"\n  #background_image_dark_web: \"assets/dark-background-web.png\"\n  #branding_android: assets/brand-android.png\n  #branding_bottom_padding_android: 24\n  #branding_dark_android: assets/dart_dark-android.png\n  #branding_ios: assets/brand-ios.png\n  #branding_bottom_padding_ios: 24\n  #branding_dark_ios: assets/dart_dark-ios.png\n  #branding_web: assets/brand-web.gif\n  #branding_dark_web: assets/dart_dark-web.gif\n\n  # The position of the splash image can be set with android_gravity, ios_content_mode, and\n  # web_image_mode parameters.  All default to center.\n  #\n  # android_gravity can be one of the following Android Gravity (see\n  # https://developer.android.com/reference/android/view/Gravity): bottom, center,\n  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,\n  # fill_vertical, left, right, start, or top.\n  #android_gravity: center\n  #\n  # ios_content_mode can be one of the following iOS UIView.ContentMode (see\n  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,\n  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,\n  # bottomLeft, or bottomRight.\n  #ios_content_mode: center\n  #\n  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.\n  #web_image_mode: center\n\n  # The screen orientation can be set in Android with the android_screen_orientation parameter.\n  # Valid parameters can be found here:\n  # https://developer.android.com/guide/topics/manifest/activity-element#screen\n  #android_screen_orientation: sensorLandscape\n\n  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web\n  # has no notification bar.  Defaults to false.\n  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.\n  #       To show the notification bar, add the following code to your Flutter app:\n  #       WidgetsFlutterBinding.ensureInitialized();\n  #       SystemChrome.setEnabledSystemUIMode(SystemUiMode.manual, overlays: [SystemUiOverlay.bottom, SystemUiOverlay.top], );\n  #fullscreen: true\n\n  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)\n  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,\n  # do not remove any spaces:\n  #info_plist_files:\n  #  - 'ios/Runner/Info-Debug.plist'\n  #  - 'ios/Runner/Info-Release.plist'\n```\n\n## 2. Run the package\n\nAfter adding your settings to `pubspec.yaml`, run the following command in the terminal:\n\n```\ndart run flutter_native_splash:create\n```\n\nWhen the package finishes running, your splash screen is ready.\n\n(Optionally), If you added your config to a separate YAML file instead of `pubspec.yaml`, just add --path with the command in the terminal:\n\n```bash\ndart run flutter_native_splash:create --path=path/to/my/file.yaml\n```\n\n| Command                | Description                                                                                                                                    |\n| ---------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------- |\n| -h, --[no-]help        | Show help                                                                                                                                      |\n| -p, --path             | Path to the flutter project, if the project is not in it's default location.                                                                   |\n| -f, --flavor           | Flavor to create the splash for. The flavor must match the pattern flutter_native_splash-*.yaml (where * is the flavor name).                  |\n| -F, --flavors          | Comma separated list of flavors to create the splash screens for. Match the pattern flutter_native_splash-*.yaml (where * is the flavor name). |\n| -A, --[no-]all-flavors | Create the splash screens for all flavors that match the pattern flutter_native_splash-*.yaml (where * is the flavor name).                    |\n\n> Note: Only one flavor option is allowed.\n\n## 3. Set up app initialization (optional)\n\nBy default, the splash screen will be removed when Flutter has drawn the first frame. If you would like the splash screen to remain while your app initializes, you can use the `preserve()` and `remove()` methods together. Pass the `preserve()` method the value returned from `WidgetsFlutterBinding.ensureInitialized()` to keep the splash on screen. Later, when your app has initialized, make a call to `remove()` to remove the splash screen.\n\n```dart\nimport 'package:flutter_native_splash/flutter_native_splash.dart';\n\nvoid main() {\n  WidgetsBinding widgetsBinding = WidgetsFlutterBinding.ensureInitialized();\n  FlutterNativeSplash.preserve(widgetsBinding: widgetsBinding);\n  runApp(const MyApp());\n}\n\n// whenever your initialization is completed, remove the splash screen:\n    FlutterNativeSplash.remove();\n\n```\n\nNOTE: If you do not need to use the `preserve()` and `remove()` methods, you can place the `flutter_native_splash` dependency in the `dev_dependencies` section of `pubspec.yaml`.\n\n## 4. Support the package (optional)\n\nIf you find this package useful, you can support it for free by giving it a thumbs up at the top of this page. Here's another option to support the package:\n\n<p align='center'><a href=\"https://www.buymeacoffee.com/jonhanson\"><img src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&emoji=&slug=jonhanson&button_colour=5F7FFF&font_colour=ffffff&font_family=Cookie&outline_colour=000000&coffee_colour=FFDD00\"></a></p>\n\n# Android 12+ Support\n\nAndroid 12 has a [new method](https://developer.android.com/about/versions/12/features/splash-screen) of adding splash screens, which consists of a window background, icon, and the icon background. Note that a background image is not supported.\n\n<img src=\"https://developer.android.com/static/images/guide/topics/ui/splash-screen/splash-screen-composition.png\"/>\n\nBe aware of the following considerations regarding these elements:\n\n1. `image` parameter. By default, the launcher icon is used:\n\n   - App icon without an icon background, as shown on the left: This should be 1152×1152 pixels, and fit within a circle 768 pixels in diameter.\n   - App icon with an icon background, as shown on the right: This should be 960×960 pixels, and fit within a circle 640 pixels in diameter.\n\n2. `icon_background_color` is optional, and is useful if you need more contrast between the icon and the window background.\n\n3. One-third of the foreground is masked.\n\n4. `color` the window background consists of a single opaque color.\n\n**_PLEASE NOTE:_** The splash screen may not appear when you launch the app from Android Studio on API 31. However, it should appear when you launch by clicking on the launch icon in Android. This seems to be resolved in API 32+.\n\n**_PLEASE NOTE:_** There are a number of reports that non-Google launchers do not display the launch image correctly. If the launch image does not display correctly, please try the Google launcher to confirm that this package is working.\n\n**_PLEASE NOTE:_** The splash screen does not appear when you launch the app from a notification. Apparently this is the intended behavior on Android 12: [core-splashscreen Icon not shown when cold launched from notification](https://issuetracker.google.com/issues/199776339?pli=1).\n\n# Flavor Support\n\nIf you have a project setup that contains multiple flavors or environments, and you created more than one flavor this would be a feature for you.\n\nInstead of maintaining multiple files and copy/pasting images, you can now, using this tool, create different splash screens for different environments.\n\n## Pre-requirements\n\nIn order to use this feature, and generate the desired splash images for your app, a couple of changes are required.\n\nIf you want to generate just one flavor and one file you would use either options as described in Step 1. But in order to setup the flavors, you will then be required to move all your setup values to the `flutter_native_splash.yaml` file, but with a prefix.\n\nLet's assume for the rest of the setup that you have 3 different flavors, `Production`, `Acceptance`, `Development`.\n\nFirst thing you will need to do is to create a different setup file for all 3 flavors with a suffix like so:\n\n```bash\nflutter_native_splash-production.yaml\nflutter_native_splash-acceptance.yaml\nflutter_native_splash-development.yaml\n```\n\nYou would setup those 3 files the same way as you would the one, but with different assets depending on which environment you would be generating. For example:\n\n```yaml\n# flutter_native_splash-development.yaml\nflutter_native_splash:\n  color: \"#ffffff\"\n  image: assets/logo-development.png\n  branding: assets/branding-development.png\n  color_dark: \"#121212\"\n  image_dark: assets/logo-development.png\n  branding_dark: assets/branding-development.png\n\n  android_12:\n    image: assets/logo-development.png\n    icon_background_color: \"#ffffff\"\n    image_dark: assets/logo-development.png\n    icon_background_color_dark: \"#121212\"\n\n  web: false\n\n# flutter_native_splash-acceptance.yaml\nflutter_native_splash:\n  color: \"#ffffff\"\n  image: assets/logo-acceptance.png\n  branding: assets/branding-acceptance.png\n  branding_bottom_padding: 24\n  color_dark: \"#121212\"\n  image_dark: assets/logo-acceptance.png\n  branding_dark: assets/branding-acceptance.png\n\n  android_12:\n    image: assets/logo-acceptance.png\n    icon_background_color: \"#ffffff\"\n    image_dark: assets/logo-acceptance.png\n    icon_background_color_dark: \"#121212\"\n\n  web: false\n\n# flutter_native_splash-production.yaml\nflutter_native_splash:\n  color: \"#ffffff\"\n  image: assets/logo-production.png\n  branding: assets/branding-production.png\n  branding_bottom_padding: 24\n  color_dark: \"#121212\"\n  image_dark: assets/logo-production.png\n  branding_dark: assets/branding-production.png\n\n  android_12:\n    image: assets/logo-production.png\n    icon_background_color: \"#ffffff\"\n    image_dark: assets/logo-production.png\n    icon_background_color_dark: \"#121212\"\n\n  web: false\n```\n\n> Note: these are just example values. You should substitute them with real values.\n\n## One by one\n\nIf you'd like to generate only a single flavor (maybe you are\ntesting something out), you can use only the single command like this:\n\n```bash\n# If you have a flavor called production you would do this:\ndart run flutter_native_splash:create --flavor production\n\n# For a flavor with a name staging you would provide it's name like so:\ndart run flutter_native_splash:create --flavor acceptance\n\n# And if you have a local version for devs you could do that:\ndart run flutter_native_splash:create --flavor development\n```\n\n## More than one\n\nYou also have the ability to specify all the flavors in one command\nas shown bellow:\n\n```bash\ndart run flutter_native_splash:create --flavors development,staging,production\n```\n\n> Note: the available flavors need to be comma separated for this option to work.\n\n## All flavors\n\nAnd if you have many different flavors available in your project, and wish to generate the splash screen for all of them, you can use this command (starting from 2.4.4):\n\n```bash\ndart run flutter_native_splash:create --all-flavors\n# OR you can use the shorthand option\ndart run flutter_native_splash:create -A\n```\n\nThis will take all files from the root of the project, scan through them and match for the pattern `flutter_native_splash-*.yaml` where the value at the place of the star will be used as the flavor name and will be consumed to generate the files.\n\n### Android setup\n\nYou're done! No, really, Android doesn't need any additional setup.\n\nNote: If it didn't work, please make sure that your flavors are named the same as your config files, otherwise the setup will not work.\n\n### iOS setup\n\niOS is a bit tricky, so hang tight, it might look scary but most of the steps are just a single click, explained as much as possible to lower the possibility of mistakes.\n\nWhen you run the new command, you will need to open xCode and follow the steps bellow:\n\nAssumption\n\n- In order for this setup to work, you would already have 3 different `schemes` setup; production, acceptance and development.\n\nPreparation\n\n- Open the iOS Flutter project in Xcode (open the Runner.xcworkspace)\n- Find the newly created Storyboard files at the same location where the original is `{project root}/ios/Runner/Base.lproj`\n- Select all of them and drag and drop into Xcode, directly to the left hand side where the current LaunchScreen.storyboard is located already\n- After you drop your files there Xcode will ask you to link them, make sure you select 'Copy if needed'\n- This part is done, you have linked the newly created storyboards in your project.\n\nxCode\n\nXcode still doesn't know how to use them, so we need to specify for all the current flavors (schemes) which file to use and to use that value inside the Info.plist file.\n\n- Open the iOS Flutter project in Xcode (open the Runner.xcworkspace)\n- Click the Runner project in the top left corner (usually the first item in the list)\n- In the middle part of the screen, on the left side, select the Runner target\n- On the top part of the screen select Build Settings\n- Make sure that 'All' and 'Combined' are selected\n- Next to 'Combine' you have a '+' button, press it and select 'Add User-Defined Setting'\n- Once you do that Xcode will create a new variable for you to name. Suggestion is to name it `LAUNCH_SCREEN_STORYBOARD`\n- Once you do that, you will have the option to define a specific name for each flavor (scheme) that you have defined in the project. **Make sure that you input the exact name of the LaunchScreen.storyboard that was created by this tool**\n  - Example: If you have a flavor Development, there is a Storyboard created name LaunchScreenDevelopment.storyboard, please add that name (without the storyboard part) to the variable value next to the flavor value\n- After you finish with that, you need to update Info.plist file to link the newly created variable so that it's used correctly\n- Open the Info.plist file\n- Find the entry called 'Launch screen interface file base name'\n- The default value is 'LaunchScreen', change that to the variable name that you create previously. If you follow these steps exactly, it would be LAUNCH_SCREEN_STORYBOARD, so input this `$(LAUNCH_SCREEN_STORYBOARD)`\n- And your done!\n\nCongrats you finished your setup for multiple flavors,\n\n# FAQs\n\n## I got the error 'module flutter_native_splash' not found.\n\nYou may need to run the `pod install` command in your app's `ios` folder.\n\n## I got the error \"A splash screen was provided to Flutter, but this is deprecated.\"\n\nThis message is not related to this package but is related to a [change](https://flutter.dev/docs/development/ui/advanced/splash-screen#migrating-from-manifest--activity-defined-custom-splash-screens) in how Flutter handles splash screens in Flutter 2.5. It is caused by having the following code in your `android/app/src/main/AndroidManifest.xml`, which was included by default in previous versions of Flutter:\n\n```xml\n<meta-data\n android:name=\"io.flutter.embedding.android.SplashScreenDrawable\"\n android:resource=\"@drawable/launch_background\"\n />\n```\n\nThe solution is to remove the above code. Note that this will also remove the fade effect between the native splash screen and your app.\n\n## Are animations/lottie/GIF images supported?\n\nGIFs are now supported on web. Lotties are not yet supported. PRs are always welcome!\n\n## I got the error AAPT: error: style attribute 'android:attr/windowSplashScreenBackground' not found\n\nThis attribute was added in Android 12, so if you are getting this error, it means your project is not fully set up for Android 12+. Did you [update your app's build configuration](https://developer.android.com/about/versions/12/setup-sdk#config)?\n\n## I see a flash of the wrong splash screen on iOS\n\nThis is caused by an [iOS splash caching bug](https://stackoverflow.com/questions/33002829/ios-keeping-old-launch-screen-and-app-icon-after-update), which can be solved by uninstalling your app, powering off your device, power back on, and then try reinstalling.\n\n## I see a white screen between splash screen and app\n\n1. It may be caused by an [iOS splash caching bug](https://stackoverflow.com/questions/33002829/ios-keeping-old-launch-screen-and-app-icon-after-update), which can be solved by uninstalling your app, powering off your device, power back on, and then try reinstalling.\n2. It may be caused by the delay due to initialization in your app. To solve this, use the `preserve` and `remove` calls to keep the splash on screen while your app initializes.\n\n## Can I base light/dark mode on app settings?\n\nNo. This package creates a splash screen that is displayed before Flutter is loaded. Because of this, when the splash screen loads, internal app settings are not available to the splash screen. Unfortunately, this means that it is impossible to control light/dark settings of the splash from app settings.\n\n# Notes\n\n- If the splash screen was not updated correctly on iOS or if you experience a white screen before the splash screen, run `flutter clean` and recompile your app. If that does not solve the problem, delete your app, power down the device, power up the device, install and launch the app as per [this StackOverflow thread](https://stackoverflow.com/questions/33002829/ios-keeping-old-launch-screen-and-app-icon-after-update).\n\n- This package modifies `launch_background.xml` and `styles.xml` files on Android, `LaunchScreen.storyboard` and `Info.plist` on iOS, and `index.html` on Web. If you have modified these files manually, this plugin may not work properly. Please [open an issue](https://github.com//jonbhanson/flutter_native_splash/issues/new?template=bug_report.md) if you find any bugs.\n\n# How it works\n\n## Android\n\n- Your splash image will be resized to `mdpi`, `hdpi`, `xhdpi`, `xxhdpi` and `xxxhdpi` drawables.\n- An `<item>` tag containing a `<bitmap>` for your splash image drawable will be added in `launch_background.xml`\n- Background color will be added in `colors.xml` and referenced in `launch_background.xml`.\n- Code for full screen mode toggle will be added in `styles.xml`.\n- Dark mode variants are placed in `drawable-night`, `values-night`, etc. resource folders.\n\n## iOS\n\n- Your splash image will be resized to `@3x` and `@2x` images.\n- Color and image properties will be inserted in `LaunchScreen.storyboard`.\n- The background color is implemented by using a single-pixel png file and stretching it to fit the screen.\n- Code for hidden status bar toggle will be added in `Info.plist`.\n\n## Web\n\n- A `web/splash` folder will be created for splash screen images and CSS files.\n- Your splash image will be resized to `1x`, `2x`, `3x`, and `4x` sizes and placed in `web/splash/img`.\n- The splash style sheet will be added to the app's `web/index.html`, as well as the HTML for the splash pictures.\n\n# Acknowledgments\n\nThis package was originally created by [Henrique Arthur](https://github.com/henriquearthur) and is now maintained by [Jon Hanson](https://github.com/jonbhanson).\n\n# Bugs or Requests\n\nIf you encounter any problems feel free to open an [issue](https://github.com//jonbhanson/flutter_native_splash/issues/new?template=bug_report.md). If you feel the library is missing a feature, please raise a [ticket](https://github.com//jonbhanson/flutter_native_splash/issues/new?template=feature_request.md). Pull request are also welcome.\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.23828125,
          "content": "include: package:flutter_lints/flutter.yaml\n\nlinter:\n  rules:\n    avoid_print: false\n    avoid_classes_with_only_static_members: false\n# Additional information about this file can be found at\n# https://dart.dev/guides/language/analysis-options\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "ios",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 1.80078125,
          "content": "name: flutter_native_splash\ndescription: Customize Flutter's default white native splash screen with\n  background color and splash image. Supports dark mode, full screen, and more.\nversion: 2.4.4\nrepository: https://github.com/jonbhanson/flutter_native_splash\nissue_tracker: https://github.com/jonbhanson/flutter_native_splash/issues\n\nenvironment:\n  sdk: '>=3.0.0 <4.0.0'\n  flutter: \">=2.5.0\"\n\ndependencies:\n  args: ^2.6.0\n  flutter:\n    sdk: flutter\n  flutter_web_plugins:\n    sdk: flutter\n  html: ^0.15.4\n  image: ^4.3.0\n  meta: ^1.15.0\n  path: ^1.9.0\n  universal_io: ^2.2.2\n  xml: ^6.5.0\n  yaml: ^3.1.2\n  ansicolor: ^2.0.3\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n  flutter_lints: ^5.0.0\n\nscreenshots:\n  - description: 'Examples of the splash screen on iOS.'\n    path: splash_demo.webp\n  - description: 'Examples of the splash screen on iOS in dark mode.'\n    path: splash_demo_dark.webp\n\nflutter:\n  # This section identifies this Flutter project as a plugin project.\n  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)\n  # which should be registered in the plugin registry. This is required for\n  # using method channels.\n  # The Android 'package' specifies package in which the registered class is.\n  # This is required for using method channels on Android.\n  # The 'ffiPlugin' specifies that native code should be built and bundled.\n  # This is required for using `dart:ffi`.\n  # All these are used by the tooling to maintain consistency when\n  # adding or updating assets for this project.\n  plugin:\n    platforms:\n      android:\n        package: net.jonhanson.flutter_native_splash\n        pluginClass: FlutterNativeSplashPlugin\n      ios:\n        pluginClass: FlutterNativeSplashPlugin\n      web:\n        pluginClass: FlutterNativeSplashWeb\n        fileName: flutter_native_splash_web.dart\n"
        },
        {
          "name": "splash_demo.gif",
          "type": "blob",
          "size": 371.8447265625,
          "content": null
        },
        {
          "name": "splash_demo.webp",
          "type": "blob",
          "size": 102.98828125,
          "content": null
        },
        {
          "name": "splash_demo_dark.gif",
          "type": "blob",
          "size": 306.1396484375,
          "content": null
        },
        {
          "name": "splash_demo_dark.webp",
          "type": "blob",
          "size": 77.5703125,
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}