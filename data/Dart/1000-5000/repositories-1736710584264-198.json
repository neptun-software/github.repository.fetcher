{
  "metadata": {
    "timestamp": 1736710584264,
    "page": 198,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/flutter.widgets",
      "stars": 1388,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.50390625,
          "content": "# Auto detect text files and perform LF normalization\n*        text=auto\n\n# Always perform LF normalization on these files\n*.dart   text\n*.gradle text\n*.html   text\n*.java   text\n*.json   text\n*.md     text\n*.py     text\n*.sh     text\n*.txt    text\n*.xml    text\n*.yaml   text\n\n# Make sure that these Windows files always have CRLF line endings in checkout\n*.bat    text eol=crlf\n*.ps1    text eol=crlf\n\n# Never perform LF normalization on these files\n*.ico    binary\n*.jar    binary\n*.png    binary\n*.zip    binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.40234375,
          "content": "### Dart template\n# Donâ€™t commit the following directories created by pub.\n.buildlog\n.dart_tool\n.pub/\nbuild/\n.packages\n\n# Or the files created by dart2js.\n*.dart.js\n*.js_\n*.js.deps\n*.js.map\n\n# Include when developing application packages.\npubspec.lock\n\n# IDE\n.project\n.settings\n.idea\n.c9\n\n# Flutter tool generated ephemeral files\n.flutter-plugins\n.flutter-plugins-dependencies\ngenerated_plugin_registrant.dart\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.2646484375,
          "content": "# Below is a list of people and organizations that have contributed\n# to the Flutter Widgets project. Names should be added to the list like so:\n#\n#   Name/Organization <email address>\n\nGoogle Inc.\nAbhijeeth Padarthi <rkinabhi@gmail.com>\nAlex Li <alexv.525.li@gmail.com>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.84765625,
          "content": "Contributing to Flutter Widgets\n===============================\n\n_See also: [Flutter's code of conduct](https://flutter.io/design-principles/#code-of-conduct)_\n\nThings you will need\n--------------------\n\n * Linux, Mac OS X, or Windows.\n * git (used for source version control).\n * An ssh client (used to authenticate with GitHub).\n\nGetting the code and configuring your environment\n-------------------------------------------------\n\n * Ensure all the dependencies described in the previous section are installed.\n * Fork `https://github.com/google/flutter.widgets` into your own GitHub account.\n   If you already have a fork and are now installing a development environment on\n   a new machine, make sure you've updated your fork so that you don't use stale\n   configuration options from long ago.\n * If you haven't configured your machine with an SSH key that's known to github, then\n   follow [GitHub's directions](https://help.github.com/articles/generating-ssh-keys/)\n   to generate an SSH key.\n * `git clone git@github.com:<your_name_here>/flutter.widgets.git`\n * `cd widgets`\n * `git remote add upstream git@github.com:google/flutter.widgets.git`\n   (So that you fetch from the master repository, not your clone, when running\n   `git fetch` et al.)\n\nContributing code\n-----------------\n\nWe gladly accept contributions via GitHub pull requests.\n\nPlease peruse Flutter's\n[style guide](https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo) and\n[design principles](https://flutter.io/design-principles/) before\nworking on anything non-trivial. These guidelines are intended to\nkeep the code consistent and avoid common pitfalls.\n\nYou must complete the\n[Contributor License Agreement](https://cla.developers.google.com/clas). You can\ndo this online, and it takes only a minute. If you've never submitted code\nbefore, you must add your (or your organization's) name and contact info to the\n[AUTHORS](AUTHORS) file.\n\nTo start working on a patch:\n\n * `git fetch upstream`\n * `git checkout upstream/master -b <name_of_your_branch>`\n * Hack away.\n * `git commit -a -m \"<your informative commit message>\"`\n * `git push origin <name_of_your_branch>`\n\nTo send us a pull request:\n\n* `git pull-request` (if you are using [Hub](http://github.com/github/hub/)) or\n  go to `https://github.com/google/flutter.widgets` and click the\n  \"Compare & pull request\" button\n\nPlease make sure all your checkins have detailed commit messages explaining \nwhat the patch does and *why*. **Changes to code behavior should include unit\ntests** that would fail without the change.\n\nOnce you've gotten an LGTM from a project maintainer and once your PR has\nreceived the green light from all our automated testing (Travis, Appveyor, etc),\none of the project maintainers will test the changes to our internal repo. This\nmight cause test failures that need to be debugged internally so we might make\nfurther suggestions on your PR.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4912109375,
          "content": "Copyright 2018 the Dart project authors, Inc. All rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n    * Neither the name of Google Inc. nor the names of its\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.2158203125,
          "content": "[![Build](https://github.com/google/flutter.widgets/actions/workflows/build.yaml/badge.svg)](https://github.com/google/flutter.widgets/actions/workflows/build.yaml)\n\n## Flutter widgets\n\nThis repository contains the source code for various Flutter widgets that are\ndeveloped by Google but not by the core Flutter team.\n\nThe product and source code here are neither endorsed by Google nor the Flutter\nteam. They are mainly made available as a reference. Support is best-effort.\n\n## Packages\n\nPackage | Description | Version\n--- | --- | ---\n[flutter_simple_treeview](packages/flutter_simple_treeview/) | A widget, that visualises a tree structure, where a node can be any widget. | [![pub package](https://img.shields.io/pub/v/flutter_simple_treeview.svg)](https://pub.dev/packages/flutter_simple_treeview)\n[linked_scroll_controller](packages/linked_scroll_controller/) | A scroll controller that allows two or more scroll views to be in sync. | [![pub package](https://img.shields.io/pub/v/linked_scroll_controller.svg)](https://pub.dev/packages/linked_scroll_controller)\n[scrollable_positioned_list](packages/scrollable_positioned_list/) | A list with helper methods to programmatically scroll to an item. | [![pub package](https://img.shields.io/pub/v/scrollable_positioned_list.svg)](https://pub.dev/packages/scrollable_positioned_list)\n[self_storing_input](packages/self_storing_input/) | A set of input widgets that automatically save and load the entered value to a data store. | [![pub package](https://img.shields.io/pub/v/self_storing_input.svg)](https://pub.dev/packages/self_storing_input)\n[visibility_detector](packages/visibility_detector/) | A widget that detects the visibility of its child and notifies a callback. | [![pub package](https://img.shields.io/pub/v/visibility_detector.svg)](https://pub.dev/packages/visibility_detector)\n\n## Issues\n\nPlease file any issues, bugs, or feature requests in the [this\nrepo](https://github.com/google/flutter.widgets/issues/new).\n\n## Contributing\n\nIf you wish to contribute a change to any of the existing widgets in this repo,\nplease review our [contribution guide](https://github.com/google/flutter.widgets/blob/master/CONTRIBUTING.md),\nand send a [pull request](https://github.com/google/flutter.widgets/pulls).\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 1.78125,
          "content": "analyzer:\n  errors:\n    # treat missing required parameters as a warning (not a hint)\n    missing_required_param: warning\n    # Allow having TODOs in the code\n    todo: ignore\n    # TODO(jamesderlin): Temporarily disable unnecessary null comparisons during\n    # the transition to null-safety.\n    unnecessary_null_comparison: ignore\n\nlinter:\n  rules:\n    # these rules are documented on and in the same order as\n    # the Dart Lint rules page to make maintenance easier\n    # https://github.com/dart-lang/linter/blob/master/example/all.yaml\n    - always_declare_return_types\n    - annotate_overrides\n    # TODO - avoid_as\n    - avoid_empty_else\n    - avoid_init_to_null\n    - avoid_return_types_on_setters\n    - await_only_futures\n    - camel_case_types\n    - cancel_subscriptions\n    - close_sinks\n    #- comment_references # TODO\n    - constant_identifier_names\n    - control_flow_in_finally\n    - empty_catches\n    - empty_constructor_bodies\n    - empty_statements\n    - hash_and_equals\n    - implementation_imports\n    - iterable_contains_unrelated_type\n    - library_names\n    - library_prefixes\n    - list_remove_unrelated_type\n    #- literal_only_boolean_expressions # https://github.com/dart-lang/linter/issues/453\n    - non_constant_identifier_names\n    - one_member_abstracts\n    - only_throw_errors\n    - overridden_fields\n    - package_api_docs\n    - package_names\n    - package_prefixed_library_names\n    - prefer_is_not_empty\n    - slash_for_doc_comments\n    #- sort_constructors_first\n    - sort_unnamed_constructors_first\n    - test_types_in_equals\n    - throw_in_finally\n    #- type_annotate_public_apis # Annoying for cases with obvious types.\n    - type_init_formals\n    - unawaited_futures\n    - unnecessary_getters_setters\n    - unnecessary_new\n    - unrelated_type_equality_checks\n    - valid_regexps\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}