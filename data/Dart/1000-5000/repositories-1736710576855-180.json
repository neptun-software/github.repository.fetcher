{
  "metadata": {
    "timestamp": 1736710576855,
    "page": 180,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "flutter-form-builder-ecosystem/flutter_form_builder",
      "stars": 1514,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".fvmrc",
          "type": "blob",
          "size": 0.0244140625,
          "content": "{\n  \"flutter\": \"stable\"\n}"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.44921875,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n.fvm/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 48.181640625,
          "content": "# 10.0.0-dev.1\n\n* feat: #1297 Improve focus behavior by @deandreamatias in https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1453\n  * Solves issues #1296, #1290, #1301, #1304 and #1292\n\n# 9.7.0\n\n## Fixes\n\n* [FormBuilderDateTimePicker] #1444 \"cancel\" button behavior fix\n* [FormBuilderDropdown] #1434 Replace dropdown\n\n## Features\n\n* [FormBuilderChoiceChip] #1448 add missing properties\n\n# 9.6.0\n\n* Build with Flutter 3.27\n* `FormBuilderFilterChip` and `FormBuilderChoiceChip`: Add [side] parameter\n* `FormBuilderDateTimePicker`: Add \"barrierDismissible\"\n\n# 9.5.0\n\n## Fixes\n\n* #1350: valueTransformer transform values to null\n* #1416: Added missing TextField properties to FormBuilderTextField\n* #1398: Add hint to FormBuilderDropdown\n* #1317: Added new property to form_builder_choice_chip\n\n# 9.4.1\n\n## Features\n\n* `FormBuilderTextField` Add missing fields from TextField\n\n## Other\n\n* ci: replace deployment jobs for reuse workflow\n\n# 9.4.0\n\n## Fixes\n\n* #1388 Respect latest field's initial value (esp when its forcefully recreated)\n\n## Features\n\n* `FormBuilderTextField` #1334 set enableSuggestions default to true\n* Replace deprecated property onPopInvoked\n* Use elevated button on main example\n* Update android settings on example\n\n## Chores\n\n* Set minimal Flutter version to 3.24.0\n* Set minimal Dart version to 3.5.0\n\n# [9.3.0]\n\n* Set minimal Flutter version to 3.22.0\n* Set minimal Dart version to 3.4.0\n* Update readme\n* Add OverflowBar layout for radios and checkboxes\n* fix: #1396 fix dynamic fields example widget issues\n* Update to use 0.19.0 of intl package\n\n# [9.2.1]\n\n* Set minimal Flutter version to 3.16.0\n\n# [9.2.0]\n\n## Features\n\n* Add a message to unregisterField assertion\n* `FormBuilderDateTimePicker` Pass parameter keyboardType to material showDatePicker\n* Reintroduce ability to validate form field's value independent of input's error text\n* Add GroupedRadio separator behavior to GroupedCheckbox\n* `FormBuilderCheckboxGroup/FormBuilderRadioGroup` Add itemDecoration to checkbox to add borders to checkboxes and radio buttons\n* `FormBuilderRangeSlider` Correct internal values when min/max changes\n* `FormBuilderCheckbox` Add Visual density parameter\n* `FormBuilderCheckboxGroup` Add visual density property in grouped_checkbox\n* `FormBuilderTextField` Add spell check property from TextField\n* Built with Flutter 3.16\n\n## [9.1.1]\n\n* `FormBuilderDateTimePicker` & `FormBuilderDateRangePicker`: Added optional parameter `mouseCursor`\n* Built with Flutter 3.13\n\n## [9.1.0]\n\n### Features\n\n* `FormBuilderFieldText`: Add onTapOutside property\n\n### Fixes\n\n* `FormBuilderField`: Misspelling\n* `FormBuilderField`: Remove force validation on autovalidation enables modes\n* `FormBuilderField`: Only focus on invalid field when no focus in another field\n* `FormBuilderField`: Only focus on invalid field when focusOnInvalid is true\n* `FormBuilderFieldDecoration`: Remove readonly property to enable decoration fields\n* `FormBuilderDropdown`: Only show dropdown value when has value on items\n* `FormBuilderDropdown`: Add deep compare when update dropdown items\n* `FormBuilderDateTimePicker`: Check mounted after async\n\n### Others\n\n* Improve readme\n* Apply MIT license\n* Update gradle config on example\n\n## [9.0.0]\n\n### BREAKING CHANGES\n\n* [Improve autovalidateMode](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1232)\n  * On FormBuilderField, `autovalidateMode` change default from `AutovalidateMode.onUserInteraction` to `AutovalidateMode.disabled`\n* [Refactor FormBuilderField](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1238)\n  * Add widget to remove decoration property from core. Now exist two field widgets:\n    1. `FormBuilderField`: Refactored. Now don't included decoration property or references to this property\n    2. `FormBuilderFieldDecoration`: New. Like the old `FormBuilderField`\n* [Remove FormBuilderCupertinoSegmentedControl](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1240)\n  * Remove `FormBuilderCupertinoSegmentedControl` field. Included on [form_builder_cupertino_fields](https://pub.dev/packages/form_builder_cupertino_fields)\n  * Update custom fields example without cupertino widgets\n  * Remove cupertino icons dependency\n* Update intl version to 0.18.0\n* Update constraints to Flutter 3.10\n* Update constraints to Dart 3\n\n### Features\n\n* **NEW** Add errors getter on `FormBuilder`. Can get all errors on form from formKey\n* Improve examples\n* Add gifs to readme\n* `FormBuilderSlider`: Able custom widgets max, min and value\n* `FormBuilderTextField`: Add `contentInsertionConfiguration` property\n\n### Fixes\n\n* Improve FormBuilder rebuild. Now only rebuild at same time the field that user touch, not all touched fields\n* Verify error fields on form validation\n* `FormBuilderDropdown`: Improve widget and solved assert error with initialValue (issue closed after 2 years and 5 months)\n\n## [9.0.0-dev.3]\n\n### BREAKING CHANGE\n\n* Update constraints to Dart 3\n\n## [9.0.0-dev.2]\n\n### BREAKING CHANGE\n\n* [Remove `FormBuilderCupertinoSegmentedControl`](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1240)\n  * Remove `FormBuilderCupertinoSegmentedControl` field. Included on [form_builder_cupertino_fields](https://pub.dev/packages/form_builder_cupertino_fields)\n  * Update custom fields example without cupertino widgets\n  * Remove cupertino icons dependency\n* Update intl version to 0.18.0\n* Update constraints to Flutter 3.10\n\n## [9.0.0-dev.1]\n\n### BREAKING CHANGE\n\n* [Improve autovalidateMode](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1232)\n  * On FormBuilderField, `autovalidateMode` change default from `AutovalidateMode.onUserInteraction` to `AutovalidateMode.disabled`\n\n* [Refactor FormBuilderField](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1238)\n  * Add widget to remove decoration property from core. Now exist two field widgets:\n\n    1. `FormBuilderField`: Refactored. Now don't included decoration property or references to this property\n    2. `FormBuilderFieldDecoration`: New. Like the old `FormBuilderField`\n\n\n### Features\n\n* **NEW** Add errors getter on `FormBuilder`. Can get all errors on form from formKey\n* Improve examples\n* Add gifs to readme\n* `FormBuilderSlider`: Able custom widgets max, min and value\n\n### Fixes\n\n* Improve FormBuilder rebuild. Now only rebuild at same time the field that user touch, not all touched fields\n* `FormBuilderDropdown`: Improve widget and solved assert error with initialValue (issue closed after 2 years and 5 months)\n\n## [8.0.0]\n\n### BREAKING CHANGE\n\n* [Improve focus and scroll](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1223)\n  * Remove property `shouldRequestFocus` for each form field\n  * Remove property `autoFocusOnValidationFailure` on `FormBuilder`. Use properties on `validate` and `invalidate` instead\n\n### Features\n\n* **NEW** Add `isDirty` property to field and form\n* **NEW** Add `isTouched` property to field and form\n* Add `focusOnInvalid` and `autoScrollWhenFocusOnInvalid` to `validate` and `saveAndValidate` methods from `FormBuilderState`\n* Add `focusOnInvalid` and `autoScrollWhenFocusOnInvalid` to `validate` method from `FormBuilderFieldState`\n* Add `shouldFocus` and `shouldAutoScrollWhenFocus` to `invalidate` method from `FormBuilderFieldState`\n* Depreciate `invalidateField` and `invalidateFirstField` on `FormBuilder`\n* Add desktop support (linux, macos, windows)\n* `FormBuilderRangeSlider`: Able custom widgets max, min and value\n\n### Bug fixes\n\n* Apply validation on init when autovalidate is always\n* Fix `skipDisabled` property on `FormBuilder`\n* Improve reset method. Simplify on form builder and update on form field to update value on interface.\n* `FormBuilderTextField`: Add support context menu by default\n\n## [7.8.0]\n\n* Remove deprecated property toggleableActiveColor\n* Add widget tests for FormBuilderRangeSlider\n* Add tests for FormBuilderDateRangePicker\n* Add OutlinedBorder shape BorderSide side to FormBuilderCheckbox\n* Add FormBuilderFields type alias\n* Able to change dynamically field name\n* Fix time picker dialog locale\n* Provide magnifier configuration parameter to form builder text field\n\n## [7.7.0]\n\n* Added cursorHeight property for form builder text field ([#1112](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1112))\n* Added textAlignVertical support on FormBuilderDateRangePicker and FormBuilderDateTimePicker ([#1116](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1116))\n* Added shape that missed filterChip property ([#1118](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/pull/1118))\n\n## [7.6.0]\n\n* `FormBuilderDateTimePicker`: Deprecate reset icon For alternatives, see Readme section: Implement reset, clear or other button into FormBuilderField. #1094\n* `FormBuilderDropdown`: Remove properties related to InputDecoration #1095\n* Clear customError on reset #1096\n* Add linux example\n* `FormBuilderRadioGroup`: Improve separator position #1106\n* Remove date on changelog. See [versions](https://pub.dev/packages/flutter_form_builder/versions) for upload version date\n\n## [7.5.0]\n\n* Apply license BSD-3-clause\n* Remove unused parameters from FormBuilderDateTimePicker (#1086)\n* Refactor readme\n\n## [7.4.0]\n\n* Added shape property to FormBuilderChoiceChip\n* Added option to remove field values from internal maps when unregistered\n* Fix call FormBuilder.onChanged when it has no changes\n* Fix set initial values by FormBuilder in FormBuilderFilterChip\n\n## [7.3.1]\n\n* `initialValue` no longer required in FormBuilderRangeSlider\n* Improvements to focus handling - attach focus node to widget tree\n\n## [7.3.0]\n\n* Added new attribute `timePickerTheme` to FormBuilderCupertinoDateTimePicker\n* `FormBuilderDateTimePicker.resetIcon` changed from Icon to Widget\n* Added `avatarBorder` attribute to `FormBuilderChoiceChip` and `FormBuilderChoiceChip`\n\n**BREAKING CHANGES**:\n* Renamed attribute `theme` in FormBuilderCupertinoDateTimePicker to `datePickerTheme`\n* For `FormBuilderChoiceChip` and `FormBuilderChoiceChip` options, replace `FormBuilderFieldOption` to `FormBuilderChipOption` which has `avatar` option for chips\n\n## [7.2.1]\n\n* Fix bug where `FormBuilder.onChanged` is called before `setInternalFieldValue` is done\n\n## [7.2.0]\n\n* Added new dropdown attributes: borderRadius, enableFeedback, alignment. Fixes #1011\n* Added more date picker and time picker options\n* Made itemHeight attribute of FormBuilderDropdown nullable. Fixes #1015\n* Resolved 'Null check operator used on a null value' bug in RangeSlider. Fixes #990\n\n## [7.1.1]\n\n* More improvements to focus handling\n* Other minor fixes\n\n## [7.1.0]\n\n* Added silent validation to the FormBuilder widget\n* Implemented `shouldChipRequestFocus` feature - fixes request focus for non-test based fields\n* Improved field replacement logic\n* Documentation fixes\n\n## [7.0.0]\n\n**BREAKING CHANGE**:\n* For ease of maintainability, validation functionality has been broken up into a separate package: [form_builder_validators](https://pub.dev/packages/form_builder_validators)\n\n## [7.0.0-beta.0]\n\n* Merged back `form_builder_fields` into `flutter_form_builder`\n\n## [7.0.0-alpha.3]\n\n* When form validation fails, automatically scroll to first error\n* New way to programmatically induce custom errors by calling `GlobalKey<FormBuilderState>.invalidateField()` or `GlobalKey<FormBuilderFieldState>.invalidate()`\n* Remove field from internal value map on when a field is unregistered\n\n## [7.0.0-alpha.2]\n\n* Improvements to package documentation and example\n\n## [7.0.0-alpha.1]\n\n* Fix package naming in alpha.0\n\n## [7.0.0-alpha.0]\n\n* Split up packages - removed fields and validation from core\n\n## [6.2.1]\n\n* Fixed bug where `didChange` and `reset` on FormBuilderCheckboxGroup has no visible effect\n\n## [6.2.0]\n\n* Fixed `didChange` unable to handle null value in  `FormBuilderTextField`\n\n**BREAKING CHANGE**\n* Added new attribute - `autoFocusOnValidationFailure` (default: `false`) - to FormBuilder to set whether should scroll to first error if validation fails\n\n\n## [6.1.0]\n\n* When form validation fails, automatically scroll to first error\n* New way to programmatically induce custom errors by calling `GlobalKey<FormBuilderState>.invalidateField()` or `GlobalKey<FormBuilderFieldState>.invalidate()`\n* Added Arabic and Persian/Farsi locales\n* Made maxLines property nullable and added assertions\n* Remove field from internal value map on when a field is unregistered\n* Fix checkbox issue with null values\n\n## [6.0.1]\n\n* Add whitespace check for required validator\n* Null-safety and type fixes\n* Dispose off registered listeners (#799)\n\n## [6.0.0]\n\n* Re-introduced DateTimePicker field without external dependencies\n* Minor fixes\n\n## [6.0.0-nullsafety.1]\n\n* Static analysis improvements\n* Documentation improvements\n\n## [6.0.0-nullsafety.0]\n\n* Started working on null-safety\n\n**BREAKING CHANGES**:\n* Removed fields that depend on external dependencies incuding: `FormBuilderChipsInput`, `FormBuilderColorPicker`, `FormBuilderRating`, `FormBuilderSearchableDropdown`, `FormBuilderSignaturePad`, `FormBuilderTouchSpin`, `FormBuilderTypeAhead`\n\n## [5.0.0]\n\n* Flutter 2.* support\n\n## [4.2.0]\n\n* Added support for Slovak (sk) - @cek-cek\n\n**BREAKING CHANGES**:\n* Removed file picker field from package - moved to [form_builder_file_picker](https://pub.dev/packages/form_builder_file_picker) package.\n* Removed image picker field from package - moved to [form_builder_image_picker](https://pub.dev/packages/form_builder_image_picker) package.\n* Removed phone field field from package - moved to [form_builder_phone_field](https://pub.dev/packages/form_builder_phone_field) package.\n\n## [4.1.0]\n\n* Added support for Portuguese (pt)\n* Added support for Japanese (ja)\n* Added `FormBuilderValidators.notEqual` validator\n* Fix bug in `RadioGroup` where reset and didChange doesnt affect UI. Fixes #646, Fixes #647\n* Image picker fix: Added null-safe spread operator for `field.value`. Fixes #607\n* Fixed focus issue  in `ChipsInput`\n* Fixed bug `SearchableDropdown` where setting value programmatically does not update UI. Fixes #627\n* Upgraded flutter_typeahead to 1.9.1.\n\n## [4.0.2]\n\n* Fixed issue in Typeahead field where didChange not call and onChanged fired. Closes #595\n* Fixed issue where french not included in list of supported languages & translations not working. Closes #561\n\n## [4.0.1]\n\n* Fixed bug where `FormBuilderField` couldn't be used to create custom fields\n* Corrected documentation for equal validator\n\n## [4.0.0]\n\n**IMPROVEMENTS**:\n* New fields: `FormBuilderFilePicker`, `FormBuilderSearchableDropdown`, `FormBuilderCheckboxGroup`\n* Localization of validation error texts\n* Added external validation. Setting `InputDecoration.errorText` which invalidates the field.\n* New validators: `FormBuilderValidators.integer`, `FormBuilderValidators.equal`\n* Improved programmatically changing field values.\n* Add to `FormBuilderField.onReset` callback - to enable reaction to resetting by changing the UI to reflect reset\n* Add option to remove disabled field values from the final form value using `skipReadOnly` field.\n* Number of Chips to be selected in FilterChip can now be limited by setting `maxChips` attribute. Closes #500\n* Use localized text for OK and CANCEL button labels for ColorPicker dialog\n* For default DateTimePicker format, use localized DateTime formats\n* Added option for user to set own `border` for `FormBuilderSignaturePad`\n* Improvements to example: break down to several pages; also show code in example app\n\n**FIXES**:\n* RadioGroup and CheckboxGroup labels not wrapping in vertical mode. Fixes #474\n* Allow changing `enabled` and `initialValue` at runtime. Closes #515\n* Hide floating label if field is empty\n* Fixed bug in DateRangePicker where user can just pick one date\n* ColorPicker, DateRangePicker, DateTimePicker - set TextField readOnly to true. Prevents keyboard popup\n* Fixed label overflows in RadioGroup & CheckboxGroup fields\n* Renamed `updateFormAttributeValue` to `setInternalAttributeValue` to avoid confusion\n\n**BREAKING CHANGES**:\n* Renamed `attribute` option in all fields to `name`\n* Done away with `validators` attribute, use normal `validator`. Use `FormBuilderValidators.compose()` to compose multiple `FormFieldValidator`s into one\n* Attribute `readOnly` replaced by `enabled` - this was done to match Flutter's `FormField` naming convention\n* Renamed `FormBuilderRate` to `FormBuilderRating`\n* Renamed `FormBuilderValidators.IP()` to `FormBuilderValidators.ip()`\n* Removed CountryPicker field because of limited use. Replaced with SearchableDropdown with similar functionality but not only limited to countries.\n* Use signature: ^3.0.0 package instead of self-maintained - comes with breaking changes.\n\n## [4.0.0-pre.9]\n\n* Upgraded to latest `file_picker` -  adds `withReadStream` option for processing large files\n* Fixed issue where `initialValue` working on SignaturePad\n* Fixed issue where SignaturePad still accepts imput when `enabled` is set to `false`\n* Attempted fixes to `FocusNode` leaks\n* Inline documentation and README improvements\n\n## [4.0.0-pre.8]\n\n* Added enabled attribute to FormBuilder to allow disabling the whole form\n* Passed FocusNode through to super class. Also removed listeners when added.\n\n## [4.0.0-pre.7]\n\n* **BREAKING CHANGE**: Removed FormBuilderLocationField. Version 1 of [form_builder_map_field](https://pub.dev/packages/form_builder_map_field) to be used. Closes #491\n\n## [4.0.0-pre.6]\n\n* **BREAKING CHANGE**: Attribute `readOnly` replaced by `enabled` - this was done to match Flutter's `FormField` naming convention\n* **BREAKING CHANGE**: To programatically set values use original `didChange()` method instead of `patchValue()`\n* New validator for integer values\n* Add option to remove `readOnly` field values from the final form value using `skipReadOnly` field. Closes #501\n* RadioGroup and CheckboxGroup labels not wrapping in vertical mode. Fixes #474\n* Allow changing `readOnly` and `initialValue` at runtime. Closes #515\n* Expanded the list of supported image file extensions to match Flutter's\n* Fixed bug where email validator was returning match validator `errorText`\n\n## [4.0.0-pre.5]\n\n* Number of Chips to be selected in FilterChip can now be limited by setting `maxChips` attribute. Closes #500\n* After calling patchValue on TextField, take cursor to end of text. Closes #477\n* Fix compile error in SearchableDropdown caused by breacking change in `dropdown_search` package. Closes #507\n* Fixed bug: calling patchValue on DateTimePIcker doesn't update TextField. Closes #505\n* Fixed regression in DateTimePicker where field didn't work. Closes #496\n* Documentation improvements\n\n## [4.0.0-pre.4]\n\n* Added new field: FilePicker\n* Included v3 to v4 migration guide to README\n* Ensure options disabled for RadioGroup & CheckboxGroup if readOnly\n* Prevent events from happening while picking image (#460)\n* Use localized text for ok and cancel button labels for ColorPicker dialog\n* Minor improvements and documentation added for LocationField\n\n## [4.0.0-pre.3]\n\n* Changed Version naming for release candidates from `-RC.*` to `-pre.*`\n\n## [4.0.0-RC.2]\n\n* More documentation improvements\n\n## [4.0.0-RC.1]\n\n* Added compatibility for Flutter v1.22\n* Documentation improvements\n* hide floating label if field is empty\n* Add default placeholder image for ImagePicker\n* For default DateTimePicker format, use localized DateTime formats\n* Fixed bug in DateRangePicker where user can just pick one date\n* Fix bug in dropdown where setting enabled to false doesn't affect input. Closes #450\n* Bumped flutter_chips_input from v1.9.3 to v1.9.4\n* **BREAKING CHANGE**: Removed CountryPicker field because of limited use. Replaced with SearchableDropdown with similar functionality but not only limited to countries.\n\n## [4.0.0-beta.5]\n\n* Finished implementation of `FormBuilderSearchableDropdown`.\n* Deprecated `FormBuilderCountryPicker` - redundant due to `FormBuilderSearchableDropdown` inclusion.\n\n## [4.0.0-beta.4]\n\n* Fix for label overflows in Radio & Checkbox Groups\n* Fixed bug in `FormBuilderDateRangePicker` where if dialog dismissed, current value is cleared\n* Fix bug where changes from user defined `TextEditingController` in `FormBuilderTextField` not detected. Closes #448\n* Improvements to documentation\n\n## [4.0.0-beta.3]\n\n* Fixed bug where validate() always returns true. Closes #440\n\n## [4.0.0-beta.2]\n\n* Added new field FormBuilderLocationField\n* Use latest flutter_datetime_picker. Fixes `\"Error: Type 'DiagnosticableMixin' not found\"`. Closes #406\n* Fixed bug where initialValue not set in DateTimePicker. Closes #425\n* Fixed issue where equal validator yields required errorText\n* Fixes to focus and focusNodes, check if field is touched.\n\n## [4.0.0-beta.1]\n\n* Flutter v1.20 improvements\n* Fix bug in `FormBuilderValidators.numeric` if valueCandidate is `null`\n* Renamed `pattern` validator to `match`.\n* Rename `requireTrue` validator to `equal` to allow equality check with other types. Closes #397\n* Fix bug in parsing phone number from `FormBuilderPhoneField.initialValue`\n\n## [4.0.0-alpha.9]\n\n* Improved programmatically changing field values. Multiple fields can be updated once\n* Fix conversion to double error in `FormBuilderRating`\n* Removed redundant `FormBuilderRadioList` and `FormBuilderCheckboxList` fields\n* Other minor fixes from v3 commits\n\n## [4.0.0-alpha.8]\n\n* Fixed erratic keyboard behavior on `FormBuilderTextField`\n* Added documentation for `FormBuilder` & `FormBuilderField` attributes\n* Fixed issue where `FormBuilderRadioGroup` not submitting value\n\n## [4.0.0-alpha.7]\n\n* Added new field - `FormBuilderCheckboxGroup`. Closes #188,\n* New `FormBuilderRadioGroup` implementation similar to `FormBuilderCheckboxGroup`. Fixes issue where `FormBuilderFieldOption.child` is ignored Closes #335\n* Set FocusTraversalGroup policy\n* Fixed bug where TextField where `initialValue` from `FormBuilder` is ignored. Closes #370\n\n## [4.0.0-alpha.6]\n\n* Added focusNode to all fields.\n* Attempted tab/next support - work in progress\n* Request Focus to Field when change is attempted.\n* Include guide to programmatically inducing errors to README. Closes #123\n* Fixed bug in Localization where `Locale.countrycCode` is `null`. Closes #369\n* Added more options to DatePicker for showDatePicker() Flutter function\n* Rename `updateFormAttributeValue` to `setInternalAttributeValue` to avoid confusion\n\n## [4.0.0-alpha.5]\n\n* Improvements to dirty check for FormBuilderField - fixes autovalidate only when dirty\n\n## [4.0.0-alpha.4]\n\n* Added static getter for FormBuilderLocalizations delegate\n* Fix issue where setting app localization is required for built-in validation to work\n\n## [4.0.0-alpha.3]\n\n* Localize validation error texts\n* Dropped `country_picker` package for `country_code_pickers` in PhoneField which supports localized countries\n* Allow setting of `InputDecoration.errorText` which invalidates the field. Allows external validation like server validation\n* ColorPicker show Hexadecimal code in TextField instead of `Color.toString()`\n* Do away with validators attribute, use normal validator instead of list of validators\n* Added `FormBuilderValidators.compose()` which composes multiple `FormFieldValidator`s into one\n* ColorPicker, DateRangePicker, DateTimePicker - set TextField readOnly to true. Prevents keyboard popup\n* Improvements to example: break down to several pages; also show code in example app\n\n## [3.14.1]\n\n* Remove phone number validation internally. Closes #499\n* Include padding option for ChoiceChips. Closes #504\n\n## [3.14.0]\n\n* Added support for Flutter v1.22\n\n## [3.14.0-alpha.4]\n\n* Include changes made in v3.13.5 & v3.13.6\n* Fix build for flutter >=1.21.0-9.1.pre\n\n## [3.13.6]\n\n* Fixed bug in DateRangePicker where user can just pick one date. Closes #434\n* Fix bug where FormBuilderCheckboxGroup value set to widget.initialValue. Closes #467\n* Prevent events from happening while picking image with ImagePicker\n* Added null check for val in onSaved and validator\n* Fix `GroupedCheckbox` not disabled when read only\n* Added phone validation and fixed `initialValue` parsing\n* Fix `Image.memory` throwing error when value is `null`\n\n## [3.13.5]\n\n* Fixed bug in `DateRangePicker` where `onChanged` fires before change. Closes #434\n* Use app's locale for default DateTimePicker display formatting\n* Update to latest `flutter_chips_input`. Fixes #415\n\n## [3.14.0-alpha.3]\n\n* Include changes made in v3.13.4\n\n## [3.13.4]\n\n* Fixed bug where `CountryPicker.onSaved` breaks if value is null\n* Fixed bug where `initialValue` not saved\n* Fix for label overflows in `RadioGroup` & `CheckboxGroup`\n* Upgrade to latest `flutter_chips_input`. Fixes bugs in Flutter pre-release channels\n\n## [3.14.0-alpha.2]\n\n* Include changes made in v3.13.3\n\n## [3.13.3]\n\n* Fix bug where CountryPicker still works in readOnly. Closes #413\n* Fixed bug where onChanged is not fired in CountryPicker. Closes #424\n* Allow null initialValue for CountryPicker. Closes #421\n* Minor improvements for ImagePicker on web platform. Closes #414\n* Added video tutorial reference to README\n\n## [3.14.0-alpha.1]\n\n* Fixed `RangeSemanticFormatterCallback` error. Changed field with `SemanticFormatterCallback`.\n\n## [3.13.2]\n\n* Added `defaultImage` attribute to `FormBuilderImagePicker`, acts as placeholder. Courtesy [luwenbin8023](https://github.com/luwenbin8023)\n* Fix bug in `FormBuilderCheckboxGroup` where `InputDecoration` isn't enabled. Closes #405\n* Fix issue where form's initialValue would potentially be ignored. Fixes #341\n\n## [3.13.1]\n\n* Added default value to `timePickerInitialEntryMode` to be consistent with `showTimePicker` API. Closes #403\n* Ensure `TextEditingController`s aren't unused and are properly disposed.\n* Use latest version of `flutter_chips_input` with fix for \"Bad UTF-8 found...\"\n\n## [3.13.0]\n\n* Added support for Flutter v1.20\n\n## [3.12.3]\n\n* Fixed bug in parsing phone number from `FormBuilderPhoneField`'s `initialValue`\n* Added more TextField options: `toolbarOptions`, `smartQuotesType`, `smartDashesType`, `scrollPhysics`, `enableSuggestions`\n* Fixed `onChanged` bug on TextField\n\n## [3.12.2]\n\n* Convert FormBuilderRating value to double for RatingBar. Closes #392\n\n## [3.12.1]\n\n* Deprecate `FormBuilderRadio` in favour of `FormBuilderRadioGroup`\n* Deprecate `FormBuilderCheckbox` in favour of `FormBuilderCheckboxGroup`\n* Fix bug `\"NoSuchMethodError: invalid member on null: 'initialValue'\"` when fields not wrapped in `FormBuilder`\n\n## [3.12.0]\n\n* Added new field `FormBuilderCheckboxGroup`. Closes #188\n* Removed `group_radio_button` library dependency, made own implementation with label fix. Closes #376, #335\n* Add web support for ImagePicker. Courtesy of [vin-fandemand](https://github.com/vin-fandemand)\n* Fixed bug where value within `TextEditingController` ignored in `FormBuilderTypeahead`\n\n## [3.11.6]\n\n* Upgraded dependencies\n* Fixed error '`The getter 'initialValue' was called on null`' if no `FormBuilderState` ancestry. Closes #364\n* Fixed issue where DropdownButton `hint` overlaps with `labelText`. Closes #372\n* Fix '`initialEntryMode != null`' assertion in DateTimePicker. Closes #373\n\n## [3.11.5]\n\n* Included more `showDatePicker` function options\n* Fixed bug where `onChanged` not triggered by ImagePicker. Closes #366\n* Deprecate `underline` for Dropdown. Ignored\n* Added more options for DropdownButton. Closes #153, #337\n* Type `FormBuilderDropdown` class. Closes #360\n* Included options to set camera and gallery icons and label. Closes #340\n* Added `bottomSheetPadding` option for ImagePicker. Closes #339\n\n## [3.11.4]\n\n* Added text styles options to Slider\n* Re-implement number formatting on Slider field\n* Fix bug in ChoiceChip & FilterChip where using FieldOption label instead of child breaks. Closes #348\n* Added `labelPadding` and `labelStyle` to ChoiceChip field\n* Fix SignaturePad initialValue.\n\n## [3.11.3]\n\n* Reverted changes to PhoneField causing focus issues\n\n## [3.11.2]\n\n* Deprecated `initialValue` for Signature field - here's no easy way of converting `Uint8List` to `List<Point>`. Use SignatureController to set initial signature\n* Added `displayValues` attribute to Slider and RangeSlider - choose which values to display under the slider\n\n## [3.11.1]\n\n* Bumped up flutter_chips_input version. Contains major fix\n* Fixed bug preventing use of non-String value for `FormBuilderTypeAhead`.\n\n## [3.11.0]\n\n* Added `FormBuilderRadioGroup` field\n* Revised ImageSourceSheet to use the new Image Picker api, and added support for web platform.\n* Add `textAlignVertical` attribute option to FormBuilderTextField\n* Included additional configuration options to the FormBuilderImagePicker: `maxHeight`, `maxWidth`, `imageQuality`, `preferredCameraDevice` & `maxImages`\n* Added `alwaysUse24HourFormat` option to DateTimePicker. Closes #297\n* Revert focus to PhoneField TextField after country selected. Closes #302\n* Validate PhoneField only if phone number has value, not country only\n* Bumped up flutter_typeahead version. Contains keyboard visibility fix\n* Bumped up flutter_chips_input version with multiple fixes and improvements.\n* Show Country flag to PhoneField\n\n## [3.10.1]\n\n* Added delete icon on selected images in ImagePicker instead of non-intuitive long-press to delete. Closes #278\n* Added contentPadding option to Checkbox, CheckboxList, Radio and Switch to allow spacing of items in list options. Closes #280\n* Fix bug \"The getter 'isNotEmpty' was called on null\" in PhoneField\n\n## [3.10.0]\n\n* Added `FormBuilderCountryPicker` and `FormBuilderPhoneField`. Good work by [Furkan KURT](https://github.com/furkankurt)\n* Set `readOnly` prop to `false` in ColorPicker, DateRangePicker & DateTimePicker TextFields - prevents keyboard popping up. Closes #210\n* Fixed allowEmpty bug in `minLength` validator. Closes #259\n* Allow user to set iconColor for ImagePicker due to issue with dark mode. Closes #268\n* Use [signature package](https://pub.dev/packages/signature) instead of self-maintained Widget\n* Use `ObjectKey`s to enforce rebuild after reset\n* Added `decoration` attribute to ImagePicker, deprecated `labelText`\n* Remove deprecation for `initialTime` & `initialDate` in DateTimePicker\n\n## Unreleased\n\n* Add `contentPadding` to all `ListTile`-based fields\n\n## [4.0.0-alpha.2]\n\n* All form reset issues are fixed - I hope ;-). `UniqueKey()` used where  necessary\n* `FormBuilderField` to be used base to create custom fields. Removed unused `FormBuilderCustomField`\n* Add to `FormBuilderField.onReset` callback - to enable user to react to resetting by changing the UI to reflect reset\n* Fixed bug where setting form-wide `readOnly` to true doesn't affect fields\n* On field reset, use calculated `initialValue` instead of widget provided since it may have been set by the `FormBuilder`\n* Use signature: ^3.0.0 package instead of self-maintained - comes with breaking changes.\n* Added option for user to set own `border` for `FormBuilderSignaturePad`\n* Remove deprecation for `initialDate` and `initialTime` for `DateTimePicker` - user may prefer to set own\n\n## [4.0.0-alpha.1]\n\n* Complete rewrite of package implementation\n* Removed a few deprecations\n* Renamed `FormBuilderRate` to `FormBuilderRating`\n\n## [3.9.0]\n\n* New field type `FormBuilderImagePicker` courtesy of [Gustavo Vítor](https://github.com/gustavovitor)\n* Switched rating package from [sy_flutter_widgets](https://pub.dev/packages/form_builder_map_field) to [rating_bar](https://pub.dev/packages/rating_bar) with more configuration options\n* Switched rating package from [sy_flutter_widgets](https://pub.dev/packages/sy_flutter_widgets) to [rating_bar](https://pub.dev/packages/rating_bar) with more configuration options\n* Added option to `showCheckmark` for FormBuilderFilterChip, along with other options. Closes #260\n* Added option to `allowEmpty` in `minLength` and `maxLength` validations. Closes #259\n* Fixed bug where `locale`, `textDirection`, `useRootNavigator` & `builder` not passed down to `showDatePicker()` and `showTimePicker()`\n* Assert `initialValue` is `null` or `controller` is `null` for `FormBuilderTextField`. Closes #258\n\n## [3.8.3]\n\n* Fix bug where `onChange` in FormBuilderDateTimePicker doesn't fire when field is cleared. Closes #254\n* Fix `The method 'dispose' was called on null.` issue in FormBuilderTypeAhead. Closes #256\n* Bumped up flutter_chips_input to v1.8.0 from v1.7.0\n\n## [3.8.2]\n\n* `onTap` callback added to `FormBuilderTextField` \n* Link to [form_builder_map_field](https://pub.dev/packages/form_builder_map_field) added to README\n* Improvements to README\n\n## [3.8.1]\n\n* Only enable corresponding TextField when ColorPicker is not readOnly\n* Fixed bug where `FormBuilderTouchSpin` aka Stepper not being disabled when in readOnly\n* Bumped up color_picker to 0.3.2, added new ColorPickerType - `SliderPicker`\n* Export `flutter_typeahead` package so user gets access `TextFieldConfiguration` class\n* Deprecate `validator` attribute in FormBuilderDateTimePicker, only `validators` should be used\n* When TimePicker is cancelled, return original value instead of null\n* Fix bug where initialTime for TimePicker defaults to 12:00, use currentTime. Closes [#234](https://github.com/danvick/flutter_form_builder/issues/234)\n\n## [3.8.0+1]\n\n* Fix bug where Changing readOnly of `FormBuilder` does not change readOnly of `FormBuilderDateTimePicker`. Closes [#179](https://github.com/danvick/flutter_form_builder/issues/179)\n\n## [3.8.0]\n\n* **NEW FIELD TYPES:**\n    * `FormBuilderChoiceChip` - Creates a chip that acts like a radio button. Courtesy [Cesar Flores](https://github.com/VOIDCRUSHER)\n    * `FormBuilderFilterChip` - Creates a chip that acts like a checkbox. By [Cesar Flores](https://github.com/VOIDCRUSHER). Again!\n    * `FormBuilderColorPicker` with help from [Benjamin](https://github.com/Reprevise)\n    * `FormBuilderTouchSpin` replaced the confusingly named `FormBuilderStepper` which is now deprecated.\n* Fix some inconsistencies in controller and focus node disposal. Courtesy of [Thomas Järvstrand](https://github.com/tjarvstrand). Should close [#230](https://github.com/danvick/flutter_form_builder/issues/230)\n* Bumped up `flutter_typeahead` from `1.7.0` to `1.8.0`\n\n## [3.7.3]\n\n* Bumped up `intl`, `datetime_picker_formfield` & `flutter_chips_input`. Closes #204, #207, #211, #215.\n* Fixed deprecation errors\n\n## [3.7.2]\n\n* Fix email validator: Trim white-space before validation\n* Return Form's value state with all fields defined in initialValue\n\n## [3.7.1] - 6-Dec-2019\n\n* Use `num` for `FormBuilderStepper` instead of `double` to allow for either `int` or `double`\n\n## [3.7.0] - 5-Dec-2019\n\n* Included `onSaved` callback to all fields. Closes [#175](https://github.com/danvick/flutter_form_builder/issues/175)\n* Added `Key` option to all fields to make testing possible \n* Fixed bug where custom controller not working in TypeAhead. Closes [#144](https://github.com/danvick/flutter_form_builder/issues/144)\n* Fix issue where `FormBuilderDateRangePicker` ignores `initialFirstDate` and `initialLastDate`\n* Fixed bug where readOnly not working in FormBuilderDateTimePicker. Closes [#179](https://github.com/danvick/flutter_form_builder/issues/179)\n* Allow double `values` for `FormBuilderStepper`. Closes [#182](https://github.com/danvick/flutter_form_builder/issues/182)\n* Only include clear icon next to DropdownButton if the value is not `null`\n* Revert `intl`, upgrade `flutter_chips_input` & `datetime_picker_formfield` - due incompatibilities. Closes [#183](https://github.com/danvick/flutter_form_builder/issues/183), [#185](https://github.com/danvick/flutter_form_builder/issues/185)\n\n## [3.6.1] - 6-Nov-2019\n\n* Fixed bug caused by dropping unimplemented attribute `onChipTapped` of `flutter_chips_input`. Closes [#168](https://github.com/danvick/flutter_form_builder/issues/168)\n\n## [3.6.0] - 4-Nov-2019\n\n* Added clear option to FormBuilderDropdown - set `allowClear` to true. Closes [#148](https://github.com/danvick/flutter_form_builder/issues/148)\n* Default `contentPadding` and `border` attributes removed from CheckboxList, Radio and SegmentedControl list. Closes [#160](https://github.com/danvick/flutter_form_builder/issues/160)\n* Added `numberFormat` attribute to Slider. Closes [#156](https://github.com/danvick/flutter_form_builder/issues/156)\n* Add error text to date range picker. Thanks to [ffpetrovic](https://github.com/ffpetrovic)\n* Fixed bug where pushing cancel on timePicker causes crash. Thanks to [ayushin](https://github.com/ayushin)\n* Fixed bug where Switch doesn't obey initialValue from FormBuilder. Closes [#159](https://github.com/danvick/flutter_form_builder/issues/159)\n* Fixed bug where FormBuilderDropdown shows value instead of label when disabled/readOnly. Closes [#154](https://github.com/danvick/flutter_form_builder/issues/154)\n* Fixed bug where FormBuilderDateTimePicker value is parsed from TextField string. Closes [#164](https://github.com/danvick/flutter_form_builder/issues/164)\n* Added default TextInputConfiguration options for ChipsInput\n* Fix example project - AndroidX compatibility. Thanks to [prasadsunny1](https://github.com/prasadsunny1)\n* Bumped up `flutter_typeahead` 1.6.1 -> 1.7.0\n\n## [3.5.5] - 3-Oct-2019\n\n* Bumped up `flutter_chips_input` version from 1.3.1 to 1.5.1\n* AndroidX migration for example app\n\n## [3.5.4]\n\n* Fix dependency mismatch for `intl` with `flutter_localizations` from sdk\n* Bumped up `datetime_picker_formfield` dependency version\n\n## [3.5.3]\n\n* Fixed DateTimePicker bug: '`DateTime is not a subtype of type TimeOfDay`' when Input type is Time only. Closes [#131](https://github.com/danvick/flutter_form_builder/issues/131)\n\n## [3.5.2]\n\n* Re-introduced `onSuggestionSelected` option in TypeAhead field\n\n## [3.5.1]\n\n* Hack to avoid manual editing of date - as is in DateTimeField library\n\n## [3.5.0]\n\n* **NEW FIELD TYPE**: `FormBuilderDateRangePicker`\n* New method `saveAndValidate` method to `FormBuilder`\n* Ability to use custom data types in TypeAhead field instead of just String\n* `FormBuilderDateTimePicker` fixes\n    * Fixed bug where currently selected date is cleared when DateTimePicker dialog is shown\n    * Also fixed bug where currently selected date not used as initial date in DateTimePicker dialog\n    * `initialTime` and `initialDate` deprecated - brings confusion with `initialValue`. Selected date/time or current date/time will be used instead\n* **BREAKING CHANGE**: Changed type of `resetIcon`in DateTimePicker from `IconData` to `Icon`\n\n## [3.4.1]\n\n* Fixed bug in `FormBuilderDateTimePicker` where `initialValue` defaults to null\n\n## [3.4.0]\n\n* Converted `FormBuilderFieldOption` to Widget with `child` attribute - allows option to be customized/styled\n* Fixed bug in `FormBuilderCheckboxList` where new items cannot be added\n* Allow `null` value on checkbox if `tristate` is enabled\n* Adding InputBorder on `FormBuilderDropdownField` now possible\n* Fixed bug where initial date not shown for `FormBuilderDateTimePicker`\n\n## [3.3.4]\n\n* Added `initialValue` field to `FormBuilderCustomField`\n\n## [3.3.3]\n\n* Attempt to fix issue where user is required to manually edit `FormBuilderDateTimePicker` if not empty - instead of presenting Date/Time Picker\n\n## [3.3.2]\n\n* Upgrade dependency `datetime_picker_formfield` from v0.4.0 to 1.0.0-pre.2 (aka v0.4.1)\n* Removed `editable` option from `FormBuilderDateTimePicker` - removed from dependency `datetime_picker_formfield` \n\n## [3.3.1]\n\n* Fixed bugs in `FormBuilderDateTimePicker`\n* Minor improvements to documentation\n\n## [3.3.0]\n\n* New Feature: You can now set `initialValue` for `FormBuilder` - Accepts a `Map<String, dynamic>` where keys are `attribute`s and the values are `initialValue`s for corresponding fields\n* New Field: `FormBuilderRangeSlider`\n* Compatibility with newly released Flutter version `1.7.*`\n* `Breaking change:` Renamed occurrences of `readonly` to `readOnly` to fit naming conventions \n* Updated `datetime_picker_formfield` to version `0.4.0` from `0.2.0`\n* Added more attribute options for different fields\n\n## [3.2.9]\n\n* Added `borderColor`, `selectedColor`, `pressedColor`, `textStyle` options to `FormBuilderSegmentedControl` for `CupertinoSegmentedControl` customization\n\n## [3.2.8]\n\n* Added `activeColor`, `checkColor`, `materialTapTargetSize` & `tristate` options to `FormBuilderCheckbox` and `FormBuilderCheckboxList` for checkbox customization\n\n## [3.2.7]\n\n* Fixed bug where `valueTransformer`s not working\n\n## [3.2.6]\n\n* If disabled dropdown has value, show value instead of `disabledHint`\n\n## [3.2.5]\n\n* Fixed Stack Overflow bug in `setAttributeValue` function\n\n## [3.2.4]\n\n* Fixed issue in saving form attribute values - Credit [Caciano Kroth](https://github.com/cacianokroth) & [eltonmorais](https://github.com/eltonmorais)\n\n## [3.2.3]\n\n* Allow `readonly` attribute for fields to be changed at runtime. Credit [Daniel Acorsi](https://github.com/dhaalves). Closes [#75](https://github.com/danvick/flutter_form_builder/issues/75)\n\n## [3.2.2]\n\n* Bumped up `flutter_chips_input` from v1.2.0 to 1.3.0\n\n## [3.2.1]\n\n* Add missing attributes for `FormBuilderSlider` to customize `Slider` Widget including `activeColor`, `inactiveColor`, `onChangeStart`, `onChangeEnd`, `label` and `semanticFormatterCallback`. Closes [#80](https://github.com/danvick/flutter_form_builder/issues/80).\n* Add support for `underline` to `FormBuilderDropdown`. Credit Jordan Nelson (github/jrnelson333).\n* Minor fixes to README\n\n## [3.2.0]\n\n* Bumped up `flutter_typeahead` from v1.5.0 to 1.6.1\n* Bumped up `datetime_picker_formfield` from v0.1.8 to 0.2.0\n\n## [3.1.3]\n\n* Made `flutter_typeahead`'s `onSuggestionSelected` available to `FormBuilderTypeAhead` - Closes [#73](https://github.com/danvick/flutter_form_builder/issues/73). Credit to daWeed (github/psrcek)\n\n## [3.1.2]\n\n* Attempted fix for `FormBuilderTextField` retaining focus even after moving to other fields causing the UI to jump back to the TextField\n* Improved documentation for `FormBuilderCustomField`\n\n## [3.1.1]\n\n* Fixed sample code in README for example project\n* Bumped up `flutter_typeahead` from v1.4.0 to 1.5.0\n\n## [3.1.0]\n\n* Added `leadingInput` option for CheckboxList, Checkbox and Radio - Allows the option to have the input before its label (left). Courtesy of [Sven Schöne](https://github.com/SvenSchoene)\n\n## [3.0.1]\n\n* Fixed bug in where `focuNode` for `FormBuilderTextField` is ignored. Closes [#53](https://github.com/danvick/flutter_form_builder/issues/53)\n* Fixed bug in where `textEditingConfiguration` for `FormBuilderTypeAhead` ignored\n\n## [3.0.0]\n\n* Complete rewrite of the package - stateful field widgets\n    * `FormBuilderCheckbox` - Single Checkbox field\n    * `FormBuilderCheckboxList` - List of Checkboxes for multiple selection\n    * `FormBuilderChipsInput` - Takes a list of Flutter [Chip](https://api.flutter.dev/flutter/material/Chip-class.html) as inputs\n    * `FormBuilderDateTimePicker` - For Date, Time and DateTime input\n    * `FormBuilderDropdown` - Allow selection of one value from a list as a Dropdown\n    * `FormBuilderRadio` - Allow selection of one value from a list of Radio Widgets \n    * `FormBuilderRate` - For selection of a numerical value as a rating \n    * `FormBuilderSegmentedControl` - For selection of a value from the `CupertinoSegmentedControl` as an input\n    * `FormBuilderSignaturePad` - Presents a drawing pad on which user can doodle\n    * `FormBuilderSlider` - For selection of a numerical value on a slider\n    * `FormBuilderStepper` - Selection of a number by tapping on a plus or minus symbol\n    * `FormBuilderSwitch` - On/Off switch\n    * `FormBuilderTextField` - For text input. Allows input of single-line text, multi-line text, password,\n    email, urls etc by using different configurations and validators\n    * `FormBuilderTypeAhead` - Auto-completes user input from a list of items\n* New `FormBuilderCustomField` to create of custom `FormField`s\n* New attribute `validators` allows composability and reusability of different `FormFieldValidator` \nfunctions that do different validations\n* New Feature `FormBuilderValidators` comes with common validation functionality options such as: \nrequired, min, max, minLength, maxLength, email, url, credit card etc.\n* Added `valueTransformer` - transforms field value before saving to the final form value\n* Added requested `onChanged` value notifier event on fields. Closes [#45](https://github.com/danvick/flutter_form_builder/issues/45)\n* Prevent duplicate `attribute` names in fields - assertion\n* **Breaking changes:**\n    * `FormBuilderInputOption` becomes `FormBuilderFieldOption`\n    * `BuildContext` is not passed down into `FormBuilder`\n* Fixed URL validator works correctly - tested\n* Improved documentation\n\n## [2.0.3]\n\n* Allow `null`s in `FormBuilder` controls `attribute`\n\n## [2.0.2]\n\n* Minor fix in documentation\n\n## [2.0.1]\n\n* Fixed bug where fields keep losing focus\n\n## [2.0.0]\n### New Features and fixes\n\n* New attribute `decoration` for `FormBuilderInput`. Enables one to customize `InputDecoration` \nlike icons, labelStyles etc\n* Added ability to add `GlobalKey` of type `FormBuilderState` to FormBuilder that will be \nthe handle to the\nstate of the form enabling saving and resetting. Similar to using Flutter's `Form`.\n* Added new input type `FormBuilder.signaturePad` which provides a drawing pad for user signature\n* Added `max` attribute to `chipsInput` to limit the number of chips users can add\n* Added new attribute `maxLines` to be used with textFields with multiple lines\n* Fixed bug where readonly not working to Date, Time and DateTime Pickers\n\n### Breaking Changes\n\n* Removed reset/submit buttons and corresponding attributes: `showResetButton`, `resetButtonContent`\nAccess form state using a `GlobalKey<FormBilderState>`\n* Removed `label` and `hint` attributes to be replaced by `decoration`\n\n\n## [1.5.1]\n\n* Fixed bugs originating from upgrading `flutter_typeahead` from v0.5.1 to v1.2.1\n\n## [1.5.0]\n\n* Now using `datetime_picker_formfield` plugin from pub for DatePicker and TimePicker. \nShould close [#33](https://github.com/danvick/flutter_form_builder/issues/33)\n* Added new `FormBuilderInput` - DateTimePicker\n* **Breaking change**: DatePicker, TimePicker & DateTimePicker now return an object of \ntype `DateTime` instead of `String`\n* Upgraded `flutter_typeahead` from v0.5.1 to v1.2.1 - comes with more widgets options\n\n## [1.4.0]\n\n* The entire form or individual controls can now be made readonly by making `readonly` property \nto `true`. Default value is `false`. \nCloses [#11](https://github.com/danvick/flutter_form_builder/issues/11) and \n[#16](https://github.com/danvick/flutter_form_builder/issues/16)\n\n## [1.3.5]\n\n* Fixed bug on Slider where current value not updated on slider & label\n\n## [1.3.4]\n\nBug fix: Imported `dart:async` for use of `Future`s to be compatible with Dart <2.1\n\n## [1.3.3]\n\n* Updated `flutter_typeahead` version. Closes [#15](https://github.com/danvick/flutter_form_builder/issues/15)\n\n## [1.3.2]\n\n* Allow setting of `format` for DatePicker\n* Fixed bug where `lastDate` and `firstDate` for DatePicker don't work\n\n## [1.3.1]\n\n* Moved ChipsInput into own library on pub.dartlang.org, \ncheck it out [here](https://pub.dartlang.org/packages/flutter_chips_input)\n* Updated example code to include proper use of Form's `onChanged` function after update. \nCloses [#8](https://github.com/danvick/flutter_form_builder/issues/8)\n\n## [1.3.0]\n\n* Fixed bug where TypeAhead value reset when other fields are updated\n* `onChanged` function for FormBuilder is now called with current form values (breaking change)\n* Form reset now works as expected\n* Other minor refactorings\n\n## [1.2.0]\n\n* New `FormBuilderInput` types:  \n    * ChipsInput\n* Some bug fixes\n* Minor UI improvements\n* Some bugs introduced, to be fixed later\n\n## [1.1.0]\n\n* Fixed bug where validation not working for fields outside screen (when using ListView) - \n[Flutter Issue #17385](https://github.com/flutter/flutter/issues/17385)\n* Added InputDecoration for all custom FormFields\n\n## [1.0.2]\n\n* Fixed bug in (un)selecting checkbox list using by clicking its label\n\n## [1.0.1]\n\n* Minor improvements to documentation, added known issues section too\n\n## [1.0.0]\n### Features\n* New `FormBuilderInput` types:  \n    * Phone\n    * Stepper\n    * Rate\n    * SegmentedControl\n* `min` and `max` validation added to number field and textField\n* More specialized keyboard types for TextField control types (text, number, url, email, multiline, phone etc)\n* Tapping on Label for radio/checkbox changes the control value\n* Created new constructors for password and textField inputs\n* Added resetButton\n\n### Fixes \n* Fixed bug where `TYPE_TEXT` validates as `TYPE_EMAIL` - Closes [#1](https://github.com/danvick/flutter_form_builder/issues/1)\n* Fixed initial value setting `FormBuilderInput.checkboxList()`\n\n### Breaking Changes\n* `placeholder` attribute of class `FormBuilderInput` renamed to `hint`\n* Removed default constructor for `FormBuilderInput`\n\n## [0.0.1] - 1-Nov-2018.\n* Initial Release\n* Input Types: \n    * Text \n    * Number \n    * Email\n    * MultilineText\n    * Password\n    * Radio\n    * CheckboxList\n    * Checkbox\n    * Switch\n    * Slider\n    * Dropdown\n    * DatePicker\n    * TimePicker\n    * Url\n    * TypeAhead\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0615234375,
          "content": "MIT License\n\nCopyright (c) 2024 Flutter Form Builder Ecosystem\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.1328125,
          "content": "# Flutter Form Builder\n\nThis package helps in creation of data collection forms in Flutter by removing the boilerplate needed to build a form, validate fields, react to changes and collect final user input.\n\nAlso included are common ready-made form input fields for FormBuilder. This gives you a convenient way of adding common ready-made input fields instead of creating your own FormBuilderField from scratch.\n\n[![Pub Version](https://img.shields.io/pub/v/flutter_form_builder?logo=flutter&style=for-the-badge)](https://pub.dev/packages/flutter_form_builder)\n[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/flutter-form-builder-ecosystem/flutter_form_builder/base.yaml?branch=main&logo=github&style=for-the-badge)](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/actions/workflows/base.yaml)\n[![Codecov](https://img.shields.io/codecov/c/github/flutter-form-builder-ecosystem/flutter_form_builder?logo=codecov&style=for-the-badge)](https://codecov.io/gh/flutter-form-builder-ecosystem/flutter_form_builder/)\n[![CodeFactor Grade](https://img.shields.io/codefactor/grade/github/flutter-form-builder-ecosystem/flutter_form_builder?logo=codefactor&style=for-the-badge)](https://www.codefactor.io/repository/github/flutter-form-builder-ecosystem/flutter_form_builder)\n\n---\n\n## Call for Maintainers\n\n> We are looking for maintainers to contribute to the development and maintenance of Flutter Form Builder Ecosystem. Is very important to keep the project alive and growing, so we need your help to keep it up to date and with new features. You can contribute in many ways, we describe some of them in [Support](#support) section.\n\n- [Features](#features)\n- [Inputs](#inputs)\n  - [Parameters](#parameters)\n- [Use](#use)\n  - [Setup](#setup)\n  - [Basic use](#basic-use)\n  - [Specific uses](#specific-uses)\n    - [Validate and get values](#validate-and-get-values)\n    - [Building your own custom field](#building-your-own-custom-field)\n    - [Programmatically changing field value](#programmatically-changing-field-value)\n    - [Programmatically inducing an error](#programmatically-inducing-an-error)\n    - [Conditional validation](#conditional-validation)\n    - [Implement reset, clear or other button into field](#implement-reset-clear-or-other-button-into-field)\n- [Support](#support)\n  - [Contribute](#contribute)\n  - [Questions and answers](#questions-and-answers)\n  - [Donations](#donations)\n- [Roadmap](#roadmap)\n- [Ecosystem](#ecosystem)\n- [Thanks to](#thanks-to)\n\n## Features\n\n- Create a form with several type of inputs\n- Get values from form by easy way\n- Apply validators to inputs fields\n- React to form fields changes and validations\n\n| Complete Form                                                                                                                                                 | Sign Up                                                                                                                                             | Dynamic Fields                                                                                                                                                | Conditional Form                                                                                                                                                      |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| ![Gif demostration with all fields](https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/screenshots/complete_form.gif) | ![Gif demostration sign up form](https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/screenshots/signup.gif) | ![Gif demostration dynamic fields](https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/screenshots/dynamic_fields.gif) | ![Gif demostration conditional fields](https://raw.githubusercontent.com/flutter-form-builder-ecosystem/flutter_form_builder/main/screenshots/conditional_fields.gif) |\n\n## Inputs\n\nThe currently supported fields include:\n\n- `FormBuilderCheckbox` - Single checkbox field\n- `FormBuilderCheckboxGroup` - List of checkboxes for multiple selection\n- `FormBuilderChoiceChip` - Creates a chip that acts like a radio button.\n- `FormBuilderDateRangePicker` - For selection of a range of dates\n- `FormBuilderDateTimePicker` - For `Date`, `Time` and `DateTime` input\n- `FormBuilderDropdown` - Used to select one value from a list as a Dropdown\n- `FormBuilderFilterChip` - Creates a chip that acts like a checkbox\n- `FormBuilderRadioGroup` - Used to select one value from a list of Radio Widgets\n- `FormBuilderRangeSlider` - Used to select a range from a range of values\n- `FormBuilderSlider` - For selection of a numerical value on a slider\n- `FormBuilderSwitch` - On/Off switch field\n- `FormBuilderTextField` - A Material Design text field input\n\n### Parameters\n\nIn order to create an input field in the form, along with the label, and any applicable validation, there are several attributes that are supported by all types of inputs namely:\n\n| Attribute          | Type                    | Default             | Required | Description                                                                                                                               |\n| ------------------ | ----------------------- | ------------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| `name`             | `String`                |                     | `Yes`    | This will form the key in the form value Map                                                                                              |\n| `initialValue`     | `T`                     | `null`              | `No`     | The initial value of the input field                                                                                                      |\n| `enabled`          | `bool`                  | `true`              | `No`     | Determines whether the field widget will accept user input.                                                                               |\n| `decoration`       | `InputDecoration`       | `InputDecoration()` | `No`     | Defines the border, labels, icons, and styles used to decorate the field.                                                                 |\n| `validator`        | `FormFieldValidator<T>` | `null`              | `No`     | A `FormFieldValidator` that will check the validity of value in the `FormField`                                                           |\n| `onChanged`        | `ValueChanged<T>`       | `null`              | `No`     | This event function will fire immediately the the field value changes                                                                     |\n| `valueTransformer` | `ValueTransformer<T>`   | `null`              | `No`     | Function that transforms field value before saving to form value. e.g. transform TextField value for numeric field from `String` to `num` |\n\nThe rest of the attributes will be determined by the type of Widget being used.\n\n## Use\n\n### Setup\n\nNo specific setup required: only install the dependency and use :)\n\n### Basic use\n\n```dart\nfinal _formKey = GlobalKey<FormBuilderState>();\n\nFormBuilder(\n    key: _formKey,\n    child:  FormBuilderTextField(\n        name: 'text',\n        onChanged: (val) {\n            print(val); // Print the text value write into TextField\n        },\n    ),\n)\n```\n\nSee [pub.dev example tab](https://pub.dev/packages/flutter_form_builder/example) or [github code](example/lib/main.dart) for more details\n\n### Specific uses\n\n#### Validate and get values\n\nNote: Validators are in a separate package\n([form_builder_validators](https://pub.dev/packages/form_builder_validators)).\n\n```dart\nfinal _formKey = GlobalKey<FormBuilderState>();\n\nFormBuilder(\n  key: _formKey,\n  child: Column(\n    children: [\n      FormBuilderTextField(\n        key: _emailFieldKey,\n        name: 'email',\n        decoration: const InputDecoration(labelText: 'Email'),\n        validator: FormBuilderValidators.compose([\n          FormBuilderValidators.required(),\n          FormBuilderValidators.email(),\n        ]),\n      ),\n      const SizedBox(height: 10),\n      FormBuilderTextField(\n        name: 'password',\n        decoration: const InputDecoration(labelText: 'Password'),\n        obscureText: true,\n        validator: FormBuilderValidators.compose([\n          FormBuilderValidators.required(),\n        ]),\n      ),\n      MaterialButton(\n        color: Theme.of(context).colorScheme.secondary,\n        onPressed: () {\n          // Validate and save the form values\n          _formKey.currentState?.saveAndValidate();\n          debugPrint(_formKey.currentState?.value.toString());\n\n          // On another side, can access all field values without saving form with instantValues\n          _formKey.currentState?.validate();\n          debugPrint(_formKey.currentState?.instantValue.toString());\n        },\n        child: const Text('Login'),\n      )\n    ],\n  ),\n),\n```\n\n#### Building your own custom field\n\nTo build your own field within a `FormBuilder`, we use `FormBuilderField` which will require that you define your own field.\nRead [this article](https://medium.com/@danvickmiller/building-a-custom-flutter-form-builder-field-c67e2b2a27f4) for step-by-step instructions on how to build your own custom field.\n\n```dart\nvar options = [\"Option 1\", \"Option 2\", \"Option 3\"];\n```\n\n```dart\nFormBuilderField(\n  name: \"name\",\n  validator: FormBuilderValidators.compose([\n    FormBuilderValidators.required(),\n  ]),\n  builder: (FormFieldState<dynamic> field) {\n    return InputDecorator(\n      decoration: InputDecoration(\n        labelText: \"Select option\",\n        contentPadding:\n            EdgeInsets.only(top: 10.0, bottom: 0.0),\n        border: InputBorder.none,\n        errorText: field.errorText,\n      ),\n      child: Container(\n        height: 200,\n        child: CupertinoPicker(\n          itemExtent: 30,\n          children: options.map((c) => Text(c)).toList(),\n          onSelectedItemChanged: (index) {\n            field.didChange(options[index]);\n          },\n        ),\n      ),\n    );\n  },\n),\n```\n\n#### Programmatically changing field value\n\nYou can either change the value of one field at a time like so:\n\n```dart\n_formKey.currentState.fields['color_picker'].didChange(Colors.black);\n```\n\nOr multiple fields value like so:\n\n```dart\n_formKey.currentState.patchValue({\n  'age': '50',\n  'slider': 6.7,\n  'filter_chip': ['Test 1'],\n  'choice_chip': 'Test 2',\n  'rate': 4,\n  'chips_test': [\n    Contact(\n        'Andrew',\n        'stock@man.com',\n        'https://d2gg9evh47fn9z.cloudfront.net/800px_COLOURBOX4057996.jpg',\n    ),\n  ],\n});\n```\n\n#### Programmatically inducing an error\n\n##### Using form state key or field state key\n\n```dart\nfinal _formKey = GlobalKey<FormBuilderState>();\nfinal _emailFieldKey = GlobalKey<FormBuilderFieldState>();\n...\nFormBuilder(\n  key: _formKey,\n  child: Column(\n    children: [\n      FormBuilderTextField(\n        key: _emailFieldKey,\n        name: 'email',\n        decoration: const InputDecoration(labelText: 'Email'),\n        validator: FormBuilderValidators.compose([\n          FormBuilderValidators.required(),\n          FormBuilderValidators.email(),\n        ]),\n      ),\n      ElevatedButton(\n        child: const Text('Submit'),\n        onPressed: () async {\n          if(await checkIfEmailExists()){\n            // Either invalidate using Form Key\n            _formKey.currentState?.fields['email']?.invalidate('Email already taken');\n            // OR invalidate using Field Key\n            _emailFieldKey.currentState?.invalidate('Email already taken');\n          }\n        },\n      ),\n    ],\n  ),\n),\n```\n\nWhen use `invalidate` and `validate` methods, can use two optional parameters configure the behavior\nwhen invalidate field or form, like focus or auto scroll. Take a look on method documentation for more details\n\n##### Using InputDecoration.errorText\n\nDeclare a variable to hold your error:\n\n```dart\nString _emailError;\n```\n\nUse the variable as the `errorText` within `InputDecoration`\n\n```dart\nFormBuilderTextField(\n  name: 'email',\n  decoration: InputDecoration(\n    labelText: 'Email',\n    errorText: _emailError,\n  ),\n  validator: FormBuilderValidators.compose([\n      FormBuilderValidators.required(),\n      FormBuilderValidators.email(),\n  ]),\n),\n```\n\nSet the error text\n\n```dart\nElevatedButton(\n  child: Text('Submit'),\n  onPressed: () async {\n    setState(() => _emailError = null);\n    if(await checkIfEmailExists()){\n      setState(() => _emailError = 'Email already taken.');\n    }\n  },\n),\n```\n\n#### Conditional validation\n\nYou can also validate a field based on the value of another field\n\n```dart\nFormBuilderRadioGroup(\n  decoration: InputDecoration(labelText: 'My best language'),\n  name: 'my_language',\n  validator: FormBuilderValidators.required(),\n  options: [\n    'Dart',\n    'Kotlin',\n    'Java',\n    'Swift',\n    'Objective-C',\n    'Other'\n  ]\n    .map((lang) => FormBuilderFieldOption(value: lang))\n    .toList(growable: false),\n  ),\n  FormBuilderTextField(\n    name: 'specify',\n    decoration:\n        InputDecoration(labelText: 'If Other, please specify'),\n    validator: (val) {\n      if (_formKey.currentState.fields['my_language']?.value ==\n              'Other' &&\n          (val == null || val.isEmpty)) {\n        return 'Kindly specify your language';\n      }\n      return null;\n    },\n  ),\n```\n\n#### Implement reset, clear or other button into field\n\nIf you can add some button to reset specific field, can use the `decoration` parameter like this:\n\n```dart\nList<String> genderOptions = ['Male', 'Female', 'Other'];\n\nFormBuilderDropdown<String>(\n  name: 'gender',\n  initialValue: 'Male',\n  decoration: InputDecoration(\n    labelText: 'Gender',\n    suffix: IconButton(\n      icon: const Icon(Icons.close),\n      onPressed: () {\n        _formKey.currentState!.fields['gender']\n            ?.reset();\n      },\n    ),\n    hintText: 'Select Gender',\n  ),\n  items: genderOptions\n      .map((gender) => DropdownMenuItem(\n            alignment: AlignmentDirectional.center,\n            value: gender,\n            child: Text(gender),\n          ))\n      .toList(),\n),\n```\n\nOr reset value like this:\n\n```dart\nclass ClearFormBuilderTextField extends StatefulWidget {\n  const ClearFormBuilderTextField({super.key});\n\n  @override\n  State<ClearFormBuilderTextField> createState() =>\n      _ClearFormBuilderTextFieldState();\n}\n\nclass _ClearFormBuilderTextFieldState\n    extends State<ClearFormBuilderTextField> {\n  final ValueNotifier<String?> text = ValueNotifier<String?>(null);\n  final textFieldKey = GlobalKey<FormBuilderFieldState>();\n\n  @override\n  Widget build(BuildContext context) {\n    return FormBuilderTextField(\n      autovalidateMode: AutovalidateMode.always,\n      name: 'age',\n      key: textFieldKey,\n      onChanged: (value) {\n        text.value = value;\n      },\n      decoration: InputDecoration(\n        labelText: 'Age',\n        suffixIcon: ValueListenableBuilder<String?>(\n          valueListenable: text,\n          child: IconButton(\n            onPressed: () => textFieldKey.currentState?.didChange(null),\n            tooltip: 'Clear',\n            icon: const Icon(Icons.clear),\n          ),\n          builder: (context, value, child) =>\n              (value?.isEmpty ?? true) ? const SizedBox() : child!,\n        ),\n      ),\n    );\n  }\n}\n```\n\n## Support\n\n### Contribute\n\nYou have some ways to contribute to this packages\n\n- Beginner: Reporting bugs or request new features\n- Intermediate: Implement new features (from issues or not) and created pull requests\n- Advanced: Join to [organization](#ecosystem) like a member and help coding, manage issues, dicuss new features and other things\n\nSee [contribution file](https://github.com/flutter-form-builder-ecosystem/.github/blob/main/CONTRIBUTING.md) for more details\n\n### Questions and answers\n\nYou can question or search answers on [Github discussion](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/discussions) or on [StackOverflow](https://stackoverflow.com/questions/tagged/flutter-form-builder)\n\n### Donations\n\nDonate or become a sponsor of Flutter Form Builder Ecosystem\n\n[![Become a Sponsor](https://opencollective.com/flutter-form-builder-ecosystem/tiers/sponsor.svg?avatarHeight=56)](https://opencollective.com/flutter-form-builder-ecosystem)\n\n## Roadmap\n\n- [Solve open issues](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/issues), [prioritizing bugs](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/labels/bug)\n\n## Ecosystem\n\nTake a look to [our awesome ecosystem](https://github.com/flutter-form-builder-ecosystem) and all packages in there\n\n## Thanks to\n\n[All contributors](https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/graphs/contributors)\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.04296875,
          "content": "include: package:flutter_lints/flutter.yaml\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.lock",
          "type": "blob",
          "size": 5.900390625,
          "content": "# Generated by pub\n# See https://dart.dev/tools/pub/glossary#lockfile\npackages:\n  async:\n    dependency: transitive\n    description:\n      name: async\n      sha256: \"947bfcf187f74dbc5e146c9eb9c0f10c9f8b30743e341481c1e2ed3ecc18c20c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.11.0\"\n  boolean_selector:\n    dependency: transitive\n    description:\n      name: boolean_selector\n      sha256: \"6cfb5af12253eaf2b368f07bacc5a80d1301a071c73360d746b7f2e32d762c66\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.1\"\n  characters:\n    dependency: transitive\n    description:\n      name: characters\n      sha256: \"04a925763edad70e8443c99234dc3328f442e811f1d8fd1a72f1c8ad0f69a605\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.0\"\n  clock:\n    dependency: transitive\n    description:\n      name: clock\n      sha256: cb6d7f03e1de671e34607e909a7213e31d7752be4fb66a86d29fe1eb14bfb5cf\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.1\"\n  collection:\n    dependency: transitive\n    description:\n      name: collection\n      sha256: a1ace0a119f20aabc852d165077c036cd864315bd99b7eaa10a60100341941bf\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.19.0\"\n  fake_async:\n    dependency: transitive\n    description:\n      name: fake_async\n      sha256: \"511392330127add0b769b75a987850d136345d9227c6b94c96a04cf4a391bf78\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.1\"\n  flutter:\n    dependency: \"direct main\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_lints:\n    dependency: \"direct dev\"\n    description:\n      name: flutter_lints\n      sha256: \"5398f14efa795ffb7a33e9b6a08798b26a180edac4ad7db3f231e40f82ce11e1\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"5.0.0\"\n  flutter_test:\n    dependency: \"direct dev\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  intl:\n    dependency: \"direct main\"\n    description:\n      name: intl\n      sha256: d6f56758b7d3014a48af9701c085700aac781a92a87a62b1333b46d8879661cf\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.19.0\"\n  leak_tracker:\n    dependency: transitive\n    description:\n      name: leak_tracker\n      sha256: \"7bb2830ebd849694d1ec25bf1f44582d6ac531a57a365a803a6034ff751d2d06\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"10.0.7\"\n  leak_tracker_flutter_testing:\n    dependency: transitive\n    description:\n      name: leak_tracker_flutter_testing\n      sha256: \"9491a714cca3667b60b5c420da8217e6de0d1ba7a5ec322fab01758f6998f379\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.8\"\n  leak_tracker_testing:\n    dependency: transitive\n    description:\n      name: leak_tracker_testing\n      sha256: \"6ba465d5d76e67ddf503e1161d1f4a6bc42306f9d66ca1e8f079a47290fb06d3\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.1\"\n  lints:\n    dependency: transitive\n    description:\n      name: lints\n      sha256: \"3315600f3fb3b135be672bf4a178c55f274bebe368325ae18462c89ac1e3b413\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"5.0.0\"\n  matcher:\n    dependency: transitive\n    description:\n      name: matcher\n      sha256: d2323aa2060500f906aa31a895b4030b6da3ebdcc5619d14ce1aada65cd161cb\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.12.16+1\"\n  material_color_utilities:\n    dependency: transitive\n    description:\n      name: material_color_utilities\n      sha256: f7142bb1154231d7ea5f96bc7bde4bda2a0945d2806bb11670e30b850d56bdec\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.11.1\"\n  meta:\n    dependency: transitive\n    description:\n      name: meta\n      sha256: bdb68674043280c3428e9ec998512fb681678676b3c54e773629ffe74419f8c7\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.15.0\"\n  path:\n    dependency: transitive\n    description:\n      name: path\n      sha256: \"087ce49c3f0dc39180befefc60fdb4acd8f8620e5682fe2476afd0b3688bb4af\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.9.0\"\n  sky_engine:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  source_span:\n    dependency: transitive\n    description:\n      name: source_span\n      sha256: \"53e943d4206a5e30df338fd4c6e7a077e02254531b138a15aec3bd143c1a8b3c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.10.0\"\n  stack_trace:\n    dependency: transitive\n    description:\n      name: stack_trace\n      sha256: \"9f47fd3630d76be3ab26f0ee06d213679aa425996925ff3feffdec504931c377\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.12.0\"\n  stream_channel:\n    dependency: transitive\n    description:\n      name: stream_channel\n      sha256: ba2aa5d8cc609d96bbb2899c28934f9e1af5cddbd60a827822ea467161eb54e7\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.2\"\n  string_scanner:\n    dependency: transitive\n    description:\n      name: string_scanner\n      sha256: \"688af5ed3402a4bde5b3a6c15fd768dbf2621a614950b17f04626c431ab3c4c3\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.0\"\n  term_glyph:\n    dependency: transitive\n    description:\n      name: term_glyph\n      sha256: a29248a84fbb7c79282b40b8c72a1209db169a2e0542bce341da992fe1bc7e84\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.2.1\"\n  test_api:\n    dependency: transitive\n    description:\n      name: test_api\n      sha256: \"664d3a9a64782fcdeb83ce9c6b39e78fd2971d4e37827b9b06c3aa1edc5e760c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.7.3\"\n  vector_math:\n    dependency: transitive\n    description:\n      name: vector_math\n      sha256: \"80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.4\"\n  vm_service:\n    dependency: transitive\n    description:\n      name: vm_service\n      sha256: f6be3ed8bd01289b34d679c2b62226f63c0e69f9fd2e50a6b3c1c729a961041b\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"14.3.0\"\nsdks:\n  dart: \">=3.6.0 <4.0.0\"\n  flutter: \">=3.27.0\"\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.953125,
          "content": "name: flutter_form_builder\ndescription: This package helps in creation of forms in Flutter by removing the boilerplate code, reusing validation, react to changes, and collect final user input.\nversion: 10.0.0-dev.1\nrepository: https://github.com/flutter-form-builder-ecosystem/flutter_form_builder\nissue_tracker: https://github.com/flutter-form-builder-ecosystem/flutter_form_builder/issues\nhomepage: https://github.com/flutter-form-builder-ecosystem\ntopics:\n  - form\n  - forms\nfunding:\n  - https://opencollective.com/flutter-form-builder-ecosystem\n\nenvironment:\n  sdk: \">=3.6.0 <4.0.0\"\n  flutter: \">=3.27.0\"\n\ndependencies:\n  flutter:\n    sdk: flutter\n  # This version would be max, the same version used on flutter_localizations\n  # https://github.com/flutter/flutter/blob/17025dd88227cd9532c33fa78f5250d548d87e9a/packages/flutter_localizations/pubspec.yaml#L14\n  intl: \">=0.19.0 <0.20.0\"\n\ndev_dependencies:\n  flutter_lints: \">=5.0.0 <6.0.0\"\n  flutter_test:\n    sdk: flutter\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}