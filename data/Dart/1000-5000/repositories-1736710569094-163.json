{
  "metadata": {
    "timestamp": 1736710569094,
    "page": 163,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "serenader2014/flutter_carousel_slider",
      "stars": 1613,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.7978515625,
          "content": "# Miscellaneous\n*.class\n*.lock\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Visual Studio Code related\n.vscode/\n\n# Flutter repo-specific\n/bin/cache/\n/bin/mingit/\n/dev/benchmarks/mega_gallery/\n/dev/bots/.recipe_deps\n/dev/bots/android_tools/\n/dev/docs/doc/\n/dev/docs/flutter.docs.zip\n/dev/docs/lib/\n/dev/docs/pubspec.yaml\n/dev/integration_tests/**/xcuserdata\n/dev/integration_tests/**/Pods\n/packages/flutter/coverage/\nversion\n\n# packages file containing multi-root paths\n.packages.generated\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.packages\n.pub-cache/\n.pub/\nbuild/\nlinked_*.ds\nunlinked.ds\nunlinked_spec.ds\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n**/android/key.properties\n*.jks\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Coverage\ncoverage/\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.27734375,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: b397406561f5e7a9c94e28f58d9e49fca0dd58b7\n  channel: beta\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.0224609375,
          "content": "# 5.0.0\n\n- [FIX] Rename CarouselController to CarouselSliderController\n\n# 4.2.1\n\n- [FIX] temporary remove `PointerDeviceKind.trackpad`\n- [FIX] fix `'double?'` type\n\n# 4.2.0\n\n- [Add] `enlargeFactor` option\n- [Add] `CenterPageEnlargeStrategy.zoom` option\n- [Add] `animateToClosest` option\n\n- [FIX] clear timer if widget was unmounted\n- [FIX] scroll carousel using touchpad\n\n# 4.1.1\n\n- Fix code formatting\n\n# 4.1.0\n\n## Add\n\n- Exposed `clipBehavior` in `CarouselOptions`\n- Exposed `padEnds` in `CarouselOptions`\n- Add `copyWith` method to `CarouselOptions`\n\n## Fix\n\n- [FIX] Can't swipe on web with Flutter 2.5\n\n\n# 4.0.0\n\n- Support null safety (Null safety isn't a breaking change and is Backward compatible meaning you can use it with non-null safe code too)\n- Update example code to null safety and add Dark theme support and controller support to indicators in on of the examples and also fix overflow errors. \n\n# 3.0.0\n\n## Add\n\n- Add third argument in `itemBuilder`, allow Hero and infinite scroll to coexist\n\n## Breaking change\n\n- `itemBuilder` needs to accept three arguments, instead of two.\n\n# 2.3.4\n\n## Fix\n\n- Rollback PR #222, due to it will break the existing project.\n\n# 2.3.3\n\n- Fix code formatting\n\n# 2.3.2\n\n## Fix\n\n- Double pointer down and up will cause a exception\n- Fix `CarouselPageChangedReason`\n\n## Add\n\n- Allow Hero and infinite scroll to coexist\n\n# 2.3.1\n\n- Fix code formatting\n\n# 2.3.0\n\n## Fix\n\n- Fixed unresponsiveness to state changes\n\n## Add\n\n- Added start/stop autoplay functionality\n- Pause auto play if not current route\n- Add `pageSnapping` option for disable page snapping for the carousel\n\n# 2.2.1\n\n## Fix\n\n- Fixed `carousel_options.dart` and `carousel_controller` not being exported by default.\n\n# 2.2.0\n\n## Add\n\n- `disableCenter` option\n\nThis option controls whether the carousel slider item should be wrapped in a `Center` widget or not.\n\n- `enlargeStrategy` option\n\nThis option allow user to set which enlarge strategy to enlarge the center slide. Use `CenterPageEnlargeStrategy.height` if you want to improve the performance.\n\n## Fix\n\n- Fixed `CarousePageChangedReason.manual` never being emitted\n\n# 2.1.0\n\n## Add\n\n- `pauseAutoPlayOnTouch` option\n\nThis option controls whether the carousel slider should pause the auto play function when user is touching the slider\n\n- `pauseAutoPlayOnManualNavigate` option\n\nThis option controls whether the carousel slider should pause the auto play function when user is calling controller's method.\n\n- `pauseAutoPlayInFiniteScroll` option\n\nThis option decide the carousel should go to the first item when it reach the last item or not.\n\n- `pageViewKey` option\n\nThis option is useful when you want to keep the pageview's position when it was recreated.\n\n## Fix\n\n- Fix `CarouselPageChangedReason` bug\n\n## Other updates\n\n- Use `Transform.scale` instead of `SizedBox` to wrap the slider item\n\n# 2.0.0\n\n## Breaking change\n\nInstead of passing all the options to the `CarouselSlider`, now you'll need to pass these option to `CarouselOptions`:\n\n```dart\nCarouselSlider(\n  CarouselOptions(height: 400.0),\n  items: [1,2,3,4,5].map((i) {\n    return Builder(\n      builder: (BuildContext context) {\n        return Container(\n          width: MediaQuery.of(context).size.width,\n          margin: EdgeInsets.symmetric(horizontal: 5.0),\n          decoration: BoxDecoration(\n            color: Colors.amber\n          ),\n          child: Text('text $i', style: TextStyle(fontSize: 16.0),)\n        );\n      },\n    );\n  }).toList(),\n)\n```\n\n## Add\n\n- `CarouselController`\n\nSince `v2.0.0`, `carousel_slider` plugin provides a way to pass your own `CaourselController`, and you can use `CaouselController` instance to manually control the carousel's position. For a more detailed example please refer to [example project](example/lib/main.dart).\n\n- `CarouselPageChangedReason`\n\nNow you can receive a `CarouselPageChangedReason` in `onPageChanged` callback.\n\n## Remove\n\n- `pauseAutoPlayOnTouch`\n\n`pauseAutoPlayOnTouch` option is removed, because it doesn't fix the problem we have. Currently, when we enable the `autoPlay` feature, we can not stop sliding when the user interact with the carousel. This is [a flutter's issue](https://github.com/flutter/flutter/issues/54875).\n\n# 1.4.1\n\n## Fix\n\n- Fix `animateTo()/jumpTo()` with non-zero initialPage\n\n# 1.4.0\n\n## Add\n\n- Add on-demand item feature\n\n## Fix\n\n- Fix `setState() called after dispose()` bug\n\n# 1.3.1\n\n## Add\n\n- Scroll physics option\n\n## Fix\n\n- onPage indexing bug\n\n\n# 1.3.0\n\n## Deprecation\n\n- Remove the deprecated param: `interval`, `autoPlayDuration`, `distortion`, `updateCallback`. Please use the new param.\n\n## Fix\n\n-  Fix `enlargeCenterPage` option is not working in `vertical` carousel slider.\n\n# 1.2.0\n\n## Add\n\n- Vertical scroll support\n- Enable/disable infinite scroll\n\n# 1.1.0\n\n## Add\n\n- Added `pauseAutoPlayOnTouch` option\n- Add documentation\n\n# 1.0.1\n\n## Add\n\n- Update doc\n\n# 1.0.0\n\n## Add\n\n- Added `distortion` option\n\n\n# 0.0.6\n\n## Fix\n\n- Fix hard coded number\n\n# 0.0.5\n\n## Fix\n\n- Fix `initialPage` bug, fix crash when widget is disposed.\n\n\n# v0.0.2\n\nRemove useless dependencies, add changelog.\n\n# v0.0.1\n\nInitial version.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2017 serenader\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.50390625,
          "content": "# carousel_slider\n\nA carousel slider widget.\n\n## Features \n\n* Infinite scroll \n* Custom child widgets\n* Auto play\n\n## Supported platforms\n\n* Flutter Android\n* Flutter iOS\n* Flutter web\n* Flutter desktop\n\n## Live preview\n\nhttps://serenader2014.github.io/flutter_carousel_slider/#/\n\nNote: this page is built with flutter-web. For a better user experience, please use a mobile device to open this link.\n\n## Installation\n\nAdd `carousel_slider: ^5.0.0` to your `pubspec.yaml` dependencies. And import it:\n\n```dart\nimport 'package:carousel_slider/carousel_slider.dart';\n```\n\n## How to use\n\nSimply create a `CarouselSlider` widget, and pass the required params:\n\n```dart\nCarouselSlider(\n  options: CarouselOptions(height: 400.0),\n  items: [1,2,3,4,5].map((i) {\n    return Builder(\n      builder: (BuildContext context) {\n        return Container(\n          width: MediaQuery.of(context).size.width,\n          margin: EdgeInsets.symmetric(horizontal: 5.0),\n          decoration: BoxDecoration(\n            color: Colors.amber\n          ),\n          child: Text('text $i', style: TextStyle(fontSize: 16.0),)\n        );\n      },\n    );\n  }).toList(),\n)\n```\n\n## Params\n\n```dart\n\nCarouselSlider(\n   items: items,\n   options: CarouselOptions(\n      height: 400,\n      aspectRatio: 16/9,\n      viewportFraction: 0.8,\n      initialPage: 0,\n      enableInfiniteScroll: true,\n      reverse: false,\n      autoPlay: true,\n      autoPlayInterval: Duration(seconds: 3),\n      autoPlayAnimationDuration: Duration(milliseconds: 800),\n      autoPlayCurve: Curves.fastOutSlowIn,\n      enlargeCenterPage: true,\n      enlargeFactor: 0.3,\n      onPageChanged: callbackFunction,\n      scrollDirection: Axis.horizontal,\n   )\n )\n```\n\nSince `v2.0.0`, you'll need to pass the options to `CarouselOptions`. For each option's usage you can refer to [carousel_options.dart](./lib/carousel_options.dart).\n\n**If you pass the `height` parameter, the `aspectRatio` parameter will be ignored.**\n\n## Build item widgets on demand\n\nThis method will save memory by building items once it becomes necessary. This way they won't be built if they're not currently meant to be visible on screen.\nIt can be used to build different child item widgets related to content or by item index.\n\n```dart\n\nCarouselSlider.builder(\n  itemCount: 15,\n  itemBuilder: (BuildContext context, int itemIndex, int pageViewIndex) =>\n    Container(\n      child: Text(itemIndex.toString()),\n    ),\n)\n```\n\n## Carousel controller\n\nIn order to manually control the pageview's position, you can create your own `CarouselSliderController`, and pass it to `CarouselSlider`. Then you can use the `CarouselSliderController` instance to manipulate the position.\n\n```dart \nclass CarouselDemo extends StatelessWidget {\n  CarouselSliderController buttonCarouselController = CarouselSliderController();\n\n @override\n  Widget build(BuildContext context) => Column(\n    children: <Widget>[\n      CarouselSlider(\n        items: child,\n        carouselController: buttonCarouselController,\n        options: CarouselOptions(\n          autoPlay: false,\n          enlargeCenterPage: true,\n          viewportFraction: 0.9,\n          aspectRatio: 2.0,\n          initialPage: 2,\n        ),\n      ),\n      RaisedButton(\n        onPressed: () => buttonCarouselController.nextPage(\n            duration: Duration(milliseconds: 300), curve: Curves.linear),\n        child: Text('→'),\n      )\n    ]\n  );\n}\n```\n\n### `CarouselSliderController` methods\n\n#### `.nextPage({Duration duration, Curve curve})`\n\nAnimate to the next page\n\n#### `.previousPage({Duration duration, Curve curve})`\n\nAnimate to the previous page\n\n#### `.jumpToPage(int page)`\n\nJump to the given page.\n\n#### `.animateToPage(int page, {Duration duration, Curve curve})`\n\nAnimate to the given page.\n\n## Screenshot\n\nBasic text carousel demo:\n\n![simple](screenshot/basic.gif)\n\nBasic image carousel demo:\n\n![image](screenshot/image.gif)\n\nA more complicated image carousel slider demo:\n\n![complicated image](screenshot/complicated-image.gif)\n\nFullscreen image carousel slider demo:\n\n![fullscreen](screenshot/fullscreen.gif)\n\nImage carousel slider with custom indicator demo:\n\n![indicator](screenshot/indicator.gif)\n\nCustom `CarouselSliderController` and manually control the pageview position demo:\n\n![manual](screenshot/manually.gif)\n\nVertical carousel slider demo:\n\n![vertical](screenshot/vertical.gif)\n\nSimple on-demand image carousel slider, with image auto prefetch demo:\n\n![prefetch](screenshot/preload.gif)\n\nNo infinite scroll demo:\n\n![noloop](screenshot/noloop.gif)\n\nAll screenshots above can be found at the example project.\n\n## License\n\nMIT\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.3857421875,
          "content": "name: carousel_slider\ndescription: A carousel slider widget, support infinite scroll and custom child widget.\nhomepage: https://github.com/serenader2014/flutter_carousel_slider\nrepository: https://github.com/serenader2014/flutter_carousel_slider\nversion: 5.0.0\n\nenvironment:\n  sdk: '>=2.12.0 <3.0.0'\n\ndependencies:\n  flutter:\n    sdk: flutter\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n"
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}