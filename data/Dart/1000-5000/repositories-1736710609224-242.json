{
  "metadata": {
    "timestamp": 1736710609224,
    "page": 242,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "brendan-duncan/image",
      "stars": 1185,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.068359375,
          "content": ".dart_tool/\r\n.idea/\r\nout/\r\npubspec.lock\r\n.packages\r\n.DS_Store\r\n_out/\r\n"
        },
        {
          "name": ".pubignore",
          "type": "blob",
          "size": 0.0126953125,
          "content": "doc/\r\ntest/\r\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 13.9375,
          "content": "## 4.5.3 - December 20, 2024 \r\n\r\n- Improve fillPolygon to better handle concave polygons.\r\n\r\n## 4.5.2 - December 19, 2024\r\n\r\n- Reduce Min SDK version to 3.0.\r\n\r\n## 4.5.1 - December 18, 2024\r\n\r\n- Make image library compatible with archive 3.x\r\n\r\n## 4.5.0 - December 14, 2024\r\n\r\n- Fix gif animation decoder\r\n- Add ConstColorRgba8, ConstColorRgb8 for const color creation.\r\n\r\n## 4.4.0 - December 12, 2024\r\n\r\n- Upgrade to Archive 4.0 dependency\r\n\r\n## 4.3.0 - October 15, 2024\r\n\r\n- Fix exceptions loading some PSD files.\r\n- Fix trim for palette images.\r\n- Fix ICC decompression.\r\n- Add physical size handling to PNG.\r\n- Fix TIFF out of bounds error.\r\n\r\n## 4.2.0 - May 22, 2024\r\n\r\n- Fix decoding EXIF data from WebP.\r\n- Add ContrastMode.scurve to contrast filter.\r\n- Filter functions will auto-convert palette images\r\n- Add BinaryQuantizer.\r\n- Fix ditherImage not returning dithered image.\r\n- Fix APNG decoding.\r\n- drawString should use alpha color.\r\n- Improve performance of animated GIF decoding.\r\n- Fix TIFF tile decoding\r\n- Add solarize filter function\r\n- Fix decoding TIFF with ZLIB decoding\r\n- Add PNM format decoder.\r\n- Add support for uint16 palettes.\r\n\r\n## 4.1.7 - February 10, 2024\r\n\r\n- JPEG images will finish decoding even if the file is incomplete or has errors.\r\n- Fix performance bug with Image.getBytes\r\n\r\n## 4.1.6 - January 31, 2024\r\n\r\n- Incomplete or JPEGs with errors will now finish loading. \r\n\r\n## 4.1.5 - January 31, 2024\r\n\r\n- Optimize copying bytes in Image.fromBytes\r\n- 2 channel images are treated as Luminance-Alpha\r\n\r\n## 4.1.4 - January 12, 2024\r\n\r\n- Fix Image.getBytes when ChannelOrder has a different number of channels than the image.\r\n- copyResize command accepts maintainAspect and backgroundColor args.\r\n- Fix EXIF decoder when image has bad IFD offsets.\r\n- Improve drawString handling of new line characters when wrap is true.\r\n- Improve GIF animation decoding when each frame has its own palette. \r\n\r\n## 4.1.3 - September 25, 2023\r\n\r\n- Fix crash in copyResize for non-nearest interpolation modes.\r\n\r\n## 4.1.2\r\n\r\n- No changes, removing unnecessary files in 4.1.1.\r\n\r\n## 4.1.1\r\n\r\n- Add maintainAspect and backgroundColor to copyResize to resize width and \r\nheight of an image, without stretching the source (using background color to pad).\r\n- drawString will word-wrap even when x or y is set.\r\n- Don't clamp brightness in adjustColor.\r\n\r\n## 4.1.0\r\n\r\n- Update pub dependencies.\r\n\r\n## 4.0.18 -\r\n\r\n- Fix reading 64-bit double EXIF values.\r\n\r\n## 4.0.17 - May 06, 2023\r\n\r\n- Fix resizing multi-frame palette images.\r\n- Fix transparency issue with encodeGif.  \r\n\r\n## 4.0.16 - April 27, 2023\r\n\r\n- Fix GIF decoder not decoding some animation files transparency and frame duration.\r\n- Fix default rowStride for Image.fromBytes.\r\n\r\n## 4.0.15 - February 11, 2023\r\n\r\n- Fix JPEG encoder for non uint8 format images.\r\n\r\n## 4.0.14 - February 11, 2023\r\n\r\n- Use Image.backgroundColor for copyRotate, copyCropCircle, and other functions that reveal background pixels. \r\n\r\n## 4.0.13 - January 30, 2023\r\n\r\n- Fix transform functions for palette images.\r\n\r\n## 4.0.12 - January 23, 2023\r\n\r\n- Fix EXIF parsing little endian data\r\n- Fix bounds errors with filter functions and palette images.\r\n- Fix BMP encoding palette rgba images by converting them to 32-bit rgba.\r\n\r\n## 4.0.11 - January 22, 2023\r\n\r\n- Add decodeJpgExif and injectJpgExif functions to process JPG exif data without needing to decode the image.\r\n- Fix EXIF parse exception from empty strings.\r\n- Fix EXIF string data not writing out null character.\r\n\r\n## 4.0.10 - January 1, 2023\r\n\r\n- Fix last-minute typo from previous release.\r\n\r\n## 4.0.9 - January 1, 2023\r\n\r\n- Fix offset error with BMP encoder for images with < 8 bits per pixel\r\n- Improve quality of converting 3-channel image to 1-channel.\r\n\r\n## 4.0.8 - January 08, 2023\r\n\r\n- Fix ChannelOrder.bgra.\r\n- Add Image.hasAlpha getter property that will be true if the Image has an alpha channel. \r\n\r\n## 4.0.7 - January 05, 2023\r\n\r\n- Fix Image.getRangeIterator skipping last line.\r\n\r\n## 4.0.6 - January 04, 2023\r\n\r\n- `Image.remapChannels(ChannelOrder order)` to remap the order of channels from rgb to bgr, etc.\r\n- `Image.getBytes({ChannelOrder? order})` will return the image data, optionally reordering the channels.\r\n- Image.fromBytes can take an optional `ChannelOrder? order` named arg to specify the channel order of the input data. \r\n\r\n## 4.0.5 - January 01, 2023\r\n\r\n- Improved antialiasing for drawLine\r\n- Add antialias arg for drawCircle, fillCircle.\r\n- Added radius argument to drawRect, fillRect, copyCrop, and copyResizeCropSquare to support rounded rectangles.\r\n- Add Image.getPixelClamped method.\r\n- Added TGA decoder 8-bit, 16-bit, 32-bit, and RLE compression modes.\r\n\r\n## 4.0.4 - December 31, 2022\r\n\r\n- Fix for animated PNG with palette images, which needed a global palette for all frames.\r\n- Fix TIFF encoder for palette images.\r\n- Cleaned up EXIF classes.\r\n\r\n## 4.0.3 - December 30, 2022\r\n\r\n- Fix for encoding GIF transparency.\r\n\r\n## 4.0.2 - December 30, 2022\r\n\r\n- No changes, dart formatted code and fix documentation link.\r\n\r\n## 4.0.1 - December 30, 2022\r\n\r\n- Use strict analyzer settings, clean up warnings.\r\n\r\n## 4.0.0 - December 30, 2022\r\n\r\n- Major update of the Dart Image Library. Includes support for:\r\n  - Major overhaul of the API. Dart has changed a lot in the 10 years since this library was written,\r\n    so the API has been modernized. \r\n  - Flexible ImageData, with support for 1, 2, 4, 8, 16, and 32 bit images, and 1-4 channels per pixel.\r\n  - 16, 32, and 64-bit floating-point format images.\r\n  - 8, 16, and 32-bit integer format images.\r\n  - Palette images with 1, 2, 4, and 8-bit colors.\r\n  - Improved pixel access API.\r\n  - Merged HDR and Animation functionality into the single Image class.\r\n  - New Command API with support for executing on Isolate threads.\r\n  - New filters and drawing commands.\r\n\r\n## 3.3.0 - December 29, 2022\r\n\r\n- Improved EXIF data management\r\n- Fix character code issue with BitmapFont.\r\n- This is the last 3.x update before the big 4.0 release.\r\n\r\n## 3.2.2 - October 15, 2022\r\n\r\n- Fix transparency issue with animated GIF images.\r\n\r\n## 3.2.1 - October 15, 2022\r\n\r\n- Fixes for APNG: fix exception from some APNG files, and some frames were not composited correctly.\r\n\r\n## 3.2.0 - May 18, 2022\r\n\r\n- Update SDK dependency to >2.15.0 and XML package dependency to >6.0.0\r\n\r\n## 3.1.3 - February 17, 2022\r\n\r\n- Optimize Image.getWhiteBalance function, add asDouble argument to return double value.\r\n\r\n## 3.1.2 - February 17, 2022\r\n\r\n- Add BmpEncoder to encode BMP images, along with encodeBmp function. Currently, only 24-bit or 32-bit BMP images will be encoded.\r\n\r\n## 3.1.1 - January 12, 2022\r\n\r\n- Fix error loading some tiff images\r\n- Fix jpeg comments to support non-strict utf8 text\r\n\r\n## 3.1.0 - November 30, 2021\r\n\r\n- Update archive version requirement\r\n- Fix JPGDecoder to return correct nullable types.\r\n\r\n## 3.0.8 - October 02, 2021\r\n\r\n- Fix WebP lossless decoder.\r\n\r\n## 3.0.7 - September 29, 2021\r\n\r\n- Change LICENSE to MIT.\r\n\r\n## 3.0.6 - September 29, 2021\r\n\r\n- Clean up LICENSE file, moving other license references to LICENSE-other.\r\n\r\n## 3.0.5\r\n\r\n- Fix copyResize for landscape oriented images.\r\n\r\n## 3.0.4\r\n\r\n- Fix Dart warnings from the previous release.\r\n\r\n## 3.0.3\r\n\r\n- Fix #320 - copyResize incorrectly applies linear and cubic.\r\n- Apply EXIF orientation when decoding JPEG images.\r\n\r\n## 3.0.2\r\n\r\n- Dithering support for GIF encoder.\r\n- Fix PNGEncoder issue if addFrame is called directly instead than encodeImage or encodeAnimation.\r\n- Optimization for drawImage.\r\n\r\n## 3.0.1\r\n\r\n- Improve NeuralQuantizer to fix issue encoding small GIF images.\r\n- Code cleanup resolving lint issues.\r\n\r\n## 3.0.0\r\n\r\n- Migrate to null safety.\r\n\r\n## 2.1.19 - November 11, 2020\r\n\r\n- Refactor HdrImage to better support more diverse formats, used for Hdr Tiff decoding.\r\n- TiffDecoder will maintain Tag data after decoding, allowing them to be read to process image metadata.\r\n- Added TiffEncoder. Still needs work to be able to add tag data to an encoded image.\r\n- Clean up print statements from BmpDecoder.\r\n\r\n## 2.1.18 - September 25, 2020\r\n\r\n- Added 64-bit float format to TIFF decoder.\r\n- Fixed issues with TiffDecoder.decodeHdrImage.\r\n- Added range clamping to copyCrop to avoid out-of-bound errors.\r\n- Variable FPS for animated GIF encoding.\r\n\r\n## 2.1.17 - September 20, 2020\r\n\r\n- Added 32-bit float and 16-bit half-float formats to the TIFF decoder.\r\n\r\n## 2.1.16 - September 19, 2020\r\n\r\n- Downgrade Meta dependency to be compatible with flutter_test in the stable channel.\r\n\r\n## 2.1.15 - September 13, 2020\r\n\r\n- Fix Image.getBytes for cropping images\r\n- Fix bakeOrientation EXIF data\r\n- Added ICO format decoder\r\n- Fix JpegData.validate for unintended exceptions with non jpeg images\r\n\r\n## 2.1.14 - June 14, 2020\r\n\r\n- Update xml dependency to 4.2.0\r\n\r\n## 2.1.13 - May 21, 2020\r\n\r\n- Improvements for JPEG EXIF decoding\r\n- Fix for the GIF animation decoder\r\n- APNG encoder time delay correctly to milliseconds\r\n\r\n## 2.1.12 - January 14, 2020\r\n\r\n- drawChar now uses color parameter.\r\n- Fix index out of range bug in drawImage.\r\n- Fix transparency with animated WebP images.\r\n\r\n\r\n## 2.1.11 - December 30, 2019\r\n\r\n- Fix GIF animation loopCount encoding. Some viewers were not seeing the repeat count correctly.\r\n- Resolve analysis warnings.\r\n\r\n## 2.1.10 - December 04, 2019\r\n\r\n- Applied Pub's Health suggestions.\r\n- Optimize use of slow typed_data methods.\r\n- Add drawStringCentered function\r\n- Add fillCircle function\r\n- Fix drawLine thickness for axis-aligned lines\r\n\r\n## 2.1.9 - November 15, 2019\r\n\r\n- JpegDecoder optimizations. Decoding an 8k jpeg went from 2048ms to 1340ms.\r\n\r\n## 2.1.8 - November 05, 2019\r\n\r\n- Fix issue with XML parsing for font files not reading some files\r\n- Fix bug with trim function for non-transparent trim mode\r\n\r\n## 2.1.7 - October 30, 2019\r\n\r\n- Add ICO and CUR encoder.\r\n- Fix BMP decoder for top-down BMP image files.\r\n\r\n## 2.1.6 - October 29, 2019\r\n\r\n- Add BMP decoder, currently only supporting 24-bit and 32-bit non compressed BMP images. (Thanks Ryan Kauk)\r\n\r\n## 2.1.5\r\n\r\n- Updated some tests to use `test`-syntax.\r\n- Fixed null value in `GifEncoder`.\r\n- Added Dart syntax highlighting in the readme file.\r\n- Formatted package using `dartfmt`.\r\n- Fixed \"Unnecessary new\" and other Dart analyzer warnings.\r\n- Added the `samplingFactor` parameter to GIF encoding, which allows to significantly speed up\r\n  encoding times of GIF encoding.\r\n\r\n## 2.1.4 - June 01, 2019\r\n\r\n- Optimize fillRect, drawPixel, and other drawing functions when opaque colors are used.\r\n\r\n## 2.1.3 - May 26, 2019\r\n\r\n- Revert the internal color format to #AABBGGRR.\r\n\r\n## 2.1.2 - May 25, 2019\r\n\r\n- Fix crash decoding some Jpeg images.\r\n- Fix infinite recursion crash with fillFlood when fill color is the same as the start pixel color.\r\n\r\n## 2.1.1 - May 22, 2019\r\n\r\n- Fix typo and missing license in license file.\r\n\r\n## 2.1.0 - May 15, 2019\r\n\r\n- Big API clean-up to bring it up to a more modern Dart syntax.\r\n\r\n## 2.0.9 - May 10, 2019\r\n\r\n- Use strict dartanalysys settings and clean up code.\r\n\r\n## 2.0.8 - May 8, 2019\r\n\r\n- Add ability to quantize an image to any number of colors.\r\n- Optimizations for the JPEG decoder.\r\n- Use #AARRGGBB for colors instead of #AABBGGRR, to be compatible with Flutter image class.\r\n- Add floodfill drawing function.\r\n- CopyRectify to transform an arbitrary quad to the full image.\r\n- Improve performance of CopyResize.\r\n\r\n## 2.0.7 - February 5, 2019\r\n\r\n- Improve JPEG decoding performance.\r\n- Decode and encode ICC profile data from PNG images.\r\n\r\n## 2.0.6 - January 26, 2019\r\n\r\n- bakeOrientation will clear the image's exif orientation properties.\r\n- copyResize will correctly maintain the image's orientation.\r\n\r\n## 2.0.5 - December 1, 2018\r\n\r\n- Added APNG (animated PNG) encoding.\r\n- Optimized drawString function.\r\n\r\n## 2.0.3 - June 6, 2018\r\n\r\n- copyResize can maintain aspect ratio when resizing height by using -1 for the width.\r\n- Added example for loading and processing images in an isolate.\r\n\r\n## 2.0.2 - June 1, 2018\r\n\r\n- Re-added decoding of orientation exif value from jpeg images.\r\n- Added bake_orientation function, which will rotate an image so that it physically matches its orientation exif value,\r\nuseful for rotating an image prior to exporting it to a format that does not support exif data.\r\n\r\n## 2.0.1 - May 28, 2018\r\n\r\nFix for bad jpeg files when encoding EXIF data.\r\n\r\n## 2.0.0 - May 22, 2018\r\n\r\nRemove the use of Dart 1 upper-case constants.\r\nUpdate SDK dependency to a 2.0 development release.\r\n\r\n## 1.1.33 - May 16, 2018\r\n\r\n  Maintain EXIF data from JPEG images.\r\n\r\n## 1.1.32 - May 9, 2018\r\n\r\n  Remove the use of `part` and `part of` in the main library.\r\n\r\n## 1.1.30 - March 10, 2018\r\n\r\n  Update pubspec to account for the new version of xml package that has been\r\n  published.\r\n\r\n## 1.1.29 - September 18, 2017\r\n\r\n- Add fixes for strong mode support.\r\n\r\n## 1.1.28 - May 27, 2017\r\n\r\n- Update pubspec to fix recent pub issues.\r\n- Rename changelog.txt to CHANGELOG.md.\r\n- Fix for 8-bit PNG decoding.\r\n\r\n## 1.1.27 - May 14, 2017\r\n\r\n- Fix crash decoding some jpeg images.\r\n\r\n\r\n## 1.1.24 - January 23, 2015\r\n\r\n- PVR encoding/decoding\r\n- Fix 16-bit tiff decoding\r\n\r\n\r\n## 1.1.23 - September 15, 2014\r\n\r\n- Fix alpha for PSD images.\r\n\r\n\r\n## 1.1.22 - July 31, 2014\r\n\r\n- Various bug fixes\r\n\r\n\r\n## 1.1.21 - June 19, 2014\r\n\r\n- Add drawImage function\r\n- Update XML dependency to 2.0.0\r\n\r\n\r\n## 1.1.20 - April 26, 2014\r\n\r\n- Fix OpenEXR decoder for dart2js\r\n\r\n\r\n## 1.1.19 - April 15, 2014\r\n\r\n- OpenEXR fixes.\r\n\r\n\r\n## 1.1.18 - April 06, 2014\r\n\r\n- Added OpenEXR format decoder.\r\n\r\n\r\n## 1.1.17 - April 02, 2014\r\n\r\n- Add Photoshop PSD format decoder\r\n\r\n\r\n## 1.1.16 - March 24, 2014\r\n\r\n- Fix JPEG encoder for compression quality < 100.\r\n\r\n\r\n## 1.1.15 - March 10, 2014\r\n\r\n- Update to new version of archive.\r\n\r\n\r\n## 1.1.14 - February 26, 2014\r\n\r\n- Optimizations\r\n\r\n\r\n## 1.1.13 - February 16, 2014\r\n\r\n- Added TIFF decoder\r\n\r\n\r\n## 1.1.10 - February 11, 2014\r\n\r\n- Added APNG animated PNG decoding support.\r\n- Improved JPEG decoding performance\r\n- Various bug fixes\r\n\r\n\r\n## 1.1.8 - February 01, 2014\r\n\r\n- Added GIF decoding support, including animated gifs.\r\n\r\n\r\n## 1.1.7 - January 28, 2014\r\n\r\n- Added WebP decoding support, included animated WebP.\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.095703125,
          "content": "The MIT License\r\n\r\nCopyright (c) 2013-2022 Brendan Duncan.\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE."
        },
        {
          "name": "LICENSE-other.md",
          "type": "blob",
          "size": 8.2890625,
          "content": "Parts of the Image library were ported from the following sources:\r\n\r\n==============================================================================\r\n\r\nThe JPEG encoder/decoder code is derived from the following:\r\nhttps://github.com/notmasteryet/jpgjs\r\nCopyright (C) 2011 notmasteryet\r\n\r\nContributors: Yury Delendik <ydelendik@mozilla.com>\r\nBrendan Dahl <bdahl@mozilla.com>\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\n==============================================================================\r\n\r\nThe WebP encoder/decoder code is derived from the following:\r\nhttp://git.chromium.org/gitweb/?p=webm/libwebp.git\r\nCopyright (c) 2010, Google Inc. All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are\r\nmet:\r\n\r\n    * Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n\r\n    * Redistributions in binary form must reproduce the above copyright\r\n      notice, this list of conditions and the following disclaimer in\r\n      the documentation and/or other materials provided with the\r\n      distribution.\r\n\r\n    * Neither the name of Google nor the names of its contributors may\r\n      be used to endorse or promote products derived from this software\r\n      without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n  \r\n==============================================================================\r\n\r\nThe TIFF decoder code is derived from the following:\r\nApache Batik\r\nhttp://svn.apache.org/repos/asf/xmlgraphics/batik/trunk\r\nCopyright 1999-2007 The Apache Software Foundation\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\n==============================================================================\r\n\r\nThe OpenEXR decoder is derived in part from the OpenEXR library:\r\n\r\nCopyright (c) 2002-2011, Industrial Light & Magic, a division of\r\nLucasfilm Entertainment Company Ltd. All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n\r\nRedistributions of source code must retain the above copyright notice, this\r\nlist of conditions and the following disclaimer.\r\nRedistributions in binary form must reproduce the above copyright notice, this\r\nlist of conditions and the following disclaimer in the documentation and/or\r\nother materials provided with the distribution.\r\nNeither the name of Industrial Light & Magic nor the names of its contributors\r\nmay be used to endorse or promote products derived from this software without\r\nspecific prior written permission.\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n===============================================================================\r\n\r\nThe PVRTC compression and decompression code is ported from Jeffrey Lim's\r\nPvrTcCompressor:\r\n\r\nhttps://bitbucket.org/jthlim/pvrtccompressor\r\n\r\nCopyright © 2014, Jeffrey Lim. All Rights Reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice,\r\n   this list of conditions and the following disclaimer.\r\n\r\n2. Redistributions in binary form must reproduce the above copyright notice,\r\n   this list of conditions and the following disclaimer in the documentation\r\n   and/or other materials provided with the distribution.\r\n\r\n3. The name of the author may not be used to endorse or promote products\r\n   derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR\r\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\nPOSSIBILITY OF SUCH DAMAGE.\r\n\r\n===============================================================================\r\n\r\nThe pvr container format decoder is derived from the QuickPVR project:\r\nQuickPVR is Copyright (C) 2010 Limbic Software, Inc.\r\nhttp://www.limbicsoftware.com/quickpvr.html\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n* Redistributions of source code must retain the above copyright\r\nnotice, this list of conditions and the following disclaimer.\r\n* Redistributions in binary form must reproduce the above copyright\r\nnotice, this list of conditions and the following disclaimer in the\r\ndocumentation and/or other materials provided with the distribution.\r\n* Neither the name of the Limbic Software, Inc. nor the\r\nnames of its contributors may be used to endorse or promote products\r\nderived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY LIMBIC SOFTWARE, INC. ''AS IS'' AND ANY\r\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL LIMBIC SOFTWARE, INC. BE LIABLE FOR ANY\r\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n  \r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.525390625,
          "content": "# Dart Image Library\n[![Dart CI](https://github.com/brendan-duncan/image/actions/workflows/build.yaml/badge.svg?branch=4.0)](https://github.com/brendan-duncan/image/actions/workflows/build.yaml)\n[![pub package](https://img.shields.io/pub/v/image.svg)](https://pub.dev/packages/image)\n\n## Overview\n\nThe Dart Image Library provides the ability to load, save, and\n[manipulate](https://github.com/brendan-duncan/image/blob/main/doc/filters.md) images\nin a variety of image file [formats](https://github.com/brendan-duncan/image/blob/main/doc/formats.md).\n\nThe library can be used with both dart:io and dart:html, for command-line, Flutter, and\nweb applications.\n\nNOTE: 4.0 is a major revision from the previous version of the library.\n\n## [Documentation](https://github.com/brendan-duncan/image/blob/main/doc/README.md)\n\n### [Supported Image Formats](https://github.com/brendan-duncan/image/blob/main/doc/formats.md)\n\n**Read/Write**\n\n- JPG\n- PNG / Animated APNG\n- GIF / Animated GIF\n- BMP\n- TIFF\n- TGA\n- PVR\n- ICO\n\n**Read Only**\n\n- WebP / Animated WebP\n- PSD\n- EXR\n- PNM (PBM, PGM, PPM)\n\n**Write Only**\n\n- CUR\n\n## Examples\n\nCreate an image, set pixel values, save it to a PNG.\n```dart\nimport 'dart:io';\nimport 'package:image/image.dart' as img;\nvoid main() async {\n  // Create a 256x256 8-bit (default) rgb (default) image.\n  final image = img.Image(width: 256, height: 256);\n  // Iterate over its pixels\n  for (var pixel in image) {\n    // Set the pixels red value to its x position value, creating a gradient.\n    pixel..r = pixel.x\n    // Set the pixels green value to its y position value.\n    ..g = pixel.y;\n  }\n  // Encode the resulting image to the PNG image format.\n  final png = img.encodePng(image);\n  // Write the PNG formatted data to a file.\n  await File('image.png').writeAsBytes(png);\n}\n```\n\nTo asynchronously load an image file, resize it, and save it as a thumbnail: \n```dart\nimport 'package:image/image.dart' as img;\n\nvoid main(List<String> args) async {\n  final path = args.isNotEmpty ? args[0] : 'test.png';\n  final cmd = img.Command()\n    // Decode the image file at the given path\n    ..decodeImageFile(path)\n    // Resize the image to a width of 64 pixels and a height that maintains the aspect ratio of the original. \n    ..copyResize(width: 64)\n    // Write the image to a PNG file (determined by the suffix of the file path). \n    ..writeToFile('thumbnail.png');\n  // On platforms that support Isolates, execute the image commands asynchronously on an isolate thread.\n  // Otherwise, the commands will be executed synchronously.\n  await cmd.executeThread();\n}\n```\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 2.888671875,
          "content": "include: package:lints/core.yaml\nanalyzer:\n  language:\n    strict-casts: true\n    strict-inference: true\n    strict-raw-types: true\n  errors:\n    constant_identifier_names: ignore\n    non_constant_identifier_names: ignore\n    unused_element: error\n    unused_field: error\n    unused_local_variable: error\n  exclude:\n    - test/tests/res/**\n    - test/tests/out/**\n\nlinter:\n  rules:\n    - avoid_dynamic_calls\n    - avoid_print\n    - camel_case_types\n    - avoid_unnecessary_containers\n    - avoid_web_libraries_in_flutter\n    - no_logic_in_create_state\n    - prefer_const_constructors_in_immutables\n    - prefer_const_literals_to_create_immutables\n    - sized_box_for_whitespace\n    - sort_child_properties_last\n    - use_build_context_synchronously\n    - use_full_hex_values_for_flutter_colors\n    - use_key_in_widget_constructors\n    - avoid_bool_literals_in_conditional_expressions\n    - avoid_catching_errors\n    - avoid_classes_with_only_static_members\n    - avoid_function_literals_in_foreach_calls\n    - avoid_private_typedef_functions\n    - avoid_redundant_argument_values\n    - avoid_renaming_method_parameters\n    - avoid_returning_null_for_void\n    - avoid_returning_this\n    - avoid_single_cascade_in_expression_statements\n    - avoid_unused_constructor_parameters\n    - avoid_void_async\n    - await_only_futures\n    - cancel_subscriptions\n    - cascade_invocations\n    - comment_references\n    - constant_identifier_names\n    - control_flow_in_finally\n    - directives_ordering\n    - empty_statements\n    - file_names\n    - hash_and_equals\n    - implementation_imports\n    - collection_methods_unrelated_type\n    - join_return_with_assignment\n    - lines_longer_than_80_chars\n    - literal_only_boolean_expressions\n    - missing_whitespace_between_adjacent_strings\n    - no_adjacent_strings_in_list\n    - no_runtimeType_toString\n    - non_constant_identifier_names\n    - only_throw_errors\n    - overridden_fields\n    - package_names\n    - package_prefixed_library_names\n    - prefer_asserts_in_initializer_lists\n    - prefer_const_constructors\n    - prefer_const_declarations\n    - prefer_expression_function_bodies\n    - prefer_final_locals\n    - prefer_final_fields\n    - prefer_function_declarations_over_variables\n    - prefer_initializing_formals\n    - prefer_inlined_adds\n    - prefer_interpolation_to_compose_strings\n    - prefer_is_not_operator\n    - prefer_null_aware_operators\n    - prefer_relative_imports\n    - prefer_typing_uninitialized_variables\n    - prefer_void_to_null\n    - provide_deprecation_message\n    - sort_pub_dependencies\n    - test_types_in_equals\n    - throw_in_finally\n    - unnecessary_await_in_return\n    - unnecessary_brace_in_string_interps\n    - unnecessary_getters_setters\n    - unnecessary_lambdas\n    - unnecessary_null_aware_assignments\n    - unnecessary_overrides\n    - unnecessary_parenthesis\n    - unnecessary_statements\n    - unnecessary_string_interpolations\n    - use_string_buffers\n    - void_checks\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.5400390625,
          "content": "name: image\r\nversion: 4.5.2\r\ndescription: >-\r\n  Dart Image Library provides server and web apps the ability to load, manipulate,\r\n  and save images with various image file formats.\r\nhomepage: https://github.com/brendan-duncan/image\r\ndocumentation: https://github.com/brendan-duncan/image/blob/main/doc/README.md\r\n\r\nenvironment:\r\n  sdk: '>=3.0.0 <4.0.0'\r\n\r\ndependencies:\r\n  archive: ^4.0.2\r\n  meta: ^1.3.0\r\n  xml: ^6.0.1\r\n\r\ndev_dependencies:\r\n  build_runner: ^2.1.5\r\n  build_test: ^2.1.4\r\n  http: ^1.1.0\r\n  lints: ^2.0.1\r\n  test: ^1.16.0\r\n  web: ^1.1.0\r\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}