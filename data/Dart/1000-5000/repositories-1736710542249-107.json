{
  "metadata": {
    "timestamp": 1736710542249,
    "page": 107,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Idean/Flutter-Neumorphic",
      "stars": 2061,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.5361328125,
          "content": "# Miscellaneous\n*.class\n*.lock\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\nlib/generated/"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 0b8abb4724aa590dd0f429683339b1e045a1594d\n  channel: stable\n\nproject_type: package\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.0869140625,
          "content": "## 3.2.0\n\n* Remove generated localization class ([#215](https://github.com/Idean/Flutter-Neumorphic/pull/215))\n\n## 3.1.1\n\n* Addresses a conflict with Flutter 2.5.0 ([#239](https://github.com/Idean/Flutter-Neumorphic/issues/239)).\n\n## 3.1.0\n\n* Null safety\n\n## 3.0.4+1\n\n* Fixed build for new dialog api\n\n## 3.0.3\n\n* Fixed issue on button / theme\n* Improved NeumorphicApp\n\n## 3.0.2\n\n* Fixed issue on NeumorphicButton + Theme\n\n## 3.0.1\n\n* Added customization of icons in NeumorphicAppBar\n* Updated NeumorphicAppBar samples\n\n## 3.0.0\n\n* Added `NeumorphicText` (only positive depth)\n* Added `NeumorphicIcon` (work with svg)\n* `NeumorphicBoxShape` is now an element of `NeumorphicStyle`\n* Added NeumorphicApp, NeumorphicAppBar\n* Improved NeumorphicTheme (handles more styles)\n* Neumorphic now include Material\n* Refactored Progress animations\n\n## 2.2.2\n\n* Added NeumorphicButton.tooltip optional parameter\n\n## 2.2.1\n\n* Added Beveled shape\n\n## 2.2.0\n\n* Renamed NeumorphicButton.`onClick` to NeumorphicButton.`onPressed`\n* Added `NeumorphicTextStyle`\n\n## 2.1.0+1\n\n* Added NeumorphicText (beta)\n* Added NeumorphicIcon\n* Updated samples\n\n## 2.0.1\n\n* Added selected/unselected color on Radio\n* Fixed min flutter version to `1.13.18`\n\n## 2.0.0\n\n* Rewritten all NeumorphicDecoration\n* Improved drawing cache & performances\n* Full support of custom path\n* Added `NeumorphicPathProvider`\n* Added `NeumorphicFlutterLogoPathProvider`\n* Added `NeumorphicBorder` on styles / themes \n\n## 1.0.8+3\n\n* Added `textStyle` to Neumorphic Container, to avoid text coloration issues\n* Added `AnimatedDefaultTextStyle` inside Neumorphic, by default it takes the `material.Theme.of(context).textTheme.body2`\n\n## 1.0.8\n\n* Added `backgroundColor` in Toggle style\n\n## 1.0.7\n\n* Added implementation of `custom path` shapes\n\n## 1.0.5+1\n\n* Added shadow colors customization \n* - shadowLightColor,\n* - shadowDarkColor,\n* - shadowLightColorEmboss,\n* - shadowDarkColorEmboss,\n\n## 1.0.4\n\n* Fixed BorderRadius.only\n* Fixed Slider thumb position\n* Added `curve` on any widget to customize implicits animations\n* Added `NeumorphicToggle` widget\n\n## 1.0.3\n\n* Added a `disableDepth` boolean configuration in theme & styles\n\n## 1.0.2+2\n\n* Some widgets are now stateless\n\n## 1.0.2+1\n\n* Fixed default padding of checkboxes\n\n## 1.0.2\n\n* Fixed changing size/rotate re-draw bug\n* BoxShape is not anymore an element of Style\n* Added `isEnable` property on multiple widgets\n* Refactored the Sample\n* Tried support for web & desktop (mac)\n* Added surfaceIntensity (for concave / convex)\n* Small changes on Neumorphic colors (less dark)\n* Removed border (add Neumorphic inside Neumorphic to reproduce)\n\n## 1.0.1\n\n* Improved performances\n* Renamed CurrentTheme to UsedTheme in NeumorphicTheme (Dark, Light, System)\n* Renamed NeumorphicTheme.getCurrentTheme(context) to NeumorphicTheme.currentTheme(context)\n* Fixed flickering effect when theme changes\n\n## 1.0.0+1\n\n* Added missing authors emails\n\n## 1.0.0\n\n* First release of Flutter-Neumorphic\n* Added concave/convex/flat/emboss container decoration\n* Added a lot of widgets (button, container, radio, checkbox, etc.)\n* Added some samples\n\n## 0.0.1\n\n* initial release."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0732421875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2020 Florent37\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.431640625,
          "content": "# flutter_neumorphic\n\nA complete, ready to use, Neumorphic ui kit for Flutter\n\n[![flutter_logo](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/flutter_logo_small.gif)](https://github.com/Idean/Flutter-Neumorphic)\n\nTry Flutter-Neumorphic on your browser : 👉 https://flutter-neumorphic.firebaseapp.com/ 🌐\n\n[![neumorphic_playground](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/playground.gif)](https://github.com/Idean/Flutter-Neumorphic)\n\n# ⚙️ Installation\n\nhttps://pub.dev/packages/flutter_neumorphic\n\n[![pub package](https://img.shields.io/pub/v/flutter_neumorphic.svg)](\nhttps://pub.dartlang.org/packages/flutter_neumorphic)\n[![pub package](https://api.codemagic.io/apps/5e6113f78b547c3c80edbdb3/5e6113f78b547c3c80edbdb2/status_badge.svg)](https://github.com/Idean/Flutter-Neumorphic)\n\n\n```dart\ndependencies:\n  flutter_neumorphic: ^3.0.3\n\n//requires flutter > 1.13.18\n```\n\nThe in your .dart files \n```dart\nimport 'package:flutter_neumorphic/flutter_neumorphic.dart';\n```\n\n# 🗂 Widgets\n\n<table>\n<thead>\n<tr>\n<th>Preview</th>\n<th>Widget</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/container.gif\"/></td>\n  <td>Neumorphic</td>\n  <td>The main Neumorphic Widget, a container which adds white/dark gradient depending on a lightsource and a depth </td>\n</tr>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/button.gif\"/></td>\n  <td>NeumorphicButton</td>\n  <td>A neumorphic button that plays with the depth to respond to user interraction</td>\n</tr>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/radio.gif\"/></td>\n  <td>NeumorphicRadio</td>\n  <td>A set of neumorphic button whith only one selected at time, depending on a value and groupValue</td>\n</tr>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/checkbox.gif\"/></td>\n  <td>NeumorphicCheckbox</td>\n  <td> A button associated with a value, can be checked/unckecked, if checked, takes the accent color</td>\n</tr>\n\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/text.png\"/></td>\n  <td>NeumorphicText</td>\n  <td>A Neumorphic text (only work with positive depth)</td>\n</tr>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/icon.png\"/></td>\n  <td>NeumorphicIcon</td>\n  <td>A Neumorphic icon (only work with positive depth)</td>\n</tr>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/textfield.png\"/></td>\n  <td>material.TextField</td>\n  <td>For TextFields, just surround your existing material textfield widget with a Neumorphic (container)</td>\n</tr>\n\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/switch.gif\"/> </td>\n  <td>NeumorphicSwitch</td>\n  <td>An On/Off toggle, associated with a value, if toggled, takes the accent color </td>\n</tr>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/toggle.gif\"/> </td>\n  <td>NeumorphicToggle</td>\n  <td>An mutiple value toggle, associated with a selecteedIndex</td>\n</tr>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/slider.gif\"/></td>\n  <td>NeumorphicSlider</td>\n  <td>A Neumorphic seekbar (range slider), the user can select a value in a range</td>\n</tr>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/progress.gif\"/></td>\n  <td>NeumorphicProgress</td>\n  <td>A determinate progress, takes the displayed percentage</td>\n</tr>\n<tr>\n  <td><img width=\"300px\"src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/indeterminate.gif\"/> </td>\n  <td>NeumorphicProgressIndeterminate</td>\n  <td>An inderminate progress-bar</td>\n</tr>\n<tr>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/background.png\"/> </td>\n  <td>NeumorphicBackground</td>\n  <td>Take the background color of the theme, can clip the screen with a borderRadius</td>\n</tr>\n<tr>\n  <td><img width=\"300px\" src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/background.png\"/> </td>\n  <td>NeumorphicApp</td>\n  <td>An application that uses Neumorphic design. Handle theme, navigation, localisation, and much more</td>\n</tr>\n<tr>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/widgets/app_bar.png\"/> </td>\n  <td>NeumorphicAppBar</td>\n  <td>A Neumorphhic design app bar. Can be used inside Scaffold</td>\n</tr>\n\n</tbody>\n</table>\n\n## 👀 Showcases\n\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/samples/sample_form.png)](https://github.com/Idean/Flutter-Neumorphic)\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/samples/sample_clock.png)](https://github.com/Idean/Flutter-Neumorphic)\n\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/samples/sample_galaxy.png)](https://github.com/Idean/Flutter-Neumorphic)\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/samples/sample_widgets.png)](https://github.com/Idean/Flutter-Neumorphic)\n\n## 📦 Neumorphic\n\n```dart\n\nNeumorphic(\n  style: NeumorphicStyle(\n    shape: NeumorphicShape.concave,\n    boxShape: NeumorphicBoxShape.roundRect(BorderRadius.circular(12)), \n    depth: 8,\n    lightSource: LightSource.topLeft,\n    color: Colors.grey\n  ),\n  child: ...\n)\n```\n\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/neumorphic_container.gif)](https://github.com/Idean/Flutter-Neumorphic)\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/neumorphic_circle_container.gif)](https://github.com/Idean/Flutter-Neumorphic)\n\n☝️ Playing with LightSource & Depth\n\n\n### 🛠️ Attributes\n\n| Attributes | Values | Description |\n|------------|--------|-------------|\n| LightSource | TopLeft, BottomRight, etc. / (dx, dy) | The source of light specifit to the theme or the widget, used to project white/dark shadows on neumorphic elements |\n| [Shape](#-shapes) | Concave / Convex / Flat | The shape of the curve used in the neumorphic container |\n| [Depth](#depth) | -20 <= double <= 20 | The distance of the widget to his parent. Can be negative => emboss. It influences on the shadow's color and its size/blur |\n| [Intensity](#intensity) | 0 <= double <= 1 | The intensity of the Light, it influences on the shadow's color |\n| [SurfaceIntensity](surfaceintensity) | 0 <= double <= 1 | The intensity of the Surface, it influences on the concave/convex darkness |\n| Color | any Color | The default color of  Neumorphic elements | \n| Accent | any Color | The default accent color of the Neumorphic element when activated (eg: checkbox) | \n| Variant | any Color | The default secondary color of the Neumorphic element (eg: used as second color on the progress gradient) | \n| [BoxShape](#-custom-shape) | Circle, RoundRect(radius), Stadium, Path | The box shape of a Neumorphic element. Stadium : roundrect with cirlces on each side | \n| [Border](#-accessibility--border) | NeumorphicBorder | A border (color/width) to enhance contrast with background and others elements | \n\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/doc/depth.gif)](https://github.com/Idean/Flutter-Neumorphic)\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/doc/intensity.gif)](https://github.com/Idean/Flutter-Neumorphic)\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/doc/surface_intensity.gif)](https://github.com/Idean/Flutter-Neumorphic)\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/doc/lightsource.gif)](https://github.com/Idean/Flutter-Neumorphic)\n\n\n### 🔧 Shapes\n\n<table>\n<thead>\n<tr>\n<th>Shape</th>\n<th>Widget</th>\n<th>Image</th>\n<th>Condition</th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n  <td>Flat</td>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/shapes/widget_flat.png\"/></td>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/shapes/flat.png\"/> </td>\n  <td>depth >= 0 && shape == Flat</td>\n</tr>\n\n\n<tr>\n  <td>Convex</td>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/shapes/widget_convex.png\"/></td>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/shapes/convex.png\"/> </td>\n  <td>depth >= 0 && shape == Convex</td>\n</tr>\n\n\n\n<tr>\n  <td>Concave</td>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/shapes/widget_concave.png\"/></td>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/shapes/concave.png\"/> </td>\n  <td>depth >= 0 && shape == Concave</td>\n</tr>\n\n\n<tr>\n  <td>Emboss</td>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/shapes/widget_emboss.png\"/></td>\n  <td><img src=\"https://github.com/Idean/Flutter-Neumorphic/raw/master/medias/shapes/emboss.png\"/> </td>\n  <td>depth < 0</td>\n</tr>\n\n</tbody>\n</table>\n\n## Neumorphic Text\n\n[![text](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/widgets/text.png)](https://github.com/Idean/Flutter-Neumorphic)\n\n**Text only handle positive depth**\n\n```dart\nchild: NeumorphicText(\n        \"I love flutter\",\n        style: NeumorphicStyle(\n          depth: 4,  //customize depth here\n          color: Colors.white, //customize color here\n        ),\n        textStyle: NeumorphicTextStyle(\n          fontSize: 18, //customize size here\n          // AND others usual text style properties (fontFamily, fontWeight, ...)\n        ),\n    ),\n```\n\n\n## Neumorphic Icon\n\n[![custom_shape](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/neumorphic_icon.png)](https://github.com/Idean/Flutter-Neumorphic)\n\n```dart\nchild: NeumorphicIcon(\n        Icons.add_circle,\n        size: 80,\n    ),\n```\n\nHow to display **SVG** icons ?\n\nSimply use [https://fluttericon.com/](https://fluttericon.com/) to export your svg as .ttf & use NeumorphicIcon(YOUR_ICON) \n\n[![custom_shape](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/flutter_svg.png)](https://fluttericon.com/)\n\n## 🎨 Custom Shape\n\n[![custom_shape](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/custom_shape.gif)](https://github.com/Idean/Flutter-Neumorphic)\n\nFlutter Neumorphic supports custom shapes, just provide a path to \n\n```dart\nclass MyShapePathProvider extends NeumorphicPathProvider {\n  @override\n  bool shouldReclip(NeumorphicPathProvider oldClipper) {\n    return true;\n  }\n\n  @override\n  Path getPath(Size size) {\n    return Path()\n      ..moveTo(0, 0)\n      ..lineTo(size.width/2, 0)\n      ..lineTo(size.width, size.height/2)\n      ..lineTo(size.width/2, size.height/2)\n      ..lineTo(size.width, size.height)\n      ..lineTo(0, size.height)\n      ..close();\n  }\n}\n```\n\nAnd use `NeumorphicBoxShape.path`\n\n```dart\nNeumorphic(\n  style: NeumorphicStyle(\n     boxShape: NeumorphicBoxShape.path(MyShapePathProvider()),\n  ),\n  ...\n),\n```\n\nYou can import the Flutter logo as a custom shape using \n\n```dart\nNeumorphic(\n  style: NeumorphicStyle(\n    shape: NeumorphicBoxShape.path(NeumorphicFlutterLogoPathProvider()),\n  ),\n  ...\n),\n```\n\n## 🔲 Accessibility / Border\n\nFor design purposes, or simply to enhance accessibility, \nyou can add a border on Neumorphic widgets \n\n[![Neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/border.gif)](https://github.com/Idean/Flutter-Neumorphic)\n\n```dart\nNeumorphic(\n      style: NeumorphicStyle(\n        border: NeumorphicBorder(\n          color: Color(0x33000000),\n          width: 0.8,\n        )\n      ),\n      ...\n)\n```\n\nYou can enable/disable it (eg: listening an Accessibility Provider) with `isEnabled`\n\n```dart\nborder: NeumorphicBorder(\n    isEnabled: true,\n    color: Color(0x33000000),\n    width: 0.8,\n)\n```\n\nNote that `borderColor` and `borderWidth` default values has been added to `NeumorphicThemeData`\n\n## 🎨 Neumorphic Theme\n\n\n[![neumorphic_theme](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/toggleDark.gif)](https://github.com/Idean/Flutter-Neumorphic)\n[![neumorphic_theme](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/toggleTheme.gif)](https://github.com/Idean/Flutter-Neumorphic)\n\n```dart\nNeumorphicTheme(\n    themeMode: ThemeMode.light, //or dark / system\n    darkTheme: NeumorphicThemeData(\n        baseColor: Color(0xff333333),\n        accentColor: Colors.green,\n        lightSource: LightSource.topLeft,\n        depth: 4,\n        intensity: 0.3,\n    ),\n    theme: NeumorphicThemeData(\n        baseColor: Color(0xffDDDDDD),\n        accentColor: Colors.cyan,\n        lightSource: LightSource.topLeft,\n        depth: 6,\n        intensity: 0.5,\n    ),\n    child: ...\n)\n```\n\nTo retrieve the current used theme :\n\n```dart\nfinal theme = NeumorphicTheme.currentTheme(context);\nfinal baseColor = theme.baseColor;\nfinal accentColor = theme.accentColor;\n...\n```\n\nToggle from light to dark\n```dart\nNeumorphicTheme.of(context).themeMode = ThemeMode.dark;\n```\n\nKnow if using dark\n```dart\nif(NeumorphicTheme.of(context).isUsingDark){\n  \n}\n```\n\n# NeumorphicApp\n\nYou can use direcly in your project a `NeumorphicApp`, surrounding your code\n\nIt handle directly NeumorphicTheme & Navigation (and all possibilities of MaterialApp )\n\n```dart\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  // This widget is the root of your application.\n  @override\n  Widget build(BuildContext context) {\n    return NeumorphicApp(\n      debugShowCheckedModeBanner: false,\n      title: 'Neumorphic App',\n      themeMode: ThemeMode.light,\n      theme: NeumorphicThemeData(\n        baseColor: Color(0xFFFFFFFF),\n        lightSource: LightSource.topLeft,\n        depth: 10,\n      ),\n      darkTheme: NeumorphicThemeData(\n        baseColor: Color(0xFF3E3E3E),\n        lightSource: LightSource.topLeft,\n        depth: 6,\n      ),\n      home: MyHomePage(),\n    );\n  }\n}\n```\n\n# What's neumorphic\n\n[![neumorphic](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/neumorphic.jpg)]()\n\n## Material Cards\n\nA Modern / Material (upgraded) card usually is a surface floating on top of our perceived background and casting a shadow onto it. The shadow both gives it depth and also in many cases defines the shape itself — as it’s quite often borderless.\n\n## Neumorphic cards\n\nNeumorphic card however pretends to extrude from the background. It’s a raised shape made from the exact same material as the background. When we look at it from the side we see that it doesn’t “float”.\n\n[![neumorphic_button](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/button_press.gif)](https://github.com/Idean/Flutter-Neumorphic)\n\nHere's a Nereumorphic Button tap (slowed x2) from the sample app, you can see how the element seems to change its depth to its surface.\n\n\n# 👥 Contributors\n\n\n|                                                                                | Contributors |\n|:------------------------------------------------------------------------------:|--------------|\n| [![florent](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/contributors/florent.jpeg)](https://github.com/florent37) | [Florent Champigny](https://github.com/florent37) |\n| [![olivier](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/contributors/olivier.png)](https://github.com/Debilobob)  | [Olivier Bonvila](https://github.com/Debilobob)  |\n| [![gyl](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/contributors/gyl.png)](https://github.com/almighty972)        | [Gyl Jean Lambert](https://github.com/almighty972)  |\n| [![jaumard](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/contributors/jaumard.jpeg)](https://github.com/jaumard)    | [Jimmy Aumard](https://github.com/jaumard)  |\n| [![Overman775](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/contributors/overman775.jpeg)](https://github.com/Overman775)    | [Overman775](https://github.com/Overman775)  |\n| [![schopy](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/contributors/schopy.jpeg)](https://github.com/schopy)    | [schopy](https://github.com/schopy)  |\n\n\n## 📄 License\n\n\nFlutter-Neumorphic is released under the Apache2 license.\nSee [LICENSE](./LICENSE) for details.\n\nIf you use the open-source library in your project, please make sure to credit and backlink to www.idean.com\n\n[![bottom_banner](https://github.com/Idean/Flutter-Neumorphic/blob/master/medias/bottom_banner.png)](https://www.idean.com)\n"
        },
        {
          "name": "deployWeb.sh",
          "type": "blob",
          "size": 0.0439453125,
          "content": "cd example/\nflutter build web\nfirebase deploy"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "format.sh",
          "type": "blob",
          "size": 0.0546875,
          "content": "flutter format lib/*\ngit commit -am \"formatted\"\ngit push"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "medias",
          "type": "tree",
          "content": null
        },
        {
          "name": "publish.sh",
          "type": "blob",
          "size": 0.0615234375,
          "content": "sh ./format.sh\nflutter format example/lib/*\npub publish --force"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.67578125,
          "content": "name: flutter_neumorphic\ndescription: A complete, ready to use, Neumorphic ui kit for Flutter. Dark theming compatible & fully customizable.\nversion: 3.2.0\n#authors: [\n#  Florent Champigny <champigny.florent@gmail.com>,\n#  Olivier Bonvila <olivier.bonvila@idean.com>,\n#  Gyl Jean Lambert <almighty972@gmail.com>\n#]\nhomepage: https://github.com/Idean/Flutter-Neumorphic\nissue_tracker: https://github.com/Idean/Flutter-Neumorphic/issues\n\nenvironment:\n  sdk: \">=2.12.0 <3.0.0\"\n  flutter: \">=1.13.18\"\n\ndependencies:\n  flutter:\n    sdk: flutter\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n\nflutter:\n  fonts:\n   - family: NeumorphicIcons\n     fonts:\n      - asset: fonts/NeumorphicIcons.ttf"
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}