{
  "metadata": {
    "timestamp": 1736710538053,
    "page": 98,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bytedance/flutter_ume",
      "stars": 2106,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.583984375,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\n*pubspec.lock\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\n# Coverage\n**/coverage/output/\n**/coverage/new_lcov.info"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.302734375,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 02c026b03cd31dd3f867e5faeb7e104cce174c5f\n  channel: unknown\n\nproject_type: package\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.5712890625,
          "content": "# Changelog\n\n[简体中文](./CHANGELOG_cn.md)\n\n## [1.1.2]\n\n* #82 Fix flutter_logo.dart error in Flutter 3.0.5 \n\n## [1.1.1+1]\n\n* Update latest dependencies.\n\n## [1.1.1]\n\n* #66 [fix] toolbar initial position is incorrect\n\n## [1.1.0+3]\n\n* Fix static analyze issues.\n\n## [1.1.0+2]\n\n* Fix static analyze issues.\n\n## [1.1.0]\n\n* #76 Introduce `UMEWidget.closeActivatedPlugin()`. Issue #35\n* #75 Remove overlay entry only when it's been inserted. Issue #65\n* #72 [Android] Migrate the example to the v2 embedding\n\n## [1.0.2+1]\n\n* Dart format.\n\n## [1.0.2]\n\n* Fix error in code static analysis.\n\n## [1.0.1]\n\n* Fix error in pubspec.yaml in example\n\n## [1.0.0]\n\n* Normal version with adaption of Flutter 3.\n* Feature: Anywhere door (Route)\n\n## [1.0.0-dev.0]\n\n* Adapt Flutter 3.\n\n## [0.3.0+1]\n\n* Fix the version error\n\n## [0.3.0]\n\n* Remove static function. Use the `UMEWidget`.\n* Allow insert `Widget` into Widget tree, in order to access new plugin easily.\n* Fix the issue of multiple instances of FloatingWidget caused by the refresh state.\n* Fix the isseue that the plugin is not displayed due to the first layout exception in AOT mode\n\n## [0.3.0]\n\n* 移除静态方法，更换为壳 Widget\n* 允许在 Widget tree 增加自定义嵌套结构组件，从而快速接入新插件\n* 修复刷新状态引发的浮窗组件出现多实例的问题\n* 修复在 AOT 模式下首次布局异常导致插件不展示的问题\n\n## [0.2.1]\n\n* Remove the extra MaterialApp Widget\n\n## [0.2.0-dev.0]\n\n* Adapted Null-Safety.\n\n## [0.1.0+1]\n\n* Add some docs comments, modify description in pubspec.yaml.\n\n## [0.1.0]\n\n* Open source.\n"
        },
        {
          "name": "CHANGELOG_cn.md",
          "type": "blob",
          "size": 1.208984375,
          "content": "# Changelog\n\n[English](./CHANGELOG.md)\n\n## [1.1.2]\n\n* #82 修复 flutter_logo.dart 在 Flutter 3.0.5 上的错误\n\n## [1.1.1+1]\n\n* 更新依赖版本\n\n## [1.1.1]\n\n* #66 [fix] toolbar initial position is incorrect\n\n## [1.1.0+3]\n\n* 修复静态分析问题\n\n## [1.1.0+2]\n\n* 修复静态分析问题\n\n## [1.1.0]\n\n* #76 新增 `UMEWidget.closeActivatedPlugin()`。 Issue #35\n* #75 修复重复插入 Overlay 的问题。 Issue #65\n* #72 [Android] 迁移 example 到 v2 embedding。\n\n## [1.0.2+1]\n\n* Dart format\n\n## [1.0.2]\n\n* 修复静态分析错误\n\n## [1.0.1]\n\n* 修复 example 工程的 pubspec.yaml 错误\n\n## [1.0.0]\n\n* 适配 Flutter 3 正式版\n* 新功能：任意门（Route）\n\n## [1.0.0-dev.0]\n\n* 适配 Flutter 3\n\n## [0.3.0+1]\n\n* 修复版本号错误\n\n## [0.3.0]\n\n* 移除静态方法，更换为壳 Widget\n* 允许在 Widget tree 增加自定义嵌套结构组件，从而快速接入新插件\n* 修复刷新状态引发的浮窗组件出现多实例的问题\n* 修复在 AOT 模式下首次布局异常导致插件不展示的问题\n\n## [0.2.1]\n\n* 移除独立的 MaterialApp Widget\n\n## [0.2.0-dev.0]\n\n* 适配 null-safety\n\n## [0.1.0+1]\n\n* 增加一些 docs comment，修改 pubspec.yaml 的描述信息\n\n## [0.1.0]\n\n* 开源\n"
        },
        {
          "name": "CHANGELOG_en.md",
          "type": "blob",
          "size": 0.5498046875,
          "content": "# Changelog\n\n[简体中文](./CHANGELOG.md)\n\n## [0.3.0]\n\n* Remove static function. Use the `UMEWidget`.\n* Allow insert `Widget` into Widget tree, in order to access new plugin easily.\n* Fix the issue of multiple instances of FloatingWidget caused by the refresh state.\n* Fix the isseue that the plugin is not displayed due to the first layout exception in AOT mode\n\n## [0.2.1]\n\n* Remove the extra MaterialApp Widget\n\n## [0.2.0-dev.0]\n\n* Adapted Null-Safety.\n\n## [0.1.0+1]\n\n* Add some docs comments, modify description in pubspec.yaml.\n\n## [0.1.0]\n\n* Open source.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.7880859375,
          "content": "# Contributing\n\n[简体中文](./CONTRIBUTING_cn.md)\n\nThank you for your interest in open source contributions.\nNot only the code, but also contributions such as issues and rich documents are also welcome.\n\nPlease follow the guidelines in this article to make open source contributions to the UME project.\n\n- [Contributing](#contributing)\n  - [How to contact author](#how-to-contact-author)\n  - [How to raise an Issue](#how-to-raise-an-issue)\n  - [How to raise a Pull Request](#how-to-raise-a-pull-request)\n  - [Commit Message specification](#commit-message-specification)\n\n## How to contact author\n\n**Maybe...**\n\n- Found a bug in the code, or an error in the documentation\n- Produces an exception when you use the UME\n- UME is not compatible with the new version Flutter\n- Have a good idea or suggestion\n\nYou can [submit an issue](#how-to-raise-an-issue) in any of the above situations。\n\n**Maybe...**\n\n- Communicate with the author\n- Communicate with more community developers\n- Cooperate with UME\n\nWelcome to [Join the ByteDance Flutter Exchange Group](https://applink.feishu.cn/client/chat/chatter/add_by_link?link_token=b07u55bb-68f0-4a4b-871d-687637766a68).\n\nOr contact [author](mailto:sunkai.dev@bytedance.com).\n\n## How to raise an Issue\n\n1. Go to [Issues](https://github.com/bytedance/flutter_ume/issues).\n2. Search for similar situations, if there is a match, directly feedback in it.\n3. If there is not, press [New issue](https://github.com/bytedance/flutter_ume/issues/new/choose) to raise a new one.\n4. Select a template.\n5. Describe your situation, and fill in the template.\n6. It is better to attach a demo that can reproduce the problem.\n\n## How to raise a Pull Request\n\n1. Fork the repository.\n2. Clone your fork repository.\n3. Checkout to the correct develop branch, and then create a new brnach based on the develop branch.\n4. Edit code.\n5. Edit test code in example project, and test it manually.\n6. Edit unit test in test directory.\n7. Commit your changes and push it. Please follow the [Commit Message specification](#commit-message-specification) to write the commit message.\n8. Create Pull Request in GitHub, and fill in the template.\n\n> Now, UME support null-safety and non-null-safety.\n> Null-safety version corresponds to `develop_nullsafety` branch, non-null-safety version corresponds to `develop` branch.\n> PR should be merged into the corresponding branch.\n\n## Commit Message specification\n\n1. Please use english.\n2. If you have references, please attach a link.\n3. Format: `[tags] description`\n   1. `tags` is the type of PR, such as `fix`, `feat`, `improve`.\n   2. `description` is used to describe changes.\n\nThe following is a standard Commit message example:\n\n``` plaintext\n[fix] README.md document syntax error\n```\n\n``` plaintext\n[feat] New feature description\n\n[https://flutter.dev/dash](https://flutter.dev/dash)\n```\n"
        },
        {
          "name": "CONTRIBUTING_cn.md",
          "type": "blob",
          "size": 2.6513671875,
          "content": "# Contributing\n\n[English](./CONTRIBUTING.md)\n\n感谢你对开源贡献感兴趣。\n不止是代码，提 issue、补充和扩展文档等贡献也都欢迎。\n\n请根据本文的指引，对 UME 项目进行开源贡献。\n\n- [Contributing](#contributing)\n  - [如何联系开发者](#如何联系开发者)\n  - [如何提 Issue](#如何提-issue)\n  - [如何提 Pull Request](#如何提-pull-request)\n  - [Commit Message 规范](#commit-message-规范)\n\n## 如何联系开发者\n\n**可能你：**\n\n- 发现文档错误、代码有 bug\n- 使用 UME 后应用运行产生异常\n- 发现新版本 Flutter 无法兼容\n- 有好的点子或产品建议\n\n上述情况均可以[提一个 issue](#how-to-issue)。\n\n**可能你：**\n\n- 想与开发者交流\n- 想与更多 Flutter 开发者交流\n- 想与 UME 开展交流或合作\n\n欢迎[加入字节跳动 Flutter 交流群](https://applink.feishu.cn/client/chat/chatter/add_by_link?link_token=b07u55bb-68f0-4a4b-871d-687637766a68)\n\n或随时[联系开发者](mailto:sunkai.dev@bytedance.com)\n\n## 如何提 Issue\n\n1. 点击本仓库的 [Issue 页面](https://github.com/bytedance/flutter_ume/issues)\n2. 先搜索是否有和你类似情况的 issue，若有请直接在该 issue 中反馈问题\n3. 若没有类似情况 issue，点击 [New issue 按钮](https://github.com/bytedance/flutter_ume/issues/new/choose)\n4. 选择一个适合你的 issue 模板\n5. 在模板中填写对应信息\n6. 如果有能复现问题的最简 Demo 就再好不过了\n\n## 如何提 Pull Request\n\n1. Fork 本仓库\n2. 将你 fork 的仓库 clone 到本地\n3. 切换到对应开发分支，并 checkout 出新分支\n4. 在本地修改代码\n5. 修改 example 工程的测试代码，并进行手工测试\n6. 在 test 目录下，修改单元测试\n7. 在本地提交改动并推送到你 fork 的仓库，commit message 格式请遵循本文 [Commit Message 规范](#commit-message) 部分\n8. 在 GitHub 上创建 Pull Request，在模板中填写对应信息\n\n> 目前，UME 同时支持 null-safety 版本与非 null-safety 版本。\n> null-safety 版本开发分支为 `develop_nullsafety`，非 null-safety 版本开发分支为 `develop`。\n> PR 需要合入对应的开发分支中。\n\n## Commit Message 规范\n\n1. 原则上请尽量使用英文\n2. 涉及到参考资料的，请附链接\n3. 格式：`[tags] description`\n   1. `tags` 为 PR 的类型，如 `fix` 修复错误、`feat` 新增功能、`improve` 改进代码或文档\n   2. `description` 为具体的改动描述\n\n以下为标准的 Commit message 示例：\n\n``` plaintext\n[fix] README.md document syntax error\n```\n\n``` plaintext\n[feat] New feature description\n\n[https://flutter.dev/dash](https://flutter.dev/dash)\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0458984375,
          "content": "MIT License\n\nCopyright (c) 2021 ByteDance Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.0908203125,
          "content": "# flutter_ume\n\n[简体中文](./README_cn.md)\n\nUME is an in-app debug kits platform for Flutter apps.\n\n[![platforms](https://img.shields.io/badge/platforms-ios%20%7C%20android%20%7C%20web%20%7C%20macos%20%7C%20windows%20%7C%20linux-lightgrey)](https://pub.dev/packages/flutter_ume) [![license](https://img.shields.io/github/license/bytedance/flutter_ume.svg)](https://github.com/bytedance/flutter_ume/blob/master/LICENSE)\n\n[![pub package](https://img.shields.io/pub/v/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n[![pub package](https://img.shields.io/pub/likes/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n[![pub package](https://img.shields.io/pub/points/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n[![pub package](https://img.shields.io/pub/popularity/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n[![pub package](https://img.shields.io/pub/publisher/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n\n**Since `^1.0.0`, flutter_ume starts adapting to the Flutter 3. See [Quick Start] to learn more.**\n\n<img src=\"https://github.com/bytedance/flutter_ume/raw/master/apk_qrcode.png\" width = \"128\" height = \"128\" alt=\"banner\" />\n\nScan QR code or click link to download apk. Try it now!\nhttps://github.com/bytedance/flutter_ume/releases/download/v0.2.1.0/app-debug.apk\n\nThere are 13 plugin kits built in the latest open source version of UME.\nDeveloper could create custom plugin kits, and integrate them into UME.\nVisit [Develop plugin kits for UME](#develop-plugin-kits-for-ume) for more details.\n\n**Please see [Plugins from community](#plugins-from-community) to make your flutter_ume stronger.**\n\n- [flutter_ume](#flutter_ume)\n  - [Quick Start](#quick-start)\n  - [IMPORTANT](#important)\n  - [Features](#features)\n  - [Develop plugin kits for UME](#develop-plugin-kits-for-ume)\n    - [Access the nested widget debug kits quickly](#access-the-nested-widget-debug-kits-quickly)\n  - [How to use UME in Release/Profile mode](#how-to-use-ume-in-releaseprofile-mode)\n  - [About version](#about-version)\n    - [Compatibility](#compatibility)\n    - [Coverage](#coverage)\n    - [Version upgrade rules](#version-upgrade-rules)\n    - [Null-safety](#null-safety)\n    - [Change log](#change-log)\n  - [Contributing](#contributing)\n    - [Contributors](#contributors)\n    - [Plugins from community](#plugins-from-community)\n    - [About the third-party open-source project dependencies](#about-the-third-party-open-source-project-dependencies)\n  - [LICENSE](#license)\n  - [Contact the author](#contact-the-author)\n\n## Quick Start\n\n**All packages whose names are prefixed with `flutter_ume_kit_` are function**\n**plug-ins of UME, and users can access them according to demand**\n\n1. Edit `pubspec.yaml`, and add dependencies.\n\n    **Compatible with Flutter 3 since version `1.0.0`.**\n\n    ``` yaml\n    dev_dependencies:\n      flutter_ume: ^1.0.1\n      flutter_ume_kit_ui: ^1.0.0\n      flutter_ume_kit_device: ^1.0.0\n      flutter_ume_kit_perf: ^1.0.0\n      flutter_ume_kit_show_code: ^1.0.0\n      flutter_ume_kit_console: ^1.0.0\n      flutter_ume_kit_dio: ^1.0.0\n    ```\n\n\n    **↓ Null-safety version, compatible with Flutter 2.x**\n\n    ``` yaml\n    dev_dependencies: # Don't use UME in release mode\n      flutter_ume: ^0.3.0+1\n      flutter_ume_kit_ui: ^0.3.0+1\n      flutter_ume_kit_device: ^0.3.0\n      flutter_ume_kit_perf: ^0.3.0\n      flutter_ume_kit_show_code: ^0.3.0\n      flutter_ume_kit_console: ^0.3.0\n      flutter_ume_kit_dio: ^0.3.0\n    ```\n\n    **↓ Non-null-safety version, compatible with Flutter 1.x**\n\n    ``` yaml\n    dev_dependencies: # Don't use UME in release mode\n      flutter_ume: ^0.1.1\n      flutter_ume_kit_ui: ^0.1.1\n      flutter_ume_kit_device: ^0.1.1\n      flutter_ume_kit_perf: ^0.1.1\n      flutter_ume_kit_show_code: ^0.1.1\n      flutter_ume_kit_console: ^0.1.1 \n    ```\n\n2. Run `flutter pub get`\n3. Import packages\n\n    ``` dart\n    import 'package:flutter_ume/flutter_ume.dart'; // UME framework\n    import 'package:flutter_ume_kit_ui/flutter_ume_kit_ui.dart'; // UI kits\n    import 'package:flutter_ume_kit_perf/flutter_ume_kit_perf.dart'; // Performance kits\n    import 'package:flutter_ume_kit_show_code/flutter_ume_kit_show_code.dart'; // Show Code\n    import 'package:flutter_ume_kit_device/flutter_ume_kit_device.dart'; // Device info\n    import 'package:flutter_ume_kit_console/flutter_ume_kit_console.dart'; // Show debugPrint\n    import 'package:flutter_ume_kit_dio/flutter_ume_kit_dio.dart'; // Dio Inspector\n    ```\n\n4. Edit main method of your app, register plugin kits and initial UME\n\n    ``` dart\n    void main() {\n      if (kDebugMode) {\n        PluginManager.instance                                 // Register plugin kits\n          ..register(WidgetInfoInspector())\n          ..register(WidgetDetailInspector())\n          ..register(ColorSucker())\n          ..register(AlignRuler())\n          ..register(ColorPicker())                            // New feature\n          ..register(TouchIndicator())                         // New feature\n          ..register(Performance())\n          ..register(ShowCode())\n          ..register(MemoryInfoPage())\n          ..register(CpuInfoPage())\n          ..register(DeviceInfoPanel())\n          ..register(Console())\n          ..register(DioInspector(dio: dio));                  // Pass in your Dio instance\n        // After flutter_ume 0.3.0\n        runApp(UMEWidget(child: MyApp(), enable: true));\n        // Before flutter_ume 0.3.0\n        runApp(injectUMEWidget(child: MyApp(), enable: true));\n      } else {\n        runApp(MyApp());\n      }\n    }\n    ```\n\n5. `flutter run` for running\n   or `flutter build apk --debug`、`flutter build ios --debug` for building productions.\n\n  > Some functions rely on VM Service, and additional parameters need to be added for local operation to ensure that it can connect to the VM Service.\n  >\n  > Flutter 2.0.x, 2.2.x and other versions run on real devices, `flutter run` needs to add the `--disable-dds` parameter.\n  > After [Pull Request #80900](https://github.com/flutter/flutter/pull/80900) merging, `--disable-dds` was renamed to `--no-dds`.\n\n## IMPORTANT\n\n**From `0.1.1`/`0.2.1` version，we don't need set `useRootNavigator: false`.**\nThe following section only applies to versions before version `0.1.1`/`0.2.1` .\n\n<s>\n\nSince UME manages the routing stack at the top level, methods such as `showDialog` use `rootNavigator` to pop up by default,\ntherefore **must** pass in the parameter `useRootNavigator: false` in `showDialog`, `showGeneralDialog` and other 'show dialog' methods to avoid navigator errors.\n\n``` dart\nshowDialog(\n  context: context,\n  builder: (ctx) => AlertDialog(\n        title: const Text('Dialog'),\n        actions: <Widget>[\n          TextButton(\n              onPressed: () => Navigator.pop(context),\n              child: const Text('OK'))\n        ],\n      ),\n  useRootNavigator: false); // <===== It's very IMPORTANT!\n```\n\n</s>\n\n## Features\n\nThere are 13 plugin kits built in the current open source version of UME.\n\n<table border=\"1\" width=\"100%\">\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>UI kits</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/widget_info.png\" width=\"100%\" alt=\"Widget Info\" /></br>Widget Info</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/widget_detail.png\" width=\"100%\" alt=\"Widget Detail\" /></br>Widget Detail</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/align_ruler.png\" width=\"100%\" alt=\"Align Ruler\" /></br>Align Ruler</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/color_picker.png\" width=\"100%\" alt=\"Color Picker\" /></br>Color Picker</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/color_sucker.png\" width=\"100%\" alt=\"Color Sucker\" /></br>Color Sucker</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/touch_indicator.png\" width=\"100%\" alt=\"Touch Indicator\" /></br>Touch Indicator</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Performance Kits</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/memory_info.png\" width=\"100%\" alt=\"Memory Info\" /></br>Memory Info</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/perf_overlay.png\" width=\"100%\" alt=\"Perf Overlay\" /></br>Perf Overlay</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Device Info Kits</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/cpu_info.png\" width=\"100%\" alt=\"CPU Info\" /></br>CPU Info</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/device_info.png\" width=\"100%\" alt=\"Device Info\" /></br>Device Info</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Show Code</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/show_code.png\" width=\"100%\" alt=\"Show Code\" /></br>Show Code</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Console</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/console.png\" width=\"100%\" alt=\"Console\" /></br>Console</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Dio Inspector</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/dio_inspector.png\" width=\"100%\" alt=\"Dio Inspector\" /></br>Dio Inspector</td>\n    </tr>\n</table>\n\n## Develop plugin kits for UME\n\n> UME plugins are located in the `./kits` directory, and each one is a `package`.\n> You can refer to the example in [`./custom_plugin_example`](./custom_plugin_example/) about this chapter.\n\n1. Run `flutter create -t package custom_plugin` to create your custom plugin kit, it could be `package` or `plugin`.\n2. Edit `pubspec.yaml` of the custom plugin kit to add UME framework dependency.\n\n    ``` yaml\n    dependencies:\n      flutter_ume: '>=0.3.0 <0.4.0'\n    ```\n\n3. Create the class of the plugin kit which should implement `Pluggable`.\n\n    ``` dart\n    import 'package:flutter_ume/flutter_ume.dart';\n\n    class CustomPlugin implements Pluggable {\n      CustomPlugin({Key key});\n\n      @override\n      Widget buildWidget(BuildContext context) => Container(\n        color: Colors.white\n        width: 100,\n        height: 100,\n        child: Center(\n          child: Text('Custom Plugin')\n        ),\n      ); // The panel of the plugin kit\n\n      @override\n      String get name => 'CustomPlugin'; // The name of the plugin kit\n\n      @override\n      String get displayName => 'CustomPlugin';\n\n      @override\n      void onTrigger() {} // Call when tap the icon of plugin kit\n\n      @override\n      ImageProvider<Object> get iconImageProvider => NetworkImage('url'); // The icon image of the plugin kit\n    }\n    ```\n\n4. Use your custom plugin kit in project\n\n    1. Edit `pubspec.yaml` of host app project to add `custom_plugin` dependency.\n\n        ``` yaml\n        dev_dependencies:\n          custom_plugin:\n            path: path/to/custom_plugin\n        ```\n\n    2. Run `flutter pub get`\n\n    3. Import package\n\n        ``` dart\n        import 'package:custom_plugin/custom_plugin.dart';\n        ```\n\n5. Edit main method of your app, register your custom_plugin plugin kit\n\n    ``` dart\n    if (kDebugMode) {\n      PluginManager.instance\n        ..register(CustomPlugin());\n      runApp(\n        UMEWidget(\n          child: MyApp(), \n          enable: true\n        )\n      );\n    } else {\n      runApp(MyApp());\n    }\n    ```\n\n6. Run your app\n\n### Access the nested widget debug kits quickly\n\nWe introduce the `PluggableWithNestedWidget` from `0.3.0`. It is used to insert nested Widgets in the Widget tree and quickly access embedded kits with nested widget.\n\nFor more details, see [./kits/flutter_ume_kit_ui/lib/components/color_picker/color_picker.dart](https://github.com/bytedance/flutter_ume/blob/master/kits/flutter_ume_kit_ui/lib/components/color_picker/color_picker.dart) and [./kits/flutter_ume_kit_ui/lib/components/touch_indicator/touch_indicator.dart](https://github.com/bytedance/flutter_ume/blob/master/kits/flutter_ume_kit_ui/lib/components/touch_indicator/touch_indicator.dart).\n\nThe key steps are as follows:\n\n1. The class of your plugin should implement `PluggableWithNestedWidget`.\n2. Implements `Widget buildNestedWidget(Widget child)`. Handling the nested widgets and returning the new Widget.\n\n## How to use UME in Release/Profile mode\n\n**Once you use flutter_ume in Release/Profile mode, you agree that you will**\n**bear the relevant risks by yourself.**\n\n**The maintainer of flutter_ume does not assume any responsibility for the accident**\n**caused by this.**\n\n**We recommend not to use it in Release/Profile mode for the following reasons:**\n\n1. VM Service is not available in these environments, so some functions are not available\n2. In this environment, developers need to isolate the app distribution channels by themselves to avoid submitting relevant debugging code to the production environment\n\nIn order to use in Release/Profile mode, the details that need to be adjusted in the normal access process:\n\n1. In `pubspec.yaml`, `flutter_ume` and plugins should be write below `dependencies` rather than `dev_dependencies`.\n2. Don't put the code which call `PluginManager.instance.register()` and `UMEWidget(child: App())` into conditionals which represent debug mode. (Such as `kDebugMode`)\n3. Ensure the above details, run `flutter clean` and `flutter pub get`, then build your app.\n\n## About version\n\n### Compatibility\n\n| UME version | 1.12.13 | 1.22.3 | 2.0.1 | 2.2.3 | 2.5.3 | 2.8.0 | 3.0.5 | 3.3.1\n| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n| 0.1.x | ✅ | ✅ | ✅ | ✅ | ⚠️ | ⚠️ | ❌ | ❌ |\n| 0.2.x | ❌ | ❌ | ✅ | ✅ | ✅ | ⚠️ | ❌ | ❌ |\n| 0.3.x | ❌ | ❌ | ✅ | ✅ | ✅ | ✅ | ❌ | ❌ |\n| 1.0.x | ❌ | ❌ | ⚠️ | ⚠️ | ⚠️ | ⚠️ | ✅ | ✅ |\n| 1.1.x | ❌ | ❌ | ⚠️ | ⚠️ | ⚠️ | ⚠️ | ✅ | ✅ |\n\n⚠️ means the version has not been fully tested for compatibility.\n\n### Special case\n\n- Please use `flutter_ume_kit_ui: ^1.1.0` and above version when you are using Flutter 3.7 and above.\n\n### Coverage\n\n| Package | master | develop | develop_nullsafety |\n| ---- | ---- | ---- | ---- |\n| flutter_ume | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/coverage_badge.svg) |\n| flutter_ume_kit_device | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_device/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_device/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_device/coverage_badge.svg) |\n| flutter_ume_kit_perf | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_perf/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_perf/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_perf/coverage_badge.svg) |\n| flutter_ume_kit_show_code | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_show_code/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_show_code/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_show_code/coverage_badge.svg) |\n| flutter_ume_kit_ui | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_ui/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_ui/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_ui/coverage_badge.svg) |\n| flutter_ume_kit_console | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_console/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_console/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_console/coverage_badge.svg) |\n| flutter_ume_kit_dio | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_dio/coverage_badge.svg) | N/A | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_dio/coverage_badge.svg) |\n\n### Version upgrade rules\n\nPlease refer to [Semantic versions](https://dart.dev/tools/pub/versioning#semantic-versions) for details.\n\n### Change log\n\n[Changelog](./CHANGELOG.md)\n\n## Contributing\n\nContributing rules: [Contributing](./CONTRIBUTING_en.md)\n\n### Contributors\n\nThanks to the following contributors (names not listed in order)：\n\n|  |  |\n| ---- | ---- |\n| ![ShirelyC](https://avatars.githubusercontent.com/u/11439167?s=64&v=4) | [ShirelyC](https://github.com/smileShirely) |\n| ![lpylpyleo](https://avatars.githubusercontent.com/u/15264428?s=64&v=4) | [lpylpyleo](https://github.com/lpylpyleo) |\n| ![Alex Li](https://avatars.githubusercontent.com/u/15884415?s=64&v=4) | [Alex Li](https://github.com/AlexV525) |\n| ![Swain](https://avatars.githubusercontent.com/u/7621572?s=64&v=4) | [Swain](https://github.com/talisk) |\n| ![mengdouer](https://avatars.githubusercontent.com/u/58758250?s=64&v=4) | [mengdouer](https://github.com/mengdouer) |\n| ![LAIIIHZ](https://avatars.githubusercontent.com/u/35956195?s=64&v=4) | [LAIIIHZ](https://github.com/laiiihz) |\n| ![XinLei](https://avatars.githubusercontent.com/u/23734225?s=64&v=4) | [XinLei](https://github.com/Vadaski) |\n| ![suli](https://avatars.githubusercontent.com/u/5837645?s=64&v=4) | [suli](https://github.com/suli1) |\n| ![wei-spring](https://avatars.githubusercontent.com/u/8155092?s=64&v=4) | [wei-spring](https://github.com/wei-spring) |\n\n### Plugins from community\n\n- [flutter_ume_kit_channel_monitor](https://pub.dev/packages/flutter_ume_kit_channel_monitor)\n  - Channel communication monitor\n  - Cource code: https://github.com/bytedance/flutter_ume/tree/master/kits/flutter_ume_kit_channel_monitor\n- [flutter_ume_kit_slow_animation](https://pub.dev/packages/flutter_ume_kit_slow_animation)\n  - Animation speed control\n  - Cource code: https://github.com/cfug/flutter_ume_kits\n- [flutter_ume_kit_shared_preferences](https://pub.dev/packages/flutter_ume_kit_shared_preferences)\n  - shared_preferences tool\n  - Cource code: https://github.com/cfug/flutter_ume_kits\n- [flutter_ume_kit_designer_check](https://pub.dev/packages/)\n  - Comparing tool for Design UI and real UI\n  - Cource code: https://github.com/cfug/flutter_ume_kits\n- [flutter_ume_kit_clean_local_data](https://pub.dev/packages/flutter_ume_kit_clean_local_data)\n  - Clean local data\n  - Cource code: https://github.com/cfug/flutter_ume_kits 。\n- [flutter_ume_kit_database_kit](https://pub.dev/packages/flutter_ume_kit_database_kit)\n  - DB tool\n  - Cource code: https://github.com/cfug/flutter_ume_kits 。\n- [ume_kit_monitor](https://pub.dev/packages/ume_kit_monitor)\n  - Parameters monitor tools\n  - Cource code: https://github.com/fastcode555/ume_kit_monitor 。\n- [json2dart_viewerffi](https://pub.dev/packages/json2dart_viewerffi)\n  - DB tool\n  - Cource code: https://github.com/fastcode555/Json2Dart_Null_Safety 。\n- [json2dart_viewer](https://pub.dev/packages/json2dart_viewer)\n  - DB tool\n  - Cource code: https://github.com/fastcode555/Json2Dart_Null_Safety 。\n- [memory_detector_of_kit](https://github.com/bladeofgod/memory_detector_of_kit)\n  - Leaks tool\n- [channel_observer_of_kit](https://github.com/bladeofgod/channel_observer_of_kit)\n  - Channel communication monitor\n- [flutter-ume-kit-dio-enhance](https://github.com/linversion/flutter-ume-kit-dio-enhance)\n  - Plugin base on flutter_ume_kit_dio\n\n### About the third-party open-source project dependencies\n\n- The TouchIndicator use the pub [touch_indicator](https://pub.dev/packages/touch_indicator), the ColorPicker use the pub [cyclop](https://pub.dev/packages/cyclop).\n- We [fork](https://github.com/talisk/cyclop) the package [cyclop](https://pub.dev/packages/cyclop) and modify some code meet our functional needs. We should depend cyclop by pub version after the [PR](https://github.com/rxlabz/cyclop/pull/11) being merged.\n\n## LICENSE\n\nThis project is licensed under the MIT License - visit the [LICENSE](./LICENSE) for details.\n\n## Contact the author\n\n**Maybe...**\n\n- Found a bug in the code, or an error in the documentation\n- Produces an exception when you use the UME\n- UME is not compatible with the new version Flutter\n- Have a good idea or suggestion\n\nYou can [submit an issue](./CONTRIBUTING_en.md#how-to-raise-an-issue) in any of the above situations.\n\n**Maybe...**\n\n- Communicate with the author\n- Communicate with more community developers\n- Cooperate with UME\n\nWelcome to [Join the ByteDance Flutter Exchange Group](https://applink.feishu.cn/client/chat/chatter/add_by_link?link_token=67au2f75-3783-41b0-8868-0fc0178f1fd8).\n\nOr contact [author](mailto:sunkai.dev@bytedance.com).\n"
        },
        {
          "name": "README_cn.md",
          "type": "blob",
          "size": 21.2744140625,
          "content": "# flutter_ume\n\n[English](./README.md)\n\nFlutter 应用内调试工具平台\n\n[![platforms](https://img.shields.io/badge/platforms-ios%20%7C%20android%20%7C%20web%20%7C%20macos%20%7C%20windows%20%7C%20linux-lightgrey)](https://pub.dev/packages/flutter_ume) [![license](https://img.shields.io/github/license/bytedance/flutter_ume.svg)](https://github.com/bytedance/flutter_ume/blob/master/LICENSE)\n\n[![pub package](https://img.shields.io/pub/v/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n[![pub package](https://img.shields.io/pub/likes/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n[![pub package](https://img.shields.io/pub/points/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n[![pub package](https://img.shields.io/pub/popularity/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n[![pub package](https://img.shields.io/pub/publisher/flutter_ume.svg)](https://pub.dev/packages/flutter_ume)\n\n**Since `^1.0.0`, flutter_ume starts adapting to the Flutter 3. See [Quick Start] to learn more.**\n\n<img src=\"https://github.com/bytedance/flutter_ume/raw/master/apk_qrcode.png\" width = \"128\" height = \"128\" alt=\"banner\" />\n\n扫码或点击链接下载 apk，快速体验 UME。\nhttps://github.com/bytedance/flutter_ume/releases/download/v0.2.1.0/app-debug.apk\n\n最新版本(1.0.1)内置 13 个插件，\n开发者可以创建自己的插件，并集成进 UME 平台。\n详见本文[为 UME 开发插件](#为-ume-开发插件)部分。\n\n**更多开源社区贡献的调试插件，请见[社区插件](#社区插件)部分。**\n\n- [flutter_ume](#flutter_ume)\n  - [快速接入](#快速接入)\n  - [特别说明](#特别说明)\n  - [功能介绍](#功能介绍)\n  - [为 UME 开发插件](#为-ume-开发插件)\n    - [快速集成嵌入式插件](#快速集成嵌入式插件)\n  - [如何在 Release/Profile mode 下使用 UME](#如何在-releaseprofile-mode-下使用-ume)\n  - [版本说明](#版本说明)\n    - [兼容性](#兼容性)\n    - [单测覆盖率](#单测覆盖率)\n    - [版本号规则](#版本号规则)\n    - [Null-safety 版本](#null-safety-版本)\n    - [更新日志](#更新日志)\n  - [开源贡献](#开源贡献)\n    - [贡献者](#贡献者)\n    - [社区插件](#社区插件)\n    - [第三方开源项目说明](#第三方开源项目说明)\n  - [开源协议](#开源协议)\n  - [联系开发者](#联系开发者)\n\n## 快速接入\n\n**所有名称前缀为 `flutter_ume_kit_` 的 package 都是 UME 的功能插件，**\n**用户可按需接入。**\n\n1. 修改 `pubspec.yaml`，添加依赖\n\n    **自 `1.0.0` 版本开始适配 Flutter 3。**\n\n    ``` yaml\n    dev_dependencies:\n      flutter_ume: ^1.0.1\n      flutter_ume_kit_ui: ^1.0.0\n      flutter_ume_kit_device: ^1.0.0\n      flutter_ume_kit_perf: ^1.0.0\n      flutter_ume_kit_show_code: ^1.0.0\n      flutter_ume_kit_console: ^1.0.0\n      flutter_ume_kit_dio: ^1.0.0\n    ```\n\n    **↓ Null-safety 版本，适用于 Flutter 2.x**\n\n    ``` yaml\n    dev_dependencies:\n      flutter_ume: ^0.3.0+1\n      flutter_ume_kit_ui: ^0.3.0+1\n      flutter_ume_kit_device: ^0.3.0\n      flutter_ume_kit_perf: ^0.3.0\n      flutter_ume_kit_show_code: ^0.3.0\n      flutter_ume_kit_console: ^0.3.0\n      flutter_ume_kit_dio: ^0.3.0\n    ```\n\n    **↓ 非 Null-safety 版本，适用于 Flutter 1.x**\n\n    ``` yaml\n    dev_dependencies:\n      flutter_ume: ^0.1.1\n      flutter_ume_kit_ui: ^0.1.1\n      flutter_ume_kit_device: ^0.1.1\n      flutter_ume_kit_perf: ^0.1.1\n      flutter_ume_kit_show_code: ^0.1.1\n      flutter_ume_kit_console: ^0.1.1\n    ```\n\n2. 执行 `flutter pub get`\n3. 引入包\n\n    ``` dart\n    import 'package:flutter_ume/flutter_ume.dart'; // UME 框架\n    import 'package:flutter_ume_kit_ui/flutter_ume_kit_ui.dart'; // UI 插件包\n    import 'package:flutter_ume_kit_perf/flutter_ume_kit_perf.dart'; // 性能插件包\n    import 'package:flutter_ume_kit_show_code/flutter_ume_kit_show_code.dart'; // 代码查看插件包\n    import 'package:flutter_ume_kit_device/flutter_ume_kit_device.dart'; // 设备信息插件包\n    import 'package:flutter_ume_kit_console/flutter_ume_kit_console.dart'; // debugPrint 插件包\n    import 'package:flutter_ume_kit_dio/flutter_ume_kit_dio.dart'; // Dio 网络请求调试工具\n    ```\n\n4. 修改程序入口，增加初始化方法及注册插件代码\n\n    ``` dart\n    void main() {\n      if (kDebugMode) {\n        PluginManager.instance                                 // 注册插件\n          ..register(WidgetInfoInspector())\n          ..register(WidgetDetailInspector())\n          ..register(ColorSucker())\n          ..register(AlignRuler())\n          ..register(ColorPicker())                            // 新插件\n          ..register(TouchIndicator())                         // 新插件\n          ..register(Performance())\n          ..register(ShowCode())\n          ..register(MemoryInfoPage())\n          ..register(CpuInfoPage())\n          ..register(DeviceInfoPanel())\n          ..register(Console())\n          ..register(DioInspector(dio: dio));                  // 传入你的 Dio 实例\n        // flutter_ume 0.3.0 版本之后\n        runApp(UMEWidget(child: MyApp(), enable: true)); // 初始化\n        // flutter_ume 0.3.0 版本之前\n        runApp(injectUMEWidget(child: MyApp(), enable: true)); // 初始化\n      } else {\n        runApp(MyApp());\n      }\n    }\n    ```\n\n5. `flutter run` 运行代码\n   或 `flutter build apk --debug`、`flutter build ios --debug` 构建产物\n\n  > 部分功能依赖 VM Service，本地运行需要添加额外参数，以确保能够连接到 VM Service。\n  >\n  > Flutter 2.0.x、2.2.x 等版本在真机上运行，`flutter run` 需要添加 `--disable-dds` 参数。\n  > 在 [Pull Request #80900](https://github.com/flutter/flutter/pull/80900) 合入之后，`--disable-dds` 参数被更名为 `--no-dds`。\n\n## 特别说明\n\n**自 `0.1.1`/`0.2.1` 版本起，已经不需要设置 `useRootNavigator: false`。**\n以下部分仅适用于 `0.1.1`/`0.2.1` 之前的版本。\n\n<s>\n\n由于 UME 在顶层管理了路由栈，`showDialog` 等方法默认使用 `rootNavigator` 弹出，\n所以**必须**在 `showDialog`、`showGeneralDialog` 等弹窗方法，传入参数 `useRootNavigator: false` 避免路由栈错误。\n\n``` dart\nshowDialog(\n  context: context,\n  builder: (ctx) => AlertDialog(\n        title: const Text('Dialog'),\n        actions: <Widget>[\n          TextButton(\n              onPressed: () => Navigator.pop(context),\n              child: const Text('OK'))\n        ],\n      ),\n  useRootNavigator: false); // <===== 非常重要\n```\n\n</s>\n\n## 功能介绍\n\n当前开源版 UME 内置了 13 个插件\n\n<table border=\"1\" width=\"100%\">\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>UI 工具包</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/widget_info.png\" width=\"100%\" alt=\"Widget 信息\" /></br>Widget 信息</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/widget_detail.png\" width=\"100%\" alt=\"Widget 详情\" /></br>Widget 详情</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/align_ruler.png\" width=\"100%\" alt=\"对齐标尺\" /></br>对齐标尺</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/color_picker.png\" width=\"100%\" alt=\"颜色吸管（新）\" /></br>颜色吸管（新）</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/color_sucker.png\" width=\"100%\" alt=\"颜色吸管\" /></br>颜色吸管</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/touch_indicator.png\" width=\"100%\" alt=\"触控标记\" /></br>触控标记</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>性能工具包</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/memory_info.png\" width=\"100%\" alt=\"内存信息\" /></br>内存信息</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/perf_overlay.png\" width=\"100%\" alt=\"性能浮层\" /></br>性能浮层</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>设备信息工具包</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/cpu_info.png\" width=\"100%\" alt=\"CPU 信息\" /></br>CPU 信息</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/device_info.png\" width=\"100%\" alt=\"设备信息\" /></br>设备信息</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>代码查看</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/show_code.png\" width=\"100%\" alt=\"代码查看\" /></br>代码查看</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>日志展示</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/console.png\" width=\"100%\" alt=\"日志展示\" /></br>日志展示</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Dio 网络请求调试工具</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/dio_inspector.png\" width=\"100%\" alt=\"Dio 网络请求调试工具\" /></br>Dio 网络请求调试工具</td>\n    </tr>\n</table>\n\n## 为 UME 开发插件\n\n> UME 插件位于 `./kits` 目录下，每个插件包都是一个 `package`\n> 本小节示例可参考 [`./custom_plugin_example`](./custom_plugin_example/)\n\n1. `flutter create -t package custom_plugin` 创建一个插件包，可以是 `package`，也可以是 `plugin`\n2. 修改插件包的 `pubspec.yaml`，添加依赖\n\n    ``` yaml\n    dependencies:\n      flutter_ume: '>=0.3.0 <0.4.0'\n    ```\n\n3. 创建插件配置，实现 `Pluggable` 虚类\n\n    ``` dart\n    import 'package:flutter_ume/flutter_ume.dart';\n\n    class CustomPlugin implements Pluggable {\n      CustomPlugin({Key key});\n\n      @override\n      Widget buildWidget(BuildContext context) => Container(\n        color: Colors.white\n        width: 100,\n        height: 100,\n        child: Center(\n          child: Text('Custom Plugin')\n        ),\n      ); // 返回插件面板\n\n      @override\n      String get name => 'CustomPlugin'; // 插件名称\n\n      @override\n      String get displayName => 'CustomPlugin';\n\n      @override\n      void onTrigger() {} // 点击插件面板图标时调用\n\n      @override\n      ImageProvider<Object> get iconImageProvider => NetworkImage('url'); // 插件图标\n    }\n    ```\n\n4. 在工程中引入自定义插件\n\n    1. 修改 `pubspec.yaml`，添加依赖\n\n        ``` yaml\n        dev_dependencies:\n          custom_plugin:\n            path: path/to/custom_plugin\n        ```\n\n    2. 执行 `flutter pub get`\n\n    3. 引入包\n\n        ``` dart\n        import 'package:custom_plugin/custom_plugin.dart';\n        ```\n\n5. 在工程中注册插件\n\n    ``` dart\n    if (kDebugMode) {\n      PluginManager.instance\n        ..register(CustomPlugin());\n      runApp(\n        UMEWidget(\n          child: MyApp(), \n          enable: true\n        )\n      );\n    } else {\n      runApp(MyApp());\n    }\n    ```\n\n6. 运行代码\n\n### 快速集成嵌入式插件\n\n自 `0.3.0` 版本起引入了 `PluggableWithNestedWidget`，用以实现在 Widget tree 中插入嵌套 Widget，快速接入嵌入式插件。\n\n可参考 [./kits/flutter_ume_kit_ui/lib/components/color_picker/color_picker.dart](https://github.com/bytedance/flutter_ume/blob/master/kits/flutter_ume_kit_ui/lib/components/color_picker/color_picker.dart) 与 [./kits/flutter_ume_kit_ui/lib/components/touch_indicator/touch_indicator.dart](https://github.com/bytedance/flutter_ume/blob/master/kits/flutter_ume_kit_ui/lib/components/touch_indicator/touch_indicator.dart)。\n\n集成重点如下：\n\n1. 插件主体类实现 `PluggableWithNestedWidget`\n2. 实现 `Widget buildNestedWidget(Widget child)`，在该方法中处理嵌套结构并返回 Widget\n\n## 如何在 Release/Profile mode 下使用 UME\n\n**开发者一旦在 Release/Profile mode 下使用 flutter_ume，**\n**即认同将自行承担相关风险，**\n\n**对于由此引发的事故，flutter_ume 维护方不承担**\n**任何责任。**\n\n**不建议在 Release/Profile mode 下使用，原因如下：**\n\n1. 在该环境下 VM Service 不可用，因此部分插件功能不可用\n2. 在该环境下开发者需要自行隔离分发渠道，避免将相关调试代码提交到生产环境\n\n为在 Release/Profile mode 下使用，正常接入流程中需要调整的细节：\n\n1. `pubspec.yaml` 中，`flutter_ume` 及相关插件包需要在 `dependencies` 中引入，而不是 `dev_dependencies`\n2. 调用 `PluginManager.instance.register()` 及 `UMEWidget(child: App())` 初始化方法的代码，不得由于 debug 标记剪枝（如 `kDebugMode`）\n3. 确保以上细节后，依次执行 `flutter clean`、`flutter pub get` 后再进行构建\n\n## 版本说明\n\n### 兼容性\n\n| UME 版本 | 1.12.13 | 1.22.3 | 2.0.1 | 2.2.3 | 2.5.3 | 2.8.0 | 3.0.5 | 3.3.1\n| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n| 0.1.x | ✅ | ✅ | ✅ | ✅ | ⚠️ | ⚠️ | ❌ | ❌ |\n| 0.2.x | ❌ | ❌ | ✅ | ✅ | ✅ | ⚠️ | ❌ | ❌ |\n| 0.3.x | ❌ | ❌ | ✅ | ✅ | ✅ | ✅ | ❌ | ❌ |\n| 1.0.x | ❌ | ❌ | ⚠️ | ⚠️ | ⚠️ | ⚠️ | ✅ | ✅ |\n| 1.1.x | ❌ | ❌ | ⚠️ | ⚠️ | ⚠️ | ⚠️ | ✅ | ✅ |\n\n⚠️ 意为未经过完整的兼容性测试，不建议使用。\n\n### 特例\n\n- Flutter 3.7 及以上版本请使用 `flutter_ume_kit_ui: ^1.1.0` 及以上版本\n\n### 单测覆盖率\n\n| 包 | master | develop | develop_nullsafety |\n| ---- | ---- | ---- | ---- |\n| flutter_ume | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/coverage_badge.svg) |\n| flutter_ume_kit_device | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_device/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_device/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_device/coverage_badge.svg) |\n| flutter_ume_kit_perf | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_perf/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_perf/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_perf/coverage_badge.svg) |\n| flutter_ume_kit_show_code | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_show_code/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_show_code/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_show_code/coverage_badge.svg) |\n| flutter_ume_kit_ui | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_ui/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_ui/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_ui/coverage_badge.svg) |\n| flutter_ume_kit_console | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_console/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_console/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_console/coverage_badge.svg) |\n| flutter_ume_kit_dio | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_dio/coverage_badge.svg) | N/A | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_dio/coverage_badge.svg) |\n\n### 版本号规则\n\n请参考 [Semantic versions](https://dart.dev/tools/pub/versioning#semantic-versions)\n\n### 更新日志\n\n[Changelog](./CHANGELOG_cn.md)\n\n## 开源贡献\n\n贡献文档：[Contributing](./CONTRIBUTING.md)\n\n### 贡献者\n\n感谢以下贡献者（排名不分先后）：\n\n|  |  |\n| ---- | ---- |\n| ![ShirelyC](https://avatars.githubusercontent.com/u/11439167?s=64&v=4) | [ShirelyC](https://github.com/smileShirely) |\n| ![lpylpyleo](https://avatars.githubusercontent.com/u/15264428?s=64&v=4) | [lpylpyleo](https://github.com/lpylpyleo) |\n| ![Alex Li](https://avatars.githubusercontent.com/u/15884415?s=64&v=4) | [Alex Li](https://github.com/AlexV525) |\n| ![Swain](https://avatars.githubusercontent.com/u/7621572?s=64&v=4) | [Swain](https://github.com/talisk) |\n| ![mengdouer](https://avatars.githubusercontent.com/u/58758250?s=64&v=4) | [mengdouer](https://github.com/mengdouer) |\n| ![LAIIIHZ](https://avatars.githubusercontent.com/u/35956195?s=64&v=4) | [LAIIIHZ](https://github.com/laiiihz) |\n| ![XinLei](https://avatars.githubusercontent.com/u/23734225?s=64&v=4) | [XinLei](https://github.com/Vadaski) |\n| ![suli](https://avatars.githubusercontent.com/u/5837645?s=64&v=4) | [suli](https://github.com/suli1) |\n| ![wei-spring](https://avatars.githubusercontent.com/u/8155092?s=64&v=4) | [wei-spring](https://github.com/wei-spring) |\n\n### 社区插件\n\n- [flutter_ume_kit_channel_monitor](https://pub.dev/packages/flutter_ume_kit_channel_monitor)\n  - channel 通信监控工具\n  - 源代码托管于 https://github.com/bytedance/flutter_ume/tree/master/kits/flutter_ume_kit_channel_monitor\n- [flutter_ume_kit_slow_animation](https://pub.dev/packages/flutter_ume_kit_slow_animation)\n  - 动画速度调节插件\n  - 源代码托管于 https://github.com/cfug/flutter_ume_kits\n- [flutter_ume_kit_shared_preferences](https://pub.dev/packages/flutter_ume_kit_shared_preferences)\n  - shared_preferences 调试工具\n  - 源代码托管于 https://github.com/cfug/flutter_ume_kits\n- [flutter_ume_kit_designer_check](https://pub.dev/packages/)\n  - 设计稿比对工具\n  - 源代码托管于 https://github.com/cfug/flutter_ume_kits\n- [flutter_ume_kit_clean_local_data](https://pub.dev/packages/flutter_ume_kit_clean_local_data)\n  - 清理本地数据插件\n  - 源代码托管于 https://github.com/cfug/flutter_ume_kits 。\n- [flutter_ume_kit_database_kit](https://pub.dev/packages/flutter_ume_kit_database_kit)\n  - 数据库调试插件\n  - 源代码托管于 https://github.com/cfug/flutter_ume_kits 。\n- [ume_kit_monitor](https://pub.dev/packages/ume_kit_monitor)\n  - 参数监控插件\n  - 源代码托管于 https://github.com/fastcode555/ume_kit_monitor 。\n- [json2dart_viewerffi](https://pub.dev/packages/json2dart_viewerffi)\n  - 数据库调试插件\n  - 源代码托管于 https://github.com/fastcode555/Json2Dart_Null_Safety 。\n- [json2dart_viewer](https://pub.dev/packages/json2dart_viewer)\n  - 数据库调试插件\n  - 源代码托管于 https://github.com/fastcode555/Json2Dart_Null_Safety 。\n- [memory_detector_of_kit](https://github.com/bladeofgod/memory_detector_of_kit)\n  - 内存泄漏检测插件\n- [channel_observer_of_kit](https://github.com/bladeofgod/channel_observer_of_kit)\n  - channel 调用记录监控插件\n- [flutter-ume-kit-dio-enhance](https://github.com/linversion/flutter-ume-kit-dio-enhance)\n  - 基于 flutter_ume_kit_dio 扩展了一些功能的插件\n\n### 第三方开源项目说明\n\n- 触控标记使用了 [touch_indicator](https://pub.dev/packages/touch_indicator)，颜色吸管插件使用了 [cyclop](https://pub.dev/packages/cyclop)。\n- 对 [cyclop](https://pub.dev/packages/cyclop) 进行了 [fork](https://github.com/talisk/cyclop) 并修改代码以满足需要。当 [PR](https://github.com/rxlabz/cyclop/pull/11) 合入后，我们将通过 pub 的形式依赖。\n\n## 开源协议\n\n该项目遵循 MIT 协议，详情请见 [LICENSE](./LICENSE)。\n\n## 联系开发者\n\n**可能你：**\n\n- 发现文档错误、代码有 bug\n- 使用 UME 后应用运行产生异常\n- 发现新版本 Flutter 无法兼容\n- 有好的点子或产品建议\n\n上述情况均可以[提一个 issue](./CONTRIBUTING.md#如何提-issue)。\n\n**可能你：**\n\n- 想与开发者交流\n- 想与更多 Flutter 开发者交流\n- 想与 UME 开展交流或合作\n\n欢迎[加入字节跳动 Flutter 交流群](https://applink.feishu.cn/client/chat/chatter/add_by_link?link_token=67au2f75-3783-41b0-8868-0fc0178f1fd8)\n\n或随时[联系开发者](mailto:sunkai.dev@bytedance.com)\n"
        },
        {
          "name": "README_en.md",
          "type": "blob",
          "size": 19.3369140625,
          "content": "# flutter_ume\n\n[简体中文](./README.md)\n\nUME is an in-app debug kits platform for Flutter apps.\n\n[![platforms](https://img.shields.io/badge/platforms-ios%20%7C%20android%20%7C%20web%20%7C%20macos%20%7C%20windows%20%7C%20linux-lightgrey)](https://pub.dev/packages/flutter_ume) [![license](https://img.shields.io/github/license/bytedance/flutter_ume.svg)](https://github.com/bytedance/flutter_ume/blob/master/LICENSE) [![latest](https://img.shields.io/pub/vpre/flutter_ume.svg)](https://pub.dev/packages/flutter_ume) ![![likes](https://badges.bar/flutter_ume/likes)](https://pub.dev/packages/flutter_ume/score) ![![popularity](https://badges.bar/flutter_ume/popularity)](https://pub.dev/packages/flutter_ume/score) ![![pub points](https://badges.bar/flutter_ume/pub%20points)](https://pub.dev/packages/flutter_ume/score)\n\n<img src=\"https://github.com/bytedance/flutter_ume/raw/master/ume_logo_256.png\" width = \"128\" height = \"128\" alt=\"banner\" />\n\n**UME Kits competition is in full swing!** Rich prizes are waiting for you.\n\nSee https://mp.weixin.qq.com/s/RuwiiQAdrGqI00fDhUO77g for more details.\n\n<img src=\"https://github.com/bytedance/flutter_ume/raw/master/apk_qrcode.png\" width = \"256\" height = \"256\" alt=\"banner\" />\n\nScan QR code or click link to download apk. Try it now!\nhttps://github.com/bytedance/flutter_ume/releases/download/v0.2.1.0/app-debug.apk\n\nThere are 13 plugin kits built in the latest open source version of UME.\nDeveloper could create custom plugin kits, and integrate them into UME.\nVisit [Develop plugin kits for UME](#develop-plugin-kits-for-ume) for more details.\n\n- [flutter_ume](#flutter_ume)\n  - [Quick Start](#quick-start)\n  - [IMPORTANT](#important)\n  - [Features](#features)\n  - [Develop plugin kits for UME](#develop-plugin-kits-for-ume)\n    - [Access the nested widget debug kits quickly](#access-the-nested-widget-debug-kits-quickly)\n  - [How to use UME in Release/Profile mode](#how-to-use-ume-in-releaseprofile-mode)\n  - [About version](#about-version)\n    - [Compatibility](#compatibility)\n    - [Coverage](#coverage)\n    - [Version upgrade rules](#version-upgrade-rules)\n    - [Null-safety](#null-safety)\n    - [Change log](#change-log)\n  - [Contributing](#contributing)\n    - [Contributors](#contributors)\n    - [About the third-party open-source project dependencies](#about-the-third-party-open-source-project-dependencies)\n  - [LICENSE](#license)\n  - [Contact the author](#contact-the-author)\n\n## Quick Start\n\n**All packages whose names are prefixed with `flutter_ume_kit_` are function**\n**plug-ins of UME, and users can access them according to demand**\n\n1. Edit `pubspec.yaml`, and add dependencies.\n\n    **↓ Null-safety version, compatible with Flutter 2.x**\n\n    ``` yaml\n    dev_dependencies: # Don't use UME in release mode\n      flutter_ume: ^0.3.0+1\n      flutter_ume_kit_ui: ^0.3.0+1\n      flutter_ume_kit_device: ^0.3.0\n      flutter_ume_kit_perf: ^0.3.0\n      flutter_ume_kit_show_code: ^0.3.0\n      flutter_ume_kit_console: ^0.3.0\n      flutter_ume_kit_dio: ^0.3.0\n    ```\n\n    **↓ Non-null-safety version, compatible with Flutter 1.x**\n\n    ``` yaml\n    dev_dependencies: # Don't use UME in release mode\n      flutter_ume: ^0.1.1\n      flutter_ume_kit_ui: ^0.1.1.1\n      flutter_ume_kit_device: ^0.1.1\n      flutter_ume_kit_perf: ^0.1.1\n      flutter_ume_kit_show_code: ^0.1.1\n      flutter_ume_kit_console: ^0.1.1 \n    ```\n\n2. Run `flutter pub get`\n3. Import packages\n\n    ``` dart\n    import 'package:flutter_ume/flutter_ume.dart'; // UME framework\n    import 'package:flutter_ume_kit_ui/flutter_ume_kit_ui.dart'; // UI kits\n    import 'package:flutter_ume_kit_perf/flutter_ume_kit_perf.dart'; // Performance kits\n    import 'package:flutter_ume_kit_show_code/flutter_ume_kit_show_code.dart'; // Show Code\n    import 'package:flutter_ume_kit_device/flutter_ume_kit_device.dart'; // Device info\n    import 'package:flutter_ume_kit_console/flutter_ume_kit_console.dart'; // Show debugPrint\n    import 'package:flutter_ume_kit_dio/flutter_ume_kit_dio.dart'; // Dio Inspector\n    ```\n\n4. Edit main method of your app, register plugin kits and initial UME\n\n    ``` dart\n    void main() {\n      if (kDebugMode) {\n        PluginManager.instance                                 // Register plugin kits\n          ..register(WidgetInfoInspector())\n          ..register(WidgetDetailInspector())\n          ..register(ColorSucker())\n          ..register(AlignRuler())\n          ..register(ColorPicker())                            // New feature\n          ..register(TouchIndicator())                         // New feature\n          ..register(Performance())\n          ..register(ShowCode())\n          ..register(MemoryInfoPage())\n          ..register(CpuInfoPage())\n          ..register(DeviceInfoPanel())\n          ..register(Console())\n          ..register(DioInspector(dio: dio));                  // Pass in your Dio instance\n        // After flutter_ume 0.3.0\n        runApp(UMEWidget(child: MyApp(), enable: true));\n        // Before flutter_ume 0.3.0\n        runApp(injectUMEWidget(child: MyApp(), enable: true));\n      } else {\n        runApp(MyApp());\n      }\n    }\n    ```\n\n5. `flutter run` for running\n   or `flutter build apk --debug`、`flutter build ios --debug` for building productions.\n\n  > Some functions rely on VM Service, and additional parameters need to be added for local operation to ensure that it can connect to the VM Service.\n  >\n  > Flutter 2.0.x, 2.2.x and other versions run on real devices, `flutter run` needs to add the `--disable-dds` parameter.\n  > After [Pull Request #80900](https://github.com/flutter/flutter/pull/80900) merging, `--disable-dds` was renamed to `--no-dds`.\n\n## IMPORTANT\n\n**From `0.1.1`/`0.2.1` version，we don't need set `useRootNavigator: false`.**\nThe following section only applies to versions before version `0.1.1`/`0.2.1` .\n\n<s>\n\nSince UME manages the routing stack at the top level, methods such as `showDialog` use `rootNavigator` to pop up by default,\ntherefore **must** pass in the parameter `useRootNavigator: false` in `showDialog`, `showGeneralDialog` and other 'show dialog' methods to avoid navigator errors.\n\n``` dart\nshowDialog(\n  context: context,\n  builder: (ctx) => AlertDialog(\n        title: const Text('Dialog'),\n        actions: <Widget>[\n          TextButton(\n              onPressed: () => Navigator.pop(context),\n              child: const Text('OK'))\n        ],\n      ),\n  useRootNavigator: false); // <===== It's very IMPORTANT!\n```\n\n</s>\n\n## Features\n\nThere are 13 plugin kits built in the current open source version of UME.\n\n<table border=\"1\" width=\"100%\">\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>UI kits</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/widget_info.png\" width=\"100%\" alt=\"Widget Info\" /></br>Widget Info</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/widget_detail.png\" width=\"100%\" alt=\"Widget Detail\" /></br>Widget Detail</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/align_ruler.png\" width=\"100%\" alt=\"Align Ruler\" /></br>Align Ruler</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/color_picker.png\" width=\"100%\" alt=\"Color Picker\" /></br>Color Picker</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/color_sucker.png\" width=\"100%\" alt=\"Color Sucker\" /></br>Color Sucker</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/touch_indicator.png\" width=\"100%\" alt=\"Touch Indicator\" /></br>Touch Indicator</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Performance Kits</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/memory_info.png\" width=\"100%\" alt=\"Memory Info\" /></br>Memory Info</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/perf_overlay.png\" width=\"100%\" alt=\"Perf Overlay\" /></br>Perf Overlay</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Device Info Kits</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/cpu_info.png\" width=\"100%\" alt=\"CPU Info\" /></br>CPU Info</td>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/device_info.png\" width=\"100%\" alt=\"Device Info\" /></br>Device Info</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Show Code</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/show_code.png\" width=\"100%\" alt=\"Show Code\" /></br>Show Code</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Console</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/console.png\" width=\"100%\" alt=\"Console\" /></br>Console</td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><p>Dio Inspector</p></td>\n    </tr>\n    <tr>\n        <td width=\"33.33%\" align=\"center\"><img src=\"https://github.com/bytedance/flutter_ume/raw/master/screenshots/dio_inspector.png\" width=\"100%\" alt=\"Dio Inspector\" /></br>Dio Inspector</td>\n    </tr>\n</table>\n\n## Develop plugin kits for UME\n\n> UME plugins are located in the `./kits` directory, and each one is a `package`.\n> You can refer to the example in [`./custom_plugin_example`](./custom_plugin_example/) about this chapter.\n\n1. Run `flutter create -t package custom_plugin` to create your custom plugin kit, it could be `package` or `plugin`.\n2. Edit `pubspec.yaml` of the custom plugin kit to add UME framework dependency.\n\n    ``` yaml\n    dependencies:\n      flutter_ume: '>=0.3.0 <0.4.0'\n    ```\n\n3. Create the class of the plugin kit which should implement `Pluggable`.\n\n    ``` dart\n    import 'package:flutter_ume/flutter_ume.dart';\n\n    class CustomPlugin implements Pluggable {\n      CustomPlugin({Key key});\n\n      @override\n      Widget buildWidget(BuildContext context) => Container(\n        color: Colors.white\n        width: 100,\n        height: 100,\n        child: Center(\n          child: Text('Custom Plugin')\n        ),\n      ); // The panel of the plugin kit\n\n      @override\n      String get name => 'CustomPlugin'; // The name of the plugin kit\n\n      @override\n      String get displayName => 'CustomPlugin';\n\n      @override\n      void onTrigger() {} // Call when tap the icon of plugin kit\n\n      @override\n      ImageProvider<Object> get iconImageProvider => NetworkImage('url'); // The icon image of the plugin kit\n    }\n    ```\n\n4. Use your custom plugin kit in project\n\n    1. Edit `pubspec.yaml` of host app project to add `custom_plugin` dependency.\n\n        ``` yaml\n        dev_dependencies:\n          custom_plugin:\n            path: path/to/custom_plugin\n        ```\n\n    2. Run `flutter pub get`\n\n    3. Import package\n\n        ``` dart\n        import 'package:custom_plugin/custom_plugin.dart';\n        ```\n\n5. Edit main method of your app, register your custom_plugin plugin kit\n\n    ``` dart\n    if (kDebugMode) {\n      PluginManager.instance\n        ..register(CustomPlugin());\n      runApp(\n        UMEWidget(\n          child: MyApp(), \n          enable: true\n        )\n      );\n    } else {\n      runApp(MyApp());\n    }\n    ```\n\n6. Run your app\n\n### Access the nested widget debug kits quickly\n\nWe introduce the `PluggableWithNestedWidget` from `0.3.0`. It is used to insert nested Widgets in the Widget tree and quickly access embedded kits with nested widget.\n\nFor more details, see [./kits/flutter_ume_kit_ui/lib/components/color_picker/color_picker.dart](https://github.com/bytedance/flutter_ume/blob/master/kits/flutter_ume_kit_ui/lib/components/color_picker/color_picker.dart) and [./kits/flutter_ume_kit_ui/lib/components/touch_indicator/touch_indicator.dart](https://github.com/bytedance/flutter_ume/blob/master/kits/flutter_ume_kit_ui/lib/components/touch_indicator/touch_indicator.dart).\n\nThe key steps are as follows:\n\n1. The class of your plugin should implement `PluggableWithNestedWidget`.\n2. Implements `Widget buildNestedWidget(Widget child)`. Handling the nested widgets and returning the new Widget.\n\n## How to use UME in Release/Profile mode\n\n**Once you use flutter_ume in Release/Profile mode, you agree that you will**\n**bear the relevant risks by yourself.**\n\n**The maintainer of flutter_ume does not assume any responsibility for the accident**\n**caused by this.**\n\n**We recommend not to use it in Release/Profile mode for the following reasons:**\n\n1. VM Service is not available in these environments, so some functions are not available\n2. In this environment, developers need to isolate the app distribution channels by themselves to avoid submitting relevant debugging code to the production environment\n\nIn order to use in Release/Profile mode, the details that need to be adjusted in the normal access process:\n\n1. In `pubspec.yaml`, `flutter_ume` and plugins should be write below `dependencies` rather than `dev_dependencies`.\n2. Don't put the code which call `PluginManager.instance.register()` and `UMEWidget(child: App())` into conditionals which represent debug mode. (Such as `kDebugMode`)\n3. Ensure the above details, run `flutter clean` and `flutter pub get`, then build your app.\n\n## About version\n\n### Compatibility\n\n| UME version | Flutter 1.12.13 | Flutter 1.22.3 | Flutter 2.0.1 | Flutter 2.2.3 | Flutter 2.5.3 |\n| ---- | ---- | ---- | ---- | ---- | ---- |\n| 0.1.x | ✅ | ✅ | ✅ | ✅ | ⚠️ |\n| 0.2.x | ❌ | ❌ | ✅ | ✅ | ✅ |\n| 0.3.x | ❌ | ❌ | ✅ | ✅ | ✅ |\n\n⚠️ means the version has not been fully tested for compatibility.\n\n⚠️ means the version has not been fully tested for compatibility.\n### Coverage\n\n| Package | master | develop | develop_nullsafety |\n| ---- | ---- | ---- | ---- |\n| flutter_ume | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/coverage_badge.svg) |\n| flutter_ume_kit_device | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_device/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_device/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_device/coverage_badge.svg) |\n| flutter_ume_kit_perf | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_perf/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_perf/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_perf/coverage_badge.svg) |\n| flutter_ume_kit_show_code | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_show_code/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_show_code/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_show_code/coverage_badge.svg) |\n| flutter_ume_kit_ui | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_ui/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_ui/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_ui/coverage_badge.svg) |\n| flutter_ume_kit_console | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_console/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop/kits/flutter_ume_kit_console/coverage_badge.svg) | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_console/coverage_badge.svg) |\n| flutter_ume_kit_dio | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/master/kits/flutter_ume_kit_dio/coverage_badge.svg) | N/A | ![Coverage](https://raw.githubusercontent.com/bytedance/flutter_ume/develop_nullsafety/kits/flutter_ume_kit_dio/coverage_badge.svg) |\n\n### Version upgrade rules\n\nPlease refer to [Semantic versions](https://dart.dev/tools/pub/versioning#semantic-versions) for details.\n\n### Null-safety\n\n| Package | Suggest version |\n| ---- | ---- |\n| flutter_ume | 0.3.0+1 |\n| flutter_ume_kit_ui | 0.3.0+1 |\n| flutter_ume_kit_device | 0.3.0 |\n| flutter_ume_kit_perf | 0.3.0 |\n| flutter_ume_kit_show_code | 0.3.0 |\n| flutter_ume_kit_console | 0.3.0 |\n| flutter_ume_kit_dio | 0.3.0 |\n\n### Change log\n\n[Changelog](./CHANGELOG.md)\n\n## Contributing\n\nContributing rules: [Contributing](./CONTRIBUTING_en.md)\n\n### Contributors\n\nThanks to the following contributors (names not listed in order)：\n\n|  |  |\n| ---- | ---- |\n| ![ShirelyC](https://avatars.githubusercontent.com/u/11439167?s=64&v=4) | [ShirelyC](https://github.com/smileShirely) |\n| ![lpylpyleo](https://avatars.githubusercontent.com/u/15264428?s=64&v=4) | [lpylpyleo](https://github.com/lpylpyleo) |\n| ![Alex Li](https://avatars.githubusercontent.com/u/15884415?s=64&v=4) | [Alex Li](https://github.com/AlexV525) |\n| ![Swain](https://avatars.githubusercontent.com/u/7621572?s=64&v=4) | [Swain](https://github.com/talisk) |\n| ![harbor](https://avatars.githubusercontent.com/u/58758250?v=4) | [harbor](https://github.com/zzm990321) |\n\n### About the third-party open-source project dependencies\n\n- The TouchIndicator use the pub [touch_indicator](https://pub.dev/packages/touch_indicator), the ColorPicker use the pub [cyclop](https://pub.dev/packages/cyclop).\n- We [fork](https://github.com/talisk/cyclop) the package [cyclop](https://pub.dev/packages/cyclop) and modify some code meet our functional needs. We should depend cyclop by pub version after the [PR](https://github.com/rxlabz/cyclop/pull/11) being merged.\n\n## LICENSE\n\nThis project is licensed under the MIT License - visit the [LICENSE](./LICENSE) for details.\n\n## Contact the author\n\n**Maybe...**\n\n- Found a bug in the code, or an error in the documentation\n- Produces an exception when you use the UME\n- UME is not compatible with the new version Flutter\n- Have a good idea or suggestion\n\nYou can [submit an issue](./CONTRIBUTING_en.md#how-to-raise-an-issue) in any of the above situations.\n\n**Maybe...**\n\n- Communicate with the author\n- Communicate with more community developers\n- Cooperate with UME\n\nWelcome to [Join the ByteDance Flutter Exchange Group](https://applink.feishu.cn/client/chat/chatter/add_by_link?link_token=67au2f75-3783-41b0-8868-0fc0178f1fd8).\n\nOr contact [author](mailto:sunkai.dev@bytedance.com).\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.03125,
          "content": "include: package:lints/core.yaml"
        },
        {
          "name": "apk_qrcode.png",
          "type": "blob",
          "size": 9.9072265625,
          "content": null
        },
        {
          "name": "coverage",
          "type": "tree",
          "content": null
        },
        {
          "name": "coverage_badge.svg",
          "type": "blob",
          "size": 1.001953125,
          "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"94\" height=\"20\">\n  <linearGradient id=\"b\" x2=\"0\" y2=\"100%\">\n    <stop offset=\"0\" stop-color=\"#bbb\" stop-opacity=\".1\"/>\n    <stop offset=\"1\" stop-opacity=\".1\"/>\n  </linearGradient>\n  <clipPath id=\"a\">\n    <rect width=\"94\" height=\"20\" rx=\"3\" fill=\"#fff\"/>\n  </clipPath>\n  <g clip-path=\"url(#a)\">\n    <path fill=\"#555\" d=\"M0 0h59v20H0z\"/>\n    <path fill=\"#88ca03\" d=\"M59 0h35v20H59z\"/>\n    <path fill=\"url(#b)\" d=\"M0 0h94v20H0z\"/>\n  </g>\n  <g fill=\"#fff\" text-anchor=\"middle\" font-family=\"DejaVu Sans,Verdana,Geneva,sans-serif\" font-size=\"110\">\n    <text x=\"305\" y=\"150\" fill=\"#010101\" fill-opacity=\".3\" transform=\"scale(.1)\" textLength=\"490\">coverage</text>\n    <text x=\"305\" y=\"140\" transform=\"scale(.1)\" textLength=\"490\">coverage</text>\n    <text x=\"755\" y=\"150\" fill=\"#010101\" fill-opacity=\".3\" transform=\"scale(.1)\" textLength=\"250\">91%</text>\n    <text x=\"755\" y=\"140\" transform=\"scale(.1)\" textLength=\"250\">91%</text>\n  </g>\n</svg>\n"
        },
        {
          "name": "custom_plugin_example",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "kits",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "melos.yaml",
          "type": "blob",
          "size": 0.8671875,
          "content": "name: byte_live_demo\n\npackages:\n  - kits/flutter_ume_kit_*\n  - example\n  - custom_plugin_example\n  - .\n\ncommand:\n  bootstrap:\n    usePubspecOverrides: true\n    runPubGetInParallel: false\n\nscripts:\n  run:demo:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter run\"\n    description: Run demo app.\n    select-package:\n      scope:\n        - 'example'\n\n  build:example_android:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build apk --no-pub\"\n    description: Build a specific example app for Android.\n    select-package:\n      dir-exists:\n        - android\n      scope:\n        - 'example'\n\n  build:example_ios:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build ios --no-codesign --no-pub\"\n    description: Build a specific example app for iOS.\n    select-package:\n      dir-exists:\n        - ios\n      scope:\n        - 'example'"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.72265625,
          "content": "name: flutter_ume\ndescription: UME is an in-app debug kits platform for Flutter apps. Produced by Flutter Infra team of ByteDance.\nversion: 1.1.2\nhomepage: https://github.com/bytedance/flutter_ume\n\nenvironment:\n  sdk: \">=2.12.0 <3.0.0\"\n  flutter: \">=2.0.0\"\n\ndependencies:\n  flutter:\n    sdk: flutter\n  flutter_localizations:\n    sdk: flutter\n\n  shared_preferences: ^2.0.15\n  vm_service: \">=9.4.0 <12.0.0\"\n  tuple: ^2.0.0\n\ndev_dependencies:\n  flutter_lints: any\n  flutter_test:\n    sdk: flutter\n  melos: ^3.1.0\n  mockito: ^5.3.2\n  flutter_coverage_badge:\n    git:\n      url: https://github.com/smileShirely/flutter_coverage_badge.git\n      ref: 59b7580f406bb712e9d9049c8c99212946e34f65\n  lints: ^2.0.0\n\nflutter:\n  uses-material-design: true\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "ume_banner.png",
          "type": "blob",
          "size": 195.4921875,
          "content": null
        },
        {
          "name": "ume_logo_256.png",
          "type": "blob",
          "size": 32.765625,
          "content": null
        }
      ]
    }
  ]
}