{
  "metadata": {
    "timestamp": 1736710518592,
    "page": 59,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "letsar/flutter_slidable",
      "stars": 2741,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.46875,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\ncoverage/\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n\npubspec.lock\n"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 8874f21e79d7ec66d0457c7ab338348e31b17f1d\n  channel: stable\n\nproject_type: package\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.974609375,
          "content": "## 3.1.2\n\n### Fixed\n* Use Object.hash instead of hashValues.\n\n## 3.1.1\n\n### Fixed\n* An issue when having only one action pane set [#311](https://github.com/letsar/flutter_slidable/issues/311)\n* An issue with delete threshold [#230](https://github.com/letsar/flutter_slidable/issues/230) \n\n## 3.1.0\n\n### Added\n* A way to provide a controller to the Slidable.\n  \n## 3.0.1\n\n## Changed\n* Remove deprecation use of `primary` and `surface` parameters from OutlinedButton.styleFrom method. (See https://github.com/letsar/flutter_slidable/pull/443)\n\n## 3.0.0\n\n### Changed\n* Minimum version of Flutter (3.7.0 now)\n\n## 2.0.0\n### Changed\n* Minimum version of Flutter (3.0.0 now) and Dart (2.17.0 now).\n\n## 1.3.2\n### Fixed\n* ClipBehavior.none issue (https://github.com/letsar/flutter_slidable/issues/361).\n\n## 1.3.1\n### Fixed\n* Rare LateInitializationError with DrawerMotion (https://github.com/letsar/flutter_slidable/issues/289).\n* Issue with shadow content (https://github.com/letsar/flutter_slidable/issues/279).\n\n## 1.3.0\n### Added\n* Padding and BorderRadius to SlidableAction.\n\n## 1.2.1\n### Fixed\n* Build warning\n\n## 1.2.0\n### Added\n* A way to automatically close other Slidables within the same group by tapping on them.\n* Add a dragDismissible parameter on ActionPane.\n### Fixed\n* The RTL issue (#244).\n\n## 1.1.0\n### Changed\n* Created a totally different notification system in order to be more flexible.\n* Deprecated SlidableNotificationListener in favor of SlidableAutoCloseBehavior.\n\n## 1.0.0\nSame as 1.0.0-dev.9. This is just for making it clear that it's now stable.\n\n## 1.0.0-dev.9\n### Fixed\n* Fixes an issue where we click on the Slidable instead of dragging it (https://github.com/letsar/flutter_slidable/pull/235).\n\n## 1.0.0-dev.8\n### Fixed\n* Fixes an issue where the Dismissible animation stopped in middle when the gesture was too fast.\n\n## 1.0.0-dev.7\n### Fixed\n* Fixes an issue where the Slidable animation stopped in middle when the gesture was too fast.\n\n## 1.0.0-dev.6\n### Fixed\n* Fixes an issue preventing the actionPaneType to be updated when it animates (https://github.com/letsar/flutter_slidable/issues/226).\n\n## 1.0.0-dev.5\n### Fixed\n* Fixes an issue preventing the Slidable to reach the extentRatio manually (https://github.com/letsar/flutter_slidable/issues/225).\n\n## 1.0.0-dev.4\n### Added\n* ResizeRequest is now available, and the SlidableController.dismiss method can be used from outside.\n\n## 1.0.0-dev.3\n### Fixed\n* Fixes Dismissal issue with endActionPane (https://github.com/letsar/flutter_slidable/issues/216).\n\n## 1.0.0-dev.2\n### Changed\n* Flutter Favorite package logo\n\n## 1.0.0-dev.1\n### Changed\n* Complete package rewriting in order to be more flexible and simple to use.\n\n## 0.6.0\n### Added\n* Null Safety Support\n\n## 0.5.7\n### Fixed\n* Formatting issues\n\n## 0.5.6\n### Fixed\n* Color issue in SlideAction\n\n## 0.5.5\n### Fixed\n* Static Analysis issues\n\n## 0.5.4\n### Added\n* Ripple effect when tapping on the IconSlideAction (https://github.com/letsar/flutter_slidable/pull/89)\n* Option to make the widget non-dismissible by dragging (https://github.com/letsar/flutter_slidable/pull/101)\n\n## 0.5.3\n### Fixed\n* Fix SlidableDrawerActionPane when different than 2 actions (https://github.com/letsar/flutter_slidable/pull/74).\n\n## 0.5.2\n### Fixed\n* Add check for null value in dismissal field, in getter for _dismissThreshold (https://github.com/letsar/flutter_slidable/pull/71).\n\n## 0.5.1\n### Fixed\n* Fix SlidableDrawerActionPane onTap issue (https://github.com/letsar/flutter_slidable/pull/73).\n\n## 0.5.0\n### Added\n* `iconWidget` parameter for SlideAction which allows full customization of the\n  displayed icon.\n\n### Modified\n* Change the SlidableDelegate to a widget. The field is renamed `actionPane`.\n* Change the SlideToDismissDelegate to a SlidableDismissal widget that takes another widget as a child. The field is renamed `dismissal`.\n\n## 0.4.9\n### Fixed\n* Fix the end extend of actions in dismiss animation (https://github.com/letsar/flutter_slidable/pull/38).\n\n## 0.4.8\n### Added\n* onSlideAnimationChanged and onSlideIsOpenChanged on `SlidableController`.\n\n## 0.4.7\n### Fixed\n* https://github.com/letsar/flutter_slidable/issues/31 (Issue with dismiss animation).\n\n## 0.4.6\n### Modified\n* Reduce the possibilities for the https://github.com/flutter/flutter/issues/11895 issue to happen.\n\n## 0.4.5\n### Added\n* The `foregroundColor` parameter on `IconSlideAction` class.\n\n## 0.4.4\n### Added\n* The `closeOnCanceled` parameter on `SlideToDismissDelegate` classes.\n\n## 0.4.3\n### Fixed\n* https://github.com/letsar/flutter_slidable/issues/23 (Issue with Drawer delegate when different action count).\n\n## 0.4.2\n### Fixed\n* https://github.com/letsar/flutter_slidable/issues/22 and https://github.com/letsar/flutter_slidable/issues/24 (Issue with controller).\n\n## 0.4.1\n### Added\n* The `SlidableController` class.\n* The `controller` parameter on `Slidable` constructors to enable keeping only one `Slidable` open.\n\n## 0.4.0\n### Added\n* The `SlidableRenderingMode` enum.\n* The `SlideActionType` enum.\n* The `SlideToDismissDelegate` classes.\n\n### Modified\n* Added a renderingMode parameter in the `SlideActionBuilder` signature.\n\n## 0.3.2\n### Added\n* The `enabled` parameter on `Slidable` constructors to enable or disable the slide effect (enabled by default). \n\n## 0.3.1\n### Fixed\n* https://github.com/letsar/flutter_slidable/issues/11 (slide action not rebuild after controller dismissed).\n\n## 0.3.0\n### Added\n* The `closeOnTap` parameter on slide actions to close when a action has been tapped.\n* The `closeOnScroll` parameter on `Slidable` to close when the nearest `Scrollable` starts to scroll.\n* The static `Slidable.of` function.\n\n### Changed\n* The `dragExtent` field in `SlidableDelegateContext` has been changed to `dragSign`. \n\n## 0.2.0\n### Added\n* `Slidable.builder` constructor.\n* Vertical sliding.\n\n## Changed\n* The slide actions are now hosted in a `SlideActionDelegate` instead of `List<Widget>` inside the `Slidable` widget.\n* The `leftActions` have been renamed to `actions`.\n* The `rightActions` have been renamed to `secondaryActions`.\n\n## 0.1.0\n* Initial Open Source release."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2018 Romain Rastel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.96875,
          "content": "<!-- [![Build][github_action_badge]][github_action] -->\n[![Pub][pub_badge]][pub] [![BuyMeACoffee][buy_me_a_coffee_badge]][buy_me_a_coffee]\n\n[<img src=\"https://raw.githubusercontent.com/letsar/flutter_slidable/assets/flutter_favorite.png\" width=\"100\" />][flutter_favorite] **Slidable is a [Flutter Favorite][flutter_favorite] package!**\n\n\n# flutter_slidable\n\nA Flutter implementation of slidable list item with directional slide actions that can be dismissed.\n\n## Sponsors\n\nOur top sponsors are shown below! [[Become a Sponsor](https://github.com/sponsors/letsar)]\n\n<table>    \n    <tbody>\n        <tr>\n            <td align=\"center\">\n                <a href=\"https://getstream.io/chat/flutter/tutorial/?utm_source=PubDev&utm_medium=Github_Repo_Content_Ad&utm_content=Developer&utm_campaign=PubDev_Jan2022_FlutterChat&utm_term=slidable\" target=\"_blank\"><img width=\"250px\" src=\"https://stream-blog.s3.amazonaws.com/blog/wp-content/uploads/fc148f0fc75d02841d017bb36e14e388/Stream-logo-with-background-.png\"/></a><br/><span><a href=\"https://getstream.io/chat/flutter/tutorial/?utm_source=PubDev&utm_medium=Github_Repo_Content_Ad&utm_content=Developer&utm_campaign=PubDev_Jan2022_FlutterChat&utm_term=slidable\" target=\"_blank\">Try the Flutter Chat Tutorial &nbsp💬</a></span>\n            </td>            \n        </tr>\n    </tbody>\n</table>\n\n## Migration from 0.6.0\n\nYou can read this small guide to migrate from the 0.6 to the 1.0 version: https://github.com/letsar/flutter_slidable/wiki/Migration-from-version-0.6.0-to-version-1.0.0\n\n## Features\n\n* Accepts start (left/top) and end (right/bottom) action panes.\n* Can be dismissed.\n* 4 built-in action panes.\n* 2 built-in slide action widgets.\n* 1 built-in dismiss animation.\n* You can easily create custom layouts and animations.\n* You can use a builder to create your slide actions if you want special effects during animation.\n* Closes when a slide action has been tapped (overridable).\n* Closes when the nearest `Scrollable` starts to scroll (overridable).\n* Option to disable the slide effect easily.\n\n## Install\n\nIn the `pubspec.yaml` of your flutter project, add the following dependency:\n\n```yaml\ndependencies:\n  flutter_slidable: <latest_version>\n```\n\nIn your library add the following import:\n\n```dart\nimport 'package:flutter_slidable/flutter_slidable.dart';\n```\n\n## Getting started\n\nExample:\n\n```dart\nSlidable(\n  // Specify a key if the Slidable is dismissible.\n  key: const ValueKey(0),\n\n  // The start action pane is the one at the left or the top side.\n  startActionPane: ActionPane(\n    // A motion is a widget used to control how the pane animates.\n    motion: const ScrollMotion(),\n\n    // A pane can dismiss the Slidable.\n    dismissible: DismissiblePane(onDismissed: () {}),\n\n    // All actions are defined in the children parameter.\n    children: const [\n      // A SlidableAction can have an icon and/or a label.\n      SlidableAction(\n        onPressed: doNothing,\n        backgroundColor: Color(0xFFFE4A49),\n        foregroundColor: Colors.white,\n        icon: Icons.delete,\n        label: 'Delete',\n      ),\n      SlidableAction(\n        onPressed: doNothing,\n        backgroundColor: Color(0xFF21B7CA),\n        foregroundColor: Colors.white,\n        icon: Icons.share,\n        label: 'Share',\n      ),\n    ],\n  ),\n\n  // The end action pane is the one at the right or the bottom side.\n  endActionPane: const ActionPane(\n    motion: ScrollMotion(),\n    children: [\n      SlidableAction(\n        // An action can be bigger than the others.\n        flex: 2,\n        onPressed: doNothing,\n        backgroundColor: Color(0xFF7BC043),\n        foregroundColor: Colors.white,\n        icon: Icons.archive,\n        label: 'Archive',\n      ),\n      SlidableAction(\n        onPressed: doNothing,\n        backgroundColor: Color(0xFF0392CF),\n        foregroundColor: Colors.white,\n        icon: Icons.save,\n        label: 'Save',\n      ),\n    ],\n  ),\n\n  // The child of the Slidable is what the user sees when the\n  // component is not dragged.\n  child: const ListTile(title: Text('Slide me')),\n),\n```\n\n## Motions\n\nAny `ActionPane` has a motion parameter which allow you to define how the pane animates when the user drag the `Slidable`.\n\n### Behind Motion\n\nThe actions appear as if they where behind the `Slidable`:\n\n![Behind Motion][behind_motion]\n\n### Drawer Motion\n\nAnimate the actions as if they were drawers, when the `Slidable` is moving:\n\n![Drawer Motion][drawer_motion]\n\n### Scroll Motion\n\nThe actions follow the `Slidable` while it's moving:\n\n![Scroll Motion][scroll_motion]\n\n### Stretch Motion\n\nAnimate the actions as if they were streched while the `Slidable` is moving:\n\n![Stretch Motion][stretch_motion]\n\n### Controller\n\nYou can use ```SlidableController``` to open or close the actions programmatically:\n\n```dart\nfinal controller = SlidableController();\n\n// ...\n\nSlidable(\n  controller: controller,\n  // ...\n);\n\n// ...\n\n// Open the actions\nvoid _handleOpen() {\n  controller.openEndActionPane();\n  // OR\n  //controller.openStartActionPane();\n}\n\nvoid _handleOpen() {\n  controller.close();\n}\n```\n\n## FAQ\n\nYou can read the FAQ here: https://github.com/letsar/flutter_slidable/wiki/FAQ\n\n## Sponsoring\n\nI'm working on my packages on my free-time, but I don't have as much time as I would. If this package or any other package I created is helping you, please consider to sponsor me so that I can take time to read the issues, fix bugs, merge pull requests and add features to these packages.\n\n## Contributions\n\nFeel free to contribute to this project.\n\nIf you find a bug or want a feature, but don't know how to fix/implement it, please fill an [issue][issue].  \nIf you fixed a bug or implemented a feature, please send a [pull request][pr].\n\n<!-- Links -->\n[github_action_badge]: https://github.com/letsar/flutter_slidable/workflows/Build/badge.svg\n[github_action]: https://github.com/letsar/flutter_slidable/actions\n[pub_badge]: https://img.shields.io/pub/v/flutter_slidable.svg\n[pub]: https://pub.dartlang.org/packages/flutter_slidable\n[codecov]: https://codecov.io/gh/letsar/flutter_slidable\n[codecov_badge]: https://codecov.io/gh/letsar/flutter_slidable/branch/main/graph/badge.svg\n[buy_me_a_coffee]: https://www.buymeacoffee.com/romainrastel\n[buy_me_a_coffee_badge]: https://img.buymeacoffee.com/button-api/?text=Donate&emoji=&slug=romainrastel&button_colour=29b6f6&font_colour=000000&font_family=Cookie&outline_colour=000000&coffee_colour=FFDD00\n[flutter_favorite_badge]: https://raw.githubusercontent.com/letsar/flutter_slidable/assets/flutter_favorite.png\n[flutter_favorite]: https://flutter.dev/docs/development/packages-and-plugins/favorites\n[behind_motion]: https://raw.githubusercontent.com/letsar/flutter_slidable/assets/behind_motion.gif\n[drawer_motion]: https://raw.githubusercontent.com/letsar/flutter_slidable/assets/drawer_motion.gif\n[scroll_motion]: https://raw.githubusercontent.com/letsar/flutter_slidable/assets/scroll_motion.gif\n[stretch_motion]: https://raw.githubusercontent.com/letsar/flutter_slidable/assets/stretch_motion.gif\n[issue]: https://github.com/letsar/flutter_slidable/issues\n[pr]: https://github.com/letsar/flutter_slidable/pulls\n"
        },
        {
          "name": "all_lint_rules.yaml",
          "type": "blob",
          "size": 5.697265625,
          "content": "linter:\n  rules:\n    - always_declare_return_types\n    - always_put_control_body_on_new_line\n    - always_put_required_named_parameters_first\n    - always_require_non_null_named_parameters\n    - always_specify_types\n    - always_use_package_imports\n    - annotate_overrides\n    - avoid_annotating_with_dynamic\n    - avoid_as\n    - avoid_bool_literals_in_conditional_expressions\n    - avoid_catches_without_on_clauses\n    - avoid_catching_errors\n    - avoid_classes_with_only_static_members\n    - avoid_double_and_int_checks\n    - avoid_empty_else\n    - avoid_equals_and_hash_code_on_mutable_classes\n    - avoid_escaping_inner_quotes\n    - avoid_field_initializers_in_const_classes\n    - avoid_function_literals_in_foreach_calls\n    - avoid_implementing_value_types\n    - avoid_init_to_null\n    - avoid_js_rounded_ints\n    - avoid_null_checks_in_equality_operators\n    - avoid_positional_boolean_parameters\n    - avoid_print\n    - avoid_private_typedef_functions\n    - avoid_redundant_argument_values\n    - avoid_relative_lib_imports\n    - avoid_renaming_method_parameters\n    - avoid_return_types_on_setters\n    - avoid_returning_null\n    - avoid_returning_null_for_future\n    - avoid_returning_null_for_void\n    - avoid_returning_this\n    - avoid_setters_without_getters\n    - avoid_shadowing_type_parameters\n    - avoid_single_cascade_in_expression_statements\n    - avoid_slow_async_io\n    - avoid_type_to_string\n    - avoid_types_as_parameter_names\n    - avoid_types_on_closure_parameters\n    - avoid_unnecessary_containers\n    - avoid_unused_constructor_parameters\n    - avoid_void_async\n    - avoid_web_libraries_in_flutter\n    - await_only_futures\n    - camel_case_extensions\n    - camel_case_types\n    - cancel_subscriptions\n    - cascade_invocations\n    - cast_nullable_to_non_nullable\n    - close_sinks\n    - comment_references\n    - constant_identifier_names\n    - control_flow_in_finally\n    - curly_braces_in_flow_control_structures\n    - diagnostic_describe_all_properties\n    - directives_ordering\n    - do_not_use_environment\n    - empty_catches\n    - empty_constructor_bodies\n    - empty_statements\n    - exhaustive_cases\n    - file_names\n    - flutter_style_todos\n    - hash_and_equals\n    - implementation_imports\n    - invariant_booleans\n    - iterable_contains_unrelated_type\n    - join_return_with_assignment\n    - leading_newlines_in_multiline_strings\n    - library_names\n    - library_prefixes\n    - lines_longer_than_80_chars\n    - list_remove_unrelated_type\n    - literal_only_boolean_expressions\n    - missing_whitespace_between_adjacent_strings\n    - no_adjacent_strings_in_list\n    - no_default_cases\n    - no_duplicate_case_values\n    - no_logic_in_create_state\n    - no_runtimeType_toString\n    - non_constant_identifier_names\n    - null_check_on_nullable_type_parameter\n    - null_closures\n    - omit_local_variable_types\n    - one_member_abstracts\n    - only_throw_errors\n    - overridden_fields\n    - package_api_docs\n    - package_names\n    - package_prefixed_library_names\n    - parameter_assignments\n    - prefer_adjacent_string_concatenation\n    - prefer_asserts_in_initializer_lists\n    - prefer_asserts_with_message\n    - prefer_collection_literals\n    - prefer_conditional_assignment\n    - prefer_const_constructors\n    - prefer_const_constructors_in_immutables\n    - prefer_const_declarations\n    - prefer_const_literals_to_create_immutables\n    - prefer_constructors_over_static_methods\n    - prefer_contains\n    - prefer_double_quotes\n    - prefer_equal_for_default_values\n    - prefer_expression_function_bodies\n    - prefer_final_fields\n    - prefer_final_in_for_each\n    - prefer_final_locals\n    - prefer_for_elements_to_map_fromIterable\n    - prefer_foreach\n    - prefer_function_declarations_over_variables\n    - prefer_generic_function_type_aliases\n    - prefer_if_elements_to_conditional_expressions\n    - prefer_if_null_operators\n    - prefer_initializing_formals\n    - prefer_inlined_adds\n    - prefer_int_literals\n    - prefer_interpolation_to_compose_strings\n    - prefer_is_empty\n    - prefer_is_not_empty\n    - prefer_is_not_operator\n    - prefer_iterable_whereType\n    - prefer_mixin\n    - prefer_null_aware_operators\n    - prefer_relative_imports\n    - prefer_single_quotes\n    - prefer_spread_collections\n    - prefer_typing_uninitialized_variables\n    - prefer_void_to_null\n    - provide_deprecation_message\n    - public_member_api_docs\n    - recursive_getters\n    - sized_box_for_whitespace\n    - slash_for_doc_comments\n    - sort_child_properties_last\n    - sort_constructors_first\n    - sort_pub_dependencies\n    - sort_unnamed_constructors_first\n    - test_types_in_equals\n    - throw_in_finally\n    - tighten_type_of_initializing_formals\n    - type_annotate_public_apis\n    - type_init_formals\n    - unawaited_futures\n    - unnecessary_await_in_return\n    - unnecessary_brace_in_string_interps\n    - unnecessary_const\n    - unnecessary_final\n    - unnecessary_getters_setters\n    - unnecessary_lambdas\n    - unnecessary_new\n    - unnecessary_null_aware_assignments\n    - unnecessary_null_checks\n    - unnecessary_null_in_if_null_operators\n    - unnecessary_nullable_for_final_variable_declarations\n    - unnecessary_overrides\n    - unnecessary_parenthesis\n    - unnecessary_raw_strings\n    - unnecessary_statements\n    - unnecessary_string_escapes\n    - unnecessary_string_interpolations\n    - unnecessary_this\n    - unrelated_type_equality_checks\n    - unsafe_html\n    - use_full_hex_values_for_flutter_colors\n    - use_function_type_syntax_for_parameters\n    - use_is_even_rather_than_modulo\n    - use_key_in_widget_constructors\n    - use_late_for_private_fields_and_variables\n    - use_raw_strings\n    - use_rethrow_when_possible\n    - use_setters_to_change_properties\n    - use_string_buffers\n    - use_to_and_as_if_applicable\n    - valid_regexps\n    - void_checks"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 4.255859375,
          "content": "# Enable all rules by default\ninclude: all_lint_rules.yaml\nanalyzer:\n  strong-mode:\n    implicit-casts: false\n    implicit-dynamic: false\n  errors:\n    dead_code: warning\n    # Otherwise cause the import of all_lint_rules to warn because of some rules conflicts.\n    # The conflicts are fixed in this file instead, so we can safely ignore the warning.\n    included_file_warning: ignore\n    missing_required_param: error\n    missing_return: error\n\nlinter:\n  rules:\n    # We prefer having parameters in the same order as fields https://github.com/flutter/flutter/issues/10219\n    always_put_required_named_parameters_first: false\n\n    # Conflicts with `omit_local_variable_types` and other rules.\n    # As per Dart guidelines, we want to avoid unnecessary types to make the code\n    # more readable.\n    # See https://dart.dev/guides/language/effective-dart/design#avoid-type-annotating-initialized-local-variables\n    always_specify_types: false\n\n    # conflicts with `prefer_relative_imports`\n    always_use_package_imports: false\n\n    # Conflicts with always_specify_types\n    avoid_annotating_with_dynamic: false\n\n    # There are situations where we voluntarily want to catch everything,\n    # especially as a library.\n    avoid_catches_without_on_clauses: false\n\n      # Only useful when targeting JS runtime\n    avoid_double_and_int_checks: false\n\n    # Improve readbility\n    avoid_function_literals_in_foreach_calls: false\n\n    # Only useful when targeting JS runtime\n    avoid_js_rounded_ints: false\n\n    # We prefer having typedef (discussion in https://github.com/flutter/flutter/pull/16356)\n    avoid_private_typedef_functions: false\n\n    # Can be useful to have a more readable code\n    avoid_types_on_closure_parameters: false\n\n    # `as` is not that bad (especially with the upcoming non-nullable types).\n    # Explicit exceptions is better than implicit exceptions.\n    avoid_as: false\n\n    # Can be difficult to read in some cases\n    cascade_invocations: false\n    \n    # Not reliable enough\n    close_sinks: false\n\n    # Blocked on https://github.com/flutter/flutter/issues/20765\n    comment_references: false\n\n    # Not useful for public properties for a constructor\n    diagnostic_describe_all_properties: false\n\n    # This project doesn't use Flutter-style todos\n    flutter_style_todos: false\n\n    # Can be useful to have a more readable code\n    join_return_with_assignment: false\n\n    # Not useful for comments\n    lines_longer_than_80_chars: false\n\n    # Too many false positives: https://github.com/dart-lang/sdk/issues/34181\n    literal_only_boolean_expressions: false\n\n    # Disabled for now until we have NNBD as it otherwise conflicts with `missing_return`\n    no_default_cases: false\n\n    # Can be useful to have a more readable code\n    omit_local_variable_types: false\n    \n    # Too many false positives\n    one_member_abstracts: false\n\n    # Issue: https://github.com/flutter/flutter/issues/5792\n    only_throw_errors: false\n\n    # Issue: https://github.com/dart-lang/language/issues/32\n    prefer_mixin: false\n\n    # Intelissence do the jobs for constructors.\n    prefer_asserts_with_message: false\n\n    # More readable\n    prefer_relative_imports: false\n\n    # Conflicts with `prefer_single_quotes`\n    # Single quotes are easier to type and don't compromise on readability.\n    prefer_double_quotes: false\n\n    # Conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#consider-using--for-short-functions-and-methods\n    # Not quite suitable for Flutter, which may have a `build` method with a single\n    # return, but that return is still complex enough that a \"body\" is worth it.\n    prefer_expression_function_bodies: false\n\n    # We don't want to enforce this rule now.\n    sort_pub_dependencies: false\n\n    # Too many false positives\n    unawaited_futures: false\n\n    # Has false positives: https://github.com/dart-lang/linter/issues/498\n    unnecessary_lambdas: false\n\n    # Has false positives: https://github.com/dart-lang/sdk/issues/34182\n    use_string_buffers: false\n\n    # Has false positives, so we prefer to catch this by code-review\n    use_to_and_as_if_applicable: false\n\n    # Incompatible with `prefer_final_locals`\n    # Having immutable local variables makes larger functions more predictible\n    # so we will use `prefer_final_locals` instead.\n    unnecessary_final: false"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.3935546875,
          "content": "name: flutter_slidable\ndescription: A Flutter implementation of slidable list item with directional slide actions that can be dismissed.\nversion: 3.1.2\nhomepage: https://github.com/letsar/flutter_slidable\n\nenvironment:\n  sdk: '>=2.17.0 <4.0.0'\n  flutter: \">=3.7.0\"\n\ndependencies:\n  flutter:\n    sdk: flutter\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n  mocktail: ^0.3.0\n  collection:\n\nflutter:\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}