{
  "metadata": {
    "timestamp": 1736710618680,
    "page": 266,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "objectbox/objectbox-dart",
      "stars": 1070,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4560546875,
          "content": "**/.dart_tool/\n**/.packages\n**/.pub/\n**/pubspec.lock\n**/build/\n\n.DS_Store\n.idea/\n.vscode/\n*.iml\n\n# ObjectBox install.sh (or rather download.sh) script\n# - download location\ndownload/\n# - installed library files\nlibobjectbox.dylib\nlibobjectbox.so\nobjectbox.dll\nobjectbox.lib\n\n# Dart generated files: would commit for a user project, but not here to test code generation\n**/*.g.dart\n\n# backup created by publish.sh - ignore to avoid publishing\n**/pubspec.yaml.original\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 4.7412109375,
          "content": "stages:\n  - analyze\n  - test\n\nvariables:\n  # Note: use specific tags as docker images may not always be pulled due to \"if-not-present\" pull policy.\n  #       Thus, do not use tags like latest/beta, but check https://hub.docker.com/_/dart?tab=tags for latest.\n  DART_VERSION: '3.5.2'\n\n# Make PUB_CACHE cacheable in GitLab;\n# see also https://gitlab.com/gitlab-org/gitlab/-/merge_requests/77791/diffs and\n# https://dikman.medium.com/optimising-flutter-ci-by-caching-packages-8a1d537e0b23\n# Requires extending job to set DART_VERSION variable.\n.cache:\n  before_script:\n    - export PUB_CACHE=\"$CI_PROJECT_DIR/.pub-cache\" # https://dart.dev/tools/pub/environment-variables\n    - export PATH=\"$PATH\":\"$PUB_CACHE/bin\"\n  cache:\n    paths:\n      - $CI_PROJECT_DIR/.pub-cache/bin/\n      - $CI_PROJECT_DIR/.pub-cache/global_packages/\n      - $CI_PROJECT_DIR/.pub-cache/hosted/\n    key: \"linux-x64-dart-$DART_VERSION-pub-cache\"\n\n# Analyze (only) Dart packages, check formatting in Dart and Flutter packages.\nanalyze:\n  extends: .cache\n  stage: analyze\n  tags: [ x64, linux, docker ]\n  image: dart:$DART_VERSION\n  script:\n    # Get dependencies\n    - dart pub get --directory=benchmark\n    - dart pub get --directory=generator\n    - dart pub get --directory=objectbox\n    - dart pub get --directory=objectbox_test\n    - dart pub get --directory=objectbox/example/dart-native/vectorsearch_cities\n    # Generate code\n    - cd benchmark\n    - dart run build_runner build\n    - cd ../objectbox_test\n    - dart run build_runner build\n    - cd ../objectbox/example/dart-native/vectorsearch_cities\n    - dart run build_runner build\n    - cd ../../../.. # back to repo root\n    # Analyze Dart packages\n    - dart analyze benchmark\n    - dart analyze generator\n    - dart analyze objectbox\n    - dart analyze objectbox_test\n    - dart analyze objectbox/example/dart-native/vectorsearch_cities\n    # Check formatting of all packages\n    - dart format --set-exit-if-changed --fix .\n\n# Runs generator integration tests, e.g. ensures generator works as expected.\ntest-generator:linux:x64:\n  extends: .cache\n  stage: test\n  tags: [ x64, linux, docker ]\n  image: dart:$DART_VERSION\n  script:\n    - ./install.sh --install # Install globally for generator integration tests\n    - ./generator/test.sh\n\n# Runs generator and objectbox unit tests.\n.test:\n  extends: .cache\n  stage: test\n  script:\n    # Generator tests\n    - cd generator\n    - dart pub get\n    - dart test\n    # ObjectBox tests\n    - cd ../objectbox_test\n    - ../install.sh\n    - dart pub get\n    - dart run build_runner build\n    # Set concurrency=1 to run only one test suite (== test file) at a time.\n    # Set --reporter expanded to print log for every completed test.\n    # Together, this will produce sequential log output, making it easier to attribute native logs.\n    - dart test --concurrency=1 --reporter expanded\n    # Run again using in-memory database\n    - export OBX_IN_MEMORY=true\n    - dart test --concurrency=1 --reporter expanded\n\ntest-lib:linux:x64:\n  extends: .test\n  tags: [ x64, linux, docker ]\n  image: dart:$DART_VERSION\n  needs: [\"test-generator:linux:x64\"] # Wait for generator test\n  parallel:\n    matrix:\n      # Note: use specific versions instead of latest/beta tags as Docker images may not always be\n      # pulled due to \"if-not-present\" pull policy. Check https://hub.docker.com/_/dart?tab=tags.\n      # Always include lowest supported version (see sdk key in objectbox and generator\n      # pubspec.yaml, but may be higher due to dependencies).\n      - DART_VERSION: [ '2.18.6', '3.4.4', '3.5.2' ]\n\n# Runs tests with coverage on the objectbox package.\n# Note: As this requires to run tests, make sure this does not block the actual test jobs so test\n# issues can be seen.\ncoverage:\n  extends: .cache\n  stage: test\n  needs: [\"test-lib:linux:x64\"] # Get test results first\n  tags: [ x64, linux, docker ]\n  image: dart:$DART_VERSION\n  script:\n    # Install coverage tools\n    - apt-get update\n    - apt-get install --yes --no-install-recommends lcov\n    - dart pub global activate coverage\n    # Prepare objectbox_test\n    - cd objectbox_test\n    - dart pub get\n    - dart run build_runner build\n    # Generate test coverage\n    - cd ../objectbox\n    - ../install.sh\n    - dart pub get\n    - ./tool/coverage.sh\n  coverage: /^\\s*lines......:\\s*\\d+.\\d+\\%/\n  artifacts:\n    paths:\n      - objectbox/coverage/html/\n\n# For the Dart Native example compiles and runs the executable (analysis and code formatting is \n# checked by analyze job).\ndart-examples-test:\n  extends: .cache\n  stage: test\n  tags: [ x64, linux, docker ]\n  image: dart:$DART_VERSION\n  script:\n    - cd objectbox/example/dart-native/vectorsearch_cities\n    - dart pub get\n    - dart run build_runner build\n    - ../../../../install.sh\n    - dart compile exe bin/vectorsearch_cities.dart\n    - ./bin/vectorsearch_cities.exe\n"
        },
        {
          "name": ".gitlab",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.7119140625,
          "content": "Contributing\n------------------\nThis project is completely managed on GitHub using its [issue tracker](https://github.com/objectbox/objectbox-dart/issues).\n\nAnyone can contribute, be it by coding, improving docs or just proposing a new feature. \nLook for tasks having a [**\"help wanted\"**](https://github.com/objectbox/objectbox-dart/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) tag. \nWhen picking up an existing issue, please let us know in the issue comment. \nDon't hesitate to reach out for guidance or to discuss a solution proposal!\n\n### Code contributions\nWhen creating a Pull Request for code changes, please check that you cover the following:\n* Include tests for the changes you introduce. See the [test folder](objectbox/test) for examples.\n* Formatted the code using `dartfmt -l 120`. You can configure your IDE to do this automatically, \n  e.g. VS Code needs the project-specific settings `\"editor.defaultFormatter\": \"Dart-Code.dart-code\"` and `\"dart.lineLength\": 120`.\n* Update the `## latest` section in the `CHANGELOG.md` - add a single-line comment what changes.\n  This only applies if the change is \"external\", i.e. it affects objectbox-dart library users.\n\n### Basic technical approach\nObjectBox offers a [C API](https://github.com/objectbox/objectbox-c) which can be called by [Dart FFI](https://dart.dev/server/c-interop).\nThe C API is also used by the ObjectBox language bindings for [Go](https://github.com/objectbox/objectbox-go), [Swift](https://github.com/objectbox/objectbox-swift), and [Python](https://github.com/objectbox/objectbox-python).\nThese languages may serve as an inspiration for this Dart implementation.\nInternally, ObjectBox uses [FlatBuffers](https://google.github.io/flatbuffers/) to store objects."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.451171875,
          "content": "<p align=\"center\">\n  <picture>\n    <img src=\"https://raw.githubusercontent.com/objectbox/objectbox-dart/main/.github/logo.png\" alt=\"ObjectBox\" width=\"400px\">\n  </picture>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://docs.objectbox.io/getting-started\">Getting Started</a> •\n  <a href=\"https://docs.objectbox.io\">Documentation</a> •\n  <a href=\"https://github.com/objectbox/objectbox-dart/tree/main/objectbox/example\">Example Apps</a> •\n  <a href=\"https://github.com/objectbox/objectbox-dart/issues\">Issues</a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/objectbox/objectbox-dart/actions/workflows/dart.yml\">\n    <img src=\"https://github.com/objectbox/objectbox-dart/actions/workflows/dart.yml/badge.svg\" alt=\"Build and test\">\n  </a>\n  <a href=\"https://pub.dev/packages/objectbox\">\n    <img src=\"https://img.shields.io/pub/v/objectbox.svg?label=pub.dev&logo=dart&style=flat-square\" alt=\"pub.dev package\">\n  </a>\n  <a href=\"https://twitter.com/ObjectBox_io\">\n    <img src=\"https://img.shields.io/twitter/follow/objectbox_io?color=%20%2300aced&logo=twitter&style=flat-square\" alt=\"Follow @ObjectBox_io\">\n  </a>\n</p>\n\n# Flutter database with vector support - easy to use & fast Dart object persistence, plus on-device vector search 💙\n\n\n\nVery first on-device vector database for Flutter / Dart AI apps. Intuitive APIs, simply fast. \nPersist local Dart objects with ease & speed, efficiently manage vectors.\n\nObjectBox provides a store with boxes to put objects into:\n\n```dart\n// Annotate a Dart class to create a Box\n@Entity()\nclass Person {\n  @Id()\n  int id;\n  String firstName;\n  String lastName;\n\n  Person({this.id = 0, required this.firstName, required this.lastName});\n}\n\nfinal Store store = await openStore(directory: 'person-db');\nfinal box = store.box<Person>();\n\nvar person = Person(firstName: 'Joe', lastName: 'Green');\nfinal id = box.put(person); // Create\n\nperson = box.get(id)!;      // Read\n\nperson.lastName = 'Black';\nbox.put(person);            // Update\n\nbox.remove(person.id);      // Delete\n\nfinal query = box           // Query\n    .query(Person_.firstName.equals('Joe') & Person_.lastName.startsWith('B'))\n    .build();\nfinal List<Person> people = query.find();\nquery.close();\n```\nReady? Continue with the ➡️ **[Getting Started guide](https://docs.objectbox.io/getting-started)**.\n\n## Why use ObjectBox\n\nObjectBox Flutter database is an excellent choice for storing Dart objects in cross-platform\napplications and the only on-device database that offers you vector support for your on-device AI apps.\nDesigned for high performance, the ObjectBox Flutter database is excellent for mobile\nand IoT devices. ObjectBox consumes minimal CPU, memory, and battery, ensuring that your software is\nnot only efficient but also sustainable. By storing data locally on the device, ObjectBox allows you\nto cut cloud costs and create an app that does not require a connection. Get started with our\nintuitive native Dart API in minutes, without the hassle of SQL.\nPlus: We built a data synchronization solution that allows you to keep data in sync across devices\nand servers, both online and offline.\n\n### Features\n🏁 **Very first [on-device vector database](https://docs.objectbox.io/on-device-ann-vector-search)** - for AI apps that work any place.\\\n\n🏁 **High performance** - superfast response rates enabling real-time applications.\\\n🪂 **ACID compliant** - Atomic, Consistent, Isolated, Durable.\\\n💻 **Multiplatform** - Android, iOS, macOS, Linux, Windows, any POSIX-system.\\\n🌱 **Scalable** - grows with your app, handling millions of objects with ease.\\\n💚 **Sustainable** - frugal on CPU, Memory and battery / power use, reducing CO2 emmissions.\n\n🔗 **[Relations](https://docs.objectbox.io/relations)** - object links / relationships are built-in.\\\n💐 **[Queries](https://docs.objectbox.io/queries)** - filter data as needed, even across relations.\\\n🦮 **Statically typed** - compile time checks & optimizations.\\\n📃 **Schema migration** - change your model with confidence.\n\nOh, and there is one more thing...\n\n😮 [**Data Sync**](https://objectbox.io/sync/) - keeps data in sync offline or online, between devices and servers.\n\n\n## Getting Started\n\nContinue with our ➡️ **[Getting Started guide](https://docs.objectbox.io/getting-started)**. It has resources and video tutorials on how to use ObjectBox in your Flutter or Dart app.\n\n## How does ObjectBox compare to other solutions?\n\n- ObjectBox is fast. Have a look at our benchmarks below, or test it for yourself\n- It's a full NoSQL SQLite alternative with intuitive Dart APIs you'll love 💙\n- It comes with an out-of-the-box [Data Sync](https://objectbox.io/sync/), making it an effective self-hosted Firebase alternative\n\n### Flutter Database Performance Benchmarks\n\nWe tested across the four main database operations, CRUD (create, read, update, delete). Each test was run multiple times and executed  manually outside of the measured time. Data preparation and evaluation were done outside of the measured time. \n\nHere are the benchmarks for ObjectBox vs sqflite vs Hive 👇\n\n![](https://raw.githubusercontent.com/objectbox/objectbox-dart/main/.github/benchmarks.png)\n\nYou can run these yourself using our [objectbox-dart-performance](https://github.com/objectbox/objectbox-dart-performance) Flutter benchmark app.\n\n## How do you 💙 ObjectBox?\n\n**We're looking forward to receiving your comments and requests:**\n\n- Add [GitHub issues](https://github.com/objectbox/objectbox-dart/issues)\n- Upvote issues you find important by hitting the 👍/+1 reaction button\n- Fill in the [anonymous feedback form](https://forms.gle/s2L1YH32nwjgs4s4A) to help us improve our products\n- Drop us a line on Twitter via [@ObjectBox_io](https://twitter.com/ObjectBox_io/)\n- ⭐ us on GitHub, if you like what you see or give us a 👍 on [pub.dev](https://pub.dev/packages/objectbox)\n\nThank you! 🙏\n\nFor general news on ObjectBox, [check our blog](https://objectbox.io/blog)!\n\n## Contributing\n\nDo you want to check out the ObjectBox code itself? E.g. see in action, run tests, or even contribute code?\nGreat! Clone/check out this repository and run this to generate code and get you started quickly:\n\n    ./tool/init.sh\n\nAlso, make sure to have a look at the [contribution guidelines](CONTRIBUTING.md) - we are looking forward to your contribution.\n\n## Packages\n\nThis repository holds all ObjectBox Dart/Flutter packages as separate directories:\n\n* [objectbox](objectbox) - main library code\n* [objectbox_generator](generator) - code generator\n* [objectbox_flutter_libs](flutter_libs) - core binary library dependency for Flutter (Android/iOS) - no dart/flutter code\n* [objectbox_sync_flutter_libs](sync_flutter_libs) - core binary library dependency with [**ObjectBox Sync**](https://objectbox.io/sync/) enabled\n* [benchmark](benchmark) - used internally to microbenchmark and compare various implementations during development of objectbox-dart\n\nThere's also a separate repository benchmarking objectbox (and other databases) in Flutter: \n[objectbox-dart-performance](https://github.com/objectbox/objectbox-dart-performance). And another one testing and \ncomparing the performance of our FlatBuffers fork vs the upstream version: [flatbuffers-benchmark](https://github.com/objectbox/flatbuffers-benchmark).\n\n## Other languages/bindings\n\nObjectBox supports multiple platforms and languages: \n\n* [Java Database](https://github.com/objectbox/objectbox-java) (+ Kotlin): runs on Android, desktop, and servers.\n* [Swift Database](https://github.com/objectbox/objectbox-swift): build fast mobile apps for iOS and macOS.\n* [Go Database](https://github.com/objectbox/objectbox-go): great for data-driven tools and embedded server applications.\n* [C / C++ Database](https://github.com/objectbox/objectbox-c): native speed with zero copy access to FlatBuffer objects.\n\n\n## License\n\n```text\nCopyright 2019-2024 ObjectBox Ltd. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\nNote that this license applies to the code in this repository only.\nSee our website on details about all [licenses for ObjectBox components](https://objectbox.io/faq/#license-pricing).\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "flutter_libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 0.4697265625,
          "content": "#!/usr/bin/env bash\nset -eu\n\n# https://github.com/objectbox/objectbox-c/releases\n# It's important that the generated dart bindings and the c-api library version match. Dart won't error on C function\n# signature mismatch, leading to obscure memory bugs.\n# For how to upgrade the version see dev-doc/updating-c-library.md\ncLibVersion=4.0.2\nos=$(uname)\ncLibArgs=\"$*\"\n\nbash <(curl -s https://raw.githubusercontent.com/objectbox/objectbox-c/main/download.sh) ${cLibArgs} ${cLibVersion}\n"
        },
        {
          "name": "objectbox",
          "type": "tree",
          "content": null
        },
        {
          "name": "objectbox_test",
          "type": "tree",
          "content": null
        },
        {
          "name": "sync_flutter_libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}