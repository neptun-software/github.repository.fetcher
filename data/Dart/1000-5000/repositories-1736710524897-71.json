{
  "metadata": {
    "timestamp": 1736710524897,
    "page": 71,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MaikuB/flutter_local_notifications",
      "stars": 2490,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0849609375,
          "content": "pubspec.lock\n.vscode\n*.idea\n*.DS_Store\n.dart_tool\n*.dll\n\n# Melos\npubspec_overrides.yaml"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.23828125,
          "content": "# Contributing to flutter_local_notifications\n\nContributions are welcome by submitting a PR for to be reviewed. If it's to add new features, appreciate it if you could try to maintain the architecture or try to improve on it. If you are looking to add platform-specific functionality do not add this to the cross-platform facing API (i.e. the [`FlutterLocalNotificationsPlugin`](https://pub.dev/documentation/flutter_local_notifications/latest/flutter_local_notifications/FlutterLocalNotificationsPlugin-class.html) class. The recommended approaches in this scenario are:\n\n1. see if it can be passed as platform-specific configuration or\n2. add methods to the platform-specific implementations. For example, on iOS there is an [`IOSFlutterLocalNotificationsPlugin`](https://pub.dev/documentation/flutter_local_notifications/latest/flutter_local_notifications/IOSFlutterLocalNotificationsPlugin-class.html) class. You may notice there's a [`requestPermissions()`](https://pub.dev/documentation/flutter_local_notifications/latest/flutter_local_notifications/IOSFlutterLocalNotificationsPlugin/requestPermissions.html) method that only exists there\n\nPlease ensure that no analysis issues are found and all tests continue to pass and add/update the tests as appropriate.\nMost of the tests are around verifying the details sent via the platform channel.\n\nFor API docs, please try to adhere to the effective Dart documentation guidelines that can be found [here](https://dart.dev/guides/language/effective-dart/documentation).\n\n## Environment setup\n\n`flutter_local_notifications` uses [Melos](https://melos.invertase.dev) to manage the monorepo project.\n\nTo install Melos, run the following command from a terminal/command prompt:\n\n```\ndart pub global activate melos\n```\n\nAt the root of your locally cloned repository bootstrap the all dependencies and link them locally\n\n```\nmelos bootstrap\n```\n\nThis removes the need for providing manual [`dependency_overrides`](https://dart.dev/tools/pub/pubspec). There's no need to run `flutter pub get` either. All the packages, example app and tests will run for the locally cloned repository. The workflows setup on GitHub are also configured use Melos to validate changes. For more information on Melos, refer to its [website](https://melos.invertase.dev)"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.046875,
          "content": "# Flutter Local Notifications plugin\n\nThis repository consists hosts the following packages\n\n- [`flutter_local_notifications`](https://github.com/MaikuB/flutter_local_notifications/tree/master/flutter_local_notifications): code for the cross-platform facing plugin used to display local notifications within Flutter applications\n- [`flutter_local_notifications_platform_interface`](https://github.com/MaikuB/flutter_local_notifications/tree/master/flutter_local_notifications_platform_interface): the code for the common platform interface\n- [`flutter_local_notifications_linux`](https://github.com/MaikuB/flutter_local_notifications/tree/master/flutter_local_notifications_linux): the Linux implementation of [`flutter_local_notifications`](https://pub.dev/packages/flutter_local_notifications)\n- [`flutter_local_notifications_windows`](https://github.com/MaikuB/flutter_local_notifications/tree/master/flutter_local_notifications_windows): the Linux implementation of [`flutter_local_notifications`](https://pub.dev/packages/flutter_local_notifications).\n\nThese can be found in the corresponding directories within the same name. Most developers are likely here as they are looking to use the `flutter_local_notifications` plugin. There is a readme file within each directory with more information.\n\n## Issues\n\nIf you run into bugs, please raise them on the GitHub repository. Please do not email them to me as GitHub is the appropriate place for them and allows for members of the community to answer questions, particularly if I miss the email. It would also be much appreciated if they could be limited to actual bugs or feature requests. If you're looking at how you could use the plugin to do a particular kind of notification, check the example app provides detailed code samples for each supported feature. Also try to check the README first in case you have missed something e.g. platform-specific setup.\n\n## Contributing\n\nIf you are interested in contributing, please review the [contribution guide](https://github.com/MaikuB/flutter_local_notifications/blob/master/CONTRIBUTING.md)\n\n\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 4.9375,
          "content": "linter:\n  rules:\n    - always_declare_return_types\n    - always_put_control_body_on_new_line\n    - always_put_required_named_parameters_first\n    - always_specify_types\n    - annotate_overrides\n    - avoid_annotating_with_dynamic\n    # - avoid_as\n    - avoid_bool_literals_in_conditional_expressions\n    - avoid_catches_without_on_clauses\n    - avoid_catching_errors\n    - avoid_double_and_int_checks\n    - avoid_empty_else\n    - avoid_equals_and_hash_code_on_mutable_classes\n    - avoid_escaping_inner_quotes\n    - avoid_field_initializers_in_const_classes\n    - avoid_function_literals_in_foreach_calls\n    - avoid_implementing_value_types\n    - avoid_init_to_null\n    - avoid_js_rounded_ints\n    - avoid_null_checks_in_equality_operators\n    # - avoid_positional_boolean_parameters\n    - avoid_print\n    - avoid_private_typedef_functions\n    - avoid_redundant_argument_values\n    - avoid_relative_lib_imports\n    - avoid_renaming_method_parameters\n    - avoid_return_types_on_setters\n    - avoid_returning_null_for_void\n    - avoid_returning_this\n    - avoid_setters_without_getters\n    - avoid_shadowing_type_parameters\n    - avoid_single_cascade_in_expression_statements\n    - avoid_slow_async_io\n    - avoid_types_as_parameter_names\n    # - avoid_types_on_closure_parameters\n    - avoid_unnecessary_containers\n    - avoid_unused_constructor_parameters\n    - avoid_void_async\n    - avoid_web_libraries_in_flutter\n    - await_only_futures\n    - camel_case_extensions\n    - camel_case_types\n    - cancel_subscriptions\n    - cascade_invocations\n    - close_sinks\n    # - comment_references\n    - constant_identifier_names\n    - control_flow_in_finally\n    - curly_braces_in_flow_control_structures\n    # - diagnostic_describe_all_properties\n    - directives_ordering\n    - empty_catches\n    - empty_constructor_bodies\n    - empty_statements\n    - file_names\n    - flutter_style_todos\n    - hash_and_equals\n    - implementation_imports\n    - collection_methods_unrelated_type\n    - join_return_with_assignment\n    - leading_newlines_in_multiline_strings\n    - library_names\n    - library_prefixes\n    - lines_longer_than_80_chars\n    - literal_only_boolean_expressions\n    - missing_whitespace_between_adjacent_strings\n    - no_adjacent_strings_in_list\n    - no_duplicate_case_values\n    - no_logic_in_create_state\n    - no_runtimeType_toString\n    - non_constant_identifier_names\n    - null_closures\n    - one_member_abstracts\n    - only_throw_errors\n    - overridden_fields\n    - package_api_docs\n    - package_names\n    - package_prefixed_library_names\n    - parameter_assignments\n    - prefer_adjacent_string_concatenation\n    - prefer_asserts_in_initializer_lists\n    # - prefer_asserts_with_message\n    - prefer_collection_literals\n    - prefer_conditional_assignment\n    - prefer_const_constructors\n    - prefer_const_constructors_in_immutables\n    - prefer_const_declarations\n    - prefer_const_literals_to_create_immutables\n    - prefer_constructors_over_static_methods\n    - prefer_contains\n    - prefer_expression_function_bodies\n    - prefer_final_fields\n    - prefer_final_in_for_each\n    - prefer_final_locals\n    - prefer_for_elements_to_map_fromIterable\n    - prefer_foreach\n    - prefer_function_declarations_over_variables\n    - prefer_generic_function_type_aliases\n    - prefer_if_elements_to_conditional_expressions\n    - prefer_if_null_operators\n    - prefer_initializing_formals\n    - prefer_inlined_adds\n    - prefer_int_literals\n    - prefer_interpolation_to_compose_strings\n    - prefer_is_empty\n    - prefer_is_not_empty\n    - prefer_is_not_operator\n    - prefer_iterable_whereType\n    # - prefer_mixin\n    - prefer_null_aware_operators\n    - prefer_relative_imports\n    - prefer_single_quotes\n    - prefer_spread_collections\n    - prefer_typing_uninitialized_variables\n    - prefer_void_to_null\n    - provide_deprecation_message\n    - public_member_api_docs\n    - recursive_getters\n    - slash_for_doc_comments\n    - sort_child_properties_last\n    - sort_constructors_first\n    # - sort_pub_dependencies\n    - sort_unnamed_constructors_first\n    - test_types_in_equals\n    - throw_in_finally\n    - type_annotate_public_apis\n    - type_init_formals\n    - unawaited_futures\n    # - unnecessary_await_in_return\n    - unnecessary_brace_in_string_interps\n    - unnecessary_const\n    - unnecessary_getters_setters\n    # - unnecessary_lambdas\n    - unnecessary_new\n    - unnecessary_null_aware_assignments\n    - unnecessary_null_in_if_null_operators\n    - unnecessary_overrides\n    - unnecessary_parenthesis\n    - unnecessary_raw_strings\n    - unnecessary_statements\n    - unnecessary_string_escapes\n    - unnecessary_string_interpolations\n    - unnecessary_this\n    - unrelated_type_equality_checks\n    - unsafe_html\n    - use_full_hex_values_for_flutter_colors\n    - use_function_type_syntax_for_parameters\n    - use_key_in_widget_constructors\n    - use_raw_strings\n    - use_rethrow_when_possible\n    - use_setters_to_change_properties\n    - use_string_buffers\n    - use_to_and_as_if_applicable\n    - valid_regexps\n    - void_checks"
        },
        {
          "name": "flutter_local_notifications",
          "type": "tree",
          "content": null
        },
        {
          "name": "flutter_local_notifications_linux",
          "type": "tree",
          "content": null
        },
        {
          "name": "flutter_local_notifications_platform_interface",
          "type": "tree",
          "content": null
        },
        {
          "name": "flutter_local_notifications_windows",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "melos.yaml",
          "type": "blob",
          "size": 2.6455078125,
          "content": "name: flutter_local_notifications\nrepository: https://github.com/MaikuB/flutter_local_notifications\npackages:\n  - flutter_local_notifications\n  - flutter_local_notifications_linux\n  - flutter_local_notifications_windows\n  - flutter_local_notifications_platform_interface\n  - flutter_local_notifications/example/\n\ncommand:\n  bootstrap:\n    usePubspecOverrides: true\n\nide:\n  intellij: false\n\nscripts:\n  analyze:\n    run: melos exec -c 1 -- \"dart analyze . --fatal-infos\"\n    description: Run dart analyzer in a specific package.\n  test:unit:\n    description: Run unit tests in a specific package.\n    run: melos exec -c 1 -- \"flutter test\"\n    packageFilters:\n      ignore: '*_windows'\n      dirExists:\n        - test\n  test:unit:android:\n    description: Runs java unit tests\n    run: melos exec -c 1 -- \"flutter build apk --debug && cd android && ./gradlew flutter_local_notifications:testDebug\"\n    packageFilters:\n      scope: \"*example*\"\n  test:unit:windows:\n    description: Runs Windows-specific unit tests\n    run: melos exec -c 1 -- \"flutter test -j 1\"\n    packageFilters:\n      scope: '*_windows'\n  test:integration:\n    run: melos exec -c 1 -- \"flutter test integration_test\"\n    description: Run integration tests\n    packageFilters:\n      ignore: '*_windows'\n      dirExists:\n        - integration_test\n      scope: \"*example*\"\n  build:example_android:\n    run: |\n      melos exec -c 1 -- \\\n        \"flutter build apk --debug\"\n    description: Build a specific example app for Android.\n    packageFilters:\n      dirExists:\n        - android\n      scope: \"*example*\"\n  build:example_ios:\n    run: |\n      melos exec -c 1 -- \\\n        \"flutter build ios --no-codesign --debug\"\n    description: Build a specific example app for iOS.\n    packageFilters:\n      dirExists:\n        - ios\n      scope: \"*example*\"\n  build:example_macos:\n    run: |\n      melos exec -c 1 -- \\\n        \"flutter build macos\"\n    description: Build a specific example app for macOS.\n    packageFilters:\n      dirExists:\n        - macos\n      scope: \"*example*\"\n  build:example_linux:\n    run: |\n      melos exec -c 1 -- \\\n        \"flutter build linux\"\n    description: Build a specific example app for Linux.\n    packageFilters:\n      dirExists:\n        - linux\n      scope: \"*example*\"\n  build:example_windows:\n    run: |\n      melos exec -c 1 -- \\\n        \"dart run msix:create\"\n    description: Build a specific example app for Windows.\n    packageFilters:\n      dirExists:\n        - windows\n      scope: \"*example*\"\n\n  clean:\n    run: git clean -x -d -f -q\n    description: Runs git clean as though repo was just checked out\n\n  format: dart format -o write .\n\n  format-ci: dart format --output=none --set-exit-if-changed .\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.11328125,
          "content": "name: flutter_local_notifications_workspace\n\nenvironment:\n  sdk: '>=3.0.0 <4.0.0'\ndev_dependencies:\n  melos: ^6.1.0\n"
        }
      ]
    }
  ]
}