{
  "metadata": {
    "timestamp": 1736710584840,
    "page": 200,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "miguelpruivo/flutter_file_picker",
      "stars": 1378,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6376953125,
          "content": ".DS_Store\n.atom/\n.idea/\n.vscode/\n\n.packages\n.pub/\n.dart_tool/\npubspec.lock\n\nPodfile.lock\nPods/\n.symlinks/\n**/Flutter/App.framework/\n**/Flutter/Flutter.framework/\n**/Flutter/Generated.xcconfig\n**/Flutter/flutter_assets/\nServiceDefinitions.json\nxcuserdata/\n\nlocal.properties\n.gradle/\ngradlew\ngradlew.bat\ngradle-wrapper.jar\n*.iml\n\nGeneratedPluginRegistrant.h\nGeneratedPluginRegistrant.m\nGeneratedPluginRegistrant.java\nbuild/\n.flutter-plugins\nexample/ios/Flutter/flutter_export_environment.sh\nexample/.flutter-plugins-dependencies\nfile_picker/example/.flutter-plugins-dependencies\nfile_picker/example/ios/Flutter/flutter_export_environment.sh\nexample/macos\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 35.6181640625,
          "content": "## 8.1.7\n### iOS \nFix Image Picker to Handle Partial Failures Gracefully [#1554](https://github.com/miguelpruivo/flutter_file_picker/issues/1554)\n\n## 8.1.6\n### Android\nFix [#1643](https://github.com/miguelpruivo/flutter_file_picker/issues/1643)\n\n## 8.1.5\n### Android\nFix [#872](https://github.com/miguelpruivo/flutter_file_picker/issues/872)\n\n## 8.1.4\n### iOS\n- Fixes a crash when sometimes user swipe the modal down and call it again. [1357](https://github.com/miguelpruivo/flutter_file_picker/issues/1357)\n\n## 8.1.3\n### Android\n- Fixes a null object reference error [#1604](https://github.com/miguelpruivo/flutter_file_picker/issues/1604)\n\n## 8.1.2\n### Android\n- Fixes a cache deletion issue [#1505](https://github.com/miguelpruivo/flutter_file_picker/issues/1505)\n\n## 8.1.1\n### Web\n- Migrate the web example to use the new web bootstrapping, introduced in Flutter 3.22.\n\n## 8.1.0\n### General\n- Updates the minimum Flutter version to 3.22.0, to support Dart 3.4.\n\n### Web\n- Updates the `package:web` dependency to 1.0.0.\n- Removes a redundant `FilePickerWeb.platform` static field. Use `FilePicker.platform` instead.\n\n## 8.0.7\n### General\n- Fixes an issue relating to incorrect registration of platform-specific implementations. [#1555](https://github.com/miguelpruivo/flutter_file_picker/issues/1555).\n- Fixes an issue that required users to use `kIsWeb` and `FilePickerWeb` when running on the web.\n\n## 8.0.6\n### Android\nUpdates the minimum Android SDK version to 21, to match the current Flutter minimum Android SDK version. Fixes [#1522](https://github.com/miguelpruivo/flutter_file_picker/issues/1522), [#1528](https://github.com/miguelpruivo/flutter_file_picker/issues/1528), and [#1531](https://github.com/miguelpruivo/flutter_file_picker/issues/1531). Thanks @navaronbracke.\n\n## 8.0.5\n### Web\nRelease picked file data in memory to avoid memory leak\n\n## 8.0.4\n### Android\nRemoves references to Flutter v1 android embedding classes.\n\n## 8.0.3\n### Web\nFixes a TypeError with `pickFiles()` when using the HTML renderer.\n\n## 8.0.2\n### iOS\nFixes the bug [#1412](https://github.com/miguelpruivo/flutter_file_picker/issues/1412) that picking a folder in iOS causes the original folder to be deleted.\n\n## 8.0.1\n### iOS\nFixes an issue preventing compilation on iOS when using Pod::PICKER_DOCUMENT = false.\n\n## 8.0.0+1\nRemoves linter warnings and fixes CI/CD.\n\n## 8.0.0\n### Desktop\nRemoves Flutter GO support.\n\n### iOS\nAdds privacy manifest [#1418](https://github.com/miguelpruivo/flutter_file_picker/issues/1418).\n\n## 7.1.0+1\nFixes typo on docs (there was some refernces to `FileType.all` instead of the correct `FileType.any`).\n\n## 7.1.0\n### General\n- Adds `xFiles` getter to [FilePickerResult] and `XFile` to `PlatformFile` to retrieve a `List<XFile>` or single `XFile` accordingly.\n- Bumps win32, flutter_plugin_android_lifecycle, plugin_platform_interface and lints versions.\n- Fixes NPE when compressing images from gallery on Android 14 [#1455](https://github.com/miguelpruivo/flutter_file_picker/pull/1458). Thanks @mauriziopinotti.\n- Other minor bugs & fixes.\n\n## 7.0.2\n### Desktop (Linux)\n- File picker extensions for Linux Zenity are case insensitive now\n- Fixes [#1322](https://github.com/miguelpruivo/flutter_file_picker/issues/1322)\n\n## 7.0.1\n### Android\nFixes an issue where sequencial picks could replace the previous file [#1466](https://github.com/miguelpruivo/flutter_file_picker/pull/1466). Thanks @Arsanjuan87.\n\n## 7.0.0\n### iOS & Android\nAdds possibility to save files on mobile platforms as well [#1452](https://github.com/miguelpruivo/flutter_file_picker/pull/1452). Thanks @Samoy. \n\n## 7.0.0\n### Mobile (Android, iOS)\nSave file to mobile platforms with `bytes`.\n\n## 6.2.1\n### Desktop (Windows)\nThe `initialDirectory` parameter of `getDirectoryPath()` now works ([#970](https://github.com/miguelpruivo/flutter_file_picker/issues/970)).\n\n## 6.2.0\n### Android\nAdd ability to compress images on android by specifying a compression quality value ([#735]\n(https://github.com/miguelpruivo/flutter_file_picker/issues/735)).\n\n\n## 6.1.1\n### Android\nAndroid's CSV mime type is `text/comma-separated-values`. Added standard `text/csv` when the\nCSV extension is specified which fixes issues when picking CSV files from Google Drive\non Android devices.\n\n## 6.1.0\n### Web\n- Fixed endless loop on ios safari when canceling picking. ([#1364](https://github.com/miguelpruivo/flutter_file_picker/issues/1364)). Thank you @test0terter0n!\n- Add `readSequential` flag for web. If `readSequential` is true, order of picked files will be preserved. If flag is false, files will be read parallel. Thank you @test0terter0n!\n\n## 6.0.0\nUpdate minimum Flutter version to 3.7.0.\n\n### iOS\n- Update minimum iOS version to 11.0.\n- Fix several warnings in the iOS plugin implementation.\n\n## 5.5.0\n### iOS\n- Fix if selecting from gallery multiple files from remote sources (eg GoPro, Drone) imported to the device gallery and uploaded to iCloud they would have the same file name and it shows only one image repeated\n- Fix returned images are in different onder from the gallery selection\n\n## 5.3.4\nFix [#1317](https://github.com/miguelpruivo/flutter_file_picker/issues/1317)\n\n## 5.3.3\nFix [#1312](https://github.com/miguelpruivo/flutter_file_picker/issues/1312)\n\n## 5.3.2\n### Desktop (Windows)\nBumps the dependency `win32` to 5.0.2 ([#1281](https://github.com/miguelpruivo/flutter_file_picker/pull/1281)). Thank you @frg2089!\n\n## 5.3.1\n\nBump Dart SDK lower bound to <4.0.0 to support Dart 3\n\n## 5.3.0\n### Android\nUpdates Gradle to version 7.5\nAdds the namespace property for compatibility with Gradle 8\n\n## 5.2.11\n### Desktop (Windows)\nUpdates dependencies, including win32 bump to 4.1.3 ([#1255](https://github.com/miguelpruivo/flutter_file_picker/issues/1255)).\n\n## 5.2.10\n### Desktop (Windows)\nFixes the bug that the result of the save-file dialog was incorrect when it was invoked with a long default file name but the user selected a file with a much short file name ([#1257](https://github.com/miguelpruivo/flutter_file_picker/issues/1257)).\n\n## 5.2.9\n#### General\nFixes the errors `Type 'Uint8List' not found` and `'Uint8List' isn't a type` ([#1260](https://github.com/miguelpruivo/flutter_file_picker/issues/1260)). Thank you @miguelslemos!\n\n## 5.2.8\n\n### Desktop (Windows)\nFixes the bug that the current directory sometimes changed after the user picked a file. Now, after the dialog is closed, the current directory is automatically restored to its original value even if the user changed the directory while searching for files ([#1254](https://github.com/miguelpruivo/flutter_file_picker/issues/1254)). Thank you @Tokenyet!\n\n### Desktop (Linux)\nFixes the behavior of the `saveFile()` dialog on Ubuntu/Kubuntu. This fix should have been committed in the previous version _5.2.7_ but was forgotten. Now, when the user selects an already existing file, then Ubuntu prompts the user to confirm overwriting this file. This change finally makes the dialog behave the same on all desktop platforms (macOS, Linux, and Windows) ([#989](https://github.com/miguelpruivo/flutter_file_picker/issues/989)).\n\n## 5.2.7\n### Desktop (Windows)\nFixes the behavior of the `saveFile()` dialog on Windows. Now, when the user selects an already existing file, then Windows prompts the user to confirm overwriting this file. This change makes the dialog behave the same on all desktop platforms (macOS, Linux, and Windows). Previously, Windows would not have asked the user for confirmation ([#989](https://github.com/miguelpruivo/flutter_file_picker/issues/989)).\n\n## 5.2.6\n### Web\n- Increase time to wait on js result\n\n## 5.2.5\n### iOS\n- Fix preprocessor definitions in podspec (thanks @tomk9)\n\n## 5.2.4\n### Desktop (Windows)\n- Calling pick/save file dialog will no longer freeze ui thread.\n\n## 5.2.3\n### iOS\n- Fixes an issue when picking live photos where the key photo was changed.\n\n## 5.2.2\n### Android\n- Fix deprecation warning for `getParcelable(String key)` method.\n\n## 5.2.1\n#### Android\n- Removed build constant TIRAMISU to fix build error if targeting API 32 or less ([#1140](https://github.com/miguelpruivo/flutter_file_picker/issues/1140), [#1124](https://github.com/miguelpruivo/flutter_file_picker/issues/1124))\n\n## 5.2.0+1\n- Reverts 5.2.0 due to multiple regressions.\n\n\n## 5.2.0\n\n#### Android\n- Fixes issue with caching on android\n- Files will be retrieved without caching to avoid delay (Only cached if paths cannot be retrieved directly )\n## 5.1.0\n#### Desktop (Windows)\n- Update Dependencies to latest versions (Win32 2.7.0 to 3.0.0). (Thank you @ishangavidusha)\n- Set default dialog title to empty. (Thank you @whuhewei)\n\n#### iOS\nFixes an issue when picking live photos. (Thank you @nagibazad)\n\n#### Android\nRemoves READ_EXTERNAL_STORAGE on SDKs targeting 33 or above. (Thank you @alexmercerind)\n\n## 5.0.1\n#### Android\nReplaces random number generation with milliseconds timestamp in file name fallback.\n\n## 5.0.0\n\n#### General\nUpdated dependecies (most importantly is upgrade from ffi 1.1.2 to 2.0.1).\nUpdate lints from 1.0.1 to 2.0.0 (with several fixes of code).\n\n## 4.6.1\n\n#### iOS\nHandle `UTTypeCreatePreferredIdentifierForTag` returning `NULL`. This prevents a crash observed\non the iOS simulator on Apple Silicon ([#1040](https://github.com/miguelpruivo/flutter_file_picker/issues/783)).\n\n## 4.6.0\n\n#### iOS\nAdd conditional compilation of media, audio and document pickers for iOS.\nThis prevents error messages for permissions (NSPhotoLibraryUsageDescription, NSAppleMusicUsageDescription, etc.) when publishing to app store connect, in case you don't need either category. This addresses [#783](https://github.com/miguelpruivo/flutter_file_picker/issues/783) in a different way.\n\n## 4.5.1\n\n#### Web\nAdds `display:none` to the internal input element to fix a display issue in specific scenario's.\n\n## 4.5.0\n\n#### Desktop (Windows)\nChanges the implementation of `getDirectoryPath()` on Windows to provide a modern dialog that looks the same as a file picker dialog ([#915](https://github.com/miguelpruivo/flutter_file_picker/issues/915)).\n\n## 4.4.0\n\n#### Desktop (Linux, macOS, and Windows)\nAdds the additional parameter `initialDirectory` to configure the initial directory where the dialog should be opened. This parameter is supported for all three dialogs (pick files, pick directory, and save file). The only exception is that the parameter does not work on Windows for the function `getDirectoryPath()`. Please note that this feature has not been implemented for Android and iOS.\n\n## 4.3.3\n\n#### Desktop (Linux)\nIntroduces two fixes for the KDE Plasma Linux implementation which uses `kdialog` to open the file picker dialogs. Firstly, the selection of multiple files is fixed so that file paths with blanks/spaces are handled correctly. Secondly, file type filters are implemented. Thank you @w1th0utnam3.\n\n## 4.3.2\n\n#### Desktop (Windows)\nFixes the issue under Windows that the save-file dialog did not open if the specified file name contained an illegal character. Windows prohibits the usage of [reserved characters in file names](https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file#naming-conventions). Now the exception `IllegalCharacterInFileNameException` is thrown if the specified file name contains forbidden characters\n([#926](https://github.com/miguelpruivo/flutter_file_picker/issues/926)).\n\n## 4.3.1\n\n#### Desktop (Linux)\nAdds KDE Plasma's `kdialog` arguments, allowing `filepicker` to invoke `kdialog` for file system manipulation using shell scripts on distributions that use KDE Plasma as their Desktop Environment and don't ship `zenity` or `qarma`.\n\n## 4.3.0\n\n##### Desktop (Windows)\nAdds the parameter `lockParentWindow` for Windows desktop. This parameter makes the file picker dialog behave like a modal window. That is, the file picker always stays in front of the Flutter window until it is closed. Thank you @vinicios-cervantes.\n\n## 4.2.8\n\n##### Desktop (Windows)\nFixes the issue under Windows that the user could not select more than about 256 files (depending on the length of the file paths) because the buffer size for storing the selected file paths was too small. ([#918](https://github.com/miguelpruivo/flutter_file_picker/issues/918)).\n\n\n## 4.2.7\n\n##### Desktop (macOS & Windows)\nFixes the issue under Windows that the user could select all file types even though a file type filter was enabled. This error existed because the user could select the entry `All Files (*.*)` in the file type filter dropdown. Also, fixes the bug under macOS that users could select files without file extension even when one of the pre-defined file type filters (audio, image, video, or media) was enabled. ([#871](https://github.com/miguelpruivo/flutter_file_picker/issues/871)).\n\n## 4.2.6\n\n##### Android\nFixes linting error during builds ([#851](https://github.com/miguelpruivo/flutter_file_picker/issues/851)).\n\n## 4.2.5\n\n##### Desktop (macOS)\nFixes the issue of picking filenames that contain a comma followed by a space ([#890](https://github.com/miguelpruivo/flutter_file_picker/issues/890)).\n\n## 4.2.4\n\n##### iOS\nImproves error handling when device can't fetch files due to low storage space ([#885](https://github.com/miguelpruivo/flutter_file_picker/issues/885)).\n\n## 4.2.3\n\n##### iOS\nFixed an issue that was creating a crash when media in PHPickerViewController in iOs was tapped several times very fast, we check that _result is not empty to avoid the crash. No Github issue created.\n\n## 4.2.2+1\n\n##### Android\nReverts Android `READ_EXTERNAL_STORAGE` permission removal.\n\n## 4.2.2\n\n##### Android\nRemoves `<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>` permission from the platform implementation Manifest since may not be required for some applications and devs can manually add it to their own application if needed ([#864](https://github.com/miguelpruivo/flutter_file_picker/issues/864)).\n\n## 4.2.1\n\n##### Android\nFixes an issue where `onFileLoading` would be called while picking directories ([#863](https://github.com/miguelpruivo/flutter_file_picker/issues/863)).\n\n## 4.2.0\n\nAdds the `identifier` property to the `PlatformFile` which references the original file identifier for both iOS & Android ([#804](https://github.com/miguelpruivo/flutter_file_picker/issues/804)).\n\n## 4.1.6\n##### Desktop (macOS)\nFixes the issue that users could not pick `.app` files on macOS because FilePicker tried to determine the file size of `.app` files. On macOS, these special kind of files are actually Unix directories in a special format ([read more on StackExchange](https://apple.stackexchange.com/a/112213)). Now, if a file is picked, which is actually a directory, then the file size will be zero. ([#856](https://github.com/miguelpruivo/flutter_file_picker/issues/856))\n\n## 4.1.5\n##### Web\n- Fixes an issue that would prevent the call to return when both `withReadStream` and `allowMultiple` were set. ([#843](https://github.com/miguelpruivo/flutter_file_picker/issues/843)).\n- Addresses an issue in the example app.\n\n## 4.1.4\n##### Android\nAddresses an issue where multiple media files couldn't be picked in some 3rd party explorers ([#846](https://github.com/miguelpruivo/flutter_file_picker/issues/846)). Thank you @innim98.\n\n## 4.1.3\n##### iOS\nFixes an issue where Live Photos were being picked as `.pvt` packages (since iOS 15). From now on, if `allowCompression` is set to `true`, Live Photos will automatically be converted to static JPEG pictures. ([#835](https://github.com/miguelpruivo/flutter_file_picker/issues/835))\n\n## 4.1.2\n##### Desktop (Linux)\nFixes the issue that on Linux the file type filter `FileType.any` did not allow the selection of files without file extension. ([#836](https://github.com/miguelpruivo/flutter_file_picker/issues/836))\n\n## 4.1.1\n##### iOS\nFixes an issue that would result in picker being dismissed by pulling down the modal sheet without an event. ([#828](https://github.com/miguelpruivo/flutter_file_picker/issues/828))\n\n##### Web\nAddresses an issue when comparing files on Web would result in an error due to `path` not being accessible. ([#822](https://github.com/miguelpruivo/flutter_file_picker/issues/822))\n\n## 4.1.0\nExtends API by new function `saveFiles()` for opening a save-file dialog as requested in [#799](https://github.com/miguelpruivo/flutter_file_picker/issues/799). This feature is only supported on desktop platforms (Linux, macOS, and Windows).\n\n## 4.0.3\nMakes the `path` getter nullable to match with its property ([#823](https://github.com/miguelpruivo/flutter_file_picker/issues/823)).\n\n## 4.0.2\n##### Desktop (Windows)\nFixes custom extension filter. Thank you @jgoyvaerts.\n\n## 4.0.1\n##### General\nOverrides equality and toString for `platform_file` and `file_picker_result` for better comparison different results. Thank you @Nolence.\n##### iOS\n- Changes the presentation type of the picker from `UIModalPresentationCurrentContext` to `UIModalPresentationAutomatic` ([#813](https://github.com/miguelpruivo/flutter_file_picker/issues/813)).\n\n##### Web\n- Fixes regression of [#746](https://github.com/miguelpruivo/flutter_file_picker/issues/746).\n- Updates exception text when trying to access `path` on Web. Thank you @maxzod.\n\n## 4.0.0\n### Desktop support added for all platforms (MacOS, Linux & Windows) ([#271](https://github.com/miguelpruivo/flutter_file_picker/issues/271)) 🎉\nFrom now on, you'll be able to use file_picker with all your platforms, a big thanks to @philenius, which made this possible and allowed the [flutter_file_picker_desktop](https://github.com/philenius/flutter_file_picker_desktop) to be merged with this one.\n\nHave in mind that because of platforms differences, that the following API methods aren't available to use on Desktop:\n- The `onFileLoading()` isn't necessary, hence, `FilePickerStatus` won't change, since it hasn't any effect on those;\n- `clearTemporaryFiles()` isn't necessary since those files aren't created — the platforms will always use a reference to the original file;\n- There is a new optional parameter `dialogTitle` which can be used to set the title of the modal dialog when picking the files;\n\n##### Web\nAdds `onFileLoading()` to Web. ([#766](https://github.com/miguelpruivo/flutter_file_picker/issues/766)).\n\n## 3.0.4\n##### Android\n- Addresses an issue where an invalid custom file extension wouldn't throw an error when it should. Thank you @Jahn08.\n- Fixes `getDirectoryPath()` [#745](https://github.com/miguelpruivo/flutter_file_picker/issues/745). Thank you @tomm1e.\n\n## 3.0.3\n\n#### Web\n- Removes analysis_options.yaml from the plugin and fixes the _Don't import implementation files from another package_ warning (#746).\n#### Android\n- Addresses an issue where bytes might be missing after first picking when `withData` is set to `true`. ([#616](https://github.com/miguelpruivo/flutter_file_picker/issues/616)).\n\n#### Desktop (GO)\n- Patches README import path. (Thank you @voynichteru)\n\n## 3.0.2+2\n- Fixes [#725](https://github.com/miguelpruivo/flutter_file_picker/issues/725).\n\n## 3.0.2\n##### General\n- `name` and `size` properties are now non-nullable types.\n##### Docs\n- Updates README;\n- Updates API docs;\n\n##### Example\n- Updates Android example app to V2;\n##### Android\n- Removes deprecated call warnings;\n\n##### Other\n- Adds analysis_options.yaml with linter rule to surpress warnings from generated_plugin_registrant.\n\n## 3.0.1\n#### Android\n- Use MediaStore Opener (which goes through the gallery) instead of default explorer. (Thank you @tmthecoder).\n\n#### Web\n- Add event when canceling the picker. (Thank you @letranloc).\n\n#### Other\n- Updates example app to null safety.\n\n## 3.0.0\nAdds null safety support ([#510](https://github.com/miguelpruivo/flutter_file_picker/issues/510)).\n## 2.1.7\n### iOS\n- Fixes an issue where a crash could happen when picking a lot of media files in low memory devices ([#606](https://github.com/miguelpruivo/flutter_file_picker/issues/606)).\n- Updates `preferredAssetRepresentationMode`. Thank you @nrikiji.\n\n## 2.1.6\n- Addresses an issue on iOS 14 and later where events `onFileLoading` events weren't being provided ([#577](https://github.com/miguelpruivo/flutter_file_picker/issues/577)).\n\n## 2.1.5+1\n- Web: Updates `size` property from `PlatformFile` to be in bytes instead of kb;\n- Applies minor refactor to example app. Thank you @Abhishek01039;\n\n## 2.1.5\niOS & Android: Updates `size` property from `PlatformFile` to be in bytes instead of kb.\n\n## 2.1.4\niOS: Fixes iOS ViewController which is nil when UIWindow.rootViewController have changed. ([#525](https://github.com/miguelpruivo/flutter_file_picker/issues/525)). Thank you @devcxm.\n\n## 2.1.3\nAndroid: Updates file name handling method. ([#487](https://github.com/miguelpruivo/flutter_file_picker/issues/487))\n\n## 2.1.2\nDesktop (Go): Fixed desktop plugin implementation. Thank you @DenchikBY. ([#382](https://github.com/miguelpruivo/flutter_file_picker/issues/382#issuecomment-744055654))\n\n## 2.1.1\niOS: Fixes an issue that could result in a crash when selecting a media item twice. ([#518](https://github.com/miguelpruivo/flutter_file_picker/issues/518))\n\n## 2.1.0\nAdds `withReadStream` that allows bigger files to be streamed read into a `Stream<List<int>>`. Thanks @redsolver.\n\n## 2.0.13\nUpdates `extension` helper getter to use the `name` property instead of `path`, since the latest isn't available on the Web, hence, the extension wouldn't be as well. Thank you @markgrancapal.\n\n## 2.0.12\nAndroid:\n\n- Fixes an issue that could result in some files not being properly retrieved due to special characters on their names. ([#472](https://github.com/miguelpruivo/flutter_file_picker/issues/472))\n- Fixes a NPE that could happen with some devices. ([#482](https://github.com/miguelpruivo/flutter_file_picker/issues/482))\n\n\n## 2.0.11\niOS: Fixes `FileType.audio` exports to support ipod-library content (non DRM protected). From now on, a cached asset (m4a) will be exported from the selected music file in the Music app, so it can later be used. Fixes ([#441](https://github.com/miguelpruivo/flutter_file_picker/issues/441)).\n\n## 2.0.10\nAdds missing extension to `name` property of `PlatformFile`. ([#444](https://github.com/miguelpruivo/flutter_file_picker/issues/444))\n\n## 2.0.9+1\nMinor fix on CHANGELOG regarding version `2.0.9`.\n\n## 2.0.9\nAndroid: Updates package visibility to fully support Android 11 (SDK 30 and later). ([#440](https://github.com/miguelpruivo/flutter_file_picker/issues/440))\n\n*Note: If you have build issues from now on because `<queries>` aren't recognized, you'll need to update your build.gradle to use one of the [following patched versions](https://github.com/miguelpruivo/flutter_file_picker/wiki/Troubleshooting#android).*\n\n## 2.0.8+1\n- iOS: Updates media picker to launch in app context (instead of modal).\n- Minor update to README file.\n\n## 2.0.8\nFixes an issue on iOS 14, where canceling with swipe gestures, could result in cancel event not being dispatched. ([#431](https://github.com/miguelpruivo/flutter_file_picker/issues/431)).\n\n## 2.0.7\nFixes [#425](https://github.com/miguelpruivo/flutter_file_picker/issues/425) and updates iOS to use NSDocumentDirectory on iOS 12 or lower. Thanks @allanwolski.\n\n## 2.0.6\niOS: Fixes iOS 14 media picker (image & video) (#405, #407).\n\n## 2.0.5\nAndroid: Fixes [#402](https://github.com/miguelpruivo/flutter_file_picker/issues/402).\n\n## 2.0.4\nDesktop (Go): Fixes directory pick on Linux.\n\n## 2.0.3\nAndroid: Fixes out of memory issue on some devices when picking big files.\n\n## 2.0.2+2\nFixes multi-pick example on README.\n\n## 2.0.2+1\niOS: Fixes conditional import for backwards compatibility with Xcode 11.\n\n## 2.0.2\nWeb: Adds mobile Safari support and other minor improvements.\niOS: Adds conditional import for backwards compatibility with Xcode 11.\n\n## 2.0.1+2\niOS: Addresses an issue that could prevent users from viewing picked media elements (pictures/videos) from gallery on iOS 14.\n\n## 2.0.1+1\nFixes README screenshots.\n\n## 2.0.1\niOS: Updates picker to use new PHPickerController for both single and multi media (image/video) picks (iOS 14 and above only).\n\n## 2.0.0\n**Breaking Changes**\n- Unifies all platforms (IO, Web and Desktop) in a single plugin (file_picker) that can be used seamlessly across all. Both [file_picker_interface](https://pub.dev/packages/file_picker_platform_interface) and [file_picker_web](https://pub.dev/packages/file_picker_web) are no longer mantained from now on.\n- You'll now have to use `FilePicker.platform.pickFiles()` and extract the files from `FilePickerResult`;\n- Because platforms are unified and mixing `File` instances from dart:io and dart:html required stubbing and bloated code, it's no longer available as helper method so you'll have to instanciate a `File` with the picked paths;\n\n**New features**\n- Simplified usage, now you only need to use `FilePicker.platform.pickFiles()` with desired parameters which will return a `FilePickerResult` with a `List<PlatformFile>` containing the picked data;\n- Added classes `FilePickerResult` and `PlatformFile` classes with helper getters;\n- On Android all picked files are scoped cached which should result in most of files being available. Caching process is only made once, so once done, the picked instance should be the same;\n- On iOS picking audio now supports multiple and cloud picks;\n- Added parameter `withData` that allows file data to be immediately available on memory as `Uint8List` (part of `PlatformFile` instance). This is particularly helpful on web or if you are going to upload to somehwere else;\n- Major refactor with some clean-up and improvements;\n\n**Removed**\n- Single methods such as `getFilePath()`, `getMultiFilePath()`, `getFile()` and `getMultiFile()` are no longer availble in favor o `pickFiles()`;\n\n## 1.13.3\nGo: Updates MacOS directory picker to applescript (thank you @trister1997).\n\n## 1.13.2\nAndroid: fixes picking paths from Downloads directory on versions below Android Q.\n\n## 1.13.1\nAndroid: adds support to non-legacy picking on Android Q or above (thank you @lakshyab1995).\n\n## 1.13.0+1\nFixes an issue that could prevent `1.13.0` from being built due to missing `allowCompression` property.\n\n## 1.13.0\nAdds `allowCompression` property that will define if media (video & image) files are allowed to be compressed by OS when picked. On Android this has no effect as it already returns the original file or an integral copy.\n\n## 1.12.0\nAdds `getDirectoryPath()` desktop (go) implementation.\n\n## 1.11.0+3\nUpdates tearDown() call order on Android's implementation.\n\n## 1.11.0+2\nUpdates README file (iOS preview).\n\n## 1.11.0+1\nUpdates README file.\n\n## 1.11.0\nAdds `onFileLoading` handler for every picking method that will provide picking status: `FilePickerStatus.loading` and `FilePickerStatus.done` so you can, for example, display a custom loader.\n\n## 1.10.0\nAdds `getDirectoryPath()` method that allows you to select and pick directory paths. Android, requires SDK 21 or above for this to work, and iOS requires iOS 11 or above.\n\n## 1.9.0+1\nAdds a temporary workaround on Android where it can trigger `onRequestPermissionsResult` twice, related to Flutter issue [49365](https://github.com/flutter/flutter/issues/49365) for anyone affected in Flutter versions below 1.14.6.\n\n## 1.9.0\nAdds `clearTemporaryFiles()` that allows you to explicitly remove cached files — on Android applies typically to those picked from remote providers, on iOS _all_ picked files are cached.\n\n## 1.8.0+2\nUpdates podspec to use only PhotoGallery from DKImagePickerController (thanks @jamesdixon!)\n\n## 1.8.0+1\nMinor fix on `getFile()` method — should affect only those on 1.8.0.\n\n## 1.8.0\nAdds `FileType.media` that will allow you to pick video and images at the same time. On iOS, this will let you pick directly from Photos app (gallery), if you want to use Files app, you _must_ use `FileType.custom` with desired extensions.\n\n## 1.7.1\nUpdates iOS multi gallery picker dependency and adds a modal loading while fetching exporting assets.\n\n## 1.7.0\n**Breaking change**\n\nAdded support for multi-picks of videos and photos from Photos app on iOS through [DKImagePicker](https://github.com/zhangao0086/DKImagePickerController) — use any of the `getMulti` methods with `FileType.image` or `FileType.video`. From now on, you'll need to add `use_frameworks!` in your ios/Podfile.\n\n## 1.6.3+2\n* Fixes a crash on Android when a file has an id that can't be resolved and uses a name instead (#221);\n* Minor fix on Go (Desktop) - Windows (thanks @marchellodev);\n\n## 1.6.3+1\nAddresses an issue with plugin calls on Go (Desktop) - Linux & Windows\n\n## 1.6.3\nAddresses an issue with plugin calls on Go (Desktop) - MacOS\n\n## 1.6.2\nUpdates Go (Desktop) to support multiple extension filters.\n\n## 1.6.1\nAddresses an issue that could result in permission handler resolving requests from other activities.\n\n## 1.6.0\n\n* Adds multiple file extension filter support. From now on, you _must_ provide a `List` of extensions with type `FileType.custom` when restricting types while picking.\n* Other minor improvements;\n\n## 1.5.1\n\n* iOS: Fixes an issue that could result in a crash when selecting files (with repeated taps) from 3rd party remote providers (Google Drive, Dropbox etc.);\n* Go: Updates channel name;\n* Adds check that ensures that you one uses `FileType.custom` when providing a custom file extension filter;\n\n## 1.5.0+2\nUpdates channel name on iOS.\n\n## 1.5.0+1\nAdds temporary workaround for (#49365)(https://github.com/flutter/flutter/issues/49365) until 1.14.6 lands on stable channel.\n\n## 1.5.0\n\n* **Breaking change:** Refactored `FileType` to match lower camelCase Dart guideline (eg. `FileType.ALL` now is `FileType.any`);\n* Added support for new [Android plugins APIs](https://flutter.dev/docs/development/packages-and-plugins/plugin-api-migration) (Android V2 embedding);\n\n## 1.4.3+2\nUpdates dependencies.\n\n## 1.4.3+1\nRemoves checked flutter_export_environment.sh from example app.\n\n## 1.4.3\n\n**Bug fix**\n * Fixes an issue that could result in a crash when tapping multiple times in the same media file while picking, on some iOS devices (#171).\n\n## 1.4.2+1\nUpdates go-flutter dependencies.\n\n## 1.4.2\n\n**Bug fix**\n * Fixes an issue that could cause a crash when picking video files in iOS 13 or above due to SDK changes.\n * Updates Go-Flutter with go 1.13.\n\n## 1.4.1\n\n**Bug fix:** Fixes an issue that could result in some cached files, picked from Google Photos (remote file), to have the name set as `null`.\n\n## 1.4.0+1\n\n**Bug fix:** Fixes an issue that could prevent internal storage files from being properly picked.\n\n## 1.4.0\n\n**New features**\n * Adds Desktop support throught **[go-flutter](https://github.com/go-flutter-desktop/go-flutter)**, you can see detailed instructions on how to get in runing [here](https://github.com/go-flutter-desktop/hover).\n * Adds Desktop example, to run it just do `hover init` and then `hover run` within the plugin's example folder (you must have go and hover installed, check the previous point).\n * Similar to `getFile`, now there is also a `getMultiFile` which behaves the same way, but returning a list of files instead.\n\n**Improvements**\n * Updates Android SDK deprecated code.\n * Sometimes when a big file was being picked from a remote directory (GDrive for example), the UI could be blocked. Now this shouldn't happen anymore.\n\n## 1.3.8\n\n**Bug fix:** Fixes an issue that could cause a crash when picking files with very long names.\n\n**Changes:** Updates Android target API to 29.\n\n## 1.3.7\n\n**Rollback - Breaking change:** Re-adds runtime verification for external storage read permission. Don't forget to add the permission to the `AndroidManifest.xml` file as well. More info in the README file.\n\n**Bug fix:** Fixes a crash that could cause some Android API to crash when multiple files were selected from external storage.\n\n## 1.3.6\n\n**Improvements**\n * Removes the Android write permissions requirement.\n * Minor improvements in the example app.\n * Now the exceptions are rethrown in case the user wants to handle them, despite that already being done in the plugin call.\n\n## 1.3.5\n\n**Bug fix:** Fixes an issue that could prevent users to pick files from the iCloud Drive app, on versions below iOS 11.\n\n## 1.3.4+1\n\n**Rollback:** Removes a local dependency that shouldn't have been committed with `1.3.4` which would cause Android build to fail.\n\n## 1.3.4\n\n**Bug fix:** Protects the `registrar.activity()` in the Android side of being accessed when it's `null`.\n\n## 1.3.3\n\n**Bug fixes**\n * Fixes an issue where sometimes a single file path was being returned as a `List` instead of `String`.\n * `requestCode` in Android intents are now restricted to 16 bits.\n\n## 1.3.2\n\n**Bug fix:** Returns a `null` value in the `getFile()` when the picker is canceled.\n\n## 1.3.1\n\n**Bug fix:** Fixes an issue on Android, where other activity would try to call `FilePicker`'s result object when it shouldn't.\n\n## 1.3.0\n\n**Breaking changes**\n * `FileType.CAMERA` is no longer available, if you need it, you can use this package along with [image_picker](https://pub.dartlang.org/packages/image_picker).\n\n**New features**\n * You can now pick multiple files by using the `getMultiFilePath()` method which will return a `Map<String,String>` with all paths from selected files, where the key matches the file name and the value its path. Optionally, it also supports filtering by file extension, otherwise all files will be selectable. Nevertheless, you should keep using `getFilePath()` for single path picking.\n * You can now use `FileType.AUDIO` to pick audio files. In iOS this will let you select from your music library. Paths from DRM protected files won't be loaded (see README for more details).\n * Adds `getFile()` utility method that does the same of `getFilePath()` but returns a `File` object instead, for the returned path.\n\n**Bug fixes and updates**\n * This package is no longer attached to the [image_picker](https://pub.dartlang.org/packages/image_picker), and because of that, camera permission is also no longer required.\n * Fixes an issue where sometimes the _InputStream_ wasn't being properly closed. Also, its exception is now being forward to the plugin caller.\n * Fixes an issue where the picker, when canceled, wasn't calling the result callback on the underlying platforms.\n\n## 1.2.0\n\n**Breaking change**: Migrate from the deprecated original Android Support Library to AndroidX. This shouldn't result in any functional changes, but it requires any Android apps using this plugin to [also migrate](https://developer.android.com/jetpack/androidx/migrate) if they're using the original support library.\n\n## 1.1.1\n\n* Updates README file.\n\n## 1.1.0\n\n**Breaking changes**\n * `FileType.PDF` was removed since now it can be used along with custom file types by using the `FileType.CUSTOM` and providing the file extension (e.g. PDF, SVG, ZIP, etc.).\n * `FileType.CAPTURE` is now `FileType.CAMERA`\n\n**New features**\n * Now it is possible to provide a custom file extension to filter file picking options by using `FileType.CUSTOM`\n\n**Bug fixes and updates**\n * Fixes file names from cloud on Android. Previously it would always display **Document**\n * Fixes an issue on iOS where an exception was being thrown after canceling and re-opening the picker.\n * Fixes an issue where collision could happen with request codes on Android.\n * Adds public documentation to `file_picker`\n * Example app updated.\n * Updates .gitignore\n\n## 1.0.3\n\n * Fixes `build.gradle`.\n\n## 1.0.2\n\n * Minor update of README file.\n\n## 1.0.1\n\n * Adds comments for public API\n\n## 1.0.0\n\n * **Version 1.0** release.\n * Adds support for ANY and VIDEO files.\n * Fixes an issue where permissions were recursively asked on Android.\n * Fixes an issue where some paths from document files couldn't be loaded with Android 8.0.\n * Updates README file to match changes.\n * General refactor & cleanup.\n\n## 0.1.6\n* Replaces commons dependency with FilePath class on Android, to handle path resolution on different SDK.\n\n## 0.1.5\n* Minor correction in the README file.\n\n## 0.1.4\n* Changed Meta minimum version due to versioning conflict with flutter_localization.\n\n## 0.1.3\n\n* Updated readme.\n\n## 0.1.2\n\n* Changed license from Apache 2.0 to MIT.\n* Adds demo screenshot.\n\n## 0.1.1\n\n* Adds license information (Apache 2.0).\n* Adds CHANGELOG details.\n\n## 0.1.0\n\n* Initial release.\n* Supports picking paths from files on local storage, cloud.\n* Supports picking paths from both gallery & camera due to [image_picker](https://pub.dartlang.org/packages/image_picker) dependency.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.6806640625,
          "content": "# Contributing to File Picker\n\n:+1: :tada: First off, thanks for taking the time to contribute to _File Picker_! :tada: :+1:\n\nThe following is a first version of guidelines for contributing to _File Picker_. Feel free to propose changes to this document in a pull request.\n\n## Issue a Pull Request\n\n* **Dart code only:** before creating a pull request, please **write unit tests** if you added changes to Dart code under `lib/` (Java/Objective-C code is currently not tested). Please ensure that the **code analysis** via `dart analyze` throws no errors. Please also make sure that your **code is formatted correctly** via `dart format`. You can take a look into our CI pipeline at `.github/workflows/main.yml` for further details. The CI pipeline is triggered automatically when you create a pull request on GitHub. All steps in our pipeline must run without errors.\n\n* Please **update the package version** in `pubspec.yaml` and `CHANGELOG.md`. We use [semantic versionining (SemVer)](https://semver.org/). TL;DR: increase the patch version when your pull request contains a bug fix. Increase the minor version when a new feature is added. Breaking changes to _File Picker_'s public API should result in an increase in the major version.\n\n* Please **update the changelog** in `CHANGELOG.md`. Add a new level two heading with the updated package version to the top of the document, e.g. `## major.minor.patch`. Below that, add another level four heading that notes the affected platform(s), e.g. `#### Desktop (Linux)` or `Android`, and describe your changes. If your pull request is associated to an issue, then please reference the issue. The changelog will be shown on https://pub.dev/packages/file_picker/changelog.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2018 Miguel Ruivo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.4873046875,
          "content": "![fluter_file_picker](https://user-images.githubusercontent.com/27860743/64064695-b88dab00-cbfc-11e9-814f-30921b66035f.png)\n<p align=\"center\">\n <a href=\"https://pub.dartlang.org/packages/file_picker\">\n    <img alt=\"File Picker\" src=\"https://img.shields.io/pub/v/file_picker.svg\">\n  </a>\n <a href=\"https://github.com/Solido/awesome-flutter\">\n    <img alt=\"Awesome Flutter\" src=\"https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&style=flat-square\">\n  </a>\n <a href=\"https://www.buymeacoffee.com/gQyz2MR\">\n    <img alt=\"Buy me a coffee\" src=\"https://img.shields.io/badge/Donate-Buy%20Me%20A%20Coffee-yellow.svg\">\n  </a>\n  <a href=\"https://github.com/miguelpruivo/flutter_file_picker/issues\"><img src=\"https://img.shields.io/github/issues/miguelpruivo/flutter_file_picker\">\n  </a>\n  <img src=\"https://img.shields.io/github/license/miguelpruivo/flutter_file_picker\">\n  <a href=\"https://github.com/miguelpruivo/flutter_file_picker/actions/workflows/main.yml\">\n    <img alt=\"CI pipeline status\" src=\"https://github.com/miguelpruivo/flutter_file_picker/actions/workflows/main.yml/badge.svg\">\n  </a>\n</p>\n\n# File Picker\nA package that allows you to use the native file explorer to pick single or multiple files, with extensions filtering support.\n\n## Currently supported features\n* Uses OS default native pickers\n* Supports multiple platforms (Mobile, Web, Desktop)\n* Pick files using  **custom format** filtering — you can provide a list of file extensions (pdf, svg, zip, etc.)\n* Pick files from **cloud files** (GDrive, Dropbox, iCloud)\n* Single or multiple file picks\n* Supports retrieving as XFile (cross_file) for easy manipulation with other libraries\n* Different default type filtering (media, image, video, audio or any)\n* Picking directories\n* Load file data immediately into memory (`Uint8List`) if needed; \n* Open a save-file / save-as dialog (a dialog that lets the user specify the drive, directory, and name of a file to save)\n\nIf you have any feature that you want to see in this package, please feel free to issue a suggestion. 🎉\n\n## Compatibility Chart\n\n| API                   | Android            | iOS                | Linux              | macOS              | Windows            | Web                |\n| --------------------- | ------------------ | ------------------ | ------------------ | ------------------ | ------------------ | ------------------ |\n| clearTemporaryFiles() | :heavy_check_mark: | :heavy_check_mark: | :x:                | :x:                | :x:                | :x:                |\n| getDirectoryPath()    | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :x:                |\n| pickFiles()           | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n| saveFile()            | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :x:                |\n\nSee the [API section of the File Picker Wiki](https://github.com/miguelpruivo/flutter_file_picker/wiki/api) or the [official API reference on pub.dev](https://pub.dev/documentation/file_picker/latest/file_picker/FilePicker-class.html) for further details.\n\n\n## Documentation\nSee the **[File Picker Wiki](https://github.com/miguelpruivo/flutter_file_picker/wiki)** for every detail on about how to install, setup and use it.\n\n### File Picker Wiki\n\n1. [Installation](https://github.com/miguelpruivo/plugins_flutter_file_picker/wiki/Installation)\n2. [Setup](https://github.com/miguelpruivo/plugins_flutter_file_picker/wiki/Setup)\n   * [Android](https://github.com/miguelpruivo/plugins_flutter_file_picker/wiki/Setup#android)\n   * [iOS](https://github.com/miguelpruivo/plugins_flutter_file_picker/wiki/Setup#ios)\n   * [Web](https://github.com/miguelpruivo/flutter_file_picker/wiki/Setup#--web)\n   * [Desktop](https://github.com/miguelpruivo/flutter_file_picker/wiki/Setup#--desktop)\n3. [API](https://github.com/miguelpruivo/plugins_flutter_file_picker/wiki/api)\n   * [Filters](https://github.com/miguelpruivo/plugins_flutter_file_picker/wiki/API#filters)\n   * [Parameters](https://github.com/miguelpruivo/flutter_file_picker/wiki/API#parameters)\n   * [Methods](https://github.com/miguelpruivo/plugins_flutter_file_picker/wiki/API#methods)\n4. [FAQ](https://github.com/miguelpruivo/flutter_file_picker/wiki/FAQ)\n5. [Troubleshooting](https://github.com/miguelpruivo/flutter_file_picker/wiki/Troubleshooting)\n\n## Usage\nQuick simple usage example:\n\n#### Single file\n```dart\nFilePickerResult? result = await FilePicker.platform.pickFiles();\n\nif (result != null) {\n  File file = File(result.files.single.path!);\n} else {\n  // User canceled the picker\n}\n```\n#### Multiple files\n```dart\nFilePickerResult? result = await FilePicker.platform.pickFiles(allowMultiple: true);\n\nif (result != null) {\n  List<File> files = result.paths.map((path) => File(path!)).toList();\n} else {\n  // User canceled the picker\n}\n```\n#### Multiple files with extension filter\n```dart\nFilePickerResult? result = await FilePicker.platform.pickFiles(\n  allowMultiple: true,\n  type: FileType.custom,\n  allowedExtensions: ['jpg', 'pdf', 'doc'],\n);\n```\n#### Pick a directory\n```dart\nString? selectedDirectory = await FilePicker.platform.getDirectoryPath();\n\nif (selectedDirectory == null) {\n  // User canceled the picker\n}\n```\n#### Save-file / save-as dialog\n```dart\nString? outputFile = await FilePicker.platform.saveFile(\n  dialogTitle: 'Please select an output file:',\n  fileName: 'output-file.pdf',\n);\n\nif (outputFile == null) {\n  // User canceled the picker\n}\n```\n### Load result and file details\n```dart\nFilePickerResult? result = await FilePicker.platform.pickFiles();\n\nif (result != null) {\n  PlatformFile file = result.files.first;\n\n  print(file.name);\n  print(file.bytes);\n  print(file.size);\n  print(file.extension);\n  print(file.path);\n} else {\n  // User canceled the picker\n}\n```\n### Retrieve all files as XFiles or individually\n```dart\nFilePickerResult? result = await FilePicker.platform.pickFiles();\n\nif (result != null) {\n  // All files\n  List<XFile> xFiles = result.xFiles;\n\n  // Individually\n  XFile xFile = result.files.first.xFile;\n} else {\n  // User canceled the picker\n}\n```\n#### Pick and upload a file to Firebase Storage with Flutter Web\n```dart\nFilePickerResult? result = await FilePicker.platform.pickFiles();\n\nif (result != null) {\n  Uint8List fileBytes = result.files.first.bytes;\n  String fileName = result.files.first.name;\n  \n  // Upload file\n  await FirebaseStorage.instance.ref('uploads/$fileName').putData(fileBytes);\n}\n```\n\nFor full usage details refer to the **[Wiki](https://github.com/miguelpruivo/flutter_file_picker/wiki)** above.\n\n## Example App\n#### Android\n![DemoAndroid](https://github.com/miguelpruivo/flutter_file_picker/blob/master/example/screenshots/example_android.gif?raw=true)\n\n#### iOS\n![DemoMultiFilters](https://github.com/miguelpruivo/flutter_file_picker/blob/master/example/screenshots/example_ios.gif?raw=true)\n\n#### MacOS\n![DemoMacOS](https://github.com/miguelpruivo/flutter_file_picker/blob/master/example/screenshots/example_macos.png?raw=true)\n\n#### Linux\n![DemoLinux](https://github.com/miguelpruivo/flutter_file_picker/blob/master/example/screenshots/example_linux.gif?raw=true)\n\n#### Windows\n![DemoWindows](https://github.com/miguelpruivo/flutter_file_picker/blob/master/example/screenshots/example_windows.gif?raw=true)\n\n## Getting Started\n\nFor help getting started with Flutter, view our online\n[documentation](https://flutter.io/).\n\nFor help on editing plugin code, view the [documentation](https://flutter.io/platform-plugins/#edit-code).\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 1.05859375,
          "content": "include: package:lints/recommended.yaml\n\nanalyzer:\n  exclude:\n    - build/**\n    - example/**\n    - lib/generated_plugin_registrant.dart\n#   language:\n#     strict-raw-types: true\n#   strong-mode:\n#     implicit-casts: false\n\nlinter:\n  rules:\n    # - cancel_subscriptions\n    - comment_references\n    - slash_for_doc_comments\n    - use_key_in_widget_constructors\n    - unsafe_html\n    - unnecessary_statements\n    - throw_in_finally\n    - always_use_package_imports\n    - avoid_dynamic_calls\n    - avoid_empty_else\n    # - avoid_print\n    - avoid_relative_lib_imports\n    - avoid_slow_async_io\n    - avoid_type_to_string\n    - avoid_types_as_parameter_names\n    - avoid_web_libraries_in_flutter\n    - cancel_subscriptions\n    - close_sinks\n    - control_flow_in_finally\n    - diagnostic_describe_all_properties\n    - empty_statements\n    - hash_and_equals\n    - collection_methods_unrelated_type\n    - literal_only_boolean_expressions\n    - no_adjacent_strings_in_list\n    - no_duplicate_case_values\n    - no_logic_in_create_state\n    - prefer_void_to_null\n    - test_types_in_equals\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "ios",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 1.259765625,
          "content": "name: file_picker\ndescription: A package that allows you to use a native file explorer to pick single or multiple absolute file paths, with extension filtering support.\nhomepage: https://github.com/miguelpruivo/plugins_flutter_file_picker\nrepository: https://github.com/miguelpruivo/flutter_file_picker\nissue_tracker: https://github.com/miguelpruivo/flutter_file_picker/issues\nversion: 8.1.7\n\ndependencies:\n  flutter:\n    sdk: flutter\n  flutter_web_plugins:\n    sdk: flutter\n\n  flutter_plugin_android_lifecycle: ^2.0.17\n  plugin_platform_interface: ^2.1.8\n  ffi: ^2.0.1\n  path: ^1.8.2\n  win32: ^5.5.1\n  cross_file: ^0.3.3+7\n  web: ^1.0.0\n\ndev_dependencies:\n  lints: ^4.0.0\n  flutter_test:\n    sdk: flutter\n\nenvironment:\n  sdk: \">=3.4.0 <4.0.0\"\n  flutter: \">=3.22.0\"\n\nflutter:\n  plugin:\n    platforms:\n      android:\n        package: com.mr.flutter.plugin.filepicker\n        pluginClass: FilePickerPlugin\n        dartPluginClass: FilePickerIO\n      ios:\n        pluginClass: FilePickerPlugin\n        dartPluginClass: FilePickerIO\n      web:\n        pluginClass: FilePickerWeb\n        fileName: _internal/file_picker_web.dart\n      macos:\n        dartPluginClass: FilePickerMacOS\n      windows:\n        dartPluginClass: FilePickerWindows\n      linux:\n        dartPluginClass: FilePickerLinux\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}