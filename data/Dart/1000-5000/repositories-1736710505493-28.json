{
  "metadata": {
    "timestamp": 1736710505493,
    "page": 28,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "best-flutter/flutter_swiper",
      "stars": 3516,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1484375,
          "content": ".DS_Store\n.dart_tool/\n\n.packages\n.pub/\n\nbuild/\nios/.generated/\nios/Flutter/Generated.xcconfig\nios/Runner/GeneratedPluginRegistrant.*\ncoverage/lcov.info\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1826171875,
          "content": "language: dart\nenv:\n  - SHARD=dartfmt\n  - SHARD=test\ninstall:\n  - ./dev/bots/travis_install.sh\nscript:\n  - ./dev/bots/travis_script.sh\nafter_success:\n  - coveralls-lcov coverage/lcov.info"
        },
        {
          "name": "CHANGELOG-ZH.md",
          "type": "blob",
          "size": 2.046875,
          "content": "## [1.1.1] - [2018/09/20]\n    * 修复自动集成测试错误\n\n## [1.1.0] - [2018/09/20]\n    * 修复index的bug ,见 #11\n    * 增加 `autoplayDisableOnInteraction` 选项, 如果设置为true，那么在用户滑动的时候停止自动播放，滑动之后重新自动播放\n\n\n## [1.0.7] - [2018/09/02]\n    * 在Swiper dispose的时候不调用Controller的dispose.\n\n## [1.0.6] - [2018/08/28]\n    * `TINDER` 和 `STACK` 这两种布局方式实现垂直滚动, #9\n\n## [1.0.5] - [2018/08/09]\n    * viewportFraction<1.0增加fade参数\n\n## [1.0.4] - [2018/07/18]\n    * 修复一些错别字，感谢[csharad](https://github.com/csharad)\n   \n## [1.0.3] - [2018/07/18]\n    * 根据#5 ,用new来创建对象\n\n## [1.0.2] - [2018/07/16]\n    * 修复 #4\n\n## [1.0.1] - [2018/07/11]\n    * 支持布局方式(CUSTOM),你可以定制你自己的布局\n    \n## [1.0.0] - [2018/07/08]\n    * 增加布局方式( DEFAULT,STACK,TINDER )\n    * 可以将分页指示器放在容器外面\n\n## [0.0.9] - [2018/06/10]\n    * 增加CI\n    * 增加测试用例\n\n## [0.0.8] - [2018/06/07]\n    * 新增中文文档\n    * 更新依赖包：infinity_page_view 版本到 1.0.0\n\n## [0.0.7] - [2018/05/24]\n    * The default color of pagination is ThemeData.scaffoldBackgroundColor and ThemeData.primaryColor\n    * The default color of control buttons is ThemeData.primaryColor and ThemeData.disabledColor\n    * The alignment of pagination is Alignment.bottomCenter by default when scrollDirection== Axis.horizontal, Alignment.centerRight by default when scrollDirection== Axis.vertical\n    * Change default value of `autoplay` to false\n\n## [0.0.6] - [2018/05/24]\n    * Fix index bug\n\n## [0.0.5] - [2018/05/24]\n    * Fix zero itemCount bug\n    \n## [0.0.4] - [2018/05/20]\n    * Update README\n\n## [0.0.3] - [2018/05/20]\n    * Update README\n    * Support none loop mode\n    * Add more examples\n\n## [0.0.2] - [2018/05/20]\n    * Autoplay\n    * Plugins support \n    * Examples\n\n## [0.0.1] - [2018/05/20]\n    * Infinite loop\n    * Control buttons\n    * Pagination\n    * Custom control buttons\n    * Custom pagination\n    * Controler"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.150390625,
          "content": "\n## [1.1.5] - [2019/03/10]\n\n * Fix findRenderObject is null\n\n\n## [1.1.4] - [2018/10/18]\n\n## [1.1.2] - [2018/10/10]\n    * Fix #7\n    * Support layout for pagination.\n\n## [1.1.1] - [2018/09/20]\n    * Fix `test` failure.\n\n## [1.1.0] - [2018/09/20]\n    * Fix index bug ,See #11\n    * Enable `autoplayDisableOnInteraction` property, if set `true`,disable autoplay when user swipes.\n\n## [1.0.7] - [2018/09/02]\n    * Don't call SwiperController's dispose when `Swiper` dispose.\n\n## [1.0.6] - [2018/08/28]\n    * Implement vertical scroll direction for `TINDER` and `STACK` layout, see #9\n\n## [1.0.5] - [2018/08/09]\n    * Add feature : support fade for `viewportFraction`\n\n## [1.0.4] - [2018/07/18]\n    * Fix some typo,thanks to [csharad](https://github.com/csharad)\n\n## [1.0.3] - [2018/07/18]\n    * Use new to create everything. See #5\n\n## [1.0.2] - [2018/07/16]\n    * Fix #4\n\n## [1.0.1] - [2018/07/11]\n    * Add layout (CUSTOM) so that you can create your own layout\n\n## [1.0.0] - [2018/07/08]\n    * Add layouts ( DEFAULT,STACK,TINDER )\n    * Allow to put pagination outer of the swiper container.\n\n## [0.0.9] - [2018/06/10]\n    * Add ci\n    * Add testcase\n\n## [0.0.8] - [2018/06/07]\n    * And chinese document\n    * Update infinity_page_view version to 1.0.0\n\n## [0.0.7] - [2018/05/24]\n    * The default color of pagination is ThemeData.scaffoldBackgroundColor and ThemeData.primaryColor\n    * The default color of control buttons is ThemeData.primaryColor and ThemeData.disabledColor\n    * The alignment of pagination is Alignment.bottomCenter by default when scrollDirection== Axis.horizontal, Alignment.centerRight by default when scrollDirection== Axis.vertical\n    * Change default value of `autoplay` to false\n\n## [0.0.6] - [2018/05/24]\n    * Fix index bug\n        \n## [0.0.5] - [2018/05/24]\n    * Fix zero itemCount bug\n\n## [0.0.4] - [2018/05/20]\n    * Update README\n\n## [0.0.3] - [2018/05/20]\n    * Update README\n    * Support none loop mode\n    * Add more examples\n\n## [0.0.2] - [2018/05/20]\n    * Autoplay\n    * Plugins support \n    * Examples\n\n## [0.0.1] - [2018/05/20]\n    * Infinite loop\n    * Control buttons\n    * Pagination\n    * Custom control buttons\n    * Custom pagination\n    * Controler"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2018 Xueliang Ren\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README-ZH.md",
          "type": "blob",
          "size": 11.4248046875,
          "content": "![Logo](banner.jpg)\n\n<p align=\"center\">\n    <a href=\"https://travis-ci.org/best-flutter/flutter_swiper\">\n        <img src=\"https://travis-ci.org/best-flutter/flutter_swiper.svg?branch=master\" alt=\"Build Status\" />\n    </a>\n    <a href=\"https://coveralls.io/github/best-flutter/flutter_swiper?branch=master\">\n        <img src=\"https://coveralls.io/repos/github/best-flutter/flutter_swiper/badge.svg?branch=master\" alt=\"Coverage Status\" />\n    </a>\n    <a href=\"https://github.com/jzoom/flutter_swiper/pulls\">\n        <img src=\"https://img.shields.io/badge/PRs-Welcome-brightgreen.svg\" alt=\"PRs Welcome\" />\n    </a>\n    <a href=\"https://pub.flutter-io.cn/packages/flutter_swiper\">\n        <img src=\"https://img.shields.io/pub/v/flutter_swiper.svg\" alt=\"pub package\" />\n    </a>\n    <a target=\"_blank\" href=\"https://shang.qq.com/wpa/qunwpa?idkey=a71a2504cda4cc9ace3320f2dc588bdae928abc671e903463caeb71ec9302c2c\"><img border=\"0\" src=\"https://pub.idqqimg.com/wpa/images/group.png\" alt=\"best-flutter\" title=\"best-flutter\"></a>\n</p>\n<p align=\"center\">\n    <a href=\"https://github.com/jzoom/flutter_swiper\">\n        <b>英文说明</b>\n    </a>\n</p>\n\n\n# flutter_swiper\n\nflutter最强大的siwiper, 多种布局方式，无限轮播，Android和IOS双端适配.\n\n# :sparkles::sparkles: New Features: 分页组件\n\n正在使用这个项目作为分页： [flutter_page_indicator](https://github.com/best-flutter/flutter_page_indicator)  .\n\n# :sparkles::sparkles: New Features: 视差\n\n我们在 Swiper 中也像android一样支持了 `PageTransformer`, 只要给Swiper设置一下 `transformer` 属性就行,\n这里返回一个被转换的组件给Swiper. 目前仅仅支持 `DEFAULT`布局.\n感谢 @FlutterRocks ,棒棒哒 👏.\n\n正在使用这个项目作为视差 [transformer_page_view](https://github.com/best-flutter/transformer_page_view)  .\n\n\n\n# :sparkles::sparkles: 新功能\n\n\n![](https://github.com/jzoom/images/raw/master/layout1.gif)\n\n![](https://github.com/jzoom/images/raw/master/layout2.gif)\n\n![](https://github.com/jzoom/images/raw/master/layout3.gif)\n\n[更多](#内建的布局)\n\n\n# 截图\n\n![Horizontal](https://github.com/jzoom/flutter_swiper/raw/master/example/res/1.gif)\n\n![Vertical](https://github.com/jzoom/flutter_swiper/raw/master/example/res/2.gif)\n\n![Custom Pagination](https://github.com/jzoom/flutter_swiper/raw/master/example/res/3.gif)\n\n![Custom Pagination](https://github.com/jzoom/flutter_swiper/raw/master/example/res/4.gif)\n\n![Phone](https://github.com/jzoom/flutter_swiper/raw/master/example/res/5.gif)\n\n![Example](https://github.com/jzoom/images/raw/master/swiper-example.gif)\n\n[更多](#代码)\n\n## 功能路线\n\n1.x.x 功能实现：\n\n- [x] 无限循环轮播\n- [x] 控制按钮\n- [x] 分页指示器\n- [x] 非无限循环模式\n- [x] 单元测试\n- [x] 例子\n- [x] 滚动方向\n- [x] 可定制控制按钮\n- [x] 可定制分页\n- [x] 自动播放\n- [x] 控制器\n- [x] 外部分页指示器\n- [ ] 更多布局方式\n\n\n## 更新日志\n\n>参考:[CHANGELOG.md](https://github.com/jzoom/flutter_swiper/blob/master/CHANGELOG-ZH.md)\n\n## 目录\n\n- [安装](#安装)\n- [基本使用](#基本使用)\n- [构建](#构建)\n  + [基本构造函数](#基本构造函数)\n  + [分页指示器](#分页指示器)\n  + [控制按钮](#控制按钮)\n  + [控制器](#控制器)\n  + [自动播放](#自动播放)\n+ [内建的布局](#内建的布局)\n+ [一些常用代码示例](#代码)\n\n### 安装\n\n增加\n\n```bash\n\nflutter_swiper : ^lastest_version\n\n```\n到项目根目录下的 pubspec.yaml ,并且根目录运行命令行 \n\n```bash\nflutter packages get \n```\n\n\n### 基本使用\n\n使用命令行创建一个新项目:\n\n```\nflutter create myapp\n```\n\n编辑 lib/main.dart:\n\n```\n\nimport 'package:flutter/material.dart';\n\nimport 'package:flutter_swiper/flutter_swiper.dart';\n\nvoid main() => runApp(new MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return new MaterialApp(\n      title: 'Flutter Demo',\n      theme: new ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: new MyHomePage(title: 'Flutter Demo Home Page'),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  MyHomePage({Key key, this.title}) : super(key: key);\n\n  final String title;\n\n  @override\n  _MyHomePageState createState() => new _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n\n  @override\n  Widget build(BuildContext context) {\n    return new Scaffold(\n      appBar: new AppBar(\n        title: new Text(widget.title),\n      ),\n    body:  new Swiper(\n        itemBuilder: (BuildContext context,int index){\n          return new Image.network(\"http://via.placeholder.com/350x150\",fit: BoxFit.fill,);\n        },\n        itemCount: 3,\n        pagination: new SwiperPagination(),\n        control: new SwiperControl(),\n      ),\n    );\n  }\n}\n\n```\n\n\n\n### 构建\n\n\n#### 基本参数\n\n| 参数            | 默认值             |           描述     |\n| :-------------- |:-----------------:| :------------------------|\n| scrollDirection | Axis.horizontal  |滚动方向，设置为Axis.vertical如果需要垂直滚动   |\n| loop            | true             |无限轮播模式开关                              |\n| index           | 0                |初始的时候下标位置                            |\n| autoplay        | false             |自动播放开关. |\n| onIndexChanged  | void onIndexChanged(int index)  | 当用户手动拖拽或者自动播放引起下标改变的时候调用 |\n| onTap           | void onTap(int index)  | 当用户点击某个轮播的时候调用 |\n| duration        | 300.0            | 动画时间，单位是毫秒 |\n| pagination      | null             | 设置 `new SwiperPagination()` 展示默认分页指示器\n| control | null | 设置 `new SwiperControl()` 展示默认分页按钮\n\n\n#### 分页指示器\n\n分页指示器继承自 `SwiperPlugin`,`SwiperPlugin` 为 `Swiper` 提供额外的界面.设置为`new SwiperPagination()` 展示默认分页.\n\n\n| 参数            | 默认值             |           描述     |\n| :------------ |:---------------:| :-----|\n| alignment | Alignment.bottomCenter  | 如果要将分页指示器放到其他位置，那么可以修改这个参数 |\n| margin | const EdgeInsets.all(10.0) | 分页指示器与容器边框的距离 |\n| builder | SwiperPagination.dots | 目前已经定义了两个默认的分页指示器样式： `SwiperPagination.dots` 、 `SwiperPagination.fraction`，都可以做进一步的自定义. |\n\n如果需要定制自己的分页指示器，那么可以这样写：\n\n```\nnew Swiper(\n    ...,\n    pagination:new SwiperCustomPagination(\n        builder:(BuildContext context, SwiperPluginConfig config){\n            return new YourOwnPaginatipon();\n        }\n    )\n);\n\n```\n\n\n\n#### 控制按钮\n\n控制按钮组件也是继承自 `SwiperPlugin`,设置 `new SwiperControl()` 展示默认控制按钮.\n\n\n| 参数            | 默认值             |           描述     |\n| :------------ |:---------------:| :-----|\n| iconPrevious | Icons.arrow_back_ios  | 上一页的IconData |\n| iconNext | Icons.arrow_forward_ios | 下一页的IconData |\n| color | Theme.of(context).primaryColor | 控制按钮颜色 |\n| size | 30.0                           | 控制按钮的大小 |\n| padding | const EdgeInsets.all(5.0) | 控制按钮与容器的距离 |\n\n\n#### 控制器(SwiperController)\n\n`SwiperController` 用于控制 Swiper的`index`属性, 停止和开始自动播放. 通过 `new SwiperController()` 创建一个SwiperController实例，并保存，以便将来能使用。\n\n\n| 方法            | 描述     |\n| :------------ |:-----|\n| void move(int index, {bool animation: true}) | 移动到指定下标，设置是否播放动画|\n| void next({bool animation: true}) | 下一页 |\n| void previous({bool animation: true}) | 上一页 |\n| void startAutoplay() | 开始自动播放 |\n| void stopAutoplay() | 停止自动播放 |\n\n\n\n#### 自动播放\n\n| 参数            | 默认值             |           描述     |\n| :------------ |:---------------:| :-----|\n| autoplayDely | 3000  | 自动播放延迟毫秒数. |\n| autoplayDisableOnInteraction | true | 当用户拖拽的时候，是否停止自动播放. |\n\n\n\n## 内建的布局\n![](https://github.com/jzoom/images/raw/master/layout1.gif)\n\n```\nnew Swiper(\n  itemBuilder: (BuildContext context, int index) {\n    return new Image.network(\n      \"http://via.placeholder.com/288x188\",\n      fit: BoxFit.fill,\n    );\n  },\n  itemCount: 10,\n  viewportFraction: 0.8,\n  scale: 0.9,\n)\n\n```\n\n\n\n![](https://github.com/jzoom/images/raw/master/layout2.gif)\n\n```\nnew Swiper(\n  itemBuilder: (BuildContext context, int index) {\n    return new Image.network(\n      \"http://via.placeholder.com/288x188\",\n      fit: BoxFit.fill,\n    );\n  },\n  itemCount: 10,\n  itemWidth: 300.0,\n  layout: SwiperLayout.STACK,\n)\n```\n\n![](https://github.com/jzoom/images/raw/master/layout3.gif)\n\n```\nnew Swiper(\n    itemBuilder: (BuildContext context, int index) {\n      return new Image.network(\n        \"http://via.placeholder.com/288x188\",\n        fit: BoxFit.fill,\n      );\n    },\n    itemCount: 10,\n    itemWidth: 300.0,\n    itemHeight: 400.0,\n    layout: SwiperLayout.TINDER,\n )\n```\n\n\n\n![](https://github.com/jzoom/images/raw/master/layout4.gif)\n\n构建你自己的动画十分简单:\n```\n\n new Swiper(\n  layout: SwiperLayout.CUSTOM,\n  customLayoutOption: new CustomLayoutOption(\n      startIndex: -1,\n      stateCount: 3\n  ).addRotate([\n    -45.0/180,\n    0.0,\n    45.0/180\n  ]).addTranslate([\n    new Offset(-370.0, -40.0),\n    new Offset(0.0, 0.0),\n    new Offset(370.0, -40.0)\n  ]),\n  itemWidth: 300.0,\n  itemHeight: 200.0,\n  itemBuilder: (context, index) {\n    return new Container(\n      color: Colors.grey,\n      child: new Center(\n        child: new Text(\"$index\"),\n      ),\n    );\n  },\n  itemCount: 10)\n\n```\n\n`CustomLayoutOption` 被设计用来描述布局和动画,很简单的可以指定每一个元素的状态.\n\n```\nnew CustomLayoutOption(\n      startIndex: -1,  /// 开始下标\n      stateCount: 3    /// 下面的数组长度 \n  ).addRotate([        //  每个元素的角度\n    -45.0/180,\n    0.0,\n    45.0/180\n  ]).addTranslate([           /// 每个元素的偏移\n    new Offset(-370.0, -40.0),\n    new Offset(0.0, 0.0),\n    new Offset(370.0, -40.0)\n  ])\n\n```\n\n## 代码\n\n\n![Example](https://github.com/jzoom/images/raw/master/swiper-example.gif)\n\n```\nnew ConstrainedBox(\n  child: new Swiper(\n    outer:false,\n    itemBuilder: (c, i) {\n      return new Wrap(\n        runSpacing:  6.0,\n        children: [0,1,2,3,4,5,6,7,8,9].map((i){\n          return new SizedBox(\n            width: MediaQuery.of(context).size.width/5,\n            child: new Column(\n              mainAxisSize: MainAxisSize.min,\n              children: <Widget>[\n                new SizedBox(\n                  child:  new Container(\n                    child: new Image.network(\"https://fuss10.elemecdn.com/c/db/d20d49e5029281b9b73db1c5ec6f9jpeg.jpeg%3FimageMogr/format/webp/thumbnail/!90x90r/gravity/Center/crop/90x90\"),\n                  ),\n                  height: MediaQuery.of(context).size.width * 0.12,\n                  width: MediaQuery.of(context).size.width * 0.12,\n                ),\n                new Padding(padding: new EdgeInsets.only(top:6.0),child: new Text(\"$i\"),)\n              ],\n            ),\n          );\n        }).toList(),\n      );\n    },\n    pagination: new SwiperPagination(\n      margin: new EdgeInsets.all(5.0)\n    ),\n    itemCount: 10,\n  ),\n    constraints:new BoxConstraints.loose(new Size(screenWidth, 170.0))\n),\n\n```\n\n\n\n这里可以找到所有的定制选项\n\n>https://github.com/jzoom/flutter_swiper/blob/master/example/lib/src/ExampleCustom.dart"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.978515625,
          "content": "![Logo](banner.jpg)\n\n<p align=\"center\">\n    <a href=\"https://travis-ci.org/best-flutter/flutter_swiper\">\n        <img src=\"https://travis-ci.org/best-flutter/flutter_swiper.svg?branch=master\" alt=\"Build Status\" />\n    </a>\n    <a href=\"https://coveralls.io/github/best-flutter/flutter_swiper?branch=master\">\n        <img src=\"https://coveralls.io/repos/github/best-flutter/flutter_swiper/badge.svg?branch=master\" alt=\"Coverage Status\" />\n    </a>\n    <a href=\"https://github.com/jzoom/flutter_swiper/pulls\">\n        <img src=\"https://img.shields.io/badge/PRs-Welcome-brightgreen.svg\" alt=\"PRs Welcome\" />\n    </a>\n    <a href=\"https://pub.dartlang.org/packages/flutter_swiper\">\n        <img src=\"https://img.shields.io/pub/v/flutter_swiper.svg\" alt=\"pub package\" />\n    </a>\n    <a target=\"_blank\" href=\"https://shang.qq.com/wpa/qunwpa?idkey=a71a2504cda4cc9ace3320f2dc588bdae928abc671e903463caeb71ec9302c2c\"><img border=\"0\" src=\"https://pub.idqqimg.com/wpa/images/group.png\" alt=\"best-flutter\" title=\"best-flutter\"></a>\n</p>\n<p align=\"center\">\n    <a href=\"https://github.com/jzoom/flutter_swiper/blob/master/README-ZH.md\">\n        <b>中文说明</b>\n    </a>\n</p>\n\n\n\n# flutter_swiper\n\nThe best swiper for flutter , with multiple layouts, infinite loop. Compatible with Android & iOS.\n\n\n# :sparkles::sparkles: New Features:Layout for pagination.\n\nWe are using this project [flutter_page_indicator](https://github.com/best-flutter/flutter_page_indicator) now .\n\n# :sparkles::sparkles: New Features:PageTransformer\n\nFinally, we have `PageTransformer` like android, just set a `transformer` to `Swiper`,\nit returns a widget that has been transformed. For now, only support for layout `DEFAULT`.\nThanks to @FlutterRocks ,you've done great job 👏.\n\nWe are using this project [transformer_page_view](https://github.com/best-flutter/transformer_page_view) now .\n\n\n# :sparkles::sparkles: New Features:Layout\n\n\n![](https://github.com/jzoom/images/raw/master/layout1.gif)\n\n![](https://github.com/jzoom/images/raw/master/layout2.gif)\n\n![](https://github.com/jzoom/images/raw/master/layout3.gif)\n\n[See More](#build-in-layouts)\n\n\n# Showcases\n\n![Horizontal](https://github.com/jzoom/flutter_swiper/raw/master/example/res/1.gif)\n\n![Vertical](https://github.com/jzoom/flutter_swiper/raw/master/example/res/2.gif)\n\n![Custom Pagination](https://github.com/jzoom/flutter_swiper/raw/master/example/res/3.gif)\n\n![Custom Pagination](https://github.com/jzoom/flutter_swiper/raw/master/example/res/4.gif)\n\n![Phone](https://github.com/jzoom/flutter_swiper/raw/master/example/res/5.gif)\n\n![Example](https://github.com/jzoom/images/raw/master/swiper-example.gif)\n\n[See More](#codes)\n\n## Roadmap\n\n>see:[ROADMAP.md](https://github.com/jzoom/flutter_swiper/blob/master/ROADMAP.md)\n\n## Changelogs\n\n>see:[CHANGELOG.md](https://github.com/jzoom/flutter_swiper/blob/master/CHANGELOG.md)\n\n## Getting Started\n\n- [Installation](#installation)\n- [Basic Usage](#basic-usage)\n- [Constructor](#constructor)\n  + [Basic](#basic)\n  + [Pagination](#pagination)\n  + [Control buttons](#control-buttons)\n  + [Controller](#controller)\n  + [Autoplay](#autoplay)\n- [Build in layouts](#build-in-layouts)\n- [Codes](#codes)\n\n### Installation\n\nAdd \n\n```bash\n\nflutter_swiper : ^lastest_version\n\n```\nto your pubspec.yaml ,and run \n\n```bash\nflutter packages get \n```\nin your project's root directory.\n\n### Basic Usage\n\nCreate a new project with command\n\n```\nflutter create myapp\n```\n\nEdit lib/main.dart like this:\n\n```\n\nimport 'package:flutter/material.dart';\n\nimport 'package:flutter_swiper/flutter_swiper.dart';\n\nvoid main() => runApp(new MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return new MaterialApp(\n      title: 'Flutter Demo',\n      theme: new ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: new MyHomePage(title: 'Flutter Demo Home Page'),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  MyHomePage({Key key, this.title}) : super(key: key);\n\n  final String title;\n\n  @override\n  _MyHomePageState createState() => new _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n\n  @override\n  Widget build(BuildContext context) {\n    return new Scaffold(\n      appBar: new AppBar(\n        title: new Text(widget.title),\n      ),\n    body:  new Swiper(\n        itemBuilder: (BuildContext context,int index){\n          return new Image.network(\"http://via.placeholder.com/350x150\",fit: BoxFit.fill,);\n        },\n        itemCount: 3,\n        pagination: new SwiperPagination(),\n        control: new SwiperControl(),\n      ),\n    );\n  }\n}\n\n```\n\n\n\n### Constructor\n\n\n#### Basic\n\n| Parameter  | Default   | Description |\n| :------------ |:---------------:| :-----|\n| scrollDirection | Axis.horizontal  | If `Axis.horizontal`, the scroll view's children are arranged horizontally in a row instead of vertically in a column. |\n| loop | true |Set to `false` to disable continuous loop mode. |\n| index | 0 |  Index number of initial slide. |\n| autoplay | false |Set to `true` enable auto play mode. |\n| onIndexChanged | void onIndexChanged(int index)  | Called with the new index when the user swiped or autoplay |\n| onTap | void onTap(int index)  | Called when user tap ui. |\n| duration | 300.0  | The milliscends of every transaction animation costs  |\n| pagination | null | set `new SwiperPagination()` to show default pagination\n| control | null | set `new SwiperControl()` to show default control buttons\n\n\n#### Pagination\n\nThe pagination extends from `SwiperPlugin`,the `SwiperPlugin` provides extra ui for `Swiper`.Set `new SwiperPagination()` to show default pagination.\n\n\n| Parameter  | Default   | Description |\n| :------------ |:---------------:| :-----|\n| alignment | Alignment.bottomCenter  | Change this value if you what to put pagination in other place |\n| margin | const EdgeInsets.all(10.0) | The distance between inner side of the parent container. |\n| builder | SwiperPagination.dots | There are two default styles `SwiperPagination.dots` and `SwiperPagination.fraction`,both can be customized. |\n\nIf you'd like to customize your own pagination, you can do like this:\n\n```\nnew Swiper(\n    ...,\n    pagination:new SwiperCustomPagination(\n        builder:(BuildContext context, SwiperPluginConfig config){\n            return new YourOwnPaginatipon();\n        }\n    )\n);\n\n```\n\n\n\n#### Control buttons\n\nThe control also extends from `SwiperPlugin`,set `new SwiperControl()` to show default control buttons.\n\n\n| Parameter  | Default   | Description |\n| :------------ |:---------------:| :-----|\n| iconPrevious | Icons.arrow_back_ios  | The icon data to display `previous` control button |\n| iconNext | Icons.arrow_forward_ios | The icon data to display `next`. |\n| color | Theme.of(context).primaryColor | Control button color |\n| size | 30.0 | Control button size |\n| padding | const EdgeInsets.all(5.0) | Control button padding |\n\n\n#### Controller\n\nThe `Controller` is used to control the `index` of the Swiper, start or stop autoplay.You can create a controller by `new SwiperController()` and save the instance by futher usage.\n\n\n| Method  | Description |\n| :------------ |:-----|\n| void move(int index, {bool animation: true}) | Move to the spicified `index`,with animation or not |\n| void next({bool animation: true}) | Move to next |\n| void previous({bool animation: true}) | Move to previous |\n| void startAutoplay() | Start autoplay |\n| void stopAutoplay() | Stop autoplay |\n\n\n\n#### Autoplay\n\n| Parameter  | Default   | Description |\n| :------------ |:---------------:| :-----|\n| autoplayDelay | 3000  | Autoplay delay milliseconds. |\n| autoplayDisableOnInteraction | true | If set true, `autoplay` is disabled when use swipes. |\n\n## Build in layouts\n![](https://github.com/jzoom/images/raw/master/layout1.gif)\n\n```\nnew Swiper(\n  itemBuilder: (BuildContext context, int index) {\n    return new Image.network(\n      \"http://via.placeholder.com/288x188\",\n      fit: BoxFit.fill,\n    );\n  },\n  itemCount: 10,\n  viewportFraction: 0.8,\n  scale: 0.9,\n)\n\n```\n\n\n\n![](https://github.com/jzoom/images/raw/master/layout2.gif)\n\n```\nnew Swiper(\n  itemBuilder: (BuildContext context, int index) {\n    return new Image.network(\n      \"http://via.placeholder.com/288x188\",\n      fit: BoxFit.fill,\n    );\n  },\n  itemCount: 10,\n  itemWidth: 300.0,\n  layout: SwiperLayout.STACK,\n)\n```\n\n![](https://github.com/jzoom/images/raw/master/layout3.gif)\n\n```\nnew Swiper(\n    itemBuilder: (BuildContext context, int index) {\n      return new Image.network(\n        \"http://via.placeholder.com/288x188\",\n        fit: BoxFit.fill,\n      );\n    },\n    itemCount: 10,\n    itemWidth: 300.0,\n    itemHeight: 400.0,\n    layout: SwiperLayout.TINDER,\n )\n```\n\n\n![](https://github.com/jzoom/images/raw/master/layout4.gif)\n\nVery easy to create you own custom animation:\n```\n\n new Swiper(\n  layout: SwiperLayout.CUSTOM,\n  customLayoutOption: new CustomLayoutOption(\n      startIndex: -1,\n      stateCount: 3\n  ).addRotate([\n    -45.0/180,\n    0.0,\n    45.0/180\n  ]).addTranslate([\n    new Offset(-370.0, -40.0),\n    new Offset(0.0, 0.0),\n    new Offset(370.0, -40.0)\n  ]),\n  itemWidth: 300.0,\n  itemHeight: 200.0,\n  itemBuilder: (context, index) {\n    return new Container(\n      color: Colors.grey,\n      child: new Center(\n        child: new Text(\"$index\"),\n      ),\n    );\n  },\n  itemCount: 10)\n\n```\n\nThe `CustomLayoutOption` is designed to describe animations.\nIt is very easy to specify every state of items in Swiper.\n\n```\nnew CustomLayoutOption(\n      startIndex: -1,  /// Which index is the first item of array below      \n      stateCount: 3    /// array length \n  ).addRotate([        // rotation of every item \n    -45.0/180,\n    0.0,\n    45.0/180\n  ]).addTranslate([           /// offset of every item\n    new Offset(-370.0, -40.0),\n    new Offset(0.0, 0.0),\n    new Offset(370.0, -40.0)\n  ])\n\n```\n\n## Codes\n\n![Example](https://github.com/jzoom/images/raw/master/swiper-example.gif)\n\n```\nnew ConstrainedBox(\n  child: new Swiper(\n    outer:false,\n    itemBuilder: (c, i) {\n      return new Wrap(\n        runSpacing:  6.0,\n        children: [0,1,2,3,4,5,6,7,8,9].map((i){\n          return new SizedBox(\n            width: MediaQuery.of(context).size.width/5,\n            child: new Column(\n              mainAxisSize: MainAxisSize.min,\n              children: <Widget>[\n                new SizedBox(\n                  child:  new Container(\n                    child: new Image.network(\"https://fuss10.elemecdn.com/c/db/d20d49e5029281b9b73db1c5ec6f9jpeg.jpeg%3FimageMogr/format/webp/thumbnail/!90x90r/gravity/Center/crop/90x90\"),\n                  ),\n                  height: MediaQuery.of(context).size.width * 0.12,\n                  width: MediaQuery.of(context).size.width * 0.12,\n                ),\n                new Padding(padding: new EdgeInsets.only(top:6.0),child: new Text(\"$i\"),)\n              ],\n            ),\n          );\n        }).toList(),\n      );\n    },\n    pagination: new SwiperPagination(\n      margin: new EdgeInsets.all(5.0)\n    ),\n    itemCount: 10,\n  ),\n    constraints:new BoxConstraints.loose(new Size(screenWidth, 170.0))\n),\n\n```\n\n\n\n\n\nYou can find all custom options here:\n\n>https://github.com/jzoom/flutter_swiper/blob/master/example/lib/src/ExampleCustom.dart\n\n\n\n\n\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 0.2509765625,
          "content": "V1\n- [x] Infinite loop\n- [x] Control buttons\n- [x] Pagination\n- [x] None loop\n- [x] Unit tests\n- [x] Examples\n- [x] Direction\n- [x] Custom control buttons\n- [x] Custom pagination\n- [x] Autoplay\n- [x] Controler\n- [x] Set indicator outside\n- [ ] More layouts\n"
        },
        {
          "name": "banner.jpg",
          "type": "blob",
          "size": 15.6142578125,
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "flutter_swiper.iml",
          "type": "blob",
          "size": 1.2421875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/lib\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/test\" isTestSource=\"true\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.idea\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/build\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/ios/Flutter/flutter_assets/packages\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"Android API 25 Platform\" jdkType=\"Android SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"Dart SDK\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Flutter Plugins\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Dart Packages\" level=\"project\" />\n  </component>\n</module>"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.lock",
          "type": "blob",
          "size": 3.296875,
          "content": "# Generated by pub\n# See https://www.dartlang.org/tools/pub/glossary#lockfile\npackages:\n  async:\n    dependency: transitive\n    description:\n      name: async\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"2.0.8\"\n  boolean_selector:\n    dependency: transitive\n    description:\n      name: boolean_selector\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.0.4\"\n  charcode:\n    dependency: transitive\n    description:\n      name: charcode\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.1.2\"\n  collection:\n    dependency: transitive\n    description:\n      name: collection\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.14.11\"\n  flutter:\n    dependency: \"direct main\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_page_indicator:\n    dependency: \"direct main\"\n    description:\n      name: flutter_page_indicator\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"0.0.3\"\n  flutter_test:\n    dependency: \"direct dev\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  matcher:\n    dependency: transitive\n    description:\n      name: matcher\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"0.12.3+1\"\n  meta:\n    dependency: transitive\n    description:\n      name: meta\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.1.6\"\n  path:\n    dependency: transitive\n    description:\n      name: path\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.6.2\"\n  quiver:\n    dependency: transitive\n    description:\n      name: quiver\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"2.0.1\"\n  sky_engine:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.99\"\n  source_span:\n    dependency: transitive\n    description:\n      name: source_span\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.4.1\"\n  stack_trace:\n    dependency: transitive\n    description:\n      name: stack_trace\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.9.3\"\n  stream_channel:\n    dependency: transitive\n    description:\n      name: stream_channel\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.6.8\"\n  string_scanner:\n    dependency: transitive\n    description:\n      name: string_scanner\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.0.4\"\n  term_glyph:\n    dependency: transitive\n    description:\n      name: term_glyph\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.0.1\"\n  test_api:\n    dependency: transitive\n    description:\n      name: test_api\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"0.2.1\"\n  transformer_page_view:\n    dependency: \"direct main\"\n    description:\n      name: transformer_page_view\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"0.1.5\"\n  typed_data:\n    dependency: transitive\n    description:\n      name: typed_data\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"1.1.6\"\n  vector_math:\n    dependency: transitive\n    description:\n      name: vector_math\n      url: \"https://pub.flutter-io.cn\"\n    source: hosted\n    version: \"2.0.8\"\nsdks:\n  dart: \">=2.0.0 <3.0.0\"\n  flutter: \">=0.1.4 <3.0.0\"\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.4775390625,
          "content": "name: flutter_swiper\ndescription: The best swiper(carousel) for flutter, with multiple layouts, infinite loop. Compatible with Android & iOS.\nversion: 1.1.6\nauthor: JZoom <jzoom8112@gmail.com>\nhomepage: https://github.com/jzoom/flutter_swiper\n\ndependencies:\n  flutter:\n    sdk: flutter\n\n  transformer_page_view: ^0.1.6\n  flutter_page_indicator: ^0.0.3\n\nenvironment:\n  sdk: \">=2.0.0-dev.48.0 <3.0.0\"\n  flutter: \">=0.1.4 <3.0.0\"\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n\nflutter:\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}