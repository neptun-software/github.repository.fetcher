{
  "metadata": {
    "timestamp": 1736710574587,
    "page": 175,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fluttercandies/flutter_wechat_assets_picker",
      "stars": 1548,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 7.544921875,
          "content": "{\n  \"files\": [\n    \"README.md\"\n  ],\n  \"imageSize\": 50,\n  \"badgeTemplate\": \"[![All Contributors](https://img.shields.io/badge/all_contributors-<%= contributors.length %>-orange.svg?style=flat-square&logo=github)](#contributors)\",\n  \"commit\": false,\n  \"contributors\": [\n    {\n      \"login\": \"AlexV525\",\n      \"name\": \"Alex Li\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/15884415?v=4\",\n      \"profile\": \"https://blog.alexv525.com\",\n      \"contributions\": [\n        \"code\",\n        \"design\",\n        \"doc\",\n        \"example\",\n        \"ideas\",\n        \"maintenance\",\n        \"question\",\n        \"review\",\n        \"a11y\",\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"CaiJingLong\",\n      \"name\": \"Caijinglong\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/14145407?v=4\",\n      \"profile\": \"https://www.kikt.top\",\n      \"contributions\": [\n        \"example\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"SchnMar\",\n      \"name\": \"Marcel Schneider\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/12902321?v=4\",\n      \"profile\": \"https://github.com/SchnMar\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"ganlanshu0211\",\n      \"name\": \"ganlanshu0211\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/9670379?v=4\",\n      \"profile\": \"https://github.com/ganlanshu0211\",\n      \"contributions\": [\n        \"bug\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"JasonHezz\",\n      \"name\": \"JasonHezz\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/15358765?v=4\",\n      \"profile\": \"https://github.com/JasonHezz\",\n      \"contributions\": [\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"yanivshaked\",\n      \"name\": \"Yaniv Shaked\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/13107481?v=4\",\n      \"profile\": \"https://github.com/yanivshaked\",\n      \"contributions\": [\n        \"translation\",\n        \"code\",\n        \"bug\",\n        \"maintenance\"\n      ]\n    },\n    {\n      \"login\": \"avi-yadav\",\n      \"name\": \"avi-yadav\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/7314430?v=4\",\n      \"profile\": \"https://github.com/avi-yadav\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"Letalus\",\n      \"name\": \"Letalus\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/41230136?v=4\",\n      \"profile\": \"https://github.com/Letalus\",\n      \"contributions\": [\n        \"bug\",\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"greymag\",\n      \"name\": \"greymag\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1502131?v=4\",\n      \"profile\": \"https://github.com/greymag\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"NaikSoftware\",\n      \"name\": \"Nickolay Savchenko\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4218994?v=4\",\n      \"profile\": \"https://github.com/NaikSoftware\",\n      \"contributions\": [\n        \"design\"\n      ]\n    },\n    {\n      \"login\": \"KosukeSaigusa\",\n      \"name\": \"Kosuke Saigusa\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/13669049?v=4\",\n      \"profile\": \"https://github.com/KosukeSaigusa\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"Jon-Millent\",\n      \"name\": \"三闻书店\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/17584565?v=4\",\n      \"profile\": \"https://github.com/Jon-Millent\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"didiosn\",\n      \"name\": \"DidiosFaust\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/15895051?v=4\",\n      \"profile\": \"https://github.com/didiosn\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"ConanXie\",\n      \"name\": \"xiejie\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/10040846?v=4\",\n      \"profile\": \"https://github.com/ConanXie\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"maxzod\",\n      \"name\": \"Ahmed Masoud \",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/47630729?v=4\",\n      \"profile\": \"https://github.com/maxzod\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"luomo-pro\",\n      \"name\": \"luomo-pro\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/41097395?v=4\",\n      \"profile\": \"https://github.com/luomo-pro\",\n      \"contributions\": [\n        \"a11y\",\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"paigupai\",\n      \"name\": \"paigupai\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/44311361?v=4\",\n      \"profile\": \"https://github.com/paigupai\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"taqiabdulaziz\",\n      \"name\": \"Muhammad Taqi Abdul Aziz\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/30410316?v=4\",\n      \"profile\": \"https://github.com/taqiabdulaziz\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"hellohejinyu\",\n      \"name\": \"何锦余\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/8766034?v=4\",\n      \"profile\": \"https://github.com/hellohejinyu\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"leonpesdk\",\n      \"name\": \"Leon Dudlik\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/57394644?v=4\",\n      \"profile\": \"https://github.com/leonpesdk\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"LeGoffMael\",\n      \"name\": \"Maël\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/22376981?v=4\",\n      \"profile\": \"https://www.legoffmael.fr\",\n      \"contributions\": [\n        \"code\",\n        \"maintenance\"\n      ]\n    },\n    {\n      \"login\": \"dddrop\",\n      \"name\": \"dddrop\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/5361175?v=4\",\n      \"profile\": \"https://github.com/dddrop\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"nploi\",\n      \"name\": \"Nguyen Phuc Loi\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/34020090?v=4\",\n      \"profile\": \"https://www.linkedin.com/in/loinp\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"cevheri\",\n      \"name\": \"Cevheri\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/12383547?v=4\",\n      \"profile\": \"https://sqlturk.wordpress.com/\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"LIMMIHEE\",\n      \"name\": \"mirimhee\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/48482259?v=4\",\n      \"profile\": \"https://velog.io/@hee_mm_\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"AmosHuKe\",\n      \"name\": \"Amos\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/32262985?v=4\",\n      \"profile\": \"https://amoshk.top\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"Dimilkalathiya\",\n      \"name\": \"Dimil Kalathiya\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/102401667?v=4\",\n      \"profile\": \"https://github.com/Dimilkalathiya\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"Gasol\",\n      \"name\": \"Gasol Wu\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/108053?v=4\",\n      \"profile\": \"http://about.me/gasol\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    }\n  ],\n  \"contributorsPerLine\": 7,\n  \"projectName\": \"flutter_wechat_assets_picker\",\n  \"projectOwner\": \"fluttercandies\",\n  \"repoType\": \"github\",\n  \"repoHost\": \"https://github.com\",\n  \"skipCi\": true,\n  \"commitConvention\": \"angular\",\n  \"commitType\": \"docs\"\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.546875,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\ndevtools_options.yaml\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n*.lock\n.env"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 0e6818650f2e3798c342f4be293693737e35a453\n  channel: stable\n\nproject_type: package\n"
        },
        {
          "name": ".pubignore",
          "type": "blob",
          "size": 1.5380859375,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n*.lock\n.env\n_config.yml\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 20.6796875,
          "content": "<!-- Copyright 2019 The FlutterCandies author. All rights reserved.\nUse of this source code is governed by an Apache license\nthat can be found in the LICENSE file. -->\n\n# Changelog\n\n> [!IMPORTANT]  \n> See the [Migration Guide](guides/migration_guide.md) for the details of breaking changes between versions.\n\n## Unreleased\n\n### Fixes\n\n- Fixes semantics issues.\n\n## 9.4.2\n\n### Improvements\n\n- Add Traditional Chinese language text delegate. (Thanks to @Gasol)\n- Improves the default sort conditions on Android.\n\n## 9.4.1\n\n### Improvements\n\n- Improves the default sort conditions.\n\n### Fixes\n\n- Fixes selecting when reached the max asset limit in the preview.\n\n## 9.4.0\n\n### Improvements\n\n- Allows `extended_image: ^9.0.0`.\n\n### Fixes\n\n- Allows assets changing when no path previously.\n\n## 9.3.3\n\n### Fixes\n\n- Recovers the compatibility with Flutter 3.16.\n\n## 9.3.2\n\n### Improvements\n\n- Adapt the file type getter from the image provider to get a precise file type in grid.\n- Adds the identifier for grid item's semantics.\n- Improves preview page back button.\n\n## 9.3.1\n\n### Improvements\n\n- Do not mute the Live Photo during the preview.\n\n### Fixes\n\n- Fix the GIF indicator's layout.\n- Fix the directionality with the reverted grid item.\n\n## 9.3.0\n\n### New features\n\n- Add explicit Live Photos indicator for assets.\n\n### Improvements\n\n- Make Live Photos gesture consistent when scaling and panning.\n- Integrate `LocallyAvailableBuilder` with thumbnail options to improve the thumbnail loading speed.\n- Use `visibility_detector` and scroll observer to improve media playing experiences.\n\n### Fixes\n\n- Fix the bottom actions bar display conditions.\n\n## 9.2.2\n\n- Uses correct `isOriginal` for the `LocallyAvailableBuilder`.\n\n## 9.2.1\n\n- Improve changes when limited on iOS.\n- Use `LocallyAvailableBuilder` in the grid to provide better user awareness.\n\n## 9.2.0\n\n### New features\n\n- Introduce `AssetsChangeCallback` and `AssetsChangeRefreshPredicate`\n  to help users act according to asset changes.\n- Add `shouldAutoplayPreview` to the picker config.\n\n### Fixes\n\n- Raise detailed negative range error.\n- Fix viewer confirm button predication.\n- Enlarge GIF gradients.\n- Fix potential paths assets count unexpected merging behaviors.\n\n## 9.1.0\n\n### Improvements\n\n- Support limited permission displays on Android.\n- Improves the limited overlay padding on Android.\n- Adds permission request lock for the picker state.\n- Speeding up by splitting asset loading into separate steps.\n- Speeding up using `AdvancedCustomFilter` rather than `FilterOptionGroup` by default.\n\n### Fixes\n\n- Fix reverted index when previewing assets on Android.\n- Requests with the correct options with the picker.\n\n## 9.0.4\n\n### Fixes\n\n- Fix the app bar of the viewer that is not animating.\n- Fix loading when no assets are in the path.\n- Reset the has more to load flag between path switching.\n\n## 9.0.3\n\n### Fixes\n\n- Fix index reverting in `viewAsset`.\n\n## 9.0.2\n\n### Fixes\n\n- Fix the index with bottom items in the preview.\n\n## 9.0.1\n\n### Fixes\n\n- Fix the current asset in the picker viewer.\n\n### Improvements\n\n- Improve code formatting.\n\n## 9.0.0\n\n### Breaking changes\n\n- Migrate to Flutter 3.16, and drop supports for previous Flutter versions.\n- Bump `photo_manager` to v3.x.\n- Export `photo_manager_image_provider`.\n- Integrate `PermissionRequestOption` for callers.\n\n### Improvements\n\n- Adapt `ThemeData` usages.\n- Use `wechat_picker_library`.\n- Make the first asset count not blocking loads.\n\n### Fixes\n\n- Fix unhandled child semantics with the app bar title.\n- Fix styles around the app bar and other widgets.\n- Fix previewing selected assets' behavior.\n- Use `PermissionRequestOption` as much as possible.\n- Raise more errors for non-synced paths.\n- Fix the experience with `shouldRevertGrid`.\n\n## 8.8.0\n\n### New features\n\n- Add Korean language support. (Thanks to @LIMMIHEE)\n\n### Improvements\n\n- Use `viewAsset` in the preview button.\n\n### Fixes\n\n- Fix disposed provider throwing error when fetching assets. (#493)\n\n## 8.7.1\n\n### Improvements\n\n- Improve README docs and add topics for pub.\n\n## 8.7.0\n\n### Breaking changes\n\n- Migrate to Flutter 3.13, and drop supports for previous Flutter versions.\n\n## 8.6.3\n\n### Improvements\n\n- Improve `AssetPickerProvider.paths`.\n\n## 8.6.2\n\n### Improvements\n\n- Add `appBarPreferredSize` in the picker delegate to help with padding calculations.\n- Improve the performance with `MediaQuery` callers.\n\n## 8.6.1\n\n### Improvements\n\n- Remove `needTitle` for image filter options.\n\n### Fixes\n\n- Fix hit test when previewing videos.\n\n## 8.6.0\n\n### Breaking changes\n\n- Use `TargetPlatform` for the `isAppleOS` method in delegates, which relies on a `BuildContext`.\n\n### New features\n\n- Sync all UI details from WeChat 8.3.x. (#458)\n- Add Turkish language text delegate. (Thanks to @cevheri).\n- Allow to confirm 0 assets if there are selected assets previously. (#461)\n\n### Improvements\n\n- Silent part of thumbnail request exceptions.\n\n### Fixes\n\n- Fix semantics interactions for video preview. (#458)\n- Be able to update the items builder page. (#417)\n\n## 8.5.0\n\n### Breaking changes\n\n- Migrate to Flutter 3.10, and drop supports for previous Flutter versions.\n\n## 8.4.3\n\n### New features\n\n- Add Vietnamese language text delegate. (Thanks to @nploi).\n\n### Improvements\n\n- Expand `FilterOptionGroup` to `PMFilter`. (#436)\n\n## 8.4.2\n\n### Fixes\n\n- Avoid clearing selected assets when disposing the provider. (#428)\n\n## 8.4.1\n\n### Fixes\n\n- Call `AssetPickerProvider.dispose` when disposing the builder delegate. (#421)\n\n## 8.4.0\n\n### Breaking changes\n\n- Migrate to Flutter 3.7, and drop supports for previous Flutter versions.\n\n## 8.3.2+1\n\n### Improvements\n\n- Add more assertions. (#411)\n\n## 8.3.2\n\n### Fixes\n\n- Use `Completer` and more accurate conditions to avoid duplicate load assets\n  when `AssetPickerConfig.pageSize` is smaller than a complete page. (#407)\n\n## 8.3.1+1\n\n### Improvements\n\n- Fix images and descriptions in `README`s.\n\n## 8.3.1\n\n### New features\n\n- Add `didUpdateViewer` and `initAnimations` in the `AssetPickerViewerBuilderDelegate`. (#403)\n- Add insta_assets_picker as a custom delegate example. (#403)\n\n## 8.3.0\n\n### New features\n\n- Add `index` argument to `selectAsset` in the `AssetPickerBuilderDelegate`. (#399)\n\n### Improvements\n\n- Improve UI details in the `AssetPickerAppBar`. (#400)\n\n## 8.2.0\n\n### New features\n\n- Allow overrides `viewAsset` in the `AssetPickerBuilderDelegate`. (#391)\n\n### Fixes\n\n- Correct behaviors when the access is limited on iOS. (#392)\n\n## 8.1.4\n\n### Fixes\n\n- Fix conditions with the confirm button on iOS. (#376)\n\n## 8.1.3\n\n### Improvements\n\n- Bump `photo_manager` to explicitly remove the requirements of `requiredLegacyExternalStorage`.\n\n## 8.1.2\n\n### Fixes\n\n- Fix conditions with the confirm button. (#371)\n\n## 8.1.1\n\n### Fixes\n\n- Fix conditions with the confirm button. (#367)\n\n## 8.1.0\n\n### New features\n\n- Upgrade `photo_manager` for Android 13. (#365)\n\n### Improvements\n\n- Improve `BuildContext` usages to obtain the correct directionality for the assets grid. (#359)\n- Provide a better condition to the confirm button\n  to make sure it displays correctly in all cases on iOS/macOS. (#359)\n- Improve `bottomActionBar` in `DefaultAssetPickerBuilderDelegate`. (#359)\n\n### Fixes\n\n- Fix invalid path sort. (#364)\n\n## 8.0.2\n\n### Improvements\n\n- Adapt Flutter 3.3. (#354)\n\n## 8.0.1\n\n### Fixes\n\n- Fix not updated empty flag in `DefaultAssetPickerProvider`. (#353)\n\n## 8.0.0\n\nTo know more about breaking changes, see [Migration Guide][].\n\n### New Features\n\n- Introduce `PathWrapper` in delegates to improve the overall loading speed. (#338)\n- Allow using `Key` during picking. (#339)\n- Add `initializeDelayDuration` for `DefaultAssetPickerProvider`. (#341)\n- Prevent race conditions with paths. (#342)\n- Expose `sortPathsByModifiedDate`. (#343)\n\n### Fixes\n\n- Unify indicator usage to avoid accidental indicator switching. (#344)\n\n## 7.3.2\n\n### Improvements\n\n- Improve `onChangingSelected` in `AssetPickerViewerBuilderDelegate`. (#332)\n- Fix typo in `README.md`. (#333)\n\n### Fixes\n\n- Fix behaviors when unselecting all assets in the viewer. (#335)\n\n## 7.3.1\n\n### Improvements\n\n- Improve selection callers between picker and viewer. (#327)\n\n## 7.3.0\n\n### Breaking changes\n\n- Migrate to Flutter 3, and drop supports for previous Flutter versions.\n\n## 7.2.0\n\n### New features\n\n- Separate `AssetPickerDelegate` (#315),\n  which provides the ability to override methods within the `AssetPicker`.\n\n### Improvements\n\n- Improve `specialItemBuilder`. (#314)\n\n## 7.1.2\n\n### Fixes\n\n- Fix context usages for inherited theme data.\n- Fix unlinked path name builder.\n\n### Improvements\n\n- Update how paths get updated. (#312)\n- Expose `DefaultAssetPickerProvider.forTest`.\n\n## 7.1.1\n\n### Fixes\n\n- Fix `selectPredicate` with the viewer. (#307)\n\n## 7.1.0\n\n### New features\n\n- Add `PathNameBuilder`. (#303)\n- Add `LimitedPermissionOverlayPredicate`. (#287)\n\n## 7.0.5\n\n### Improvements\n\n- Support compile on the Web. (#273)\n\n## 7.0.4\n\n### Improvements\n\n- Make all text delegates const.\n\n## 7.0.3\n\n### Fixes\n\n- Fix the broken semantics on iOS/macOS. (#272)\n\n## 7.0.2\n\n### Fixes\n\n- Fix wrong conditions judging when obtaining path thumbnails.\n\n## 7.0.1\n\n### Improvements\n\n- Support semantics with Japanese text delegates. (#266).\n\n### Fixes\n\n- Obtain the path thumbnail only when the asset is an image or video.\n\n## 7.0.0\n\nTo know more about breaking changes, see [Migration Guide][].\n\n### New features\n\n- Support predictable special item display. (#264)\n- Support Live-Photos display. (#251)\n- Expose `AssetPickerPageRoute` for customization. (#248)\n- Add full semantics support. (#232, #235, #240, #242, #243, #245, #254)\n\n### Improvements\n\n- Improve scaling with select indicators and numbers.\n- Implement the default light theme. (#234)\n\n### Fixes\n\n- Fix `LocallyAvailableBuilder` with more edge conditions. (#263)\n- Fix potential \"No elements\" error with thumbnails.\n\n## 6.3.1\n\n- Improve image type determined when resolving image data.\n  This mostly resolved the occasional HEIC loading issue when\n  apps are running under the release mode.\n\n## 6.3.0\n\n- Support for Flutter 2.8.0, also drop supports for Flutter below 2.8.0.\n\n## 6.2.4\n\n- Improve audio item layout.\n- Improve workflows.\n- Indicate the path getter more precisely.\n- Improve Arabic text delegate.\n\n## 6.2.3\n\n- Pass through `selectPredicate` to `AssetPickerViewer`. (#211)\n- Bump the `sdk` constraints (since 6.2.1).\n\n## 6.2.2\n\n- Use `.contentUri` for video preview only on Android.\n\n## 6.2.1\n\n- Migrate to `extended_image` 5.x.\n- Use `.contentUri` constructor for `VideoPlayerController`.\n\n## 6.2.0\n\n- Introduce `shouldRevertGrid` to determine whether the assets grid should be reverted.\n- Upgrade `photo_manager` to resolve issues against `AssetEntity`s comparison.\n\n## 6.1.2\n\n- Fix the limited resources refresh issue.\n- Update callers to avoid deprecated usage.\n\n## 6.1.1\n\n- Handle iCloud video more gracefully.\n\n## 6.1.0\n\n- Introduce `selectPredicate` to predicate asset when picking.\n\n## 6.0.6\n\n- Use the correct index reference with `selectedBackdrop`. (#195)\n\n## 6.0.5\n\n- Upgrade dependencies.\n\n## 6.0.4\n\n- Add French language text delegate. (Thanks to @didiosn)\n- Export \"Nothing here.\" as a field to text delegate. (#190)\n- Fix selected backdrop not synced all the time.\n- Improve the instructions for the example.\n\n## 6.0.3\n\n- Fix path entity nullable issues with the asset grid.\n- Fix assets displaying conditions missing with the iOS layout.\n\n## 6.0.2\n\n- Expose `shouldReversePreview` for `AssetPickerViewerBuilderDelegate`.\n\n## 6.0.1\n\n- Improve total count calculation with `AssetPathEntity`. (#187)\n- Obtain `AssetPathEntity.isAll` fix from `photo_manager`.\n- Documents update.\n\n## 6.0.0\n\n### New features\n\n- Sync all UI details from WeChat 8.0.x.\n- Integrate iCloud progress overview in previews.\n- Change the permission from the app settings when it's limited.\n- Request more assets on iOS when the permission is limited.\n- Fit the assets' grid's layout as the iOS `Photos` app (reverted and started from the bottom).\n- Add Arabic language text delegate.\n- Allow using `AssetPicker` and `AssetPickerViewer` directly with delegates.\n- Add `keepScrollOffset` feature for the `AssetPickerBuilderDelegate`.\n\n### Improvements\n\n- Items that are being banned from select (reached max assets or type conflict)\n  will have a stronger color cover to indicate.\n- The video preview in the [SpecialPickerType.wechatMoment] is completely different from other previews.\n- Grid items have removed the fade builder for more straight feedback after it gets loaded.\n- Better interaction when jumping between previewing assets.\n- Path entities list layout structure performance & structure improved.\n- More precise thumbnail option for iOS.\n- Improve text scale handling. (#177)\n- Reduce font size for a couple of texts.\n\nTo know more about breaking changes, see [Migration Guide][].\n\n## 5.5.8\n\n- Fix the viewer's select button issue with WeChat Moment on Android.\n\n## 5.5.7\n\n- Make `switchPath` method in `AssetPickerProvider` async.\n\n## 5.5.6\n\n- Add Japanese language text delegate. (Thanks to @KosukeSaigusa)\n- Fix video judge condition with WeChat Moment mode.\n- Fix the wrong position for the confirm button on iOS with WeChat Moment mode.\n\n## 5.5.5\n\n- Migrate permissions check to the new API in `photo_manager`.\n\n## 5.5.4\n\n- Fix assets reduced under the WeChat Moment mode when previewing.\n\n## 5.5.3+1\n\n- Fix static analysis issue.\n\n## 5.5.3\n\n- Use `SystemUiOverlayStyle` from the provided theme first.\n\n## 5.5.2\n\n- Add German language text delegate. (Thanks to @Letalus)\n- Add Russian language text delegate. (Thanks to @greymag)\n\n## 5.5.1\n\n- Implement `RenderToggleable` to support other channels of flutter (2.1.x - 2.3.x). (Thanks to @Letalus)\n\n## 5.5.0\n\n- Add `findChildIndexBuilder` to indicate grid find reusable `RenderObject`.\n- Fix the padding issue for the assets' grid.\n\n## 5.4.3\n\n- Fix the missing `ScrollController` in the scroll view.\n\n## 5.4.2\n\n- Split `AssetGridItemBuidler` to solve the rebuild issue.\n- Fix the GIF indicator stretched issue.\n\n## 5.4.1\n\n- Export `AssetPickerPageRoute`.\n\n## 5.4.0+1\n\n- Fix the format that pub.dev suggests.\n\n## 5.4.0\n\n- Fully support RTL languages.\n- Add control for root navigator.\n- Improve `AssetEntityImageProvider`'s constructor and decode.\n- Grab the iOS/macOS thumbnail's size fix from `photo_manager`.\n\n## 5.3.0\n\n- Add `gridThumbSize` to control thumbnails in the select grid.\n- Applies a further fix to the WeChat Moment video preview.\n- Fix unlimited assets choose in preview mode.\n\n## 5.2.1\n\n- Fix the WeChat Moment preview issue.\n\n## 5.2.0\n\n- Add `SpecialPickerType.noPreview` to disable the preview when picking. (Thanks to @yanivshaked)\n\n## 5.1.4\n\n- Add Hebrew language text delegate. (Thanks to @yanivshaked)\n- Fix the slide page route issue when integrated with the `get` package.\n\n## 5.1.3\n\n- Fix not synced issue when the picker is under single pick mode.\n\n## 5.1.2\n\n- Fix selected assets not syncing between thumbnail preview mode and grid view.\n- Fix the wrong index displays in thumbnail preview mode.\n- Dependencies upgrade roll.\n\n## 5.1.1\n\n- Integrate `lastModified` to sort path entities by default.\n\n## 5.1.0\n\n- Reset to the top for the asset grid view after switching paths.\n- Add the ability to select assets in any position of the picker.\n- Implement mime type for image type judgment.\n- Fix the disappeared GIFs indicator.\n\n## 5.0.5\n\n- Fix force cast null type issue with WeChat moment special pick type.\n- Improve the app bar's type definition.\n\n## 5.0.4\n\n- Fix path thumb data's display issue.\n- Fix the default preview thumb size issue with the image preview builder.\n\n## 5.0.3\n\n- Remove required annotation for selected assets.\n\n## 5.0.2\n\n- Fix the wrong viewer provider state.\n- Enhance page stream controller sink close.\n- Fix `dartdoc` generate issue for pub.\n\n## 5.0.1\n\n- Fix the video indicator layout issue.\n- Prevent video selection in WeChat moment mode for edge cases.\n- Pickup fixes from `photo_manager`.\n\n## 5.0.0\n\n- Add the ability to show the special item when the device has no assets.\n- Allow users to build their own picker with custom asset types. (See example for custom delegate.)\n- Slightly reduce performance consumption with layout.\n\n### Breaking changes\n\n- Migrate to non-nullable by default.\n- `CustomItemBuilder` -> `SpecialItemBuilder`, `CustomItemPosition` -> `SpecialItemPosition`.\n- Abstract `AssetPickerBuilderDelegate<A, P>`, `AssetPickerViewerBuilderDelegate<A, P>`,\n  `AssetPickerProvider<A, P>`, and minify the `AssetPickerViewerProvider<A>`. Support custom types by generic type.\n- The `assets` param in `AssetPickerViewer.pushToViewer` is now `previewAssets`.\n\n## 4.2.2\n\n- Suppress deprecated usage for example.\n- Improve code format with dart format.\n- Raise the dependencies version.\n\n## 4.2.1\n\n- Fix arguments judging condition with preview thumb size.\n- Remove common exports and split out constants.\n\n## 4.2.0\n\n- Add `previewThumbSize` for the viewer.\n\n## 4.1.0+4\n\n- Upgrade `extended_image`.\n\n## 4.1.0+3\n\n- Make widgets constant.\n- Remove system UI overlays update.\n- Migrate files to compatible with Flutter `1.20.0`.\n- Sync analysis options.\n\n## 4.1.0+2\n\n- Ignore size constraints for image assets.\n- Format code using `dartfmt`.\n- Upgrade `photo_manager`.\n\n## 4.1.0+1\n\n- Adjust AppleOS layout.\n\n## 4.1.0\n\n- Add a backdrop widget in the picker, which makes the picker more like the one in WeChat.\n\n## 4.0.0\n\n- Drop `asset_audio_player`.\n- Experimenting status bar hidden on iOS.\n- Remove the video player listener before pausing.\n\n### Breaking changes\n\n- `TextDelegate` -> `AssetsPickerTextDelegate`.\n\n## 3.0.0+1\n\n- Constraint dependencies version.\n\n## 3.0.0\n\n- Add `FilterOptionGroup`. (#41)\n- Add `SpecialPickerType`. (#37)\n- Add custom item build mode. (#39)\n\n## 2.2.1\n\n- Introduce `ColorScheme` for theme details. (#32)\n- Enhance RTL compatibility.\n- Enlarge select indicator's size. (#33)\n\n## 2.2.0+2\n\n- Remove path entity properties refresh.\n\n## 2.2.0+1\n\n- Fix the preview widget for audio assets in the picker viewer.\n\n## 2.2.0\n\n- A brand-new example.\n- Add `SortPathDelegate`.\n- Using `ZoomPageTransition` for viewers.\n- Slightly add padding to the viewer's assets list view.\n- Migrate elevation and color to material rendering.\n- Request thumb only when the request type is not audio.\n- Force request title for audio type asset.\n- Expose `AssetType` enum.\n- Fix the issue with the request type.\n\n## 2.1.0\n\n- Add present English text delegate.\n- Refactored theme constructor and getter with theme capability. (#22)\n- Update color scheme usage for the assets grid. (#23)\n- Update picker viewer style for Apple OS.\n- Fix the bottom bar disappearing on Apple OS when it's single asset mode.\n\n## 2.0.2\n\n- Fix audio paused accidentally when the app is launching on Android. (#18)\n\n## 2.0.1\n\n- Expose observe register methods.\n\n## 2.0.0\n\n- Support audio assets.\n- Support single asset mode.\n- Enlarge the preview button's detector area size.\n- Fix wrong properties' usage causing infinite build when the page reaches the end.\n\n### Breaking changes\n\n- `videoIndicatorBuilder` -> `durationIndicatorBuilder`.\n\n## 1.7.0\n\n- Hide detail display when the video starts to play.\n- Switch to `ExtendedImageGesturePageView`. (#16)\n- Add full theme support.\n- Add macOS support.\n- Add delay for the first init method to prevent stuck in page routing. (#13)\n- Update widgets style on iOS. (#14)\n- Fix the state of the example not updated after the result was returned without the input method activated.\n\n## 1.6.0\n\n- Support HEIC/HEIF image type.\n\n## 1.5.0+1\n\n- Upgrade `photo_manager` to `0.5.1`.\n- Replace deprecate `TextTheme.title` API usage.\n- Document (`dartdoc`) update.\n\n## 1.5.0\n\n- Bumping flutter SDK minimum version to `1.17.0`.\n- Declare API stability and compatibility with 1.0.0\n  ( more details at: https://github.com/flutter/flutter/wiki/Package-migration-to-1.0.0 ).\n\n## 1.4.1\n\n- Remove the loading indicator for the image widget.\n- Refactor the video page's initialization for ratio update.\n- Using constants to store text delegate.\n- Add error catching for main methods.\n- Update text delegate management.\n\n## 1.4.0+1\n\n- Fix call on null with `currentlySelectedAssets`.\n\n## 1.4.0\n\n- Support paging assets load.\n- Fix selected assets not synced with the picker provider.\n- Bump `photo_manager` to `0.5.1-dev.5`\n\n## 1.3.2\n\n- Expose page transition curve and duration to a static method.\n- Fix theme color not passed to a static method.\n\n## 1.3.1+1\n\n- Fix the `pageBuilder` null issue.\n\n## 1.3.1\n\n- Add upwards slide page transition.\n- Add padding to the bottom action bar in the picker.\n\n## 1.3.0\n\n- Add iOS style.\n- Add cancel field to text delegate.\n- `Set` -> `List`.\n\n## 1.2.1\n\n- Fix the missing aspect ratio for the video player.\n- Using common request type in example.\n\n## 1.2.0\n\n- Add text delegate support. (Also with i18n support using delegate).\n\n## 1.1.0\n\n- Support video assets. You can use `requestType` to select video or video+image.\n- Hide system ui overlays according to flag and system.\n- Update the GIF indicator and add a video indicator.\n\n## 1.0.0\n\n- Initial release.\n\n[Migration Guide]: guides/migration_guide.md\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.0234375,
          "content": "* @AlexV525 @LeGoffMael\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2019] [FlutterCandies]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README-ZH.md",
          "type": "blob",
          "size": 27.6357421875,
          "content": "<!-- Copyright 2019 The FlutterCandies author. All rights reserved.\nUse of this source code is governed by an Apache license\nthat can be found in the LICENSE file. -->\n\n# Flutter WeChat Assets Picker\n\n[![pub package](https://img.shields.io/pub/v/wechat_assets_picker?label=%E7%A8%B3%E5%AE%9A%E7%89%88&logo=dart&style=flat-square)](https://pub.flutter-io.cn/packages/wechat_assets_picker)\n[![pub package](https://img.shields.io/pub/v/wechat_assets_picker?color=9d00ff&include_prereleases&label=%E5%BC%80%E5%8F%91%E7%89%88&logo=dart&style=flat-square)](https://pub.flutter-io.cn/packages/wechat_assets_picker)\n[![CodeFactor](https://img.shields.io/codefactor/grade/github/fluttercandies/flutter_wechat_assets_picker?label=%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F&logo=codefactor&logoColor=%23ffffff&style=flat-square)](https://www.codefactor.io/repository/github/fluttercandies/flutter_wechat_assets_picker)\n\n[![Build status](https://img.shields.io/github/actions/workflow/status/fluttercandies/flutter_wechat_assets_picker/runnable.yml?branch=main&label=CI&logo=github&style=flat-square)](https://github.com/fluttercandies/flutter_wechat_assets_picker/actions/workflows/runnable.yml)\n[![GitHub license](https://img.shields.io/github/license/fluttercandies/flutter_wechat_assets_picker?label=%E5%8D%8F%E8%AE%AE&style=flat-square)](https://github.com/fluttercandies/flutter_wechat_assets_picker/blob/main/LICENSE)\n[![GitHub stars](https://img.shields.io/github/stars/fluttercandies/flutter_wechat_assets_picker?logo=github&style=flat-square)](https://github.com/fluttercandies/flutter_wechat_assets_picker/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/fluttercandies/flutter_wechat_assets_picker?logo=github&style=flat-square)](https://github.com/fluttercandies/flutter_wechat_assets_picker/network)\n\n[![Awesome Flutter](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/Solido/awesome-flutter)\n<a target=\"_blank\" href=\"https://jq.qq.com/?_wv=1027&k=5bcc0gy\"><img border=\"0\" src=\"https://pub.idqqimg.com/wpa/images/group.png\" alt=\"FlutterCandies\" title=\"FlutterCandies\"></a>\n\nLanguage: [English](README.md) | 中文\n\n基于 **微信 UI** 的 Flutter **图片选择器（同时支持视频和音频）**。\n\n当前的界面设计基于的微信版本：**8.0.51**\n界面更新将在微信版本更新后随时进行跟进。\n\n如果你需要拍照及录制视频，请先查看示例的详细用法，\n并前往 [wechat_camera_picker][wechat_camera_picker pub]。\n该插件是独立扩展，需要结合使用。\n\n查看 [迁移指南][] 了解如何从破坏性改动中迁移为可用代码。\n\n## 版本兼容\n\n该插件仅保证能与 **stable 渠道的 Flutter SDK** 配合使用。\n我们不会为其他渠道的 Flutter SDK 做实时支持。\n\n|        | 3.0 | 3.3 | 3.7 | 3.10 | 3.13 | 3.16 |\n|--------|:---:|:---:|:---:|:----:|:----:|:----:|\n| 8.9.0+ |  ❌  |  ❌  |  ❌  |  ❌   |  ❌   |  ✅   |\n| 8.7.0+ |  ❌  |  ❌  |  ❌  |  ❌   |  ✅   |  ❌   |\n| 8.5.0+ |  ❌  |  ❌  |  ❌  |  ✅   |  ❌   |  ❌   |\n| 8.4.0+ |  ❌  |  ❌  |  ✅  |  ❌   |  ❌   |  ❌   |\n| 8.0.0+ |  ✅  |  ✅  |  ❌  |  ❌   |  ❌   |  ❌   |\n| 7.3.0+ |  ✅  |  ✅  |  ❌  |  ❌   |  ❌   |  ❌   |\n\n如果在 `flutter pub get` 时遇到了 `resolve conflict` 失败问题，\n请使用 `dependency_overrides` 解决。\n\n## 主要使用的 package\n\n该插件基于这些优秀的 package 构建：\n\n| Name                                 | Features      |\n|:-------------------------------------|:--------------|\n| [photo_manager][photo_manager pub]   | 资源的基础抽象和管理。   |\n| [extended_image][extended_image pub] | 以熟悉的操作预览所有资源。 |\n| [provider][provider pub]             | 协助选择器管理器内部状态。 |\n| [video_player][video_player pub]     | 播放对应的视频和音频。   |\n\n这些 package 在该插件中的实现已相对稳定。\n如果你在使用中发现于它们相关的问题，\n请先在本插件的问题跟踪中报告相关问题。\n\n<details>\n  <summary>目录列表</summary>\n\n<!-- TOC -->\n* [Flutter WeChat Assets Picker](#flutter-wechat-assets-picker)\n  * [版本兼容](#版本兼容)\n  * [主要使用的 package](#主要使用的-package)\n  * [特性 ✨](#特性-)\n    * [特别提醒 📝](#特别提醒-)\n  * [项目展柜 🖼️](#项目展柜-)\n  * [截图 📸](#截图-)\n  * [开始前的注意事项 ‼️](#开始前的注意事项-)\n  * [准备工作 🍭](#准备工作-)\n    * [Flutter](#flutter)\n    * [Android](#android)\n      * [权限](#权限)\n    * [iOS](#ios)\n    * [macOS](#macos)\n  * [使用方法 📖](#使用方法-)\n    * [国际化](#国际化)\n    * [简单的使用方法](#简单的使用方法)\n    * [更详细的使用方法](#更详细的使用方法)\n      * [展示选中的资源](#展示选中的资源)\n      * [注册资源变化回调](#注册资源变化回调)\n      * [在表单数据中上传 `AssetEntity`](#在表单数据中上传-assetentity)\n        * [使用 `http`](#使用-http)\n        * [使用 `dio`](#使用-dio)\n    * [自定义选择器](#自定义选择器)\n  * [常见问题 ❔](#常见问题-)\n    * [修改默认相册名称（将 `Recent` 改为其他）](#修改默认相册名称将-recent-改为其他)\n    * [Execution failed for task ':photo_manager:compileDebugKotlin'](#execution-failed-for-task-photo_managercompiledebugkotlin)\n    * [从 `File` 或 `Uint8List` 创建 `AssetEntity` 的方法](#从-file-或-uint8list-创建-assetentity-的方法)\n    * [控制台提示 'Failed to find GeneratedAppGlideModule'](#控制台提示-failed-to-find-generatedappglidemodule)\n  * [致谢](#致谢)\n<!-- TOC -->\n</details>\n\n## 特性 ✨\n\n- ♿ 完整的无障碍支持，包括 **TalkBack** 和 **VoiceOver**\n- ♻️ 支持基于代理重载的全量自定义\n- 🎏 完全可自定义的基于 `ThemeData` 的主题\n- 💚 复刻微信风格（甚至优化了更多的细节）\n- ⚡️ 根据配置调节的性能优化\n- 📷 图片资源支持\n  - 🔬 HEIF 格式图片支持 <a href=\"#特别提醒-\"><sup>(1)</sup></a>\n- 🎥 视频资源支持\n- 🎶 音频资源支持 <a href=\"#notes-\"><sup>(2)</sup></a>\n- 1️⃣ 单选模式模式\n- 💱 国际化 (i18n) 支持\n  - ⏪ RTL 语言支持\n- ➕ 特殊 widget 构建支持\n- 🗂 自定义路径排序支持\n- 📝 自定义文本构建支持\n- ⏳ 自定义筛选规则支持\n- 💻 支持 MacOS\n\n### 特别提醒 📝\n\n1. HEIF (HEIC) 图片支持获取和转换，但是它们的显示依托于 Flutter 的图片解析。\n   在此 issue 中 [flutter/flutter#20522](https://github.com/flutter/flutter/issues/20522) 有所说明。\n   若要用于显示，请使用 `entity.file` 或 `AssetEntityImage` 进行处理。\n2. 由于 iOS 和 macOS 的系统限制，在获取音频时只能获取应用沙盒环境内的音频。\n\n## 项目展柜 🖼️\n\n| name                | pub                                                                                                                        | github                                                                                                                                        |\n|:--------------------|:---------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------|\n| insta_assets_picker | [![pub package](https://img.shields.io/pub/v/insta_assets_picker)](https://pub.flutter-io.cn/packages/insta_assets_picker) | [![star](https://img.shields.io/github/stars/LeGoffMael/insta_assets_picker?style=social)](https://github.com/LeGoffMael/insta_assets_picker) |\n\n## 截图 📸\n\n| ![1](screenshots/README_1.webp)                          | ![2](screenshots/README_2.webp)                          | ![3](screenshots/README_3.webp)                          |\n|----------------------------------------------------------|----------------------------------------------------------|----------------------------------------------------------|\n| ![4](screenshots/README_4.webp)                          | ![5](screenshots/README_5.webp)                          | ![6](screenshots/README_6.webp)                          |\n| ![7](screenshots/README_7.webp)                          | ![8](screenshots/README_8.webp)                          | ![9](screenshots/README_9.webp)                          |\n| ![10](https://pic.alexv525.com/2021-07-05-picker_10.png) | ![10](https://pic.alexv525.com/2021-07-05-picker_11.png) | ![12](https://pic.alexv525.com/2021-07-05-picker_12.png) |\n\n## 开始前的注意事项 ‼️\n\n在开始一切之前，请明确以下两点：\n- 由于理解差异和篇幅限制，并不是所有的内容都会明确地在文档中指出。\n  当你遇到没有找到需求和无法理解的概念时，请先运行项目的示例 example，\n  它可以解决 90% 的常见需求。\n- 该库与 [photo_manager][photo_manager pub] 有强关联性，\n  大部分方法的行为是由 photo_manager 进行控制的，\n  所以请尽可能地确保你了解以下两个类的概念：\n  - 资源（图片/视频/音频） [`AssetEntity`](https://pub.flutter-io.cn/documentation/photo_manager/latest/photo_manager/AssetEntity-class.html)\n  - 资源合集（相册或集合概念） [`AssetPathEntity`](https://pub.flutter-io.cn/documentation/photo_manager/latest/photo_manager/AssetPathEntity-class.html)\n\n当你有与相关的 API 和行为的疑问时，你可以查看\n[photo_manager API 文档][] 了解更多细节。\n\n众多使用场景都已包含在示例中。\n在你提出任何问题之前，请仔细并完整地查看和使用示例。\n\n## 准备工作 🍭\n\n### Flutter\n\n执行 `flutter pub add wechat_assets_picker`，\n或者将 `wechat_assets_picker` 手动添加至 `pubspec.yaml` 引用。\n\n```yaml\ndependencies:\n  wechat_assets_picker: ^latest_version\n```\n\n最新的 **稳定** 版本是:\n[![pub package](https://img.shields.io/pub/v/wechat_assets_picker?logo=dart&label=stable&style=flat-square)](https://pub.flutter-io.cn/packages/wechat_assets_picker)\n\n最新的 **开发** 版本是:\n[![pub package](https://img.shields.io/pub/v/wechat_assets_picker?color=9d00ff&include_prereleases&label=dev&logo=dart&style=flat-square)](https://pub.flutter-io.cn/packages/wechat_assets_picker)\n\n在你的代码中导入：\n\n```dart\nimport 'package:wechat_assets_picker/wechat_assets_picker.dart';\n```\n\n### Android\n\n在使用这个 package 时，请确保\n`compileSdkVersion` 和 `targetSdkVersion` 升级到 `33`。\n否则，在 Android 13 设备上将有可能无法加载任何资源。\n\n#### 权限\n\n| Name                     | 必需  | 已声明 | 最高 API 版本 | 其他          |\n|--------------------------|-----|-----|-----------|-------------|\n| `READ_EXTERNAL_STORAGE`  | 是   | 是   | 32        |             |\n| `WRITE_EXTERNAL_STORAGE` | 否   | 否   | 29        |             |\n| `ACCESS_MEDIA_LOCATION`  | 是*  | 否   | N/A       | 读取 EXIF 时必需 |\n| `READ_MEDIA_IMAGES`      | 是*  | 是   | N/A       | 读取图片时必需     | \n| `READ_MEDIA_VIDEO`       | 是*  | 是   | N/A       | 读取视频时必需     | \n| `READ_MEDIA_AUDIO`       | 是*  | 是   | N/A       | 读取音频时必需     |\n\n如果你的目标 SDK 版本大于 33，且你不需要获取图片、视频或者音频，\n你可以考虑只声明需要的权限，具体如下：\n\n```xml\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    package=\"com.your.app\">\n    <!--请求图片和视频权限-->\n    <uses-permission android:name=\"android.permission.READ_MEDIA_IMAGES\" />\n    <uses-permission android:name=\"android.permission.READ_MEDIA_VIDEO\" />\n    <!--如果不需要获取音频，移除或者注释 READ_MEDIA_AUDIO-->\n    <!--<uses-permission android:name=\"android.permission.READ_MEDIA_AUDIO\" />-->\n</manifest>\n```\n\n### iOS\n\n1. 在 `ios/Podfile` 中指定最低构建版本至 **11.0**。\n   ```ruby\n   platform :ios, '11.0'\n   ```\n   如果该行以 `#` (注释) 开头，请把 `#` 删除。\n2. 将以下内容添加至 `Info.plist`。\n```\n<key>NSPhotoLibraryUsageDescription</key>\n<string>你的相册权限描述</string>\n```\n\n### macOS\n\n1. 在 `macos/Podfile` 中指定最低构建版本至 **10.15**。\n   ```Podfile\n   platform :osx, '10.15'\n   ```\n   如果该行以 `#` (注释) 开头，请把 `#` 删除。\n2. 使用 **Xcode** 打开 `macos/Runner.xcworkspace`。\n   接着将 macOS 的最低构建版本提升至 **10.15**。\n3. 与 [iOS](#iOS) 一样，添加相同的内容到 `Info.plist` 里。\n\n## 使用方法 📖\n\n### 国际化\n\n当你在选择资源的时候，package 会通过你的 `BuildContext`\n读取 `Locale?`，返回对应语言的文字代理实现。\n请确保你可以通过 `BuildContext` 获取到 `Locale`，否则将会 **默认展示中文文字**。\n\n内置的语言文字实现有：\n* 简体中文 (默认)\n* English\n* העברית\n* Deutsche\n* Локализация\n* 日本語\n* مة العربية\n* Délégué\n* Tiếng Việt\n* Türkçe Yerelleştirme\n\n如果你想使用自定义或固定的文字实现，请通过\n`AssetPickerConfig.textDelegate` 传递调用。\n\n### 简单的使用方法\n\n```dart\nfinal List<AssetEntity>? result = await AssetPicker.pickAssets(context);\n```\n\n你可以使用 `AssetPickerConfig` 来调整选择时的行为。\n\n```dart\nfinal List<AssetEntity>? result = await AssetPicker.pickAssets(\n  context,\n  pickerConfig: const AssetPickerConfig(),\n);\n```\n\n`AssetPickerConfig` 的成员说明：\n\n| 参数名                               | 类型                                               | 描述                                                   | 默认值                         |\n|-----------------------------------|--------------------------------------------------|------------------------------------------------------|-----------------------------|\n| selectedAssets                    | `List<AssetEntity>?`                             | 已选的资源。确保不重复选择。                                       | `null`                      |\n| maxAssets                         | `int`                                            | 最多选择的图片数量                                            | 9                           |\n| pageSize                          | `int`                                            | 分页加载时每页加载的资源数量。**必须为网格数的倍数。                          | 80                          |\n| gridThumbnailSize                 | `ThumbnailSize`                                  | 预览网格的缩略图大小                                           | `ThumbnailSize.square(200)` |\n| pathThumbnailSize                 | `ThumbnailSize`                                  | 路径选择器的缩略图大小                                          | `ThumbnailSize.square(80)`  |\n| previewThumbnailSize              | `ThumbnailSize?`                                 | 预览时图片的缩略图大小                                          | `null`                      |\n| requestType                       | `RequestType`                                    | 选择器选择资源的类型                                           | `RequestType.common`        |\n| specialPickerType                 | `SpecialPickerType?`                             | 提供一些特殊的选择器类型以整合非常规的选择行为                              | `null`                      |\n| keepScrollOffset                  | `bool`                                           | 选择器是否可以从同样的位置开始选择                                    | `null`                      |\n| sortPathDelegate                  | `SortPathDelegate<AssetPathEntity>?`             | 资源路径的排序实现，可自定义路径排序方法                                 | `CommonSortPathDelegate`    |\n| sortPathsByModifiedDate           | `bool`                                           | 是否结合 `FilterOptionGroup.containsPathModified` 进行路径排序 | `false`                     |\n| filterOptions                     | `PMFilter?`                                      | 允许用户自定义资源过滤条件                                        | `null`                      |\n| gridCount                         | `int`                                            | 选择器网格数量                                              | 4                           |\n| themeColor                        | `Color?`                                         | 选择器的主题色                                              | `Color(0xff00bc56)`         |\n| pickerTheme                       | `ThemeData?`                                     | 选择器的主题提供，包括查看器                                       | `null`                      |\n| textDelegate                      | `AssetPickerTextDelegate?`                       | 选择器的文本代理构建，用于自定义文本                                   | `AssetPickerTextDelegate()` |\n| specialItemPosition               | `SpecialItemPosition`                            | 允许用户在选择器中添加一个自定义item，并指定位置。                          | `SpecialPosition.none`      |\n| specialItemBuilder                | `SpecialItemBuilder?`                            | 自定义item的构造方法                                         | `null`                      |\n| loadingIndicatorBuilder           | `IndicatorBuilder?`                              | 加载器的实现                                               | `null`                      |\n| selectPredicate                   | `AssetSelectPredicate`                           | 判断资源可否被选择                                            | `null`                      |\n| shouldRevertGrid                  | `bool?`                                          | 判断资源网格是否需要倒序排列                                       | `null`                      |\n| limitedPermissionOverlayPredicate | `LimitedPermissionOverlayPredicate?`             | 判断有限的权限情况下是否展示提示页面                                   | `null`                      |\n| pathNameBuilder                   | `PathNameBuilder<AssetPathEntity>?`              | 基于路径（相册）构建自定义名称的方法                                   | `null`                      |\n| assetsChangeCallback              | `AssetsChangeCallback<AssetPathEntity>?`         | 当系统通知资源变化时将调用的回调                                     | `null`                      |\n| assetsChangeRefreshPredicate      | `AssetsChangeRefreshPredicate<AssetPathEntity>?` | 判断资源变化是否根据 call 和当前选中的路径进行更新                         | `null`                      |\n| shouldAutoplayPreview             | `bool`                                           | 预览是否应自动播放                                            | `false`                     |\n\n- 当 `maxAssets` 等于 `1`（即单选模式），搭配\n  `SpecialPickerType.noPreview` 使用会在用户点选资源换时立刻选中并返回。\n- `limitedPermissionOverlayPredicate` 不是持久化的，\n  如果你需要在应用下次启动时不再显示权限受限的页面，请自主实现持久化的控制。\n\n### 更详细的使用方法\n\n我们已将常用的调用方法封装在 [example](example) 中。\n你可以在 `example/lib/pages/multi_assets_page.dart` 和\n`example/lib/pages/single_assets_page.dart`\n找到 `List<PickMethod> pickMethods`，\n它分别定义了多选和单选可用的选择模式。\n在选择资源后，资源会暂存并展示在页面下方。\n\n#### 展示选中的资源\n\n`AssetEntityImage` 和 `AssetEntityImageProvider`\n可以为 **图片 & 视频** 展示缩略图，以及展示 **图片的原图**。\n它的使用方法与常见的 `Image` 和 `ImageProvider` 一致。\n\n```dart\nAssetEntityImage(asset, isOriginal: false);\n```\n\n或：\n\n```dart\n/// AssetEntityImageProvider\nImage(image: AssetEntityImageProvider(asset, isOriginal: false));\n```\n\n#### 注册资源变化回调\n\n```dart\n/// 注册回调\nAssetPicker.registerObserve();\n\n/// 取消注册回调\nAssetPicker.unregisterObserve();\n```\n\n#### 在表单数据中上传 `AssetEntity`\n\n`AssetEntity` 包含有多种 I/O 相关的方法可以用于上传。\n**请注意，I/O 相关的方法会消耗性能（通常是时间和内存），它们不应该被频繁调用。**\n\n##### 使用 `http`\n\n`http` package: https://pub.flutter-io.cn/packages/http\n\n`http` package 使用v\n[`MultipartFile`](https://pub.flutter-io.cn/documentation/http/latest/http/MultipartFile-class.html)\n来在请求中处理文件。\n\n示例代码如下：\n```dart\nimport 'package:http/http.dart' as http;\n\nFuture<void> upload() async {\n  final entity = await obtainYourEntity();\n  final uri = Uri.https('example.com', 'create');\n  final request = http.MultipartRequest('POST', uri)\n    ..fields['test_field'] = 'test_value'\n    ..files.add(await multipartFileFromAssetEntity(entity));\n  final response = await request.send();\n  if (response.statusCode == 200) {\n    print('Uploaded!');\n  }\n}\n\nFuture<http.MultipartFile> multipartFileFromAssetEntity(AssetEntity entity) async {\n  http.MultipartFile mf;\n  // Using the file path.\n  final file = await entity.file;\n  if (file == null) {\n    throw StateError('Unable to obtain file of the entity ${entity.id}.');\n  }\n  mf = await http.MultipartFile.fromPath('test_file', file.path);\n  // Using the bytes.\n  final bytes = await entity.originBytes;\n  if (bytes == null) {\n    throw StateError('Unable to obtain bytes of the entity ${entity.id}.');\n  }\n  mf = http.MultipartFile.fromBytes('test_file', bytes);\n  return mf;\n}\n```\n\n##### 使用 `dio`\n\n`dio` package: https://pub.flutter-io.cn/packages/dio\n\n`dio` package 同样使用了\n[`MultipartFile`](https://pub.flutter-io.cn/documentation/dio/latest/dio/MultipartFile-class.html)\n来在请求中处理文件。\n\n示例代码：\n```dart\nimport 'package:dio/dio.dart' as dio;\n\nFuture<void> upload() async {\n  final entity = await obtainYourEntity();\n  final uri = Uri.https('example.com', 'create');\n  final response = dio.Dio().requestUri(\n    uri,\n    data: dio.FormData.fromMap({\n      'test_field': 'test_value',\n      'test_file': await multipartFileFromAssetEntity(entity),\n    }),\n  );\n  print('Uploaded!');\n}\n\nFuture<dio.MultipartFile> multipartFileFromAssetEntity(AssetEntity entity) async {\n  dio.MultipartFile mf;\n  // Using the file path.\n  final file = await entity.file;\n  if (file == null) {\n    throw StateError('Unable to obtain file of the entity ${entity.id}.');\n  }\n  mf = await dio.MultipartFile.fromFile(file.path);\n  // Using the bytes.\n  final bytes = await entity.originBytes;\n  if (bytes == null) {\n    throw StateError('Unable to obtain bytes of the entity ${entity.id}.');\n  }\n  mf = dio.MultipartFile.fromBytes(bytes);\n  return mf;\n}\n```\n\n### 自定义选择器\n\n`AssetPickerBuilderDelegate`、`AssetPickerViewerBuilderDelegate`、\n`AssetPickerProvider` 及 `AssetPickerViewerProvider` 均已暴露且可重载。\n使用者可以使用自定义的泛型类型 `<A: 资源, P: 路径>`，\n配合继承与重载，实现对应抽象类和类中的方法。\n更多用法请查看示例中的 `Custom` 页面，\n该页面包含一个以 `<File, Directory>` 为类型基础的选择器。\n\n想要了解如何完全自定义主题、widget 和布局，前往 [示例](example/lib/customs/pickers)\n查看已有的自定义选择器的实现。\n\n如果你觉得你的实现有价值或能帮助到其他人，欢迎以 PR 的形式进行提交。\n更多细节请阅读 [贡献自定义实现][]。\n\n## 常见问题 ❔\n\n### 修改默认相册名称（将 `Recent` 改为其他）\n\n在 Android 上 `Recent` 是总相册的默认名称，\n总相册是一个实际不存在的概念，它只是原始媒体数据的记录集合。\n\n想要在 Android 上解决这个问题，你可以像这样使用 `pathNameBuilder`：\n```dart\nAssetPickerConfig(\n  pathNameBuilder: (AssetPathEntity path) => switch (path) {\n    final p when p.isAll => '最近',\n    // 你也可以将类似的逻辑应用在其他常见的相册上。\n    _ => path.name,\n  },\n)\n```\n\n其他相册或者其他平台 (iOS/macOS) 上的相册会根据系统语言和配置支持的语言来进行展示。\n`pathNameBuilder` 可以用于任何的相册。\n\n### Execution failed for task ':photo_manager:compileDebugKotlin'\n\n查看 [photo_manager#561][] 了解详细的解决方法。\n\n### 从 `File` 或 `Uint8List` 创建 `AssetEntity` 的方法\n\n如果需要使用此库结合一些拍照需求，\n可通过以下方法将 `File` 或 `Uint8List` 转为 `AssetEntity`。\n\n```dart\nfinal File file = your_file; // 你的 File 对象\nfinal String path = file.path;\nfinal AssetEntity fileEntity = await PhotoManager.editor.saveImageWithPath(\n  path,\n  title: basename(path),\n); // 存入手机并生成 AssetEntity\n\nfinal Uint8List data = your_data; // 你的 Uint8List 对象\nfinal AssetEntity imageEntity = await PhotoManager.editor.saveImage(\n  file.path,\n  title: '带有后缀的名称.jpg',\n); // 存入手机并生成 AssetEntity\n```\n\n**注意：如果不想保留文件，请尽量用 `File` 承载中间操作，**\n否则在调用 `AssetEntity` 的删除时，系统可能会触发弹窗：\n\n```dart\nfinal List<String> result = await PhotoManager.editor.deleteWithIds(\n  <String>[entity.id],\n);\n```\n\n你可以阅读 [photo_manager#from-raw-data][]\n和 [photo_manager#delete-entities][]\n了解更多细节。\n\n### 控制台提示 'Failed to find GeneratedAppGlideModule'\n\n```\nW/Glide   (21133): Failed to find GeneratedAppGlideModule. \n                   You should include an annotationProcessor compile dependency on com.github.bumptech.glide:compiler\n                   in you application ana a @GlideModule annotated AppGlideModule implementation\n                   or LibraryGlideModules will be silently ignored.\n```\n\n`Glide` 通过注解来保证单例，防止单例或版本之间的冲突，\n而因为 `photo_manager` 使用了 `Glide` 提供部分图片功能，\n所以使用它的项目必须实现自己的 `AppGlideModule`。\n请移步 [Glide Generated API 文档][] 了解如何实现。\n\n## 致谢\n\n> IntelliJ IDEA 的每个方面都旨在最大化开发者生产力。结合智能编码辅助与符合人体工程学的设计，让开发不仅高效，更成为一种享受。\n\n感谢 [JetBrains](https://www.jetbrains.com/?from=fluttercandies)\n为开源项目提供免费的\n[IntelliJ IDEA](https://www.jetbrains.com/idea/?from=fluttercandies)\n等 IDE 的授权。\n\n[<img src=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/raw/main/.github/jetbrains-variant.png\" width=\"200\"/>](https://www.jetbrains.com/?from=fluttercandies)\n\n\n[photo_manager pub]: https://pub.flutter-io.cn/packages/photo_manager\n[extended_image pub]: https://pub.flutter-io.cn/packages/extended_image\n[provider pub]: https://pub.flutter-io.cn/packages/provider\n[video_player pub]: https://pub.flutter-io.cn/packages/video_player\n[wechat_camera_picker pub]: https://pub.flutter-io.cn/packages/wechat_camera_picker\n[迁移指南]: https://github.com/fluttercandies/flutter_wechat_assets_picker/blob/main/guides/migration_guide.md\n[photo_manager API 文档]: https://pub.flutter-io.cn/documentation/photo_manager/latest/\n[Glide Generated API 文档]: https://muyangmin.github.io/glide-docs-cn/doc/generatedapi.html\n[贡献自定义实现]: https://github.com/fluttercandies/flutter_wechat_assets_picker/blob/main/example/lib/customs/CONTRIBUTING.md\n[photo_manager#561]: https://github.com/fluttercandies/flutter_photo_manager/issues/561\n[photo_manager#from-raw-data]: https://github.com/fluttercandies/flutter_photo_manager#from-raw-data\n[photo_manager#delete-entities]: https://github.com/fluttercandies/flutter_photo_manager#delete-entities\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 39.798828125,
          "content": "<!-- Copyright 2019 The FlutterCandies author. All rights reserved.\nUse of this source code is governed by an Apache license\nthat can be found in the LICENSE file. -->\n\n# Flutter WeChat Assets Picker\n\n[![pub package](https://img.shields.io/pub/v/wechat_assets_picker?logo=dart&label=stable&style=flat-square)](https://pub.dev/packages/wechat_assets_picker)\n[![pub package](https://img.shields.io/pub/v/wechat_assets_picker?color=9d00ff&include_prereleases&label=dev&logo=dart&style=flat-square)](https://pub.dev/packages/wechat_assets_picker)\n[![CodeFactor](https://img.shields.io/codefactor/grade/github/fluttercandies/flutter_wechat_assets_picker?logo=codefactor&logoColor=%23ffffff&style=flat-square)](https://www.codefactor.io/repository/github/fluttercandies/flutter_wechat_assets_picker)\n\n[![Build status](https://img.shields.io/github/actions/workflow/status/fluttercandies/flutter_wechat_assets_picker/runnable.yml?branch=main&label=CI&logo=github&style=flat-square)](https://github.com/fluttercandies/flutter_wechat_assets_picker/actions/workflows/runnable.yml)\n[![GitHub license](https://img.shields.io/github/license/fluttercandies/flutter_wechat_assets_picker?style=flat-square)](https://github.com/fluttercandies/flutter_wechat_assets_picker/blob/main/LICENSE)\n[![GitHub stars](https://img.shields.io/github/stars/fluttercandies/flutter_wechat_assets_picker?logo=github&style=flat-square)](https://github.com/fluttercandies/flutter_wechat_assets_picker/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/fluttercandies/flutter_wechat_assets_picker?logo=github&style=flat-square)](https://github.com/fluttercandies/flutter_wechat_assets_picker/network)\n\n[![Awesome Flutter](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/Solido/awesome-flutter)\n[![Flutter Candies QQ群](https://pub.idqqimg.com/wpa/images/group.png)](https://jq.qq.com/?_wv=1027&k=5bcc0gy)\n\nLanguage: English | [中文](README-ZH.md)\n\nAn **image picker (also with videos and audios)**\nfor Flutter projects based on the WeChat's UI.\n\nCurrent WeChat version that UI based on: **8.0.51**\nUI designs will be updated following the WeChat update in anytime.\n\nTo take a photo or a video for assets,\nplease check the detailed usage in the example,\nand head over to [wechat_camera_picker][wechat_camera_picker pub].\nThe package is a standalone extension that can to be used with combination.\n\nSee the [Migration Guide][] to learn how to migrate between breaking changes.\n\n## Versions compatibility\n\nThe package only guarantees to be working on **the stable version of Flutter**.\nWe won't update it in real-time to align with other channels of Flutter.\n\n|        | 3.0 | 3.3 | 3.7 | 3.10 | 3.13 | 3.16 |\n|--------|:---:|:---:|:---:|:----:|:----:|:----:|\n| 8.9.0+ |  ❌  |  ❌  |  ❌  |  ❌   |  ❌   |  ✅   |\n| 8.7.0+ |  ❌  |  ❌  |  ❌  |  ❌   |  ✅   |  ❌   |\n| 8.5.0+ |  ❌  |  ❌  |  ❌  |  ✅   |  ❌   |  ❌   |\n| 8.4.0+ |  ❌  |  ❌  |  ✅  |  ❌   |  ❌   |  ❌   |\n| 8.0.0+ |  ✅  |  ✅  |  ❌  |  ❌   |  ❌   |  ❌   |\n| 7.3.0+ |  ✅  |  ✅  |  ❌  |  ❌   |  ❌   |  ❌   |\n\nIf you got a `resolve conflict` error when running `flutter pub get`,\nplease use `dependency_overrides` to fix it.\n\n## Package credits\n\nThe package is built from these wonderful packages.\n\n| Name                                 | Features                                             |\n|:-------------------------------------|:-----------------------------------------------------|\n| [photo_manager][photo_manager pub]   | The basic abstractions and management for assets.    |\n| [extended_image][extended_image pub] | Preview assets with expected behaviors.              |\n| [provider][provider pub]             | Helps to manage the interaction state of the picker. |\n| [video_player][video_player pub]     | Plays videos and audios correspondingly.             |\n \nTheir implementation should be relatively stable in the package.\nIf you've found any issues related to them when using the picker,\nsubmit issues to our issue tracker first.\n\n<details>\n  <summary>Table of content</summary>\n\n<!-- TOC -->\n* [Flutter WeChat Assets Picker](#flutter-wechat-assets-picker)\n  * [Versions compatibility](#versions-compatibility)\n  * [Package credits](#package-credits)\n  * [Features ✨](#features-)\n    * [Notes 📝](#notes-)\n  * [Projects using this plugin 🖼️](#projects-using-this-plugin-)\n  * [Screenshots 📸](#screenshots-)\n  * [READ THIS FIRST ‼️](#read-this-first-)\n  * [Preparing for use 🍭](#preparing-for-use-)\n    * [Flutter](#flutter)\n    * [Android](#android)\n      * [Permissions](#permissions)\n    * [iOS](#ios)\n    * [macOS](#macos)\n  * [Usage 📖](#usage-)\n    * [Localizations](#localizations)\n    * [Simple usage](#simple-usage)\n    * [Detailed usage](#detailed-usage)\n      * [Display selected assets](#display-selected-assets)\n      * [Register assets change observe callback](#register-assets-change-observe-callback)\n      * [Upload an `AssetEntity` with a form data](#upload-an-assetentity-with-a-form-data)\n        * [With `http`](#with-http)\n        * [With `dio`](#with-dio)\n    * [Custom pickers](#custom-pickers)\n  * [Frequently asked question ❔](#frequently-asked-question-)\n    * [Changing the default album name (`Recent` to others)](#changing-the-default-album-name-recent-to-others)\n    * [Execution failed for task ':photo_manager:compileDebugKotlin'](#execution-failed-for-task-photo_managercompiledebugkotlin)\n    * [Create `AssetEntity` from `File` or `Uint8List` (rawData)](#create-assetentity-from-file-or-uint8list-rawdata)\n    * [Glide warning 'Failed to find GeneratedAppGlideModule'](#glide-warning-failed-to-find-generatedappglidemodule)\n  * [Contributors ✨](#contributors-)\n  * [Credits](#credits)\n<!-- TOC -->\n</details>\n\n## Features ✨\n\n- ♿ Complete a11y support with _TalkBack_ and _VoiceOver_\n- ♻️ Fully customizable with delegates override\n- 🎏 Fully customizable theme based on `ThemeData`\n- 💚 Completely WeChat style (even more)\n- ⚡️ Adjustable performance with different configurations\n- 📷 Image support\n  - 🔬 HEIF Image type support <a href=\"#notes-\"><sup>(1)</sup></a>\n- 🎥 Video support\n- 🎶 Audio support <a href=\"#notes-\"><sup>(2)</sup></a>\n- 1️⃣ Single picking mode\n- 💱 Internationalization (i18n) support\n  - ⏪ RTL language support\n- ➕ Special item builder support\n- 🗂 Custom sort path delegate support\n- 📝 Custom text delegate support\n- ⏳ Custom filter options support\n- 💻 macOS support\n\n### Notes 📝\n\n1. HEIF (HEIC) images are support to obtain and conversion,\n   but the display with them are based on Flutter's image decoder.\n   See [flutter/flutter#20522](https://github.com/flutter/flutter/issues/20522).\n   Use `entity.file` or `AssetEntityImage` for them when displays.\n2. Due to limitations on iOS and macOS, audio can only be fetched within the sandbox.\n\n## Projects using this plugin 🖼️\n\n| name                | pub                                                                                                              | github                                                                                                                                        |\n|:--------------------|:-----------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------|\n| insta_assets_picker | [![pub package](https://img.shields.io/pub/v/insta_assets_picker)](https://pub.dev/packages/insta_assets_picker) | [![star](https://img.shields.io/github/stars/LeGoffMael/insta_assets_picker?style=social)](https://github.com/LeGoffMael/insta_assets_picker) |\n\n## Screenshots 📸\n\n| ![1](screenshots/README_1.webp)                          | ![2](screenshots/README_2.webp)                          | ![3](screenshots/README_3.webp)                          |\n|----------------------------------------------------------|----------------------------------------------------------|----------------------------------------------------------|\n| ![4](screenshots/README_4.webp)                          | ![5](screenshots/README_5.webp)                          | ![6](screenshots/README_6.webp)                          |\n| ![7](screenshots/README_7.webp)                          | ![8](screenshots/README_8.webp)                          | ![9](screenshots/README_9.webp)                          |\n| ![10](https://pic.alexv525.com/2021-07-05-picker_10.png) | ![10](https://pic.alexv525.com/2021-07-05-picker_11.png) | ![12](https://pic.alexv525.com/2021-07-05-picker_12.png) |\n\n## READ THIS FIRST ‼️\n\nBe aware of below notices before you started anything:\n- Due to understanding differences and the limitation of a single document,\n  documents will not cover all the contents.\n  If you find nothing related to your expected features and cannot understand about concepts,\n  run the example project and check every options first.\n  It has covered 90% of regular requests with the package.\n- The package deeply integrates with the [photo_manager][photo_manager pub] plugin,\n  make sure you understand these two concepts as much as possible:\n  - Asset (photos/videos/audio) - [`AssetEntity`](https://pub.dev/documentation/photo_manager/latest/photo_manager/AssetEntity-class.html)\n  - Assets collection (albums/libraries) - [`AssetPathEntity`](https://pub.dev/documentation/photo_manager/latest/photo_manager/AssetPathEntity-class.html)\n\nWhen you have questions about related APIs and behaviors,\ncheck [photo_manager's API docs][] for more details.\n\nMost usages are detailed covered by the [example](example).\nPlease walk through the [example](example) carefully\nbefore you have any questions.\n\n## Preparing for use 🍭\n\n### Flutter\n\nRun `flutter pub add wechat_assets_picker`,\nor add `wechat_assets_picker` to `pubspec.yaml` dependencies manually.\n```yaml\ndependencies:\n  wechat_assets_picker: ^latest_version\n```\n\nThe latest **stable** version is:\n[![pub package](https://img.shields.io/pub/v/wechat_assets_picker?logo=dart&label=stable&style=flat-square)](https://pub.dev/packages/wechat_assets_picker)\n\nThe latest **dev** version is:\n[![pub package](https://img.shields.io/pub/v/wechat_assets_picker?color=9d00ff&include_prereleases&label=dev&logo=dart&style=flat-square)](https://pub.dev/packages/wechat_assets_picker)\n\nThen import the package in your code:\n```dart\nimport 'package:wechat_assets_picker/wechat_assets_picker.dart';\n```\n\n### Android\n\nWhen using the package, please upgrade\n`targetSdkVersion` and `compileSdkVersion` to `33`.\nOtherwise, no assets can be fetched on Android 13.\n\n#### Permissions\n\n| Name                     | Required | Declared | Max API Level | Others                       |\n|--------------------------|----------|----------|---------------|------------------------------|\n| `READ_EXTERNAL_STORAGE`  | YES      | YES      | 32            |                              |\n| `WRITE_EXTERNAL_STORAGE` | NO       | NO       | 29            |                              |\n| `ACCESS_MEDIA_LOCATION`  | YES*     | NO       | N/A           | Required when reading EXIF   |\n| `READ_MEDIA_IMAGES`      | YES*     | YES      | N/A           | Required when reading images | \n| `READ_MEDIA_VIDEO`       | YES*     | YES      | N/A           | Required when reading videos | \n| `READ_MEDIA_AUDIO`       | YES*     | YES      | N/A           | Required when reading audios | \n\nIf you're targeting Android SDK 33+,\nand you don't need to load photos, videos or audios,\nconsider declare only relevant permission in your apps, more specifically:\n\n```xml\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    package=\"com.your.app\">\n    <!--Requesting access to images and videos.-->\n    <uses-permission android:name=\"android.permission.READ_MEDIA_IMAGES\" />\n    <uses-permission android:name=\"android.permission.READ_MEDIA_VIDEO\" />\n    <!--When your app has no need to access audio, remove it or comment it out.-->\n    <!--<uses-permission android:name=\"android.permission.READ_MEDIA_AUDIO\" />-->\n</manifest>\n```\n\n### iOS\n\n1. Platform version has to be at least *11.0*.\n   Modify `ios/Podfile` and update accordingly.\n   ```Podfile\n   platform :ios, '11.0'\n   ```\n   Remove the `#` heading if the line starts with it.\n2. Add the following content to `Info.plist`.\n```\n<key>NSPhotoLibraryUsageDescription</key>\n<string>Replace with your permission description.</string>\n```\n\n### macOS\n\n1. Platform version has to be at least *10.15*.\n   Modify `macos/Podfile` and update accordingly.\n   ```ruby\n   platform :osx, '10.15'\n   ```\n   Remove the `#` heading if the line starts with it.\n2. Set the minimum deployment target of the macOS to *10.15*.\n   Use XCode to open `macos/Runner.xcworkspace` .\n3. Follow the [iOS](#iOS) instructions and modify `Info.plist` accordingly.\n\n## Usage 📖\n\n### Localizations\n\nWhen you're picking assets, the package will obtain the `Locale?`\nfrom your `BuildContext`, and return the corresponding text delegate\nof the current language.\nMake sure you have a valid `Locale` in your widget tree that can be accessed\nfrom the `BuildContext`. **Otherwise, the default Chinese delegate will be used.**\n\nEmbedded text delegates languages are:\n* 简体中文 (default)\n* English\n* העברית\n* Deutsche\n* Локализация\n* 日本語\n* مة العربية\n* Délégué\n* Tiếng Việt\n* Türkçe Yerelleştirme\n\nIf you want to use a custom/fixed text delegate, pass it through the\n`AssetPickerConfig.textDelegate`.\n\n### Simple usage\n\n```dart\nfinal List<AssetEntity>? result = await AssetPicker.pickAssets(context);\n```\n\nUse `AssetPickerConfig` for more picking behaviors.\n\n```dart\nfinal List<AssetEntity>? result = await AssetPicker.pickAssets(\n  context,\n  pickerConfig: const AssetPickerConfig(),\n);\n```\n\nFields in `AssetPickerConfig`:\n\n| Name                              | Type                                             | Description                                                                                    | Default                     |\n|-----------------------------------|--------------------------------------------------|------------------------------------------------------------------------------------------------|-----------------------------|\n| selectedAssets                    | `List<AssetEntity>?`                             | Selected assets. Prevent duplicate selection.                                                  | `null`                      |\n| maxAssets                         | `int`                                            | Maximum asset that the picker can pick.                                                        | 9                           |\n| pageSize                          | `int?`                                           | Number of assets per page. **Must be a multiple of `gridCount`**.                              | 80                          |\n| gridThumbnailSize                 | `ThumbnailSize`                                  | Thumbnail size for the grid's item.                                                            | `ThumbnailSize.square(200)` |\n| pathThumbnailSize                 | `ThumbnailSize`                                  | Thumbnail size for the path selector.                                                          | `ThumbnailSize.square(80)`  |\n| previewThumbnailSize              | `ThumbnailSize?`                                 | Preview thumbnail size in the viewer.                                                          | `null`                      |\n| requestType                       | `RequestType`                                    | Request type for picker.                                                                       | `RequestType.common`        |\n| specialPickerType                 | `SpecialPickerType?`                             | Provides the option to integrate a custom picker type.                                         | `null`                      |\n| keepScrollOffset                  | `bool`                                           | Whether the picker should save the scroll offset between pushes and pops.                      | `null`                      |\n| sortPathDelegate                  | `SortPathDelegate<AssetPathEntity>?`             | Path entities sort delegate for the picker, sort paths as you want.                            | `CommonSortPathDelegate`    |\n| sortPathsByModifiedDate           | `bool`                                           | Whether to allow sort delegates to sort paths with `FilterOptionGroup.containsPathModified`.   | `false`                     |\n| filterOptions                     | `PMFilter?`                                      | Allow users to customize assets filter options.                                                | `null`                      |\n| gridCount                         | `int`                                            | Grid count in picker.                                                                          | 4                           |\n| themeColor                        | `Color?`                                         | Main theme color for the picker.                                                               | `Color(0xff00bc56)`         |\n| pickerTheme                       | `ThemeData?`                                     | Theme data provider for the picker and the viewer.                                             | `null`                      |\n| textDelegate                      | `AssetPickerTextDelegate?`                       | Text delegate for the picker, for customize the texts.                                         | `AssetPickerTextDelegate()` |\n| specialItemPosition               | `SpecialItemPosition`                            | Allow users set a special item in the picker with several positions.                           | `SpecialItemPosition.none`  |\n| specialItemBuilder                | `SpecialItemBuilder?`                            | The widget builder for the special item.                                                       | `null`                      |\n| loadingIndicatorBuilder           | `IndicatorBuilder?`                              | Indicates the loading status for the builder.                                                  | `null`                      |\n| selectPredicate                   | `AssetSelectPredicate`                           | Predicate whether an asset can be selected or unselected.                                      | `null`                      |\n| shouldRevertGrid                  | `bool?`                                          | Whether the assets grid should revert.                                                         | `null`                      |\n| limitedPermissionOverlayPredicate | `LimitedPermissionOverlayPredicate?`             | Predicate whether the limited permission overlay should be displayed.                          | `null`                      |\n| pathNameBuilder                   | `PathNameBuilder<AssetPathEntity>?`              | Build customized path (album) name with the given path entity.                                 | `null`                      |\n| assetsChangeCallback              | `AssetsChangeCallback<AssetPathEntity>?`         | The callback that will be called when the system notifies assets changes.                      | `null`                      |\n| assetsChangeRefreshPredicate      | `AssetsChangeRefreshPredicate<AssetPathEntity>?` | Whether assets changing should call refresh with the given call and the current selected path. | `null`                      |\n| shouldAutoPlayPreview             | `bool`                                           | Whether the preview should auto play.                                                          | `false`                     |\n\n- When `maxAssets` equals to `1` (a.k.a. single picking mode),\n  use `SpecialPickerType.noPreview` will immediately select asset\n  clicked (pressed) by the user and popped.\n- `limitedPermissionOverlayPredicate` lives without persistence,\n  if you want to ignore the limited preview after restart,\n  you'll need to integrate with your own saving methods.\n\n### Detailed usage\n\nWe've put multiple common usage\nwith the packages in the [example](example).\nYou can both found `List<PickMethod> pickMethods` in\n[here](example/lib/pages/multi_assets_page.dart)\nand [here](example/lib/pages/single_assets_page.dart),\nwhich provide methods in multiple picking and single picking mode.\nAssets will be stored temporary and displayed at the below of the page.\n\n#### Display selected assets\n\nThe `AssetEntityImage` and `AssetEntityImageProvider`\ncan display the thumb image of _images & videos_,\nand the original data of _image_.\nUse it like a common `Image` and `ImageProvider`.\n\n```dart\nAssetEntityImage(asset, isOriginal: false);\n```\n\nOr:\n\n```dart\nImage(image: AssetEntityImageProvider(asset, isOriginal: false));\n```\n\n#### Register assets change observe callback\n\n```dart\n// Register callback.\nAssetPicker.registerObserve();\n\n// Unregister callback.\nAssetPicker.unregisterObserve();\n```\n\n#### Upload an `AssetEntity` with a form data\n\nThere are multiple ways to upload an `AssetEntity` with I/O related methods.\n**Be aware, I/O related methods will consume performance\n(typically time and memory), they should not be called frequently.**\n\n##### With `http`\n\n`http` package: https://pub.dev/packages/http\n\nThe `http` package uses\n[`MultipartFile`](https://pub.dev/documentation/http/latest/http/MultipartFile-class.html)\nto handle files in requests.\n\nPseudo code:\n```dart\nimport 'package:http/http.dart' as http;\n\nFuture<void> upload() async {\n  final entity = await obtainYourEntity();\n  final uri = Uri.https('example.com', 'create');\n  final request = http.MultipartRequest('POST', uri)\n    ..fields['test_field'] = 'test_value'\n    ..files.add(await multipartFileFromAssetEntity(entity));\n  final response = await request.send();\n  if (response.statusCode == 200) {\n    print('Uploaded!');\n  }\n}\n\nFuture<http.MultipartFile> multipartFileFromAssetEntity(AssetEntity entity) async {\n  http.MultipartFile mf;\n  // Using the file path.\n  final file = await entity.file;\n  if (file == null) {\n    throw StateError('Unable to obtain file of the entity ${entity.id}.');\n  }\n  mf = await http.MultipartFile.fromPath('test_file', file.path);\n  // Using the bytes.\n  final bytes = await entity.originBytes;\n  if (bytes == null) {\n    throw StateError('Unable to obtain bytes of the entity ${entity.id}.');\n  }\n  mf = http.MultipartFile.fromBytes('test_file', bytes);\n  return mf;\n}\n```\n\n##### With `dio`\n\n`dio` package: https://pub.dev/packages/dio\n\nThe `dio` package also uses\n[`MultipartFile`](https://pub.dev/documentation/dio/latest/dio/MultipartFile-class.html)\nto handle files in requests.\n\nPseudo code:\n```dart\nimport 'package:dio/dio.dart' as dio;\n\nFuture<void> upload() async {\n  final entity = await obtainYourEntity();\n  final uri = Uri.https('example.com', 'create');\n  final response = dio.Dio().requestUri(\n    uri,\n    data: dio.FormData.fromMap({\n      'test_field': 'test_value',\n      'test_file': await multipartFileFromAssetEntity(entity),\n    }),\n  );\n  print('Uploaded!');\n}\n\nFuture<dio.MultipartFile> multipartFileFromAssetEntity(AssetEntity entity) async {\n  dio.MultipartFile mf;\n  // Using the file path.\n  final file = await entity.file;\n  if (file == null) {\n    throw StateError('Unable to obtain file of the entity ${entity.id}.');\n  }\n  mf = await dio.MultipartFile.fromFile(file.path);\n  // Using the bytes.\n  final bytes = await entity.originBytes;\n  if (bytes == null) {\n    throw StateError('Unable to obtain bytes of the entity ${entity.id}.');\n  }\n  mf = dio.MultipartFile.fromBytes(bytes);\n  return mf;\n}\n```\n\n### Custom pickers\n\n`AssetPickerBuilderDelegate`, `AssetPickerViewerBuilderDelegate`,\n`AssetPickerProvider` and `AssetPickerViewerProvider`\nare all exposed and overridable.\nYou can extend them and use your own\ntype with generic type `<A: Asset, P: Path>`,\nthen implement abstract methods.\n\nTo know about how to fully customize themes, widgets or layouts.\nSee how to customize delegates in the custom pickers page in the\n[example](example/lib/customs/pickers).\n\nYou can submit PRs to create your own implementation\nif you found your implementation might be useful for others.\nSee [Contribute custom implementations][] for more details.\n\n## Frequently asked question ❔\n\n### Changing the default album name (`Recent` to others)\n\n`Recent` is the fix album name for the ALL assets on Android\nsince the all assets' album is not an actual album, it only represents all media data records.\n\nTo solve that on Android, use `pathNameBuilder`, for example:\n```dart\nAssetPickerConfig(\n  pathNameBuilder: (AssetPathEntity path) => switch (path) {\n    final p when p.isAll => '最近',\n    // You can apply similar conditions to other common paths.\n    _ => path.name,\n  },\n)\n```\n\nOther albums or albums on other platforms (iOS/macOS) will follow\nthe configured system localization and supported localizations.\n`pathNameBuilder` is available for all albums.\n\n### Execution failed for task ':photo_manager:compileDebugKotlin'\n\nSee [photo_manager#561][] for more details.\n\n### Create `AssetEntity` from `File` or `Uint8List` (rawData)\n\nIn order to combine this package with camera shooting or something related,\nthere's a solution about how to create an `AssetEntity`\nwith `File` or `Uint8List` object.\n\n```dart\nfinal File file = your_file; // Your `File` object\nfinal String path = file.path;\nfinal AssetEntity fileEntity = await PhotoManager.editor.saveImageWithPath(\n  path,\n  title: basename(path),\n); // Saved in the device then create an AssetEntity\n\nfinal Uint8List data = your_data; // Your `Uint8List` object\nfinal AssetEntity imageEntity = await PhotoManager.editor.saveImage(\n  file.path,\n  title: 'title_with_extension.jpg',\n); // Saved in the device then create an AssetEntity\n```\n\n**Notice: If you don't want to keep the file in your device,\nuse `File` for operations as much as possible.**\nDeleting an `AssetEntity` might cause system popups show:\n\n```dart\nfinal List<String> result = await PhotoManager.editor.deleteWithIds(\n  <String>[entity.id],\n);\n```\n\nSee [photo_manager#from-raw-data][]\nand [photo_manager#delete-entities][]\nfor more details.\n\n### Glide warning 'Failed to find GeneratedAppGlideModule'\n\n```\nW/Glide   (21133): Failed to find GeneratedAppGlideModule. \n                   You should include an annotationProcessor compile dependency on com.github.bumptech.glide:compiler\n                   in you application ana a @GlideModule annotated AppGlideModule implementation\n                   or LibraryGlideModules will be silently ignored.\n```\n\n`Glide` needs annotation to keep singleton,\nprevent conflict between instances and versions,\nso while the photo manager uses `Glide` to implement image features,\nthe project which import this should define its own `AppGlideModule`.\nSee [Glide Generated API docs][] for implementation.\n\n## Contributors ✨\n\nMany thanks to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://blog.alexv525.com\"><img src=\"https://avatars1.githubusercontent.com/u/15884415?v=4?s=50\" width=\"50px;\" alt=\"Alex Li\"/><br /><sub><b>Alex Li</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=AlexV525\" title=\"Code\">💻</a> <a href=\"#design-AlexV525\" title=\"Design\">🎨</a> <a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=AlexV525\" title=\"Documentation\">📖</a> <a href=\"#example-AlexV525\" title=\"Examples\">💡</a> <a href=\"#ideas-AlexV525\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#maintenance-AlexV525\" title=\"Maintenance\">🚧</a> <a href=\"#question-AlexV525\" title=\"Answering Questions\">💬</a> <a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/pulls?q=is%3Apr+reviewed-by%3AAlexV525\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"#a11y-AlexV525\" title=\"Accessibility\">️️️️♿️</a> <a href=\"#translation-AlexV525\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.kikt.top\"><img src=\"https://avatars0.githubusercontent.com/u/14145407?v=4?s=50\" width=\"50px;\" alt=\"Caijinglong\"/><br /><sub><b>Caijinglong</b></sub></a><br /><a href=\"#example-CaiJingLong\" title=\"Examples\">💡</a> <a href=\"#ideas-CaiJingLong\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/SchnMar\"><img src=\"https://avatars3.githubusercontent.com/u/12902321?v=4?s=50\" width=\"50px;\" alt=\"Marcel Schneider\"/><br /><sub><b>Marcel Schneider</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3ASchnMar\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=SchnMar\" title=\"Code\">💻</a> <a href=\"#ideas-SchnMar\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ganlanshu0211\"><img src=\"https://avatars0.githubusercontent.com/u/9670379?v=4?s=50\" width=\"50px;\" alt=\"ganlanshu0211\"/><br /><sub><b>ganlanshu0211</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3Aganlanshu0211\" title=\"Bug reports\">🐛</a> <a href=\"#ideas-ganlanshu0211\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/JasonHezz\"><img src=\"https://avatars3.githubusercontent.com/u/15358765?v=4?s=50\" width=\"50px;\" alt=\"JasonHezz\"/><br /><sub><b>JasonHezz</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3AJasonHezz\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=JasonHezz\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/yanivshaked\"><img src=\"https://avatars.githubusercontent.com/u/13107481?v=4?s=50\" width=\"50px;\" alt=\"Yaniv Shaked\"/><br /><sub><b>Yaniv Shaked</b></sub></a><br /><a href=\"#translation-yanivshaked\" title=\"Translation\">🌍</a> <a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=yanivshaked\" title=\"Code\">💻</a> <a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3Ayanivshaked\" title=\"Bug reports\">🐛</a> <a href=\"#maintenance-yanivshaked\" title=\"Maintenance\">🚧</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/avi-yadav\"><img src=\"https://avatars.githubusercontent.com/u/7314430?v=4?s=50\" width=\"50px;\" alt=\"avi-yadav\"/><br /><sub><b>avi-yadav</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=avi-yadav\" title=\"Code\">💻</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Letalus\"><img src=\"https://avatars.githubusercontent.com/u/41230136?v=4?s=50\" width=\"50px;\" alt=\"Letalus\"/><br /><sub><b>Letalus</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3ALetalus\" title=\"Bug reports\">🐛</a> <a href=\"#translation-Letalus\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/greymag\"><img src=\"https://avatars.githubusercontent.com/u/1502131?v=4?s=50\" width=\"50px;\" alt=\"greymag\"/><br /><sub><b>greymag</b></sub></a><br /><a href=\"#translation-greymag\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/NaikSoftware\"><img src=\"https://avatars.githubusercontent.com/u/4218994?v=4?s=50\" width=\"50px;\" alt=\"Nickolay Savchenko\"/><br /><sub><b>Nickolay Savchenko</b></sub></a><br /><a href=\"#design-NaikSoftware\" title=\"Design\">🎨</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/KosukeSaigusa\"><img src=\"https://avatars.githubusercontent.com/u/13669049?v=4?s=50\" width=\"50px;\" alt=\"Kosuke Saigusa\"/><br /><sub><b>Kosuke Saigusa</b></sub></a><br /><a href=\"#translation-KosukeSaigusa\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Jon-Millent\"><img src=\"https://avatars.githubusercontent.com/u/17584565?v=4?s=50\" width=\"50px;\" alt=\"三闻书店\"/><br /><sub><b>三闻书店</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=Jon-Millent\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/didiosn\"><img src=\"https://avatars.githubusercontent.com/u/15895051?v=4?s=50\" width=\"50px;\" alt=\"DidiosFaust\"/><br /><sub><b>DidiosFaust</b></sub></a><br /><a href=\"#translation-didiosn\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ConanXie\"><img src=\"https://avatars.githubusercontent.com/u/10040846?v=4?s=50\" width=\"50px;\" alt=\"xiejie\"/><br /><sub><b>xiejie</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3AConanXie\" title=\"Bug reports\">🐛</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/maxzod\"><img src=\"https://avatars.githubusercontent.com/u/47630729?v=4?s=50\" width=\"50px;\" alt=\"Ahmed Masoud \"/><br /><sub><b>Ahmed Masoud </b></sub></a><br /><a href=\"#translation-maxzod\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/luomo-pro\"><img src=\"https://avatars.githubusercontent.com/u/41097395?v=4?s=50\" width=\"50px;\" alt=\"luomo-pro\"/><br /><sub><b>luomo-pro</b></sub></a><br /><a href=\"#a11y-luomo-pro\" title=\"Accessibility\">️️️️♿️</a> <a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3Aluomo-pro\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/paigupai\"><img src=\"https://avatars.githubusercontent.com/u/44311361?v=4?s=50\" width=\"50px;\" alt=\"paigupai\"/><br /><sub><b>paigupai</b></sub></a><br /><a href=\"#translation-paigupai\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/taqiabdulaziz\"><img src=\"https://avatars.githubusercontent.com/u/30410316?v=4?s=50\" width=\"50px;\" alt=\"Muhammad Taqi Abdul Aziz\"/><br /><sub><b>Muhammad Taqi Abdul Aziz</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=taqiabdulaziz\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/hellohejinyu\"><img src=\"https://avatars.githubusercontent.com/u/8766034?v=4?s=50\" width=\"50px;\" alt=\"何锦余\"/><br /><sub><b>何锦余</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3Ahellohejinyu\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/leonpesdk\"><img src=\"https://avatars.githubusercontent.com/u/57394644?v=4?s=50\" width=\"50px;\" alt=\"Leon Dudlik\"/><br /><sub><b>Leon Dudlik</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3Aleonpesdk\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.legoffmael.fr\"><img src=\"https://avatars.githubusercontent.com/u/22376981?v=4?s=50\" width=\"50px;\" alt=\"Maël\"/><br /><sub><b>Maël</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=LeGoffMael\" title=\"Code\">💻</a> <a href=\"#maintenance-LeGoffMael\" title=\"Maintenance\">🚧</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/dddrop\"><img src=\"https://avatars.githubusercontent.com/u/5361175?v=4?s=50\" width=\"50px;\" alt=\"dddrop\"/><br /><sub><b>dddrop</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=dddrop\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.linkedin.com/in/loinp\"><img src=\"https://avatars.githubusercontent.com/u/34020090?v=4?s=50\" width=\"50px;\" alt=\"Nguyen Phuc Loi\"/><br /><sub><b>Nguyen Phuc Loi</b></sub></a><br /><a href=\"#translation-nploi\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://sqlturk.wordpress.com/\"><img src=\"https://avatars.githubusercontent.com/u/12383547?v=4?s=50\" width=\"50px;\" alt=\"Cevheri\"/><br /><sub><b>Cevheri</b></sub></a><br /><a href=\"#translation-cevheri\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://velog.io/@hee_mm_\"><img src=\"https://avatars.githubusercontent.com/u/48482259?v=4?s=50\" width=\"50px;\" alt=\"mirimhee\"/><br /><sub><b>mirimhee</b></sub></a><br /><a href=\"#translation-LIMMIHEE\" title=\"Translation\">🌍</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://amoshk.top\"><img src=\"https://avatars.githubusercontent.com/u/32262985?v=4?s=50\" width=\"50px;\" alt=\"Amos\"/><br /><sub><b>Amos</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/issues?q=author%3AAmosHuKe\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Dimilkalathiya\"><img src=\"https://avatars.githubusercontent.com/u/102401667?v=4?s=50\" width=\"50px;\" alt=\"Dimil Kalathiya\"/><br /><sub><b>Dimil Kalathiya</b></sub></a><br /><a href=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/commits?author=Dimilkalathiya\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://about.me/gasol\"><img src=\"https://avatars.githubusercontent.com/u/108053?v=4?s=50\" width=\"50px;\" alt=\"Gasol Wu\"/><br /><sub><b>Gasol Wu</b></sub></a><br /><a href=\"#translation-Gasol\" title=\"Translation\">🌍</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\nThis project follows the\n[all-contributors](https://github.com/all-contributors/all-contributors) specification.\nContributions of any kind welcomed!!\n\n## Credits\n\n> Every aspect of IntelliJ IDEA has been designed to maximize developer productivity.\nTogether, intelligent coding assistance and ergonomic design make development not only productive but also enjoyable.\n\nThanks to [JetBrains](https://www.jetbrains.com/?from=fluttercandies)\nfor allocating free open-source licenses for IDEs\nsuch as [IntelliJ IDEA](https://www.jetbrains.com/idea/?from=fluttercandies).\n\n[<img src=\"https://github.com/fluttercandies/flutter_wechat_assets_picker/raw/main/.github/jetbrains-variant.png\" width=\"200\"/>](https://www.jetbrains.com/?from=fluttercandies)\n\n\n[photo_manager pub]: https://pub.dev/packages/photo_manager\n[extended_image pub]: https://pub.dev/packages/extended_image\n[provider pub]: https://pub.dev/packages/provider\n[video_player pub]: https://pub.dev/packages/video_player\n[wechat_camera_picker pub]: https://pub.dev/packages/wechat_camera_picker\n[Migration Guide]: https://github.com/fluttercandies/flutter_wechat_assets_picker/blob/main/guides/migration_guide.md\n[photo_manager's API docs]: https://pub.dev/documentation/photo_manager/latest/\n[Glide Generated API docs]: https://sjudd.github.io/glide/doc/generatedapi.html\n[Contribute custom implementations]: https://github.com/fluttercandies/flutter_wechat_assets_picker/blob/main/example/lib/customs/CONTRIBUTING.md\n[photo_manager#561]: https://github.com/fluttercandies/flutter_photo_manager/issues/561\n[photo_manager#from-raw-data]: https://github.com/fluttercandies/flutter_photo_manager#from-raw-data\n[photo_manager#delete-entities]: https://github.com/fluttercandies/flutter_photo_manager#delete-entities\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.025390625,
          "content": "theme: jekyll-theme-cayman"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 1.0458984375,
          "content": "include: package:flutter_lints/flutter.yaml\n\nanalyzer:\n  errors:\n    deprecated_member_use: ignore\n\nlinter:\n  rules:\n    always_declare_return_types: true\n    always_put_control_body_on_new_line: true\n    avoid_print: true\n    avoid_renaming_method_parameters: true\n    avoid_unnecessary_containers: true\n    avoid_void_async: true\n    curly_braces_in_flow_control_structures: true\n    directives_ordering: true\n    flutter_style_todos: true\n    library_private_types_in_public_api: false\n    overridden_fields: false\n    prefer_const_constructors: true\n    prefer_const_constructors_in_immutables: false\n    prefer_final_fields: true\n    prefer_final_in_for_each: true\n    prefer_final_locals: true\n    prefer_single_quotes: true\n    require_trailing_commas: true\n    sort_child_properties_last: true\n    sort_constructors_first: true\n    sort_unnamed_constructors_first: true\n    unnecessary_await_in_return: true\n    unnecessary_breaks: true\n    unnecessary_late: true\n    unnecessary_parenthesis: true\n    use_build_context_synchronously: false\n    void_checks: true\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "guides",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 1.4541015625,
          "content": "name: wechat_assets_picker\nversion: 9.4.2\ndescription: |\n  An image picker (also with videos and audio)\n  for Flutter projects based on WeChat's UI,\n  with full support for customization.\ntopics:\n  - picker\n  - image\n  - audio\n  - video\n  - wechat\n\nrepository: https://github.com/fluttercandies/flutter_wechat_assets_picker\nissue_tracker: https://github.com/fluttercandies/flutter_wechat_assets_picker/issues\n\nenvironment:\n  sdk: ^3.2.0\n  flutter: '>=3.16.0'\n\ndependencies:\n  flutter:\n    sdk: flutter\n\n  wechat_picker_library: ^1.0.5\n\n  extended_image: '>=8.3.0 <10.0.0'\n  photo_manager: ^3.5.0\n  photo_manager_image_provider: ^2.2.0\n  provider: ^6.0.5\n  video_player: ^2.7.0\n  visibility_detector: ^0.4.0\n\ndev_dependencies:\n  flutter_lints: any\n  flutter_localizations:\n    sdk: flutter\n  flutter_test:\n    sdk: flutter\n\nflutter:\n  assets:\n    - 'assets/icon/'\n\nscreenshots:\n  - description: 'Screenshot 1'\n    path: screenshots/README_1.webp\n  - description: 'Screenshot 2'\n    path: screenshots/README_2.webp\n  - description: 'Screenshot 3'\n    path: screenshots/README_3.webp\n  - description: 'Screenshot 4'\n    path: screenshots/README_4.webp\n  - description: 'Screenshot 5'\n    path: screenshots/README_5.webp\n  - description: 'Screenshot 6'\n    path: screenshots/README_6.webp\n  - description: 'Screenshot 7'\n    path: screenshots/README_7.webp\n  - description: 'Screenshot 8'\n    path: screenshots/README_8.webp\n  - description: 'Screenshot 9'\n    path: screenshots/README_9.webp\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}