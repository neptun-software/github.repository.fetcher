{
  "metadata": {
    "timestamp": 1736710541639,
    "page": 105,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Baseflow/flutter-permission-handler",
      "stars": 2071,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 2.85546875,
          "content": "# EditorConfig is awesome:http://EditorConfig.org\r\n\r\n# top-most EditorConfig file\r\nroot = true\r\n\r\n# Don't use tabs for indentation.\r\n[*]\r\nindent_style = space\r\n# (Please don't specify an indent_size here; that has too many unintended consequences.)\r\n\r\n# Code files\r\n[*.{cs,csx,vb,vbx}]\r\nindent_size = 4\r\ninsert_final_newline = true\r\ncharset = utf-8-bom\r\n\r\n# Xml project files\r\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\r\nindent_size = 2\r\n\r\n# Xml config files\r\n[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]\r\nindent_size = 2\r\n\r\n# JSON files\r\n[*.json]\r\nindent_size = 2\r\n\r\n# Dotnet code style settings:\r\n[*.{cs,vb}]\r\n# Sort using and Import directives with System.* appearing first\r\ndotnet_sort_system_directives_first = true\r\n# Avoid \"this.\" and \"Me.\" if not necessary\r\ndotnet_style_qualification_for_field = false:suggestion\r\ndotnet_style_qualification_for_property = false:suggestion\r\ndotnet_style_qualification_for_method = false:suggestion\r\ndotnet_style_qualification_for_event = false:suggestion\r\n\r\n# Use language keywords instead of framework type names for type references\r\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\r\ndotnet_style_predefined_type_for_member_access = true:suggestion\r\n\r\n# Suggest more modern language features when available\r\ndotnet_style_object_initializer = true:suggestion\r\ndotnet_style_collection_initializer = true:suggestion\r\ndotnet_style_coalesce_expression = true:suggestion\r\ndotnet_style_null_propagation = true:suggestion\r\ndotnet_style_explicit_tuple_names = true:suggestion\r\n\r\n# CSharp code style settings:\r\n[*.cs]\r\n# Prefer \"var\" everywhere\r\ncsharp_style_var_for_built_in_types = true:suggestion\r\ncsharp_style_var_when_type_is_apparent = true:suggestion\r\ncsharp_style_var_elsewhere = true:suggestion\r\n\r\n# Prefer method-like constructs to have a block body\r\ncsharp_style_expression_bodied_methods = false:none\r\ncsharp_style_expression_bodied_constructors = false:none\r\ncsharp_style_expression_bodied_operators = false:none\r\n\r\n# Prefer property-like constructs to have an expression-body\r\ncsharp_style_expression_bodied_properties = true:none\r\ncsharp_style_expression_bodied_indexers = true:none\r\ncsharp_style_expression_bodied_accessors = true:none\r\n\r\n# Suggest more modern language features when available\r\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\r\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\r\ncsharp_style_inlined_variable_declaration = true:suggestion\r\ncsharp_style_throw_expression = true:suggestion\r\ncsharp_style_conditional_delegate_call = true:suggestion\r\n\r\n# Newline settings\r\ncsharp_new_line_before_open_brace = all\r\ncsharp_new_line_before_else = true\r\ncsharp_new_line_before_catch = true\r\ncsharp_new_line_before_finally = true\r\ncsharp_new_line_before_members_in_object_initializers = true\r\ncsharp_new_line_before_members_in_anonymous_types = true\r\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.8076171875,
          "content": "# This file is understood by git 1.7.2+.\n\n# Windows specific files should always be crlf on checkout\n*.bat text eol=crlf\n*.cmd text eol=crlf\n*.ps1 text eol=crlf\n\n# Check out the following as ln always for osx/linux/cygwin\n*.sh text eol=lf\n\n# Opt in the following types to always normalize line endings\n# on checkin and always use native endings on checkout.\n*.config  text\n*.cs      text diff=csharp\n*.csproj  text\n*.md      text\n*.msbuild text\n*.nuspec  text\n*.pp      text\n*.ps1     text\n*.sln     text\n*.tt      text\n*.txt     text\n*.xaml    text\n*.xml     text\n\n# Binary files\n*.bmp     binary\n*.jpeg    binary\n*.jpg     binary\n*.nupkg   binary\n*.png     binary\n*.sdf     binary\n\n*.java linguist-language=Dart\n*.kt linguist-language=Dart\n*.swift linguist-language=Dart\n*.m linguist-language=Dart\n*.h linguist-language=Dart\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.6982421875,
          "content": "# Miscellaneous\n*.class\n*.lock\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.project\n.svn/\nbin/\nmigrate_working_dir/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Android Studio related\nandroid/.classpath\nandroid/.settings/\n\n# Visual Studio Code related\n.vscode/\n\n# Flutter repo-specific\n/bin/cache/\n/bin/mingit/\n/dev/benchmarks/mega_gallery/\n/dev/bots/.recipe_deps\n/dev/bots/android_tools/\n/dev/docs/doc/\n/dev/docs/lib/\n/dev/docs/pubspec.yaml\n/packages/flutter/coverage/\nversion\n\n# Flutter/Dart/Pub related\n/pubspec.lock\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\nflutter_*.png\nlinked_*.ds\nunlinked.ds\nunlinked_spec.ds\nflutter_export_environment.sh\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.30078125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 06b979c4d5e1b499745422269f01a00341257058\n  channel: master\n\nproject_type: plugin\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1455078125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to participate in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as physical or electronic\n  address, without explicit permission\n* Other conduct that could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within and in public spaces\nwhen an individual represents the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [hello@baseflow.com](mailto:hello@baseflow.com). All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nYou can post more details of specific enforcement policies separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nFaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.376953125,
          "content": "# Contributing to the Flutter Permission handler plugin\n\n## What you will need\n\n* A Linux, Mac OS X, or Windows machine (note: to run and compile iOS-specific parts you'll need access to a Mac OS X machine);\n* git (used for source version control, installation instructions can be found [here](https://git-scm.com/));\n* The Flutter SDK (installation instructions can be found [here](https://flutter.io/get-started/install/));\n* A personal GitHub account (if you don't have one, you can sign up for free [here](https://github.com/))\n\n## Setting up your development environment\n\n* Fork `https://github.com/Baseflow/flutter-permission-handler` into your own GitHub account. If you already have a fork and moving to a new computer, make sure you update your fork.\n* If you haven't configured your machine with an SSH key that's known to GitHub, then\n  follow [GitHub's directions](https://help.github.com/articles/generating-ssh-keys/)\n  to generate an SSH key.\n* Clone your forked repo on your local development machine: `git clone git@github.com:<your_name_here>/flutter-permission-handler.git`\n* Change into the `flutter-permission-handler` directory: `cd flutter-permission-handler`\n* Add an upstream to the original repo, so that fetches from the master repository and not your clone: `git remote add upstream git@github.com:Baseflow/flutter-permission-handler.git`\n\n## Running the example project\n\n* Change into the example directory: `cd example`\n* Run the App: `flutter run`\n\n## Contribute\n\nWe really appreciate contributions via GitHub pull requests. To contribute take the following steps:\n\n* Make sure you are up to date with the latest code on the master:\n  * `git fetch upstream`\n  * `git checkout upstream/develop -b <name_of_your_branch>`\n* Apply your changes\n* Verify your changes and fix potential warnings/ errors:\n  * Check formatting: `flutter format .`\n  * Run static analyses: `flutter analyze`\n  * Run unit-tests: `flutter test`\n* Commit your changes: `git commit -am \"<your informative commit message>\"`\n* Push changes to your fork: `git push origin <name_of_your_branch>`\n\nSend us your pull request:\n\n* Go to `https://github.com/Baseflow/flutter-permission-handler` and click the \"Compare & pull request\" button.\n\nPlease make sure you solved all warnings and errors reported by the static code analyses and that you fill in the full pull request template. Failing to do so will result in us asking you to fix it.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2020 Baseflow\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.3017578125,
          "content": "# Flutter permission_handler plugin\n\nThe Flutter permission_handler plugin is build following the federated plugin architecture. A detailed explanation of the federated plugin concept can be found in the [Flutter documentation](https://flutter.dev/docs/development/packages-and-plugins/developing-packages#federated-plugins). This means the permission_handler plugin is separated into the following packages:\n\n1. [`permission_handler`][1]: the app facing package. This is the package users depend on to use the plugin in their project. For details on how to use the `permission_handler` plugin you can refer to its [README.md][2] file. At this moment the Android and iOS platform implementations are also part of this package. Additional platform support will be added in their own individual \"platform package(s)\".\n2. [`permission_handler_platform_interface`][3]: this packages declares the interface which all platform packages must implement to support the app-facing package. Instructions on how to implement a platform packages can be found in the [README.md][4] of the `permission_handler_platform_interface` package.\n\n[1]: https://pub.dev/packages/permission_handler\n[2]: ./permission_handler/README.md\n[3]: https://pub.dev/packages/permission_handler_platform_interface\n[4]: ./permission_handler_platform_interface/README.md\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.0888671875,
          "content": "include: package:flutter_lints/flutter.yaml\n\nlinter:\n  rules:\n    - public_member_api_docs\n"
        },
        {
          "name": "permission_handler",
          "type": "tree",
          "content": null
        },
        {
          "name": "permission_handler_android",
          "type": "tree",
          "content": null
        },
        {
          "name": "permission_handler_apple",
          "type": "tree",
          "content": null
        },
        {
          "name": "permission_handler_html",
          "type": "tree",
          "content": null
        },
        {
          "name": "permission_handler_platform_interface",
          "type": "tree",
          "content": null
        },
        {
          "name": "permission_handler_windows",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}