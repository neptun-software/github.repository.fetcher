{
  "metadata": {
    "timestamp": 1736710507564,
    "page": 33,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zino-hofmann/graphql-flutter",
      "stars": 3258,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 8.55859375,
          "content": "{\n  \"projectName\": \"graphql-flutter\",\n  \"projectOwner\": \"zino-app\",\n  \"repoType\": \"github\",\n  \"repoHost\": \"https://github.com\",\n  \"files\": [\n    \"README.md\"\n  ],\n  \"imageSize\": 100,\n  \"commit\": true,\n  \"contributors\": [\n    {\n      \"login\": \"eusdima\",\n      \"name\": \"Eustatiu Dima\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/4757453?v=4\",\n      \"profile\": \"http://eusdima.com\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"doc\",\n        \"example\",\n        \"ideas\",\n        \"review\"\n      ]\n    },\n    {\n      \"login\": \"HofmannZ\",\n      \"name\": \"Zino Hofmann\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/17142193?v=4\",\n      \"profile\": \"https://github.com/HofmannZ\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"doc\",\n        \"example\",\n        \"ideas\",\n        \"infra\",\n        \"review\"\n      ]\n    },\n    {\n      \"login\": \"jinxac\",\n      \"name\": \"Harkirat Saluja\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/15068096?v=4\",\n      \"profile\": \"https://github.com/jinxac\",\n      \"contributions\": [\n        \"doc\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"camuthig\",\n      \"name\": \"Chris Muthig\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/5178217?v=4\",\n      \"profile\": \"https://github.com/camuthig\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"example\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"cal-pratt\",\n      \"name\": \"Cal Pratt\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/7611406?v=4\",\n      \"profile\": \"http://stackoverflow.com/users/3280538/flkes\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"doc\",\n        \"example\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"mmadjer\",\n      \"name\": \"Miroslav Valkovic-Madjer\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/9830761?v=4\",\n      \"profile\": \"http://madjer.info\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"AleksandarFaraj\",\n      \"name\": \"Aleksandar Faraj\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/4523129?v=4\",\n      \"profile\": \"https://github.com/AleksandarFaraj\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"adelcasse\",\n      \"name\": \"Arnaud Delcasse\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/403029?v=4\",\n      \"profile\": \"https://www.scity.coop\",\n      \"contributions\": [\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"dustin-graham\",\n      \"name\": \"Dustin Graham\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/959931?v=4\",\n      \"profile\": \"https://github.com/dustin-graham\",\n      \"contributions\": [\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"fabiocarneiro\",\n      \"name\": \"Fábio Carneiro\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/1375034?v=4\",\n      \"profile\": \"https://github.com/fabiocarneiro\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"lordgreg\",\n      \"name\": \"Gregor\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/480546?v=4\",\n      \"profile\": \"https://github.com/lordgreg\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"kolja-esders\",\n      \"name\": \"Kolja Esders\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/5159563?v=4\",\n      \"profile\": \"https://github.com/kolja-esders\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"micimize\",\n      \"name\": \"Michael Joseph Rosenthal\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/8343799?v=4\",\n      \"profile\": \"https://github.com/micimize\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"doc\",\n        \"example\",\n        \"ideas\",\n        \"test\",\n        \"content\",\n        \"infra\",\n        \"maintenance\",\n        \"projectManagement\",\n        \"question\",\n        \"review\",\n        \"tutorial\"\n      ]\n    },\n    {\n      \"login\": \"Igor1201\",\n      \"name\": \"Igor Borges\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/735858?v=4\",\n      \"profile\": \"http://borges.me/\",\n      \"contributions\": [\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"rafaelring\",\n      \"name\": \"Rafael Ring\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/6992724?v=4\",\n      \"profile\": \"https://github.com/rafaelring\",\n      \"contributions\": [\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"truongsinh\",\n      \"name\": \"TruongSinh Tran-Nguyen\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/358585?v=4\",\n      \"profile\": \"http://truongsinh.pro\",\n      \"contributions\": [\n        \"code\",\n        \"content\",\n        \"doc\",\n        \"example\",\n        \"ideas\",\n        \"infra\",\n        \"test\",\n        \"tutorial\"\n      ]\n    },\n    {\n      \"login\": \"mainawycliffe\",\n      \"name\": \"Maina Wycliffe\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/12270550?v=4\",\n      \"profile\": \"https://codinglatte.com\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"example\"\n      ]\n    },\n    {\n      \"login\": \"degroote22\",\n      \"name\": \"Lucas de Ávila Martins\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/12750442?v=4\",\n      \"profile\": \"https://github.com/degroote22\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"szantogab\",\n      \"name\": \"szantogab\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/2809091?v=4\",\n      \"profile\": \"https://github.com/szantogab\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"dbrb\",\n      \"name\": \"dbrb\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/1658994?v=4\",\n      \"profile\": \"https://github.com/dbrb\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"yunyu\",\n      \"name\": \"Yunyu Lin\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/8008350?v=4\",\n      \"profile\": \"https://yunyul.in/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"ammaratef45\",\n      \"name\": \"Ammar Atef\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/13663221?v=4\",\n      \"profile\": \"https://zerosonessoftware.blogspot.com/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"SirKuryaki\",\n      \"name\": \"Ariel Carbonaro\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/6807077?v=4\",\n      \"profile\": \"http://dev4mobile.blogspot.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"ArneSchulze\",\n      \"name\": \"ArneSchulze\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/32508820?v=4\",\n      \"profile\": \"https://github.com/ArneSchulze\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"xtian\",\n      \"name\": \"Christian Wesselhoeft\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/602654?v=4\",\n      \"profile\": \"https://xtian.us\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"JarrodCColburn\",\n      \"name\": \"JarrodCColburn\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/16673615?v=4\",\n      \"profile\": \"https://github.com/JarrodCColburn\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"mwalkerwells\",\n      \"name\": \"M. Walker Wells\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/16157429?v=4\",\n      \"profile\": \"http://mwalkerwells.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"mateusfsilva\",\n      \"name\": \"Mateus Gustavo de Freitas e Silva\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/3394090?v=4\",\n      \"profile\": \"https://mateusfsilva.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"pleopardi\",\n      \"name\": \"pleopardi\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/22129342?v=4\",\n      \"profile\": \"https://github.com/pleopardi\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"smkhalsa\",\n      \"name\": \"Sat Mandir S. Khalsa\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/6362903?v=4\",\n      \"profile\": \"http://www.satkhalsa.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"nitishk72\",\n      \"name\": \"Nitish Kumar Singh\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/15886737?v=4\",\n      \"profile\": \"https://www.youtube.com/c/NitishKumarSingh\",\n      \"contributions\": [\n        \"code\"\n      ]\n    }\n  ],\n  \"commitConvention\": \"none\",\n  \"skipCi\": true,\n  \"contributorsPerLine\": 7\n}\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.3115234375,
          "content": "comment:\n  require_changes: true # Only post a comment if coverage changes.\n\ncoverage:\n  status:\n    project:\n      default:\n        threshold: 1% # Allow coverage to drop by up to 1% in a PR before marking it failed\n    patch: off\n\n# don't factor tests into coverage scores\nignore:\n  - '**/example/'\n  - '**/*.g.dart'\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.3349609375,
          "content": ".vs/\n.vscode/\n.idea\n*.iml\n\n.DS_Store\n.dart_tool/\n\n.packages\n.pub/\n\nbuild/\nios/.generated/\nios/Flutter/Generated.xcconfig\nios/Runner/GeneratedPluginRegistrant.*\n.flutter-plugins\npubspec.lock\npubspec_overrides.yaml\n\n# Coverage\ncoverage.json\ncoverage/*\n\n# example build files\npackages/graphql_flutter/example/android/.project\npackages/graphql_flutter/example/android/.settings/\npackages/graphql_flutter/example/android/app/.classpath\npackages/graphql_flutter/example/android/app/.project\npackages/graphql_flutter/example/android/app/.settings/\n\npackages/graphql/example/android\npackages/graphql/example/ios\n\n#\n# Flutter\n#\n# Miscellaneous\n*.class\n*.lock\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Visual Studio Code related\n.vscode/\n\n# Flutter repo-specific\n/bin/cache/\n/bin/mingit/\n/dev/benchmarks/mega_gallery/\n/dev/bots/.recipe_deps\n/dev/bots/android_tools/\n/dev/docs/doc/\n/dev/docs/lib/\n/dev/docs/pubspec.yaml\n/packages/flutter/coverage/\nversion\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\nflutter_*.png\nlinked_*.ds\nunlinked.ds\nunlinked_spec.ds\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/.last_build_id\n**/ios/Flutter/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\n**/test/.test_coverage.dart\n\n\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2666015625,
          "content": "# TODO This was added for testing file uploads,\n# but the file upload test in graphql/test doesn't actually depend on it\n# maybe it should just be removed?\n[submodule \"example/server\"]\n\tpath = example/server\n\turl = https://github.com/jaydenseric/apollo-upload-examples.git\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.9208984375,
          "content": "# Contributing to GraphQL-Flutter\n\nWe would love for you to contribute to graphql-flutter and help make it even better than it is\ntoday! As a contributor, here are the guidelines we would like you to follow:\n\n- [Question or Problem?](#question)\n- [Issues and Bugs](#issue)\n- [Feature Requests](#feature)\n- [Submission Guidelines](#submit)\n- [Coding Rules](#rules)\n- [Commit Message Guidelines](#commit)\n\n## <a name=\"question\"></a> Got a Question or Problem?\n\nDo not open issues for general support questions as we want to keep GitHub issues for bug reports and feature requests. You've got much better chances of getting your question answered on [Stack Overflow][stackoverflow] where the questions should be tagged with tags `flutter` and `graphql`.\n\nStack Overflow is a much better place to ask questions since:\n\n- there are thousands of people willing to help on Stack Overflow\n- questions and answers stay available for public viewing so your question / answer might help someone else\n- Stack Overflow's voting system assures that the best answers are prominently visible.\n\nTo save your and our time, we will systematically close all issues that are requests for general support and redirect people to Stack Overflow.\n\nIf you would like to chat about the question in real-time, you can reach out via [our discord channel][discord].\n\n## <a name=\"issue\"></a> Found a Bug?\n\nIf you find a bug in the source code, you can help us by\n[submitting an issue](#submit-issue) to our [GitHub Repository][github]. Even better, you can\n[submit a Pull Request](#submit-pr) with a fix.\n\n## <a name=\"feature\"></a> Missing a Feature?\n\nYou can _request_ a new feature by [submitting an issue](#submit-issue) to our GitHub\nRepository. If you would like to _implement_ a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it.\nPlease consider what kind of change it is:\n\n- For a **Major Feature**, first open an issue and outline your proposal so that it can be\n  discussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\n  and help you to craft the change so that it is successfully accepted into the project.\n- **Small Features** can be crafted and directly [submitted as a Pull Request](#submit-pr).\n\n## <a name=\"submit\"></a> Submission Guidelines\n\n### <a name=\"submit-issue\"></a> Submitting an Issue\n\nBefore you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available.\n\nWe want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs, we will systematically ask you to provide a minimal reproduction. Having a minimal reproducible scenario gives us a wealth of important information without going back & forth to you with additional questions.\n\nA minimal reproduction allows us to quickly confirm a bug (or point out a coding problem) as well as confirm that we are fixing the right problem.\n\nWe will be insisting on a minimal reproduction scenario in order to save maintainers time and ultimately be able to fix more bugs. Interestingly, from our experience users often find coding problems themselves while preparing a minimal reproduction. We understand that sometimes it might be hard to extract essential bits of code from a larger code-base but we really need to isolate the problem before we can fix it.\n\nUnfortunately, we are not able to investigate / fix bugs without a minimal reproduction, so if we don't hear back from you we are going to close an issue that doesn't have enough info to be reproduced.\n\nYou can file new issues by selecting from our [new issue templates](https://github.com/zino-app/graphql-flutter/issues/new/choose) and filling out the issue template.\n\n### <a name=\"submit-pr\"></a> Submitting a Pull Request (PR)\n\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\n1. Search [GitHub](https://github.com/zino-app/graphql-flutter/pulls) for an open or closed PR\n   that relates to your submission. You don't want to duplicate effort.\n2. Be sure that an issue describes the problem you're fixing, or documents the design for the feature you'd like to add.\n   Discussing the design up front helps to ensure that we're ready to accept your work.\n3. Fork the `zino-app/graphql-flutter` repo.\n4. Make your changes in a new git branch:\n\n    - For fixes bug fixes:\n\n   ```shell\n   git checkout -b my-fix-branch master\n   ```\n\n    - For new features:\n    \n     ```shell\n    git checkout -b my-fix-branch beta\n    ```\n\n5. Create your patch, **including appropriate test cases**.\n6. Add and Update the documentation for your feature.\n7. Commit your changes using a descriptive commit message that follows our\n   [commit message conventions](#commit). Adherence to these conventions\n   is necessary because release notes are automatically generated from these messages.\n\n   ```shell\n   git commit -S -a\n   ```\n\n   **Note:** the optional commit `-a` command line option will automatically \"add\" and \"rm\" edited files. While the options `-S` ensures are your commits are signed.\n\n8. Make sure all of your commits are signed - follow instructions [here](https://help.github.com/en/articles/signing-commits) to learn how to sign your commits.\n9. Push your branch to GitHub:\n\n    ```shell\n    git push origin my-fix-branch\n    ```\n\n10. In GitHub, send a pull request to `graphql-flutter:master` for fixes and `graphql-flutter:beta` for new features.\n\n- If we suggest changes then:\n\n  - Make the required updates.\n  - Rebase your branch and force push to your GitHub repository (this will update your Pull Request):\n\n    ```shell\n    git rebase master -i\n    git push -f\n    ```\n\nThat's it! Thank you for your contribution!\n\n#### After your pull request is merged\n\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\n- Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:\n\n  ```shell\n  git push origin --delete my-fix-branch\n  ```\n\n- Check out the master branch:\n\n  ```shell\n  git checkout master -f\n  ```\n\n- Delete the local branch:\n\n  ```shell\n  git branch -D my-fix-branch\n  ```\n\n- Update your master with the latest upstream version:\n\n  ```shell\n  git pull --ff upstream master\n  ```\n\n## <a name=\"rules\"></a> Coding Rules\n\nsee `doc/dev/MANTAINERS.md` file\n\n\n## <a name=\"commit\"></a> Commit Message Guidelines\n\nWe have very precise rules over how our git commit messages can be formatted. This leads to **more\nreadable messages** that are easy to follow when looking through the **project history**. But also,\nwe use the git commit messages trigger releases.\n\n### Commit Message Format\n\nsee `doc/dev/MANTAINERS.md` file\n \n[github]: https://github.com/zino-app/graphql-flutter\n[discord]: https://discord.gg/tXTtBfC\n[dart-style-guide]: https://dart.dev/guides/language/effective-dart/style\n[stackoverflow]: https://stackoverflow.com/questions/tagged/flutter+graphql\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "MIT License\n\nCopyright (c) 2018-present, Zino App B.V.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.1123046875,
          "content": "CC=dart pub global run melos\n#CC_TEST=spec\nCC_CHANGELOG=dart pub global run changelog_cmd\n\ndefault: analyze check\n\ndep:\n\tdart pub global activate melos 2.9.0;\n\tdart pub global activate changelog_cmd;\n\t$(CC) bootstrap\n\ncheck: ci_check_client ci_check_flutter\n\nfmt:\n\t$(CC) run format --no-select\n\nanalyze: fmt\n\t$(CC) run client_analyze --no-select\n\t$(CC) run flutter_analyze --no-select\n\nclient: ci_check_client ci_fmt_client\n\nflutter: ci_check_flutter ci_fmt_flutter\n\nci_check_flutter:\n\t$(CC) run flutter_test --no-select\n\nci_check_client:\n\t$(CC) run client_test --no-select\n\nci_fmt_client:\n\t$(CC) run client_analyze --no-select\n\nci_fmt_flutter:\n\t$(CC) run client_analyze --no-select\n\nci_coverage_client:\n\t$(CC) run client_test_coverage --no-select\n\nci_coverage_flutter:\n\t$(CC) run flutter_test_coverage --no-select\n\ncheck_client: ci_fmt_client ci_check_client\n\ncheck_flutter: ci_fmt_flutter ci_check_flutter\n\nchangelog_client:\n\tcd packages/graphql && $(CC_CHANGELOG)\n\nchangelog_flutter:\n\tcd packages/graphql_flutter && $(CC_CHANGELOG)\n\nchangelog: changelog_client changelog_flutter\n\nci: dep check_client check_flutter\n\nclean:\n\t$(CC) clean\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.39453125,
          "content": "<div align=\"center\">\n  <h1>GraphQL Flutter</h1>\n\n  <div align=\"center\">\n      <img src=\"https://miro.medium.com/max/1400/1*bU9k3XzmNAQ9F9J0uCiFsQ.png\" width=\"800\"/>\n  </div>\n\n  <p>\n    <strong>A collection of packages to work with graphql server in dart and flutter.</strong>\n  </p>\n\n  <h4>\n    <a href=\"https://github.com/zino-hofmann/graphql-flutter\">Project Homepage</a>\n  </h4>\n\n  <a href=\"https://github.com/laanwj/rust-clightning-rpc/actions\">\n    <img alt=\"GitHub Workflow Status (branch)\" src=\"https://img.shields.io/github/workflow/status/laanwj/rust-clightning-rpc/Integration%20testing/master?style=flat-square\"/>\n  </a>\n\n  <a href=\"https://pub.dev/packages/graphql\">\n    <img alt=\"Pub Popularity\" src=\"https://img.shields.io/pub/popularity/graphql?style=flat-square\"/>\n  </a>\n\n  <a href=\"https://discord.gg/YBFCTXNbwY\">\n    <img alt=\"Discord\" src=\"https://img.shields.io/discord/559455668810153989?style=flat-square\"/>\n  </a>\n\n</div>\n\n## Introduction\n\nGraphQL brings many benefits, both to the client: devices will need fewer requests, and therefore reduce data usage. And to the programmer: requests are arguable, they have the same structure as the request.\n\nThis project combines the benefits of GraphQL with the benefits of `Streams` in Dart to deliver a high-performance client.\n\nThe project took inspiration from the [Apollo GraphQL client](https://github.com/apollographql/apollo-client), great work guys!\n\n## Packages\n\nThis is a Monorepo which contains the following packages:\n\n| Crate     | Description |  Version |\n|:----------|:-----------:|--:|\n| [graphql](./packages/graphql) | Client implementation to interact with any graphql server  | ![Pub Version (including pre-releases)](https://img.shields.io/pub/v/graphql?include_prereleases&style=flat-square)  |\n| [graphql_flutter](./packages/graphql_flutter) | Flutter Widgets wrapper around graphql API | ![Pub Version (including pre-releases)](https://img.shields.io/pub/v/graphql_flutter?include_prereleases&style=flat-square) |\n\n## Utils Tools\n\nAround `graphql_flutter` are builds awesome tools like:\n\n1. [graphql_flutter_bloc](https://github.com/artflutter/graphql_flutter_bloc)\n2. [graphql_codegen](https://github.com/heftapp/graphql_codegen)\n3. [graphql-cache-inspector](https://pub.dev/packages/graphql_cache_inspector)\n\n## Features\n\n✅ &nbsp; Queries, Mutations, and Subscriptions  \n✅ &nbsp; [Query polling and rebroadcasting](./packages/graphql/README.md#clientwatchquery-and-observablequery)  \n✅ &nbsp; [In memory and persistent caching](./packages/graphql/README.md#persistence)  \n✅ &nbsp; [GraphQL Upload](./packages/graphql/README.md#graphql-upload)  \n✅ &nbsp; [Optimistic results](./packages/graphql_flutter/README.md#optimism)  \n✅ &nbsp; [Modularity](./packages/graphql/README.md#links)  \n✅ &nbsp; [Client-state management](./packages/graphql/README.md#direct-cache-access-api)  \n⚠️  &nbsp; [Automatic Persisted Queries](./packages/graphql/README.md#persistedquerieslink-experimental-warning-out-of-service-warning) (out of service)  \n\n## Contributing\n\nPlease see our [Hacking guide](./docs/dev/MAINTAINERS.md)\n\n## Contributors\n\nThis package was originally created and published by the engineers at [Zino App BV](https://zinoapp.com). Since then the community has helped to make it even more useful for even more developers.\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specification. Contributions of any kind are welcome!\n\n[build-status-badge]: https://img.shields.io/github/workflow/status/zino-hofmann/graphql-flutter/graphql-flutter%20Tests%20case?style=flat-square\n[build-status-link]: https://github.com/zino-hofmann/graphql-flutter/actions\n[coverage-badge]: https://img.shields.io/codecov/c/github/zino-hofmann/graphql-flutter/beta?style=flat-square\n[coverage-link]: https://app.codecov.io/gh/zino-hofmann/graphql-flutter\n[version-badge]: https://img.shields.io/pub/v/graphql_flutter.svg?style=flat-square\n[package-link]: https://pub.dartlang.org/packages/graphql_flutter\n[package-link-client]: https://pub.dartlang.org/packages/graphql\n[license-badge]: https://img.shields.io/github/license/zino-app/graphql-flutter.svg?style=flat-square\n[license-link]: https://github.com/zino-app/graphql-flutter/blob/master/LICENSE\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs-link]: http://makeapullrequest.com\n[github-watch-badge]: https://img.shields.io/github/watchers/zino-app/graphql-flutter.svg?style=flat-square&logo=github&logoColor=ffffff\n[github-watch-link]: https://github.com/zino-app/graphql-flutter/watchers\n[github-star-badge]: https://img.shields.io/github/stars/zino-app/graphql-flutter.svg?style=flat-square&logo=github&logoColor=ffffff\n[github-star-link]: https://github.com/zino-app/graphql-flutter/stargazers\n[discord-badge]: https://img.shields.io/discord/559455668810153989.svg?style=flat-square&logo=discord&logoColor=ffffff\n[discord-link]: https://discord.gg/tXTtBfC\n\n### Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/graphql-flutter/contribute)]\n\n#### Individuals\n\n<a href=\"https://opencollective.com/graphql-flutter\"><img src=\"https://opencollective.com/graphql-flutter/individuals.svg?width=890\"></a>\n\n#### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/graphql-flutter/contribute)]\n\n<a href=\"https://opencollective.com/graphql-flutter/organization/0/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/graphql-flutter/organization/1/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/graphql-flutter/organization/2/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/graphql-flutter/organization/3/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/graphql-flutter/organization/4/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/graphql-flutter/organization/5/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/graphql-flutter/organization/6/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/graphql-flutter/organization/7/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/graphql-flutter/organization/8/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/graphql-flutter/organization/9/website\"><img src=\"https://opencollective.com/graphql-flutter/organization/9/avatar.svg\"></a>\n\n## Articles and Videos\n\nExternal guides, tutorials, and other resources from the GraphQL Flutter community\n\n- [Ultimate toolchain to work with GraphQL in Flutter](https://medium.com/@v.ditsyak/ultimate-toolchain-to-work-with-graphql-in-flutter-13aef79c6484):  \n  An intro to using `graphql_flutter` with [`artemis`](https://pub.dev/packages/artemis) for code generation and [`graphql-faker`](https://github.com/APIs-guru/graphql-faker) for API prototyping\n"
        },
        {
          "name": "changelog-v3-v4.md",
          "type": "blob",
          "size": 5.083984375,
          "content": "# Migrating from v3 – v4\n\nv4 aims to solve a number of sore spots, particularly with caching, largely by leveraging libraries from the [gql-dart](https://github.com/gql-dart) ecosystem.\n\nThere has also been an effort to add more API docs and docs in general, particularly in the [`graphql` README](./packages/graphql).\n\n> **NB** Note that if you are depending on `PersistedQueriesLink`, its migration is not yet complete\n\n- [Migrating from v3 – v4](#migrating-from-v3--v4)\n  - [Cache overhaul](#cache-overhaul)\n  - [We now use the gql_link system](#we-now-use-the-gql_link-systemhttpsgithubcomgql-dartgqltreemasterlinksgql_link)\n  - [`subscription` API overhaul](#subscription-api-overhaul)\n  - [Minor changes](#minor-changes)\n    - [Enums are normalized and idiomatic](#enums-are-normalized-and-idiomatic)\n    - [`client.fetchMore` (experimental)](#clientfetchmore-experimental)\n\n## Cache overhaul\n\n- There is now only a single `GraphQLCache`, which leverages [normalize](https://pub.dev/packages/normalize),\n  Giving us a much more `apollo`ish API.\n  - [`typePolicies`]\n  - [direct cache access] via `readQuery`, `writeQuery`, `readFragment`, and `writeFragment`\n    ```dart\n    /// see more in graphql's readme\n    client.writeQuery(myQueryOptions.asRequest, queryData);\n    client.readQuery(myQueryOptions.asRequest);\n    ```\n- `LazyCacheMap` has been deleted\n- `GraphQLCache` marks itself for rebroadcasting (should fix some related issues)\n- **`Store`** now decouples persistence from the cache:\n\n```dart\n/// Only necessary on flutter\nvoid main() async {\n  await initHiveForFlutter();\n  runApp(MyApp());\n}\n\nGraphQLCache(\n  // The default store is the InMemoryStore, which does NOT persist to disk\n  store: GraphQLCache(store: HiveStore()),\n)\n```\n\n## We now use the [gql_link system](https://github.com/gql-dart/gql/tree/master/links/gql_link)\n\n- Most links are re-exported from `graphql/client.dart`\n- `QueryOptions`, `MutationOptions`, etc are turned into\n  [gql_exec](https://github.com/gql-dart/gql/tree/master/links/gql_exec) `Request`s\n  before being sent down the link chain.\n- `documentNode` is deprecated in favor of `DocumentNode document` for consistency with `gql` libraries\n\n```diff\nfinal httpLink = HttpLink(\n-  uri: 'https://api.github.com/graphql',\n+  'https://api.github.com/graphql',\n);\n\nfinal authLink = AuthLink(\n  getToken: () async => 'Bearer $YOUR_PERSONAL_ACCESS_TOKEN',\n);\n\nvar link = authLink.concat(httpLink);\n\nif (ENABLE_WEBSOCKETS) {\n  final websocketLink = WebSocketLink(\n-    uri: 'ws://localhost:8080/ws/graphql'\n+    'ws://localhost:8080/ws/graphql'\n  );\n\n-  link = link.concat(websocketLink);\n+  // split request based on type\n+  link = Link.split(\n+    (request) => request.isSubscription,\n+    websocketLink,\n+    link,\n+  );\n}\n```\n\nThis makes all link development coordinated across the ecosystem, so that we can leverage existing links like [gql_dio_link](https://pub.dev/packages/gql_dio_link), and all link-based clients benefit from new link development\n\n## `subscription` API overhaul\n\n`Subscription`/`client.subscribe` API is in line with the rest of the API\n\n```dart\nfinal subscriptionDocument = gql(\n  r'''\n    subscription reviewAdded {\n      reviewAdded {\n        stars, commentary, episode\n      }\n    }\n  ''',\n);\n// graphql/client.dart usage\nsubscription = client.subscribe(\n  SubscriptionOptions(\n    document: subscriptionDocument\n  ),\n);\n\n// graphql_flutter/graphql_flutter.dart usage\nSubscription(\n  options: SubscriptionOptions(\n    document: subscriptionDocument,\n  ),\n  builder: (result) { /*...*/ },\n);\n```\n\n## Minor changes\n\n- `pollInterval`, which used to be an `int` of `seconds`, is now a `Duration`\n- As mentioned before, `documentNode: gql(...)` is now `document: gql(...)`.\n- The exported `gql` utility adds `__typename` automatically.\n  \\*\\*If you define your own, make sure to include `AddTypenameVisitor`,\n  or else that your cache `dataIdFromObject` works without it\n\n### Enums are normalized and idiomatic\n\n```diff\n- QueryResultSource.OptimisticResult\n+ QueryResultSource.optimisticResult\n- QueryResultSource.Cache\n+ QueryResultSource.cache\n// etc\n\n- QueryLifecycle.UNEXECUTED\n+ QueryLifecycle.unexecuted\n- QueryLifecycle.SIDE_EFFECTS_PENDING\n+ QueryLifecycle.sideEffectsPending\n```\n\n### `client.fetchMore` (experimental)\n\nThe `fetchMore` logic is now available for when one isn't using `watchQuery`:\n\n```dart\n/// Untested example code\nclass MyQuery {\n  QueryResult latestResult;\n  QueryOptions initialOptions;\n\n  FetchMoreOptions get _fetchMoreOptions {\n    // resolve the fetchMore params based on some data in lastestResult,\n    // like last item id or page number, and provide custom updateQuery logic\n  }\n\n  Future<QueryResult> fetchMore() async {\n    final result = await client.fetchMore(\n      _fetchMoreOptions,\n      originalOptions: options,\n      previousResult: latestResult,\n    );\n    latestResult = result;\n    return result;\n  }\n}\n```\n\n[local state management]: https://www.apollographql.com/docs/tutorial/local-state/#update-local-data\n[`typepolicies`]: https://www.apollographql.com/docs/react/caching/cache-configuration/#the-typepolicy-type\n[direct cache access]: ./packages/graphql#direct-cache-access-api\n"
        },
        {
          "name": "cloudbuild.yaml",
          "type": "blob",
          "size": 0.0830078125,
          "content": "steps:\n- name: 'gcr.io/cloud-builders/npm'\n  entrypoint: 'node'\n  args: ['--version']"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 0.7021484375,
          "content": "{\ndescription = \"Flutter 3.13.x\";\ninputs = {\n  nixpkgs.url = \"github:NixOS/nixpkgs/23.11\";\n  flake-utils.url = \"github:numtide/flake-utils\";\n};\noutputs = { self, nixpkgs, flake-utils }:\n  flake-utils.lib.eachDefaultSystem (system:\n    let\n      pkgs = import nixpkgs {\n        inherit system;\n        config = {\n          android_sdk.accept_license = true;\n          allowUnfree = true;\n        };\n      };\n      androidSdk = pkgs.androidenv.androidPkgs_9_0.androidsdk;\n    in\n    {\n      devShell =\n        with pkgs; mkShell rec {\n          ANDROID_SDK_ROOT = \"${androidSdk}/libexec/android-sdk\";\n          buildInputs = [\n            flutter\n            androidSdk\n            jdk17\n          ];\n        };\n    });\n}"
        },
        {
          "name": "melos.yaml",
          "type": "blob",
          "size": 1.6923828125,
          "content": "name: graphql_flutter\n\nide:\n  intellij: true\n\npackages:\n  - packages/**\n\nscripts:\n  flutter_analyze:\n    run: melos exec --depends-on=\"graphql\" -c 1 -- \"dart format --set-exit-if-changed . && flutter analyze . --fatal-infos\"\n    description: Run dart analyzer in a specific package.\n    select-package:\n      flutter: true\n\n  client_analyze:\n    run: melos exec -c 1 -- \"dart format --set-exit-if-changed . && dart analyze . --fatal-infos\"\n    description: Run dart analyzer in a specific package.\n    select-package:\n      flutter: false\n\n  flutter_test:\n    description: Run tests in a specific package.\n    run: melos exec --depends-on=\"graphql\" -- \"flutter test\"\n    select-package:\n      flutter: true\n      dir-exists:\n        - \"test/\"\n    env:\n      MELOS_TEST: true\n\n  client_test:\n    description: Run tests in a specific package.\n    run: melos exec -- \"dart pub get && dart pub run test\"\n    select-package:\n      flutter: false\n      dir-exists:\n        - \"test/\"\n    env:\n      MELOS_TEST: true\n\n  flutter_test_coverage:\n    description: Run tests in a specific package.\n    run: melos exec --depends-on=\"graphql\" -- \"flutter test --coverage\"\n    select-package:\n      flutter: true\n      dir-exists:\n        - \"test/\"\n    env:\n      MELOS_TEST: true\n\n  client_test_coverage:\n    description: Run tests in a specific package.\n    run: melos exec -- \"dart run test --coverage=\"coverage\" && dart run coverage:format_coverage --lcov --in=coverage --out=coverage.lcov --packages=.dart_tool/package_config.json --report-on=lib\"\n    select-package:\n      flutter: false\n      dir-exists:\n        - \"test/\"\n    env:\n      MELOS_TEST: true\n\n  format: dart format -o write .\n\ncommand:\n  bootstrap:\n    usePubspecOverrides: true\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}