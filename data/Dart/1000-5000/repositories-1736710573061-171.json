{
  "metadata": {
    "timestamp": 1736710573061,
    "page": 171,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dengyin2000/dynamic_widget",
      "stars": 1578,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1435546875,
          "content": ".DS_Store\n.dart_tool/\n*.lock\n\n.packages\n.pub/\n.idea/\n\nbuild/\nios/.generated/\nios/Flutter/Generated.xcconfig\nios/Runner/GeneratedPluginRegistrant.*\n"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 5391447fae6209bb21a89e6a5a6583cac1af9b4b\n  channel: stable\n\nproject_type: package\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.0166015625,
          "content": "## [0.0.1] - init release\n\n* initial release.\n\n## [0.0.2] - Add more flutter widgets\n\n* Add more flutter widgets\n\n## [0.0.3] - ListView & GridView add \"auto load more\" feature.\n\n* ListView & GridView add \"auto load more\" feature.\n\n## [1.0.2] - Add more widgets support.\n\n* Add more flutter widgets\n\n## [1.0.2] - Add click listener and more widgets support.\n\n* Add Click listener support\n* Add more flutter widgets\n\n## [1.0.3] - WidgetParser.parse add BuildContext param.\n\n* WidgetParser.parse add BuildContext param.\n\n## [1.0.4] - Support web application\n\n* Support web application\n\n## [1.0.5] - fix bugs\n\n* fix bugs\n\n## [1.0.6] - Add SafeArea and ListTile widgets.\n\n* Add SafeArea and ListTile widgets\n\n## [2.0.0] - Thanks [@mrjacobphillips](https://github.com/mrjacobphillips) for contributing \"SelectableText\"、\"Icon\" and \"DropCapText\" widgets.\n\n* Add \"SelectableText\"、\"Icon\" and \"DropCapText\" widgets.\n* Fix \"Text\" widget's maxLines default value.\n\n## [2.0.1] - increase parsing performance, and bugfix.\n\n* Use map to find WidgetParser, increase parsing performance.\n* fix ListView, GridView and PageView scrollDirection property.\n\n## [2.0.2] - bugfix.\n\n* Bugfix\n\n## [2.0.3] - Upgrade android projects, and migrate androidx\n\n* ## Upgrading pre 1.12 Android projects, https://github.com/flutter/flutter/wiki/Upgrading-pre-1.12-Android-projects\n* Migrate Androidx\n\n## [2.0.4] - Fixed font_awesome_flutter compile error.\n\n* Fixed font_awesome_flutter compile error. please see https://github.com/dengyin2000/dynamic_widget/issues/45\n\n## [3.0.0] - Add DynamicWidgetJsonExportor Widget\n\n* Add DynamicWidgetJsonExportor Widget, which supports exporting your flutter code to json string.\n\n## [3.0.1] - Fix bugs\n\n* Fix some export bugs.\n\n## [3.0.2] - Fix bugs\n\n* Some PR merged, fix some bugs.\n\n## [3.0.3] - Fix bugs\n\n* Fix some dart analysis problem.\n* Preview page can export current page's flutter code to json.\n\n## [3.0.4] - Fix bugs\n\n* Fix the bug which photo can't be display in pub.dev\n\n## [3.0.5] - Add Scaffold and AppBar Widget\n\n* Add Scaffold and AppBar Widget.\n* Fix bugs.\n\n## [3.0.6] - bug fixed\n\n* Fix the bug, https://github.com/dengyin2000/dynamic_widget/issues/64\n\n## [4.0.0-nullsafety.1] - null safety migration\n\n* null safety migration\n\n## [4.0.0] - null safety migration\n\n* null safety version released.\n\n## [4.0.1] - add ElevatedButtonParser\n\n* add ElevatedButtonParser.\n\n## [4.0.2] - add DividerWidget and RotatedBox widget parser\n\n* add DividerWidget and RotatedBox widget parser.\n\n## [4.0.3] - add TextButton Widget and Card widget parser\n\n* add TextButton widget parser, thanks ChangJoo Park(박창주)\n* add Card widget parser, thanks linpc\n\n## [4.0.4] - add SingleChildScrollView widget parser and bugfix\n\n* add add SingleChildScrollView widget parser\n* bugfix\n\n## [4.0.5] - pr #91，https://github.com/dengyin2000/dynamic_widget/issues/91\n\n* 4.0.4 error with Pie_chart_outlined / pie_chart_outline #91\n\n## [5.0.0] - fix compile error for flutter 3.16.5\n\n* fix compile error for flutter 3.16.5\n* remove RaiseButtonParser, use ElevatedButtonParser instead.\n\n\n\n\n\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.4208984375,
          "content": "[![Pub](https://img.shields.io/pub/v/dynamic_widget.svg?color=orange)](https://pub.dev/packages/dynamic_widget)&nbsp;\n<a href=\"https://github.com/Solido/awesome-flutter\">\n    <img alt=\"Awesome Flutter\" src=\"https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&style=flat-square\" />\n</a>\n# Flutter Dynamic Widget\n>A Backend-Driven UI toolkit, build your dynamic UI with json, and the json format is very similar with flutter widget code.\n\n**From 4.0.0-nullsafety.1 version, it supports null-safety.**\n\n**From 3.0.0 version, it supports exporting your flutter code to json code. please check [How to write the json code](#how-to-write-the-json-code)**\n\n**From 1.0.4 version, it supports flutter web application.**\n\n\n\n\n## Table of contents\n* [General info](#general-info)\n* [Screenshots](#screenshots)\n* [Install](#install)\n* [Get started](#get-started)\n* [How to implement a WidgetParser](#how-to-implement-a-widgetparser)\n* [How to add a click listener](#how-to-add-a-click-listener)\n* [How to write the json code](#how-to-write-the-json-code)\n* [Widget Documents](#widget-documents)\n* [Setup](#setup)\n* [Contact](#contact)\n\n## General info\n\n> I work for an e-commerce company. We need to build flexible pages. So we define a light UI protocol, and implement on Android and iOS. We can dynamic update App UIs by pushing a json file. With this ability, we can do some UI A/B testing without publishing App to app store. Flutter allows you to build beautiful native apps on iOS and Android from a single codebase, it can allow you to build web app later. Flutter's hot reload helps you quickly and easily experiment, build UIs, add features, and fix bugs faster. But it still build native app, the UIs can't be dynamic updated. If you want to modify the UIs, you need to publish the updated app to app store. With this project, you can build your UIs from a json string, which is the UI protocol. The json string is very similar with the Flutter widget dart code. All widget type and widget properties are the same.\n\n<img src=\"https://github.com/dengyin2000/dynamic_widget/raw/master/img/Sample.png\" width=\"800\">\n\nWidget type will be a type property, and widget's properties will be the json properties too. All properties and their values will be almost the same. You can checkout the following document.\n\n[Currently support flutter widgets and properties](WIDGETS.md)\n\n## Screenshots\n<img src=\"https://github.com/dengyin2000/dynamic_widget/raw/master/img/demo1.gif\" width=\"400\">\n\n## Install\n#### 1. Depend on it\nAdd this to your package's pubspec.yaml file:\n```\ndependencies:\n  dynamic_widget: ^3.0.3\n```\n\n#### 2. Install it\nYou can install packages from the command line:\n\nwith Flutter:\n```\n$ flutter packages get\n```\n\nAlternatively, your editor might support `flutter packages get`. Check the docs for your editor to learn more.\n\n#### 3. Import it\nNow in your Dart code, you can use:\n```dart\nimport 'package:dynamic_widget/dynamic_widget.dart';\n```\n\n## Get started\nYou should use `DynamicWidgetBuilder().build` method to covert a json string into flutter widget. It will be time-consuming. so you'd better using `FutureBuilder` to build the UI.\n\n```dart\nimport 'package:dynamic_widget/dynamic_widget.dart';\nclass PreviewPage extends StatelessWidget {\n  final String jsonString;\n\n  PreviewPage(this.jsonString);\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        // Here we take the value from the MyHomePage object that was created by\n        // the App.build method, and use it to set our appbar title.\n        title: Text(\"Preview\"),\n      ),\n      body: FutureBuilder<Widget>(\n        future: _buildWidget(context),\n        builder: (BuildContext context, AsyncSnapshot<Widget> snapshot) {\n          if (snapshot.hasError) {\n            print(snapshot.error);\n          }\n          return snapshot.hasData\n              ? SizedBox.expand(\n                  child: snapshot.data,\n                )\n              : Text(\"Loading...\");\n        },\n      ),\n    );\n  }\n\n  Future<Widget> _buildWidget(BuildContext context) async {\n    return DynamicWidgetBuilder.build(jsonString, context, new DefaultClickListener());\n  }\n}\n```\n## How to implement a WidgetParser\n1. You need to implement the `WidgetParser` abstract class.\n2. Add new created WidgetParser by `DynamicWidgetBuilder.addParser(WidgetParser parser)` method.\n\nThis is a RaisedButton widget parser.\n```dart\nimport 'package:dynamic_widget/dynamic_widget/utils.dart';\nimport 'package:dynamic_widget/dynamic_widget.dart';\nimport 'package:flutter/material.dart';\n\nclass RaisedButtonParser extends WidgetParser {\n  @override\n  String get widgetName => \"RaisedButton\";\n\n  @override\n  Widget parse(Map<String, dynamic> map, BuildContext buildContext, ClickListener listener) {\n    String clickEvent =\n        map.containsKey(\"click_event\") ? map['click_event'] : \"\";\n\n    var raisedButton = RaisedButton(\n      color: map.containsKey('color') ? parseHexColor(map['color']) : null,\n      disabledColor: map.containsKey('disabledColor')\n          ? parseHexColor(map['disabledColor'])\n          : null,\n      disabledElevation:\n          map.containsKey('disabledElevation') ? map['disabledElevation']?.toDouble() : 0.0,\n      disabledTextColor: map.containsKey('disabledTextColor')\n          ? parseHexColor(map['disabledTextColor'])\n          : null,\n      elevation: map.containsKey('elevation') ? map['elevation']?.toDouble() : 0.0,\n      padding: map.containsKey('padding')\n          ? parseEdgeInsetsGeometry(map['padding'])\n          : null,\n      splashColor: map.containsKey('splashColor')\n          ? parseHexColor(map['splashColor'])\n          : null,\n      textColor:\n          map.containsKey('textColor') ? parseHexColor(map['textColor']) : null,\n      child: DynamicWidgetBuilder.buildFromMap(map['child'], buildContext, listener),\n      onPressed: () {\n        listener.onClicked(clickEvent);\n      },\n    );\n\n    return raisedButton;\n  }\n}\n```\n\nAdd it to parsers list.\n```dart\nDynamicWidgetBuilder.addParser(RaisedButtonParser());\n```\n## How to add a click listener\nAdd \"click_event\" property to your widget json definition. for example:\n```dart\nvar raisedButton_json =\n'''\n{\n  \"type\": \"Container\",\n  \"alignment\": \"center\",\n  \"child\": {\n    \"type\": \"RaisedButton\",\n    \"color\": \"##FF00FF\",\n    \"padding\": \"8,8,8,8\",\n    \"textColor\": \"#00FF00\",\n    \"elevation\" : 8.0,\n    \"splashColor\" : \"#00FF00\",\n    \"click_event\" : \"route://productDetail?goods_id=123\",\n    \"child\" : {\n      \"type\": \"Text\",\n      \"data\": \"I am a button\"\n    }\n  }\n}\n```\n\nWe suggest you'd better to use an URI to define the event, as the exmaple, it's a event for going to a product detail page.\n\nThen, define a ClickListener\n```dart\nclass DefaultClickListener implements ClickListener{\n  @override\n  void onClicked(String event) {\n    print(\"Receive click event: \" + event);\n  }\n\n}\n```\n\nFinally, pass the listener to build method.\n```dart\n  Future<Widget> _buildWidget() async{\n\n    return DynamicWidgetBuilder.build(jsonString, buildContext, new DefaultClickListener());\n  }\n```\n\n## How to write the json code\nYou don't need to write the json code by hand, you can export your flutter code to json code efficiently with DynamicWidgetJsonExportor widget. You just need to wrap your flutter code with DynamicWidgetJsonExportor widget, then invoke its `exportJsonString()` method, look at following example, click the \"export\" button, it will find the DynamicWidgetJsonExportor widget, and export its child to json code efficiently.\n\n```dart\nclass _JSONExporterState extends State<JSONExporter> {\n  GlobalKey key = GlobalKey();\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        // Here we take the value from the MyHomePage object that was created by\n        // the App.build method, and use it to set our appbar title.\n        title: Text(\"export example\"),\n      ),\n      body: Builder(\n        builder: (context) => Column(\n          children: [\n            Expanded(\n              child: DynamicWidgetJsonExportor(\n                key: key,\n                child: Container(\n                  child: GridViewWidget(\n                      GridViewParams(\n                          mainAxisSpacing: 2.0,\n                          crossAxisSpacing: 2.0,\n                          crossAxisCount: 2,\n                          childAspectRatio: 1.6,\n                          padding: EdgeInsets.all(10.0),\n                          pageSize: 10,\n                          children: [\n                            ListTile(\n                              leading: Text(\"Leading text\"),\n                              title: Text(\"title\"),\n                              subtitle: Text(\"subtitle\"),\n                            ),\n                            ListTile(\n                              leading: Text(\"Leading text\"),\n                              title: Text(\"title\"),\n                              subtitle: Text(\"subtitle\"),\n                            )\n                          ]),\n                      context),\n                ),\n              ),\n            ),\n            RaisedButton(\n              child: Text(\"Export\"),\n              onPressed: () {\n                var exportor = key.currentWidget as DynamicWidgetJsonExportor;\n                var exportJsonString = exportor.exportJsonString();\n                Scaffold.of(context).showSnackBar(SnackBar(\n                    content: Text(\"json string was exported to editor page.\")));\n                Future.delayed(Duration(seconds: 3), (){\n                  Navigator.push(\n                      context,\n                      MaterialPageRoute(\n                          builder: (context) =>\n                              CodeEditorPage(exportJsonString)));\n                });\n              },\n            )\n          ],\n        ),\n      ),\n    );\n  }\n}\n```\nYou can use whatever your favorite IDE to build the UI, then use DynamicWidgetJsonExportor to export to json code. For detail, please check the Dynamic Widget Demo source code.\n\n<img src=\"./img/export.gif\" width=\"320\">\n\n\n## Widget Documents\nAlready completed widgets:\n* [Container](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#container-widget)\n* [Text](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#text-widget)\n* [TextSpan](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#textspan)\n* [TextStyle](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#textstyle)\n* [RaisedButton](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#raisedbutton-widget)\n* [ElevatedButton](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#elevatedbutton-widget)\n* [TextButton](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#textbutton-widget)\n* [Row](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#row-widget)\n* [Column](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#column-widget)\n* [AssetImage](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#assetimage-widget)\n* [NetworkImage](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#networkimage-widget)\n* [FileImage](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#fileimage-widget)\n* [Placeholder](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#placeholder-widget)\n* [GridView](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#gridview-widget)\n* [ListView](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#listview-widget)\n* [PageView](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#pageview-widget)\n* [Expanded](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#expanded-widget)\n* [Padding](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#padding-widget)\n* [Center](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#center-widget)\n* [Align](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#align-widget)\n* [AspectRatio](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#aspectratio-widget)\n* [FittedBox](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#fittedbox-widget)\n* [Baseline](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#baseline-widget)\n* [Stack](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#stack-widget)\n* [Positioned](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#positioned-widget)\n* [IndexedStack](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#indexedstack-widget)\n* [ExpandedSizedBox](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#expandedsizedbox-widget)\n* [SizedBox](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#sizedbox-widget)\n* [Opacity](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#opacity-widget)\n* [Wrap](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#wrap-widget)\n* [ClipRRect](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#cliprrect-widget)\n* [SafeArea](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#safearea-widget)\n* [SelectableText](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#selectabletext-widget)\n* [Icon](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#icon-widget)\n* [DropCapText](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#dropcaptext-widget)\n* [Scaffold](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#scaffold-widget)\n* [AppBar](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#appbar-widget)\n* [LimitedBox](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#limitedbox-widget)\n* [Offstage](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#offstage-widget)\n* [OverflowBox](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#overflowbox-widget)\n* [Divider](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#divider-widget)\n* [RotatedBox](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#rotatedbox-widget)\n* [SingleChildScrollView](https://github.com/dengyin2000/dynamic_widget/blob/master/WIDGETS.md#singlechildscrollview-widget)\n\nYou can view [Currently support widgets and properties](WIDGETS.md) here.\n\n## Setup\nCheckout this project and run demo.\n\n## Code Examples\nCheckout this project and run demo.\n\n## Contact\nCreated by [@deng.yin@gmail.com](https://www.jianshu.com/u/efa51344ce61) - feel free to contact me"
        },
        {
          "name": "WIDGETS.md",
          "type": "blob",
          "size": 100.93359375,
          "content": "# Dynamic Widget Manual\n\n> Dynamic Widget Manual\n\n## Table of contents\n\n- [Container Widget](#container-widget)\n- [Text Widget](#text-widget)\n- [TextSpan](#textspan)\n- [TextStyle](#textstyle)\n- [RaisedButton Widget](#raisedbutton-widget)\n- [ElevatedButton Widget](#elevatedbutton-widget)\n- [TextButton Widget](#textbutton-widget)\n- [Row Widget](#row-widget)\n- [Column Widget](#column-widget)\n- [AssetImage Widget](#assetimage-widget)\n- [NetworkImage Widget](#networkimage-widget)\n- [FileImage Widget](#fileimage-widget)\n- [Placeholder Widget](#placeholder-widget)\n- [GridView Widget](#gridview-widget)\n- [ListView Widget](#listview-widget)\n- [PageView Widget](#pageview-widget)\n- [Expanded Widget](#expanded-widget)\n- [Padding Widget](#padding-widget)\n- [Center Widget](#center-widget)\n- [Align Widget](#align-widget)\n- [AspectRatio Widget](#aspectratio-widget)\n- [FittedBox Widget](#fittedbox-widget)\n- [Baseline Widget](#baseline-widget)\n- [Stack Widget](#stack-widget)\n- [Positioned Widget](#positioned-widget)\n- [IndexedStack Widget](#indexedstack-widget)\n- [ExpandedSizedBox Widget](#expandedsizedbox-widget)\n- [SizedBox Widget](#sizedbox-widget)\n- [Opacity Widget](#opacity-widget)\n- [Wrap Widget](#wrap-widget)\n- [ClipRRect Widget](#cliprrect-widget)\n- [SafeArea Widget](#safearea-widget)\n- [ListTile Widget](#listtile-widget)\n- [SelectableText Widget](#selectabletext-widget)\n- [Icon Widget](#icon-widget)\n- [DropCapText Widget](#dropcaptext-widget)\n- [Scaffold Widget](#scaffold-widget)\n- [AppBar Widget](#appbar-widget)\n- [LimitedBox Widget](#limitedbox-widget)\n- [Offstage Widget](#offstage-widget)\n- [OverflowBox Widget](#overflowbox-widget)\n- [Divider Widget](#divider-widget)\n- [RotatedBox Widget](#rotatedbox-widget)\n- [SingleChildScrollView Widget](#singlechildscrollview-widget)\n\n## Container Widget\n\nContainer widget, here to see flutter [Container widget](https://docs.flutter.io/flutter/widgets/Container-class.html) definition.\nSupported json properties:\n\n| property    | definition                                                                                                 | type           | value                                                                                                                                                | sample                               |\n| ----------- | ---------------------------------------------------------------------------------------------------------- | -------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------ |\n| alignment   | Align the [child] within the container                                                                     | String         | One of the following string:<br>topLeft<br>topCenter<br>topRight<br>centerLeft<br>center<br>centerRight<br>bottomLeft<br>bottomCenter<br>bottomRight | \"topLeft\"                            |\n| margin      | Empty space to surround the [decoration] and [child].                                                      | String         | left,top,right,bottom                                                                                                                                | \"8,10,12,8\"                          |\n| padding     | Empty space to inscribe inside the [decoration]. The [child], if any, isplaced inside this padding.        | String         | left,top,right,bottom                                                                                                                                | \"8,10,12,8\"                          |\n| color       | Container background color                                                                                 | String         | \"#AARRGGBB\" or \"#RRGGBB\"                                                                                                                             | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| width       | Container width                                                                                            | double         |                                                                                                                                                      | 200                                  |\n| height      | Container height                                                                                           | double         |                                                                                                                                                      | 200                                  |\n| constraints | Container constraints                                                                                      | BoxConstraints | {\"minWidth\":100, \"maxWidth\": 100, \"minHeight\": 100, \"maxHeight\": 100}<br> 9999999999 would be the value of **double.infinity**                       | 200                                  |\n| child       | The [child] contained by the container.                                                                    | Widget         |                                                                                                                                                      |                                      |\n| click_event | Url route string, for example: \"route://productDetail?goods_id=123\" for navigating to product detail page. | String         |                                                                                                                                                      | \"route://productDetail?goods_id=123\" |\n\n## Text Widget\n\nText widget, here to see flutter [Text widget](https://docs.flutter.io/flutter/widgets/Text-class.html) definition. Supported json properties:\n\n| property        | definition                                                                                                                                                                  | type     | value                                                                                        | sample        |\n| --------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- | -------------------------------------------------------------------------------------------- | ------------- |\n| data            | The text to display                                                                                                                                                         | String   |                                                                                              | \"I am a text\" |\n| textAlign       | How the text should be aligned horizontally.                                                                                                                                | String   | One of the following string:<br>left (default)<br>right<br>center<br>justify<br>start<br>end | \"left\"        |\n| overflow        | How visual overflow should be handled.                                                                                                                                      | String   | One of the following string:<br>ellipsis (default)<br>clip<br>fade                           | \"ellipsis\"    |\n| maxLines        | An optional maximum number of lines for the text to span, wrapping if necessary. If the text exceeds the given number of lines, it will be truncated according to overflow. | int      |                                                                                              | 3             |\n| semanticsLabel  | An alternative semantics label for this text.                                                                                                                               | String   |                                                                                              |               |\n| softWrap        | Whether the text should break at soft line breaks.                                                                                                                          | bool     |                                                                                              | true          |\n| textDirection   | The directionality of the text.                                                                                                                                             | String   | One of the following string:<br>ltr (default) <br>rtl                                        | \"ltr\"         |\n| textScaleFactor | The number of font pixels for each logical pixel.                                                                                                                           | double   |                                                                                              |               |\n| textSpan        | The text to display as a TextSpan.                                                                                                                                          | TextSpan |                                                                                              |               |\n\n## TextSpan\n\nTextSpan, here to see flutter [TextSpan](https://docs.flutter.io/flutter/painting/TextSpan-class.html) definition. Supported json properties:\n\n| property   | definition                                                                                                                                              | type                   | value | sample                                 |\n| ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------- | ----- | -------------------------------------- |\n| recognizer | Url route string, for example: \"route://productDetail?goods_id=123\" for navigating to product detail page. Currently only supports TapGestureRecognizer | String                 |       | \"route://productDetail?goods_id=123\"   |\n| text       | The text contained in the span.                                                                                                                         | String                 |       | \"I am a text\"                          |\n| style      | The style to apply to the text and the children.                                                                                                        | TextStyle              |       | {\"color\": \"#00FFFF\", \"fontSize\": 26.0} |\n| children   | Additional spans to include as children.                                                                                                                | List&#60;TextSpan&#62; |       |                                        |\n\n## TextStyle\n\nTextStyle, here to see flutter [TextStyle](https://docs.flutter.io/flutter/painting/TextStyle-class.html) definition. Supported json properties:\n\n| property   | definition                                                                                                                                                                                                                                                                       | type   | value                                                                                                                                   | sample                   |\n| ---------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------ | --------------------------------------------------------------------------------------------------------------------------------------- | ------------------------ |\n| color      | The color to use when painting the text.                                                                                                                                                                                                                                         | String | \"#AARRGGBB\" or \"#RRGGBB\"                                                                                                                | \"#FF00FF\"<br>\"#00FF00FF\" |\n| debugLabel | A human-readable description of this text style.                                                                                                                                                                                                                                 | String |                                                                                                                                         |                          |\n| decoration | The name of the decoration.                                                                                                                                                                                                                                                      | String | One of the following string: none (default)<br>lineThrough<br>overline<br>underline                                                     | \"underline\"              |\n| fontFamily | The name of the font to use when painting the text (e.g., Roboto). If the font is defined in a package, this will be prefixed with 'packages/package_name/' (e.g. 'packages/cool_fonts/Roboto'). The prefixing is done by the constructor when the package argument is provided. | String |                                                                                                                                         |                          |\n| fontSize   | The size of glyphs (in logical pixels) to use when painting the text.                                                                                                                                                                                                            | double |                                                                                                                                         |                          |\n| fontStyle  | The typeface variant to use when drawing the letters (e.g., italics).                                                                                                                                                                                                            | String | One of the following string: italic (default)<br> normal                                                                                | \"italic\"                 |\n| fontWeight | The typeface thickness to use when painting the text (e.g., bold).                                                                                                                                                                                                               | String | One of the following string: w100<br> w200<br> w300<br> w400<br> w500<br> w600<br> w700<br> w800<br> w900<br> normal (default)<br> bold | \"bold\"                   |\n\n## RaisedButton Widget\n\nRaisedButton widget, here to see flutter [RaisedButton widget](https://docs.flutter.io/flutter/widgets/Text-class.html) definition. Supported json properties:\n\n| property          | definition                                                                                                    | type   | value                    | sample                               |\n| ----------------- | ------------------------------------------------------------------------------------------------------------- | ------ | ------------------------ | ------------------------------------ |\n| color             | The button's fill color, displayed by its Material, while it is in its default (unpressed, enabled) state.    | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| disabledColor     | The fill color of the button when the button is disabled.                                                     | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| disabledElevation | The elevation for the button's Material when the button is not enabled.                                       | double |                          |                                      |\n| disabledTextColor | The color to use for this button's text when the button is disabled.                                          | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| elevation         | The z-coordinate at which to place this button. This controls the size of the shadow below the raised button. | double |                          |                                      |\n| padding           | The internal padding for the button's child.                                                                  | String | left,top,right,bottom    | \"8,10,12,8\"                          |\n| splashColor       | The splash color of the button's InkWell.                                                                     | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| textColor         | The color to use for this button's text.                                                                      | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| child             | The button's label.                                                                                           | Widget |                          |                                      |\n| click_event       | Url route string, for example: \"route://productDetail?goods_id=123\" for navigating to product detail page.    | String |                          | \"route://productDetail?goods_id=123\" |\n\n## ElevatedButton Widget\n\nElevatedButton widget, here to see flutter [ElevatedButton widget](https://api.flutter.dev/flutter/material/ElevatedButton-class.html) definition. Supported json properties:\n\n| property          | definition                                                                                                    | type   | value                    | sample                               |\n| ----------------- | ------------------------------------------------------------------------------------------------------------- | ------ | ------------------------ | ------------------------------------ |\n| foregroundColor             | The color for the button's Text and Icon widget descendants.    | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| backgroundColor     | The button's background fill color.                                                   | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| overlayColor     | The highlight color that's typically used to indicate that the button is focused, hovered, or pressed.                                                | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| shadowColor     | The shadow color of the button's Material.                                                | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| elevation         | The z-coordinate at which to place this button. This controls the size of the shadow below the raised button. | double |                          |                                      |\n| padding           | The internal padding for the button's child.                                                                  | String | left,top,right,bottom    | \"8,10,12,8\"                          |\n| textStyle               | The style to apply to the text and the children.                                                                                                                            | TextStyle |                                                                                                                                                                                                                                                                                            | {\"color\": \"#00FFFF\", \"fontSize\": 26.0} |\n| child             | The button's label.                                                                                           | Widget |                          |                                      |\n| alignment            | How to align the image within its bounds.                                                                           | String | enum values, please see enum Alignment, default value is Alignment.center.       | \"center\"                             |\n| click_event       | Url route string, for example: \"route://productDetail?goods_id=123\" for navigating to product detail page.    | String |                          | \"route://productDetail?goods_id=123\" |\n\n## TextButton Widget\n\nTextButton widget, here to see flutter [TextButton widget](https://api.flutter.dev/flutter/material/TextButton-class.html) definition. Supported json properties:\n\n| property          | definition                                                                                                    | type   | value                    | sample                               |\n| ----------------- | ------------------------------------------------------------------------------------------------------------- | ------ | ------------------------ | ------------------------------------ |\n| foregroundColor             | The color for the button's Text and Icon widget descendants.    | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| backgroundColor     | The button's background fill color.                                                   | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| overlayColor     | The highlight color that's typically used to indicate that the button is focused, hovered, or pressed.                                                | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| shadowColor     | The shadow color of the button's Material.                                                | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| elevation         | The z-coordinate at which to place this button. This controls the size of the shadow below the raised button. | double |                          |                                      |\n| padding           | The internal padding for the button's child.                                                                  | String | left,top,right,bottom    | \"8,10,12,8\"                          |\n| textStyle               | The style to apply to the text and the children.                                                                                                                            | TextStyle |                                                                                                                                                                                                                                                                                            | {\"color\": \"#00FFFF\", \"fontSize\": 26.0} |\n| child             | The button's label.                                                                                           | Widget |                          |                                      |\n| alignment            | How to align the image within its bounds.                                                                           | String | enum values, please see enum Alignment, default value is Alignment.center.       | \"center\"                             |\n| click_event       | Url route string, for example: \"route://productDetail?goods_id=123\" for navigating to product detail page.    | String |                          | \"route://productDetail?goods_id=123\" |\n\n## Row Widget\n\nRow widget, here to see flutter [Row widget](https://docs.flutter.io/flutter/widgets/Row-class.html) definition. Supported json properties:\n\n| property           | definition                                                                                                            | type                   | value                                                                                                          | sample |\n| ------------------ | --------------------------------------------------------------------------------------------------------------------- | ---------------------- | -------------------------------------------------------------------------------------------------------------- | ------ |\n| crossAxisAlignment | How the children should be placed along the cross axis.                                                               | String                 | One of the following string:<br>center (default)<br>start<br>end<br>stretch<br>baseline                        |        |\n| mainAxisAlignment  | How the children should be placed along the main axis.                                                                | String                 | One of the following string:<br>start (default)<br>end<br>center<br>spaceBetween<br>spaceAround<br>spaceEvenly |        |\n| mainAxisSize       | How much space should be occupied in the main axis.                                                                   | String                 | One of the following string:<br>max (default)<br>min                                                           |        |\n| textBaseline       | If aligning items according to their baseline, which baseline to use.                                                 | String                 | One of the following string:<br>ideographic (default)<br>alphabetic                                            |        |\n| textDirection      | Determines the order to lay children out horizontally and how to interpret start and end in the horizontal direction. | String                 | One of the following string:<br>ltr (default)<br>rtl                                                           |        |\n| verticalDirection  | Determines the order to lay children out vertically and how to interpret start and end in the vertical direction.     | String                 | One of the following string:<br>down (default)<br>up                                                           |        |\n| children           | The widgets below this widget in the tree.                                                                            | List&#60;TextSpan&#62; |                                                                                                                |        |\n\n## Column Widget\n\nColumn widget, here to see flutter [Column widget](https://docs.flutter.io/flutter/widgets/Column-class.html) definition. Supported json properties:\n\n| property           | definition                                                                                                            | type                   | value                                                                                                          | sample |\n| ------------------ | --------------------------------------------------------------------------------------------------------------------- | ---------------------- | -------------------------------------------------------------------------------------------------------------- | ------ |\n| crossAxisAlignment | How the children should be placed along the cross axis.                                                               | String                 | One of the following string:<br>center (default)<br>start<br>end<br>stretch<br>baseline                        |        |\n| mainAxisAlignment  | How the children should be placed along the main axis.                                                                | String                 | One of the following string:<br>start (default)<br>end<br>center<br>spaceBetween<br>spaceAround<br>spaceEvenly |        |\n| mainAxisSize       | How much space should be occupied in the main axis.                                                                   | String                 | One of the following string:<br>max (default)<br>min                                                           |        |\n| textBaseline       | If aligning items according to their baseline, which baseline to use.                                                 | String                 | One of the following string:<br>ideographic (default)<br>alphabetic                                            |        |\n| textDirection      | Determines the order to lay children out horizontally and how to interpret start and end in the horizontal direction. | String                 | One of the following string:<br>ltr (default)<br>rtl                                                           |        |\n| verticalDirection  | Determines the order to lay children out vertically and how to interpret start and end in the vertical direction.     | String                 | One of the following string:<br>down (default)<br>up                                                           |        |\n| children           | The widgets below this widget in the tree.                                                                            | List&#60;TextSpan&#62; |                                                                                                                |        |\n\n## AssetImage Widget\n\nAssetImage widget, here to see flutter [Asset Image widget](https://docs.flutter.io/flutter/widgets/Image-class.html) definition. Supported json properties:\n\n| property             | definition                                                                                                          | type   | value                                                                            | sample                               |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------- | ------ | -------------------------------------------------------------------------------- | ------------------------------------ |\n| name                 | The picture asset name                                                                                              | String |                                                                                  | 'images/cat.png'                     |\n| semanticLabel        | A Semantic description of the image.                                                                                | String |                                                                                  |                                      |\n| excludeFromSemantics | Whether to exclude this image from semantics.                                                                       | bool   |                                                                                  |                                      |\n| scale                |                                                                                                                     | double |                                                                                  |                                      |\n| width                | If non-null, require the image to have this width.                                                                  | double |                                                                                  |                                      |\n| height               | If non-null, require the image to have this height.                                                                 | double |                                                                                  |                                      |\n| color                | If non-null, this color is blended with each image pixel using colorBlendMode.                                      | String | \"#AARRGGBB\" or \"#RRGGBB\"                                                         | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| blendMode            | Used to combine color with this image.                                                                              | String | enum values, please see enum BlendMode                                           | 'srcIn'                              |\n| boxFit               | How to inscribe the image into the space allocated during layout.                                                   | String | enum values, please see enum BoxFit                                              | 'none'                               |\n| alignment            | How to align the image within its bounds.                                                                           | String | enum values, please see enum Alignment, default value is Alignment.center.       | \"center\"                             |\n| repeat               | How to paint any portions of the layout bounds not covered by the image.                                            | String | enum values, please see enum ImageRepeat, default value is ImageRepeat.noRepeat. | 'noRepeat'                           |\n| centerSlice          | The center slice for a nine-patch image.                                                                            | String | left,top,right,bottom                                                            | \"8,10,12,8\"                          |\n| matchTextDirection   | Whether to paint the image in the direction of the TextDirection.                                                   | bool   |                                                                                  |                                      |\n| gaplessPlayback      | Whether to continue showing the old image (true), or briefly show nothing (false), when the image provider changes. | bool   |                                                                                  |                                      |\n| filterQuality        | Used to set the FilterQuality of the image.                                                                         | String | enum values, please see enum FilterQuality, default value is FilterQuality.low.  | \"low\"                                |\n| click_event          | Url route string, for example: \"route://productDetail?goods_id=123\" for navigating to product detail page.          | String |                                                                                  | \"route://productDetail?goods_id=123\" |\n\n## NetworkImage Widget\n\nNetworkImage widget, here to see flutter [Network Image widget](https://docs.flutter.io/flutter/widgets/Image-class.html) definition. Supported json properties:\n\n| property             | definition                                                                                                          | type   | value                                                                            | sample                               |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------- | ------ | -------------------------------------------------------------------------------- | ------------------------------------ |\n| src                  | The picture url                                                                                                     | String |                                                                                  | 'http://www.google.com/logo.png'     |\n| semanticLabel        | A Semantic description of the image.                                                                                | String |                                                                                  |                                      |\n| excludeFromSemantics | Whether to exclude this image from semantics.                                                                       | bool   |                                                                                  |                                      |\n| scale                |                                                                                                                     | double |                                                                                  |                                      |\n| width                | If non-null, require the image to have this width.                                                                  | double |                                                                                  |                                      |\n| height               | If non-null, require the image to have this height.                                                                 | double |                                                                                  |                                      |\n| color                | If non-null, this color is blended with each image pixel using colorBlendMode.                                      | String | \"#AARRGGBB\" or \"#RRGGBB\"                                                         | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| blendMode            | Used to combine color with this image.                                                                              | String | enum values, please see enum BlendMode                                           | 'srcIn'                              |\n| boxFit               | How to inscribe the image into the space allocated during layout.                                                   | String | enum values, please see enum BoxFit                                              | 'none'                               |\n| alignment            | How to align the image within its bounds.                                                                           | String | enum values, please see enum Alignment, default value is Alignment.center.       | \"center\"                             |\n| repeat               | How to paint any portions of the layout bounds not covered by the image.                                            | String | enum values, please see enum ImageRepeat, default value is ImageRepeat.noRepeat. | 'noRepeat'                           |\n| centerSlice          | The center slice for a nine-patch image.                                                                            | String | left,top,right,bottom                                                            | \"8,10,12,8\"                          |\n| matchTextDirection   | Whether to paint the image in the direction of the TextDirection.                                                   | bool   |                                                                                  |                                      |\n| gaplessPlayback      | Whether to continue showing the old image (true), or briefly show nothing (false), when the image provider changes. | bool   |                                                                                  |                                      |\n| filterQuality        | Used to set the FilterQuality of the image.                                                                         | String | enum values, please see enum FilterQuality, default value is FilterQuality.low.  | \"low\"                                |\n| click_event          | Url route string, for example: \"route://productDetail?goods_id=123\" for navigating to product detail page.          | String |                                                                                  | \"route://productDetail?goods_id=123\" |\n\n## FileImage Widget\n\nFileImage widget, here to see flutter [File Image widget](https://docs.flutter.io/flutter/widgets/Image-class.html) definition. Supported json properties:\n\n| property             | definition                                                                                                          | type   | value                                                                            | sample                               |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------- | ------ | -------------------------------------------------------------------------------- | ------------------------------------ |\n| filePath             | The picture file path                                                                                               | String |                                                                                  | '/sdcard/logo.png'                   |\n| semanticLabel        | A Semantic description of the image.                                                                                | String |                                                                                  |                                      |\n| excludeFromSemantics | Whether to exclude this image from semantics.                                                                       | bool   |                                                                                  |                                      |\n| scale                |                                                                                                                     | double |                                                                                  |                                      |\n| width                | If non-null, require the image to have this width.                                                                  | double |                                                                                  |                                      |\n| height               | If non-null, require the image to have this height.                                                                 | double |                                                                                  |                                      |\n| color                | If non-null, this color is blended with each image pixel using colorBlendMode.                                      | String | \"#AARRGGBB\" or \"#RRGGBB\"                                                         | \"#FF00FF\"<br>\"#00FF00FF\"             |\n| blendMode            | Used to combine color with this image.                                                                              | String | enum values, please see enum BlendMode                                           | 'srcIn'                              |\n| boxFit               | How to inscribe the image into the space allocated during layout.                                                   | String | enum values, please see enum BoxFit                                              | 'none'                               |\n| alignment            | How to align the image within its bounds.                                                                           | String | enum values, please see enum Alignment, default value is Alignment.center.       | \"center\"                             |\n| repeat               | How to paint any portions of the layout bounds not covered by the image.                                            | String | enum values, please see enum ImageRepeat, default value is ImageRepeat.noRepeat. | 'noRepeat'                           |\n| centerSlice          | The center slice for a nine-patch image.                                                                            | String | left,top,right,bottom                                                            | \"8,10,12,8\"                          |\n| matchTextDirection   | Whether to paint the image in the direction of the TextDirection.                                                   | bool   |                                                                                  |                                      |\n| gaplessPlayback      | Whether to continue showing the old image (true), or briefly show nothing (false), when the image provider changes. | bool   |                                                                                  |                                      |\n| filterQuality        | Used to set the FilterQuality of the image.                                                                         | String | enum values, please see enum FilterQuality, default value is FilterQuality.low.  | \"low\"                                |\n| click_event          | Url route string, for example: \"route://productDetail?goods_id=123\" for navigating to product detail page.          | String |                                                                                  | \"route://productDetail?goods_id=123\" |\n\n## Placeholder Widget\n\nPlaceholder widget, here to see flutter [Placeholder widget](https://docs.flutter.io/flutter/widgets/Placeholder-class.html) definition. Supported json properties:\n\n| property       | definition                                                                         | type   | value                    | sample                   |\n| -------------- | ---------------------------------------------------------------------------------- | ------ | ------------------------ | ------------------------ |\n| color          | The color to draw the placeholder box.                                             | String | \"#AARRGGBB\" or \"#RRGGBB\" | \"#FF00FF\"<br>\"#00FF00FF\" |\n| strokeWidth    | The width of the lines in the placeholder box.                                     | double |                          |                          |\n| fallbackWidth  | The width to use when the placeholder is in a situation with an unbounded width.   | double |                          |                          |\n| fallbackHeight | The height to use when the placeholder is in a situation with an unbounded height. | double |                          |                          |\n\n## GridView Widget\n\nGridView widget, here to see flutter [GridView widget](https://docs.flutter.io/flutter/widgets/GridView-class.html) definition. Supported json properties:\n\n| property         | definition                                                                                                                        | type                 | value                                                              | sample                               |\n| ---------------- | --------------------------------------------------------------------------------------------------------------------------------- | -------------------- | ------------------------------------------------------------------ | ------------------------------------ |\n| crossAxisCount   | a fixed number of tiles in the cross axis.                                                                                        | int                  |                                                                    |                                      |\n| scrollDirection  | The axis along which the scroll view scrolls.                                                                                     | String               | enum values, please see enum Axis, default value is Axis.vertical. | \"vertical\"                           |\n| reverse          | Whether the scroll view scrolls in the reading direction.                                                                         | bool                 | default value is false                                             |                                      |\n| shrinkWrap       | Whether the extent of the scroll view in the scrollDirection should be determined by the contents being viewed.                   | bool                 | default value is false                                             |                                      |\n| cacheExtent      | The viewport has an area before and after the visible area to cache items that are about to become visible when the user scrolls. | double               | default value is 0.0                                               |                                      |\n| padding          | The amount of space by which to inset the children.                                                                               | String               | left,top,right,bottom                                              | \"8,10,12,8\"                          |\n| mainAxisSpacing  | The number of logical pixels between each child along the main axis.                                                              | double               |                                                                    |                                      |\n| crossAxisSpacing | The number of logical pixels between each child along the cross axis.                                                             | double               |                                                                    |                                      |\n| childAspectRatio | The ratio of the cross-axis to the main-axis extent of each child.                                                                | double               |                                                                    |                                      |\n| children         | The widgets below this widget in the tree.                                                                                        | List&#60;Widget&#62; |                                                                    |                                      |\n| pageSize         | ListView load more item count for next page                                                                                       | int                  |                                                                    | this will be append to load more url |\n| loadMoreUrl      | When listview scroll to bottom, it will do the request. The response of this url should be a json array of widget                 | String               |                                                                    |                                      |\n| isDemo           | used in the demo, if true, will do the fake request                                                                               | bool                 |                                                                    | the default value is false           |\n\n## ListView Widget\n\nListView widget, here to see flutter [ListView widget](https://docs.flutter.io/flutter/widgets/ListView-class.html) definition. Supported json properties:\n\n| property        | definition                                                                                                                        | type                 | value                                                              | sample                               |\n| --------------- | --------------------------------------------------------------------------------------------------------------------------------- | -------------------- | ------------------------------------------------------------------ | ------------------------------------ |\n| scrollDirection | The axis along which the scroll view scrolls.                                                                                     | String               | enum values, please see enum Axis, default value is Axis.vertical. | \"vertical\"                           |\n| reverse         | Whether the scroll view scrolls in the reading direction.                                                                         | bool                 | default value is false                                             |                                      |\n| shrinkWrap      | Whether the extent of the scroll view in the scrollDirection should be determined by the contents being viewed.                   | bool                 | default value is false                                             |                                      |\n| cacheExtent     | The viewport has an area before and after the visible area to cache items that are about to become visible when the user scrolls. | double               | default value is 0.0                                               |                                      |\n| padding         | The amount of space by which to inset the children.                                                                               | String               | left,top,right,bottom                                              | \"8,10,12,8\"                          |\n| itemExtent      | If non-null, forces the children to have the given extent in the scroll direction.                                                | double               |                                                                    |                                      |\n| pageSize        | ListView load more item count for next page                                                                                       | int                  |                                                                    | this will be append to load more url |\n| loadMoreUrl     | When listview scroll to bottom, it will do the request. The response of this url should be a json array of widget                 | String               |                                                                    |                                      |\n| isDemo          | used in the demo, if true, will do the fake request                                                                               | bool                 |                                                                    | the default value is false           |\n| children        | The widgets below this widget in the tree.                                                                                        | List&#60;Widget&#62; |                                                                    |                                      |\n\n## PageView Widget\n\nPageView widget, here to see flutter [PageView widget](https://docs.flutter.io/flutter/widgets/PageView-class.html) definition. Supported json properties:\n\n| property        | definition                                                                | type                 | value                                                              | sample     |\n| --------------- | ------------------------------------------------------------------------- | -------------------- | ------------------------------------------------------------------ | ---------- |\n| scrollDirection | The axis along which the scroll view scrolls.                             | String               | enum values, please see enum Axis, default value is Axis.vertical. | \"vertical\" |\n| reverse         | Whether the scroll view scrolls in the reading direction.                 | bool                 | default value is false                                             |            |\n| pageSnapping    | Set to false to disable page snapping, useful for custom scroll behavior. | bool                 | default value is true                                              |            |\n| children        | The widgets below this widget in the tree.                                | List&#60;Widget&#62; |                                                                    |            |\n\n## Expanded Widget\n\nExpanded widget, here to see flutter [Expanded widget](https://docs.flutter.io/flutter/widgets/Expanded-class.html) definition. Supported json properties:\n\n| property | definition                            | type   | value              | sample |\n| -------- | ------------------------------------- | ------ | ------------------ | ------ |\n| child    | child widget                          | Widget |                    |        |\n| flex     | The flex factor to use for this child | int    | default value is 1 |        |\n\n## Padding Widget\n\nPadding widget, here to see flutter [Padding widget](https://docs.flutter.io/flutter/widgets/Padding-class.html) definition. Supported json properties:\n\n| property | definition                                       | type   | value                 | sample      |\n| -------- | ------------------------------------------------ | ------ | --------------------- | ----------- |\n| child    | child widget                                     | Widget |                       |             |\n| padding  | The amount of space by which to inset the child. | String | left,top,right,bottom | \"8,10,12,8\" |\n\n## Center Widget\n\nCenter widget, here to see flutter [Center widget](https://docs.flutter.io/flutter/widgets/Center-class.html) definition. Supported json properties:\n\n| property     | definition                                                                    | type   | value | sample |\n| ------------ | ----------------------------------------------------------------------------- | ------ | ----- | ------ |\n| child        | child widget                                                                  | Widget |       |        |\n| widthFactor  | If non-null, sets its width to the child's width multiplied by this factor.   | double |       |        |\n| heightFactor | If non-null, sets its height to the child's height multiplied by this factor. | double |       |        |\n\n## Align Widget\n\nAlign widget, here to see flutter [Align widget](https://docs.flutter.io/flutter/widgets/Align-class.html) definition. Supported json properties:\n\n| property     | definition                                                                    | type   | value                                                                      | sample |\n| ------------ | ----------------------------------------------------------------------------- | ------ | -------------------------------------------------------------------------- | ------ |\n| alignment    | How to align the child.                                                       | String | enum values, please see enum Alignment, default value is Alignment.center. |        |\n| child        | child widget                                                                  | Widget |                                                                            |        |\n| widthFactor  | If non-null, sets its width to the child's width multiplied by this factor.   | double |                                                                            |        |\n| heightFactor | If non-null, sets its height to the child's height multiplied by this factor. | double |                                                                            |        |\n\n## AspectRatio Widget\n\nAspectRatio widget, here to see flutter [AspectRatio widget](https://docs.flutter.io/flutter/widgets/AspectRatio-class.html) definition. Supported json properties:\n\n| property    | definition                          | type   | value | sample |\n| ----------- | ----------------------------------- | ------ | ----- | ------ |\n| aspectRatio | The aspect ratio to attempt to use. | double |       |        |\n| child       | child widget                        | Widget |       |        |\n\n## FittedBox Widget\n\nFittedBox widget, here to see flutter [FittedBox widget](https://docs.flutter.io/flutter/widgets/FittedBox-class.html) definition. Supported json properties:\n\n| property  | definition                                                        | type   | value                                                                      | sample |\n| --------- | ----------------------------------------------------------------- | ------ | -------------------------------------------------------------------------- | ------ |\n| alignment | How to align the child within its parent's bounds.                | String | enum values, please see enum Alignment, default value is Alignment.center. |        |\n| fit       | How to inscribe the child into the space allocated during layout. | String | enum values, please see enum BoxFit, default value is BoxFit.contain.      |        |\n| child     | child widget                                                      | Widget |                                                                            |        |\n\n## Baseline Widget\n\nBaseline widget, here to see flutter [Baseline widget](https://docs.flutter.io/flutter/widgets/Baseline-class.html) definition. Supported json properties:\n\n| property     | definition                                                                                       | type   | value                                                                                 | sample |\n| ------------ | ------------------------------------------------------------------------------------------------ | ------ | ------------------------------------------------------------------------------------- | ------ |\n| baseline     | The number of logical pixels from the top of this box at which to position the child's baseline. | double |                                                                                       |        |\n| baselineType | The type of baseline to use for positioning the child.                                           | String | enum values, please see enum TextBaseline, default value is TextBaseline.ideographic. |        |\n| child        | child widget                                                                                     | Widget |                                                                                       |        |\n\n## Stack Widget\n\nStack widget, here to see flutter [Stack widget](https://docs.flutter.io/flutter/widgets/Stack-class.html) definition. Supported json properties:\n\n| property      | definition                                                                      | type                 | value                                                                      | sample   |\n| ------------- | ------------------------------------------------------------------------------- | -------------------- | -------------------------------------------------------------------------- | -------- |\n| alignment     | How to align the non-positioned and partially-positioned children in the stack. | String               | enum values, please see enum Alignment, default value is Alignment.center. | \"center\" |\n| fit           | How to size the non-positioned children in the stack.                           | String               | enum values, please see enum StackFit, default value is StackFit.loose.    |          |\n| clipBehavior  | The content will be clipped (or not) according to this option.                  | String               | enum values, please see enum Clip, default value is Clip.hardEdge.         |          |\n| textDirection | The text direction with which to resolve alignment.                             | String               | enum values, please see enum TextDirection                                 |          |\n| children      | list of Widget                                                                  | List&#60;Widget&#62; |                                                                            |          |\n\n## Positioned Widget\n\nPositioned widget, here to see flutter [Positioned widget](https://docs.flutter.io/flutter/widgets/Positioned-class.html) definition. Supported json properties:\n\n| property | definition                                                                       | type   | value | sample |\n| -------- | -------------------------------------------------------------------------------- | ------ | ----- | ------ |\n| bottom   | The distance that the child's bottom edge is inset from the bottom of the stack. | double |       |        |\n| height   | The child's height.                                                              | double |       |        |\n| left     | The distance that the child's left edge is inset from the left of the stack.     | double |       |        |\n| right    | The distance that the child's right edge is inset from the right of the stack.   | double |       |        |\n| top      | The distance that the child's top edge is inset from the top of the stack.       | double |       |        |\n| width    | The child's width.                                                               | double |       |        |\n| child    | The widget below this widget in the tree.                                        | Widget |       |        |\n\n## IndexedStack Widget\n\nIndexedStack widget, here to see flutter [IndexedStack widget](https://docs.flutter.io/flutter/widgets/IndexedStack-class.html) definition. Supported json properties:\n\n| property      | definition                                                                      | type                 | value                                                                      | sample   |\n| ------------- | ------------------------------------------------------------------------------- | -------------------- | -------------------------------------------------------------------------- | -------- |\n| index         | The index of the child to show.                                                 | int                  |                                                                            |          |\n| alignment     | How to align the non-positioned and partially-positioned children in the stack. | String               | enum values, please see enum Alignment, default value is Alignment.center. | \"center\" |\n| textDirection | The text direction with which to resolve alignment.                             | String               | enum values, please see enum TextDirection                                 |          |\n| children      | list of Widget                                                                  | List&#60;Widget&#62; |                                                                            |          |\n\n## ExpandedSizedBox Widget\n\nExpandedSizedBox widget, here to see flutter [ExpandedSizedBox widget](https://docs.flutter.io/flutter/widgets/SizedBox-class.html) definition. It's a shortcut of **SizedBox.expand**. Supported json properties:\n\n| property | definition                                | type   | value | sample |\n| -------- | ----------------------------------------- | ------ | ----- | ------ |\n| child    | The widget below this widget in the tree. | Widget |       |        |\n\n## SizedBox Widget\n\nSizedBox widget, here to see flutter [SizedBox widget](https://docs.flutter.io/flutter/widgets/SizedBox-class.html) definition. Supported json properties:\n\n| property | definition                                                   | type   | value | sample |\n| -------- | ------------------------------------------------------------ | ------ | ----- | ------ |\n| width    | If non-null, requires the child to have exactly this width.  | double |       |        |\n| height   | If non-null, requires the child to have exactly this height. | double |       |        |\n| child    | The widget below this widget in the tree.                    | Widget |       |        |\n\n## Opacity Widget\n\nOpacity widget, here to see flutter [Opacity widget](https://docs.flutter.io/flutter/widgets/Opacity-class.html) definition. Supported json properties:\n\n| property               | definition                                                           | type   | value | sample |\n| ---------------------- | -------------------------------------------------------------------- | ------ | ----- | ------ |\n| alwaysIncludeSemantics | Whether the semantic information of the children is always included. | bool   |       |        |\n| opacity                | The fraction to scale the child's alpha value.                       | double |       |        |\n| child                  | The widget below this widget in the tree.                            | Widget |       |        |\n\n## Wrap Widget\n\nWrap widget, here to see flutter [Wrap widget](https://docs.flutter.io/flutter/widgets/Wrap-class.html) definition. Supported json properties:\n\n| property           | definition                                                                                                            | type                 | value                                                                                       | sample       |\n| ------------------ | --------------------------------------------------------------------------------------------------------------------- | -------------------- | ------------------------------------------------------------------------------------------- | ------------ |\n| alignment          | How the children within a run should be placed in the main axis.                                                      | String               | enum values, please see enum WrapAlignment, default value is WrapAlignment.start.           | \"start\"      |\n| crossAxisAlignment | How the children within a run should be aligned relative to each other in the cross axis.                             | String               | enum values, please see enum WrapCrossAlignment, default value is WrapCrossAlignment.start. | \"start\"      |\n| direction          | The direction to use as the main axis.                                                                                | String               | enum values, please see enum Axis, default value is Axis.horizontal.                        | \"horizontal\" |\n| runAlignment       | How the runs themselves should be placed in the cross axis.                                                           | String               | enum values, please see enum WrapAlignment, default value is WrapAlignment.start.           | \"start\"      |\n| runSpacing         | The fraction to scale the child's alpha value.                                                                        | double               |                                                                                             | 0.0          |\n| spacing            | How much space to place between children in a run in the main axis.                                                   | double               |                                                                                             | 0.0          |\n| textDirection      | Determines the order to lay children out horizontally and how to interpret start and end in the horizontal direction. | String               | enum values, please see enum TextDirection, default value is null.                          | null         |\n| verticalDirection  | Determines the order to lay children out vertically and how to interpret start and end in the vertical direction.     | String               | enum values, please see enum VerticalDirection, default value is VerticalDirection.down.    | \"down\"       |\n| children           | The widgets below this widget in the tree.                                                                            | List&#60;Widget&#62; |                                                                                             |              |\n\n## ClipRRect Widget\n\nClipRRect, here to see flutter [ClipRRect](https://api.flutter.dev/flutter/widgets/ClipRRect-class.html) definition. Supported json properties:\n\n| property     | definition                                    | type   | value                                                          | sample                                    |\n| ------------ | --------------------------------------------- | ------ | -------------------------------------------------------------- | ----------------------------------------- |\n| borderRadius | The border radius of the rounded corners.     | String |                                                                | \"topLeft,topRight,bottomLeft,bottomRight\" |\n| clipBehavior | Controls how to clip (default to \"antiAlias\") | String | enum values, please see enum Clip, default value is antiAlias. | \"hardEdge\"                                |\n| child        | The widget below this widget in the tree.     | Widget |                                                                |                                           |\n\n## SafeArea Widget\n\nSafeArea, here to see flutter [SafeArea](https://api.flutter.dev/flutter/widgets/SafeArea-class.html) definition. Supported json properties:\n\n| property | definition                                                                                    | type   | value                          | sample      |\n| -------- | --------------------------------------------------------------------------------------------- | ------ | ------------------------------ | ----------- |\n| bottom   | Whether to avoid system intrusions on the bottom side of the screen.                          | bool   | true or false, default is true | true        |\n| right    | Whether to avoid system intrusions on the right.                                              | bool   | true or false, default is true | true        |\n| top      | Whether to avoid system intrusions at the top of the screen, typically the system status bar. | bool   | true or false, default is true | true        |\n| left     | Whether to avoid system intrusions on the left.                                               | bool   | true or false, default is true | true        |\n| minimum  | This minimum padding to apply.                                                                | String | left,top,right,bottom          | \"8,10,12,8\" |\n| child    | The widget below this widget in the tree.                                                     | Widget |                                |             |\n\n## ListTile Widget\n\nListTile, here to see flutter [ListTile](https://api.flutter.dev/flutter/material/ListTile-class.html) definition. Supported json properties:\n\n| property       | definition                                                                         | type   | value                           | sample                    |\n| -------------- | ---------------------------------------------------------------------------------- | ------ | ------------------------------- | ------------------------- |\n| contentPadding | The tile's internal padding.                                                       | String | left,top,right,bottom           | \"8,10,12,8\"               |\n| dense          | Whether this list tile is part of a vertically dense list.                         | bool   | true or false, default is false | true                      |\n| enabled        | Whether this list tile is interactive.                                             | bool   | true or false, default is true  | true                      |\n| isThreeLine    | Whether this list tile is intended to display three lines of text.                 | bool   | true or false, default is false | true                      |\n| leading        | A widget to display before the title.                                              | Widget |                                 |                           |\n| tapEvent       | tap event                                                                          | String |                                 | route://goToProductDetail |\n| selected       | If this tile is also enabled then icons and text are rendered with the same color. | bool   | true or false, default is false | true                      |\n| subtitle       | Additional content displayed below the title.                                      | Widget |                                 |                           |\n| title          | The primary content of the list tile.                                              | Widget |                                 |                           |\n| trailing       | A widget to display after the title.                                               | Widget |                                 |                           |\n\n## SelectableText Widget\n\nSelectableText, here to see flutter [SelectableText](https://api.flutter.dev/flutter/material/SelectableText-class.html) definition. Supported json properties:\n\n| property      | definition                                                                                                                                                                  | type     | value                                                                                        | sample        |\n| ------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- | -------------------------------------------------------------------------------------------- | ------------- |\n| data          | The text to display                                                                                                                                                         | String   |                                                                                              | \"I am a text\" |\n| textAlign     | How the text should be aligned horizontally.                                                                                                                                | String   | One of the following string:<br>left (default)<br>right<br>center<br>justify<br>start<br>end | \"left\"        |\n| maxLines      | An optional maximum number of lines for the text to span, wrapping if necessary. If the text exceeds the given number of lines, it will be truncated according to overflow. | int      |                                                                                              | 3             |\n| textDirection | The directionality of the text.                                                                                                                                             | String   | One of the following string:<br>ltr (default) <br>rtl                                        | \"ltr\"         |\n| textSpan      | The text to display as a TextSpan.                                                                                                                                          | TextSpan |                                                                                              |               |\n\n## Icon Widget\n\nIcon, here to see flutter [Icon](https://api.flutter.dev/flutter/widgets/Icon-class.html) definition. Supported json properties:\n\n| property      | definition                                             | type   | value                                                 | sample                                                                     |\n| ------------- | ------------------------------------------------------ | ------ | ----------------------------------------------------- | -------------------------------------------------------------------------- |\n| data          | The icon to display. The available icons are described | String |                                                       | \"fa.google\" : font_awesome_flutter lib's icon, \"favorite\" : flutter's icon |\n| size          | The size of the icon in logical pixels.                | double |                                                       | 12.0                                                                       |\n| color         | The color to use when drawing the icon.                | String | \"#AARRGGBB\" or \"#RRGGBB\"                              | \"#FF00FF\"<br>\"#00FF00FF\"                                                   |\n| semanticLabel | Semantic label for the icon.                           | String |                                                       |                                                                            |\n| textDirection | The text direction to use for rendering the icon.      | String | One of the following string:<br>ltr (default) <br>rtl | \"ltr\"                                                                      |\n\n## DropCapText Widget\n\nDropCapText, Supported json properties:\n\n| property            | definition                                                                                                                                                                  | type      | value                                                                                                                                                                                                                                                                                      | sample                                 |\n| ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------------------------------------- |\n| data                | The text to display                                                                                                                                                         | String    |                                                                                                                                                                                                                                                                                            |                                        | \"I am a text\" |\n| selectable          | Text can be selected                                                                                                                                                        | bool      |                                                                                                                                                                                                                                                                                            |                                        |\n| mode                | Drop cap mode                                                                                                                                                               | String    | One of the following string:<br>inside (default) <br>upwards <br>aside <br>baseline                                                                                                                                                                                                        | \"#FF00FF\"<br>\"#00FF00FF\"               |\n| style               | The style to apply to the text and the children.                                                                                                                            | TextStyle |                                                                                                                                                                                                                                                                                            | {\"color\": \"#00FFFF\", \"fontSize\": 26.0} |\n| dropCapStyle        | The drop cap letter style                                                                                                                                                   | TextStyle |                                                                                                                                                                                                                                                                                            | {\"color\": \"#00FFFF\", \"fontSize\": 26.0} |\n| textAlign           | How the text should be aligned horizontally.                                                                                                                                | String    | One of the following string:<br>left (default)<br>right<br>center<br>justify<br>start<br>end                                                                                                                                                                                               | \"left\"                                 |\n| dropCap             | The drop cap                                                                                                                                                                | Widget    | {&quot;width&quot;:216.1,&quot;height&quot;:162.1,&quot;child&quot;:{&quot;type&quot;:&quot;NetworkImage&quot;,&quot;src&quot;:&quot;https://b.appsimg.com/upload/momin/2019/01/23/101/1548249269085.png &quot;,&quot;click_event&quot; : &quot;route://productDetail?goods_id=123&quot;}} |\n| dropCapStyle        | The drop cap padding                                                                                                                                                        | String    | left,top,right,bottom                                                                                                                                                                                                                                                                      | \"8,10,12,8\"                            |\n| dropCapChars        | The drop cap chars length                                                                                                                                                   | int       |                                                                                                                                                                                                                                                                                            | 1                                      |\n| forceNoDescent      | forceNoDescent                                                                                                                                                              | bool      |                                                                                                                                                                                                                                                                                            |                                        |\n| parseInlineMarkdown | if parse markdown                                                                                                                                                           | bool      |                                                                                                                                                                                                                                                                                            |                                        |\n| textDirection       | The directionality of the text.                                                                                                                                             | String    | One of the following string:<br>ltr (default) <br>rtl                                                                                                                                                                                                                                      | \"ltr\"                                  |\n| overflow            | How visual overflow should be handled.                                                                                                                                      | String    | One of the following string:<br>ellipsis (default)<br>clip<br>fade                                                                                                                                                                                                                         | \"ellipsis\"                             |\n| maxLines            | An optional maximum number of lines for the text to span, wrapping if necessary. If the text exceeds the given number of lines, it will be truncated according to overflow. | int       | One of the following string:<br>start (default) <br>end                                                                                                                                                                                                                                    | \"end\"                                  |\n| dropCapPosition     | drop cap position                                                                                                                                                           | String    |                                                                                                                                                                                                                                                                                            | 3                                      |\n\n## Scaffold Widget\n\nScaffold, Supported json properties:\n\n| property      | definition                                             | type   | value                                                 | sample                                                                     |\n| ------------- | ------------------------------------------------------ | ------ | ----------------------------------------------------- | -------------------------------------------------------------------------- |\n| appBar        | An app bar to display at the top of the scaffold.      | Widget |                                                       |                                                                            |\n| body          | The primary content of the scaffold.                   | Widget |                                                       |                                                                            |\n| floatingActionButton         | A button displayed floating above [body], in the bottom right corner.                | Widget |                               |                                                 |\n| backgroundColor | The color of the [Material] widget that underlies the entire Scaffold.                           | \"#AARRGGBB\" or \"#RRGGBB\"                              | \"#FF00FF\"<br>\"#00FF00FF\"                                                   |\n\n## AppBar Widget\n\nAppBar, Supported json properties:\n\n| property      | definition                                             | type   | value                                                 | sample                                                                     |\n| ------------- | ------------------------------------------------------ | ------ | ----------------------------------------------------- | -------------------------------------------------------------------------- |\n| title        | The primary widget displayed in the app bar.     | Widget |                                                       |                                                                            |\n| leading          | A widget to display before the [title].                 | Widget |                                                       |                                                                            |\n| actions         | Widgets to display in a row after the [title] widget.             | List<Widget> |                               |                                                 |\n| centerTitle          | Whether the title should be centered.                                                                                                                                                       | bool      |                                                                                                                                                                                                                                                                                            |                                        |\n| backgroundColor | The color to use for the app bar's material. Typically this should be set along with [brightness], [iconTheme], [textTheme].                           | \"#AARRGGBB\" or \"#RRGGBB\"                              | \"#FF00FF\"<br>\"#00FF00FF\"                                                   |\n\n## LimitedBox Widget\n\nLimitedBox, here to see flutter [LimitedBox](https://api.flutter.dev/flutter/widgets/LimitedBox-class.html) definition. Supported json properties:\n\n| property      | definition                                             | type   | value                                                 | sample                                                                     |\n| ------------- | ------------------------------------------------------ | ------ | ----------------------------------------------------- | -------------------------------------------------------------------------- |\n| maxHeight        | The maximum height limit to apply in the absence of a BoxConstraints.maxHeight constraint.     | double |                                                       |                                                                            |\n| maxWidth          | The maximum width limit to apply in the absence of a BoxConstraints.maxWidth constraint.                | double |                                                       |                                                                            |\n| child    | The widget below this widget in the tree.                                                     | Widget |                                |             |\n\n## Offstage Widget\n\nOffstage, here to see flutter [Offstage](https://api.flutter.dev/flutter/widgets/Offstage-class.html) definition. Supported json properties:\n\n| property      | definition                                             | type   | value                                                 | sample                                                                     |\n| ------------- | ------------------------------------------------------ | ------ | ----------------------------------------------------- | -------------------------------------------------------------------------- |\n| offstage        | Whether the child is hidden from the rest of the tree.    | bool |                                                       |                                                                            |\n| child    | The widget below this widget in the tree.                                                     | Widget |                                |             |\n\n## OverflowBox Widget\n\nOverflowBox, here to see flutter [OverflowBox](https://api.flutter.dev/flutter/widgets/OverflowBox-class.html) definition. Supported json properties:\n\n| property      | definition                                             | type   | value                                                 | sample                                                                     |\n| ------------- | ------------------------------------------------------ | ------ | ----------------------------------------------------- | -------------------------------------------------------------------------- |\n| alignment   | How to align the child.                                                                     | String         | One of the following string:<br>topLeft<br>topCenter<br>topRight<br>centerLeft<br>center<br>centerRight<br>bottomLeft<br>bottomCenter<br>bottomRight | \"topLeft\"                            |\n| maxHeight        | The maximum height constraint to give the child. Set this to null (the default) to use the constraint from the parent instead.    | double |                                                       |                                                                            |\n| maxWidth          | The maximum width constraint to give the child. Set this to null (the default) to use the constraint from the parent instead.               | double |                                                       |                                                                            |\n| minHeight        | The minimum height constraint to give the child. Set this to null (the default) to use the constraint from the parent instead.   | double |                                                       |                                                                            |\n| minWidth          | The minimum width constraint to give the child. Set this to null (the default) to use the constraint from the parent instead.              | double |                                                       |                                                                            |\n| child    | The widget below this widget in the tree.                                                     | Widget |                                |             |\n\n## Divider Widget\n\nDivider, here to see flutter [Divider](https://api.flutter.dev/flutter/material/Divider-class.html) definition. Supported json properties:\n\n| property      | definition                                             | type   | value                                                 | sample                                                                     |\n| ------------- | ------------------------------------------------------ | ------ | ----------------------------------------------------- | -------------------------------------------------------------------------- |\n| height   | The divider's height extent.                                                                   | double         | 8.0 |                           |\n| thickness        | The thickness of the line drawn within the divider.    | double |   2.0                                                    |                                                                            |\n| indent          | The amount of empty space to the leading edge of the divider.              | double |        8.0                                               |                                                                            |\n| endIndent        | The amount of empty space to the trailing edge of the divider.  | double |                       8.0                                |                                                                            |\n| color          | The color to use when painting the line.             | String         | \"#AARRGGBB\" or \"#RRGGBB\"                                                                                                                             | \"#FF00FF\"<br>\"#00FF00FF\"             |\n\n## RotatedBox Widget\n\nRotatedBox, here to see flutter [RotatedBox](https://api.flutter.dev/flutter/widgets/RotatedBox-class.html) definition. Supported json properties:\n\n| property      | definition                                             | type   | value                                                 | sample                                                                     |\n| ------------- | ------------------------------------------------------ | ------ | ----------------------------------------------------- | -------------------------------------------------------------------------- |\n| quarterTurns   | The number of clockwise quarter turns the child should be rotated.                                                                   | int         | 3 |                           |\n| child    | The widget below this widget in the tree.                                                     | Widget |                                |             |\n\n## Card Widget\n\nCard, here to see flutter [Card](https://api.flutter.dev/flutter/material/Card-class.html) definition. Supported json properties:\n\n| property      | definition                                             | type   | value                                                 | sample                                                                     |\n| ------------- | ------------------------------------------------------ | ------ | ----------------------------------------------------- | -------------------------------------------------------------------------- |\n| color                 | The card's background color.                                                                                          | int    |   3 | |\n| shadowColor           | The color to paint the shadow below the card.                                                                         | int    |   3 | |\n| elevation             | The z-coordinate at which to place this card. This controls the size of the shadow below the card.                    | int    |   8 | |\n| borderOnForeground    | Whether to paint the shape border in front of the child.                                                              | bool   |   true | |\n| clipBehavior          | The content will be clipped (or not) according to this option.                                                        | String |        | |\n| margin                | The empty space that surrounds the card.                                                                              | String |   left,top,right,bottom  | |\n| semanticContainer     | Whether this widget represents a single semantic container, or if false a collection of individual semantic nodes.    | bool   |   true | |\n| child                 | The widget below this widget in the tree.                                                                             | Widget |        | |\n| shape                 | The shape of the card's Material.                                                                                     | Map    |        | |\n\n\n## SingleChildScrollView widget\n\nSingleChildScrollView, here to see flutter [SingleChildScrollView](https://api.flutter.dev/flutter/widgets/SingleChildScrollView-class.html) definition. Suppert json properties:\n\n| property        | definition                                                     | type   | value                                                              | sample     |\n|-----------------|----------------------------------------------------------------|--------|--------------------------------------------------------------------|------------|\n| reverse         | Whether the scroll view scrolls in the reading direction.      | bool   | default value is false                                             |            |\n| clipBehavior    | The content will be clipped (or not) according to this option. | String | enum values, please see enum Clip, default value is Clip.hardEdge. |            |\n| padding         | The internal padding for the SingleChildScrollView's child.    | String | left,top,right,bottom                                              | \"0,0,0,0\"  |\n| scrollDirection | The axis along which the scroll view scrolls.                  | String | enum values, please see enum Axis, default value is Axis.vertical. | \"vertical\" |\n| child           | The widget below this widget in the tree.                      | Widget |                                                                    |            |\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "dynamic_widget.iml",
          "type": "blob",
          "size": 1.66796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/lib\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/test\" isTestSource=\"true\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.idea\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/demo/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/demo/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/demo/demo/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/demo/demo/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/demo/demo/build\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/build\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/ios/Flutter/App.framework/flutter_assets/packages\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/example/ios/Flutter/flutter_assets/packages\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"Android API 25 Platform\" jdkType=\"Android SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"Dart SDK\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Flutter Plugins\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Dart Packages\" level=\"project\" />\n  </component>\n</module>"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "publish.txt",
          "type": "blob",
          "size": 0.2314453125,
          "content": "//mac linux\nexport http_proxy=\"127.0.0.1:8888\"\nexport https_proxy=\"127.0.0.1:8888\"\n\n//windows\nset http_proxy=http://127.0.0.1:8888\nset https_proxy=http://127.0.0.1:8888\n\nflutter packages pub publish --dry-run\nflutter packages pub publish"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 1.67578125,
          "content": "name: dynamic_widget\ndescription: A Backend-Driven UI toolkit, build your dynamic UI with json, and the json format is very similar with flutter widget code。\nversion: 5.0.0\nhomepage: https://github.com/dengyin2000/dynamic_widget\n\nenvironment:\n  sdk: '>=2.12.0 <4.0.0'\n\ndependencies:\n  flutter:\n    sdk: flutter\n\n  logging: ^1.0.1\n\n  http: ^0.13.1\n\n  font_awesome_flutter: ^9.0.0\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n\n# For information on the generic Dart part of this file, see the\n# following page: https://www.dartlang.org/tools/pub/pubspec\n\n# The following section is specific to Flutter.\nflutter:\n\n  # To add assets to your package, add an assets section, like this:\n  # assets:\n  #  - images/a_dot_burr.jpeg\n  #  - images/a_dot_ham.jpeg\n  #\n  # For details regarding assets in packages, see\n  # https://flutter.io/assets-and-images/#from-packages\n  #\n  # An image asset can refer to one or more resolution-specific \"variants\", see\n  # https://flutter.io/assets-and-images/#resolution-aware.\n\n  # To add custom fonts to your package, add a fonts section here,\n  # in this \"flutter\" section. Each entry in this list should have a\n  # \"family\" key with the font family name, and a \"fonts\" key with a\n  # list giving the asset and other descriptors for the font. For\n  # example:\n  # fonts:\n  #   - family: Schyler\n  #     fonts:\n  #       - asset: fonts/Schyler-Regular.ttf\n  #       - asset: fonts/Schyler-Italic.ttf\n  #         style: italic\n  #   - family: Trajan Pro\n  #     fonts:\n  #       - asset: fonts/TrajanPro.ttf\n  #       - asset: fonts/TrajanPro_Bold.ttf\n  #         weight: 700\n  #\n  # For details regarding fonts in packages, see\n  # https://flutter.io/custom-fonts/#from-packages\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}