{
  "metadata": {
    "timestamp": 1736710569822,
    "page": 165,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "SimformSolutionsPvtLtd/flutter_showcaseview",
      "stars": 1600,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3095703125,
          "content": "### Flutter ###\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.packages\n.pub-cache/\n.pub/\n.idea/\n.vscode/\nbuild/\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\n/showcaseview.iml\n\n.idea/instapk.xml\ninstapk.log*\nios/Frameworks/\nios/Runner.xcworkspace/xcshareddata/\nexample/ios/Flutter/flutter_export_environment.sh\nflutter_showcaseview.iml\npubspec.lock\n"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 8b114482a4b56c45ebc85f048156039b93a4bbd8\n  channel: master\n\nproject_type: package\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 11.76953125,
          "content": "## [4.0.0]\n- [BREAKING] Fixed [#457](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/457) - titleAlignment property does not work\n- Feature [#466](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/466) - Added Action widget for tooltip\n- Feature [#475](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/475) - Add\n  feasibility to change margin of tooltip with `toolTipMargin`.\n- Feature [#478](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/478) - Added\n  feasibility to change auto scroll widget alignment `scrollAlignment`.\n- Feature [#386](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/386) - Added `enableAutoScroll` to `showcase`.\n- Fixed [#489](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/489) - Fixed\n  mounter issue inside the `_scrollIntoView` function\n- Feature [#395](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/395) - Added `globalFloatingActionWidget` and `hideFloatingActionWidgetForShowcase` for global\n  static fixed widget\n- Fixed [#486](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/486) - Improved AnchoredOverlayKey key initialization\n- Fixed [#464](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/464) - StateError Bad state: RenderBox was not laid out: RenderTransform\n\n## [3.0.0]\n- [BREAKING] Fixed [#434](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/434) removed deprecated text style after Flutter 3.22 follow [migration guide](https://docs.flutter.dev/release/breaking-changes/3-19-deprecations#texttheme)\n- Updated minimum support to dart sdk 2.18.0\n- Fixed [#449](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/449) - Null check operator used on a null value\n- [BREAKING] Improvement [#400](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/400) - remove Builder widget\n- Fixed [#435](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/435) - Extra padding when add targetShapeBorder\n\n## [2.1.1]\n- Fixed [#425](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/425) - Unhandled breaking change in v2.1.0\n- Fixed [#428](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/428) - _ShowcaseState.recalculateRootWidgetSize null value\n\n## [2.1.0]\n- Feature [#420](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/420) - Dart SDK Upgrade\n- Fixed [#419](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/419) - Suppress Text Scale Factor Warning\n- Improvement [#413](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/413) - Improved `Showcase` class\n- Fixed [#369](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/369) - Fixed ToolTip Slide Transition\n- Fixed [#388](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/388) - Can't scroll horizontal list with showcase\n- Fixed [#366](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/366) - Null check operator used on a null value\n- Fixed [#389](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/389) - Ignore extra `_nextIfAny` function operations\n- Fixed [#409](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/409) - Fixed target hit area.\n- Improvement [#370](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/370) - Improved `GetPosition` class.\n- Feature [#387](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/387) - Provided barrier click disable functionality for a particular showcase.\n- Fixed [#383](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/383) - Targeted widget focusing issue when we applying size constraint on root widget(MaterialApp).\n\n## [2.0.3]\n- Feature [#148](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/148) - Add feasibility to add `textDirection` of `title` and `description`.\n- Feature [#272](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/272) - Add barrier click callback.\n- Fixed [#360](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/360) - child constructor invocation to get rid out of flutter lint warning.\n\n## [2.0.2]\n- Fixed [#335](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/335) - Flutter inspector makes screen grey\n- Fixed [#346](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/346) - Dont respond to any clicks in target.\n\n## [2.0.1]\n- Feature [#306](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/306) - Added support of manual vertical tooltip position.\n- Fixed [#318](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/318) - Add support for enable/disable showcase globally.\n- Fixed [#316](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/316) - Add title and description padding\n- Fixed [#330](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/330) - Overlay not showing in flutter 3.7.0\n- Fixed [#288](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/288) - Take in account view insets (such as keyboard)\n- Fixed [#334](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/334) - Move code line to resolve no context issue\n- Add PR title validation workflow\n\n## [2.0.0+1]\n- Fixed [#237](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/261) - Feature added to enable/disable default gesture of ShowcaseView child using `disableDefaultTargetGestures` parameter\n- Fixed [#206](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/206) - getLeft and getRight return wrong result when in middle with a little offset\n- Fixed issue of duplicate key found in example.\n- Fixed [#253](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/253) - Add TextAlign attribute for title and description\n- `pull_request_template.md.` file updated with proper document\n- `CONTRIBUTING.md` file updated with proper document\n- Fixed [#268](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/268) - Added smooth scale transition when tooltip appear on the screen\n- Updated parameter name of `ShowCaseWidget` and `Showcase` class\n\n## [1.1.8]\n- Fixed [#237](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/237) - Feature added to enable/disable overlay click using `disableBarrierInteraction` parameters\n- ToolTip BorderRadius setting support\n\n## [1.1.7]\n\n- Fixed [#235](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/235) - 1.1.6 scrolling behavior in PageView.\n- Fixed [#242](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/242) - Error when display showcase on FloatingActionBar inside a TabBar (with more than 1 tab).\n\n## [1.1.6]\n\n- Fixed [#62](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/62) - While using ShowCase widget, not scrolling to respective widget when it's not visible.\n- Fixed [#131](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/131) - Support of other gestures onTargetLongPress and onTargetDoubleTap\n- Fixed [#140](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/140) - disableAnimation at ShowcaseWidget level\n- Fixed [#71](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/71) - Highlight Not working when widget is not visible on screen\n- Add flutter 3.0 support.\n\n## [1.1.5]\n\n- Fixed [#173](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/173) - showArrow not working\n- Fixed [#150](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/150) - Add condition for determine state is active\n- Fixed [#121](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/121) - SlideTransition widget in tooltip_widget.dart is constantly rebuildung even after the showcasing is supposed to have stopped\n- Fixed [#152](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/152) - Calculation of tooltip position\n- Fixed [#182](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/182) - Not providing blurValue causes Exception: Please provide ShowCaseView context\n- Fixed [#162](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/162) - Add feature to move back\n- Fixed [#181](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/181) - Add feature to go to previous item\n\n## [1.1.4]\n\n- Add glassmorphism effect in showcase background.\n- Fixed [#166](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/166) - shapeBorder need to be more customisable\n- Fixed [#163](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/163) - Null check operator used on a null value\n\n## [1.1.3]\n\n- Fixed [#158](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/158) - Arrow animation is not synchronized with tooltip\n\n## [1.1.2]\n\n- Fixed [#78](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/78) - Exception:BoxConstraints has NaN values #78\n- Fixed [#139](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/139) - Weird position #139\n- Fixed [#138](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/138) - show Unhandled Exception: Null check operator used on a null value error\n\n## [1.1.1]\n\n- Fixed [#92](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/92) - Showcase in ReorderableListView show at incorrect position\n- License update from BSD 2-Clause \"Simplified\" to MIT\n\n## [1.1.0]\n\n- Fixed [#103](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/103) - add overlay padding.\n- Fixed [#105](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/105) - showcase not showing text in one line even if it is not so big.\n- Fixed [#56](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/56) - Landscape mode issue\n- Fixed [#86](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/86) - Showcase isn't rendering responsively\n\n## [1.0.0]\n\n- Fixed [#95](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/95) - Migrated to null safety.  \n- Fixed [#74](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/74) - Long text description is hidden.\n- Fixed [#76](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/76) - Overlay is not displayed properly on web.\n- Fixed [#81](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/81) - Crash on hot reload.\n- Fixed [#84](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/84) - Background dim does not work in some screens.\n- Fixed [#90](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/90) - ListView Item Support.\n\n## [0.1.6]\n\n- [Feature #63](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/63) method callback after individual showcase start and end\n- [Fix #57](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/57) Position of the Showcase.withWidget is different on iPhone 11\n- [Feature #49](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pull/49) Add autoplay tooltip on showcase view plugin.\n\n## [0.1.5]\n\n* Refactor usage of deprecated methods\n* Add support for `disableAnimation` option.\n\n## [0.1.4] - Added onFinish method [#17](https://github.com/simformsolutions/flutter_showcaseview/issues/17).\n\n## [0.1.3] - Added feature\n\nUpdated syntax to pass new context to ShowCaseWidget\nAdded onTargetTap callback feature [#10](https://github.com/simformsolutions/flutter_showcaseview/issues/10).\n\n## [0.1.2] - Fixed issue [#6](https://github.com/simformsolutions/flutter_showcaseview/issues/6).\n\n## [0.1.1] - Fixed maintenance issues.\n\n## [0.1.0] - Initial release on 22nd Augest, 2019.\n\n* First release.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2744140625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at developer@simform.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.2373046875,
          "content": "# Contribution Guidelines\n\n**Note:** If these contribution guidelines are not followed your issue or PR might be closed, so\nplease read these instructions carefully.\n\n## Contribution types\n\n\n### Bug Reports\n\n- If you find a bug, please first report it using [Github issues].\n    - First check if there is not already an issue for it; duplicated issues will be closed.\n\n\n### Bug Fix\n\n- If you'd like to submit a fix for a bug, please read the [How To](#how-to-contribute) for how to\n  send a Pull Request.\n- Indicate on the open issue that you are working on fixing the bug and the issue will be assigned\n  to you.\n- Write `Fixes #xxxx` in your PR text, where xxxx is the issue number (if there is one).\n- Include a test that isolates the bug and verifies that it was fixed.\n\n\n### New Features\n\n- If you'd like to add a feature to the library that doesn't already exist, feel free to describe\n  the feature in a new [GitHub issue].\n    - You can also join us on [GitHub Discussion] to discuss some initials thoughts.\n- If you'd like to implement the new feature, please wait for feedback from the project maintainers\n  before spending too much time writing the code. In some cases, enhancements may not align well\n  with the project future development direction.\n- Implement the code for the new feature and please read the [How To](#how-to-contribute).\n\n\n### Documentation & Miscellaneous\n\n- If you have suggestions for improvements to the documentation, tutorial or examples (or something\n  else), we would love to hear about it.\n- As always first file a [Github issue].\n- Implement the changes to the documentation, please read the [How To](#how-to-contribute).\n\n\n## How To Contribute\n\n\n### Requirements\n\nFor a contribution to be accepted:\n\n- Follow the [Style Guide] when writing the code;\n- Format the code using `flutter format .`;\n- Documentation should always be updated or added (if applicable);\n- Examples should always be updated or added (if applicable);\n- Tests should always be updated or added (if applicable) -- check the [Test writing guide] for\n  more details;\n- The PR title should start with a [conventional commit] prefix (`feat:`, `fix:` etc).\n\nIf the contribution doesn't meet these criteria, a maintainer will discuss it with you on the issue\nor PR. You can still continue to add more commits to the branch you have sent the Pull Request from\nand it will be automatically reflected in the PR.\n\n\n## Open an issue and fork the repository\n\n- If it is a bigger change or a new feature, first of all\n  [file a bug or feature report][GitHub issues], so that we can discuss what direction to follow.\n- [Fork the project][fork guide] on GitHub.\n- Clone the forked repository to your local development machine\n  (e.g. `git clone git@github.com:<YOUR_GITHUB_USER>/flutter_showcaseview.git`).\n\n\n### Performing changes\n\n- Create a new local branch from `main` (e.g. `git checkout -b my-new-feature`)\n- Make your changes (try to split them up with one PR per feature/fix).\n- When committing your changes, make sure that each commit message is clear\n  (e.g. `git commit -m 'Fixes duplicate key found in example'`).\n- Push your new branch to your own fork into the same remote branch\n  (e.g. `git push origin my-username.my-new-feature`, replace `origin` if you use another remote.)\n\n\n### Breaking changes\n\nWhen doing breaking changes a deprecation tag should be added when possible and contain a message\nthat conveys to the user what which version that the deprecated method/field will be removed in and\nwhat method they should use instead to perform the task. The version specified should be at least\ntwo versions after the current one, such that there will be at least one stable release where the\nusers get to see the deprecation warning and in the version after that (or a later version) the\ndeprecated entity should be removed.\n\nExample (if the current version is v1.3.0):\n\n```dart\n@Deprecated('Will be removed in v1.5.0, use nonDeprecatedFeature() instead')\nvoid deprecatedFeature() {}\n```\n\n\n### Open a pull request\n\nGo to the [pull request page of ShowCaseView][PRs] and in the top\nof the page it will ask you if you want to open a pull request from your newly created branch.\n\nThe title of the pull request should start with a [conventional commit] type.\nUse this [gitmoji] for commit message.\n\nAllowed types are:\n\n- `fix:` -- patches a bug and is not a new feature;\n- `feat:` -- introduces a new feature;\n- `docs:` -- updates or adds documentation or examples;\n- `test:` -- updates or adds tests;\n- `refactor:` -- refactors code but doesn't introduce any changes or additions to the public API;\n- `perf:` -- code change that improves performance;\n- `build:` -- code change that affects the build system or external dependencies;\n- `ci:` -- changes to the CI configuration files and scripts;\n- `chore:` -- other changes that don't modify source or test files;\n- `revert:` -- reverts a previous commit.\n\nIf you introduce a **breaking change** the conventional commit type MUST end with an exclamation\nmark (e.g. `feat!: Remove the position from ToolTipWidget`).\n\nExamples of PR titles:\n\n- feat: ✨ Added smooth transition to tooltip\n- fix: 🐛 Fixes duplicate key found in example\n- docs: 💡 ToolTip BorderRadius setting support doc update\n- docs: 📚 Improve the ToolTipWidget README\n- test: 🚨 Add unit test for `ToolTipWidget`\n- refactor: 🔨 Optimize the structure of the example\n\n\n## Maintainers\n\nThese instructions are for the maintainers of ShowCaseView.\n\n\n### Merging a pull request\n\nWhen merging a pull request, make sure that the title of the merge commit has the correct\nconventional commit tag and a descriptive title. This is extra important since sometimes the title\nof the PR doesn't reflect what GitHub defaults to for the merge commit title (if the title has been\nchanged during the life time of the PR for example).\n\nAll the default text should be removed from the commit message and the PR description and the\ninstructions from the \"Migration instruction\" (if the PR is breaking) should be copied into the\ncommit message.\n\n\n### Creating a release\n\nThere are a few things to think about when doing a release:\n\n- Search through the codebase for `@Deprecated` methods/fields and remove the ones that are marked\n  for removal in the version that you are intending to release.\n- Create a PR containing the changes for removing the deprecated entities.\n- Go through the PRs with breaking changes and add migration documentation to the changelog.\n  There should be migration docs on each PR, if they haven't been copied to the commit message.\n- Create a PR containing the updated changelog and `pubspec.yaml` files.\n\n\n[GitHub issue]: https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/new\n[GitHub issues]: https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues/new\n[GitHub Discussion]: https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/discussions\n[style guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\n[test writing guide]: https://docs.flutter.dev/cookbook/testing/unit/introduction\n[pubspec doc]: https://dart.dev/tools/pub/pubspec\n[conventional commit]: https://www.conventionalcommits.org\n[fork guide]: https://guides.github.com/activities/forking/#fork\n[PRs]: https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/pulls\n[gitmoji]: https://gist.github.com/parmentf/035de27d6ed1dce0b36a"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "MIT License\n\nCopyright (c) 2021 Simform Solutions\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 28.5439453125,
          "content": "![Showcaes View - Simform LLC.](https://raw.githubusercontent.com/SimformSolutionsPvtLtd/flutter_showcaseview/master/preview/banner.png)\n\n\n# ShowCaseView\n\n[![Build](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/workflows/Build/badge.svg?branch=master)](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/actions) [![showcaseview](https://img.shields.io/pub/v/showcaseview?label=showcaseview)](https://pub.dev/packages/showcaseview)\n\nA Flutter package allows you to Showcase/Highlight your widgets step by step.\n\n## Preview\n\n![The example app running in Android](https://raw.githubusercontent.com/SimformSolutionsPvtLtd/flutter_showcaseview/master/preview/showcaseview.gif)\n\n## Migration guide for release 4.0.0\n\nRenamed parameters `titleAlignment` to `titleTextAlign` and `descriptionAlignment`\nto `descriptionTextAlign` to correspond it more with the TextAlign property.`titleAlignment`\nand `descriptionAlignment` will be used for widget alignment.\n\nBefore:\n```dart\nShowcase(\n  titleAlignment: TextAlign.center,\n  descriptionAlignment: TextAlign.center,\n),\n```\n\nAfter:\n```dart\nShowcase(\n  titleTextAlign: TextAlign.center,\n  descriptionTextAlign: TextAlign.center,\n),\n```\n\n## Migration guide for release 3.0.0\nRemoved builder widget from `ShowCaseWidget` and replaced it with builder function\n\nBefore:\n```dart\nShowCaseWidget(\n  builder: Builder(\n    builder : (context) => Somewidget()\n  ),\n),\n```\n\nAfter:\n```dart\nShowCaseWidget(\n  builder : (context) => Somewidget(),\n),\n```\n\n## Installing\n\n1.  Add dependency to `pubspec.yaml`\n\n    *Get the latest version in the 'Installing' tab on [pub.dev](https://pub.dev/packages/showcaseview)*\n\n```dart\ndependencies:\n    showcaseview: <latest-version>\n```\n\n2.  Import the package\n```dart\nimport 'package:showcaseview/showcaseview.dart';\n```\n\n3. Adding a `ShowCaseWidget` widget.\n```dart\nShowCaseWidget(\n  builder:  (context)=> Somewidget(),\n),\n```\n\n4. Adding a `Showcase` widget.\n```dart\nGlobalKey _one = GlobalKey();\nGlobalKey _two = GlobalKey();\nGlobalKey _three = GlobalKey();\n\n...\n\nShowcase(\n  key: _one,\n  title: 'Menu',\n  description: 'Click here to see menu options',\n  child: Icon(\n    Icons.menu,\n    color: Colors.black45,\n  ),\n),\n\nShowcase.withWidget(\n  key: _three,\n  height: 80,\n  width: 140,\n  targetShapeBorder: CircleBorder(),\n  container: Column(\n    crossAxisAlignment: CrossAxisAlignment.start,\n    children: <Widget>[\n      ...\n    ],\n  ),\n  child: ...,\n),\n```\n\n5. Starting the `ShowCase`\n```dart\nsomeEvent(){\n    ShowCaseWidget.of(context).startShowCase([_one, _two, _three]);\n}\n```\n\nIf you want to start the `ShowCaseView` as soon as your UI built up then use below code.\n\n```dart\nWidgetsBinding.instance.addPostFrameCallback((_) =>\n  ShowCaseWidget.of(context).startShowCase([_one, _two, _three])\n);\n```\n\n## Functions of `ShowCaseWidget.of(context)`:\n\n| Function Name                            | Description              |\n|------------------------------------------|--------------------------|\n| startShowCase(List<GlobalKey> widgetIds) | Starting the showcase    |\n| next()                                   | Starts next showcase     |\n| previous()                               | Starts previous showcase |\n| dismiss()                                | Dismisses all showcases  |\n\n## Properties of `ShowCaseWidget`:\n\n| Name                                | Type                                         | Default Behaviour            | Description                                                                    |\n|-------------------------------------|----------------------------------------------|------------------------------|--------------------------------------------------------------------------------|\n| builder                             | Builder                                      |                              |                                                                                |\n| blurValue                           | double                                       | 0                            | Provides blur effect on overlay.                                               |\n| autoPlay                            | bool                                         | false                        | Automatically display Next showcase.                                           |\n| autoPlayDelay                       | Duration                                     | Duration(milliseconds: 2000) | Visibility time of showcase when `autoplay` is enabled.                        |\n| enableAutoPlayLock                  | bool                                         | false                        | Block the user interaction on overlay when autoPlay is enabled.                |\n| enableAutoScroll                    | bool                                         | false                        | Allows to auto scroll to next showcase so as to make the given target visible. |\n| scrollDuration                      | Duration                                     | Duration(milliseconds: 300)  | Time duration for auto scrolling.                                              |\n| disableBarrierInteraction           | bool                                         | false                        | Disable barrier interaction.                                                   |\n| disableScaleAnimation               | bool                                         | false                        | Disable scale transition for all showcases.                                    |\n| disableMovingAnimation              | bool                                         | false                        | Disable bouncing/moving transition for all showcases.                          |\n| onStart                             | Function(int?, GlobalKey)?                   |                              | Triggered on start of each showcase.                                           |\n| onComplete                          | Function(int?, GlobalKey)?                   |                              | Triggered on completion of each showcase.                                      |\n| onFinish                            | VoidCallback?                                |                              | Triggered when all the showcases are completed.                                |\n| enableShowcase                      | bool                                         | true                         | Enable or disable showcase globally.                                           |\n| toolTipMargin                       | double                                       | 14                           | For tooltip margin.                                                            |\n| globalTooltipActionConfig           | TooltipActionConfig?                         |                              | Global tooltip actionbar config.                                               |\n| globalTooltipActions                | List<TooltipActionButton>?                   |                              | Global list of tooltip actions .                                               |\n| scrollAlignment                     | double                                       | 0.5                          | For Auto scroll widget alignment.                                              |\n| globalFloatingActionWidget          | FloatingActionWidget Function(BuildContext)? |                              | Global Config for tooltip action to auto apply for all the toolTip .           |\n| hideFloatingActionWidgetForShowcase | List<GlobalKey>                              | []                           | Hides globalFloatingActionWidget for the provided showcase widget keys.        |\n\n\n## Properties of `Showcase` and `Showcase.withWidget`:\n\n| Name                         | Type                       | Default Behaviour                                | Description                                                                                        | `Showcase` | `ShowCaseWidget` |\n|------------------------------|----------------------------|--------------------------------------------------|----------------------------------------------------------------------------------------------------|------------|------------------|\n| key                          | GlobalKey                  |                                                  | Unique Global key for each showcase.                                                               | ✅          | ✅                |\n| child                        | Widget                     |                                                  | The Target widget that you want to be showcased                                                    | ✅          | ✅                |\n| title                        | String?                    |                                                  | Title of default tooltip                                                                           | ✅          |                  |\n| description                  | String?                    |                                                  | Description of default tooltip                                                                     | ✅          |                  |\n| container                    | Widget?                    |                                                  | Allows to create custom tooltip widget.                                                            |            | ✅                |\n| height                       | double?                    |                                                  | Height of custom tooltip widget                                                                    |            | ✅                |\n| width                        | double?                    |                                                  | Width of custom tooltip widget                                                                     |            | ✅                |\n| titleTextStyle               | TextStyle?                 |                                                  | Text Style of title                                                                                | ✅          |                  |\n| descTextStyle                | TextStyle?                 |                                                  | Text Style of description                                                                          | ✅          |                  |\n| titleTextAlign               | TextAlign                  | TextAlign.start                                  | Alignment of title text                                                                            | ✅          |                  |\n| descriptionTextAlign         | TextAlign                  | TextAlign.start                                  | Alignment of description text                                                                      | ✅          |                  |\n| titleAlignment               | AlignmentGeometry          | Alignment.center                                 | Alignment of title                                                                                 | ✅          |                  |\n| descriptionAlignment         | AlignmentGeometry          | Alignment.center                                 | Alignment of description                                                                           | ✅          |                  |\n| targetShapeBorder            | ShapeBorder                |                                                  | If `targetBorderRadius` param is not provided then it applies shape border to target widget        | ✅          | ✅                |\n| targetBorderRadius           | BorderRadius?              |                                                  | Border radius of target widget                                                                     | ✅          | ✅                |\n| tooltipBorderRadius          | BorderRadius?              | BorderRadius.circular(8.0)                       | Border radius of tooltip                                                                           | ✅          |                  |\n| blurValue                    | double?                    | `ShowCaseWidget.blurValue`                       | Gaussian blur effect on overlay                                                                    | ✅          | ✅                |\n| tooltipPadding               | EdgeInsets                 | EdgeInsets.symmetric(vertical: 8, horizontal: 8) | Padding to tooltip content                                                                         | ✅          |                  |\n| targetPadding                | EdgeInsets                 | EdgeInsets.zero                                  | Padding to target widget                                                                           | ✅          | ✅                |\n| overlayOpacity               | double                     | 0.75                                             | Opacity of overlay layer                                                                           | ✅          | ✅                |\n| overlayColor                 | Color                      | Colors.black45                                   | Color of overlay layer                                                                             | ✅          | ✅                |\n| tooltipBackgroundColor       | Color                      | Colors.white                                     | Background Color of default tooltip                                                                | ✅          |                  |\n| textColor                    | Color                      | Colors.black                                     | Color of tooltip text                                                                              | ✅          |                  |\n| scrollLoadingWidget          | Widget                     |                                                  | Loading widget on overlay until active showcase is visible to viewport when `autoScroll` is enable | ✅          | ✅                |\n| movingAnimationDuration      | Duration                   | Duration(milliseconds: 2000)                     | Duration of time this moving animation should last.                                                | ✅          | ✅                |\n| showArrow                    | bool                       | true                                             | Shows tooltip with arrow                                                                           | ✅          |                  |\n| disableDefaultTargetGestures | bool                       | false                                            | disable default gestures of target widget                                                          | ✅          | ✅                |\n| disposeOnTap                 | bool?                      | false                                            | Dismiss all showcases on target/tooltip tap                                                        | ✅          | ✅                |\n| disableMovingAnimation       | bool?                      | `ShowCaseWidget.disableMovingAnimation`          | Disable bouncing/moving transition                                                                 | ✅          | ✅                |\n| disableScaleAnimation        | bool?                      | `ShowCaseWidget.disableScaleAnimation`           | Disable initial scale transition when showcase is being started and completed                      | ✅          |                  |\n| scaleAnimationDuration       | Duration                   | Duration(milliseconds: 300)                      | Duration of time scale animation should last.                                                      | ✅          |                  |\n| scaleAnimationCurve          | Curve                      | Curves.easeIn                                    | Curve to use in scale animation.                                                                   | ✅          |                  |\n| scaleAnimationAlignment      | Alignment?                 |                                                  | Origin of the coordinate in which the scale takes place, relative to the size of the box.          | ✅          |                  |\n| onToolTipClick               | VoidCallback?              |                                                  | Triggers when tooltip is being clicked.                                                            | ✅          |                  |\n| onTargetClick                | VoidCallback?              |                                                  | Triggers when target widget is being clicked                                                       | ✅          | ✅                |\n| onTargetDoubleTap            | VoidCallback?              |                                                  | Triggers when target widget is being double clicked                                                | ✅          | ✅                |\n| onTargetLongPress            | VoidCallback?              |                                                  | Triggers when target widget is being long pressed                                                  | ✅          | ✅                |\n| onBarrierClick               | VoidCallback?              |                                                  | Triggers when barrier is clicked                                                                   | ✅          | ✅                |\n| tooltipPosition              | TooltipPosition?           |                                                  | Defines vertical position of tooltip respective to Target widget                                   | ✅          | ✅                |\n| titlePadding                 | EdgeInsets?                | EdgeInsets.zero                                  | Padding to title                                                                                   | ✅          |                  |\n| descriptionPadding           | EdgeInsets?                | EdgeInsets.zero                                  | Padding to description                                                                             | ✅          |                  |\n| titleTextDirection           | TextDirection?             |                                                  | Give textDirection to title                                                                        | ✅          |                  |\n| descriptionTextDirection     | TextDirection?             |                                                  | Give textDirection to description                                                                  | ✅          |                  |\n| descriptionTextDirection     | TextDirection?             |                                                  | Give textDirection to description                                                                  | ✅          |                  |\n| disableBarrierInteraction    | bool                       | false                                            | Disables barrier interaction for a particular showCase                                             | ✅          | ✅                |\n| toolTipSlideEndDistance      | double                     | 7                                                | Defines motion range for tooltip slide animation                                                   | ✅          | ✅                |\n| tooltipActions               | List<TooltipActionButton>? | []                                               | Provide a list of tooltip actions                                                                  | ✅          | ✅                |\n| tooltipActionConfig          | TooltipActionConfig?       |                                                  | Give configurations (alignment, position, etc...) to the tooltip actionbar                         | ✅          | ✅                |\n| enableAutoScroll             | bool?                      | ShowCaseWidget.enableAutoScroll                  | This is used to override the `ShowCaseWidget.enableAutoScroll` behaviour                           | ✅          | ✅                |\n| floatingActionWidget         | FloatingActionWidget       |                                                  | Provided a floating static action widget to show at any place on the screen                        | ✅          | ✅                |\n\n## Properties of `TooltipActionButton` and `TooltipActionButton.custom`:\n\n| Name                        | Type                | Default Behaviour                                | Description                                                | `TooltipActionButton` | `TooltipActionButton.custom` |\n|-----------------------------|---------------------|--------------------------------------------------|------------------------------------------------------------|-----------------------|------------------------------|\n| button                      | Widget              |                                                  | Provide custom tooltip action button widget                |                       | ✅                            |\n| type                        | TooltipActionButton |                                                  | Type of action button (next, skip, previous)               | ✅                     |                              |\n| backgroundColor             | Color?              |                                                  | Give background color to action button                     | ✅                     |                              |\n| borderRadius                | BorderRadius?       | BorderRadius.all(Radius.circular(50))            | Give border radius to action button                        | ✅                     |                              |\n| textStyle                   | TextStyle?          |                                                  | Give text styles to the name of button                     | ✅                     |                              |\n| padding                     | EdgeInsets?         | EdgeInsets.symmetric(horizontal: 15,vertical: 4) | Give padding to button content                             | ✅                     |                              |\n| leadIcon                    | ActionButtonIcon?   |                                                  | Add icon at first before name in action button             | ✅                     |                              |\n| tailIcon                    | ActionButtonIcon?   |                                                  | Add icon at last after name in action button               | ✅                     |                              |\n| name                        | String?             |                                                  | Action button name                                         | ✅                     |                              |\n| onTap                       | VoidCallback?       |                                                  | Triggers when action button is tapped                      | ✅                     |                              |\n| border                      | Border?             |                                                  | Give border custom border to the action widget             | ✅                     |                              |\n| hideActionWidgetForShowcase | List<GlobalKey>     | []                                               | Hide This action widget for provided list of showcase keys | ✅                     |                              |\n\n## Properties of `TooltipActionConfig`:\n\n| Name                       | Type                   | Default Behaviour              | Description                                       |\n|----------------------------|------------------------|:-------------------------------|---------------------------------------------------|\n| alignment                  | MainAxisAlignment      | MainAxisAlignment.spaceBetween | Horizontal Alignment of tooltip action buttons    |\n| crossAxisAlignment         | CrossAxisAlignment     | CrossAxisAlignment.start       | Vertical Alignment of tooltip action buttons      |\n| actionGap                  | double?                | 5                              | Horizontal gap between the tooltip action buttons |\n| position                   | TooltipActionPosition? | TooltipActionPosition.inside   | Position of tooltip actionbar (inside, outside)   |\n| gapBetweenContentAndAction | double?                | 10                             | Gap between tooltip content and actionbar         |\n\n## How to use\n\nCheck out the **example** app in the [example](example) directory or the 'Example' tab on pub.dartlang.org for a more complete example.\n\n## Scrolling to active showcase\n\nAuto Scrolling to active showcase feature will not work properly in scroll views that renders widgets on demand(ex, ListView, GridView).\n\nIn order to scroll to a widget it needs to be attached with widget tree. So, If you are using a scrollview that renders widgets on demand, it is possible that the widget on which showcase is applied is not attached in widget tree. So, flutter won't be able to scroll to that widget.\n\nSo, If you want to make a scroll view that contains less number of children widget then prefer to use SingleChildScrollView.\n\nIf using SingleChildScrollView is not an option, then you can assign a ScrollController to that scrollview and manually scroll to the position where showcase widget gets rendered. You can add that code in onStart method of `ShowCaseWidget`.\n\nExample,\n\n```dart\n// This controller will be assigned to respected sctollview.\nfinal _controller = ScrollController();\n\nShowCaseWidget(\n  onStart: (index, key) {\n    if(index == 0) {\n      WidgetsBinding.instance.addPostFrameCallback((_) {\n       // If showcase widget is at offset 1000 in the listview.\n       // If you don't know the exact position of the showcase widget,\n       // You can provide nearest possible location.\n       // \n       // In this case providing 990 instead of 1000 will work as well.\n        _controller.jumpTo(1000);\n      });\n    }\n  },\n);\n```\n\n## Main Contributors\n\n<table>\n  <tr>\n     <td align=\"center\"><a href=\"https://github.com/vatsaltanna\"><img src=\"https://avatars.githubusercontent.com/u/25323183?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vatsal Tanna</b></sub></a></td>\n     <td align=\"center\"><a href=\"https://github.com/sanket-simform\"><img src=\"https://avatars.githubusercontent.com/u/65167856?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sanket Kachhela</b></sub></a></td>\n     <td align=\"center\"><a href=\"https://github.com/ParthBaraiya\"><img src=\"https://avatars.githubusercontent.com/u/36261739?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Parth Baraiya</b></sub></a></td>\n     <td align=\"center\"><a href=\"https://github.com/DhavalRKansara\"><img src=\"https://avatars.githubusercontent.com/u/44993081?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dhaval Kansara</b></sub></a></td>\n     <td align=\"center\"><a href=\"https://github.com/HappyMakadiyaS\"><img src=\"https://avatars.githubusercontent.com/u/97177197?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Happy Makadiya</b></sub></a></td>\n     <td align=\"center\"><a href=\"https://github.com/Ujas-Majithiya\"><img src=\"https://avatars.githubusercontent.com/u/56400956?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ujas Majithiya</b></sub></a></td>\n     <td align=\"center\"><a href=\"https://github.com/aditya-chavda\"><img src=\"https://avatars.githubusercontent.com/u/41247722?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aditya Chavda</b></sub></a></td>\n     <td align=\"center\"><a href=\"https://github.com/Flamingloon\"><img src=\"https://avatars.githubusercontent.com/u/81063988?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sahil Totala</b></sub></a></td>\n  </tr>\n</table>\n\n\n## License\n\n```text\nMIT License\n\nCopyright (c) 2021 Simform Solutions\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.5810546875,
          "content": "include: package:flutter_lints/flutter.yaml\n\nanalyzer:\n  strong-mode:\n    implicit-casts: false\n    implicit-dynamic: false\n  errors:\n    argument_type_not_assignable: error\n    invalid_assignment: error\n    dead_code: warning\n    overridden_fields: ignore\n    use_key_in_widget_constructors: ignore\n\nlinter:\n  rules:\n    public_member_api_docs: false\n    avoid_print: true\n    avoid_empty_else: true\n    annotate_overrides: true\n    cancel_subscriptions: true\n    close_sinks: true\n    avoid_positional_boolean_parameters: false\n    use_super_parameters: true\n    prefer_relative_imports: true\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "preview",
          "type": "tree",
          "content": null
        },
        {
          "name": "pub_login.sh",
          "type": "blob",
          "size": 1.0615234375,
          "content": "# This script creates/updates credentials.json file which is used\n# to authorize publisher when publishing packages to pub.dev\n\n# Checking whether the secrets are available as environment\n# variables or not.\nif [ -z \"${PUB_DEV_PUBLISH_ACCESS_TOKEN}\" ]; then\n  echo \"Missing PUB_DEV_PUBLISH_ACCESS_TOKEN environment variable\"\n  exit 1\nfi\n\nif [ -z \"${PUB_DEV_PUBLISH_REFRESH_TOKEN}\" ]; then\n  echo \"Missing PUB_DEV_PUBLISH_REFRESH_TOKEN environment variable\"\n  exit 1\nfi\n\nif [ -z \"${PUB_DEV_PUBLISH_TOKEN_ENDPOINT}\" ]; then\n  echo \"Missing PUB_DEV_PUBLISH_TOKEN_ENDPOINT environment variable\"\n  exit 1\nfi\n\nif [ -z \"${PUB_DEV_PUBLISH_EXPIRATION}\" ]; then\n  echo \"Missing PUB_DEV_PUBLISH_EXPIRATION environment variable\"\n  exit 1\nfi\n\n# Create credentials.json file.\ncat <<EOF >~/.pub-cache/credentials.json\n{\n  \"accessToken\":\"${PUB_DEV_PUBLISH_ACCESS_TOKEN}\",\n  \"refreshToken\":\"${PUB_DEV_PUBLISH_REFRESH_TOKEN}\",\n  \"tokenEndpoint\":\"${PUB_DEV_PUBLISH_TOKEN_ENDPOINT}\",\n  \"scopes\":[\"https://www.googleapis.com/auth/userinfo.email\",\"openid\"],\n  \"expiration\":${PUB_DEV_PUBLISH_EXPIRATION}\n}\nEOF\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.419921875,
          "content": "name: showcaseview\ndescription: A Flutter package to Showcase/Highlight widgets step by step.\nversion: 4.0.0\nissue_tracker: https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview/issues\nrepository: https://github.com/simformsolutions/flutter_showcaseview\n\nenvironment:\n  sdk: '>=2.18.0 <4.0.0'\n\ndependencies:\n  flutter:\n    sdk: flutter\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n  flutter_lints: 2.0.2\n\nflutter:\n"
        }
      ]
    }
  ]
}