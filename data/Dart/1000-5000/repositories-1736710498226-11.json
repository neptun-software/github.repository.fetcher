{
  "metadata": {
    "timestamp": 1736710498226,
    "page": 11,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "isar/hive",
      "stars": 4143,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.8134765625,
          "content": "*.hive\n.test_coverage.dart\ncoverage_badge.svg\n\n\n# Miscellaneous\n*.class\n*.lock\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Visual Studio Code related\n.vscode/\n\n# Flutter repo-specific\n/bin/cache/\n/bin/mingit/\n/dev/benchmarks/mega_gallery/\n/dev/bots/.recipe_deps\n/dev/bots/android_tools/\n/dev/docs/doc/\n/dev/docs/flutter.docs.zip\n/dev/docs/lib/\n/dev/docs/pubspec.yaml\n/packages/flutter/coverage/\nversion\n\n# packages file containing multi-root paths\n.packages.generated\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.packages\n.pub-cache/\n.pub/\nbuild/\nflutter_*.png\nlinked_*.ds\nunlinked.ds\nunlinked_spec.ds\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n**/android/key.properties\n*.jks\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Coverage\ncoverage/\n\n# JavaScipt\nweb_worker.dart.js*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\n*.dylib\n*.so\n*.dll"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.3173828125,
          "content": "# 4.0.0-dev.2\n\n⚠️ THIS VERSION OF HIVE IS UNSTABLE AND NOT READY FOR PRODUCTION USE ⚠️\n\nThis is a complete rewrite of Hive. It is not compatible with older versions of Hive yet.\n\nHive now uses Isar internally which brings all the benefits of a native database to Hive.\n\n### Enchantments\n\n- Much more resource efficiency\n- Support for access from multiple isolates\n- Support for transactions\n- No more issues with concurrent access and corruption\n- Vastly reduced startup time\n- No more code generation\n\n# 3.0.0-dev\n\n### Enchantments\n\n- Implemented in-memory storage backend\n- Added `notify` parameter to public APIs\n- Web Worker support\n- Threaded AesCipher support (requires hive_flutter >=2.0.0-dev)\n\n# 2.2.3\n\n### Enhancements\n\n- Exposed `resetAdapters` method for testing - [#1014](https://github.com/hivedb/hive/pull/1014)\n- Removed unnecessary print statement - [#1015](https://github.com/hivedb/hive/pull/1015)\n\n# 2.2.2\n\n### Fixes\n\n- Register DateTime adapter on web - [#983](https://github.com/hivedb/hive/pull/983)\n\n# 2.2.1\n\n### Fixes\n\n- Retracted hive@2.2.0 from pub.dev\n- Fixed hive web backend null value exception - [#968](https://github.com/hivedb/hive/pull/968)\n\n# 2.2.0\n\n### Enhancements\n\n- Added multiple storage backends for web - [#956](https://github.com/hivedb/hive/pull/956)\n\n# 2.1.0\n\n### Fixes\n\n- Do not return uninitialized box - [#916](https://github.com/hivedb/hive/pull/916)\n\n### Enhancements\n\n- Adapter type inheritance - [#927](https://github.com/hivedb/hive/pull/927)\n- UTF8 keys - [#928](https://github.com/hivedb/hive/pull/928)\n\n# 2.0.6\n\n### Fixes\n\n- Fixed issue caused database to crash when executing crash recovery - [#914](https://github.com/hivedb/hive/pull/914)\n\n# 2.0.5\n\n### Enhancements\n\n- Get IndexedDB selectively based on window property - [#802](https://github.com/hivedb/hive/pull/802)\n- Added `path` parameter to `boxExists` and `deleteBoxFromDisk` methods - [#776](https://github.com/hivedb/hive/pull/776)\n- Added `flush` method to boxes - [#852](https://github.com/hivedb/hive/pull/852)\n\n### Fixes\n\n- Don't loose track of box objects if init crashes - [#846](https://github.com/hivedb/hive/pull/846)\n\n# 2.0.4\n\n### Enhancements\n\n- Adds default value support to hive_generator generated class adapters\n\n# 2.0.3\n\n### Fixes\n\n- Fix regression where lists are no longer growable - [#631](https://github.com/hivedb/hive/pull/631)\n\n# 2.0.2\n\n### Fixes\n\n- `HiveObjectMixin` not assigning box to object - [#618](https://github.com/hivedb/hive/issues/618)\n\n# 2.0.1\n\n### Fixes\n\n- `BoxEvent` value is `null` when watching a `LazyBox` - [#592](https://github.com/hivedb/hive/pull/592)\n- Allow calling `.init()` multiple times, instead of throwing error Hive will print warning to console\n- Hive will warn developers when registering adapters for `dynamic` type\n\n# 2.0.0\n\n### Fixes\n\n- Stable null-safety version\n\n# 1.6.0-nullsafety.2\n\n### Fixes\n\n- Added `defaultValue` property to `@HiveField()` annotation - [#557](https://github.com/hivedb/hive/pull/557)\n\n# 1.6.0-nullsafety.1\n\n### Fixes\n\n- Changed `meta` dependency version to `^1.3.0-nullsafety` to support null-safety\n\n# 1.6.0-nullsafety.0\n\n### Breaking changes\n\n- Migrate to null-safety - [#521](https://github.com/hivedb/hive/pull/521)\n- Update minimum Dart sdk constraint to 2.12.0-0.\n- In order to generate null-safe code use hive_generator >= 0.9.0-nullsafety.0\n\n# 1.5.0-pre\n\n### Enhancements\n\n- Timezone support for DateTime - [#419](https://github.com/hivedb/hive/issues/419)\n\n# 1.4.4+1\n\n### Fixes\n\n- Browser support for `BackendManager.boxExists(boxName, path)` - [#451](https://github.com/hivedb/hive/issues/451)\n\n# 1.4.4\n\n### Fixes\n\n- Edge browser support - [#357](https://github.com/hivedb/hive/issues/357)\n\n# 1.4.3\n\n### Enhancements\n\n- Added `Hive.ignoreTypeId(typeId)` - [#397](https://github.com/hivedb/hive/pull/397)\n\n### Fixes\n\n- `open(Lazy)Box` can potentially open a box twice - [#345](https://github.com/hivedb/hive/issues/345)\n- Remove extra byte reservation in writeBoolLis - [#398](https://github.com/hivedb/hive/pull/398)\n\n# 1.4.2\n\n### Fixes\n\n- Fixed dependency issues and minor improvements\n\n# 1.4.1+1\n\n### Other\n\n- Added docs to all public members\n\n# 1.4.1\n\n### Enhancements\n\n- Minor performance improvements\n\n### Fixes\n\n- When a database operation failed, subsequent operations would not be performed\n\n### Other\n\n- Fixed GitHub homepage path\n\n# 1.4.0+1\n\n### Enhancements\n\n- Minor performance improvements\n\n### Fixes\n\n- Allow more versions of `crypto`\n\n# 1.4.0\n\n### Enhancements\n\n- ~1000% encryption / decryption performance improvement\n- Added option to implement custom encryption algorithm\n- Added `box.valuesBetween(startKey, endKey)`\n- Allow tree shaking to drop encryption engine if no encryption is used\n\n### Fixes\n\n- `Hive.deleteBoxFromDisk()` did not work for boxes with upper-case names\n\n### More\n\n- Deprecated `encryptionKey` parameter. Use `Hive.openBox('name', encryptionCipher: HiveAesCipher(yourKey))`.\n- Dropped `pointycastle` dependency\n- Dropped `path` dependency\n\n# 1.3.0\n\n_Use latest version of `hive_generator`_\n\n### Breaking changes\n\n- `TypeAdapters` and `@HiveType()` now require a `typeId`\n- `Hive.registerAdapter()` does not need a `typeId` anymore.\n- Removed `BinaryReader.readAsciiString()`\n- Removed `BinaryWriter.writeAsciiString()`\n\n### Enhancements\n\n- New documentation with tutorials and live code\n\n### Fixes\n\n- `box.clear()` resets auto increment counter\n\n### More\n\n- Not calling `Hive.init()` results in better exception\n\n# 1.2.0\n\n### Breaking changes\n\n- Removed the `Hive.path` getter\n- Removed `Hive.openBoxFromBytes()` (use the `bytes` parameter of `Hive.openBox()` instead)\n- `LazyBox` and `Box` now have a common parent class: `BoxBase`\n- Lazy boxes need to be opened using `Hive.openLazyBox()`\n- Open lazy boxes can be acquired using `Hive.lazyBox()`\n- Box name bug resolved (more information below)\n\n### Enhancements\n\n- Support for relationships, `HiveLists` (see docs for details)\n- Support for inheritance\n- Lazy boxes can now have a type argument `LazyBox<YourModel>`\n- Added method to delete boxes without opening them `Hive.deleteBoxFromDisk()`\n- Added `path` parameter to open boxes in a custom path\n- Improved documentation\n\n### Fixes\n\n- `HiveObjects` have not been initialized correctly in lazy boxes\n- Fixed bug where uppercase box name resulted in an uppercase filename\n- Fixed compaction bug which caused corrupted boxes\n- Fixed bug which did not allow the key `0xFFFFFFFF`\n- Fixed bug where not all `BoxEvent`s have been broadcasted\n\n### More\n\n- Changed type of `encryptionKey` from `Uint8List` to `List<int>`\n\n### Important:\n\nDue to a bug in previous Hive versions, boxes whose name contains uppercase characters were stored in a file that also contains upper case characters (e.g. 'myBox' -> 'myBox.hive').\n\nTo avoid different behavior on case sensitive file systems, Hive should store files with lower case names. This bug has been resolved in version 1.2.0.\n\nIf your box name contains upper case characters, the new version will not find a box stored by an older version. Please rename the hive file manually in that case.  \nThis also applies to the web version.\n\n# 1.1.1\n\n### Breaking changes\n\n- `object.delete()` now throws exception if object is not stored in a box\n\n### Fixes\n\n- Fixed bug where `object.save()` would fail on subsequent calls\n\n# 1.1.0+2\n\n### Fixes\n\n- Fixed bug that it was not possible to open typed boxes (`Box<E>`)\n\n# 1.1.0+1\n\n### Fixes\n\n- Fixed bug that corrupted boxes were not detected\n\n# 1.1.0\n\n### Breaking changes\n\n- Changed return type of `addAll()` from `List<int>` to `Iterable<int>`.\n- Removed the option to register `TypeAdapters` for a specific box. E.g. `box.registerTypeAdapter()`.\n- `getAt()`, `putAt()`, `deleteAt()` and `keyAt()` no longer allow indices out of range.\n\n### Enhancements\n\n- Added `HiveObject`\n- Boxes have now an optional type parameter `Box<E>`\n- Support opening boxes from assets\n\n### Fixes\n\n- Fixed bug which was caused by not awaiting write operations\n- Fixed bug where custom compaction strategy was not applied\n- Hive now locks box files while they are open to prevent concurrent access from multiple processes\n\n### More\n\n- Improved performance of `putAll()`, `deleteAll()`, `add()`, `addAll()`\n- Changed `values` parameter of `addAll()` from `List` to `Iterable`\n- Improved documentation\n- Preparation for queries\n\n# 1.0.0\n\n- First stable release\n\n# 0.5.1+1\n\n- Change `keys` parameter of `deleteAll` from `List` to `Iterable`\n- Fixed bug in `BinaryWriter`\n\n# 0.5.1\n\n- Fixed `Hive.init()` bug in browser\n- Fixed a bug with large lists or strings\n- Improved box opening time in the browser\n- Improved general write performance\n- Improved docs\n- Added integration tests\n\n# 0.5.0\n\n- Added `keyComparator` parameter for custom key order\n- Added `isEmpty` and `isNotEmpty` getters to box\n- Added support for reading and writing subclasses\n- Removed length limitation for Lists, Maps, and Strings\n- Greatly improved performance of storing Uint8Lists in browser\n- Removed CRC check in the browser (not needed)\n- Improved documentation\n- TypeIds are now allowed in the range of 0-223\n- Fixed compaction\n- Fixed writing longer Strings\n- **Breaking:** Binary format changed\n\n# 0.4.1+1\n\n- Document all public APIs\n- Fixed flutter_web error\n\n# 0.4.1\n\n- Allow different versions of the `path` package\n\n# 0.4.0\n\n- Added `BigInt` support\n- Added `compactionStrategy` parameter\n- Added automatic crash recovery\n- Added `add()` and `addAll()` for auto-increment keys\n- Added `getAt()`, `putAt()` and `deleteAt()` for working with indices\n- Support for int (32 bit unsigned) keys\n- Non-lazy boxes now notify their listeners immediately about changes\n- Bugfixes\n- More tests\n- **Breaking:** Open boxes with `openBox()`\n- **Breaking:** Writing `null` is no longer equivalent to deleting a key\n- **Breaking:** Temporarily removed support for transactions. New API design needed. Will be coming back in a future version.\n- **Breaking:** Binary format changed\n- **Breaking:** API changes\n\n# 0.3.0+1\n\n- Bugfix: `Hive['yourBox']` didn't work with uppercase box names\n\n# 0.3.0\n\n- Big step towards stable API\n- Support for transactions\n- Annotations for hive_generator\n- Bugfixes\n- Improved web support\n- **Breaking:** `inMemory` -> `lazy`\n- **Breaking:** Binary format changed\n\n# 0.2.0\n\n- Support for dart2js\n- Improved performance\n- Added `inMemory` option\n- **Breaking:** Minor API changes\n- **Breaking:** Changed Endianness to little\n- **Breaking:** Removed Migrator\n\n# 0.1.1\n\n- Downgrade to `meta: ^1.1.6` to support flutter\n\n# 0.1.0\n\n- First release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.98828125,
          "content": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/hivedb/hive/master/.github/hive.svg?sanitize=true\" width=\"300px\">\n</p>\n<h2 align=\"center\">Fast, Enjoyable & Secure NoSQL Database</h2>\n\n<p align=\"center\">\n  <a href=\"https://pub.dev/packages/hive\">\n    <img src=\"https://img.shields.io/pub/v/hive?label=pub.dev&labelColor=333940&logo=dart\">\n  </a>\n  <a href=\"https://github.com/isar/hive/actions/workflows/Dart CI.yaml\">\n    <img src=\"https://img.shields.io/github/actions/workflow/status/isar/hive/test.yml?branch=main&label=tests&labelColor=333940&logo=github\">\n  </a>\n  <a href=\"https://app.codecov.io/gh/isar/hive\">\n    <img src=\"https://img.shields.io/codecov/c/github/isar/hive?logo=codecov&logoColor=fff&labelColor=333940\">\n  </a>\n  <a href=\"https://t.me/isardb\">\n    <img src=\"https://img.shields.io/static/v1?label=join&message=Isar%20%26%20Hive&labelColor=333940&logo=telegram&logoColor=white&color=229ED9\">\n  </a>\n  <a href=\"https://twitter.com/simcdev\">\n    <img src=\"https://img.shields.io/twitter/follow/simcdev?style=social\">\n  </a>\n</p>\n\nHive is a lightweight and buzzing-fast key-value database made for Flutter and Dart.\n\n## Features 🌟\n\n- 🌍 Bee everywhere: mobile, desktop, browser\n- 🚀 Buzzing speed: Faster than a bee on caffeine!\n- 💡 Sweet, powerful, & intuitive API\n- 🔐 Queen's Guard: Encryption built right in.\n- 🧠 Thinking in swarms: Multi-isolate support.\n- 🍯 Everything a bee needs and more!\n\n> Bee fact: A single bee can visit 5,000 flowers in a day!\n\n## Buzz into Action 🐝\n\nFeeling the excitement? Great! Let's help you take your first flight with Hive.\n\n#### 🔗 Add dependencies\n\nTo kickstart the journey add `hive`, `isar_flutter_libs` and `path_provider` to your `pubspec.yaml`.\n\n```yaml\ndependencies:\n  hive: ^4.0.0\n  isar_flutter_libs: ^4.0.0-dev.13\n  path_provider: ^2.1.0\n```\n\nPssst! 🤫 `path_provider` will help you to find the optimal directory for each platform.\n\n#### 🏡 Designate a Home\n\nHive needs a place to call home. Using `path_provider` we can find a valid directory.\n\n```dart\nvoid main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  final dir = await getApplicationDocumentsDirectory();\n  Hive.defaultDirectory = dir.path;\n\n  // ...\n}\n```\n\n#### 🏁 And... Action!\n\nWoohoo! You're all set. Jump in and let your Hive adventure begin!\n\n```dart\nimport 'package:hive/hive.dart';\n\nfinal box = Hive.box();\nbox.put('name', 'David');\n\nfinal name = box.get('name');\nprint('Name: $name');\n```\n\n> Bee fact: Honeybees can fly at a speed of up to 30 kilometers per hour!\n\n# 📚 Hive Handbook\n\nIn Hive, data is neatly organized into containers known as boxes. Think of boxes as tables you'd find in SQL, but far more flexible — they don't stick to a set structure and can contain a variety of data. Boxes can be encrypted to store sensitive data.\n\n## Table of Contents\n\nWant to jump to a specific section? Here's a handy table of contents:\n\n- [Opening Boxes](#-opening-boxes)\n- [Closing Boxes](#-bidding-adieu-closing-boxes)\n- [Inserting](#-filling-the-honeycomb-inserting-data)\n- [Reading](#-extracting-honey-i-mean-data)\n- [Deleting](#-deleting-data)\n- [Using Boxes like Lists](#-using-boxes-like-lists)\n- [Type safety](#-type-safety)\n- [Non-primitive Objects](#-bee-yond-the-basics-non-primitive-objects)\n- [Transactions](#-transactions)\n- [Isolates](#-the-isolate-dance)\n- [FAQ](#-buzzworthy-questions)\n\n> Bee fact: Bees have five eyes – three simple eyes on top of the head, and two compound eyes, with numerous hexagonal facets.\n\n### 📦 Opening Boxes\n\nYour journey with Hive begins with opening your first box. Trust me, it's unbee-lievably easy:\n\n```dart\nfinal box = Hive.box(name: 'myBox');\n```\n\nWhen you call `Hive.box(name: 'myBox')` for the first time with a given name, Hive will create a new box for you. If you call it again with the same name, Hive will return the already existing box.\n\nYou can also use `Hive.box()` without providing a name. In this case, Hive will return the default box.\n\nThere are optional parameters you can pass to `Hive.box()`:\n\n| Parameter       | Description                                                               |\n| --------------- | ------------------------------------------------------------------------- |\n| `name`          | Label your box with a distinct name                                       |\n| `directory`     | Select a home for your box. If omitted, Hive uses the `defaultDirectory`. |\n| `encryptionKey` | Hand over this key, and Hive will encrypt your box. Keep it safe!         |\n| `maxSizeMiB`    | The maximum size of the box in MiB. Go for a modest number.               |\n\n> Bee fact: Beeswax, which is secreted from the abdomen of worker bees, is used to construct the honeycomb.\n\n### 🌂 Bidding Adieu: Closing Boxes\n\nIt's not advised to close boxes that might be accessed again. This prevents unnecessary overhead of reopening the box and ensures smooth data retrieval.\n\nTo close a box just call `box.close()`. Wipe the box from the face of the earth with `box.deleteFromDisk()`.\n\n> Bee fact: When a bee finds a good source of nectar, it flies back to the hive and shows its friends where the nectar source is by doing a dance.\n\n### ✍️ Filling the Honeycomb: Inserting Data\n\nOnce we have a box, it's time to fill it with sweet data! At its core, a box is just a key-value store. String keys are mapped to arbitrary primitive values. You can think of a box as a persisted `Map<String, dynamic>`.\n\n```dart\nfinal box = Hive.box();\nbox.put('danceMoves', 'Waggle Dance');\nbox.put('wingSpeed', 200);\n```\n\nUpdating values? If a particular key already exists, Hive simply updates its corresponding value. And complex types like lists and maps? They're in too!\n\n```dart\nbox.put('friends', ['Buzzy', 'Stinger', 'Honey']);\nbox.put('memories', {'firstFlight': 'Sunny Day', 'bestNectar': 'Rose'});\n```\n\nInstead of `.put()` you prefer the syntax of maps? Hive gets you:\n\n```dart\nbox['danceMoves'] = 'Round Dance';\nbox['wingSpeed'] = 220;\n```\n\nGot a bucket of honey facts? Drop them all at once with `box.putAll()`:\n\n```dart\nbox.putAll({'favoriteFlower': 'Lavender', 'wingSpeed': 210});\n```\n\n> Bee fact: A single bee colony can produce anywhere from 30 to 100 pounds of honey in a year, depending on the availability of nectar sources.\n\n### 👀 Extracting Honey... I mean, Data!\n\nNeed a snippet of info from your Hive? No need to don the beekeeper suit; just scoop it out using `box.get()` or `box.getAll()`. If a key doesn't exist, `box.get()` simply return a `null`. But fret not; you can tell it to have a backup plan:\n\n```dart\nfinal box = Hive.box(name: 'beeees');\nfinal fav = box.get('favoriteFlower');\nfinal moves = box.get('danceMoves', defaultValue: 'waggle');\n```\n\nOh, and if you're feeling fancy, use the `[]` operator for a more stylish approach:\n\n```dart\nfinal fav = box['favoriteFlower'];\nfinal moves = box['danceMoves'] ?? 'waggle';\n```\n\n> Bee fact: Worker bees are the only bees most people ever see flying around outside the hive. They're female, and their roles are to forage for food, build and protect the hive, and more.\n\n### 🧹 Deleting Data\n\nTime for some spring cleaning in the hive! To remove a single entry from your box, use `box.delete()`:\n\n```dart\nfinal deleted = box.delete('lavenderHoney');\nprint('Honey eaten: $deleted'); // Honey eaten: true\n```\n\nPerhaps it's time for a complete reset, making space for a fresh batch of honey. If you're looking to remove all key-value pairs from a box, use `box.clear()`:\n\n```dart\nbox.clear();\n```\n\n> Bee fact: Bees have been around for more than 30 million years! Their long history predates the existence of humans and even dinosaurs.\n\n### ✨ Using Boxes like Lists\n\nIn the bee world, honeycombs aren't just random compartments; they're methodically organized. Similarly, while we've been viewing Hive boxes as maps so far, they can be used just like lists:\n\n```dart\nfinal box = Hive.box();\n\nbox.add('Rose');\nbox.add('Tulip');\n\nprint(box.getAt(0)); // Rose\nprint(box.getAt(1)); // Tulip\n```\n\nBut remember, bees can't retrieve honey from a comb that's empty or doesn't exist. Likewise, index-based operations will throw an error if you try an index out of bounds:\n\n```dart\nfinal box = Hive.box();\nbox.add('Daisy');\nprint(box.getAt(1)); // Error! This will make the bees buzz in confusion\n```\n\nEven if we insert a key-value pair we can still access the values by index.\n\n```dart\nfinal box = Hive.box();\n\nbox.add('Lily');\nbox.put('key', 'Orchid');\n\nprint(box.getAt(0)); // Lily\nprint(box.getAt(1)); // Orchid\n```\n\nOf course, we can also use the `[]` operator in combination with indexes :\n\n```dart\nfinal box = Hive.box();\n\nbox.add('Marigold');\nprint(box[0]); // Marigold\n\nbox[0] = 'Daffodil';\nbox[1] = 'Bluebell'; // Error! This will get the bees in a whirl\n```\n\n> Bee fact: To produce one pound of honey, a hive's bees must visit 2 million flowers and fly over 55,000 miles.\n\n### 🛡️ Type safety\n\nSafety is the bee's priority! To keep your data sweet and pure boxes have an optional generic type parameter. It allows you to store only values of a specific type in a box:\n\n```dart\nfinal box = Hive.box<String>(name: 'BeeTreasures');\nbox.put('DaisyDance', 'SweetNectarShake');\nbox.put('RoseRumba', 'GoldenPollenParty');\nbox.put('TulipTango', 777); // Error - You can't fool the bees!\n```\n\nMake sure to use the same type whenever you get the box. Otherwise, you'll get an error:\n\n```dart\nHive.box<int>(name: 'BeeTreasures'); // Error - We already have a String box!\n```\n\n> Bee fact: Bees have two stomachs. One is for eating, and the other is for storing nectar collected from flowers or water so they can carry it back to their hive. Talk about a sweet backpack!\n\n### 🧩 Bee-yond the Basics: Non-primitive Objects\n\nHive goes beyond storing just basic data types! Along with primitives, lists, and maps, Hive can store any Dart object of your liking. The only buzz you need to know? Your object should come equipped with a `.fromJson()` and `.toJson()` method:\n\n```dart\nclass Bee {\n  Bee({required this.name, required this.role});\n\n  factory Bee.fromJson(Map<String, dynamic> json) => Bee(\n    name: json['name'] as String,\n    role: json['role'] as String,\n  );\n\n  final String name;\n  final String role;\n\n  Map<String, dynamic> toJson() => {\n    'name': name,\n    'role': role,\n  };\n}\n```\n\nBefore our bee-friends can buzz around in Hive, you need to do the beekeeper's job and register the `Bee` class:\n\n```dart\nHive.registerAdapter('Bee', Bee.fromJson);\n```\n\nNow, you're all set to let your bees fly:\n\n```dart\nfinal box = Hive.box();\n\nfinal bumble = Bee(name: 'Bumble', role: 'Worker');\nbox.put('BumbleID', bumble);\n\nprint(box.get('BumbleID')); // Bumble - Worker\n```\n\n> Bee fact: Bees are responsible for pollinating about one-third of the world's food crops.\n\n### 🪢 Transactions\n\nTransactions are an efficient way to update multiple values at once. They are also useful if you want to make sure that a Box is not changed by other code while you are working with it.\n\n```dart\nfinal box = Hive.box();\n\nbox.write(() {\n  box.store('nectar1', 'GoldenNectar');\n  box.store('nectar2', 'WildflowerBrew');\n  box.store('nectar3', 'CloverDew');\n});\n\nbox.read(() {\n  box.get('nectar1'); // GoldenNectar\n});\n```\n\nChanges made in a transaction are always atomic. Either all changes are applied or none of them. So if an error occurs during a transaction, the box will not be changed.\n\n```dart\nfinal box = Hive.box();\nbox.put('honeyLevel', 5);\n\nbox.write(() {\n  box.put('honeyLevel', 6);\n  throw Exception('Oh no!!!');\n});\n\nprint(box.get('honeyLevel')); // 5\n```\n\n> Bee fact: Bees can recognize human faces, and they can even be trained to associate a picture of a face with sweet treats!\n\n### 💃 The Isolate Dance\n\nJust like a beehive where multiple bees work simultaneously, you can buzz into Hive from various Isolates at the same time. This nifty trick is great when you wish to keep those database activities separate from your UI thread.\n\nHive comes with a sweet `Hive.compute()` method that runs a function in a different isolate. The best part? It also does the honey-making job of setting up and tidying resources for you.\n\n```dart\n// Opening the bee's box\nfinal box = Hive.box();\n\n// Storing some sweet nectar\nbox.put('nectarType', 'wildflower');\n\nawait Hive.compute(() {\n  // Accessing the same box from another worker bee\n  final box = Hive.box();\n  print(box.get('nectarType')); // wildflower\n\n  // Updating the nectar's quality\n  box.put('nectarType', 'lavender');\n});\n\n// Tasting the updated honey flavor\nprint(honeycomb.get('nectarType')); // lavender\n```\n\nJust remember, while the bees dance in harmony, ensure your Isolates do too! 🐝🎶\n\n> Bee fact: Bees have two pairs of wings, and they beat 11,400 times per minute.\n\n### 🍯 Buzzworthy Questions\n\n#### 🐝 To bee or not to bee: Hive or Isar?\n\n> It's not always black and yellow! 🖤💛 Both Hive and Isar have their sweet spots. Hive is a lightweight wrapper around Isar so if you are looking for a simple key-value store, Hive might be enough. Isar is the way to go if you need queries, relations, and more advanced features.\n\n#### 🚀 Will using Hive make my app as fast as a bee?\n\n> While we can't promise your app will gain wings, 🦋 Hive sure will give it the speed it deserves. Hive is very resource efficient and optimized for mobile devices. Flutter like a butterfly, sting like a bee! 🐝\n\n#### 🗂 Where in the beehive does Hive hide my honey... I mean, data?\n\n> Remember the `defaultDirectory` we set at the beginning? 📍 That's where Hive stores your data in a file named `yourBoxName.isar` or `yourBoxName.sqlite`.\n\n#### 📸 I've got some bee-autiful images! Can I store them directly in Hive?\n\n> While you might be tempted to put those pics right into Hive, 🖼️ it's best to store your images and other binary data as files outside Hive. You can then store the file path in Hive. Think of it like leaving honey out in the open; it's better to keep it neatly stored in the appropriate place. 🏺\n\n#### 😲 Yikes! What if my app meets an untimely demise (gets killed)? What becomes of my Hive?\n\n> No need for a bee-mergency! 🚨 If your app buzzes off unexpectedly, Hive ensures that your data remains safe and sound. Transactions are atomic, so either all changes are applied or none of them. If an error occurs during a transaction, the box will not be changed.\n\n#### 🔐 How does Hive keep our data safe from sticky fingers?\n\n> We've got the queen's guard on duty! 🛡️ If you encrypt your box Hive uses 256-bit AES in CBC mode. Every database page is safeguarded separately, ensuring your sweet stuff remains secure and only accessible to those with the right key. Buzz-worthy protection, right? 🗝️\n\n#### 🤝 When should I rally the troops and use transactions?\n\n> Just like a hive making big decisions together, 🌐 you'll want to use transactions when you have several operations that should be executed together. If one fails, they all fail. It ensures your data stays consistent, safe, and buzzing in harmony! 🎶\n\n#### 🤣 What if I'm allergic to bees?\n\n> No worries! Hive is 100% sting-free, 🚫 although we're pretty sure you'll get a buzz out of its performance.\n\n#### ⏳ Hive operations are synchronous. Doesn't that make the bee waltz a bit slow?\n\n> Hive is incredibly fast and efficient. 🚄 It's built on top of Isar, a high-performance database engine. If you want to keep database operations away from your UI isolate, you can use `compute()` or `Isolate.run()` to run them in a separate isolate.\n\n#### 📦 How many boxes should a wise beekeeper have?\n\n> While the sky's the limit in the world of bees, 🌌 in Hive, every box becomes a separate file. So, even if you're buzzing with excitement, it's wise not to overdo it. 📚\n\n### 📜 License\n\n```\nCopyright 2023 Simon Choi\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.283203125,
          "content": "include: package:very_good_analysis/analysis_options.yaml\nanalyzer:\n  exclude:\n    - \"**/*.g.dart\"\n\nlinter:\n  rules:\n    cascade_invocations: false\n    use_string_in_part_of_directives: false\n    always_put_required_named_parameters_first: false\n    use_setters_to_change_properties: false\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.529296875,
          "content": "name: hive\ndescription: Lightweight and buzzing-fast key-value database made for Flutter and Dart.\nversion: 4.0.0-dev.2\nrepository: https://github.com/isar/hive\nhomepage: https://github.com/isar/hive\nissue_tracker: https://github.com/isar/hive/issues\nfunding:\n  - https://github.com/sponsors/simc/\ntopics:\n  - database\n  - hive\n  - nosql\n  - encryption\n  - storage\n\nenvironment:\n  sdk: \">=3.1.0 <4.0.0\"\n\ndependencies:\n  isar: ^4.0.0-dev.13\n  meta: ^1.9.0\n\ndev_dependencies:\n  build_runner: ^2.4.6\n  test: ^1.23.0\n  very_good_analysis: ^5.0.0\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}