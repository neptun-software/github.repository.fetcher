{
  "metadata": {
    "timestamp": 1736710601514,
    "page": 225,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rive-app/rive-flutter",
      "stars": 1258,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1123046875,
          "content": "test/assets/** filter=lfs diff=lfs merge=lfs -text\ntest/goldens/**/images/*.png filter=lfs diff=lfs merge=lfs -text"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.7392578125,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\npubspec.lock\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\nios/rive-cpp\nios/harfbuzz\nmacos/rive-cpp\nmacos/harfbuzz\nmacos/SheenBidi\nwasm/bin/\nwasm/Makefile\nwasm/render_font.make\nnode_modules\nwasm/*.make\nwasm/dependencies\nshared_lib/dependencies\nshared_lib/bin\n*.make\nMakefile\n"
        },
        {
          "name": ".lua-format",
          "type": "blob",
          "size": 0.884765625,
          "content": "column_limit: 80\nindent_width: 4\nuse_tab: false\ntab_width: 4\ncontinuation_indent_width: 4\nspaces_before_call: 1\nkeep_simple_control_block_one_line: true\nkeep_simple_function_one_line: true\nalign_args: true\nbreak_after_functioncall_lp: false\nbreak_before_functioncall_rp: false\nspaces_inside_functioncall_parens: false\nspaces_inside_functiondef_parens: false\nalign_parameter: true\nchop_down_parameter: false\nbreak_after_functiondef_lp: false\nbreak_before_functiondef_rp: false\nalign_table_field: true\nbreak_after_table_lb: true\nbreak_before_table_rb: true\nchop_down_table: true\nchop_down_kv_table: true\ntable_sep: \",\"\ncolumn_table_limit: column_limit\nextra_sep_at_table_end: false\nspaces_inside_table_braces: false\nbreak_after_operator: true\ndouble_quote_to_single_quote: false\nsingle_quote_to_double_quote: false\nspaces_around_equals_in_field: true\nline_breaks_after_function_body: 1\nline_separator: input\n"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 1.48828125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled.\n\nversion:\n  revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n  channel: unknown\n\nproject_type: plugin\n\n# Tracks metadata for the flutter migrate command\nmigration:\n  platforms:\n    - platform: root\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: android\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: ios\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: macos\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: web\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: windows\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n\n  # User provided section\n\n  # List of Local paths (relative to this file) that should be\n  # ignored by the migrate tool.\n  #\n  # Files that are not part of the templates will be ignored by default.\n  unmanaged_files:\n    - 'lib/main.dart'\n    - 'ios/Runner.xcodeproj/project.pbxproj'\n"
        },
        {
          "name": ".rive_head",
          "type": "blob",
          "size": 0.0400390625,
          "content": "5893a123773ecccb37dd35568030a4c18a041fa7\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 21.650390625,
          "content": "## 0.13.20\n\n- Fix: Windows/Linux building. Undefined symbol `hb_style_get_value`, see issue [437](https://github.com/rive-app/rive-flutter/issues/437)\n  \n## 0.13.19\n\n- Adds the `isTouchScrollEnabled` property to `RiveAnimation` and `Rive` widgets. When `true` allows scrolling behavior to occur on Rive widgets when a touch/drag action is performed on touch-enabled devices. Defauls to `false`, which means Rive will \"absorb\" the pointer down event and a scroll cannot be triggered if the touch occured within a Rive Listener area. Setting to `true` will impact Rive's capability to handle multiple gestures simultaneously.\n- Bump to latest `rive_common`, v0.4.14.\n\n## 0.13.18\n\n- Bump to latest `rive_common`, v0.4.13. Resolves [issues building rive_common downstream](https://github.com/rive-app/rive-flutter/issues/354#issuecomment-2491004291).\n\n## 0.13.17\n\n- Expose `speedMultiplier` on the `RiveAnimation` and `Rive` widgets. With this you can adjust the playback speed of an animation or state machine. Thanks [tguerin](https://github.com/tguerin) for the contribution. See [423](https://github.com/rive-app/rive-flutter/pull/423)\n\n## 0.13.16\n\n- Avoid audio init on empty assets. See PR [431](https://github.com/rive-app/rive-flutter/pull/431).\n\n## 0.13.15\n\n- Fix audio crashing iOS\n- Add new text resizing and layout features. Resolves [422](https://github.com/rive-app/rive-flutter/issues/422).\n\n## 0.13.14\n\n- Reduce audio polling and unneeded runtime calculations around audio. Resolves issue [411](https://github.com/rive-app/rive-flutter/issues/411)\n\n## 0.13.13\n\n- Update Android `minSdkVersion` from 16 to 19\n- Update `kotlin_version` from '1.6.10' to '1.7.10'\n- Specify the Android NDK version Rive should use by setting `rive.ndk.version` in `gradle.properties`. For example: `rive.ndk.version=26.3.11579264`. See issue [398](https://github.com/rive-app/rive-flutter/issues/398).\n- Expand supported `web` package range to `web: \">=0.5.1 <2.0.0\"`. Resolves issues [413](https://github.com/rive-app/rive-flutter/issues/413) and [415](https://github.com/rive-app/rive-flutter/issues/415).\n- Fix iOS audio issue, see [416](https://github.com/rive-app/rive-flutter/issues/416)\n- Various other fixes and improvements to support new Editor features\n\n## 0.13.12\n\n- Fix [410](https://github.com/rive-app/rive-flutter/issues/410) Rive not compatible with Flutter web.\n\n## 0.13.11\n\n- Add `applyWorkaroundToRiveOnOldAndroidVersions`. Experimental workaround when loading native libraries on Android 6 (see [this issue](https://github.com/rive-app/rive-flutter/issues/403)). The method should be called before using any Rive APIs.\n\n## 0.13.10\n\n- Fix [408](https://github.com/rive-app/rive-flutter/issues/408) and [409](https://github.com/rive-app/rive-flutter/issues/409), Rive never reaching a settled state when the widget is not visible (paint method not called).\n\n## 0.13.9\n\n- Preperation for data binding ([databinding](https://github.com/rive-app/rive-flutter/commit/6ceb7a544e7124d303259f7d032641e5b38f7fc1), [data binding data context](https://github.com/rive-app/rive-flutter/commit/6d002300a6f0fd19f6dacac58a499ccc903a214d), [databinding add boolean](https://github.com/rive-app/rive-flutter/commit/90b8c81f0e496502b70db4d550341f5acabbbea6)).\n- Layout fixes and improvements ([animations for layouts](https://github.com/rive-app/rive-flutter/commit/8068e48eb2faa2a13eab1ba858b4e0737cf0265b), [layout UX fixes](https://github.com/rive-app/rive-flutter/commit/21bd3765ddc3ef8c3b1f0199f75eae21434cf52b)).\n- Android example project [fix](https://github.com/rive-app/rive-flutter/commit/9951f912df4c6f0574f57d5a152cd36e6ad2d7e0).\n\n## 0.13.8\n\n- Add `key` property to `Rive` widget.\n- Nested linear animations report events up to parent artboards. Previously, only nested state machines could report events so that listeners in parent artboards could listen for them.\n\n## 0.13.7\n\n- Add `getComponentWhereOrNull` on `Artboard`, to find a component that matches the given predicate. This can be used instead of `forEachComponent` as it allows exiting early.\n\n## 0.13.6\n\n- Add `getBoolInput(name, path)`, `getTriggerInput(name, path)`, and `getNumberInput(name, path` on `Artboard` to set nested inputs (inputs on nested artboards), see [the documentation](https://rive.app/community/doc/state-machines/docxeznG7iiK#nested-inputs).\n\n## 0.13.5\n\n- Migrates to `dart:js_interop` and `package:web` APIs.\n- DEPRECATED: `RiveFile.initializeText` - use `RiveFile.initialize` instead. This now initializes the Rive audio, text, and layout engine. Call `await RiveFile.initialize()` before doing `RiveFile.import`. `RiveFile.asset`, `RiveFile.network`, and `RiveFile.file` will call initialize automatically if it has not been initialized. Alternatively, you can also call `unawaited(RiveFile.initialize());` in the `main` method on app start to make the first graphic load faster.\n\n## 0.13.4\n\n- Fixed an issue with [TickerMode](https://api.flutter.dev/flutter/widgets/TickerMode-class.html) value not pausing a Rive graphic. Thanks to 'jaggernod' for the [contribution](https://github.com/rive-app/rive-flutter/pull/380).\n- Bump rive_common to pick up the Privacy manifest for iOS & macOS runtimes\n\n## 0.13.2\n\n- DEPRECATED: `Extension` and `Type` enum on `FileAsset`. You can create a custom maintained version, see example: https://gist.github.com/HayesGordon/5d37d3fb26f54b2c231760c2c8685963\n- BREAKING: Removal of previously deprecated methods `assetResolver` on `RiveFile.network` and class `NetworkAssetResolver`\n- Add Audio out-of-band, with examples.\n- Support for asset audio volume.\n- Fixed an issue with audio decoder in web build.\n- Adds `play()`/`pause()` and `isPlaying` to an `Artboard`. This completely stops the artboard from playing (including nested artboards) and stops/starts the animation ticker. Pausing an artboard can be used to reduce resources used for Rive graphics that aren't visible on screen.\n- Adds `getBoolInput`, `getTriggerInput`, `getNumberInput`, and `triggerInput` on `StateMachineController` to easily retrieve state machine inputs and fire triggers. This can be used instead of `findInput` and `findSMI`, to easily retrieve an `SMIBool`, `SMINumber`, and `SMITrigger` to manipulate a Rive state machine.\n\n## 0.13.1\n\n- Fixed an issue causing crashes on 32 bit devices\n\n## 0.13.0\n\n- Adds support for Audio.\n- Object Generator adds the ability to override built-in objects with custom objects.\n- Fix [[355](https://github.com/rive-app/rive-flutter/issues/355)] to ensure the Rive render object is attached before handling pointer events.\n\n## 0.12.4\n\n- Adds `behavior` argument to `RiveAnimation` and `Rive`. An enum `RiveHitTestBehavior` specifies how to handle hit testing on an animation. Default is `RiveHitTestBehavior.opaque` - consuming all hit events for the artboard bounds.\n- Collapsed nested artboards don't listen to pointer events anymore\n- Constraints pointing to collapsed targets are not applied\n\n## 0.12.3\n\n- Support for Nested Inputs and Nested Events. See the docs on [Nested Artboards](https://rive.app/community/doc/nested-artboards/docL5SnBgUng).\n\n## 0.12.2\n\n- Fixes an issue when importing interpolators.\n- Increase HTTP dependency range.\n\n## 0.12.1\n\n- Elastic easing.\n\n## 0.12.0\n\n- BREAKING: Changes to `assetLoader` in `RiveFile`. See the Rive docs on [Loading Assets](https://rive.app/community/doc/loading-assets/doct4wVHGPgC) for updated examples.\n\n## 0.11.17\n\n- Timeline based events with new example showing how to play audio when an event fires.\n- More events examples: open url, star rating.\n\n## 0.11.16\n\n- Updates to text engine to support newer version of clang on Windows.\n\n## 0.11.15\n\n- New event system! Listen to events reported by a StateMachine via StateMachineController.addEventListener.\n- Fixes an issue with animations not playing back correctly when a work area is defined.\n\n## 0.11.14\n\n- Refactor how hit testing is performed in `RiveAnimation` and `Rive` widgets. Pointer events (listeners) can now be enabled on the `Rive` widget by setting `enablePointerEvents` to `true` (default is false).\n- Change in how animations advance when using `RiveAnimation` and `Rive` widgets. Now using `Ticker`, which will allow Rive animations to respect `timeDilation` and `TickerMode`. Resolves [187](https://github.com/rive-app/rive-flutter/issues/187), [254](https://github.com/rive-app/rive-flutter/issues/254), [307](https://github.com/rive-app/rive-flutter/issues/307), and [328](https://github.com/rive-app/rive-flutter/issues/328)\n- Support for line spacing.\n\n## 0.11.13\n\n- Initializes Rive's text engine only when necessary when calling any of `RiveFile.asset`, `RiveFile.network`, or `RiveFile.file`.\n- You'll need to manually call `RiveFile.initializeText` when calling `RiveFile.import` directly to use text features. You can optionally only call this if you know the file needs the text engine, or you can determine if it needs it by calling `RiveFile.needsTextRuntime`.\n\n## 0.11.12\n\n- Fixes a memory leak in the text engine.\n\n## 0.11.11\n\n- Fixes an issue with text clipping when baseline is aligned to origin.\n\n## 0.11.10\n\n- Fixes an issue with the origin on the TransformConstraint affecting non-text objects.\n\n## 0.11.9\n\n- Fix [335](https://github.com/rive-app/rive-flutter/issues/335) \\_debugDisposed issue\n- Fix issue showing text when the default font is not available at `assets/fonts/Inter-Regular.ttf` ([338](https://github.com/rive-app/rive-flutter/issues/338)). We will set first valid font we encounter in a rive file as default font instead.\n\n## 0.11.8\n\n- Fix text origin changing updating text offset.\n\n## 0.11.7\n\n- Fix for gradients on text.\n\n## 0.11.6\n\n- Follow path constraint.\n- Expose `useArtboardSize` in `RiveAnimation` widget. Which is a boolean that determines whether to use the inherent size of the artboard, i.e. the absolute size defined by the artboard, or size the widget based on the available constraints only (sized by parent).\n- Add `clipRect` to `RiveAnimation` and `Rive` widgets. Forces the artboard to clip with the provided Rect.\n- Fixed `Rive` widget always applying a clip, regardless of `Artboard.clip` value (set in the Editor).\n- Support for run targeting with text modifiers.\n- Transform constraint can target text origin.\n\n## 0.11.5\n\n- Resolve assets, such as images and fonts, manually. This allows for swapping out image/font assets at runtime, instead of using the embedded versions. See `RiveFile` and `CallbackAssetLoader`.\n- Update `http` package to v1.1.0\n- Fix [[331](https://github.com/rive-app/rive-flutter/issues/331)] - external control on a Joystick not applied\n\nDeprecated:\n\n- `assetResolver` parameter on `RiveFile.network` and `RiveFile.import`. Use `assetLoader` instead - see `CallbackAssetLoader`.\n- `NetworkAssetResolver`, use `CallbackAssetLoader` instead.\n\n## 0.11.4\n\n- Adds interpolation on states feature.\n\n## 0.11.3\n\n- Bumps rive_common to add Android namespace to support Gradle 8 (issue [312](https://github.com/rive-app/rive-flutter/issues/312)).\n\n## 0.11.2\n\n- Add parameter to specify headers on `RiveAnimation.network` widget, and `RiveFile.network`.\n\n## 0.11.1\n\n- Joysticks with custom handle sources.\n\n## 0.11.0\n\n- Joysticks!\n- Bumping to latest rive_common with some changes to AABB math api.\n- Bumping Dart SDK requirements.\n\n## 0.10.4\n\n- Support for Solos.\n\n## 0.10.3\n\n- Fixes animations with negative speed to play from the end with ping pong and one shot animations.\n- Update runtime to consider speed on animation states when playing state machines.\n- Fix edge case with spilled time, by clearing spilled time after an advance cycle.\n\n## 0.10.2\n\n- Performance improvement: No longer drawing components with an opacity of 0.\n- Updated example, see \"Skinning Demo\".\n- Support for negative speeds on linear animations when played back in state machines.\n- Support for overriding speed on animation states.\n\n## 0.10.1\n\n- Fix [[277](https://github.com/rive-app/rive-flutter/issues/277)] and [[278](https://github.com/rive-app/rive-flutter/issues/278)] that resulted in `onInit` being called with each `setState` - thank you [xuelongqy](https://github.com/xuelongqy).\n\n## 0.10.0\n\n- Text support\n- Initialise `RiveAnimation` directly: `RiveAnimation.direct(riveFile)`\n\n## 0.9.1\n\n- Support for Nested Inputs.\n- Updated corner radius logic (matches new editor changes).\n\n## 0.9.0\n\n- Support for Listeners.\n- Fixes for Flutter 3.0 warnings.\n- Initial support for NestedStateMachine\n\n## 0.8.4\n\n- Mesh deform support for image assets, including bone binding and skin deformation.\n- Fixed an issue with references to missing assets.\n- Fixed some warnings.\n\n## 0.8.1\n\n- Support for raster assets!\n\n## 0.7.33\n\n- Fixes issue with nested artboard opacity not updating in sync with the artboard. ['#185](https://github.com/rive-app/rive-flutter/pull/185)\n\n## 0.7.32\n\n- Fixing issues reported by pub.dev ['#180](https://github.com/rive-app/rive-flutter/pull/180)\n\n## 0.7.31\n\n- API Improvements. [`#177`](https://github.com/rive-app/rive-flutter/pull/177)\n- Option to frame origin, same as C++ runtime.\n- RiveScene renderer and controller for making custom Rive vignettes of Rive content with multiple artboards, custom camera movement, etc.\n- New StateMachineController.findSMI to find any StateMachineInput (fixes issue with findInput that cannot distinguish between Boolean and Trigger inputs).\n\n## 0.7.30\n\nFix for setState being called while mounted in RiveAnimation. [`#172`](https://github.com/rive-app/rive-flutter/pull/172)\n\n## 0.7.29\n\n- Runtime support for Nested Artboards, a new Rive feature launching soon. [`#171`](https://github.com/rive-app/rive-flutter/pull/171)\n\n## 0.7.28\n\n- Ability to disable clipping on artboards. [`#161`](https://github.com/rive-app/rive-flutter/pull/161)\n\n## 0.7.27\n\n- Adds support for translation, scale, and rotation constraints.\n\n## 0.7.26\n\n- Adds support for distance constraints. [`#158`](https://github.com/rive-app/rive-flutter/pull/158)\n\n## 0.7.25\n\n- Fixes an issue with bones bound to paths which are also constrained via IK. [`#157`](https://github.com/rive-app/rive-flutter/pull/157)\n\n## 0.7.24\n\n- Support for distance constraints in Flutter. [`#156`](https://github.com/rive-app/rive-flutter/pull/156)\n\n## 0.7.23\n\n- Support for IK constraints in Flutter. [`#153`](https://github.com/rive-app/rive-flutter/pull/153)\n\n## 0.7.22 - (2021-06-22)\n\n- Stroke don't draw when their thickness is 0.\n\n## 0.7.21 - (2021-06-21)\n\n- Adds onStateChange callback to state machine controllers\n\n## 0.7.20 - (2021-06-19)\n\n- Quick start fixes in README.md\n\n## 0.7.19 - (2021-06-18)\n\n- BREAKING CHANGE: onInit callback now takes an artboard as a parameter\n- Adds simple state machine example\n\n## 0.7.18 - (2021-06-14)\n\n- Adds ability to pass controllers into RiveAnimation widgets\n- Adds autoplay option to SimpleAnimation controller\n- Adds one-shot animation controller\n- Updates examples\n\n## 0.7.17 - (2021-06-11)\n\n- Exposes antialiasing option in Rive and RiveAnimation widgets.\n\n## 0.7.16 - (2021-06-11)\n\n- Fixes broken build issue in 0.7.15\n\n## 0.7.15 - (2021-06-10)\n\n- Adds linear animation and state machine getters to RuntimeArtboard.\n- RiveAnimation now takes lists of animation and state machine names and plays all of them.\n- NOTE: this build is broken\n\n## 0.7.14 - (2021-06-10)\n\n- Fixed an issue with State Machine exit time and one shot animations.\n\n## 0.7.13 - (2021-06-09)\n\n- Fixed an issue with inputs not hooking up to 1D blend states at load time.\n\n## 0.7.12 - (2021-06-02)\n\n- Support for artboard instancing!\n- Fixes an issue with 100% exit time not working on loops.\n\n## 0.7.11 - (2021-05-28)\n\n- Adds `RiveAnimation` high level widget.\n- Fixes tests and add automated testing on push.\n- Updates README.\n\n## 0.7.10 - (2021-05-18)\n\n- Transitions from Any state will correctly mix from the last active state to the incoming one.\n\n## 0.7.9 - (2021-05-08)\n\n- Better error reporting when loading files. Based on feedback from https://github.com/rive-app/rive-flutter/issues/96.\n- Clamp between 0% and 100% when using an additive blend state.\n\n## 0.7.8 - (2021-05-07)\n\n- Blend states! Support for 1D and Additive blend states.\n\n## 0.7.7 - (2021-05-04)\n\n- Updates dependency versions\n\n## 0.7.6 - (2021-05-04)\n\n- Fixing an issue with StateMachine changes not being applied on the first frame after playing.\n\n## 0.7.5 - (2021-04-30)\n\n- Fixing an issue with StateMachine exitTime from states with animations that have a work area enabled.\n\n## 0.7.4 - (2021-04-29)\n\n- Fixing race condition that could occur when importing StateMachineInputs.\n\n## 0.7.3 - (2021-04-19)\n\n- Adding support for Rectangle corner radius properties and animation.\n- Trigger inputs reset between state changes to avoid multi-firing state changes when a trigger is fired.\n\n## 0.7.2 - (2021-04-12)\n\n- Breaking change! StateMachineInput has been renamed to SMIInput to follow conventions in other runtimes and clearly disambiguate between core.StateMachineInput (the backing type in Rive's core system, which is not explicitly exposed to this runtime) and the input instances which should be used by controllers in the Flutter ecosystem.\n- New examples showing use of number, boolean, and trigger inputs.\n\n## 0.7.1 - (2021-04-06)\n\n- Fixes an issue with hold keyframes not loading properly.\n\n## 0.7.0 - (2021-03-31)\n\n- Added support for exit time in the State Machine.\n- Loading of Rive files has changed to better support NNBD. This is a breaking change. Rive file's must now be imported from binary data as follows: `final file = RiveFile.import(data);` Please see the examples for sample implementations.\n\n## 0.7.0-nullsafety.0 - (2021-03-29)\n\n- NNBD support.\n- State Machine runtime support.\n- New binary format 7.0 with improved flexibility which is not compatible with 6.0 files. The Rive editor will be able to export both format 6.0 and 7.0, but please note that 6.0 is now deprecated and all new improvements and bug fixes to the format will be done on 7.0.\n\n## 0.6.8 - (2021-02-12)\n\n- Adds support for Flutter's `getMinIntrinsicWidth` (max, height, etc.), e.g. for `IntrinsicWidth`\n  and `IntrinsicHeight` usage.\n- Renames `Rive.useIntrinsicSize` to `Rive.useArtboardSize` by deprecating the former. The\n  motivation for this is avoiding ambiguity with Flutter's intrinsics contract.\n- Fixes issue #28 where the last frame of a one-shot animation isn't displayed.\n\n## 0.6.7 - (2021-01-23)\n\n- Adds support for Rive.useIntrinsicSize to allow Rive widgets to be self sized by their artboard. Set useIntrinsicSize to false when you want the widget to try to occupy the entire space provided by the parent.\n\n## 0.6.6+1 - (2021-01-18)\n\n- Fixes a crashing issue introduced in 0.6.6.\n\n## 0.6.6 - (2021-01-18)\n\n- Adds getters for start/endTime and reset() in LinearAnimationInstance\n- Fixes an issue with artboard background gradients when rendering with non-default origin values.\n- Fixes an issue with trim paths across open paths.\n\n## 0.6.5 - (2020-12-22)\n\n- Fixing issue with older minor versions crashing when newer minor files included objects with unknown keys. The runtime can now read beyond those.\n- Shapes and paths hidden in the editor will not show up at runtime.\n- Runtime header now exposes Rive project id.\n\n## 0.6.4 - (2020-12-11)\n\n- Adding support for parametric polygon and star shapes.\n- Fixes to trim paths that wrap around the entire shape.\n- Expose mix value in SimpleAnimation, allows for mixing multiple animations together.\n\n## 0.6.3 - (2020-11-17)\n\n- Added support for parametric path origins.\n- Fixes for rendering artboards with non-zero origin values.\n\n## 0.6.2+3 - (2020-11-11)\n\n- Added Artboard tests.\n- Added animationByName(String) function to Artboard.\n\n## 0.6.2+2 - (2020-11-11)\n\n- Added RiveFile tests.\n- Added artboardByName(String) function to RiveFile.\n\n## 0.6.2+1 - (2020-11-06)\n\n- Added default noop implementation to `onActivate`, `onDeactivate`, and `dispose`\n  in `RiveAnimationController`, which removes the need for noop overrides in subclasses\n  like `SimpleAnimation`.\n\n## 0.6.2 - (2020-10-02)\n\n- Exposed major and minor runtime version (issue #15) via riveVersion.\n- Exposed major and minor version of loaded files via RiveFile().version.\n- SimpleAnimation exposes the underlying LinearAnimationInstance.\n- Export Loop enum such that it is available to users of the package.\n- Fixed start point of LinearAnimationInstance when using a work area (custom start/end).\n\n## 0.6.1 - (2020-09-30)\n\n- Bumping all runtimes to 0.6.1 to match (no functional changes in the Flutter one).\n\n## 0.6.0+1 - (2020-09-30)\n\n- Fixing a mixing issue with double keyframes.\n\n## 0.6.0 - (2020-09-28)\n\n- Adding a ToC to files indicating included core properties and their backing field types so that they may be skipped by runtimes that do not understand those properties. This will allow newer minor version files to be read by older minor version runtimes.\n- New clipping system allowing for recursive shapes to be included as sources by selecting a node for clipping.\n- New draw order system using draw targets.\n\n## 0.5.2 - (2020-08-28)\n\n- Adding trim paths.\n\n## 0.5.1 - (2020-08-26)\n\n- Bumping version number to match the runtime file version (5.1).\n- Adding support for bones.\n- Adding support for bone binding (deformation).\n\n## 0.0.7 - (2020-08-15)\n\n- Adding support for clipping with Rive format version 5.\n\n## 0.0.6 - (2020-08-12)\n\n- Adding support for version 4 with first cut of bones.\n\n## 0.0.5 - (2020-08-07)\n\n- Updating format to only use unsigned integers to overcome a dart2js weakness with signed integers on the web.\n\n## 0.0.4 - (2020-07-28)\n\n- Fundamental changes to runtime format enabling smaller file sizes. Format bumps to version 3.0 as it breaks backwards compatibility.\n\n## 0.0.3 - (2020-07-19)\n\n- Support shorter string encoding. Format bumps to version 2.0 as it breaks backwards compatibility.\n\n## 0.0.1+3 - (2020-07-09)\n\n- Fixing up `flutter analyze` issues thanks to @creativecreatorormaybenot.\n\n## 0.0.1+2 - (2020-07-08)\n\n- Updating meta dependency to one that is compatible with Flutter 😶\n\n## 0.0.1 - (2020-07-08)\n\n- Loading Rive 2 files.\n- Use a Rive widget to display them.\n- Drive animations with SimpleAnimation or make your own from RiveAnimationController.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.03515625,
          "content": "MIT License\n\nCopyright (c) 2020 Rive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.224609375,
          "content": "[![Pub Version](https://img.shields.io/pub/v/rive)](https://pub.dev/packages/rive)\n![Build Status](https://github.com/rive-app/rive-flutter/actions/workflows/tests.yaml/badge.svg)\n![Discord badge](https://img.shields.io/discord/532365473602600965)\n![Twitter handle](https://img.shields.io/twitter/follow/rive_app.svg?style=social&label=Follow)\n\n# Rive Flutter\n\n![Rive hero image](https://cdn.rive.app/rive_logo_dark_bg.png)\n\nRive Flutter is a runtime library for [Rive](https://rive.app), a real-time interactive design and animation tool.\n\nThis library allows you to fully control Rive files with a high-level API for simple interactions and animations, as well as a low-level API for creating custom render loops for multiple artboards, animations, and state machines in a single canvas.\n\n## Table of contents\n\n- [Rive Flutter](#rive-flutter)\n  - [Table of contents](#table-of-contents)\n  - [Overview of Rive](#overview-of-rive)\n  - [Getting started](#getting-started)\n  - [Choosing a Renderer](#choosing-a-renderer)\n    - [Note on the Impeller renderer](#note-on-the-impeller-renderer)\n  - [Supported platforms](#supported-platforms)\n  - [Awesome Rive](#awesome-rive)\n  - [Contributing](#contributing)\n  - [Issues](#issues)\n\n## Overview of Rive\n\n[Rive](https://rive.app) is a powerful tool that helps teams create and run interactive animations for apps, games, and websites. Designers and developers can use the collaborative editor to create motion graphics that respond to different states and user inputs, and then use the lightweight open-source runtime libraries, like Rive Flutter, to load their animations into their projects.\n\nFor more information, check out the following resources:\n\n:house_with_garden: [Homepage](https://rive.app/)\n\n:blue_book: [General help docs](https://rive.app/community/doc/introduction/docvphVOrBbl)\n\n🛠 [Rive Forums](https://rive.app/community/forums/home)\n\n## Getting started\n\nTo get started with Rive Flutter, check out the following resources:\n\n- [Getting Started with Rive in Flutter](https://rive.app/community/doc/flutter/docqzmYRZmvF)\n\nFor more information, see the Runtime sections of the Rive help documentation:\n\n- [Animation Playback](https://rive.app/community/doc/animation-playback/docDKKxsr7ko)\n- [Layout](https://rive.app/community/doc/layout/docBl81zd1GB)\n- [State Machines](https://rive.app/community/doc/state-machines/docxeznG7iiK)\n- [Rive Text](https://rive.app/community/doc/text/docn2E6y1lXo)\n- [Rive Events](https://rive.app/community/doc/rive-events/docbOnaeffgr)\n- [Loading Assets](https://rive.app/community/doc/loading-assets/doct4wVHGPgC)\n\nMore advanced usage:\n\n- [Caching a RiveFile](https://rive.app/community/doc/caching-a-rive-file/docrLMDw15AJ)\n- [Alternative Widget Setup](https://rive.app/community/doc/alternative-widget-setup/docNlDD0H0rp)\n- [Custom Rive RenderObject](https://rive.app/community/doc/custom-rive-renderobject/docnbX5AnjkW)\n- [Custom Painter](https://rive.app/community/doc/custom-rive-renderobject/docnbX5AnjkW)\n\n## Choosing a Renderer\n\nFor more information see: https://rive.app/community/doc/overview/docD20dU9Rod\n\n### Note on the Impeller renderer\n\nStarting in Flutter v3.10, [Impeller](https://docs.flutter.dev/perf/impeller) has replaced [Skia](https://skia.org/) to become the default renderer for apps on the iOS platform and may continue to be the default on future platforms over time. As such, there is a possibility of rendering and [performance discrepancies](https://github.com/flutter/flutter/issues/134432) when using the Rive Flutter runtime with platforms that use the Impeller renderer that may not have surfaced before. If you encounter any visual or performance errors at runtime compared to expected behavior in the Rive editor, we recommend trying the following steps to triage:\n\n1. Try running the Flutter app with the `--no-enable-impeller` flag to use the Skia renderer. If the visual discrepancy does not show when using Skia, it may be a rendering bug on Impeller. However, before raising a bug with the Flutter team, try the second point below👇\n```bash\nflutter run --no-enable-impeller\n```\n2. Try running the Flutter app on the latest master channel. It is possible that visual bugs may be resolved on the latest Flutter commits, but not yet released in the beta or stable channel.\n3. If you are still seeing visual discrepancies with just the Impeller renderer on the latest master branch, we recommend raising a detailed issue to the [Flutter Github repo](https://github.com/flutter/flutter) with a reproducible example, and other relevant details that can help the team debug any possible issues that may be present.\n\n## Supported platforms\n\nBe sure to read the [platform specific considerations](platform_considerations.md) for the Rive Flutter package.\n\n## Awesome Rive\n\nFor even more examples and resources on using Rive at runtime or in other tools, checkout the [awesome-rive](https://github.com/rive-app/awesome-rive) repo.\n\n## Contributing\n\nWe love contributions and all are welcome! 💙\n\n## Issues\n\nHave an issue with using the runtime, or want to suggest a feature/API to help make your development life better? Log an issue in our [issues](https://github.com/rive-app/flutter/issues) tab! You can also browse older issues and discussion threads there to see solutions that may have worked for common problems.\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0048828125,
          "content": "0.9.1"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 3.5791015625,
          "content": "analyzer:\n  errors:\n    unused_import: error\n  exclude:\n    - ios\n    - macos\n\nlinter:\n  rules:\n    - always_put_required_named_parameters_first\n    - annotate_overrides\n    # - avoid_annotating_with_dynamic\n    - avoid_bool_literals_in_conditional_expressions\n    - avoid_catches_without_on_clauses\n    - avoid_catching_errors\n    - avoid_classes_with_only_static_members\n    - avoid_double_and_int_checks\n    - avoid_empty_else\n    - avoid_field_initializers_in_const_classes\n    - avoid_implementing_value_types\n    - avoid_init_to_null\n    - avoid_js_rounded_ints\n    - avoid_null_checks_in_equality_operators\n    - avoid_relative_lib_imports\n    - avoid_return_types_on_setters\n    - avoid_returning_null_for_void\n    - avoid_returning_this\n    - avoid_setters_without_getters\n    - avoid_shadowing_type_parameters\n    - avoid_single_cascade_in_expression_statements\n    - avoid_slow_async_io\n    - avoid_types_as_parameter_names\n    - avoid_unused_constructor_parameters\n    - avoid_void_async\n    - await_only_futures\n    - camel_case_types\n    - cancel_subscriptions\n    - close_sinks\n    - constant_identifier_names\n    - control_flow_in_finally\n    - curly_braces_in_flow_control_structures\n    - directives_ordering\n    - empty_catches\n    - empty_constructor_bodies\n    - empty_statements\n    - file_names\n    - hash_and_equals\n    - implementation_imports\n    #  - invariant_booleans # too many false positives: https://github.com/dart-lang/linter/issues/811\n    - collection_methods_unrelated_type\n    - join_return_with_assignment\n    - library_names\n    - library_prefixes\n    - lines_longer_than_80_chars\n    # - literal_only_boolean_expressions # too many false positives: https://github.com/dart-lang/sdk/issues/34181\n    - no_adjacent_strings_in_list\n    - no_duplicate_case_values\n    - non_constant_identifier_names\n    - null_closures\n    - one_member_abstracts\n    - only_throw_errors\n    - overridden_fields\n    - package_api_docs\n    - package_names\n    - package_prefixed_library_names\n    - parameter_assignments\n    - prefer_adjacent_string_concatenation\n    - prefer_asserts_in_initializer_lists\n    - prefer_collection_literals\n    - prefer_conditional_assignment\n    - prefer_const_constructors\n    - prefer_const_constructors_in_immutables\n    - prefer_const_declarations\n    - prefer_const_literals_to_create_immutables\n    - prefer_constructors_over_static_methods\n    - prefer_contains\n    - prefer_final_fields\n    - prefer_final_in_for_each\n    - prefer_foreach\n    - prefer_function_declarations_over_variables\n    - prefer_initializing_formals\n    - prefer_is_empty\n    - prefer_is_not_empty\n    - prefer_iterable_whereType\n    # - prefer_mixin\n    - prefer_null_aware_operators\n    - prefer_typing_uninitialized_variables\n    - prefer_void_to_null\n    - recursive_getters\n    - slash_for_doc_comments\n    - sort_pub_dependencies\n    - sort_unnamed_constructors_first\n    - test_types_in_equals\n    - throw_in_finally\n    - type_annotate_public_apis\n    - type_init_formals\n    - unawaited_futures\n    - unnecessary_await_in_return\n    - unnecessary_brace_in_string_interps\n    - unnecessary_const\n    - unnecessary_getters_setters\n    - unnecessary_lambdas\n    - unnecessary_new\n    - unnecessary_null_aware_assignments\n    - unnecessary_null_in_if_null_operators\n    - unnecessary_overrides\n    - unnecessary_parenthesis\n    - unnecessary_statements\n    - unnecessary_this\n    - unrelated_type_equality_checks\n    - use_full_hex_values_for_flutter_colors\n    - use_rethrow_when_possible\n    - use_setters_to_change_properties\n    - use_string_buffers\n    - use_to_and_as_if_applicable\n    - valid_regexps\n    - void_checks\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "platform_considerations.md",
          "type": "blob",
          "size": 1.3740234375,
          "content": "# Platform Considerations\n\nIn order to support some of our more low level features, Rive brings some of its C++ runtime to Flutter.\n\n| Platform | Technology | Dependencies                     |\n| -------- | ---------- | -------------------------------- |\n| iOS      | FFI        | statically linked                |\n| Android  | FFI        | `rive_text.so`                   |\n| Windows  | FFI        | `rive_plugin.dll`                |\n| Mac      | FFI        | statically linked                |\n| Web      | WASM       | `rive_text.js`, `rive_text.wasm` |\n\n## iOS & Mac\n\nWe use CocoaPods to build and statically link to your project the portions of Rive's C++ runtime that are necessary for text features.\n\n## Android\n\nWe use Gradle & CMake to build `rive_text.so`. Rive's runtime uses modern features that are only available on newer NDKs. For this reason we recommend updating your build.gradle to include `ndkVersion \"27.2.12479018\"`.\n\n```gradle\nandroid {\n  compileSdkVersion 31\n  ndkVersion \"27.2.12479018\"\n  ...\n}\n```\n\n## Windows\n\nWe use CMake to build `rive_plugin.dll`. Note that Clang compiler is required, [see here](https://learn.microsoft.com/en-us/cpp/build/clang-support-msbuild?view=msvc-170) for how to enable it in your Visual Studio.\n\n## Web\n\nWe use Emscripten to build a WASM and JS file which are statically served via UNPKG similarly to how Flutter delivers the CanvasKit WASM file.\n"
        },
        {
          "name": "premake5_rive_plugin.lua",
          "type": "blob",
          "size": 9.5771484375,
          "content": "local dependency = require('dependency')\n\nharfbuzz = dependency.github('harfbuzz/harfbuzz', '858570b1d9912a1b746ab39fbe62a646c4f7a5b1')\nsheenbidi = dependency.github('Tehreer/SheenBidi', 'v2.6')\n\nworkspace('rive_text')\nconfigurations({ 'debug', 'release' })\n\nsource = os.isdir('../../packages/runtime') and '../../packages/runtime' or 'macos/rive-cpp'\n\nproject('rive_sheenbidi')\ndo\n    kind('StaticLib')\n    language('C')\n    toolset('clang')\n    targetdir('shared_lib/build/bin/%{cfg.buildcfg}/')\n    objdir('shared_lib/build/obj/%{cfg.buildcfg}/')\n\n    includedirs({ sheenbidi .. '/Headers' })\n\n    filter({ 'options:arch=wasm' })\n    do\n        targetdir('wasm/build/bin/%{cfg.buildcfg}/')\n        objdir('wasm/build/obj/%{cfg.buildcfg}/')\n    end\n\n    filter('configurations:debug')\n    do\n        files({\n            sheenbidi .. '/Source/BidiChain.c',\n            sheenbidi .. '/Source/BidiTypeLookup.c',\n            sheenbidi .. '/Source/BracketQueue.c',\n            sheenbidi .. '/Source/GeneralCategoryLookup.c',\n            sheenbidi .. '/Source/IsolatingRun.c',\n            sheenbidi .. '/Source/LevelRun.c',\n            sheenbidi .. '/Source/PairingLookup.c',\n            sheenbidi .. '/Source/RunQueue.c',\n            sheenbidi .. '/Source/SBAlgorithm.c',\n            sheenbidi .. '/Source/SBBase.c',\n            sheenbidi .. '/Source/SBCodepointSequence.c',\n            sheenbidi .. '/Source/SBLine.c',\n            sheenbidi .. '/Source/SBLog.c',\n            sheenbidi .. '/Source/SBMirrorLocator.c',\n            sheenbidi .. '/Source/SBParagraph.c',\n            sheenbidi .. '/Source/SBScriptLocator.c',\n            sheenbidi .. '/Source/ScriptLookup.c',\n            sheenbidi .. '/Source/ScriptStack.c',\n            sheenbidi .. '/Source/StatusStack.c',\n        })\n    end\n    filter('configurations:release')\n    do\n        files({ sheenbidi .. '/Source/SheenBidi.c' })\n    end\n\n    buildoptions({ '-Wall', '-ansi', '-pedantic', '-DANSI_DECLARATORS' })\n\n    buildoptions({\n        '-Wno-c++17-extensions',\n        '-fno-exceptions',\n        '-fno-rtti',\n        '-fno-unwind-tables',\n        '-Wno-deprecated-builtins',\n    })\n\n    filter({ 'options:arch=wasm' })\n    do\n        buildoptions({\n            '-s STRICT=1',\n            '-s DISABLE_EXCEPTION_CATCHING=1',\n            '-DEMSCRIPTEN_HAS_UNBOUND_TYPE_NAMES=0',\n            '--no-entry',\n        })\n    end\n\n    filter('configurations:debug')\n    do\n        defines({ 'DEBUG' })\n        symbols('On')\n    end\n\n    filter('configurations:release')\n    do\n        defines({ 'RELEASE', 'NDEBUG', 'SB_CONFIG_UNITY' })\n        optimize('On')\n        buildoptions({ '-Oz', '-g0', '-flto' })\n\n        linkoptions({ '-Oz', '-g0', '-flto' })\n    end\n    filter({ 'system:macosx', 'options:arch=arm64' })\n    do\n        buildoptions({ '-target arm64-apple-macos11' })\n        linkoptions({ '-target arm64-apple-macos11' })\n    end\n    filter({ 'system:macosx', 'options:arch=x86_64' })\n    do\n        buildoptions({ '-target x86_64-apple-macos10.12' })\n        linkoptions({ '-target x86_64-apple-macos10.12' })\n    end\nend\n\nproject('rive_text')\ndo\n    kind('SharedLib')\n    language('C++')\n    cppdialect('C++17')\n    toolset('clang')\n    targetdir('shared_lib/build/bin/%{cfg.buildcfg}')\n    objdir('shared_lib/build/obj/%{cfg.buildcfg}')\n\n    dependson({ 'rive_sheenbidi' })\n\n    defines({\n        'WITH_RIVE_TEXT',\n        'WITH_RIVE_AUDIO',\n        'HAVE_OT',\n        'HB_NO_FALLBACK_SHAPE',\n        'HB_NO_WIN1256',\n        'HB_NO_EXTERN_HELPERS',\n        'HB_DISABLE_DEPRECATED',\n        'HB_NO_COLOR',\n        'HB_NO_BITMAP',\n        'HB_NO_BUFFER_SERIALIZE',\n        'HB_NO_SETLOCALE',\n        'HB_NO_VERTICAL',\n        'HB_NO_LAYOUT_COLLECT_GLYPHS',\n        'HB_NO_LAYOUT_RARELY_USED',\n        'HB_NO_LAYOUT_UNUSED',\n        'HB_NO_OT_FONT_GLYPH_NAMES',\n    })\n\n    includedirs({\n        source .. '/include',\n        source .. '/skia/renderer/include',\n        harfbuzz .. '/src/',\n        sheenbidi .. '/Headers',\n    })\n\n    files({\n        source .. '/src/renderer.cpp',\n        source .. '/src/math/mat2d.cpp',\n        source .. '/src/math/raw_path.cpp',\n        source .. '/src/text/font_hb.cpp',\n        source .. '/src/text/line_breaker.cpp',\n        harfbuzz .. '/src/hb-aat-layout.cc',\n        harfbuzz .. '/src/hb-aat-map.cc',\n        harfbuzz .. '/src/hb-blob.cc',\n        harfbuzz .. '/src/hb-buffer-serialize.cc',\n        harfbuzz .. '/src/hb-buffer-verify.cc',\n        harfbuzz .. '/src/hb-buffer.cc',\n        harfbuzz .. '/src/hb-common.cc',\n        harfbuzz .. '/src/hb-draw.cc',\n        harfbuzz .. '/src/hb-face.cc',\n        harfbuzz .. '/src/hb-font.cc',\n        harfbuzz .. '/src/hb-map.cc',\n        harfbuzz .. '/src/hb-number.cc',\n        harfbuzz .. '/src/hb-ot-cff1-table.cc',\n        harfbuzz .. '/src/hb-ot-cff2-table.cc',\n        harfbuzz .. '/src/hb-ot-color.cc',\n        harfbuzz .. '/src/hb-ot-face.cc',\n        harfbuzz .. '/src/hb-ot-font.cc',\n        harfbuzz .. '/src/hb-ot-layout.cc',\n        harfbuzz .. '/src/hb-ot-map.cc',\n        harfbuzz .. '/src/hb-ot-math.cc',\n        harfbuzz .. '/src/hb-ot-meta.cc',\n        harfbuzz .. '/src/hb-ot-metrics.cc',\n        harfbuzz .. '/src/hb-ot-name.cc',\n        harfbuzz .. '/src/hb-ot-shaper-arabic.cc',\n        harfbuzz .. '/src/hb-ot-shaper-default.cc',\n        harfbuzz .. '/src/hb-ot-shaper-hangul.cc',\n        harfbuzz .. '/src/hb-ot-shaper-hebrew.cc',\n        harfbuzz .. '/src/hb-ot-shaper-indic-table.cc',\n        harfbuzz .. '/src/hb-ot-shaper-indic.cc',\n        harfbuzz .. '/src/hb-ot-shaper-khmer.cc',\n        harfbuzz .. '/src/hb-ot-shaper-myanmar.cc',\n        harfbuzz .. '/src/hb-ot-shaper-syllabic.cc',\n        harfbuzz .. '/src/hb-ot-shaper-thai.cc',\n        harfbuzz .. '/src/hb-ot-shaper-use.cc',\n        harfbuzz .. '/src/hb-ot-shaper-vowel-constraints.cc',\n        harfbuzz .. '/src/hb-ot-shape-fallback.cc',\n        harfbuzz .. '/src/hb-ot-shape-normalize.cc',\n        harfbuzz .. '/src/hb-ot-shape.cc',\n        harfbuzz .. '/src/hb-ot-tag.cc',\n        harfbuzz .. '/src/hb-ot-var.cc',\n        harfbuzz .. '/src/hb-set.cc',\n        harfbuzz .. '/src/hb-shape-plan.cc',\n        harfbuzz .. '/src/hb-shape.cc',\n        harfbuzz .. '/src/hb-shaper.cc',\n        harfbuzz .. '/src/hb-static.cc',\n        harfbuzz .. '/src/hb-subset-cff-common.cc',\n        harfbuzz .. '/src/hb-subset-cff1.cc',\n        harfbuzz .. '/src/hb-subset-cff2.cc',\n        harfbuzz .. '/src/hb-subset-input.cc',\n        harfbuzz .. '/src/hb-subset-plan.cc',\n        harfbuzz .. '/src/hb-subset-repacker.cc',\n        harfbuzz .. '/src/hb-subset.cc',\n        harfbuzz .. '/src/hb-ucd.cc',\n        harfbuzz .. '/src/hb-unicode.cc',\n        harfbuzz .. '/src/hb-style.h',\n        harfbuzz .. '/src/hb-style.cc',\n    })\n\n    links({ 'rive_sheenbidi' })\n\n    buildoptions({\n        '-Wno-c++17-extensions',\n        '-fno-exceptions',\n        '-fno-rtti',\n        '-fno-unwind-tables',\n        '-Wno-deprecated-builtins',\n        '-DANSI_DECLARATORS',\n    })\n\n    filter({ 'not options:arch=wasm' })\n    do\n        files({ 'macos/rive_text/rive_text.cpp' })\n    end\n\n    filter({ 'options:arch=wasm' })\n    do\n        targetdir('wasm/build/bin/%{cfg.buildcfg}/')\n        objdir('wasm/build/obj/%{cfg.buildcfg}/')\n        kind('ConsoleApp')\n        files({ 'wasm/rive_text_bindings.cpp' })\n        buildoptions({\n            '-s STRICT=1',\n            '-s DISABLE_EXCEPTION_CATCHING=1',\n            '-DEMSCRIPTEN_HAS_UNBOUND_TYPE_NAMES=0',\n            '--no-entry',\n        })\n        linkoptions({\n            '--closure 1',\n            '--closure-args=\"--externs ./wasm/js/externs.js\"',\n            '--bind',\n            '-s FORCE_FILESYSTEM=0',\n            '-s MODULARIZE=1',\n            '-s NO_EXIT_RUNTIME=1',\n            '-s STRICT=1',\n            '-s ALLOW_MEMORY_GROWTH=1',\n            '-s DISABLE_EXCEPTION_CATCHING=1',\n            '-s WASM=1',\n            '-s USE_ES6_IMPORT_META=0',\n            '-s EXPORT_NAME=\"RiveText\"',\n            '-DEMSCRIPTEN_HAS_UNBOUND_TYPE_NAMES=0',\n            '--no-entry',\n            '--pre-js ./wasm/js/rive_text.js',\n        })\n    end\n\n    linkoptions({\n        '-Wno-c++17-extensions',\n        '-fno-exceptions',\n        '-fno-rtti',\n        '-fno-unwind-tables',\n    })\n\n    filter({ 'options:arch=wasm', 'options:single_file' })\n    do\n        linkoptions({\n            '-o %{cfg.targetdir}/rive_text_single.js',\n            '-s SINGLE_FILE=1',\n        })\n    end\n\n    filter({ 'options:arch=wasm', 'options:not single_file' })\n    do\n        linkoptions({ '-o %{cfg.targetdir}/rive_text.js' })\n    end\n\n    filter('configurations:debug')\n    do\n        defines({ 'DEBUG' })\n        symbols('On')\n    end\n\n    filter({ 'configurations:debug', 'options:arch=wasm' })\n    do\n        linkoptions({ '-s ASSERTIONS=1' })\n    end\n\n    filter('configurations:release')\n    do\n        defines({ 'RELEASE' })\n        defines({ 'NDEBUG' })\n        optimize('On')\n\n        buildoptions({ '-Oz', '-g0', '-flto' })\n\n        linkoptions({ '-Oz', '-g0', '-flto' })\n    end\n\n    filter({ 'configurations:release', 'options:arch=wasm' })\n    do\n        linkoptions({ '-s ASSERTIONS=0' })\n    end\n\n    filter({ 'system:macosx', 'options:arch=arm64' })\n    do\n        buildoptions({ '-target arm64-apple-macos11' })\n        linkoptions({ '-target arm64-apple-macos11' })\n    end\n    filter({ 'system:macosx', 'options:arch=x86_64' })\n    do\n        buildoptions({ '-target x86_64-apple-macos10.12' })\n        linkoptions({ '-target x86_64-apple-macos10.12' })\n    end\nend\n\nnewoption({\n    trigger = 'single_file',\n    description = 'Set when the wasm should be packed in with the js code.',\n})\n\nnewoption({\n    trigger = 'arch',\n    description = 'Architectures we can target',\n    allowed = { { 'x86_64' }, { 'arm64' }, { 'wasm' } },\n})\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.6806640625,
          "content": "name: rive\nversion: 0.13.20\nhomepage: https://rive.app\ndescription: Rive Flutter Runtime. This package provides runtime functionality for playing back and interacting with animations built with the Rive editor available at https://rive.app.\nrepository: https://github.com/rive-app/rive-flutter\ntopics:\n  - animation\n  - ui\n  - effects\n  - widgets\n  - widget\nenvironment:\n  sdk: \">=2.17.0 <4.0.0\"\n  flutter: \">=2.5.0\"\ndependencies:\n  collection: ^1.15.0\n  flutter:\n    sdk: flutter\n  flutter_web_plugins:\n    sdk: flutter\n  http: \">=0.13.3 <2.0.0\"\n  meta: ^1.3.0\n  plugin_platform_interface: ^2.0.2\n  rive_common: 0.4.15\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n  mocktail:\n  path: ^1.8.3"
        },
        {
          "name": "shared_lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "update_dependencies.sh",
          "type": "blob",
          "size": 1.8955078125,
          "content": "#!/bin/bash\nset -e\n\n# silence push/pop\npushd() {\n    command pushd \"$@\" >/dev/null\n}\n\npopd() {\n    command popd \"$@\" >/dev/null\n}\n\nFORCE=false\nfor var in \"$@\"; do\n    if [[ $var = \"force\" ]]; then\n        FORCE=true\n    fi\ndone\n\nfunction installRiveCpp {\n    if [ $FORCE == \"true\" ] || [ ! -d rive-cpp ]; then\n        rm -fR rive-cpp\n        if [ -d ../../runtime ]; then\n            echo \"Getting rive-cpp from current repo.\"\n            export INSTALL_TO=$PWD\n            mkdir -p rive-cpp\n            pushd ../../runtime\n\n            function copyRepoFile {\n                mkdir -p $(dirname $INSTALL_TO/rive-cpp/$1)\n                cp $1 $INSTALL_TO/rive-cpp/$1\n                echo -en \"\\r\\033[K$1\"\n            }\n            export -f copyRepoFile\n            git ls-files | xargs -n1 bash -c 'copyRepoFile \"$@\"' _\n            echo -en \"\\r\\033[K\"\n            popd\n        else\n            echo \"Cloning rive-cpp.\"\n            git clone https://github.com/rive-app/rive-cpp\n        fi\n        # TODO: Fix this so we build the rive.podspec file based on paths determined\n        # here (for harfbuzz and sheenbidi)\n        #\n        # install dependencies from rive-cpp\n        # pushd rive-cpp/dependencies/macosx\n        # source config_directories.sh\n        # popd\n        # pushd rive-cpp\n        # ./build.sh\n        # popd\n    fi\n\n    # For now just manually install the deps.\n    if [ $FORCE == \"true\" ] || [ ! -d harfbuzz ]; then\n        rm -fR harfbuzz\n        echo \"Cloning Harfbuzz.\"\n        git clone https://github.com/harfbuzz/harfbuzz\n        pushd harfbuzz\n        git checkout \"6.0.0\" .\n        popd\n    fi\n    if [ $FORCE == \"true\" ] || [ ! -d SheenBidi ]; then\n        rm -fR SheenBidi\n        echo \"Cloning SheenBidi.\"\n        git clone https://github.com/Tehreer/SheenBidi.git\n        pushd SheenBidi\n        git checkout v2.6 .\n        popd\n    fi\n}\n\npushd macos\ninstallRiveCpp\npopd\n\npushd ios\ninstallRiveCpp\npopd\n"
        }
      ]
    }
  ]
}