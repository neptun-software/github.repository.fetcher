{
  "metadata": {
    "timestamp": 1736710577969,
    "page": 182,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "FlutterGen/flutter_gen",
      "stars": 1505,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0986328125,
          "content": "examples/**/lib/gen/* linguist-generated=false\ntest_resources/actual_data/* linguist-generated=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.4111328125,
          "content": "# See https://www.dartlang.org/guides/libraries/private-files\n\n# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.ipr\n*.iws\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n# Libraries should not include pubspec.lock, per https://dart.dev/guides/libraries/private-files#pubspeclock.\n**/pubspec.lock\n**/pubspec_overrides.yaml\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\n**/build/\ngenerated_plugin_registrant.dart\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\n# Fastlane related\nandroid/fastlane/report.xml\nios/fastlane/report.xml\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n**/android/**/gen\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/build/\n**/ios/Flutter/.last_build_id\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/Flutter/Flutter.podspec\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n**/ios/Runner/GoogleService-Info.plist\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n\n# macOS related\n**/macos/**/Pods/\n**/macos/**/.symlinks/\n**/macos/build/\n**/macos/Flutter/ephemeral/\n**/macos/**/dgph\n**/macos/**/xcuserdata/\n\n# Web related\n*.dart.js\n*.info.json      # Produced by the --dump-info flag.\n*.js             # When generated by dart2js. Don't specify *.js if your\n                 # project includes source files written in JavaScript.\n*.js_\n*.js.deps\n*.js.map\nnode_modules/\n\n## Generated code\n# **/*.g.dart\n# **/*.gen.dart\n\n## Test coverage\ncoverage/\ncoverage.lcov\n\n## Test resources\n**/test_resources/lib\n"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".node-version",
          "type": "blob",
          "size": 0.0078125,
          "content": "22.13.0\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.2412109375,
          "content": ".dart_tool/\nbuild/\npackages/**/android/\npackages/**/ios/\npackages/**/linux/\npackages/**/macos/\npackages/**/web/\npackages/**/windows/\nexamples/**/android/\nexamples/**/ios/\nexamples/**/linux/\nexamples/**/macos/\nexamples/**/web/\nexamples/**/windows/\n"
        },
        {
          "name": ".pubignore",
          "type": "blob",
          "size": 0.015625,
          "content": "test_resources/\n"
        },
        {
          "name": ".tool-versions",
          "type": "blob",
          "size": 0.021484375,
          "content": "flutter 3.27.1-stable\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.220703125,
          "content": "## 5.8.0\n\n**Feature**\n- [#555](https://github.com/FlutterGen/flutter_gen/pull/555) Support build.yaml to configure. by [@b2nkuu](https://github.com/b2nkuu)\n- [#567](https://github.com/FlutterGen/flutter_gen/pull/567) Generate the `package` constant for generated font classes. by [@TesteurManiak](https://github.com/TesteurManiak)\n- [#569](https://github.com/FlutterGen/flutter_gen/pull/569) Enables `gaplessPlayback` by default for image assets. by [@AlexV525](https://github.com/AlexV525)\n- [#580](https://github.com/FlutterGen/flutter_gen/pull/580) Allows `mime: '>=1.0.0 <3.0.0'`. by [@AlexV525](https://github.com/AlexV525)\n\n**Development**\n- [#563](https://github.com/FlutterGen/flutter_gen/pull/563) Fix concurrency execution with melos. by [@wasabeef](https://github.com/wasabeef)\n\n## 5.7.0\n\n**Feature**\n- [#548](https://github.com/FlutterGen/flutter_gen/pull/548) Add Import abstraction for package imports alias. by [@AlexV525](https://github.com/AlexV525)\n\n**Development**\n- New releases [asdf-fluttergen](https://github.com/FlutterGen/asdf-fluttergen) and [setup-fluttergen](https://github.com/FlutterGen/setup-fluttergen). by [@ronnnnn](https://github.com/ronnnnn)\n\n## 5.6.0\n\n**Bug fix**\n- [#530](https://github.com/FlutterGen/flutter_gen/pull/530) Fix the Flavored assets. by [@AlexV525](https://github.com/AlexV525)\n- [#532](https://github.com/FlutterGen/flutter_gen/pull/532) Provide the theme to SvgAssetLoader instead of SvgPicture. by [@Kirpal](https://github.com/Kirpal)\n\n## 5.5.0+1\n\n**Feature**\n- [#471](https://github.com/FlutterGen/flutter_gen/pull/471) Handles root directory assets. by [@AlexV525](https://github.com/AlexV525)\n- [#472](https://github.com/FlutterGen/flutter_gen/pull/472) Add directory_path_enabled to output the path of assets directory classes. by [@AlexV525](https://github.com/AlexV525)\n- [#487](https://github.com/FlutterGen/flutter_gen/pull/487) Add support for 'useArtboardSize' argument in rive integration. by [@devilbuddy](https://github.com/devilbuddy)\n- [#493](https://github.com/FlutterGen/flutter_gen/pull/493) Add support for vector graphics (vec files) in SvgGenImage. by [@raldhafiri](https://github.com/raldhafiri)\n\n**Bug fix**\n- [#485](https://github.com/FlutterGen/flutter_gen/pull/485) Remove default SvgTheme argument preventing DefaultSvgTheme works correctly. by [@mym0404](https://github.com/mym0404)\n\n**Development**\n- Update to Dart 3.3.4.\n- Update to Flutter 3.19.6.\n\n## 5.4.0\n\n**Feature**\n- [#435](https://github.com/FlutterGen/flutter_gen/pull/435) Allowed the generated values statement to optionally be static. [@bramp](https://github.com/bramp)\n\n**Bug fix**  \n- [#432](https://github.com/FlutterGen/flutter_gen/pull/432) Refactored the AssetGenImage code to be another Integration. [@bramp](https://github.com/bramp)\n\n**Development**\n- [#438](https://github.com/FlutterGen/flutter_gen/pull/438) Fix module configurations.\n- Update to Dart 3.2.0.\n- Update to Flutter 3.16.0.\n\n## 5.3.2\n\n**Bug fix**  \n- [#409](https://github.com/FlutterGen/flutter_gen/pull/409) Update dependencies.\n  - Update Dart SDK to `>=2.17.0 <4.0.0`.\n\n**Development**\n- Update to Dart 3.1.2.\n- Update to Flutter 3.13.5.\n\n**Team**\n- Welcome [@AlexV525](https://github.com/AlexV525) 🎉\n\n## 5.3.1\n\n**Bug fix**  \n- [#383](https://github.com/FlutterGen/flutter_gen/pull/383) Fix the wrong path for unknown mime types when `packageParameterEnabled` is enabled. [@blaugold](https://github.com/blaugold)\n\n## 5.3.0\n\n**Feature**\n- [#361](https://github.com/FlutterGen/flutter_gen/pull/361) Add package parameter to generated asset provider method. [@orevial](https://github.com/orevial)\n\n**Bug fix**  \n- [#396](https://github.com/FlutterGen/flutter_gen/pull/369) Fix `flutter_svg` `>=2.0.4` requires a non-null `clipBehavior` field. [@jetpeter](https://github.com/jetpeter) [@hasanmhallak](https://github.com/hasanmhallak)\n\n**Development**  \n- [#380](https://github.com/FlutterGen/flutter_gen/pull/380) Migrate to melos v3. [@blaugold](https://github.com/blaugold) [@jfacoustic](https://github.com/jfacoustic)\n- Update Dart SDK to `>=2.17.0 <3.0.0`.\n\n## 5.2.0\n\n**Feature**\n- [#350](https://github.com/FlutterGen/flutter_gen/pull/350) [**BREAKING CHANGES**] Upgrade for support of `flutter_svg 2.0.0`.\n\n## 5.1.0, 5.1.0+1\n\n**Feature**  \n- [#322](https://github.com/FlutterGen/flutter_gen/issues/322) [#327](https://github.com/FlutterGen/flutter_gen/issues/327) [**BREAKING CHANGES**] Add keyName to integrations and exchange the `path` value.\n\n## 5.0.3\n\n**Bug fix**  \n- [#322](https://github.com/FlutterGen/flutter_gen/issues/322) Fix wrong package asset path with svg, lottie, flare and rive integrations.\n- [#323](https://github.com/FlutterGen/flutter_gen/issues/323) Fix generate failed when only list in a JSON files.\n\n## 5.0.2\n\n**Bug fix**  \n- [#308](https://github.com/FlutterGen/flutter_gen/issues/308) [#309](https://github.com/FlutterGen/flutter_gen/pull/309) Fix missing add to the `lottie#controller`.\n\n## 5.0.1\n\n**Bug fix**  \n- [#300](https://github.com/FlutterGen/flutter_gen/pull/300) Fix `package_parameter_enabled` being ignored for Flare, Rive and Lottie.\n- [#303](https://github.com/FlutterGen/flutter_gen/pull/303) Add `ignore_for_file: implicit_dynamic_list_literal` to generated files.\n\n**Development**  \n- [#306](https://github.com/FlutterGen/flutter_gen/pull/306) Update required `analyzer: '>=4.7.0 <6.0.0'`\n\n\n## 5.0.0\n\n**Feature**  \n- [#285](https://github.com/FlutterGen/flutter_gen/pull/285) [#298](https://github.com/FlutterGen/flutter_gen/pull/298) Add Lottie files integration.\n  ```dart\n  // Assets.lottie.hamburgerArrow.lottie()\n  SizedBox(\n    width: 200,\n    height: 200,\n    child: Assets.lottie.hamburgerArrow.lottie(\n      fit: BoxFit.contain,\n    ),\n  ),\n  ```\n- [#286](https://github.com/FlutterGen/flutter_gen/pull/286) Allow users to change generated class name for assets, fonts, and colors.\n  ```yaml\n  flutter_gen:\n    assets:\n      # Optional\n      outputs: \n        class_name: MyAssets # Default is `Assets`\n\n    fonts:\n      # Optional\n      outputs:\n        class_name: MyFontFamily # Default is `FontFamily`\n\n    colors:\n      # Optional\n      outputs:\n        class_name: MyColorName # Default is `ColorName`\n  ```\n- [#291](https://github.com/FlutterGen/flutter_gen/pull/291) Add values list to generated classes for each directory.\n  ```dart\n  Assets.images.values // <List<AssetGenImage>>[chip1, chip2, logo, profileJpg, profilePng];\n  ```\n- [#292](https://github.com/FlutterGen/flutter_gen/pull/292) Support an ImageProvider.\n  ```dart\n  // Assets.images.chip.provider()\n  Container(\n    height: 400,\n    decoration: BoxDecoration(\n      image: DecorationImage(\n        image: Assets.images.chip.provider(),\n      ),\n    ),\n    child: const Center(child: Text('Deco')),\n  ),\n\n  ```\n- [#294](https://github.com/FlutterGen/flutter_gen/pull/294) [**BREAKING CHANGES**] Moved the `style` and `package_parameter_enabled` to under assets.outputs scope.\n  ```yaml\n\n  # ❌ Before\n  flutter_gen:\n    # ...\n    assets:\n      package_parameter_enabled: true\n      style: snake-case\n      outputs:\n        class_name: MyAssets\n\n  # ⭕️ After\n  flutter_gen:\n    # ...\n    assets:\n      outputs:\n        class_name: MyAssets\n        package_parameter_enabled: true\n        style: snake-case\n  ```\n\n**Bug fix**  \n- [#287 ](https://github.com/FlutterGen/flutter_gen/issues/287) Delete the generated files then flutter_gen won't generate files again\n  - [#dart-lang/build#3364](https://github.com/dart-lang/build/issues/3364) Aggregate builder not rebuild when one of multiple output files is deleted.\n\n\n## 4.3.0\n\n**Feature**\n- [#264](https://github.com/FlutterGen/flutter_gen/pull/264) Add `keyName` to asset generate file.\n  - [#248](https://github.com/FlutterGen/flutter_gen/pull/248)\n  - [#251](https://github.com/FlutterGen/flutter_gen/pull/251)\n\n**Bug fix**\n- [#247](https://github.com/FlutterGen/flutter_gen/pull/247) Make the default scale value null, so Flutter decides the one to use.\n\n## 4.2.1, 4.2.1+1\n\n**Bug fix**\n- [#236](https://github.com/FlutterGen/flutter_gen/issues/236) The crypto package 3.0.2 conflict in flutter_gen_runner 4.2.0 with integration_test.\n\n## 4.2.0\n\n**Feature**\n- [#208](https://github.com/FlutterGen/flutter_gen/pull/208) Add scale and opacity parameters to Image().\n- [#221](https://github.com/FlutterGen/flutter_gen/pull/221) Support for build_runner watch.\n- [#227](https://github.com/FlutterGen/flutter_gen/pull/227) Maintenance for Flutter3 (flutter_lints to 2.0.1). \n- [#229](https://github.com/FlutterGen/flutter_gen/pull/229) Removed the AssetImage inheritance from AssetGenImage.\n  - [Extending package information to asset types other than AssetGenImage.](https://github.com/FlutterGen/flutter_gen/pull/162) \n  - [Added 'gen_for_package:true/false' param to support asset generation for a package.](https://github.com/FlutterGen/flutter_gen/pull/213) \n  ```dart\n  // Before\n  Widget build(BuildContext context) {\n    return Image(image: Assets.images.chip);  // Can't use this.\n  }\n  // After\n  Widget build(BuildContext context) {\n    return Assets.images.chip.image();\n  }\n  ```\n  - Added example_resource package for how to use another package resources from an app.\n  ```dart\n  # file: example_resources/pubspec.yaml\n  # ... \n  flutter_gen:\n    # ...\n    assets:\n      enabled: true\n      package_parameter_enabled: true\n\n  #...\n  ```\n- [#230](https://github.com/FlutterGen/flutter_gen/pull/230) Add coverage ignore comment on generated file headers.\n- Update collection to 1.16.0.\n- Update min dart sdk to >=2.14.0 <3.0.0.\n\n\n**Development**\n- Update to Dart 2.17.1\n- Update to Flutter 3.0.1\n\n\n## 4.1.6, 4.1.6+1\n\n**Feature**\n- [#199](https://github.com/FlutterGen/flutter_gen/pull/199) [#201](https://github.com/FlutterGen/flutter_gen/pull/201) Expose some parameters of SvgPicture (flutter_svg).\n  - theme\n  - cacheColorFilter\n\n## 4.1.5\n\n**Bug fix**  \n- [#187](https://github.com/FlutterGen/flutter_gen/issues/187) Update dependencies.\n  - analyzer\n\n## 4.1.4\n\n**Feature**\n- [#180](https://github.com/FlutterGen/flutter_gen/issues/180) [#182](https://github.com/FlutterGen/flutter_gen/pull/182) Update to dartx 1.0.0 and json_serializable to 6.0.0\n\n**Development**\n- Update to Dart 2.15.0\n- Update to Flutter 2.8.1\n\n## 4.1.3\n\n**Bug fix**  \n- [#172](https://github.com/FlutterGen/flutter_gen/pull/172) [#173](https://github.com/FlutterGen/flutter_gen/pull/173) Add unnecessary_import in ignore_for_title because cause warning from Dart 2.15.\n\n## 4.1.2+1, 4.1.2+2\n\n**Development**  \n- Added sample code.\n\n## 4.1.2\n\n**Bug fix**\n- [#156](https://github.com/FlutterGen/flutter_gen/pull/156) The Dartdocs generate different strings on Windows and Ubuntu.\n\n## 4.1.0\n\n**Feature**\n- [#138](https://github.com/FlutterGen/flutter_gen/pull/138) Generate dartdoc as follows.\n  ```dart\n  /// File path: pictures/chip5.jpg\n  AssetGenImage get chip5 => const AssetGenImage('pictures/chip5.jpg');\n  /// Color: #979797\n  static const Color gray410 = Color(0xFF979797);\n  ```\n- [#143](https://github.com/FlutterGen/flutter_gen/pull/143) Support [Rive](https://rive.app/) files type. \n  ```yaml\n  flutter_gen:\n    integrations:\n      rive: true\n  ```\n- [#150](https://github.com/FlutterGen/flutter_gen/pull/150) Added the --version option for command-line.\n  ```shell\n  % fluttergen --version \n  FlutterGen v4.1.0\n  ```\n**Bug fix**\n- [#134](https://github.com/FlutterGen/flutter_gen/pull/134) Added the ability to support the at symbol (@) in file names.\n  ```dart\n  AssetGenImage get logo2x => const AssetGenImage('assets/images/logo@2x.png');\n  ```\n**Development**\n- Update to Dart 2.14.4.\n- Update to Flutter 2.5.3.\n- Replace to renovate.\n\n## 4.0.1\n\n**Bug fix**\n- [#134](https://github.com/FlutterGen/flutter_gen/issues/134) Support the at symbol (@) in file names.\n- [#139](https://github.com/FlutterGen/flutter_gen/issues/139) Error: Method not found: '$checkedCreate\n\n**Development**\n- Replace to flutter_lints.\n\n## 4.0.0\n\n**Features**\n- [BREAKING] Ended support for Non null safety codes.\n- Use for `line_length` instead of `lineLength`.\n\n\n**Development**\n- Replace to [Melos](https://pub.dev/packages/melos).\n- Add VSCode setting.\n\n## 3.1.2\n\n- [#117](https://github.com/FlutterGen/flutter_gen/issues/117) Update to analyzer 2.0.0.  \n[flutter_gen_runner (flutter_gen_core) 3.1.2 -> analyzer 2.0.0 workaround](https://github.com/FlutterGen/flutter_gen/issues/121)\n  ```yaml\n  dependency_overrides:\n    meta: ^1.7.0\n  ```\n\n- [#110](https://github.com/FlutterGen/flutter_gen/pull/110) Replace null safety dart style package.  \n\n## 3.1.1\n\n**Features** & **Bug fix**\n- [#103](https://github.com/FlutterGen/flutter_gen/pull/103) Add option packageParameterEnabled to control whether to generate package parameter for assets or not.  \n\n## 3.1.0\n\n**Features**  \n- [#98](https://github.com/FlutterGen/flutter_gen/pull/98) Support for adding assets from a package  \n\n\n## 3.0.0, 3.0.1, 3.0.2\n\n- Support Null Safety\n```yaml\nflutter_gen:\n  output: lib/gen/\n  line_length: 80\n  null_safety: true # Optional (default: true)\n```\n\n## 2.0.1, 2.0.2, 2.0.3\n\n- Update dependencies\n\n## 2.0.0\n\nNew Feature\n- [BREAKING CHANGE] [#49](https://github.com/FlutterGen/flutter_gen/issues/49) [#53](https://github.com/FlutterGen/flutter_gen/issues/53) Name collision with flutter localization when using build_runner\n  ```yaml\n  # Before\n  # dev_dependencies:\n  #  flutter_gen: 1.3.1\n  \n  # After\n  dev_dependencies:\n    flutter_gen_runner: ^2.0.0\n  ```\n- [#74](https://github.com/FlutterGen/flutter_gen/issues/74) Doesn't generate assets.gen.dart when there are no assets\n  ```yaml\n  flutter_gen:\n    fonts:\n      enabled: false\n  ```\n- [#59](https://github.com/FlutterGen/flutter_gen/issues/59) Handling duplicate file names\n  ```dart\n  // generated codes\n  static const AssetGenImage imagesProfileJpg = AssetGenImage('assets/images/profile.jpg'); \n  static const AssetGenImage imagesProfilePng = AssetGenImage('assets/images/profile.png');\n  ```\n\n\n**Bug fix**\n- [#75](https://github.com/FlutterGen/flutter_gen/issues/75) Null safety support for generated files \n\n## 1.3.1\n\n**Bug fix**\n- [#60](https://github.com/FlutterGen/flutter_gen/issues/60) Set files like .DS_Store to the ignore list.\n\n## 1.3.0\n\nNew Feature\n- [#46](https://github.com/FlutterGen/flutter_gen/issues/46) Added support for unknown mime type files.\n- Added support for [Rive (previously Flare)](https://rive.app/) files.\n\n## 1.2.2\n\n**Bug fix**\n- [#51](https://github.com/FlutterGen/flutter_gen/pull/51) Added support for Key parameter in image() and svg().\n\n## 1.2.1\n\n**Bug fix**\n- [#42](https://github.com/FlutterGen/flutter_gen/pull/42) Generated output folder name not being respected\n\n## 1.2.0\n\nNew Feature\n- [#40](https://github.com/FlutterGen/flutter_gen/pull/40) Support MaterialAccentColor\n\n## 1.1.0\n\nNew Feature\n  - [#33](https://github.com/FlutterGen/flutter_gen/pull/33) Support to generate flat hierarchy assets with field name style:\n    - camel-case\n    - snake-case\n    - dot-delimiter (Default)\n\n## 1.0.3\n\n**Bug fix**\n  - Insufficient params of flutter_svg [#32](https://github.com/FlutterGen/flutter_gen/pull/34)\n## 1.0.2\n\n**Bug fix**\n  - Generate sorted statements [#27](https://github.com/FlutterGen/flutter_gen/pull/27)\n  - Make Windows work properly [#28](https://github.com/FlutterGen/flutter_gen/pull/28) \n\n## 1.0.1\n\n**Bug fix**\n  - Issue [#21](https://github.com/FlutterGen/flutter_gen/issues/21)\n\n## 1.0.0\n\nInitial release.\n\n- Assets generator\n  - Supported image type.\n  - Supported SVG as an integration.\n  - And others.\n\n- Fonts generator\n- Colors generator\n  - Supported xml file.\n    - MaterialColor\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1025390625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[INSERT CONTACT METHOD].\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.1826171875,
          "content": "# Contributing to FlutterGen\n\n_See also: [Contributor Covenant Code of Conduct](https://github.com/FlutterGen/flutter_gen/blob/main/CODE_OF_CONDUCT.md)_\n\n## Things you will need\n\n * Linux, Mac OS X, or Windows.\n * Flutter and Dart (Stable channel)\n   * [Melos](https://melos.invertase.dev/)\n * Git\n\n## [Melos](https://melos.invertase.dev/getting-started) Installation\nMelos can be installed as a global package via pub.dev:\n```sh\n$ dart pub global activate melos\n```\n\nOnce installed & setup, Melos needs to be bootstrapped. Bootstrapping has 2 primary roles:\n- Installing all package dependencies (internally using pub get).\n- Locally linking any packages together.\n```sh\n$ melos bootstrap\n```\n\n## Running the FlutterGen\n\n#### Use as Dart command\nTo run `pub get` to make sure its dependencies have been downloaded, and use `dart command`.\n```sh\n$ dart packages/command/bin/flutter_gen_command.dart --config example/pubspec.yaml\n```\n\nOr melos\n```sh\n$ melos gen:examples:command\n```\n\n#### Use as part of build_runner\n```sh\n$ cd example\n$ flutter packages pub run build_runner build\n```\n\nOr melos\n```sh\n$ melos gen:example:build_runner\n```\n\n## Running the tests\n\nTo run the unit tests:\n\n```\n$ melos test\n```\n\n## Contributing code\n\nWe gladly accept contributions via GitHub pull requests.\n\nPlease peruse the\n[Flutter style guide](https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo) before\nworking on anything non-trivial. These guidelines are intended to\nkeep the code consistent and avoid common pitfalls.\n\nTo send us a pull request:\n\n* `git pull-request` (if you are using [Hub](http://github.com/github/hub/)) or\n  go to `https://github.com/FlutterGen/flutter_gen` and click the\n  \"Compare & pull request\" button\n\nPlease make sure all your checkins have detailed commit messages explaining the patch.\n\nThe tests are run automatically on contributions using GitHub Actions. However, due to\ncost constraints, pull requests from non-committers may not run all the tests\nautomatically.\n\nOnce you've gotten an LGTM from a project maintainer and once your PR has received\nthe green light from all our automated testing, wait for one the package maintainers\nto merge the pull request and `pub submit` any affected packages.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2020-2022 FlutterGen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.8125,
          "content": "<p align=\"center\">\n  <a href=\"https://pub.dev/packages/flutter_gen\">\n    <img src=\"https://github.com/FlutterGen/flutter_gen/raw/main/art/logo.png\" width=\"480px\" alt=\"Logo\"/>\n  </a>\n</p>\n<p align=\"center\">\n  <a href=\"https://pub.dartlang.org/packages/flutter_gen\">\n    <img src=\"https://img.shields.io/pub/v/flutter_gen.svg\" alt=\"Pub\">\n  </a>\n  <a href=\"https://github.com/FlutterGen/flutter_gen/actions?query=workflow%3A%22Dart+CI%22\">\n    <img src=\"https://github.com/FlutterGen/flutter_gen/workflows/Build/badge.svg\" alt=\"Build Status\"/>\n  </a>\n  <a href=\"https://codecov.io/gh/FlutterGen/flutter_gen\">\n    <img src=\"https://codecov.io/gh/FlutterGen/flutter_gen/branch/main/graph/badge.svg\" alt=\"Coverage\"/>\n  </a>\n</p>\n\nThe Flutter code generator for your assets, fonts, colors, … — Get rid of all String-based APIs.\n\nInspired by [SwiftGen](https://github.com/SwiftGen/SwiftGen).\n\n## Motivation\n\nUsing asset path string directly is not safe.\n\n```yaml\n# pubspec.yaml\nflutter:\n  assets:\n    - assets/images/profile.jpg\n```\n\n❌ **Bad**  \nWhat would happen if you made a typo?\n\n```dart\nWidget build(BuildContext context) {\n  return Image.asset('assets/images/profile.jpeg');\n}\n\n// The following assertion was thrown resolving an image codec:\n// Unable to load asset: assets/images/profile.jpeg\n```\n\n⭕️ **Good**  \nWe want to use it safely.\n\n```dart\nWidget build(BuildContext context) {\n  return Assets.images.profile.image();\n}\n```\n\n## Installation\n\n### Homebrew\n\nWorks with macOS and Linux.\n\n```sh\nbrew install FlutterGen/tap/fluttergen\n```\n\n### asdf\n\nWorks with macOS and Linux.\nasdf-fluttergen is compatible with [mise](https://mise.jdx.dev/).\n\n```sh\n# add plugin\nasdf plugin add fluttergen\n# or\nasdf plugin add fluttergen https://github.com/FlutterGen/asdf-fluttergen.git\n\n# install fluttergen\nasdf install fluttergen latest\n```\n\nSee also: [FlutterGen/asdf-fluttergen](https://github.com/FlutterGen/asdf-fluttergen)\n\n### Pub Global\n\nWorks with macOS, Linux and Windows.\n\n```sh\ndart pub global activate flutter_gen\n```\n\nYou might need to [set up your path](https://dart.dev/tools/pub/cmd/pub-global#running-a-script-from-your-path).\n\n### As a part of build_runner\n\n1. Add [build_runner] and [FlutterGen] to your package's pubspec.yaml file:\n\n```\ndev_dependencies:\n  build_runner:\n  flutter_gen_runner:\n```\n\n2. Install [FlutterGen]\n\n```sh\nflutter pub get\n```\n\n3. Use [FlutterGen]\n\n```sh\ndart run build_runner build\n```\n\n### GitHub Actions\n\nWorks with macOS and Linux.\n\n```yaml\n- uses: FlutterGen/setup-fluttergen@v1\n  with:\n    version: ${{ fluttergen_version }}\n```\n\nSee also: [FlutterGen/setup-fluttergen](https://github.com/FlutterGen/setup-fluttergen)\n\n## Usage\n\nRun `fluttergen` after the configuration [`pubspec.yaml`](https://dart.dev/tools/pub/pubspec).\n\n```sh\nfluttergen -h\n\nfluttergen -c example/pubspec.yaml\n```\n\n## Configuration file\n\n[FlutterGen] generates dart files based on the key **`flutter`** and **`flutter_gen`** of [`pubspec.yaml`](https://dart.dev/tools/pub/pubspec).  \nDefault configuration can be found [here](https://github.com/FlutterGen/flutter_gen/tree/main/packages/core/lib/settings/config_default.dart). \n\n```yaml\n# pubspec.yaml\n# ...\n\nflutter_gen:\n  output: lib/gen/ # Optional (default: lib/gen/)\n  line_length: 80 # Optional (default: 80)\n\n  # Optional\n  integrations:\n    flutter_svg: true\n    rive: true\n    lottie: true\n\n  colors:\n    inputs:\n      - assets/color/colors.xml\n\nflutter:\n  uses-material-design: true\n  assets:\n    - assets/images/\n\n  fonts:\n    - family: Raleway\n      fonts:\n        - asset: assets/fonts/Raleway-Regular.ttf\n        - asset: assets/fonts/Raleway-Italic.ttf\n          style: italic\n```\n\n### build.yaml\n\nYou can also configure generate options in the `build.yaml`, it will be read before the `pubspec.yaml` if it exists.\n\n\n```yaml\n# build.yaml\n# ...\n\ntargets:\n  $default:\n    builders:\n      flutter_gen_runner: # or flutter_gen\n        options: \n          output: lib/build_gen/ # Optional (default: lib/gen/)\n          line_length: 120 # Optional (default: 80)\n```\n\n## Available Parsers\n\n### Assets\n\nFollowing the doc\n[Adding assets and images#Specifying assets](https://flutter.dev/docs/development/ui/assets-and-images#specifying-assets)\nto specify assets, then [FlutterGen] will generate related dart files.  \nNo other specific configuration is required.  \n_Ignore duplicated._\n\n```yaml\n# pubspec.yaml\nflutter:\n  assets:\n    - assets/images/\n    - assets/images/chip3/chip.jpg\n    - assets/images/chip4/chip.jpg\n    - assets/images/icons/paint.svg\n    - assets/images/icons/dart@test.svg\n    - assets/json/fruits.json\n    - assets/flare/Penguin.flr\n    - assets/rive/vehicles.riv\n    - pictures/ocean_view.jpg\n```\n\nThese configurations will generate **`assets.gen.dart`** under the **`lib/gen/`** directory by default.\n\n#### Flavored assets\n\nFlutter supports\n[Conditionally bundling assets based on flavor](https://docs.flutter.dev/deployment/flavors#conditionally-bundling-assets-based-on-flavor).\nAssets are only available with flavors if specified.\n`flutter_gen` will generate the specified `flavors` for assets regardless the current flavor.\nThe `flavors` field accessible though `.flavors`, for example:\n\n```dart\nprint(MyAssets.images.chip4.flavors); // -> {'extern'}\n```\n\n#### Excluding generating for assets\n\nYou can specify `flutter_gen > assets > exclude` using `Glob` patterns to exclude particular assets.\n\n```yaml\nflutter_gen:\n  assets:\n    exclude:\n      - folder-your-want-to-exclude/**\n      - specified-asset.jpg\n```\n\nSee more patterns with the `package:glob`.\n\n#### Generate for packages\n\nIf you want to generate assets for a package,\nuse `package_parameter_enabled` under `flutter_gen > assets > outputs`.\n\n```yaml\nflutter_gen:\n  assets:\n    outputs:\n      package_parameter_enabled: true # <- Add this line.\n```\n\nThis would add the package constant to the generated class. For example:\n\n```dart\nclass Assets {\n  Assets._();\n\n  static const String package = 'test';\n\n  static const $AssetsImagesGen images = $AssetsImagesGen();\n  static const $AssetsUnknownGen unknown = $AssetsUnknownGen();\n}\n```\n\nThen you can use assets with the package implicitly or explicitly:\n\n```dart\n// Implicit usage for `Image`/`SvgPicture`/`Lottie`.\nWidget build(BuildContext context) {\n  return Assets.images.icons.paint.svg(\n    width: 120,\n    height: 120,\n  );\n}\n```\nor\n```dart\n// Explicit usage for `Image`/`SvgPicture`/`Lottie`.\nWidget build(BuildContext context) {\n  return SvgPicture.asset(\n    Assets.images.icons.paint.path,\n    package: Assets.package,\n    width: 120,\n    height: 120,\n  );\n}\n```\n\n#### Generate directories path\n\nIf you want to generate the path of directories,\nuse `directory_path_enabled` under `flutter_gen > assets > outputs`.\n\n```yaml\nflutter_gen:\n  assets:\n    outputs:\n      directory_path_enabled: true # <- Add this line.\n```\n\nThis would add the `path` getter to the generated directory class. For example:\n\n```dart\nclass $AssetsImagesGen {\n  const $AssetsImagesGen();\n\n  ///******///\n\n  /// Directory path: assets/images\n  String get path => 'assets/images';\n}\n```\n\n#### Including additional metadata\n\nAt build time, additional metadata may be included in the generated class, by using the\n`parse_metadata` option.\n\n```yaml\nflutter_gen:\n  parse_metadata: true # <- Add this line (default: false)\n```\n\nFor image based assets, a new nullable `size` field is added to the\ngenerated class. For example:\n\n```dart\nAssetGenImage get logo => \n  const AssetGenImage('assets/images/logo.png', size: Size(209.0, 49.0));\n```\n\nWhich can now be used at runtime without parsing the information from the actual asset.\n\n```dart\nWidget build(BuildContext context) {\n  return Assets.images.logo.size!.width;\n}\n```\n\n#### Usage Example\n\n[FlutterGen] generates [Image](https://api.flutter.dev/flutter/widgets/Image-class.html) class if the asset is Flutter supported image format.\n\nExample results of `assets/images/chip.jpg`:\n\n- **`Assets.images.chip`** is an implementation of [`AssetImage class`](https://api.flutter.dev/flutter/painting/AssetImage-class.html).\n- **`Assets.images.chip.image(...)`** returns [`Image class`](https://api.flutter.dev/flutter/widgets/Image-class.html).\n- **`Assets.images.chip.provider(...)`** returns [`ImageProvider class`](https://api.flutter.dev/flutter/painting/ImageProvider-class.html).\n- **`Assets.images.chip.path`** just returns the path string.\n- **`Assets.images.chip.values`** just returns the values list.\n\n```dart\nWidget build(BuildContext context) {\n  return Assets.images.chip.image();\n}\n\nWidget build(BuildContext context) {\n  return Assets.images.chip.image(\n    width: 120,\n    height: 120,\n    fit: BoxFit.scaleDown,\n  );\n\nWidget build(BuildContext context) {\n  // Assets.images.chip.path = 'assets/images/chip3/chip3.jpg'\n  return Image.asset(Assets.images.chip.path);\n}\n\n```\n\nIf you are using SVG images with [flutter_svg](https://pub.dev/packages/flutter_svg) you can use the integration feature.\n\n```yaml\n# pubspec.yaml\nflutter_gen:\n  integrations:\n    flutter_svg: true\n\nflutter:\n  assets:\n    - assets/images/icons/paint.svg\n```\n\n```dart\nWidget build(BuildContext context) {\n  return Assets.images.icons.paint.svg(\n    width: 120,\n    height: 120\n  );\n}\n```\n\n**Available Integrations**\n\n| Packages                                                | File extension       | Setting               | Usage                                     |\n|---------------------------------------------------------|----------------------|-----------------------|-------------------------------------------|\n| [flutter_svg](https://pub.dev/packages/flutter_svg)     | .svg                 | `flutter_svg: true`   | Assets.images.icons.paint.**svg()**       |\n| [rive](https://pub.dev/packages/rive)                   | .riv                 | `rive: true`          | Assets.rive.vehicles.**rive()**           |\n| [lottie](https://pub.dev/packages/lottie)               | .json, .zip, .lottie | `lottie: true`        | Assets.lottie.hamburgerArrow.**lottie()** |\n\nIn other cases, the asset is generated as String class.\n\n```dart\n// If don't use the Integrations.\nfinal svg = SvgPicture.asset(Assets.images.icons.paint);\n\nfinal json = await rootBundle.loadString(Assets.json.fruits);\n```\n\n[FlutterGen] also support generating other style of `Assets` class:\n\n```yaml\n# pubspec.yaml\nflutter_gen:\n  assets:\n    outputs: \n      # Assets.imagesChip\n      # style: camel-case\n\n      # Assets.images_chip\n      # style: snake-case\n\n      # Assets.images.chip (default style)\n      # style: dot-delimiter\n\nflutter:\n  assets:\n    - assets/images/chip.png\n```\n\nThe root directory will be omitted if it is either **`assets`** or **`asset`**.\n\n```\nassets/images/chip3/chip.jpg      => Assets.images.chip3.chip\nassets/images/chip4/chip.jpg      => Assets.images.chip4.chip\nassets/images/icons/paint.svg     => Assets.images.icons.paint\nassets/images/icons/dart@test.svg => Assets.images.icons.dartTest\nassets/json/fruits.json           => Assets.json.fruits\npictures/ocean_view.jpg           => Assets.pictures.oceanView\n```\n\n[Example of code generated by FlutterGen](https://github.com/FlutterGen/flutter_gen/blob/main/examples/example/lib/gen/assets.gen.dart)\n\n### Fonts\n\nJust follow the doc [Use a custom font](https://flutter.dev/docs/cookbook/design/fonts) to specify fonts, then [FlutterGen] will generate related dart files.  \nNo other specific configuration is required.  \n_Ignore duplicated._\n\n```yaml\n# pubspec.yaml\nflutter:\n  fonts:\n    - family: Raleway\n      fonts:\n        - asset: assets/fonts/Raleway-Regular.ttf\n        - asset: assets/fonts/Raleway-Italic.ttf\n          style: italic\n    - family: RobotoMono\n      fonts:\n        - asset: assets/fonts/RobotoMono-Regular.ttf\n        - asset: assets/fonts/RobotoMono-Bold.ttf\n          weight: 700\n```\n\nThese configurations will generate **`fonts.gen.dart`** under the **`lib/gen/`** directory by default.\n\n#### Generate for packages\n\nIf you want to generate fonts for a package,\nuse `package_parameter_enabled` under `flutter_gen > fonts > outputs`.\n\n```yaml\nflutter_gen:\n  fonts:\n    outputs:\n      package_parameter_enabled: true # <- Add this line.\n```\n\nThis would add the package constant to the generated class. For example:\n\n```dart\nclass Fonts {\n  Fonts._();\n\n  static const String package = 'test';\n\n  static const String raleway = 'packages/$package/Raleway';\n  static const String robotoMono = 'packages/$package/RobotoMono';\n}\n```\n\n#### Usage Example\n\n```dart\nText(\n  'Hi there, I\\'m FlutterGen',\n  style: TextStyle(\n    fontFamily: FontFamily.robotoMono,\n    fontFamilyFallback: const [FontFamily.raleway],\n  ),\n)\n```\n\n[Example of code generated by FlutterGen](https://github.com/FlutterGen/flutter_gen/tree/main/examples/example/lib/gen/fonts.gen.dart)\n\n### Colors\n\n[FlutterGen] supports generating colors from [XML](examples/example/assets/color/colors.xml) format files.  \n_Ignore duplicated._\n\n```yaml\n# pubspec.yaml\nflutter_gen:\n  colors:\n    inputs:\n      - assets/color/colors.xml\n      - assets/color/colors2.xml\n```\n\n[FlutterGen] can generate a [Color](https://api.flutter.dev/flutter/material/Colors-class.html) class based on the `name` attribute and the color hex value.\nIf the element has the attribute `type`, then a specially color will be generated.\n\nCurrently supported special color types:\n\n- [MaterialColor](https://api.flutter.dev/flutter/material/MaterialColor-class.html)\n- [MaterialAccentColor](https://api.flutter.dev/flutter/material/MaterialAccentColor-class.html)\n\n> Noticed that there is no official material color generation algorithm. The implementation is based on the [mcg](https://github.com/mbitson/mcg) project.\n\n```xml\n<color name=\"milk_tea\">#F5CB84</color>\n<color name=\"cinnamon\" type=\"material\">#955E1C</color>\n<color name=\"yellow_ocher\" type=\"material material-accent\">#DF9527</color>\n```\n\nThese configurations will generate **`colors.gen.dart`** under the **`lib/gen/`** directory by default.\n\n#### Usage Example\n\n```dart\nText(\n  'Hi there, I\\'m FlutterGen',\n  style: TextStyle(\n    color: ColorName.denim,\n  ),\n```\n\n[Example of code generated by FlutterGen](https://github.com/FlutterGen/flutter_gen/tree/main/examples/example/lib/gen/colors.gen.dart)\n\n## Credits\n\nThe material color generation implementation is based on [mcg](https://github.com/mbitson/mcg) and [TinyColor](https://github.com/bgrins/TinyColor).\n\n## Issues\n\nPlease file [FlutterGen] specific issues, bugs, or feature requests in our [issue tracker](https://github.com/FlutterGen/flutter_gen/issues/new).\n\nPlugin issues that are not specific to [FlutterGen] can be filed in the [Flutter issue tracker](https://github.com/flutter/flutter/issues/new).\n\n### Known Issues\n\n#### Bad State: No Element when using build_runner\nIf you get an error message like this:\n```\n[SEVERE] flutter_gen_runner:flutter_gen_runner on $package$:\n\nBad state: No element\n[SEVERE] Failed after 16.0s\n```\n\nThe you most likely have a customized `build.yaml` to configure the build runner. In that case, all you have to do is to add the `pubspec.yaml` as build source to your `build.yaml`\n\n```yaml\ntargets:\n  $default:\n    sources:\n      include:\n        - pubspec.yaml  # add this line\n        - ...\n```\n\nSee #268 for the corresponding issue discussion.\n\n### Error with [internationalization](https://docs.flutter.dev/development/accessibility-and-localization/internationalization)\n\nPlease try to remove `generate: true` in your `pubspec.yaml` and disable `synthetic-package` in your `l10n.yaml` like:\n\n```yaml\n# pubspec.yaml\nflutter:\n  generate: true <--- ⚠️Remove this line⚠️\n```\n\n```yaml\n# l10n.yaml\narb-dir: lib/l10n\ntemplate-arb-file: app_en.arb\noutput-localization-file: app_localizations.dart\nsynthetic-package: false <--- ⚠️Add this line⚠️\n```\n\nIf you get \n\n## Contributing\n\n**We are looking for co-developers.**\n\nIf you wish to contribute a change to any of the existing plugins in this repo,\nplease review our [contribution guide](https://github.com/FlutterGen/flutter_gen/blob/master/CONTRIBUTING.md)\nand open a [pull request](https://github.com/FlutterGen/flutter_gen/pulls).\n\n[build_runner]: https://pub.dev/packages/build_runner\n[fluttergen]: https://pub.dev/packages/flutter_gen\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.853515625,
          "content": "# See: https://dart-lang.github.io/linter/lints/\ninclude: package:lints/recommended.yaml\n\nanalyzer:\n  exclude:\n    - 'example'\n    - '**.g.dart'\n    - 'test_resources/**'\n  errors:\n    deprecated_member_use_from_same_package: ignore\n    unnecessary_import: error\n    unawaited_futures: error\n\nlinter:\n  rules:\n    # always_use_package_imports: true\n    avoid_equals_and_hash_code_on_mutable_classes: true\n    avoid_classes_with_only_static_members: true\n    directives_ordering: true\n    flutter_style_todos: true\n    prefer_int_literals: true\n    prefer_final_in_for_each: true\n    prefer_single_quotes: true\n    # require_trailing_commas: true\n    # sort_constructors_first: true\n    unawaited_futures: true\n    unnecessary_await_in_return: true\n    use_to_and_as_if_applicable: true\n    unnecessary_lambdas: true\n    use_raw_strings: true\n    use_super_parameters: false\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.443359375,
          "content": "codecov:\n  notify:\n    wait_for_ci: true\n  require_ci_to_pass: yes\n\ncoverage:\n  status:\n    project:\n      default:\n        # basic\n        target: 0%\n        threshold: 0%\n        base: auto\n        # advanced\n        branches: null\n        if_no_uploads: error\n        if_not_found: success\n        if_ci_failed: error\n        only_pulls: false\n        flags: null\n        paths: null\n\nignore:\n  - 'examples/**/*'\n  - '**/*.g.dart'\n  - '**/*.gen.dart'\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fluttergen.iml",
          "type": "blob",
          "size": 0.6728515625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"WEB_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build\" />\n    </content>\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"Dart SDK\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Dart Packages\" level=\"project\" />\n  </component>\n</module>\n"
        },
        {
          "name": "melos.yaml",
          "type": "blob",
          "size": 2.1455078125,
          "content": "name: FlutterGen\n\npackages:\n  - packages/**\n  - integrations/**\n  - examples/**\n\nide:\n  intellij:\n    enabled: true\n    moduleNamePrefix: ''\n\ncommand:\n  clean:\n    hooks:\n      post:\n        run: flutter clean\n        exec:\n          concurrency: 1\n        description: flutter clean\n\nscripts:\n  upgrade:\n    run: dart pub upgrade\n    exec:\n      concurrency: 1\n    packageFilters:\n      flutter: false\n    description: dart pub upgrade\n\n  analyze:\n    exec: flutter analyze\n    description: flutter analyze\n\n  format:\n    run: dart format --set-exit-if-changed .\n    description: dart format --set-exit-if-changed .\n\n  build:\n    exec: flutter build apk\n    packageFilters:\n      scope: example\n    description: flutter build apk\n\n  gen:build_runner:\n    exec: dart run build_runner build --delete-conflicting-outputs\n    packageFilters:\n      ignore:\n        - example\n        - example_resources\n      dependsOn: build_runner\n    description: dart run build_runner build --delete-conflicting-outputs\n\n  gen:examples:command:\n    exec: dart ../../packages/command/bin/flutter_gen_command.dart\n    packageFilters:\n      scope:\n        - example\n        - example_resources\n    description: dart ../../packages/command/bin/flutter_gen_command.dart\n\n  gen:examples:build_runner:\n    run: flutter pub run build_runner build --delete-conflicting-outputs\n    exec:\n      concurrency: 1\n    packageFilters:\n      scope:\n        - example\n        - example_resources\n    description: flutter pub run build_runner build --delete-conflicting-outputs\n\n  test:\n    run: |\n      melos test:dart --no-select\n      melos test:flutter --no-select\n    description: dart & flutter test\n\n  test:dart:\n    run: dart test --concurrency=1\n    exec:\n      concurrency: 1\n      failFast: true\n    packageFilters:\n      flutter: false\n      dependsOn: test\n    description: dart test\n\n  test:flutter:\n    run: flutter test --concurrency=1\n    exec:\n      concurrency: 1\n      failFast: true\n    packageFilters:\n      flutter: true\n      dependsOn: flutter_test\n    description: flutter test\n\n  coverage:\n    run: |\n      bash ./scripts/coverage.sh packages/core\n    description: bash ./scripts/coverage.sh packages/core\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.4521484375,
          "content": "{\n  \"name\": \"flutter_gen\",\n  \"private\": true,\n  \"author\": \"wasabeef\",\n  \"scripts\": {\n    \"format\": \"prettier --config prettier.config.js --write '**/*.+(md|yml|yaml|json)'\",\n    \"prepare\": \"husky install\"\n  },\n  \"lint-staged\": {\n    \"*.dart\": [\n      \"melos format\"\n    ]\n  },\n  \"devDependencies\": {\n    \"husky\": \"8.0.3\",\n    \"lint-staged\": \"^15.0.0\",\n    \"prettier\": \"^3.0.3\",\n    \"prettier-plugin-packagejson\": \"^2.4.5\"\n  },\n  \"packageManager\": \"pnpm@8.15.9\"\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pnpm-lock.yaml",
          "type": "blob",
          "size": 16.466796875,
          "content": "lockfileVersion: '6.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\ndevDependencies:\n  husky:\n    specifier: 8.0.3\n    version: 8.0.3\n  lint-staged:\n    specifier: ^15.0.0\n    version: 15.3.0\n  prettier:\n    specifier: ^3.0.3\n    version: 3.4.2\n  prettier-plugin-packagejson:\n    specifier: ^2.4.5\n    version: 2.5.6(prettier@3.4.2)\n\npackages:\n\n  /@pkgr/core@0.1.1:\n    resolution: {integrity: sha512-cq8o4cWH0ibXh9VGi5P20Tu9XF/0fFXl9EUinr9QfTM7a7p0oTA4iJRCQWppXR1Pg8dSM0UCItCkPwsk9qWWYA==}\n    engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}\n    dev: true\n\n  /ansi-escapes@7.0.0:\n    resolution: {integrity: sha512-GdYO7a61mR0fOlAsvC9/rIHf7L96sBc6dEWzeOu+KAea5bZyQRPIpojrVoI4AXGJS/ycu/fBTdLrUkA4ODrvjw==}\n    engines: {node: '>=18'}\n    dependencies:\n      environment: 1.1.0\n    dev: true\n\n  /ansi-regex@6.1.0:\n    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}\n    engines: {node: '>=12'}\n    dev: true\n\n  /ansi-styles@6.2.1:\n    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}\n    engines: {node: '>=12'}\n    dev: true\n\n  /braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n    dependencies:\n      fill-range: 7.1.1\n    dev: true\n\n  /chalk@5.4.1:\n    resolution: {integrity: sha512-zgVZuo2WcZgfUEmsn6eO3kINexW8RAE4maiQ8QNs8CtpPCSyMiYsULR3HQYkm3w8FIA3SberyMJMSldGsW+U3w==}\n    engines: {node: ^12.17.0 || ^14.13 || >=16.0.0}\n    dev: true\n\n  /cli-cursor@5.0.0:\n    resolution: {integrity: sha512-aCj4O5wKyszjMmDT4tZj93kxyydN/K5zPWSCe6/0AV/AA1pqe5ZBIw0a2ZfPQV7lL5/yb5HsUreJ6UFAF1tEQw==}\n    engines: {node: '>=18'}\n    dependencies:\n      restore-cursor: 5.1.0\n    dev: true\n\n  /cli-truncate@4.0.0:\n    resolution: {integrity: sha512-nPdaFdQ0h/GEigbPClz11D0v/ZJEwxmeVZGeMo3Z5StPtUTkA9o1lD6QwoirYiSDzbcwn2XcjwmCp68W1IS4TA==}\n    engines: {node: '>=18'}\n    dependencies:\n      slice-ansi: 5.0.0\n      string-width: 7.2.0\n    dev: true\n\n  /colorette@2.0.20:\n    resolution: {integrity: sha512-IfEDxwoWIjkeXL1eXcDiow4UbKjhLdq6/EuSVR9GMN7KVH3r9gQ83e73hsz1Nd1T3ijd5xv1wcWRYO+D6kCI2w==}\n    dev: true\n\n  /commander@12.1.0:\n    resolution: {integrity: sha512-Vw8qHK3bZM9y/P10u3Vib8o/DdkvA2OtPtZvD871QKjy74Wj1WSKFILMPRPSdUSx5RFK1arlJzEtA4PkFgnbuA==}\n    engines: {node: '>=18'}\n    dev: true\n\n  /cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n    dev: true\n\n  /debug@4.4.0:\n    resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n    dependencies:\n      ms: 2.1.3\n    dev: true\n\n  /detect-indent@7.0.1:\n    resolution: {integrity: sha512-Mc7QhQ8s+cLrnUfU/Ji94vG/r8M26m8f++vyres4ZoojaRDpZ1eSIh/EpzLNwlWuvzSZ3UbDFspjFvTDXe6e/g==}\n    engines: {node: '>=12.20'}\n    dev: true\n\n  /detect-newline@4.0.1:\n    resolution: {integrity: sha512-qE3Veg1YXzGHQhlA6jzebZN2qVf6NX+A7m7qlhCGG30dJixrAQhYOsJjsnBjJkCSmuOPpCk30145fr8FV0bzog==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n    dev: true\n\n  /emoji-regex@10.4.0:\n    resolution: {integrity: sha512-EC+0oUMY1Rqm4O6LLrgjtYDvcVYTy7chDnM4Q7030tP4Kwj3u/pR6gP9ygnp2CJMK5Gq+9Q2oqmrFJAz01DXjw==}\n    dev: true\n\n  /environment@1.1.0:\n    resolution: {integrity: sha512-xUtoPkMggbz0MPyPiIWr1Kp4aeWJjDZ6SMvURhimjdZgsRuDplF5/s9hcgGhyXMhs+6vpnuoiZ2kFiu3FMnS8Q==}\n    engines: {node: '>=18'}\n    dev: true\n\n  /eventemitter3@5.0.1:\n    resolution: {integrity: sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==}\n    dev: true\n\n  /execa@8.0.1:\n    resolution: {integrity: sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==}\n    engines: {node: '>=16.17'}\n    dependencies:\n      cross-spawn: 7.0.6\n      get-stream: 8.0.1\n      human-signals: 5.0.0\n      is-stream: 3.0.0\n      merge-stream: 2.0.0\n      npm-run-path: 5.3.0\n      onetime: 6.0.0\n      signal-exit: 4.1.0\n      strip-final-newline: 3.0.0\n    dev: true\n\n  /fdir@6.4.2(picomatch@4.0.2):\n    resolution: {integrity: sha512-KnhMXsKSPZlAhp7+IjUkRZKPb4fUyccpDrdFXbi4QL1qkmFh9kVY09Yox+n4MaOb3lHZ1Tv829C3oaaXoMYPDQ==}\n    peerDependencies:\n      picomatch: ^3 || ^4\n    peerDependenciesMeta:\n      picomatch:\n        optional: true\n    dependencies:\n      picomatch: 4.0.2\n    dev: true\n\n  /fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n    dependencies:\n      to-regex-range: 5.0.1\n    dev: true\n\n  /get-east-asian-width@1.3.0:\n    resolution: {integrity: sha512-vpeMIQKxczTD/0s2CdEWHcb0eeJe6TFjxb+J5xgX7hScxqrGuyjmv4c1D4A/gelKfyox0gJJwIHF+fLjeaM8kQ==}\n    engines: {node: '>=18'}\n    dev: true\n\n  /get-stdin@9.0.0:\n    resolution: {integrity: sha512-dVKBjfWisLAicarI2Sf+JuBE/DghV4UzNAVe9yhEJuzeREd3JhOTE9cUaJTeSa77fsbQUK3pcOpJfM59+VKZaA==}\n    engines: {node: '>=12'}\n    dev: true\n\n  /get-stream@8.0.1:\n    resolution: {integrity: sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==}\n    engines: {node: '>=16'}\n    dev: true\n\n  /git-hooks-list@3.1.0:\n    resolution: {integrity: sha512-LF8VeHeR7v+wAbXqfgRlTSX/1BJR9Q1vEMR8JAz1cEg6GX07+zyj3sAdDvYjj/xnlIfVuGgj4qBei1K3hKH+PA==}\n    dev: true\n\n  /human-signals@5.0.0:\n    resolution: {integrity: sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==}\n    engines: {node: '>=16.17.0'}\n    dev: true\n\n  /husky@8.0.3:\n    resolution: {integrity: sha512-+dQSyqPh4x1hlO1swXBiNb2HzTDN1I2IGLQx1GrBuiqFJfoMrnZWwVmatvSiO+Iz8fBUnf+lekwNo4c2LlXItg==}\n    engines: {node: '>=14'}\n    hasBin: true\n    dev: true\n\n  /is-fullwidth-code-point@4.0.0:\n    resolution: {integrity: sha512-O4L094N2/dZ7xqVdrXhh9r1KODPJpFms8B5sGdJLPy664AgvXsreZUyCQQNItZRDlYug4xStLjNp/sz3HvBowQ==}\n    engines: {node: '>=12'}\n    dev: true\n\n  /is-fullwidth-code-point@5.0.0:\n    resolution: {integrity: sha512-OVa3u9kkBbw7b8Xw5F9P+D/T9X+Z4+JruYVNapTjPYZYUznQ5YfWeFkOj606XYYW8yugTfC8Pj0hYqvi4ryAhA==}\n    engines: {node: '>=18'}\n    dependencies:\n      get-east-asian-width: 1.3.0\n    dev: true\n\n  /is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n    dev: true\n\n  /is-plain-obj@4.1.0:\n    resolution: {integrity: sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==}\n    engines: {node: '>=12'}\n    dev: true\n\n  /is-stream@3.0.0:\n    resolution: {integrity: sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n    dev: true\n\n  /isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n    dev: true\n\n  /lilconfig@3.1.3:\n    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}\n    engines: {node: '>=14'}\n    dev: true\n\n  /lint-staged@15.3.0:\n    resolution: {integrity: sha512-vHFahytLoF2enJklgtOtCtIjZrKD/LoxlaUusd5nh7dWv/dkKQJY74ndFSzxCdv7g0ueGg1ORgTSt4Y9LPZn9A==}\n    engines: {node: '>=18.12.0'}\n    hasBin: true\n    dependencies:\n      chalk: 5.4.1\n      commander: 12.1.0\n      debug: 4.4.0\n      execa: 8.0.1\n      lilconfig: 3.1.3\n      listr2: 8.2.5\n      micromatch: 4.0.8\n      pidtree: 0.6.0\n      string-argv: 0.3.2\n      yaml: 2.6.1\n    transitivePeerDependencies:\n      - supports-color\n    dev: true\n\n  /listr2@8.2.5:\n    resolution: {integrity: sha512-iyAZCeyD+c1gPyE9qpFu8af0Y+MRtmKOncdGoA2S5EY8iFq99dmmvkNnHiWo+pj0s7yH7l3KPIgee77tKpXPWQ==}\n    engines: {node: '>=18.0.0'}\n    dependencies:\n      cli-truncate: 4.0.0\n      colorette: 2.0.20\n      eventemitter3: 5.0.1\n      log-update: 6.1.0\n      rfdc: 1.4.1\n      wrap-ansi: 9.0.0\n    dev: true\n\n  /log-update@6.1.0:\n    resolution: {integrity: sha512-9ie8ItPR6tjY5uYJh8K/Zrv/RMZ5VOlOWvtZdEHYSTFKZfIBPQa9tOAEeAWhd+AnIneLJ22w5fjOYtoutpWq5w==}\n    engines: {node: '>=18'}\n    dependencies:\n      ansi-escapes: 7.0.0\n      cli-cursor: 5.0.0\n      slice-ansi: 7.1.0\n      strip-ansi: 7.1.0\n      wrap-ansi: 9.0.0\n    dev: true\n\n  /merge-stream@2.0.0:\n    resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}\n    dev: true\n\n  /micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n    dev: true\n\n  /mimic-fn@4.0.0:\n    resolution: {integrity: sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==}\n    engines: {node: '>=12'}\n    dev: true\n\n  /mimic-function@5.0.1:\n    resolution: {integrity: sha512-VP79XUPxV2CigYP3jWwAUFSku2aKqBH7uTAapFWCBqutsbmDo96KY5o8uh6U+/YSIn5OxJnXp73beVkpqMIGhA==}\n    engines: {node: '>=18'}\n    dev: true\n\n  /ms@2.1.3:\n    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n    dev: true\n\n  /npm-run-path@5.3.0:\n    resolution: {integrity: sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n    dependencies:\n      path-key: 4.0.0\n    dev: true\n\n  /onetime@6.0.0:\n    resolution: {integrity: sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==}\n    engines: {node: '>=12'}\n    dependencies:\n      mimic-fn: 4.0.0\n    dev: true\n\n  /onetime@7.0.0:\n    resolution: {integrity: sha512-VXJjc87FScF88uafS3JllDgvAm+c/Slfz06lorj2uAY34rlUu0Nt+v8wreiImcrgAjjIHp1rXpTDlLOGw29WwQ==}\n    engines: {node: '>=18'}\n    dependencies:\n      mimic-function: 5.0.1\n    dev: true\n\n  /path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /path-key@4.0.0:\n    resolution: {integrity: sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==}\n    engines: {node: '>=12'}\n    dev: true\n\n  /picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n    dev: true\n\n  /picomatch@4.0.2:\n    resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}\n    engines: {node: '>=12'}\n    dev: true\n\n  /pidtree@0.6.0:\n    resolution: {integrity: sha512-eG2dWTVw5bzqGRztnHExczNxt5VGsE6OwTeCG3fdUf9KBsZzO3R5OIIIzWR+iZA0NtZ+RDVdaoE2dK1cn6jH4g==}\n    engines: {node: '>=0.10'}\n    hasBin: true\n    dev: true\n\n  /prettier-plugin-packagejson@2.5.6(prettier@3.4.2):\n    resolution: {integrity: sha512-TY7KiLtyt6Tlf53BEbXUWkN0+TRdHKgIMmtXtDCyHH6yWnZ50Lwq6Vb6lyjapZrhDTXooC4EtlY5iLe1sCgi5w==}\n    peerDependencies:\n      prettier: '>= 1.16.0'\n    peerDependenciesMeta:\n      prettier:\n        optional: true\n    dependencies:\n      prettier: 3.4.2\n      sort-package-json: 2.12.0\n      synckit: 0.9.2\n    dev: true\n\n  /prettier@3.4.2:\n    resolution: {integrity: sha512-e9MewbtFo+Fevyuxn/4rrcDAaq0IYxPGLvObpQjiZBMAzB9IGmzlnG9RZy3FFas+eBMu2vA0CszMeduow5dIuQ==}\n    engines: {node: '>=14'}\n    hasBin: true\n    dev: true\n\n  /restore-cursor@5.1.0:\n    resolution: {integrity: sha512-oMA2dcrw6u0YfxJQXm342bFKX/E4sG9rbTzO9ptUcR/e8A33cHuvStiYOwH7fszkZlZ1z/ta9AAoPk2F4qIOHA==}\n    engines: {node: '>=18'}\n    dependencies:\n      onetime: 7.0.0\n      signal-exit: 4.1.0\n    dev: true\n\n  /rfdc@1.4.1:\n    resolution: {integrity: sha512-q1b3N5QkRUWUl7iyylaaj3kOpIT0N2i9MqIEQXP73GVsN9cw3fdx8X63cEmWhJGi2PPCF23Ijp7ktmd39rawIA==}\n    dev: true\n\n  /semver@7.6.3:\n    resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}\n    engines: {node: '>=10'}\n    hasBin: true\n    dev: true\n\n  /shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n    dependencies:\n      shebang-regex: 3.0.0\n    dev: true\n\n  /shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /signal-exit@4.1.0:\n    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}\n    engines: {node: '>=14'}\n    dev: true\n\n  /slice-ansi@5.0.0:\n    resolution: {integrity: sha512-FC+lgizVPfie0kkhqUScwRu1O/lF6NOgJmlCgK+/LYxDCTk8sGelYaHDhFcDN+Sn3Cv+3VSa4Byeo+IMCzpMgQ==}\n    engines: {node: '>=12'}\n    dependencies:\n      ansi-styles: 6.2.1\n      is-fullwidth-code-point: 4.0.0\n    dev: true\n\n  /slice-ansi@7.1.0:\n    resolution: {integrity: sha512-bSiSngZ/jWeX93BqeIAbImyTbEihizcwNjFoRUIY/T1wWQsfsm2Vw1agPKylXvQTU7iASGdHhyqRlqQzfz+Htg==}\n    engines: {node: '>=18'}\n    dependencies:\n      ansi-styles: 6.2.1\n      is-fullwidth-code-point: 5.0.0\n    dev: true\n\n  /sort-object-keys@1.1.3:\n    resolution: {integrity: sha512-855pvK+VkU7PaKYPc+Jjnmt4EzejQHyhhF33q31qG8x7maDzkeFhAAThdCYay11CISO+qAMwjOBP+fPZe0IPyg==}\n    dev: true\n\n  /sort-package-json@2.12.0:\n    resolution: {integrity: sha512-/HrPQAeeLaa+vbAH/znjuhwUluuiM/zL5XX9kop8UpDgjtyWKt43hGDk2vd/TBdDpzIyzIHVUgmYofzYrAQjew==}\n    hasBin: true\n    dependencies:\n      detect-indent: 7.0.1\n      detect-newline: 4.0.1\n      get-stdin: 9.0.0\n      git-hooks-list: 3.1.0\n      is-plain-obj: 4.1.0\n      semver: 7.6.3\n      sort-object-keys: 1.1.3\n      tinyglobby: 0.2.10\n    dev: true\n\n  /string-argv@0.3.2:\n    resolution: {integrity: sha512-aqD2Q0144Z+/RqG52NeHEkZauTAUWJO8c6yTftGJKO3Tja5tUgIfmIl6kExvhtxSDP7fXB6DvzkfMpCd/F3G+Q==}\n    engines: {node: '>=0.6.19'}\n    dev: true\n\n  /string-width@7.2.0:\n    resolution: {integrity: sha512-tsaTIkKW9b4N+AEj+SVA+WhJzV7/zMhcSu78mLKWSk7cXMOSHsBKFWUs0fWwq8QyK3MgJBQRX6Gbi4kYbdvGkQ==}\n    engines: {node: '>=18'}\n    dependencies:\n      emoji-regex: 10.4.0\n      get-east-asian-width: 1.3.0\n      strip-ansi: 7.1.0\n    dev: true\n\n  /strip-ansi@7.1.0:\n    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}\n    engines: {node: '>=12'}\n    dependencies:\n      ansi-regex: 6.1.0\n    dev: true\n\n  /strip-final-newline@3.0.0:\n    resolution: {integrity: sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==}\n    engines: {node: '>=12'}\n    dev: true\n\n  /synckit@0.9.2:\n    resolution: {integrity: sha512-vrozgXDQwYO72vHjUb/HnFbQx1exDjoKzqx23aXEg2a9VIg2TSFZ8FmeZpTjUCFMYw7mpX4BE2SFu8wI7asYsw==}\n    engines: {node: ^14.18.0 || >=16.0.0}\n    dependencies:\n      '@pkgr/core': 0.1.1\n      tslib: 2.8.1\n    dev: true\n\n  /tinyglobby@0.2.10:\n    resolution: {integrity: sha512-Zc+8eJlFMvgatPZTl6A9L/yht8QqdmUNtURHaKZLmKBE12hNPSrqNkUp2cs3M/UKmNVVAMFQYSjYIVHDjW5zew==}\n    engines: {node: '>=12.0.0'}\n    dependencies:\n      fdir: 6.4.2(picomatch@4.0.2)\n      picomatch: 4.0.2\n    dev: true\n\n  /to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n    dependencies:\n      is-number: 7.0.0\n    dev: true\n\n  /tslib@2.8.1:\n    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}\n    dev: true\n\n  /which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n    dependencies:\n      isexe: 2.0.0\n    dev: true\n\n  /wrap-ansi@9.0.0:\n    resolution: {integrity: sha512-G8ura3S+3Z2G+mkgNRq8dqaFZAuxfsxpBB8OCTGRTCtp+l/v9nbFNmCUP1BZMts3G1142MsZfn6eeUKrr4PD1Q==}\n    engines: {node: '>=18'}\n    dependencies:\n      ansi-styles: 6.2.1\n      string-width: 7.2.0\n      strip-ansi: 7.1.0\n    dev: true\n\n  /yaml@2.6.1:\n    resolution: {integrity: sha512-7r0XPzioN/Q9kXBro/XPnA6kznR73DHq+GXh5ON7ZozRO6aMjbmiBuKste2wslTFkC5d1dw0GooOCepZXJ2SAg==}\n    engines: {node: '>= 14'}\n    hasBin: true\n    dev: true\n"
        },
        {
          "name": "prettier.config.js",
          "type": "blob",
          "size": 0.2021484375,
          "content": "module.exports = {\n  singleQuote: true,\n  useTabs: false,\n  tabWidth: 2,\n  semi: true,\n  bracketSpacing: true,\n  trailingComma: 'all',\n  arrowParens: 'always',\n  plugins: ['prettier-plugin-packagejson'],\n};\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.1728515625,
          "content": "name: flutter_gen_repository\n\nenvironment:\n  sdk: \">=2.17.0 <4.0.0\"\n\ndev_dependencies:\n  lints: any # Ignoring the version to allow editing across SDK versions.\n  melos: ^6.0.0\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.5009765625,
          "content": "{\n  \"extends\": [\n    \"config:base\",\n    \"group:monorepos\",\n    \":semanticCommits\",\n    \":semanticCommitTypeAll(upgrade)\",\n    \":semanticCommitScopeDisabled\"\n  ],\n  \"timezone\": \"Asia/Tokyo\",\n  \"schedule\": [\"every weekend\"],\n  \"branchConcurrentLimit\": 5,\n  \"branchPrefix\": \"upgrade-renovate-\",\n  \"dependencyDashboard\": false,\n  \"ignorePaths\": [\".github/\"],\n  \"major\": {\n    \"stabilityDays\": 7\n  },\n  \"minor\": {\n    \"stabilityDays\": 3\n  },\n  \"patch\": {\n    \"stabilityDays\": 2\n  },\n  \"ignorePaths\": [\"examples/**\"]\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}