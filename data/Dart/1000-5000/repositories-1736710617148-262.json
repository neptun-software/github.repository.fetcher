{
  "metadata": {
    "timestamp": 1736710617148,
    "page": 262,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "simc/dartx",
      "stars": 1085,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.064453125,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.501953125,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/*\n!.idea/runConfigurations\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.packages\n.pub-cache/\n.pub/\nbuild/\npubspec.lock\n.metadata\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 8.9580078125,
          "content": "## 1.2.0\n- Official Dart 3.0 release\n- General cleanup and CI update\n\n## 1.1.0\n\n- [PR-151](https://github.com/leisim/dartx/pull/151) New: `String?.isNullOrBlank`, `String?.isNotNullOrBlank`\n- [PR-149](https://github.com/leisim/dartx/pull/149) Fix type of extension: `IterableForthItem` -> `IterableFourthItem`\n- [PR-147](https://github.com/leisim/dartx/pull/147) New: `int.toChar(): String`\n- [PR-147](https://github.com/leisim/dartx/pull/147) New: `String?.orEmpty: bool`\n- [PR-147](https://github.com/leisim/dartx/pull/147) New: `String.matches(RexExp): bool`\n- [PR-147](https://github.com/leisim/dartx/pull/147) New: `String.urlEncode` and `String.urlDecode`\n- [PR-147](https://github.com/leisim/dartx/pull/147) New: `buildString` to build a `StringBuffer` an immediately return it\n- [PR-156](https://github.com/leisim/dartx/pull/156) Fix: `Iterable.takeFirst(n)` and `Iterable.takeLast(n)` crashed when n > length\n\n## 1.0.0\n- Promote to stable version\n- Remove deprecated extensions\n\n## 0.8.0\n\n- [PR-136](https://github.com/leisim/dartx/pull/136) New: Multiple extensions for `Map`. `all()`, `any()`, `count()`, `filter()`, `filterKeys()`, `filterNot`, `filterValues`, `getOrElse()`, `mapEntries()`, `mapKeys()`, `mapValues()`, `maxBy()`, `maxWith()`, `minBy()`, `minWith`, `none()`, `toList()`, `toMap()`, `orEmpty()`\n- [PR-127](https://github.com/leisim/dartx/pull/127) Improve: `sumBy` is now generic and works equally for `num`/`int`/`double`\n- [PR-131](https://github.com/leisim/dartx/pull/131) Fix: `min()`/`max()` which returned the wrong item for reversed ordered lists\n- [PR-133](https://github.com/leisim/dartx/pull/133) New: `plus()`/`minus()` and `plusOrNull`/`minusOrNull` to `num` which handle `null`\n- [PR-138](https://github.com/leisim/dartx/pull/138) Improve: `Iterable.second` returns `T` instead of `T?`. Analog to `first`\n- [PR-142](https://github.com/leisim/dartx/pull/142) Fix: `isUpperCase`/`isLowerCase` now threat only `[a-zA-Z]` chars as being uppercase\n\nAlso, all linting issues have been fixed and the README has been drastically improved. Thanks @minhqdao \n\n## 0.7.1\n\n- [PR-126](https://github.com/leisim/dartx/pull/126) Improve runtime of `elementAtOrNull` for `List`\n- [PR-125](https://github.com/leisim/dartx/pull/125) Fix `whereNotNull` to actually return non-null elements\n\n## 0.7.0\n\n- All extensions methods now have their own extension which can be imported explicitly with `show`/`hide`. This allows the usage of `package:collection` and `dartx` in the same file.\n- Undeprecate `firstOrNullWhere` until `dartx` can export `package:collection` itself\n- New `Directory.file` and `Directory.directory` extensions to quickly create file/directory references\n- Update `time` package\n\n## 0.6.0\n\n- [PR-120](https://github.com/leisim/dartx/pull/120)  Migrate to nullsafety\n- Fix `minBy`, `maxBy` NPE for empty lists\n- [PR-69](https://github.com/leisim/dartx/pull/69) New `Dictionary.contains`\n- [PR-57](https://github.com/leisim/dartx/pull/57) New `Iterable.slice`\n\n## 0.5.0\n\n- [PR-94](https://github.com/leisim/dartx/pull/94) Breaking: `Iterable<T>.zip(other, transform)` now support zipping iterables of other types the `T`. This is a breaking change because it is now required to add types in the transform function.\n  ```dart\n  final amounts = [2, 3, 4];\n  final animals = ['dogs', 'birds', 'cats'];\n  final all = amounts.zip(animals, (int amount, String animal) => '$amount $animal');\n  // lambda types are now required:  ⇧           ⇧\n  // all: ['2 dogs', '3 birds', '4 cats']\n  ```\n- [PR-90](https://github.com/leisim/dartx/pull/90) New `String` extensions \n  - `String removePrefix(String prefix)`\n  - `String removeSuffix(String suffix)`\n  - `String removeSurrounding({String prefix, String suffix})`\n  ```dart\n  final name = 'James Bond'.removePrefix('James '); // Bond\n  final milliseconds = '100ms'.removeSuffix('ms'); // 100\n  final text = '<p>Some HTML</p>'.removeSurrounding(prefix: '<p>', suffix: '</p>'); // Some HTML\n  ```\n- [PR-88](https://github.com/leisim/dartx/pull/88) New `List` extension `void swap(int, int)` which swaps the elements in the indices provided.\n  ```dart\n  final list = [1, 2, 3, 4];\n  list.swap(0, 2); // [3, 2, 1, 4]\n  ```\n- [PR-100](https://github.com/leisim/dartx/pull/100) Relax the upper version constraint of `collection` to support Flutter 1.20 (which uses `collection: 1.3.0-nullsafety`)\n- [PR-101](https://github.com/leisim/dartx/pull/101) Relax the upper version constraint of `crypto`\n\n## 0.4.2\n\n- Increase dependency range of `characters` to include `1.0.0`\n- Raise min sdk version to `2.6.0` to prevent pub publishing warning for pre-release versions\n\n## 0.4.1\n\n- [PR-84](https://github.com/leisim/dartx/pull/84) Increase `path` version range to be compatible with Flutter 1.17\n- [PR-83](https://github.com/leisim/dartx/pull/83) Run tests on macOS\n\n## 0.4.0\n\n### Iterable\n- [PR-41](https://github.com/leisim/dartx/pull/41) New `Iterable<T>.containsAny(Iterable<T>)` extension\n- [PR-46](https://github.com/leisim/dartx/pull/46) New `Iterable<num>.median()` extension\n- [PR-53](https://github.com/leisim/dartx/pull/53) New `Iterable<T>.asStream()` extension converts any Iterable to a Stream\n- [PR-59](https://github.com/leisim/dartx/pull/59) New `Iterable<T>.cached` extension creates a cached `Iterable` preventing lazy operators such as `.map` to execute again \n- [PR-56](https://github.com/leisim/dartx/pull/56) Make `Iterable<Iterable<T>>.flatten()` typesafe and return `Iterable<T>` instead of `Iterable<dynamic>`\n- [PR-62](https://github.com/leisim/dartx/pull/62) New `Iterable<T>.chunkWhile(bool Function(T, T) predicate): Iterable<List<E>>` extension splits a collection into a lazy Iterables of chunks, where chunks are created as long as `predicate` is true for a pair of entries.\n- [PR-62](https://github.com/leisim/dartx/pull/62) New `Iterable<T>.splitWhen(bool Function(E, E) predicate): Iterable<List<E>>` extension splits a collection into a lazy `Iterable`, where each split will be make if `predicate` returns `true` for a pair of entries.\n- [PR-54](https://github.com/leisim/dartx/pull/54) New `Iterable<Future<T>>.asStreamAwaited(): Stream<T>` extension to create a stream from a group of futures.\n\n\n### String\n- [PR-72](https://github.com/leisim/dartx/pull/72) New `String.isNullOrEmpty` extension\n- [PR-43](https://github.com/leisim/dartx/pull/43) New `String.toInt({int radix})` extension as alias for `int.parse(String, {int radix})` (also `String.toIntOrNull({int radix})`)\n- [PR-75](https://github.com/leisim/dartx/pull/75) Deprecate `String.chars` in favour of `String.characters` from the official `characters` package.\n\n### Ranges\n- [PR-74](https://github.com/leisim/dartx/pull/74) New `Comparable<T>.rangeTo(Comparable<T> end)` extension to create ranges of `DateTime` or `String`.\n- [PR-45](https://github.com/leisim/dartx/pull/45) New `num.between(num first, num endInclusive): bool` extension\n- [PR-45](https://github.com/leisim/dartx/pull/45) New `num.inRange(Range<num> range): bool` extension\n- [PR-45](https://github.com/leisim/dartx/pull/45) New `Comparable<T>.between(T first, T endInclusive): bool` extension\n- [PR-45](https://github.com/leisim/dartx/pull/45) New `Comparable<T>.inRange(ComparableRange<T> range): bool` extension\n\n## 0.3.0+1\n- Improve package scoring by upgrading dependencies and formatting files\n- Change README slightly\n \n## 0.3.0\n- [PR-14](https://github.com/leisim/dartx/pull/14) New [`int.rangeTo(int)`](https://github.com/leisim/dartx#rangeto) extension\n- [PR-24](https://github.com/leisim/dartx/pull/24) Default implementations for `Comparable` `<`, `<=`, `>=` and `>` operators.\n- [PR-13](https://github.com/leisim/dartx/pull/13) Removed `quiver` dependency\n- [PR-21](https://github.com/leisim/dartx/pull/21) New `String.md5` to calculate a MD5 digest\n- [PR-25](https://github.com/leisim/dartx/pull/25) New `FileSystemEntity.withName(String newName)` to get a `File` with a different name\n- [PR-25](https://github.com/leisim/dartx/pull/25) New `FileSystemEntity.extension` to get the file extension\n- [PR-17](https://github.com/leisim/dartx/pull/17) `Callable.invoke()` is now marked as `Deprecated` in favour of darts `call()` method. It will not be removed though, until darts `.call()` methods gets [auto-completion](https://github.com/dart-lang/sdk/issues/39761).\n- [PR-30](https://github.com/leisim/dartx/pull/30) New `Comparable.coerceIn()`, `Comparable.coerceAtLeast()` and `Comparable.coerceAtMost()`\n- [PR-31](https://github.com/leisim/dartx/pull/31) Fixed `num.toBytes()`\n- [PR-33](https://github.com/leisim/dartx/pull/33) Fixed `.thenBy()` and `.thenWith()` extensions for Lists\n\n### Breaking\n- [PR-29](https://github.com/leisim/dartx/pull/29) `Iterable<E>.windowed` - remove the required transform lambda\n\n## 0.2.0\n- Moved to `time.dart` library for time extensions\n\n## 0.1.2\n- Fixed docs\n- Added `Function.curry()`, `Function.invoke()`, `Function.partial()` and `Function.flip()`\n- `'string'.reversed` now correctly handles grapheme clusters (like emoji)\n\n### Breaking\n- `'string'.chars` now returns the grapheme clusters instead of `Rune`s\n\n## 0.1.1\n- Bugfixes\n- More tests\n\n## 0.1.0+1\n- Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0751953125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2019 Simon Leier\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.2421875,
          "content": "<img src=\"https://raw.githubusercontent.com/leisim/dartx/master/.github/logo.svg?sanitize=true\" width=\"500px\">\n\n[![Dart CI](https://github.com/leisim/dartx/workflows/Dart%20CI/badge.svg?branch=master)](https://github.com/leisim/dartx/actions) [![Codecov](https://img.shields.io/codecov/c/github/leisim/dartx.svg)](https://codecov.io/gh/leisim/dartx) [![dartx](https://img.shields.io/pub/v/dartx?label=dartx)](https://pub.dev/packages/dartx) [![flutterx](https://img.shields.io/pub/v/flutterx?label=flutterx)](https://pub.dev/packages/flutterx)\n\n_If you miss an extension, please open an issue or pull request_\n\n### Resources:\n\n- [Documentation](https://pub.dev/documentation/dartx/latest/dartx/dartx-library.html)\n- [Pub Package](https://pub.dev/packages/dartx)\n- [GitHub Repository](https://github.com/leisim/dartx)\n\nOn this page you can find some of the extensions. Take a look at the docs to see all of them.\n\n## Getting started 🎉\n\nAdd the following to your `pubspec.yaml`:\n\n```dart\ndependencies:\n  dartx: any\n```\n\nAfter you import the library, you can use the extensions.\n\n```dart\nimport 'package:dartx/dartx.dart';\n\nfinal slice = [1, 2, 3, 4, 5].slice(1, -2); // [2, 3, 4]\n```\n\n## Iterable\n\n### .slice()\n\nReturns elements at indices between `start` (inclusive) and `end` (inclusive).\n\n```dart\nfinal list = [0, 1, 2, 3, 4, 5];\nfinal last = list.slice(-1); // [5]\nfinal lastHalf = list.slice(3); // [3, 4, 5]\nfinal allButFirstAndLast = list.slice(1, -2); // [1, 2, 3, 4]\n```\n\n### .sortedBy() & .thenBy()\n\nSort lists by multiple properties.\n\n```dart\nfinal dogs = [\n  Dog(name: \"Tom\", age: 3),\n  Dog(name: \"Charlie\", age: 7),\n  Dog(name: \"Bark\", age: 1),\n  Dog(name: \"Cookie\", age: 4),\n  Dog(name: \"Charlie\", age: 2),\n];\n\nfinal sorted = dogs\n    .sortedBy((dog) => dog.name)\n    .thenByDescending((dog) => dog.age);\n// Bark, Charlie (7), Charlie (2), Cookie, Tom\n```\n\n### .distinctBy()\n\nGet distinct elements from a list.\n\n```dart\nfinal list = ['this', 'is', 'a', 'test'];\nfinal distinctByLength = list.distinctBy((it) => it.length); // ['this', 'is', 'a']\n```\n\n### .flatten()\n\nGet a new lazy `Iterable` of all elements from all collections in a collection.\n\n```dart\nfinal nestedList = [[1, 2, 3], [4, 5, 6]];\nfinal flattened = nestedList.flatten(); // [1, 2, 3, 4, 5, 6]\n```\n\n### .chunkWhile() & .splitWhen()\n\nChunk entries as long as two elements match a predicate:\n\n```dart\nfinal list = [1, 2, 4, 9, 10, 11, 12, 15, 16, 19, 20, 21];\nfinal increasingSubSequences = list.chunkWhile((a, b) => a + 1 == b);\n\n// increasingSubSequences = [[1, 2], [4], [9, 10, 11, 12], [15, 16], [19, 20, 21]]\n```\n\n`splitWhen` is the opposite of `chunkWhile` that starts a new chunk every time\nthe predicate _didn't_ match.\n\n## int\n\n### buildString()\n\nBuilds new string by populating newly created `StringBuffer` using provided `builderAction`\nand then converting it to `String`.\n\n```dart\nfinal word = buildString((sb) {\n  for (var i = 0; i < 10; i++) {\n    sb.write(i);\n  }\n});\n// 0123456789\n```\n\n### .ordinal\n\nReturns an ordinal number of `String` type for any integer\n\n```dart\nfinal a = 1.ordinal();  // 1st\nfinal b = 108.ordinal();  // 108th\n```\n\n## String\n\n### .capitalize\n\nReturns a copy of the string having its first letter uppercased, or the original string, if it's empty or already starts with an upper case letter.\n\n```dart\nfinal word = 'abcd'.capitalize(); // Abcd\nfinal anotherWord = 'Abcd'.capitalize(); // Abcd\n```\n\n### .decapitalize\n\nReturns a copy of the string having its first letter lowercased, or the original string, if it's empty or already starts with a lower case letter.\n\n```dart\nfinal word = 'abcd'.decapitalize(); // abcd\nfinal anotherWord = 'Abcd'.decapitalize(); // abcd\n```\n\n### .isAscii\n\nReturns `true` if the string is ASCII encoded.\n\n```dart\nfinal isAscii = 'abc123 !,.~'.isAscii; // true\nfinal isNotAscii = '§3'.isAscii; // false\n```\n\n### .isBlank\n\nReturns `true` if this string is empty or consists solely of whitespace characters.\n\n```dart\nfinal notBlank = '   .'.isBlank; // false\nfinal blank = '  '.isBlank; // true\n```\n\n### .isDouble\n\nReturns `true` if the string can be parsed as a double.\n\n```dart\nfinal a = ''.isDouble; // false\nfinal b = 'a'.isDouble; // false\nfinal c = '1'.isDouble; // true\nfinal d = '1.0'.isDouble; // true\nfinal e = '123456789.987654321'.isDouble; // true\nfinal f = '1,000'.isDouble; // false\n```\n\n### .isInt\n\nReturns `true` if the string can be parsed as an integer.\n\n```dart\nfinal a = ''.isInt; // false\nfinal b = 'a'.isInt; // false\nfinal c = '1'.isInt; // true\nfinal d = '1.0'.isInt; // false\nfinal e = '1,000'.isInt; // false\n```\n\n### .isLatin1\n\nReturns `true` if the string is Latin 1 encoded.\n\n```dart\nfinal isLatin1 = '§Êü'.isLatin1; // true\nfinal isNotLatin1 = 'ő'.isLatin1; // false\n```\n\n### .isLowerCase\n\nReturns `true` if the entire string is lower case.\n\n```dart\nfinal a = 'abc'.isLowerCase; // true\nfinal b = 'abC'.isLowerCase; // false\nfinal c = '   '.isLowerCase; // true\nfinal d = ''.isLowerCase; // false\n```\n\n### .isNotBlank\n\nReturns `true` if this string is not empty and contains characters except whitespace characters.\n\n```dart\nfinal blank = '  '.isNotBlank; // false\nfinal notBlank = '   .'.isNotBlank; // true\n```\n\n### .isNullOrEmpty\n\nReturns `true` if the String is either `null` or empty.\n\n```dart\nfinal isNull = null.isNullOrEmpty; // true\nfinal isEmpty = ''.isNullOrEmpty; // true\nfinal isBlank = ' '.isNullOrEmpty; // false\nfinal isLineBreak = '\\n'.isNullOrEmpty; // false\n```\n\n### .isNotNullOrEmpty\n\nReturns `true` if the String is neither `null` nor empty.\n\n```dart\nfinal isNull = null.isNullOrEmpty; // true\nfinal isEmpty = ''.isNullOrEmpty; // true\nfinal isBlank = ' '.isNullOrEmpty; // false\nfinal isLineBreak = '\\n'.isNullOrEmpty; // false\n```\n\n### .isNullOrBlank\n\nReturns `true` if the String is either `null` or blank.\n\n```dart\nfinal isNull = null.isNullOrBlank; // true\nfinal isEmpty = ''.isNullOrBlank; // true\nfinal isBlank = ' '.isNullOrBlank; // true\nfinal isLineBreak = '\\n'.isNullOrBlank; // true\nfinal isFoo = ' foo '.isNullOrBlank; // false\n```\n\n### .isNotNullOrBlank\n\nReturns `true` if the String is neither `null` nor blank.\n\n```dart\nfinal isNull = null.isNullOrBlank; // true\nfinal isEmpty = ''.isNullOrBlank; // true\nfinal isBlank = ' '.isNullOrBlank; // true\nfinal isLineBreak = '\\n'.isNullOrBlank; // true\nfinal isFoo = ' foo '.isNullOrBlank; // true\n```\n\n### .isUpperCase\n\nReturns `true` if the entire string is upper case.\n\n```dart\nfinal a = 'ABC'.isUpperCase; // true\nfinal b = 'ABc'.isUpperCase; // false\nfinal c = '   '.isUpperCase; // true\nfinal d = ''.isUpperCase; // false\n```\n\n### .md5\n\nCalculates the MD5 digest and returns the value as a string of hexadecimal digits.\n\n```dart\nfinal a = 'abc'.md5; // 900150983cd24fb0d6963f7d28e17f72\nfinal b = 'ഐ⌛酪Б👨‍👨‍👧‍👦'.md5; // c7834eff7c967101cfb65b8f6d15ad46\n```\n\n### .urlEncode\n\nTranslates a string into application/x-www-form-urlencoded format using a specific encoding scheme.\n\n```dart\nconst originalUrl = 'Hello Ladies + Gentlemen, a signed OAuth request!';\nfinal encodedUrl = originalUrl.urlEncode;\n// 'Hello%20Ladies%20+%20Gentlemen,%20a%20signed%20OAuth%20request!'\n```\n\n### .urlDecode\n\nDecodes an application/x-www-form-urlencoded string using a specific encoding scheme.\n\n```dart\nconst encodedUrl = 'Hello%20Ladies%20+%20Gentlemen,%20a%20signed%20OAuth%20request!';\nfinal decodedUrl = encodingUrl.urlDecode;\n// 'Hello Ladies + Gentlemen, a signed OAuth request!'\n```\n\n### .removePrefix(), .removeSuffix() and .removeSurrounding()\n\nRemove a prefix, a suffix, or both from a given string:\n\n```dart\nfinal name = 'James Bond'.removePrefix('James '); // Bond\nfinal milliseconds = '100ms'.removeSuffix('ms'); // 100\nfinal text = '<p>Some HTML</p>'\n  .removeSurrounding(prefix: '<p>', suffix: '</p>'); // Some HTML\n```\n\n### .reversed\n\nReturns a new string with characters in reversed order.\n\n```dart\nfinal emptyString = ''.reversed; // ''\nfinal reversed = 'abc🤔'.reversed; // '🤔cba'\n```\n\n### .slice()\n\nReturns a new substring containing all characters including indices [start] and [end].\nIf [end] is omitted, it is being set to `lastIndex`.\n\n```dart\nfinal sliceOne = 'awesomeString'.slice(0,6)); // awesome\nfinal sliceTwo = 'awesomeString'.slice(7)); // String\n```\n\n### .toDoubleOrNull()\n\nParses the string as a `double` and returns the result or `null` if the String is not a valid representation of a number.\n\n```dart\nfinal numOne = '1'.toDoubleOrNull(); // 1.0\nfinal numTwo = '1.2'.toDoubleOrNull(); // 1.2\nfinal blank = ''.toDoubleOrNull(); // null\n```\n\n### .toInt()\n\nParses the string as an integer and returns the result. The radix (base) thereby defaults to 10. Throws a `FormatException` if parsing fails.\n\n```dart\nfinal a = '1'.toInt(); // 1\nfinal b = '100'.toInt(radix: 2); // 4\nfinal c = '100'.toInt(radix: 16); // 256\nfinal d = '1.0'.toInt(); // throws FormatException\n```\n\n### .toIntOrNull()\n\nParses the string as an integer or returns `null` if it is not a number.\n\n```dart\nfinal number = '12345'.toIntOrNull(); // 12345\nfinal notANumber = '123-45'.toIntOrNull(); // null\n```\n\n### .toUtf8()\n\nConverts String to UTF-8 encoding.\n\n```dart\nfinal emptyString = ''.toUtf8(); // []\nfinal hi = 'hi'.toUtf8(); // [104, 105]\nfinal emoji = '😄'.toUtf8(); // [240, 159, 152, 132]\n\n```\n\n### .toUtf16()\n\nConverts String to UTF-16 encoding.\n\n```dart\nfinal emptyString = ''.toUtf16(); // []\nfinal hi = 'hi'.toUtf16(); // [104, 105]\nfinal emoji = '😄'.toUtf16(); // [55357, 56836]\n```\n\n### .orEmpty()\n\nReturns the string if it is not `null`, or the empty string otherwise.\n\n```dart\nString? nullableStr;\nfinal str = nullableStr.orEmpty(); // ''\n```\n\n### .matches()\n\nReturns `true` if this char sequence matches the given regular expression.\n\n```dart\nprint('as'.matches(RegExp('^.s\\$'))) // true\nprint('mst'.matches(RegExp('^.s\\$'))) // false\n```\n\n### Time utils\n\nDartx exports [@jogboms](https://github.com/jogboms) great [⏰ time.dart](https://github.com/jogboms/time.dart) package so you can do the following:\n\n```dart\nint secondsInADay = 1.days.inSeconds;\n\nDuration totalTime = [12.5.seconds, 101.milliseconds, 2.5.minutes].sum();\n\nDateTime oneWeekLater = DateTime.now() + 1.week;\n```\n\nCheck out [⏰ time.dart](https://github.com/jogboms/time.dart) for more information and examples.\n\n## num\n\n### .coerceIn()\n\nEnsures that this value lies in the specified range.\n\n```dart\nfinal numberInRange = 123.coerceIn(0, 1000); // 123\nfinal numberOutOfRange = -123.coerceIn(0, 1000); // 0\n```\n\n### .toBytes()\n\nConverts this value to binary form.\n\n### .toChar()\n\nConverts this value to character\n\n```dart\nfinal character = 97.toChar(); // a\n```\n\n## range\n\n### rangeTo\n\nCreates a range between two ints (upwards, downwards and with custom steps)\n\n```dart\n// upwards with default step size 1\nfor (final i in 1.rangeTo(5)) {\n  print(i); // 1, 2, 3, 4, 5\n}\n// downwards with custom step\nfor (final i in 10.rangeTo(2).step(2)) {\n  print(i); // 10, 8, 6, 4, 2\n}\n```\n\n## Function\n\n### .partial(), .partial2() ...\n\nApplies some of the required arguments to a function and returns a function which takes the remaining arguments.\n\n```dart\nvoid greet(String firstName, String lastName) {\n  print('Hi $firstName $lastName!');\n}\n\nfinal greetStark = greet.partial('Stark');\ngreetStark('Sansa'); // Hi Sansa Stark!\ngreetStark('Tony'); // Hi Tony Stark!\n```\n\n## File\n\n### .name\n\nGet the name and extension of a file.\n\n```dart\nfinal file = File('some/path/testFile.dart');\nprint(file.name); // testFile.dart\nprint(file.nameWithoutExtension); // testFile\n```\n\n### .appendText()\n\nAppend text to a file.\n\n```dart\nawait File('someFile.json').appendText('{test: true}');\n```\n\n### .isWithin()\n\nChecks if a file is inside a directory.\n\n```dart\nfinal dir = Directory('some/path');\nFile('some/path/file.dart').isWithin(dir); // true\n```\n\n## Directory\n\n### .file(String)\n\nReferences a file within a `Directory`\n\n```dart\nDirectory androidDir = Directory('flutter-app/android');\nFile manifestFile = androidDir.file(\"app/src/main/AndroidManifest.xml\");\n```\n\nReferences a directory within a `Directory`\n\n### .directory(String)\n\n```dart\nDirectory androidDir = Directory('flutter-app/android');\nDirectory mainSrc = androidDir.directory(\"app/src/main\");\n```\n\n### .contains(FileSystemEntity entity, {bool recursive = false})\n\nChecks if a `Directory` contains a `FileSystemEntity`. This can be a `File` or a `Directory`.\n\nUse the `recursive` argument to include the subdirectories.\n\n```dart\nfinal File someFile = File('someFile.txt');\nfinal Directory someDir = Directory('some/dir');\n\nfinal Directory parentDir = Directory('parent/dir');\n\nparentDir.contains(someFile);\nparentDir.contains(someDir);\nparentDir.contains(someFile, recursive: true);\nparentDir.contains(someDir, recursive: true);\n```\n\nThis is the `async` method, which returns a `Future<bool>`.\n\n### .containsSync(FileSystemEntity entity, {bool recursive = false})\n\nSame as `.contains(FileSystemEntity entity, {bool recursive = false})` but synchronous. Returns a `bool`.\n\n## License\n\n```plain\nCopyright 2019 Simon Leier\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.216796875,
          "content": "include: package:lint/analysis_options_package.yaml\n\nlinter:\n  rules:\n    prefer_single_quotes: true\n    # This is an easy way to prevent name clashes with parameters\n    no_leading_underscores_for_local_identifiers: false"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.3818359375,
          "content": "name: dartx\ndescription: Superpowers for Dart. Collection of useful static extension methods.\nversion: 1.2.0\nhomepage: https://github.com/leisim/dartx\n\nenvironment:\n  sdk: '>=2.12.0 <4.0.0'\n\ndependencies:\n  characters: ^1.1.0\n  collection: ^1.15.0\n  crypto: ^3.0.0\n  meta: ^1.3.0\n  path: ^1.8.0\n  time: ^2.0.0\n\ndev_dependencies:\n  fake_async: ^1.2.0\n  lint: '>=1.5.0 <3.0.0'\n  test: ^1.16.4\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}