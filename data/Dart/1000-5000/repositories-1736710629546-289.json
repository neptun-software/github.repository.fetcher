{
  "metadata": {
    "timestamp": 1736710629546,
    "page": 289,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "juliuscanute/qr_code_scanner",
      "stars": 1020,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.1298828125,
          "content": "# Miscellaneous\n*.class\n*.lock\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n.last_build_id\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Visual Studio Code related\n.classpath\n.project\n.settings/\n.vscode/\n\n# Flutter repo-specific\n/bin/cache/\n/bin/mingit/\n/dev/benchmarks/mega_gallery/\n/dev/bots/.recipe_deps\n/dev/bots/android_tools/\n/dev/docs/doc/\n/dev/docs/flutter.docs.zip\n/dev/docs/lib/\n/dev/docs/pubspec.yaml\n/dev/integration_tests/**/xcuserdata\n/dev/integration_tests/**/Pods\n/packages/flutter/coverage/\nversion\n\n# packages file containing multi-root paths\n.packages.generated\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\nflutter_*.png\nlinked_*.ds\nunlinked.ds\nunlinked_spec.ds\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n**/android/key.properties\n*.jks\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/.symlinks/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# macOS\n**/macos/Flutter/GeneratedPluginRegistrant.swift\n**/macos/Flutter/Flutter-Debug.xcconfig\n**/macos/Flutter/Flutter-Release.xcconfig\n**/macos/Flutter/Flutter-Profile.xcconfig\n\n# Coverage\ncoverage/\n\n# Symbols\napp.*.symbols\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n!/dev/ci/**/Gemfile.lock"
        },
        {
          "name": ".resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.923828125,
          "content": "## 1.0.0\nBreaking changes:\nMinimum Flutter version is now Flutter 3.0.0 (Dart 2.17.0).\n\n#### Features\n* Inverted is now mixed with normal scanning.\n* onPermissionSet now works on web aswell.\n* [Android] zxing core is updated to 3.5.0.\n* [Android] Several code improvements.\n* [Android] Several dependencies updated.\n\n## 0.7.0\n#### Features\n* Add inverted feature for Android. See https://github.com/juliuscanute/qr_code_scanner/issues/403\n\n#### Bugfixes\n* Fixed permission error on devices running Android 7 or lower.\n* Fixed error being thrown when user declines permission on iOS.\n* Updated dependencies\n\n## 0.6.1\n* Fix bug which caused build to fail for iOS. (#452)\n\n## 0.6.0\n#### Features\n* Add support for raw bytes on iOS. (#421)\n* Add custom cutout width and height next to cutout size. (#432)\n\n#### Bugfixes\n* Fix for calling permission multiple times. (#381)\n* Fix for QRView Overlay cutoutbottomoffset. (#383)\n* Multiple minor improvements\n\n## 0.5.2\n#### Bugfixes\n* Increased delay to fix QRView opening zoomed in on some devices by adding small delay to updateDimensions(). (#250)\n* Updated ZXING from 3.3.0 to 3.4.1 (#369)\n* Fixed permission not being called correctly on Android (#351)\n\n## 0.5.1\nRemoved web from library export.\n\n## 0.5.0\n* Added initial web-support. This function is still under development and not fully tested.\n* Fixed permissions on iOS.\n* Updated dependencies.\n\n## 0.4.0\nStable null-safety support. (#278)\n\n## 0.3.5\n#### Bug fixes\n* Fixed QRView opening zoomed in on some devices by adding small delay to updateDimensions(). (#250)\n* Changed upc-A to EAN13 on iOS. (#262)\n* Fixed null-pointer on BarcodeFormat array on iOS. (#262)\n* Added LifecycleEventHandler to dispose(). (#265)\n\n## 0.3.4\n#### Bug fixes\n* Fixed No barcode view found on Android when calling controller.dispose() (#257)\n* Fixed Hot reload not working on Android.\n\n## 0.3.3\n#### Bug fixes\n* Fixed updateDimensions not being called causing zoom on iOS. (#250)\n* Fixed Android permission callback not working. (#251) (#252)\n* Fixed null-pointers after declining permission on Android.\n\n## 0.3.2\n#### Bug fixes\n* Fixed null-pointer when no overlay provided on iOS. (#245)\n* Fixed camera not stopping (green dot on iOS 14) when navigating to other page. (#240)\n\n## 0.3.1\n#### Bug fixes\n* Fixed permission callback on iOS & Android.\n* Fixed camera facing not working on Android.\n* Fixed scanArea not being honored on Android.\n* Updated ShapeBorder to QrScannerOverlayShape.\n\n## 0.3.0\n#### Breaking change\nIts not necessary anymore to wrap the QRView in a SizeChangedLayoutNotifier because this is handled inside the plugin.\n#### New Features\n* Added possibility to set allowed barcodes. (#135)\n* Added possibility to check what features are supported by device. (hasFlash, hasBackCamera, hasFrontCamera) (#135)\n* Added possibility to check if flash is on. (#135)\n* Added possibility to check which camera is active. (#135)\n* All functions are now async so you can await them. (#135)\n\nSee the updated example on how to implement these features.\n#### Bug fixes\n* Fixed permission handling in Android.\n* Native functions now returns results so exceptions can be thrown when an error occurs.\n\n## 0.2.1\n* Fixed critical bug where scanner wouldn't open when no scan overlay was configured.\n\n## 0.2.0\n#### Breaking change\n* The plugin now returns Barcode object instead of QR String. This object includes the type of code, the code itself and on Android devices the raw bytes. (#63)\n#### New Features\n* Added possibility to provide scanArea on iOS. (#165)\n#### Bug fixes\n* Fixed preview going black after hot reload. (#76)\n* Fixed nullpointer when plugin binding order isn't correct. (#181)\n* Fixed permission being asked on startup (#185)\n\n## 0.1.0\n* Changed Android minSDKversion from 24 to 21 (#170)\n* Fix preview size after iPad rotation (#125)\n* Implemented Android Embedding V2 (#132)\n* Added cutout bottom offset (#115)\n* Fix Android ActivityLifecycleCallbacks (#166)\n* Fix some other small bugs\n\n## 0.0.14\n* Fix disposing camera on iOS 14 (#113)\n\n## 0.0.13\n* Fix misalignment when QRView doesn't start from the top left (#45)\n* Fix crash on iOS when scanning returns nil (#69, #72)\n* Fix ArithmeticException on Android (#43)\n\n## 0.0.12\n* Add optional parameter to use a camera overlay.\n* Simplify controller, expose scanDataStream.\n* Fix for Android flash toggle.\n* Add ability to pause/resume the camera.\n* Thanks! to Luis Thein for all the above contributions.\n\n## 0.0.11\n* android build break fix\n\n## 0.0.10\n* update README.md\n\n## 0.0.9\n* update README.md\n\n## 0.0.8\n* migrated Android project to androidx (by Felipe César)\n* migrated iOS to Swift 5 (by Felipe César)\n\n## 0.0.7\n* flash light support added\n\n## 0.0.6\n* camera flip added\n\n## 0.0.5\n* preview stretching after change screen orientation fix\n\n## 0.0.4\n* fix black screen orientation/unlock/focus\n\n## 0.0.3\n* iOS library reference fix\n* Android pause/resume fix\n\n## 0.0.2\n* Added documentation to cover how to use the plugin.\n\n## 0.0.1\n* QR Code scanner embedded inside flutter.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2353515625,
          "content": "Copyright 2018 Julius Canute\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.646484375,
          "content": "# Project in Maintenance Mode Only\n\nSince the underlying frameworks of this package, [zxing for android](https://github.com/zxing/zxing) and [MTBBarcodescanner for iOS](https://github.com/mikebuss/MTBBarcodeScanner) are both not longer maintaned, this plugin is no longer up to date and in maintenance mode only. Only bug fixes and minor enhancements will be considered.\n\nI am developing a new plugin [mobile_scanner](https://pub.dev/packages/mobile_scanner) that uses the latest version of MLKit for detecting barcodes and QR codes. On Android it also uses the latest version of CameraX, and on iOS the native AVFoundation for best camera performance. \n\n# QR Code Scanner\n\n[![pub package](https://img.shields.io/pub/v/qr_code_scanner?include_prereleases)](https://pub.dartlang.org/packages/qr_code_scanner)\n[![Join the chat](https://img.shields.io/discord/829004904600961054)](https://discord.gg/aZujk84f6V)\n[![GH Actions](https://github.com/juliuscanute/qr_code_scanner/workflows/dart/badge.svg)](https://github.com/juliuscanute/qr_code_scanner/actions)\n\nA QR code scanner that works on both iOS and Android by natively embedding the platform view within Flutter. The integration with Flutter is seamless, much better than jumping into a native Activity or a ViewController to perform the scan.\n\n## Screenshots\n<table>\n<tr>\n<th colspan=\"2\">\nAndroid\n</th>\n</tr>\n\n<tr>\n<td>\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/android-app-screen-one.jpg\" width=\"30%\" height=\"30%\">\n</p>\n</td>\n<td>\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/android-app-screen-two.jpg\" width=\"30%\" height=\"30%\">\n</p>\n</td>\n</tr>\n\n<tr>\n<th colspan=\"2\">\niOS\n</th>\n</tr>\n\n<tr>\n<td>\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/ios-app-screen-one.png\" width=\"30%\" height=\"30%\">\n</p>\n</td>\n<td>\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/juliuscanute/qr_code_scanner/master/.resources/ios-app-screen-two.png\" width=\"30%\" height=\"30%\">\n</p>\n</td>\n</tr>\n\n</table>\n\n## Get Scanned QR Code\n\nWhen a QR code is recognized, the text identified will be set in 'result' of type `Barcode`, which contains the output text as property 'code' of type `String` and scanned code type as property 'format' which is an enum `BarcodeFormat`, defined in the library.\n\n```dart\nclass _QRViewExampleState extends State<QRViewExample> {\n  final GlobalKey qrKey = GlobalKey(debugLabel: 'QR');\n  Barcode? result;\n  QRViewController? controller;\n\n  // In order to get hot reload to work we need to pause the camera if the platform\n  // is android, or resume the camera if the platform is iOS.\n  @override\n  void reassemble() {\n    super.reassemble();\n    if (Platform.isAndroid) {\n      controller!.pauseCamera();\n    } else if (Platform.isIOS) {\n      controller!.resumeCamera();\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Column(\n        children: <Widget>[\n          Expanded(\n            flex: 5,\n            child: QRView(\n              key: qrKey,\n              onQRViewCreated: _onQRViewCreated,\n            ),\n          ),\n          Expanded(\n            flex: 1,\n            child: Center(\n              child: (result != null)\n                  ? Text(\n                      'Barcode Type: ${describeEnum(result!.format)}   Data: ${result!.code}')\n                  : Text('Scan a code'),\n            ),\n          )\n        ],\n      ),\n    );\n  }\n\n  void _onQRViewCreated(QRViewController controller) {\n    this.controller = controller;\n    controller.scannedDataStream.listen((scanData) {\n      setState(() {\n        result = scanData;\n      });\n    });\n  }\n\n  @override\n  void dispose() {\n    controller?.dispose();\n    super.dispose();\n  }\n}\n\n```\n\n## Android Integration\nIn order to use this plugin, please update the Gradle, Kotlin and Kotlin Gradle Plugin:\n\nIn ```android/build.gradle``` change ```ext.kotlin_version = '1.3.50'``` to ```ext.kotlin_version = '1.5.10'```\n\nIn ```android/build.gradle``` change ```classpath 'com.android.tools.build:gradle:3.5.0'``` to ```classpath 'com.android.tools.build:gradle:4.2.0'```\n\nIn ```android/gradle/wrapper/gradle-wrapper.properties``` change ```distributionUrl=https\\://services.gradle.org/distributions/gradle-5.6.2-all.zip``` to ```distributionUrl=https\\://services.gradle.org/distributions/gradle-6.9-all.zip```\n\nIn ```android/app/build.gradle``` change \n```defaultConfig{```\n  ```...```\n  ```minSdkVersion 16```\n```}``` to \n```defaultConfig{```\n  ```...```\n  ```minSdkVersion 20```\n```}```\n\n### *Warning*\nIf you are using Flutter Beta or Dev channel (1.25 or 1.26) you can get the following error:\n\n`java.lang.AbstractMethodError: abstract method \"void io.flutter.plugin.platform.PlatformView.onFlutterViewAttached(android.view.View)\"`\n\nThis is a bug in Flutter which is being tracked here: https://github.com/flutter/flutter/issues/72185\n\nThere is a workaround by adding `android.enableDexingArtifactTransform=false` to your `gradle.properties` file.\n\n## iOS Integration\nIn order to use this plugin, add the following to your Info.plist file:\n```\n<key>io.flutter.embedded_views_preview</key>\n<true/>\n<key>NSCameraUsageDescription</key>\n<string>This app needs camera access to scan QR codes</string>\n```\n\n## Web Integration\n\nAdd this to `web/index.html`:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/jsqr@1.3.1/dist/jsQR.min.js\"></script>\n```\n\nPlease note: on web, only QR codes are supported. Other barcodes and 2D codes cannot be scanned.\n\nWeb support is in very early stage. Features such as flash, pause or resume are not implemented. Moreover, the camera \npreview does not respect the surrounding constraints. This is not at last due to Flutter's early state of platform views\non web.\n\n## Flip Camera (Back/Front)\nThe default camera is the back camera.\n```dart\nawait controller.flipCamera();\n```\n\n## Flash (Off/On)\nBy default, flash is OFF.\n```dart\nawait controller.toggleFlash();\n```\n\n## Resume/Pause\nPause camera stream and scanner.\n```dart\nawait controller.pauseCamera();\n```\nResume camera stream and scanner.\n```dart\nawait controller.resumeCamera();\n```\n\n\n# SDK\nRequires at least SDK 20.\nRequires at least iOS 8.\n\n# TODOs\n* iOS Native embedding is written to match what is supported in the framework as of the date of publication of this package. It needs to be improved as the framework support improves.\n* In future, options will be provided for default states.\n* Finally, I welcome PR's to make it better :), thanks\n\n# Credits\n* Android: https://github.com/zxing/zxing\n* iOS: https://github.com/mikebuss/MTBBarcodeScanner\n* Special Thanks To: LeonDevLifeLog for his contributions towards improving this package.\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.0419921875,
          "content": "include: package:flutter_lints/flutter.yaml"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "ios",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.7080078125,
          "content": "name: qr_code_scanner\ndescription: QR code scanner that can be embedded inside flutter. It uses zxing in Android and MTBBarcode scanner in iOS.\nversion: 1.0.0\nhomepage: https://juliuscanute.com\nrepository: https://github.com/juliuscanute/qr_code_scanner\n\nenvironment:\n  sdk: '>=2.17.0 <3.0.0'\n  flutter: \">=1.12.0\"\n\ndependencies:\n  js: ^0.6.3\n  flutter:\n    sdk: flutter\n  flutter_web_plugins:\n    sdk: flutter\n\ndev_dependencies:\n  flutter_lints: ^1.0.4\n\nflutter:\n  plugin:\n    platforms:\n      android:\n        package: net.touchcapture.qr.flutterqr\n        pluginClass: FlutterQrPlugin\n      ios:\n        pluginClass: FlutterQrPlugin\n#      web:\n#        pluginClass: FlutterQrPlugin\n#        fileName: flutter_qr_web.dart\n"
        }
      ]
    }
  ]
}