{
  "metadata": {
    "timestamp": 1736710564111,
    "page": 154,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fluttercommunity/plus_plugins",
      "stars": 1653,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.55859375,
          "content": "# editorconfig\nroot = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\n\n[*.cpp]\nindent_style = space\nindent_size = 2\n\n[*.dart]\nindent_style = space\nindent_size = 2\n\n# Groovy Gradle build scripts style (build.gradle files)\n[*.gradle]\nindent_style = space\nindent_size = 4\n\n[*.h]\nindent_style = space\nindent_size = 2\n\n# Kotlin code style according to https://developer.android.com/kotlin/style-guide\n[*.{kt, kts}]\nindent_size = 4\nmax_line_length = 100\n\n[*.m]\nindent_style = space\nindent_size = 2\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.50390625,
          "content": "# Auto detect text files and perform LF normalization\n*        text=auto\n\n# Always perform LF normalization on these files\n*.dart   text\n*.gradle text\n*.html   text\n*.java   text\n*.json   text\n*.md     text\n*.py     text\n*.sh     text\n*.txt    text\n*.xml    text\n*.yaml   text\n\n# Make sure that these Windows files always have CRLF line endings in checkout\n*.bat    text eol=crlf\n*.ps1    text eol=crlf\n\n# Never perform LF normalization on these files\n*.ico    binary\n*.jar    binary\n*.png    binary\n*.zip    binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8154296875,
          "content": ".DS_Store\n.atom/\n.idea/\n.vscode/\n\n.packages\n.pub/\n.dart_tool/\npubspec.lock\nflutter_export_environment.sh\n**/pubspec_overrides.yaml\n\nexamples/all_plugins/pubspec.yaml\n\n.build/\nPodfile\nPodfile.lock\nPods/\n.swiftpm/\n.symlinks/\n**/Flutter/App.framework/\n**/Flutter/ephemeral/\n**/Flutter/Flutter.framework/\n**/Flutter/Generated.xcconfig\n**/Flutter/flutter_assets/\n\nServiceDefinitions.json\nxcuserdata/\n**/DerivedData/\n\nlocal.properties\nkeystore.properties\n.gradle/\ngradlew\ngradlew.bat\ngradle-wrapper.jar\n.flutter-plugins-dependencies\n*.iml\n\ngenerated_plugin_registrant.dart\nGeneratedPluginRegistrant.h\nGeneratedPluginRegistrant.m\nGeneratedPluginRegistrant.java\nGeneratedPluginRegistrant.swift\ngenerated_plugin_registrant.*\ngenerated_plugins.cmake\nbuild/\n.flutter-plugins\n\n.project\n.classpath\n.settings\n/.fvm\n\n.melos_tool/\n**/*.env\n\nlcov.info\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.107421875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nauthors@fluttercommunity.dev.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 11.1220703125,
          "content": "# Contributing to PlusPlugins\n\n_See also: [Flutter's code of conduct](https://flutter.dev/design-principles/#code-of-conduct)_\n\n## Types of contributions\n\nWe welcome all contributions to the project, however some contributions will need extra work in\norder to be accepted.\n\nHere's some examples:\n\n### 🟢 Easily accepted contributions\n\n- Fixing issues\n- Improving the README.md\n- Upgrading deprecated dependencies\n- Improving tests\n\n### 🟡 Need extra consideration\n\n- New features covering all platforms\n\nWe need to make sure it works well before merging and each platform needs to be reviewed individually.\n\n- Changing a platform implementation\n\nIdeally an expert in that platform will have to review the change to make sure it works as expected.\n\n### 🔴 Cannot be accepted\n\n- New features covering only one platform\n\nNew features should cover at least the mobile platforms (Android and iOS) to be considered,\nand a plan for the rest must be provided.\n\n- New plugins\n\nWe don't have the capacity to accept new plugins.\n\n# Setup and running\n\nPlease follow this steps when working on the PlusPlugins.\n\n## 1. Things you will need\n\n- Linux, Mac OS X, or Windows.\n- [git](https://git-scm.com) (used for source version control).\n- An ssh client (used to authenticate with GitHub).\n- An IDE such as [Android Studio](https://developer.android.com/studio) or [Visual Studio Code](https://code.visualstudio.com/).\n- [`flutter_plugin_tools`](https://pub.dev/packages/flutter_plugin_tools) locally activated.\n- [`tuneup`](https://pub.dev/packages/tuneup) locally activated.\n\n## 2. Forking & cloning the repository\n\n- Ensure all the dependencies described in the previous section are installed.\n- Fork `https://github.com/fluttercommunity/plus_plugins` into your own GitHub account. If\n  you already have a fork, and are now installing a development environment on\n  a new machine, make sure you've updated your fork so that you don't use stale\n  configuration options from long ago.\n- If you haven't configured your machine with an SSH key that's known to github, then\n  follow [GitHub's directions](https://help.github.com/articles/generating-ssh-keys/)\n  to generate an SSH key.\n- `git clone git@github.com:<your_name_here>/plus_plugins.git`\n- `git remote add upstream git@github.com:fluttercommunity/plus_plugins.git` (So that you\n  fetch from the master repository, not your clone, when running `git fetch`\n  et al.)\n\n## 3. Environment Setup\n\nPlusPlugins uses [Melos](https://github.com/invertase/melos) to manage the project and dependencies.\n\nTo install Melos, run the following command from your SSH client:\n\n```bash\nflutter pub global activate melos\n```\n\nNext, at the root of your locally cloned repository bootstrap the projects dependencies:\n\n```bash\nmelos bootstrap\n```\n\nThe bootstrap command locally links all dependencies within the project without having to\nprovide manual [`dependency_overrides`](https://dart.dev/tools/pub/pubspec). This allows all\nplugins, examples and tests to build from the local clone project.\n\n> You do not need to run `flutter pub get` once bootstrap has been completed.\n\n## 4. Running an example\n\nEach plugin provides an example app which aims to showcase the main use-cases of each plugin.\n\nTo run an example, run the `flutter run` command from the `example` directory of each plugins main\ndirectory. For example, for `sensors_plus` example:\n\n```bash\ncd packages/sensors_plus/sensors_plus/example\nflutter run\n```\n\nUsing Melos (installed in step 3), any changes made to the plugins locally will also be reflected within all\nexample applications code automatically.\n\n## 4. Running tests\n\nPlusPlugins comprises of a number of tests for each plugin, either end-to-end (e2e) or unit tests.\n\n### Unit tests\n\nUnit tests are responsible for ensuring expected behavior whilst developing the plugins Dart code. Unit tests do not\ninteract with 3rd party services, and mock where possible. To run unit tests for a specific plugin, run the\n`flutter test` command from the plugins root directory. For example, sensors_plus platform interface tests can be run\nwith the following commands:\n\n```bash\ncd packages/sensors_plus/sensors_plus\nflutter test\n```\n\n### End-to-end (e2e) tests\n\nE2e tests are those which directly communicate with Flutter, whose results cannot be mocked. **These tests run directly from\nan example application.**\n\nTo run e2e tests, run the `flutter test` command from the plugins main `example` directory, and provide the path to the\ne2e test file. For example, to run the `sensors_plus` e2e tests:\n\n#### Mobile\n\n```bash\ncd packages/sensors_plus/sensors_plus/example\nflutter test integration_test/sensors_plus_test.dart\n```\n\n#### Web\n\nTo run tests against web environments, you will need to have Chrome and ChromeDriver installed and use the `flutter drive` command.\n\nFirst start ChromeDriver on port 4444:\n\n```bash\nchromedriver --port=4444\n```\n\nThen go to the `example` directory of the plugin you want to test and run the `flutter drive` command\nwith the specific driver and `*_web_test.dart` target. For example, to run the `package_info_plus` web tests:\n\n```bash\ncd packages/package_info_plus/package_info_plus/example\nflutter drive \\\n  --driver ./integration_test/driver.dart \\\n  --target ./integration_test/package_info_plus_web_test.dart \\\n  -d chrome\n```\n\n### Using Melos\n\nTo help aid developer workflow, Melos provides a number of commands to quickly run\ntests against plugins. For example, to run all e2e tests across all plugins at once,\nrun the following command from the root of your cloned repository:\n\n```bash\n# for mobile testing (Android or iOS)\nmelos run test:mobile_e2e\n```\n\nA full list of all commands can be found within the [`melos.yaml`](https://github.com/fluttercommunity/plus_plugins/blob/main/melos.yaml)\nfile.\n\n## 5. Contributing code\n\nWe gladly accept contributions via GitHub pull requests.\n\nPlease peruse the\n[Flutter style guide](https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo) and\n[design principles](https://flutter.dev/design-principles/) before\nworking on anything non-trivial. These guidelines are intended to\nkeep the code consistent and avoid common pitfalls.\n\n**Important:** When modifying multiple packages, **create a different branch and pull request per package.**\nThis facilitates maintenance, the review process, and generating changelogs.\n\n### 5.1 Getting started\n\nTo start working on a patch:\n\n1. `git fetch upstream`\n2. `git checkout upstream/main -b <name_of_your_branch>`\n3. Hack away!\n\n### 5.2 Check the code\n\nOnce you have made your changes, ensure that it passes the internal analyzer & formatting checks. The following\ncommands can be run locally to highlight any issues before committing your code:\n\n```bash\n# Run the analyze check\nmelos run analyze\n\n# Format code\nmelos run format\n```\n\n### 5.3 (Do not) Update version and changelog\n\n**NEW: Do not modify the CHANGELOG.md or the version in the pubspec.yaml, this is handled by the maintainers from now on**\n\n### 5.4 Commit and push your changes\n\nAssuming all is successful, commit and push your code:\n\n1. `git commit -a -m \"<your informative commit message>\"`\n2. `git push origin <name_of_your_branch>`\n\n### 5.5 Create a pull request\n\nTo send us a pull request:\n\n- `git pull-request` (if you are using [Hub](http://github.com/github/hub/)) or\n  go to `https://github.com/fluttercommunity/plus_plugins` and click the\n  \"Compare & pull request\" button\n\nPlease make sure all your check-ins have detailed commit messages explaining the patch.\n\nWhen naming the title of your pull request, please follow the [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0-beta.4/)\nguide, and include the package name in parenthesis. For example, for a fix to the `sensor_plus` plugin:\n\n`fix(sensor_plus): fixed a bug!`\n\nPlease also enable **“Allow edits by maintainers”**, this will help to speed-up the review\nprocess as well.\n\n### 5.6 Now be patient :)\n\nPlugins tests are run automatically on contributions using GitHub Actions. Depending on\nyour code contributions, various tests will be run against your updated code automatically.\n\nOnce you've gotten an LGTM from a project maintainer and once your PR has received\nthe green light from all our automated testing, wait for one the package maintainers\nto merge the pull request.\n\nPlease understand, that this repository is run by volunteers, and the response may be delayed.\n\n### The review process\n\nNewly opened PRs first go through initial triage which results in one of:\n\n- **Merging the PR** - if the PR can be quickly reviewed and looks good.\n- **Closing the PR** - if the maintainer decides that the PR should not be merged.\n- **Moving the PR to the backlog** - if the review requires non trivial effort and the issue isn't a priority; in this case the maintainer will:\n  - Make sure that the PR has an associated issue labeled with \"plugin\".\n  - Add the \"backlog\" label to the issue.\n  - Leave a comment on the PR explaining that the review is not trivial and that the issue will be looked at according to priority order.\n- **Starting a non trivial review** - if the review requires non trivial effort and the issue is a priority; in this case the maintainer will:\n  - Add the \"in review\" label to the issue.\n  - Self assign the PR.\n\n### The release process\n\nWe push releases manually, using [Melos](https://github.com/invertase/melos)\nto take care of the hard work.\n\nSome things to keep in mind before publishing the release:\n\n- Has CI ran on the master commit and gone green? Even if CI shows as green on\n  the PR it's still possible for it to fail on merge, for multiple reasons.\n  There may have been some bug in the merge that introduced new failures. CI\n  runs on PRs as it's configured on their branch state, and not on tip of tree.\n  CI on PRs also only runs tests for packages that it detects have been directly\n  changed, vs running on every single package on master.\n- [Publishing is\n  forever.](https://dart.dev/tools/pub/publishing#publishing-is-forever)\n  Hopefully any bugs or breaking in changes in this PR have already been caught\n  in PR review, but now's a second chance to revert before anything goes live.\n- \"Don't deploy on a Friday.\" Consider carefully whether or not it's worth\n  immediately publishing an update before a stretch of time where you're going\n  to be unavailable. There may be bugs with the release or questions about it\n  from people that immediately adopt it, and uncovering and resolving those\n  support issues will take more time if you're unavailable.\n\n#### Run a release...\n\n1. Switch to `main` branch locally.\n2. Run `git pull origin main`.\n3. Run `git pull --tags` to make sure all tags are fetched.\n4. Run `melos version --no-git-commit-version` to automatically version packages and update Changelogs.\n5. Run `melos publish` to dry run and confirm all packages are publishable.\n6. After successful dry run, create and checkout to a new branch named `release/[year]-[month]-[day]`.\n7. Commit all changes with a commit message `chore(release): prepare for release`.\n8. Run `git push origin [RELEASE BRANCH NAME]` & open pull request for review on GitHub.\n9. After successful review and merge of the pull request, switch to `main` branch locally, & run `git pull origin main`.\n10. Run `melos publish --no-dry-run --git-tag-version` to now publish to pub.dev.\n11. Run `git push --tags` to push tags to repository.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4453125,
          "content": "Copyright 2017 The Chromium Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.6689453125,
          "content": "<h1 align=\"center\">Plus plugins</h1>\n<p align=\"center\">\n<a href=\"https://flutter.dev/docs/development/packages-and-plugins/favorites\" target=\"_blank\" rel=\"noreferrer noopener\">\n    <img src=\"./assets/flutter-favorite-badge.png\" width=\"15%\" alt=\"build\">\n</a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/fluttercommunity/plus_plugins/actions?query=workflow%3Aall_plugins\">\n    <img src=\"https://github.com/fluttercommunity/plus_plugins/workflows/all_plugins/badge.svg\" alt=\"all_plugins GitHub Workflow Status\"/>\n  </a>\n  <a href=\"https://twitter.com/FlutterComm\">\n    <img src=\"https://img.shields.io/twitter/follow/FlutterComm.svg?colorA=1da1f2&colorB=&label=Follow%20on%20Twitter\" alt=\"Follow on Twitter\">\n  </a>\n</p>\n\n---\n\nPlusPlugins is a set of Flutter plugins that is developed based on plugins, which previously existed\nas a part of [Flutter plugins](https://github.com/flutter/plugins), with extra functionalities,\nsupport for more platforms and better maintenance.\n\n[Feedback](https://github.com/fluttercommunity/plus_plugins/issues) and [Pull Requests](https://github.com/fluttercommunity/plus_plugins/pulls) are most welcome!\n\n## Plugins\n\n**Table of contents:**\n\n- [Battery➕ (`battery_plus`)](#battery_plus)\n- [Connectivity➕ (`connectivity_plus`)](#connectivity_plus)\n- [Device Info➕ (`device_info_plus`)](#device_info_plus)\n- [Network Info➕ (`network_info_plus`)](#network_info_plus)\n- [Package Info➕ (`package_info_plus`)](#package_info_plus)\n- [Sensor➕ (`sensors_plus`)](#sensors_plus)\n- [Share➕ (`share_plus`)](#share_plus)\n- [Android Alarm Manager➕ (`android_alarm_manager_plus`)](#android_alarm_manager_plus)\n- [Android Intent➕ (`android_intent_plus`)](#android_intent_plus)\n\n---\n\n### `battery_plus`\n\n> [![battery_plus][battery_plus_badge_pub]][battery_plus] [![pub points][battery_plus_badge_pub_points]][battery_plus_pub_points]\n\nFlutter plugin for accessing information about the battery state(full, charging, discharging) on Android and iOS.\n\n[[View Source][battery_plus_code]]\n\n#### Platform Support\n\n| Android | iOS | MacOS | Web | Linux | Windows |\n| :-----: | :-: | :---: | :-: | :---: | :-----: |\n|   ✅   | ✅  |  ✅   | ✅  |  ✅   |  ✅  |\n\n---\n\n### `connectivity_plus`\n\n> [![connectivity_plus][connectivity_plus_badge_pub]][connectivity_plus] [![pub points][connectivity_plus_badge_pub_points]][connectivity_plus_pub_points]\n\nFlutter plugin for discovering the state of the network (WiFi &\nmobile/cellular) connectivity on Android and iOS.\n\n[[View Source][connectivity_plus_code]]\n\n#### Platform Support\n\n| Android | iOS | MacOS | Web | Linux | Windows |\n| :-----: | :-: | :---: | :-: | :---: | :-----: |\n|   ✅    | ✅  |  ✅   | ✅  |  ✅   |   ✅    |\n\n---\n\n### `device_info_plus`\n\n> [![device_info_plus][device_info_plus_badge_pub]][device_info_plus] [![pub points][device_info_plus_badge_pub_points]][device_info_plus_pub_points]\n\nFlutter plugin providing detailed information about the device\n(make, model, etc.), and Android or iOS version the app is running on.\n\n[[View Source][device_info_plus_code]]\n\n#### Platform Support\n\n| Android | iOS | MacOS | Web | Linux | Windows |\n| :-----: | :-: | :---: | :-: | :---: | :-----: |\n|   ✅    | ✅  |  ✅   | ✅  |  ✅   |   ✅    |\n\n---\n\n### `network_info_plus`\n\n> [![network_info_plus][network_info_plus_badge_pub]][network_info_plus] [![pub points][network_info_plus_badge_pub_points]][network_info_plus_pub_points]\n\nFlutter plugin for discovering network info.\n\n[[View Source][network_info_plus_code]]\n\n#### Platform Support\n\n| Android | iOS | MacOS | Web | Linux | Windows |\n| :-----: | :-: | :---: | :-: | :---: | :-----: |\n|   ✅    | ✅   |  ✅   | ❌  |  ✅   |   ✅    |\n\n---\n\n### `package_info_plus`\n\n> [![package_info_plus][package_info_plus_badge_pub]][package_info_plus] [![pub points][package_info_plus_badge_pub_points]][package_info_plus_pub_points]\n\nFlutter plugin for querying information about the application\npackage, such as CFBundleVersion on iOS or versionCode on Android.\n\n[[View Source][package_info_plus_code]]\n\n#### Platform Support\n\n| Android | iOS | MacOS | Web | Linux | Windows |\n| :-----: | :-: | :---: | :-: | :---: | :-----: |\n|   ✅    | ✅  |  ✅   | ✅  |  ✅   |   ✅    |\n\n---\n\n### `sensors_plus`\n\n> [![sensors_plus][sensors_plus_badge_pub]][sensors_plus] [![pub points][sensors_plus_badge_pub_points]][sensors_plus_pub_points]\n\nFlutter plugin for accessing accelerometer, gyroscope, magnetometer and barometer sensors.\n\n[[View Source][sensors_plus_code]]\n\n#### Platform Support\n\n| Android | iOS | MacOS | Web | Linux | Windows |\n| :-----: | :-: | :---: | :-: | :---: | :-----: |\n|   ✅    | ✅  |   ❌    | ✅  |   ❌    |    ❌     |\n\n---\n\n### `share_plus`\n\n> [![share_plus][share_plus_badge_pub]][share_plus] [![pub points][share_plus_badge_pub_points]][share_plus_pub_points]\n\nFlutter plugin for sharing content via the platform share UI, using the ACTION_SEND intent on Android and UIActivityViewController on iOS.\n\n[[View Source][share_plus_code]]\n\n#### Platform Support\n\n| Android | iOS | MacOS | Web | Linux | Windows |\n| :-----: | :-: | :---: | :-: | :---: | :-----: |\n|   ✅   | ✅  |  ✅   | ✅  |  ✅   |   ✅    |\n\n---\n\n### `android_alarm_manager_plus`\n\n> [![android_alarm_manager_plus][android_alarm_manager_plus_badge_pub]][android_alarm_manager_plus] [![pub points][android_alarm_manager_plus_badge_pub_points]][android_alarm_manager_plus_pub_points]\n\nFlutter plugin for accessing the Android AlarmManager service, and running Dart code in the background when alarms fire.\n\n[[View Source][android_alarm_manager_plus_code]]\n\n#### Platform Support\n\n| Android |\n| :-----: |\n|   ✅    |\n\n---\n\n### `android_intent_plus`\n\n> [![android_intent_plus][android_intent_plus_badge_pub]][android_intent_plus] [![pub points][android_intent_plus_badge_pub_points]][android_intent_plus_pub_points]\n\nFlutter plugin for launching Android Intents. Not supported on iOS.\n\n[[View Source][android_intent_plus_code]]\n\n#### Platform Support\n\n| Android |\n| :-----: |\n|   ✅    |\n\n---\n\n## Issues\n\nPlease file PlusPlugins specific issues, bugs, or feature requests in our [issue tracker](https://github.com/fluttercommunity/plus_plugins/issues/new).\n\nPlugin issues that are not specific to PlusPlugins can be filed in the [Flutter issue tracker](https://github.com/flutter/flutter/issues/new).\n\n## Contributing\n\nIf you wish to contribute a change to any of the existing plugins in this repo,\nplease review our [contribution guide](https://github.com/fluttercommunity/plus_plugins/blob/master/CONTRIBUTING.md)\nand open a [pull request](https://github.com/fluttercommunity/plus_plugins/pulls).\n\n## Status\n\nThis repository is maintained by FlutterCommunity authors. Issues here are answered by maintainers and other community members on GitHub on a best-effort basis.\n\n[battery_plus]: https://pub.dev/packages/battery_plus\n[battery_plus_code]: https://github.com/fluttercommunity/plus_plugins/tree/main/packages/battery_plus\n[battery_plus_pub_points]: https://pub.dev/packages/battery_plus/score\n[battery_plus_badge_pub_points]: https://img.shields.io/pub/points/battery_plus?color=2E8B57&label=pub%20points\n[battery_plus_badge_pub]: https://img.shields.io/pub/v/battery_plus.svg\n[connectivity_plus]: https://pub.dev/packages/connectivity_plus\n[connectivity_plus_code]: https://github.com/fluttercommunity/plus_plugins/tree/main/packages/connectivity_plus\n[connectivity_plus_pub_points]: https://pub.dev/packages/connectivity_plus/score\n[connectivity_plus_badge_pub_points]: https://img.shields.io/pub/points/connectivity_plus?color=2E8B57&label=pub%20points\n[connectivity_plus_badge_pub]: https://img.shields.io/pub/v/connectivity_plus.svg\n[network_info_plus]: https://pub.dev/packages/network_info_plus\n[network_info_plus_code]: https://github.com/fluttercommunity/plus_plugins/tree/main/packages/network_info_plus\n[network_info_plus_pub_points]: https://pub.dev/packages/network_info_plus/score\n[network_info_plus_badge_pub_points]: https://img.shields.io/pub/points/network_info_plus?color=2E8B57&label=pub%20points\n[network_info_plus_badge_pub]: https://img.shields.io/pub/v/network_info_plus.svg\n[android_alarm_manager_plus]: https://pub.dev/packages/android_alarm_manager_plus\n[android_alarm_manager_plus_code]: https://github.com/fluttercommunity/plus_plugins/tree/main/packages/android_alarm_manager_plus\n[android_alarm_manager_plus_pub_points]: https://pub.dev/packages/android_alarm_manager_plus/score\n[android_alarm_manager_plus_badge_pub_points]: https://img.shields.io/pub/points/android_alarm_manager_plus?color=2E8B57&label=pub%20points\n[android_alarm_manager_plus_badge_pub]: https://img.shields.io/pub/v/android_alarm_manager_plus.svg\n[android_intent_plus]: https://pub.dev/packages/android_intent_plus\n[android_intent_plus_code]: https://github.com/fluttercommunity/plus_plugins/tree/main/packages/android_intent_plus\n[android_intent_plus_pub_points]: https://pub.dev/packages/android_intent_plus/score\n[android_intent_plus_badge_pub_points]: https://img.shields.io/pub/points/android_intent_plus?color=2E8B57&label=pub%20points\n[android_intent_plus_badge_pub]: https://img.shields.io/pub/v/android_intent_plus.svg\n[device_info_plus]: https://pub.dev/packages/device_info_plus\n[device_info_plus_code]: https://github.com/fluttercommunity/plus_plugins/tree/main/packages/device_info_plus\n[device_info_plus_pub_points]: https://pub.dev/packages/device_info_plus/score\n[device_info_plus_badge_pub_points]: https://img.shields.io/pub/points/device_info_plus?color=2E8B57&label=pub%20points\n[device_info_plus_badge_pub]: https://img.shields.io/pub/v/device_info_plus.svg\n[package_info_plus]: https://pub.dev/packages/package_info_plus\n[package_info_plus_code]: https://github.com/fluttercommunity/plus_plugins/tree/main/packages/package_info_plus\n[package_info_plus_pub_points]: https://pub.dev/packages/package_info_plus/score\n[package_info_plus_badge_pub_points]: https://img.shields.io/pub/points/package_info_plus?color=2E8B57&label=pub%20points\n[package_info_plus_badge_pub]: https://img.shields.io/pub/v/package_info_plus.svg\n[sensors_plus]: https://pub.dev/packages/sensors_plus\n[sensors_plus_code]: https://github.com/fluttercommunity/plus_plugins/tree/main/packages/sensors_plus\n[sensors_plus_pub_points]: https://pub.dev/packages/sensors_plus/score\n[sensors_plus_badge_pub_points]: https://img.shields.io/pub/points/sensors_plus?color=2E8B57&label=pub%20points\n[sensors_plus_badge_pub]: https://img.shields.io/pub/v/sensors_plus.svg\n[share_plus]: https://pub.dev/packages/share_plus\n[share_plus_code]: https://github.com/fluttercommunity/plus_plugins/tree/main/packages/share_plus\n[share_plus_pub_points]: https://pub.dev/packages/share_plus/score\n[share_plus_badge_pub_points]: https://img.shields.io/pub/points/share_plus?color=2E8B57&label=pub%20points\n[share_plus_badge_pub]: https://img.shields.io/pub/v/share_plus.svg\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.43359375,
          "content": "# This is the default analysis_options.yaml for all packages and examples\n# If a package needs specific rules, create the analysis_options.yaml on it\n# include this file, like:\n#\n# include: ../../analysis_options.yaml\n#\n\ninclude: package:flutter_lints/flutter.yaml\n\nanalyzer:\n  exclude:\n    # Ignore generated files\n    - '**/*.g.dart'\n    - 'lib/src/generated/*.dart'\n\nlinter:\n  rules:\n    - prefer_final_in_for_each\n    - prefer_final_locals\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0146484375,
          "content": "comment: false\n"
        },
        {
          "name": "melos.yaml",
          "type": "blob",
          "size": 7.484375,
          "content": "# Name of this workspace, this is used for display purpose on the CLI\n# and on your IDEs.\nname: plus_plugins\nrepository: https://github.com/fluttercommunity/plus_plugins\n\n# Array of globs to search for packages.\n# Instead of one recursive glob, we use multiple globs to avoid\n# searching every single directory in the repo.\npackages:\n  - packages/*\n  - packages/*/*\n  - packages/*/*/*\n\ncommand:\n  version:\n    # Generate commit links in package changelogs.\n    linkToCommits: true\n    # Skip generation of shared changelogs file in the repo root\n    workspaceChangelog: false\n\nscripts:\n  lint:all:\n    run: melos run analyze && melos run format\n    description: |\n      Run all static analysis checks\n      - Analyze the project for Dart analysis issues.\n      - Requires `pub global activate tuneup`.\n\n  analyze:\n    run: |\n      melos exec -c 5 -- \\\n        dart analyze . --fatal-infos\n    description: |\n      Run `dart analyze` in all packages.\n       - Note: you can also rely on your IDEs Dart Analysis / Issues window.\n\n  format:\n    run: dart pub global run flutter_plugin_tools format\n    description: |\n      activate flutter_plugin_tools\n       - Requires `flutter_plugin_tools` (`pub global activate flutter_plugin_tools`).\n       - Requires `clang-format` (can be installed via Brew on macOS).\n\n  build:all:\n    run: |\n      melos bootstrap\n      melos run build:example_ios_pub --no-select\n      melos run build:example_android_pub --no-select\n      melos run build:example_web --no-select\n    description: Build all example apps\n\n  build:example_ios:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build ios --no-codesign --no-pub\"\n    description: Build a specific example app for iOS.\n    packageFilters:\n      dirExists:\n        - ios\n      scope: \"*example*\"\n\n  build:example_ios_pub:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build ios --no-codesign\"\n    description: |\n      Build a specific example app for iOS.\n      melos bootstrap does not generate all files generated by a build that runs\n      `pub get`, and `flutter drive` does not either, so it is still necessary to\n      build sometimes without the `--no-pub` switch. Careful: `melos bootstrap` after.\n    packageFilters:\n      dirExists:\n        - ios\n      scope: \"*example*\"\n\n  build:example_android:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build apk --no-pub\"\n    description: Build a specific example app for Android.\n    packageFilters:\n      dirExists:\n        - android\n      scope: \"*example*\"\n\n  build:example_android_pub:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build apk\"\n    description: Build a specific example app for Android.\n    packageFilters:\n      dirExists:\n        - android\n      scope: \"*example*\"\n\n  build:example_macos:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build macos --no-pub\"\n    description: |\n      Build a specific example app for macOS.\n       - Requires `flutter channel stable`.\n       - Requires `flutter config --enable-macos-desktop` set.\n    packageFilters:\n      dirExists:\n        - macos\n      scope: \"*example*\"\n\n  build:example_linux:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build linux --no-pub\"\n    description: |\n      Build a specific example app for web.\n       - Requires `flutter channel stable`.\n       - Requires `flutter config --enable-linux-desktop` set.\n    packageFilters:\n      dirExists:\n        - linux\n      scope: \"*example*\"\n\n  build:example_windows:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build windows --no-pub\"\n    description: |\n      Build a specific example app for windows.\n       - Requires `flutter channel stable`.\n       - Requires `flutter config --enable-windows-desktop` set.\n    packageFilters:\n      dirExists:\n        - windows\n      scope: \"*example*\"\n\n  build:example_web:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter build web --no-pub\"\n    description: |\n      Build a specific example app for web.\n       - Requires `flutter channel stable`.\n    packageFilters:\n      dirExists:\n        - web\n      scope: \"*example*\"\n\n  test:all:\n    run: melos run test --no-select && melos run test:mobile_e2e --no-select\n    description: Run all tests available on stable channel\n\n  test:unit_all:\n    run: melos run test --no-select\n    description: Run all tests available on stable channel\n\n  test:\n    run: |\n      melos exec -c 6 --fail-fast -- \\\n        \"flutter test --no-pub\"\n    description: Run `flutter test` for a specific package.\n    packageFilters:\n      dirExists:\n        - test\n      ignore:\n        - \"*web*\"\n        - \"*example*\"\n\n  test:web:\n    run: |\n      melos exec -c 1 --fail-fast -- \\\n        \"flutter test --no-pub --platform=chrome\"\n    description: Run `flutter test --platform=chrome` for a specific '*web' package.\n    packageFilters:\n      dirExists:\n        - test\n      scope: \"*web*\"\n\n  test:mobile_e2e:\n    run: |\n      melos exec -c 1 --fail-fast -- \\\n        \"flutter test ./integration_test/MELOS_PARENT_PACKAGE_NAME_test.dart\"\n    description: |\n      Run all Android or iOS test driver e2e tests in a specific example app.\n      - Requires an Android emulator or iOS simulator.\n    packageFilters:\n      dirExists:\n        - integration_test\n      scope: \"*example*\"\n\n  test:web_e2e:\n    run: |\n      melos exec -c 1 --fail-fast -- \\\n        \"flutter drive --device-id=web-server --no-pub --driver=./integration_test/driver.dart --target=./integration_test/MELOS_PARENT_PACKAGE_NAME_web_test.dart\"\n    description: |\n      Run all Web test driver e2e tests in a specific example app.\n       - Requires `flutter channel stable`.\n       - Requires chromedriver running on port 4444.\n    packageFilters:\n      dirExists:\n        - web\n        - integration_test\n      fileExists:\n        - integration_test/driver.dart\n      scope: \"*example*\"\n\n  test:linux_e2e:\n    run: |\n      melos exec -c 1 --fail-fast -- \\\n        \"flutter test -d linux ./integration_test/MELOS_PARENT_PACKAGE_NAME_test.dart\"\n    description: |\n      Run all Linux test driver e2e tests in a specific example app.\n       - Requires `flutter channel stable`.\n       - Requires `flutter config --enable-linux-desktop` set.\n    packageFilters:\n      dirExists:\n        - linux\n        - integration_test\n      scope: \"*example*\"\n\n  test:macos_e2e:\n    run: |\n      melos exec -c 1 --fail-fast -- \\\n        \"flutter test -d macos ./integration_test/MELOS_PARENT_PACKAGE_NAME_test.dart\"\n    description: |\n      Run all MacOS test driver e2e tests in a specific example app.\n       - Requires `flutter channel stable`.\n       - Requires `flutter config --enable-macos-desktop` set.\n    packageFilters:\n      dirExists:\n        - macos\n        - integration_test\n      scope: \"*example*\"\n\n  # Coverage\n  coverage: >\n    melos exec -c 1 --fail-fast --dir-exists=test --ignore=\"*example*\" --ignore=\"*web*\" -- \\\n      flutter test --coverage\n\n  # Check pubspecs are valid and publishable in each package.\n  lint:pub: >\n    melos exec -c 5 --fail-fast --no-private --ignore=\"*example*\" -- \\\n      pub publish --dry-run\n\n  # Clean things very deeply, can be used to establish \"pristine checkout\" status\n  clean:deep: >\n    git clean -x -d -f -q\n\n  # Run all targets generally expected in CI for a full local quality check\n  qualitycheck: >\n    melos run clean:deep && melos clean && melos bootstrap && melos run lint:all && melos run build:all && melos run test:all\n\n  # Additional cleanup lifecycle script, executed when `melos clean` is ran.\n  postclean: >\n    melos exec -c 6 -- \"flutter clean\"\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.123046875,
          "content": "name: plus_plugins_workspace\n\nenvironment:\n  sdk: \">=3.3.0 <4.0.0\"\n\ndev_dependencies:\n  flutter_lints: ^4.0.0\n  melos: ^6.0.0\n"
        }
      ]
    }
  ]
}