{
  "metadata": {
    "timestamp": 1736710554388,
    "page": 132,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "olmps/memo",
      "stars": 1831,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.6923828125,
          "content": "\n# Created by https://www.toptal.com/developers/gitignore/api/dart,flutter,androidstudio,fastlane\n# Edit at https://www.toptal.com/developers/gitignore?templates=dart,flutter,androidstudio,fastlane\n\n### Dart ###\n# See https://www.dartlang.org/guides/libraries/private-files\n\n# Files and directories created by pub\n.dart_tool/\n.packages\nbuild/\n# If you're building an application, you may want to check-in your pubspec.lock\npubspec.lock\n\n# Directory created by dartdoc\n# If you don't generate documentation locally you can remove this line.\ndoc/api/\n\n# dotenv environment variables file\n.env*\n\n# Avoid committing generated Javascript files:\n*.dart.js\n*.info.json      # Produced by the --dump-info flag.\n*.js             # When generated by dart2js. Don't specify *.js if your\n                 # project includes source files written in JavaScript.\n*.js_\n*.js.deps\n*.js.map\n\n.flutter-plugins\n.flutter-plugins-dependencies\n\n### Dart Patch ###\n# dotenv environment variables file\n.env\n\n### fastlane ###\n# fastlane - A streamlined workflow tool for Cocoa deployment\n#\n# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the\n# screenshots whenever they are needed.\n# For more information about the recommended setup visit:\n# https://docs.fastlane.tools/best-practices/source-control/#source-control\n\n# fastlane specific\nios/fastlane/report.xml\nios/fastlane/README.md\nandroid/fastlane/report.xml\nandroid/fastlane/README.md\n\n# deliver temporary files\nios/fastlane/Preview.html\nandroid/fastlane/Preview.html\n\n# snapshot generated screenshots\nios/fastlane/screenshots/**/*.png\nios/fastlane/screenshots/screenshots.html\nandroid/fastlane/screenshots/**/*.png\nandroid/fastlane/screenshots/screenshots.html\n\n# scan temporary files\nios/fastlane/test_output\nandroid/fastlane/test_output\n\n# Fastlane.swift runner binary\nios/fastlane/FastlaneRunner\nandroid/fastlane/FastlaneRunner\n\n### Flutter ###\n# Flutter/Dart/Pub related\n**/doc/api/\n.fvm/\n.pub-cache/\n.pub/\ncoverage/\nlib/generated_plugin_registrant.dart\n# For library packages, donâ€™t commit the pubspec.lock file.\n# Regenerating the pubspec.lock file lets you test your package against the latest compatible versions of its dependencies.\n# See https://dart.dev/guides/libraries/private-files#pubspeclock\n#pubspec.lock\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/key.properties\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/.last_build_id\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\n### AndroidStudio ###\n# Covers files to be ignored for android development using Android Studio.\n\n# Built application files\n*.apk\n*.ap_\n*.aab\n\n# Files for the ART/Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\nout/\n\n# Gradle files\n.gradle\n.gradle/\n\n# Signing files\n.signing/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Android Studio\n/*/build/\n/*/local.properties\n/*/out\n/*/*/build\n/*/*/production\ncaptures/\n.navigation/\n*.ipr\n*~\n*.swp\n\n# Keystore files\n*.jks\n*.keystore\n\n# Google Services (e.g. APIs or Firebase)\n# google-services.json\n\n# Android Patch\ngen-external-apklibs\n\n# External native build folder generated in Android Studio 2.2 and later\n.externalNativeBuild\n\n# NDK\nobj/\n\n# IntelliJ IDEA\n*.iml\n*.iws\n/out/\n\n# User-specific configurations\n.idea/caches/\n.idea/libraries/\n.idea/shelf/\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/.name\n.idea/compiler.xml\n.idea/copyright/profiles_settings.xml\n.idea/encodings.xml\n.idea/misc.xml\n.idea/modules.xml\n.idea/scopes/scope_settings.xml\n.idea/dictionaries\n.idea/vcs.xml\n.idea/jsLibraryMappings.xml\n.idea/datasources.xml\n.idea/dataSources.ids\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n.idea/assetWizardSettings.xml\n.idea/gradle.xml\n.idea/jarRepositories.xml\n.idea/navEditor.xml\n\n# Legacy Eclipse project files\n.classpath\n.project\n.cproject\n.settings/\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.war\n*.ear\n\n# virtual machine crash logs (Reference: http://www.java.com/en/download/help/error_hotspot.xml)\nhs_err_pid*\n\n## Plugin-specific files:\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Mongo Explorer plugin\n.idea/mongoSettings.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n### AndroidStudio Patch ###\n\n!/gradle/wrapper/gradle-wrapper.jar\n\n# End of https://www.toptal.com/developers/gitignore/api/dart,flutter,androidstudio,fastlane\n\n# Android Secret files\nandroid/key.properties\nandroid/gcp_service_account.json\nandroid/app/keystore.jks\nandroid/key.properties\nandroid/app/google-services.json\nandroid/firebase_distribution_service_account.json\n\n# Google Services Info.plist\nios/Runner/GoogleService-Info.plist"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.2978515625,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 4d7946a68d26794349189cf21b3f68cc6fe61dcb\n  channel: stable\n\nproject_type: app\n"
        },
        {
          "name": ".process",
          "type": "tree",
          "content": null
        },
        {
          "name": ".resources",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "ARCHITECTURE.md",
          "type": "blob",
          "size": 32.4580078125,
          "content": "# Architecture\n\nTable of contents\n- [Architecture](#architecture)\n  - [`.vscode/`](#vscode)\n    - [Useful vscode extensions](#useful-vscode-extensions)\n  - [`android/` - Android required files](#android---android-required-files)\n  - [`ios/` - iOS required files](#ios---ios-required-files)\n  - [`lib/` - Flutter application](#lib---flutter-application)\n    - [Why](#why)\n    - [Overview](#overview)\n    - [`application/`](#application)\n      - [`constants/`](#constants)\n      - [`coordinator/`](#coordinator)\n      - [`pages/` (views)](#pages-views)\n      - [`theme/`](#theme)\n      - [`utils/`](#utils)\n      - [`widgets/`](#widgets)\n      - [`widgets/material/`](#widgetsmaterial)\n      - [`widgets/themed/`](#widgetsthemed)\n      - [`view_models/`](#view_models)\n    - [`domain/`](#domain)\n      - [`enums/`](#enums)\n      - [`isolated_services/`](#isolated_services)\n      - [`models/`](#models)\n      - [`services/`](#services)\n      - [`transients/`](#transients)\n    - [`data/`](#data)\n      - [`repositories/`](#repositories)\n      - [`gateways/`](#gateways)\n      - [`serializers/`](#serializers)\n    - [`core/`](#core)\n      - [`faults/`](#faults)\n  - [`test/` - Unit and UI testing](#test---unit-and-ui-testing)\n    - [`utils/`](#utils-1)\n    - [`fixtures/`](#fixtures)\n  - [`web/`](#web)\n- [Relevant Topics](#relevant-topics)\n  - [Why `river_pod` and not \"x\" state management library?](#why-river_pod-and-not-x-state-management-library)\n  - [Why `sembast` and not \"x\" database?](#why-sembast-and-not-x-database)\n  - [Why `mocktail` and not `mockito`?](#why-mocktail-and-not-mockito)\n  - [`CoordinatorRouter` and `Router` (or Navigator 2.0)](#coordinatorrouter-and-router-or-navigator-20)\n  - [Why manually importing the font, if there is the `google_fonts`?](#why-manually-importing-the-font-if-there-is-the-google_fonts)\n  - [Importing Fonts](#importing-fonts)\n  - [Exception handling](#exception-handling)\n  - [App Icon](#app-icon)\n  - [Local collections and resources versioning](#local-collections-and-resources-versioning)\n  - [Environment](#environment)\n  - [Firebase](#firebase)\n  - [Release](#release)\n\n## `.vscode/`\n\nWhile this project heavily enforces that vscode should be used, IntelliJ is also an alternative, although it won't\nprovide the best experience with the setup made in this repository. If you still prefer to use it, there should be no\nproblem at all, just make sure to follow the same guidelines specified in [`settings.json`](.vscode/settings.json).\n\nAll configuration files exist in [`.vscode`](.vscode/) folder and **should be git-tracked**.\n\n  - [`launch.json`](.vscode/launch.json) is where all pre-configured command-line scripts are at, such as running a\n  debug dev environment;\n  - [`settings.json`](.vscode/settings.json) is responsible for the editor configurations, such as line-length, rules\n  and auto-format on save.\n\n### Useful vscode extensions\n\n- Dart (id: dart-code.dart-code);\n- Flutter (id: dart-code.flutter);\n- Awesome Flutter Snippets (id: nash.awesome-flutter-snippets) - frequently used snippets in any Flutter application;\n- Brack Pair Color (id: coenraads.bracket-pair-colorizer) - useful when dealing with nested/verbose widgets.\n\nIt's highly recommended to, at least, add the `Dart` and `Flutter` extension, as they provide an absurd amount of useful\nfeatures.\n\n> You can copy the id and search in the vscode marketplace to find them.\n\n## `android/` - Android required files\n\nStores all required (and generated) files to output builds for the Android platform.\n\nThis is where native Android (Kotlin) code also lives, if there is a need to implement native-specific features.\n\n## `ios/` - iOS required files\n\nStores all required (and generated) files to output builds for the iOS/iPadOS platforms.\n\nThis is where native iOS (Swift) code also lives, if there is a need to implement native-specific features.\n\n## `lib/` - Flutter application\n\nEntry point to the Flutter application, where most of the *action* will happen.\n\n### Why\n\n> You can skip this explanation, this is just an overview on the topic of why we have decided to go with this particular\n> architectural approach.\n\nAt first glance (looking at the name of the topmost folders), with the objective of defining its layers and the\nrespective interactions, you may question yourself if this project is using\n[clean architecture](http://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html), \n[domain driven design (DDD)](https://martinfowler.com/bliki/DomainDrivenDesign.html) or even some pieces of\n[MVVM](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel). Now, when you start reading it and finding\nout which part depends on what - and what they expect to execute their responsibilities -, you may wonder about things\nlike \"entities are not mapped to models!\", \"where are the use-cases?\" and questions about the fact that this approach\n**doesn't follow these architectures principles**. Why is that?\n\nWell, clean architecture was originally intended for robust/enterprise-like applications that have to deal with a ton of\nbusiness-logic complexity and highly-verbose dependencies - such as libraries, frameworks and any external resources.\nWhile this is a frequent scenario in the present state of software applications, **this project is definitely not the\ncase of a highly-complex scenario** - it may evolve to be complex enough, but it won't exceed the complexity of being a\nREST-consuming client that **focuses** much more on the presentation layer than anything else.\n\nNowadays, simpler architectural designs like MVC/MVVM/MVP are much more common in client applications due to this exact\nfact: a overcomplex and high boilerplate architecture doesn't provide any significant value - they make things harder\nand slower with no clear benefit other than separating a bunch of layers **for the sake of separating them**. But they\ncome with a price: there is no clear distinction in between **Business Logic and Data manipulation** if you don't\nenforce such standards.\n\nNo, we won't remove the classic separation of \"View <-> Business Logic <-> Data\" relationship, it's just that, in this\ncase, **we think that following every nook and cranny of part of these architectures would be overengineering**, thus\nmaking things slower just to follow some principles that don't necessarily apply to this case. This approach will surely\nnot make sense (or even be completely dumb) for some, but may be good for others.\n[Relevant xkcd](https://xkcd.com/927/).\n\nOne extra thing: this is heavily influenced by a bunch personal opinion and experiences in some production projects\nthat the team has worked on. This project's external dependencies will keep changing as the time goes on, Flutter will\nalso keep evolving, and we have to adapt in a way to maintain consistency, integrity and scalability of our solution.\nSo, it's probable that there is (or will be) better ways to achieve the same goals/objectives, and for this, we look\ninto your help to make this project's architecture continuously provide a good developer experience to add new features,\nupdate old ones and keep those nasty bugs away.\n\n### Overview\n\n![Simple Architecture Overview](.resources/00arch_overview_simple.png \"Architecture Overview\")\n\nThe picture above gives us a really simplified overview of each major layer that gives shape to this application.\n\nIf you don't want to dig in on what each part is responsible of (and why), here is a TLDR:\n  - `application`: all interface elements (widgets) alongside its view models (may contain validation and such business \n  logic), the latter which communicates with the `domain`;\n  - `domain`: handles most of the business logic and if necessary, make the respective calls to the `data` layer;\n  - `data`: retrieves and modifies any data, without the knowledge of any other layers whatsoever. This is the\n  lower-boundary of our application that communicates with external frameworks and libraries;\n  - `core`: shared functionality to all layers.\n\nNow, if you want to take a closer inspection on each interaction of each layer, the image below might be more suited to\ncomprehend exactly how each layer (and its exceptions) interacts/depends on others. \n\n![Complex Architecture Overview](.resources/01arch_overview_complex.png \"Architecture Overview\")\n\n- The dotted arrow means a direct dependency, such as the connection between *View Models -> Services*. These\nconnections require that the communication should always be made through an interface and following the\n[dependency inversion principle (DiP)](https://en.wikipedia.org/wiki/Dependency_inversion_principle);\n- The straight line means a direct association or usage, such as the connection between *View Models -> Models*;\n- The smaller straight line also means a direct association or usage, such as the connection between *Pages -> Enums*.\nThe difference from the bigger ones is that these \"cross-boundaries\" between layers in a non-traditional way - through\ninteractors like *View Models* (that connects the `application` with `domain`), *Services* (that connects the `domain`\nwith `data`) and *Gateways* (that connects `data` with external dependencies).\n\nAll of the interactions above are explained in their respective sections below.\n\n### `application/`\n\nThe topmost layer, the entry point of all user interactions, which depends directly on Flutter to function properly.\nThe `application` should be responsible only for rendering elements and capturing inputs, touches, and any interaction\nthat comes directly from the user, alongside the interface's capabilities, like scroll, navigation, responsivity,\netcetera.\n\nRules about each `application/` structure's responsibilities:\n- It should never **interact** with any layer other than its own sub-folders;\n- It should never **access** any other layer classes (not even indirectly).\n\nTwo exceptions for the above:\n- These structures can **access** the [`domain/enums`](#enums) - while it exposes a piece of the `domain` layer, we \nconsider this to be an acceptable exception (explained in [`data/`](#data));\n- The **[ViewModels (VMs)](#view_models)** can **interact** with the `domain/` because they are the structure that\nallows us to, in only *one-way*, cross boundaries from the `application` to the `domain`.\n\n#### `constants/`\n\nStores any kind of constant, like images, strings, themes, etcetera.\n\n#### `coordinator/`\n\nAllows us to take control over our routing and navigation, in close contact with the `Flutter` framework to do so.\n\nThe responsibility of the coordinator is to make all of those pesky deep-linking and navigation stack problems become\neasier to deal with.\n\n#### `pages/` (views)\n\nEach page is normally associated with a `Scaffold`, that represents all the contents of a single `MaterialPageRoute`,\nwhich is controlled by the `CoordinatorRouter`.\n\nThese `pages` are the only elements that can access the [`view_models/`](#view_models).\n\n#### `theme/`\n\nSpecialized implementations that deal with the `Flutter` framework's Theme (more specifically, the `ThemeData`).\n\nBecause of some known limitations of the `MaterialApp` theme handling, there are some custom implementations like the\n`ThemeController`, which provides extra functionality on top of the material's default.\n\n#### `utils/`\n\nUI-related utilities like formatting, widgets helpers, animations, painters, etcetera.\n\n#### `widgets/`\n\nIndividual `Widget`s that represent some custom visual element that is reused in multiple different\n[`pages`](#pages-views) or even other `application/widgets`. These should not know anything about VMs, pages, or\nanything other than `application/utils` and `application/constants`. They should be **pure** and **independent**.\n\n#### `widgets/material/`\n\nSame as the [`widgets`](#widgets/), but specific to the `flutter/material` library, which means that they can only exist\nbelow (as a child) of a `MaterialApp`.\n\n#### `widgets/themed/`\n\nSame as the [`widgets`](#widgets/), but requiring a `ThemeController` as a parent. It also (usually) means that they\ndepend on the `flutter/material` library as well. This is because the current theme implementation is tightly coupled to\nthe flutter's implementation of the material framework - make no mistake, this is an intended decision, as the material\nframework provide an enormous amount of useful features by default, mainly related to accessibility and animations.\n\n#### `view_models/`\n\nThe boundary between the [`application/`](#application) and [`domain/`](#domain). The ViewModels, (suffixed with `VM`\nin each class), always should be built upon an interface (following the DiP) and should never - ever - know anything\nabout the UI, meaning the `flutter` framework - but maybe some constant stuff like `Platform` and core\nmeta-functionality, but never anything related to the layout per-se.\n\nThey should never depend on each other, meaning that no `VM` class should ever be nested, as to avoid circular\ndependencies.\n\nThe `VM`s are the only structures in [`application/`](#application) that communicates with inner layers, more\nspecifically, with the [`domain/`](#domain). In the process of achieving this, it will inevitably leak some of the core\nbusiness logic (things like input validation) that should be mostly contained in the [`domain/`](#domain) layer.\n\n### `domain/`\n\nThe intermediate layer. Using the core structures (models, entities and enums), the domain is where all the business logic\nshould be contained, by accessing the [`repositories`](#repositories) to achieve its goals.\n\nRules about each `domain/` structure's responsibilities:\n- It should never **interact** with any layer other than its own sub-folders;\n- It should never **access** any other layer classes (not even indirectly).\n\nOne exception for the above:\n- The **[Services](#services)** can **interact** with the `data/` (through the [`repositories`](#repositories)) because \nthey are the structure that allows us to, in only *one-way*, cross boundaries from the `domain` to the `data`.\n\n#### `enums/`\n\nThey are just like our [`models`](#models) - a data structure that represent part of our business, but with the\ndifference that it can be *described* statically (they are constant).\n\n> These are the only structures that can be accessed (or leaked) to the views due to its constant nature. It provides a\n> type-safety when dealing with these cases and if we don't actually leak it, normally what we have is a duplication of\n> this same enumerator behavior in the UI, but less type-safe (or just replicating the exact same behavior).\n\n#### `isolated_services/`\n\nJust like a regular [`services`](#services), but as the name states, it should be always completely isolated from any\ndependency. Think of the regular `services` as \"impure\" business logic, meaning that they need to use external\ndependencies interfaces, like databases, file system, etcetera, and the `isolated_services` as completely \"pure\"\nbusiness logic, as it only requires to know the logic itself and nothing else.\n\nBecause these are independent, the impure `services` may use them as dependencies, as it would never create a cyclical\nreference problem.\n\n#### `models/`\n\nA domain model - a set of structures that represent a business object.\n\n#### `services/`\n\nThe boundary between the [`domain/`](#domain) and [`data/`](#data). Each service (suffixed with `Service` in each\nclass) should always be built upon an interface (following the DiP) and should never depend on each other, meaning that\nno `Service` class should ever be nested, as to avoid circular dependencies.\n\nThe `services/` should contain all the heavy business logic associated with each `model` in our project. They are\nusually split to represent each [`models/`](#models) related business logic, but this could be split in even smaller\nstructures (called Use Cases in the clean architecture) if proven necessary.\n\nThey are the only structures in [`domain/`](#domain) that communicates with the [`data/`](#data) layer, more\nspecifically, through the [`repositories/`](#repositories).\n\n#### `transients/`\n\nJust like the [`models/`](#models), the `transients` represent a set of business structures, although there's a\nclear distinction between these and `models` - they exist only in memory, meaning that they make sense only in some\nparticular contexts required by the application's lifecycle.\n\n<!-- TODO(matuella): Add an example, this is too broad of a definition -->\n\n### `data/`\n\nThe bottom layer. Communicates with raw libraries and frameworks to consume its raw data and expose it to its consumer.\nThese libraries and frameworks are abstractions (interfaces, following the DiP) to access things like remote servers,\nhardware capabilities (audio, video, geo), databases, etcetera.\n\nRules about each `data/` structure's responsibilities:\n- It should never **interact** with any layer other than its own sub-folders;\n- It should never **access** any other layer classes (not even indirectly).\n\nOne exception for the above:\n- Both [`serializers/`](#serializers) and [`repositories/`](#repositories) can **access** the [`enums/`](#enums) and\n[`models/`](#models) - while it exposes a piece of the `domain` layer, we consider this to be an acceptable exception\n(explained below).\n\nJust like we have decided to expose the `enums/` to the interface, we also agreed to expose both `enums/` and\n`models/` to the [`serializers`](#serializers) and [`repositories`](#repositories). The alternative here was to \n[create intermediate data models (DTOs)](http://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html#what-data-crosses-the-boundaries),\nbut *separating the domain model from this exact copy (DTO) doesn't provide any meaningful solution to this\narchitecture* (I like [this answer in StackExchange](https://softwareengineering.stackexchange.com/a/388545) about the\nsame exact issue).\n\n#### `repositories/`\n\nInterfaces the access to external libraries - that crosses the boundary of our application - to the\n[`services`](#services). The `repositories` can be considered like *interface adapters*, allowing an independency when\nmaking changes to the implemented technologies, affecting only this layer (and obviously the technology implementation\nitself).\n\nEach of these *adapters* are suffixed with `Repository`, built upon interfaces (following the DiP), and should never\ndepend on each other, meaning that no `Repository` class should ever be nested, as to avoid circular dependencies.\n\nThere are use-cases where multiple repositories require making use of the exact same abstraction of some third party\nlibrary, such as accessing a local database, which requires much more than simply importing an external package. In\nthese cases, a `Repository` should be injected with such abstraction, namedly the [`gateways`](#gateways), as to not\nrepeat ourselves too much when dealing with major third parties.\n\n#### `gateways/`\n\nAs commented in [`repositories`](#repositories), these are pure/raw access to libraries, databases and all external\ndependency that crosses the boundary of our application, which can be used solely by these same `repositories` - because\na greater abstraction turned out to be necessary.\n\nThese should be built like any other major structure, through interfaces, following the DiP and do not depend on each\nother - to avoid circular dependencies.\n\nAlso, because gateways are \"rare naming\" occurrence in most architectures,\n[here is the reference of why](https://martinfowler.com/eaaCatalog/gateway.html).\n\n#### `serializers/`\n\nInstead of a codegen approach (due to the drawbacks of being dependent of auto-generating the parsing of our core\nmodels), we decided to go with the manual serialization. The `serializers/` exist with the sole purpose of translating\n[`models/`](#models) to/from a raw structure.\n\n### `core/`\n\nFundamental functionality to all the layers (being accessed by any of them), but doesn't know about their existence.\nIn terms of knowledge, they are similar to the [`data/`](#data) layer, other than the fact that the `data/` layer itself\ncan access `core/`.\n\nThe `core/` shares functionality like [`faults/`](#faults), environment management, project-wide constants, etcetera.\n\n#### `faults/`\n\nHas all the project's custom `Error`s and `Exception`s classes.\n\n## `test/` - Unit and UI testing\n\nNothing out of the ordinary here, we simply make a mirror of the `lib/` folder structure within `test/`. I.e. if we have\na file that is `lib/application/widgets/custom_container.dart`, we would have a mirrored\n`test/application/widgets/custom_container_test.dart`.\n\nDue to some [limitations of the dart language](https://github.com/dart-lang/language/issues/1482) and the new\nnull-safety approach, [`mockito`](https://github.com/dart-lang/mockito) is now using a codegen to mock, which we\nhonestly think that [`mocktail`](https://github.com/felangel/mocktail) is a better alternative.\n\n### `utils/`\n\nShared functionality amongst all test cases.\n\n### `fixtures/`\n\nTests [fixtures](https://en.wikipedia.org/wiki/Test_fixture#Software) - here is a\n[good SO answer](https://stackoverflow.com/a/14684400/8558606) explaining what they represent. In our scenario, they\nusually represent raw data, models or entities.\n\n## `web/`\n\nStores all required (and generated) files to output builds for the Web platform. Currently not supported.\n\n---\n\n# Relevant Topics\n\nThese are points that aren't directly related to the folder structure and each responsibility, but things that also\npermeates the knowledge required to fully understand this architecture.\n\n## Why `river_pod` and not \"x\" state management library?\n\nWith the past experiences with libraries like the native `InheritedWidget`, `Provider` and `Bloc`, we had found that\nthey tend to be quite verbose (thus bloating the code) and limited in some scenarios. Diving into each of these\nparticularities would be a long discussion, but\n[`river_pod` has a brief explanation](https://github.com/rrousselGit/river_pod#why-another-project-when-provider-already-exists)\non why it solves such problems and why it's better to use it.\n\n## Why `sembast` and not \"x\" database?\n\n[`sembast`](https://github.com/tekartik/sembast.dart) is one of the few NoSQL databases that are really easy to use,\nsupports web (in a parallel package) and provides a decent amount of functionality like reactivity and complex queries,\nwith the addition of built-in support for migration. The library has its limitations due to its inherent nature, but we\ndon't think that it will be an issue for this project.\n\n## Why `mocktail` and not `mockito`?\n\nAfter NNBD, `mockito` is using a codegen approach to deal with mocks, which we quite dislike given that there is no\nclear benefit when comparing to `mocktail`. There is an [open issue](https://github.com/dart-lang/mockito/issues/347) to\nmerge mocktail into `mockito`, but until then (assuming it will be merged), we think that the same functionalities will\ncontinue to work using `mocktail` only.\n\n## `CoordinatorRouter` and `Router` (or Navigator 2.0)\n\nThis was probably one of the decisions that we still are somewhat unsure about. To not go into a lot of the details,\ninstead of using external libraries routing libraries (like `vrouter`, `auto_route` and `beamer`), we decided to take a\nshot on doing our own implementation of the Navigator 2.0 (or Router), because we believed that it could give us a much\nmore fine-grained (and less bloated) implementation of what we consider a coordinator pattern (name more frequent in the\niOS development ecosystem, but what we consider our router).\n\nWhile we are quite content with the result, that the solution matched our preference (personal opinion) of splitting the\napplication pages in a complete separate class from the router/coordinator (contrary to what most of the routing\nlibraries do), and access it call navigatons, we are not so sure about the future of the Navigator 2.0 and how\nhard/verbose it can become. We didn't quite like the API and it may be a point of difficult fixes/updates in the future.\n\nThere is an [research](https://github.com/flutter/uxr/wiki/Navigator-2.0-API-Usability-Research) going on to improve\nFlutter's Navigator API, so we should keep track of its evolution and how it may improve our solution.\n\nWhile the Flutter framework doesn't provide an improved version of the current Navigator 2.0 state **AND IF** the\ncurrent coordinator proves to be more of a burden than a help, we should migrate to one of the libraries mentioned\nabove.\n\n## Why manually importing the font, if there is the `google_fonts`?\n\nFour main points for this decision:\n\n- The `google_fonts` package makes an async request to lazily load its fonts, meaning that it will fallback to the\nunsupported font (it will not crash, but will be visually inconsistent with what we expect from a decent UI);\n- We wouldn't benefit from the `google_fonts` default implementation of the project's fonts, as we have a custom layout\nfor each material's text theme;\n- The current version of memo doesn't require any internet connection to work, so it would also mean a bad user\nexperience for offline users;\n- It's a new dependency (meaning more possible future problems) for the project.\n\nThe only drawback of doing this manually is importing the fonts in the `assets/` folder (size shouldn't be relevant to\nimpact even low-end devices), and specifying them in the `pubspec.yaml`.\n\n## Importing Fonts\n\nTo import fonts, into this project, one should:\n1. Add all font files to `assets/fonts` following the weight/name guidelines below:\n    - `100`: `\"{font_name}-Thin.{ttf || otf}'`;\n    - `200`: `\"{font_name}-ExtraLight.{ttf || otf}'`;\n    - `300`: `\"{font_name}-Light.{ttf || otf}'`;\n    - `400`: `\"{font_name}-Regular.{ttf || otf}'`;\n    - `500`: `\"{font_name}-Medium.{ttf || otf}'`;\n    - `600`: `\"{font_name}-SemiBold.{ttf || otf}'`;\n    - `700`: `\"{font_name}-Bold.{ttf || otf}'`;\n    - `800`: `\"{font_name}-ExtraBold.{ttf || otf}'`;\n    - `900`: `\"{font_name}-Black.{ttf || otf}'`.\n2. Update the `pubspec.yaml` `flutter.fonts` property with the new fonts naming/weights;\n3. Follow the type-safe usage of `FontKey` enumerator in `constants/fonts.dart`.\n\n## Exception handling\n\nCurrently, because the application has almost no async interactions, other than fetching local files and databases,\nwhich rarely fails if comparing to network requests (and when it fail, probably throws an `Error` and not an\n`Exception`).\n\nThis is one of the main reasons that this application doesn't have much to deal when we are talking about exception\nhandling, altough there is an use-case that justified the creation of this layer that handles an `Exception`, which are\nfailures expected in runtime and we should handle them properly, so the user can know exactly what went wrong.\n\nThe exceptions are presented using `SnackBar`s and, using a simply global (but not static) approach, we provide our own\n`GlobalKey<ScaffoldMessengerState>()` instance to `MaterialApp`, so we can freely access this same key using the same\ninstance provided to the `MaterialApp`.\n\nAdding to this, there is a helper function that takes the `BaseException` and translates to the according error. Its\nsignature is: `showExceptionSnackBar(BaseException exception)`.\n\n## App Icon\n\nThe application icon is auto-generated using a high-res single icon asset file alongside a commonly used package that\nuses this asset to generate for all platforms (`flutter-launcher-icons`).\n\nIf you change the icon's asset, you have to run this tool again to make sure that the files are updated:\n\n```\nflutter pub run flutter_launcher_icons:main\n```\n\n## Local collections and resources versioning\n\nBecause the current `memo` version only manages its data locally, it has no server to defer more complex use-cases, like\nsyncing the user's list of `Collection`s (with its `Memo`s) and its `Resource`s.\n\nThis sync is done whenever a new application version is deployed - by checking which was the last stored version. Then,\nwhen this version differs from the last stored one, runs through all the `assets/collections/` files to make the\naccording additions, updates and removals. The same happens to `assets/resources.json`, but in this case, there is a\nsingle json file containing all the resources available to the application.\n\nThis version check runs once every time the application opens, but the heavy computation only occurs when the current\nversus expected version differs. You can find more about this in the `VersionServices` implementation file.\n\n## Environment\n\nFor different types of build environments, we don't use the common _flavors_, iOS schemas and all of that painful setup,\ndue to the fact that, since Flutter `1.17`, we can now use command arguments to inject any variable in our application -\nno more multiple `main.dart` files and such stuff. Simply run:\n\n`flutter run --dart-define=ENV=MY_ENVIRONMENT`\n\nDuring runtime, environment properties are provided through `EnvMetadata` implementation, located in \n[`env.dart` file](./lib/core/env.dart). It uses this same `ENV` flag to provide the respective environment's metadata, \nsuch as server URLs.\n\nIf you are using `vscode` IDE, there is the [launch configuration files](.vscode/launch.json) for you to auto run and \ndebug the application.\n\nAnd that's it, the currently supported environments are: `DEV` and `PROD`.\n\n## Firebase\n\nBecause this project depends on [Firebase](https://firebase.google.com/), a third-party backend-as-a-service (BaaS), it\nrequires to be setup as well, otherwise you won't be able to run your own instance of `Memo` locally. The setup is\npretty simple, you just have to [put your own `GoogleServices-Info.plist` (iOS) and/or `google-services.json` (Android)\nin their respective folders](https://firebase.flutter.dev/docs/overview#installation) and *voilÃ *, you're good to go.\n\nAs of today (06/07/2021), these files are not checked in source control. This is because they aren't meant to be used\nin your local environment, as it could create extra unnecessary costs and could - possibly - generate inconsistencies\nwhile using the dependent Firebase services in these early stages of the project, like leaking your locally-modified\ncode exceptions into Crashlytics, which would make things harder for everyone to actually know what's going on.\n\nAlthough in the future, we would like for them to be used in your local environment just like they are used in the\nproduction application. It's just that we aren't fully aware of the consequences yet.\n\nYou may notice the template file `GoogleService-Info-Template.plist`. Its only purpose is to allow our CI to build the \napp through `pull_request` workflow, as it only contains mocked information.\n\nNonetheless, if you want to know how to setup your own Firebase project, check out the \n[FlutterFire docs](https://firebase.flutter.dev/docs/overview/).\n\n## Release\n\nThe release process is fully-automated using Github Actions with Fastlane.\nThe [release workflow](.github/workflows/release.yml) script triggers each time a new tag is published, and begins the\nrelease process in all supported platforms. The release script prepares the environment to build and release all \napp targets by setting up Flutter environment for iOS and Android platforms, setting up necessary private keys to fetch\ndistribution certificates from an external Github Repository and other setup phases that are required to successfully \nbuild and deploy the apps. All these phases are detailed explained in the \n[release workflow script](.github/workflows/release.yml).\n\nThe Github Actions triggers the script that begins the release process, but the heavy work is made by using \n[Fastlane](https://fastlane.tools/) automation tool. Fastlane gives us a set of tools to automate all the heavy work\nof configuring a project environment to be deployed, build and deploy it to production. Every the release script from\nGithub Actions finish the environment setup, we use Fastlane to run the targets tests, analyzer, bump the build version\nfrom the targets, build the projects and finally deploy them. We currently have Fastlane running for iOS and Android \ntargets, and the lanes that perform such tasks are described in details in both platforms Fastfile's:\n\n- [iOS Fastfile](ios/fastlane/Fastfile)\n- [Android Fastfile](android/fastlane/Fastfile)\n\nThe main difference between the mobile platforms is that Android build number is indefinitely incremented, since it's\nnot allowed to reset an Android project build number, while iOS resets its build number every time the app version \nchanges. \n\nYou may notice that both platforms Fastfiles are quite different. This happens firstly because both platforms \nenvironments are completely different - as an example of that, iOS requires provision profiles and certificates to \nbuild and deploy the application, while Android requires a sign key to before deploying the app. They also differ \nbecause there are some actions being used in iOS Fastlane that doesn't exists on Android - an example of that is that\nthe iOS Fastlane uses an action to fetch the last used build number on TestFlight so it can increment it and deploy the\nnext version, while Android just trust in the number that exists in the local `build.gradle`."
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.80859375,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\nReleases here should only be made whenever there is a build available for them in the respective stores (even if it's\na beta or production release, they must be documented here).\n\n## [Unreleased]\n\n### Added\n- Visually Opinionated Buttons (Primary, Secondary and Text).\n\n## [0.2.0] - 2021-08-13\n\n### Updated\n- Several `ExecutionTerminal` enhancements:\n  - Allows the user to go back/forward on the same memo.\n  - The selected difficulty don't require a confirmation anymore - once it's selected, it animates to the next memo.\n\n### Fixed\n- Several `ExecutionTerminal` fixes:\n  - Actions overlapping in smaller devices.\n  - Inconsistent state when memos were executed too fast.\n  - Not following the expected layout specs.\n- Replaced oval gradient in `CollectionCard` with `LinearGradient`, attempting to solve performance issues.\n\n### Removed\n- Hero animation from `CollectionCard`.\n\n## [0.2.0-rc.1] - 2021-08-02\n\n### Added\n- Firebase Analytics SDK with no need for consent - disabled `AdId` collection.\n- A proper empty state for `CollectionsPage` - the `_CollectionsEmptyState`.\n- `DestructiveButton`, a customized button for destructive operations - with custom layout specs.\n- `MemoThemeData.destructiveSwatch` and a its respective destructive swatch for the classic theme.\n\n### Updated\n- Android & iOS Fastfiles to automatically distribute uploaded builds to external testers.\n- Both `pull-request` and `release` workflows now:\n  - Caches flutter's SDK.\n  - Run Flutter tests only once.\n  - Strategy used to authenticate with `GoogleService-Info` (only required in `release`, using an empty template in\n  `pull-request`).\n  - Uses the Flutter's beta channel + latest version, requirements of the animation jank fix.\n- Android `minSdkVersion` from `16` to `17` and `multiDexEnabled` to `true`, requirements of `flutter-quill` dependency.\n- iOS `MinimumOSVersion` from `8.0` to `9.0`, an apparent dependency on the latest beta channel version.\n- Flutter's SDK to `2.4.0-4.2.pre` to fix the animation jank.\n- `Fastfile` to use `--bundle-sksl-path` option, requirements of the animation jank fix.\n- When quitting the execution, `CollectionExecutionPage` now uses the `showSnappableDraggableModalBottomSheet` instead\nof `AlertDialog`.\n\n#### Collections\n- Cohesion improvements on `comecando_com_git`.\n\n### Fixed\n- Discord link was expired, now it's a permalink.\n- White screen before `SplashPage` was loaded (using `flutter_native_splash` and generating native splash screens).\n- `AssetIconButton` wasn't conforming to the correct layout specs.\n- Misleading `QuillEditor` cursor in `readOnly` mode.\n- Wrong iOS localization. `en` removed while we don't localize the app, only supports `pt-BR` for now.\n- [Possible Fix] Trying to use a pre-bundled shader strategy to fix all animation's jank.\n- `ExecutionTerminal` not respecting the device's safe area.\n\n## [0.1.0] - 2021-07-16\n\n### Added\n- `bdd_fundamentos_01`, `fundamentos_scrum`, `guia_scrum`, `kotlin_fundamentos_01` and `manifesto_agil` collections.\nThanks to all contributors!\n\n## [0.1.0-rc.3] - 2021-07-15\n\n### Added\n- `Contributor` model and its `ContributorSerializer` serializer.\n- `EnvMetadata` and its respective implementation that provides application's environment constants.\n- `SettingsSection.community` with `LinkSettingsItem` to discord.\n- `showSnappableDraggableModalBottomSheet` utility.\n- `MultiContributorsView` and `SingleContributorView` widgets.\n- `Firebase` and `FirebaseCrashlytics` to record unexpected crashes, errors and exceptions.\n\n### Updated\n- All files documentations, including standardizing communication.\n- `CollectionMemos` and `Collection` now have a `contributors` property, exposing all associated contributors with that\nparticular collection.\n- `LoadedCollectionDetailsState` now also provides a list of `ContributorInfo` associated with that `Collection`.\n- `LinkButton` widget now exposes `backgroundColor` and `textStyle` properties.\n- `ExternalLinkButton` widget now exposes `iconColor`, `backgroundColor` and `textStyle` properties.\n- `scaffold_messenger` to receive a `BuildContext` instead of extending it - improves code auto-completion.\n- `Fastfile` to upload iOS symbols to Crashlytics.\n- Existing collections with their respective contributors.\n\n### Fixed\n- Missing `SafeArea` in `Scaffold.bottomNavigationBar` for devices with home indicator.\n- Missing `SettingsVM` interface.\n- Hero animations built through `buildHeroCollectionCardFromItem` weren't using an unique `Hero.tag`.\n\n## [0.1.0-rc.2] - 2021-05-12\n\n### Added\n- `comecando_com_git`, `ecossistema_do_flutter` and `swift_fundamentos_01` collections.\n\n### Removed\n- `git_getting_started` collection.\n\n### Updated\n- Added new resources to `resources.json`.\n\n### Fixed\n- Fixed [`release`](.github/workflows/release.yml) workflow to use personal access token when pushing changes to the\nrepo.\n\n## [0.1.0-rc.1] - 2021-05-08\n\nIntroduces the first release candidate with all the first idealized functionalities for `memo`:\n\n- Collections listing, which sections all collections using its category and segments the contents by explore and\nreview:\n  - Explore shows all collections that haven't all memos completed at least once;\n  - Review shows all collections that have all memos completed at least once.\n- Progress, showing the user's metadata for application-wide collection's executions, such as time spent, the\npercentage for each answer, etcetera;\n- Collection details and execution, which allows the user to study upon a compiled collection in this repository;\n- Settings page with info related to this project.\n\n## [0.1.0-dev.1] - 2021-04-01\n\nInitial release, defines core architecture.\nThe application is unusable on this version."
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.98046875,
          "content": "# CONTRIBUTING\n\n## Issues\n\nWhether you find a bug, something that is not clarified or a feature request, feel free to \n[open a issue](https://github.com/olmps/memo/issues).\n\nWhen creating an issue, please provide as much information as possible in order to help the project maintainers to \nunderstand and track the issue. It may have:\n\n- Goal\n- Expected Results\n- Actual Results\n- Steps to Reproduce\n- Code samples reproducing the issue\n- Version of the project which has the bug\n\n## Pull Requests\n\nWhen creating Pull Requests, follow the most [common good practices](https://gist.github.com/MarcDiethelm/7303312), \nrespect the swiftlint static checks (modifications/exceptions may be discussed), and create an awesome description so \nwe can understand it without asking any whys.\n\n## Commit Messages\n\nCommit messages matter. Aim to be succinct and descriptive at the same time. We consider as a good source \n[How to Write a Git Commit Message](https://chris.beams.io/posts/git-commit/) from Chris Beams."
        },
        {
          "name": "FAQ_ptBR.md",
          "type": "blob",
          "size": 1.4765625,
          "content": "# Memo - Perguntas Frequentes\n\n- [Memo - Perguntas Frequentes](#memo---perguntas-frequentes)\n  - [O que Ã© uma ColeÃ§Ã£o?](#o-que-Ã©-uma-coleÃ§Ã£o)\n  - [O que Ã© um Memo?](#o-que-Ã©-um-memo)\n  - [O que Ã© o nÃ­vel de fixaÃ§Ã£o?](#o-que-Ã©-o-nÃ­vel-de-fixaÃ§Ã£o)\n\n## O que Ã© uma ColeÃ§Ã£o?\n\nUma coleÃ§Ã£o se trata de um grupo de [Memos](#o-que-Ã©-um-memo).\n\nFazendo uma analogia com [flashcards](https://en.wikipedia.org/wiki/Flashcard), ela Ã© o que consideramos um Deck.\n\n## O que Ã© um Memo?\n\nUm memo Ã© um \"desafio\" individual de uma [ColeÃ§Ã£o](#o-que-Ã©-uma-coleÃ§Ã£o).\n\nFazendo uma analogia com [flashcards](https://en.wikipedia.org/wiki/Flashcard), Ã© o que consideramos como uma Carta,\nesta na qual pertence Ã  um Deck.\n\n## O que Ã© o nÃ­vel de fixaÃ§Ã£o?\n\nO nÃ­vel de fixaÃ§Ã£o (traduzido de *memory recall*) pode ser definido como **a soma das estimativas de memÃ³ria (do\nusuÃ¡rio) para cada Memo, isto Ã©, o quÃ£o _forte_ Ã© a memÃ³ria do usuÃ¡rio sobre os Memos de uma ColeÃ§Ã£o**. Este nÃ­vel Ã©\ncalculado com base na [curva de esquecimento do SuperMemo](https://supermemo.guru/wiki/Forgetting_curve).\n\nA implementaÃ§Ã£o deste cÃ¡lculo pode ser vista mais Ã  fundo na sua prÃ³pria implementaÃ§Ã£o dentro deste repositÃ³rio, no\nserviÃ§o chamado `MemoryRecallServices`.\n\nObs.: este nÃ­vel de fixaÃ§Ã£o ainda estÃ¡ em fase de desenvolvimento e deverÃ¡ ser melhorado ao longo do tempo. Isto quer\ndizer que ainda nÃ£o temos um forte embasamento de que esta estimativa de \"fixaÃ§Ã£o\" seja tÃ£o assertiva."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4794921875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2021, Olympus\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.119140625,
          "content": "English | [Portuguese](README_ptbr.md)\n\n<div align=\"center\">\n  <h1>Memo</h1>\n  <img src=\"https://raw.githubusercontent.com/olmps/memo/master/assets/icon.png\" alt=\"Memo Icon\" width=\"200\">\n  <br>\n  <br>\n  <a href=\"https://github.com/olmps/memo/actions/workflows/release.yml\">\n    <img src=\"https://github.com/olmps/memo/actions/workflows/release.yml/badge.svg\" alt=\"Release\">\n  </a>\n  <br>\n  <br>\n</div>\n\nMonorepo for Memo.\n\nMemo is an open-source, programming-oriented [spaced repetition](https://en.wikipedia.org/wiki/Spaced_repetition)\nsoftware (SRS) written in Flutter.\n\n> As of now, this project is designed to only output builds for Android and iOS. Even though, given the current\n> _stability_ of Flutter SDK for desktop (Windows, Linux and macOS) and web, there is a high probability that this\n> project will eventually support builds for all platforms.\n\n---\n\nThis README is meant to guide how this project is structured and should serve as a guide to help the project scale with\nthe current and future requirements. Think of it as a flexible set of rules that guides the project's decisions. While\nthey can (and probably will) change over time, discussions must be raised to trigger such changes: this means that\nwe will think/question ourselves before taking an action that breaks any rational decision taken here. It is also\neffective to guide PR discussions.\n\n- [Setup](#setup): how to configure your local project;\n- [Architecture](#architecture): how this application works from inside;\n- [Background](#background): some background story about this project;\n- [Contributing & Good Practices](#contributing--good-practices): recommendation on how to write good code for this\n  application;\n- [License](#license): how this software is licensed and how you may use it.\n\n## Setup\n\nIf you have no idea how to install Flutter and run it locally, check this\n[_Get started_](https://flutter.dev/docs/get-started/install).\n\nIf you have Flutter setup locally, on the project's root folder, install pubspec dependencies by running\n`flutter pub get`.\n\n### Firebase dependencies\n\nMemo has Firebase dependencies that needs to be setup before running locally. More information on this in \n[ARCHITECTURE#firebase](ARCHITECTURE.md#firebase).\n\n## Architecture\n\nHow this application works from inside and how it interacts with external dependencies - written in details in\n[ARCHITECTURE.md](ARCHITECTURE.md).\n\n## Background\n\nIf you're interested in checking out an overview about how we dealt with this project's software process (inside our \nteam), check out [.process/](.process/README.md) (sorry, for now only in ptBR).\n\n## Contributing & Good Practices\n\nSee [CONTRIBUTING](CONTRIBUTING.md) for details about how to contribute to the project.\n\n## License\n\nMemo is published under [BSD 3-Clause](LICENSE).\n\n## Sponsors\n\nThis project was built with the help of the sponsors below:\n\n- [Maratona Discover](https://bit.ly/lucas-montano-maratonadiscover): Discover is a free way of learning how to code.\n- [Startup Life Podcast](https://bit.ly/lucas-montano-startup-life): Your tech, business, and innovation Podcast.\n- [Pingback](https://bit.ly/lucas-montano-pingback): Total freedom to create content.\n"
        },
        {
          "name": "README_ptbr.md",
          "type": "blob",
          "size": 3.4384765625,
          "content": "[InglÃªs](/README.md) | PortuguÃªs\n\n<div align=\"center\">\n  <h1>Memo</h1>\n  <img src=\"https://raw.githubusercontent.com/olmps/memo/master/assets/icon.png\" alt=\"Memo Icon\" width=\"200\">\n  <br>\n  <br>\n  <a href=\"https://github.com/olmps/memo/actions/workflows/release.yml\">\n    <img src=\"https://github.com/olmps/memo/actions/workflows/release.yml/badge.svg\" alt=\"Release\">\n  </a>\n  <br>\n  <br>\n</div>\n\nMonorepo do Memo.\n\nMemo Ã© um software de cÃ³digo aberto (escrito em Flutter) de\n[repetiÃ§Ã£o espaÃ§ada](https://en.wikipedia.org/wiki/Spaced_repetition) (SRS, em inglÃªs) voltado ao tema de programaÃ§Ã£o.\n\n> Atualmente, este projeto estÃ¡ construÃ­do apenas para gerar _builds_ para Android e iOS. Embora o fato de que, dado a\n> estabilidade da SDK do Flutter para desktop (Windows, Linux e macOS) e web, existe uma alta probabilidade que este\n> projeto eventualmente suportarÃ¡ _builds_ para todas as plataformas.\n\n---\n\nEste README e todos os sub-documentos presentes aqui (CONTRIBUTING, ARCHITECTURE & CHANGELOG) tem como objetivo guiar a\nestrutura deste projeto e devem auxiliar na escalabilidade das funcionalidades existentes hoje e nas que serÃ£o criadas\ncom o decorrer do andamento do projeto. Estes documentos servem como um conjunto flexÃ­vel de regras que guiam as\ndecisÃµes tomadas no andamento do projeto. Embora estas regras possam - e provavelmente irÃ£o - mudar, discussÃµes devem\nser levantadas sobre os motivos para tais mudanÃ§as, de maneira que essas discussÃµes e decisÃµes sejam transparentes para\ntodos.\n\n- [Setup](#setup): como configurar seu projeto localmente;\n- [Arquitetura](#arquitetura): como estÃ¡ estruturada a arquitetura da aplicaÃ§Ã£o;\n- [Background](#background): um pouco do _background_ sobre este projeto;\n- [ContribuiÃ§Ã£o & Boas PrÃ¡ticas](#contribuiÃ§Ã£o--boas-prÃ¡ticas): recomendaÃ§Ãµes sobre contribuiÃ§Ãµes;\n- [LicenÃ§a](#licenÃ§a): como essa aplicaÃ§Ã£o estÃ¡ licenciada e como vocÃª pode utilizÃ¡-la.\n\n## Setup\n\nSe vocÃª nÃ£o tem ideia de como instalar o Flutter e rodÃ¡-lo localmente, dÃª uma olhada nesse\n[_Get started_ (em inglÃªs)](https://flutter.dev/docs/get-started/install)\n\nAgora, se vocÃª jÃ¡ tem o Flutter configurado localmente, na pasta raÃ­z do projeto, instale as dependÃªncias atravÃ©s do\ncomando `flutter pub get`.\n\n### DependÃªncias do Firebase\n\nO Memo possui dependÃªncias do Firebase que necessitam ser configuradas antes de rodar localmente. Mais informaÃ§Ãµes sobre \nisso em [ARCHITECTURE#firebase](ARCHITECTURE.md#firebase).\n\n## Arquitetura\n\nComo essa aplicaÃ§Ã£o foi estruturada e como ela interage com dependÃªncia externas - escrito em detalhes em\n[ARCHITECTURE](ARCHITECTURE.md) (em inglÃªs).\n\n## Background\n\nSe vocÃª estÃ¡ interessado em dar uma olhadinha sobre como acabamos lidando com o processo de software deste projeto (dentro\nda nossa equipe), dÃª uma olhada no [.process/](.process/README.md).\n\n## ContribuiÃ§Ã£o & Boas PrÃ¡ticas\n\nVeja o documento [CONTRIBUTING](CONTRIBUTING.md) para mais detalhes sobre como contribuir com este projeto.\n\n## LicenÃ§a\n\nMemo estÃ¡ licenciado sobre a licenÃ§a [BSD 3-Clause](LICENSE).\n\n## Patrocinadores\n\nEste projeto foi construÃ­do com a ajuda dos patrocinadores abaixo:\n\n- [Maratona Discover](https://bit.ly/lucas-montano-maratonadiscover): Aprenda programaÃ§Ã£o na prÃ¡tica. E de graÃ§a.\n- [Startup Life Podcast](https://bit.ly/lucas-montano-startup-life): O seu podcast sobre negÃ³cios, tecnologia e inovaÃ§Ã£o.\n- [Pingback](https://bit.ly/lucas-montano-pingback): Crie conteÃºdo com total liberdade.\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.1083984375,
          "content": "include: package:strict/analysis_options.yaml\n\nanalyzer:\n  exclude:\n    - lib/generated_plugin_registrant.dart\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "ios",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.lock",
          "type": "blob",
          "size": 24.2734375,
          "content": "# Generated by pub\n# See https://dart.dev/tools/pub/glossary#lockfile\npackages:\n  _fe_analyzer_shared:\n    dependency: transitive\n    description:\n      name: _fe_analyzer_shared\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"31.0.0\"\n  analyzer:\n    dependency: transitive\n    description:\n      name: analyzer\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.8.0\"\n  archive:\n    dependency: transitive\n    description:\n      name: archive\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.2.2\"\n  args:\n    dependency: transitive\n    description:\n      name: args\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.3.0\"\n  async:\n    dependency: transitive\n    description:\n      name: async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.8.2\"\n  boolean_selector:\n    dependency: transitive\n    description:\n      name: boolean_selector\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  characters:\n    dependency: transitive\n    description:\n      name: characters\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0\"\n  charcode:\n    dependency: transitive\n    description:\n      name: charcode\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.1\"\n  cli_util:\n    dependency: transitive\n    description:\n      name: cli_util\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.3.5\"\n  clock:\n    dependency: transitive\n    description:\n      name: clock\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0\"\n  collection:\n    dependency: \"direct main\"\n    description:\n      name: collection\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.15.0\"\n  convert:\n    dependency: transitive\n    description:\n      name: convert\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.1\"\n  coverage:\n    dependency: transitive\n    description:\n      name: coverage\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.3\"\n  cross_file:\n    dependency: transitive\n    description:\n      name: cross_file\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.3.2\"\n  crypto:\n    dependency: transitive\n    description:\n      name: crypto\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.1\"\n  csslib:\n    dependency: transitive\n    description:\n      name: csslib\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.17.1\"\n  device_info_plus:\n    dependency: transitive\n    description:\n      name: device_info_plus\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.2.2\"\n  device_info_plus_linux:\n    dependency: transitive\n    description:\n      name: device_info_plus_linux\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.1\"\n  device_info_plus_macos:\n    dependency: transitive\n    description:\n      name: device_info_plus_macos\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.2.2\"\n  device_info_plus_platform_interface:\n    dependency: transitive\n    description:\n      name: device_info_plus_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.3.0+1\"\n  device_info_plus_web:\n    dependency: transitive\n    description:\n      name: device_info_plus_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  device_info_plus_windows:\n    dependency: transitive\n    description:\n      name: device_info_plus_windows\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.1\"\n  diff_match_patch:\n    dependency: transitive\n    description:\n      name: diff_match_patch\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.4.1\"\n  equatable:\n    dependency: \"direct main\"\n    description:\n      name: equatable\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.3\"\n  fake_async:\n    dependency: transitive\n    description:\n      name: fake_async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0\"\n  ffi:\n    dependency: transitive\n    description:\n      name: ffi\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.2\"\n  file:\n    dependency: transitive\n    description:\n      name: file\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.1.2\"\n  firebase_analytics:\n    dependency: \"direct main\"\n    description:\n      name: firebase_analytics\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"9.1.2\"\n  firebase_analytics_platform_interface:\n    dependency: transitive\n    description:\n      name: firebase_analytics_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.1.1\"\n  firebase_analytics_web:\n    dependency: transitive\n    description:\n      name: firebase_analytics_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.4.0+8\"\n  firebase_core:\n    dependency: \"direct main\"\n    description:\n      name: firebase_core\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.13.1\"\n  firebase_core_platform_interface:\n    dependency: transitive\n    description:\n      name: firebase_core_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.2.5\"\n  firebase_core_web:\n    dependency: transitive\n    description:\n      name: firebase_core_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.6.1\"\n  firebase_crashlytics:\n    dependency: \"direct main\"\n    description:\n      name: firebase_crashlytics\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.5.3\"\n  firebase_crashlytics_platform_interface:\n    dependency: transitive\n    description:\n      name: firebase_crashlytics_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.2.1\"\n  flutter:\n    dependency: \"direct main\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_colorpicker:\n    dependency: transitive\n    description:\n      name: flutter_colorpicker\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.3\"\n  flutter_hooks:\n    dependency: \"direct main\"\n    description:\n      name: flutter_hooks\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.18.2+1\"\n  flutter_inappwebview:\n    dependency: transitive\n    description:\n      name: flutter_inappwebview\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"5.3.2\"\n  flutter_keyboard_visibility:\n    dependency: transitive\n    description:\n      name: flutter_keyboard_visibility\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"5.2.0\"\n  flutter_keyboard_visibility_platform_interface:\n    dependency: transitive\n    description:\n      name: flutter_keyboard_visibility_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.0\"\n  flutter_keyboard_visibility_web:\n    dependency: transitive\n    description:\n      name: flutter_keyboard_visibility_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.0\"\n  flutter_launcher_icons:\n    dependency: \"direct dev\"\n    description:\n      name: flutter_launcher_icons\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.9.2\"\n  flutter_native_splash:\n    dependency: \"direct dev\"\n    description:\n      name: flutter_native_splash\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.3\"\n  flutter_plugin_android_lifecycle:\n    dependency: transitive\n    description:\n      name: flutter_plugin_android_lifecycle\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.5\"\n  flutter_quill:\n    dependency: \"direct main\"\n    description:\n      name: flutter_quill\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.0.10\"\n  flutter_riverpod:\n    dependency: \"direct main\"\n    description:\n      name: flutter_riverpod\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.3\"\n  flutter_test:\n    dependency: \"direct dev\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_web_plugins:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  frontend_server_client:\n    dependency: transitive\n    description:\n      name: frontend_server_client\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.2\"\n  gallery_saver:\n    dependency: transitive\n    description:\n      name: gallery_saver\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.3.2\"\n  gettext_parser:\n    dependency: transitive\n    description:\n      name: gettext_parser\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.2.0\"\n  glob:\n    dependency: transitive\n    description:\n      name: glob\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.2\"\n  hooks_riverpod:\n    dependency: \"direct main\"\n    description:\n      name: hooks_riverpod\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.3\"\n  html:\n    dependency: transitive\n    description:\n      name: html\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.15.0\"\n  http:\n    dependency: transitive\n    description:\n      name: http\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.13.4\"\n  http_multi_server:\n    dependency: transitive\n    description:\n      name: http_multi_server\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.2.0\"\n  http_parser:\n    dependency: transitive\n    description:\n      name: http_parser\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.0.0\"\n  i18n_extension:\n    dependency: transitive\n    description:\n      name: i18n_extension\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.2.0\"\n  image:\n    dependency: transitive\n    description:\n      name: image\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.1.3\"\n  image_picker:\n    dependency: transitive\n    description:\n      name: image_picker\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.8.4+11\"\n  image_picker_for_web:\n    dependency: transitive\n    description:\n      name: image_picker_for_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.6\"\n  image_picker_platform_interface:\n    dependency: transitive\n    description:\n      name: image_picker_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.4.4\"\n  intl:\n    dependency: transitive\n    description:\n      name: intl\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.17.0\"\n  io:\n    dependency: transitive\n    description:\n      name: io\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.3\"\n  js:\n    dependency: transitive\n    description:\n      name: js\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.6.3\"\n  layoutr:\n    dependency: \"direct main\"\n    description:\n      name: layoutr\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.0\"\n  logging:\n    dependency: transitive\n    description:\n      name: logging\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.2\"\n  matcher:\n    dependency: transitive\n    description:\n      name: matcher\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.12.11\"\n  material_color_utilities:\n    dependency: transitive\n    description:\n      name: material_color_utilities\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.1.3\"\n  meta:\n    dependency: \"direct main\"\n    description:\n      name: meta\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.7.0\"\n  mime:\n    dependency: transitive\n    description:\n      name: mime\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.1\"\n  mocktail:\n    dependency: \"direct dev\"\n    description:\n      name: mocktail\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.3.0\"\n  node_preamble:\n    dependency: transitive\n    description:\n      name: node_preamble\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.1\"\n  package_config:\n    dependency: transitive\n    description:\n      name: package_config\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.2\"\n  package_info_plus:\n    dependency: \"direct main\"\n    description:\n      name: package_info_plus\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.4.0\"\n  package_info_plus_linux:\n    dependency: transitive\n    description:\n      name: package_info_plus_linux\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.3\"\n  package_info_plus_macos:\n    dependency: transitive\n    description:\n      name: package_info_plus_macos\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.0\"\n  package_info_plus_platform_interface:\n    dependency: transitive\n    description:\n      name: package_info_plus_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.2\"\n  package_info_plus_web:\n    dependency: transitive\n    description:\n      name: package_info_plus_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.4\"\n  package_info_plus_windows:\n    dependency: transitive\n    description:\n      name: package_info_plus_windows\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.4\"\n  path:\n    dependency: \"direct main\"\n    description:\n      name: path\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.0\"\n  path_provider:\n    dependency: \"direct main\"\n    description:\n      name: path_provider\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.9\"\n  path_provider_android:\n    dependency: transitive\n    description:\n      name: path_provider_android\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.12\"\n  path_provider_ios:\n    dependency: transitive\n    description:\n      name: path_provider_ios\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.8\"\n  path_provider_linux:\n    dependency: transitive\n    description:\n      name: path_provider_linux\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.5\"\n  path_provider_macos:\n    dependency: transitive\n    description:\n      name: path_provider_macos\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.5\"\n  path_provider_platform_interface:\n    dependency: transitive\n    description:\n      name: path_provider_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.3\"\n  path_provider_windows:\n    dependency: transitive\n    description:\n      name: path_provider_windows\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.5\"\n  pedantic:\n    dependency: transitive\n    description:\n      name: pedantic\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.11.1\"\n  petitparser:\n    dependency: transitive\n    description:\n      name: petitparser\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.4.0\"\n  photo_view:\n    dependency: transitive\n    description:\n      name: photo_view\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.13.0\"\n  platform:\n    dependency: transitive\n    description:\n      name: platform\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.1.0\"\n  plugin_platform_interface:\n    dependency: transitive\n    description:\n      name: plugin_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.2\"\n  pool:\n    dependency: transitive\n    description:\n      name: pool\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.5.0\"\n  process:\n    dependency: transitive\n    description:\n      name: process\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.2.4\"\n  pub_semver:\n    dependency: transitive\n    description:\n      name: pub_semver\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.1\"\n  quiver:\n    dependency: transitive\n    description:\n      name: quiver\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.1+1\"\n  riverpod:\n    dependency: transitive\n    description:\n      name: riverpod\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.3\"\n  rxdart:\n    dependency: \"direct main\"\n    description:\n      name: rxdart\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.27.3\"\n  sembast:\n    dependency: \"direct main\"\n    description:\n      name: sembast\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.2.0\"\n  shelf:\n    dependency: transitive\n    description:\n      name: shelf\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0\"\n  shelf_packages_handler:\n    dependency: transitive\n    description:\n      name: shelf_packages_handler\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.0\"\n  shelf_static:\n    dependency: transitive\n    description:\n      name: shelf_static\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0\"\n  shelf_web_socket:\n    dependency: transitive\n    description:\n      name: shelf_web_socket\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.1\"\n  sky_engine:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.99\"\n  source_map_stack_trace:\n    dependency: transitive\n    description:\n      name: source_map_stack_trace\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  source_maps:\n    dependency: transitive\n    description:\n      name: source_maps\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.10.10\"\n  source_span:\n    dependency: transitive\n    description:\n      name: source_span\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.1\"\n  sprintf:\n    dependency: transitive\n    description:\n      name: sprintf\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.0.0\"\n  stack_trace:\n    dependency: transitive\n    description:\n      name: stack_trace\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.10.0\"\n  state_notifier:\n    dependency: transitive\n    description:\n      name: state_notifier\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.7.2+1\"\n  stream_channel:\n    dependency: transitive\n    description:\n      name: stream_channel\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  strict:\n    dependency: \"direct dev\"\n    description:\n      name: strict\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.4.0\"\n  string_scanner:\n    dependency: transitive\n    description:\n      name: string_scanner\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0\"\n  string_validator:\n    dependency: transitive\n    description:\n      name: string_validator\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.3.0\"\n  synchronized:\n    dependency: transitive\n    description:\n      name: synchronized\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.0\"\n  term_glyph:\n    dependency: transitive\n    description:\n      name: term_glyph\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0\"\n  test:\n    dependency: transitive\n    description:\n      name: test\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.19.5\"\n  test_api:\n    dependency: transitive\n    description:\n      name: test_api\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.4.8\"\n  test_core:\n    dependency: transitive\n    description:\n      name: test_core\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.4.9\"\n  tuple:\n    dependency: \"direct main\"\n    description:\n      name: tuple\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.0\"\n  typed_data:\n    dependency: transitive\n    description:\n      name: typed_data\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.0\"\n  universal_io:\n    dependency: transitive\n    description:\n      name: universal_io\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.4\"\n  url_launcher:\n    dependency: \"direct main\"\n    description:\n      name: url_launcher\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.0.20\"\n  url_launcher_android:\n    dependency: transitive\n    description:\n      name: url_launcher_android\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.0.15\"\n  url_launcher_ios:\n    dependency: transitive\n    description:\n      name: url_launcher_ios\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.0.15\"\n  url_launcher_linux:\n    dependency: transitive\n    description:\n      name: url_launcher_linux\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.0\"\n  url_launcher_macos:\n    dependency: transitive\n    description:\n      name: url_launcher_macos\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.0\"\n  url_launcher_platform_interface:\n    dependency: transitive\n    description:\n      name: url_launcher_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.5\"\n  url_launcher_web:\n    dependency: transitive\n    description:\n      name: url_launcher_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.9\"\n  url_launcher_windows:\n    dependency: transitive\n    description:\n      name: url_launcher_windows\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.0\"\n  uuid:\n    dependency: \"direct main\"\n    description:\n      name: uuid\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.6\"\n  vector_math:\n    dependency: transitive\n    description:\n      name: vector_math\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.1\"\n  video_player:\n    dependency: transitive\n    description:\n      name: video_player\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.3.0\"\n  video_player_android:\n    dependency: transitive\n    description:\n      name: video_player_android\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.3.1\"\n  video_player_avfoundation:\n    dependency: transitive\n    description:\n      name: video_player_avfoundation\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.3.1\"\n  video_player_platform_interface:\n    dependency: transitive\n    description:\n      name: video_player_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"5.1.0\"\n  video_player_web:\n    dependency: transitive\n    description:\n      name: video_player_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.7\"\n  vm_service:\n    dependency: transitive\n    description:\n      name: vm_service\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"7.5.0\"\n  watcher:\n    dependency: transitive\n    description:\n      name: watcher\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.1\"\n  web_socket_channel:\n    dependency: transitive\n    description:\n      name: web_socket_channel\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  webkit_inspection_protocol:\n    dependency: transitive\n    description:\n      name: webkit_inspection_protocol\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.0\"\n  win32:\n    dependency: transitive\n    description:\n      name: win32\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.4.2\"\n  xdg_directories:\n    dependency: transitive\n    description:\n      name: xdg_directories\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.2.0+1\"\n  xml:\n    dependency: transitive\n    description:\n      name: xml\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"5.3.1\"\n  yaml:\n    dependency: transitive\n    description:\n      name: yaml\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.1.0\"\n  youtube_player_flutter:\n    dependency: transitive\n    description:\n      name: youtube_player_flutter\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"8.0.0\"\nsdks:\n  dart: \">=2.16.1 <3.0.0\"\n  flutter: \">=2.10.3\"\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 2.67578125,
          "content": "name: memo\ndescription: An open-source, programming-oriented spaced repetition application.\n\n# The following line prevents the package from being accidentally published to\n# pub.dev using `pub publish`. This is preferred for private packages.\npublish_to: \"none\"\n\nversion: 0.3.5+0\n\nenvironment:\n  sdk: \">=2.16.0 <3.0.0\"\n  flutter: 2.10.3\n\ndependencies:\n  flutter:\n    sdk: flutter\n\n  ###\n  # Core\n  ###\n  meta: ^1.7.0\n  equatable: ^2.0.3\n  collection: ^1.15.0\n  tuple: ^2.0.0\n  path: ^1.8.0\n  path_provider: ^2.0.9\n  url_launcher: ^6.0.20\n  package_info_plus: ^6.0.0\n  firebase_core: ^2.27.1\n  firebase_crashlytics: ^3.4.19\n  firebase_analytics: ^10.8.10\n\n  ###\n  # Database & Storage\n  ###\n  sembast: ^3.2.0\n  uuid: ^4.3.3\n\n  ###\n  # State Management\n  ###\n  flutter_riverpod: ^2.5.1\n  flutter_hooks: ^0.20.5\n  hooks_riverpod: ^2.5.1\n  rxdart: ^0.27.3\n\n  ###\n  # UI\n  ###\n  layoutr: ^1.0.0\n\n  # Keep dependency locked, as we need it to be the exact same in `memo-editor`\n  flutter_quill: ^9.3.3\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n\n  ###\n  # Lint\n  ###\n  strict: ^2.0.0\n\n  ###\n  # Testing\n  ###\n  mocktail: ^1.0.3\n\n  ###\n  # Icon auto-generator\n  ###\n  flutter_launcher_icons: ^0.13.1\n\n  ###\n  # Splash Screen auto-generator\n  ###\n  flutter_native_splash: ^2.4.0\n\nflutter:\n  # The following line ensures that the Material Icons font is\n  # included with your application, so that you can use the icons in\n  # the material Icons class.\n  uses-material-design: true\n\n  assets:\n    - assets/\n    - assets/collections/\n    - assets/images/icons/\n    - assets/images/icons/editor/\n    - assets/images/illustrations/\n    - assets/licenses/\n\n  fonts:\n    - family: RobotoMono\n      fonts:\n        - asset: assets/fonts/RobotoMono-Thin.ttf\n          weight: 100\n        - asset: assets/fonts/RobotoMono-ExtraLight.ttf\n          weight: 200\n        - asset: assets/fonts/RobotoMono-Light.ttf\n          weight: 300\n        - asset: assets/fonts/RobotoMono-Regular.ttf\n          weight: 400\n        - asset: assets/fonts/RobotoMono-Medium.ttf\n          weight: 500\n        - asset: assets/fonts/RobotoMono-SemiBold.ttf\n          weight: 600\n        - asset: assets/fonts/RobotoMono-Bold.ttf\n          weight: 700\n\nflutter_icons:\n  image_path: \"assets/icon.png\"\n  android: true\n  ios: true\n\nflutter_native_splash:\n  image: assets/images/illustrations/logo.png\n  color: 1F1D28\n  # `flutter_native_splash` uses a less optimal method to create the splash screen that delays images placed in the\n  # `LaunchScreen` for a few seconds. We've manually fixed this issue by placing `logo.png` as an iOS resource in the\n  # PBX file.\n  # More information can be found at: https://developer.apple.com/forums/thread/19759\n  ios: false\n  web: false\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}