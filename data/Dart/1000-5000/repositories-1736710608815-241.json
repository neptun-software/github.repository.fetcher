{
  "metadata": {
    "timestamp": 1736710608815,
    "page": 241,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xvrh/lottie-flutter",
      "stars": 1195,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0830078125,
          "content": ".*\n_*\n\n!.gitignore\n!.github\n!.pubignore\n\n**/failures/*.png\n\n*.iml\n**/doc/api/\nbuild/\n"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: 27321ebbad34b0a3fafe99fac037102196d655ff\n  channel: stable\n\nproject_type: package\n"
        },
        {
          "name": ".pubignore",
          "type": "blob",
          "size": 0.1650390625,
          "content": ".dart_tool/\n.packages\nbuild/\ndoc/api/\n*.iml\n_*\n.*\n**/failures/*.png\ntest/golden/\ntest/goldens/\nexample/assets/\nexample/android/\nexample/ios/\nexample/macos/\nexample/web/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 11.1015625,
          "content": "## 3.3.1\n- Update `package:archive` to `>=4.0.0` constraint\n\n## 3.3.0\n- Requires Flutter 3.27 and fix lints.\n- Add conditional imports to prevent importing `dart:io` on Web targets\n\n## 3.2.0\n- Apply Blend mode at layer level\n\n## 3.1.3\n- Update `package:archive` dependency constraints\n\n## 3.1.2\n- Fixes for some animations generated by lottiefiles.com\n\n## 3.1.1\n- Fix rounding-off error on progress calculation\n- Allow missing end values for integer animations\n\n## 3.1.0\n- Use `package:http` for `Lottie.network`. This allows to drop dependency on `dart:html` and be compatible with `wasm`.\n- Fix new lints\n\n## 3.0.0\n- Add `renderCache` parameter.\n\n```dart\nLottie.asset('assets/complex_animation.json',\n  renderCache: RenderCache.raster,\n)\n```\n\nOpt-in to a special render mode where the frames of the animation are lazily rendered and kept in a cache.  \nSubsequent runs of the animation are cheaper to render.\n\nThere are 2 kinds of caches:\n\n**RenderCache.raster**: keep the frame rasterized in the cache (as [dart:ui.Image]).\nSubsequent runs of the animation are very cheap for both the CPU and GPU but it takes\na lot of memory.  \n**RenderCache.drawingCommands**: keep the frame as a list of graphical operations ([dart:ui.Picture]).\nSubsequent runs of the animation are cheaper for the CPU but not for the GPU.\n\n- Allow to load Telegram Stickers (.tgs)\n\n```dart\nLottie.asset(\n  'sticker.tgs',\n  decoder: LottieComposition.decodeGZip,\n)\n```\n\n- Expose a hook to customize how to decode zip archives. This is useful for dotlottie archives (.lottie) when we want\n  to specify a specific .json file inside the archive\n\n```dart\nLottie.asset(\n  'animation.lottie',\n  decoder: customDecoder,\n);\n\nFuture<LottieComposition?> customDecoder(List<int> bytes) {\n  return LottieComposition.decodeZip(bytes, filePicker: (files) {\n    return files.firstWhere((f) => f.name == 'animations/cat.json');\n  });\n}\n```\n\n- Add `backgroundLoading` parameter to `Lottie.asset|network|file|memory`.  \n  If `backgroundLoading` is true, the animation will be loaded in a background isolate.  \n  This is useful for large animations that can take a long time to parse and block the UI work.\n\n- Remove the name property from `LottieComposition`\n\n- `imageProviderFactory` is not used in .zip file by default anymore.\n  To restore the old behaviour, use:\n```dart\nFuture<LottieComposition?> decoder(List<int> bytes) {\n  return LottieComposition.decodeZip(bytes, imageProviderFactory: imageProviderFactory);\n}\n\nLottie.asset('anim.json', decoder: decoder)\n```\n\n- Disable gradient cache optimization when `ValueDelegate.gradientColor` is used\n- Use `DefaultAssetBundle.of` in `AssetLottie` before fallback to `rootBundle`\n- Add `BuildContext` optional parameter in `LottieProvider.load`\n- Fixed varying opacity stops across keyframes in the same gradient\n- Fixed rounded corners for non-closed curves\n- Implement auto-orient\n- Add support for layer blend mode\n- Require Flutter 3.16\n\n## 3.0.0-alpha.4\n\n*See the latest 3.0.0 release*\n\n## 3.0.0-alpha.3\n\n*See the latest 3.0.0 release*\n\n## 3.0.0-alpha.2\n\n*See the latest 3.0.0 release*\n\n## 3.0.0-alpha.1\n\n*See the latest 3.0.0 release*\n\n## 2.7.0\n- Support loading Fonts from a zip file\n- Fix a bug in Text with strokes\n- Fix gradient interpolation for opacity stops beyond the last color stop\n- Add color value callback to solid layer\n\n## 2.6.0\n- Accept `List<int>` instead of `Uint8List` in `LottieComposition.fromBytes`\n- Stroke line cap defaults to butt instead of square\n\n## 2.5.0\n- Add layer-level opacity option to LottieOptions\n- Fix TextLayer opacity calculation\n\n## 2.4.0\n- Require minimum Dart 3.0.0 and Flutter 3.10.0\n- Fix a parsing bug when the name property in RoundedCorner was null\n\n## 2.3.2\n- Fix a bug when running on the web due to [bitwise operations difference](https://dart.dev/guides/language/numbers#bitwise-operations).\n\n## 2.3.1\n- Fix an assertion for null `ShapeTrimPathType.type`.\n\n## 2.3.0\n- Fixed a failed assertion (`dirty: is not true`) when calling `setState` inside `onLoaded` callback.\n- Update point text y offset\n- Makes static compositions not animate by default\n\n## 2.2.0\nApply the latest fixes from Lottie-Android:\n\n- Overhaul text layout\n- Fix rounded corners modifying already rounded corners\n- Support box position in Document Data\n- Allow interpolating between gradients with different opacity stops\n- Add support for gradient opacity stops\n\n## 2.1.0\n- Improve the cache to ensure that there is not an empty frame each time we load an animation.  \n  The method `AssetLottie('anim.json').load()` returns a `SynchronousFuture` if it has been loaded previously.\n- Expose the `LottieCache` singleton.\n  It allows to change the cache behaviour and clear the entries.\n\n```dart\nvoid main() {\n  Lottie.cache.maximumSize = 10;\n  Lottie.cache.clear();\n  Lottie.cache.evict(NetworkLottie('https://lottie.com/anim.json'));\n}\n```\n\n## 2.0.0\n- **Breaking change**: the lottie widget will be smaller if it relies on the intrinsic size of the composition. \n\nPreviously the lottie parser was automatically multiplying the size of the composition by `window.devicePixelRatio`.\nThis was incorrect as it results in a widget of a different size depending on the pixel ratio of the monitor. \nFurthermore, it created some bugs when the property `window.devicePixelRatio` was not available immediately at the start\nof the app (on Android release builds). \n\nThe code can be adapted to specify explicitly the size of the animation with `width`, `height` and `fit` properties.\n\n```dart\nScaffold(\n  body: Center(\n    child: Lottie.asset(\n      'assets/LottieLogo1.json',\n      height: 800,\n      fit: BoxFit.contain,\n    ),\n  ),\n);\n```\n\n## 1.4.3\n- Fixed some lints with Flutter 3.3. \n\n## 1.4.2\n- Use `FilterQuality.low` as default to draw image layers.\n\n## 1.4.1\n- Allow `AlignmentGeometry` for `alignment`.\n\n## 1.4.0\n- Added `filterQuality` property to control the performance vs quality trade-off to use when drawing images\n\n## 1.3.0\n- Added support for rounded corners on shapes and rects\n- Add support for text in dynamic properties (`ValueDelegate`)\n\nExample:\n\n```dart\nLottie.asset(\n  'assets/DynamicText.json',\n  delegates: LottieDelegates(values: [\n    ValueDelegate.text(\n      ['Text layer'], // The path to the text element to change\n      value: 'The new text',\n    ),\n  ]),\n)\n```\n\n- Improve stroke with offset\n- Add support for reversed polystar paths\n- Enforce order of operations to avoid rounding errors\n\n## 1.2.2\n- Internal maintenance: fix lints for Flutter 2.10\n\n## 1.2.1\n- Fix: Revert Cubic to `PathInterpolator.cubic`\n\n## 1.2.0\n- Add support for gaussian blurs.\n\nExample to blur some elements dynamically:\n  \n```dart\nLottie.asset(\n  'assets/AndroidWave.json',\n  delegates: LottieDelegates(values: [\n    ValueDelegate.blurRadius(\n      ['**'], // The path to the element to blur\n      value: 20,\n    ),\n  ]),\n)\n```\n\n- Add support for drop shadows.\n\nExample to add a shadow dynamically:\n```dart\nLottie.asset(\n  'assets/animation.json',\n  delegates: LottieDelegates(values: [\n    ValueDelegate.dropShadow(\n      ['**'], // The path to the elements with shadow\n      value: const DropShadow(\n        color: Colors.blue,\n        direction: 140,\n        distance: 60,\n        radius: 10,\n      ),\n    ),\n  ]),\n)\n```\n\n## 1.1.0\n- Add `errorBuilder` callback to provide an alternative widget in case an error occurs during loading.\n```dart\nLottie.network(\n  'https://example.does.not.exist/lottie.json',\n  errorBuilder: (context, exception, stackTrace) {\n    return const Text('ðŸ˜¢');\n  },\n);\n```\n\n- Add `onWarning` to be notified when a warning occurs during the animation parsing or painting.\n  Previously the warnings where written in an internal `logger`.\n  ```dart\n  Lottie.asset('animation.json'\n    onWarning: (warning) {\n      _logger.info(warning);\n    },\n  );\n  ```\n- Various bug fixes\n\n## 1.0.1\n- Implement `RenderBox.computeDryLayout`\n\n## 1.0.0\n- Migrate to null safety\n- Fix some rendering bugs\n- Add an image delegate to dynamically change images\n- Allow to use an imageProviderFactory with a zip file\n\n## 0.7.1\n- Fix a crash for some lottie file with empty paths.\n\n## 0.7.0+1\n- Fix Flutter Web compilation error\n\n## 0.7.0\n- Performance improvement for complex animations.\n\n## 0.6.0\n- Runs the animation at the frame rate specified in the json file (ie. An animation encoded with a 20 FPS will only\n  be paint 20 times per seconds even though the AnimationController will invalidate the widget 60 times per seconds).  \n  A new property `frameRate` allows to opt-out this behavior and have the widget to repaint at the device frame rate \n   (`FrameRate.max`).\n- Automatically add a `RepaintBoundary` around the widget. Since `Lottie` animations are generally complex to paint, a\n   `RepaintBoundary` will separate the animation with the rest of the app and improve performance. A new property `addRepaintBoundary`\n   allows to opt-out this behavior.\n- Fix a bug where we would call `markNeedPaint` when the animation was not changing. This removes unnecessary paints in\n  animations with static periods.\n\n## 0.5.1\n- Remove direct dependencies on dart:io to support Flutter Web\n\n## 0.5.0\n- Support loading animation from network in a web app\n- Fix a couple of bugs with the web dev compiler\n\n## 0.4.1\n- Support color value stored as RGB, not RGBA \n\n## 0.4.0+1\n- Support latest version of the `characters` package\n\n## 0.4.0\n- Disable \"Merge paths\" by default and provide an option to enable them.  \nThis is the same behavior as in Lottie-android.  \nMerge paths currently don't work if the the operand shape is entirely contained within the\nfirst shape. If you need to cut out one shape from another shape, use an even-odd fill type\ninstead of using merge paths.\n\nMerge paths can be enabled with:\n```dart\nLottie.asset('file.json', options: LottieOptions(enableMergePaths: true));\n```\n\n\n## 0.3.6\n- Export the `Marker` class\n\n## 0.3.5\n- Fix a bug with a wrongly clipped rectangle. \n\n## 0.3.4\n- Fix a bug with dashed path\n\n## 0.3.3\n- Fix a bug with rounded rectangle shape\n\n## 0.3.2\n- Fix a bug with \"repeater\" content\n\n## 0.3.1\n- Support dashed path\n\n## 0.3.0+1\n- Specify a version range for the dependency on `characters`.\n\n## 0.3.0\n- Add `LottieDelegates` a group of options to customize the lottie animation at runtime.\n  ie: Dynamically modify color, position, size, text... of every elements of the animation.\n- Correctly display Linear and Radial Gradients\n- Integrate latest changes from Lottie-android\n\n## 0.2.2\n- Add a [repeat] parameter to specify if the automatic animation should loop.\n- Add the [animate], [reverse], [repeat] properties on `LottieBuilder`\n- Fix bug with `onLoaded` callback when the `LottieProvider` is changed\n\n## 0.2.1\n- Fix a big bug in the path transformation code. A lot more animations look correct now.\n\n## 0.2.0+1\n- Improve readme\n- (internal) Add golden tests\n\n## 0.2.0\n- Support loading the animation and its images from a zip file\n- Breaking: `LottieComposition.fromBytes` and `fromByteData` are now asynchronous.\n\n## 0.1.4\n- Support images in animation\n- Basic support for text in animation (work in progress)\n\n## 0.1.3\n- Support Polystar shape\n- Reorganize examples.\n\n## 0.1.2\n- Implement `Lottie.network`, `Lottie.file` and `Lottie.memory`\n\n## 0.1.1\n- Fix analysis lints\n\n## 0.1.0\n- Initial conversion of [lottie-android](https://github.com/airbnb/lottie-android) to Dart/Flutter\n"
        },
        {
          "name": "FUNDING.yml",
          "type": "blob",
          "size": 0.0498046875,
          "content": "github: xvrh\ncustom: https://buymeacoffee.com/xvrh\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.439453125,
          "content": "# Lottie for Flutter\n\n[![](https://github.com/xvrh/lottie-flutter/workflows/Lottie%20Flutter/badge.svg?branch=master)](https://github.com/xvrh/lottie-flutter)\n[![pub package](https://img.shields.io/pub/v/lottie.svg)](https://pub.dev/packages/lottie)\n\nLottie is a mobile library for Android and iOS that parses [Adobe After Effects](https://www.adobe.com/products/aftereffects.html) \nanimations exported as json with [Bodymovin](https://github.com/airbnb/lottie-web) and renders them natively on mobile!\n\nThis repository is an unofficial conversion of the [Lottie-android](https://github.com/airbnb/lottie-android) library in pure Dart. \n\nIt works on Android, iOS, macOS, linux, windows and web.\n\n<a href=\"https://www.buymeacoffee.com/xvrh\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png\" alt=\"Buy Me A Coffee\" height=\"60\" width=\"217\"></a>\n\n## Usage\n\n### Simple animation\nThis example shows how to display a Lottie animation in the simplest way.  \nThe `Lottie` widget will load the json file and run the animation indefinitely.\n\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:lottie/lottie.dart';\n\nvoid main() => runApp(const MyApp());\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        body: ListView(\n          children: [\n            // Load a Lottie file from your assets\n            Lottie.asset('assets/LottieLogo1.json'),\n\n            // Load a Lottie file from a remote url\n            Lottie.network(\n                'https://raw.githubusercontent.com/xvrh/lottie-flutter/master/example/assets/Mobilo/A.json'),\n\n            // Load an animation and its images from a zip file\n            Lottie.asset('assets/lottiefiles/angel.zip'),\n          ],\n        ),\n      ),\n    );\n  }\n}\n```\n\n### Specify a custom `AnimationController`\nThis example shows how to take full control over the animation by providing your own `AnimationController`.\n\nWith a custom `AnimationController` you have a rich API to play the animation in various ways: start and stop the animation when you want,\n play forward or backward, loop between specifics points...  \n\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:lottie/lottie.dart';\n\nvoid main() => runApp(const MyApp());\n\nclass MyApp extends StatefulWidget {\n  const MyApp({super.key});\n\n  @override\n  State<MyApp> createState() => _MyAppState();\n}\n\nclass _MyAppState extends State<MyApp> with TickerProviderStateMixin {\n  late final AnimationController _controller;\n\n  @override\n  void initState() {\n    super.initState();\n\n    _controller = AnimationController(vsync: this);\n  }\n\n  @override\n  void dispose() {\n    _controller.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        body: ListView(\n          children: [\n            Lottie.asset(\n              'assets/LottieLogo1.json',\n              controller: _controller,\n              onLoaded: (composition) {\n                // Configure the AnimationController with the duration of the\n                // Lottie file and start the animation.\n                _controller\n                  ..duration = composition.duration\n                  ..forward();\n              },\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n```\n\n[See this file](https://github.com/xvrh/lottie-flutter/blob/master/example/lib/examples/animation_full_control.dart) for a more comprehensive example.\n\n### Control the size of the Widget\nThe `Lottie` widget takes the same arguments and have the same behavior as the `Image` widget\nin term of controlling its size.\n```dart\nLottie.asset(\n  'assets/LottieLogo1.json',\n  width: 200,\n  height: 200,\n  fit: BoxFit.fill,\n)\n```\n\n`width` and `height` are optionals and fallback on the size imposed by the parent or on the intrinsic size of the lottie \nanimation.\n\n### Custom loading\nThe `Lottie` widget has several convenient constructors (`Lottie.asset`, `Lottie.network`, `Lottie.memory`) to load, parse and\ncache automatically the json file.\n\nSometime you may prefer to have full control over the loading of the file. Use `AssetLottie` (or `NetworkLottie`, `MemoryLottie`) to load a lottie composition from a json file.\n\nThis example shows how to load and parse a Lottie composition from a json file.  \n\n```dart\nclass MyWidget extends StatefulWidget {\n  const MyWidget({super.key});\n\n  @override\n  State<MyWidget> createState() => _MyWidgetState();\n}\n\nclass _MyWidgetState extends State<MyWidget> {\n  late final Future<LottieComposition> _composition;\n\n  @override\n  void initState() {\n    super.initState();\n\n    _composition = AssetLottie('assets/LottieLogo1.json').load();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return FutureBuilder<LottieComposition>(\n      future: _composition,\n      builder: (context, snapshot) {\n        var composition = snapshot.data;\n        if (composition != null) {\n          return Lottie(composition: composition);\n        } else {\n          return const Center(child: CircularProgressIndicator());\n        }\n      },\n    );\n  }\n}\n```\n\n### Custom drawing\nThis example goes low level and shows you how to draw a `LottieComposition` on a custom Canvas at a specific frame in \na specific position and size.\n\n````dart\nclass CustomDrawer extends StatelessWidget {\n  final LottieComposition composition;\n\n  const CustomDrawer(this.composition, {super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return CustomPaint(\n      painter: _Painter(composition),\n      size: const Size(400, 400),\n    );\n  }\n}\n\nclass _Painter extends CustomPainter {\n  final LottieDrawable drawable;\n\n  _Painter(LottieComposition composition)\n      : drawable = LottieDrawable(composition);\n\n  @override\n  void paint(Canvas canvas, Size size) {\n    var frameCount = 40;\n    var columns = 10;\n    for (var i = 0; i < frameCount; i++) {\n      var destRect = Offset(i % columns * 50.0, i ~/ 10 * 80.0) & (size / 5);\n      drawable\n        ..setProgress(i / frameCount)\n        ..draw(canvas, destRect);\n    }\n  }\n\n  @override\n  bool shouldRepaint(CustomPainter oldDelegate) {\n    return true;\n  }\n}\n````\n\n### Modify properties at runtime\nThis example shows how to modify some properties of the animation at runtime. Here we change the text,\nthe color, the opacity and the position of some layers.\nFor each `ValueDelegate` we can either provide a static `value` or a `callback` to compute a value for a each frame.\n\n````dart\nclass _Animation extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Lottie.asset(\n      'assets/Tests/Shapes.json',\n      delegates: LottieDelegates(\n        text: (initialText) => '**$initialText**',\n        values: [\n          ValueDelegate.color(\n            const ['Shape Layer 1', 'Rectangle', 'Fill 1'],\n            value: Colors.red,\n          ),\n          ValueDelegate.opacity(\n            const ['Shape Layer 1', 'Rectangle'],\n            callback: (frameInfo) => (frameInfo.overallProgress * 100).round(),\n          ),\n          ValueDelegate.position(\n            const ['Shape Layer 1', 'Rectangle', '**'],\n            relative: const Offset(100, 200),\n          ),\n        ],\n      ),\n    );\n  }\n}\n````\n\n### Frame rate\nBy default, the animation is played at the frame rate exported by AfterEffect.\nThis is the most power-friendly as generally the animation is exported at 10 or 30 FPS compared to the phone's 60 or 120 FPS.\nIf the result is not good, you can change the frame rate\n\n````dart\nLottie.asset('anim.json',\n  // Use the device frame rate (up to 120FPS)\n  frameRate: FrameRate.max,\n  // Use the exported frame rate (default)\n  frameRate: FrameRate.composition,\n  // Specific frame rate\n  frameRate: FrameRate(10),\n)\n````\n\n### Telegram Stickers (.tgs) and DotLottie (.lottie)\nTGS file can be loaded by providing a special decoder\n\n````dart\nWidget build(BuildContext context) {\n  return ListView(\n    children: [\n      Lottie.network(\n        'https://telegram.org/file/464001484/1/bzi7gr7XRGU.10147/815df2ef527132dd23',\n        decoder: LottieComposition.decodeGZip,\n      ),\n      Lottie.asset(\n        'assets/LightningBug_file.tgs',\n        decoder: LottieComposition.decodeGZip,\n      ),\n    ],\n  );\n}\n````\n\nYou can select the correct .json file from a dotlottie (.lottie) archive by providing a custom decoder\n\n````dart\nclass Example extends StatelessWidget {\n  const Example({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return Lottie.asset(\n      'assets/cat.lottie',\n      decoder: customDecoder,\n    );\n  }\n}\n\nFuture<LottieComposition?> customDecoder(List<int> bytes) {\n  return LottieComposition.decodeZip(bytes, filePicker: (files) {\n    return files.firstWhereOrNull(\n        (f) => f.name.startsWith('animations/') && f.name.endsWith('.json'));\n  });\n}\n````\n\n## Performance or excessive CPU/GPU usage\n\nVersion `v3.0` introduced the `renderCache` parameter to help reduce an excessive energy consumption.\n\nIn this mode, the frames of the animation are rendered lazily in an offscreen cache. Subsequent runs of the animation \nare cheaper to render. It helps reduce the power usage of the application at the cost of an increased memory usage.\n\n## Limitations\nThis port supports the same [feature set as Lottie Android](https://airbnb.io/lottie/#/supported-features).\n\n## Flutter Web\nRun the app with `flutter run -d chrome --web-renderer canvaskit`\n\nSee a preview here: https://xvrh.github.io/lottie-flutter-web/\n\n## More examples\nSee the `example` folder for more code samples of the various possibilities.\n"
        },
        {
          "name": "README.template.md",
          "type": "blob",
          "size": 4.75390625,
          "content": "# Lottie for Flutter\n\n[![](https://github.com/xvrh/lottie-flutter/workflows/Lottie%20Flutter/badge.svg?branch=master)](https://github.com/xvrh/lottie-flutter)\n[![pub package](https://img.shields.io/pub/v/lottie.svg)](https://pub.dev/packages/lottie)\n\nLottie is a mobile library for Android and iOS that parses [Adobe After Effects](https://www.adobe.com/products/aftereffects.html) \nanimations exported as json with [Bodymovin](https://github.com/airbnb/lottie-web) and renders them natively on mobile!\n\nThis repository is an unofficial conversion of the [Lottie-android](https://github.com/airbnb/lottie-android) library in pure Dart. \n\nIt works on Android, iOS, macOS, linux, windows and web.\n\n<a href=\"https://www.buymeacoffee.com/xvrh\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png\" alt=\"Buy Me A Coffee\" height=\"60\" width=\"217\"></a>\n\n## Usage\n\n### Simple animation\nThis example shows how to display a Lottie animation in the simplest way.  \nThe `Lottie` widget will load the json file and run the animation indefinitely.\n\n```dart\nimport 'example/lib/main.dart';\n```\n\n### Specify a custom `AnimationController`\nThis example shows how to take full control over the animation by providing your own `AnimationController`.\n\nWith a custom `AnimationController` you have a rich API to play the animation in various ways: start and stop the animation when you want,\n play forward or backward, loop between specifics points...  \n\n```dart\nimport 'example/lib/examples/animation_controller.dart';\n```\n\n[See this file](https://github.com/xvrh/lottie-flutter/blob/master/example/lib/examples/animation_full_control.dart) for a more comprehensive example.\n\n### Control the size of the Widget\nThe `Lottie` widget takes the same arguments and have the same behavior as the `Image` widget\nin term of controlling its size.\n```dart\nLottie.asset(\n  'assets/LottieLogo1.json',\n  width: 200,\n  height: 200,\n  fit: BoxFit.fill,\n)\n```\n\n`width` and `height` are optionals and fallback on the size imposed by the parent or on the intrinsic size of the lottie \nanimation.\n\n### Custom loading\nThe `Lottie` widget has several convenient constructors (`Lottie.asset`, `Lottie.network`, `Lottie.memory`) to load, parse and\ncache automatically the json file.\n\nSometime you may prefer to have full control over the loading of the file. Use `AssetLottie` (or `NetworkLottie`, `MemoryLottie`) to load a lottie composition from a json file.\n\nThis example shows how to load and parse a Lottie composition from a json file.  \n\n```dart\nimport 'example/lib/examples/custom_load.dart#example';\n```\n\n### Custom drawing\nThis example goes low level and shows you how to draw a `LottieComposition` on a custom Canvas at a specific frame in \na specific position and size.\n\n````dart\nimport 'example/lib/examples/custom_draw.dart#example';\n````\n\n### Modify properties at runtime\nThis example shows how to modify some properties of the animation at runtime. Here we change the text,\nthe color, the opacity and the position of some layers.\nFor each `ValueDelegate` we can either provide a static `value` or a `callback` to compute a value for a each frame.\n\n````dart\nimport 'example/lib/examples/simple_dynamic_properties.dart#example';\n````\n\n### Frame rate\nBy default, the animation is played at the frame rate exported by AfterEffect.\nThis is the most power-friendly as generally the animation is exported at 10 or 30 FPS compared to the phone's 60 or 120 FPS.\nIf the result is not good, you can change the frame rate\n\n````dart\nLottie.asset('anim.json',\n  // Use the device frame rate (up to 120FPS)\n  frameRate: FrameRate.max,\n  // Use the exported frame rate (default)\n  frameRate: FrameRate.composition,\n  // Specific frame rate\n  frameRate: FrameRate(10),\n)\n````\n\n### Telegram Stickers (.tgs) and DotLottie (.lottie)\nTGS file can be loaded by providing a special decoder\n\n````dart\nimport 'example/lib/examples/telegram_stickers.dart#example';\n````\n\nYou can select the correct .json file from a dotlottie (.lottie) archive by providing a custom decoder\n\n````dart\nimport 'example/lib/examples/dotlottie.dart#example';\n````\n\n## Performance or excessive CPU/GPU usage\n\nVersion `v3.0` introduced the `renderCache` parameter to help reduce an excessive energy consumption.\n\nIn this mode, the frames of the animation are rendered lazily in an offscreen cache. Subsequent runs of the animation \nare cheaper to render. It helps reduce the power usage of the application at the cost of an increased memory usage.\n\n## Limitations\nThis port supports the same [feature set as Lottie Android](https://airbnb.io/lottie/#/supported-features).\n\n## Flutter Web\nRun the app with `flutter run -d chrome --web-renderer canvaskit`\n\nSee a preview here: https://xvrh.github.io/lottie-flutter-web/\n\n## More examples\nSee the `example` folder for more code samples of the various possibilities.\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 1.8759765625,
          "content": "include: package:flutter_lints/flutter.yaml\nanalyzer:\n  language:\n    strict-casts: true\n    strict-inference: true\nlinter:\n  rules:\n    avoid_print: false\n\n    always_declare_return_types: true\n    avoid_bool_literals_in_conditional_expressions: true\n    avoid_double_and_int_checks: true\n    avoid_dynamic_calls: true\n    avoid_equals_and_hash_code_on_mutable_classes: true\n    avoid_escaping_inner_quotes: true\n    avoid_final_parameters: true\n    avoid_function_literals_in_foreach_calls: true\n    avoid_js_rounded_ints: true\n    avoid_positional_boolean_parameters: true\n    avoid_redundant_argument_values: true\n    avoid_setters_without_getters: true\n    avoid_type_to_string: true\n    avoid_unused_constructor_parameters: true\n    cancel_subscriptions: true\n    cast_nullable_to_non_nullable: true\n    close_sinks: true\n    collection_methods_unrelated_type: true\n    combinators_ordering: true\n    conditional_uri_does_not_exist: true\n    dangling_library_doc_comments: true\n    deprecated_consistency: true\n    implicit_reopen: true\n    invalid_case_patterns: true\n    leading_newlines_in_multiline_strings: true\n    library_annotations: true\n    no_adjacent_strings_in_list: true\n    no_default_cases: true\n    noop_primitive_operations: true\n    omit_local_variable_types: true\n    only_throw_errors: true\n    prefer_if_elements_to_conditional_expressions: true\n    prefer_relative_imports: true\n    prefer_single_quotes: true\n    sort_child_properties_last: true\n    sort_pub_dependencies: true\n    test_types_in_equals: true\n    unawaited_futures: true\n    unnecessary_breaks: true\n    unnecessary_library_directive: true\n    unnecessary_parenthesis: true\n    unnecessary_statements: true\n    unnecessary_to_list_in_spreads: true\n    unsafe_html: true\n    use_enums: true\n    use_if_null_to_convert_nulls_to_bools: true\n    use_named_constants: true\n    use_raw_strings: true\n    use_super_parameters: true\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.lock",
          "type": "blob",
          "size": 10.1953125,
          "content": "# Generated by pub\n# See https://dart.dev/tools/pub/glossary#lockfile\npackages:\n  _fe_analyzer_shared:\n    dependency: transitive\n    description:\n      name: _fe_analyzer_shared\n      sha256: \"88399e291da5f7e889359681a8f64b18c5123e03576b01f32a6a276611e511c3\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"78.0.0\"\n  _macros:\n    dependency: transitive\n    description: dart\n    source: sdk\n    version: \"0.3.3\"\n  analyzer:\n    dependency: \"direct dev\"\n    description:\n      name: analyzer\n      sha256: \"62899ef43d0b962b056ed2ebac6b47ec76ffd003d5f7c4e4dc870afe63188e33\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"7.1.0\"\n  archive:\n    dependency: \"direct main\"\n    description:\n      name: archive\n      sha256: \"6199c74e3db4fbfbd04f66d739e72fe11c8a8957d5f219f1f4482dbde6420b5a\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.0.2\"\n  args:\n    dependency: transitive\n    description:\n      name: args\n      sha256: bf9f5caeea8d8fe6721a9c358dd8a5c1947b27f1cfaa18b39c301273594919e6\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.6.0\"\n  async:\n    dependency: transitive\n    description:\n      name: async\n      sha256: \"947bfcf187f74dbc5e146c9eb9c0f10c9f8b30743e341481c1e2ed3ecc18c20c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.11.0\"\n  boolean_selector:\n    dependency: transitive\n    description:\n      name: boolean_selector\n      sha256: \"6cfb5af12253eaf2b368f07bacc5a80d1301a071c73360d746b7f2e32d762c66\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.1\"\n  characters:\n    dependency: transitive\n    description:\n      name: characters\n      sha256: \"04a925763edad70e8443c99234dc3328f442e811f1d8fd1a72f1c8ad0f69a605\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.0\"\n  clock:\n    dependency: transitive\n    description:\n      name: clock\n      sha256: cb6d7f03e1de671e34607e909a7213e31d7752be4fb66a86d29fe1eb14bfb5cf\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.1\"\n  collection:\n    dependency: transitive\n    description:\n      name: collection\n      sha256: a1ace0a119f20aabc852d165077c036cd864315bd99b7eaa10a60100341941bf\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.19.0\"\n  convert:\n    dependency: transitive\n    description:\n      name: convert\n      sha256: b30acd5944035672bc15c6b7a8b47d773e41e2f17de064350988c5d02adb1c68\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.1.2\"\n  crypto:\n    dependency: transitive\n    description:\n      name: crypto\n      sha256: \"1e445881f28f22d6140f181e07737b22f1e099a5e1ff94b0af2f9e4a463f4855\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.6\"\n  dart_style:\n    dependency: \"direct dev\"\n    description:\n      name: dart_style\n      sha256: \"27eb0ae77836989a3bc541ce55595e8ceee0992807f14511552a898ddd0d88ac\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.1\"\n  fake_async:\n    dependency: transitive\n    description:\n      name: fake_async\n      sha256: \"511392330127add0b769b75a987850d136345d9227c6b94c96a04cf4a391bf78\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.1\"\n  ffi:\n    dependency: transitive\n    description:\n      name: ffi\n      sha256: \"16ed7b077ef01ad6170a3d0c57caa4a112a38d7a2ed5602e0aca9ca6f3d98da6\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.3\"\n  file:\n    dependency: transitive\n    description:\n      name: file\n      sha256: a3b4f84adafef897088c160faf7dfffb7696046cb13ae90b508c2cbc95d3b8d4\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"7.0.1\"\n  flutter:\n    dependency: \"direct main\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_lints:\n    dependency: \"direct dev\"\n    description:\n      name: flutter_lints\n      sha256: \"5398f14efa795ffb7a33e9b6a08798b26a180edac4ad7db3f231e40f82ce11e1\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"5.0.0\"\n  flutter_test:\n    dependency: \"direct dev\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  glob:\n    dependency: transitive\n    description:\n      name: glob\n      sha256: \"0e7014b3b7d4dac1ca4d6114f82bf1782ee86745b9b42a92c9289c23d8a0ab63\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.2\"\n  http:\n    dependency: \"direct main\"\n    description:\n      name: http\n      sha256: b9c29a161230ee03d3ccf545097fccd9b87a5264228c5d348202e0f0c28f9010\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.2.2\"\n  http_parser:\n    dependency: transitive\n    description:\n      name: http_parser\n      sha256: \"178d74305e7866013777bab2c3d8726205dc5a4dd935297175b19a23a2e66571\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.1.2\"\n  leak_tracker:\n    dependency: transitive\n    description:\n      name: leak_tracker\n      sha256: \"7bb2830ebd849694d1ec25bf1f44582d6ac531a57a365a803a6034ff751d2d06\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"10.0.7\"\n  leak_tracker_flutter_testing:\n    dependency: transitive\n    description:\n      name: leak_tracker_flutter_testing\n      sha256: \"9491a714cca3667b60b5c420da8217e6de0d1ba7a5ec322fab01758f6998f379\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.8\"\n  leak_tracker_testing:\n    dependency: transitive\n    description:\n      name: leak_tracker_testing\n      sha256: \"6ba465d5d76e67ddf503e1161d1f4a6bc42306f9d66ca1e8f079a47290fb06d3\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.1\"\n  lints:\n    dependency: transitive\n    description:\n      name: lints\n      sha256: c35bb79562d980e9a453fc715854e1ed39e24e7d0297a880ef54e17f9874a9d7\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"5.1.1\"\n  macros:\n    dependency: transitive\n    description:\n      name: macros\n      sha256: \"1d9e801cd66f7ea3663c45fc708450db1fa57f988142c64289142c9b7ee80656\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.1.3-main.0\"\n  matcher:\n    dependency: transitive\n    description:\n      name: matcher\n      sha256: d2323aa2060500f906aa31a895b4030b6da3ebdcc5619d14ce1aada65cd161cb\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.12.16+1\"\n  material_color_utilities:\n    dependency: transitive\n    description:\n      name: material_color_utilities\n      sha256: f7142bb1154231d7ea5f96bc7bde4bda2a0945d2806bb11670e30b850d56bdec\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.11.1\"\n  meta:\n    dependency: transitive\n    description:\n      name: meta\n      sha256: bdb68674043280c3428e9ec998512fb681678676b3c54e773629ffe74419f8c7\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.15.0\"\n  package_config:\n    dependency: transitive\n    description:\n      name: package_config\n      sha256: \"92d4488434b520a62570293fbd33bb556c7d49230791c1b4bbd973baf6d2dc67\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.1\"\n  path:\n    dependency: \"direct main\"\n    description:\n      name: path\n      sha256: \"087ce49c3f0dc39180befefc60fdb4acd8f8620e5682fe2476afd0b3688bb4af\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.9.0\"\n  posix:\n    dependency: transitive\n    description:\n      name: posix\n      sha256: a0117dc2167805aa9125b82eee515cc891819bac2f538c83646d355b16f58b9a\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.0.1\"\n  pub_semver:\n    dependency: \"direct dev\"\n    description:\n      name: pub_semver\n      sha256: \"7b3cfbf654f3edd0c6298ecd5be782ce997ddf0e00531b9464b55245185bbbbd\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.5\"\n  sky_engine:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  source_span:\n    dependency: transitive\n    description:\n      name: source_span\n      sha256: \"53e943d4206a5e30df338fd4c6e7a077e02254531b138a15aec3bd143c1a8b3c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.10.0\"\n  stack_trace:\n    dependency: transitive\n    description:\n      name: stack_trace\n      sha256: \"9f47fd3630d76be3ab26f0ee06d213679aa425996925ff3feffdec504931c377\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.12.0\"\n  stream_channel:\n    dependency: transitive\n    description:\n      name: stream_channel\n      sha256: ba2aa5d8cc609d96bbb2899c28934f9e1af5cddbd60a827822ea467161eb54e7\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.2\"\n  string_scanner:\n    dependency: transitive\n    description:\n      name: string_scanner\n      sha256: \"688af5ed3402a4bde5b3a6c15fd768dbf2621a614950b17f04626c431ab3c4c3\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.0\"\n  term_glyph:\n    dependency: transitive\n    description:\n      name: term_glyph\n      sha256: a29248a84fbb7c79282b40b8c72a1209db169a2e0542bce341da992fe1bc7e84\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.2.1\"\n  test_api:\n    dependency: transitive\n    description:\n      name: test_api\n      sha256: \"664d3a9a64782fcdeb83ce9c6b39e78fd2971d4e37827b9b06c3aa1edc5e760c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.7.3\"\n  typed_data:\n    dependency: transitive\n    description:\n      name: typed_data\n      sha256: f9049c039ebfeb4cf7a7104a675823cd72dba8297f264b6637062516699fa006\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.4.0\"\n  vector_math:\n    dependency: \"direct main\"\n    description:\n      name: vector_math\n      sha256: \"80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.4\"\n  vm_service:\n    dependency: transitive\n    description:\n      name: vm_service\n      sha256: f6be3ed8bd01289b34d679c2b62226f63c0e69f9fd2e50a6b3c1c729a961041b\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"14.3.0\"\n  watcher:\n    dependency: transitive\n    description:\n      name: watcher\n      sha256: \"69da27e49efa56a15f8afe8f4438c4ec02eff0a117df1b22ea4aad194fe1c104\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.1\"\n  web:\n    dependency: transitive\n    description:\n      name: web\n      sha256: cd3543bd5798f6ad290ea73d210f423502e71900302dde696f8bff84bf89a1cb\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.0\"\n  yaml:\n    dependency: \"direct dev\"\n    description:\n      name: yaml\n      sha256: b9da305ac7c39faa3f030eccd175340f968459dae4af175130b3fc47e40d76ce\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.1.3\"\nsdks:\n  dart: \">=3.6.0 <4.0.0\"\n  flutter: \">=3.27.0\"\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 0.5615234375,
          "content": "name: lottie\ndescription: Render After Effects animations natively on Flutter. This package is a pure Dart implementation of a Lottie player.\nversion: 3.3.1\nrepository: https://github.com/xvrh/lottie-flutter\n\nfunding:\n  - https://www.buymeacoffee.com/xvrh\n  - https://github.com/sponsors/xvrh\n\nenvironment:\n  sdk: '^3.6.0'\n  flutter: '>=3.27.0'\n\ndependencies:\n  archive: ^4.0.0\n  flutter:\n    sdk: flutter\n  http: ^1.0.0\n  path: ^1.8.0\n  vector_math: ^2.1.0\n\ndev_dependencies:\n  analyzer:\n  dart_style:\n  flutter_lints:\n  flutter_test:\n    sdk: flutter\n  pub_semver:\n  yaml:\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}