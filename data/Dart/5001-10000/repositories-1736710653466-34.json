{
  "metadata": {
    "timestamp": 1736710653466,
    "page": 34,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjM0",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rrousselGit/provider",
      "stars": 5134,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2880859375,
          "content": "# Files and directories created by pub\n.dart_tool/\nandroid/\nios/\nmacos/\n.packages\nbuild\n\n# Remove the following pattern if you wish to check in your lock file\npubspec.lock\n\n# Conventional directory for build outputs\n/build/\ncoverage/\n\n# Directory created by dartdoc\ndoc/api/\n\n# IntelliJ\n.idea/\n\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "all_lint_rules.yaml",
          "type": "blob",
          "size": 5.7080078125,
          "content": "linter:\n  rules:\n    - always_declare_return_types\n    - always_put_control_body_on_new_line\n    - always_put_required_named_parameters_first\n    - always_require_non_null_named_parameters\n    - always_specify_types\n    - always_use_package_imports\n    - annotate_overrides\n    - avoid_annotating_with_dynamic\n    - avoid_bool_literals_in_conditional_expressions\n    - avoid_catches_without_on_clauses\n    - avoid_catching_errors\n    - avoid_classes_with_only_static_members\n    - avoid_double_and_int_checks\n    - avoid_dynamic_calls\n    - avoid_empty_else\n    - avoid_equals_and_hash_code_on_mutable_classes\n    - avoid_escaping_inner_quotes\n    - avoid_field_initializers_in_const_classes\n    - avoid_function_literals_in_foreach_calls\n    - avoid_implementing_value_types\n    - avoid_init_to_null\n    - avoid_js_rounded_ints\n    - avoid_null_checks_in_equality_operators\n    - avoid_positional_boolean_parameters\n    - avoid_print\n    - avoid_private_typedef_functions\n    - avoid_redundant_argument_values\n    - avoid_relative_lib_imports\n    - avoid_renaming_method_parameters\n    - avoid_return_types_on_setters\n    - avoid_returning_null\n    - avoid_returning_null_for_future\n    - avoid_returning_null_for_void\n    - avoid_returning_this\n    - avoid_setters_without_getters\n    - avoid_shadowing_type_parameters\n    - avoid_single_cascade_in_expression_statements\n    - avoid_slow_async_io\n    - avoid_type_to_string\n    - avoid_types_as_parameter_names\n    - avoid_types_on_closure_parameters\n    - avoid_unnecessary_containers\n    - avoid_unused_constructor_parameters\n    - avoid_void_async\n    - avoid_web_libraries_in_flutter\n    - await_only_futures\n    - camel_case_extensions\n    - camel_case_types\n    - cancel_subscriptions\n    - cascade_invocations\n    - cast_nullable_to_non_nullable\n    - close_sinks\n    - comment_references\n    - constant_identifier_names\n    - control_flow_in_finally\n    - curly_braces_in_flow_control_structures\n    - diagnostic_describe_all_properties\n    - directives_ordering\n    - do_not_use_environment\n    - empty_catches\n    - empty_constructor_bodies\n    - empty_statements\n    - exhaustive_cases\n    - file_names\n    - flutter_style_todos\n    - hash_and_equals\n    - implementation_imports\n    - invariant_booleans\n    - iterable_contains_unrelated_type\n    - join_return_with_assignment\n    - leading_newlines_in_multiline_strings\n    - library_names\n    - library_prefixes\n    - lines_longer_than_80_chars\n    - list_remove_unrelated_type\n    - literal_only_boolean_expressions\n    - missing_whitespace_between_adjacent_strings\n    - no_adjacent_strings_in_list\n    - no_default_cases\n    - no_duplicate_case_values\n    - no_logic_in_create_state\n    - no_runtimeType_toString\n    - non_constant_identifier_names\n    - null_check_on_nullable_type_parameter\n    - null_closures\n    - omit_local_variable_types\n    - one_member_abstracts\n    - only_throw_errors\n    - overridden_fields\n    - package_api_docs\n    - package_names\n    - package_prefixed_library_names\n    - parameter_assignments\n    - prefer_adjacent_string_concatenation\n    - prefer_asserts_in_initializer_lists\n    - prefer_asserts_with_message\n    - prefer_collection_literals\n    - prefer_conditional_assignment\n    - prefer_const_constructors\n    - prefer_const_constructors_in_immutables\n    - prefer_const_declarations\n    - prefer_const_literals_to_create_immutables\n    - prefer_constructors_over_static_methods\n    - prefer_contains\n    - prefer_double_quotes\n    - prefer_equal_for_default_values\n    - prefer_expression_function_bodies\n    - prefer_final_fields\n    - prefer_final_in_for_each\n    - prefer_final_locals\n    - prefer_for_elements_to_map_fromIterable\n    - prefer_foreach\n    - prefer_function_declarations_over_variables\n    - prefer_generic_function_type_aliases\n    - prefer_if_elements_to_conditional_expressions\n    - prefer_if_null_operators\n    - prefer_initializing_formals\n    - prefer_inlined_adds\n    - prefer_int_literals\n    - prefer_interpolation_to_compose_strings\n    - prefer_is_empty\n    - prefer_is_not_empty\n    - prefer_is_not_operator\n    - prefer_iterable_whereType\n    - prefer_mixin\n    - prefer_null_aware_operators\n    - prefer_relative_imports\n    - prefer_single_quotes\n    - prefer_spread_collections\n    - prefer_typing_uninitialized_variables\n    - prefer_void_to_null\n    - provide_deprecation_message\n    - public_member_api_docs\n    - recursive_getters\n    - sized_box_for_whitespace\n    - slash_for_doc_comments\n    - sort_child_properties_last\n    - sort_constructors_first\n    - sort_pub_dependencies\n    - sort_unnamed_constructors_first\n    - test_types_in_equals\n    - throw_in_finally\n    - tighten_type_of_initializing_formals\n    - type_annotate_public_apis\n    - type_init_formals\n    - unawaited_futures\n    - unnecessary_await_in_return\n    - unnecessary_brace_in_string_interps\n    - unnecessary_const\n    - unnecessary_final\n    - unnecessary_getters_setters\n    - unnecessary_lambdas\n    - unnecessary_new\n    - unnecessary_null_aware_assignments\n    - unnecessary_null_checks\n    - unnecessary_null_in_if_null_operators\n    - unnecessary_nullable_for_final_variable_declarations\n    - unnecessary_overrides\n    - unnecessary_parenthesis\n    - unnecessary_raw_strings\n    - unnecessary_statements\n    - unnecessary_string_escapes\n    - unnecessary_string_interpolations\n    - unnecessary_this\n    - unrelated_type_equality_checks\n    - unsafe_html\n    - use_full_hex_values_for_flutter_colors\n    - use_function_type_syntax_for_parameters\n    - use_is_even_rather_than_modulo\n    - use_key_in_widget_constructors\n    - use_late_for_private_fields_and_variables\n    - use_raw_strings\n    - use_rethrow_when_possible\n    - use_setters_to_change_properties\n    - use_string_buffers\n    - use_to_and_as_if_applicable\n    - valid_regexps\n    - void_checks"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 2.6845703125,
          "content": "include: all_lint_rules.yaml\nanalyzer:\n  exclude:\n    - \"**/*.g.dart\"\n  language:\n    strict-casts: true\n    strict-inference: true\n    strict-raw-types: true\n  errors:\n    # Otherwise cause the import of all_lint_rules to warn because of some rules conflicts.\n    # We explicitly enabled even conflicting rules and are fixing the conflict\n    # in this file\n    included_file_warning: ignore\nlinter:\n  rules:\n    # Personal preference. I don't find it more readable\n    cascade_invocations: false\n\n    # Conflicts with `prefer_single_quotes`\n    # Single quotes are easier to type and don't compromise on readability.\n    prefer_double_quotes: false\n\n    # Conflicts with `omit_local_variable_types` and other rules.\n    # As per Dart guidelines, we want to avoid unnecessary types to make the code\n    # more readable.\n    # See https://dart.dev/guides/language/effective-dart/design#avoid-type-annotating-initialized-local-variables\n    always_specify_types: false\n\n    # Incompatible with `prefer_final_locals`\n    # Having immutable local variables makes larger functions more predictible\n    # so we will use `prefer_final_locals` instead.\n    unnecessary_final: false\n\n    # Not quite suitable for Flutter, which may have a `build` method with a single\n    # return, but that return is still complex enough that a \"body\" is worth it.\n    prefer_expression_function_bodies: false\n\n    # Conflicts with the convention used by flutter, which puts `Key key`\n    # and `@required Widget child` last.\n    always_put_required_named_parameters_first: false\n\n    # This project doesn't use Flutter-style todos\n    flutter_style_todos: false\n\n    # There are situations where we voluntarily want to catch everything,\n    # especially as a library.\n    avoid_catches_without_on_clauses: false\n\n    # Boring as it sometimes force a line of 81 characters to be split in two.\n    # As long as we try to respect that 80 characters limit, going slightly\n    # above is fine.\n    lines_longer_than_80_chars: false\n\n    # Conflicts with disabling `implicit-dynamic`\n    avoid_annotating_with_dynamic: false\n\n    # conflicts with `prefer_relative_imports`\n    always_use_package_imports: false\n\n    # Disabled for now until we have NNBD as it otherwise conflicts with `missing_return`\n    no_default_cases: false\n\n    # False positive, null checks don't need a message\n    prefer_asserts_with_message: false\n\n    # Cumbersome with `context.select`\n    avoid_types_on_closure_parameters: false\n\n    # Too many false positive (builders)\n    diagnostic_describe_all_properties: false\n\n    # false positives (setter-like functions)\n    avoid_positional_boolean_parameters: false\n\n    # Does not apply to providers\n    prefer_const_constructors_in_immutables: false\n"
        },
        {
          "name": "build_devtool.sh",
          "type": "blob",
          "size": 0.2587890625,
          "content": "pushd packages/provider\n\nrm -rf extension/devtools/build\nmkdir extension/devtools/build\n\npopd\n\npushd packages/provider_devtools_extension\n\nflutter pub get &&\ndart run devtools_extensions build_and_copy \\\n  --source=. \\\n  --dest=../provider/extension/devtools\n\npopd\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}