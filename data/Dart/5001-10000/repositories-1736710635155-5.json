{
  "metadata": {
    "timestamp": 1736710635155,
    "page": 5,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "brianegan/flutter_architecture_samples",
      "stars": 8779,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 3.9609375,
          "content": "timeout_in: 30m\nenv:\n  FLUTTER_CHANNEL: stable\n  FLUTTER_VERSION: v1.12.13+hotfix.5\n  DOCKER_VERSION: v1.12.13-hotfix.5 # docker tags cannot have plus\n\ntask:\n  # this task should fail fast or rely on 'depends_on' for all other tasks\n  name: Static analysis, formatting, and unit tests\n  container:\n    image: cirrusci/flutter:$DOCKER_VERSION\n  pub_cache:\n    folder: ~/.pub-cache\n  activate_coverage_script: pub global activate coverage\n  tests_script: ./scripts/runTests.sh\n\ntask:\n  name: Integration Tests for $app_arch (Linux)\n  # don't run for PRs\n  only_if: $CIRRUS_PR == ''\n  skip: '!changesInclude(\".cirrus.yml\", \"$app_arch/*\", \"$app_arch/**/*\")'\n  env:\n    EMULATOR_API_LEVEL: 28\n    ANDROID_ABI: \"default;x86\"\n    matrix:\n      app_arch: bloc_flutter\n      app_arch: bloc_library\n      app_arch: built_redux\n      app_arch: firestore_redux\n      app_arch: frideos_library\n      app_arch: inherited_widget\n      app_arch: mobx\n      app_arch: mvc\n      app_arch: mvi_flutter\n      app_arch: mvu\n      app_arch: change_notifier_provider\n      app_arch: redux\n      app_arch: scoped_model\n      app_arch: simple_bloc_flutter\n      app_arch: vanilla\n      app_arch: states_rebuilder\n  container:\n    image: cirrusci/flutter:$DOCKER_VERSION\n    cpu: 4\n    memory: 10G\n    kvm: true\n  fix_kvm_script: sudo chown cirrus:cirrus /dev/kvm\n  install_images_script: sdkmanager \"system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI\"\n  create_device_script:\n    echo no | avdmanager create avd --force -n test -k \"system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI\"\n  start_emulator_background_script:\n    $ANDROID_HOME/emulator/emulator-headless -verbose -avd test -no-audio -no-window\n  pub_cache:\n    folder: ~/.pub-cache\n  wait_for_emulator_script:\n    - ./scripts/android-wait-for-emulator.sh\n#    - adb shell input keyevent 82\n  doctor_script: flutter doctor -v\n  devices_script: flutter devices\n  ci_script: ./scripts/ci.sh ./$app_arch || ./scripts/ci.sh ./$app_arch\n\ntask:\n  name: Integration Tests for $app_arch (macOS)\n  # don't run for PRs\n  only_if: $CIRRUS_PR == ''\n  skip: '!changesInclude(\".cirrus.yml\", \"$app_arch/*\", \"$app_arch/**/*\")'\n  env:\n    matrix:\n      app_arch: bloc_flutter\n      app_arch: bloc_library\n      app_arch: built_redux\n      app_arch: firestore_redux\n      app_arch: frideos_library\n      app_arch: inherited_widget\n      app_arch: mvc\n      app_arch: mvi_flutter\n      app_arch: mvu\n      app_arch: change_notifier_provider\n      app_arch: redux\n      app_arch: scoped_model\n      app_arch: simple_bloc_flutter\n      app_arch: vanilla\n      app_arch: states_rebuilder\n  osx_instance:\n    image: mojave-xcode-11.2.1-flutter\n  simulator_script:\n    - xcrun simctl list devicetypes\n    - xcrun simctl list runtimes\n    # create simulator\n    - udid=$(xcrun simctl create \"iPhone X\" com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-13-2)\n    # boot simulator\n    - xcrun simctl boot $udid\n  pin_flutter_script:\n#    - sudo gem install cocoapods # missing from mojave-xcode-11.2.1-flutter (not found)\n    - flutter --version\n    # pin to ${FLUTTER_VERSION}\n    - wget --quiet --output-document=flutter.zip https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/macos/flutter_macos_${FLUTTER_VERSION}-${FLUTTER_CHANNEL}.zip && unzip -qq flutter.zip > /dev/null && rm flutter.zip\n    - export PATH=\"$PATH\":\"$HOME/.pub-cache/bin\"\n    - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH\n    - flutter --version\n  doctor_script:\n    - export PATH=\"$PATH\":\"$HOME/.pub-cache/bin\"\n    - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH\n    - flutter doctor -v\n  devices_script:\n    - export PATH=\"$PATH\":\"$HOME/.pub-cache/bin\"\n    - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH\n    - flutter devices\n  ci_script:\n    - export PATH=\"$PATH\":\"$HOME/.pub-cache/bin\"\n    - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH\n    - ./scripts/ci.sh ./$app_arch || ./scripts/ci.sh ./$app_arch\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.794921875,
          "content": "# Files and directories created by pub\n.packages\n.pub/\nbuild/\n# Remove the following pattern if you wish to check in your lock file\npubspec.lock\n\n# Directory created by dartdoc\ndoc/api/\n.idea\n*.iml\n/intl_en.arb\n.DS_Store\n\n# coverage\ncoverage/\nlcov.info\n\n# tests\n.flutter-plugins\n\n# Files generated by dart tools\n.dart_tool\n\n# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.pub-cache/\n/build/\n\n# Android related\n**/*/android/**/gradle-wrapper.jar\n**/*/android/.gradle\n**/*/android/captures/\n**/*/android/gradlew\n**/*/android/gradlew.bat\n**/*/android/local.properties\n**/*/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/*/ios/**/*.mode1v3\n**/*/ios/**/*.mode2v3\n**/*/ios/**/*.moved-aside\n**/*/ios/**/*.pbxuser\n**/*/ios/**/*.perspectivev3\n**/*/ios/**/*sync/\n**/*/ios/**/.sconsign.dblite\n**/*/ios/**/.tags*\n**/*/ios/**/.vagrant/\n**/*/ios/**/DerivedData/\n**/*/ios/**/Icon?\n**/*/ios/**/Pods/\n**/*/ios/**/.symlinks/\n**/*/ios/**/profile\n**/*/ios/**/xcuserdata\n**/*/ios/.generated/\n**/*/ios/Flutter/App.framework\n**/*/ios/Flutter/Flutter.framework\n**/*/ios/Flutter/Generated.xcconfig\n**/*/ios/Flutter/app.flx\n**/*/ios/Flutter/app.zip\n**/*/ios/Flutter/flutter_assets/\n**/*/ios/Flutter/flutter_export_environment.sh\n**/*/ios/ServiceDefinitions.json\n**/*/ios/Runner/GeneratedPluginRegistrant.*\n**/.flutter-plugins-dependencies\n\n# Exceptions to above rules.\n!**/*/ios/**/default.mode1v3\n!**/*/ios/**/default.mode2v3\n!**/*/ios/**/default.pbxuser\n!**/*/ios/**/default.perspectivev3\n**/*/generated_plugin_registrant.dart\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 13.07421875,
          "content": "language: generic\nenv:\n  global:\n    - FLUTTER_CHANNEL=stable\n    - FLUTTER_VERSION=1.12.13+hotfix.5-${FLUTTER_CHANNEL}\n    - API=28\n    - ABI=x86\n    - GOO=default\n    - ANDROID_TOOLS=4333796 # android-28\n    - ANDROID_HOME=${HOME}/android-sdk\n    - GRAVIS=\"https://raw.githubusercontent.com/DanySK/Gravis-CI/master/\"\n    - JDK=\"1.8\" # the JDK used for running tests\n    - TOOLS=${ANDROID_HOME}/tools\n    # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!\n    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}\n    - FLUTTER_HOME=${HOME}/flutter\n    - PATH=${HOME}/.pub-cache/bin:${PATH}\n    - PATH=${FLUTTER_HOME}/bin:${FLUTTER_HOME}/bin/cache/dart-sdk/bin:${PATH}\n\njobs:\n  include:\n\n    - stage: Static analysis, formatting, and unit tests\n      language: generic\n      dist: bionic\n      os: linux\n      env: All unit and widget tests\n      before_script:\n        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null\n\n        # install pre-compiled flutter\n        - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz && tar xf flutter.tar.xz > /dev/null && rm flutter.tar.xz\n        - export PATH=\"$PATH\":\"$HOME/.pub-cache/bin\"\n        - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH\n        - flutter doctor -v\n        - pub global activate coverage\n      script: ./scripts/runTests.sh\n      after_success: bash <(curl -s https://codecov.io/bash) -f lcov.info\n      cache:\n        directories:\n          - $HOME/.pub-cache\n\n    - &integration-test\n      stage: Testing\n      dist: bionic\n      language: generic\n      os: linux\n      env: bloc_flutter_android\n      # Run integration tests on android\n      before_install: &before_install_linux\n        - java -version\n\n        # Set up KVM\n        - sudo apt-get -y --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder > /dev/null\n        # add travis user to groups\n        - sudo adduser $USER libvirt\n        - sudo adduser $USER kvm\n\n        # Set up JDK 8 for Android SDK\n        - curl \"${GRAVIS}.install-jdk-travis.sh\" --output ~/.install-jdk-travis.sh\n        - export TARGET_JDK=\"${JDK}\"\n        - JDK=\"1.8\" # used when running sdkmanager\n        - source ~/.install-jdk-travis.sh\n\n        # Set up Android SDK\n        - wget -q \"https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip\" -O android-sdk-tools.zip\n        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}\n        - rm android-sdk-tools.zip\n\n        # Avoid harmless sdkmanager warning\n        - mkdir ~/.android\n        - echo 'count=0' > ~/.android/repositories.cfg\n\n        # Accept licenses before installing components, no need to echo y for each component\n        - yes | sdkmanager --licenses >/dev/null\n\n        # Download SDK tools\n        - sdkmanager \"platform-tools\" >/dev/null\n        - sdkmanager \"tools\" >/dev/null # A second time per Travis docs, gets latest versions\n        - sdkmanager \"build-tools;28.0.3\" >/dev/null # Implicit gradle dependency - gradle drives changes\n        - sdkmanager \"platforms;android-$API\" >/dev/null # We need the API of the emulator we will run\n        - sdkmanager \"platforms;android-28\" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties  -\n\n        - sdkmanager \"emulator\" >/dev/null\n        - |\n          if [[ $ABI =~ \"arm\" ]]; then\n            # Download a pinned version of the emulator since default version can cause issues\n            ${ANDROID_HOME}/emulator/emulator -version\n            emulator_version=5264690 # 29.2.1.0 (build_id 5889189) ==> 28.0.23.0 (build_id 5264690)\n            # sudo apt-get install -y libunwind8 libc++1\n            curl -fo emulator.zip \"https://dl.google.com/android/repository/emulator-linux-$emulator_version.zip\"\n            rm -rf \"${ANDROID_HOME}/emulator\"\n            unzip -q emulator.zip -d \"${ANDROID_HOME}\"\n            rm -f emulator.zip\n            # install build tools and platforms for arm (to allow emulator to run)\n            sdkmanager \"build-tools;25.0.2\" \"platforms;android-25\" > /dev/null\n          fi\n        - ${ANDROID_HOME}/emulator/emulator -version\n\n        - sdkmanager \"extras;android;m2repository\" >/dev/null\n        - sdkmanager \"system-images;android-$API;$GOO;$ABI\" >/dev/null # install system images for emulator\n\n        # Create an Android emulator\n        #  - echo no | avdmanager --verbose create avd --force -n test -k \"system-images;android-$API;$GOO;$ABI\" -c 10M\n        - echo no | avdmanager --verbose create avd --force -n test -k \"system-images;android-$API;$GOO;$ABI\"\n        #  - EMU_PARAMS=\"\n        #      -verbose\n        #      -no-snapshot\n        #      -no-window\n        #      -no-audio\n        #      -no-boot-anim\n        #      -camera-back none\n        #      -camera-front none\n        #      -selinux permissive\n        #      -qemu -m 2048\"\n        - EMU_PARAMS=\"\n          -avd test\n          -verbose\n          -no-window\n          -no-audio\n          \"\n        - EMU_COMMAND=\"emulator\"\n        - |\n          if [[ $ABI =~ \"x86\" ]]; then\n            EMU_COMMAND=\"emulator\"\n          else\n            # emulate graphics if running on ARM\n            EMU_PARAMS=\"${EMU_PARAMS} -gpu swiftshader\"\n          fi\n        # This double \"sudo\" monstrosity is used to have Travis execute the\n        # emulator with its new group permissions and help preserve the rule\n        # of least privilege.\n        - sudo -E sudo -u $USER -E bash -c \"${ANDROID_HOME}/emulator/${EMU_COMMAND} ${EMU_PARAMS} &\"\n\n        # install flutter (while emulator is starting)\n        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null\n        - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz\n        - tar xf flutter.tar.xz -C $(dirname ${FLUTTER_HOME})\n        - rm flutter.tar.xz\n\n        # Switch back to our target JDK version to build and run tests\n        - JDK=\"${TARGET_JDK}\"\n        - source ~/.install-jdk-travis.sh\n\n        - flutter doctor -v\n\n        # wait for emulator to finish startup\n        - ./scripts/android-wait-for-emulator.sh\n        # unlock screen\n        - adb shell input keyevent 82 &\n\n      script: travis_retry ./scripts/ci.sh ./bloc_flutter\n      cache:\n        directories:\n          - $HOME/.pub-cache\n          - $HOME/.gradle\n\n#    - <<: *integration-test\n    - stage: Testing\n      os: osx\n#      osx_image: xcode9.4\n#      osx_image: xcode9.2\n      osx_image: xcode11.3 # for firebase\n      env: bloc_flutter_ios\n#      env: vanilla_ios\n      # Run integration tests on ios\n      before_install: &before_install_osx\n#        - xcrun simctl list devicetypes\n#        - xcrun simctl list runtimes\n#        # create simulator\n#        - udid=$(xcrun simctl create \"iPhone X\" com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-11-2)\n#        # boot simulator\n#        - xcrun simctl boot $udid\n#        - xcrun simctl list\n        - xcrun simctl create \"iPhone X\" com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-13-3 | xargs xcrun simctl boot\n        # skip homebrew update\n        - export HOMEBREW_NO_AUTO_UPDATE=1\n        #        - brew update\n        - brew install libimobiledevice\n        - brew install ideviceinstaller\n        - brew install ios-deploy\n        - sudo gem install cocoapods\n\n        # install pre-compiled flutter\n        - wget --quiet --output-document=flutter.zip https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/macos/flutter_macos_v${FLUTTER_VERSION}.zip && unzip -qq flutter.zip > /dev/null && rm flutter.zip\n        - export PATH=\"$PATH\":\"$HOME/.pub-cache/bin\"\n        - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH\n        - flutter doctor -v\n      script: travis_retry ./scripts/ci.sh ./bloc_flutter\n      cache:\n        directories:\n          - $HOME/.pub-cache\n\n    - <<: *integration-test\n      os: linux\n      env: built_redux_android\n      script: travis_retry ./scripts/ci.sh ./built_redux\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: built_redux_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./built_redux\n    - <<: *integration-test\n      os: linux\n      env: bloc_library_android\n      script: travis_retry ./scripts/ci.sh ./bloc_library\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: bloc_library_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./bloc_library\n    - <<: *integration-test\n      os: linux\n      env: firestore_redux_android\n      script: travis_retry ./scripts/ci.sh ./firestore_redux\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: firestore_redux_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./firestore_redux\n    - <<: *integration-test\n      os: linux\n      env: frideos_library_android\n      script: travis_retry ./scripts/ci.sh ./frideos_library\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: frideos_library_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./frideos_library\n    - <<: *integration-test\n      os: linux\n      env: inherited_widget_android\n      script: travis_retry ./scripts/ci.sh ./inherited_widget\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: inherited_widget_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./inherited_widget\n    - <<: *integration-test\n      os: linux\n      env: mvc_android\n      script: travis_retry ./scripts/ci.sh ./mvc\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: mvc_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./mvc\n    - <<: *integration-test\n      os: linux\n      env: mvi_flutter_android\n      script: travis_retry ./scripts/ci.sh ./mvi_flutter\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: mvi_flutter_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./mvi_flutter\n    - <<: *integration-test\n      os: linux\n      env: mvu_android\n      script: travis_retry ./scripts/ci.sh ./mvu\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: mvu_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./mvu\n    - <<: *integration-test\n      os: linux\n      env: redux_android\n      script: travis_retry ./scripts/ci.sh ./redux\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: redux_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./redux\n    - <<: *integration-test\n      os: linux\n      env: change_notifier_provider_android\n      script: travis_retry ./scripts/ci.sh ./change_notifier_provider\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: change_notifier_provider_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./change_notifier_provider\n    - <<: *integration-test\n      os: linux\n      env: scoped_model_android\n      script: travis_retry ./scripts/ci.sh ./scoped_model\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: scoped_model_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./scoped_model\n    - <<: *integration-test\n      os: linux\n      env: simple_bloc_flutter_android\n      script: travis_retry ./scripts/ci.sh ./simple_bloc_flutter\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: simple_bloc_flutter_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./simple_bloc_flutter\n    - <<: *integration-test\n      os: linux\n      env: vanilla_android\n      script: travis_retry ./scripts/ci.sh ./vanilla\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: vanilla_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./vanilla\n    - <<: *integration-test\n      os: linux\n      env: mobx_android\n      script: travis_retry ./scripts/ci.sh ./mobx\n    - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: mobx_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./mobx\n      - <<: *integration-test\n      os: linux\n      env: states_rebuilder_android\n      script: travis_retry ./scripts/ci.sh ./states_rebuilder\n      - <<: *integration-test\n      os: osx\n      osx_image: xcode11.3\n      env: states_rebuilder_ios\n      before_install: *before_install_osx\n      script: travis_retry ./scripts/ci.sh ./states_rebuilder\n\n  allow_failures:\n#    - env:\n#        - bloc_flutter_ios\n#        - built_redux_android\n#        - firestore_redux_android\n#        - firestore_redux_ios\n#        - mvu_android\n#        - mvu_ios\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.0615234375,
          "content": "# Changelog\n\n## 0.0.1\n\n- Initial version, created by Stagehand\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.017578125,
          "content": "fluttersamples.com"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.8564453125,
          "content": "# Contributing\n\nContributions are very welcome in many forms :)\n\n## Issues\n\nIf you find a problem with any of the examples, please [file an issue on Github](https://github.com/brianegan/flutter_architecture_samples/issues).\n\n## Merge Requests / New Apps\n\nIf you would like to fix a bug or make an improvement, please [file a pull request](https://github.com/brianegan/flutter_architecture_samples/pulls) explaining your changes!\n\nFor larger changes, such as a including a new app, please submit an Issue before you\nbegin or submit a \"Work In Progress\" Merge request that gives an overview of the changes you'd\nlike to make and the reasoning behind it!\n\n### Code Hygiene\n\n  * Ensure your updates follow the app spec\n  * Ensure your code is properly formatted with `dartfmt`\n  * Please ensure tests are up to date\n  * Verify `dartanalyzer` isn't throwing any warning or errors/\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4873046875,
          "content": "Copyright (c) 2017, Flutter Architecture Sample Authors.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of the <organization> nor the\n      names of its contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.5830078125,
          "content": ".PHONY: clean localize all check_env\n\nFILES := $(shell find . -name '*.arb' | xargs)\n\nall: localize\n\nlocalize: check_env clean\n\tflutter pub pub run intl_translation:extract_to_arb --output-dir=./ --no-transformer lib/src/localization.dart\n\tmv intl_messages.arb intl_en.arb\n\tflutter pub pub run intl_translation:generate_from_arb --no-use-deferred-loading lib/src/localization.dart $(FILES)\n\tmv messages*.dart lib/src/localizations\n\nclean:\n\trm -f *.arb\n\ncheck_env:\nifndef FLUTTER_ROOT\n\t$(error FLUTTER_ROOT is undefined. Please export a FLUTTER_ROOT pointing to the installation of Flutter.)\nendif\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.193359375,
          "content": "# flutter_architecture_samples\n\n[![Build Status](https://travis-ci.org/brianegan/flutter_architecture_samples.svg?branch=master)](https://travis-ci.org/brianegan/flutter_architecture_samples)\n[![Build Status](https://api.cirrus-ci.com/github/brianegan/flutter_architecture_samples.svg)](https://cirrus-ci.com/github/brianegan/flutter_architecture_samples)\n[![codecov](https://codecov.io/gh/brianegan/flutter_architecture_samples/branch/master/graph/badge.svg)](https://codecov.io/gh/brianegan/flutter_architecture_samples)\n\n<img align=\"right\" src=\"assets/todo-list.png\" alt=\"List of Todos Screen\">\n\n[TodoMVC](http://todomvc.com) for Flutter!\n\nFlutter provides a lot of flexibility in deciding how to organize and architect\nyour apps. While this freedom is very valuable, it can also lead to apps with\nlarge classes, inconsistent naming schemes, as well as mismatching or missing\narchitectures. These types of issues can make testing, maintaining and extending\nyour apps difficult.\n\nThe Flutter Architecture Samples project demonstrates strategies to help solve\nor avoid these common problems. This project implements the same app using\ndifferent architectural concepts and tools.\n\nYou can use the samples in this project as a learning reference, or as a\nstarting point for creating your own apps. The focus of this project is on\ndemonstrating how to structure your code, design your architecture, and the\neventual impact of adopting these patterns on testing and maintaining your app.\nYou can use the techniques demonstrated here in many different ways to build\napps. Your own particular priorities will impact how you implement the concepts\nin these projects, so you should not consider these samples to be canonical\nexamples. To ensure the focus is kept on the aims described above, the app uses\na simple UI.\n\n### Current Samples\n\n- [Vanilla Lifting State Up Example](vanilla) ([Web Demo](https://fas_vanilla.codemagic.app)) - Uses the tools Flutter provides out of the box to manage app state.\n- [InheritedWidget Example](inherited_widget) ([Web Demo](https://fas_inherited_widget.codemagic.app)) - Uses an InheritedWidget to pass app state down the widget hierarchy.\n- [Change Notifier + Provider Example](change_notifier_provider) ([Web Demo](https://fas_change_notifier_provider.codemagic.app)) - Uses the [ChangeNotifier](https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html) class from Flutter with [provider](https://pub.dev/packages/provider) package now recommended by the Flutter team.\n- [BLoC Example](bloc_flutter) ([Web Demo](https://fas_bloc_flutter.codemagic.app)) - An implementation of the BLoC pattern, which uses Sinks for Inputs and Streams for Outputs\n- [Bloc Library Example](bloc_library) ([Web Demo](https://fas_bloc_library.codemagic.app)) - Uses the [bloc](https://pub.dartlang.org/packages/bloc) and [flutter_bloc](https://pub.dartlang.org/packages/flutter_bloc) libraries to manage app state and update Widgets.\n- [MobX Example](mobx) ([Web Demo](https://fas_mobx.codemagic.app)) - Uses the [MobX](https://pub.dev/packages/mobx) library to manage app state and update widgets using `Observables`, `Actions` and `Reactions`.\n- [Redux Example](redux) ([Web Demo](https://fas_redux.codemagic.app)) - Uses the [Redux](https://pub.dartlang.org/packages/redux) library to manage app state and update Widgets\n- [\"Simple\" BLoC Example](simple_bloc_flutter) ([Web Demo](https://fas_simple_bloc.codemagic.app)) - Similar to the BLoC pattern, but uses Functions for Inputs and Streams for Outputs. Results in far less code compared to standard BLoC.\n- [MVI Example](mvi_flutter) ([Web Demo](https://fas_mvi.codemagic.app)) - Uses the concepts from Cycle.JS and applies them to Flutter.\n- [states_rebuilder Example](states_rebuilder) ([Web Demo](https://fas_states_rebuilder.codemagic.app)) - Uses the [states_rebuilder](https://pub.dev/packages/states_rebuilder) library to manage app state and update Widgets.\n- [built_redux Example](built_redux) - Uses the [built_redux](https://pub.dartlang.org/packages/built_redux) library to enforce immutability and manage app state\n- [scoped_model Example](scoped_model) - Uses the [scoped_model](https://pub.dartlang.org/packages/scoped_model) library to hold app state and notify Widgets of Updates\n- [Firestore Redux Example](firestore_redux) - Uses the [Redux](https://pub.dartlang.org/packages/redux) library to manage app state and update Widgets and\n  adds [Cloud_Firestore](https://firebase.google.com/docs/firestore/) as the Todos database.\n- [MVU Example](mvu) - Uses the [dartea](https://pub.dartlang.org/packages/dartea) library to manage app state and update Widgets.\n- [MVC Example](mvc) - Uses the [MVC](https://pub.dartlang.org/packages/mvc_pattern) library to implement the traditional MVC design pattern.\n- [Frideos Example](frideos_library) - Uses the [Frideos](https://pub.dartlang.org/packages/frideos) library to manage app state and update widgets using streams.\n\n### Supporting Code\n\n- [integration_tests](integration_tests) - Demonstrates how to write\nselenium-style integration (aka end to end) tests using the Page Object Model.\nThis test suite is run against all samples.\n- [todos_repository_core](todos_repository_core) - Defines the core abstract\nclasses for loading and saving data so that storage can be implemented in\nvarious ways, such as file storage or firebase for mobile projects, or\nwindow.localStorage for web projects.\n- [todos_repository_local_storage](todos_repository_local_storage) - Implements\nthe todos repository using the file system, window.localStorage, and\nSharedPreferences as the data source.\n- [firebase_flutter_repository](firebase_flutter_repository) - Implements \nthe todos repository using firestore as the data source.\n- [firebase_rtdb_flutter_repository](firebase_rtdb_flutter_repository) -\nImplements the todos repository using firebase real-time database as the data\nsource.\n\n### Running the samples\n\n#### iOS / Android\n\n```\ncd <sample_directory>\nflutter run \n```\n\n#### Web\n\nMake sure you're on Flutter version \"Flutter 1.12.13+hotfix.6 • channel beta\" or\nnewer. Not all samples support web at this time, so please check the sample\ndirectory for a `lib/main_web.dart` file.\n\n```\ncd <sample_directory>\nflutter run -d chrome -t lib/main_web.dart\n```\n\n### Why a todo app?\n\nThe app in this project aims to be simple enough that you can understand it\nquickly, but complex enough to showcase difficult design decisions and testing\nscenarios. For more information, see the [app's specification](app_spec.md).\n\n### Be excellent to each other\n\nThis Repo is meant as a discussion platform for various architectures. Let us\ndebate these ideas vigorously, but let us be excellent to each other in the\nprocess!\n\nWhile healthy debate and contributions are very welcome, trolls are not. Read\nthe [code of conduct](code-of-conduct.md) for detailed information.\n\n### Contributing\n\nFeel free to join in the discussion, file issues, and we'd love to have more\nsamples added! Please read the [CONTRIBUTING](CONTRIBUTING.md) file for guidance\n:)\n\n### License\n\nAll code in this repo is MIT licensed.\n\n## Attribution\n\nAll of these ideas and even some of the language are directly influenced by two\nprojects:\n\n- [TodoMVC](http://todomvc.com) - A Todo App implemented in various JS frameworks\n- [Android Architecture Blueprints](https://github.com/googlesamples/android-architecture) - A similar concept, but for Android! The UI and app spec was highly inspired by their example.\n\n## Contributors\n\n- [Brian Egan](https://github.com/brianegan)\n- [Maurice McCabe](https://github.com/mmcc007)\n- [David Marne](https://github.com/davidmarne)\n- [Pascal Welsch](https://github.com/passsy)\n- [Larry King](https://github.com/kinggolf)\n- [Frank Harper](https://github.com/franklinharper)\n- [Pavel Shilyagov](https://github.com/p69)\n- [Leo Cavalcante](https://github.com/leocavalcante)\n- [Greg Perry](https://github.com/AndriousSolutions)\n- [Felix Angelov](https://github.com/felangel)\n- [Francesco Mineo](https://github.com/frideosapps)\n- [Pavan Podila](https://github.com/pavanpodila)\n- [Kushagra Saxena](https://github.com/kush3107)\n- [Shakib Hossain](https://github.com/shakib609)\n- [Mellati Fatah](https://github.com/GIfatahTH)\n\nI'd like to thank all of the folks who have helped write new samples, improve\nthe current implementations, and added documentation! You're amazing! :)\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 1.75,
          "content": "# Pedantic 1.9.0\n#\n# Copyright (c) 2019, the Dart project authors.  Please see the AUTHORS file\n# for details. All rights reserved. Use of this source code is governed by a\n# BSD-style license that can be found in the LICENSE file.\n#\n# Google internally enforced rules. See README.md for more information,\n# including a list of lints that are intentionally _not_ enforced.\n\nlinter:\n  rules:\n    - always_declare_return_types\n    - always_require_non_null_named_parameters\n    - annotate_overrides\n    - avoid_empty_else\n    - avoid_init_to_null\n    - avoid_null_checks_in_equality_operators\n    - avoid_relative_lib_imports\n    - avoid_return_types_on_setters\n    - avoid_shadowing_type_parameters\n    - avoid_types_as_parameter_names\n    - camel_case_extensions\n    - curly_braces_in_flow_control_structures\n    - empty_catches\n    - empty_constructor_bodies\n    - library_names\n    - library_prefixes\n    - no_duplicate_case_values\n    - null_closures\n    - omit_local_variable_types\n    - prefer_adjacent_string_concatenation\n    - prefer_collection_literals\n    - prefer_conditional_assignment\n    - prefer_contains\n    - prefer_equal_for_default_values\n    - prefer_final_fields\n    - prefer_for_elements_to_map_fromIterable\n    - prefer_generic_function_type_aliases\n    - prefer_if_null_operators\n    - prefer_is_empty\n    - prefer_is_not_empty\n    - prefer_iterable_whereType\n    - prefer_single_quotes\n    - prefer_spread_collections\n    - recursive_getters\n    - slash_for_doc_comments\n    - type_init_formals\n    - unawaited_futures\n    - unnecessary_const\n    - unnecessary_new\n    - unnecessary_null_in_if_null_operators\n    - unnecessary_this\n    - unrelated_type_equality_checks\n    - use_function_type_syntax_for_parameters\n    - use_rethrow_when_possible\n    - valid_regexps\n"
        },
        {
          "name": "app_spec.md",
          "type": "blob",
          "size": 7.0849609375,
          "content": "# Application Specification\n\nWe have created this short spec to help you create awesome and consistent todo apps. Make sure to not only read it but to understand it as well.\n\n## Reference Application\n\nThe [vanilla](vanilla/) implementation should be used as the reference app and as a base when implementing a new todo app. Before implementing your own, we recommend that you interact with some of the other apps to see how they're built and how they behave. If something is unclear or could be improved, [let us know](https://github.com/brianegan/flutter_architecture_samples/issues).\n\nYour app should look and behave exactly like the template and the other examples.\n\n## README\n\nAll examples must include a README describing the general implementation, any frameworks used, and the build process if required. Please check the [vanilla](vanilla/) implementation for an example.\n\n## Code\n\n- Format your code with `dartfmt`\n- Use the `.analysis_options.yaml` from the vanilla implementation and ensure there are no analysis errors\n- Use the Theme and Widgets provided by the base package for the visual look, unless it makes sense to demonstrate an alternative practice.\n- Your app should work on both Android and iOS \n- Your app should contain tests\n\n## User Interface\n\n### Home Screen\n\nThe home contains two Tabs: the List of Todos and Stats about the Todos.  \n\n### List of Todos\n\n![List of Todos Screen](assets/todo-list.png)\n\n  - Shows a loading screen until the Todos have been loaded from file storage or the web\n  - Displays the list of Todos entered by the User\n  - User can add a new todo by tapping the \"+\" button. This will take the user to a new Screen.\n  - User can tap on each todo to Enter the Todo Details Screen\n  - User can tap on the checkbox for each todo to mark it as complete / incomplete\n  - User can delete any todo by swiping it away. When this happens, a SnackBar must be displayed with the Title of the Todo and a button to Undo this action. When the Undo button is clicked, the removed item should be appended to the end of the Todo List.\n  - User can Filter the list of Todos using the Filter Icon in the top-right\n  - User can Mark All todos completed or Clear all completed todos using the Overflow menu on the top right\n\n### Add todo\n\n![Add Todo Screen](assets/add-todo.png)\n\n  - The task is entered into the `TextField` at the top of the screen. The task `TextField` should be focused when the \"Add New Todo\" screen opens. In order to add a new todo, the task field must not be empty. Make sure to `.trim()` the input and then check that it's not empty before creating a new todo. If the task contains no text, show an error.  \n  - A Note `TextField` must exist to store notes related to the todo.\n  - Pressing the \"+\" button closes the \"Add New Todo\" screen and appends the new todo to the List of Todos.\n  - Pressing the Back Button will close the screen without creating a new todo\n  \n### Todo Details Screen\n\n![Todo Details Screen](assets/todo-details.png)\n\n  - User can see the Task and the complete text of the note.  \n  - User can tap the Checkbox to mark the todo as complete / incomplete. This update must be reflected on the main Todos screen when the user navigates back.  \n  - User can \"Edit\" the todo by tapping the \"Edit\" button. This will take the user to \"Edit Screen\".\n  - User can Delete the Todo by tapping the Icon in the top-right of the screen. When the button is tapped, the details Screen should be closed and the user should be presented with the List of Todos. A SnackBar must be displayed with the Title of the Todo that was just removed and a button to Undo this action. When the Undo button is clicked, the removed item should be appended to the end of the Todo List.  \n\n### Edit Todo Screen\n\n![Edit Todo Screen](assets/edit-todo.png)\n\n  - The task is shown in an editable `TextField` at the top of the screen. The task `TextField` should NOT be focused when the \"Edit New Todo\" screen opens. In order to make changes to the todo, the task field must not be empty. Make sure to `.trim()` the input and then check that it's not empty before updating the todo. If the task contains no text, show an error.  \n  - The note is shown in an editable `TextField` below the task.\n  - Pressing the \"✓\" button closes the \"Edit Todo Screen\" and returns the User to the \"Todo Details Screen.\" Any changes made in the Edit Screen should be reflected on the Details screen.\n  - Pressing the Back button will close the screen without making changes to the todo.\n\n### Filter Todos\n\n![Filter Todos Menu](assets/filter.png)\n\n  - User can filter to show All Todos (Active and Complete)\n  - User can filter to show ONLY active todos\n  - User can filter to show ONLY completed todos\n  - Current Selection should be highlighted\n\n### Overflow Menu\n\n![Overflow Menu](assets/mark-all.png)\n\n  - If all or some todos are incomplete, the \"mark all\" button should read \"Mark all complete\". When pressed, it should ensure all todos in the list are marked as complete. \n  - If all the todos are marked as complete, the \"mark all\" button should read \"Mark all incomplete\". When pressed, it should ensure all todos in the list are marked as incomplete.\n  - User can Removes completed todos when clicked. Should be hidden when there are no completed todos. \n\n### Stats Screen\n\n![Stats Screen](assets/stats.png)\n\n  - Shows the number of Completed todos\n  - Shows the number of active todos\n  - Filter Menu in the top right should be hidden on this tab\n  - Using overflow menu to mark all as complete / incomplete or clear completed todos should cause the stats to update. \n\n## Data Sources\n\nThere are three levels of data persistence:\n\n  - In-memory cache - Fast\n  - Disk (File, SQLiteDb) - Slow\n  - Network - Very slow (Mocked out)\n  \nSynchronization between layers is hard and depends on the case so it's out of the scope for the samples. The chosen sync implementation is very simple:\n\n  - In every get operation:\n    - Return in-memory cache if available, or\n    - return info from disk\n    - return info from network \n  - Every write/delete operation will simply:\n    - Update cache\n    - Update local\n    - Update remote\n    \nNote that after the first request to the network, it's never hit again. In addition, in these examples, it's totally fine to use a Mock web service as a demonstration without the complication of setting up / talking to a real service.\n\n## Testing\n\n### Unit / Widget tests\n\nPlease include tests with your app! How easy it is to test an architecture is an important consideration when choosing which approach will work best for your project or team.\n\nYou do not need to write an exhaustive suite of Widget tests, but if the architecture lends itself to easy widget testing, please include a demonstration!\n\n### Integration Tests\n\nAll samples should pass the integration test suite. Please see the `integration_tests` folder for more information, and check out the `test_driver` folder in an existing example as a reference.\n\n## Routing\n\n  - App must have 2 named routes: \n    - `/` - Takes you to the main tabs screen\n    - `/addTodo` - Takes you to the add todo screen\n    \nTo get to the Details and Edit screens, you can either use a named route or push a new Route directly with the Navigator.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "bloc_flutter",
          "type": "tree",
          "content": null
        },
        {
          "name": "bloc_library",
          "type": "tree",
          "content": null
        },
        {
          "name": "blocs",
          "type": "tree",
          "content": null
        },
        {
          "name": "built_redux",
          "type": "tree",
          "content": null
        },
        {
          "name": "change_notifier_provider",
          "type": "tree",
          "content": null
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 3.119140625,
          "content": "# Contributor Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/"
        },
        {
          "name": "firebase_flutter_repository",
          "type": "tree",
          "content": null
        },
        {
          "name": "firebase_rtdb_flutter_repository",
          "type": "tree",
          "content": null
        },
        {
          "name": "firestore_redux",
          "type": "tree",
          "content": null
        },
        {
          "name": "freezed_provider_value_notifier",
          "type": "tree",
          "content": null
        },
        {
          "name": "frideos_library",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 10.8935546875,
          "content": "<!-- Copyright 2018 The Flutter Architecture Sample Authors. All rights reserved. -->\n<!-- Use of this source code is governed by the MIT license that can be found -->\n<!-- in the LICENSE file. -->\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Flutter Architecture Samples</title>\n  <link rel=\"shortcut icon\" href=\"assets/favicon.ico\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/png\" href=\"assets/favicon-32x32.png\"\n        sizes=\"32x32\"/>\n  <link rel=\"icon\" type=\"image/png\" href=\"assets/favicon-16x16.png\"\n        sizes=\"16x16\"/>\n  <link\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/milligram/1.3.0/milligram.css\"\n    rel=\"stylesheet\">\n  <link href=\"https://fonts.googleapis.com/css?family=Roboto\" rel=\"stylesheet\">\n  <style>\n    body {\n      color: rgb(17, 17, 17);\n    }\n\n    .site-title {\n      font-size: 4.2rem;\n      margin-bottom: 0.25rem;\n    }\n\n    .button-blue {\n      background-color: #3FBCCC;\n      border-color: #3FBCCC;\n    }\n\n    a {\n      color: #3FBCCC;\n    }\n\n    a:focus,\n    a:hover,\n    a:hover {\n      color: #028A9C;\n      border-color: #028A9C !important;\n    }\n\n    .button-blue:active,\n    .button-blue:focus,\n    .button-blue:hover {\n      background-color: #028A9C;\n      border-color: #028A9C;\n    }\n\n    .button-blue.button-outline:active,\n    .button-blue.button-outline:focus,\n    .button-blue.button-outline:hover {\n      border-color: #028A9C;\n      color: #028A9C;\n    }\n\n    .button-blue.button-clear,\n    .button-blue.button-outline {\n      background-color: transparent;\n      color: #3FBCCC;\n    }\n\n    .button-blue.button-clear {\n      border-color: transparent;\n    }\n\n    .site-subtitle {\n      color: rgb(120, 120, 120);\n      margin-bottom: 1.2rem;\n    }\n\n    .downloads {\n      margin-bottom: 2.4rem;\n    }\n\n    h2 {\n      color: rgb(70, 70, 70);\n    }\n\n    .site-header {\n      margin-top: 3.2rem;\n      margin-bottom: 1.2rem;\n    }\n\n    .container {\n      max-width: 80rem;\n    }\n\n    .logo {\n      max-width: 9rem;\n      margin-right: 2.4rem;\n      margin-bottom: 1.2rem;\n      padding-left: 1.0rem;\n    }\n\n    .card {\n      background-color: white;\n      border-radius: 0.25rem;\n      box-shadow: 0 1px 2px 0px rgba(0, 0, 0, 0.25);\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n      position: relative;\n      min-height: 180px;\n      padding: 2.4rem 2.4rem 1.2rem 2.4rem;\n      border: solid transparent;\n      border-bottom-color: transparent;\n      border-bottom-color: #3FBCCC;\n      margin-left: auto;\n      margin-right: auto;\n      margin-bottom: 4rem;\n    }\n\n    .site-title-container {\n      flex-basis: min-content;\n    }\n\n    .screenshot {\n      margin-bottom: 2.4rem;\n    }\n\n    .screenshot img {\n      -webkit-box-shadow: 0px 10px 20px 0px rgba(50, 50, 50, 0.4);\n      -moz-box-shadow: 0px 10px 20px 0px rgba(50, 50, 50, 0.4);\n      box-shadow: 0px 10px 20px 0px rgba(50, 50, 50, 0.4);\n    }\n\n    /* Larger than mobile screen */\n\n    @media (min-width: 40.0rem) {\n      .screenshot {\n        max-width: 16rem;\n        float: right;\n        margin-left: 2.4rem;\n      }\n    }\n\n    /* Larger than tablet screen */\n\n    @media (min-width: 80.0rem) {\n    }\n\n    /* Larger than desktop screen */\n\n    @media (min-width: 120.0rem) {\n    }\n\n    .web-demo {\n      border: 1px solid #3FBCCC;\n      padding: 1px 3px;\n      display: inline-block;\n      border-radius: 3px;\n      font-size: 0.8em;\n      margin-left: 10px;\n      text-transform: uppercase;\n    }\n\n    @media (prefers-color-scheme: dark) {\n      body {\n        background: #1E272C;\n        color: #d9e5fa;\n      }\n\n      .card {\n        background: #262f34;\n      }\n\n      .site-subtitle {\n        color: #9fa6b3;\n      }\n    }\n  </style>\n</head>\n\n<body>\n<div class=\"container\">\n  <div class=\"row site-header\">\n    <div class=\"logo\">\n      <img src=\"assets/logo.png\" alt=\"Flutter Architecture Samples Logo\">\n    </div>\n    <div class=\"site-title-container\">\n      <h1 class=\"site-title\">Flutter Architecture Samples</h1>\n      <h5 class=\"site-subtitle\">A gallery of app architectures</h5>\n    </div>\n  </div>\n\n  <aside class=\"screenshot\">\n    <picture>\n      <img src=\"assets/screenshot.png\" alt=\"Screenshot of the app\">\n    </picture>\n  </aside>\n  <div class=\"content\">\n    <div class=\"description\">\n      <p>\n        Flutter provides a lot of flexibility in deciding how to organize and\n        architect your apps. While this\n        freedom is very valuable,\n        it can also lead to apps with large classes, inconsistent naming\n        schemes, as well as mismatching or\n        missing\n        architectures. These types of issues can make testing, maintaining and\n        extending your apps\n        difficult.</p>\n      <p>The Flutter Architecture Samples project demonstrates strategies to\n        help solve or avoid these common\n        problems.\n        This project implements the same \"Todos\" app using different\n        architectural concepts and tools.</p>\n    </div>\n\n    <div class=\"downloads\">\n      <a\n        href=\"https://github.com/brianegan/flutter_architecture_samples/archive/master.zip\"\n        class=\"button button-blue\">Download</a>\n      <a href=\"https://github.com/brianegan/flutter_architecture_samples\"\n         class=\"button button-blue button-outline\">Github</a>\n    </div>\n\n    <div class=\"card\">\n      <h3>Samples</h3>\n      <ul>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/vanilla\">Vanilla\n            Lifting State Up\n          </a>\n          <a href=\"https://fas_vanilla.codemagic.app\" class=\"web-demo\">Web\n            Demo</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/inherited_widget\">InheritedWidget</a>\n          <a href=\"https://fas_inherited_widget.codemagic.app\" class=\"web-demo\">Web\n            Demo</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/change_notifier_provider\">ChangeNotifier\n            + Provider</a>\n          <a href=\"https://fas_change_notifier_provider.codemagic.app\"\n             class=\"web-demo\">Web\n            Demo</a>\n        </li>\n\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/bloc_flutter\">BLoC</a>\n          <a href=\"https://fas_bloc_flutter.codemagic.app\" class=\"web-demo\">Web\n            Demo</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/bloc_library\">Bloc\n            Library</a>\n          <a href=\"https://fas_bloc_library.codemagic.app\" class=\"web-demo\">Web\n            Demo</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/mobx\">Mobx</a>\n          <a href=\"https://fas_mobx.codemagic.app\" class=\"web-demo\">Web Demo</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/redux\">Redux</a>\n          <a href=\"https://fas_redux.codemagic.app\" class=\"web-demo\">Web\n            Demo</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/simple_bloc_flutter\">\"Simple\"\n            BLoC Example</a>\n          <a href=\"https://fas_simple_bloc.codemagic.app\" class=\"web-demo\">Web\n            Demo</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/mvi_flutter\">MVI</a>\n          <a href=\"https://fas_mvi.codemagic.app\" class=\"web-demo\">Web Demo</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/states_rebuilder\">states_rebuilder</a>\n          <a href=\"https://fas_states_rebuilder.codemagic.app\" class=\"web-demo\">Web Demo</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/built_redux\">built_redux</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/scoped_model\">scoped_model</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/firestore_redux\">Redux\n            and Firestore</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/mvu\">MVU</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/mvc\">MVC\n            Example</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/frideos_library\">Frideos\n            library</a>\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"card\">\n      <h3>Supporting code</h3>\n      <ul>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/integration_tests\">Integration\n            Tests</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/brianegan/flutter_architecture_samples/tree/master/example/todos_repository\">Todos\n            Repository</a>\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"card\">\n      <h3>Contributors</h3>\n      <ul>\n        <li>\n          <a href=\"https://github.com/brianegan\">Brian Egan</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/davidmarne\">David Marne</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/passsy\">Pascal Welsch</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/kinggolf\">Larry King</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/franklinharper\">Frank Harper</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/p69\">Pavel Shilyagov</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/mmcc007\">Maurice McCabe</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/leocavalcante\">Leo Cavalcante</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/AndriousSolutions\">Greg Perry</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/felangel\">Felix Angelov</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/frideosapps\">Francesco Mineo</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/pavanpodila\">Pavan Podila</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/kush3107\">Kushagra Saxena</a>\n        </li>\n        <li>\n          <a href=\"https://github.com/GIfatahTH\">Mellati Fateh</a>\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"copyright\">\n      <p> &copy; 2017\n        <a href=\"https://github.com/brianegan\">Brian Egan</a> and contributors.\n      </p>\n    </div>\n  </div>\n</div>\n</body>\n\n</html>\n"
        },
        {
          "name": "inherited_widget",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "line_count.md",
          "type": "blob",
          "size": 1.1611328125,
          "content": "# Line Counts\n\nThough not the only factor or even most important factor, the amount of code it\ntakes to achieve a working product is an important consideration when comparing\nframeworks.\n\nThis is an imperfect line count comparison -- some of the samples contain a bit\nmore functionality / are structured a bit differently than others -- and should\nbe taken with a grain of salt. All generated files, blank lines and comment \nlines are removed for this comparison.\n\nFor authors of frameworks or samples (hey, I'm one of those!): Please do not \ntake this comparison personally, nor should folks play \"Code Golf\" with the\nsamples to make them smaller, unless doing so improves the application overall.  \n  \n| *Sample* | *LOC (no comments)* |\n|--------|-------------------|\n| scoped_model | 778 |\n| mobx | 815 |\n| change_notifier_provider | 830 |\n| inherited_widget | 832 |\n| mvc | 842 |\n| vanilla | 842 |\n| frideos_library | 878 |\n| simple blocs | 1076 |\n| built_redux | 1172 |\n| mvu | 1191 |\n| bloc | 1194 |\n| bloc library | 1214 |\n| mvi | 1244 |\n| redux | 1362 |\n| firestore_redux | 1429 |\n\nNote: This file was generated on 2020-01-10 14:59:25.151846Z using `scripts/line_counter.dart`.  \n\n"
        },
        {
          "name": "mobx",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvc",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvi_base",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvi_flutter",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvu",
          "type": "tree",
          "content": null
        },
        {
          "name": "redux",
          "type": "tree",
          "content": null
        },
        {
          "name": "scoped_model",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "simple_bloc_flutter",
          "type": "tree",
          "content": null
        },
        {
          "name": "simple_blocs",
          "type": "tree",
          "content": null
        },
        {
          "name": "states_rebuilder",
          "type": "tree",
          "content": null
        },
        {
          "name": "todos_app_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "todos_repository_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "todos_repository_local_storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "vanilla",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}