{
  "metadata": {
    "timestamp": 1736710651683,
    "page": 30,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "flutterchina/flukit",
      "stars": 5755,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0830078125,
          "content": ".DS_Store\n.dart_tool/\n\n.packages\n.pub/\n.idea/\npubspec.lock\n\nbuild/\n\n.flutter-plugins\n"
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 1.62890625,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled.\n\nversion:\n  revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n  channel: stable\n\nproject_type: app\n\n# Tracks metadata for the flutter migrate command\nmigration:\n  platforms:\n    - platform: root\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: android\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: ios\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: linux\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: macos\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: web\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n    - platform: windows\n      create_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n      base_revision: ee4e09cce01d6f2d7f4baebd247fde02e5008851\n\n  # User provided section\n\n  # List of Local paths (relative to this file) that should be\n  # ignored by the migrate tool.\n  #\n  # Files that are not part of the templates will be ignored by default.\n  unmanaged_files:\n    - 'lib/main.dart'\n    - 'ios/Runner.xcodeproj/project.pbxproj'\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.3251953125,
          "content": "## [3.0.1]\n- support flutter 3.0\n\n## [2.0.1]\n- ScaleView：support PC\n- Swiper: support PC mouse events\n\n## [2.0.0 stable]\n- 2.0 first stable version\n## [2.0.0-beta5]\n- move examples to package dir.\n- optimize ScaleView\n- fix LogPanel bugs\n\n## [2.0.0-beta2]\n- Add lots of widgets.\n## [1.0.2]\n- Add InfiniteListView、GradientButton\n\n"
        },
        {
          "name": "README-EN.md",
          "type": "blob",
          "size": 4.646484375,
          "content": "[中文简体](README.md)|English\n# flukit\n\n*flukit* is a **Flutter UI Kit**。\n\n## Widgets\n\n| Widget                                     | Description                                                  |\n| ------------------------------------------ | ------------------------------------------------------------ |\n| AfterLayout                                | A widget can retrieve its render object after layout.        |\n| AccurateSizedBox                           | A box with a specified size for its child. It is similar to [SizedBox],  but the difference is SizedBox pass the constraints received from its parent to its child, but [AccurateSizedBox] not. |\n| AnimatedRotationBox                        | Rotates child forever                                        |\n| DoneWidget                                 | Done tip widget                                              |\n| GradientButton<br />ElevatedGradientButton | Button with gradient colors                                  |\n| GradientCircularProgressIndicator          | A circular progress indicator with gradient effect.          |\n| HitTestBlocker                             | A blocker by which we can intercept hit test flow.           |\n| KeepAliveWrapper                           | KeepAliveWrapper can keep the item(s) of scrollview alive.   |\n| LeftRightBox                               | A widget which supports left-right layout algorithm。        |\n| LayoutLogPrint                             | A helper widget which can print constraints information in debug mode. |\n| LogListenerScope                           | A stateful widget to listen redirected log events.           |\n| VerticalLogPanel                           | A widget to show redirected logs from `print`, which will divide the available display space vertically into two areas, and display the logs  below. |\n| LogPanel                                   | A widget to show redirected logs from `print`.               |\n| PullRefreshScope                           | A widget provides pull refresh scope. Typically, the child is a [CustomScrollView]. |\n| SliverPullRefreshIndicator                 | A indicator for PullRefreshScope.                            |\n| QuickScrollbar                             | A quick scrollbar for scroll views.                          |\n| Swiper                                     | A  scrollable list that works page by page automatically or manually,  and it also support loop playbacks. |\n| ScaleView                                  | Scale the child from `minScale` to  `maxScale` . support scale  and double click gesture. |\n| SliverFlexibleHeader                       | A sliver to provide a flexible header that its height can expand when user continue  dragging over scroll . Typically as the first child  of  [CustomScrollView]. |\n| SliverPersistentHeaderToBox                | A sliver like [SliverPersistentHeader], the difference is [SliverPersistentHeaderToBox]   can contain a box widget and use the height of its child directly. |\n| SliverHeaderDelegate                       | Delegate helper  for [SliverPersistentHeader]                |\n| SlideTransitionX                           | Animates the position of a widget relative to its normal position  ignoring the animation direction(always slide along one direction). Typically, is used in combination with [AnimatedSwitcher]. |\n| TranslateWithExpandedPaintingArea          | A widget that:  1. imposes different constraints on its child than it gets from   its parent, possibly allowing the child to overflow the parent.  2.  apply translate to its child (specified by [offset]). |\n| TurnBox                                    | Animates the rotation of a widget when [turns]  is changed.  |\n| WaterMark                                  | A widget that paints watermark.                              |\n\n## Tools\n\n| Tools                      | Description                                                  |\n| -------------------------- | ------------------------------------------------------------ |\n| ExtraInfoBoxConstraints    | A box constraints with extra information.                    |\n| SafeValueNotifier          | Make sure notifying is safe during build/layout/paint phase. |\n| RenderObjectAnimationMixin | Animation scheduling helper for RenderObject.                |\n\n\n## Contribution&Run demo\n\n### **Project dirs**\n\n```\nflukit\n\n\t--lib           //demo dir\n\t--package_src\n\t\t--lib\n\t\t\t--src  //widget dir\n```\n\n### **Run demo**\n\n```\nflutter run\n```\n[Demo is here](https://github.com/flutterchina/flukit/tree/main/lib/routes).\n\n### **Notice of submission**\n\nIf you add a new widget，please follow these rules:\n\n1. Add more details as possible in comments.\n2. Add demo in demo dir.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.2431640625,
          "content": "[English](README-EN.md)|中文简体\n\n# Flukit [![Pub](https://img.shields.io/pub/v/flukit.svg?style=flat-square)](https://pub.dartlang.org/packages/flukit)\n\n*flukit* （Flutter UI Kit）是一个Flutter Widget库。\n\n## 组件列表\n\n| Widget                                     | Description                                                  |\n| ------------------------------------------ | ------------------------------------------------------------ |\n| AfterLayout                                | 在布局结束后，可以拿到对应的RenderObject对象。非常实用的一个组件，需要慢慢体会。 |\n| AccurateSizedBox                           | 一个精确的SizedBox。SizedBox 会将父组件的约束传递给其子组件，所以有些时候子组件大小并不等于我们通过SizedBox指定的宽高，而 AccurateSizedBox 能很好解决这个问题。具体见示例。 |\n| AnimatedRotationBox                        | Rotates child forever                                        |\n| DoneWidget                                 | 完成提示组件（执行一个打勾动画）                             |\n| GradientButton<br />ElevatedGradientButton | 背景色渐变按钮                                               |\n| GradientCircularProgressIndicator          | 一个支持颜色渐变的圆形进度指示器                             |\n| HitTestBlocker                             | 通过该组件可以拦截 hit test 流程。                           |\n| KeepAliveWrapper                           | 包括可滚动组件的子组件后，该子组件将会被缓存，意味着即使滑出屏幕也不会被销毁。 |\n| LeftRightBox                               | 支持左-右布局的组件，不会有文本溢出，右组件最多占总显示宽度的一半。 |\n| LayoutLogPrint                             | 一个帮助组件：在调试模式下可以将父组件传递的约束信息打印出来。 |\n| LogListenerScope                           | 监听是否有日志（print）到来。是一个调试工具，可以拦截应用内print的输出然后显示在 UI 上，具体见示例demo. |\n| VerticalLogPanel                           | 显示`print`输出的log。它会将显示区域分为上下两部分，子组件显示在上面，日志面板显示在下面。 |\n| LogPanel                                   | 显示`print`输出的log.                                        |\n| PullRefreshScope                           | 下拉刷新（和flutter自带的有两点不同：PullRefreshScope 是手指抬起后才刷新，另外刷新完成后返回时会执行动画） |\n| SliverPullRefreshIndicator                 | 下拉舒新指示器，配合PullRefreshScope 使用。                  |\n| QuickScrollbar                             | 可拖动的滚动条                                               |\n| Swiper                                     | 一个轮播组件                                                 |\n| ScaleView                                  | 可以对子组件进行缩放（支持双指伸缩、双击）                   |\n| SliverFlexibleHeader                       | 一个随着用户下拉，高度可以伸缩的 sliver header，通常为 CustomScrollView 的第一子sliver。常见的场景是微信朋友圈个人主页顶部图下拉时的弹性效果。 |\n| SliverPersistentHeaderToBox                | 和 [SliverPersistentHeader]功能类似，但不同是[SliverPersistentHeaderToBox]   能够直接包含一个盒模型子组件（Box widget），并且高度会使用子组件高度。 |\n| SliverHeaderDelegate                       | [SliverPersistentHeader] 的帮助类，用于快速创建delegate 。   |\n| SlideTransitionX                           | 实现同向滑动效果，通常和[AnimatedSwitcher]一起使用，具体效果见示例demo. |\n| TranslateWithExpandedPaintingArea          | 可以将子组件沿着某个方向平移x像素，平移后，反方向不会出现空白。原理是该组件允许子组件的绘制空间大小在平移方向超过当前显示空间x像素。具体效果见示例demo. |\n| TurnBox                                    | 可按任意角度旋转子组件，旋转过程执行动画。                   |\n| WaterMark                                  | 水印组件                                                     |\n\n## Tools\n\n| Tools                      | Description                                                  |\n| -------------------------- | ------------------------------------------------------------ |\n| ExtraInfoBoxConstraints    | 可以传递额外信息的 BoxConstraints。                          |\n| SafeValueNotifier          | 在build/layout/paint 阶段发出通知时也能确保ValueListenableBuilder正常更新。 |\n| RenderObjectAnimationMixin | 如果要在RenderObject中执行动画，则该mixin会非常有用，它封装了动画调度功能。 |\n\n\n\n## Demo部分截图（只有极少数有图片，待补充）\n\n<img src=\"./docs/images/quick_scroll_bar.gif\" width=\"320\"/>\n<img src=\"./docs/images/animated_rotation_box.gif\" width=\"320\"/>\n<img src=\"./docs/images/gradient_circular_progress_indicator.gif\" width=\"320\"/>\n<img src=\"./docs/images/swiper.gif\" width=\"320\"/>\n<img src=\"./docs/images/photoview.gif\" width=\"320\"/>\n<img src=\"./docs/images/raised_button.png\" width=\"320\"/>\n\n\n## 贡献代码须知\n\n### 工程目录\n\n```\nflukit\n\t--lib           //示例目录\n\t--package_src\n\t  --lib\n\t   --example\n\t   --src  //widget库目录\n\t--docs //文档目录，文档必须是markdown格式\n      --images //文档用到的图片都放在这里，如截图\n      --chs //中文文档目录\n      --en //英文文档目录\n```\n\n### 运行Demo\n\n[示例目录](https://github.com/flutterchina/flukit/tree/main/package_src/lib/example).\n\n```\nflutter run\n```\n\n### **提交代码须知**\n\n如果你添加了一个组件，请遵循如下规则：\n\n1. 尽可能多的添加注释，文档注释为三斜线\"///\"\n2. 添加一个新的Widget后，请在Demo目录添加使用示例，示例应该纯净无干扰，如果一个widget需要多个示例，可以创建一个二级页面，可以参照水印组件 WaterMark 的示例。\n3. 如果可以，请尽可能在doc 目录下为widget添加使用文档，文档必须是markdown格式，文档名应与widget文件名同名\n\n\n\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 1.4189453125,
          "content": "# This file configures the analyzer, which statically analyzes Dart code to\n# check for errors, warnings, and lints.\n#\n# The issues identified by the analyzer are surfaced in the UI of Dart-enabled\n# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be\n# invoked from the command line by running `flutter analyze`.\n\n# The following line activates a set of recommended lints for Flutter apps,\n# packages, and plugins designed to encourage good coding practices.\ninclude: package:flutter_lints/flutter.yaml\n\nlinter:\n  # The lint rules applied to this project can be customized in the\n  # section below to disable rules from the `package:flutter_lints/flutter.yaml`\n  # included above or to enable additional rules. A list of all available lints\n  # and their documentation is published at\n  # https://dart-lang.github.io/linter/lints/index.html.\n  #\n  # Instead of disabling a lint rule for the entire project in the\n  # section below, it can also be suppressed for a single line of code\n  # or a specific dart file by using the `// ignore: name_of_lint` and\n  # `// ignore_for_file: name_of_lint` syntax on the line or in the file\n  # producing the lint.\n  rules:\n    # avoid_print: false  # Uncomment to disable the `avoid_print` rule\n    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule\n\n# Additional information about this file can be found at\n# https://dart.dev/guides/language/analysis-options\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "c.sh",
          "type": "blob",
          "size": 0.4931640625,
          "content": "#!/bin/sh\ngit filter-branch --env-filter  '\nOLD_EMAIL=\"\"\nCORRECT_NAME=\"wendux\"\nCORRECT_EMAIL=\"824783146@qq.com\"\nif [ \"$GIT_COMMITTER_EMAIL\" = \"$OLD_EMAIL\" ]\nthen\n    export GIT_COMMITTER_NAME=\"$CORRECT_NAME\"\n    export GIT_COMMITTER_EMAIL=\"$CORRECT_EMAIL\"\nfi\nif [ \"$GIT_AUTHOR_EMAIL\" = \"$OLD_EMAIL\" ]\nthen\n    export GIT_AUTHOR_NAME=\"$CORRECT_NAME\"\n    export GIT_AUTHOR_EMAIL=\"$CORRECT_EMAIL\"\nfi\n' --original -f --tag-name-filter  cat -- --branches --tags\n\n#git push --force --tags origin 'refs/heads/*'\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "flukit.iml",
          "type": "blob",
          "size": 1.2705078125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/lib\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/test\" isTestSource=\"true\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.dart_tool\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.idea\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/package_src/.pub\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/package_src/build\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/package_src/packages\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/package_src/test/packages\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/packages\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/test/packages\" />\n    </content>\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"Dart SDK\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Flutter Plugins\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Dart Packages\" level=\"project\" />\n  </component>\n</module>"
        },
        {
          "name": "flukit_android.iml",
          "type": "blob",
          "size": 1.4169921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"android\" name=\"Android\">\n      <configuration>\n        <option name=\"ALLOW_USER_CONFIGURATION\" value=\"false\" />\n        <option name=\"GEN_FOLDER_RELATIVE_PATH_APT\" value=\"/android/gen\" />\n        <option name=\"GEN_FOLDER_RELATIVE_PATH_AIDL\" value=\"/android/gen\" />\n        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/android/AndroidManifest.xml\" />\n        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/android/res\" />\n        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/android/assets\" />\n        <option name=\"LIBS_FOLDER_RELATIVE_PATH\" value=\"/android/libs\" />\n        <option name=\"PROGUARD_LOGS_FOLDER_RELATIVE_PATH\" value=\"/android/proguard_logs\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$/android\">\n      <sourceFolder url=\"file://$MODULE_DIR$/android/app/src/main/java\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/android/gen\" isTestSource=\"false\" generated=\"true\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"Android API 25 Platform\" jdkType=\"Android SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"Flutter for Android\" level=\"project\" />\n  </component>\n</module>\n"
        },
        {
          "name": "imgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ios",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "macos",
          "type": "tree",
          "content": null
        },
        {
          "name": "package_src",
          "type": "tree",
          "content": null
        },
        {
          "name": "publish.sh",
          "type": "blob",
          "size": 0.140625,
          "content": "cp README.md package_src/README.md\ncp README-EN.md package_src/README-EN.md\ncp CHANGELOG.md package_src/CHANGELOG.md\ncd package_src\npub publish\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 2.501953125,
          "content": "name: flukitdemo\ndescription: Flutter UI Kit\n\n# The following defines the version and build number for your application.\n# A version number is three numbers separated by dots, like 1.2.43\n# followed by an optional build number separated by a +.\n# Both the version and the builder number may be overridden in flutter\n# build by specifying --build-name and --build-number, respectively.\n# Read more about versioning at semver.org.\nversion: 1.0.0+1\n\nenvironment:\n  sdk: \">=2.14.0 <3.0.0\"\n\ndependencies:\n  flutter:\n    sdk: flutter\n  flukit:\n    path: package_src\n\n  # The following adds the Cupertino Icons font to your application.\n  # Use with the CupertinoIcons class for iOS style icons.\n  cupertino_icons: ^1.0.3\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n\n  flutter_lints: ^1.0.0\n\n# For information on the generic Dart part of this file, see the\n# following page: https://www.dartlang.org/tools/pub/pubspec\n\n# The following section is specific to Flutter.\nflutter:\n\n  # The following line ensures that the Material Icons font is\n  # included with your application, so that you can use the icons in\n  # the material Icons class.\n  uses-material-design: true\n  fonts:\n    - family: myIcon\n      fonts:\n         - asset: assets/fonts/iconfont.ttf\n\n  # To add assets to your application, add an assets section, like this:\n\n  assets:\n   - imgs/avatar.png\n   - imgs/sea.png\n   - imgs/star.jpg\n   - imgs/cat.jpg\n   - imgs/horse.jpg\n   - imgs/road.jpg\n\n   - assets/data/china.json\n   - assets/data/contacts.json\n\n  #  - imgs/a_dot_burr.jpeg\n  #  - imgs/a_dot_ham.jpeg\n\n  # An image asset can refer to one or more resolution-specific \"variants\", see\n  # https://flutter.io/assets-and-images/#resolution-aware.\n\n  # For details regarding adding assets from package dependencies, see\n  # https://flutter.io/assets-and-images/#from-packages\n\n  # To add custom fonts to your application, add a fonts section here,\n  # in this \"flutter\" section. Each entry in this list should have a\n  # \"family\" key with the font family name, and a \"fonts\" key with a\n  # list giving the asset and other descriptors for the font. For\n  # example:\n  # fonts:\n  #   - family: Schyler\n  #     fonts:\n  #       - asset: fonts/Schyler-Regular.ttf\n  #       - asset: fonts/Schyler-Italic.ttf\n  #         style: italic\n  #   - family: Trajan Pro\n  #     fonts:\n  #       - asset: fonts/TrajanPro.ttf\n  #       - asset: fonts/TrajanPro_Bold.ttf\n  #         weight: 700\n  #\n  # For details regarding fonts from package dependencies,\n  # see https://flutter.io/custom-fonts/#from-packages\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}