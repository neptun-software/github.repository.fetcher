{
  "metadata": {
    "timestamp": 1736710650791,
    "page": 28,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "samarthagarwal/FlutterScreens",
      "stars": 5811,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.73046875,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n**/ios/Flutter/.last_build_id\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\n/build/\n\n# Web related\nlib/generated_plugin_registrant.dart\n\n# Symbolication related\napp.*.symbols\n\n# Obfuscation related\napp.*.map.json\n\n# Android Studio will place build artifacts here\n/android/app/debug\n/android/app/profile\n/android/app/release\n/android/\n/ios/\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".metadata",
          "type": "blob",
          "size": 0.2978515625,
          "content": "# This file tracks properties of this Flutter project.\n# Used by Flutter tool to assess capabilities and perform upgrades etc.\n#\n# This file should be version controlled and should not be manually edited.\n\nversion:\n  revision: f4abaa0735eba4dfd8f33f73363911d63931fe03\n  channel: stable\n\nproject_type: app\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.56640625,
          "content": "# Flutter Screens\n\nA collection of Login Screens, Buttons, Loaders and Widgets with attractive UIs, built with Flutter, ready to be used in your applications.\n\n###### Last Update: Added SlideListView Widget\n\n## Screenshots And Usage\n\n## SlideListView\n\nA widget that can be used to present two different views that can be toggled using a Floating Action Button. The views toggle with a nice cube-rotation animation.\n\n![Screenshots on iOS](./screenshots/slide_list_view.gif)\n\n## Rating\n\n![Screenshots on iOS](./screenshots/rating.gif)\n\n## Loaders\n\n![Screenshots on iOS](./screenshots/loaders.gif)\n\n#### ColorLoaders\n\n| ![Screenshot](./screenshots/color_loader.gif) Color Loader 1 | ![Screenshot](./screenshots/color_loader_2.gif) Color Loader 2 | ![Screenshot](./screenshots/color_loader_3.gif) Color Loader 3 |\n|-----------------------------------------------|-----------------------------------------------|-----------------------------------------------|\n| ![Screenshot](./screenshots/color_loader_4.gif) Color Loader 4 | ![Screenshot](./screenshots/color_loader_5.gif) Color Loader 5 |                                               |\n\n#### FlipLoaders\n_Example #1_\n```\nFlipLoader(\n  loaderBackground: Colors.red,\n  iconColor: Colors.white,\n  icon: Icons.email,\n  animationType: \"full_flip\"),\n```\n_Example #2_\n```\nFlipLoader(\n  loaderBackground: Colors.blueAccent,\n  iconColor: Colors.orangeAccent,\n  icon: Icons.subway,\n  animationType: \"half_flip\",\n  rotateIcon: true,\n),\n```\n_Example #3_\n```\nFlipLoader(\n  loaderBackground: Colors.green,\n  iconColor: Colors.white,\n  icon: Icons.wifi,\n  animationType: \"half_flip\",\n  shape: \"circle\",\n  rotateIcon: false,\n),\n```\n___\n###### I am working on more loaders. These loaders will also be updated. Thanks to [jakeleveroni](https://github.com/jakeleveroni) for parameterizing the FlipLoader. \n___\n\n## Buttons\n\n![Screenshots on iOS](./screenshots/buttons1.png)\n\n\n#### Simple Round Button\n\n```\nSimpleRoundButton(\n    backgroundColor: Colors.redAccent,\n    buttonText: Text(\"LOGIN\", \n        style: TextStyle(\n            color: Colors.white\n        ),\n    ),\n    textColor: Colors.white,\n)\n```\n\n#### Simple Round Icon Button \n\n```\nSimpleRoundIconButton(\n    backgroundColor: Colors.orangeAccent,\n    buttonText: Text(\"SEND EMAIL\", \n        style: TextStyle(\n            color: Colors.white\n        ),\n    ),        \n    textColor: Colors.white,\n    icon: Icon(Icons.email),\n)\n```\n\n#### Simple Round Icon Only Button \n```\nSimpleRoundOnlyIconButton(\n  backgroundColor: Colors.blueAccent,\n  icon: Icon(Icons.phone),\n  iconAlignment: Alignment.center,\n)\n```\n___\n## Login Screens\n\n### Login Screen 1\n\n![Screenshots on Android and iOS](./screenshots/login_screen_1.png)\n\n##### Usage\n\n```\nContainer(\n\tchild: LoginScreen1(\n\tprimaryColor: Color(0xFF4aa0d5),\n\tbackgroundColor: Colors.white,\n\tbackgroundImage: new AssetImage(\"assets/images/full-bloom.png\"),\n    ),\n)\n```\n\n ### Login Screen 2\n\n ![Screenshots on Android and iOS](./screenshots/login_screen_2.png)\n\n ##### Usage\n\n ```\n Container(\n \tchild: LoginScreen2(\n        backgroundColor1: Color(0xFF444152),\n        backgroundColor2: Color(0xFF6f6c7d),\n        highlightColor: Color(0xfff65aa3),\n        foregroundColor: Colors.white,\n        logo: new AssetImage(\"assets/images/full-bloom.png\"),\n        ),\n    )\n ```\n\n   ### Login Screen 3\n\n   ![Screenshots on Android and iOS](./screenshots/login_screen_3.gif)\n\n   ##### Usage\n\n   ```\n   Container(\n   \tchild: LoginScreen3(),\n   )\n   ```\n\n  ### Login Screen 4\n\n ![Screenshot on Android](./screenshots/login_screen_4.jpeg)\n\n ##### Usage\n\n ```\n Container(\n \tchild: LoginScreen4(\n        primaryColor: Color(0xff18203d),\n        secondaryColor: Color(0xff232c51),\n        logoGreen: Color(0xff25bcbb),\n        ),\n    )\n ```\n\n   ### Login Screen 5\n\n ![Screenshot on Android](./screenshots/login_screen_5.jpeg)\n\n ##### Usage\n\n ```\n Container(\n \tchild: LoginScreen5(\n        avatarImage: \"path/to/image.png\",\n        onLoginClick: () {\n          // when login button is pressed\n        },\n        googleSignIn: () {\n          // when google signin button is pressed\n        },\n        navigatePage: () {\n          // change to signup screen\n        }\n        ),\n    )\n ```\n\n  ### Login Screen 6\n\n ![Screenshot on Android](./screenshots/login_screen_6.jpeg)\n\n ##### Usage\n\n ```\n Container(\n \tchild: LoginScreen6(\n        onLoginClick: () {\n          // when login button is pressed\n        },\n        navigatePage: () {\n          // change to signup screen\n        }\n        ),\n    )\n ```\n\n  ## Contribution and Donation\n\n  Feel free to contribute. If you like the project and want to donate, [click here](https://www.paypal.me/samarthagarwal).\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "example_1",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "flutter_login_screens_android.iml",
          "type": "blob",
          "size": 1.4169921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"android\" name=\"Android\">\n      <configuration>\n        <option name=\"ALLOW_USER_CONFIGURATION\" value=\"false\" />\n        <option name=\"GEN_FOLDER_RELATIVE_PATH_APT\" value=\"/android/gen\" />\n        <option name=\"GEN_FOLDER_RELATIVE_PATH_AIDL\" value=\"/android/gen\" />\n        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/android/AndroidManifest.xml\" />\n        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/android/res\" />\n        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/android/assets\" />\n        <option name=\"LIBS_FOLDER_RELATIVE_PATH\" value=\"/android/libs\" />\n        <option name=\"PROGUARD_LOGS_FOLDER_RELATIVE_PATH\" value=\"/android/proguard_logs\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$/android\">\n      <sourceFolder url=\"file://$MODULE_DIR$/android/app/src/main/java\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/android/gen\" isTestSource=\"false\" generated=\"true\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"Android API 25 Platform\" jdkType=\"Android SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"Flutter for Android\" level=\"project\" />\n  </component>\n</module>\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pubspec.lock",
          "type": "blob",
          "size": 3.3603515625,
          "content": "# Generated by pub\n# See https://dart.dev/tools/pub/glossary#lockfile\npackages:\n  async:\n    dependency: transitive\n    description:\n      name: async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.5.0\"\n  boolean_selector:\n    dependency: transitive\n    description:\n      name: boolean_selector\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  characters:\n    dependency: transitive\n    description:\n      name: characters\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0\"\n  charcode:\n    dependency: transitive\n    description:\n      name: charcode\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0\"\n  clock:\n    dependency: transitive\n    description:\n      name: clock\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0\"\n  collection:\n    dependency: transitive\n    description:\n      name: collection\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.15.0\"\n  cupertino_icons:\n    dependency: \"direct main\"\n    description:\n      name: cupertino_icons\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.1.2\"\n  fake_async:\n    dependency: transitive\n    description:\n      name: fake_async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0\"\n  flutter:\n    dependency: \"direct main\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_test:\n    dependency: \"direct dev\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  matcher:\n    dependency: transitive\n    description:\n      name: matcher\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.12.10\"\n  meta:\n    dependency: transitive\n    description:\n      name: meta\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.0\"\n  path:\n    dependency: transitive\n    description:\n      name: path\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.0\"\n  sky_engine:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.99\"\n  source_span:\n    dependency: transitive\n    description:\n      name: source_span\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.0\"\n  stack_trace:\n    dependency: transitive\n    description:\n      name: stack_trace\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.10.0\"\n  stream_channel:\n    dependency: transitive\n    description:\n      name: stream_channel\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  string_scanner:\n    dependency: transitive\n    description:\n      name: string_scanner\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0\"\n  term_glyph:\n    dependency: transitive\n    description:\n      name: term_glyph\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0\"\n  test_api:\n    dependency: transitive\n    description:\n      name: test_api\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.2.19\"\n  typed_data:\n    dependency: transitive\n    description:\n      name: typed_data\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.0\"\n  vector_math:\n    dependency: transitive\n    description:\n      name: vector_math\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\nsdks:\n  dart: \">=2.12.0 <3.0.0\"\n"
        },
        {
          "name": "pubspec.yaml",
          "type": "blob",
          "size": 2,
          "content": "name: flutter_login_screens\ndescription: A new Flutter application.\nversion: \"1.0.0+1\"\nenvironment:\n  sdk: '>=2.12.0 <3.0.0'\ndependencies:\n  flutter:\n    sdk: flutter\n\n  # The following adds the Cupertino Icons font to your application.\n  # Use with the CupertinoIcons class for iOS style icons.\n  cupertino_icons: ^0.1.2\n\ndev_dependencies:\n  flutter_test:\n    sdk: flutter\n\n\n# For information on the generic Dart part of this file, see the\n# following page: https://www.dartlang.org/tools/pub/pubspec\n\n# The following section is specific to Flutter.\nflutter:\n\n  # The following line ensures that the Material Icons font is\n  # included with your application, so that you can use the icons in\n  # the material Icons class.\n  uses-material-design: true\n\n  # To add assets to your application, add an assets section, like this:\n  assets:\n    - assets/images/full-bloom.png\n    - assets/images/mountains.jpeg\n    - assets/images/mountains.jpg\n  # - images/a_dot_ham.jpeg\n\n  # An image asset can refer to one or more resolution-specific \"variants\", see\n  # https://flutter.io/assets-and-images/#resolution-aware.\n\n  # For details regarding adding assets from package dependencies, see\n  # https://flutter.io/assets-and-images/#from-packages\n\n  # To add custom fonts to your application, add a fonts section here,\n  # in this \"flutter\" section. Each entry in this list should have a\n  # \"family\" key with the font family name, and a \"fonts\" key with a\n  # list giving the asset and other descriptors for the font. For\n  # example:\n  fonts:\n      - family: icomoon\n        fonts:\n        - asset: assets/fonts/IcoMoon.ttf\n  # fonts:\n  #   - family: Schyler\n  #     fonts:\n  #       - asset: fonts/Schyler-Regular.ttf\n  #       - asset: fonts/Schyler-Italic.ttf\n  #         style: italic\n  #   - family: Trajan Pro\n  #     fonts:\n  #       - asset: fonts/TrajanPro.ttf\n  #       - asset: fonts/TrajanPro_Bold.ttf\n  #         weight: 700\n  #\n  # For details regarding fonts from package dependencies,\n  # see https://flutter.io/custom-fonts/#from-packages\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}