{
  "metadata": {
    "timestamp": 1736710660260,
    "page": 13,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjE1",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "felangel/bloc",
      "stars": 11935,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.9892578125,
          "content": "# Miscellaneous\n*.class\n*.lock\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Visual Studio Code related\n.classpath\n.project\n.settings/\n.vscode/*\n\n# Flutter repo-specific\n/bin/cache/\n/bin/mingit/\n/dev/benchmarks/mega_gallery/\n/dev/bots/.recipe_deps\n/dev/bots/android_tools/\n/dev/docs/doc/\n/dev/docs/flutter.docs.zip\n/dev/docs/lib/\n/dev/docs/pubspec.yaml\n/dev/integration_tests/**/xcuserdata\n/dev/integration_tests/**/Pods\n/packages/flutter/coverage/\nversion\n\n# packages file containing multi-root paths\n.packages.generated\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.flutter-plugins-dependencies\n.packages\n.pub-cache/\n.pub/\nbuild/\nlinked_*.ds\nunlinked.ds\nunlinked_spec.ds\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n**/android/key.properties\n*.jks\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Flutter.podspec\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/Flutter/flutter_export_environment.sh\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Coverage\ncoverage/\ncoverage_badge.svg\n.test_coverage.dart\n*.lcov\nnohup.out\n\n# Mason\nmason-lock.json\n.mason\n\n# Exceptions to above rules.\n!.vscode/launch.json\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n!/dev/ci/**/Gemfile.lock"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2734375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at felangelov@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.2080078125,
          "content": "# Contributing to Bloc\n\nüëçüéâ First off, thanks for taking the time to contribute! üéâüëç\n\nThe following is a set of guidelines for contributing to Bloc and its packages.\nThese are mostly guidelines, not rules. Use your best judgment,\nand feel free to propose changes to this document in a pull request.\n\n## Proposing a Change\n\nIf you intend to change the public API, or make any non-trivial changes\nto the implementation, we recommend filing an issue.\nThis lets us reach an agreement on your proposal before you put significant\neffort into it.\n\nIf you‚Äôre only fixing a bug, it‚Äôs fine to submit a pull request right away\nbut we still recommend to file an issue detailing what you‚Äôre fixing.\nThis is helpful in case we don‚Äôt accept that specific fix but want to keep\ntrack of the issue.\n\n## Creating a Pull Request\n\nBefore creating a pull request please:\n\n1. Fork the repository and create your branch from `master`.\n1. Install all dependencies (`flutter packages get` or `pub get`).\n1. Squash your commits and ensure you have a meaningful commit message.\n1. If you‚Äôve fixed a bug or added code that should be tested, add tests!\n   Pull Requests without 100% test coverage will not be approved.\n1. Ensure the test suite passes.\n1. If you've changed the public API, make sure to update/add documentation.\n1. Format your code (`dart format .`).\n1. Analyze your code (`dart analyze --fatal-infos --fatal-warnings .`).\n1. Create the Pull Request.\n1. Verify that all status checks are passing.\n\nWhile the prerequisites above must be satisfied prior to having your\npull request reviewed, the reviewer(s) may ask you to complete additional\ndesign work, tests, or other changes before your pull request can be ultimately\naccepted.\n\n## Contributing to Documentation\n\nIf you would like to contribute to the [documentation](https://bloclibrary.dev)\nplease follow the same process for \"Creating a Pull Request\" and double check\nthat your changes look good by running the docs locally.\n\n```sh\n# Change directories into docs\ncd ./docs\n\n# Install dependencies\nnpm install\n\n# Start the dev server\nnpm start\n\n# Navigate to http://localhost:4321 in your browser\n```\n\nIf you wish to add translations, ensure the locale is included in the [locales list](https://github.com/felangel/bloc/blob/8a714a6923a6480032319b45f461d1f9ccd025de/docs/astro.config.mjs#L7) and create the translated `mdx` file in the corresponding subdirectory within `docs/src/content/docs/<lang>`.\n\nRefer to [this pull request](https://github.com/felangel/bloc/pull/4084) for an example.\n\n## Adding an example\n\nExamples live in the `examples` folder.\n\nWhen you're adding an example, make sure to add CI checks for it in\n[main.yaml](https://github.com/felangel/bloc/blob/master/.github/workflows/main.yaml):\n\n- For a Flutter example, add it to the `folder` list in the `examples-flutter`\n  step.\n- For a web example, add it to the `folder` list in the `examples-web` step.\n- For a pure Dart example, add it to the `folder` list in the `examples-pure`\n  step.\n\n## Getting in Touch\n\nIf you want to just ask a question or get feedback on an idea you can post it\non [Discord](https://discord.gg/bloc).\n\n## License\n\nBy contributing to Bloc, you agree that your contributions will be licensed\nunder its [MIT license](LICENSE).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2024 Felix Angelov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.1064453125,
          "content": "<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/logos/bloc.png\" height=\"100\" alt=\"Bloc\" />\n</p>\n\n<p align=\"center\">\n<a href=\"https://github.com/felangel/bloc/actions\"><img src=\"https://github.com/felangel/bloc/workflows/build/badge.svg\" alt=\"build\"></a>\n<a href=\"https://codecov.io/gh/felangel/bloc\"><img src=\"https://codecov.io/gh/felangel/Bloc/branch/master/graph/badge.svg\" alt=\"codecov\"></a>\n<a href=\"https://github.com/felangel/bloc\"><img src=\"https://img.shields.io/github/stars/felangel/bloc.svg?style=flat&logo=github&colorB=deeppink&label=stars\" alt=\"Star on Github\"></a>\n<a href=\"https://flutter.dev/docs/development/data-and-backend/state-mgmt/options#bloc--rx\"><img src=\"https://img.shields.io/badge/flutter-website-deepskyblue.svg\" alt=\"Flutter Website\"></a>\n<a href=\"https://github.com/Solido/awesome-flutter#standard\"><img src=\"https://img.shields.io/badge/awesome-flutter-blue.svg?longCache=true\" alt=\"Awesome Flutter\"></a>\n<a href=\"http://fluttersamples.com\"><img src=\"https://img.shields.io/badge/flutter-samples-teal.svg?longCache=true\" alt=\"Flutter Samples\"></a>\n<a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/badge/license-MIT-purple.svg\" alt=\"License: MIT\"></a>\n<a href=\"https://discord.gg/bloc\"><img src=\"https://img.shields.io/discord/649708778631200778.svg?logo=discord&color=blue\" alt=\"Discord\"></a>\n<a href=\"https://github.com/felangel/bloc\"><img src=\"https://tinyurl.com/bloc-library\" alt=\"Bloc Library\"></a>\n</p>\n\n---\n\nA predictable state management library that helps implement the BLoC design pattern.\n\n| Package                                                                                    | Pub                                                                                                            |\n| ------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------- |\n| [bloc](https://github.com/felangel/bloc/tree/master/packages/bloc)                         | [![pub package](https://img.shields.io/pub/v/bloc.svg)](https://pub.dev/packages/bloc)                         |\n| [bloc_test](https://github.com/felangel/bloc/tree/master/packages/bloc_test)               | [![pub package](https://img.shields.io/pub/v/bloc_test.svg)](https://pub.dev/packages/bloc_test)               |\n| [bloc_concurrency](https://github.com/felangel/bloc/tree/master/packages/bloc_concurrency) | [![pub package](https://img.shields.io/pub/v/bloc_concurrency.svg)](https://pub.dev/packages/bloc_concurrency) |\n| [bloc_lint](https://github.com/felangel/bloc/tree/master/packages/bloc_lint)               | [![pub package](https://img.shields.io/pub/v/bloc_lint.svg)](https://pub.dev/packages/bloc_lint)               |\n| [flutter_bloc](https://github.com/felangel/bloc/tree/master/packages/flutter_bloc)         | [![pub package](https://img.shields.io/pub/v/flutter_bloc.svg)](https://pub.dev/packages/flutter_bloc)         |\n| [angular_bloc](https://github.com/felangel/bloc/tree/master/packages/angular_bloc)         | [![pub package](https://img.shields.io/pub/v/angular_bloc.svg)](https://pub.dev/packages/angular_bloc)         |\n| [hydrated_bloc](https://github.com/felangel/bloc/tree/master/packages/hydrated_bloc)       | [![pub package](https://img.shields.io/pub/v/hydrated_bloc.svg)](https://pub.dev/packages/hydrated_bloc)       |\n| [replay_bloc](https://github.com/felangel/bloc/tree/master/packages/replay_bloc)           | [![pub package](https://img.shields.io/pub/v/replay_bloc.svg)](https://pub.dev/packages/replay_bloc)           |\n\n---\n\n## Sponsors\n\nOur top sponsors are shown below! [[Become a Sponsor](https://github.com/sponsors/felangel)]\n\n<table style=\"background-color: white; border: 1px solid black\">\n    <tbody>\n        <tr>\n            <td align=\"center\" style=\"border: 1px solid black\">\n                <a href=\"https://shorebird.dev\"><img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/sponsors/shorebird.png\" width=\"225\"/></a>\n            </td>\n            <td align=\"center\" style=\"border: 1px solid black\">\n                <a href=\"https://www.monterail.com/services/flutter-development/?utm_source=bloc&utm_medium=logo&utm_campaign=flutter\"><img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/sponsors/monterail.png\" width=\"225\"/></a>\n            </td>\n            <td align=\"center\" style=\"border: 1px solid black\">\n                <a href=\"https://getstream.io/chat/flutter/tutorial/?utm_source=Github&utm_medium=Github_Repo_Content_Ad&utm_content=Developer&utm_campaign=Github_Jan2022_FlutterChat&utm_term=bloc\"><img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/sponsors/stream.png\" width=\"225\"/></a>\n            </td>\n        </tr>\n        <tr>\n            <td align=\"center\" style=\"border: 1px solid black\">\n                <a href=\"https://www.miquido.com/flutter-development-company/?utm_source=github&utm_medium=sponsorship&utm_campaign=bloc-silver-tier&utm_term=flutter-development-company&utm_content=miquido-logo\"><img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/sponsors/miquido.png\" width=\"225\"/></a>\n            </td>            \n            <td align=\"center\" style=\"border: 1px solid black\">\n                <a href=\"https://www.netguru.com/services/flutter-app-development?utm_campaign=%5BS%5D%5BMob%5D%20Flutter&utm_source=github&utm_medium=sponsorship&utm_term=bloclibrary\"><img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/sponsors/netguru.png\" width=\"225\"/></a>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n---\n\n## Overview\n\n<img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/diagrams/bloc_architecture.png\" width=\"500\" alt=\"Bloc Architecture\"></img>\n\nThe goal of this library is to make it easy to separate _presentation_ from _business logic_, facilitating testability and reusability.\n\n## Documentation\n\n- [Official Documentation](https://bloclibrary.dev)\n- [Bloc Package](https://github.com/felangel/bloc/tree/master/packages/bloc/README.md)\n- [Bloc Test Package](https://github.com/felangel/bloc/tree/master/packages/bloc_test/README.md)\n- [Bloc Concurrency Package](https://github.com/felangel/bloc/tree/master/packages/bloc_concurrency/README.md)\n- [Flutter Bloc Package](https://github.com/felangel/bloc/tree/master/packages/flutter_bloc/README.md)\n- [Angular Bloc Package](https://github.com/felangel/bloc/tree/master/packages/angular_bloc/README.md)\n- [Hydrated Bloc Package](https://github.com/felangel/bloc/tree/master/packages/hydrated_bloc/README.md)\n- [Replay Bloc Package](https://github.com/felangel/bloc/tree/master/packages/replay_bloc/README.md)\n\n## Migration\n\n- [Migration Guide](https://bloclibrary.dev/migration)\n\n## Examples\n\n<div style=\"text-align: center\">\n    <table>\n        <tr>\n            <td style=\"text-align: center\">\n                <a href=\"https://bloclibrary.dev/tutorials/flutter-counter\">\n                    <img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/examples/flutter_counter.gif\" width=\"200\"/>\n                </a>\n            </td>            \n            <td style=\"text-align: center\">\n                <a href=\"https://bloclibrary.dev/tutorials/flutter-infinite-list\">\n                    <img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/examples/flutter_infinite_list.gif\" width=\"200\"/>\n                </a>\n            </td>\n            <td style=\"text-align: center\">\n                <a href=\"https://bloclibrary.dev/tutorials/flutter-login\">\n                    <img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/examples/flutter_firebase_login.gif\" width=\"200\" />\n                </a>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"text-align: center\">\n                <a href=\"https://bloclibrary.dev/tutorials/github-search\">\n                    <img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/examples/flutter_github_search.gif\" width=\"200\"/>\n                </a>\n            </td>\n            <td style=\"text-align: center\">\n                <a href=\"https://bloclibrary.dev/tutorials/flutter-weather\">\n                    <img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/examples/flutter_weather.gif\" width=\"200\"/>\n                </a>\n            </td>\n            <td style=\"text-align: center\">\n                <a href=\"https://bloclibrary.dev/tutorials/flutter-todos\">\n                    <img src=\"https://raw.githubusercontent.com/felangel/bloc/master/assets/examples/flutter_todos.gif\" width=\"200\"/>\n                </a>\n            </td>\n        </tr>\n    </table>\n</div>\n\n### Dart\n\n- [Counter](https://github.com/felangel/bloc/tree/master/packages/bloc/example) - an example of how to create a `CounterBloc` (pure dart).\n\n### Flutter\n\n- [Counter](https://bloclibrary.dev/tutorials/flutter-counter) - an example of how to create a `CounterBloc` to implement the classic Flutter Counter app.\n- [Form Validation](https://github.com/felangel/bloc/tree/master/examples/flutter_form_validation) - an example of how to use the `bloc` and `flutter_bloc` packages to implement form validation.\n- [Bloc with Stream](https://github.com/felangel/bloc/tree/master/examples/flutter_bloc_with_stream) - an example of how to hook up a `bloc` to a `Stream` and update the UI in response to data from the `Stream`.\n- [Complex List](https://github.com/felangel/bloc/tree/master/examples/flutter_complex_list) - an example of how to manage a list of items and asynchronously delete items one at a time using `bloc` and `flutter_bloc`.\n- [Infinite List](https://bloclibrary.dev/tutorials/flutter-infinite-list) - an example of how to use the `bloc` and `flutter_bloc` packages to implement an infinite scrolling list.\n- [Login Flow](https://bloclibrary.dev/tutorials/flutter-login) - an example of how to use the `bloc` and `flutter_bloc` packages to implement a Login Flow.\n- [Firebase Login](https://bloclibrary.dev/tutorials/flutter-firebase-login) - an example of how to use the `bloc` and `flutter_bloc` packages to implement login via Firebase.\n- [Github Search](https://bloclibrary.dev/tutorials/github-search) - an example of how to create a Github Search Application using the `bloc` and `flutter_bloc` packages.\n- [Weather](https://bloclibrary.dev/tutorials/flutter-weather) - an example of how to create a Weather Application using the `bloc` and `flutter_bloc` packages. The app uses a `RefreshIndicator` to implement \"pull-to-refresh\" as well as dynamic theming.\n- [Todos](https://bloclibrary.dev/tutorials/flutter-todos) - an example of how to create a Todos Application using the `bloc` and `flutter_bloc` packages.\n- [Timer](https://bloclibrary.dev/tutorials/flutter-timer) - an example of how to create a Timer using the `bloc` and `flutter_bloc` packages.\n- [Shopping Cart](https://github.com/felangel/bloc/tree/master/examples/flutter_shopping_cart) - an example of how to create a Shopping Cart Application using the `bloc` and `flutter_bloc` packages based on [flutter samples](https://github.com/flutter/samples/tree/master/provider_shopper).\n- [Dynamic Form](https://github.com/felangel/bloc/tree/master/examples/flutter_dynamic_form) - an example of how to use the `bloc` and `flutter_bloc` packages to implement a dynamic form which pulls data from a repository.\n- [Wizard](https://github.com/felangel/bloc/tree/master/examples/flutter_wizard) - an example of how to build a multi-step wizard using the `bloc` and `flutter_bloc` packages.\n- [Fluttersaurus](https://github.com/felangel/fluttersaurus) - an example of how to use the `bloc` and `flutter_bloc` packages to create a thesaurus app -- made for Bytconf Flutter 2020.\n- [I/O Photo Booth](https://github.com/flutter/photobooth) - an example of how to use the `bloc` and `flutter_bloc` packages to create a virtual photo booth web app -- made for Google I/O 2021.\n- [I/O Pinball](https://github.com/flutter/pinball) - an example of how to use the `bloc` and `flutter_bloc` packages to create a pinball web app -- made for Google I/O 2022.\n- [I/O Holobooth](https://github.com/flutter/holobooth) - an example of how to use the `bloc` and `flutter_bloc` packages to create a virtual photobooth experience -- made for Flutter Forward.\n- [I/O Flip](https://github.com/flutter/io_flip) - an example of how to use the `bloc`, `flutter_bloc`, and `flame_bloc` packages to create a card game -- made for Google I/O 2023.\n\n### Web\n\n- [Counter](https://github.com/felangel/Bloc/tree/master/examples/angular_counter) - an example of how to use a `CounterBloc` in an AngularDart app.\n- [Github Search](https://github.com/felangel/Bloc/tree/master/examples/github_search/angular_github_search) - an example of how to create a Github Search Application using the `bloc` and `angular_bloc` packages.\n\n### Flutter + Web\n\n- [Github Search](https://github.com/felangel/Bloc/tree/master/examples/github_search) - an example of how to create a Github Search Application and share code between Flutter and AngularDart.\n\n## Articles\n\n- [Bloc package](https://medium.com/flutter-community/flutter-bloc-package-295b53e95c5c) - An intro to the bloc package with high level architecture and examples.\n- [Login tutorial with flutter_bloc](https://medium.com/flutter-community/flutter-login-tutorial-with-flutter-bloc-ea606ef701ad) - How to create a full login flow using the bloc and flutter_bloc packages.\n- [Unit testing with bloc](https://medium.com/@felangelov/unit-testing-with-bloc-b94de9655d86) - How to unit test the blocs created in the flutter login tutorial.\n- [Infinite list tutorial with flutter_bloc](https://medium.com/flutter-community/flutter-infinite-list-tutorial-with-flutter-bloc-2fc7a272ec67) - How to create an infinite list using the bloc and flutter_bloc packages.\n- [Code sharing with bloc](https://medium.com/flutter-community/code-sharing-with-bloc-b867302c18ef) - How to share code between a mobile application written with Flutter and a web application written with AngularDart.\n- [Weather app tutorial with flutter_bloc](https://medium.com/flutter-community/weather-app-with-flutter-bloc-e24a7253340d) - How to build a weather app which supports dynamic theming, pull-to-refresh, and interacting with a REST API using the bloc and flutter_bloc packages.\n- [Todos app tutorial with flutter_bloc](https://medium.com/flutter-community/flutter-todos-tutorial-with-flutter-bloc-d9dd833f9df3) - How to build a todos app using the bloc and flutter_bloc packages.\n- [Firebase login tutorial with flutter_bloc](https://medium.com/flutter-community/firebase-login-with-flutter-bloc-47455e6047b0) - How to create a fully functional login/sign up flow using the bloc and flutter_bloc packages with Firebase Authentication and Google Sign In.\n- [Flutter timer tutorial with flutter_bloc](https://medium.com/flutter-community/flutter-timer-with-flutter-bloc-a464e8332ceb) - How to create a timer app using the bloc and flutter_bloc packages.\n- [Firestore todos tutorial with flutter_bloc](https://medium.com/flutter-community/firestore-todos-with-flutter-bloc-7b2d5fadcc80) - How to create a todos app using the bloc and flutter_bloc packages that integrates with cloud firestore.\n\n## Books\n\n- [Flutter Complete Reference](https://fluttercompletereference.com/) - A book about the Dart programming language (version 2.10, with null safety support) and the Flutter framework (version 1.20). It covers the bloc package (version 6.0.3) in all flavors: bloc, flutter_bloc hydrated_bloc, replay_bloc, bloc_test and cubit.\n\n## Extensions\n\n- [IntelliJ](https://plugins.jetbrains.com/plugin/12129-bloc-code-generator) - extends IntelliJ/Android Studio with support for the Bloc library and provides tools for effectively creating Blocs for both Flutter and AngularDart apps.\n- [VSCode](https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc#overview) - extends VSCode with support for the Bloc library and provides tools for effectively creating Blocs for both Flutter and AngularDart apps.\n\n## Community\n\nLearn more at the following links, which have been contributed by the community.\n\n### Packages\n\n- [Bloc.js](https://github.com/felangel/bloc.js) - A port of the `bloc` state management library from Dart to JavaScript, by [Felix Angelov](https://github.com/felangel).\n- [Firebase Auth](https://pub.dev/packages/fb_auth) - A Web, Mobile Firebase Auth Plugin, by [Rody Davis](https://github.com/AppleEducate).\n- [Form Bloc](https://pub.dev/packages/form_bloc) - An easy way to create forms with BLoC pattern without writing a lot of boilerplate code, by [Giancarlo](https://github.com/GiancarloCode).\n- [Flame Bloc](https://pub.dev/packages/flame_bloc) - Bloc integration for the Flame game engine, by [Flame Engine](https://github.com/flame-engine).\n\n### Video Tutorials\n\n- [Bloc Library: Basics and Beyond üöÄ](https://youtu.be/knMvKPKBzGE) - Talk given at [Flutter Europe](https://fluttereurope.dev) about the basics of the bloc library, by [Felix Angelov](https://github.com/felangel).\n- [Flutter Bloc Library Tutorial](https://www.youtube.com/watch?v=hTExlt1nJZI) - Introduction to the Bloc Library, by [Reso Coder](https://resocoder.com).\n- [Flutter Youtube Search](https://www.youtube.com/watch?v=BJY8nuYUM7M) - How to build a Youtube Search app which interacts with an API using the bloc and flutter_bloc packages, by [Reso Coder](https://resocoder.com).\n- [Flutter Bloc - AUTOMATIC LOOKUP - v0.20 (and Up), Updated Tutorial](https://www.youtube.com/watch?v=_vOpPuVfmiU) - Updated Tutorial on the Flutter Bloc Package, by [Reso Coder](https://resocoder.com).\n- [Dynamic Theming with flutter_bloc](https://www.youtube.com/watch?v=YYbhkg-W8Mg) - Tutorial on how to use the flutter_bloc package to implement dynamic theming, by [Reso Coder](https://resocoder.com).\n- [Persist Bloc State in Flutter](https://www.youtube.com/watch?v=vSOpZd_FFEY) - Tutorial on how to use the hydrated_bloc package to automatically persist app state, by [Reso Coder](https://resocoder.com).\n- [State Management Foundation](https://www.youtube.com/watch?v=S2KmxzgsTwk&t=731s) - Introduction to state management using the flutter_bloc package, by [Techie Blossom](https://techieblossom.com).\n- [Flutter Football Player Search](https://www.youtube.com/watch?v=S2KmxzgsTwk) - How to build a Football Player Search app which interacts with an API using the bloc and flutter_bloc packages, by [Techie Blossom](https://techieblossom.com).\n- [Learning the Flutter Bloc Package](https://www.youtube.com/watch?v=eAiCPl3yk9A&t=1s) - Learning the flutter_bloc package live, by [Robert Brunhage](https://www.youtube.com/channel/UCSLIg5O0JiYO1i2nD4RclaQ)\n- [Bloc Test Tutorial](https://www.youtube.com/watch?v=S6jFBiiP0Mc) - Tutorial on how to unit test blocs using the bloc_test package, by [Reso Coder](https://resocoder.com).\n- [Bloc - from Zero to Hero](https://www.youtube.com/playlist?list=PLptHs0ZDJKt_T-oNj_6Q98v-tBnVf-S_o) - Playlist which includes everything needed to get started with bloc, by [Flutterly](https://www.youtube.com/channel/UC5PYcSe3to4mtm3SPCUmjvw).\n- [Bloc (Full Course, 11+ Hours) - Flutter State Management Course](https://youtu.be/Mn254cnduOY) - 11+ hour video tutorial on Bloc and Flutter Bloc. In this video you will learn how to create fully fledged production-ready apps with Bloc and Firebase as your backend, by [Vandad Nahavandipoor](https://www.youtube.com/channel/UC8NpGP0AOQ0kX9ZRcohiPeQ).\n\n### Written Resources\n\n- [DevonFw Flutter Guide](https://github.com/devonfw-forge/devonfw4flutter) - A guide on building structured & scalable applications with Flutter and BLoC, by [Sebastian Faust](https://github.com/Fasust)\n- [Using Google¬¥s Flutter Framework for the Development of a Large-Scale Reference Application](https://epb.bibl.th-koeln.de/frontdoor/index/index/docId/1498) - Scientific paper describing how to build [a large-scale Flutter application](https://github.com/devonfw-forge/devonfw4flutter-mts-app) with BLoC, by [Sebastian Faust](https://github.com/Fasust)\n\n### Extensions\n\n- [Feature Scaffolding for VSCode](https://marketplace.visualstudio.com/items?itemName=KiritchoukC.flutter-clean-architecture) - A VSCode extension inspired by [Reso Coder's](https://resocoder.com) clean architecture tutorials, which helps quickly scaffold features, by [Kiritchouk Cl√©ment](https://github.com/KiritchoukC).\n\n## Maintainers\n\n- [Felix Angelov](https://github.com/felangel)\n"
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 6.7548828125,
          "content": "analyzer:\n  exclude:\n    - bricks/**\n\n  language:\n    strict-casts: true\n    strict-inference: true\n    strict-raw-types: true\n\n  errors:\n    close_sinks: ignore\n    missing_required_param: error\n    missing_return: error\n    record_literal_one_positional_no_trailing_comma: error\n\nlinter:\n  rules:\n    - always_declare_return_types\n    - always_put_required_named_parameters_first\n    - always_use_package_imports\n    - annotate_overrides\n    - annotate_redeclares\n    - avoid_bool_literals_in_conditional_expressions\n    - avoid_catching_errors\n    - avoid_double_and_int_checks\n    - avoid_dynamic_calls\n    - avoid_empty_else\n    - avoid_equals_and_hash_code_on_mutable_classes\n    - avoid_escaping_inner_quotes\n    - avoid_field_initializers_in_const_classes\n    - avoid_final_parameters\n    - avoid_function_literals_in_foreach_calls\n    - avoid_init_to_null\n    - avoid_js_rounded_ints\n    - avoid_multiple_declarations_per_line\n    - avoid_null_checks_in_equality_operators\n    - avoid_positional_boolean_parameters\n    - avoid_print\n    - avoid_private_typedef_functions\n    - avoid_redundant_argument_values\n    - avoid_relative_lib_imports\n    - avoid_renaming_method_parameters\n    - avoid_return_types_on_setters\n    - avoid_returning_null_for_void\n    - avoid_returning_this\n    - avoid_setters_without_getters\n    - avoid_shadowing_type_parameters\n    - avoid_single_cascade_in_expression_statements\n    - avoid_slow_async_io\n    - avoid_type_to_string\n    - avoid_types_as_parameter_names\n    - avoid_unnecessary_containers\n    - avoid_unused_constructor_parameters\n    - avoid_void_async\n    - avoid_web_libraries_in_flutter\n    - await_only_futures\n    - camel_case_extensions\n    - camel_case_types\n    - cancel_subscriptions\n    - cascade_invocations\n    - cast_nullable_to_non_nullable\n    - collection_methods_unrelated_type\n    - combinators_ordering\n    - comment_references\n    - conditional_uri_does_not_exist\n    - constant_identifier_names\n    - control_flow_in_finally\n    - curly_braces_in_flow_control_structures\n    - dangling_library_doc_comments\n    - depend_on_referenced_packages\n    - deprecated_consistency\n    - deprecated_member_use_from_same_package\n    - directives_ordering\n    - do_not_use_environment\n    - empty_catches\n    - empty_constructor_bodies\n    - empty_statements\n    - eol_at_end_of_file\n    - exhaustive_cases\n    - file_names\n    - flutter_style_todos\n    - hash_and_equals\n    - implementation_imports\n    - implicit_call_tearoffs\n    - implicit_reopen\n    - invalid_case_patterns\n    - join_return_with_assignment\n    - leading_newlines_in_multiline_strings\n    - library_annotations\n    - library_names\n    - library_prefixes\n    - library_private_types_in_public_api\n    - lines_longer_than_80_chars\n    - literal_only_boolean_expressions\n    - matching_super_parameters\n    - missing_code_block_language_in_doc_comment\n    - missing_whitespace_between_adjacent_strings\n    - no_adjacent_strings_in_list\n    - no_default_cases\n    - no_duplicate_case_values\n    - no_leading_underscores_for_library_prefixes\n    - no_leading_underscores_for_local_identifiers\n    - no_literal_bool_comparisons\n    - no_logic_in_create_state\n    - no_runtimeType_toString\n    - no_self_assignments\n    - no_wildcard_variable_uses\n    - non_constant_identifier_names\n    - noop_primitive_operations\n    - null_check_on_nullable_type_parameter\n    - null_closures\n    - omit_local_variable_types\n    - one_member_abstracts\n    - only_throw_errors\n    - overridden_fields\n    - package_api_docs\n    - package_names\n    - package_prefixed_library_names\n    - parameter_assignments\n    - prefer_adjacent_string_concatenation\n    - prefer_asserts_in_initializer_lists\n    - prefer_asserts_with_message\n    - prefer_collection_literals\n    - prefer_conditional_assignment\n    - prefer_const_constructors\n    - prefer_const_constructors_in_immutables\n    - prefer_const_declarations\n    - prefer_const_literals_to_create_immutables\n    - prefer_constructors_over_static_methods\n    - prefer_contains\n    - prefer_final_fields\n    - prefer_final_in_for_each\n    - prefer_final_locals\n    - prefer_for_elements_to_map_fromIterable\n    - prefer_function_declarations_over_variables\n    - prefer_generic_function_type_aliases\n    - prefer_if_elements_to_conditional_expressions\n    - prefer_if_null_operators\n    - prefer_initializing_formals\n    - prefer_inlined_adds\n    - prefer_int_literals\n    - prefer_interpolation_to_compose_strings\n    - prefer_is_empty\n    - prefer_is_not_empty\n    - prefer_is_not_operator\n    - prefer_iterable_whereType\n    - prefer_mixin\n    - prefer_null_aware_method_calls\n    - prefer_null_aware_operators\n    - prefer_single_quotes\n    - prefer_spread_collections\n    - prefer_typing_uninitialized_variables\n    - prefer_void_to_null\n    - provide_deprecation_message\n    - public_member_api_docs\n    - recursive_getters\n    - require_trailing_commas\n    - secure_pubspec_urls\n    - sized_box_for_whitespace\n    - sized_box_shrink_expand\n    - slash_for_doc_comments\n    - sort_child_properties_last\n    - sort_constructors_first\n    - sort_pub_dependencies\n    - sort_unnamed_constructors_first\n    - test_types_in_equals\n    - throw_in_finally\n    - tighten_type_of_initializing_formals\n    - type_annotate_public_apis\n    - type_init_formals\n    - type_literal_in_constant_pattern\n    - unawaited_futures\n    - unnecessary_await_in_return\n    - unnecessary_brace_in_string_interps\n    - unnecessary_breaks\n    - unnecessary_const\n    - unnecessary_constructor_name\n    - unnecessary_getters_setters\n    - unnecessary_lambdas\n    - unnecessary_late\n    - unnecessary_library_directive\n    - unnecessary_new\n    - unnecessary_null_aware_assignments\n    - unnecessary_null_aware_operator_on_extension_on_nullable\n    - unnecessary_null_checks\n    - unnecessary_null_in_if_null_operators\n    - unnecessary_nullable_for_final_variable_declarations\n    - unnecessary_overrides\n    - unnecessary_parenthesis\n    - unnecessary_raw_strings\n    - unnecessary_statements\n    - unnecessary_string_escapes\n    - unnecessary_string_interpolations\n    - unnecessary_this\n    - unnecessary_to_list_in_spreads\n    - unreachable_from_main\n    - unrelated_type_equality_checks\n    - unsafe_html\n    - use_build_context_synchronously\n    - use_colored_box\n    - use_decorated_box\n    - use_enums\n    - use_full_hex_values_for_flutter_colors\n    - use_function_type_syntax_for_parameters\n    - use_if_null_to_convert_nulls_to_bools\n    - use_is_even_rather_than_modulo\n    - use_key_in_widget_constructors\n    - use_late_for_private_fields_and_variables\n    - use_named_constants\n    - use_raw_strings\n    - use_rethrow_when_possible\n    - use_setters_to_change_properties\n    - use_string_buffers\n    - use_string_in_part_of_directives\n    - use_super_parameters\n    - use_test_throws_matchers\n    - use_to_and_as_if_applicable\n    - valid_regexps\n    - void_checks\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "bricks",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}