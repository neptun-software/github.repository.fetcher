{
  "metadata": {
    "timestamp": 1736557527778,
    "page": 573,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alebcay/awesome-shell",
      "stars": 33515,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.62,
          "content": "# Contributing to `awesome-shell`\n\n> _NOTE:_ This repo has been mostly unpoliced in terms of what has been accepted and was has been turned away up until now, so with the addition of this document, changes to the existing contents of the lists will need to be made. The repo is being re-structured to clean things up a bit, but this is being done gradually, so let me know if you have questions or concerns.\n\nIf you have questions about how to actually submit a pull request via GitHub to contribute content to this list, the [main `awesome` repository](https://github.com/sindresorhus/awesome) has an excellent [guide](https://github.com/sindresorhus/awesome/blob/master/contributing.md#adding-something-to-an-awesome-list) that walks through the steps. This document, meanwhile, is intended more for prospective contributors to define the scope of this project and outline guidelines for accepting or rejecting things from the repository.\n\n## Criteria for inclusion in `awesome-shell`\n\nInclusion of projects and entries in the list are based primarily upon  _scope_ of the project, book, link, etc. that is being considered, and, for code/tools/projects on GitHub, _notability_ of the project.\n\n### Scope\n`awesome-shell` is a list of helpful links, tools, projects, frameworks, and resources for shell development and usage.\n\n#### Accepted\n\n- *CLI apps* of any kind are acceptable. They do not have to be written in a shell script (e.g. Bash, Fish, Zsh) to be accepted.\n- *Shell extensions/plugins* are acceptable. If the item in consideration doesn't depend on a particular package manager/shell, it can go in a suitable category; otherwise (i.e. if it is only applicable to a certain shell or depends on a certain package manager that depends on a certain shell, such as Oh-My-Zsh) it should go in the category for that shell.\n- *Guides* or *tutorials* for shell scripting in general or particular shells are welcome.\n\n#### Rejected\n\n- *Terminal emulators*, such as Hyper, iTerm2, Upterm, etc. should be submitted to [`terminals-are-sexy`](https://github.com/k4m4/terminals-are-sexy) instead.\n\nThis list may be expanded and moved around as the situation changes or new cases arise.\n\n### Notability\n- It is *acceptable* to submit items/links/guides/projects that you authored or developed on your own. Self-promotion is okay!\n- GitHub projects must have _at least_ 50 stars to be considered for inclusion. This applies to both projects authored by others but submitted by you as well as any projects that you developed or authored yourself.\n<hr />\n\nAny questions? Feel free to open an issue or email me. This document will be updated to reflect any sort of changes that may occur.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.4,
          "content": "CC0 1.0 Universal\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator and\nsubsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for the\npurpose of contributing to a commons of creative, cultural and scientific\nworks (\"Commons\") that the public can reliably and without fear of later\nclaims of infringement build upon, modify, incorporate in other works, reuse\nand redistribute as freely as possible in any form whatsoever and for any\npurposes, including without limitation commercial purposes. These owners may\ncontribute to the Commons to promote the ideal of a free culture and the\nfurther production of creative, cultural and scientific works, or to gain\nreputation or greater distribution for their Work in part through the use and\nefforts of others.\n\nFor these and/or other purposes and motivations, and without any expectation\nof additional consideration or compensation, the person associating CC0 with a\nWork (the \"Affirmer\"), to the extent that he or she is an owner of Copyright\nand Related Rights in the Work, voluntarily elects to apply CC0 to the Work\nand publicly distribute the Work under its terms, with knowledge of his or her\nCopyright and Related Rights in the Work and the meaning and intended legal\neffect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not limited\nto, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display, communicate,\n  and translate a Work;\n\n  ii. moral rights retained by the original author(s) and/or performer(s);\n\n  iii. publicity and privacy rights pertaining to a person's image or likeness\n  depicted in a Work;\n\n  iv. rights protecting against unfair competition in regards to a Work,\n  subject to the limitations in paragraph 4(a), below;\n\n  v. rights protecting the extraction, dissemination, use and reuse of data in\n  a Work;\n\n  vi. database rights (such as those arising under Directive 96/9/EC of the\n  European Parliament and of the Council of 11 March 1996 on the legal\n  protection of databases, and under any national implementation thereof,\n  including any amended or successor version of such directive); and\n\n  vii. other similar, equivalent or corresponding rights throughout the world\n  based on applicable law or treaty, and any national implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention of,\napplicable law, Affirmer hereby overtly, fully, permanently, irrevocably and\nunconditionally waives, abandons, and surrenders all of Affirmer's Copyright\nand Related Rights and associated claims and causes of action, whether now\nknown or unknown (including existing as well as future claims and causes of\naction), in the Work (i) in all territories worldwide, (ii) for the maximum\nduration provided by applicable law or treaty (including future time\nextensions), (iii) in any current or future medium and for any number of\ncopies, and (iv) for any purpose whatsoever, including without limitation\ncommercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes\nthe Waiver for the benefit of each member of the public at large and to the\ndetriment of Affirmer's heirs and successors, fully intending that such Waiver\nshall not be subject to revocation, rescission, cancellation, termination, or\nany other legal or equitable action to disrupt the quiet enjoyment of the Work\nby the public as contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason be\njudged legally invalid or ineffective under applicable law, then the Waiver\nshall be preserved to the maximum extent permitted taking into account\nAffirmer's express Statement of Purpose. In addition, to the extent the Waiver\nis so judged Affirmer hereby grants to each affected person a royalty-free,\nnon transferable, non sublicensable, non exclusive, irrevocable and\nunconditional license to exercise Affirmer's Copyright and Related Rights in\nthe Work (i) in all territories worldwide, (ii) for the maximum duration\nprovided by applicable law or treaty (including future time extensions), (iii)\nin any current or future medium and for any number of copies, and (iv) for any\npurpose whatsoever, including without limitation commercial, advertising or\npromotional purposes (the \"License\"). The License shall be deemed effective as\nof the date CC0 was applied by Affirmer to the Work. Should any part of the\nLicense for any reason be judged legally invalid or ineffective under\napplicable law, such partial invalidity or ineffectiveness shall not\ninvalidate the remainder of the License, and in such case Affirmer hereby\naffirms that he or she will not (i) exercise any of his or her remaining\nCopyright and Related Rights in the Work or (ii) assert any associated claims\nand causes of action with respect to the Work, in either case contrary to\nAffirmer's express Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n  a. No trademark or patent rights held by Affirmer are waived, abandoned,\n  surrendered, licensed or otherwise affected by this document.\n\n  b. Affirmer offers the Work as-is and makes no representations or warranties\n  of any kind concerning the Work, express, implied, statutory or otherwise,\n  including without limitation warranties of title, merchantability, fitness\n  for a particular purpose, non infringement, or the absence of latent or\n  other defects, accuracy, or the present or absence of errors, whether or not\n  discoverable, all to the greatest extent permissible under applicable law.\n\n  c. Affirmer disclaims responsibility for clearing rights of other persons\n  that may apply to the Work or any use thereof, including without limitation\n  any person's Copyright and Related Rights in the Work. Further, Affirmer\n  disclaims responsibility for obtaining any necessary consents, permissions\n  or other rights required for any use of the Work.\n\n  d. Affirmer understands and acknowledges that Creative Commons is not a\n  party to this document and has no duty or obligation with respect to this\n  CC0 or use of the Work.\n\nFor more information, please see\n<http://creativecommons.org/publicdomain/zero/1.0/>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 43.26,
          "content": "```\n █████╗ ██╗    ██╗███████╗███████╗ ██████╗ ███╗   ███╗███████╗\n██╔══██╗██║    ██║██╔════╝██╔════╝██╔═══██╗████╗ ████║██╔════╝\n███████║██║ █╗ ██║█████╗  ███████╗██║   ██║██╔████╔██║█████╗\n██╔══██║██║███╗██║██╔══╝  ╚════██║██║   ██║██║╚██╔╝██║██╔══╝\n██║  ██║╚███╔███╔╝███████╗███████║╚██████╔╝██║ ╚═╝ ██║███████╗\n╚═╝  ╚═╝ ╚══╝╚══╝ ╚══════╝╚══════╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝\n███████╗██╗  ██╗███████╗██╗     ██╗\n██╔════╝██║  ██║██╔════╝██║     ██║\n███████╗███████║█████╗  ██║     ██║\n╚════██║██╔══██║██╔══╝  ██║     ██║\n███████║██║  ██║███████╗███████╗███████╗\n╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝\n```\n\n# Awesome Shell [![Awesome][awesome-badge]][awesome-link]\n\nA curated list of awesome command-line frameworks, toolkits, guides and gizmos. Inspired by awesome-php. This awesome collection is also available on [Unix-Shell.ZEEF.com](https://unix-shell.zeef.com/caleb.xu).\n- [Shells](#shells)\n- [Command-Line Productivity](#command-line-productivity)\n  - [Directory Navigation](#directory-navigation)\n- [Customization](#customization)\n- [For Developers](#for-developers)\n- [System Utilities](#system-utilities)\n- [Downloading and Serving](#downloading-and-serving)\n- [Multimedia and File Formats](#multimedia-and-file-formats)\n- [Applications](#applications)\n- [Games](#games)\n- [Shell Package Management](#shell-package-management)\n- [Shell Script Development](#shell-script-development)\n- [Guides](#guides)\n- [**Awesome Zsh**][awesome-zsh]&nbsp; [![Awesome][awesome-badge]][awesome-zsh]\n- [**Awesome Fish**][awesome-fish] [![Awesome][awesome-badge]][awesome-fish]\n- [**Awesome Bash**][awesome-bash] [![Awesome][awesome-badge]][awesome-bash]\n- [Other Awesome Lists](#other-awesome-lists)\n\n## Shells\n\n*Choose your base shell.*\n\n* [bash](https://www.gnu.org/software/bash/) - GNU Project's shell (Bourne Again SHell)\n* [elvish](https://elv.sh/) - Friendly, expressive shell features like anonymous functions and data structures\n* [es](https://wryun.github.io/es-shell/) - The extensible shell, based on Plan 9's [rc](https://github.com/rakitzis/rc) shell\n* [fish](https://fishshell.com) - Smart and user-friendly command line shell\n* [ion](https://github.com/redox-os/ion) - A modern system shell that features a simple, yet powerful, syntax. It is written entirely in Rust.\n* [ksh93](https://github.com/att/ast) - Korn Shell\n* [mksh](https://github.com/MirBSD/mksh) - MirBSD Korn Shell\n* [murex](https://github.com/lmorg/murex) - A smarter shell and scripting environment with advanced features designed for usability, safety and productivity (eg smarter DevOps tooling)\n* [ngs](https://github.com/ngs-lang/ngs) - Fully featured scripting language created specifically for Ops. REPL is being developed.\n* [nushell](https://github.com/nushell/nushell) - A modern shell written in Rust\n* [oksh](https://github.com/ibara/oksh) - Portable OpenBSD ksh\n* [osh](https://www.oilshell.org) - Bash compatible, with new/modern Unix shell language called Oil\n* [pdksh](https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/bin/ksh/) - Public domain Korn shell\n* [powershell](https://docs.microsoft.com/en-us/powershell/scripting/overview) a cross-platform task automation and configuration management framework, consisting of a command-line shell and scripting language\n* [shell++](https://github.com/alexst07/shell-plus-plus) - Friendly and modern functional and object oriented shell script language\n* [shenv](https://github.com/shenv/shenv) - Simple shell version management\n* [tcsh](https://www.tcsh.org/) - C shell with file name completion and command line editing\n* [xonsh](https://xon.sh) - Python-ish, BASHwards-looking shell language and command prompt\n* [yash](https://github.com/magicant/yash) - A POSIX-compliant command line shell with built-in support for completion and prediction based on command history\n* [zsh](https://www.zsh.org) - Powerful shell with scripting language\n\n## Command-Line Productivity\n\n*Search, bookmarks, multiplexing, and other tools that make your terminal experience more productive.*\n\n* [AdvancedNewFile](https://github.com/tanrax/terminal-AdvancedNewFile) - Fast creation of files and directories in a recursive way. Inspired by the Vim plugin.\n* [ag](https://github.com/ggreer/the_silver_searcher) - Super fast string search through a directory hierarchy\n* [aliases](https://github.com/sebglazebrook/aliases) - Contextual, dynamic, organized aliases for bash\n* [arttime](https://github.com/reportaman/arttime) - Beauty of text art meets functionality of clock, timer, pomodoro++ time manager\n* [autoenv](https://github.com/hyperupcall/autoenv) - Directory-based environments.\n* [await](https://github.com/slavaGanzin/await) - single binary that run list of commands in parallel and waits for their termination\n* [bartib](https://github.com/nikolassv/bartib) - A simple timetracker for the command line. It saves a log of all tracked activities as a plaintext file and allows you to create flexible reports.\n* [bashhub](https://github.com/rcaloras/bashhub-client) - :cloud: Bash history in the cloud. Indexed and searchable.\n* [boilr](https://github.com/tmrts/boilr) - A blazingly fast CLI tool for creating projects from boilerplate templates.\n* [boom](https://github.com/holman/boom) - Store links and snippets in the command line\n* [borg](https://github.com/ok-borg/borg) - A terminal based search engine for bash commands\n* [broot](https://github.com/Canop/broot) - A better way to navigate directories\n* [browsh](https://github.com/browsh-org/browsh) - The modern text-based browser\n* [Buku](https://github.com/jarun/Buku) - Powerful command-line bookmark manager\n* [byobu](https://www.byobu.org) - Text-based window manager and terminal multiplexer\n* [cod](https://github.com/dim-an/cod) — A completion daemon for shell that learns when you invoke `--help` commands\n* [CloudClip](https://github.com/skywind3000/CloudClip) - Your own clipboard in the cloud, copy and paste text with gist between different systems\n* [ddgr](https://github.com/jarun/ddgr) - DuckDuckGo from the terminal\n* [desk](https://github.com/jamesob/desk) - A lightweight workspace manager for the shell\n* [direnv](https://github.com/direnv/direnv) - An environment switcher for the shell, compare with autoenv\n* [dnote](https://github.com/dnote/dnote) - A simple command line notebook with multi-device sync and web interface\n* [eureka](https://github.com/simeg/eureka/) - :bulb: CLI tool to input and store your ideas without leaving the terminal\n* [fasd](https://github.com/clvv/fasd) - Command-line productivity booster, offers quick access to files and directories\n* [fd](https://github.com/sharkdp/fd) - A simple, fast and user-friendly alternative to find.\n* [foxy](https://github.com/s-p-k/foxy) - Plain text bookmarks for Firefox and surf browsers.\n* [fselect](https://github.com/jhspetersson/fselect) - Find files with SQL-like queries.\n* [funky](https://github.com/bbugyi200/funky) - Extends functionality of shell functions making them more powerful and flexible.\n* [fz](https://github.com/changyuheng/fz) - Seamless fuzzy tab completion for z\n* [fzf](https://github.com/junegunn/fzf) - A command-line fuzzy finder\n* [gitmux](https://github.com/arl/gitmux) - Show Git status in Tmux status bar\n* [googler](https://github.com/jarun/googler) - Google Search, Google Site Search, Google News from the terminal\n* [googlr](https://github.com/Astranno/googlr) - Command line tool that lets you search Google from your terminal.\n* [has](https://github.com/kdabir/has) - `has` helps you check presence of various command line tools and their versions on path\n* [how2](https://github.com/santinic/how2) - `how2` finds the simplest way to do something in a unix shell. It's like `man`, but you can query it in natural language.\n* [navi](https://github.com/denisidoro/navi) - An interactive cheatsheet tool for the command-line\n* [hhighlighter](https://github.com/paoloantinori/hhighlighter) - Colorize words in a command output\n* [hr](https://github.com/LuRsT/hr) - `<hr />` for your terminal\n* [hss](https://github.com/six-ddc/hss) - An interactive parallel ssh client featuring autocomplete and asynchronous execution\n* [hstr](https://github.com/dvorka/hstr) - Bash History Suggest Box\n* [k](https://github.com/supercrabtree/k) - k is a Zsh script to make directory listings more readable, adding Git status, fileweight colors and rotting dates\n* [k alias](https://github.com/lingtalfi/k) - get kool aliases (and more) working with a simple one-liner\n* [lf](https://github.com/gokcehan/lf) - Terminal file manager written in Go, inspired by ranger\n* [lf.sh](https://github.com/suewonjp/lf.sh) - Quickly search files with fewer typings and do many more (grepping, copying path to clipboard, etc)\n* [lowcharts](https://github.com/juan-leon/lowcharts) - Draw low-resolution graphs in terminal\n* [Lmod](https://lmod.readthedocs.io/en/latest/) - Lua-based Environment Modules that enhances Tcl-based modules while being backward compatible (compare to modules)\n* [loop](https://github.com/Miserlou/Loop) - Write and control complex loops with as one-liners\n* [marker](https://github.com/pindexis/marker) - Bookmark your shell commands\n* [mackup](https://github.com/lra/mackup/) - Keep your application settings in sync (OS X/Linux)\n* [mcfly](https://github.com/cantino/mcfly) - Fly through your shell history. Great Scot!\n* [modules](http://modules.sourceforge.net/) - Classical Tcl-based Environment Modules managing the shell environment (compare to Lmod, direnv, and autoenv)\n* [nnn](https://github.com/jarun/nnn) - File browser and disk usage analyzer with excellent desktop integration\n* [ok-sh](https://github.com/secretGeek/ok-bash) - Do you work on many different projects? And in each project, are there commands you use that are specific to that project? You need a .ok file.\n* [parallel](https://www.gnu.org/software/parallel/) - Build and execute shell command lines from standard input in parallel\n* [pass](https://www.passwordstore.org/) - Manage passwords from the command line with GPG encryption and optional git integration.\n* [pathpicker](https://github.com/facebook/PathPicker) - Accepts inputs like grep, searches, git etc; allows selecting files from the result of the input, which you can then open or provide as argument to a command.\n* [pdd](https://github.com/jarun/pdd) - Tiny date, time diff calculator with timers\n* [percol](https://github.com/mooz/percol) - Adds flavor of interactive filtering to the traditional pipe concept of UNIX shell\n* [q](https://github.com/cal2195/q) - Vim like macro registers for your Bash and Zsh Shell\n* [qfc](https://github.com/pindexis/qfc) - File-completion widget for Bash and Zsh\n* [resh](https://github.com/curusarn/resh) - Contextual shell history for Zsh and Bash\n* [rg](https://github.com/BurntSushi/ripgrep) - ripgrep is a line oriented search tool that combines the usability of The Silver Searcher with the raw speed of GNU grep\n* [screen](https://www.gnu.org/software/screen/) - GNU terminal multiplexer\n* [shell-history](https://github.com/pawamoy/shell-history) - Visualize your shell usage with Highcharts\n* [SHML](https://github.com/odb/shml) - Style framework for the terminal (Shell Markup Language)\n* [slugify](https://github.com/benlinton/slugify) - Command that converts filenames and directories to a web friendly format\n* [sman](https://github.com/tokozedg/sman) - :bug: A command-line snippet manager\n* [spark](https://github.com/holman/spark) - ▁▂▃▅▂▇ in your shell\n* [spark.fish](https://github.com/jorgebucaran/spark.fish) - ▁▂▃▅ Sparkline Generator\n* [sheet](https://github.com/oscardelben/sheet) -  Text snippets for the command line\n* [spot](https://github.com/rauchg/spot) - Tiny file search utility\n- [snips](https://github.com/srijanshetty/snips) - Command line tool to manage snippets of code.\n* [sqlline](https://github.com/julianhyde/sqlline) - Shell for issuing SQL to relational databases via JDBC (multiline, completion, highlighting, dialect support)\n* [sshfs](https://github.com/osxfuse/sshfs) - A tool for mounting remote file systems over SSH\n* [sudocabulary](https://github.com/badarsh2/Sudocabulary) - Learn English Vocabulary from your terminal\n* [surfraw](https://gitlab.com/surfraw/Surfraw) - browse specific site and search the web from your terminal without browser.\n* [task-manager](https://github.com/lingtalfi/task-manager) - Execute all your scripts with just two or three keystrokes.\n* [td-cli](https://github.com/darrikonn/td-cli) - A todo command line manager to organize and manage your todos across multiple projects.\n* [tere](https://github.com/mgunyho/tere) - A faster alternative to cd + ls\n* [thefuck](https://github.com/nvbn/thefuck) - Fix common shell mistakes by using an easy to remember command\n* [tldr](https://github.com/raylee/tldr-sh-client) - A fully-functional bash client for tldr, simplified and community-driven man pages\n* [tmux](https://tmux.github.io/) - Amazing terminal multiplexer\n* [undollar](https://github.com/xtyrrell/undollar) - undollar bites the dollar sign off the tip of the command you just pasted into your terminal\n* [usql](https://github.com/xo/usql) - Universal command-line interface for SQL databases.\n* [v](https://github.com/rupa/v) - z for vim.\n* [wemux](https://github.com/zolrath/wemux) - Multi-User Tmux Made Easy\n* [xiki](https://github.com/trogdoro/xiki) - Makes the shell console more friendly and powerful\n* [xplr](https://github.com/sayanarijit/xplr) -  A hackable, minimal, fast TUI file explorer\n* [xsv](https://github.com/BurntSushi/xsv) - a fast CSV command line toolkit written in Rust\n* [xxh](https://github.com/xxh/xxh) - Bring your favorite shell wherever you go through the SSH.\n\n### Directory Navigation\n\n* [aliasme](https://github.com/Jintin/aliasme) - alias helper to change directory quickly\n* [autojump](https://github.com/wting/autojump) - A cd command that learns - easily navigate directories from the command line\n* [bashmarks](https://github.com/huyng/bashmarks) - Directory bookmarks for the shell\n* [bd](https://github.com/vigneshwaranr/bd) - Quickly go back to a parent directory\n* [commacd](https://github.com/shyiko/commacd) - A faster way to move around in Bash\n* [enhancd](https://github.com/b4b4r07/enhancd) - :rocket: A next-generation cd command with an interactive filter\n* [goto](https://github.com/iridakos/goto) - A shell utility for navigation to aliased directories supporting auto-completion\n* [jump](https://github.com/gsamokovarov/jump) - Jump helps you navigate your file system faster by learning your habits.\n* [lazy-cd](https://github.com/pedramamini/lazy-cd) - Simple bash commands for bookmarked navigation of the file system, complete with bash-completion.\n* [up](https://github.com/shannonmoeller/up) - Ascend directories by name or count; for bash, zsh, and fish.\n* [z](https://github.com/rupa/z) - z is the new j, yo\n* [z.lua](https://github.com/skywind3000/z.lua) - A new cd command that helps you navigate faster by learning your habits\n* [zoxide](https://github.com/ajeetdsouza/zoxide) - A faster way to navigate your filesystem, written in Rust\n* [zpyi](https://github.com/sakshamsharma/zpyi) - Python in Zsh - Easy python scripting in shell\n\n## Customization\n\n*Custom prompts, color themes, etc.*\n\n* [aphrodite-terminal-theme](https://github.com/win0err/aphrodite-terminal-theme) — Minimalistic Aphrodite theme (prompt) for sexy terminals that works in bash, fish and zsh\n* [base16-builder](https://github.com/base16-builder/base16-builder) - Base16-Builder\n* [bash-full-of-colors](https://github.com/slomkowski/bash-full-of-colors) - Powerful prompt with screen, tmux, git support and many more\n* [bash-git-prompt](https://github.com/magicmonty/bash-git-prompt) - An informative and fancy Bash prompt for Git users\n* [bash-powerline](https://github.com/riobard/bash-powerline) - Powerline-style Bash prompt in pure Bash script\n* [bashstrap](https://github.com/barryclark/bashstrap) - A quick way to spruce up OSX terminal\n* [bullet-train-oh-my-zsh-theme](https://github.com/caiogondim/bullet-train.zsh) - :bullettrain_side: An oh-my-zsh shell theme based on the Powerline Vim plugin\n* [emojify](https://github.com/mrowa44/emojify) Emoji on the command line :scream:\n* [flatui-terminal-theme](https://dribbble.com/shots/1021755-Flat-UI-Terminal-Theme) - Nicer colors for terminal\n* [geometry](https://github.com/geometry-zsh/geometry) - A minimal ZSH theme where any function can be added to the left prompt or (async) right prompt on the fly.\n* [git-prompt](https://github.com/lvv/git-prompt) - Bash prompt with Git, SVN and HG modules\n* [gittify](https://github.com/momeni/gittify) - A colorful Bash prompt + customized Git aliases\n* [Gogh - Color Scheme](https://github.com/Mayccoll/Gogh) - Color Scheme for Gnome Terminal\n* [liquidprompt](https://github.com/nojhan/liquidprompt) - A full-featured & carefully designed adaptive prompt for Bash & Zsh\n* [mysql-colorize](https://github.com/zpm-zsh/mysql-colorize) -  Colorization for mysql comand-line client\n* [oh-my-git](https://github.com/arialdomartini/oh-my-git) - An opinionated git prompt for bash and zsh\n* [oh-my-posh](https://ohmyposh.dev) - Prompt theme engine for any shell and platform written in go.\n* [polyglot](https://github.com/agkozak/polyglot) - An informative Git prompt that works in bash, zsh, ksh, mksh, pdksh, oksh, dash, yash, busybox sh, and osh\n* [powerlevel10k](https://github.com/romkatv/powerlevel10k) - Super flexible awesome powerline ZSH theme\n* [sexy-bash-prompt](https://github.com/twolfson/sexy-bash-prompt) - Bash prompt with colors, Git statuses, and Git branches\n* [starship](https://starship.rs/) - Fast, customisable, cross-shell prompt written in rust\n* [synth-shell](https://github.com/andresgongora/synth-shell) - Greeter with a customizable status report and a fancy bash prompt\n\n## For Developers\n\n*Command-line development, version control, and deployment.*\n\n* [1Password SSH Agent](https://developer.1password.com/docs/ssh/) - Authenticate Git and SSH workflows with biometric unlock using 1Password\n* [ack](https://beyondgrep.com/) - A grep-like search tool optimized for source code.\n* [add-gitignore](https://github.com/TejasQ/add-gitignore) - Interactive CLI that generates a .gitignore for your project based on your needs.\n* [bcal](https://github.com/jarun/bcal) - Byte CALculator for storage conversions and calculations\n* [bitwise](https://github.com/mellowcandle/bitwise) - Terminal based interactive bit manipulator in curses.\n* [bocker](https://github.com/p8952/bocker) - Docker implemented in 100 lines of bash\n* [cloc](https://github.com/AlDanial/cloc) - Count Lines of Code\n* [doclt](https://github.com/omgimanerd/doclt) - A command line interface to Digital Ocean\n* [dokku](https://github.com/dokku/dokku) - Docker powered mini-Heroku. The smallest PaaS implementation you've ever seen.\n* [forgit](https://github.com/wfxr/forgit) - Utility tool for `git` taking advantage of fuzzy finder fzf.\n* [git-extra-commands](https://github.com/unixorn/git-extra-commands) - Many Git extra utilities. Churn, cut-branch, improved-merge and many more.\n* [git-extras](https://github.com/tj/git-extras) - Git utilities -- repo summary, repl, changelog population, author commit percentages and more\n* [git-open](https://github.com/paulirish/git-open) - Type `git open` to open the GitHub page or website for a repository in your browser\n* [git-quick-stats](https://github.com/arzzen/git-quick-stats) - Git quick statistics is a simple and efficient way to access various statistics in git repository.\n* [git-semver](https://github.com/markchalloner/git-semver) - Git plugin for easing semantic versioning and changelog validation\n* [git-sh](https://github.com/rtomayko/git-sh) - A customized Bash environment suitable for Git work\n* [gita](https://github.com/nosarthur/gita) - A command-line tool to manage multiple git repos.\n* [hub](https://github.com/github/hub) - hub helps you win at git.\n* [just](https://github.com/casey/just) - Task runner for saving and running project-specific commands.\n* [licins](https://github.com/dogoncouch/licins) - Insert commented software licenses into source code.\n* [mkdkr](https://github.com/rosineygp/mkdkr) - Makefile + Docker = CI Pipeline\n* [mr](https://myrepos.branchable.com) - Multiple Repository management tool\n* [nve](https://github.com/ehmicky/nve) - Run any command on specific Node.js versions.\n* [overcommit](https://github.com/sds/overcommit) - A fully configurable and extendable Git hook manager\n* [pre-commit](https://pre-commit.com) - A framework for managing and maintaining multi-language pre-commit hooks\n* [rebound](https://github.com/shobrook/rebound) - Instantly browse Stack Overflow results in your terminal when you get a compiler error\n* [repren](https://github.com/jlevy/repren) - Command-line search-and-replace and file-renaming swiss army knife\n* [slap](https://github.com/slap-editor/slap) - Sublime-like terminal-based text editor that runs on Node.js\n* [shipit](https://github.com/sapegin/shipit) - Minimalistic SSH deployment\n* [starring](https://github.com/ritz078/starring) - Automatically star the npm-packages that you are using on GitHub.\n* [tag](https://github.com/aykamko/tag) - Instantly jump to your ag matches.\n* [trunk](https://www.npmjs.com/package/@trunkio/launcher) - Blazingly fast meta code checker and formatter\n* [vmn](https://github.com/final-israel/vmn) - git-based automatic versioning and state recovery solution agnostic to language or architecture\n* [wipe-modules](https://github.com/bntzio/wipe-modules) - A little agent that removes the node_modules folder of non-active projects\n\n## System Utilities\n\n*OS-related tools, including system administration, system debugging, and file and process management.*\n\n* [atop](https://www.atoptool.nl) - ASCII full-screen performance monitor that is capable of reporting the activity of all processes\n* [bat](https://github.com/sharkdp/bat) - A `cat` clone with wings\n* [bmon](https://github.com/tgraf/bmon) - Real-time network bandwidth monitor and rate estimator with human-friendly visual output\n* [btop](https://github.com/aristocratos/btop) - Linux/OSX/FreeBSD resource monitor\n* [catcli](https://github.com/deadc0de6/catcli) -  The command line catalog tool for your offline data\n* [ccat](https://github.com/owenthereal/ccat) - ccat is the colorizing cat. It works similar to cat but displays content with syntax highlighting.\n* [exa](https://github.com/ogham/exa) - A modern version of `ls`.\n* [progress](https://github.com/Xfennec/progress) - Linux tool to show progress for `cp`, `rm`, `dd`, and more...\n* [stronghold](https://github.com/alichtman/stronghold) - Easily configure MacOS security settings from the terminal.\n* [glances](https://github.com/nicolargo/glances) - Glances an Eye on your system\n* [goaccess](https://github.com/allinurl/goaccess) - GoAccess is a real-time web log analyzer and interactive viewer that runs in a terminal in \\*nix systems.\n* [hblock](https://github.com/hectorm/hblock) - Hosts-file based adblocker\n* [histstat](https://github.com/vesche/histstat) - History for netstat\n* [htop](https://github.com/hishamhm/htop) - A ncurses based interactive process viewer which aims to be a better `top`\n* [lnav](https://lnav.org) - An advanced log file viewer for the small-scale\n* [logdissect](https://github.com/dogoncouch/logdissect) - CLI utility and Python API for analyzing log files and other data.\n* [ls++](https://github.com/trapd00r/ls--) - Colorized ls on steroids\n* [lsd](https://github.com/Peltoche/lsd) - LSDeluxe, rewrite of GNU ls with lot of added features like colors, icons, tree-view and more formatting options.\n* [lsp](https://github.com/dborzov/lsp) - An improved `ls`, with file descriptions in plain language and intelligent file grouping\n* [maza](https://github.com/tanrax/maza-ad-blocking) - Local ad blocker. Like Pi-hole but local and using your operating system.\n* [mtr](https://github.com/traviscross/mtr) - The functionality of the 'traceroute' and 'ping' programs in a single network diagnostic tool.\n* [ncdu](https://dev.yorhel.nl/ncdu) - NCurses Disk Usage\n* [nmtui](https://github.com/NetworkManager/NetworkManager) - Text User Interface for controlling NetworkManager\n* [powertop](https://github.com/fenrus75/powertop) - Battery/Power usage and device stats monitoring command-line tool, with tune-up options.\n* [prettyping](https://github.com/denilsonsa/prettyping) - Making the output of `ping` prettier, more colorful, more compact, and easier to read.\n* [procdog](https://github.com/jlevy/procdog) - Lightweight command-line control of long-lived processes like servers\n* [quick-secure](https://github.com/marshyski/quick-secure) - Quickly secure and harden UNIX/Linux systems\n* [rng](https://github.com/nickolasburr/rng) - Copy range of lines from file or stdin to stdout.\n* [tiptop](https://github.com/nschloe/tiptop) - Graphical command-line system monitor.\n* [wifi-wand](https://github.com/keithrbennett/wifiwand) - a Ruby command line application for managing WiFi on MacOS (install by `gem install wifi-wand`)\n* [xiringuito](https://github.com/ivanilves/xiringuito) - SSH-based \"VPN for poors\"\n\n## Downloading and Serving\n\n*Self-hosted, lightweight servers and networking tools written in shell scripts.*\n\n* [aria2](https://github.com/aria2/aria2) - aria2 is a lightweight multi-protocol & multi-source, cross platform download utility operated in command-line. It supports HTTP/HTTPS, FTP, BitTorrent and Metalink\n* [balls](https://github.com/jneen/balls) - Bash on Balls\n* [bashttpd](https://github.com/avleen/bashttpd) - A web server written in Bash\n* [bashhub-server](https://github.com/nicksherron/bashhub-server) - Private cloud shell history. Open source server for bashhub\n* [bitpocket](https://github.com/sickill/bitpocket) - \"DIY Dropbox\" or \"2-way directory (r)sync with proper deletion\"\n* [Dropbox-Uploader](https://github.com/andreafabrizi/Dropbox-Uploader) - Dropbox Uploader is a Bash script which can be used to upload, download, list or delete files from Dropbox\n* [httpie](https://github.com/httpie/httpie) - HTTPie is a command line HTTP client, a user-friendly cURL replacement\n* [HTTPLab](https://github.com/gchaincl/httplab) - The interactive web server, let you inspect HTTP requests and forge responses.\n* [Kapow!](https://github.com/BBVA/kapow) - If you can script it, you can HTTP it.\n* [ngincat](https://github.com/jaburns/ngincat) - Tiny Bash HTTP server using netcat\n* [resty](https://github.com/micha/resty) - Little command line REST client that you can use in pipelines\n* [shell2http](https://github.com/msoap/shell2http) - HTTP-server to execute shell commands. Designed for development, prototyping or remote control\n* [tshare](https://github.com/trikko/tshare) - File sharing from commandline.\n* [vesper](https://github.com/chris-rock/vesper) - 🍸Vesper is a HTTP framework for Bash/Unix Shell\n* [xh](https://github.com/ducaale/xh) - Friendly and fast tool for sending HTTP requests\n* [yt-dlp](https://github.com/yt-dlp/yt-dlp) - Command-line program to download videos from YouTube.com and other video sites\n\n## Multimedia and File Formats\n\n*Tools for handling video and audio files.*\n\n* [adb-export](https://github.com/sromku/adb-export) - Export Android content providers to CSV format\n* [Android-Kitchen](https://github.com/dsixda/Android-Kitchen) - A text-based kitchen for Android ROM customization. Uses shell scripts and works with Cygwin/OS X/Linux\n* [Beets](https://github.com/beetbox/beets) - Music library manager and MusicBrainz tagger\n* [cmus](https://github.com/cmus/cmus) - Cross-platform cli audio player.\n* [dasel](https://github.com/tomwright/dasel) - Query and update data structures using selectors from the command line. Comparable to [jq](https://github.com/stedolan/jq) / [yq](https://github.com/kislyuk/yq) but supports JSON, YAML, TOML and XML with zero runtime dependencies.\n* [dzr](https://github.com/yne/dzr) - Cross-platform Deezer.com audio player.\n* [fx](https://github.com/antonmedv/fx) - Command-line JSON processing tool by anononymus JavaScript functions\n* [gifgen](https://github.com/lukechilds/gifgen) - Simple high quality GIF encoding\n* [image-scraper](https://github.com/sananth12/ImageScraper) - A cool command line image scraper with a lot of features.\n* [imgp](https://github.com/jarun/imgp) - Blazing fast batch image resizer and rotator\n* [jc](https://github.com/kellyjonbrazil/jc) - Convert command output, file-types, and common strings to JSON or YAML for easier use in scripts.\n* [jo](https://github.com/jpmens/jo) - A small utility to create JSON objects from command-line arguments.\n* [jq](https://github.com/stedolan/jq) - Sed for json data. You can use it to slice and filter and map and transform structured data\n* [korkut](https://github.com/oguzhaninan/korkut) - Quick and simple image processing at the command line.\n* [library](https://github.com/chapmanjacobd/library) - Create SQLITE databases for folders of music, video, images, or online media. Play and track media like Plex but a CLI-only interface with many sorting options.\n* [mpv](https://mpv.io/) - Lets you play most audio and video formats (using ASCII characters) in the shell as well as in a GUI.\n* [nehm](https://github.com/bogem/nehm) - Console tool, which downloads, sets IDv3 tags and adds to your iTunes (if you use it) your SoundCloud likes in convenient way\n* [PiCAST](https://github.com/lanceseidman/PiCAST) - PiCAST turns your $35 Raspberry Pi in to a Chromecast like Device\n* [sejda](https://github.com/torakiki/sejda/) - Command line manipulation of PDF documents (split, merge, rotate, convert to jpg, extract text, etc)\n* [visidata](https://github.com/saulpw/visidata) - A terminal spreadsheet multitool for exploring and arranging data (csv/json/xml/xls/yaml/etc)\n* [xidel](https://github.com/benibela/xidel/) - Cli tool to filter, map and create HTML/XML/JSON data with (Turing-complete) XPath and XQuery.\n* [xmlstarlet](http://xmlstar.sourceforge.net/) - Old but powerful tool for command-line XML formatting, filtering, and manipulation.\n* [yq](https://github.com/mikefarah/yq) - yq is a portable command-line YAML processor\n\n## Applications\n\n*Command line-based applications or command line access to existing services.*\n\n* [ansiweather](https://github.com/fcambus/ansiweather) - Weather in your terminal, with ANSI colors and Unicode symbols\n* [awless](https://github.com/wallix/awless) - A powerful, innovative and small surface CLI to manage AWS.\n* [bashblog](https://github.com/cfenollosa/bashblog) - A Bash script that handles blog posting\n* [carbon-now-cli](https://github.com/mixn/carbon-now-cli) - 🎨 Beautiful images of your code — from right inside your terminal.\n* [choosealicense-cli](https://github.com/lord63/choosealicense-cli) - Choose an OSS license from the comfort of your terminal\n* [cointop](https://github.com/miguelmota/cointop) - The fastest and most interactive terminal based UI application for tracking cryptocurrencies\n* [dstask](https://github.com/naggie/dstask) - Single binary terminal-based TODO manager with git-based sync + markdown notes per task\n* [editly](https://github.com/mifi/editly) - Command line video editor\n* [facebook-cli](https://github.com/specious/facebook-cli) - Facebook command line tool\n* [fanyi](https://github.com/afc163/fanyi) - Translate English to Chinese in terminal\n* [gcalcli](https://github.com/insanum/gcalcli) - Google Calendar command line interface\n* [geeknote](https://github.com/VitaliyRodnenko/geeknote) - Command line evernote client\n* [haxor-news](https://github.com/donnemartin/haxor-news) - Browse Hacker News like a haxor\n* [hn-cli](https://github.com/rafaelrinaldi/hn-cli) - Browse Hacker News from the comfort of your Terminal\n* [iponmap](https://github.com/nogizhopaboroda/iponmap) - Draw point on world map using ip address\n* [isitup](https://github.com/lord63/isitup) - Check whether a website is up or down\n* [jrnl](https://github.com/jrnl-org/jrnl) - A simple command line journal application that stores your journal in a plain text file\n* [kanban.bash](https://github.com/coderofsalvation/kanban.bash) - commandline asciii kanban board for minimalist productivity bash hackers (csv-based)\n* [ledger](https://github.com/ledger/ledger) - Command line accounting\n* [licen](https://github.com/lord63/licen) - Generate your license. Yet another lice, but implement with Jinja2 and docopt\n* [md2png](https://github.com/weaming/md2png) - Convert markdown to PNG image\n* [moviemon](https://github.com/iCHAIT/moviemon) - Everything about your movies within the command line.\n* [nomino](https://github.com/yaa110/nomino) - Batch rename utility using regex, sort and map file options.\n* [pcalc](https://github.com/alt-romes/programmer-calculator) - Calculator made for programmers working with multiple number representations, sizes, and overall close to the bits.\n* [pockyt](https://github.com/achembarpu/pockyt) - Read, Manage, and Automate your [Pocket](https://getpocket.com) collection.\n* [pushblast](https://github.com/alebcay/pushblast) - Get PushBullet notifications when a shell program exits\n* [pushbullet-bash](https://github.com/Red5d/pushbullet-bash) - Bash interface to the PushBullet API\n* [ranger](https://github.com/ranger/ranger) - A console file manager with VI key bindings.\n* [Reddit Terminal Viewer](https://github.com/michael-lazar/rtv) - Browse Reddit from your terminal\n* [SAWS](https://github.com/donnemartin/saws) - A Supercharged AWS CLI\n* [taskbook](https://github.com/klaussinani/taskbook) - Tasks, boards & notes for the command-line habitat\n* [taskwarrior](https://taskwarrior.org/) - A command-line TODO list manager\n* [terjira](https://github.com/keepcosmos/terjira) - Command line power tool for Jira\n* [ticker](https://github.com/achannarasappa/ticker) — Terminal stock ticker with live updates and position tracking\n* [vl](https://github.com/ellisonleao/vl) - URL link checker on text documents\n* [wego](https://github.com/schachmat/wego) - Weather app for the terminal\n* [whales](https://github.com/Gueils/whales) - A tool to automatically dockerize your applications\n* [whereami](https://github.com/rafaelrinaldi/whereami) - Get your geolocation information from the CLI\n* [wttr.in](https://github.com/chubin/wttr.in) - :partly_sunny: The right way to check the weather (curl wttr.in)\n\n## Games\n\n*All work and no play is a cruddy way to spend your day.*\n\n* [bash2048](https://github.com/mydzor/bash2048) - Bash implementation of 2048 game\n* [minesweeper](https://github.com/feherke/Bash-script/tree/master/minesweeper) - Bash implementation of minesweeper\n* [nudoku](https://github.com/jubalh/nudoku) - ncurses based sudoku game written in C\n* [piu-piu](https://github.com/vaniacer/piu-piu-SH) - Horizontal scroller game in bash with multiplayer mode!\n* [sedtris](https://github.com/uuner/sedtris) - Tetris in sed\n* [sed-scripts](https://github.com/aureliojargas/sed-scripts) - Arkanoid and Sokoban written using sed\n* [SHTAP](https://notimetoplay.org/engines/shtap/) - Reusable text adventure engine for Bash 4\n* [tty-solitaire](https://github.com/mpereira/tty-solitaire) - Play solitaire in your terminal!\n\n## Shell Package Management\n\n*Tools for managing multiple shell configurations. For zsh-specific tools, see the Zsh section.*\n\n* [bash-it](https://github.com/Bash-it/bash-it) - A community Bash framework\n* [basher](https://github.com/basherpm/basher) - A package manager for shell scripts\n* [bashing](https://github.com/xsc/bashing) - Smashing Bash into Pieces\n* [bpkg](https://www.bpkg.sh/) - JavaScript has npm, Ruby has Gems, Python has pip and now Shell has bpkg\n* [dotdrop](https://github.com/deadc0de6/dotdrop) - Save your dotfiles once, deploy them everywhere\n* [dotfiler](https://github.com/svetlyak40wt/dotfiler) – Shell agnostic git based dotfiles package manager, written in Python.\n* [fresh](https://github.com/freshshell/fresh) - Keep your dotfiles fresh\n* [homeshick](https://github.com/andsens/homeshick) - Git dotfile synchronizer written in Bash\n* [shallow-backup](https://github.com/alichtman/shallow-backup) - Easily create lightweight documentation of installed packages, dotfiles, and more\n* [shundle](https://github.com/javier-lopez/shundle) - Plugin manager for shell scripts\n* [vcsh](https://github.com/RichiH/vcsh) - Config manager based on Git\n* [yadm](https://yadm.io/) - Git-based dotfiles manager supporting encryption, alternates, and bootstrapping\n\n## Shell Script Development\n\n*Tools for writing, improving, or organizing Bash or other shell scripts*\n\n* [ansi](https://github.com/fidian/ansi) - ANSI escape codes in pure bash - change text color, position the cursor, much more\n* [assert.sh](https://github.com/lehmannro/assert.sh) - Bash unit testing framework\n* [bashew](https://github.com/pforret/bashew) - bash script creator - from small stand-alone script to complex projects with CI/CD and testing\n* [bashful](https://github.com/jmcantrell/bashful) - A collection of libraries to simplify writing Bash scripts\n* [Bashlets](https://github.com/reale/bashlets) - A modular extensible toolbox for Bash\n* [bashly](https://bashly.dannyb.co/) - Bash command line framework and CLI generator\n* [bashmanager](https://github.com/lingtalfi/bashmanager) - mini bash framework for creating command line tools\n* [bashwithnails](https://github.com/mindaugasbarysas/bashwithnails) - a Bash framework written just for fun with testing, dependency management & packaging\n* [bash-language-server](https://github.com/bash-lsp/bash-language-server) - [LSP](https://microsoft.github.io/language-server-protocol/)-based Bash language server\n* [bash-modules](https://github.com/vlisivka/bash-modules) - functions for developing with [unofficial strict mode](http://redsymbol.net/articles/unofficial-bash-strict-mode/) enabled.\n* [bats](https://github.com/bats-core/bats-core) - Bash Automated Testing System\n* [composure](https://github.com/erichs/composure) - Compose, document, version and organize your shell functions\n* [crash](https://github.com/molovo/crash) - Proper error handling, exceptions and try/catch for ZSH\n* [critic.sh](https://github.com/Checksum/critic.sh) - Dead simple testing framework for Bash with coverage reporting\n* [dispatch](https://github.com/Mosai/workshop/blob/master/doc/dispatch.md) - A command line argument parser in 50 lines of portable shell script.\n* [esh](https://github.com/jirutka/esh) - A simple templating engine based on shell, implemented in ~290 lines of POSIX shell and awk.\n* [Fishtape](https://github.com/jorgebucaran/fishtape) - TAP producer and test harness for fish\n* [getoptions](https://github.com/ko1nksm/getoptions) - An elegant option parser for shell scripts (sh, bash and all POSIX shells)\n* [getopts.fish](https://github.com/jorgebucaran/getopts.fish) - CLI parser for fish\n* [is.sh](https://github.com/qzb/is.sh) - An alternative for builtin test command, it will make your \"if\" statements pretty\n* [lumberjack](https://github.com/molovo/lumberjack) - A logging interface for shell scripts\n* [mo](https://github.com/tests-always-included/mo) - Mustache templates in pure bash\n* [optparse](https://github.com/nk412/optparse) - A BASH wrapper for getopts, for simple command line arguments.\n* [rerun](https://github.com/rerun/rerun) - A modular shell automation framework to organize your keeper scripts\n* [revolver](https://github.com/molovo/revolver) - A reusable progress spinner for shell scripts\n* [phases](https://github.com/sorokine/phases) - Minimally invasive bash preprocessor, select sections of your script to run\n* [powscript](https://github.com/coderofsalvation/powscript) - bash transpiler written in bash (coffeescript for bash)\n* [semver_bash](https://github.com/cloudflare/semver_bash) - Semantic Versioning in Bash\n* [sh-semver](https://github.com/qzb/sh-semver) - Semver tool for bash - finds versions matching to specified rules\n* [shellcheck](https://github.com/koalaman/shellcheck) - Static analysis tool for shell scripts\n* [shellfire](https://github.com/shellfire-dev/shellfire) -  A repository of namespaced, composable shell (bash, sh and dash) function libraries\n* [shellspec](https://github.com/shellspec/shellspec) - A full-featured BDD unit testing framework for dash, bash, ksh, zsh and all POSIX shells\n* [shfmt](https://github.com/mvdan/sh) - A shell parser, formatter, and interpreter with bash support; includes shfmt\n* [shpec](https://github.com/rylnd/shpec) - A shell testing framework\n* [shutit](https://ianmiell.github.io/shutit/) - Automation framework based on bash and pexpect\n* [sub](https://github.com/basecamp/sub) - A delicious way to organize programs\n* [ts](https://github.com/thinkerbot/ts) - A shell test script\n* [urchin](https://github.com/tlevine/urchin) - An idiomatic shell testing framework that uses only shell commands\n* [shunit2](https://github.com/kward/shunit2) - A unit test framework for Bash scripts with a flavour of JUnit/PyUnit.\n* [rebash](https://github.com/jandob/rebash) - Scripting library/framework. Features: imports, exceptions, doc-tests ...\n* [zunit](https://github.com/zunit-zsh/zunit) - A powerful unit testing framework for ZSH\n\n# Guides\n\n* [Bash Official Reference Manual](https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html)\n* [Bash Hackers Wiki](https://web.archive.org/web/20230406205817/https://wiki.bash-hackers.org/)\n* [Greg Wooledge's (aka \"greycat\") wiki](https://mywiki.wooledge.org).\n  Specifically [Bash Guide](https://mywiki.wooledge.org/BashGuide), [Bash FAQ](https://mywiki.wooledge.org/BashFAQ) and [Bash Pitfalls](https://mywiki.wooledge.org/BashPitfalls)\n* [Google's Shell Style Guide](https://google.github.io/styleguide/shell.xml)\n* [The Linux Documentation Project: Bash Programming - Intro/How-to](https://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html)\n* [The Linux Documentation Project: Advanced Bash Scripting Guide](https://tldp.org/LDP/abs/html/)\n* [WikiBooks: Bash Shell Scripting](https://en.wikibooks.org/wiki/Bash_Shell_Scripting)\n* [Use the Unofficial Bash Strict Mode (Unless You Looove Debugging)](http://redsymbol.net/articles/unofficial-bash-strict-mode/)\n* [The Art of Command Line](https://github.com/jlevy/the-art-of-command-line)\n* [Learn Enough Command Line to Be Dangerous](https://www.learnenough.com/command-line-tutorial/basics)\n* [A guide to learn bash](https://github.com/Idnan/bash-guide)\n* [Shell Field Guide](https://raimonster.com/scripting-field-guide/)\n\n# Other Awesome Lists\n\nOther amazingly awesome lists can be found in [awesome-awesome](https://github.com/emijrp/awesome-awesome) and [awesome-awesomeness](https://github.com/bayandin/awesome-awesomeness).\n\n### See also\n\n* [awesome-cli-apps](https://github.com/agarrharr/awesome-cli-apps)\n* [awesome-fish][awesome-fish]\n* [awesome-zsh][awesome-zsh]\n* [awesome-bash][awesome-bash]\n* [terminals-are-sexy](https://github.com/k4m4/terminals-are-sexy)\n\n[awesome-badge]: https://raw.githubusercontent.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg\n[awesome-fish]: https://github.com/jorgebucaran/awsm.fish\n[awesome-link]: https://github.com/sindresorhus/awesome\n[awesome-zsh]: https://github.com/unixorn/awesome-zsh-plugins\n[awesome-bash]: https://github.com/awesome-lists/awesome-bash\n"
        },
        {
          "name": "README_ZH-CN.md",
          "type": "blob",
          "size": 21.83,
          "content": "# Awesome Shell [![Awesome][awesome-badge]][awesome-link]\n\n这是一份非常棒的命令行框架、工具包、指南、以及小玩意儿组织清单。由 awesome-php 获得灵感。该 awesome 收集在 [Unix-Shell.ZEEF.com](https://unix-shell.zeef.com/caleb.xu) 上也可用。\n\n- [命令行效率](#命令行效率)\n- [定制](#定制)\n- [针对开发者](#针对开发者)\n- [系统工具](#系统工具)\n- [下载与服务](#下载与服务)\n- [多媒体与文件格式](#多媒体与文件格式)\n- [应用程序](#应用程序)\n- [游戏](#游戏)\n- [Shell 包管理](#shell-包管理)\n- [Shell 脚本开发](#shell-脚本开发)\n- [指南](#指南)\n- [**Awesome Zsh**][awesome-zsh]&nbsp; [![Awesome][awesome-badge]][awesome-zsh]\n- [**Awesome Fish**][awesome-fish] [![Awesome][awesome-badge]][awesome-fish]\n- [**Awesome Bash**][awesome-bash] [![Awesome][awesome-badge]][awesome-bash]\n- [其它 Awesome 清单](#其它-awesome-清单)\n\n## 命令行效率\n\n*使你的终端体验更有效率的搜索、书签、多路复用、以及其它工具。*\n\n* [AdvancedNewFile](https://github.com/tanrax/terminal-AdvancedNewFile) - 以递归的方式快速创建文件和目录。 受Vim插件启发。\n* [ag](https://github.com/ggreer/the_silver_searcher) - 在层级目录中超快的搜索字符串\n* [aliases](https://github.com/sebglazebrook/aliases) - 针对 bash 的上下文动态组织别名\n* [aliasme](https://github.com/Jintin/aliasme) - 用来快速更改目录的 alias 辅助程序\n* [autoenv](https://github.com/inishchith/autoenv) - 基于目录的环境\n* [autojump](https://github.com/wting/autojump) - 自带学习功能的 cd 命令，从命令行轻易地导航目录\n* [bashhub](https://github.com/rcaloras/bashhub-client) - :cloud: 在云中的 bash 历史，已索引且可搜索。\n* [bashmarks](https://github.com/huyng/bashmarks) - 适用于 shell 的目录书签\n* [bd](https://github.com/vigneshwaranr/bd) - 迅速回到父目录\n* [boilr](https://github.com/tmrts/boilr) - 从 boilerplate 模板创建项目的超快命令行工具\n* [boom](https://github.com/holman/boom) - 在命令行中存储链接及片断\n* [borg](https://github.com/ok-borg/borg) - 基于终端的 bash 命令搜索引擎\n* [byobu](https://www.byobu.org) - 基于文本的窗口管理器及终端多路复用器\n* [CloudClip](https://github.com/skywind3000/CloudClip) - 云剪贴板，在不同的系统之间 copy/paste （使用 gist 作为后端）\n* [commacd](https://github.com/shyiko/commacd) - 在 Bash 中更快速的移动方式\n* [desk](https://github.com/jamesob/desk) - 适用于 shell 的轻量级工作区管理器\n* [direnv](https://github.com/direnv/direnv) - 针对 shell 的环境切换工具（利用 autoenv 比较）\n* [dnote](https://github.com/dnote/dnote) - 命令行上的笔记本，支持多设备同步和网络界面。\n* [enhancd](https://github.com/b4b4r07/enhancd) - :rocket: 具有交互式过滤功能的下一代 cd 命令\n* [fasd](https://github.com/clvv/fasd) - 命令行效率提升器，提供快速访问文件及目录\n* [foxy](https://github.com/s-p-k/foxy) - 适合 Firefox 及 Surf 浏览器的无格式文本书签\n* [fz](https://github.com/changyuheng/fz) - z 的无缝模糊补全\n* [fzf](https://github.com/junegunn/fzf) - 命令行下的模糊搜索器\n* [hhighlighter](https://github.com/paoloantinori/hhighlighter) - 在命令输出中给单词着色\n* [hr](https://github.com/LuRsT/hr) - 适用于终端的 `<hr />`\n* [hss](https://github.com/six-ddc/hss) - 可交互的ssh批量执行客户端，具有自动完成远端路径和异步执行的特性\n* [hstr](https://github.com/dvorka/hstr) - Bash 历史建议框\n* [k](https://github.com/supercrabtree/k) - k 是一个使目录列表更可读的 Zsh 脚本，它增添了 Git 状态、文件颜色、以及腐朽的日期\n* [k alias](https://github.com/lingtalfi/k) - 获得用于单行的酷 alias\n* [marker](https://github.com/pindexis/marker) - 将你的 shell 命令加到书签\n* [mackup](https://github.com/lra/mackup/) - 云同步应用程序的配置文件(OS X/Linux)\n* [parallel](http://www.gnu.org/software/parallel/) - 以并行化方式从标准输入构造并执行 shell 命令行\n* [pathpicker](https://github.com/facebook/PathPicker) - 允许将 grep、搜索、git 等的输出结果作为输入，并提供友好的选择界面，以便打开或作为命令的参数\n* [percol](https://github.com/mooz/percol) - 为传统的 UNIX shell 管道添加交互式的过滤\n* [qfc](https://github.com/pindexis/qfc) - 针对 Bash 和 Zsh 的文件补全 widget\n* [SHML](https://github.com/odb/shml) - 适用于终端的样式框架 (Shell 标记语言)\n* [slugify](https://github.com/benlinton/slugify) - 将文件名及目录转换为 web 友好的格式\n* [sman](https://github.com/tokozedg/sman) - :bug: 命令行下的片断管理器\n* [spark](https://github.com/holman/spark) - ▁▂▃▅▂▇ 在你的 shell 中\n* [spark.fish](https://github.com/jorgebucaran/spark.fish) - ▁▂▃▅ Sparkline 生成器\n* [sheet](https://github.com/oscardelben/sheet) -  用于命令行的文本片断\n* [spot](https://github.com/rauchg/spot) - 微型的文件搜索工具\n* [snips](https://github.com/srijanshetty/snips) - 管理代码片断的命令行工具\n* [sshfs](https://github.com/osxfuse/sshfs) - 通过 SSH 挂载远程文件系统的工具\n* [sshpass](https://sourceforge.net/projects/sshpass/) - 通过命令行传递ssh密码，无需再次输入，适合用于脚本之中\n* [mosh](https://mosh.org) - 第一个实现SSP的应用，MIT的博士项目，使得C/S之间可以保持链接持续，即使断开还能恢复之前的状态\n* [sudocabulary](https://github.com/badarsh2/Sudocabulary) - 从终端学习英语词汇\n* [td-cli](https://github.com/darrikonn/td-cli) - 组织者命令行管理器，用于跨多个项目组织和管理您的待办事项。\n* [thefuck](https://github.com/nvbn/thefuck) - 通过使用容易记住的命令修正常见的 shell 错误\n* [tmux](http://tmux.github.io/) - 很棒的终端复用器\n* [up](https://github.com/shannonmoeller/up) - 按名称或计数升序排列目录，支持 bash 和 zsh\n* [v](https://github.com/rupa/v) - 适用于 Vim 的 z\n* [wemux](https://github.com/zolrath/wemux) - 多用户使用 Tmux 变得更容易\n* [z](https://github.com/rupa/z) - z 是新的 j\n* [z.lua](https://github.com/skywind3000/z.lua) - 一个会学习你使用习惯的快速 cd 命令\n* [zoxide](https://github.com/ajeetdsouza/zoxide) - 用Rust编写的浏览文件系统的更快方法\n\n## 定制\n\n*定制提示符、颜色主题等。*\n\n* [base16-shell](https://github.com/chriskempson/base16-shell) - 适用于 shell 的 Base16\n* [bash-full-of-colors](https://github.com/slomkowski/bash-full-of-colors) - 超强的命令行提示（含 screen、tmux、git 等支持）\n* [bash-git-prompt](https://github.com/magicmonty/bash-git-prompt) - 针对 Git 用户的信息及梦幻提示符\n* [bash-powerline](https://github.com/riobard/bash-powerline) - Powerline 风格的 Bash 提示符，纯 Bash 脚本\n* [bashstrap](https://github.com/barryclark/bashstrap) - 美化 OS X 终端的快速方法\n* [bullet-train-oh-my-zsh-theme](https://github.com/caiogondim/bullet-train.zsh) - :bullettrain_side: 基于 Powerline Vim 插件的 oh-my-zsh shell 主题\n* [emojify](https://github.com/mrowa44/emojify) - 适用于命令行的表情 :scream:\n* [flatui-terminal-theme](https://dribbble.com/shots/1021755-Flat-UI-Terminal-Theme) - 很好的终端颜色主题\n* [git-prompt](https://github.com/lvv/git-prompt) - 包含 Git、SVN 及 HG 模块的 Bash 提示符\n* [gittify](https://github.com/momeni/gittify) - 彩色的 Bash 提示符及定制的 Git 别名\n* [Gogh - Color Scheme](https://github.com/Mayccoll/Gogh) - 适用于 GNOME 终端的颜色主题\n* [liquidprompt](https://github.com/nojhan/liquidprompt) - 针对 Bash 和 Zsh 的全功能及用心设计的自适应提示符\n* [mysql-colorize](https://github.com/zpm-zsh/mysql-colorize) -  彩色的 MySQL 命令行客户端\n* [oh-my-git](https://github.com/arialdomartini/oh-my-git) - 针对 Bash 和 Zsh 的自用 Git 提示符\n* [sexy-bash-prompt](https://github.com/twolfson/sexy-bash-prompt) - 包含颜色、Git 状态及 Git 分支的 Bash 提示符\n\n## 针对开发者\n\n*命令行开发、版本控制、以及部署。*\n\n* [bocker](https://github.com/p8952/bocker) - 使用百行 bash 实现的 Docker\n* [cloc](https://github.com/AlDanial/cloc) - 统计代码行数\n* [dokku](https://github.com/dokku/dokku) - 百行 Bash 打造的 Docker 迷你 Heroku\n* [getopts.fish](https://github.com/jorgebucaran/getopts.fish) - 适用于 fish 的命令行解析器\n* [forgit](https://github.com/wfxr/forgit) - Git工具，使用`fzf`提供交互式的操作模式\n* [git-extra-commands](https://github.com/unixorn/git-extra-commands) - 很多 Git 扩展工具，包括 churn、cut-branch、improved-merge 等\n* [git-extras](https://github.com/tj/git-extras) - Git 工具，包括仓库摘要、repl、更改日志人数、作者提交百分比等\n* [git-open](https://github.com/paulirish/git-open) - 输入 `git open` 在浏览器中打开 GitHub 页面或仓库网站\n* [git-semver](https://github.com/markchalloner/git-semver) - 用来方便的语义化版本及更改日志验证的 Git 插件\n* [git-sh](https://github.com/rtomayko/git-sh) - 适合 Git 工作的定制 Bash 环境\n* [hub](https://github.com/github/hub) - 更易使用 GitHub 的命令行工具\n* [mr](https://myrepos.branchable.com) - 多仓库管理工具\n* [overcommit](https://github.com/sds/overcommit) - 完全可配置且可扩展的 Git hook 管理器\n* [pre-commit](https://pre-commit.com) - 用于管理及维护多语言 pre-commit hooks 的框架\n* [repren](https://github.com/jlevy/repren) - 命令行搜索与替换及文件重命名的瑞士军刀式工具\n* [slap](https://github.com/slap-editor/slap) - 运行在 Node.js 上的基于终端的类 Sublime 文本编辑器\n* [shipit](https://github.com/sapegin/shipit) - 极简 SSH 部署\n* [tag](https://github.com/aykamko/tag) - 立即跳到你的公牛队比赛\n\n## 系统工具\n\n*操作系统相关工具，包括系统管理、系统调试、及文件和进程管理。*\n\n* [atop](https://www.atoptool.nl) - 能够报告所有进程活动的 ASCII 全屏性能监视器\n* [cv](https://github.com/Xfennec/progress) - 显示 cp、rm、dd 等命令进度的 Linux 工具\n* [glances](https://github.com/nicolargo/glances) - 系统监视之眼\n* [goaccess](https://github.com/allinurl/goaccess) - 运行于 \\*nix 系统终端中的实时 web 日志分析器及交互式查看器\n* [histstat](https://github.com/vesche/histstat) - 适用于 netstat 的历史\n* [htop](https://github.com/hishamhm/htop) - 基于 ncurses 的交互式进程查看器，其目标是比 `top` 更好\n* [lnav](http://lnav.org) - 小型的高级日志文件查看器\n* [lsp](https://github.com/dborzov/lsp) - 改进的 `ls`，包含无格式语言的文件说明及智能的文件分组\n* [mtr](https://github.com/traviscross/mtr) - traceroute 和 ping 功能合二为一的网络诊断工具\n* [ncdu](https://dev.yorhel.nl/ncdu) - NCurses 磁盘占用统计\n* [powertop](https://github.com/fenrus75/powertop) - 电池/电源占用及设备状态监视命令行工具，包含调整选项\n* [procdog](https://github.com/jlevy/procdog) - 轻量级的命令行控制类似服务器的长实时进程\n* [quick-secure](https://github.com/marshyski/quick-secure) - 快速的安全并加固 UNIX/Linux 系统\n* [wifi-wand](https://github.com/keithrbennett/wifiwand) - 一个用来管理MacOs上 WiFi无线网络的Ruby命令行应用程序, 安装请执行 `gem install wifi-wand`)\n\n## 下载与服务\n\n*使用 shell 脚本编写的自架、轻量级服务器与网络工具。*\n\n* [aria2](https://github.com/aria2/aria2) - aria2 是一款在命令行中操作的轻量级多协议、多来源、及跨平台下载工具，它支持 HTTP/HTTPS、FTP、BitTorrent 及 Metalink\n* [balls](https://github.com/jneen/balls) - Bash on Balls，全功能的 web 平台\n* [bashttpd](https://github.com/avleen/bashttpd) - 使用 Bash 编写的 web 服务器\n* [bitpocket](https://github.com/sickill/bitpocket) - \"DIY Dropbox\" 或 \"双向目录同步（含正确删除）\"\n* [coursera-dl](https://github.com/coursera-dl/coursera-dl) - 从Course公开课上下载视频\n* [Dropbox-Uploader](https://github.com/andreafabrizi/Dropbox-Uploader) - Dropbox Uploader 是用来从 Dropbox 上传、下载、列出或删除文件的 Bash 脚本\n* [httpie](https://github.com/httpie/httpie) - HTTPie 是一个命令行 HTTP 客户端，用户友好的 cURL 替代品\n* [http-server](https://www.npmjs.com/package/http-server) - http-server可以启动一个轻量级的http服务\n* [ngincat](https://github.com/jaburns/ngincat) - 使用 netcat 的微型 Bash HTTP 服务器\n* [resty](https://github.com/micha/resty) - 你可以在管道中使用的小型命令行 REST 客户端\n* [yt-dlp](https://github.com/yt-dlp/yt-dlp) - 从 YouTube.com 及其它视频站点下载视频的小命令行程序\n\n## 多媒体与文件格式\n\n*用于处理视频及音频文件的工具。*\n\n* [adb-export](https://github.com/sromku/adb-export) - 导出 Android 内容提供商为 CSV 格式\n* [Android-Kitchen](https://github.com/dsixda/Android-Kitchen) - 基于文本的 Android ROM 定制 kitchen，使用 shell 脚本并支持 Cygwin/OS X/Linux\n* [Beets](https://github.com/beetbox/beets) - 音乐库管理器及 MusicBrainz 标签工具\n* [cmus](https://github.com/cmus/cmus) - 跨平台的命令行音乐播放器\n* [gifgen](https://github.com/lukechilds/gifgen) - 简单高质量的 GIF 编码\n* [image-scraper](https://github.com/sananth12/ImageScraper) - 包含诸多特性的酷命令行图像 scraper\n* [jq](https://github.com/stedolan/jq) - 针对 json 数据的 Sed，你可以使用它分片、过滤、映射及变换结构化数据\n* [csvtookit](https://csvkit.readthedocs.io/en/0.9.1/) - 使用pip install csvki安装, csv文件进行处理的强大工具\n* [mplayer](http://www.mplayerhq.hu/design7/news.html) - 让你在 shell 中播放主流的音频及视频格式（使用 ASCII 字符）\n* [nehm](https://github.com/bogem/nehm) - 下载、设置 IDv3 标签、并添加到 iTunes 的控制台工具\n* [PiCAST](https://github.com/lanceseidman/PiCAST) - PiCAST 将你的 35 刀 Raspberry Pi 变成类 Chromecast 设备\n* [sejda](https://github.com/torakiki/sejda/) - 命令行下的 PDF 文档处理工具（分割、合并、旋转、转换为 jpg、提取文本等）\n* [xmlstarlet](http://xmlstar.sourceforge.net/) - 古老而强大的命令行 XML 格式化、过滤及处理工具\n* [ffmpeg](http://ffmpeg.org/) - 非常强大的视频处理工具\n* [imageMagick](http://www.imagemagick.org/script/index.php) - 其强大有目共睹\n\n## 应用程序\n\n*基于命令行的应用程序或从命令行访问现有服务。*\n\n* [ansiweather](https://github.com/fcambus/ansiweather) - 终端中的天气预报，包含 ANSI 颜色及 Unicode 符号\n* [bashblog](https://github.com/cfenollosa/bashblog) - 处理 blog 投递的 Bash 脚本\n* [choosealicense-cli](https://github.com/lord63/choosealicense-cli) - 从终端选授權合約\n* [facy](https://github.com/huydx/facy) - 命令行下的 Facebook 客户端\n* [fanyi](https://github.com/afc163/fanyi) - 翻译英文为中文的命令行工具\n* [geeknote](https://github.com/VitaliyRodnenko/geeknote) - 命令行的 Evernote 客户端\n* [haxor-news](https://github.com/donnemartin/haxor-news) - 像黑客一样浏览 Hacker News\n* [hn-cli](https://github.com/rafaelrinaldi/hn-cli) - 从终端舒服的浏览 Hacker News\n* [iponmap](https://github.com/nogizhopaboroda/iponmap) - 利用 IP 地址在世界地图上绘点\n* [isitup](https://github.com/lord63/isitup) - 检查一个网站是否正常上线\n* [jrnl](https://github.com/jrnl-org/jrnl) - 使用无格式文本文件存储日记的简单命令行程序\n* [ledger](https://github.com/ledger/ledger) - 命令行记账\n* [licen](https://github.com/lord63/licen) - 生成项目 license\n* [md2png](https://github.com/weaming/md2png) - 从 markdown 文件生成 png 图片\n* [moviemon](https://github.com/iCHAIT/moviemon) - 有关在命令行下看电影的每样东东\n* [pushblast](https://github.com/alebcay/pushblast) - 当 shell 程序退出时获得 PushBullet 通知\n* [pushbullet-bash](https://github.com/Red5d/pushbullet-bash) - PushBullet API 的 Bash 接口\n* [Reddit Terminal Viewer](https://github.com/michael-lazar/rtv) - 从终端浏览 Reddit\n* [SAWS](https://github.com/donnemartin/saws) - 超强的 AWS 命令行界面\n* [taskwarrior](https://taskwarrior.org/) - 一个命令行去做列表管理器\n* [vl](https://github.com/ellisonleao/vl) - 针对文本文档的 URL 链接检查器\n* [wego](https://github.com/schachmat/wego) - 适用于终端的天气预报应用\n* [whereami](https://github.com/rafaelrinaldi/whereami) - 从命令行获得你的地理位置信息\n* [fail2ban](http://www.fail2ban.org/wiki/index.php/Main_Page) - SSH防爆破\n\n## 游戏\n\n*只顾工作而不玩玩是一种糟糕的度日方式。*\n\n* [bash2048](https://github.com/mydzor/bash2048) - 2048 游戏的 Bash 实现\n* [minesweeper](https://github.com/feherke/Bash-script/tree/master/minesweeper) - 扫雷的 Bash 实现\n* [piu-piu](https://github.com/vaniacer/piu-piu-SH) - 水平滚动游戏 Bash 实现\n* [sedtris](https://github.com/uuner/sedtris) - 使用 sed 实现的俄罗斯方块\n* [sed-scripts](https://github.com/aureliojargas/sed-scripts) - 使用 sed 编写的 Arkanoid 和 Sokoban\n\n## Shell 包管理\n\n*用于管理多个 shell 配置的工具。对于特定的 zsh 工具，参阅 Zsh 节。*\n\n* [bash-it](https://github.com/Bash-it/bash-it) - 社区化的 Bash 框架\n* [basher](https://github.com/basherpm/basher) - 针对 shell 脚本的包管理器\n* [bpkg](http://www.bpkg.sh/) - JavaScript 有 npm、Ruby 有 Gems、Python 有 pip，现在 Shell 有 bpkg\n* [dotfiler](https://github.com/svetlyak40wt/dotfiler) – 使用 Python 编写的基于 Git 的 Shell dotfiles 管理器\n* [fresh](https://github.com/freshshell/fresh) - 使你的 dotfiles 保持更新\n* [homeshick](https://github.com/andsens/homeshick) - 使用 Bash 编写的 Git dotfile 同步器\n* [vcsh](https://github.com/RichiH/vcsh) - 基于 Git 的配置管理器\n* [shundle](https://github.com/javier-lopez/shundle) - 适用于 shell 脚本的插件管理器\n\n## Shell 脚本开发\n\n*用于编写、改进、及管理 Bash 或其它 shell 脚本的工具。*\n\n* [ansi](https://github.com/fidian/ansi) - 使用纯 Bash 实现的 ANSI 转义码，包括更改文本颜色、定位光标等等\n* [assert.sh](https://github.com/lehmannro/assert.sh) - Bash 单元测试框架\n* [bashful](https://github.com/jmcantrell/bashful) - 简化编写 Bash 脚本的库收集\n* [bashmanager](https://github.com/lingtalfi/bashmanager) - 用来创建命令行工具的微型 Bash 框架\n* [bats](https://github.com/bats-core/bats-core) - Bash 自动化测试系统\n* [Fishtape](https://github.com/jorgebucaran/fishtape) - 适用于 fish 的 TAP 产生器及测试工具\n* [composure](https://github.com/erichs/composure) - 撰写、文档、版本、及组织你的 shell 函数\n* [dispatch](https://github.com/Mosai/workshop/blob/master/doc/dispatch.md) - 使用 50 行可移植 shell 脚本写成的命令行参数解析器\n* [is.sh](https://github.com/qzb/is.sh) - 内置 test 命令的替代品，使 \"if\" 语句更漂亮\n* [mo](https://github.com/tests-always-included/mo) - 使用纯 Bash 实现的 Mustache 模板\n* [optparse](https://github.com/nk412/optparse) - 针对 getopts 的 BASH wrapper，用于简单的命令行参数\n* [rerun](https://github.com/rerun/rerun) - 用来管理保留脚本的模块化 shell 自动化框架\n* [semver_bash](https://github.com/cloudflare/semver_bash) - 使用 Bash 实现的语义化版本\n* [sh-semver](https://github.com/qzb/sh-semver) - 适用于 bash 的 Semver 工具，匹配指定规则来查找版本\n* [shellcheck](https://github.com/koalaman/shellcheck) - 针对 shell 脚本的静态化分析工具\n* [shellfire](https://github.com/shellfire-dev/shellfire) - 命名空间仓库，可写 shell (bash、sh 及 dash) 函数库\n* [shpec](https://github.com/rylnd/shpec) - shell 测试框架\n* [sub](https://github.com/basecamp/sub) - 以美味之道来管理程序\n* [ts](https://github.com/thinkerbot/ts) - shell 测试脚本\n* [shunit2](https://github.com/kward/shunit2) - 适用于 Bash 脚本的单元测试框架（具有 JUnit/PyUnit 风味）\n* [rebash](https://github.com/jandob/rebash) - 脚本库/框架，包含 imports、exceptions、doc-tests 等功能\n\n\n# 指南\n\n* [Bash 黑客的维基](https://web.archive.org/web/20230406205817/https://wiki.bash-hackers.org/)\n* [Greg Wooledge（又名 \"greycat\"）的维基](http://mywiki.wooledge.org)：尤其是 [Bash 指南](http://mywiki.wooledge.org/BashGuide)、[Bash 疑难问答](http://mywiki.wooledge.org/BashFAQ) 及 [Bash 陷阱](http://mywiki.wooledge.org/BashPitfalls)\n* [Google 的 Shell 风格指南](https://google.github.io/styleguide/shell.xml)\n* [Linux 文档项目: Bash 编程 - 简介/如何做](https://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html)\n* [Linux 文档项目: 高级 Bash 脚本指南](https://tldp.org/LDP/abs/html/)\n* [WikiBooks: Bash Shell 脚本](https://en.wikibooks.org/wiki/Bash_Shell_Scripting)\n* [使用非官方的 Bash 严格模式 (除非你爱调试)](http://redsymbol.net/articles/unofficial-bash-strict-mode/)\n* [命令行的艺术](https://github.com/jlevy/the-art-of-command-line)\n* [学会成为命令行杀手](https://www.learnenough.com/command-line-tutorial/basics)\n* [学习bash的指南](https://github.com/Idnan/bash-guide)\n\n\n# 其它 Awesome 清单\n\n其它很棒的 awesome 清单可在 [awesome-awesome](https://github.com/emijrp/awesome-awesome) 和 [awesome-awesomeness](https://github.com/bayandin/awesome-awesomeness) 找到。\n\n\n[awesome-zsh]: https://github.com/unixorn/awesome-zsh-plugins\n[awesome-fish]: https://github.com/jorgebucaran/awsm.fish\n[awesome-link]: https://github.com/sindresorhus/awesome\n[awesome-badge]: https://raw.githubusercontent.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg\n[awesome-bash]: https://github.com/awesome-lists/awesome-bash\n"
        }
      ]
    }
  ]
}