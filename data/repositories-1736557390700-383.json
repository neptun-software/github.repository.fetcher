{
  "metadata": {
    "timestamp": 1736557390700,
    "page": 383,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/dubbo",
      "stars": 40645,
      "defaultBranch": "3.3",
      "files": [
        {
          "name": ".artifacts",
          "type": "blob",
          "size": 3.02,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Please add new modules to the end of the list.\n\ndubbo\ndubbo-auth\ndubbo-apache-release\ndubbo-all-shaded\ndubbo-bom\ndubbo-cluster\ndubbo-common\ndubbo-compatible\ndubbo-compiler\ndubbo-config\ndubbo-config-api\ndubbo-config-spring\ndubbo-config-spring6\ndubbo-configcenter\ndubbo-configcenter-file\ndubbo-configcenter-apollo\ndubbo-configcenter-nacos\ndubbo-configcenter-zookeeper\ndubbo-core-spi\ndubbo-dependencies-all\ndubbo-dependencies-bom\ndubbo-filter-cache\ndubbo-filter-validation\ndubbo-kubernetes\ndubbo-maven-plugin\ndubbo-metadata\ndubbo-metadata-api\ndubbo-metadata-definition-protobuf\ndubbo-metadata-processor\ndubbo-metadata-report-nacos\ndubbo-metadata-report-zookeeper\ndubbo-metrics\ndubbo-metrics-api\ndubbo-metrics-default\ndubbo-metrics-metadata\ndubbo-metrics-prometheus\ndubbo-metrics-registry\ndubbo-metrics-config-center\ndubbo-metrics-netty\ndubbo-metrics-event\ndubbo-native\ndubbo-parent\ndubbo-plugin\ndubbo-qos\ndubbo-qos-api\ndubbo-reactive\ndubbo-registry\ndubbo-registry-api\ndubbo-registry-multicast\ndubbo-registry-multiple\ndubbo-registry-nacos\ndubbo-registry-zookeeper\ndubbo-remoting\ndubbo-remoting-api\ndubbo-remoting-http12\ndubbo-remoting-http3\ndubbo-remoting-websocket\ndubbo-remoting-netty\ndubbo-remoting-netty4\ndubbo-remoting-zookeeper-curator5\ndubbo-rpc\ndubbo-rpc-api\ndubbo-rpc-dubbo\ndubbo-rpc-injvm\ndubbo-rpc-triple\ndubbo-security\ndubbo-serialization\ndubbo-serialization-api\ndubbo-serialization-fastjson2\ndubbo-serialization-hessian2\ndubbo-spring-boot\ndubbo-spring-boot-actuator\ndubbo-spring-boot-actuator-autoconfigure\ndubbo-spring-boot-actuator-compatible\ndubbo-spring-boot-autoconfigure\ndubbo-spring-boot-3-autoconfigure\ndubbo-spring-boot-autoconfigure-compatible\ndubbo-spring-boot-actuator-autoconfigure-compatible\ndubbo-spring-boot-compatible\ndubbo-tracing-brave-zipkin-spring-boot-starter\ndubbo-tracing-otel-zipkin-spring-boot-starter\ndubbo-tracing-otel-otlp-spring-boot-starter\ndubbo-observability-spring-boot-starter\ndubbo-spring-boot-starter\ndubbo-spring-boot-starters\ndubbo-spring-boot-interceptor\ndubbo-nacos-spring-boot-starter\ndubbo-zookeeper-curator5-spring-boot-starter\ndubbo-sentinel-spring-boot-starter\ndubbo-seata-spring-boot-starter\ndubbo-spring-security\ndubbo-tracing\ndubbo-xds\ndubbo-plugin-loom\ndubbo-rest-jaxrs\ndubbo-rest-spring\ndubbo-rest-openapi\ndubbo-triple-servlet\ndubbo-triple-websocket\n"
        },
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.68,
          "content": "#\n#\n#   Licensed to the Apache Software Foundation (ASF) under one or more\n#   contributor license agreements.  See the NOTICE file distributed with\n#   this work for additional information regarding copyright ownership.\n#   The ASF licenses this file to You under the Apache License, Version 2.0\n#   (the \"License\"); you may not use this file except in compliance with\n#   the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#\n\nnotifications:\n  commits:      commits@dubbo.apache.org\n  issues:       notifications@dubbo.apache.org\n  pullrequests: notifications@dubbo.apache.org\n  jira_options: link label link label\n\ngithub:\n  homepage: https://dubbo.apache.org/\n  description: \"The java implementation of Apache Dubbo. An RPC and microservice framework.\"\n  features:\n    # Enable wiki for documentation\n    wiki: true\n    # Enable issue management\n    issues: true\n    # Enable projects for project management boards\n    projects: true\n  protected_branches:\n    master:\n      # only disable force push\n      foo: bar\n    3.0:\n      # only disable force push\n      foo: bar\n    3.1:\n      # only disable force push\n      foo: bar\n  labels:\n    - java\n    - rpc\n    - microservices\n    - framework\n    - restful\n    - distributed-systems\n    - dubbo\n    - service-mesh\n    - http\n    - grpc\n    - web\n  collaborators:\n    - oxsean\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 2.94,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# EditorConfig is awesome: https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ntab_width = 4\nmax_line_length = 120\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.java]\nij_java_continuation_indent_size = 8\nij_java_keep_control_statement_in_one_line = false\nij_java_for_brace_force = always\nij_java_if_brace_force = always\nij_java_keep_first_column_comment = false\nij_java_keep_line_breaks = false\nij_java_keep_simple_blocks_in_one_line = true\nij_java_keep_simple_classes_in_one_line = true\nij_java_keep_simple_lambdas_in_one_line = true\nij_java_keep_simple_methods_in_one_line = true\nij_java_keep_blank_lines_in_code = 1\nij_java_keep_blank_lines_in_declarations = 1\nij_java_blank_lines_after_class_header = 1\nij_java_class_count_to_use_import_on_demand = 999\nij_java_names_count_to_use_import_on_demand = 999\nij_java_imports_layout = org.apache.dubbo.**, |, javax.**, |, java.**, |, *, |, $*\nij_java_insert_inner_class_imports = true\nij_java_space_before_array_initializer_left_brace = true\nij_java_method_parameters_new_line_after_left_paren = true\nij_java_wrap_comments = false\nij_java_wrap_long_lines = false\nij_java_enum_constants_wrap = split_into_lines\nij_java_method_call_chain_wrap = on_every_item\nij_java_method_parameters_wrap = on_every_item\nij_java_extends_list_wrap = normal\nij_java_extends_keyword_wrap = normal\nij_java_binary_operation_wrap = normal\nij_java_binary_operation_sign_on_next_line = true\nij_java_generate_final_locals = false\nij_java_generate_final_parameters = false\n\n[*.groovy]\nmax_line_length = 180\nij_groovy_label_indent_size = 4\nij_groovy_keep_blank_lines_in_code = 1\nij_groovy_keep_blank_lines_in_declarations = 1\nij_groovy_blank_lines_after_class_header = 1\nij_groovy_class_count_to_use_import_on_demand = 999\nij_groovy_names_count_to_use_import_on_demand = 999\nij_groovy_imports_layout = org.apache.dubbo.**, |, javax.**, |, java.**, |, *, |, $*\nij_groovy_space_after_type_cast = false\n\n[*.json]\ntab_width = 2\nindent_size = 2\n\n[*.{yml,yaml}]\ntab_width = 2\nindent_size = 2\n\n[*.xml]\nij_xml_attribute_wrap = off\nij_xml_text_wrap = off\nij_xml_keep_blank_lines = 1\n\n[pom.xml]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.86,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Auto detect text files and perform LF normalization\n*        text=auto\n\n*.java   text eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.67,
          "content": "# maven ignore\ntarget/\n*.jar\n*.war\n*.zip\n*.tar\n*.tar.gz\n.flattened-pom.xml\n\n# eclipse ignore\n.settings/\n.project\n.classpath\n.externalToolBuilders\nmaven-eclipse.xml\n\n# idea ignore\n.idea/\n*.ipr\n*.iml\n*.iws\n\n# visual-studio-code ignore\n.vscode/\n\n# temp ignore\n*.log\n*.cache\n*.diff\n*.patch\n*.tmp\n\n# system ignore\n.DS_Store\nThumbs.db\n*.orig\n\n# license check result\nlicense-list\n\n# grpc compiler\ncompiler/gradle.properties\ncompiler/build/*\ncompiler/.gradle/*\n\n# protobuf\ndubbo-serialization/dubbo-serialization-protobuf/build/*\ndubbo-demo/dubbo-demo-triple/build/*\n\n# global registry center\n.tmp\n\n.git.exec.error\n\n# log files generated by testcase.\ndubbo-rpc/dubbo-rpc-api/custom-access.log*\n\n"
        },
        {
          "name": ".licenserc.yaml",
          "type": "blob",
          "size": 10.51,
          "content": "header:\n  license:\n    spdx-id: Apache-2.0\n    content: |\n      Licensed to the Apache Software Foundation (ASF) under one or more\n      contributor license agreements.  See the NOTICE file distributed with\n      this work for additional information regarding copyright ownership.\n      The ASF licenses this file to You under the Apache License, Version 2.0\n      (the \"License\"); you may not use this file except in compliance with\n      the License.  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n      Unless required by applicable law or agreed to in writing, software\n      distributed under the License is distributed on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      See the License for the specific language governing permissions and\n      limitations under the License.\n\n  paths-ignore:\n    - '**/*.versionsBackup'\n    - '**/.idea/'\n    - '**/*.iml'\n    - '**/.settings/*'\n    - '**/.classpath'\n    - '**/.project'\n    - '**/target/**'\n    - '**/generated/**'\n    - '**/*.log'\n    - '**/codestyle/*'\n    - '**/resources/META-INF/**'\n    - '**/resources/mockito-extensions/**'\n    - '**/*.proto'\n    - '**/*.cache'\n    - '**/*.txt'\n    - '**/*.load'\n    - '**/*.flex'\n    - '**/*.fc'\n    - '**/*.javascript'\n    - '**/*.properties'\n    - '**/*.sh'\n    - '**/*.bat'\n    - '**/*.md'\n    - '**/*.svg'\n    - '**/*.png'\n    - '**/*.json'\n    - '**/*.conf'\n    - '**/*.ftl'\n    - '**/*.tpl'\n    - '**/*.factories'\n    - '**/*.handlers'\n    - '**/*.schemas'\n    - '**/*.nojekyll'\n    - '.git/'\n    - '.github/**'\n    - '**/.gitignore'\n    - '**/.helmignore'\n    - '.repository/'\n    - 'compiler/**'\n    - '.gitmodules'\n    - '.mvn'\n    - 'mvnw'\n    - 'mvnw.cmd'\n    - 'LICENSE'\n    - 'NOTICE'\n    - 'CNAME'\n    - 'Jenkinsfile'\n    - '**/vendor/**'\n    - '**/src/test/resources/certs/**'\n    - '**/src/test/resources/definition/**'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/threadlocal/InternalThreadLocal.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/threadlocal/InternalThreadLocalMap.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/timer/HashedWheelTimer.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/timer/Timeout.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/timer/Timer.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/timer/TimerTask.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/utils/CIDRUtils.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/utils/Utf8Utils.java'\n    - 'dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/EmbeddedZooKeeper.java'\n    - 'dubbo-test/dubbo-test-common/src/main/java/org/apache/dubbo/test/common/utils/TestSocketUtils.java'\n    - 'dubbo-rpc/dubbo-rpc-triple/src/main/java/org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController.java'\n    - 'dubbo-rpc/dubbo-rpc-triple/src/main/java/org/apache/dubbo/rpc/protocol/tri/rest/cors/CorsHeaderFilter.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/threadpool/serial/SerializingExecutor.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/AbstractAotMojo.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/AbstractDependencyFilterMojo.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/CommandLineBuilder.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/DependencyFilter.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/Exclude.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/ExcludeFilter.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/FilterableDependency.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/Include.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/IncludeFilter.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/JavaCompilerPluginConfiguration.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/JavaExecutable.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/JavaProcessExecutor.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/MatchingGroupIdFilter.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/RunArguments.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/aot/RunProcess.java'\n    - 'dubbo-plugin/dubbo-native/src/main/java/org/apache/dubbo/aot/generate/BasicJsonWriter.java'\n    - 'dubbo-plugin/dubbo-native/src/main/java/org/apache/dubbo/aot/api/ExecutableMode.java'\n    - 'dubbo-plugin/dubbo-native/src/main/java/org/apache/dubbo/aot/api/MemberCategory.java'\n    - 'dubbo-metrics/dubbo-metrics-api/src/main/java/org/apache/dubbo/metrics/aggregate/DubboMergingDigest.java'\n    - 'dubbo-metrics/dubbo-metrics-api/src/main/java/org/apache/dubbo/metrics/aggregate/DubboAbstractTDigest.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/logger/helpers/FormattingTuple.java'\n    - 'dubbo-common/src/main/java/org/apache/dubbo/common/logger/helpers/MessageFormatter.java'\n    - 'dubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/protoc/DubboProtocCompilerMojo.java'\n    - 'dubbo-plugin/dubbo-compiler/src/main/java/org/apache/dubbo/gen/utils/ProtoTypeMap.java'\n\n  comment: on-failure\n\n  license-location-threshold: 130\n\ndependency:\n  files:\n    - pom.xml\n    - dubbo-dependencies-bom/pom.xml\n  licenses:\n    - name: com.fasterxml.jackson.core:jackson-annotations\n      license: Apache-2.0\n    - name: com.fasterxml.jackson.core:jackson-core\n      license: Apache-2.0\n    - name: com.fasterxml.jackson.core:jackson-databind\n      license: Apache-2.0\n    - name: com.fasterxml.jackson.dataformat:jackson-dataformat-yaml\n      license: Apache-2.0\n    - name: com.fasterxml.jackson.datatype:jackson-datatype-jsr310\n      license: Apache-2.0\n    - name: com.google.code.gson:gson\n      license: Apache-2.0\n    - name: com.google.guava:listenablefuture\n      license: Apache-2.0\n    - name: com.salesforce.servicelibs:grpc-contrib\n      license: BSD 3-clause\n    - name: com.squareup.okhttp3:logging-interceptor\n      license: Apache-2.0\n    - name: com.squareup.okhttp3:okhttp\n      license: Apache-2.0\n    - name: com.squareup.okio:okio\n      license: Apache-2.0\n    - name: com.sun.xml.fastinfoset:FastInfoset\n      license: Apache-2.0\n    - name: io.envoyproxy.controlplane:api\n      license: Apache-2.0\n    - name: io.swagger:swagger-annotations\n      license: Apache-2.0\n    - name: io.swagger:swagger-models\n      license: Apache-2.0\n    - name: org.springframework.boot:spring-boot\n      license: Apache-2.0\n    - name: org.springframework.boot:spring-boot-actuator\n      license: Apache-2.0\n    - name: org.springframework.boot:spring-boot-autoconfigure\n      license: Apache-2.0\n    - name: org.springframework.boot:spring-boot-configuration-processor\n      license: Apache-2.0\n    - name: org.springframework.boot:spring-boot-starter\n      license: Apache-2.0\n    - name: org.springframework.boot:spring-boot-starter-actuator\n      license: Apache-2.0\n    - name: org.springframework.boot:spring-boot-starter-logging\n      license: Apache-2.0\n    - name: org.springframework.boot:spring-boot-starter-tomcat\n      license: Apache-2.0\n    - name: org.springframework.boot:spring-boot-starter-web\n      license: Apache-2.0\n    - name: org.slf4j:slf4j-api\n      license: MIT\n    - name: org.slf4j:slf4j-log4j12\n      license: MIT\n    - name: org.jboss.resteasy:resteasy-jaxrs\n      license: Apache-2.0\n    - name: org.jboss.resteasy:resteasy-client\n      license: Apache-2.0\n    - name: org.jboss.resteasy:resteasy-netty4\n      license: Apache-2.0\n    - name: org.jboss.resteasy:resteasy-jdk-http\n      license: Apache-2.0\n    - name: org.jboss.resteasy:resteasy-jackson-provider\n      license: Apache-2.0\n    - name: org.jboss.resteasy:resteasy-jaxb-provider\n      license: Apache-2.0\n    - name: net.jcip:jcip-annotations\n      license: Apache-2.0\n    - name: org.apache.zookeeper:zookeeper\n      license: Apache-2.0\n    - name: org.apache.zookeeper:zookeeper-jute\n      license: Apache-2.0\n    - name: net.bytebuddy:byte-buddy\n      license: Apache-2.0\n    - name: javax.enterprise:cdi-api\n      license: Apache-2.0\n    - name: org.codehaus.plexus:plexus-component-annotations\n      license: Apache-2.0\n    - name: org.slf4j:jcl-over-slf4j\n      license: Apache-2.0\n    - name: org.slf4j:jul-to-slf4j\n      license: Apache-2.0\n    - name: org.codehaus.plexus:plexus-interpolation\n      license: Apache-2.0\n    - name: org.sonatype.plexus:plexus-sec-dispatcher\n      license: Apache-2.0\n    - name: org.sonatype.plexus:plexus-cipher\n      license: Apache-2.0\n    - name: com.alibaba.csp:sentinel-apache-dubbo3-adapter\n      license: Apache-2.0\n    - name: com.alibaba.csp:sentinel-transport-simple-http\n      license: Apache-2.0\n    - name: com.alibaba.csp:sentinel-transport-common\n      license: Apache-2.0\n    - name: com.alibaba.csp:sentinel-datasource-extension\n      license: Apache-2.0\n    - name: com.alibaba.csp:sentinel-core\n      license: Apache-2.0\n    - name: com.google.protobuf:protobuf-java\n      license: BSD 3-clause\n    - name: com.google.protobuf:protobuf-java-util\n      license: BSD 3-clause\n    - name: org.antlr:antlr4\n      license: BSD 3-clause\n    - name: org.antlr:antlr-runtime\n      license: BSD 3-clause\n    - name: org.antlr:ST4\n      license: BSD 3-clause\n    # multi license\n    - name: org.javassist:javassist\n      license: Apache-2.0\n    - name: javax.annotation:javax.annotation-api\n      license: CDDL-1.0\n    - name: com.salesforce.servicelibs:jprotoc\n      license: CDDL-1.0\n    - name: org.checkerframework:checker-compat-qual\n      license: MIT\n    - name: ch.qos.logback:logback-classic\n      license: EPL-1.0\n    - name: ch.qos.logback:logback-core\n      license: EPL-1.0\n    - name: javax.servlet:javax.servlet-api\n      license: CDDL-1.1\n    - name: com.sun.activation:javax.activation\n      license: CDDL-1.1\n    - name: javax.activation:activation\n      license: CDDL-1.1\n    - name: jakarta.annotation:jakarta.annotation-api\n      license: EPL-2.0\n    - name: org.glassfish:jakarta.el\n      license: EPL-2.0\n    - name: org.jboss.spec.javax.annotation:jboss-annotations-api_1.2_spec\n      license: CDDL-1.1\n    - name: org.jboss.spec.javax.ws.rs:jboss-jaxrs-api_2.1_spec\n      license: EPL-2.0\n    - name: org.jboss.spec.javax.annotation:jboss-annotations-api_1.3_spec\n      license: EPL-2.0\n  excludes:\n    - name: javax.xml.bind:jsr173_api\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 33.02,
          "content": "# Release Notes\n\nPlease refer to https://github.com/apache/dubbo/releases for notes of future releases.\n\n## 2.7.6 \n\n### Features\n* Support Service Authentication https://github.com/apache/dubbo/issues/5461\n\n### Enhancement\n* Removing the internal JDK API from FileSystemDynamicConfiguration\n* Refactor the APT test-cases implementation of dubbo-metadata-processor in Java 9+\n* Remove feature envy\n* JsonRpcProtocol support Generalization \n* Reduce object allocation for ProtocolUtils.serviceKey\n* Reduce object allocation for ContextFilter.invoke\n\n### Bugfixes\n* Fixed bugs reported from 2.7.5 or lower versions, check [2.7.6 milestone](https://github.com/apache/dubbo/milestone/30) for details.\n\n### Compatibility\n1. Filter refactor, the callback method `onResponse` annotated as @Deprecated has been removed, users of lower versions that \nhave extended Filter implementations and enabled Filter callbacks should be careful of this change.\n2. RpcContext added some experimental APIs to support generic Object transmission.\n\n## 2.7.5\n\n### Features\n* Support HTTP/2 through gRPC, offers all features supported by HTTP/2 and gRPC\n    * Stream communication: client stream, server stream and bi-stream.\n    * Reactive stream style RPC call.\n    * Back pressure based on HTTP/2 flow-control mechanism.\n    * TLS secure transport layer.\n    * Define service using IDL\n* Protobuf support for native Dubbo\n    * Define service using IDL\n    * Protobuf serialization\n* TLS for netty4 server\n* New SPI for dynamically adding extra parameters into provider URL, especially env parameters.\n* **[BETA]** Brand new Service Discovery mechanism: Service Reflection - instance (application) level service discovery.\n* **[BETA]** Brand new API for bootstraping Dubbo projects\n\n### Performance Tuning\n* Overall performance improved by nearly 30% compared to v2.7.3 (by QPS in certain circumstances)\n* Improved consumer side thread model to avoid thread allocation and context switch, especially useful for services serving big traffic.\n\n### Enhancement\n* Load balance strategy among multiple registries:\n    * Preferred\n    * Same zone first\n    * Weighted LB\n    * The first one available\n* New callback SPI for receiving address change notifications\n* Refactoring of config module\n\n### Bugfixes\ncheck 2.7.5 milestone for details.\n\n## 2.7.4.1\n\n### Enhancement\n\n* Enhance ProtobufTypeBuilder support generate type definition which contains Bytes List or Bytes Map. #5083\n* Using the ID of Dubbo Config as the alias of Bean. #5094\n* tag router supports anyhost. #4431\n* optimize generic invoke. #4076\n* dubbo zookeeper registry too slow #4828\n* use consul with group and version. #4755\n* qos support host config. #4720\n* migrate http protocol #4781\n* Some unit test optimization. #5026 #4803 #4687\n\n### Bugfixes\n\n* Apollo namespace optimization.  #5105\n* Simplify dubbo-common transitive dependencies. #5107 \n* Delete 'config.' prefix for url generated from ConfigCenterConfig. #5001\n* fix set generic method error. #5079\n* Add support for overriding Map properties in AbstractConfig.refresh. #4882\n* Fix travis javax.ex dependency issue. (unit test)\n* Fix: ExtensionLoader load duplicate filter，no log or exception. #4340 \n* When the provider interrupts abnormally, the consumer cannot return quickly and still waits for the timeout to end. #4694\n* Fix register config not take effect because of url simplified。 #4397\n* Don't support metadata for generic service. #4641 \n* Avoid resize in ClassUtils.java. #5009 \n* default attribute in <dubbo:registry> doesn't work as expected. #4412\n* make RegistryDirectory can refresh the invokers when providers number become 0 when using nacos registry. #4793\n* Multiple @Reference annotations only have one effect #4674\n* Fix RpcContext.getContext().getRemoteApplicationName() returns null #4351\n* Security issue: upgrade fastjson version to 1.2.60. #5018\n* nacos-registry:serviceName split error #4974\n* AbstractConfig.java-getMetaData set default depend on getmethod sequence #4678\n* fix protocol register set false not work. #4776 \n* Fix: In Rest protocol, the limitation of Dubbo-Attachments. #4898\n* The logic of org.apache.dubbo.config.MonitorConfig#isValid is incorrect #4892\n* protostuff return stackoverflow and other error msg #4861\n* fix method parameter bean generation. #3796 \n* replace hardcode with regex pattern #4810\n* Fix warm up issue when provider's timestamp is bigger than local machine's timestamp. #4870\n* Fix use generic invocation via API , lost #4238 ion\" value #4784\n* In consumer side the app cannot catch the exception from provider that is configured serialization=\"kryo\". #4238\n* fix StringUtils#isBlank #4725\n* when the interfaceName of the Reference annotation has duplicated,the exception is puzzled #4160\n* when anonymity  bean is defined in spring context，dubbo throw npe #\n* add Thread ContextClassLoader #4712\n* Fix judgment ipv4 address #4729\n* The compilation of static methods should be excluded when generating the proxy. #4647\n* check EOF of inputstream in IOUtils.write #4648\n\n\n## 2.7.3\n\n### Change List\n\n1. Asynchronous support\n    * Unified asynchronous and synchronous callback process, exception scenario triggers onError callback, #4401\n    * Performance degradation caused by CompletableFuture.get() in JDK1.8 environment, #4279\n\n2. Configuration Center\n    * ConfigCenter custom namespace does not take effect, #4411\n    * Unify the models implemented by several configuration centers such as Zookeeper, Nacos, and Etcd. Please refer to the description for possible incompatibility issues, #4388\n    * Adjust Override Coverage Rule Center Priority: Service Level > Application Level, #4175\n\n3. 2.6.x compatibility\n    * Support Zipkin tracing feature provided by Zipkin officially, #3728, #4471\n    * DubboComponentScan supports simultaneous scanning of annotations under the `com.alibaba.*` and `org.apache.*` packages, #4330\n\n4. The Nacos Registration Center only subscribes to the address list and no longer subscribes to configuration information, #4454.\n\n5. Support to read the environment configuration from the specified location, which can be specified by -D or OS VARIABLE. Please refer to [automatically loading environment variables](http://dubbo.apache.org/en-us/docs/user/configuration/environment-variables.html)\n\n6. Fix consumer cannot downgrade to providers with no tags when there's no tagged providers can match, #4525\n\n7. Some other bugfixes, #4346 #4338 #4349 #4377\n\n### Change List\n\n1. 异步支持相关\n\n    - 统一异步和同步的回调流程，异常场景触发onError回调 #4401\n    - CompletableFuture.get()在JDK1.8环境下带来的性能下降问题 #4279\n\n2. 配置中心相关\n\n    - ConfigCenter自定义namespace不生效的问题 #4411\n    - 统一Zookeeper、Nacos、Etcd等几个配置中心实现的模型，可能带来的不兼容性问题请参见说明。相关修改：#4388\n    - 调整Override覆盖规则中心优先级：服务级别 > 应用级别 #4175\n\n3. 2.6.x兼容性\n\n    - 兼容zipkin官方提供的基于Dubbo-2.6 API的集成 #3728, #4471\n    - DubboComponentScan支持同时扫描 `com.alibaba.*` 和 `org.apache.*` 两个包下的注解 #4330\n\n4. Nacos注册中心只订阅地址列表，不再订阅配置信息 #4454\n\n5. 支持从指定位置读取环境配置，可通过-D或OS VARIABLE指定，具体请参见[使用说明](http://dubbo.apache.org/zh-cn/docs/user/configuration/environment-variables.html)\n\n6. 标签路由在消费端使用静态打标方式时，无法实现自动降级以消费无标签提供者 #4525\n\n7. 其他一些bugfix，#4346 #4338 #4349 #4377 \n\n## 2.7.2\n\n### New Features\n\n- nacos config center / metadata center support. [#3846](https://github.com/apache/dubbo/issues/3846)\n- Etcd support as config center and metadata center [#3653](https://github.com/apache/dubbo/issues/3653)\n- Support Redis cluster in Metadata Report. [#3817](https://github.com/apache/dubbo/issues/3817)\n- add new module for Dubbo Event. [#4096](https://github.com/apache/dubbo/issues/4096)\n- Support multiple registry that including some effective registry, such as zk, redis [#3599](https://github.com/apache/dubbo/issues/3599)\n- support nacos metadata [#4025](https://github.com/apache/dubbo/issues/4025)\n- Dubbo support Google Protobuf generic reference [#3829](https://github.com/apache/dubbo/issues/3829)\n- Merge serialization-native-hessian-for-apache-dubbo into incubator-dubbo [#3961](https://github.com/apache/dubbo/issues/3961)\n- Merge rpc-native-thrift-for-apache-dubbo into incubator-dubbo [#3960](https://github.com/apache/dubbo/issues/3960)\n- add socks5 proxy support [#3624](https://github.com/apache/dubbo/issues/3624)\n- Integrate with SOFARegistry [#3874](https://github.com/apache/dubbo/issues/3874)\n- Introduce CompletableFuture $invokeAsync for GenericService, now, for generic call, you can use:  \n  $invoke for sync method call with normal return type.\n  $invokeAsync for async method call with CompletableFuture<T> signature. [#3163](https://github.com/apache/dubbo/issues/3163)\n\n### Enhancement\n\n- Performance tuning for TimeoutTask in DefaultFuture. [#4129](https://github.com/apache/dubbo/issues/4129)\n- Add a script to check dependencies license. [#3840](https://github.com/apache/dubbo/issues/3840)\n- Change DynamicConfiguration definition to better adapt to Apollo's namespace storage model.[#3266](https://github.com/apache/dubbo/issues/3266)\n- use equal explicit class to replace anonymous class [#4027](https://github.com/apache/dubbo/issues/4027)\n- Separate Constants.java into some SubConstants Class [#3137](https://github.com/apache/dubbo/issues/3137)\n- Need to enhance DecodeableRpcResult error message [#3994](https://github.com/apache/dubbo/issues/3994)\n- Provide more meaningful binary releases. [#2491](https://github.com/apache/dubbo/issues/2491)\n- remove useless module-dubbo-test-integration [#3573](https://github.com/apache/dubbo/issues/3573)\n- complete lookup method of consul registry and add integration test [#3890](https://github.com/apache/dubbo/issues/3890)\n- Metrics Service [#3702](https://github.com/apache/dubbo/issues/3702)\n- Update nacos-client to 1.0.0 [#3804](https://github.com/apache/dubbo/issues/3804)\n- Fluent style builder API support [#3431](https://github.com/apache/dubbo/issues/3431)\n- Update readme to remove the incubator prefix [#4159](https://github.com/apache/dubbo/issues/4159)\n- update erlang link [#4100](https://github.com/apache/dubbo/issues/4100)\n- optimize array code style [#4031](https://github.com/apache/dubbo/issues/4031)\n- optimize some code style [#4006](https://github.com/apache/dubbo/issues/4006)\n- remove useless module-dubbo-test-integration [#3989](https://github.com/apache/dubbo/issues/3989)\n- optimize constant naming style [#3970](https://github.com/apache/dubbo/issues/3970)\n- Use maven CI friendly versions: revision. [#3851](https://github.com/apache/dubbo/issues/3851)\n- remove-parse-error-log [#3862](https://github.com/apache/dubbo/issues/3862)\n- Complete xsd definition for ConfigCenterConfig. [#3854](https://github.com/apache/dubbo/issues/3854)\n- add remoteApplicationName field in RpcContext [#3816](https://github.com/apache/dubbo/issues/3816)\n\n### Bugfixes\n\n- @Reference can't match the local @Service beans. [#4071](https://github.com/apache/dubbo/issues/4071)\n- remove some illegal licence: jcip-annotations, jsr173_api. [#3790](https://github.com/apache/dubbo/issues/3790)\n- Qos port can't be disabled by externalized property. [#3958](https://github.com/apache/dubbo/issues/3958)\n- Fix consumer will generate wrong stackTrace. [#4137](https://github.com/apache/dubbo/issues/4137)\n- nacos registry serviceName may conflict. [#4111](https://github.com/apache/dubbo/issues/4111)\n- The client loses the listener when the network is reconnected. [#4115](https://github.com/apache/dubbo/issues/4115)\n- fix registry urls increase forever when recreate reference proxy. [#4109](https://github.com/apache/dubbo/issues/4109)\n- In dubbo 2.7.1，the watcher processor of zookeeper client throw Nullpointexception. [#3866](https://github.com/apache/dubbo/issues/3866)\n- ReferenceConfig initialized not changed to false once subscribe throws exception [#4068](https://github.com/apache/dubbo/issues/4068)\n- dubbo registry extension compatibility with dubbo 2.6.x. [#3882](https://github.com/apache/dubbo/issues/3882)\n- Annotation mode cannot set service parameters in 2.7.0. [#3778](https://github.com/apache/dubbo/issues/3778)\n- compatibility with Zipkin. [#3728](https://github.com/apache/dubbo/issues/3728)\n- do local export before register any listener. [#3669](https://github.com/apache/dubbo/issues/3669)\n- Cannot recognize 2.6.x compatible rules from dubbo-admin. [#4059](https://github.com/apache/dubbo/issues/4059)\n- In Dubbo 2.7.0, the provider can't be configured to async [#3650](https://github.com/apache/dubbo/issues/3650)\n- dubbox compatibility [#3991](https://github.com/apache/dubbo/issues/3991)\n- dubbo-2.7.1 providers repeat register [#3785](https://github.com/apache/dubbo/issues/3785)\n- consul registry: NullPointerException [#3923](https://github.com/apache/dubbo/issues/3923)\n- cannot publish local ip address when local ip and public ip exist at the same time [#3802](https://github.com/apache/dubbo/issues/3802)\n- roll back change made by 3520. [#3935](https://github.com/apache/dubbo/issues/3935)\n- dubbo-registry-nacos module is not bundled into Apache Dubbo 2.7.1 [#3797](https://github.com/apache/dubbo/issues/3797)\n- switch from CopyOnWriteArrayList to regular list in order to avoid potential UnsupportedOperationException [#3242](https://github.com/apache/dubbo/issues/3242)\n- Serialization ContentTypeId conflict between avro protocol and protocoluff protocol [#3926](https://github.com/apache/dubbo/issues/3926)\n- delay export function doesn't work. [#3952](https://github.com/apache/dubbo/issues/3952)\n- org.apache.dubbo.rpc.support.MockInvoker#getInterface should not return null [#3713](https://github.com/apache/dubbo/issues/3713)\n- dubbo TagRouter does not work with dubbo:parameter [#3875](https://github.com/apache/dubbo/issues/3875)\n- make protocols a mutable list (a concrete ArrayList) [#3841](https://github.com/apache/dubbo/issues/3841)\n- javadoc lint issue [#3646](https://github.com/apache/dubbo/issues/3646)\n- The etcd3 lease should be recycled correctly [#3684](https://github.com/apache/dubbo/issues/3684)\n- telnet can't work when parameter has no nullary constructor and some fields is primitive [#4007](https://github.com/apache/dubbo/issues/4007)\n- Sort added router list before set the 'routers' field of the RouterChain [#3969](https://github.com/apache/dubbo/issues/3969)\n- fix injvm and local call [#3638](https://github.com/apache/dubbo/issues/3638)\n- spelling error in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator#generateReturnAndInovation [#3933](https://github.com/apache/dubbo/issues/3933)\n- metadata report doesn't support redis with password [#3826](https://github.com/apache/dubbo/issues/3826)\n- The dubbo protostuff protocol serializes the bug of java.sql.Timestamp [#3914](https://github.com/apache/dubbo/issues/3914)\n- do not filter thread pool by port [#3919](https://github.com/apache/dubbo/issues/3919)\n- 'dubbo-serialization-gson' maven package error [#3903](https://github.com/apache/dubbo/issues/3903)\n- AbstractRegistry will be endless loop, when doSaveProperties method have no permission to save the file [#3746](https://github.com/apache/dubbo/issues/3746)\n- fix fastjson serialization with generic return type [#3771](https://github.com/apache/dubbo/issues/3771)\n- The dubbo-serialization -api modules should not dependency on third-party jar packages [#3762](https://github.com/apache/dubbo/issues/3762)\n- when using protostuff to serialize, there is not to check whether the data is null [#3727](https://github.com/apache/dubbo/issues/3727)\n- bugfix and enhancement for async [#3287](https://github.com/apache/dubbo/issues/3287)\n\n## 2.7.1\n\n### Notice\n\n'zkclient' extension for 'org.apache.dubbo.remoting.zookeeper.ZookeeperTransporter' is removed from Dubbo 2.7.1, and 'curator' extension becomes the default extension. If you happen to config your application to use 'zkclient' explicitly, pls. switch to use 'curator' instead.\n\n### New Features\n\n- service register support on nacos [#3582](https://github.com/apache/dubbo/issues/3582)\n- support consul as registry center, config center and metadata center [#983](https://github.com/apache/dubbo/issues/983)\n- service registry support/config center support on etcd [#808](https://github.com/apache/dubbo/issues/808)\n- metrics support in dubbo 2.7.1 [#3598](https://github.com/apache/dubbo/issues/3598)\n- @Argument @Method support [#2405](https://github.com/apache/dubbo/issues/2045)\n\n### Enhancement\n\n- [Enhancement] @EnableDubboConfigBinding annotates @Repeatable [#1770](https://github.com/apache/dubbo/issues/1770)\n- [Enhancement] Change the default behavior of @EnableDubboConfig.multiple() [#3193](https://github.com/apache/dubbo/issues/3193)\n- Should make annotation easier to use in multiple items circumstance [#3039](https://github.com/apache/dubbo/issues/3039)\n- NoSuchMethodError are thrown when add custom Filter using dubbo2.6.5 and JDK1.6 and upgrade to dubbo2.7.0 [#3570](https://github.com/apache/dubbo/issues/3570)\n- introduce dubbo-dependencies-zookeeper [#3607](https://github.com/apache/dubbo/pull/3607)\n- Zookeeper ConfigCenter reuse the client abstraction and connection session [#3288](https://github.com/apache/dubbo/issues/3288)\n- [Survey] Is it necessary to continue to maintain zkclient in dubbo project? [#3569](https://github.com/apache/dubbo/issues/3569)\n- Start to use IdleStateHandler in Netty4 [#3341](https://github.com/apache/dubbo/pull/3341)\n- Support multiple shared links [#2457](https://github.com/apache/dubbo/pull/2457)\n- Optimize heartbeat [#3299](https://github.com/apache/dubbo/pull/3299)\n- AccessLogFilter simple date format reduce instance creation [#3026](https://github.com/apache/dubbo/issues/3026)\n- Support wildcard ip for tag router rule. [#3289](https://github.com/apache/dubbo/issues/3289)\n- ScriptRouter should cache CompiledScript [#390](https://github.com/apache/dubbo/issues/390)\n- Optimize compareTo in Router to guarantee consistent behaviour. [#3302](https://github.com/apache/dubbo/issues/3302)\n- RMI protocol doesn't support generic invocation [#2779](https://github.com/apache/dubbo/issues/2779)\n- a more elegant way to enhance HashedWheelTimer [#3567](https://github.com/apache/dubbo/pull/3567)\n- obtain local address incorrectly sometimes in dubbo [#538](https://github.com/apache/dubbo/issues/538)\n- implement pull request #3412 on master branch [#3418](https://github.com/apache/dubbo/pull/3418)\n- enhancement for event of response (follow up for pull request #3043) [#3244](https://github.com/apache/dubbo/issues/3244)\n- bump up hessian-lite version #3423 [#3513](https://github.com/apache/dubbo/pull/3513)\n- [Dubbo-3610]make snakeyaml transitive, should we do this? [#3659](https://github.com/apache/dubbo/pull/3659)\n\n### Bugfixes\n\n- cannot register REST service in 2.7 due to the changes in RestProtoco#getContextPath [#3445](https://github.com/apache/dubbo/issues/3445)\n- Conflict between curator client and dubbo [#3574](https://github.com/apache/dubbo/issues/3574)\n- is there a problem in NettyBackedChannelBuffer.setBytes(...)? [#2619](https://github.com/apache/dubbo/issues/2619)\n- [Dubbo - client always reconnect offline provider] Dubbo client bug [#3158](https://github.com/apache/dubbo/issues/3158)\n- fix heartbeat internal [#3579](https://github.com/apache/dubbo/pull/3579)\n- logic issue in RedisRegistry leads to services cannot be discovered. [#3291](https://github.com/apache/dubbo/pull/3291)\n- Multicast demo fails with message \"Can't assign requested address\" [#2423](https://github.com/apache/dubbo/issues/2423)\n- Fix thrift protocol, use path to locate exporter. [#3331](https://github.com/apache/dubbo/pull/3331)\n- cannot use override to modify provider's configuration when hessian protocol is used [#900](https://github.com/apache/dubbo/issues/900)\n- Condition is not properly used ? [#1917](https://github.com/apache/dubbo/issues/1917)\n- connectionMonitor in RestProtocol seems not work [#3237](https://github.com/apache/dubbo/issues/3237)\n- fail to parse config text with white space [#3367](https://github.com/apache/dubbo/issues/3367)\n- @Reference check=false doesn't take effect [#195](https://github.com/apache/dubbo/issues/195)\n- [Issue] SpringStatusChecker execute errors on non-XML Spring configuration [#3615](https://github.com/apache/dubbo/issues/3615)\n- monitor's cluster config is set to failsafe and set to failsafe only [#274](https://github.com/apache/dubbo/issues/274)\n- A question for ReferenceConfigCache. [#1293](https://github.com/apache/dubbo/issues/1293)\n- referenceconfig#destroy never invoke unregister [#3294](https://github.com/apache/dubbo/issues/3294)\n- Fix when qos is disable,log will print every time [#3397](https://github.com/apache/dubbo/pull/3397)\n- service group is not supported in generic direct invocation [#3555](https://github.com/apache/dubbo/issues/3555)\n- setOnreturn doesn't take effect in async generic invocation [#208](https://github.com/apache/dubbo/issues/208)\n- Fix timeout filter not work in async way [#3174](https://github.com/apache/dubbo/pull/3174)\n- java.lang.NumberFormatException: For input string: \"\" [#3069](https://github.com/apache/dubbo/issues/3069)\n- NPE occurred when the configuration was deleted [#3533](https://github.com/apache/dubbo/issues/3533)\n- NPE when package of interface is empty [#3556](https://github.com/apache/dubbo/issues/3556)\n- NPE when exporting rest service using a given path. [#3477](https://github.com/apache/dubbo/issues/3477)\n- NullPointerException happened when using SpringContainer.getContext() [#3476](https://github.com/apache/dubbo/issues/3476)\n- Why does not tomcat throw an exception when `server.start` failed with a socket binding error.  [#3236](https://github.com/apache/dubbo/issues/3236)\n- No such extension org.apache.dubbo.metadata.store.MetadataReportFactory by name redis [#3514](https://github.com/apache/dubbo/issues/3514)\n- dubbo 2.7.1-SNAPSHOT NoClassDefFoundError when use springboot [#3426](https://github.com/apache/dubbo/issues/3426)\n- NPE occurs when use @Reference in junit in spring boot application [#3429](https://github.com/apache/dubbo/issues/3429)\n- When refer the same service with more than one @References(with different configs) on consumer side, only one take effect [#1306](https://github.com/apache/dubbo/issues/1306)\n- consumer always catch java.lang.reflect.UndeclaredThrowableException for the exception thrown from provider [#3386](https://github.com/apache/dubbo/issues/3386)\n- dubbo2.7.0 com.alibaba.com.caucho.hessian.io.HessianProtocolException: 'com.alibaba.dubbo.common.URL' could not be instantiated [#3342](https://github.com/apache/dubbo/issues/3342)\n- Close Resources Properly [#3473](https://github.com/apache/dubbo/issues/3473)\n- SPI entires dup by 3 times. [#2842](https://github.com/apache/dubbo/issues/2842)\n- provider gets wrong interface name from attachment when use generic invocation in 2.6.3 [#2981](https://github.com/apache/dubbo/issues/2981)\n- HashedWheelTimer's queue gets full [#3449](https://github.com/apache/dubbo/issues/3449)\n- Modify MetadataReportRetry ThreadName [#3550](https://github.com/apache/dubbo/pull/3550)\n- Keep interface key in the URL in simplify mode when it's different from path. [#3478](https://github.com/apache/dubbo/issues/3478)\n- nc is not stable in dubbo's bootstrap script [#936](https://github.com/apache/dubbo/issues/936)\n\n## 2.7.0\n\nRequirements: **Java 8+** required\n\nPlease check [here](https://github.com/apache/dubbo/blob/2.7.0-release/CHANGES.md#upgrading-and-compatibility-notifications) for notes and possible compatibility issues for upgrading from 2.6.x or lower to 2.7.0.\n\n### New Features\n\n- Enhancement of service governance rules.\n  - Enriched Routing Rules.\n    1. Conditional Routing. Supports both application-level and service-level conditions.\n    2. Tag Routing. Newly introduced to better support traffic isolation, such as grey deployment.\n  - Decoupling governance rules with the registry, making it easier to extend. Apollo and Zookeeper are available in this version. Nacos support is on the way...\n  - Application-level Dynamic Configuration support.\n  - Use YAML as the configuration language, which is more friendly to read and use.\n\n- Externalized Configuration. Supports reading `dubbo.properties` hosted in remote centralized configuration center - centralized configuration.\n\n- Simplified registry URL. With lower Registry memory use and less notification pressure from Service Directory, separates Configuration notification from Service Discovery.\n\n- Metadata Center. A totally new concept since 2.7.0,  used to store service metadata including static configuration, service definition, method signature, etc.. By default, Zookeeper and Redis are supported as the backend storage. Will work as the basis of service testing, mock and other service governance features going to be supported in [Dubbo-Admin](https://github.com/apache/dubbo-admin).\n\n- Asynchronous Programming Model (only works for Dubbo protocol now)\n  - Built-in support for the method with CompletableFuture<T> signature.\n  - Server-side asynchronous support, with an AsyncContext API works like Servlet 3.0.\n  - Asynchronous filter chain callback.\n\n- Serialization Extension: Protobuf.\n\n- Caching Policy Extension: Expiring Cache.\n\n### Enhancements / Bugfixes\n\n- Load Balancing strategy enhancement: ConsitentHash #2190, LeastActive #2171, Random #2597, RoundRobin #2650.\n\n- Third-party dependency upgrading.\n  - Switch default remoting to Netty 4.\n  - Switch default Zookeeper client to Curator.\n  - Upgrade Jetty to 9.x.\n\n- IPV6 support #2079.\n\n- Performance tuning, check hanging requests on a closed channel, make them return directly #2185.\n\n- Fixed the serialization problem of JDK primitive types in Kryo #2178.\n\n- Fixed the problem of failing to notify Consumer as early as possible after the Provider side deserialization failed #1903.\n\n### Upgrading and Compatibility Notifications\n\nWe have always keep compatibility in mind during the whole process of 2.7.0. We even want old users to upgrade with only on pom version upgrade, but it's hard to achieve that, especially when considering that we have the package renamed in this version, so we had some tradeoffs. If you only used the Dubbo's most basic features, you may have little problems of upgrading, but if you have used some advanced features or have some SPI extensions inside, you'd better read the upgrade notifications carefully. The compatibility issues can be classified into the following 5 categories, for each part, there will have detailed dos and don'ts published later in the official website.\n\n1. Interoperability between 2.7.0 and lower versions\n\n2. Package renaming\n\n   com.alibaba.dubbo -> org.apache.dubbo\n\n3. Simplification of registered URLs\n\n4. Service Governance Rules\n\n5. Configuration\n\n## 2.6.6\n\nEnhancement / New feature：\n\n* tag route.  #3065 \n* Use Netty4 as default Netty version. #3029 \n* upporting Java 8 Date/Time type when serializing with Kryo #3519 \n* support config telnet  #3511\n* add annotation driven in MethodConfig and ArgumentConfig #2603\n* add nacos-registry module #3296  \n* add `protocol` attribute in `@Rerefence` #3555 \n*support the hierarchical interface in @Service  #3251  \n* change the default behavior in `@EnableDubboConfig.multiple()` #3193 \n* inline source code of `spring-context-support` #3192 \n* Simplify externalized configuration of Dubbo Protocol name  #3189 \n\nBugFix：\n \n* update hessian-lite to 2.3.5, fix unnecessary class load #3538 \n* Fix unregister when client destroyed（referenceconfig#destroy) #3502 \n* SPI entires dup by 3 times #3315 \n* fix Consumer throws RpcException after RegistryDirectory notify in high QPS #2016 \n* fix NPE in @Reference when using Junit to test dubbo service #3429 \n* fix consumer always catch java.lang.reflect.UndeclaredThrowableException for any exception throws in provider  #3386 \n* fix the priority of `DubboConfigConfigurationSelector ` #2897 \n* fix `@Rerefence#parameters()` not work #2301 \n\n## 2.6.5\n\nEnhancements / Features：    \n\n- Reactor the generation rule for @Service Bean name [#2235](https://github.com/apache/dubbo/issues/2235) \n- Introduce a new Spring ApplicationEvent for ServiceBean exporting [#2251](https://github.com/apache/dubbo/issues/2251) \n- [Enhancement] the algorithm of load issue on Windows. [#1641](https://github.com/apache/dubbo/issues/1641)\n- add javadoc to dubbo-all module good first issue. [#2600](https://github.com/apache/dubbo/issues/2600) \n- [Enhancement] Reactor the generation rule for @Service Bean name type/enhancement [#2235](https://github.com/apache/dubbo/issues/2235) \n- Optimize LeastActiveLoadBalance and add weight test case. [#2540](https://github.com/apache/dubbo/issues/2540) \n- Smooth Round Robin selection. [#2578](https://github.com/apache/dubbo/issues/2578) [#2647](https://github.com/apache/dubbo/pull/2647) \n- [Enhancement] Resolve the placeholders for sub-properties. [#2297](https://github.com/apache/dubbo/issues/2297) \n- Add ability to turn off SPI auto injection, special support for generic Object type injection. [#2681](https://github.com/apache/dubbo/pull/2681)\n\n\nBugfixes：    \n\n- @Service(register=false) is not work. [#2063](https://github.com/apache/dubbo/issues/2063) \n- Our customized serialization id exceeds the maximum limit, now it cannot work on 2.6.2 anymore. [#1903](https://github.com/apache/dubbo/issues/1903) \n- Consumer throws RpcException after RegistryDirectory notify in high QPS. [#2016](https://github.com/apache/dubbo/issues/2016)   \n- Annotation @Reference can't support to export a service with a sync one and an async one . [#2194](https://github.com/apache/dubbo/issues/2194) \n- `org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor#generateReferenceBeanCacheKey` has a bug. [#2522](https://github.com/apache/dubbo/issues/2522) \n- 2.6.x Spring Event & Bugfix. [#2256](https://github.com/apache/dubbo/issues/2256) \n- Fix incorrect descriptions for dubbo-serialization module. [#2665](https://github.com/apache/dubbo/issues/2665) \n- A empty directory dubbo-config/dubbo-config-spring/src/test/resources/work after package source tgz. [#2560](https://github.com/apache/dubbo/issues/2560)\n- Fixed 2.6.x branch a minor issue with doConnect not using getConnectTimeout() in NettyClient.  (*No issue*). [#2622](https://github.com/apache/dubbo/pull/2622) \n- Bean name of @service annotated class does not resolve placeholder. [#1755](https://github.com/apache/dubbo/issues/1755) \n\n\n\nIssues and Pull Requests, check [milestone-2.6.5](https://github.com/apache/dubbo/milestone/21).\n\n## 2.6.4\n\nEnhancements / Features\n\n- Support access Redis with password, [#2146](https://github.com/apache/dubbo/pull/2146)\n- Support char array for GenericService, [#2137](https://github.com/apache/dubbo/pull/2137)\n- Direct return when the server goes down abnormally, [#2451](https://github.com/apache/dubbo/pull/2451)\n- Add log for trouble-shooting when qos start failed, [#2455](https://github.com/apache/dubbo/pull/2455)\n- PojoUtil support subclasses of java.util.Date, [#2502](https://github.com/apache/dubbo/pull/2502)\n- Add ip and application name for MonitorService, [#2166](https://github.com/apache/dubbo/pull/2166)\n- New ASCII logo, [#2402](https://github.com/apache/dubbo/pull/2402)\n\nBugfixes\n\n- Change consumer retries default value from 0 to 2, [#2303](https://github.com/apache/dubbo/pull/2303)\n- Fix the problem that attachment is lost when retry, [#2024](https://github.com/apache/dubbo/pull/2024)\n- Fix NPE when telnet get a null parameter, [#2453](https://github.com/apache/dubbo/pull/2453)\n\nUT stability\n\n- Improve the stability by changing different port, setting timeout to 3000ms, [#2501](https://github.com/apache/dubbo/pull/2501)\n\nIssues and Pull Requests, check [milestone-2.6.4](https://github.com/apache/dubbo/milestone/19).\n\n## 2.6.3\n\nEnhancements / Features\n\n- Support implicit delivery of attachments from provider to consumer, #889\n- Support inject Spring bean to SPI by bean type, #1837\n- Add generic invoke and attachments support for http&hessian protocol, #1827\n- Get the real methodname to support consistenthash for generic invoke, #1872\n- Remove validation key from provider url on Consumer side, config depedently, #1386\n- Introducing the Bootstrap module as a unified entry for Dubbo startup and resource destruction, #1820\n- Open TCP_NODELAY on Netty 3, #1746\n- Support specify proxy type on provider side, #1873\n- Support dbindex in redis, #1831\n- Upgrade tomcat to 8.5.31, #1781\n\nBugfixes\n\n- ExecutionDispatcher meet with user docs, #1089\n- Remove side effects of Dubbo custom loggers on Netty logger, #1717\n- Fix isShutdown() judge of Dubbo biz threadpool always return true, #1426\n- Selection of invoker node under the critical condition of only two nodes, #1759\n- Listener cann't be removed during unsubscribe when use ZK as registry, #1792\n- URL parsing problem when user filed contains '@',  #1808\n- Check null in CacheFilter to avoid NPE, #1828\n- Fix potential deadlock in DubboProtocol, #1836\n- Restore the bug that attachment has not been updated in the RpcContext when the Dubbo built-in retry mechanism is triggered, #1453\n- Some other small bugfixes\n\nPerformance Tuning\n\n- ChannelState branch prediction optimization. #1643\n- Optimize AtomicPositiveInteger, less memory and compute cost, #348\n- Introduce embedded Threadlocal to replace the JDK implementation, #1745\n\nHessian-lite\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.14,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at dev@dubbo.apache.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.97,
          "content": "\n## Contributing to Dubbo\nDubbo is released under the non-restrictive Apache 2.0 licenses and follows a very standard Github development process, using Github tracker for issues and merging pull requests into master. Contributions of all form to this repository is acceptable, as long as it follows the prescribed community guidelines enumerated below.\n\n### Sign the Contributor License Agreement\nBefore we accept a non-trivial patch or pull request (PRs), we will need you to sign the Contributor License Agreement. Signing the contributors' agreement does not grant anyone commits rights to the main repository, but it does mean that we can accept your contributions, and you will get an author credit if we do. Active contributors may get invited to join the core team that will grant them privileges to merge existing PRs. \n\n### Contact\n\n#### Mailing list\n\nThe mailing list is the recommended way of pursuing a discussion on almost anything related to Dubbo. Please refer to this [guide](https://github.com/apache/dubbo/wiki/Mailing-list-subscription-guide) for detailed documentation on how to subscribe.\n\n- [dev@dubbo.apache.org](mailto:dev-subscribe@dubbo.apache.org): the developer mailing list where you can ask questions about an issue you may have encountered while working with Dubbo. \n- [commits@dubbo.apache.org](mailto:commits-subscribe@dubbo.apache.org): the commit updates will get broadcasted on this mailing list. You can subscribe to it, should you be interested in following Dubbo's development.\n- [notifications@dubbo.apache.org](mailto:notifications-subscribe@dubbo.apache.org): all the Github [issue](https://github.com/apache/dubbo/issues) updates and [pull request](https://github.com/apache/dubbo/pulls) updates will be sent to this mailing list.\n\n### Reporting issue\n\nPlease follow the [template](https://github.com/apache/dubbo/issues/new?template=dubbo-issue-report-template.md) for reporting any issues.\n\n### Code Conventions\nOur code style is almost in line with the standard java conventions (Popular IDE's default setting satisfy this), with the following additional restricts:  \n* If there are more than 120 characters in the current line, begin a new line.\n\n* Make sure all new .java files to have a simple Javadoc class comment with at least a @date tag identifying birth, and preferably at least a paragraph on the intended purpose of the class.\n\n* Add the ASF license header comment to all new .java files (copy from existing files in the project)\n\n* Make sure no @author tag gets appended to the file you contribute to as the @author tag is incompatible with Apache. Rest assured, other ways, including CVS, will ensure transparency, fairness in recording your contributions. \n\n* Add some Javadocs and, if you change the namespace, some XSD doc elements.\n\n* Sufficient unit-tests should accompany new feature development or non-trivial bug fixes. \n\n* If no-one else is using your branch, please rebase it against the current master (or another target branch in the main project).\n\n* When writing a commit message, please follow the following conventions: should your commit address an open issue, please add Fixes #XXX at the end of the commit message (where XXX is the issue number).\n\n### Contribution flow\n\nA rough outline of an ideal contributors' workflow is as follows:\n\n* Fork the current repository\n* Create a topic branch from where to base the contribution. Mostly, it's the master branch.\n* Make commits of logical units.\n* Make sure the commit messages are in the proper format (see below).\n* Push changes in a topic branch to your forked repository.\n* Follow the checklist in the [pull request template](https://github.com/apache/dubbo/blob/master/PULL_REQUEST_TEMPLATE.md)\n* Before sending out the pull request, please sync your forked repository with the remote repository to ensure that your PR is elegant, concise. Reference the guide below:\n```\ngit remote add upstream git@github.com:apache/dubbo.git\ngit fetch upstream\ngit rebase upstream/master\ngit checkout -b your_awesome_patch\n... add some work\ngit push origin your_awesome_patch\n```\n* Submit a pull request to apache/dubbo and wait for the reply.\n\nThanks for contributing!\n\n### Code style\n\nWe provide a template file [dubbo_codestyle_for_idea.xml](https://github.com/apache/dubbo/tree/master/codestyle/dubbo_codestyle_for_idea.xml) for IntelliJ idea that you can import it to your workplace. \nIf you use Eclipse, you can use the IntelliJ Idea template for manually configuring your file.\n\n**NOTICE**\n\nIt's critical to set the dubbo_codestyle_for_idea.xml to avoid the failure of your Travis CI builds. Steps to configure the code styles are as follows:\n\n1. Enter `Editor > Code Style`\n2. To manage a code style scheme, in the Code Style page, select the desired scheme from the drop-down list, and click on ![manage profiles](codestyle/manage_profiles.png).\nFrom the drop-down list, select `Import Scheme`, then choose the option `IntelliJ IDEA code style XML` to import the scheme. \n3. In the Scheme field, type the name of the new scheme and press ⏎ to save the changes.\n\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 4.62,
          "content": "import groovy.json.JsonSlurper\n\npipeline {\n    agent {\n        node {\n            label 'ubuntu'\n        }\n    }\n\n    options {\n        buildDiscarder(logRotator(daysToKeepStr: '14', artifactNumToKeepStr: '10'))\n    }\n\n    environment {\n        JAVA_HOME = \"${tool 'JDK 1.8 (latest)'}\"\n    }\n\n    tools {\n        maven 'Maven 3 (latest)'\n        jdk 'JDK 1.8 (latest)'\n    }\n\n    triggers {\n        cron '''TZ=Asia/Shanghai\n        H 2,14 * * *'''\n        pollSCM '''TZ=Asia/Shanghai\n        H H/2 * * *'''\n    }\n\n\n    stages {\n        stage('Clone') {\n            steps {\n                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', noTags: true, reference: '', shallow: true]], gitTool: 'Default', submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/apache/dubbo.git']]])\n            }\n        }\n\n        stage('Duplicate deploy check') {\n            steps {\n                script {\n                    def deployedCommitId = sh(returnStdout: true, script: \"curl --silent https://builds.apache.org/job/Apache%20Dubbo/job/${env.JOB_BASE_NAME}/lastSuccessfulBuild/artifact/DEPLOY_COMMIT_ID || true\").trim()\n                    env.DEPLOYED_COMMIT_ID = deployedCommitId\n                    def commitId = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()\n                    env.COMMIT_ID = commitId\n\n                    if (commitId == deployedCommitId) {\n                        env.STATUS_CHECK = \"false\"\n                        println \"Latest deployed commit id is $deployedCommitId, Skip deployment this time\"\n                    } else {\n                        env.STATUS_CHECK = \"true\"\n                        println \"Current commit id hasn't been deployed, continue\"\n                    }\n                }\n            }\n        }\n\n        stage('Commit status check') {\n            when {\n                expression {\n                    return env.STATUS_CHECK == \"true\";\n                }\n            }\n            steps {\n                script {\n                    def commitId = env.COMMIT_ID\n                    println \"Current commit id: $commitId\"\n\n                    def commitStatusJson = sh(script: \"curl --silent https://api.github.com/repos/apache/dubbo/commits/$commitId/status\", returnStdout: true).trim()\n                    println \"Commit status: \\r\\n$commitStatusJson\"\n\n                    def jsonSlurper = new JsonSlurper()\n                    def jsonObject = jsonSlurper.parseText(commitStatusJson)\n\n                    def status = jsonObject.state\n\n                    println \"Current commit status is $status\"\n\n                    if (status == \"success\") {\n                        env.STATUS_CHECK = \"true\"\n                        println \"Continue to deploy snapshot\"\n                    } else {\n                        env.STATUS_CHECK = \"false\"\n                        println \"Current commit status not allow to deploy snapshot\"\n                    }\n                }\n            }\n        }\n\n        stage('Snapshot version check') {\n            when {\n                expression {\n                    return env.STATUS_CHECK == \"true\";\n                }\n            }\n            steps {\n                sh 'env'\n                sh 'java -version'\n                sh './mvnw clean install -pl \"dubbo-dependencies-bom\" && ./mvnw clean install -DskipTests=true && ./mvnw clean validate -Psnapshot-ci-deploy -pl \"dubbo-all\"'\n            }\n        }\n\n        stage('Deploy snapshot') {\n            when {\n                expression {\n                    return env.STATUS_CHECK == \"true\";\n                }\n            }\n            steps {\n                timeout(40) {\n                    sh './mvnw --version'\n                    sh './mvnw clean package deploy -pl dubbo-dependencies-bom && ./mvnw clean source:jar javadoc:jar package deploy -DskipTests=true'\n                }\n            }\n        }\n\n        stage('Save deployed commit id') {\n            steps {\n                script {\n                    if (env.STATUS_CHECK != \"true\") {\n                        println \"Not pass status check\"\n                        env.COMMIT_ID = env.DEPLOYED_COMMIT_ID\n                    }\n                }\n                writeFile file: 'DEPLOY_COMMIT_ID', text: \"${env.COMMIT_ID}\"\n                archiveArtifacts 'DEPLOY_COMMIT_ID'\n            }\n        }\n    }\n\n    post {\n        failure {\n            mail bcc: '', body: '''Project: ${env.JOB_NAME}\n            Build Number: ${env.BUILD_NUMBER}\n            URL: ${env.BUILD_URL}''', cc: '', from: '', replyTo: '', subject: 'Apache Dubbo snapshot deployment fail', to: 'dev@dubbo.apache.org'\n        }\n    }\n\n}\n"
        },
        {
          "name": "Jenkinsfile.sonar",
          "type": "blob",
          "size": 2.62,
          "content": "/*\n *\n *  Licensed to the Apache Software Foundation (ASF) under one or more\n *  contributor license agreements.  See the NOTICE file distributed with\n *  this work for additional information regarding copyright ownership.\n *  The ASF licenses this file to You under the Apache License, Version 2.0\n *  (the \"License\"); you may not use this file except in compliance with\n *  the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\npipeline {\n    agent {\n        label 'ubuntu'\n    }\n\n    tools {\n        maven 'maven_3_latest'\n        jdk 'jdk_11_latest'\n    }\n\n    stages {\n        stage('Code Quality') {\n            steps {\n                echo 'Checking Code Quality on SonarCloud'\n                script {\n                    // Main parameters\n                    def sonarcloudParams=\"\"\n                    if ( env.BRANCH_NAME.startsWith(\"PR-\") ) {\n                        // this is a pull request\n                        withCredentials([string(credentialsId: 'sonarcloud-token', variable: 'SONAR_TOKEN')]) {\n                            sh './mvnw --batch-mode --no-snapshot-updates -e --no-transfer-progress --fail-fast clean verify sonar:sonar -Dmaven.test.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.projectKey=apache_dubbo -Dsonar.coverage.jacoco.xmlReportPaths=dubbo-test/dubbo-dependencies-all/target/site/jacoco-aggregate/jacoco.xml -Dsonar.pullrequest.branch=${CHANGE_BRANCH} -Dsonar.pullrequest.base=${CHANGE_TARGET} -Dsonar.pullrequest.key=${CHANGE_ID} -Dsonar.login=${SONAR_TOKEN}'\n                        }\n                    } else {\n                        // this is just a branch\n                        withCredentials([string(credentialsId: 'sonarcloud-token', variable: 'SONAR_TOKEN')]) {\n                            sh './mvnw --batch-mode --no-snapshot-updates -e --no-transfer-progress --fail-fast clean verify sonar:sonar -Dmaven.test.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.projectKey=apache_dubbo -Dsonar.coverage.jacoco.xmlReportPaths=dubbo-test/dubbo-dependencies-all/target/site/jacoco-aggregate/jacoco.xml -Dsonar.branch.name=${BRANCH_NAME} -Dsonar.login=${SONAR_TOKEN}'\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 15.91,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\nApache Dubbo Submodules:\n\nApache Dubbo includes a number of submodules with separate copyright notices\nand license terms. Your use of these submodules is subject to the terms and\nconditions of the following licenses.\n\nFor the package org.apache.dubbo.common.threadlocal and org.apache.dubbo.common.timer:\n\nThis product contains a modified portion of 'Netty', an event-driven asynchronous network application framework also\n under a \"Apache License 2.0\" license, see https://github.com/netty/netty/blob/4.1/LICENSE.txt:\n\n * io.netty.util.concurrent.FastThreadLocal\n * io.netty.util.internal.InternalThreadLocalMap\n * io.netty.util.Timer\n * io.netty.util.TimerTask\n * io.netty.util.Timeout\n * io.netty.util.HashedWheelTimer\n\nFor the org.apache.dubbo.common.utils.CIDRUtils :\n\nThis product contains a modified portion of 'edazdarevic.commons.net.CIDRUtils' published at\nhttps://github.com/edazdarevic/CIDRUtils. The project is licensed under a MIT License:\n    * The MIT License\n    *\n    * Copyright (c) 2013 Edin Dazdarevic (edin.dazdarevic@gmail.com)\n    * Permission is hereby granted, free of charge, to any person obtaining a copy\n    * of this software and associated documentation files (the \"Software\"), to deal\n    * in the Software without restriction, including without limitation the rights\n    * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    * copies of the Software, and to permit persons to whom the Software is\n    * furnished to do so, subject to the following conditions:\n    * The above copyright notice and this permission notice shall be included in\n    * all copies or substantial portions of the Software.\n    * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    * THE SOFTWARE.\n\nFor the file org.apache.dubbo.common.utils.Utf8Utils.java:\n\nThis product contains a portion of the Protocol Buffers project, which is published at\nhttps://developers.google.com/protocol-buffers/ and is licensed under the following License:\n\n    Copyright 2008 Google Inc.  All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are\n    met:\n\n        * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above\n    copyright notice, this list of conditions and the following disclaimer\n    in the documentation and/or other materials provided with the\n    distribution.\n        * Neither the name of Google Inc. nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n    OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n    Code generated by the Protocol Buffer compiler is owned by the owner\n    of the input file used when generating it.  This code is not\n    standalone and requires a support library to be linked with it.  This\n    support library is itself covered by the above license.\n\nFor the ca.proto in dubbo-registry-xds:\n\nThis product contains a modified portion of 'Istio', an open platform to connect, manage, and secure microservices also\n under a \"Apache License 2.0\" license, see https://github.com/istio/api/blob/master/LICENSE:\n\n * security/v1alpha1/ca.proto\n\nFor the file dubbo-plugin/dubbo-rest-openapi/src/main/resources/META-INF/resources/swagger-ui/index.html:\n\nUnder a \"Apache License 2.0\" license, see https://github.com/swagger-api/swagger-ui/blob/master/LICENSE\n\nFor the file dubbo-plugin/dubbo-rest-openapi/src/main/resources/META-INF/resources/redoc/index.html:\n\nUnder a \"MIT License\" license, see https://github.com/Redocly/redoc/blob/main/LICENSE\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 1.24,
          "content": "Apache Dubbo\nCopyright 2018-2024 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nThis product contains code form the Netty Project:\n\nThe Netty Project\n=================\nPlease visit the Netty web site for more information:\n  * http://netty.io/\n\nCopyright 2014 The Netty Project\n\nThis product contains code form the t-digest Project:\nThe code for the t-digest was originally authored by Ted Dunning\nAdrien Grand contributed the heart of the AVLTreeDigest (https://github.com/jpountz)\n\nThis product contains the following code copied from Maven Protocol Buffers Plugin:\ndubbo-maven-plugin/src/main/java/org/apache/dubbo/maven/plugin/protoc/DubboProtocCompilerMojo.java\n\nMaven Protocol Buffers Plugin\n=============================\nCopyright (c) 2016 Maven Protocol Buffers Plugin Authors. All rights reserved.\n\nThis product contains the following code copied from grpc-java-contrib:\ndubbo-plugin/dubbo-compiler/src/main/java/org/apache/dubbo/gen/utils/ProtoTypeMap.java\nSome portions of this file Copyright (c) 2019, Salesforce.com, Inc. and licensed under the BSD 3-Clause License\n\ngrpc-java-contrib\n====================\nCopyright (c) 2019, Salesforce.com, Inc.\nAll rights reserved.\n\n\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.81,
          "content": "# Apache Dubbo Project\n\n[![Build and Test For PR](https://github.com/apache/dubbo/actions/workflows/build-and-test-pr.yml/badge.svg)](https://github.com/apache/dubbo/actions/workflows/build-and-test-pr.yml)\n[![Codecov](https://codecov.io/gh/apache/dubbo/branch/3.3/graph/badge.svg)](https://codecov.io/gh/apache/dubbo)\n![Maven](https://img.shields.io/maven-central/v/org.apache.dubbo/dubbo.svg)\n![License](https://img.shields.io/github/license/alibaba/dubbo.svg)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/apache/dubbo.svg)](http://isitmaintained.com/project/apache/dubbo \"Average time to resolve an issue\")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/apache/dubbo.svg)](http://isitmaintained.com/project/apache/dubbo \"Percentage of issues still open\")\n\nApache Dubbo is an easy-to-use Web and RPC framework that provides multiple\nlanguage implementations(Java, [Go](https://github.com/apache/dubbo-go), [Python](https://github.com/dubbo/py-client-for-apache-dubbo), [PHP](https://github.com/apache/dubbo-php-framework), [Erlang](https://github.com/apache/dubbo-erlang), [Rust](https://github.com/apache/dubbo-rust), [Node.js](https://github.com/apache/dubbo-js), [Web](https://github.com/apache/dubbo-js)) for communication, service discovery, traffic management,\nobservability, security, tools, and best practices for building enterprise-ready microservices.\n\nWe are now collecting Dubbo user info to help us to improve Dubbo further. Kindly support us by providing your usage information on [Wanted: who's using dubbo](https://github.com/apache/dubbo/discussions/13842), thanks :)\n\n## Architecture\n![Architecture](https://dubbo.apache.org/imgs/architecture.png)\n\n* Consumer and provider communicate with each other using RPC protocol like triple, tcp, rest, etc.\n* Consumers automatically trace provider instances registered in registries(Zookeeper, Nacos) and distribute traffic among them by following traffic strategies.\n* Rich features for monitoring and managing the cluster with dynamic configuration, metrics, tracing, security, and visualized console.\n\n## Getting started\nFollow the instructions below to learn how to:\n\n### Programming with lightweight RPC API\n[5 minutes step-by-step guide](https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/tasks/framework/lightweight-rpc/)\n\nDubbo supports building RPC services with only a few lines of code while depending only on a lightweight SDK. The protocol on the wire can be [Triple](https://dubbo.apache.org/zh-cn/overview/reference/protocols/triple/)(fully gRPC compatible and HTTP-friendly), Dubbo2(TCP), REST, or any protocol of your choice.\n\n\n### Building a microservice application with Spring Boot\n[5 minutes step-by-step guide](https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/tasks/develop/springboot/)\n\nIt's highly recommended to start your microservice application with the Spring Boot Starter `dubbo-spring-boot-starter` provided by Dubbo. With only a single dependency and yaml file, and optionally a bunch of other useful spring boot starters, you can enable all of the Dubo features like service discovery, observability, tracing, etc.\n\nNext, learn how to [deploy](https://dubbo.apache.org/zh-cn/overview/tasks/deploy/), [monitor](https://dubbo.apache.org/zh-cn/overview/tasks/observability/), and [manage the traffic](https://dubbo.apache.org/zh-cn/overview/tasks/traffic-management/) of your Dubbo application and cluster.\n\n## More Features\nGet more details by visiting the links below to get your hands dirty with some well-designed tasks on our website.\n\n* [Launch a Dubbo project](https://dubbo.apache.org/zh-cn/overview/tasks/develop/template/)\n* [RPC protocols](https://dubbo.apache.org/zh-cn/overview/core-features/protocols/)\n* [Traffic management](https://dubbo.apache.org/zh-cn/overview/core-features/traffic/)\n* [Service discovery](https://dubbo.apache.org/zh-cn/overview/core-features/service-discovery/)\n* [Observability](https://dubbo.apache.org/zh-cn/overview/core-features/observability/)\n* [Extensibility](https://dubbo.apache.org/zh-cn/overview/core-features/extensibility/)\n* [Security](https://dubbo.apache.org/zh-cn/overview/core-features/security/)\n* [Visualized console and control plane](https://dubbo.apache.org/zh-cn/overview/reference/admin/)\n* [Kubernetes and Service mesh](https://dubbo.apache.org/zh-cn/overview/core-features/service-mesh/)\n\n## Which Dubbo version should I use?\n| **Dubbo3** | **JDK**  | **Dependencies**                                                                                        | **Description**                                                                                                                                                                                                            |\n|------------|----------|---------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 3.3.2      | 1.8 ～ 21 | [dependency list](https://github.com/apache/dubbo/blob/dubbo-3.3.2/dubbo-dependencies-bom/pom.xml#L92)  | **- Stable version (active)** <br/> **- Features** <br/> &nbsp;&nbsp;  - Triple - gRPC and cURL compatible.<br/>  &nbsp;&nbsp;  - Rest-style programming support.<br/>  &nbsp;&nbsp;  - Spring Boot Starters.              |\n| 3.2.16     | 1.8 ～ 17 | [dependency list](https://github.com/apache/dubbo/blob/dubbo-3.2.5/dubbo-dependencies-bom/pom.xml#L94)  | **- Stable version (active)** <br/> **- Features** <br/> &nbsp;&nbsp;- Out-of-box metrics and tracing support.<br/> &nbsp;&nbsp;- Threadpool Isolation<br/> &nbsp;&nbsp;- 30% performance<br/> &nbsp;&nbsp;- Native Image  |\n| 3.1.11     | 1.8 ～ 17 | [dependency list](https://github.com/apache/dubbo/blob/dubbo-3.2.11/dubbo-dependencies-bom/pom.xml#L90) | **Stable version (not active)**                                                                                                                                                                                            |\n\n| **Dubbo2** | **JDK** | **Dependencies** | **Description** |\n| --- | --- | --- | --- |\n| 2.7.23 | 1.8 | [dependency list](https://github.com/apache/dubbo/blob/dubbo-2.7.23/dubbo-dependencies-bom/pom.xml#L92) | EOL |\n| 2.6.x, 2.5.x | 1.6 ～ 1.7 |  | EOL |\n\n## Contributing\nSee [CONTRIBUTING](https://github.com/apache/dubbo/blob/master/CONTRIBUTING.md) for details on submitting patches and the contribution workflow.\n\n### How does the Dubbo Community collaborate?\n\nThe Dubbo Community primarily communicates on GitHub through issues, discussions, and pull requests.\n\n- Issues: We use issues to track bugs and tasks. Any **work-related** item is associated with an issue.\n- Discussions: We use discussions for questions, early proposals, and announcements. Any **idea-related** item is associated with a discussion.\n- Pull Requests: We use pull requests to merge a set of changes from contributors into Dubbo.\n\nWe have also implemented [a project board](https://github.com/orgs/apache/projects/337) to monitor all the items.\n\nAny essential changes should be discussed on the mailing list before they happen.\n\n### Seeking help\n\nIf you have questions such as:\n\n- What is Dubbo?\n- How do I use Dubbo?\n- Why did an unexpected result occur?\n\nPlease start a discussion at https://github.com/apache/dubbo/discussions.\n\nHowever, if you encounter the following situations:\n\n- You're certain there's a bug that Dubbo needs to fix,\n- You believe a feature could be enhanced,\n- You have a detailed proposal for improving Dubbo,\n\nPlease open an issue at https://github.com/apache/dubbo/issues.\n\nTo ask effective questions, we recommend reading **[How To Ask Questions The Smart Way](https://github.com/selfteaching/How-To-Ask-Questions-The-Smart-Way/blob/master/How-To-Ask-Questions-The-Smart-Way.md)** first.\n\n### Make a Contribution\n\n- Browse the \"help wanted\" tasks in the [Dubbo project board](https://github.com/orgs/apache/projects/337).\n- Participate in discussions on the mailing list. See the subscription [guide](https://github.com/apache/dubbo/wiki/Mailing-list-subscription-guide).\n- Respond to queries in the [discussions](https://github.com/apache/dubbo/issues).\n- Resolve bugs reported in [issues](https://github.com/apache/dubbo/issues) and send us a pull request.\n- Review existing [pull requests](https://github.com/apache/dubbo/pulls).\n- Enhance the [website](https://github.com/apache/dubbo-website). We typically need:\n    - Blog posts\n    - Translations for documentation\n    - Use cases showcasing Dubbo integration in enterprise systems.\n- Improve the [dubbo-admin](https://github.com/apache/dubbo-admin).\n- Contribute to the projects listed in the [ecosystem](https://github.com/apache/?q=dubbo&type=all&language=&sort=).\n- Any other forms of contribution not listed above are also welcome.\n- If you're interested in contributing, please send an email to [dev@dubbo.apache.org](mailto:dev@dubbo.apache.org) to let us know!\n\nFor more details, please take a look at our [guide](https://github.com/apache/dubbo/blob/master/CONTRIBUTING.md) about how to contribute to Dubbo.\n\n## Reporting bugs\n\nPlease follow the [template](https://github.com/apache/dubbo/issues/new?template=dubbo-issue-report-template.md) for reporting any issues.\n\n## Reporting a security vulnerability\n\nPlease report security vulnerabilities to [us](mailto:security@dubbo.apache.org) privately.\n\n## Contact\n* WeChat: apachedubbo\n* DingTalk group: 37290003945\n* Mailing list: [guide](https://dubbo.apache.org/zh-cn/contact/)\n* Twitter: [@ApacheDubbo](https://twitter.com/ApacheDubbo)\n* Security issues: please mail to [us](mailto:security@dubbo.apache.org) privately.\n\n## License\nApache Dubbo is licensed under the Apache License Version 2.0. See the [LICENSE](https://github.com/apache/dubbo/blob/3.3/LICENSE) file for details.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.62,
          "content": "# Security Policy\n\n## Supported Versions\n\nBelow is a table that shows versions that we accept security fixes.\n\n| Version | Supported          |\n|---------| ------------------ |\n| 3.3.x   | :white_check_mark: |\n| 3.2.x   | :white_check_mark: |\n| 3.1.x   | :white_check_mark: |\n| 3.0.x   | :x: |\n| 2.7.x   | :x: |\n| 2.6.x   | :x: |\n| 2.5.x   | :x: |\n\n## Reporting a Vulnerability\n\nThe Apache Software Foundation takes a rigorous standpoint in annihilating the security issues in its software projects. Apache Dubbo is highly sensitive and forthcoming to issues pertaining to its features and functionality.\n\nIf you have apprehensions regarding Dubbo's security or you discover vulnerability or potential threat, don’t hesitate to get in touch with the Apache Dubbo Security Team by dropping a mail at security@dubbo.apache.org. In the email, specify the description of the issue or potential threat. You are also urged to recommend the way to reproduce and replicate the issue. The Dubbo community will get back to you after assessing and analysing the findings.\n\nPLEASE PAY ATTENTION to report the security issue on the security email before disclosing it on public domain.\n\n## Vulnerability Handling\n\nAn overview of the vulnerability handling process is:\n\n* The reporter reports the vulnerability privately to Apache.\n* The appropriate project's security team works privately with the reporter to resolve the vulnerability.\n* A new release of the Apache product concerned is made that includes the fix.\n* The vulnerability is publicly announced.\n\nA more detailed description of the process can be found [here](https://www.apache.org/security/committers.html).\n"
        },
        {
          "name": "build",
          "type": "blob",
          "size": 3.46,
          "content": "#!/bin/sh\n\n#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -eu\n\ncd \"$(dirname \"$0\")\"\n\nexport MAVEN_OPTS=\"\\\n-Xms2g \\\n-Xmx2g \\\n-XX:+UseG1GC \\\n-XX:InitiatingHeapOccupancyPercent=45 \\\n-XX:+UseStringDeduplication \\\n-XX:-TieredCompilation \\\n-XX:TieredStopAtLevel=1 \\\n-Dmaven.build.cache.enabled=true \\\n-Dmaven.build.cache.lazyRestore=true \\\n-Dmaven.compiler.useIncrementalCompilation=false \\\n-Dmaven.test.skip=true \\\n-Dcheckstyle.skip=true \\\n-Dcheckstyle_unix.skip=true \\\n-Drat.skip=true \\\n-Dmaven.javadoc.skip=true\n\"\n\nCMD=\"./mvnw -e --batch-mode --no-snapshot-updates --fail-fast -T 2C\"\nARGS=\"\"\nMODULES=\"\"\nPROFILES=\"sources,skip-spotless\"\nDEFAULT_MODULES=\"dubbo-distribution/dubbo-all,dubbo-spring-boot/dubbo-spring-boot-starter\"\n\nprint_help() {\n    echo \"Usage: $0 [options]\"\n    echo \"Fast local compilation with incremental build and caching\"\n    echo \"Options:\"\n    echo \"  -c    Execute clean goal (removes build artifacts)\"\n    echo \"  -p    Execute compile goal (compiles the source code)\"\n    echo \"  -i    Execute install goal (builds and installs the project)\"\n    echo \"  -t    Execute test goal (runs the tests)\"\n    echo \"  -s    Execute spotless:apply (format the code)\"\n    echo \"  -d    Execute dependency:tree (displays the dependency tree)\"\n    echo \"  -m    Specify modules, default is $DEFAULT_MODULES\"\n    echo \"  -f    Specify profiles, default is $PROFILES\"\n    echo \"  -h    Display this help message\"\n    echo \"\"\n    echo \"Examples:\"\n    echo \"  $0                        Execute install goal compilation\"\n    echo \"  $0 -m                     Execute a minimal compilation\"\n    echo \"  $0 -ci                    Execute clean, install goals compilation\"\n    echo \"  $0 -s                     Execute spotless:apply\"\n    echo \"  $0 -d                     Display the dependency tree\"\n    echo \"  $0 -t -m dubbo-config     Execute test goal for dubbo-config module\"\n    echo \"  $0 -cp -m dubbo-common    Execute clean, compile the dubbo-common module\"\n    exit 0\n}\n\nwhile getopts \":cpitstdm:f:h\" opt; do\n  case $opt in\n    c)\n      ARGS=\"$ARGS clean\"\n      ;;\n    p)\n      ARGS=\"$ARGS compile\"\n      ;;\n    i)\n      ARGS=\"$ARGS install\"\n      ;;\n    t)\n      ARGS=\"$ARGS test\"\n      export MAVEN_OPTS=$(echo \"$MAVEN_OPTS\" | sed 's/-Dmaven\\.test\\.skip=true/-Dmaven.test.skip=false/')\n      ;;\n    s)\n      ARGS=\"$ARGS spotless:apply\"\n      PROFILES=\"sources\"\n      ;;\n    d)\n      ARGS=\"$ARGS dependency:tree\"\n      ;;\n    m)\n      MODULES=\" -pl $OPTARG -am\"\n      ;;\n    f)\n      PROFILES=\"$OPTARG\"\n      ;;\n    h)\n      print_help\n      ;;\n    *)\n      if [ \"$OPTARG\" = \"m\" ]; then\n        MODULES=\" -pl $DEFAULT_MODULES -am\"\n      else\n        ARGS=\"$ARGS $@\"\n      fi\n      ;;\n  esac\ndone\n\nif [ -z \"$ARGS\" ] ; then\n  ARGS=\" install\"\nfi\n\nset -x\n$CMD$ARGS$MODULES -P $PROFILES\n"
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 3.7,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one or more\n@REM contributor license agreements.  See the NOTICE file distributed with\n@REM this work for additional information regarding copyright ownership.\n@REM The ASF licenses this file to You under the Apache License, Version 2.0\n@REM (the \"License\"); you may not use this file except in compliance with\n@REM the License.  You may obtain a copy of the License at\n@REM\n@REM     http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing, software\n@REM distributed under the License is distributed on an \"AS IS\" BASIS,\n@REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@REM See the License for the specific language governing permissions and\n@REM limitations under the License.\n@REM ----------------------------------------------------------------------------\n\n@echo off\nsetlocal enabledelayedexpansion\n\nset MAVEN_OPTS=^\n-Xms2g ^\n-Xmx2g ^\n-XX:+UseG1GC ^\n-XX:InitiatingHeapOccupancyPercent=45 ^\n-XX:+UseStringDeduplication ^\n-XX:-TieredCompilation ^\n-XX:TieredStopAtLevel=1 ^\n-Dmaven.build.cache.enabled=true ^\n-Dmaven.build.cache.lazyRestore=true ^\n-Dmaven.compiler.useIncrementalCompilation=false ^\n-Dcheckstyle.skip=true ^\n-Dcheckstyle_unix.skip=true ^\n-Drat.skip=true ^\n-Dmaven.javadoc.skip=true\n\nset CMD=mvnw.cmd -e --batch-mode --no-snapshot-updates --fail-fast -T 2C\nset ARGS=\nset MODULES=\nset PROFILES=sources,skip-spotless\nset DEFAULT_MODULES=dubbo-distribution/dubbo-all,dubbo-spring-boot/dubbo-spring-boot-starter\nset TEST_SKIP=true\n\ngoto parse_args\n\n:print_help\necho Usage: %~n0 [options]\necho Fast local compilation with incremental build and caching\necho Options:\necho   -c    Execute clean goal (removes build artifacts)\necho   -p    Execute compile goal (compiles the source code)\necho   -i    Execute install goal (builds and installs the project)\necho   -t    Execute test goal (runs the tests)\necho   -s    Execute spotless:apply (format the code)\necho   -d    Execute dependency:tree (displays the dependency tree)\necho   -m    Specify modules, default is %DEFAULT_MODULES%\necho   -f    Specify profiles, default is %PROFILES%\necho   -h    Display this help message\necho.\necho Examples:\necho   %~n0                          Execute install goal compilation\necho   %~n0 -m                       Execute a minimal compilation\necho   %~n0 -c -i                    Execute clean, install goals compilation\necho   %~n0 -s                       Execute spotless:apply\necho   %~n0 -d                       Display the dependency tree\necho   %~n0 -t -m dubbo-config       Execute test goal for dubbo-config module\necho   %~n0 -c -p -m dubbo-common    Execute clean, compile the dubbo-common module\nexit /b\n\n:parse_args\nset ARG=%~1\nif \"%ARG%\"==\"\" goto check_args\nif \"%ARG%\"==\"-c\" (\n    set ARGS=%ARGS% clean\n) else if \"%ARG%\"==\"-p\" (\n    set ARGS=%ARGS% compile\n) else if \"%ARG%\"==\"-i\" (\n    set ARGS=%ARGS% install\n) else if \"%ARG%\"==\"-t\" (\n    set ARGS=%ARGS% test\n    set TEST_SKIP=false\n) else if \"%ARG%\"==\"-s\" (\n    set ARGS=%ARGS% spotless:apply\n    set PROFILES=sources\n) else if \"%ARG%\"==\"-d\" (\n    set ARGS=%ARGS% dependency:tree\n) else if \"%ARG%\"==\"-m\" (\n    if \"%~2\"==\"\" (\n        set MODULES= -pl %DEFAULT_MODULES% -am\n    ) else (\n        set MODULES= -pl %~2 -am\n        shift\n    )\n) else if \"%ARG%\"==\"-f\" (\n    set PROFILES=%~2\n    shift\n) else if \"%ARG%\"==\"-h\" (\n    goto print_help\n) else (\n    set ARGS=%ARGS% %ARG%\n)\n\nshift\ngoto parse_args\n\n:check_args\nif \"%TEST_SKIP%\"==\"true\" (\n    set MAVEN_OPTS=%MAVEN_OPTS% -Dmaven.test.skip=true\n)\nif \"%ARGS%\"==\"\" (\n    set ARGS= install\n)\n\n@echo on\n%CMD%%ARGS%%MODULES% -P %PROFILES%\n\nendlocal\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 1.1,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\ncodecov:\n  require_ci_to_pass: false\n  notify:\n    wait_for_ci: false\ncoverage:\n  status:\n    # pull-requests only\n    patch:\n      default:\n        threshold: 0.1%\nignore:\n  - \"**/aot/**/*\"\n  - \"dubbo-demo/**/*\"\n  - \"dubbo-compiler/**/*\"\n  - \"dubbo-test/**/*\"\n  - \"dubbo-compatible/**/*\"\n  - \"dubbo-native/**/*\"\n  - \"dubbo-maven-plugin/**/*\"\n"
        },
        {
          "name": "codestyle",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-cluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-compatible",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-config",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-configcenter",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-dependencies-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-distribution",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-maven-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-metadata",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-registry",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-remoting",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-rpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-serialization",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-spring-boot-project",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenseCheck.sh",
          "type": "blob",
          "size": 3.57,
          "content": "#!/bin/bash\n#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nAPPEND_ARG=\"\"\nFOLDER=\"./\"\nLINE_FLAG=\"==============================================\"\nTARGET_FILE=\"./license-list\"\n\nred=`tput setaf 1`\ngreen=`tput setaf 2`\nreset=`tput sgr0`\n\n\nif [ -n \"$1\" ]; then\n    echo \"checking module $1\"\n    APPEND_ARG=\"-f $1\"\n    FOLDER=\"$1\"\nelse\n    echo \"checking whole project\"\nfi\n\necho \"Running command: mvn clean package -DskipTests=true -PlicenseCheck $APPEND_ARG\"\n\nmvn clean package -DskipTests=true -PlicenseCheck $APPEND_ARG\n\nstatus=$?\nif [ $status -eq 0 ]; then\n  echo \"mvn command exec success\"\nelse\n  echo \"${red}mvn command exec fail${reset}\"\n  exit 1\nfi\n\n\n#contact and generate license file\nrm -rf $TARGET_FILE\nLICENSE_FILES=`find $FOLDER -type f -name \"THIRD-PARTY.txt\"|grep generated-sources`\n\necho \"Find license files:\"\necho \"$LICENSE_FILES\"\n\nfor i in $LICENSE_FILES\n    do\n        echo \"$LINE_FLAG\" >> $TARGET_FILE\n        echo $i >> $TARGET_FILE\n        cat $i >> $TARGET_FILE\n    done\n\necho \"license files generated at $TARGET_FILE\"\n\n#fix missing license dependencies\nmissingLicense=(\n    \"(Unknown license) jsr173_api:(Apache License, Version 2.0) jsr173_api\"\n    \"(Unknown license) \\\"Java Concurrency in Practice\\\" book annotations:(BEA licensed) \\\"Java Concurrency in Practice\\\" book annotations\"\n    \"(Unknown license) Java Portlet Specification V2.0:(Apache License, Version 2.0) Java Portlet Specification V2.0\"\n)\n\nfor i in \"${missingLicense[@]}\"; do\n    search=`echo $i |awk -F: '{print $1}'`\n    replace=`echo $i |awk -F: '{print $2}'`\n    sed -i.bak 's/'\"$search\"'/'\"$replace\"'/g' $TARGET_FILE\ndone\n\nif [ -f $TARGET_FILE.bak ]; then\n  rm -rf $TARGET_FILE.bak\nfi\n\ncheck_unknown_license=`cat $TARGET_FILE | grep \"Unknown license\"`\n\n#checking unknown license\nif grep -q \"Unknown license\" $TARGET_FILE\nthen\n    echo \"${red}Find unknown license${reset}\"\n    echo \"$check_unknown_license\"\n    exit 1\nfi\n\nallowLicense=(\n    \"CDDL\"\n    \"Apache\"\n    \"Common Development and Distribution License\"\n    \"Eclipse Public License\"\n    \"MIT\"\n    \"The 3-Clause BSD License\"\n    \"Public domain\"\n    \"JSR.*107\"\n    \"Common Public License Version 1.0\"\n    \"org.scijava:native-lib-loader\"\n    \"org.codehaus.woodstox:stax2-api\"\n    \"wsdl4j:wsdl4j\"\n    \"net.jcip:jcip-annotations\"\n)\n\n#filter allow license\nlicense_need_check=`cat $TARGET_FILE | grep -v \"generated-sources/license/THIRD-PARTY.txt\" | grep -v \"third-party dependencies\" | grep -v \"The project has no dependencies.\" | grep -v $LINE_FLAG`\n\nfor i in \"${allowLicense[@]}\"; do\n    license_need_check=`echo \"$license_need_check\"|grep -vi \"$i\"`\ndone\n\n# remove empty lines\necho $license_need_check | sed '/^[[:space:]]*$/d' > license-need-check\n\nif [ ! -s license-need-check ]; then\n    echo \"${green}All dependencies license looks good${reset}\"\nelse\n    echo \"${red}Please check below license${reset}\"\n    cat license-need-check\nfi\n\nrm -f license-list license-need-check\n"
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 9.55,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.1.1\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        JAVA_HOME=\"`/usr/libexec/java_home`\"; export JAVA_HOME\n      else\n        JAVA_HOME=\"/Library/Java/Home\"; export JAVA_HOME\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`\\\\unset -f command; \\\\command -v java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  printf '%s' \"$(cd \"$basedir\"; pwd)\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=$(find_maven_basedir \"$(dirname $0)\")\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\nMAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}; export MAVEN_PROJECTBASEDIR\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nif [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n    fi\nelse\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n    fi\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      wrapperUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.1/maven-wrapper-3.1.1.jar\"\n    else\n      wrapperUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.1/maven-wrapper-3.1.1.jar\"\n    fi\n    while IFS=\"=\" read key value; do\n      case \"$key\" in (wrapperUrl) wrapperUrl=\"$value\"; break ;;\n      esac\n    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Downloading from: $wrapperUrl\"\n    fi\n    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n    if $cygwin; then\n      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n    fi\n\n    if command -v wget > /dev/null; then\n        QUIET=\"--quiet\"\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found wget ... using wget\"\n          QUIET=\"\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget $QUIET \"$wrapperUrl\" -O \"$wrapperJarPath\"\n        else\n            wget $QUIET --http-user=\"$MVNW_USERNAME\" --http-password=\"$MVNW_PASSWORD\" \"$wrapperUrl\" -O \"$wrapperJarPath\"\n        fi\n        [ $? -eq 0 ] || rm -f \"$wrapperJarPath\"\n    elif command -v curl > /dev/null; then\n        QUIET=\"--silent\"\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found curl ... using curl\"\n          QUIET=\"\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl $QUIET -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L\n        else\n            curl $QUIET --user \"$MVNW_USERNAME:$MVNW_PASSWORD\" -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L\n        fi\n        [ $? -eq 0 ] || rm -f \"$wrapperJarPath\"\n    else\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Falling back to using Java to download\"\n        fi\n        javaSource=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaSource=`cygpath --path --windows \"$javaSource\"`\n          javaClass=`cygpath --path --windows \"$javaClass\"`\n        fi\n        if [ -e \"$javaSource\" ]; then\n            if [ ! -e \"$javaClass\" ]; then\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n                fi\n                # Compiling the Java class\n                (\"$JAVA_HOME/bin/javac\" \"$javaSource\")\n            fi\n            if [ -e \"$javaClass\" ]; then\n                # Running the downloader\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Running MavenWrapperDownloader.java ...\"\n                fi\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.54,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.1.1\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset WRAPPER_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.1/maven-wrapper-3.1.1.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET WRAPPER_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET WRAPPER_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.1/maven-wrapper-3.1.1.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %WRAPPER_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 48.61,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <parent>\n    <groupId>org.apache</groupId>\n    <artifactId>apache</artifactId>\n    <version>31</version>\n  </parent>\n\n  <groupId>org.apache.dubbo</groupId>\n  <artifactId>dubbo-parent</artifactId>\n  <version>${revision}</version>\n  <packaging>pom</packaging>\n\n  <name>${project.artifactId}</name>\n  <description>The parent project of dubbo</description>\n  <url>https://github.com/apache/dubbo</url>\n  <inceptionYear>2011</inceptionYear>\n\n  <organization>\n    <name>The Apache Software Foundation</name>\n    <url>http://www.apache.org/</url>\n  </organization>\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n  <developers>\n    <developer>\n      <id>dubbo.io</id>\n      <name>The Dubbo Project Contributors</name>\n      <email>dev-subscribe@dubbo.apache.org</email>\n      <url>http://dubbo.apache.org/</url>\n    </developer>\n  </developers>\n  <mailingLists>\n    <mailingList>\n      <name>Development List</name>\n      <subscribe>dev-subscribe@dubbo.apache.org</subscribe>\n      <unsubscribe>dev-unsubscribe@dubbo.apache.org</unsubscribe>\n      <post>dev@dubbo.apache.org</post>\n    </mailingList>\n    <mailingList>\n      <name>Commits List</name>\n      <subscribe>commits-subscribe@dubbo.apache.org</subscribe>\n      <unsubscribe>commits-unsubscribe@dubbo.apache.org</unsubscribe>\n      <post>commits@dubbo.apache.org</post>\n    </mailingList>\n    <mailingList>\n      <name>Issues List</name>\n      <subscribe>issues-subscribe@dubbo.apache.org</subscribe>\n      <unsubscribe>issues-unsubscribe@dubbo.apache.org</unsubscribe>\n      <post>issues@dubbo.apache.org</post>\n    </mailingList>\n  </mailingLists>\n\n  <modules>\n    <module>dubbo-common</module>\n    <module>dubbo-remoting</module>\n    <module>dubbo-rpc</module>\n    <module>dubbo-cluster</module>\n    <module>dubbo-registry</module>\n    <module>dubbo-configcenter</module>\n    <module>dubbo-config</module>\n    <module>dubbo-serialization</module>\n    <module>dubbo-compatible</module>\n    <module>dubbo-dependencies-bom</module>\n    <module>dubbo-metadata</module>\n    <module>dubbo-metrics</module>\n    <module>dubbo-test</module>\n    <module>dubbo-maven-plugin</module>\n    <module>dubbo-spring-boot-project/dubbo-spring-boot-actuator</module>\n    <module>dubbo-spring-boot-project/dubbo-spring-boot-autoconfigure</module>\n    <module>dubbo-spring-boot-project/dubbo-spring-boot-compatible</module>\n    <module>dubbo-spring-boot-project/dubbo-spring-boot-starters</module>\n    <module>dubbo-spring-boot-project/dubbo-spring-boot</module>\n    <module>dubbo-spring-boot-project/dubbo-spring-boot-actuator-autoconfigure</module>\n    <module>dubbo-plugin/dubbo-qos</module>\n    <module>dubbo-plugin/dubbo-auth</module>\n    <module>dubbo-plugin/dubbo-reactive</module>\n    <module>dubbo-plugin/dubbo-security</module>\n    <module>dubbo-plugin/dubbo-spring-security</module>\n    <module>dubbo-plugin/dubbo-qos-api</module>\n    <module>dubbo-plugin/dubbo-native</module>\n    <module>dubbo-plugin/dubbo-compiler</module>\n    <module>dubbo-plugin/dubbo-filter-cache</module>\n    <module>dubbo-plugin/dubbo-filter-validation</module>\n    <module>dubbo-plugin/dubbo-rest-jaxrs</module>\n    <module>dubbo-plugin/dubbo-rest-spring</module>\n    <module>dubbo-plugin/dubbo-rest-openapi</module>\n    <module>dubbo-plugin/dubbo-triple-servlet</module>\n    <module>dubbo-plugin/dubbo-triple-websocket</module>\n    <module>dubbo-demo/dubbo-demo-api</module>\n    <module>dubbo-demo/dubbo-demo-spring-boot</module>\n    <module>dubbo-demo/dubbo-demo-spring-boot-idl</module>\n  </modules>\n\n  <scm>\n    <connection>scm:git:https://github.com/apache/dubbo.git</connection>\n    <developerConnection>scm:git:https://github.com/apache/dubbo.git</developerConnection>\n    <tag>HEAD</tag>\n    <url>https://github.com/apache/dubbo</url>\n  </scm>\n\n  <issueManagement>\n    <system>Github Issues</system>\n    <url>https://github.com/apache/dubbo/issues</url>\n  </issueManagement>\n\n  <properties>\n    <!-- Build args -->\n    <maven.compiler.source>1.8</maven.compiler.source>\n    <maven.compiler.target>1.8</maven.compiler.target>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.build.outputTimestamp>2020-04-01T08:04:00Z</project.build.outputTimestamp>\n    <argline>-server -Xms256m -Xmx512m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=128m -Dfile.encoding=UTF-8\n      -Djava.net.preferIPv4Stack=true</argline>\n    <arguments />\n    <profile.name>oss</profile.name>\n    <updateReleaseInfo>true</updateReleaseInfo>\n    <skip_maven_deploy>false</skip_maven_deploy>\n    <checkstyle.skip>true</checkstyle.skip>\n    <checkstyle_unix.skip>true</checkstyle_unix.skip>\n    <rat.skip>true</rat.skip>\n    <jacoco.skip>true</jacoco.skip>\n    <spotless.action>check</spotless.action>\n\n    <!-- Maven plugins -->\n    <maven_jar_version>3.4.2</maven_jar_version>\n    <maven_surefire_version>3.5.2</maven_surefire_version>\n    <maven_failsafe_version>3.5.2</maven_failsafe_version>\n    <maven_deploy_version>3.1.3</maven_deploy_version>\n    <maven_compiler_version>3.13.0</maven_compiler_version>\n    <maven_source_version>3.3.1</maven_source_version>\n    <maven_javadoc_version>3.11.2</maven_javadoc_version>\n    <maven_jetty_version>9.4.56.v20240826</maven_jetty_version>\n    <maven_checkstyle_version>3.6.0</maven_checkstyle_version>\n    <maven_jacoco_version>0.8.12</maven_jacoco_version>\n    <maven_flatten_version>1.6.0</maven_flatten_version>\n    <maven_enforce_version>3.5.0</maven_enforce_version>\n    <maven_antrun_version>3.1.0</maven_antrun_version>\n    <maven_os_plugin_version>1.7.1</maven_os_plugin_version>\n    <maven_protobuf_plugin_version>0.6.1</maven_protobuf_plugin_version>\n    <maven_gmavenplus_version>3.0.2</maven_gmavenplus_version>\n\n    <!-- For unify spring boot 3 version -->\n    <spring-6.version>6.2.1</spring-6.version>\n    <spring-boot-3.version>3.4.1</spring-boot-3.version>\n\n    <protobuf-protoc_version>3.22.3</protobuf-protoc_version>\n    <grpc_version>1.54.0</grpc_version>\n    <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>\n    <dubbo-shared-resources.version>1.0.0</dubbo-shared-resources.version>\n    <palantirJavaFormat.version>2.38.0</palantirJavaFormat.version>\n    <revision>3.3.3-SNAPSHOT</revision>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.apache.dubbo</groupId>\n        <artifactId>dubbo-dependencies-bom</artifactId>\n        <version>${project.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <!--JUnit Jupiter Engine to depend on the JUnit5 engine and JUnit 5 API -->\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter-engine</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter-params</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.awaitility</groupId>\n      <artifactId>awaitility</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.hamcrest</groupId>\n      <artifactId>hamcrest</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.mockito</groupId>\n      <artifactId>mockito-core</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.mockito</groupId>\n      <artifactId>mockito-inline</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <!-- Used for packaging NOTICE & LICENSE to each sub-module jar-->\n    <resources>\n      <resource>\n        <filtering>false</filtering>\n        <directory>src/main/resources</directory>\n      </resource>\n      <resource>\n        <targetPath>META-INF/</targetPath>\n        <filtering>false</filtering>\n        <directory>${maven.multiModuleProjectDirectory}</directory>\n        <includes>\n          <include>NOTICE</include>\n          <include>LICENSE</include>\n        </includes>\n      </resource>\n      <resource>\n        <targetPath>META-INF/dubbo-versions</targetPath>\n        <filtering>false</filtering>\n        <directory>${maven.multiModuleProjectDirectory}</directory>\n        <includes>\n          <include>.artifacts</include>\n        </includes>\n      </resource>\n    </resources>\n\n    <pluginManagement>\n      <plugins>\n        <!-- keep surefire and failsafe in sync -->\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-surefire-plugin</artifactId>\n          <version>${maven_surefire_version}</version>\n          <configuration>\n            <!-- Activate the use of TCP to transmit events to the plugin to fix Corrupted STDOUT issue -->\n            <forkNode implementation=\"org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory\" />\n          </configuration>\n        </plugin>\n        <!-- keep surefire and failsafe in sync -->\n        <plugin>\n          <artifactId>maven-failsafe-plugin</artifactId>\n          <version>${maven_failsafe_version}</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-clean-plugin</artifactId>\n          <version>3.4.0</version>\n        </plugin>\n        <plugin>\n          <groupId>org.ops4j.pax.exam</groupId>\n          <artifactId>maven-paxexam-plugin</artifactId>\n          <version>1.2.4</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-dependency-plugin</artifactId>\n          <version>3.8.1</version>\n        </plugin>\n        <plugin>\n          <!-- Do NOT upgrade -->\n          <artifactId>maven-jxr-plugin</artifactId>\n          <version>2.5</version>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>build-helper-maven-plugin</artifactId>\n          <version>3.6.0</version>\n        </plugin>\n        <plugin>\n          <groupId>org.fusesource.hawtjni</groupId>\n          <artifactId>maven-hawtjni-plugin</artifactId>\n          <version>1.15</version>\n        </plugin>\n        <plugin>\n          <groupId>kr.motd.maven</groupId>\n          <artifactId>exec-maven-plugin</artifactId>\n          <version>1.0.0.Final</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-shade-plugin</artifactId>\n          <version>3.6.0</version>\n          <configuration>\n            <createDependencyReducedPom>false</createDependencyReducedPom>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>org.eclipse.jetty</groupId>\n          <artifactId>jetty-maven-plugin</artifactId>\n          <version>${maven_jetty_version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-antrun-plugin</artifactId>\n          <version>${maven_antrun_version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.dubbo</groupId>\n          <artifactId>dubbo-maven-plugin</artifactId>\n          <version>${project.version}</version>\n          <executions>\n            <execution>\n              <id>generate-stubs</id>\n              <goals>\n                <goal>compile</goal>\n              </goals>\n              <phase>generate-sources</phase>\n            </execution>\n          </executions>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n    <plugins>\n      <plugin>\n        <artifactId>maven-jar-plugin</artifactId>\n        <version>${maven_jar_version}</version>\n        <configuration>\n          <archive>\n            <addMavenDescriptor>true</addMavenDescriptor>\n            <index>true</index>\n            <manifest>\n              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n            </manifest>\n            <manifestEntries>\n              <Specification-Version>${project.version}</Specification-Version>\n              <Implementation-Version>${project.version}</Implementation-Version>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <version>${maven_jacoco_version}</version>\n        <executions>\n          <execution>\n            <id>jacoco-initialize</id>\n            <goals>\n              <goal>prepare-agent</goal>\n            </goals>\n          </execution>\n          <execution>\n            <id>report-aggregate</id>\n            <goals>\n              <goal>report</goal>\n              <goal>report-aggregate</goal>\n            </goals>\n            <phase>verify</phase>\n            <configuration>\n              <includes>\n                <include>target/classes/**/*</include>\n                <include>target/classes/**</include>\n                <include>**/*</include>\n              </includes>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <useSystemClassLoader>true</useSystemClassLoader>\n          <forkCount>1</forkCount>\n          <systemProperties>\n            <!-- common shared -->\n          </systemProperties>\n          <!-- Activate the use of TCP to transmit events to the plugin to fix Corrupted STDOUT issue -->\n          <forkNode implementation=\"org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory\" />\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.gmavenplus</groupId>\n        <artifactId>gmavenplus-plugin</artifactId>\n        <version>${maven_gmavenplus_version}</version>\n        <configuration>\n          <parameters>true</parameters>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-deploy-plugin</artifactId>\n        <version>${maven_deploy_version}</version>\n        <configuration>\n          <skip>${skip_maven_deploy}</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>${maven_compiler_version}</version>\n        <configuration>\n          <compilerArgs>\n            <compilerArg>-proc:none</compilerArg>\n            <compilerArg>-parameters</compilerArg>\n          </compilerArgs>\n          <fork>true</fork>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-antrun-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>get-version-infos</id>\n            <goals>\n              <goal>run</goal>\n            </goals>\n            <phase>compile</phase>\n            <configuration>\n              <failOnError>true</failOnError>\n              <target>\n                <property name=\"version_file\" value=\"${project.build.outputDirectory}/META-INF/dubbo-versions/${project.artifactId}\" />\n                <!-- get the current version of dubbo -->\n                <echo file=\"${version_file}\" message=\"revision=${revision}${line.separator}\" />\n                <!-- attach the artifact id -->\n                <echo append=\"true\" file=\"${version_file}\" message=\"artifact.id=${project.artifactId}${line.separator}\" />\n                <echo append=\"true\" file=\"${version_file}\" message=\"git.commit.id=\" />\n                <!-- get the latest commit id -->\n                <exec append=\"true\" error=\"${project.build.directory}/.git.exec.error\" executable=\"git\" failifexecutionfails=\"false\" output=\"${version_file}\" timeout=\"3000\">\n                  <arg line=\"rev-parse HEAD\" />\n                </exec>\n              </target>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-release-plugin</artifactId>\n        <version>3.1.1</version>\n        <configuration>\n          <autoVersionSubmodules>true</autoVersionSubmodules>\n          <useReleaseProfile>false</useReleaseProfile>\n          <releaseProfiles>release</releaseProfiles>\n          <goals>deploy</goals>\n          <arguments>${arguments}</arguments>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>flatten-maven-plugin</artifactId>\n        <version>${maven_flatten_version}</version>\n        <configuration>\n          <updatePomFile>true</updatePomFile>\n          <flattenMode>oss</flattenMode>\n        </configuration>\n        <executions>\n          <execution>\n            <id>flatten</id>\n            <goals>\n              <goal>flatten</goal>\n            </goals>\n            <phase>process-resources</phase>\n          </execution>\n          <execution>\n            <id>flatten.clean</id>\n            <goals>\n              <goal>clean</goal>\n            </goals>\n            <phase>clean</phase>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n\n  <profiles>\n    <profile>\n      <id>snapshot-ci-deploy</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-enforcer-plugin</artifactId>\n            <version>${maven_enforce_version}</version>\n            <executions>\n              <execution>\n                <id>enforce-no-releases</id>\n                <goals>\n                  <goal>enforce</goal>\n                </goals>\n                <configuration>\n                  <rules>\n                    <requireSnapshotVersion>\n                      <message>No Releases Allowed!</message>\n                      <failWhenParentIsRelease>false</failWhenParentIsRelease>\n                    </requireSnapshotVersion>\n                  </rules>\n                  <fail>true</fail>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>javadoc-lint</id>\n      <activation>\n        <jdk>[1.8,)</jdk>\n      </activation>\n      <properties>\n        <doclint>none</doclint>\n      </properties>\n    </profile>\n    <profile>\n      <id>jdk-version-ge-17</id>\n      <activation>\n        <jdk>[17,)</jdk>\n      </activation>\n      <modules>\n        <module>dubbo-spring-boot-project/dubbo-spring-boot-3-autoconfigure</module>\n      </modules>\n    </profile>\n    <!-- jacoco: mvn validate -Pjacoco  -->\n    <profile>\n      <id>jacoco</id>\n      <properties>\n        <jacoco.skip>false</jacoco.skip>\n      </properties>\n    </profile>\n\n    <!-- check code style: mvn validate -Pcheckstyle  -->\n    <profile>\n      <id>checkstyle</id>\n      <properties>\n        <checkstyle.skip>false</checkstyle.skip>\n        <checkstyle_unix.skip>false</checkstyle_unix.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>checkstyle_def</id>\n      <activation>\n        <jdk>[1.8,)</jdk>\n      </activation>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-checkstyle-plugin</artifactId>\n            <version>${maven_checkstyle_version}</version>\n            <dependencies>\n              <dependency>\n                <groupId>com.puppycrawl.tools</groupId>\n                <artifactId>checkstyle</artifactId>\n                <version>8.45.1</version>\n              </dependency>\n              <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>dubbo-shared-resources</artifactId>\n                <version>1.0.0</version>\n              </dependency>\n            </dependencies>\n            <executions>\n              <execution>\n                <id>checkstyle-validation</id>\n                <goals>\n                  <goal>check</goal>\n                </goals>\n                <phase>validate</phase>\n                <configuration>\n                  <configLocation>codestyle/checkstyle.xml</configLocation>\n                  <suppressionsLocation>codestyle/checkstyle-suppressions.xml</suppressionsLocation>\n                  <consoleOutput>true</consoleOutput>\n                  <failOnViolation>true</failOnViolation>\n                  <skip>${checkstyle.skip}</skip>\n                  <excludes>**/JSONWriter.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/AbstractAotMojo.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/AbstractDependencyFilterMojo.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/CommandLineBuilder.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/DependencyFilter.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/Exclude.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/ExcludeFilter.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/FilterableDependency.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/Include.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/IncludeFilter.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/JavaCompilerPluginConfiguration.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/JavaExecutable.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/JavaProcessExecutor.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/MatchingGroupIdFilter.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/RunArguments.java,\n                                        **/org/apache/dubbo/maven/plugin/aot/RunProcess.java,\n                                        **/org/apache/dubbo/aot/generate/BasicJsonWriter.java,\n                                        **/org/apache/dubbo/aot/api/ExecutableMode.java,\n                                        **/org/apache/dubbo/aot/api/MemberCategory.java,\n                                        **/org/apache/dubbo/common/threadpool/serial/SerializingExecutor.java,\n                                        **/org/apache/dubbo/common/threadlocal/InternalThreadLocal.java,\n                                        **/org/apache/dubbo/common/threadlocal/InternalThreadLocalMap.java,\n                                        **/org/apache/dubbo/common/timer/TimerTask.java,\n                                        **/org/apache/dubbo/common/timer/Timer.java,\n                                        **/org/apache/dubbo/common/timer/Timeout.java,\n                                        **/org/apache/dubbo/common/timer/HashedWheelTimer.java,\n                                        **/org/apache/dubbo/common/utils/CIDRUtils.java,\n                                        **/org/apache/dubbo/common/utils/Utf8Utils.java,\n                                        **/org/apache/dubbo/common/serialize/protobuf/support/wrapper/MapValue.java,\n                                        **/org/apache/dubbo/common/serialize/protobuf/support/wrapper/ThrowablePB.java,\n                                        **/org/apache/dubbo/test/common/utils/TestSocketUtils.java,\n                                        **/org/apache/dubbo/triple/TripleWrapper.java,\n                                        **/org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController.java,\n                                        **/org/apache/dubbo/rpc/protocol/tri/rest/cors/CorsHeaderFilter.java,\n                                        **/org/apache/dubbo/metrics/aggregate/DubboMergingDigest.java,\n                                        **/org/apache/dubbo/metrics/aggregate/DubboAbstractTDigest.java,\n                                        **/org/apache/dubbo/common/logger/helpers/FormattingTuple.java,\n                                        **/org/apache/dubbo/common/logger/helpers/MessageFormatter.java,\n                                        **/org/apache/dubbo/maven/plugin/protoc/DubboProtocCompilerMojo.java,\n                                        **/org/apache/dubbo/gen/utils/ProtoTypeMap.java,\n                                        **/istio/v1/auth/**/*,\n                                        **/com/google/rpc/*,\n                                        **/generated/**/*,\n                                        **/generated-sources/**/*,\n                                        **/grpc/health/**/*,\n                                        **/grpc/reflection/**/*,\n                                        **/target/**/*,\n                                        **/*.json</excludes>\n                </configuration>\n              </execution>\n              <execution>\n                <id>checkstyle-unix-validation</id>\n                <goals>\n                  <goal>check</goal>\n                </goals>\n                <phase>validate</phase>\n                <configuration>\n                  <configLocation>codestyle/checkstyle_unix.xml</configLocation>\n                  <consoleOutput>true</consoleOutput>\n                  <failOnViolation>true</failOnViolation>\n                  <skip>${checkstyle_unix.skip}</skip>\n                  <resourceExcludes>**/target/**/*,\n                    **/generated/**/*,\n                    **/generated-sources/**/*</resourceExcludes>\n                  <excludes>**/target/**/*</excludes>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>sources</id>\n      <build>\n        <plugins>\n          <plugin>\n            <artifactId>maven-source-plugin</artifactId>\n            <version>${maven_source_version}</version>\n            <executions>\n              <execution>\n                <id>attach-sources</id>\n                <goals>\n                  <goal>jar</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>release</id>\n      <modules>\n        <module>dubbo-spring-boot-project/dubbo-spring-boot-3-autoconfigure</module>\n        <module>dubbo-plugin/dubbo-plugin-loom</module>\n        <module>dubbo-distribution/dubbo-all</module>\n        <module>dubbo-distribution/dubbo-all-shaded</module>\n        <module>dubbo-distribution/dubbo-apache-release</module>\n        <module>dubbo-distribution/dubbo-bom</module>\n        <module>dubbo-distribution/dubbo-core-spi</module>\n      </modules>\n      <properties>\n        <log4j2_version>2.17.2</log4j2_version>\n        <jacoco.skip>false</jacoco.skip>\n      </properties>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-source-plugin</artifactId>\n            <version>${maven_source_version}</version>\n            <executions>\n              <execution>\n                <id>attach-sources</id>\n                <goals>\n                  <goal>jar</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-javadoc-plugin</artifactId>\n            <version>${maven_javadoc_version}</version>\n            <configuration>\n              <show>public</show>\n              <charset>UTF-8</charset>\n              <encoding>UTF-8</encoding>\n              <docencoding>UTF-8</docencoding>\n              <failOnError>false</failOnError>\n              <links>\n                <link>https://docs.oracle.com/javase/8/docs/api</link>\n              </links>\n              <doclint>none</doclint>\n              <excludePackageNames>org.apache.dubbo.demo,org.apache.dubbo.demo.*</excludePackageNames>\n              <doctitle>Apache Dubbo ${project.version} API</doctitle>\n              <windowtitle>Apache Dubbo ${project.version} API</windowtitle>\n            </configuration>\n            <executions>\n              <execution>\n                <id>attach-javadoc</id>\n                <goals>\n                  <goal>jar</goal>\n                  <goal>aggregate</goal>\n                </goals>\n                <configuration>\n                  <additionalDependencies>\n                    <additionalDependency>\n                      <groupId>org.apache.logging.log4j</groupId>\n                      <artifactId>log4j-api</artifactId>\n                      <version>${log4j2_version}</version>\n                    </additionalDependency>\n                    <additionalDependency>\n                      <groupId>org.apache.logging.log4j</groupId>\n                      <artifactId>log4j-core</artifactId>\n                      <version>${log4j2_version}</version>\n                    </additionalDependency>\n                  </additionalDependencies>\n                  <doclint>none</doclint>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-gpg-plugin</artifactId>\n            <executions>\n              <execution>\n                <goals>\n                  <goal>sign</goal>\n                </goals>\n                <phase>verify</phase>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>licenseCheck</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.codehaus.mojo</groupId>\n            <artifactId>license-maven-plugin</artifactId>\n            <version>2.5.0</version>\n            <executions>\n              <execution>\n                <id>license-check</id>\n                <goals>\n                  <goal>add-third-party</goal>\n                </goals>\n                <phase>generate-sources</phase>\n                <configuration>\n                  <includeOptional>false</includeOptional>\n                  <useMissingFile>false</useMissingFile>\n                  <failOnMissing>false</failOnMissing>\n                  <licenseMerges>\n                    <licenseMerge>Apache License, Version 2.0|The Apache Software License, Version\n                                            2.0|ASF 2.0|Apache 2|Apache-2.0|Apache 2.0 License|Apache 2.0|Apache License v2.0|Apache License 2.0|The Apache License, Version 2.0|The Apache Software License, Version 2.0</licenseMerge>\n                    <licenseMerge>The MIT License|MIT License</licenseMerge>\n                    <licenseMerge>The 3-Clause BSD License|New BSD License|3-Clause BSD\n                                            License|BSD|3-Clause BSD License|The New BSD License</licenseMerge>\n                  </licenseMerges>\n                  <excludes>**/org/apache/dubbo/common/logger/helpers/FormattingTuple.java,\n                                        **/org/apache/dubbo/common/logger/helpers/MessageFormatter.java</excludes>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>jdk15ge-add-open</id>\n      <activation>\n        <jdk>[15,</jdk>\n      </activation>\n      <properties>\n        <argLine>--add-opens java.base/java.lang=ALL-UNNAMED\n          --add-opens java.base/java.math=ALL-UNNAMED\n          --add-opens java.base/java.util=ALL-UNNAMED</argLine>\n      </properties>\n    </profile>\n    <profile>\n      <id>jdk15ge-simple</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <useSystemClassLoader>true</useSystemClassLoader>\n              <forkCount>1</forkCount>\n              <systemProperties>\n                <!-- common shared -->\n              </systemProperties>\n              <!-- Activate the use of TCP to transmit events to the plugin to fix Corrupted STDOUT issue -->\n              <forkNode implementation=\"org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory\" />\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>jdk9-compile</id>\n      <activation>\n        <jdk>[1.9,)</jdk>\n      </activation>\n      <build>\n        <plugins>\n          <plugin>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <configuration>\n              <release>8</release>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>jdk9-jdk11-spotless</id>\n      <activation>\n        <jdk>[1.8, 11)</jdk>\n      </activation>\n      <properties>\n        <palantirJavaFormat.version>1.1.0</palantirJavaFormat.version>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>jdk11-jdk21-spotless</id>\n      <activation>\n        <jdk>[11, 21)</jdk>\n      </activation>\n      <properties>\n        <palantirJavaFormat.version>2.28.0</palantirJavaFormat.version>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>jdk21-spotless</id>\n      <activation>\n        <jdk>[21,)</jdk>\n      </activation>\n      <properties>\n        <palantirJavaFormat.version>2.39.0</palantirJavaFormat.version>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>java11+</id>\n      <activation>\n        <jdk>[11,)</jdk>\n      </activation>\n      <build>\n        <!--- newer versions of plugins requires JDK 11 -->\n        <plugins>\n          <plugin>\n            <groupId>com.diffplug.spotless</groupId>\n            <artifactId>spotless-maven-plugin</artifactId>\n            <version>${spotless-maven-plugin.version}</version>\n            <configuration>\n              <java>\n                <excludes>\n                  <exclude>src/main/java/org/apache/dubbo/common/threadlocal/InternalThreadLocal.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/threadlocal/InternalThreadLocalMap.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/timer/HashedWheelTimer.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/timer/Timeout.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/timer/Timer.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/timer/TimerTask.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/utils/CIDRUtils.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/utils/Utf8Utils.java</exclude>\n                  <exclude>src/test/java/org/apache/dubbo/config/spring/EmbeddedZooKeeper.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/test/common/utils/TestSocketUtils.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/rpc/protocol/tri/rest/cors/CorsHeaderFilter.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/threadpool/serial/SerializingExecutor.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/AbstractAotMojo.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/AbstractDependencyFilterMojo.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/CommandLineBuilder.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/DependencyFilter.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/Exclude.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/ExcludeFilter.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/FilterableDependency.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/Include.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/IncludeFilter.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/JavaCompilerPluginConfiguration.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/JavaExecutable.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/JavaProcessExecutor.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/MatchingGroupIdFilter.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/RunArguments.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/aot/RunProcess.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/aot/generate/BasicJsonWriter.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/aot/api/ExecutableMode.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/aot/api/MemberCategory.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/metrics/aggregate/DubboMergingDigest.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/metrics/aggregate/DubboAbstractTDigest.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/logger/helpers/FormattingTuple.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/common/logger/helpers/MessageFormatter.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/maven/plugin/protoc/DubboProtocCompilerMojo.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/gen/utils/ProtoTypeMap.java</exclude>\n                  <exclude>src/main/java/org/apache/dubbo/spring/boot/autoconfigure/DubboTriple3AutoConfiguration.java</exclude>\n                  <exclude>**/generated-sources/**</exclude>\n                </excludes>\n                <palantirJavaFormat>\n                  <version>${palantirJavaFormat.version}</version>\n                </palantirJavaFormat>\n                <removeUnusedImports />\n                <importOrder>\n                  <file>dubbo-importorder.txt</file>\n                </importOrder>\n                <licenseHeader>\n                  <file>checkstyle-header.txt</file>\n                </licenseHeader>\n              </java>\n              <pom>\n                <sortPom>\n                  <expandEmptyElements>false</expandEmptyElements>\n                  <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>\n                </sortPom>\n              </pom>\n              <upToDateChecking>\n                <enabled>true</enabled>\n              </upToDateChecking>\n            </configuration>\n            <dependencies>\n              <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>dubbo-shared-resources</artifactId>\n                <version>${dubbo-shared-resources.version}</version>\n              </dependency>\n            </dependencies>\n            <executions>\n              <execution>\n                <goals>\n                  <goal>${spotless.action}</goal>\n                </goals>\n                <phase>process-sources</phase>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>skip-spotless</id>\n      <properties>\n        <spotless.skip>true</spotless.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>loom</id>\n      <activation>\n        <jdk>[21,)</jdk>\n      </activation>\n      <modules>\n        <module>dubbo-plugin/dubbo-plugin-loom</module>\n      </modules>\n    </profile>\n    <profile>\n      <id>dubbo-core-spi</id>\n      <modules>\n        <module>dubbo-distribution/dubbo-core-spi</module>\n      </modules>\n    </profile>\n    <profile>\n      <id>dubbo-all</id>\n      <activation>\n        <jdk>[1.7,)</jdk>\n      </activation>\n      <modules>\n        <module>dubbo-distribution/dubbo-all</module>\n        <module>dubbo-distribution/dubbo-bom</module>\n      </modules>\n    </profile>\n    <profile>\n      <id>spring-6</id>\n      <dependencyManagement>\n        <dependencies>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-aop</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-aspects</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-beans</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context-indexer</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context-support</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-core</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-core-test</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-expression</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-instrument</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-jcl</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-jdbc</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-test</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-tx</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-web</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-webmvc</artifactId>\n            <version>${spring-6.version}</version>\n          </dependency>\n        </dependencies>\n      </dependencyManagement>\n    </profile>\n    <profile>\n      <id>spring-boot-3</id>\n      <properties>\n        <tomcat.version>10.1.34</tomcat.version>\n      </properties>\n      <dependencyManagement>\n        <dependencies>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-autoconfigure</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-test</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-test-autoconfigure</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-actuator</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-actuator-autoconfigure</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-json</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-log4j2</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-logging</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-validation</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n            <version>${spring-boot-3.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.apache.tomcat.embed</groupId>\n            <artifactId>tomcat-embed-core</artifactId>\n            <version>${tomcat.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.apache.tomcat.embed</groupId>\n            <artifactId>tomcat-embed-el</artifactId>\n            <version>${tomcat.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.apache.tomcat.embed</groupId>\n            <artifactId>tomcat-embed-websocket</artifactId>\n            <version>${tomcat.version}</version>\n          </dependency>\n        </dependencies>\n      </dependencyManagement>\n    </profile>\n  </profiles>\n</project>\n"
        }
      ]
    }
  ]
}