{
  "metadata": {
    "timestamp": 1736557611409,
    "page": 684,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "llvm/llvm-project",
      "stars": 30048,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.02,
          "content": "BasedOnStyle: LLVM\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.39,
          "content": "Checks: '-*,clang-diagnostic-*,llvm-*,misc-*,-misc-const-correctness,-misc-unused-parameters,-misc-non-private-member-variables-in-classes,-misc-no-recursion,-misc-use-anonymous-namespace,readability-identifier-naming,-misc-include-cleaner'\nCheckOptions:\n  - key:             readability-identifier-naming.ClassCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.EnumCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.FunctionCase\n    value:           camelBack\n  # Exclude from scanning as this is an exported symbol used for fuzzing\n  # throughout the code base.\n  - key:             readability-identifier-naming.FunctionIgnoredRegexp\n    value:           \"LLVMFuzzerTestOneInput\"\n  - key:             readability-identifier-naming.MemberCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.ParameterCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.UnionCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.VariableCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.IgnoreMainLikeFunctions\n    value:           1\n  - key:             readability-redundant-member-init.IgnoreBaseInCopyConstructors\n    value:           1\n  - key:             modernize-use-default-member-init.UseAssignment\n    value:           1\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 3.54,
          "content": "# Since version 2.23 (released in August 2019), git-blame has a feature\n# to ignore or bypass certain commits.\n#\n# This file contains a list of commits that are not likely what you\n# are looking for in a blame, such as mass reformatting or renaming.\n# You can set this file as a default ignore file for blame by running\n# the following command.\n#\n# $ git config blame.ignoreRevsFile .git-blame-ignore-revs\n\n# r365730: [Coding style change][lld] Rename variables for non-ELF ports\n136d27ab4de0c1d5dedfecc32a9857be78fa0648\n\n# r365595: [Coding style change] Rename variables so that they start with a lowercase letter\n3837f4273fcc40cc519035479aefe78e5cbd3055\n\n# r280751: [Coding style change][lldb] Moved LLDB code base to use LLVM style\nb9c1b51e45b845debb76d8658edabca70ca56079\n\n# r302421: That change incorrectly changed line endings in some libc++ files\n9669df28d4fd3c52d09f451186bd217cdc3322c0\n\n# r302496: That is the revert of r302421\nff63090b0e1072bd398b8efef8ae2291613a6ec9\n\n# Fix more line endings changed in r320089. NFC.\nd8f0e6caa91e230a486c948ab643174e40bdf215\n\n# Correct line endings that got mixed up in r320089; NFC.\n29dc5ded45447915d96ef7ca3f02acf2232282e0\n\n# Remove line-endings added by r320089. NFC.\n100a0eedc00b2bf48bcdc6c209c000745a4a0e48\n\n# Cleanup __config indention. NFC.\n2b772b930e097ed6f06d698a51e291c7fd318baa\n\n# Fixing whitespace problems\n94b2dd0998230c758abd92c99d3700c971f7a31a\n\n# Wiped out some non-ascii characters that snuck into the copyright.\n5b08a8a43254ed30bd953e869b0fd9fc1e8b82d0\n\n# Use C++11 default member initializers in LLDB. NFC.\n9494c510af56d9c8593ab69017dcaa232210b235\n\n# [libc++][NFC] clang-format <__config>\nac251726f84d5b7e6533a2e3712920184435b61b\n\n# Python black reformatting, by subdir. NFC\nb71edfaa4ec3c998aadb35255ce2f60bba2940b0\nf84bac329ba6c9f0c022bcf77237e912362e247a\ndd3c26a045c081620375a878159f536758baba6e\n7bfaa0f09d0564f315ea778023b34b8a113ec740\nf98ee40f4b5d7474fc67e82824bf6abbaedb7b1c\n2238dcc39358353cac21df75c3c3286ab20b8f53\nf9008e6366c2496b1ca1785b891d5578174ad63e\n\n# [libc++][NFC] Apply clang-format on large parts of the code base\n5aa03b648b827128d439f705cd7d57d59673741d\n\n# [clang][NFC] Remove trailing whitespaces and enforce it in lib, include and docs\nf6d557ee34b6bbdb1dc32f29e34b4a4a8ad35e81\n\n# [libc++][NFC] clang-format <shared_mutex>\n2d7eb9c9ea1a146412a83603d5c0c6339a5d8284\n\n# [libc++] Rename _LIBCPP_INLINE_VISIBILITY to _LIBCPP_HIDE_FROM_ABI\n4c198542226223f6a5c5511a1f89b37d15ee10b9\n\n# [libc++] Replace uses of _VSTD:: by std:: (#74331)\n77a00c0d546cd4aa8311b5b9031ae9ea8cdb050c\n\n# [libc++] Format the code base (#74334)\n9783f28cbb155e4a8d49c12e1c60ce14dcfaf0c7\n\n# [RFC] compiler-rt builtins cleanup and refactoring\n082b89b25faae3e45a023caf51b65ca0f02f377f\n0ba22f51d128bee9d69756c56c4678097270e10b\n84da0e1bb75f8666cf222d2f600f37bebb9ea389\n\n# [NFC] clang-format utils/TableGen (#80973)\nb9079baaddfed5e604fbfaa1d81a7a1c38e78c26\n\n# [libc++][NFC] Run clang-format on libcxx/include again (#95874)\ne2c2ffbe7a1b5d9e32a2ce64279475b50c4cba5b\n\n# [lldb][nfc] Deindent ProcessGDBRemote::SetThreadStopInfo by two levels\nb32931c5b32eb0d2cf37d688b34f8548c9674c19\n\n# [libc++] Various consistency fixes to the CSV files that we use for tracking Standards Conformance\n64946fdaf9864d8279da1c30e4d7214fe13d1427\nb6262880b34629e9d7a72b5a42f315a3c9ed8139\n39c7dc7207e76e72da21cf4fedda21b5311bf62d\ne80bc777749331e9519575f416c342f7626dd14d\n7e5cd8f1b6c5263ed5e2cc03d60c8779a8d3e9f7\n\n# NFC: clang-format test_demangle.pass.cpp but keep test \"lines\"\nd33bf2e9df578ff7e44fd22504d6ad5a122b7ee6\n\n# [lldb][NFC] clang-format MainLoopPosix.cpp\n66bdbfbaa08fa3d8e64a7fe136a8fb717f5cdbb7\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 9.03,
          "content": "libcxx/src/**/*.cpp     merge=libcxx-reformat\nlibcxx/include/**/*.h   merge=libcxx-reformat\n\n# Explicitly handle files with no extension\nlibcxx/include/__availability               merge=libcxx-reformat\nlibcxx/include/__bit_reference              merge=libcxx-reformat\nlibcxx/include/__config                     merge=libcxx-reformat\nlibcxx/include/__hash_table                 merge=libcxx-reformat\nlibcxx/include/__locale                     merge=libcxx-reformat\nlibcxx/include/__node_handle                merge=libcxx-reformat\nlibcxx/include/__split_buffer               merge=libcxx-reformat\nlibcxx/include/__std_clang_module           merge=libcxx-reformat\nlibcxx/include/__threading_support          merge=libcxx-reformat\nlibcxx/include/__tree                       merge=libcxx-reformat\nlibcxx/include/__verbose_abort              merge=libcxx-reformat\nlibcxx/include/algorithm                    merge=libcxx-reformat\nlibcxx/include/any                          merge=libcxx-reformat\nlibcxx/include/array                        merge=libcxx-reformat\nlibcxx/include/atomic                       merge=libcxx-reformat\nlibcxx/include/barrier                      merge=libcxx-reformat\nlibcxx/include/bit                          merge=libcxx-reformat\nlibcxx/include/bitset                       merge=libcxx-reformat\nlibcxx/include/cassert                      merge=libcxx-reformat\nlibcxx/include/ccomplex                     merge=libcxx-reformat\nlibcxx/include/cctype                       merge=libcxx-reformat\nlibcxx/include/cerrno                       merge=libcxx-reformat\nlibcxx/include/cfenv                        merge=libcxx-reformat\nlibcxx/include/cfloat                       merge=libcxx-reformat\nlibcxx/include/charconv                     merge=libcxx-reformat\nlibcxx/include/chrono                       merge=libcxx-reformat\nlibcxx/include/cinttypes                    merge=libcxx-reformat\nlibcxx/include/ciso646                      merge=libcxx-reformat\nlibcxx/include/climits                      merge=libcxx-reformat\nlibcxx/include/clocale                      merge=libcxx-reformat\nlibcxx/include/cmath                        merge=libcxx-reformat\nlibcxx/include/codecvt                      merge=libcxx-reformat\nlibcxx/include/compare                      merge=libcxx-reformat\nlibcxx/include/complex                      merge=libcxx-reformat\nlibcxx/include/concepts                     merge=libcxx-reformat\nlibcxx/include/condition_variable           merge=libcxx-reformat\nlibcxx/include/coroutine                    merge=libcxx-reformat\nlibcxx/include/csetjmp                      merge=libcxx-reformat\nlibcxx/include/csignal                      merge=libcxx-reformat\nlibcxx/include/cstdarg                      merge=libcxx-reformat\nlibcxx/include/cstdbool                     merge=libcxx-reformat\nlibcxx/include/cstddef                      merge=libcxx-reformat\nlibcxx/include/cstdint                      merge=libcxx-reformat\nlibcxx/include/cstdio                       merge=libcxx-reformat\nlibcxx/include/cstdlib                      merge=libcxx-reformat\nlibcxx/include/cstring                      merge=libcxx-reformat\nlibcxx/include/ctgmath                      merge=libcxx-reformat\nlibcxx/include/ctime                        merge=libcxx-reformat\nlibcxx/include/cuchar                       merge=libcxx-reformat\nlibcxx/include/cwchar                       merge=libcxx-reformat\nlibcxx/include/cwctype                      merge=libcxx-reformat\nlibcxx/include/deque                        merge=libcxx-reformat\nlibcxx/include/exception                    merge=libcxx-reformat\nlibcxx/include/execution                    merge=libcxx-reformat\nlibcxx/include/expected                     merge=libcxx-reformat\nlibcxx/include/experimental/__config        merge=libcxx-reformat\nlibcxx/include/experimental/__memory        merge=libcxx-reformat\nlibcxx/include/experimental/deque           merge=libcxx-reformat\nlibcxx/include/experimental/forward_list    merge=libcxx-reformat\nlibcxx/include/experimental/iterator        merge=libcxx-reformat\nlibcxx/include/experimental/list            merge=libcxx-reformat\nlibcxx/include/experimental/map             merge=libcxx-reformat\nlibcxx/include/experimental/memory          merge=libcxx-reformat\nlibcxx/include/experimental/memory_resource merge=libcxx-reformat\nlibcxx/include/experimental/propagate_const merge=libcxx-reformat\nlibcxx/include/experimental/regex           merge=libcxx-reformat\nlibcxx/include/experimental/set             merge=libcxx-reformat\nlibcxx/include/experimental/simd            merge=libcxx-reformat\nlibcxx/include/experimental/string          merge=libcxx-reformat\nlibcxx/include/experimental/type_traits     merge=libcxx-reformat\nlibcxx/include/experimental/unordered_map   merge=libcxx-reformat\nlibcxx/include/experimental/unordered_set   merge=libcxx-reformat\nlibcxx/include/experimental/utility         merge=libcxx-reformat\nlibcxx/include/experimental/vector          merge=libcxx-reformat\nlibcxx/include/ext/__hash                   merge=libcxx-reformat\nlibcxx/include/ext/hash_map                 merge=libcxx-reformat\nlibcxx/include/ext/hash_set                 merge=libcxx-reformat\nlibcxx/include/filesystem                   merge=libcxx-reformat\nlibcxx/include/format                       merge=libcxx-reformat\nlibcxx/include/forward_list                 merge=libcxx-reformat\nlibcxx/include/fstream                      merge=libcxx-reformat\nlibcxx/include/functional                   merge=libcxx-reformat\nlibcxx/include/future                       merge=libcxx-reformat\nlibcxx/include/initializer_list             merge=libcxx-reformat\nlibcxx/include/iomanip                      merge=libcxx-reformat\nlibcxx/include/ios                          merge=libcxx-reformat\nlibcxx/include/iosfwd                       merge=libcxx-reformat\nlibcxx/include/iostream                     merge=libcxx-reformat\nlibcxx/include/istream                      merge=libcxx-reformat\nlibcxx/include/iterator                     merge=libcxx-reformat\nlibcxx/include/latch                        merge=libcxx-reformat\nlibcxx/include/limits                       merge=libcxx-reformat\nlibcxx/include/list                         merge=libcxx-reformat\nlibcxx/include/locale                       merge=libcxx-reformat\nlibcxx/include/map                          merge=libcxx-reformat\nlibcxx/include/mdspan                       merge=libcxx-reformat\nlibcxx/include/memory                       merge=libcxx-reformat\nlibcxx/include/memory_resource              merge=libcxx-reformat\nlibcxx/include/mutex                        merge=libcxx-reformat\nlibcxx/include/new                          merge=libcxx-reformat\nlibcxx/include/numbers                      merge=libcxx-reformat\nlibcxx/include/numeric                      merge=libcxx-reformat\nlibcxx/include/optional                     merge=libcxx-reformat\nlibcxx/include/ostream                      merge=libcxx-reformat\nlibcxx/include/print                        merge=libcxx-reformat\nlibcxx/include/queue                        merge=libcxx-reformat\nlibcxx/include/random                       merge=libcxx-reformat\nlibcxx/include/ranges                       merge=libcxx-reformat\nlibcxx/include/ratio                        merge=libcxx-reformat\nlibcxx/include/regex                        merge=libcxx-reformat\nlibcxx/include/scoped_allocator             merge=libcxx-reformat\nlibcxx/include/semaphore                    merge=libcxx-reformat\nlibcxx/include/set                          merge=libcxx-reformat\nlibcxx/include/shared_mutex                 merge=libcxx-reformat\nlibcxx/include/source_location              merge=libcxx-reformat\nlibcxx/include/span                         merge=libcxx-reformat\nlibcxx/include/sstream                      merge=libcxx-reformat\nlibcxx/include/stack                        merge=libcxx-reformat\nlibcxx/include/stdexcept                    merge=libcxx-reformat\nlibcxx/include/stop_token                   merge=libcxx-reformat\nlibcxx/include/streambuf                    merge=libcxx-reformat\nlibcxx/include/string                       merge=libcxx-reformat\nlibcxx/include/string_view                  merge=libcxx-reformat\nlibcxx/include/strstream                    merge=libcxx-reformat\nlibcxx/include/syncstream                   merge=libcxx-reformat\nlibcxx/include/system_error                 merge=libcxx-reformat\nlibcxx/include/thread                       merge=libcxx-reformat\nlibcxx/include/tuple                        merge=libcxx-reformat\nlibcxx/include/type_traits                  merge=libcxx-reformat\nlibcxx/include/typeindex                    merge=libcxx-reformat\nlibcxx/include/typeinfo                     merge=libcxx-reformat\nlibcxx/include/unordered_map                merge=libcxx-reformat\nlibcxx/include/unordered_set                merge=libcxx-reformat\nlibcxx/include/utility                      merge=libcxx-reformat\nlibcxx/include/valarray                     merge=libcxx-reformat\nlibcxx/include/variant                      merge=libcxx-reformat\nlibcxx/include/vector                       merge=libcxx-reformat\nlibcxx/include/version                      merge=libcxx-reformat\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.21,
          "content": "#==============================================================================#\n# This file specifies intentionally untracked files that git should ignore.\n# See: http://www.kernel.org/pub/software/scm/git/docs/gitignore.html\n#\n# This file is intentionally different from the output of `git svn show-ignore`,\n# as most of those are useless.\n#==============================================================================#\n\n#==============================================================================#\n# File extensions to be ignored anywhere in the tree.\n#==============================================================================#\n# Temp files created by most text editors.\n*~\n# Merge files created by git.\n*.orig\n# Reject files created by patch.\n*.rej\n# Byte compiled python modules.\n*.pyc\n# vim swap files\n.*.sw?\n.sw?\n#OS X specific files.\n.DS_store\n\n# Ignore the user specified CMake presets in subproject directories.\n/*/CMakeUserPresets.json\n\n# Nested build directory\n/build*\n\n#==============================================================================#\n# Explicit files to ignore (only matches one).\n#==============================================================================#\n# Various tag programs\n/tags\n/TAGS\n/GPATH\n/GRTAGS\n/GSYMS\n/GTAGS\n/ID\n.gitusers\nautom4te.cache\ncscope.files\ncscope.out\nautoconf/aclocal.m4\nautoconf/autom4te.cache\n/compile_commands.json\n# Visual Studio built-in CMake configuration\n/CMakeSettings.json\n# CLion project configuration\n/.idea\n/cmake-build*\n\n#==============================================================================#\n# Directories to ignore (do not add trailing '/'s, they skip symlinks).\n#==============================================================================#\n# VS2017 and VSCode config files.\n.vscode\n.vs\n#zed config files\n.zed\n# pythonenv for github Codespaces\npythonenv*\n# clangd index. (\".clangd\" is a config file now, thus trailing slash)\n.clangd/\n.cache\n# static analyzer regression testing project files\n/clang/utils/analyzer/projects/*/CachedSource\n/clang/utils/analyzer/projects/*/PatchedSource\n/clang/utils/analyzer/projects/*/ScanBuildResults\n/clang/utils/analyzer/projects/*/RefScanBuildResults\n# automodapi puts generated documentation files here.\n/lldb/docs/python_api/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 2.34,
          "content": "# This file allows mapping several author and committer email addresses and\n# names to a single canonical one for `git shortlog`, `git log --author`,\n# or `git check-mailmap`.\n#\n# For example, if you commit as `random.person@example.com` but sometimes use\n# \"Rañdom Person\" and sometimes \"Random Person\" as name and you want the former\n# to be your canonical name, add\n#\n#     Rañdom Person <random.person@example.com>\n#\n# If you commit as both `random.person@example.com` and `ranp@example.com` and\n# you want the former to be your canonical email address, add\n#\n#     <random.person@example.com> <ranp@example.com>\n#\n# Combinations of both are possible too, see\n# https://git-scm.com/docs/gitmailmap for format details.\n#\n# You can commit changes for your own names and email addresses without review.\n# If you want to add entries for other people, please have them review the\n# addition.\n#\n# Please keep this file sorted.\n\n<compnerd@compnerd.org> <abdulras@fb.com>\n<compnerd@compnerd.org> <abdulras@google.com>\n<compnerd@compnerd.org> <abdulras@thebrowser.company>\n<git@xen0n.name> <xen0n@gentoo.org>\n<hans@hanshq.net> <hans@chromium.org>\n<i@maskray.me> <maskray@google.com>\n<JCTremoulet@gmail.com> <jotrem@microsoft.com>\n<min@myhsu.dev> <minyihh@uci.edu>\n<qcf@ecnelises.com> <qiucofan@cn.ibm.com> <qiucf@cn.ibm.com>\n<rnk@google.com> <reid@kleckner.net>\n<thakis@chromium.org> <nicolasweber@gmx.de>\nJianjian GUAN <jacquesguan@me.com>\nJianjian GUAN <jacquesguan@me.com> <Jianjian.Guan@streamcomputing.com>\nJon Roelofs <jonathan_roelofs@apple.com> <jonathan@codesourcery.com>\nJon Roelofs <jonathan_roelofs@apple.com> <jroelofs@jroelofs.com>\nJonathan Thackray <jonathan.thackray@arm.com> <jthackray@users.noreply.github.com>\nLLVM GN Syncbot <llvmgnsyncbot@gmail.com>\nMartin Storsjö <martin@martin.st>\nMed Ismail Bennani <ismail@bennani.ma> <m.i.b@apple.com>\nMed Ismail Bennani <ismail@bennani.ma> <medismail.bennani@gmail.com>\nRamkumar Ramachandra <r@artagnon.com> <artagnon@gmail.com>\nRamkumar Ramachandra <r@artagnon.com> <Ramkumar.Ramachandra@imgtec.com>\nSaleem Abdulrasool <compnerd@compnerd.org>\nTommy Chiang <ty1208chiang@gmail.com> <oToToT@users.noreply.github.com>\nWang Pengcheng <wangpengcheng.pp@bytedance.com>\nWang Pengcheng <wangpengcheng.pp@bytedance.com> <137158460+wangpc-pp@users.noreply.github.com>\nWang Pengcheng <wangpengcheng.pp@bytedance.com> <pc.wang@linux.alibaba.com>\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.11,
          "content": "# Code of Conduct\n\nThe LLVM Community Code of Conduct can be found at https://llvm.org/docs/CodeOfConduct.html.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.67,
          "content": "# Contributing to LLVM\n\nThank you for your interest in contributing to LLVM! There are many ways to\ncontribute, and we appreciate all contributions.\n\nTo get started with contributing, please take a look at the\n[Contributing to LLVM](https://llvm.org/docs/Contributing.html) guide. It\ndescribes how to get involved, raise issues and submit patches.\n\n## Getting in touch\n\nJoin the [LLVM Discourse forums](https://discourse.llvm.org/), [Discord\nchat](https://discord.gg/xS7Z362), or #llvm IRC channel on\n[OFTC](https://oftc.net/).\n\nThe LLVM project has adopted a [code of conduct](https://llvm.org/docs/CodeOfConduct.html) for\nparticipants to all modes of communication within the project.\n"
        },
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 14.79,
          "content": "==============================================================================\nThe LLVM Project is under the Apache License v2.0 with LLVM Exceptions:\n==============================================================================\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n    TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n    1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n    2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n    3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n    4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n    5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n    6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n    7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n    8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n    9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n    END OF TERMS AND CONDITIONS\n\n    APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n    Copyright [yyyy] [name of copyright owner]\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n---- LLVM Exceptions to the Apache 2.0 License ----\n\nAs an exception, if, as a result of your compiling your source code, portions\nof this Software are embedded into an Object form of such source code, you\nmay redistribute such embedded portions in such Object form without complying\nwith the conditions of Sections 4(a), 4(b) and 4(d) of the License.\n\nIn addition, if you combine or link compiled forms of this Software with\nsoftware that is licensed under the GPLv2 (\"Combined Software\") and if a\ncourt of competent jurisdiction determines that the patent provision (Section\n3), the indemnity provision (Section 9) or other Section of the License\nconflicts with the conditions of the GPLv2, you may retroactively and\nprospectively choose to deem waived or otherwise exclude such Section(s) of\nthe License, but only in their entirety and only with respect to the Combined\nSoftware.\n\n==============================================================================\nSoftware from third parties included in the LLVM Project:\n==============================================================================\nThe LLVM Project contains third party software which is under different license\nterms. All such code will be identified clearly using at least one of two\nmechanisms:\n1) It will be in a separate directory tree with its own `LICENSE.txt` or\n   `LICENSE` file at the top containing the specific license and restrictions\n   which apply to that software, or\n2) It will contain specific license and restriction terms at the top of every\n   file.\n\n==============================================================================\nLegacy LLVM License (https://llvm.org/docs/DeveloperPolicy.html#legacy):\n==============================================================================\nUniversity of Illinois/NCSA\nOpen Source License\n\nCopyright (c) 2003-2019 University of Illinois at Urbana-Champaign.\nAll rights reserved.\n\nDeveloped by:\n\n    LLVM Team\n\n    University of Illinois at Urbana-Champaign\n\n    http://llvm.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal with\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimers.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimers in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the names of the LLVM Team, University of Illinois at\n      Urbana-Champaign, nor the names of its contributors may be used to\n      endorse or promote products derived from this Software without specific\n      prior written permission.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.19,
          "content": "# The LLVM Compiler Infrastructure\n\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/llvm/llvm-project/badge)](https://securityscorecards.dev/viewer/?uri=github.com/llvm/llvm-project)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/8273/badge)](https://www.bestpractices.dev/projects/8273)\n[![libc++](https://github.com/llvm/llvm-project/actions/workflows/libcxx-build-and-test.yaml/badge.svg?branch=main&event=schedule)](https://github.com/llvm/llvm-project/actions/workflows/libcxx-build-and-test.yaml?query=event%3Aschedule)\n\nWelcome to the LLVM project!\n\nThis repository contains the source code for LLVM, a toolkit for the\nconstruction of highly optimized compilers, optimizers, and run-time\nenvironments.\n\nThe LLVM project has multiple components. The core of the project is\nitself called \"LLVM\". This contains all of the tools, libraries, and header\nfiles needed to process intermediate representations and convert them into\nobject files. Tools include an assembler, disassembler, bitcode analyzer, and\nbitcode optimizer.\n\nC-like languages use the [Clang](https://clang.llvm.org/) frontend. This\ncomponent compiles C, C++, Objective-C, and Objective-C++ code into LLVM bitcode\n-- and from there into object files, using LLVM.\n\nOther components include:\nthe [libc++ C++ standard library](https://libcxx.llvm.org),\nthe [LLD linker](https://lld.llvm.org), and more.\n\n## Getting the Source Code and Building LLVM\n\nConsult the\n[Getting Started with LLVM](https://llvm.org/docs/GettingStarted.html#getting-the-source-code-and-building-llvm)\npage for information on building and running LLVM.\n\nFor information on how to contribute to the LLVM project, please take a look at\nthe [Contributing to LLVM](https://llvm.org/docs/Contributing.html) guide.\n\n## Getting in touch\n\nJoin the [LLVM Discourse forums](https://discourse.llvm.org/), [Discord\nchat](https://discord.gg/xS7Z362),\n[LLVM Office Hours](https://llvm.org/docs/GettingInvolved.html#office-hours) or\n[Regular sync-ups](https://llvm.org/docs/GettingInvolved.html#online-sync-ups).\n\nThe LLVM project has adopted a [code of conduct](https://llvm.org/docs/CodeOfConduct.html) for\nparticipants to all modes of communication within the project.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2,
          "content": "# Reporting LLVM Security Issues\n\nTo report security issues in LLVM, please follow the steps outlined on the\n[LLVM Security Group](https://llvm.org/docs/Security.html#how-to-report-a-security-issue)\npage.\n"
        },
        {
          "name": "bolt",
          "type": "tree",
          "content": null
        },
        {
          "name": "clang-tools-extra",
          "type": "tree",
          "content": null
        },
        {
          "name": "clang",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "compiler-rt",
          "type": "tree",
          "content": null
        },
        {
          "name": "cross-project-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "flang",
          "type": "tree",
          "content": null
        },
        {
          "name": "libc",
          "type": "tree",
          "content": null
        },
        {
          "name": "libclc",
          "type": "tree",
          "content": null
        },
        {
          "name": "libcxx",
          "type": "tree",
          "content": null
        },
        {
          "name": "libcxxabi",
          "type": "tree",
          "content": null
        },
        {
          "name": "libunwind",
          "type": "tree",
          "content": null
        },
        {
          "name": "lld",
          "type": "tree",
          "content": null
        },
        {
          "name": "lldb",
          "type": "tree",
          "content": null
        },
        {
          "name": "llvm-libgcc",
          "type": "tree",
          "content": null
        },
        {
          "name": "llvm",
          "type": "tree",
          "content": null
        },
        {
          "name": "mlir",
          "type": "tree",
          "content": null
        },
        {
          "name": "offload",
          "type": "tree",
          "content": null
        },
        {
          "name": "openmp",
          "type": "tree",
          "content": null
        },
        {
          "name": "polly",
          "type": "tree",
          "content": null
        },
        {
          "name": "pstl",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.06,
          "content": "[tool.black]\nextend-exclude = '''\n(\n  third-party/\n)\n'''\n"
        },
        {
          "name": "runtimes",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}