{
  "metadata": {
    "timestamp": 1736557273408,
    "page": 153,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "strapi/strapi",
      "stars": 64580,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".commitlintrc.ts",
          "type": "blob",
          "size": 0.66,
          "content": "import type { UserConfig } from '@commitlint/types';\nimport { RuleConfigSeverity } from '@commitlint/types';\n\nconst config: UserConfig = {\n  extends: ['@commitlint/config-conventional'],\n  rules: {\n    'type-enum': [\n      RuleConfigSeverity.Error,\n      'always',\n      [\n        'chore',\n        'ci',\n        'docs',\n        'enhancement',\n        'feat',\n        'fix',\n        'release',\n        'revert',\n        'security',\n        'test',\n        'future',\n      ],\n    ],\n  },\n  ignores: [\n    (commitMessage) => {\n      // add an exception for github\n      return /^Merge branch '.*' into [a-zA-Z0-9\\/\\-_]+$/.test(commitMessage);\n    },\n  ],\n};\n\nexport default config;\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.24,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[{package.json,*.yml}]\nindent_style = space\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.5,
          "content": "# From https://github.com/Danimoth/gitattributes/blob/master/Web.gitattributes\n\n# Handle line endings automatically for files detected as text\n# and leave all files detected as binary untouched.\n* text=auto\n\n#\n# The above will handle all files NOT found below\n#\n\n#\n## These files are text and should be normalized (Convert crlf => lf)\n#\n\n# source code\n*.php text\n*.css text\n*.sass text\n*.scss text\n*.less text\n*.styl text\n*.js text eol=lf\n*.coffee text\n*.json text\n*.htm text\n*.html text\n*.xml text\n*.svg text\n*.txt text\n*.ini text\n*.inc text\n*.pl text\n*.rb text\n*.py text\n*.scm text\n*.sql text\n*.sh text\n*.bat text\n\n# templates\n*.ejs text\n*.hbt text\n*.jade text\n*.haml text\n*.hbs text\n*.dot text\n*.tmpl text\n*.phtml text\n\n# server config\n.htaccess text\n\n# git config\n.gitattributes text\n.gitignore text\n.gitconfig text\n\n# code analysis config\n.jshintrc text\n.jscsrc text\n.jshintignore text\n.csslintrc text\n\n# misc config\n*.yaml text\n*.yml text\n.editorconfig text\n\n# build config\n*.npmignore text\n*.bowerrc text\n\n# Heroku\nProcfile text\n.slugignore text\n\n# Documentation\n*.md text\nLICENSE text\nAUTHORS text\n\n\n#\n## These files are binary and should be left untouched\n#\n\n# (binary is a macro for -text -diff)\n*.png binary\n*.jpg binary\n*.jpeg binary\n*.gif binary\n*.ico binary\n*.mov binary\n*.mp4 binary\n*.mp3 binary\n*.flv binary\n*.fla binary\n*.swf binary\n*.gz binary\n*.zip binary\n*.7z binary\n*.ttf binary\n*.eot binary\n*.woff binary\n*.pyc binary\n*.pdf binary\n\n# yarn\n/.yarn/** linguist-vendored\n/.yarn/releases/* binary\n/.yarn/plugins/**/* binary"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2,
          "content": "############################\n# OS X\n############################\n\n.DS_Store\n.AppleDouble\n.LSOverride\nIcon\n.Spotlight-V100\n.Trashes\n._*\n\n############################\n# Linux\n############################\n\n*~\n\n############################\n# Windows\n############################\n\nThumbs.db\nehthumbs.db\nDesktop.ini\n$RECYCLE.BIN/\n*.cab\n*.msi\n*.msm\n*.msp\n\n############################\n# Packages\n############################\n\n*.7z\n*.csv\n*.dat\n*.dmg\n*.gz\n*.iso\n*.jar\n*.rar\n*.tar\n*.zip\n*.com\n*.class\n*.dll\n*.exe\n*.o\n*.seed\n*.so\n*.swo\n*.swp\n*.swn\n*.swm\n*.out\n*.pid\n\n############################\n# Logs and databases\n############################\n\n.tmp\n*.log\n*.sql\n!.github/workflows/db/**/*.sql\n*.sqlite\n\n############################\n# Misc.\n############################\n\n*#\n.idea\nnbproject\n.eslintcache\n\n############################\n# Node.js\n############################\n\nlib-cov\nlcov.info\npids\nlogs\nresults\nbuild\nnode_modules\n.node_history\npackage-lock.json\n**/package-lock.json\n!docs/package-lock.json\n*.heapsnapshot\n\n############################\n# Tests\n############################\n\ntest-apps\ncoverage\n\n############################\n# Builds\n############################\n\npackages/generators/app/files/public/\nschema.graphql\ndist\n.nx\n.tsbuildinfo\n.eslintcache\n\n############################\n# Example app\n############################\n\n.dev\n# *.cache\n\n############################\n# Visual Studio Code\n############################\n\n.vscode/\n!.vscode/settings.json\nfront-workspace.code-workspace\n.yarnrc\n\n############################\n# Package managers\n############################\n\n.pnp.*\n.yarn/*\n!.yarn/patches\n!.yarn/plugins\n!.yarn/releases\n!.yarn/sdks\n!.yarn/versions\nyarn-error.log\npnpm-debug.log\nnpm-debug.log\n\n############################\n# Playwright\n############################\nplaywright-report\ntest-results\n!tests/e2e/data/*.tar\ntests/e2e/.env\n!tests/cli/data/*.tar.gz\ntests/cli/.env\n\n############################\n# Strapi\n############################\nexamples/**/types/generated\n.nx/cache\n\n# Ignore yarn.lock inside templates\ntemplates/yarn.lock\n"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.02,
          "content": "save-exact=true\n"
        },
        {
          "name": ".nvmrc",
          "type": "blob",
          "size": 0,
          "content": "20\n"
        },
        {
          "name": ".nxignore",
          "type": "blob",
          "size": 0.01,
          "content": "examples/**\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.05,
          "content": "coverage\ntest-apps\ndist\nbuild\n.strapi\n/.nx/cache\n"
        },
        {
          "name": ".prettierrc.js",
          "type": "blob",
          "size": 0.16,
          "content": "module.exports = {\n  endOfLine: 'lf',\n  semi: true,\n  singleQuote: true,\n  tabWidth: 2,\n  trailingComma: 'es5',\n  printWidth: 100,\n  arrowParens: 'always',\n};\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": ".yarn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".yarnrc.yml",
          "type": "blob",
          "size": 0.12,
          "content": "defaultSemverRangePrefix: ''\n\nnodeLinker: node-modules\n\npreferInteractive: true\n\nyarnPath: .yarn/releases/yarn-4.5.0.cjs\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.34,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our community include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address, without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at hi@strapi.io. All complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of actions.\n\n**Consequence**: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including sustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 2.1, available at [https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct enforcement ladder][mozilla coc].\n\nFor answers to common questions about this code of conduct, see the FAQ at [https://www.contributor-covenant.org/faq][faq]. Translations are available at [https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[mozilla coc]: https://github.com/mozilla/diversity\n[faq]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 10.49,
          "content": "# Contribute to Strapi\n\nStrapi is an open-source project administered by [the Strapi team](https://strapi.io/about-us). We appreciate your interest and efforts to contribute to Strapi. See the [LICENSE](https://github.com/strapi/strapi/blob/main/LICENSE) licensing information. All work done is available on GitHub.\n\nWe highly appreciate your effort to contribute, but we recommend you talk to a maintainer before spending a lot of time making a pull request that may not align with the project roadmap. Whether it is from Strapi or contributors, every pull request goes through the same process.\n\n## Feature Requests\n\nFeature Requests by the community are highly encouraged. Feel free to submit a new one or upvote an existing feature request on [feedback.strapi.io](https://feedback.strapi.io/).\n\n## Request For Comments (RFC)\n\nLarger chunks of changes to Strapi that might affect many users require a thorough design phase before starting working on a PR. We will do our best to respond as soon as possible, but since we need to discuss these proposals thoroughly, please do not expect them to be merged and accepted immediately.\n\nThe Request For Comments process will help us create consensus among the core team and include as much feedback as possible from the community for these upcoming changes.\n\nA Request For Comments has to be created on the [strapi/rfcs](https://github.com/strapi/rfcs) repository.\n\n## Code of Conduct\n\nThis project, and everyone participating in it, are governed by the [Strapi Code of Conduct](CODE_OF_CONDUCT.md). By participating, you are expected to uphold it. Make sure to read the [full text](CODE_OF_CONDUCT.md) to understand which type of actions may or may not be tolerated.\n\n## Contributor License Agreement (CLA)\n\n### Individual contribution\n\nYou need to sign a Contributor License Agreement (CLA) to accept your pull request. You only need to do this once. If you submit a pull request for the first time, you can complete your CLA [here](https://cla.strapi.io/strapi/strapi), or our CLA bot will automatically ask you to sign before merging the pull request.\n\n### Company contribution\n\nIf you make contributions to our repositories on behalf of your company, we will need a Corporate Contributor License Agreement (CLA) signed. To do that, please get in touch with us at [contributions@strapi.io](mailto:contributions@strapi.io).\n\n## Documentation\n\nPull requests related to fixing documentation for the latest release should be directed towards the [documentation repository](https://github.com/strapi/documentation). Please follow the [documentation contributing guide](https://github.com/strapi/documentation/blob/main/CONTRIBUTING.md) for more information.\n\n## Bugs\n\nStrapi is using [GitHub issues](https://github.com/strapi/strapi/issues) to manage bugs. We keep a close eye on them. Before filing a new issue, try to ensure your problem does not already exist.\n\n---\n\n## Before Submitting a Pull Request\n\nThe Strapi core team will review your pull request and either merge it, request changes, or close it.\n\n## Contribution Prerequisites\n\n- You have [Node.js](https://nodejs.org/en/) at version `>= v18 and <= v22` and [Yarn](https://yarnpkg.com/en/) at v1.2.0+ installed.\n- You are familiar with [Git](https://git-scm.com).\n\n**Before submitting your pull request** make sure the following requirements are fulfilled:\n\n- Fork the repository and create your new branch from `develop`.\n- Run `yarn install` in the root of the repository.\n- Run `yarn setup` in the root of the repository.\n- If you've fixed a bug or added code that should be tested, please make sure to add tests\n- Ensure the following test suites are passing:\n  - `yarn test:unit`\n  - `yarn test:front`\n  - `yarn test:e2e --setup --concurrency=1`\n    - you **_may_** need to install Playwright browsers first: `yarn playwright install`\n- Make sure your code lints by running `yarn lint`.\n- If your contribution fixes an existing issue, please make sure to link it in your pull request.\n\n## Development Workflow\n\n### 1. Fork the [repository](https://github.com/strapi/strapi)\n\n[Go to the repository](https://github.com/strapi/strapi) and fork it using your own GitHub account.\n\n### 2. Clone your repository\n\n```bash\ngit clone git@github.com:YOUR_USERNAME/strapi.git\n```\n\n### 3. Install the dependencies\n\nGo to the root of the repository and run the setup:\n\n```bash\ncd strapi\nyarn install\nyarn setup\n\n```\n\n### 4. Start the example application\n\n```bash\ncd ./examples/getstarted\nyarn develop\n```\n\nMake sure to read the [`getstarted` application README](https://github.com/strapi/strapi/blob/main/examples/getstarted/README.md) for more details.\n\n### 5. Running the administration panel in development mode\n\nStart the administration panel server for development:\n\n```bash\ncd ./packages/core/admin\nyarn watch\n```\n\nRun the example application but watching the admin panel:\n\n```bash\ncd ./examples/getstarted\nyarn develop --watch-admin\n```\n\nBoth commands must be running at same time; now you will be able to see the admin panel changes on the application example.\n\n**Awesome! You are now able to contribute to Strapi.**\n\n### 6. Available commands\n\n- `yarn watch` starts yarn watch in all packages.\n- `yarn build` builds the `strapi-helper-plugin` (use this command when you develop in the administration panel).\n- `yarn commit` runs an interactive commit CLI to help you write a good commit message inline with our git conventions.\n- `yarn setup` installs dependencies.\n- `yarn lint` lints the codebase.\n- `yarn test:clean` removes the coverage reports.\n- `yarn test:front` runs front-end related tests.\n- `yarn test:front:watch` runs an interactive test watcher for the front-end.\n- `yarn test:unit` runs the back-end unit tests.\n- `yarn test:api` runs the api integration tests.\n- `yarn test:generate-app` generates a test application.\n- `yarn test:run-app` runs a test application.\n- `yarn test:start-app` starts the test application.\n\n---\n\n## Running the API Integration tests\n\nThe API integration tests require a Strapi app to be able to run. You can generate a \"test app\" using `yarn test:generate-app <database>`:\n\n```bash\n$ yarn test:generate-app --db=sqlite\n$ yarn test:generate-app --db=postgres\n$ yarn test:generate-app --db=mysql\n```\n\nA new app is required every time you run the API integration tests, otherwise the test suite will fail. A command is available to make this process easier: `yarn test:api`.\n\nThis command runs tests using jest behind the scenes. Options for jest can be passed to the command. (e.g. to update snapshots `yarn test:api -u`).\n\n### Changing the database\n\nBy default the script run by `test:api` generates an app that uses `sqlite` as a database. But you can run the test suites using different databases:\n\n```bash\n$ yarn test:api --db=sqlite\n$ yarn test:api --db=postgres\n$ yarn test:api --db=mysql\n```\n\n### Running the tests for the Enterprise Edition (EE)\n\nThe test suites run the tests for the Community Edition (CE) version of Strapi by default.\nIn order to run the Enterprise Edition tests you need a valid license. To specify a license, you can use the environment variable `STRAPI_LICENSE`:\n\n```bash\n$ STRAPI_LICENSE=<license> yarn test:api\n```\n\n---\n\n## Git Conventions\n\n### Commit messages\n\nWe use the following convention:\n\n```\ntype: subject\n\nbody\n```\n\nThe goal of this convention is to help us generate changelogs that can be communicated to our users.\n\n#### Type\n\nThe types are based on our GitHub label, here are a subset:\n\n- `fix` – When fixing an issue.\n- `chore` – When doing some cleanup, working on tooling, some refactoring. (usually reserved for **internal** work)\n- `doc` – When writing documentation.\n- `feat` – When working on a feature.\n\nYou can see the complete list [here](https://github.com/strapi/strapi/blob/1cb6f95889ccaad897759cfa14d2804adeaeb7ee/.commitlintrc.ts#L11).\n\n#### Subject\n\nThe subject of a commit should be a summary of what the commit is about. It should not describe what the code is doing:\n\n- `feat: what the feature is`\n- `fix: what the problem is`\n- `chore: what the PR is about`\n- `doc: what is documented`\n\nExamples:\n\n- `feat: introduce document service`\n- `fix: unable to publish documents due to missing permissions`\n- `chore: refactor data-fetching in EditView to use react-query`\n- `doc: document service API reference`\n\n> ⚠️ For a `fix` commit the message should explain what the commit is fixing. Not what the solution is.\n\n---\n\n## Miscellaneous\n\n### Repository Organization\n\nWe chose to use a monorepo design using [Yarn Workspaces](https://yarnpkg.com/en/docs/workspaces) in the way [React](https://github.com/facebook/react/tree/master/packages) or [Babel](https://github.com/babel/babel/tree/master/packages) does. This allows us to maintain the whole ecosystem keep it up-to-date and consistent.\n\nWe do our best to keep the develop branch as clean as possible, with tests passing at all times. However, the develop branch can move faster than the release cycle. Therefore check the [releases on npm](https://www.npmjs.com/package/@strapi/strapi) so that you are always up-to-date with the latest stable version.\n\n### Reporting an issue\n\nBefore submitting an issue you need to make sure:\n\n- You are experiencing a technical issue with Strapi.\n- You have already searched for related [issues](https://github.com/strapi/strapi/issues) and found none open (if you found a related _closed_ issue, please link to it from your post).\n- You are not asking a question about how to use Strapi or about whether Strapi has a certain feature. For general help using Strapi, you may:\n  - Refer to the [official Strapi documentation](https://docs.strapi.io).\n  - Ask a member of the community in the [Strapi Discord Community](https://discord.strapi.io/).\n  - Ask a question on the [Strapi community forum](https://forum.strapi.io).\n- Your issue title is concise, on-topic, and polite.\n- You provide steps to reproduce the issue.\n- You have tried all the following (if relevant), and your issue remains:\n  - Make sure you have the right application started.\n  - Make sure the [issue template] is respected.\n  - Make sure your issue body is readable and [well formatted](https://guides.github.com/features/mastering-markdown).\n  - Make sure you've stopped the Strapi server with CTRL+C and restarted it.\n  - Make sure your application has a clean `node_modules` directory, meaning:\n    - you didn't link any dependencies (e.g., by running `yarn link`)\n    - you haven't made any inline changes to files in the `node_modules` directory\n    - you don't have any global dependency loops. If you aren't sure, the easiest way to double-check any of the above is to run: `$ rm -rf node_modules && yarn cache clean && yarn install && yarn setup`.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 2.37,
          "content": "Copyright (c) 2015-present Strapi Solutions SAS\n \nPortions of the Strapi software are licensed as follows:\n \n* If you are accessing or using any component of the software that resides under an \"ee/\" directory, then you are deemed to be using our “Enterprise Edition” of the software and you understand and agree that the software is not licensed under the \"MIT Expat\" license as set forth below but instead, all the software you access is licensed under the license defined in \"strapi/packages/core/admin/ee/LICENSE\" and located at https://github.com/strapi/strapi/blob/a76b557047e9ef1c168dbf1b6cf879bcc3022de6/packages/core/admin/ee/LICENSE, unless (a) you or the company you represent has signed an alternative agreement referencing this code, then such signed agreement applies or (b) you are using the software in connection with a subscription to our cloud offering, then the terms of the agreement relevant to the cloud offering which you have assented to apply and the software licenses included in that agreement shall apply.\n \n* If (a) you are not accessing or using the software that resides under an “ee/” directory and therefore you are only accessing or using our “Community Edition” of the Software and (b) you have no registered account on our cloud offering, then we are providing you the software under the \"MIT Expat\" license as set forth below.\n \nMIT Expat License\n \nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n \nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n \nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.13,
          "content": "<p align=\"center\">\n  <a href=\"https://strapi.io/#gh-light-mode-only\">\n    <img src=\"https://strapi.io/assets/strapi-logo-dark.svg\" width=\"318px\" alt=\"Strapi logo\" />\n  </a>\n  <a href=\"https://strapi.io/#gh-dark-mode-only\">\n    <img src=\"https://strapi.io/assets/strapi-logo-light.svg\" width=\"318px\" alt=\"Strapi logo\" />\n  </a>\n</p>\n\n<h3 align=\"center\">Open-source headless CMS, self-hosted or Cloud you’re in control.</h3>\n<p align=\"center\">The leading open-source headless CMS, 100% JavaScript/TypeScript, flexible and fully customizable.</p>\n<p align=\"center\"><a href=\"https://cloud.strapi.io/signups?source=github1\">Cloud</a> · <a href=\"https://strapi.io/demo?utm_campaign=Growth-Experiments&utm_source=strapi%2Fstrapi%20README.md\">Try live demo</a></p>\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.org/package/@strapi/strapi\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/strapi/latest.svg\" alt=\"NPM Version\" />\n  </a>\n  <a href=\"https://github.com/strapi/strapi/actions/workflows/tests.yml\">\n    <img src=\"https://github.com/strapi/strapi/actions/workflows/tests.yml/badge.svg?branch=main\" alt=\"Tests\" />\n  </a>\n  <a href=\"https://discord.strapi.io\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?label=Discord\" alt=\"Strapi on Discord\" />\n  </a>\n  <a href=\"https://github.com/strapi/strapi/actions/workflows/nightly.yml\">\n    <img src=\"https://github.com/strapi/strapi/actions/workflows/nightly.yml/badge.svg\" alt=\"Strapi Nightly Release Build Status\" />\n  </a>\n</p>\n\n<br>\n\n<p align=\"center\">\n  <a href=\"https://strapi.io\">\n    <img src=\"https://raw.githubusercontent.com/strapi/strapi/main/public/assets/admin-demo.gif\" alt=\"Administration panel\" />\n  </a>\n</p>\n\n<br>\n\nStrapi Community Edition is a free and open-source headless CMS enabling you to manage any content, anywhere.\n\n- **Self-hosted or Cloud**: You can host and scale Strapi projects the way you want. You can save time by deploying to [Strapi Cloud](https://cloud.strapi.io/signups?source=github1) or deploy to the hosting platform you want\\*\\*: AWS, Azure, Google Cloud, DigitalOcean.\n- **Modern Admin Panel**: Elegant, entirely customizable and a fully extensible admin panel.\n- **Multi-database support**: You can choose the database you prefer: PostgreSQL, MySQL, MariaDB, and SQLite.\n- **Customizable**: You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.\n- **Blazing Fast and Robust**: Built on top of Node.js and TypeScript, Strapi delivers reliable and solid performance.\n- **Front-end Agnostic**: Use any front-end framework (React, Next.js, Vue, Angular, etc.), mobile apps or even IoT.\n- **Secure by default**: Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.\n- **Powerful CLI**: Scaffold projects and APIs on the fly.\n\n## Getting Started\n\n<a href=\"https://docs.strapi.io/developer-docs/latest/getting-started/quick-start.html\" target=\"_blank\">Read the Getting Started tutorial</a> or follow the steps below:\n\n### ⏳ Installation\n\nInstall Strapi with this **Quickstart** command to create a Strapi project instantly:\n\n- (Use **yarn** to install the Strapi project (recommended). [Install yarn with these docs](https://yarnpkg.com/lang/en/docs/install/).)\n\n```bash\nyarn create strapi\n```\n\n**or**\n\n- (Using npx to install the Strapi project.)\n\n```bash\nnpx create-strapi@latest\n```\n\nThis command generates a brand new project with the default features (authentication, permissions, content management, content type builder & file upload).\n\nEnjoy 🎉\n\n### 🖐 Requirements\n\nComplete installation requirements can be found in the documentation under <a href=\"https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/deployment.html\">Installation Requirements</a>.\n\n**Supported operating systems**:\n\n| OS              | Recommended | Minimum    |\n| --------------- | ----------- | ---------- |\n| Ubuntu          | 24.04       | LTS        |\n| Debian          | 11          | LTS        |\n| RHEL            | 9           | LTS        |\n| macOS           | 14          | 12         |\n| Windows Desktop | 11          | 10         |\n| Windows Server  | No Support  | No Support |\n| Docker          | N/A         | N/A        |\n\n(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)\n\n**Node:**\n\nStrapi only supports maintenance and LTS versions of Node.js. Please refer to the <a href=\"https://nodejs.org/en/about/releases/\">Node.js release schedule</a> for more information. NPM versions installed by default with Node.js are supported. Generally it's recommended to use yarn over npm where possible.\n\n| Strapi Version  | Recommended | Minimum |\n| --------------- | ----------- | ------- |\n| 5.0.0 and up    | 20.x        | 18.x    |\n| 4.14.5 and up   | 20.x        | 18.x    |\n| 4.11.0 and up   | 18.x        | 16.x    |\n| 4.3.9 to 4.10.x | 18.x        | 14.x    |\n| 4.0.x to 4.3.8  | 16.x        | 14.x    |\n\n**Database:**\n\n| Database   | Recommended | Minimum |\n| ---------- | ----------- | ------- |\n| MySQL      | 8.0         | 8.0     |\n| MariaDB    | 11.2        | 10.3    |\n| PostgreSQL | 16.0        | 14.0    |\n| SQLite     | 3           | 3       |\n\n**We recommend always using the latest version of Strapi stable to start your new projects**.\n\n## Features\n\n- **Content Types Builder**: Build the most flexible publishing experience for your content managers, by giving them the freedom to create any page on the go with [fields](https://docs.strapi.io/user-docs/content-manager/writing-content#filling-up-fields), components and [Dynamic Zones](https://docs.strapi.io/user-docs/content-manager/writing-content#dynamic-zones).\n- **Media Library**: Upload your images, videos, audio or documents to the media library. Easily find the right asset, edit and reuse it.\n- **Internationalization**: The Internationalization (i18n) plugin allows Strapi users to create, manage and distribute localized content in different languages, called \"locales\"\n- **Role Based Access Control**: Create an unlimited number of custom roles and permissions for admin and end users.\n- **GraphQL or REST**: Consume the API using REST or GraphQL\n\nYou can unlock additional features such as SSO, Audit Logs, Review Workflows in [Strapi Cloud](https://cloud.strapi.io/login?source=github1) or [Strapi Enterprise](https://strapi.io/enterprise?source=github1).\n\n**[See more on our website](https://strapi.io/overview)**.\n\n## Contributing\n\nPlease read our [Contributing Guide](./CONTRIBUTING.md) before submitting a Pull Request to the project.\n\n## Community support\n\nFor general help using Strapi, please refer to [the official Strapi documentation](https://docs.strapi.io). For additional help, you can use one of these channels to ask a question:\n\n- [Discord](https://discord.strapi.io) (For live discussion with the Community and Strapi team)\n- [GitHub](https://github.com/strapi/strapi) (Bug reports, Contributions)\n- [Community Forum](https://forum.strapi.io) (Questions and Discussions)\n- [Feedback section](https://feedback.strapi.io) (Roadmap, Feature requests)\n- [Twitter](https://twitter.com/strapijs) (Get the news fast)\n- [Facebook](https://www.facebook.com/Strapi-616063331867161)\n- [YouTube Channel](https://www.youtube.com/strapi) (Learn from Video Tutorials)\n\n## Migration\n\nFollow our [migration guides](https://docs.strapi.io/developer-docs/latest/update-migration-guides/migration-guides.html) on the documentation to keep your projects up-to-date.\n\n## Roadmap\n\nCheck out our [roadmap](https://feedback.strapi.io) to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.\n\n## Documentation\n\nSee our dedicated [repository](https://github.com/strapi/documentation) for the Strapi documentation, or view our documentation live:\n\n- [Developer docs](https://docs.strapi.io/developer-docs/latest/getting-started/introduction.html)\n- [User guide](https://docs.strapi.io/user-docs/latest/getting-started/introduction.html)\n- [Cloud guide](https://docs.strapi.io/cloud/intro)\n\n## Try live demo\n\nSee for yourself what's under the hood by getting access to a [hosted Strapi project](https://strapi.io/demo) with sample data.\n\n## License\n\nSee the [LICENSE](./LICENSE) file for licensing information.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 5.05,
          "content": "# Security Policy\n\n## Supported Versions\n\nAs of September 2024 (and until this document is updated), only the v4.x.x and v5.x.x _GA_ or _STABLE_ releases of Strapi are supported for updates and bug fixes. Any previous versions are currently not supported and users are advised to use them \"at their own risk\".\n\n**Note**: The v4.x.x LTS version will only receive high/critical severity fixes until April 2026. Any Medium/Low severity issues will not be fixed unless specific exceptions are made.\n\n| Version | Release Tag | Support Starts | Support Ends   | Security Updates Until | Notes                          |\n| ------- | ----------- | -------------- | -------------- | ---------------------- | ------------------------------ |\n| 5.x.x   | GA / Stable | September 2024 | Further Notice | Further Notice         | LTS                            |\n| 5.x.x   | RC          | N/A            | September 2024 | N/A                    | Not Supported                  |\n| 5.x.x   | Beta        | N/A            | N/A            | N/A                    | Not Supported                  |\n| 5.x.x   | Alpha       | N/A            | N/A            | N/A                    | Not Supported                  |\n| 4.x.x   | GA / Stable | November 2021  | October 2025   | April 2026             | LTS (High/Critical fixes only) |\n| 4.x.x   | Beta        | N/A            | N/A            | N/A                    | Not Supported                  |\n| 4.x.x   | Alpha       | N/A            | N/A            | N/A                    | Not Supported                  |\n| 3.x.x   | N/A         | N/A            | N/A            | N/A                    | End Of Life                    |\n\n## Reporting a Vulnerability\n\nPlease report (suspected) security vulnerabilities via GitHub's security advisory reporting system:\nSubmit your vulnerability via [this link](https://github.com/strapi/strapi/security/advisories/new)\n\n**Strapi does not currently and has no plans to offer any bug bounties, swag, or any other reward for reporting vulnerabilities.**\n\nDuring our public disclosure, we can give credit to the reporter and link to any social accounts you wish to have us add, including linking to your own blog post detailing the vulnerability.\n\nPlease note the following requirements (all are required):\n\n- Summary of the suspected vulnerability\n- Detailed information as to what the suspected vulnerability does and what it has access to\n- Proof of Concept (Code samples at minimum, reproduction video optional)\n  - POC must include how the vulnerability can actually access sensitive data, simply triggering an alert popup in a browser is not a security vulnerability\n- Impact summary (who does this impact and how)\n\nOptionally you may also add your estimated CVSS 3.1 score, though we may adjust. There is no need to submit a CVE request as we will do that as part of the advisory process.\n\nYou will receive a response from us within 72 hours. If the issue is confirmed, we will release a patch as soon as possible depending on complexity but historically within a few days.\n\nPlease note that we follow a very strict internal and public disclosure policy, typically a patch will be issued and included in a release. We then will place a warning that a security vulnerability has been patched and delay detailed disclosure from 2 to 8 weeks depending on the severity of the issue. If you have any resources such as blog posts that you intend to publish on and would like us to include these in our disclosure please advise us ASAP.\n\nBefore doing any public disclosure we do ask that you speak to us first to ensure we are not releasing too much information before a patch is available and time has been given to users to upgrade their projects.\n\n## Security Process Summary\n\nBelow is a breakdown of our security process in order to set expectations:\n\n- Initial submission of vulnerability via GitHub's Advisory system\n- Begin internal tracking and communication to reporter\n- Internal validation of vulnerability\n- Internal notification and scheduling for patch development\n- Begin development of patch\n- Validation of patch (Internal and with the reporter)\n- GitHub advisory cleanup\n- Requesting of CVE via GitHub\n- Disclosure and communication draft\n- Patch released with initial warning via patch notes\n- Email communication to Strapi Enterprise customers\n- Mandatory waiting period (between 2 to 8 weeks)\n- Publishing GitHub Advisory & CVE\n- Public disclosure (via blog post)\n- Email communication to Strapi Enterprise customers\n\n## Other reporting platforms and bounties\n\nStrapi does not support other reporting platforms, all security vulnerabilities must be made via GitHub Advisory system. If you are unable to report via this method you may open a security ticket with us by emailing security@strapi.io and we will create one on your behalf but if you do not have a GitHub user account we will not be able to share the private fork, pull request, or any other information with you during the process.\n\nList of some (though not all) platforms **we do not support**:\n\n- huntr.dev\n- Direct email or communication to Strapi employees (Discord, Slack, or Email)\n- Stack Overflow\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.1,
          "content": "comment:\n  branches:\n    - main\n\ngithub_checks:\n  annotations: false\n\nignore:\n  - '**/*.md'\n  - '**/*.mdx'\n"
        },
        {
          "name": "docker-compose.dev.yml",
          "type": "blob",
          "size": 0.57,
          "content": "version: '3'\n\nservices:\n  postgres:\n    image: postgres\n    restart: always\n    volumes:\n      - pgdata:/var/lib/postgresql/data\n    environment:\n      POSTGRES_USER: strapi\n      POSTGRES_PASSWORD: strapi\n      POSTGRES_DB: strapi\n    ports:\n      - '5432:5432'\n\n  mysql:\n    image: mysql:8\n    restart: always\n    environment:\n      MYSQL_DATABASE: strapi\n      MYSQL_USER: strapi\n      MYSQL_PASSWORD: strapi\n      MYSQL_ROOT_HOST: '%'\n      MYSQL_ROOT_PASSWORD: strapi\n    volumes:\n      - mysqldata:/var/lib/mysql\n    ports:\n      - '3306:3306'\n\nvolumes:\n  pgdata:\n  mysqldata:\n"
        },
        {
          "name": "docker-compose.test.yml",
          "type": "blob",
          "size": 0.6,
          "content": "version: '3'\n\nservices:\n  postgres:\n    image: postgres\n    restart: always\n    volumes:\n      - pgdata_test:/var/lib/postgresql/data\n    environment:\n      POSTGRES_USER: strapi\n      POSTGRES_PASSWORD: strapi\n      POSTGRES_DB: strapi_test\n    ports:\n      - '5432:5432'\n\n  mysql:\n    image: mysql:8\n    restart: always\n    environment:\n      MYSQL_DATABASE: strapi_test\n      MYSQL_USER: strapi\n      MYSQL_PASSWORD: strapi\n      MYSQL_ROOT_HOST: '%'\n      MYSQL_ROOT_PASSWORD: strapi\n    volumes:\n      - mysqldata_test:/var/lib/mysql\n    ports:\n      - '3306:3306'\n\nvolumes:\n  pgdata_test:\n  mysqldata_test:\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fileTransformer.js",
          "type": "blob",
          "size": 0.16,
          "content": "const path = require('path');\n\nmodule.exports = {\n  process(src, filename) {\n    return 'module.exports = ' + JSON.stringify(path.basename(filename)) + ';';\n  },\n};\n"
        },
        {
          "name": "jest-preset.front.js",
          "type": "blob",
          "size": 2.83,
          "content": "'use strict';\n\nconst path = require('path');\n\nconst moduleNameMapper = {\n  '.*\\\\.(css|less|styl|scss|sass)$': '@strapi/admin-test-utils/file-mock',\n  '.*\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga|ico)$':\n    '@strapi/admin-test-utils/file-mock',\n  /**\n   * we're mapping the following packages to the monorepos node_modules\n   * so if you link a package e.g. `design-system` the correct dependencies\n   * are used and the tests run correctly.\n   **/\n  '^react$': path.join(__dirname, 'node_modules/react'),\n  '^react-dom$': path.join(__dirname, 'node_modules/react-dom'),\n  '^react-router-dom$': path.join(__dirname, 'node_modules/react-router-dom'),\n  '^styled-components$': path.join(__dirname, 'node_modules/styled-components'),\n};\n\n/**\n * @type {import('jest').Config}\n */\nmodule.exports = {\n  rootDir: __dirname,\n  moduleNameMapper,\n  /* Tells jest to ignore duplicated manual mock files, such as index.js */\n  modulePathIgnorePatterns: ['.*__mocks__.*'],\n  testPathIgnorePatterns: ['node_modules/', 'dist/'],\n  globalSetup: '@strapi/admin-test-utils/global-setup',\n  setupFiles: ['@strapi/admin-test-utils/setup'],\n  setupFilesAfterEnv: ['@strapi/admin-test-utils/after-env'],\n  testEnvironment: '@strapi/admin-test-utils/environment',\n  prettierPath: require.resolve('prettier-2'),\n  transform: {\n    '^.+\\\\.js(x)?$': [\n      '@swc/jest',\n      {\n        jsc: {\n          parser: {\n            jsx: true,\n            dynamicImport: true,\n          },\n          // this should match the minimum supported node.js version\n          target: 'es2020',\n        },\n      },\n    ],\n    '\\\\.ts$': [\n      '@swc/jest',\n      {\n        jsc: {\n          parser: {\n            syntax: 'typescript',\n          },\n        },\n      },\n    ],\n    '\\\\.tsx$': [\n      '@swc/jest',\n      {\n        jsc: {\n          parser: {\n            syntax: 'typescript',\n            tsx: true,\n          },\n          transform: {\n            react: {\n              runtime: 'automatic',\n            },\n          },\n        },\n      },\n    ],\n    '\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$':\n      path.join(__dirname, 'fileTransformer.js'),\n  },\n  transformIgnorePatterns: [\n    'node_modules/(?!(react-dnd|dnd-core|react-dnd-html5-backend|@react-dnd|fractional-indexing)/)',\n  ],\n  testMatch: ['**/tests/**/?(*.)+(spec|test).[jt]s?(x)'],\n  testEnvironmentOptions: {\n    url: 'http://localhost:1337/admin',\n  },\n  // Use `jest-watch-typeahead` version 0.6.5. Newest version 1.0.0 does not support jest@26\n  // Reference: https://github.com/jest-community/jest-watch-typeahead/releases/tag/v1.0.0\n  watchPlugins: ['jest-watch-typeahead/filename', 'jest-watch-typeahead/testname'],\n\n  // NOTE: this doesn't work with projects due to a jest bug, so we also set it\n  // using jest.setTimeout() in the after-env script\n  testTimeout: 60 * 1000,\n};\n"
        },
        {
          "name": "jest-preset.unit.js",
          "type": "blob",
          "size": 0.71,
          "content": "'use strict';\n\nmodule.exports = {\n  setupFilesAfterEnv: [__dirname + '/tests/setup/unit.setup.js'],\n  modulePathIgnorePatterns: ['.cache', 'dist'],\n  testPathIgnorePatterns: [\n    '.testdata.{js,ts}',\n    '.test.utils.{js,ts}',\n    '.d.ts',\n    '__tests__/resources',\n    'tests/resources',\n  ],\n  prettierPath: require.resolve('prettier-2'),\n  testMatch: ['**/__tests__/**/*.{js,ts,jsx,tsx}'],\n  transform: {\n    '^.+\\\\.(t|j)sx?$': ['@swc/jest'],\n  },\n  // Use `jest-watch-typeahead` version 0.6.5. Newest version 1.0.0 does not support jest@26\n  // Reference: https://github.com/jest-community/jest-watch-typeahead/releases/tag/v1.0.0\n  watchPlugins: ['jest-watch-typeahead/filename', 'jest-watch-typeahead/testname'],\n};\n"
        },
        {
          "name": "jest.config.api.js",
          "type": "blob",
          "size": 0.44,
          "content": "'use strict';\n\nmodule.exports = {\n  displayName: 'API integration tests',\n  testMatch: ['**/?(*.)+(spec|test).api.(js|ts)'],\n  testEnvironment: 'node',\n  setupFilesAfterEnv: ['<rootDir>/tests/setup/jest-api.setup.js'],\n  coveragePathIgnorePatterns: [\n    '<rootDir>/dist/',\n    '<rootDir>/node_modules/',\n    '<rootDir>/out-tsc/',\n    '<rootDir>/test/',\n  ],\n  transform: {\n    '^.+\\\\.ts$': ['@swc/jest'],\n  },\n  modulePathIgnorePatterns: ['.cache'],\n};\n"
        },
        {
          "name": "jest.config.cli.js",
          "type": "blob",
          "size": 0.44,
          "content": "'use strict';\n\nmodule.exports = {\n  displayName: 'CLI tests',\n  testMatch: ['**/?(*.)+(spec|test).cli.(js|ts)'],\n  testEnvironment: 'node',\n  setupFilesAfterEnv: ['<rootDir>/../../../../tests/setup/jest-cli.setup.js'],\n  coveragePathIgnorePatterns: [\n    '<rootDir>/dist/',\n    '<rootDir>/node_modules/',\n    '<rootDir>/out-tsc/',\n    '<rootDir>/test/',\n  ],\n  transform: {\n    '^.+\\\\.ts$': ['@swc/jest'],\n  },\n  modulePathIgnorePatterns: ['.cache'],\n};\n"
        },
        {
          "name": "jest.config.front.js",
          "type": "blob",
          "size": 0.27,
          "content": "'use strict';\n\n/** @type {import('jest').Config} */\nconst config = {\n  projects: [\n    '<rootDir>/packages/plugins/*/jest.config.front.js',\n    '<rootDir>/packages/core/*/jest.config.front.js',\n    '<rootDir>/scripts/*/jest.config.front.js',\n  ],\n};\n\nmodule.exports = config;\n"
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 0.41,
          "content": "'use strict';\n\n/** @type {import('jest').Config} */\nconst config = {\n  projects: [\n    '<rootDir>/packages/plugins/*/jest.config.js',\n    '<rootDir>/packages/utils/*/jest.config.js',\n    '<rootDir>/packages/generators/*/jest.config.js',\n    '<rootDir>/packages/core/*/jest.config.js',\n    '<rootDir>/packages/providers/*/jest.config.js',\n    '<rootDir>/.github/actions/*/jest.config.js',\n  ],\n};\n\nmodule.exports = config;\n"
        },
        {
          "name": "jsconfig.json",
          "type": "blob",
          "size": 0.34,
          "content": "{\n  \"compilerOptions\": {\n    \"rootDir\": \".\",\n    \"module\": \"commonjs\",\n    \"target\": \"es6\"\n  },\n  \"exclude\": [\n    \"**/node_modules/*\",\n    \".git\",\n    \".npm\",\n    \"**/.cache/*\",\n    \"**/.tmp/*\",\n    \"**/dist/*\",\n    \"**/build/*\",\n    \"**/*.test.js\",\n    \"**/*.test.api.js\",\n    \"**/examples/getstarted/*\",\n    \"**/examples/kitchensink/*\"\n  ]\n}\n"
        },
        {
          "name": "lerna.json",
          "type": "blob",
          "size": 0.05,
          "content": "{\n  \"version\": \"5.7.0\",\n  \"npmClient\": \"yarn\"\n}\n"
        },
        {
          "name": "lint-staged.config.js",
          "type": "blob",
          "size": 1.13,
          "content": "'use strict';\n\nconst path = require('path');\nconst fs = require('fs');\nconst findUp = require('find-up');\n\nconst includes = ['packages', '.github'];\n\nconst root = path.resolve(__dirname);\n\nfunction extractPackageName(pkgJsonPath) {\n  return JSON.parse(fs.readFileSync(pkgJsonPath).toString()).name;\n}\n\nfunction getLintCommand(files) {\n  const affectedFolders = new Set();\n\n  for (const file of files) {\n    const r = findUp.sync('package.json', { cwd: file });\n    const relPath = path.relative(root, r);\n\n    if (includes.some((incl) => relPath.startsWith(incl))) {\n      affectedFolders.add(r);\n    }\n  }\n\n  const affectedPackages = [...affectedFolders].map(extractPackageName);\n\n  if (affectedPackages.length === 0) {\n    return null;\n  }\n  return `nx run-many -t lint -p ${affectedPackages.join()}`;\n}\n\nfunction getCodeCommands(files) {\n  const lintCmd = getLintCommand(files);\n\n  const prettierCmd = `prettier --write ${files.join(' ')}`;\n\n  if (lintCmd) {\n    return [lintCmd, prettierCmd];\n  }\n\n  return [prettierCmd];\n}\n\nmodule.exports = {\n  '*.{js,ts,jsx,tsx,json}': getCodeCommands,\n  '*.{md,mdx,css,scss,yaml,yml}': ['prettier --write'],\n};\n"
        },
        {
          "name": "nx.json",
          "type": "blob",
          "size": 2.38,
          "content": "{\n  \"namedInputs\": {\n    \"default\": [\"{projectRoot}/**/*\"],\n    \"production\": [\n      \"default\",\n      \"!{projectRoot}/**/*.test.ts\",\n      \"!{projectRoot}/**/*.test.js\",\n      \"!{projectRoot}/**/*.test.api.js\",\n      \"!{projectRoot}/**/__mocks__/**\",\n      \"!{projectRoot}/**/__tests__/**\",\n      \"!{projectRoot}/**/*.md\",\n      \"!{projectRoot}/jest.config.js\",\n      \"!{projectRoot}/jest.config.front.js\",\n      \"!{projectRoot}/tsconfig.eslint.json\",\n      \"!{projectRoot}/.eslintignore\",\n      \"!{projectRoot}/.eslintrc.js\"\n    ]\n  },\n  \"cli\": {\n    \"packageManager\": \"yarn\"\n  },\n  \"targetDefaults\": {\n    \"build\": {\n      \"inputs\": [\"production\", \"^production\"],\n      \"dependsOn\": [\"^build\"],\n      \"cache\": true\n    },\n    \"test:unit\": {\n      \"inputs\": [\"default\", \"{workspaceRoot}/jest-preset.unit.js\"],\n      \"cache\": true\n    },\n    \"test:front\": {\n      \"inputs\": [\"default\", \"{workspaceRoot}/jest-preset.front.js\"],\n      \"cache\": true\n    },\n    \"lint\": {\n      \"inputs\": [\n        \"{projectRoot}/**/*.js\",\n        \"{projectRoot}/**/*.ts\",\n        \"{projectRoot}/.eslintrc.js\",\n        \"{projectRoot}/.eslintignore\",\n        \"{projectRoot}/tsconfig.eslint.json\",\n        \"{workspaceRoot}/packages/utils/eslint-config-custom/**/*\"\n      ],\n      \"cache\": true\n    }\n  },\n  \"useInferencePlugins\": false,\n  \"pluginsConfig\": {\n    \"@nx/js\": {\n      \"analyzeSourceFiles\": false\n    }\n  },\n  \"release\": {\n    \"projects\": [\"packages/**/*\"],\n    \"changelog\": {\n      \"workspaceChangelog\": {\n        \"file\": false,\n        \"createRelease\": \"github\"\n      }\n    },\n    \"version\": {\n      \"conventionalCommits\": false\n    },\n    \"git\": {\n      \"commitMessage\": \"release: {version}\"\n    },\n    \"conventionalCommits\": {\n      \"types\": {\n        \"docs\": {\n          \"changelog\": {\n            \"title\": \"📚 Documentation Changes\"\n          }\n        },\n        \"enhancement\": {\n          \"changelog\": {\n            \"title\": \"💅 Enhancement\"\n          }\n        },\n        \"feat\": {\n          \"changelog\": {\n            \"title\": \"🚀 New feature\"\n          }\n        },\n        \"fix\": {\n          \"changelog\": {\n            \"title\": \"🔥 Bug fix\"\n          }\n        },\n        \"security\": {\n          \"semverBump\": \"patch\",\n          \"changelog\": {\n            \"title\": \"🚨 Security\"\n          }\n        },\n        \"chore\": {\n          \"changelog\": {\n            \"title\": \"⚙️ Chore\"\n          }\n        }\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 6.23,
          "content": "{\n  \"name\": \"strapi\",\n  \"private\": true,\n  \"bugs\": {\n    \"url\": \"https://github.com/strapi/strapi/issues\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/strapi/strapi.git\"\n  },\n  \"license\": \"SEE LICENSE IN LICENSE\",\n  \"author\": {\n    \"name\": \"Strapi Solutions SAS\",\n    \"email\": \"hi@strapi.io\",\n    \"url\": \"https://strapi.io\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"Strapi Solutions SAS\",\n      \"email\": \"hi@strapi.io\",\n      \"url\": \"https://strapi.io\"\n    }\n  ],\n  \"workspaces\": [\n    \"packages/*\",\n    \"packages/*/*\",\n    \"examples/*\",\n    \"examples/plugins/*\",\n    \"examples/*/src/plugins/*\",\n    \".github/actions/*\",\n    \"scripts/*\"\n  ],\n  \"scripts\": {\n    \"build\": \"nx run-many --target=build --nx-ignore-cycles\",\n    \"build:size\": \"cd examples/getstarted && yarn build\",\n    \"build:ts\": \"nx run-many --target=build:ts --nx-ignore-cycles\",\n    \"build:watch\": \"nx watch --all --nx-ignore-cycles -- nx run \\\\$NX_PROJECT_NAME:build --nx-ignore-cycles\",\n    \"clean\": \"nx run-many --target=clean --nx-ignore-cycles\",\n    \"commit\": \"commit\",\n    \"doc:api\": \"node scripts/open-api/serve.js\",\n    \"format\": \"yarn format:code && yarn format:other\",\n    \"format:code\": \"yarn prettier:code --write\",\n    \"format:other\": \"yarn prettier:other --write\",\n    \"lint\": \"nx run-many --target=lint --nx-ignore-cycles && yarn lint:other\",\n    \"lint:fix\": \"nx run-many --target=lint --nx-ignore-cycles -- --fix\",\n    \"lint:other\": \"npm run prettier:other -- --check\",\n    \"prepare\": \"husky install\",\n    \"prettier:check\": \"yarn prettier:code --check && yarn prettier:other --check\",\n    \"prettier:code\": \"prettier --cache --cache-strategy content \\\"**/*.{js,ts,jsx,tsx,json}\\\"\",\n    \"prettier:other\": \"prettier --cache --cache-strategy content \\\"**/*.{md,mdx,css,scss,yaml,yml}\\\"\",\n    \"prettier:write\": \"prettier --write \\\"**/*.{js,ts,jsx,tsx,json,md,mdx,css,scss,yaml,yml}\\\"\",\n    \"release\": \"nx release\",\n    \"setup\": \"yarn && yarn clean && yarn build --skip-nx-cache\",\n    \"test:api\": \"node tests/scripts/run-api-tests.js\",\n    \"test:api:clean\": \"rimraf ./coverage\",\n    \"test:clean\": \"yarn test:api:clean ; yarn test:e2e:clean ; yarn test:cli:clean\",\n    \"test:cli\": \"node tests/scripts/run-cli-tests.js\",\n    \"test:cli:clean\": \"node tests/scripts/run-cli-tests.js clean\",\n    \"test:cli:debug\": \"node tests/scripts/run-cli-tests.js --debug\",\n    \"test:e2e\": \"node tests/scripts/run-e2e-tests.js\",\n    \"test:e2e:clean\": \"node tests/scripts/run-e2e-tests.js clean\",\n    \"test:front\": \"cross-env IS_EE=true jest --config jest.config.front.js --runInBand\",\n    \"test:front:all\": \"cross-env IS_EE=true nx run-many --target=test:front --nx-ignore-cycles\",\n    \"test:front:all:ce\": \"cross-env IS_EE=false nx run-many --target=test:front:ce --nx-ignore-cycles\",\n    \"test:front:ce\": \"cross-env IS_EE=false run test:front\",\n    \"test:front:update\": \"run test:front -u\",\n    \"test:front:update:ce\": \"yarn test:front:ce -u\",\n    \"test:front:watch\": \"cross-env IS_EE=true run test:front --watch\",\n    \"test:front:watch:ce\": \"cross-env IS_EE=false run test:front --watch\",\n    \"test:generate-app\": \"yarn build:ts && node tests/scripts/generate-test-app.js\",\n    \"test:generate-app:no-build\": \"node tests/scripts/generate-test-app.js\",\n    \"test:ts\": \"yarn test:ts:packages && yarn test:ts:front && yarn test:ts:back\",\n    \"test:ts:back\": \"nx run-many --target=test:ts:back --nx-ignore-cycles\",\n    \"test:ts:front\": \"nx run-many --target=test:ts:front --nx-ignore-cycles\",\n    \"test:ts:packages\": \"nx run-many --target=test:ts --nx-ignore-cycles\",\n    \"test:unit\": \"jest --config jest.config.js\",\n    \"test:unit:update\": \"jest --config jest.config.js -u\",\n    \"test:unit:all\": \"nx run-many --target=test:unit --nx-ignore-cycles\",\n    \"test:unit:watch\": \"run test:unit --watch\"\n  },\n  \"resolutions\": {\n    \"@types/koa\": \"2.13.4\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.20.12\",\n    \"@babel/eslint-parser\": \"^7.25.1\",\n    \"@babel/preset-react\": \"7.18.6\",\n    \"@commitlint/cli\": \"19.2.0\",\n    \"@commitlint/config-conventional\": \"19.1.0\",\n    \"@commitlint/prompt-cli\": \"19.2.0\",\n    \"@nx/js\": \"20.1.0\",\n    \"@playwright/test\": \"1.48.2\",\n    \"@strapi/admin-test-utils\": \"workspace:*\",\n    \"@strapi/eslint-config\": \"0.2.0\",\n    \"@swc-node/register\": \"~1.9.1\",\n    \"@swc/cli\": \"0.3.10\",\n    \"@swc/core\": \"1.4.8\",\n    \"@swc/helpers\": \"0.5.7\",\n    \"@swc/jest\": \"0.2.36\",\n    \"@types/fs-extra\": \"11.0.4\",\n    \"@types/git-url-parse\": \"9.0.3\",\n    \"@types/prompts\": \"2.4.9\",\n    \"@types/react\": \"18.3.2\",\n    \"@types/react-dom\": \"18.3.0\",\n    \"@typescript-eslint/eslint-plugin\": \"6.7.3\",\n    \"@typescript-eslint/parser\": \"6.7.3\",\n    \"chalk\": \"4.1.2\",\n    \"chokidar\": \"3.6.0\",\n    \"coffee\": \"5.5.1\",\n    \"core-js\": \"3.36.0\",\n    \"create-strapi-app\": \"workspace:*\",\n    \"cross-env\": \"7.0.3\",\n    \"dotenv\": \"16.4.5\",\n    \"eslint\": \"8.50.0\",\n    \"eslint-config-airbnb\": \"^19.0.4\",\n    \"eslint-config-airbnb-base\": \"^15.0.0\",\n    \"eslint-config-airbnb-typescript\": \"^17.1.0\",\n    \"eslint-config-prettier\": \"^9.1.0\",\n    \"eslint-import-resolver-typescript\": \"3.6.1\",\n    \"eslint-plugin-check-file\": \"2.6.2\",\n    \"eslint-plugin-import\": \"^2.28.1\",\n    \"eslint-plugin-jest-dom\": \"5.1.0\",\n    \"eslint-plugin-jsx-a11y\": \"^6.7.1\",\n    \"eslint-plugin-node\": \"^11.1.0\",\n    \"eslint-plugin-prettier\": \"^5.1.3\",\n    \"eslint-plugin-react\": \"^7.33.2\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"eslint-plugin-rxjs\": \"5.0.3\",\n    \"eslint-plugin-testing-library\": \"6.0.2\",\n    \"execa\": \"5.1.1\",\n    \"find-up\": \"5.0.0\",\n    \"fs-extra\": \"11.2.0\",\n    \"get-port\": \"5.1.1\",\n    \"glob\": \"10.3.10\",\n    \"husky\": \"8.0.3\",\n    \"inquirer\": \"8.2.5\",\n    \"jest\": \"29.6.0\",\n    \"jest-circus\": \"29.6.0\",\n    \"jest-cli\": \"29.6.0\",\n    \"jest-environment-jsdom\": \"29.6.1\",\n    \"jest-watch-typeahead\": \"2.2.2\",\n    \"lerna\": \"8.1.2\",\n    \"lint-staged\": \"15.2.10\",\n    \"lodash\": \"4.17.21\",\n    \"nx\": \"20.1.0\",\n    \"plop\": \"4.0.1\",\n    \"prettier\": \"3.3.3\",\n    \"prettier-2\": \"npm:prettier@^2\",\n    \"qs\": \"6.11.1\",\n    \"rimraf\": \"5.0.5\",\n    \"semver\": \"7.5.4\",\n    \"stream-chain\": \"2.2.5\",\n    \"stream-json\": \"1.8.0\",\n    \"supertest\": \"6.3.3\",\n    \"tar\": \"6.2.1\",\n    \"ts-jest\": \"29.1.0\",\n    \"typescript\": \"5.3.2\",\n    \"yalc\": \"1.0.0-pre.53\",\n    \"yargs\": \"17.7.2\"\n  },\n  \"packageManager\": \"yarn@4.5.0\",\n  \"engines\": {\n    \"node\": \">=18.0.0 <=22.x.x\",\n    \"npm\": \">=6.0.0\"\n  },\n  \"isStrapiMonorepo\": true\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "playwright.base.config.js",
          "type": "blob",
          "size": 3.66,
          "content": "// @ts-check\nconst path = require('path');\nconst { devices } = require('@playwright/test');\nconst { parseType } = require('@strapi/utils');\n\nconst getEnvNum = (envVar, defaultValue) => {\n  if (envVar !== undefined && envVar !== null) {\n    return Number(envVar);\n  }\n  return defaultValue;\n};\n\nconst getEnvString = (envVar, defaultValue) => {\n  if (envVar?.trim().length) {\n    return envVar;\n  }\n\n  return defaultValue;\n};\n\nconst getEnvBool = (envVar, defaultValue) => {\n  if (!envVar || envVar === '') {\n    return defaultValue;\n  }\n\n  return parseType({ type: 'boolean', value: envVar.toLowerCase() });\n};\n\n/**\n * @typedef ConfigOptions\n * @type {{ port: number; testDir: string; appDir: string }}\n */\n\n/**\n * @see https://playwright.dev/docs/test-configuration\n * @type {(options: ConfigOptions) => import('@playwright/test').PlaywrightTestConfig}\n */\nconst createConfig = ({ port, testDir, appDir }) => ({\n  testDir,\n\n  /* default timeout for a jest test */\n  timeout: getEnvNum(process.env.PLAYWRIGHT_TIMEOUT, 90 * 1000),\n\n  expect: {\n    /**\n     * Maximum time expect() should wait for the condition to be met.\n     * For example in `await expect(locator).toHaveText();`\n     */\n    timeout: getEnvNum(process.env.PLAYWRIGHT_EXPECT_TIMEOUT, 10 * 1000),\n  },\n  /* Run tests in files in parallel */\n  fullyParallel: false,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 3 : 1,\n  /* Opt out of parallel tests on CI. */\n  workers: 1,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: [\n    ['html'],\n    // Junit reporter for Trunk flaky test CI upload\n    [\n      'junit',\n      {\n        outputFile: path.join(\n          getEnvString(process.env.PLAYWRIGHT_OUTPUT_DIR, '../test-results/'),\n          'junit.xml'\n        ),\n      },\n    ],\n  ],\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    baseURL: `http://127.0.0.1:${port}`,\n\n    /** Set timezone for consistency across any machine*/\n    timezoneId: 'Europe/Paris',\n\n    /* Default time each action such as `click()` can take */\n    actionTimeout: getEnvNum(process.env.PLAYWRIGHT_ACTION_TIMEOUT, 10 * 1000),\n    // Only record trace when retrying a test to optimize test performance\n    trace: 'on-first-retry',\n    video: getEnvBool(process.env.PLAYWRIGHT_VIDEO, false)\n      ? {\n          mode: 'on-first-retry', // Only save videos when retrying a test\n          size: {\n            width: 1280,\n            height: 720,\n          },\n        }\n      : 'off',\n  },\n\n  /* Configure projects for major browsers */\n  projects: [\n    {\n      name: 'chromium',\n      use: {\n        ...devices['Desktop Chrome'],\n      },\n    },\n\n    {\n      name: 'firefox',\n      use: {\n        ...devices['Desktop Firefox'],\n      },\n    },\n\n    {\n      name: 'webkit',\n      use: {\n        ...devices['Desktop Safari'],\n      },\n    },\n  ],\n\n  /* Folder for test artifacts such as screenshots, videos, traces, etc.\n   * Must be outside the project itself or develop mode will restart when files are written\n   * */\n  outputDir: getEnvString(process.env.PLAYWRIGHT_OUTPUT_DIR, '../test-results/'),\n\n  /* Run your local dev server before starting the tests */\n  webServer: {\n    command: `cd ${appDir} && npm run develop -- --no-watch-admin`,\n    url: `http://127.0.0.1:${port}`,\n    /* default Strapi server startup timeout to 160s */\n    timeout: getEnvNum(process.env.PLAYWRIGHT_WEBSERVER_TIMEOUT, 160 * 1000),\n    reuseExistingServer: true,\n    stdout: 'pipe',\n  },\n});\n\nmodule.exports = { createConfig };\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vercel.json",
          "type": "blob",
          "size": 0.07,
          "content": "{\n  \"github\": {\n    \"silent\": true,\n    \"autoJobCancelation\": true\n  }\n}\n"
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 1130.35,
          "content": null
        }
      ]
    }
  ]
}