{
  "metadata": {
    "timestamp": 1736710948838,
    "page": 604,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Sergio0694/PolySharp",
      "stars": 1871,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 15.7919921875,
          "content": "# Remove the line below if you want to inherit .editorconfig settings from higher directories\nroot = true\n\n# All files\n[*]\n\n#### Core EditorConfig Options ####\n\n# Encoding\ncharset = utf-8\n\n# Indentation and spacing\ntab_width = 4\nindent_size = 4\nindent_style = space\n\n# New line preferences\ninsert_final_newline = false\ntrim_trailing_whitespace = true\n\n#### Build files ####\n\n# Solution files\n[*.{sln,slnx}]\ntab_width = 4\nindent_size = 4\nindent_style = tab\n\n# Configuration files\n[*.{json,xml,yml,config,runsettings}]\nindent_size = 2\n\n# MSBuild files\n[*.{slnf,props,targets,projitems,csproj,shproj}]\nindent_size = 2\n\n#### Source files ####\n\n# Markdown files\n[*.md]\nindent_size = 2\ninsert_final_newline = true\n\n# XAML files\n[*.xaml]\nindent_size = 4\n\n# C# files\n[*.cs]\n\n#### .NET Coding Conventions ####\n\n# this. and Me. preferences\ndotnet_style_qualification_for_event = false:warning\ndotnet_style_qualification_for_field = true:warning\ndotnet_style_qualification_for_method = false:warning\ndotnet_style_qualification_for_property = false:warning\n\n# Language keywords vs BCL types preferences\ndotnet_style_predefined_type_for_locals_parameters_members = true:warning\ndotnet_style_predefined_type_for_member_access = true:warning\n\n# Parentheses preferences\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning\n\n# Modifier preferences (set to silent until https://github.com/dotnet/roslyn/issues/52904 is resolved)\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:silent\n\n# Code block preferences\ndotnet_style_allow_multiple_blank_lines_experimental = false:warning\ndotnet_style_allow_statement_immediately_after_block_experimental = false:warning\n\n# Expression-level preferences\ncsharp_style_deconstructed_variable_declaration = true:suggestion\ncsharp_style_inlined_variable_declaration = true:warning\ncsharp_style_throw_expression = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_prefer_auto_properties = true:silent\ndotnet_style_prefer_conditional_expression_over_assignment = true:silent\ndotnet_style_prefer_conditional_expression_over_return = true:silent\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_inferred_tuple_names = true:warning\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning\ncsharp_style_implicit_object_creation_when_type_is_apparent = true:warning\n\n# Field preferences\ndotnet_style_readonly_field = true:warning\n\n#### C# Coding Conventions ####\n\n# var preferences\ncsharp_style_var_elsewhere = false:warning\ncsharp_style_var_for_built_in_types = false:warning\ncsharp_style_var_when_type_is_apparent = false:warning\n\n# Expression-bodied members\ncsharp_style_expression_bodied_accessors = when_on_single_line:warning\ncsharp_style_expression_bodied_constructors = false:warning\ncsharp_style_expression_bodied_indexers = when_on_single_line:warning\ncsharp_style_expression_bodied_lambdas = when_on_single_line:warning\ncsharp_style_expression_bodied_methods = false:warning\ncsharp_style_expression_bodied_operators = when_on_single_line:warning\ncsharp_style_expression_bodied_properties = when_on_single_line:warning\n\n# Pattern matching preferences\ncsharp_style_prefer_pattern_matching = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\n\n# Null-checking preferences\ncsharp_style_conditional_delegate_call = true:suggestion\n\n# Modifier preferences\ncsharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async\n\n# Code-block preferences\ncsharp_prefer_braces = true:suggestion\ncsharp_using_directive_placement = outside_namespace:warning\ncsharp_style_namespace_declarations = file_scoped:warning\ncsharp_style_unused_value_assignment_preference = discard_variable:warning\ncsharp_style_unused_value_expression_statement_preference = discard_variable:warning\ncsharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:warning\n\n# Expression-level preferences\ncsharp_prefer_simple_default_expression = true:suggestion\ncsharp_prefer_static_local_function = true:warning\ncsharp_style_pattern_local_over_anonymous_function = true:warning\n\n#### C# Formatting Rules ####\n\n# New line preferences\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_else = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_between_query_expression_clauses = true\n\n# Indentation preferences\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents = true\ncsharp_indent_case_contents_when_block = false\ncsharp_indent_labels = no_change\ncsharp_indent_switch_labels = true\n\n# Space preferences\ncsharp_space_after_cast = false\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_around_declaration_statements = false\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_between_square_brackets = false\n\n# Wrapping preferences\ncsharp_preserve_single_line_blocks = true\ncsharp_preserve_single_line_statements = true\n\n# Naming Symbols\n\n# constant_fields - Define constant fields\ndotnet_naming_symbols.constant_fields.applicable_accessibilities                  = *\ndotnet_naming_symbols.constant_fields.applicable_kinds                            = field\ndotnet_naming_symbols.constant_fields.required_modifiers                          = const\n# static_readonly_fields - Define all static readonly fields\ndotnet_naming_symbols.static_readonly_fields.applicable_accessibilities           = *\ndotnet_naming_symbols.static_readonly_fields.applicable_kinds                     = field\ndotnet_naming_symbols.static_readonly_fields.required_modifiers                   = static, readonly\n# non_private_fields - Define all fields that are not private\ndotnet_naming_symbols.non_private_fields.applicable_accessibilities               = public, internal, protected, protected_internal, private_protected\ndotnet_naming_symbols.non_private_fields.applicable_kinds                         = field\n# private_fields - Define all private fields\ndotnet_naming_symbols.private_fields.applicable_accessibilities                   = private\ndotnet_naming_symbols.private_fields.applicable_kinds                             = field\n# public_symbols - Define any public symbol\ndotnet_naming_symbols.public_symbols.applicable_accessibilities                   = *\ndotnet_naming_symbols.public_symbols.applicable_kinds                             = method, property, event, delegate, class, struct, enum, delegate\n# parameters - Defines any parameter\ndotnet_naming_symbols.parameters.applicable_accessibilities                       = *\ndotnet_naming_symbols.parameters.applicable_kinds                                 = parameter\n# interface_types - Defines interfaces\ndotnet_naming_symbols.interface_types.applicable_accessibilities                  = *\ndotnet_naming_symbols.interface_types.applicable_kinds                            = interface\n\n# Naming Styles\n\n# camel_case - Define the camelCase style\ndotnet_naming_style.camel_case.capitalization                                     = camel_case\n# pascal_case - Define the PascalCase style\ndotnet_naming_style.pascal_case.capitalization                                    = pascal_case\n# prefix_interface_interface_with_i - Interfaces must be PascalCase and the first character of an interface must be an 'I'\ndotnet_naming_style.prefix_interface_interface_with_i.capitalization              = pascal_case\ndotnet_naming_style.prefix_interface_interface_with_i.required_prefix             = I\n\n# Naming Rules\n\n# Async methods should have the \"Async\" suffix (disabled because it can't currently exclude async void methods)\ndotnet_naming_rule.async_methods_end_in_async.severity                            = none\ndotnet_naming_rule.async_methods_end_in_async.symbols                             = any_async_methods\ndotnet_naming_rule.async_methods_end_in_async.style                               = end_in_async\n\ndotnet_naming_symbols.any_async_methods.applicable_kinds                          = method\ndotnet_naming_symbols.any_async_methods.applicable_accessibilities                = *\ndotnet_naming_symbols.any_async_methods.required_modifiers                        = async\n\ndotnet_naming_style.end_in_async.required_suffix                                  = Async\ndotnet_naming_style.end_in_async.capitalization                                   = pascal_case\n\n# Private fields must be camelCase\ndotnet_naming_rule.private_fields_must_be_pascal_case.severity                    = warning\ndotnet_naming_rule.private_fields_must_be_pascal_case.symbols                     = private_fields\ndotnet_naming_rule.private_fields_must_be_pascal_case.style                       = camel_case\n# Constant fields must be PascalCase\ndotnet_naming_rule.constant_fields_must_be_pascal_case.severity                   = warning\ndotnet_naming_rule.constant_fields_must_be_pascal_case.symbols                    = constant_fields\ndotnet_naming_rule.constant_fields_must_be_pascal_case.style                      = pascal_case\n# Static readonly fields must be PascalCase\ndotnet_naming_rule.static_readonly_fields_must_be_pascal_case.severity            = warning\ndotnet_naming_rule.static_readonly_fields_must_be_pascal_case.symbols             = static_readonly_fields\ndotnet_naming_rule.static_readonly_fields_must_be_pascal_case.style               = pascal_case\n# Non private fields must be PascalCase\ndotnet_naming_rule.non_private_fields_must_be_pascal_case.severity                = warning\ndotnet_naming_rule.non_private_fields_must_be_pascal_case.symbols                 = non_private_fields\ndotnet_naming_rule.non_private_fields_must_be_pascal_case.style                   = pascal_case\n# Public symbols must be capitalized\ndotnet_naming_rule.public_symbols_must_be_capitalized.severity                    = warning\ndotnet_naming_rule.public_symbols_must_be_capitalized.symbols                     = public_symbols\ndotnet_naming_rule.public_symbols_must_be_capitalized.style                       = pascal_case\n# Parameters must be camelCase (ignored because some use PascalCase to match Win32 parameter names)\ndotnet_naming_rule.parameters_must_be_camel_case.severity                         = none\ndotnet_naming_rule.parameters_must_be_camel_case.symbols                          = parameters\ndotnet_naming_rule.parameters_must_be_camel_case.style                            = camel_case\n# Interfaces must be PascalCase and start with an 'I'\ndotnet_naming_rule.interface_types_must_be_prefixed_with_i.severity               = warning\ndotnet_naming_rule.interface_types_must_be_prefixed_with_i.symbols                = interface_types\ndotnet_naming_rule.interface_types_must_be_prefixed_with_i.style                  = prefix_interface_interface_with_i\n\n# .NET Code Analysis\n\ndotnet_diagnostic.CA1001.severity = warning\ndotnet_diagnostic.CA1009.severity = warning\ndotnet_diagnostic.CA1016.severity = warning\ndotnet_diagnostic.CA1033.severity = warning\ndotnet_diagnostic.CA1049.severity = warning\ndotnet_diagnostic.CA1060.severity = warning\ndotnet_diagnostic.CA1061.severity = warning\ndotnet_diagnostic.CA1063.severity = warning\ndotnet_diagnostic.CA1065.severity = warning\ndotnet_diagnostic.CA1301.severity = warning\ndotnet_diagnostic.CA1400.severity = warning\ndotnet_diagnostic.CA1401.severity = warning\ndotnet_diagnostic.CA1403.severity = warning\ndotnet_diagnostic.CA1404.severity = warning\ndotnet_diagnostic.CA1405.severity = warning\ndotnet_diagnostic.CA1410.severity = warning\ndotnet_diagnostic.CA1415.severity = warning\ndotnet_diagnostic.CA1821.severity = warning\ndotnet_diagnostic.CA1900.severity = warning\ndotnet_diagnostic.CA1901.severity = warning\ndotnet_diagnostic.CA2002.severity = warning\ndotnet_diagnostic.CA2100.severity = warning\ndotnet_diagnostic.CA2101.severity = warning\ndotnet_diagnostic.CA2108.severity = warning\ndotnet_diagnostic.CA2111.severity = warning\ndotnet_diagnostic.CA2112.severity = warning\ndotnet_diagnostic.CA2114.severity = warning\ndotnet_diagnostic.CA2116.severity = warning\ndotnet_diagnostic.CA2117.severity = warning\ndotnet_diagnostic.CA2122.severity = warning\ndotnet_diagnostic.CA2123.severity = warning\ndotnet_diagnostic.CA2124.severity = warning\ndotnet_diagnostic.CA2126.severity = warning\ndotnet_diagnostic.CA2131.severity = warning\ndotnet_diagnostic.CA2132.severity = warning\ndotnet_diagnostic.CA2133.severity = warning\ndotnet_diagnostic.CA2134.severity = warning\ndotnet_diagnostic.CA2137.severity = warning\ndotnet_diagnostic.CA2138.severity = warning\ndotnet_diagnostic.CA2140.severity = warning\ndotnet_diagnostic.CA2141.severity = warning\ndotnet_diagnostic.CA2146.severity = warning\ndotnet_diagnostic.CA2147.severity = warning\ndotnet_diagnostic.CA2149.severity = warning\ndotnet_diagnostic.CA2200.severity = warning\ndotnet_diagnostic.CA2202.severity = warning\ndotnet_diagnostic.CA2207.severity = warning\ndotnet_diagnostic.CA2212.severity = warning\ndotnet_diagnostic.CA2213.severity = warning\ndotnet_diagnostic.CA2214.severity = warning\ndotnet_diagnostic.CA2216.severity = warning\ndotnet_diagnostic.CA2220.severity = warning\ndotnet_diagnostic.CA2229.severity = warning\ndotnet_diagnostic.CA2231.severity = warning\ndotnet_diagnostic.CA2232.severity = warning\ndotnet_diagnostic.CA2235.severity = warning\ndotnet_diagnostic.CA2236.severity = warning\ndotnet_diagnostic.CA2237.severity = warning\ndotnet_diagnostic.CA2238.severity = warning\ndotnet_diagnostic.CA2240.severity = warning\ndotnet_diagnostic.CA2241.severity = warning\ndotnet_diagnostic.CA2242.severity = warning\n\n## CodeStyle Code Analysis\n\ndotnet_diagnostic.IDE0010.severity = none\ndotnet_diagnostic.IDE0130.severity = none\ndotnet_diagnostic.IDE0060.severity = none\ndotnet_diagnostic.IDE1006.severity = none\ndotnet_diagnostic.IDE0023.severity = none\ndotnet_diagnostic.IDE0024.severity = none\ndotnet_diagnostic.IDE0060.severity = none\ndotnet_diagnostic.IDE0057.severity = none\ndotnet_diagnostic.IDE0046.severity = none\ndotnet_diagnostic.IDE0072.severity = none\ndotnet_diagnostic.IDE0064.severity = none\ndotnet_diagnostic.IDE0160.severity = none\ndotnet_diagnostic.IDE0040.severity = none\ndotnet_diagnostic.IDE0045.severity = none\ndotnet_diagnostic.IDE0032.severity = none\ndotnet_diagnostic.IDE0056.severity = none\ndotnet_diagnostic.IDE0032.severity = none\ndotnet_diagnostic.IDE0042.severity = none\ndotnet_diagnostic.IDE0180.severity = none\ndotnet_diagnostic.IDE0061.severity = none\ndotnet_diagnostic.IDE0078.severity = none\ndotnet_diagnostic.IDE0066.severity = none"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.80078125,
          "content": "# Set default file-type attributes\n\n# All file types\n* text=auto\n\n# Markups\n*.md   text=auto diff=markdown\n*.mdx  text=auto diff=markdown\n\n# Solutions\n*.sln   text=auto eol=crlf\n*.slnx  text=auto\n\n# Projects\n*.*proj    text=auto\n*.tasks    text=auto\n*.props    text=auto\n*.targets  text=auto\n\n# Sources\n*.cs    text=auto diff=csharp\n*.csx   text=auto diff=csharp\n*.fs    text=auto diff=fsharp\n*.resx  text=auto\n\n# Scripts\n*.in   text eol=lf\n*.sh   text eol=lf\n*.bat  text eol=crlf\n*.cmd  text eol=crlf\n\n# Images\n*.png  binary\n*.jpg  binary\n*.gif  binary\n\n# Keys\n*.snk  binary\n*.pfx  binary\n*.cer  binary\n\n# Others\n\n# Preserve Line endings in diff and patch files\n*.diff   -text\n*.patch  -text\n\n# Exclude git meta files from exporting\n.gitattributes export-ignore\n.gitignore     export-ignore\n.gitkeep       export-ignore"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.626953125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# App tokens\n**/ServiceTokens/\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Include the bundled libraries\n!**/Libraries/x64/\n!**/Libraries/arm64/\n\n# Debug view types\n!**/Resources/Debug\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk \n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output \nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder \n.mfractor/\n\n# Sample images\nsamples/**/city_*.jpg\n\n# XML docs files\nsrc/**/PolySharp*.xml"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 4.689453125,
          "content": "<Project>\n  <PropertyGroup>\n    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\n    <LangVersion>13.0</LangVersion>\n    <Nullable>enable</Nullable>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n\n    <!--\n      Enable the latest warning wave, which shows additional warnings for invalid language features that are disabled by default.\n      For additional info, see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/warning-waves.\n    -->\n    <AnalysisLevel>7</AnalysisLevel>\n\n    <!-- Import the global configs from the CodeStyle package (enables all IDExxxx warnings)-->\n    <AnalysisLevelStyle>7-all</AnalysisLevelStyle>\n\n    <!-- Enforce all code style rules during build (this replaces referencing Microsoft.CodeAnalysis.CSharp.CodeStyle) -->\n    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>\n\n    <!--\n      Enable the compiler strict mode (see https://www.meziantou.net/csharp-compiler-strict-mode.htm).\n      This (poorly documented) mode enables additional warnings for incorrect usages of some features.\n      For instance, this will warn when using the == operator to compare a struct with a null literal.\n    -->\n    <Features>strict</Features>\n  </PropertyGroup>\n\n  <!-- Centralized location for all generated artifacts -->\n  <PropertyGroup>\n    <PackageOutputPath>$(MSBuildThisFileDirectory)artifacts/</PackageOutputPath>\n  </PropertyGroup>\n\n  <!--\n    The target version being built (this is referenced by all build steps).\n    This version will set the package version prefix and the assembly version.\n    As such, this needs to be changed before a new release as well.\n  -->\n  <PropertyGroup>\n    <PolySharpPackageVersion>1.0.0</PolySharpPackageVersion>\n    <IsCommitOnReleaseBranch>false</IsCommitOnReleaseBranch>\n  </PropertyGroup>\n\n  <!--\n    Check if the current push is for a release build for NuGet, as that will create a package with a hardcoded version.\n    A release build is one that originates from a push to a branch with the format 'rel/<BUILD_VERSION>(.<SUFFIX>)?'.\n  -->\n  <PropertyGroup>\n    <ReleaseVersionParsingRegex>^rel/(\\d{1,4}\\.\\d{1,4}\\.\\d{1,4})(?:-(\\w+(?:\\.\\w+)?))?$</ReleaseVersionParsingRegex>\n    <IsBranchNameStartingWithRefPrefix>$([System.Text.RegularExpressions.Regex]::IsMatch($(GITHUB_REF_NAME), $(ReleaseVersionParsingRegex)))</IsBranchNameStartingWithRefPrefix>\n  </PropertyGroup>\n\n  <!-- If the current branch and action match a release for NuGet, override the relative build properties -->\n  <PropertyGroup Condition=\"'$(GITHUB_EVENT_NAME)' == 'push' AND '$(GITHUB_REF_NAME)' != '' AND '$(IsBranchNameStartingWithRefPrefix)' == 'true'\">\n    <IsCommitOnReleaseBranch>true</IsCommitOnReleaseBranch>\n    <PolySharpPackageVersionFromReleaseBranch>$([System.Text.RegularExpressions.Regex]::Match($(GITHUB_REF_NAME), $(ReleaseVersionParsingRegex)).Groups[1].Value)</PolySharpPackageVersionFromReleaseBranch>\n    <PolySharpPackageVersionSuffixFromReleaseBranch>$([System.Text.RegularExpressions.Regex]::Match($(GITHUB_REF_NAME), $(ReleaseVersionParsingRegex)).Groups[2].Value)</PolySharpPackageVersionSuffixFromReleaseBranch>\n    <PolySharpPackageVersion>$(PolySharpPackageVersionFromReleaseBranch)</PolySharpPackageVersion>\n    <VersionSuffix>$(PolySharpPackageVersionSuffixFromReleaseBranch)</VersionSuffix>\n  </PropertyGroup>\n\n  <!-- Configure the assembly version and suffix for both normal CI builds and release builds -->\n  <PropertyGroup>\n    <AssemblyVersion>$(PolySharpPackageVersion).0</AssemblyVersion>\n    <VersionPrefix>$(PolySharpPackageVersion)</VersionPrefix>\n    <VersionSuffix Condition=\"'$(EXCLUDE_SUFFIX_FROM_VERSION)' != 'true' AND '$(IsCommitOnReleaseBranch)' != 'true'\">alpha</VersionSuffix>\n    <VersionSuffix Condition=\"'$(GITHUB_EVENT_NAME)' == 'pull_request' AND '$(IsCommitOnReleaseBranch)' != 'true'\">pr</VersionSuffix>\n  </PropertyGroup>\n\n  <!-- Shared attribution and configuration properties -->\n  <PropertyGroup>\n    <ContinuousIntegrationBuild Condition=\"'$(GITHUB_RUN_ID)' != ''\">true</ContinuousIntegrationBuild>\n    <RepositoryUrl>https://github.com/Sergio0694/PolySharp/</RepositoryUrl>\n    <RepositoryType>git</RepositoryType>\n    <PublishRepositoryUrl>true</PublishRepositoryUrl>\n    <ProjectUrl>https://github.com/Sergio0694/PolySharp/</ProjectUrl>\n    <Authors>Sergio Pedri</Authors>\n    <Owners>Sergio Pedri</Owners>\n    <Company>Sergio Pedri</Company>\n    <Copyright>Copyright (c) 2023 Sergio Pedri</Copyright>\n    <GenerateDocumentationFile>true</GenerateDocumentationFile>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"DotNet.ReproducibleBuilds\" Version=\"1.2.25\" PrivateAssets=\"all\" />\n  </ItemGroup>\n\n  <!-- Needed for deterministic builds -->\n  <ItemGroup>\n    <SourceRoot Include=\"$(MSBuildThisFileDirectory)/\"/>\n  </ItemGroup>\n</Project>"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 2.181640625,
          "content": "<Project>\n\n  <!--\n    Directory.Build.targets is automatically picked up and imported by\n    Microsoft.Common.targets. This file needs to exist, even if empty so that\n    files in the parent directory tree, with the same name, are not imported\n    instead. The import fairly late and most other props/targets will have been\n    imported beforehand. We also don't need to add ourselves to\n    MSBuildAllProjects, as that is done by the file that imports us.\n  -->\n\n  <!--\n    Manually set the version if null. This is copied from Microsoft.NET.DefaultAssemblyInfo.targets and is needed\n    for cases where that target is not being automatically imported (which happens because MSBuild is used instead\n    of dotnet build for some cases, due to the solution having some UWP and WinUI 3 projects, and non SDK-style too).\n    The lines setting the prefix have been omitted, as that is already handled in the root .props file.\n  -->\n  <PropertyGroup Condition=\"'$(Version)' == ''\">\n    <Version Condition=\"'$(VersionSuffix)' != ''\">$(VersionPrefix)-$(VersionSuffix)</Version>\n    <Version Condition=\"'$(Version)' == ''\">$(VersionPrefix)</Version>\n  </PropertyGroup>\n\n  <!-- Set the base package version (this applies to all build types) -->\n  <PropertyGroup>\n    <PackageVersion>$(Version)</PackageVersion>\n  </PropertyGroup>\n\n  <!-- Settings that are only set for CI builds -->\n  <PropertyGroup Condition=\"'$(GITHUB_RUN_ID)' != ''\">\n    <PackageVersion Condition=\"'$(EXCLUDE_RUN_ID_FROM_PACKAGE)' != 'true' AND '$(IsCommitOnReleaseBranch)' != true\">$(Version).$(GITHUB_RUN_ID)</PackageVersion>\n    <PackageVersion Condition=\"'$(GITHUB_SHA)' != ''\">$(PackageVersion)+$(GITHUB_SHA)</PackageVersion>\n  </PropertyGroup>\n\n  <!-- Import all .tt files with their generated .g.cs files (the T4 service is imported in the .props file) -->\n  <ItemGroup>\n    <None Update=\"**\\*.tt\">\n      <LastGenOutput>%(Filename).g.cs</LastGenOutput>\n      <Generator>TextTemplatingFileGenerator</Generator>\n    </None>\n    <Compile Update=\"**\\*.g.cs\">\n      <DependentUpon>$([System.IO.Path]::GetFileNameWithoutExtension('%(Filename)')).tt</DependentUpon>\n      <DesignTime>True</DesignTime>\n      <AutoGen>True</AutoGen>\n    </Compile>\n  </ItemGroup>\n</Project>"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2022 Sergio Pedri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "PolySharp.sln",
          "type": "blob",
          "size": 5.2177734375,
          "content": "﻿Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.3.32922.545\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"PolySharp.SourceGenerators\", \"src\\PolySharp.SourceGenerators\\PolySharp.SourceGenerators.csproj\", \"{DF3A95B8-20FE-44E7-AE9F-E546565DB80A}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Projects\", \"Projects\", \"{8DAA0C71-4529-44EB-8994-DE331A3ADC52}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tsrc\\PolySharp.Package\\icon.png = src\\PolySharp.Package\\icon.png\n\t\tsrc\\PolySharp.Package\\PolySharp.Package.msbuildproj = src\\PolySharp.Package\\PolySharp.Package.msbuildproj\n\t\tsrc\\PolySharp.Package\\README.md = src\\PolySharp.Package\\README.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Tests\", \"Tests\", \"{D65D0307-1D0F-499D-945B-E33E71F251A4}\"\n\tProjectSection(SolutionItems) = preProject\n\t\ttests\\PolySharp.NuGet\\PolySharp.NuGet.csproj = tests\\PolySharp.NuGet\\PolySharp.NuGet.csproj\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"PolySharp.Tests\", \"tests\\PolySharp.Tests\\PolySharp.Tests.csproj\", \"{41EC2F2E-797F-486A-8E2E-1788C7CF0DF3}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"_SolutionItems\", \"_SolutionItems\", \"{C0C25293-DF18-48E5-BCE9-499CB6D66BB6}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\t.gitattributes = .gitattributes\n\t\t.gitignore = .gitignore\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tDirectory.Build.targets = Directory.Build.targets\n\t\tLICENSE = LICENSE\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{D78D3FFF-DB82-41B3-951F-40C7ED8F8F07}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tsrc\\Directory.Build.props = src\\Directory.Build.props\n\t\tsrc\\Directory.Build.targets = src\\Directory.Build.targets\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"PolySharp.MinimumCSharpVersion.Tests\", \"tests\\PolySharp.MinimumCSharpVersion.Tests\\PolySharp.MinimumCSharpVersion.Tests.csproj\", \"{B9459D6D-247C-435D-9642-D6A933ECEECC}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"PolySharp.PolySharpUseTypeAliasForUnmanagedCallersOnlyAttribute.Tests\", \"tests\\PolySharp.PolySharpUseTypeAliasForUnmanagedCallersOnlyAttribute.Tests\\PolySharp.PolySharpUseTypeAliasForUnmanagedCallersOnlyAttribute.Tests.csproj\", \"{C865CEDE-2DC9-4E1E-BB58-529E6E2A9DBB}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"PolySharp.TypeForwards.Tests\", \"tests\\PolySharp.TypeForwards.Tests\\PolySharp.TypeForwards.Tests.csproj\", \"{AAF3B574-66F1-4EF0-936A-82390E30D539}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{DF3A95B8-20FE-44E7-AE9F-E546565DB80A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{DF3A95B8-20FE-44E7-AE9F-E546565DB80A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{DF3A95B8-20FE-44E7-AE9F-E546565DB80A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{DF3A95B8-20FE-44E7-AE9F-E546565DB80A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{41EC2F2E-797F-486A-8E2E-1788C7CF0DF3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{41EC2F2E-797F-486A-8E2E-1788C7CF0DF3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{41EC2F2E-797F-486A-8E2E-1788C7CF0DF3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{41EC2F2E-797F-486A-8E2E-1788C7CF0DF3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{B9459D6D-247C-435D-9642-D6A933ECEECC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{B9459D6D-247C-435D-9642-D6A933ECEECC}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{B9459D6D-247C-435D-9642-D6A933ECEECC}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{B9459D6D-247C-435D-9642-D6A933ECEECC}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C865CEDE-2DC9-4E1E-BB58-529E6E2A9DBB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C865CEDE-2DC9-4E1E-BB58-529E6E2A9DBB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C865CEDE-2DC9-4E1E-BB58-529E6E2A9DBB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C865CEDE-2DC9-4E1E-BB58-529E6E2A9DBB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{AAF3B574-66F1-4EF0-936A-82390E30D539}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AAF3B574-66F1-4EF0-936A-82390E30D539}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AAF3B574-66F1-4EF0-936A-82390E30D539}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{AAF3B574-66F1-4EF0-936A-82390E30D539}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{41EC2F2E-797F-486A-8E2E-1788C7CF0DF3} = {D65D0307-1D0F-499D-945B-E33E71F251A4}\n\t\t{D78D3FFF-DB82-41B3-951F-40C7ED8F8F07} = {C0C25293-DF18-48E5-BCE9-499CB6D66BB6}\n\t\t{B9459D6D-247C-435D-9642-D6A933ECEECC} = {D65D0307-1D0F-499D-945B-E33E71F251A4}\n\t\t{C865CEDE-2DC9-4E1E-BB58-529E6E2A9DBB} = {D65D0307-1D0F-499D-945B-E33E71F251A4}\n\t\t{AAF3B574-66F1-4EF0-936A-82390E30D539} = {D65D0307-1D0F-499D-945B-E33E71F251A4}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {F946EBAA-2D9B-4599-B4A2-7ECD81E0DF61}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.5,
          "content": "![image](https://user-images.githubusercontent.com/10199417/197341200-3810e13c-9104-4911-90fc-b8add0862458.png)\n<br/>\n[![.NET](https://github.com/Sergio0694/PolySharp/workflows/.NET/badge.svg)](https://github.com/Sergio0694/PolySharp/actions) [![NuGet](https://img.shields.io/nuget/dt/PolySharp.svg)](https://www.nuget.org/stats/packages/PolySharp?groupby=Version) [![NuGet](https://img.shields.io/nuget/vpre/PolySharp.svg)](https://www.nuget.org/packages/PolySharp/)\n\n# What is it? 🚀\n\n**PolySharp** provides generated, source-only polyfills for C# language features, to easily use all runtime-agnostic features downlevel. The package is distributed as a source generator, so that it will automatically detect which polyfills are needed depending on the target framework and project in use: just add a reference to **PolySharp**, set your C# language version to latest, and have fun!\n\n# TLDR? What is this for? ✨\n\nPut simply: are you working on .NET Framework, or UWP, or some other older .NET runtime and still would like to use all the cool new features that C# 13 has? Well this library lets you do just that! It will generate for you all the \"magic types\" that the C# compiler needs to \"see\" in order for it to allow using new language features even if you're not using the latest framework out there.\n\nHere's an example of some of the new features that **PolySharp** can enable downlevel:\n\n![image](https://user-images.githubusercontent.com/10199417/198630498-df1e215c-6788-4aef-8ba5-b0b71772233e.png)\n\n> **Note**: not all the new C# features can be \"tricked\" this way (eg. those requiring runtime support, such as [static abstract members](https://learn.microsoft.com/dotnet/csharp/whats-new/tutorials/static-virtual-interface-members), still won't work). But almost everything else will (eg. nullability annotations, pattern matching, etc.), and this applies to a big number of new C# features. Try **PolySharp** out, don't get stuck on C# 6.0 or other older versions! 🎉\n\n> **Note**: use on .NET Framework 3.5 is particularly limited due to shortcomings of the BCL there. In particular, the `System.Range` type will not be generated unless `System.ValueTuple` is referenced (meaning that eg. list patterns won't work by default), and some features such as records will not be usable at all due to the C# compiler missing some necessary APIs that cannot be polyfilled. All other features should work as expected.\n\n# Documentation 📖\n\n**PolySharp** includes the following polyfills:\n- Nullability attributes (for [nullable reference types](https://learn.microsoft.com/dotnet/csharp/nullable-references)):\n  - `[AllowNull]`\n  - `[DisallowNull]`\n  - `[DoesNotReturn]`\n  - `[DoesNotReturnIf]`\n  - `[MaybeNull]`\n  - `[MaybeNullWhen]`\n  - `[MemberNotNull]`\n  - `[MemberNotNullWhen]`\n  - `[NotNull]`\n  - `[NotNullIfNotNull]`\n  - `[NotNullWhen]`\n- `Index` and `Range` (see [indices and ranges](https://learn.microsoft.com/dotnet/csharp/whats-new/tutorials/ranges-indexes))\n- `[UnscopedRef]` (see [low-level struct improvements](https://github.com/dotnet/csharplang/blob/main/proposals/low-level-struct-improvements.md))\n- Required members (see [required modifier](https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/required))\n  - `[RequiredMember]`\n  - `[SetsRequiredMembers]`\n- `[CompilerFeatureRequired]` (needed to support several features)\n- `[IsExternalInit]` (needed for [init-only properties](https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/init))\n- `[SkipLocalsInit]` (see [docs](https://learn.microsoft.com/dotnet/csharp/language-reference/attributes/general#skiplocalsinit-attribute))\n- Interpolated string handlers (see [docs](https://learn.microsoft.com/dotnet/csharp/whats-new/tutorials/interpolated-string-handler))\n  - `[InterpolatedStringHandler]`\n  - `[InterpolatedStringHandlerArgument]`\n- `[CallerArgumentExpression]` (see [docs](https://learn.microsoft.com/dotnet/csharp/language-reference/proposals/csharp-10.0/caller-argument-expression))\n- `[RequiresPreviewFeatures]` (needed for [preview features](https://github.com/dotnet/designs/blob/main/accepted/2021/preview-features/preview-features.md))\n- `[AsyncMethodBuilder]` (needed for [custom method builder types](https://learn.microsoft.com/dotnet/csharp/language-reference/proposals/csharp-10.0/async-method-builders))\n- `[StringSyntax]` (needed to enable [syntax highlight in the IDE](https://github.com/dotnet/runtime/issues/62505))\n- `[ModuleInitializer]` (needed to enable [custom module initializers](https://learn.microsoft.com/dotnet/csharp/language-reference/proposals/csharp-9.0/module-initializers))\n- `[RequiresLocation]` (needed to enable [ref readonly parameters](https://github.com/dotnet/csharplang/issues/6010))\n- `[CollectionBuilder]` (needed for [collection expressions](https://github.com/dotnet/csharplang/issues/5354))\n- `[Experimental]` (needed for [experimental features](https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-12.0/experimental-attribute))\n- `[OverloadResolutionPriority]` (needed for [overload resolution priority](https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-13#overload-resolution-priority))\n- `[ParamsCollection]` (needed for [params collection](https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-13#params-collections))\n- `[ConstantExpected]` (see [proposal](https://github.com/dotnet/runtime/issues/33771))\n\nTo leverage them, make sure to bump your C# language version. You can do this by setting the `<LangVersion>` MSBuild property in your project. For instance, by adding `<LangVersion>13.0</LangVersion>` (or your desired C# version) to the first `<PropertyGroup>` of your .csproj file. For more info on this, [see here](https://sergiopedri.medium.com/enabling-and-using-c-9-features-on-older-and-unsupported-runtimes-ce384d8debb), but remember that you don't need to manually copy polyfills anymore: simply adding a reference to **PolySharp** will do this for you automatically.\n\nIt also includes the following optional runtime-supported polyfills:\n- Reflection annotation attributes (see [docs](https://learn.microsoft.com/dotnet/core/deploying/trimming/prepare-libraries-for-trimming)):\n  - `[DynamicallyAccessedMembers]`\n  - `[DynamicDependency]`\n  - `[RequiresUnreferencedCode]`\n  - `[RequiresDynamicCode]`\n  - `[UnconditionalSuppressMessage]`\n  - `[RequiresAssemblyFiles]`\n- `[StackTraceHidden]` (see [here](https://makolyte.com/csharp-exclude-exception-throw-helper-methods-from-the-stack-trace/))\n- `[UnmanagedCallersOnly]` (see [docs](https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.unmanagedcallersonlyattribute))\n- Platform support annotation attributes (see [docs](https://learn.microsoft.com/dotnet/standard/analyzers/platform-compat-analyzer)):\n  - `[ObsoletedOSPlatform]`\n  - `[SupportedOSPlatform]`\n  - `[SupportedOSPlatformGuard]`\n  - `[TargetPlatform]`\n  - `[UnsupportedOSPlatform]`\n  - `[UnsupportedOSPlatformGuard]`\n- `[SuppressGCTransition]` (see [here](https://devblogs.microsoft.com/dotnet/improvements-in-native-code-interop-in-net-5-0/))\n- `[DisableRuntimeMarshalling]` (see [here](https://learn.microsoft.com/dotnet/standard/native-interop/disabled-marshalling))\n- `[UnsafeAccessor]` (see [here](https://github.com/dotnet/runtime/issues/81741))\n- `[InlineArray]` (see [here](https://learn.microsoft.com/dotnet/csharp/language-reference/proposals/csharp-12.0/inline-arrays))\n- `[DisableUserUnhandledExceptions]` (see [here](https://github.com/dotnet/runtime/issues/103105))\n- Attribute model for feature switches with trimming support (see [docs](https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-9/runtime#attribute-model-for-feature-switches-with-trimming-support)):\n  - `[FeatureGuard]`\n  - `[FeatureSwitchDefinition]`\n- `[WasmImportLinkage]` (see [here](https://github.com/dotnet/runtime/pull/93823))\n\n# Options ⚙️\n\n**PolySharp**'s generation can be configured through some MSBuild properties to set in consuming projects.\n\nThe following properties are available:\n- \"PolySharpUsePublicAccessibilityForGeneratedTypes\": makes all generated types public.\n- \"PolySharpIncludeRuntimeSupportedAttributes\": enables polyfills for (dummy) runtime-supported attributes too.\n- \"PolySharpUseInteropServices2NamespaceForUnmanagedCallersOnlyAttribute\": moves `[UnmanagedCallersOnly]`.\n- \"PolySharpExcludeGeneratedTypes\": excludes specific types from generation (';' or ',' separated type names).\n- \"PolySharpIncludeGeneratedTypes\": only includes specific types for generation (';' or ',' separated type names).\n- \"PolySharpExcludeTypeForwardedToDeclarations\": never generates any `[TypeForwardedTo]` declarations.\n"
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.107421875,
          "content": "{\n  \"sdk\": {\n    \"version\": \"9.0.100\",\n    \"rollForward\": \"latestFeature\",\n    \"allowPrerelease\": false\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}