{
  "metadata": {
    "timestamp": 1736710802553,
    "page": 284,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mono/monodevelop",
      "stars": 2850,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 3.234375,
          "content": "# EditorConfig is awesome:http://EditorConfig.org\r\n\r\n# top-most EditorConfig file\r\nroot = true\r\n\r\n# Baseline\r\n[*]\r\ncharset = utf-8\r\nindent_style = tab\r\ntrim_trailing_whitespace = true\r\nmax_line_length = 120\r\n\r\n# MSBuild\r\n[*.{csproj,proj,projitems,shproj,fsproj,target,props}]\r\nindent_style = space\r\nindent_size = 2\r\n\r\n# XML config files\r\n[*.{config,nuspec,resx}]\r\nindent_style = space\r\nindent_size = 2\r\n\r\n# JSON files\r\n[*.json]\r\nindent_style = space\r\nindent_size = 2\r\n\r\n# F# files\r\n[*.{fs, fsx, fsi}]\r\nindent_style = space\r\nindent_size = 4\r\n\r\n# Dotnet code style settings:\r\n[*.{cs,vb}]\r\n\r\n# Sort using and Import directives with System.* appearing first\r\ndotnet_sort_system_directives_first = true\r\n\r\n# Avoid \"this.\" and \"Me.\" if not necessary\r\ndotnet_style_qualification_for_field = false:suggestion\r\ndotnet_style_qualification_for_property = false:suggestion\r\ndotnet_style_qualification_for_method = false:suggestion\r\ndotnet_style_qualification_for_event = false:suggestion\r\n\r\n# Use language keywords instead of framework type names for type references\r\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\r\ndotnet_style_predefined_type_for_member_access = true:suggestion\r\n\r\n# Suggest more modern language features when available\r\ndotnet_style_object_initializer = true:suggestion\r\ndotnet_style_collection_initializer = true:suggestion\r\ndotnet_style_coalesce_expression = true:suggestion\r\ndotnet_style_null_propagation = true:suggestion\r\ndotnet_style_explicit_tuple_names = true:suggestion\r\n\r\n# CSharp code style settings:\r\n[*.cs]\r\n\r\n# spaces before parens\r\ncsharp_space_between_method_declaration_name_and_open_parenthesis = true\r\ncsharp_space_between_method_call_name_and_opening_parenthesis = true\r\ncsharp_space_after_keywords_in_control_flow_statements = true\r\n\r\n# Newline settings\r\ncsharp_new_line_before_open_brace = types,methods\r\ncsharp_new_line_before_else = false\r\ncsharp_new_line_before_catch = false\r\ncsharp_new_line_before_finally = false\r\ncsharp_new_line_before_members_in_object_initializers = true\r\ncsharp_new_line_before_members_in_anonymous_types = true\r\n\r\n# Switch indentation\r\ncsharp_indent_switch_labels = false\r\n\r\n# Prefer \"var\" everywhere it's apparent\r\ncsharp_style_var_for_built_in_types = true:none\r\ncsharp_style_var_when_type_is_apparent = true:suggestion\r\ncsharp_style_var_elsewhere = true:none\r\n\r\n# Prefer method-like constructs to have a block body\r\ncsharp_style_expression_bodied_methods = false:none\r\ncsharp_style_expression_bodied_constructors = false:none\r\ncsharp_style_expression_bodied_operators = false:none\r\n\r\n# Prefer property-like constructs to have an expression-body\r\ncsharp_style_expression_bodied_properties = true:none\r\ncsharp_style_expression_bodied_indexers = true:none\r\ncsharp_style_expression_bodied_accessors = true:none\r\n\r\n# Suggest more modern language features when available\r\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\r\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\r\ncsharp_style_inlined_variable_declaration = true:suggestion\r\ncsharp_style_throw_expression = true:suggestion\r\ncsharp_style_conditional_delegate_call = true:suggestion\r\n\r\n# Avoid redundant accessibility modifiers when they're default\r\ndotnet_style_require_accessibility_modifiers = omit_if_default:suggestion\r\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.3671875,
          "content": "# NOTE: this file is for git 1.6.6 (and possibly older)\n# Post-1.7.2 there is eol and text, and crlf is deprecated\n# but we can't depend on an unreleased version...\n\n# This file mainly controls line ending conversion behaviour, if\n# the user has the setting core.autocrlf true.\n\n# The meaning of the attributes is a little odd\n# -crlf means DO NOT convert line endings\n# crlf means CONVERT to lf in the repo & Linux/Mac, crlf on Windows\n\n# First, turn off git line ending handling except on a case-by-case basis\n# because our repo isn't normalized, in general.\n# There are even files with mixed line endings.\n*\t-crlf\n\n# sln is always CRLF, even on linux, so don't convert\n*.sln\t-crlf\n\n# configure and makefiles should be lf only\nconfigure\nconfigure.in\nconfigure.ac\nconfigure.sh\nMakefile\nMakefile.am\nMakefile.include\n\n# These files can be converted, since they're new\n.gitattributes\tcrlf\n.gitignore\tcrlf\n\n# Having proj files as crlf on windows will make VS happier\n# MD can deal with (and preserve) either, so it doesn't matter.\n# Unfortunately MD creates with LF, so we need to convert these.\n*proj\tcrlf\n\n# All Stetic's files are always generated as LF, so explicitly ignore those.\n# Sadly, git has useless path globs\n*/*/gtk-gui/*\t-crlf\n*/*/*/gtk-gui/*\t-crlf\n*/*/*/*/gtk-gui/*\t-crlf\n*/*/*/*/*/gtk-gui/*\t-crlf\n*/*/*/*/*/*/gtk-gui/*\t-crlf\n*/*/*/*/*/*/*/gtk-gui/*\t-crlf\n*/*/*/*/*/*/*/*/gtk-gui/*\t-crlf\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 10.4033203125,
          "content": "#Autosave files\n*~\n\n#test stuff\n/TestResult_LoggingService.log\n/main/tests/TestResult*.xml\n\n#build stuff\nobj/\n/main/build/bin\n/main/build/lib\n/main/build/AddIns\n/main/build/data/\n/main/build/locale/\n/main/msbuild/MDBuildTasks/bin\n/extras/*/build\n/extras/*/*/bin\n/main/src/tools/SharpCoco/SharpCoco.exe*\n/main/vcrevision\n/main/tests/tmp\n/main/tests/config\n/main/tests/UnitTests/test-results\n/main/build/MacOSX/monostub\n/main/build/MacOSX/monostub-nogui\n/main/build/MacOSx/monostub-test\n/main/build/MacOSX/libdebugcrash.dylib\n/local-libs\n/main/build/tests\n/main/monodevelop_version\n/main/tests/Ide.Tests/bin\n/main/src/addins/MonoDevelop.Debugger.Win32/CorApi/bin\n/main/src/addins/MonoDevelop.Debugger.Win32/CorApi2/bin\n/main/src/addins/MonoDevelop.Debugger.Win32/Mono.Debugging.Win32/bin/\n/main/src/addins/MonoDevelop.Debugger/MonoDevelop.Debugger.Tests.NonUserCodeTestLib/bin\n/main/src/addins/PerformanceDiagnostics/UIThreadMonitorDaemon/bin\n/main/src/core/MonoDevelop.Core/BuildVariables.cs\n/scripts/configure.exe\n/main/packages\n/main/.nuget/\npull-package.exe\n/main/tests/StressTest/TestProject/bin\n/main/tests/MonoDevelop.Core.Tests.Addin/bin/\n\n#VS writes these sometimes even when it doesn't change anything\n/main/_UpgradeReport_Files\n/main/UpgradeLog.*\n\n# globs\nMakefile.in\n*.DS_Store\n*.sln.cache\n*.suo\n*.pidb\n*.userprefs\n*.usertasks\nconfig.log\nconfig.make\nconfig.status\naclocal.m4\ninstall-sh\nautom4te.cache/\n*.user\n*.tar.gz\n*.dSYM\ntarballs/\ntest-results/\nThumbs.db\n.vs\n\n#Mac bundle stuff\n*.dmg\n*.app\n/main/build/MacOSX/render.exe\n/main/build/MacOSX/*.o\n/main/external/fsharpbinding/.paket\n/main/external/fsharpbinding/paket-files\n/main/external/Xamarin.Mac.buildinfo\n/main/external/Xamarin.Mac.registrar.full.a\n/main/external/Xamarin.Mac.dll*\n/main/external/Xamarin.Mac.pdb\n/main/external/libxammac.dylib\n/main/external/libxammac-system.a\n\n# Autogenerated stuff\n/local-config/\n/bundle-addins/\n/main/mdtool\n/main/monodevelop\n/main/monodevelop-core-addins.pc\n/main/monodevelop-core-mac-addins.pc\n/main/monodevelop.pc\n/main/monodevelop.spec\n/profiles/default\n\n# Autotools junk\n/main/missing\n/main/configure\n\n# Autotool-generated Makefiles.\n# We have some manually-written makefiles too so can't use a glob\n/main/Makefile\n/main/man/Makefile\n/main/build/MacOSX/Makefile\n/main/build/Makefile\n/main/external/Makefile\n/main/po/Makefile\n/main/src/Makefile\n/main/src/addins/AspNet/Makefile\n/main/src/addins/CBinding/Makefile\n/main/src/addins/CSharpBinding/AspNet/Makefile\n/main/src/addins/CSharpBinding/Autotools/Makefile\n/main/src/addins/CSharpBinding/Makefile\n/main/src/addins/ChangeLogAddIn/Makefile\n/main/src/addins/Deployment/Makefile\n/main/src/addins/Deployment/MonoDevelop.Deployment.Linux/Makefile\n/main/src/addins/Deployment/MonoDevelop.Deployment/Makefile\n/main/src/addins/GnomePlatform/Makefile\n/main/src/addins/ILAsmBinding/Makefile\n/main/src/addins/MacPlatform/Makefile\n/main/src/addins/Makefile\n/main/src/addins/MonoDevelop.AssemblyBrowser/Makefile\n/main/src/addins/MonoDevelop.Autotools/Makefile\n/main/src/addins/MonoDevelop.CodeMetrics/Makefile\n/main/src/addins/MonoDevelop.Debugger.Gdb/Makefile\n/main/src/addins/MonoDevelop.Debugger.Soft/Makefile\n/main/src/addins/MonoDevelop.Debugger.Soft/Mono.Debugging.Soft/Makefile\n/main/src/addins/MonoDevelop.Debugger.Soft/MonoDevelop.Debugger.Soft.AspNet/Makefile\n/main/src/addins/MonoDevelop.Debugger.Soft/MonoDevelop.Debugger.Soft.Moonlight/Makefile\n/main/src/addins/MonoDevelop.Debugger.Soft/MonoDevelop.Debugger.Soft/Makefile\n/main/src/addins/MonoDevelop.Debugger/Makefile\n/main/src/addins/MonoDevelop.DesignerSupport/Makefile\n/main/src/addins/MonoDevelop.DocFood/Makefile\n/main/src/addins/MonoDevelop.Gettext/Makefile\n/main/src/addins/MonoDevelop.GtkCore/Makefile\n/main/src/addins/MonoDevelop.GtkCore/libstetic/Makefile\n/main/src/addins/MonoDevelop.GtkCore/libsteticui/Makefile\n/main/src/addins/MonoDevelop.HexEditor/Makefile\n/main/src/addins/MonoDevelop.Moonlight/Makefile\n/main/src/addins/MonoDevelop.Refactoring/Makefile\n/main/src/addins/MonoDevelop.RegexToolkit/Makefile\n/main/src/addins/MonoDevelop.SourceEditor2/Makefile\n/main/src/addins/MonoDevelop.WebReferences/Makefile\n/main/src/addins/Xml/Makefile\n/main/src/addins/MonoDeveloperExtensions/Makefile\n/main/src/addins/MonoDeveloperExtensions/NUnit/Makefile\n/main/src/addins/TextTemplating/Makefile\n/main/src/addins/TextTemplating/Mono.TextTemplating/Makefile\n/main/src/addins/TextTemplating/Mono.TextTemplating.Tests/Makefile\n/main/src/addins/TextTemplating/MonoDevelop.TextTemplating/Makefile\n/main/src/addins/TextTemplating/TextTransform/Makefile\n/main/src/addins/VBNetBinding/Makefile\n/main/src/addins/VersionControl/Makefile\n/main/src/addins/VersionControl/MonoDevelop.VersionControl.Git/Makefile\n/main/src/addins/VersionControl/MonoDevelop.VersionControl.Subversion/Makefile\n/main/src/addins/VersionControl/MonoDevelop.VersionControl.Subversion.Unix/Makefile\n/main/src/addins/VersionControl/MonoDevelop.VersionControl.Subversion.Tests/Makefile\n/main/src/addins/VersionControl/MonoDevelop.VersionControl/Makefile\n/main/src/addins/WelcomePage/Makefile\n/main/src/addins/WindowsPlatform/Makefile\n/main/src/addins/WindowsPlatform/WindowsAPICodePack/Makefile\n/main/src/addins/WindowsPlatform/WindowsAPICodePack/Core/Makefile\n/main/src/addins/WindowsPlatform/WindowsAPICodePack/Shell/Makefile\n/main/src/addins/WindowsPlatform/WindowsPlatform/Makefile\n/main/src/addins/prj2make-sharp-lib/Makefile\n/main/src/core/Makefile\n/main/src/core/Mono.Debugging/Makefile\n/main/src/core/Mono.Texteditor/Makefile\n/main/src/core/MonoDevelop.TextEditor.Tests/Makefile\n/main/src/core/MonoDevelop.Core/Makefile\n/main/src/core/MonoDevelop.Ide/Makefile\n/main/src/core/MonoDevelop.Projects.Formats.MSBuild/Makefile\n/main/src/core/MonoDevelop.Startup/Makefile\n/main/src/tools/Makefile\n/main/src/tools/SharpCoco/Makefile\n/main/src/tools/mdhost/Makefile\n/main/src/tools/mdmonitor/Makefile\n/main/src/tools/mdtool/Makefile\n/main/src/tools/MacCrashLogger/Makefile\n/main/src/tools/mdcrashlog/Makefile\n/main/tests/Ide.Tests/Makefile\n/main/tests/Makefile\n/main/tests/MacPlatform.Tests/Makefile\n/main/tests/TestRunner/Makefile\n/main/tests/UnitTests/Makefile\n/main/tests/UserInterfaceTests/Makefile\n/main/theme-icons/Makefile\n/main/src/addins/TextTemplating/Mono.TextTemplating.Tests/Makefile\n/main/tests/MacPlatform.Tests/Makefile\n/main/tests/MonoDevelop.Core.Tests.Addin/Makefile\n/main/tests/MonoDevelop.CSharpBinding.Tests/Makefile\n/main/tests/MonoDevelop.MacDev.Tests/Makefile\n/main/tests/MonoDevelop.Refactoring.Tests/Makefile\n/main/tests/UserInterfaceTests/Makefile\n/main/src/addins/VersionControl/MonoDevelop.VersionControl.Git.Tests/Makefile\n/main/src/addins/MonoDevelop.PackageManagement/Makefile\n/main/src/addins/MonoDevelop.PackageManagement/MonoDevelop.PackageManagement/Makefile\n/main/src/addins/MonoDevelop.PackageManagement/MonoDevelop.PackageManagement.Tests/Makefile\n/main/src/addins/MonoDevelop.UnitTesting.NUnit/Makefile\n/main/src/addins/MonoDevelop.UnitTesting.NUnit/NUnit3Runner/Makefile\n/main/src/addins/MonoDevelop.UnitTesting.NUnit/NUnitRunner/Makefile\n/main/src/addins/MonoDevelop.UnitTesting/Makefile\n/main/msbuild/Makefile\n/main/src/addins/MonoDevelop.AspNetCore/Makefile\n/main/src/addins/MonoDevelop.AzureFunctions/Makefile\n/main/src/addins/MonoDevelop.ConnectedServices/Makefile\n/main/src/addins/MonoDevelop.Debugger.VSCodeDebugProtocol/Makefile\n/main/src/addins/MonoDevelop.Debugger.VSCodeDebugProtocol/MonoDevelop.Debugger.VsCodeDebugProtocol/Makefile\n/main/src/addins/MonoDevelop.Debugger.Win32/Makefile\n/main/src/addins/MonoDevelop.Debugger.Win32/MonoDevelop.Debugger.Win32/Makefile\n/main/src/addins/MonoDevelop.DotNetCore/Makefile\n/main/src/addins/MonoDevelop.DotNetCore/MonoDevelop.DotNetCore.Tests/Makefile\n/main/src/addins/MonoDevelop.Packaging/Makefile\n/main/src/addins/MonoDevelop.Packaging/MonoDevelop.Packaging.Tests/Makefile\n/main/src/addins/PerformanceDiagnostics/Makefile\n/main/src/addins/PerformanceDiagnostics/PerformanceDiagnostics/Makefile\n/main/src/addins/PerformanceDiagnostics/UIThreadMonitorDaemon/Makefile\n/main/src/addins/VersionControl/Subversion.Win32.Tests/Makefile\n/main/src/addins/VersionControl/Subversion.Win32/Makefile\n/main/src/core/Mono.TextEditor.Platform/Makefile\n/main/src/core/Mono.TextEditor.Shared/Makefile\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Editor.Highlighting/Makefile\n/main/src/core/MonoDevelop.Projects.Formats.MSBuild/MonoDevelop.Projects.MSBuild.Shared/Makefile\n/main/tests/MonoDevelop.Core.Tests/Makefile\n/main/tests/WindowsPlatform.Tests/Makefile\n/main/tests/IdeUnitTests/Makefile\n\n# extras configure junk\n/extras/MonoDevelop.Database/INSTALL\n/extras/MonoDevelop.Database/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.CodeGenerator/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.Components/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.ConnectionManager/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.Designer/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.Query/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.Sql.MySql/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.Sql.Npgsql/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.Sql.SqlServer/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.Sql.Sqlite/Makefile\n/extras/MonoDevelop.Database/MonoDevelop.Database.Sql/Makefile\n/extras/MonoDevelop.Database/configure\n/extras/MonoDevelop.Database/missing\n/extras/MonoDevelop.Database/monodevelop-database.pc\n/extras/MonoDevelop.Database/po/Makefile\n/extras/MonoDevelop.Database/monodevelop-database.spec\n/extras/MonoDevelop.Profiling/INSTALL\n/extras/MonoDevelop.Profiling/Makefile\n/extras/MonoDevelop.Profiling/MonoDevelop.Profiling.HeapBuddy/Makefile\n/extras/MonoDevelop.Profiling/MonoDevelop.Profiling.HeapShot/Makefile\n/extras/MonoDevelop.Profiling/MonoDevelop.Profiling/Makefile\n/extras/MonoDevelop.Profiling/configure\n/extras/MonoDevelop.Profiling/missing\n/extras/MonoDevelop.Profiling/monodevelop-profiling.pc\n/extras/MonoDevelop.Profiling/po/Makefile\n/extras/ValaBinding/INSTALL\n/extras/ValaBinding/Makefile\n/extras/ValaBinding/configure\n/extras/ValaBinding/missing\n/extras/ValaBinding/monodevelop-vala.spec\n\n#other extras generated stuff\n/extras/JavaBinding/monodevelop-java.pc\n/extras/JavaBinding/monodevelop-java.spec\n/extras/MonoDevelop.Debugger.Gdb/monodevelop-debugger-gdb.spec\n/extras/PyBinding/PyBinding/*.pc\n/extras/PyBinding/monodevelop-python.spec\n\n#resharper\n*_Resharper.*\n*.Resharper\n\n#dotCover\n*.dotCover\n\n#Visual Studio 2015\nmain/.vs/\nmain/build/util\nmain/po/StripMnemonics.pdb\nmain/po/StripMnemonics.exe\n*.binlog\n*.ProjectImports.zip\nmain/tests/StressTest/bin\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.9541015625,
          "content": "[submodule \"main/external/debugger-libs\"]\n\tpath = main/external/debugger-libs\n\turl = https://github.com/mono/debugger-libs.git\n\tbranch = master\n[submodule \"main/external/guiunit\"]\n\tpath = main/external/guiunit\n\turl = https://github.com/mono/guiunit.git\n[submodule \"main/external/libgit-binary\"]\n\tpath = main/external/libgit-binary\n\turl = https://github.com/mono/libgit-binary.git\n\tbranch = vs-8.0-v0.26.8\n[submodule \"main/external/libgit2\"]\n\tpath = main/external/libgit2\n\turl = https://github.com/mono/libgit2.git\n\tbranch = vs-8.0-v0.26.8\n[submodule \"main/external/libgit2sharp\"]\n\tpath = main/external/libgit2sharp\n\turl = https://github.com/mono/libgit2sharp.git\n\tbranch = vs-8.0-v0.26\n[submodule \"main/external/macdoc\"]\n\tpath = main/external/macdoc\n\turl = https://github.com/xamarin/macdoc\n[submodule \"main/external/mdtestharness\"]\n\tpath = main/external/mdtestharness\n\turl = https://github.com/mono/mdtestharness.git\n[submodule \"main/external/mono-addins\"]\n\tpath = main/external/mono-addins\n\turl = https://github.com/mono/mono-addins.git\n\tbranch = master\n[submodule \"main/external/mono-tools\"]\n\tpath = main/external/mono-tools\n\turl = https://github.com/mono/mono-tools.git\n[submodule \"main/external/nrefactory\"]\n\tpath = main/external/nrefactory\n\turl = https://github.com/xamarin/NRefactory.git\n[submodule \"main/external/nuget-binary\"]\n\tpath = main/external/nuget-binary\n\turl = https://github.com/mono/nuget-binary.git\n\tbranch = master\n[submodule \"main/external/sharpsvn-binary\"]\n\tpath = main/external/sharpsvn-binary\n\turl = https://github.com/mono/sharpsvn-binary.git\n[submodule \"main/external/xwt\"]\n\tpath = main/external/xwt\n\turl = https://github.com/mono/xwt\n\tbranch = master\n[submodule \"main/external/Xamarin.PropertyEditing\"]\n\tpath = main/external/Xamarin.PropertyEditing\n\turl = https://github.com/xamarin/Xamarin.PropertyEditing\n\tbranch = master\n[submodule \"main/external/vs-editor-api\"]\n\tpath = main/external/vs-editor-api\n\turl = https://github.com/microsoft/vs-editor-api.git\n\tbranch = master\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.21484375,
          "content": "Mikayla Hutchinson <m.j.hutchinson@gmail.com>\nMikayla Hutchinson <mhutch@microsoft.com>\nMikayla Hutchinson <mhutch@xamarin.com>\nMikayla Hutchinson <mhutch@mono-cvs.ximian.com>\nMikayla Hutchinson <mhutchinson@novell.com>\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 2.939453125,
          "content": "# MonoDevelop Code Owners File\n#\n# GitHub uses this file to determine who to assign for reviews\n# on pull requests. Please keep this file alphabetically sorted.\n#\n# References:\n#\n# https://github.com/blog/2392-introducing-code-owners\n# https://help.github.com/articles/about-codeowners\n\n/main/build/MacOSX @Therzok @iainx\n/main/Directory.Build.props @mono/monodevelop-roslyn @mono/monodevelop-infrastructure\n/main/msbuild/RoslynVersion.props @mono/monodevelop-roslyn\n/main/src/addins/CSharpBinding @mono/monodevelop-roslyn\n/main/src/addins/MonoDevelop.AspNetCore @mrward @nosami @iantoalms @rodrmoya\n/main/src/addins/MonoDevelop.DotNetCore @mrward @nosami @iantoalms @rodrmoya\n/main/src/addins/PerformanceDiagnostics @mono/monodevelop-infrastructure\n/main/src/core/MonoDevelop.Core @mono/monodevelop-core-owners\n/main/src/core/MonoDevelop.Core/MonoDevelop.FSW @Therzok\n/main/src/core/MonoDevelop.Core/MonoDevelop.Utilities @mono/monodevelop-infrastructure\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Components.AtkCocoaHelper @iainx\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Components.Commands @slluis\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Components.Docking @slluis @sevoku\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Components.Theming @sevoku\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Components @slluis @sevoku\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.BuildOutputView @netonjm @rodrmoya\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.CodeCompletion @slluis @mkrueger\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.CodeFormatting @slluis @mkrueger\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.CodeTemplates @mkrueger\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Desktop @slluis\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Editor.Extension @mkrueger\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Editor.Highlighting @mkrueger\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Editor.TextMate @mkrueger\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Editor @mkrueger\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Execution @slluis\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.FindInFiles @mkrueger @sevoku\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Execution @slluis\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Components @slluis @sevoku\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content @slluis\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/ErrorListPad.cs @netonjm @rodrmoya\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui @slluis\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.ProgressMonitoring @slluis\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.TypeSystem @mono/monodevelop-roslyn @mkrueger @DavidKarlas\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Updater @slluis\n/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide @slluis\n/main/src/core/MonoDevelop.Ide/branding @slluis\n/main/tests/IdeUnitTests @mono/monodevelop-infrastructure\n/main/tests/UnitTests @mono/monodevelop-infrastructure\n/main/src/tools/ExtensionTools @mono/monodevelop-infrastructure\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.828125,
          "content": "include main/monodevelop_version\n\nEXTRA_DIST = configure code_of_conduct.md\nSPACE := \nSPACE +=  \n\nifeq ($(origin APP), undefined)\nBIN_DIR=main/build\nelse\nBIN_DIR=\"$(APP)/Contents/Resources/lib/monodevelop\"\nendif\n\nAOT_DIRECTORIES:=$(subst $(SPACE),:,$(shell find $(BIN_DIR)/* -not -path \"*azure-functions-cli*\" -not -path \"*.dSYM*\" -not -path \"*/ServiceHub/*\" -not -path $(BIN_DIR)/tests* -type d))\n\nMONO_DIR=/Library/Frameworks/Mono.framework/Libraries/mono\nMSBUILD_PATH=$(MONO_DIR)/msbuild/15.0/bin\n\n# --assembly-loader=strict will not work for valuetuples here, even with binding redirects\nAOT_COMMAND=mono64 --aot=hybrid --debug --assembly-loader=strict\nMONO_AOT:=MONO_PATH=\"$(AOT_DIRECTORIES):$(MSBUILD_PATH):$(MONO_PATH)\" $(AOT_COMMAND) --apply-bindings=$(BIN_DIR)/bin/MonoDevelop.exe.config\n\nMSBUILD_LIBRARIES=Microsoft.Build.dll Microsoft.Build.Framework.dll Microsoft.Build.Utilities.Core.dll\nMSBUILD_DLLS=$(patsubst %, $(MSBUILD_PATH)/%, $(MSBUILD_LIBRARIES))\n\n# Set $PATH to point to provisioned .NET Core and avoid the ones provisioned by VSTS itself\nall: export PATH:=\"/usr/local/share/dotnet:$(PATH)\"\nall: print_config update_submodules all-recursive\n\nGIT_FOUND = $$(echo $$(which git))\nSYNC_SUBMODULES = \\\n\tif test -d \".git\"; then \\\n\t\tif [ \"x$(GIT_FOUND)\" = \"x\" ]; then \\\n\t\t\techo \"git not found; please install it first\"; \\\n\t\t\texit 1; \\\n\t\tfi; \\\n\t\tgit submodule sync; \\\n\t\tgit submodule update --init --recursive || exit 1; \\\n\tfi\n\nprint_config:\n\t@echo \"PATH is $(PATH)\"\n\t@echo \".NET Core `dotnet --version` installed in `which dotnet`\"\n\t@dotnet --list-sdks\n\nupdate_submodules:\n\t@$(SYNC_SUBMODULES)\n\ntop_srcdir=.\ninclude $(top_srcdir)/config.make\n\nCONFIG_MAKE=$(top_srcdir)/config.make\n\n%-recursive: $(CONFIG_MAKE)\n\t@export PKG_CONFIG_PATH=\"`pwd`/$(top_srcdir)/local-config:$(prefix)/lib/pkgconfig:$(prefix)/share/pkgconfig:$$PKG_CONFIG_PATH\"; \\\n\texport MONO_GAC_PREFIX=\"$(prefix):$$MONO_GAC_PREFIX\"; \\\n\texport PATH=\"$$PATH:/Library/Frameworks/Mono.framework/Versions/Current/bin\"; \\\n\tset . $$MAKEFLAGS; final_exit=:; \\\n\tcase $$2 in --unix) shift ;; esac; \\\n\tcase $$2 in *=*) dk=\"exit 1\" ;; *k*) dk=: ;; *) dk=\"exit 1\" ;; esac; \\\n\tfor dir in $(SUBDIRS); do \\\n\t\tcase $$dir in \\\n\t\t.) $(MAKE) $*-local || { final_exit=\"exit 1\"; $$dk; };;\\\n\t\t*) (cd $$dir && $(MAKE) $*) || { final_exit=\"exit 1\"; $$dk; };;\\\n\t\tesac \\\n\tdone\n\t$$final_exit\n\n$(CONFIG_MAKE): $(top_srcdir)/configure\n\t@if test -e \"$(CONFIG_MAKE)\"; then exec $(top_srcdir)/configure --prefix=$(prefix); \\\n\telse \\\n\t\techo \"You must run configure first\"; \\\n\t\texit 1; \\\n\tfi\n\nclean: clean-recursive\ninstall: install-recursive\nuninstall: uninstall-recursive\ndistcheck: distcheck-recursive\n\ndistclean: distclean-recursive\n\trm -rf config.make local-config\n\nremove-stale-tarballs:\n\trm -rf tarballs\n\nremove-stale-buildinfo:\n\trm -f main/src/core/MonoDevelop.Core/BuildVariables.cs\n\ndist: update_submodules remove-stale-tarballs remove-stale-buildinfo dist-recursive\n\tmkdir -p tarballs\n\tfor t in $(SUBDIRS); do \\\n\t\tif test -e $$t/*.tar.gz; then \\\n\t\t\tmv -f $$t/*.tar.gz tarballs ;\\\n\t\tfi \\\n\tdone\n\tfor t in `ls tarballs/*.tar.gz`; do \\\n\t\tgunzip $$t ;\\\n\tdone\n\tfor t in `ls tarballs/*.tar`; do \\\n\t\tbzip2 $$t ;\\\n\tdone\n\trm -rf specs\n\tmkdir -p specs\n\tfor t in $(SUBDIRS); do \\\n\t\tif test -a $$t/*.spec; then \\\n\t\t\tcp -f $$t/*.spec specs ;\\\n\t\tfi \\\n\tdone\n\t@cd tarballs && for tb in `ls external`; do \\\n\t\techo Decompressing $$tb; \\\n\t\ttar xvjf external/$$tb; \\\n\tdone\n\t@rm -rf tarballs/external\t\n\t@echo Decompressing monodevelop-$(PACKAGE_VERSION).tar.bz2\n\t@cd tarballs && tar xvjf monodevelop-$(PACKAGE_VERSION).tar.bz2\n\t@cp version.config tarballs/monodevelop-$(PACKAGE_VERSION)\n\t@cp NuGet.config tarballs/monodevelop-$(PACKAGE_VERSION)\n\t@rm -f main/build/bin/buildinfo\n\t@cd main && make buildinfo\n\t@cp main/build/bin/buildinfo tarballs/monodevelop-$(PACKAGE_VERSION)/\n\t@echo Generating merged tarball\n\t@cd tarballs && tar -cjf monodevelop-$(PACKAGE_VERSION).tar.bz2 monodevelop-$(PACKAGE_VERSION)\n\t@cd tarballs && rm -rf monodevelop-$(PACKAGE_VERSION)\n\naot-all: aot aot-gac aot-msbuild-with-copy\n\naot-msbuild-with-copy: aot-msbuild\n\t@for i in $(MSBUILD_DLLS); do cp -r \"$$i\" \"$$i.dylib\" \"$$i.dylib.dSYM\" $(BIN_DIR)/bin; done\n\naot:\n\t@for i in $(BIN_DIR)/bin/*.dll; do ($(MONO_AOT) \"$$i\" &> /dev/null && echo AOT successful: $$i) || (echo AOT failed: $$i); done\n\t@for i in $(BIN_DIR)/AddIns/*.dll; do ($(MONO_AOT) \"$$i\" &> /dev/null && echo AOT successful: $$i) || (echo AOT failed: $$i); done\n\t@for i in $(BIN_DIR)/AddIns/*/*.dll; do ($(MONO_AOT) \"$$i\" &> /dev/null && echo AOT successful: $$i) || (echo AOT failed: $$i); done\n\t@for i in $(BIN_DIR)/AddIns/*/*/*.dll; do ($(MONO_AOT) \"$$i\" &> /dev/null && echo AOT successful: $$i) || (echo AOT failed: $$i); done\n\naot-gac:\n\t@for i in $(MONO_DIR)/4.5/*.dll; do (sudo $(AOT_COMMAND) \"$$i\" &> /dev/null && echo AOT successful: $$i) || (echo AOT failed: $$i); done\n\t@for i in $(MONO_DIR)/gac/*/*/*.dll; do (sudo $(AOT_COMMAND) \"$$i\" &> /dev/null && echo AOT successful: $$i) || (echo AOT failed: $$i); done\n\naot-msbuild:\n\t@for i in $(MSBUILD_DLLS); do (sudo $(AOT_COMMAND) \"$$i\" &> /dev/null && echo AOT successful: $$i) || (echo AOT failed: $$i); done\n\nrun:\n\tcd main && $(MAKE) run\n\nrun-64:\n\tcd main && $(MAKE) run-64\n\nrun-boehm:\n\tcd main && $(MAKE) run-boehm\n\nrun-sgen:\n\tcd main && $(MAKE) run-sgen\n\nrun-gdb:\n\tcd main && $(MAKE) run-gdb\n\nrun-gdb-64:\n\tcd main && $(MAKE) run-gdb-64\n\nrun-leaks:\n\tcd main && $(MAKE) run-leaks\n\nrun-no-accessibility:\n\tcd main && $(MAKE) run-no-accessibility\ntest:\n\tcd main && $(MAKE) test assembly=$(assembly)\n    \ndeploy-tests:\n\tcd main && $(MAKE) deploy-tests\n\nuitest:\n\tcd main && $(MAKE) uitest assembly=$(assembly) tests=$(tests)\n\nperformance-tests:\n\tcd main && $(MAKE) performance-tests\ncoverage:\n\tcd main && $(MAKE) coverage\n\ncheck-addins:\n\tcd main && $(MAKE) check-addins\n\napp-dir:\n\tcd main && $(MAKE) app-dir\n\nreset-versions: reset-all\ncheck-versions: check-all\n\nreset-%:\n\t@./version-checks --reset $*\n\ncheck-%:\n\t@./version-checks --check $*\n"
        },
        {
          "name": "MonoDevelop.mdw",
          "type": "blob",
          "size": 0.119140625,
          "content": "<WorkspaceItem name=\"MonoDevelop\" ctype=\"Workspace\">\n  <Items>\n    <Item>main/Main.sln</Item>\n  </Items>\n</WorkspaceItem>\n"
        },
        {
          "name": "NuGet.config",
          "type": "blob",
          "size": 1.2724609375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n\t<packageSources>\n\t\t<add key=\"Nuget Official\" value=\"https://api.nuget.org/v3/index.json\" />\n\t\t<add key=\"Roslyn Nightlies\" value=\"https://dotnet.myget.org/F/roslyn/api/v3/index.json\" />\n\t\t<add key=\"roslyn-analyzers\" value=\"https://dotnet.myget.org/F/roslyn-analyzers/api/v3/index.json\" />\n\t\t<add key=\"vssdk\" value=\"https://pkgs.dev.azure.com/azure-public/vside/_packaging/vssdk/nuget/v3/index.json\" />\n\t\t<add key=\"vs-impl\" value=\"https://pkgs.dev.azure.com/azure-public/vside/_packaging/vs-impl/nuget/v3/index.json\" />\n\t\t<add key=\"VS Editor Legacy\" value=\"https://www.myget.org/F/vs-editor/api/v3/index.json\" />\n\t\t<add key=\"NuGetizer3000\" value=\"https://ci.appveyor.com/nuget/nugetizer3000\" />\n\t\t<add key=\"VSTest\" value=\"https://dotnet.myget.org/F/vstest/\" />\n\t\t<add key=\"Templating\" value=\"https://dotnet.myget.org/F/templating/\" />\n\t\t<add key=\"dotnet-core\" value=\"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\" />\n\t\t<add key=\"Azure AppService\" value=\"https://www.myget.org/F/azure-appservice/api/v3/index.json\" />\n\t\t<add key=\"MSBuild\" value=\"https://dotnet.myget.org/F/msbuild/api/v3/index.json\" />\n\t\t<add key=\"nuget-build\" value=\"https://dotnet.myget.org/F/nuget-build/api/v3/index.json\" />\n\t</packageSources>\n</configuration>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.80859375,
          "content": "**NOTICE**\n-------------\n\n**This project has not been built nor maintained since January 2020 and has been archived**\n\nIf you are interested in working on the project, even when archived you can still create a fork of it.\n\n<br/><br/><br/>\n\n---\n\n<br/><br/><br/>\n\n\n**MonoDevelop** is a full-featured integrated development environment (IDE) for mono using Gtk#.\n\nThe MonoDevelop core is also the foundation for Visual Studio for Mac.\nFeel free to file bugs against Visual Studio for Mac here as well.\n\nSee http://www.monodevelop.com for more info.\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mono/monodevelop?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nDirectory organization\n----------------------\n\nThere are two main directories:\n\n * `main`: The core MonoDevelop assemblies and add-ins (all in a single\n    tarball/package).\n * `extras`: Additional add-ins (each add-in has its own\n    tarball/package).\n\nCompiling\n---------\n\nIf you are building from Git, make sure that you initialize the submodules\nthat are part of this repository by executing:\n`git submodule update --init --recursive`\n\nIf you are running a parallel mono installation, make sure to run all the following steps\nwhile having sourced your mono installation script. (source path/to/my-environment-script)\nSee: http://www.mono-project.com/Parallel_Mono_Environments\n\nTo compile execute:\n`./configure ; make`\n\nThere are two variables you can set when running `configure`:\n\n* The install prefix: `--prefix=/path/to/prefix`\n\n  * To install with the rest of the assemblies, use:\n  `--prefix=\"pkg-config --variable=prefix mono\"`\n\n* The build profile: `--profile=profile-name`\n\n  * `stable`: builds the MonoDevelop core and some stable extra add-ins.\n  * `core`: builds the MonoDevelop core only.\n  * `all`: builds everything\n  * `mac`: builds for Mac OS X\n\n**PS:** You can also create your own profile by adding a file to the profiles directory containing a list of the directories to build.\n\nDisclaimer: Please be aware that the 'extras/JavaBinding' and 'extras/ValaBinding' packages do not currently work. When prompted or by manually selecting them during the './configure --select' step, make sure they stay deselected. (deselected by default)\n\nRunning\n-------\n\nYou can run MonoDevelop from the build directory by executing:\n`make run`\n\nDebugging\n---------\n\nYou can debug MonoDevelop using Visual Studio (on Windows or macOS) with the\n`main/Main.sln` solution. Use the `DebugWin32` configuration on Windows and the\n`DebugMac` configuration on macOS.\n\nInstalling *(Optional)*\n----------\n\nYou can install MonoDevelop by running:\n`make install`\n\nBear in mind that if you are installing under a custom prefix, you may need to modify your `/etc/ld.so.conf` or `LD_LIBRARY_PATH` to ensure that any required native libraries are found correctly.\n\n*(It's possible that you need to install for your locale to be\ncorrectly set.)*\n\nPackaging for OS X\n-----------------\n\nTo package MonoDevelop for OS X in a convenient MonoDevelop.app\nfile, just do this after MonoDevelop has finished building (with\n`make`): `cd main/build/MacOSX ; make app`.\nYou can run MonoDevelop: `open MonoDevelop.app` or build dmg package: `./make-dmg-bundle.sh`\n\nDependencies\n------------\n\n- [Windows](https://github.com/mono/md-website/blob/gh-pages/developers/building-monodevelop.md#prerequisites-and-source)\n- [Unix](http://www.monodevelop.com/developers/building-monodevelop/#linux)\n\nSpecial Environment Variables\n-----------------------------\n\n**BUILD_REVISION**\n\n\tIf this environment variable exists we assume we are compiling inside wrench.\n\tWe use this to enable raygun only for 'release' builds and not for normal\n\tdeveloper builds compiled on a dev machine with 'make && make run'.\n\n\nKnown Problems\n-----------------------------\n\n```\n\"The type `GLib.IIcon' is defined in an assembly that is not referenced\"\n```\n\nThis happens when you accidentally installed gtk-sharp3 instead of the 2.12.x branch version.\nMake sure to 'make uninstall' or otherwise remove the gtk-sharp3 version and install the older one.\n\nxbuild may still cache a reference to assemblies that you may have accidentally installed into your mono installation,\nlike the gtk-sharp3 as described before. You can delete the cache in $HOME/.config/xbuild/pkgconfig-cache-2.xml\n\n\n\nReferences\n----------\n\n**[MonoDevelop website](http://www.monodevelop.com)**\n\n**[Gnome Human Interface Guidelines (HIG)](https://developer.gnome.org/hig/stable/)**\n\n**[freedesktop.org standards](http://freedesktop.org/Standards/)**\n\nDiscussion, Bugs, Patches\n-------------------------\n\nmonodevelop-list@lists.ximian.com *(questions and discussion)*\n\nmonodevelop-patches-list@lists.ximian.com *(track commits to MonoDevelop)*\n\nmonodevelop-bugs@lists.ximian.com *(track MonoDevelop bugzilla component)*\n\nhttps://github.com/mono/monodevelop/issues/new *(submit bugs and patches here)*\n\n"
        },
        {
          "name": "code_of_conduct.md",
          "type": "blob",
          "size": 2.33203125,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of\nfostering an open and welcoming community, we pledge to respect all people who\ncontribute through reporting issues, posting feature requests, updating\ndocumentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free\nexperience for everyone, regardless of level of experience, gender, gender\nidentity and expression, sexual orientation, disability, personal appearance,\nbody size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic\n  addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\nBy adopting this Code of Conduct, project maintainers commit themselves to\nfairly and consistently applying these principles to every aspect of managing\nthis project. Project maintainers who do not follow or enforce the Code of\nConduct may be permanently removed from the project team.\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting a project maintainer at miguel@xamarin.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. Maintainers are\nobligated to maintain confidentiality with regard to the reporter of an\nincident.\n\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.3.0, available at\n[http://contributor-covenant.org/version/1/3/0/][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/3/0/\n"
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 8.4833984375,
          "content": "#!/usr/bin/env bash\nVERSION=2.1.0\nprofile=default\ntests=no\nrelease=no\nprefix=NONE\ntest -e \"$CONFIG_SITE\" && . \"$CONFIG_SITE\"\ntest \"$prefix\" = NONE && prefix=/usr/local\n\nusage ()\n{\n\tprofiles=`ls profiles | sed -e \"s/$/,/g\" | fmt | sed -e 's/,$//' -e \"s/ChangeLog, //\"`\n\techo \"\"\n\techo \"Usage : configure [--prefix=PREFIX] [--select] [--profile=PROFILE] [--release-builds]\"\n\techo \"\"\n\techo \"This script allows selecting and configuring a set of MonoDevelop\"\n\techo \"modules to be included in an integrated build.\"\n\techo \"\"\n\techo \"The MonoDevelop build system consists of a 'main' module, which \"\n\techo \"contains the main distribution, and a number of additional add-ins\"\n\techo \"in subdirectories of 'extras'. \"\n\techo \"\"\n\techo \"The 'extras' add-ins are designed to be built and distributed separately,\"\n\techo \"and therefore build against your system-installed MonoDevelop by default.\"\n\techo \"However, this script sets them up to build against the MonoDevelop in\"\n\techo \"'main', and ensures that they will be loaded when MonoDevelop is launched\"\n\techo \"with 'make run' in this top-level directory. This is very useful for\"\n\techo \"development and testing.\"\n\techo \"\"\n\techo \"The first time the configure script is executed, it will ask you\"\n\techo \"to select the add-ins to be included in the build. Further executions\"\n\techo \"will configure only the selected add-ins. To select a new list of\"\n\techo \"add-ins, run this script using the --select option.\"\n\techo \"\"\n\techo \"You can also configure a predefined list of modules by specifying\"\n\techo \"a build profile using the --profile option.\"\n\techo \"\"\n\techo \"Options:\"\n\techo \"\"\n\techo \"--prefix=PREFIX\"\n\techo \"\"\n\techo \"  Select the install directory prefix.\"\n\techo \"\"\n\techo \"--select\"\n\techo \"\"\n\techo \"  Shows a list of add-ins and allows selecting which ones should be\"\n\techo \"  included in the build. It can be used in combination with --profile\"\n\techo \"  to select the add-ins to be built for a specific profile.\"\n\techo \"\"\n\techo \"--enable-tests\"\n\techo \"  Build the md test suite\"\n\techo \"\"\n\techo \"--enable-release\"\n\techo \"  Builds md in release mode\"\n\techo \"\"\n\techo \"--enable-mac32\"\n\techo \"  Build for i386 on OS X\"\n\techo \"\"\n\techo \"--profile=PROFILE\"\n\techo \"\"\n\techo \"  Configure the build system using the provided profile.\"\n\techo \"  A 'profile' is a list of 'extras' directories and arguments for their \"\n\techo \"  configure scripts, and arguments for the 'main' configure script. To \"\n\techo \"  add a profile, simply create a file in the 'profiles' directory.\"\n\techo \"  The 'default' profile is used when none is specified.\"\n\techo \"\"\n\techo \"  Profiles available:\" $profiles\n\techo \"\"\n}\n\nvalidate_profile ()\n{\n\ttest -z \"$1\" && return 0\n\tfor c in `ls profiles`; do\n\t\tif [ \"$c\" = \"$1\" ]; then\n\t\t\treturn 1\n\t\tfi\n\tdone\n\treturn 0\n}\n\nselect_packages ()\n{\n\tif [[ ! -a profiles/$profile ]] ; then\n\t\tcp profiles/stable profiles/$profile\n\tfi\n\tn=1\n\tfor p in `sed -e /#/d -e 's/ /,/g' < profiles/all` ; do\n\t\tpackages[$n]=$p\n\t\tif test x1 == x`grep -c -s $p profiles/$profile`; then\n\t\t\tsel=X\n\t\telse\n\t\t\tsel=\" \"\n\t\tfi\n\t\tselection[$n]=$sel\n\t\tlet \"n=n+1\"\n\tdone\n\tpcount=$n\n\twhile [[ 1 ]]\n\tdo\n\t\techo Select the packages to include in the build for the profile \\'$profile\\':\n\t\techo\n\t\tn=1\n\t\tfor p in ${packages[*]} ; do\n\t\t\techo $n. [${selection[n]}] $p\n\t\t\tlet \"n=n+1\"\n\t\tdone\n\t\techo\n\t\techo \"Enter the number of an add-in to enable/disable,\"\n\t\tread -a response  -p\"(q) quit, (c) clear all, (s) select all, or ENTER to continue:  \"\n\t\techo\n\t\tif [ -z $response ] ; then\n\t\t\tbreak\n\t\telif [ $response == q -o $response == Q ] ; then\n\t\t\texit 1\n\t\telif [ $response == c -o $response == C ] ; then\n\t\t\tfor ((n=1; n < pcount; n++))\n\t\t\tdo\n\t\t\t\tselection[$n]=\" \"\n\t\t\tdone\n\t\telif [ $response == s -o $response == S ] ; then\n\t\t\tfor ((n=1; n < pcount; n++))\n\t\t\tdo\n\t\t\t\tselection[$n]=X\n\t\t\tdone\n\t\telif [ x${selection[response]} = xX ] ; then\n\t\t\tselection[$response]=\" \"\n\t\telse\n\t\t\tselection[$response]=X\n\t\tfi\n\tdone\n\tn=1\n\trm -f profiles/$profile\n\tfor p in ${packages[*]} ; do\n\t\tif [ x${selection[n]} == xX ]; then\n\t\t\techo ${packages[n]} >> profiles/$profile\n\t\tfi\n\t\tlet \"n=n+1\"\n\tdone\n}\n\nhandle_config_error ()\n{\n\tif test `uname` = \"Darwin\"; then\n\t\techo \"\"\n\t\techo \"Have you followed http://www.monodevelop.com/developers/building-monodevelop/#macosx ?\"\n\t\techo \"\"\n\tfi\n\texit 1\n}\n\nconfigure_packages ()\n{\n\trm -f local-config/*\n\tlocalconf=`pwd`/local-config\n\tfor p in `sed -e /#/d -e 's/ /,/g' < profiles/$profile` ; do\n\t\tpath=`echo $p | cut -d ',' -f 1`\n\t\tops=`echo $p | sed -e s,$path,, -e 's/,/ /'g`\n\t\tif test xyes == x$tests; then\n\t\t\tenable_tests=--enable-tests\n\t\telse\n\t\t\tenable_tests=\" \"\n\t\tfi\n\n\t\tif test `uname` != \"Darwin\" || test xno == x$x64; then\n\t\t\tenable_x64=--with-macarch=i386\n\t\telse\n\t\t\tenable_x64=--with-macarch=x86_64\n\t\tfi\n\n\t\tprefixarg=\"--prefix=$prefix\"\n\t\tbuilddir=`pwd`/$path/build\n\n\t\tfor p in $ops ; do\n\t\t\targ=`echo $p | cut -d '=' -f 1`\n\t\t\tif [ $arg == \"--addins-dir\" ] ; then\n\t\t\t\tbuilddir=`pwd`/$path/`echo $p | cut -d '=' -f 2`\n\t\t\tfi\n\t\t\tif [ $p == \"--no-prefix\" ] ; then\n\t\t\t\tprefixarg=\"\"\n\t\t\tfi\n\t\tdone\n\t\tif test xyes == x$release; then\n\t\t\tops=\"$ops --enable-release\"\n\t\tfi\n\n\t\ttitle=\"Configuring package: $path\"\n\t\tnc=`echo $title | wc -m`\n\t\techo $title\n\t\tfor ((n=1; n < nc; n++)); do echo -n \"-\"; done\n\t\techo\n\t\techo \"Configuration options: $ops\"\n\t\tif test -a $path/autogen.sh; then\n\t\t\tsct=\"./autogen.sh $enable_tests $enable_x64\"\n\t\telif test -a $path/configure; then\n\t\t\tsct=./configure\n\t\telif test -a $path/configure.sh; then\n\t\t\tsct=./configure.sh\n\t\telse\n\t\t\techo -en '\\033[0;31m'\n\t\t\techo Configuration script not found in directory: $path\n\t\t\techo Try running $ git submodule update --init --recursive\n\t\t\techo -en '\\033[0m'\n\t\t\texit 1\n\t\tfi\n\t\tpushd $path > /dev/null\n\t\tPKG_CONFIG_PATH=$localconf:$PKG_CONFIG_PATH $sct $prefixarg $ops || handle_config_error\n\t\tpopd > /dev/null\n\t\tcreate_local_config $path $builddir\n\t\tpackages=\"$packages $path\"\n\tdone\n\trm -f local-config/main.addins\n\treturn 0\n}\n\ncreate_local_config ()\n{\n\t# Get the version from the version.config file, if it exists\n\tif test -a version.config; then\n\t\tver=`grep ^Version version.config|cut -d '=' -f 2|tr -d '\\n'`\n\telse\n\t\tver=VERSION\n\tfi\n\n\t# Copy the .pc file to local-config, and set the base lib directory\n\tmkdir -p local-config\n\tbuilddir=$2\n\tfor f in `ls $1/*.pc.in 2>/dev/null`; do\n\t\tpcfile=`echo $f | sed s,.*/,, | sed s/\\.in$//`\n\t\tsed -e s,libdir=.*,libdir=$builddir, -e s/@VERSION@/$ver/g $f> local-config/$pcfile\n\tdone\n\n\t# Generate the .addins file for the package\n\taddins=local-config/`echo $path | sed s,/,_,g`.addins\n\techo \"<Addins>\" > $addins\n\techo \"  <Directory include-subdirs=\\\"true\\\">$builddir</Directory>\" >> $addins\n\techo \"</Addins>\" >> $addins\n}\n\necho\n\nwhile test x$1 != x; do\n\tcase $1 in\n\t\t--enable-tests)\n\t\t\ttests=yes\n\t\t\t;;\n\t\t--enable-release)\n\t\t\trelease=yes\n\t\t\t;;\n\t\t--enable-mac32)\n\t\t\tx64=no\n\t\t\t;;\n\t\t--prefix=*)\n\t\t\tprefix=`echo $1 | sed 's/--prefix=//'`\n\t\t\t;;\n\t\t--prefix)\n\t\t\tshift\n\t\t\tprefix=$1\n\t\t\t;;\n\t\t--select)\n\t\t\tselect=yes\n\t\t\t;;\n\t\t--profile=*)\n\t\t\tprof=`echo $1 | sed 's/--profile=//'`\n\t\t\tprofile=$prof\n\t\t\t;;\n\t\t--profile)\n\t\t\tshift\n\t\t\tprofile=$1\n\t\t\t;;\n\t\t--help)\n\t\t\tusage\n\t\t\texit\n\t\t\t;;\n\t\t*)\n\t\t\techo Unknown argument $1 >&2\n\t\t\tusage\n\t\t\texit 1\n\t\t\t;;\n\tesac\n\tshift\ndone\n\nif test `uname` = \"Darwin\" && test \"x$profile\" = \"xdefault\"; then\n\tprofile=\"mac\"\nfi\n\nvalidate_profile \"$profile\"\nif [ ! $? -eq 1 ]; then\n\techo \"The build profile '$profile' does not exist. A new profile will be created.\"\nfi\nif [ x$select == xyes -o ! -a profiles/$profile ]; then\n\tselect_packages\nfi\n\nif test `uname` = \"Darwin\"; then\n\t# if building on bots or in default environment, fix up paths to use system Mono\n\tif test \"x$BUILD_REVISION\" != \"x\" -o \"x$DYLD_FALLBACK_LIBRARY_PATH\" = \"x\"; then\n\t\texport DYLD_FALLBACK_LIBRARY_PATH=\"/Library/Frameworks/Mono.framework/Versions/Current/lib:/lib:/usr/lib\"\n\t\texport PATH=\"/Library/Frameworks/Mono.framework/Versions/Current/bin:$PATH\"\n\t\texport ACLOCAL_FLAGS=\"-I /Library/Frameworks/Mono.framework/Versions/Current/share/aclocal\"\n\tfi\n\t# add in libsvn's directory as a fallback path. user-set paths will override it\n\texport DYLD_FALLBACK_LIBRARY_PATH=\"$DYLD_FALLBACK_LIBRARY_PATH:/Library/Developer/CommandLineTools/usr/lib:/usr/local/lib:`pwd`/main/build/bin\"\n\n\truby dependency_checker.rb || exit 1\nfi\n\nconfigure_packages\n[ $? -eq 1 ] && exit 1\n\necho \"PROFILE = $profile\" > config.make\necho -n \"SUBDIRS = \" >> config.make\n\necho Configuration Summary\necho ---------------------\necho\necho \"MonoDevelop has been configured with \"\necho \"    prefix = $prefix\"\necho \"    profile = $profile\"\necho\necho \"Packages included in the build:\"\nfor p in $packages; do\n\techo \"\\\\\" >> config.make\n\techo -n \"\t$p\" >> config.make\n\techo \"    $p\"\ndone\necho >> config.make\necho\n\necho -n  \"prefix=$prefix\" >> config.make\n"
        },
        {
          "name": "dependency_checker.rb",
          "type": "blob",
          "size": 1.951171875,
          "content": "require 'pp'\n\nNOT_INSTALLED_VERSION=\"-1\"\n\nXAMARIN_MAC_MIN_VERSION=\"2.3\"\nXAMARIN_MAC_VERSION=lambda { product_version (\"/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/Version\") }\nXAMARIN_MAC_URL=\"http://www.xamarin.com\"\n\nMONO_MIN_VERSION=\"4.2\"\nMONO_VERSION=lambda { mono_version(\"/Library/Frameworks/Mono.framework/Versions/Current/bin/mono\") }\nMONO_URL=\"http://mono-project.com\"\n\nclass String\n\tdef red;            \"\\e[31m#{self}\\e[0m\" end\nend\n\ndef compare_version(first, second)\n\tval1 = first.split('.').map { |x| x.to_i }\n\tval2 = second.split('.').map { |x| x.to_i }\n\n\treturn val1 <=> val2\nend\n\ndef mono_version(binary)\n\tif File.exist?(\"#{binary}\")\n\t\tactual_version = `#{binary} --version`\n\t\t# Extract the version number from a string like this:\n\t\t# \t`Mono JIT compiler version 4.2.0 (explicit/08b7103 Mon Aug 17 16:58:52 EDT 2015)`\n\t\tactual_version = actual_version.split('version ')[1]\n\t\treturn actual_version.split(' ')[0]\n\telse\n\t\treturn NOT_INSTALLED_VERSION\n\tend\nend\n\ndef product_version(version_file)\n\tif File.exist?(version_file)\n\t\treturn File.open(version_file, 'rb') { |f| f.read }\n\telse\n\t\treturn NOT_INSTALLED_VERSION\n\tend\nend\n\ndef check_product(product_min_version, product_version, product_url, product_name)\n\tactual_version = product_version.call\n\tretval = compare_version(actual_version, product_min_version)\n\n\tif (retval < 0)\n\t\tif (actual_version == NOT_INSTALLED_VERSION)\n\t\t\tputs \"You do not have #{product_name} installed.\".red\n\t\telse\n\t\t\tputs \"Your installed #{product_name} (#{actual_version}) is too old, please use #{product_min_version} or newer\".red\n\t\tend\n\t\tputs \"You can download it from #{product_url}\".red\n\t\tputs\n\tend\n\treturn retval\nend\n\ndef check_monodevelop_dependencies()\n\tresult = [\n\t\tcheck_product(MONO_MIN_VERSION, MONO_VERSION, MONO_URL, \"Mono\"),\n\t\tcheck_product(XAMARIN_MAC_MIN_VERSION, XAMARIN_MAC_VERSION, XAMARIN_MAC_URL, \"Xamarin.Mac\")\n\t]\n\tif (result.min < 0)\n\t\texit 1\n\tend\nend\n\n$stdout.sync = true\ncheck_monodevelop_dependencies() if __FILE__==$0\n"
        },
        {
          "name": "main",
          "type": "tree",
          "content": null
        },
        {
          "name": "profiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup",
          "type": "tree",
          "content": null
        },
        {
          "name": "top_level_monodevelop",
          "type": "blob",
          "size": 0.08984375,
          "content": "This file exists only to make sure our test suite can locate the top level of the checkout\n\n"
        },
        {
          "name": "version-checks",
          "type": "blob",
          "size": 3.6875,
          "content": "#!/bin/bash -e\n\ncd `dirname $0`\ntop_srcdir=`pwd`\nscript_name=./`basename $0`\n\n#\n# Script to check versions of dependencies\n# To check the version for all dependencies, just run the script with no arguments.\n# To check the version for a specific dependency, run the script with \"check <dependency>\"\n# To reset a dependency to the needed version, run the script with \"reset <dependency>\"\n# It is also possible to pass \"reset all\" to reset all dependencies\n#\n\n# md-addins\nDEP[0]=md-addins\nDEP_NAME[0]=MDADDINS\nDEP_PATH[0]=${top_srcdir}/../md-addins\nDEP_MODULE[0]=git@github.com:xamarin/md-addins.git\nDEP_NEEDED_VERSION[0]=cc1e7e1bd40987e36d86515e206f59b050f5569f\nDEP_BRANCH_AND_REMOTE[0]=\"master origin/master\"\n\n# other dependencies\n# DEP[1]=...\n# ...\n\nfunction fetch_variables\n{\n\tIGNORE_VERSION=`eval echo \\\\\\$IGNORE_${DEP_NAME[$1]}_VERSION`\n\tTHE_PATH=${DEP_PATH[$1]}\n\tNAME=${DEP[$1]}\n\tNEEDED_VERSION=${DEP_NEEDED_VERSION[$1]}\n\tif test -d \"$THE_PATH\"; then\n\t\tcd \"$THE_PATH\"\n\t\tVERSION=`git log | head -1 | awk '{print $2}' 2>/dev/null`\n\t\tBRANCH=`git status | head -1 | awk '{print $4}' 2>/dev/null`\n\t\tcd \"$top_srcdir\"\n\telse\n\t\tVERSION=\n\t\tBRANCH=\n\tfi\n\tBRANCH_AND_REMOTE=${DEP_BRANCH_AND_REMOTE[$1]}\n\tNEEDED_BRANCH=`echo \"$BRANCH_AND_REMOTE\" | sed -e 's, .*,,'`\n\tMODULE=${DEP_MODULE[$1]}\n}\n\nfunction reset_version\n{\n\tfetch_variables $1\n\n\tif test -d \"$THE_PATH\"; then\n\t\tcd \"$THE_PATH\"\n\t\tif ! git show \"$NEEDED_VERSION\" >/dev/null 2>&1; then\n\t\t\techo \"*** [$NAME] git fetch $NAME\"\n\t\t\tgit fetch\n\t\tfi\n\telse\n\t\techo \"*** [$NAME] git clone $MODULE\"\n\t\tcd \"`dirname $THE_PATH`\"\n\t\tgit clone $MODULE\n\tfi\n\n\tcd \"$THE_PATH\"\n\techo \"*** [$NAME] git checkout $NEEDED_BRANCH\"\n\tgit checkout $NEEDED_BRANCH || git checkout -b $BRANCH_AND_REMOTE\n\techo \"*** [$NAME] git reset --hard $NEEDED_VERSION\"\n\t(git reset --hard $NEEDED_VERSION && git submodule update --init --recursive) || exit 1;\n\n\tcd \"$top_srcdir\"\n}\n\nfunction check_version\n{\n\tfetch_variables $1\n\n\tif [[ \"x$IGNORE_VERSION\" == \"x\" ]]; then\n\t\tif test ! -d \"$THE_PATH\"; then\n\t\t\techo \"Your $NAME checkout is missing, please run '$script_name --reset $NAME'\"\n\t\t\tFAILURE=1\n\t\telse\n\t\t\tif [[ \"x$VERSION\" != \"x$NEEDED_VERSION\" || \"x$BRANCH\" != \"x$NEEDED_BRANCH\" ]]; then\n\t\t\t\techo \"Your $NAME version is out of date, please run '$script_name --reset $NAME'\"\n\t\t\t\tFAILURE=1\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction reset_all\n{\n\tI=0\n\twhile [[ \"x${#DEP[@]}\" != \"x$I\" ]]; do\n\t\treset_version $I\n\t\tlet I=$I+1\n\tdone\n}\n\nfunction check_all\n{\n\tI=0\n\twhile [[ \"x${#DEP[@]}\" != \"x$I\" ]]; do\n\t\tcheck_version $I\n\t\tlet I=$I+1\n\tdone\n}\n\nfunction find_dep\n{\n\tI=0\n\tDEP_IDX=\n\twhile [[ \"x${#DEP[@]}\" != \"x$I\" ]]; do\n\t\tif [[ \"x${DEP[$I]}\" == \"x\" ]]; then\n\t\t\techo \"There is no dependency named $1\"\n\t\t\texit 1\n\t\telif [[ \"x${DEP[$I]}\" == \"x$1\" ]]; then\n\t\t\tDEP_IDX=$I\n\t\t\tbreak;\n\t\tfi\n\t\tlet I=$I+1\n\tdone\n\tif [[ \"x$DEP_IDX\" == \"x\" ]]; then\n\t\techo \"There is no dependency named $1\"\n\t\texit 1\n\tfi\n}\n\nFAILURE=0\n\nif [[ \"x$1\" == \"x\" ]]; then\n\tcheck_all\nelif [[ \"x$1\" == \"x--check-all\" ]]; then\n\tcheck_all\nelif [[ \"x$1\" == \"x--check\" && \"x$2\" == \"xall\" ]]; then\n\tcheck_all\nelif [[ \"x$1\" == \"x--check\" && \"x$2\" == \"x\" ]]; then\n\tcheck_all\nelif [[ \"x$1\" == \"x--check\" ]]; then\n\tshift\n\twhile [[ \"x$1\" != \"x\" ]]; do\n\t\tfind_dep $1\n\t\tcheck_version $DEP_IDX\n\t\tshift\n\tdone\nelif [[ \"x$1\" == \"x--reset-all\" ]]; then\n\treset_all\nelif [[ \"x$1\" == \"x--reset\" && \"x$2\" == \"xall\" ]]; then\n\treset_all\nelif [[ \"x$1\" == \"x--reset\" && \"x$2\" == \"x\" ]]; then\n\treset_all\nelif [[ \"x$1\" == \"x--reset\" ]]; then\n\tshift\n\twhile [[ \"x$1\" != \"x\" ]]; do\n\t\tfind_dep $1\n\t\treset_version $DEP_IDX\n\t\tshift\n\tdone\nelse\n\techo Unknown arguments: $@\n\techo 'Expected --reset|--check <list of dependencies>'\n\texit 1\nfi\n\nif [[ \"x$FAILURE\" == \"x1\" ]]; then\n\techo \"One or more modules needs update\"\n\texit 1\nelse\n\techo \"All dependent modules up to date\"\nfi\n"
        },
        {
          "name": "version.config",
          "type": "blob",
          "size": 0.08203125,
          "content": "Version=8.6\nLabel=8.6 Preview\nCompatVersion=8.0\nIsPreview=true\nIsMajorPreview=false\n"
        }
      ]
    }
  ]
}