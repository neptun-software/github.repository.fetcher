{
  "metadata": {
    "timestamp": 1736711097840,
    "page": 910,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dotpcap/sharppcap",
      "stars": 1386,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 1.021484375,
          "content": "# Copyright 2020-2021 Chris Morgan <chmorgan@gmail.com>\n# SPDX-License-Identifier: MIT\n\nenvironment:\n  # This key is encrypted using secdev's appveyor private key,\n  # dissected only on master builds (not PRs) and is used during\n  # npcap OEM installation\n  npcap_oem_key:\n    secure: DD54X4DVUeG/IpY41fFPYgl3EfQRTEt5BoibQDm0MeI=\n\n# Disable automatic AppVeyor build logic\nbuild: off\nskip_branch_with_pr: true\nbranches:\n  only:\n    - master\n\nimage:\n  - Visual Studio 2022\n  - macos\n\nfor:\n  - matrix:\n      only:\n        - image: Visual Studio 2022\n    install:\n      - ps: .\\scripts\\install-windows.ps1\n      - ps: .\\scripts\\Install-npcap.ps1\n      - ps: .\\scripts\\install-winpkfilter.ps1\n    build_script:\n      - dotnet build -c Release\n    test_script:\n      - bash scripts/test.sh --filter \"TestCategory!=RemotePcap&TestCategory!=WinDivert\"\n\n  - matrix:\n      only:\n        - image: macos\n    install:\n      - brew install --cask dotnet-sdk\n      - sudo -E bash scripts/install-libpcap.sh\n    test_script:\n      - sudo -E bash scripts/test.sh\n"
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5302734375,
          "content": "# Copyright 2018 Jan Pluskal\n# SPDX-License-Identifier: MIT\n\n# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.41015625,
          "content": "# Copyright 2018 Jan Pluskal\r\n# SPDX-License-Identifier: MIT\r\n\r\n# Created by https://www.gitignore.io/api/visualstudio\r\n\r\n### VisualStudio ###\r\n## Ignore Visual Studio temporary files, build results, and\r\n## files generated by popular Visual Studio add-ons.\r\n##\r\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\r\n\r\n# User-specific files\r\n*.suo\r\n*.user\r\n*.userosscache\r\n*.sln.docstates\r\n\r\n# User-specific files (MonoDevelop/Xamarin Studio)\r\n*.userprefs\r\n\r\n# Build results\r\n[Dd]ebug/\r\n[Dd]ebugPublic/\r\n[Rr]elease/\r\n[Rr]eleases/\r\nx64/\r\nx86/\r\nbld/\r\n[Bb]in/\r\n[Oo]bj/\r\n[Ll]og/\r\n\r\n# Visual Studio 2015 cache/options directory\r\n.vs/\r\n# Uncomment if you have tasks that create the project's static files in wwwroot\r\n#wwwroot/\r\n\r\n# MSTest test Results\r\n[Tt]est[Rr]esult*/\r\n[Bb]uild[Ll]og.*\r\n\r\n# NUNIT\r\n*.VisualState.xml\r\nTestResult.xml\r\n\r\n# Build Results of an ATL Project\r\n[Dd]ebugPS/\r\n[Rr]eleasePS/\r\ndlldata.c\r\n\r\n# .NET Core\r\nproject.lock.json\r\nproject.fragment.lock.json\r\nartifacts/\r\n**/Properties/launchSettings.json\r\n\r\n*_i.c\r\n*_p.c\r\n*_i.h\r\n*.ilk\r\n*.meta\r\n*.obj\r\n*.pch\r\n*.pdb\r\n*.pgc\r\n*.pgd\r\n*.rsp\r\n*.sbr\r\n*.tlb\r\n*.tli\r\n*.tlh\r\n*.tmp\r\n*.tmp_proj\r\n*.log\r\n*.vspscc\r\n*.vssscc\r\n.builds\r\n*.pidb\r\n*.svclog\r\n*.scc\r\n\r\n# Chutzpah Test files\r\n_Chutzpah*\r\n\r\n# Visual C++ cache files\r\nipch/\r\n*.aps\r\n*.ncb\r\n*.opendb\r\n*.opensdf\r\n*.sdf\r\n*.cachefile\r\n*.VC.db\r\n*.VC.VC.opendb\r\n\r\n# Visual Studio profiler\r\n*.psess\r\n*.vsp\r\n*.vspx\r\n*.sap\r\n\r\n# TFS 2012 Local Workspace\r\n$tf/\r\n\r\n# Guidance Automation Toolkit\r\n*.gpState\r\n\r\n# ReSharper is a .NET coding add-in\r\n_ReSharper*/\r\n*.[Rr]e[Ss]harper\r\n*.DotSettings.user\r\n\r\n# JustCode is a .NET coding add-in\r\n.JustCode\r\n\r\n# TeamCity is a build add-in\r\n_TeamCity*\r\n\r\n# DotCover is a Code Coverage Tool\r\n*.dotCover\r\n\r\n# Visual Studio code coverage results\r\n*.coverage\r\n*.coveragexml\r\n\r\n# NCrunch\r\n_NCrunch_*\r\n.*crunch*.local.xml\r\nnCrunchTemp_*\r\n\r\n# MightyMoose\r\n*.mm.*\r\nAutoTest.Net/\r\n\r\n# Web workbench (sass)\r\n.sass-cache/\r\n\r\n# Installshield output folder\r\n[Ee]xpress/\r\n\r\n# DocProject is a documentation generator add-in\r\nDocProject/buildhelp/\r\nDocProject/Help/*.HxT\r\nDocProject/Help/*.HxC\r\nDocProject/Help/*.hhc\r\nDocProject/Help/*.hhk\r\nDocProject/Help/*.hhp\r\nDocProject/Help/Html2\r\nDocProject/Help/html\r\n\r\n# Click-Once directory\r\npublish/\r\n\r\n# Publish Web Output\r\n*.[Pp]ublish.xml\r\n*.azurePubxml\r\n# TODO: Uncomment the next line to ignore your web deploy settings.\r\n# By default, sensitive information, such as encrypted password\r\n# should be stored in the .pubxml.user file.\r\n#*.pubxml\r\n*.pubxml.user\r\n*.publishproj\r\n\r\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\r\n# checkin your Azure Web App publish settings, but sensitive information contained\r\n# in these scripts will be unencrypted\r\nPublishScripts/\r\n\r\n# NuGet Packages\r\n*.nupkg\r\n# The packages folder can be ignored because of Package Restore\r\n**/packages/*\r\n# except build/, which is used as an MSBuild target.\r\n!**/packages/build/\r\n# Uncomment if necessary however generally it will be regenerated when needed\r\n#!**/packages/repositories.config\r\n# NuGet v3's project.json files produces more ignorable files\r\n*.nuget.props\r\n*.nuget.targets\r\n\r\n# Microsoft Azure Build Output\r\ncsx/\r\n*.build.csdef\r\n\r\n# Microsoft Azure Emulator\r\necf/\r\nrcf/\r\n\r\n# Windows Store app package directories and files\r\nAppPackages/\r\nBundleArtifacts/\r\nPackage.StoreAssociation.xml\r\n_pkginfo.txt\r\n\r\n# Visual Studio cache files\r\n# files ending in .cache can be ignored\r\n*.[Cc]ache\r\n# but keep track of directories ending in .cache\r\n!*.[Cc]ache/\r\n\r\n# Others\r\nClientBin/\r\n~$*\r\n*~\r\n*.dbmdl\r\n*.dbproj.schemaview\r\n*.jfm\r\n*.pfx\r\n*.publishsettings\r\norleans.codegen.cs\r\n\r\n# Since there are multiple workflows, uncomment next line to ignore bower_components\r\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\r\n#bower_components/\r\n\r\n# RIA/Silverlight projects\r\nGenerated_Code/\r\n\r\n# Backup & report files from converting an old project file\r\n# to a newer Visual Studio version. Backup files are not needed,\r\n# because we have git ;-)\r\n_UpgradeReport_Files/\r\nBackup*/\r\nUpgradeLog*.XML\r\nUpgradeLog*.htm\r\n\r\n# SQL Server files\r\n*.mdf\r\n*.ldf\r\n*.ndf\r\n\r\n# Business Intelligence projects\r\n*.rdl.data\r\n*.bim.layout\r\n*.bim_*.settings\r\n\r\n# Microsoft Fakes\r\nFakesAssemblies/\r\n\r\n# GhostDoc plugin setting file\r\n*.GhostDoc.xml\r\n\r\n# Node.js Tools for Visual Studio\r\n.ntvs_analysis.dat\r\nnode_modules/\r\n\r\n# Typescript v1 declaration files\r\ntypings/\r\n\r\n# Visual Studio 6 build log\r\n*.plg\r\n\r\n# Visual Studio 6 workspace options file\r\n*.opt\r\n\r\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\r\n*.vbw\r\n\r\n# Visual Studio LightSwitch build output\r\n**/*.HTMLClient/GeneratedArtifacts\r\n**/*.DesktopClient/GeneratedArtifacts\r\n**/*.DesktopClient/ModelManifest.xml\r\n**/*.Server/GeneratedArtifacts\r\n**/*.Server/ModelManifest.xml\r\n_Pvt_Extensions\r\n\r\n# Paket dependency manager\r\n.paket/paket.exe\r\npaket-files/\r\n\r\n# FAKE - F# Make\r\n.fake/\r\n\r\n# JetBrains Rider\r\n.idea/\r\n*.sln.iml\r\n\r\n# CodeRush\r\n.cr/\r\n\r\n# Python Tools for Visual Studio (PTVS)\r\n__pycache__/\r\n*.pyc\r\n\r\n# Cake - Uncomment if you are using it\r\n# tools/**\r\n# !tools/packages.config\r\n\r\n# Telerik's JustMock configuration file\r\n*.jmconfig\r\n\r\n# BizTalk build output\r\n*.btp.cs\r\n*.btm.cs\r\n*.odx.cs\r\n*.xsd.cs\r\n\r\n### VisualStudio Patch ###\r\n# By default, sensitive information, such as encrypted password\r\n# should be stored in the .pubxml.user file.\r\n\r\n\r\n# End of https://www.gitignore.io/api/visualstudio\r\n\r\nScripts/htmldocs\r\nScripts/monodoc_output\r\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.3125,
          "content": "<!--\nCopyright 2020-2021 Ayoub Kaanich <kayoub5@live.com>\nSPDX-License-Identifier: MIT\n-->\n<Project>\n <PropertyGroup>\n   <Deterministic>true</Deterministic>\n   <DebugType>full</DebugType>\n   <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\n   <LangVersion>8.0</LangVersion>\n </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "Examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "History.md",
          "type": "blob",
          "size": 2.5302734375,
          "content": "\n## History\n\nTamir Gal started the SharpPcap project around 2004\\. He wanted to use WinPcap in a .NET application while working on his final project for university. The project involved analyzing and decoding VoIP traffic and he wanted to keep coding simple with C# which has time saving features like garbage collection. Accessing the WinPcap API from .NET seemed to be quite a popular requirement, and he found some useful projects on CodeProject's website that let you do just that.\n\nThe projects available at the time did not lend themselves to being used to capture and analyze traffic. Some had mixed ui and capture code, others had reimplemented some of WinPcap's functions in C# and others lacked features such as offline file reading or source code.\n\nAnd so, Tamir decided to start his own library for the task. Several versions in the 1.x series were released. Development slowed towards mid-2007 when the last version in the 1.x series was released, SharpPcap 1.6.2.\n\nChris Morgan took over development of SharpPcap in November of 2008\\. Since then SharpPcap has had major internal rewrites and API improvements including Linux, Mac support.\n\nIn late February 2010 SharpPcap v3.0 was released. This release represents a rewrite of SharpPcap's packet parsers. Packet parsing functionality was broken out into a new library, [Packet.Net](http://packetnet.sf.net). SharpPcap takes care of interfacing with libpcap/winpcap and Packet.Net takes care of packet dissection and creation. The details of Packet.Net's architecture will be discussed later in the turotial.\n\nSharpPcap v3.5 was released February 1st, 2011\\. The 3.5 release contained significant API changes as well as WinPcap remote capture and AirPcap support.\n\nSharpPcap v4.0 was released September 13, 2011\\. The 4.0 release contains significant performance improvements due to contributions from Michael Giagnocavo. SharpPcap 4.0 is >50% faster than the last revision, v3.7\\. It also contains API cleanup for reading and writing to capture files in the form of new CaptureFileWriterDevice and CaptureFileReaderDevice that replaces an older and much more confusing way of writing to capture files and makes reading and writing analogous.\n\nSharpPcap v4.2 was released January 14th, 2013\\. 4.2 adds support for IEEE 802.1Q vlan tags, corrects access modifiers in Packet to enable 3rd party assemblies to use this class and introduces Packet.Extract(). Packet.Extract() replaces per-packet GetEncapsulated() methods, now deprecated, with a single high level routine that is a part of the base class of all captured packets.\n\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.3271484375,
          "content": "[![](https://img.shields.io/nuget/v/SharpPcap.svg?label=NuGet&logo=nuget)](https://www.nuget.org/packages/SharpPcap/)\n[![.NET Core](https://github.com/dotpcap/sharppcap/actions/workflows/dotnet-core.yml/badge.svg)](https://github.com/dotpcap/sharppcap/actions/workflows/dotnet-core.yml)\n[![](https://img.shields.io/appveyor/ci/chmorgan/sharppcap/master.svg?label=AppVeyor&logo=appveyor)](https://ci.appveyor.com/project/chmorgan/sharppcap/branch/master)\n[![](https://dev.azure.com/dotpcap/dotpcap/_apis/build/status/dotpcap.sharppcap)](https://dev.azure.com/dotpcap/dotpcap/_build/latest?definitionId=2&branchName=master)\n[![](https://circleci.com/gh/dotpcap/sharppcap/tree/master.svg?style=svg)](https://circleci.com/gh/dotpcap/sharppcap/tree/master)\n[![](https://codecov.io/gh/dotpcap/sharppcap/branch/master/graph/badge.svg?token=znqv9q5lVA)](https://codecov.io/gh/dotpcap/sharppcap)\n[![](https://badges.gitter.im/SharpPcap/community.svg)](https://gitter.im/SharpPcap/community)\n\n# sharppcap\nFully managed, cross platform (Windows, Mac, Linux) .NET library for capturing packets from live and file based devices\n\nThe official SharpPcap repository.\n\n# Table of Contents\n1. [Features](#features)\n2. [Examples](#examples)\n   - [Listing Devices](#listing-devices)\n   - [Capturing Packets](#capturing-packets)\n   - [Reading from a Capture File](#reading-from-a-capture-file)\n   - [Writing to a Capture File](#writing-to-a-capture-file)\n3. [CI Support](#ci-support)\n4. [Releases](#releases)\n5. [Platform Specific Notes](#platform-specific-notes)\n6. [Migration from 5.x to 6.0](#migration-from-5x-to-60)\n\n<a name=\"features\"></a>\n\n# Features\nFor packet dissection and creation, see [Packet.Net](https://github.com/chmorgan/packetnet).\n\n* On Linux, support for [libpcap](http://www.tcpdump.org/manpages/pcap.3pcap.html)\n\n* On Windows, support for:\n  * Npcap (formerly WinPcap) extensions, see [Npcap API guide](https://nmap.org/npcap/guide/npcap-devguide.html#npcap-api)\n  * WinDivert (https://www.reqrypt.org/windivert.html)\n\n* On all platforms:\n  * Live device lists\n  * Statistics\n  * Reading packets from Live Devices (actual network devices) and Offline Devices (Capture files)\n  * Support for [Berkeley Packet Filters](https://www.tcpdump.org/manpages/pcap-filter.7.html)\n  * Dumping packets to Pcap files.\n  * Pcap and pcap-ng format (when using libpcap >=1.1.0 or npcap)\n  * ReadOnlySpan<> is used to avoid memory allocation and copying inside of SharpPcap and provide the best performance.\n    * Helper methods are provided to convert to object instances if it is desired to persist captured packets in memory.\n\n* NativeLibrary support\n  * Capture library resolution operates smoothly across Linux, OSX, and Windows\n  * Cleanly loads libpcap on Linux whether the distro has a symlink to libpcap.so or not.\n\n* .NET Core 3 and .NET Framework support\n\n<a name=\"examples\"></a>\n\n# Examples\n\nSee the [Examples](https://github.com/chmorgan/sharppcap/tree/master/Examples) folder for a range of full example projects using SharpPcap\n\n<a name=\"listing-devices\"></a>\n\n## Listing devices\n   ```cs\n   var devices = CaptureDeviceList.Instance;\n   foreach (var dev in devices)\n       Console.WriteLine(\"{0}\\n\", dev.ToString());\n   ```\n\n<a name=\"capturing-packets\"></a>\n\n## Capturing packets\n   ```cs\n   void Device_OnPacketArrival(object s, PacketCapture e)\n   {\n       Console.WriteLine(e.GetPacket());\n   }\n\n   using var device = LibPcapLiveDeviceList.Instance[0];\n   device.Open();\n   device.OnPacketArrival += Device_OnPacketArrival;\n   device.StartCapture();\n   ```\n\n<a name=\"reading-from-a-capture-file\"></a>\n\n## Reading from a capture file\n   ```cs\n   void Device_OnPacketArrival(object s, PacketCapture e)\n   {\n       Console.WriteLine(e.GetPacket());\n   }\n\n   using var device = new CaptureFileReaderDevice(\"filename.pcap\");\n   device.Open();\n   device.OnPacketArrival += Device_OnPacketArrival;\n   device.Capture();\n   ```\n\n<a name=\"writing-to-a-capture-file\"></a>\n\n## Writing to a capture file\n   ```cs\n   using var device = new CaptureFileWriterDevice(\"somefilename.pcap\", System.IO.FileMode.Open);\n   var bytes = new byte[] { 1, 2, 3, 4 };\n   device.Write(bytes);\n   ```\n\n<a name=\"ci-support\"></a>\n\n# CI support\nWe have support for a number of CI systems for a few reasons:\n\n* Diversity of CI systems in case one of them shuts down\n* Examples in case you'd like to customize SharpPcap and make use of one of these CI systems for internal builds. Note that we assume you are following the license for the library.\n\n<a name=\"releases\"></a>\n\n# Releases\nSharpPcap is released via nuget\n\n<a name=\"platform-specific-notes\"></a>\n\n# Platform specific notes\n* OSX (at least as of 11.1) lacks libpcap with pcap_open\n\n# Thanks\n\nSharpPcap is where it is today because of a number of developers who have provided improvements and fixes\nand users that have provided helpful feedback through issues and feature requests.\n\nWe are especially appreciative of a number of projects we build upon (as SharpPcap is a C# wrapper):\n\n* libpcap - thank you so much for releasing 1.10\n* npcap - for continuing packet capture support on Windows\n\n<a name=\"migration-from-5x-to-60\"></a>\n\n# Migration from 5.x to 6.0\n\nWe hope that you'll find the 6.x api to be cleaner and easier to use.\n\n6.0 brings a number of cleanups that have resulted in API breakage for 5.x users.\n\nTo aid with the migration from 5.x to 6.0 here is a list of some of the changes you'll have to make to your\nSharpPcap usage.\n\nThe examples are also a great resource as they show working examples using the latest API.\n\n* Packet data is returned via PacketCapture which makes use of ReadOnlySpan<>.\n  * Conversion from ReadOnlySpan<> to RawCapture is performed by PacketCapture.GetPacket().\n  * This avoids allocation of memory during packet capture.\n  * By avoiding memory allocation and memory copying, raw capture performance may be up to 30% faster.\n  * Span's are ideal for use cases where packets are being dumped to disk for later processing.\n* NativeLibrary is used for improved capture library resolution\n  * Improves library resolution situation on Linux distros where there is a libpcap.so.X.Y symlink but no libpcap.so symlink\n  * Support for Mono DllMap has been removed as Mono supports NativeLibrary. See https://www.mono-project.com/news/2020/08/24/native-loader-net5/\n* Devices are IDisposable\n  * Remove calls to Close()\n  * Switch 'var device = xxx;'to 'using device = xxx;'\n* Rename OpenFlags -> DeviceModes\n* Open() methods have been collapsed into fewer methods with default variables.\n* DeviceMode has been replaced by DeviceModes as DeviceMode was not able to cover all of the combinations of ways you could open a device.\n* NpcapDevice -> LibPcapLiveDevice\n  * If you are using NpcapDevice, you should consider using LibPcapLiveDevice. The latest versions of Npcap come with\nnewer versions of libpcap that provide almost all of the functionality of Npcap native APIs.\n  * The current gap here is statistics mode, currently only supported by Npcap.\n  * There has been talk of a statistics mode wrapper that would provide similar functionality, albeit without\nthe same level of efficiency as if it were done in the kernel or driver as on Windows, for libpcap systems.\n* WinPcap has been deprecated\n  * We recommend switching to LibPcapLiveDevice\n* Remote authentication\n  * If you are using RemoteAuthentication some functionality has been folded into this class and the api changed\nto remove usage of ICredentials and NetworkCredentials.\n"
        },
        {
          "name": "REUSE.toml",
          "type": "blob",
          "size": 1.3056640625,
          "content": "# Copyright 2023-2024 Ayoub Kaanich <kayoub5@live.com>\n# SPDX-License-Identifier: MIT\nversion = 1\nSPDX-PackageName = \"sharppcap\"\nSPDX-PackageSupplier = \"Chris Morgan <chmorgan@gmail.com>\"\nSPDX-PackageDownloadLocation = \"https://github.com/dotpcap/sharppcap\"\n\n[[annotations]]\npath = [\n    \"Examples/**\",\n    \"SharpPcap.sln\",\n    \"Test/capture_files/10k_packets.pcap\",\n    \"Test/capture_files/arp_request_response.pcap\",\n    \"Test/capture_files/ipv6_http.pcap\",\n    \"Test/capture_files/ipv6_icmpv6_packet.pcap\",\n    \"Test/capture_files/ip_packet_bogus_length.pcap\",\n    \"Test/capture_files/README\",\n    \"Test/capture_files/tcp.pcap\",\n    \"Test/capture_files/tcp_with_extra_bytes.pcap\",\n    \"Test/capture_files/test_stream.pcap\",\n    \"Test/capture_files/udp_dns_request_response.pcap\",\n]\nprecedence = \"aggregate\"\nSPDX-FileCopyrightText = [\n    \"Tamir Gal <tamir@tamirgal.com>\",\n    \"Chris Morgan <chmorgan@gmail.com>\",\n]\nSPDX-License-Identifier = \"MIT\"\n\n[[annotations]]\npath = [\"Tutorial/**\", \"History.md\", \"README.md\", \"renovate.json\"]\nprecedence = \"aggregate\"\nSPDX-FileCopyrightText = \"Chris Morgan <chmorgan@gmail.com>\"\nSPDX-License-Identifier = \"MIT\"\n\n[[annotations]]\npath = \"Test/capture_files/arp_with_vlan.pcap\"\nprecedence = \"aggregate\"\nSPDX-FileCopyrightText = \"Houcem Benali <justhoucem@gmail.com>\"\nSPDX-License-Identifier = \"MIT\"\n"
        },
        {
          "name": "SharpPcap.sln",
          "type": "blob",
          "size": 11.5751953125,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 16\r\nVisualStudioVersion = 16.0.29025.244\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example03.BasicCap\", \"Examples\\Example3.BasicCap\\Example03.BasicCap.csproj\", \"{2B5462B9-068B-46E8-B139-E3B9211A48B1}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example04.BasicCapNoCallback\", \"Examples\\Example4.BasicCapNoCallback\\Example04.BasicCapNoCallback.csproj\", \"{2FF8A255-C168-43A9-9D3C-3EBC05127934}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example05.PcapFilter\", \"Examples\\Example5.PcapFilter\\Example05.PcapFilter.csproj\", \"{0C90249C-27B2-405D-A375-4729E8420AFD}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example06.DumpTCP\", \"Examples\\Example6.DumpTCP\\Example06.DumpTCP.csproj\", \"{A41782A8-6832-4F60-9425-C9A323873B87}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example09.SendPacket\", \"Examples\\Example9.SendPacket\\Example09.SendPacket.csproj\", \"{E8EDD26F-B03A-4CDD-B80C-664C7792F56E}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example10.SendQueue\", \"Examples\\Example10.SendQueue\\Example10.SendQueue.csproj\", \"{BBF3DECE-E4F5-44BE-BE8C-3016202B17ED}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example11.Statistics\", \"Examples\\Example11.Statistics\\Example11.Statistics.csproj\", \"{853D91B2-F70A-4BDA-9297-E9316F50807E}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example12.PacketManipulation\", \"Examples\\Example12.PacketManipulation\\Example12.PacketManipulation.csproj\", \"{EF2ADF08-1333-45D4-BD63-8526CDB22E6D}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example01.IfList\", \"Examples\\Example1.IfList\\Example01.IfList.csproj\", \"{35085F7F-892E-485F-8BD9-59033DA23DA1}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Example02.ArpResolve\", \"Examples\\Example2.ArpResolve\\Example02.ArpResolve.csproj\", \"{35085F7F-892E-485F-8BD9-59033DA23DA9}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QueuingPacketsForBackgroundProcessing\", \"Examples\\QueuingPacketsForBackgroundProcessing\\QueuingPacketsForBackgroundProcessing.csproj\", \"{DD778943-C509-427F-B4EA-F2EA14C651D7}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MultipleFiltersOnDevice\", \"Examples\\MultipleFiltersOnDevice\\MultipleFiltersOnDevice.csproj\", \"{396D2554-7F7A-4740-A2B7-3E30FBB4983A}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WakeOnLan\", \"Examples\\WakeOnLan\\WakeOnLan.csproj\", \"{FB52C08D-D2E9-4D06-A3E9-2F2E66972881}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Test\", \"Test\\Test.csproj\", \"{24795AED-F26F-4EE7-BCA7-900F54FA5A53}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"NpcapRemoteCapture\", \"Examples\\NpcapRemoteCapture\\NpcapRemoteCapture.csproj\", \"{CCC51D54-EF2A-4064-ADDB-BDA66EB29EF6}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WinformsExample\", \"Examples\\WinformsExample\\WinformsExample.csproj\", \"{697E9825-B33B-40EB-B335-738E8D113A14}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ReadingCaptureFile\", \"Examples\\ReadingCaptureFile\\ReadingCaptureFile.csproj\", \"{006A71C0-AB14-49BF-B93D-F4E8C3FB07CA}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CreatingCaptureFile\", \"Examples\\CreatingCaptureFile\\CreatingCaptureFile.csproj\", \"{91ED0828-B374-479C-9EF7-B1924754C3CD}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"SharpPcap\", \"SharpPcap\\SharpPcap.csproj\", \"{559FBD6B-E4D2-4152-BE31-935B7CF7C41A}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{BD6EE69B-A22A-4B1B-84B7-B810768D205B}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\t.gitattributes = .gitattributes\r\n\t\t.gitignore = .gitignore\r\n\t\tLICENSE = LICENSE\r\n\t\tREADME.md = README.md\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WinpkFilterExample\", \"Examples\\WinpkFilterExample\\WinpkFilterExample.csproj\", \"{D87672B4-974D-4464-A615-499978E5943E}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{2B5462B9-068B-46E8-B139-E3B9211A48B1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{2B5462B9-068B-46E8-B139-E3B9211A48B1}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{2B5462B9-068B-46E8-B139-E3B9211A48B1}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{2B5462B9-068B-46E8-B139-E3B9211A48B1}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{2FF8A255-C168-43A9-9D3C-3EBC05127934}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{2FF8A255-C168-43A9-9D3C-3EBC05127934}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{2FF8A255-C168-43A9-9D3C-3EBC05127934}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{2FF8A255-C168-43A9-9D3C-3EBC05127934}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{0C90249C-27B2-405D-A375-4729E8420AFD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{0C90249C-27B2-405D-A375-4729E8420AFD}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{0C90249C-27B2-405D-A375-4729E8420AFD}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{0C90249C-27B2-405D-A375-4729E8420AFD}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{A41782A8-6832-4F60-9425-C9A323873B87}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{A41782A8-6832-4F60-9425-C9A323873B87}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{A41782A8-6832-4F60-9425-C9A323873B87}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{A41782A8-6832-4F60-9425-C9A323873B87}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{E8EDD26F-B03A-4CDD-B80C-664C7792F56E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{E8EDD26F-B03A-4CDD-B80C-664C7792F56E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{E8EDD26F-B03A-4CDD-B80C-664C7792F56E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{E8EDD26F-B03A-4CDD-B80C-664C7792F56E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{BBF3DECE-E4F5-44BE-BE8C-3016202B17ED}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{BBF3DECE-E4F5-44BE-BE8C-3016202B17ED}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{BBF3DECE-E4F5-44BE-BE8C-3016202B17ED}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{BBF3DECE-E4F5-44BE-BE8C-3016202B17ED}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{853D91B2-F70A-4BDA-9297-E9316F50807E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{853D91B2-F70A-4BDA-9297-E9316F50807E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{853D91B2-F70A-4BDA-9297-E9316F50807E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{853D91B2-F70A-4BDA-9297-E9316F50807E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{EF2ADF08-1333-45D4-BD63-8526CDB22E6D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{EF2ADF08-1333-45D4-BD63-8526CDB22E6D}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{EF2ADF08-1333-45D4-BD63-8526CDB22E6D}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{EF2ADF08-1333-45D4-BD63-8526CDB22E6D}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{35085F7F-892E-485F-8BD9-59033DA23DA1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{35085F7F-892E-485F-8BD9-59033DA23DA1}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{35085F7F-892E-485F-8BD9-59033DA23DA1}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{35085F7F-892E-485F-8BD9-59033DA23DA1}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{35085F7F-892E-485F-8BD9-59033DA23DA9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{35085F7F-892E-485F-8BD9-59033DA23DA9}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{35085F7F-892E-485F-8BD9-59033DA23DA9}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{35085F7F-892E-485F-8BD9-59033DA23DA9}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{DD778943-C509-427F-B4EA-F2EA14C651D7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{DD778943-C509-427F-B4EA-F2EA14C651D7}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{DD778943-C509-427F-B4EA-F2EA14C651D7}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{DD778943-C509-427F-B4EA-F2EA14C651D7}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{396D2554-7F7A-4740-A2B7-3E30FBB4983A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{396D2554-7F7A-4740-A2B7-3E30FBB4983A}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{396D2554-7F7A-4740-A2B7-3E30FBB4983A}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{396D2554-7F7A-4740-A2B7-3E30FBB4983A}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{FB52C08D-D2E9-4D06-A3E9-2F2E66972881}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{FB52C08D-D2E9-4D06-A3E9-2F2E66972881}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{FB52C08D-D2E9-4D06-A3E9-2F2E66972881}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{FB52C08D-D2E9-4D06-A3E9-2F2E66972881}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{24795AED-F26F-4EE7-BCA7-900F54FA5A53}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{24795AED-F26F-4EE7-BCA7-900F54FA5A53}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{24795AED-F26F-4EE7-BCA7-900F54FA5A53}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{24795AED-F26F-4EE7-BCA7-900F54FA5A53}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{CCC51D54-EF2A-4064-ADDB-BDA66EB29EF6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{CCC51D54-EF2A-4064-ADDB-BDA66EB29EF6}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{CCC51D54-EF2A-4064-ADDB-BDA66EB29EF6}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{CCC51D54-EF2A-4064-ADDB-BDA66EB29EF6}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{697E9825-B33B-40EB-B335-738E8D113A14}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{697E9825-B33B-40EB-B335-738E8D113A14}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{697E9825-B33B-40EB-B335-738E8D113A14}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{697E9825-B33B-40EB-B335-738E8D113A14}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{006A71C0-AB14-49BF-B93D-F4E8C3FB07CA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{006A71C0-AB14-49BF-B93D-F4E8C3FB07CA}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{006A71C0-AB14-49BF-B93D-F4E8C3FB07CA}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{006A71C0-AB14-49BF-B93D-F4E8C3FB07CA}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{91ED0828-B374-479C-9EF7-B1924754C3CD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{91ED0828-B374-479C-9EF7-B1924754C3CD}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{91ED0828-B374-479C-9EF7-B1924754C3CD}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{91ED0828-B374-479C-9EF7-B1924754C3CD}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{559FBD6B-E4D2-4152-BE31-935B7CF7C41A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{559FBD6B-E4D2-4152-BE31-935B7CF7C41A}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{559FBD6B-E4D2-4152-BE31-935B7CF7C41A}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{559FBD6B-E4D2-4152-BE31-935B7CF7C41A}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{D87672B4-974D-4464-A615-499978E5943E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{D87672B4-974D-4464-A615-499978E5943E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{D87672B4-974D-4464-A615-499978E5943E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{D87672B4-974D-4464-A615-499978E5943E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {BDA8827A-11E7-4371-9528-4328EC7AE51E}\r\n\tEndGlobalSection\r\n\tGlobalSection(MonoDevelopProperties) = preSolution\r\n\t\tStartupItem = SharpPcap\\SharpPcap_old.csproj\r\n\t\tPolicies = $0\r\n\t\t$0.TextStylePolicy = $3\r\n\t\t$1.inheritsSet = null\r\n\t\t$1.scope = text/x-csharp\r\n\t\t$0.CSharpFormattingPolicy = $2\r\n\t\t$2.inheritsSet = Mono\r\n\t\t$2.inheritsScope = text/x-csharp\r\n\t\t$2.scope = text/x-csharp\r\n\t\t$3.FileWidth = 120\r\n\t\t$3.NoTabsAfterNonTabs = True\r\n\t\t$3.RemoveTrailingWhitespace = True\r\n\t\t$3.inheritsSet = VisualStudio\r\n\t\t$3.inheritsScope = text/plain\r\n\t\t$3.scope = text/plain\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "SharpPcap",
          "type": "tree",
          "content": null
        },
        {
          "name": "Test",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tutorial",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 1.8544921875,
          "content": "# Copyright 2019 Lex Li\n# Copyright 2020-2021 Chris Morgan <chmorgan@gmail.com>\n# Copyright 2020-2022 Ayoub Kaanich <kayoub5@live.com>\n# SPDX-License-Identifier: MIT\n\n# Build and run tests for .NET Desktop or Windows classic desktop solutions.\n# Add steps that publish symbols, save build artifacts, and more:\n# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net\n\ntrigger:\n- master\n\npr:\n  autoCancel: true\n  branches:\n    include:\n    - '*' # quote since \"*\" is a YAML reserved character\n\njobs:\n- job: linux\n  pool:\n    vmImage: ubuntu-20.04\n  steps:\n  - script: sudo -E bash scripts/install-libpcap.sh\n  - script: sudo -E bash scripts/install-tap.sh\n  - script: sudo -E bash scripts/test.sh\n    env:\n      CODECOV_TOKEN: $(CODECOV_TOKEN)\n\n- job: macos\n  pool:\n    vmImage: macOS-12\n  steps:\n  - script: sudo -E bash scripts/install-libpcap.sh\n  - script: sudo sysctl -w net.inet.udp.maxdgram=65535\n  - script: sudo -E bash scripts/test.sh\n    env:\n      CODECOV_TOKEN: $(CODECOV_TOKEN)\n\n  # This CI job is for testing of x86 architecture compatibility\n- job: windows_2022_x86\n  pool:\n    vmImage: windows-2022\n  steps:\n  - pwsh: ./scripts/Install-windows.ps1\n  - pwsh: ./scripts/Install-npcap.ps1\n    env:\n      npcap_oem_key: $(npcap_oem_key)\n  - pwsh: .\\scripts\\install-winpkfilter.ps1\n  # NOTE: Remove filter when npcap has rpcapd support\n  - script: bash scripts/test.sh --filter \"TestCategory!=RemotePcap\" -r win-x86\n    env:\n      CODECOV_TOKEN: $(CODECOV_TOKEN)\n\n- job: windows_2022_npcap\n  pool:\n    vmImage: windows-2022\n  steps:\n  - pwsh: ./scripts/Install-windows.ps1\n  - pwsh: ./scripts/Install-npcap.ps1\n    env:\n      npcap_oem_key: $(npcap_oem_key)\n  - pwsh: .\\scripts\\install-winpkfilter.ps1\n  # NOTE: Remove filter when npcap has rpcapd support\n  - script: bash scripts/test.sh --filter \"TestCategory!=RemotePcap\"\n    env:\n      CODECOV_TOKEN: $(CODECOV_TOKEN)\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.353515625,
          "content": "# Copyright 2020-2021 Ayoub Kaanich <kayoub5@live.com>\n# SPDX-License-Identifier: MIT\n\ncodecov:\n  # Allow collecting coverage even if some CIs fail\n  require_ci_to_pass: false\n  notify:\n    # 4 for appveyor\n    # 3 for azure pipelines\n    # 1 for circleci\n    # Total = 8\n    # Tolerate one of the services being down (worst case appveyor)\n    after_n_builds: 4\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.0400390625,
          "content": "{\n  \"extends\": [\n    \"config:base\"\n  ]\n}\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.091796875,
          "content": "# Copyright 2023 Ayoub Kaanich <kayoub5@live.com>\n# SPDX-License-Identifier: MIT\nreuse==5.0.0\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}