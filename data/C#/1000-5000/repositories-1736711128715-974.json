{
  "metadata": {
    "timestamp": 1736711128715,
    "page": 974,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "robcupisz/LightShafts",
      "stars": 1309,
      "defaultBranch": "master",
      "files": [
        {
          "name": "ColorFilter.shader",
          "type": "blob",
          "size": 0.5390625,
          "content": "ï»¿Shader \"Hidden/ColorFilter\" {\nSubShader {\n    Pass {\n        Fog { Mode Off }\n\t\tCull Off\n\t\tBlend Off\nCGPROGRAM\n#pragma vertex vert\n#pragma fragment frag\n#include \"UnityCG.cginc\"\n\nstruct v2f {\n    float4 pos : SV_POSITION;\n    float2 uv : TEXCOORD0;\n};\n\nsampler2D _MainTex;\nfloat4 _MainTex_ST;\nfloat4 _Color;\n\nv2f vert (appdata_base v) {\n    v2f o;\n    o.pos = mul (UNITY_MATRIX_MVP, v.vertex);\n    o.uv = TRANSFORM_TEX(v.texcoord, _MainTex);\n    return o;\n}\n\nfloat4 frag(v2f i) : COLOR {\n    return _Color * tex2D(_MainTex, i.uv);\n}\nENDCG\n    }\n}\n}\n"
        },
        {
          "name": "ColorFilter.shader.meta",
          "type": "blob",
          "size": 0.1083984375,
          "content": "fileFormatVersion: 2\nguid: 78da0b5fc3a6e8a469d047d71187e7ef\nShaderImporter:\n  defaultTextures: []\n  userData: \n"
        },
        {
          "name": "Coord.shader",
          "type": "blob",
          "size": 2.86328125,
          "content": "Shader \"Hidden/Coord\" {\r\nSubshader {\r\n\tZTest Always Cull Off ZWrite Off Fog { Mode Off }\r\n\r\n\tPass {\r\nCGPROGRAM\r\n#pragma target 3.0\r\n#pragma glsl\r\n#pragma vertex vert\r\n#pragma fragment frag\r\n#pragma multi_compile LIGHT_ON_SCREEN LIGHT_OFF_SCREEN\r\n#pragma multi_compile DIRECTIONAL_SHAFTS SPOT_SHAFTS\r\n#include \"UnityCG.cginc\"\r\n#include \"Shared.cginc\"\r\n\r\nfloat4 _CoordTexDim;\r\nfloat4 _ScreenTexDim;\r\nsampler2D _CameraDepthTexture;\r\n\r\nposuv vert (appdata_img v)\r\n{\r\n\tposuv o;\r\n\to.pos = v.vertex;\r\n\t#if !UNITY_UV_STARTS_AT_TOP\r\n\t\to.pos.y *= -1;\r\n\t#endif\r\n\to.uv = v.texcoord;\r\n\treturn o;\r\n}\r\n\r\nvoid frag (posuv i, out float4 coord : COLOR0, out float4 depth : COLOR1)\r\n{\r\n\tfloat2 uv = i.uv;\r\n\r\n\tfloat sampleOnEpipolarLine = uv.x - 0.5f/_CoordTexDim.x;\r\n\tfloat epipolarLine = saturate(uv.y - 0.5f/_CoordTexDim.y);\r\n\r\n\t// sampleOnEpipolarLine is now in the range [0, 1 - 1/_CoordTexDim.x]\r\n\t// We need to rescale it to be in [0, 1]\r\n\tsampleOnEpipolarLine *= _CoordTexDim.x / (_CoordTexDim.x-1);\r\n\tsampleOnEpipolarLine = saturate(sampleOnEpipolarLine);\r\n\r\n\t// epipolarLine is in the range [0, 1 - 1/_CoordTexDim.y]\r\n\tint edge = clamp(floor( epipolarLine * 4 ), 0, 3);\r\n\tfloat posOnEdge = frac( epipolarLine * 4 );\r\n\r\n\t// Left, bottom, right, top\r\n\tfloat edgeCoord = -1 + 2*posOnEdge;\r\n\tfloat4 edgeX = float4(-1, edgeCoord, 1, -edgeCoord);\r\n\tfloat4 edgeY = float4(-edgeCoord, -1, edgeCoord, 1);\r\n\tbool4 edgeFlags = bool4(edge.xxxx == int4(0,1,2,3));\r\n\r\n\tfloat2 exit = -float2(dot(edgeY, edgeFlags), dot(edgeX, edgeFlags));\r\n\tfloat2 entry = GetEpipolarLineEntryPoint(exit);\r\n\r\n\tfloat2 coordTemp = lerp(entry, exit, sampleOnEpipolarLine);\r\n\tcoordTemp = coordTemp*0.5 + 0.5;\r\n\tcoord = float4(coordTemp.x, coordTemp.y, 0, 0);\r\n\r\n\t// Sample depth from the main buffer and store in epipolar space\r\n\tcoordTemp = (floor(coordTemp*_ScreenTexDim.xy) + 0.5)*_ScreenTexDim.zw;\r\n\tdepth = Linear01Depth(tex2D(_CameraDepthTexture, coordTemp).x).xxxx;\r\n\r\n\t// Test against the volume if we've hit at all\r\n\tfloat near, far, rayLength;\r\n\tfloat3 rayN;\r\n\tif(!IntersectVolume(coord.xy, near, far, rayN, rayLength) | (depth.x < near/rayLength))\r\n\t{\r\n\t\t// When detecting depth breaks, we'll skip this sample (no raymarching)\r\n\t\tdepth *= -1.0;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// Clamp depth to the far end of the volume, to avoid later generation of depth break\r\n\t\t// samples for things behind the volume (wasted computation, artifacts).\r\n\t\t// Requires the same clamp for depth sampled in the final interpolation step.\r\n\t\tdepth = min(depth, far/rayLength);\r\n\t}\r\n\r\n\t// TODO: instead of intersecting volume here and in final interpolation, consider\r\n\t// rasterizing the light shape into a smaller res buffer.\r\n\t// Even though intersection is quite expensive in the final interpolation for every\r\n\t// rasterized screen pixel, still beats not doing it by about 10% and gets rid of the artifacts\r\n\t// of depth breaks for stuff behind the volume.\r\n}\r\nENDCG\r\n\t}\r\n\r\n}\r\n\r\nFallback off\r\n}\r\n"
        },
        {
          "name": "Coord.shader.meta",
          "type": "blob",
          "size": 0.1083984375,
          "content": "fileFormatVersion: 2\nguid: 170533b360a07f945b98b5d9d11bff19\nShaderImporter:\n  defaultTextures: []\n  userData: \n"
        },
        {
          "name": "Depth.shader",
          "type": "blob",
          "size": 0.662109375,
          "content": "Shader \"Hidden/Depth\" {\r\nSubShader {\r\n    Tags { \"RenderType\"=\"Opaque\" }\r\n    Pass {\r\n        Fog { Mode Off }\r\n\t\tCull Off\r\nCGPROGRAM\r\n#pragma vertex vert\r\n#pragma fragment frag\r\n#include \"UnityCG.cginc\"\r\n\r\nstruct v2f {\r\n    float4 pos : SV_POSITION;\r\n    float depth : TEXCOORD0;\r\n};\r\n\r\nv2f vert (appdata_base v) {\r\n    v2f o;\r\n    o.pos = mul (UNITY_MATRIX_MVP, v.vertex);\r\n\r\n    // We want [0,1] linear depth, so that 0.5 is half way between near and far.\r\n    COMPUTE_EYEDEPTH(o.depth);\r\n    o.depth = (o.depth - _ProjectionParams.y)/(_ProjectionParams.z - _ProjectionParams.y);\r\n\r\n    return o;\r\n}\r\n\r\nfloat4 frag(v2f i) : COLOR {\r\n    return i.depth;\r\n}\r\nENDCG\r\n    }\r\n}\r\n}"
        },
        {
          "name": "Depth.shader.meta",
          "type": "blob",
          "size": 0.1083984375,
          "content": "fileFormatVersion: 2\nguid: 7e188a1e08ecfae4785bed08b1013219\nShaderImporter:\n  defaultTextures: []\n  userData: \n"
        },
        {
          "name": "DepthBreaks.shader",
          "type": "blob",
          "size": 2.857421875,
          "content": "Shader \"Hidden/DepthBreaks\" {\r\nSubShader {\r\nPass {\r\n\tZWrite Off Fog { Mode Off }\r\n\tBlend Off\r\n\tCull Back\r\n\tStencil\r\n\t{\r\n\t\tRef 1\r\n\t\tComp always\r\n\t\tPass replace\r\n\t}\r\n\t\r\nCGPROGRAM\r\n#include \"UnityCG.cginc\"\r\n#include \"Shared.cginc\"\r\n#pragma target 3.0\r\n#pragma glsl\r\n#pragma vertex vert_simple\r\n#pragma fragment frag\r\n#pragma exclude_renderers xbox360\r\n\r\nsampler2D _DepthEpi;\r\nfloat4 _DepthEpiTexDim;\r\nfloat _DepthThreshold;\r\n\r\nfloat SampleDepth(float x, float y)\r\n{\r\n\t// tex2Dlod, because tex2D requires calculating derivatives and we can't do that in a loop\r\n\treturn abs(tex2Dlod(_DepthEpi, float4(x*_DepthEpiTexDim.z, y, 0, 0))).x;\r\n}\r\n\r\nfloat4 frag(posuv i) : COLOR\r\n{\r\n\t// _DepthEpi was marked -1 if the ray missed the volume completely.\r\n\t// Skip, but don't discard, so it won't be a raymarching sample.\r\n\tif (tex2Dlod(_DepthEpi, float4(i.uv.x, i.uv.y, 0, 0)).x < 0.0)\r\n\t\treturn -1;\r\n\r\n\tfloat y = i.uv.y;\r\n\tint step = GetInterpolationStep(i.uv.x);\r\n\tfloat stepRcp = 1.0/float(step);\r\n\r\n\tint x = floor(i.uv.x*_DepthEpiTexDim.x);\r\n\tint start = x*stepRcp;\r\n\tstart *= step;\r\n\tx -= start;\r\n\tint left = x;\r\n\tint right = x;\r\n\r\n\twhile (left > 0)\r\n\t{\r\n\t\tif (abs(SampleDepth(start + left - 1, y) - SampleDepth(start + left, y)) > _DepthThreshold)\r\n\t\t\tbreak;\r\n\t\tleft--;\r\n\t}\r\n\r\n\t// We're going all the way to STEP, because if there's no depth break, we don't want to have\r\n\t// raymarching samples on both sides of whatever is our current step. So e.g. if STEP is 16,\r\n\t// we don't want a sample on the 15th and 16th pixel (16th is the leftmost from the next step),\r\n\t// because that's redundant and would actually show as discontinuity after interpolated along rays.\r\n\t// But if there is a depth break between the 15th and 16th pixel, we want samples on both.\r\n\twhile (right < step)\r\n\t{\r\n\t\tif (abs(SampleDepth(start + right, y) - SampleDepth(start + right + 1, y)) > _DepthThreshold)\r\n\t\t\tbreak;\r\n\t\tright++;\r\n\t}\r\n\r\n\t// Because of going all the way to STEP, the very last sample is a pixel too far - clamp it.\r\n\tright = min(start + right, _DepthEpiTexDim.x - 1) - start;\r\n\r\n\tfloat l = (x - left)*stepRcp;\r\n\tfloat r = (right - x)*stepRcp;\r\n\t\r\n\t// If either l or r is 0, it's a raymarching sample. The texture has been cleared to black, so\r\n\t// we don't have to write anything and since we're discarding, stencil for those pixels will stay at 0.\r\n\t// Then we only have to run raymarching for pixels will stencil 0.\r\n\tif (l*r == 0)\r\n\t\tdiscard;\r\n\treturn float4(l, r, 0, 0);\r\n}\r\n\r\nENDCG\r\n}\r\n\r\n// Temporary, to clear the stencil, as GL.Clear doesn't work.\r\n// Edit: fixed in 4.5, so this hack can be removed\r\nPass {\r\n\tZWrite Off Fog { Mode Off }\r\n\tBlend Off\r\n\tCull Front\r\n\tStencil\r\n\t{\r\n\t\tRef 0\r\n\t\tComp always\r\n\t\tPass zero\r\n\t}\r\n\t\r\nCGPROGRAM\r\n#include \"UnityCG.cginc\"\r\n#include \"Shared.cginc\"\r\n#pragma target 3.0\r\n#pragma glsl\r\n#pragma vertex vert_simple\r\n#pragma fragment frag\r\n\r\nfloat4 frag (posuv i) : COLOR\r\n{\r\n\treturn 0;\r\n}\r\nENDCG\r\n}\r\n\r\n}\r\n}"
        },
        {
          "name": "DepthBreaks.shader.meta",
          "type": "blob",
          "size": 0.1083984375,
          "content": "fileFormatVersion: 2\nguid: 8675ad07e6cda494d977506a7a2a8fbd\nShaderImporter:\n  defaultTextures: []\n  userData: \n"
        },
        {
          "name": "Editor.meta",
          "type": "blob",
          "size": 0.1044921875,
          "content": "fileFormatVersion: 2\nguid: fcaf69de2f5fa854ca21619b1fa03f66\nfolderAsset: yes\nDefaultImporter:\n  userData: \n"
        },
        {
          "name": "Editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "FinalInterpolation.shader",
          "type": "blob",
          "size": 6.5869140625,
          "content": "Shader \"Hidden/Final Interpolation\" {\r\nProperties {\r\n\t_ZTest (\"\", Float) = 8.0\r\n}\r\nSubshader {\r\n\tZWrite Off Fog { Mode Off }\r\n\tZTest [_ZTest]\r\n\tCull Back\r\n\tBlend One SrcAlpha\r\n\r\n\tPass {\r\nCGPROGRAM\r\n#pragma target 3.0\r\n#pragma glsl\r\n#pragma vertex vert\r\n#pragma fragment frag\r\n#pragma multi_compile LIGHT_ON_SCREEN LIGHT_OFF_SCREEN\r\n#pragma multi_compile SHOW_SAMPLES_OFF SHOW_SAMPLES_ON\r\n#pragma multi_compile QUAD_SHAFTS FRUSTUM_SHAFTS\r\n#pragma multi_compile DIRECTIONAL_SHAFTS SPOT_SHAFTS\r\n\r\n#include \"UnityCG.cginc\"\r\n#include \"Shared.cginc\"\r\n\r\nstruct v2f {\r\n\tfloat4 pos : POSITION;\r\n\tfloat3 uv : TEXCOORD0;\r\n};\r\n\r\nsampler2D _DepthEpi;\r\nsampler2D _Coord;\r\nsampler2D _InterpolationEpi;\r\nsampler2D _SamplePositions;\r\nsampler2D _RaymarchedLight;\r\nsampler2D _CameraDepthTexture;\r\nfloat4 _CoordTexDim;\r\nfloat4 _ScreenTexDim;\r\nfloat _DepthThreshold;\r\nfloat _ShowSamplesBackgroundFade;\r\n\r\ninline void FixFlip(inout float x)\r\n{\r\n\t// Flip upside-down on DX-like platforms, if the buffer\r\n\t// we're rendering into is flipped as well.\r\n\t#if UNITY_UV_STARTS_AT_TOP\r\n\t\tx *= _ProjectionParams.x;\r\n\t#endif\r\n}\r\n\r\ninline void FixHalfTexelOffset(inout float2 uv)\r\n{\r\n\t// DX9 half-texel offset\r\n\t#ifdef SHADER_API_D3D9\r\n\t\tuv += 0.5*_ScreenTexDim.zw;\r\n\t#endif\r\n}\r\n\r\nv2f vert (appdata_img v)\r\n{\r\n\tv2f o;\r\n\to.pos = v.vertex;\r\n\r\n\t#if defined(FRUSTUM_SHAFTS)\r\n\t\to.pos = mul (UNITY_MATRIX_MVP, v.vertex);\r\n\t\to.uv = o.pos.xyw;\r\n\t\tFixFlip(o.uv.y);\r\n\t#else\r\n\t\tFixFlip(o.pos.y);\r\n\t\to.uv.xy = v.texcoord;\r\n\t\to.uv.z = 0;\r\n\t\tFixHalfTexelOffset(o.uv.xy);\r\n\t#endif\r\n\r\n\treturn o;\r\n}\r\n\r\nfloat2 ScreenUVToEpipolarUV(float2 screenUV)\r\n{\r\n\t// Compute direction of the ray going from the light through the pixel\r\n\tfloat2 viewport = screenUV * 2.0f - 1.0f;\r\n\tfloat2 dir = normalize(viewport - _LightPos.xy);\r\n\r\n\t// The screen is divided into four triangles/sections, which meet at _LightPos and\r\n\t// have the four sides of the screen as their respective bases - screen exit edges.\r\n\t// We need to know which exit edge dir (from _LightPos to viewport, which is current pixel)\r\n\t// is pointing at.\r\n\t// Triangle edges passing through _LightPos (bottom left, br, tr, tl)\r\n\tfloat4 triangleEdgeTemp = (viewport.xxyy - float4(-1,1,-1,1)) * dir.yyxx;\r\n\t// Flags for triangle edge sides, so triangleEdgeSide.z == 1 is above the line going\r\n\t// through the light and top right corner.\r\n\tint4 triangleEdge = triangleEdgeTemp.xyyx < triangleEdgeTemp.zzww;\t\r\n\t// left, bottom, right, top\r\n\tbool4 triangleFlag = triangleEdge.wxyz * (1 - triangleEdge.xyzw);\r\n\r\n\t// Distances to all four edges\r\n\tfloat4 distToScreenEdge = (float4(-1,-1, 1,1) - _LightPos.xyxy) / (dir.xyxy + float4( abs(dir.xyxy)<1e-6 ));\r\n\t// Distance to exit edge\r\n\tfloat distToExitEdge = dot(triangleFlag, distToScreenEdge);\r\n\t\r\n\t// Exit pos on screen edge, which dir is pointing at\r\n\tfloat2 exit = _LightPos.xy + dir * distToExitEdge;\r\n\t// Entry point different than _LightPos if light isn't on screen\r\n\tfloat2 entry = GetEpipolarLineEntryPoint(exit);\r\n\t\r\n\t// In epipolar space, epipolar lines are unwrapped, with screen's left triangle taking up topmost quarter, etc.\r\n\tfloat4 epipolarLines = float4(0, 0.25, 0.5, 0.75) + (0.5 + float4(-0.5, +0.5, +0.5, -0.5) * exit.yxyx)/4.0;\r\n\tfloat epipolarLine = dot(triangleFlag, epipolarLines);\r\n\r\n\t// Project current pos onto the epipolar line\r\n\tfloat2 epipolarLineDir = exit - entry.xy;\r\n\tfloat epipolarLineLength = length(epipolarLineDir);\r\n\tepipolarLineDir /= max(epipolarLineLength, 1e-6);\r\n\tfloat projected = dot((viewport - entry.xy), epipolarLineDir) / epipolarLineLength;\r\n\r\n\tfloat2 uvEpi = float2(projected, epipolarLine);\r\n\tuvEpi.x += _CoordTexDim.z;\r\n\tuvEpi.x *= (_CoordTexDim.x - 1)*_CoordTexDim.z;\r\n\treturn uvEpi;\r\n}\r\n \r\nfloat3 DepthWeightedInterpolation(in float2 inWeights, in float2 leftBottomEpiUV, in float4 depthEpi, in float depth)\r\n{\r\n\tfloat4 weights = float4(1 - inWeights.x, inWeights.x, inWeights.x, 1 - inWeights.x) * float4(inWeights.y, inWeights.y, 1 - inWeights.y, 1 - inWeights.y);\r\n\r\n\t// Depth weight = 1 for difference below threshold and fading to 0 above threshold.\r\n\tfloat4 depthWeights = saturate(_DepthThreshold / max(abs(depth - depthEpi), _DepthThreshold));\r\n\tdepthWeights = pow(depthWeights, 4);\r\n\tweights *= depthWeights;\r\n\r\n\t// Normalize\r\n\tfloat totalWeight = dot(weights, float4(1,1,1,1));\r\n\tweights /= totalWeight;\r\n\r\n\t// Aim between two texels to get 4 samples in 2 texture fetches\r\n\tfloat offset = weights.z / max(weights.z + weights.w, 0.001);\r\n\toffset *= _CoordTexDim.z;\r\n\tfloat3 light = (weights.z + weights.w) * tex2D(_RaymarchedLight, leftBottomEpiUV + float2(offset, 0));\r\n\r\n\toffset = weights.y / max(weights.x + weights.y, 0.001);\r\n\toffset *= _CoordTexDim.z;\r\n\tlight += (weights.x + weights.y) * tex2D(_RaymarchedLight, leftBottomEpiUV + float2(offset, _CoordTexDim.w));\r\n\r\n\treturn light;\r\n}\r\n\r\nfloat2 ClampUVEpiToTexels(float2 uvEpi, out float2 weights)\r\n{\r\n\tfloat2 uvScaled = uvEpi * _CoordTexDim.xy;\r\n\r\n\t// DX9 half-texel offset\r\n\t#ifdef SHADER_API_D3D9\r\n\tuvScaled += 0.5;\r\n\t#endif\r\n\r\n\tfloat2 texel = floor (uvScaled);\r\n\tweights = uvScaled - texel;\r\n\ttexel += 0.5;\r\n\ttexel = texel * _CoordTexDim.zw;\r\n\treturn texel;\r\n}\r\n\r\nfloat3 SampleLighting(float2 uvEpi, float depth)\r\n{\r\n\tfloat2 weights;\r\n\tfloat2 texel = ClampUVEpiToTexels(uvEpi, weights);\r\n    float4 texelDepth;\r\n\ttexelDepth.x = abs(tex2D(_DepthEpi, texel - float2(1,0)*_CoordTexDim.zw).x);\r\n\ttexelDepth.y = abs(tex2D(_DepthEpi, texel - float2(0,0)*_CoordTexDim.zw).x);\r\n\ttexelDepth.z = abs(tex2D(_DepthEpi, texel - float2(0,1)*_CoordTexDim.zw).x);\r\n\ttexelDepth.w = abs(tex2D(_DepthEpi, texel - float2(1,1)*_CoordTexDim.zw).x);\r\n\ttexel -= _CoordTexDim.zw;\r\n\treturn DepthWeightedInterpolation(weights, texel, texelDepth, depth);\r\n}\r\n\r\nfloat4 frag(v2f i) : COLOR\r\n{\r\n\t#if defined(FRUSTUM_SHAFTS)\r\n\t\tfloat2 uv = 0.5 + 0.5 * i.uv.xy / i.uv.z;\r\n\t\tFixHalfTexelOffset(uv);\r\n\t#else\r\n\t\tfloat2 uv = i.uv.xy;\r\n\t#endif\r\n\r\n\thalf depth = UNITY_SAMPLE_DEPTH(tex2D (_CameraDepthTexture, uv));\r\n\tdepth = Linear01Depth(depth);\r\n\r\n\tfloat near, far, rayLength;\r\n\tfloat3 rayN;\r\n\tIntersectVolume(uv, near, far, rayN, rayLength);\r\n\tdepth = min(depth, far/rayLength);\r\n\r\n\thalf2 unwrapped = ScreenUVToEpipolarUV(uv);\r\n\r\n\t#ifdef SHADER_API_D3D11\r\n\t\tfloat4 c = 0;\r\n\t\tif(depth > near/rayLength)\r\n\t\t\tc = SampleLighting(unwrapped, depth).xyzz;\r\n\t#else\r\n\t\tfloat4 c = step(near/rayLength, depth);\r\n\t\tc *= SampleLighting(unwrapped, depth).xyzz;\r\n\t#endif\r\n\r\n\t#if defined(SHOW_SAMPLES_ON)\r\n\t\tfloat4 sample = tex2D(_SamplePositions, uv);\r\n\t\tc *= _ShowSamplesBackgroundFade;\r\n\t\tfloat isRaymarchSample = any(sample.rgb);\r\n\t\treturn float4(lerp(c, sample, isRaymarchSample).rgb, _ShowSamplesBackgroundFade*(1 - isRaymarchSample));\r\n\t#else\r\n\t\treturn float4(c.rgb, 1);\r\n\t#endif\r\n}\r\nENDCG\r\n\t}\r\n\r\n}\r\n\r\nFallback off\r\n}\r\n"
        },
        {
          "name": "FinalInterpolation.shader.meta",
          "type": "blob",
          "size": 0.1083984375,
          "content": "fileFormatVersion: 2\nguid: 3fe6f8dd2066bc741806972899aa82f6\nShaderImporter:\n  defaultTextures: []\n  userData: \n"
        },
        {
          "name": "InterpolateAlongRays.shader",
          "type": "blob",
          "size": 1.19921875,
          "content": "Shader \"Hidden/InterpolateAlongRays\" {\r\nSubShader {\r\nPass {\r\n\tZWrite Off Fog { Mode Off }\r\n\tBlend Off\r\n\tCull Off\r\n\t\r\nCGPROGRAM\r\n#include \"UnityCG.cginc\"\r\n#include \"Shared.cginc\"\r\n#pragma target 3.0\r\n#pragma glsl\r\n#pragma vertex vert_simple\r\n#pragma fragment frag\r\n\r\nsampler2D _InterpolationEpi;\r\nsampler2D _RaymarchedLightEpi;\r\nfloat4 _RaymarchedLightEpiTexDim;\r\n\r\nfloat4 frag (posuv i) : COLOR\r\n{\r\n\tint intstep = GetInterpolationStep(i.uv.x);\r\n\tfloat stepRcp = 1.0/intstep;\r\n\tfloat2 sample = tex2D(_InterpolationEpi, i.uv).xy;\r\n\r\n\tfloat2 weight = 1;\r\n\tif (sample.x < 0)\r\n\t{\r\n\t\t#ifdef SHADER_API_D3D11\r\n\t\t\treturn 0;\r\n\t\t#else\r\n\t\t\tweight = 0;\r\n\t\t\tsample = 0;\r\n\t\t#endif\r\n\t}\r\n\r\n\t// If left (x) is 0, right (y) should be 1 or 0. Let's make it 1 to avoid division by 0 when calculating weights.\r\n\tsample.y = lerp(sample.y, 1, sample.x == 0.0);\r\n\r\n\tsample *= intstep/_RaymarchedLightEpiTexDim.x;\r\n\r\n\tfloat2 left = i.uv;\r\n\tleft.x -= sample.x;\r\n\r\n\tfloat2 right = i.uv;\r\n\tright.x += sample.y;\r\n\r\n\tweight *= sample.yx/(sample.x + sample.y);\r\n\r\n\tfloat3 leftSample = tex2D(_RaymarchedLightEpi, left);\r\n\tfloat3 rightSample = tex2D(_RaymarchedLightEpi, right);\r\n\r\n\treturn (leftSample*weight.x + rightSample*weight.y).xyzz;\r\n}\r\n\r\nENDCG\r\n}\r\n}\r\n}"
        },
        {
          "name": "InterpolateAlongRays.shader.meta",
          "type": "blob",
          "size": 0.1083984375,
          "content": "fileFormatVersion: 2\nguid: b4040e961c997484e824ff979a17c3c0\nShaderImporter:\n  defaultTextures: []\n  userData: \n"
        },
        {
          "name": "LightShafts.Resources.cs",
          "type": "blob",
          "size": 9.6416015625,
          "content": "ï»¿using UnityEngine;\nusing System.Collections;\n\npublic partial class LightShafts : MonoBehaviour\n{\n\tpublic LightShaftsShadowmapMode m_ShadowmapMode = LightShaftsShadowmapMode.Dynamic;\n\tLightShaftsShadowmapMode m_ShadowmapModeOld = LightShaftsShadowmapMode.Dynamic;\n\tpublic Camera[] m_Cameras;\n\tpublic Camera m_CurrentCamera;\n\tbool m_ShadowmapDirty = true;\n\tpublic Vector3 m_Size = new Vector3(10, 10, 20);\n\tpublic float m_SpotNear = 0.1f;\n\tpublic float m_SpotFar = 1.0f;\n\tpublic LayerMask m_CullingMask = ~0;\n\tpublic LayerMask m_ColorFilterMask = 0;\n\tpublic float m_Brightness = 5;\n\tpublic float m_BrightnessColored = 5;\n\tpublic float m_Extinction = 0.5f;\n\tpublic float m_MinDistFromCamera = 0.0f;\n\t\n\tpublic int m_ShadowmapRes = 1024;\n\tCamera m_ShadowmapCamera;\n\tRenderTexture m_Shadowmap;\n\tpublic Shader m_DepthShader;\n\tRenderTexture m_ColorFilter;\n\tpublic Shader m_ColorFilterShader;\n\tpublic bool m_Colored = false;\n\tpublic float m_ColorBalance = 1.0f;\n\t\n\tpublic int m_EpipolarLines = 256;\n\tpublic int m_EpipolarSamples = 512;\n\tRenderTexture m_CoordEpi;\n\tRenderTexture m_DepthEpi;\n\tpublic Shader m_CoordShader;\n\tMaterial m_CoordMaterial;\n\tCamera m_CoordsCamera;\n\n\tRenderTexture m_InterpolationEpi;\n\tpublic Shader m_DepthBreaksShader;\n\tMaterial m_DepthBreaksMaterial;\n\n\tRenderTexture m_RaymarchedLightEpi;\n\tMaterial m_RaymarchMaterial;\n\tpublic Shader m_RaymarchShader;\n\n\tRenderTexture m_InterpolateAlongRaysEpi;\n\tpublic Shader m_InterpolateAlongRaysShader;\n\tMaterial m_InterpolateAlongRaysMaterial;\n\t\n\tRenderTexture m_SamplePositions;\n\tpublic Shader m_SamplePositionsShader;\n\tMaterial m_SamplePositionsMaterial;\n\tbool m_SamplePositionsShaderCompiles = false;\n\t\n\tpublic Shader m_FinalInterpolationShader;\n\tMaterial m_FinalInterpolationMaterial;\n\n\tpublic float m_DepthThreshold = 0.5f;\n\tpublic int m_InterpolationStep = 32;\n\n\tpublic bool m_ShowSamples = false;\n\tpublic bool m_ShowInterpolatedSamples = false;\n\tpublic float m_ShowSamplesBackgroundFade = 0.8f;\n\n\tpublic bool m_AttenuationCurveOn = false;\n\tpublic AnimationCurve m_AttenuationCurve;\n\tTexture2D m_AttenuationCurveTex;\n\n\tLight m_Light;\n\tLightType m_LightType = LightType.Directional;\n\tbool m_DX11Support = false;\n\tbool m_MinRequirements = false;\n\n\tvoid InitLUTs ()\n\t{\n\t\tif (m_AttenuationCurveTex)\n\t\t\treturn;\n\n\t\tm_AttenuationCurveTex = new Texture2D (256, 1, TextureFormat.ARGB32, false, true);\n\t\tm_AttenuationCurveTex.wrapMode = TextureWrapMode.Clamp;\n\t\tm_AttenuationCurveTex.hideFlags = HideFlags.HideAndDontSave;\n\n\t\tif (m_AttenuationCurve == null || m_AttenuationCurve.length == 0)\n\t\t\tm_AttenuationCurve = new AnimationCurve(new Keyframe(0, 1), new Keyframe(1, 1));\n\n\t\tif (m_AttenuationCurveTex)\n\t\t\tUpdateLUTs ();\n\t}\n\t\n\tpublic void UpdateLUTs ()\n\t{\n\t\tInitLUTs ();\n\n\t\tif (m_AttenuationCurve == null)\n\t\t\treturn;\n\n\t\tfor (int i = 0; i < 256; ++i)\n\t\t{\n\t\t\tfloat v = Mathf.Clamp (m_AttenuationCurve.Evaluate(i/255.0f), 0.0f, 1.0f);\n\t\t\tm_AttenuationCurveTex.SetPixel (i, 0, new Color(v,v,v,v));\n\t\t}\n\t\tm_AttenuationCurveTex.Apply ();\n\t}\n\t\n\tvoid InitRenderTexture(ref RenderTexture rt, int width, int height, int depth, RenderTextureFormat format, bool temp = true)\n\t{\n\t\tif (temp)\n\t\t{\n\t\t\trt = RenderTexture.GetTemporary(width, height, depth, format);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (rt != null)\n\t\t\t{\n\t\t\t\tif (rt.width == width && rt.height == height && rt.depth == depth && rt.format == format)\n\t\t\t\t\treturn;\n\n\t\t\t\trt.Release();\n\t\t\t\tDestroyImmediate(rt);\n\t\t\t}\n\n\t\t\trt = new RenderTexture(width, height, depth, format);\n\t\t\trt.hideFlags = HideFlags.HideAndDontSave;\n\t\t}\n\t}\n\n\tvoid InitShadowmap()\n\t{\n\t\tbool dynamic = (m_ShadowmapMode == LightShaftsShadowmapMode.Dynamic);\n\t\tif (dynamic && m_ShadowmapMode != m_ShadowmapModeOld)\n\t\t{\n\t\t\t// Destroy static render textures, we only need temp now\n\t\t\tif (m_Shadowmap)\n\t\t\t\tm_Shadowmap.Release();\n\t\t\tif (m_ColorFilter)\n\t\t\t\tm_ColorFilter.Release();\n\t\t}\n\t\tInitRenderTexture(ref m_Shadowmap, m_ShadowmapRes, m_ShadowmapRes, 24, RenderTextureFormat.RFloat, dynamic);\n\t\tm_Shadowmap.filterMode = FilterMode.Point;\n\t\tm_Shadowmap.wrapMode = TextureWrapMode.Clamp;\n\n\t\tif (m_Colored)\n\t\t\tInitRenderTexture(ref m_ColorFilter, m_ShadowmapRes, m_ShadowmapRes, 0, RenderTextureFormat.ARGB32, dynamic);\n\n\t\tm_ShadowmapModeOld = m_ShadowmapMode;\n\t}\n\n\tvoid ReleaseShadowmap()\n\t{\n\t\tif (m_ShadowmapMode == LightShaftsShadowmapMode.Static)\n\t\t\treturn;\n\n\t\tRenderTexture.ReleaseTemporary(m_Shadowmap);\n\t\tRenderTexture.ReleaseTemporary(m_ColorFilter);\n\t}\n\t\n\tvoid InitEpipolarTextures()\n\t{\n\t\tm_EpipolarLines = m_EpipolarLines < 8 ? 8 : m_EpipolarLines;\n\t\tm_EpipolarSamples = m_EpipolarSamples < 4 ? 4 : m_EpipolarSamples;\n\t\t\n\t\tInitRenderTexture(ref m_CoordEpi, m_EpipolarSamples, m_EpipolarLines, 0, RenderTextureFormat.RGFloat);\n\t\tm_CoordEpi.filterMode = FilterMode.Point;\n\t\tInitRenderTexture(ref m_DepthEpi, m_EpipolarSamples, m_EpipolarLines, 0, RenderTextureFormat.RFloat);\n\t\tm_DepthEpi.filterMode = FilterMode.Point;\n\t\tInitRenderTexture(ref m_InterpolationEpi, m_EpipolarSamples, m_EpipolarLines, 0, m_DX11Support ? RenderTextureFormat.RGInt : RenderTextureFormat.RGFloat);\n\t\tm_InterpolationEpi.filterMode = FilterMode.Point;\n\t\t\n\t\tInitRenderTexture(ref m_RaymarchedLightEpi, m_EpipolarSamples, m_EpipolarLines, 24, RenderTextureFormat.ARGBFloat);\n\t\tm_RaymarchedLightEpi.filterMode = FilterMode.Point;\n\t\tInitRenderTexture(ref m_InterpolateAlongRaysEpi, m_EpipolarSamples, m_EpipolarLines, 0, RenderTextureFormat.ARGBFloat);\n\t\tm_InterpolateAlongRaysEpi.filterMode = FilterMode.Point;\n\t}\n\t\n\tvoid InitMaterial(ref Material material, Shader shader)\n\t{\n\t\tif (material || !shader)\n\t\t\treturn;\n\t\tmaterial = new Material(shader);\n\t\tmaterial.hideFlags = HideFlags.HideAndDontSave;\n\t}\n\n\tvoid InitMaterials()\n\t{\n\t\tInitMaterial(ref m_FinalInterpolationMaterial, m_FinalInterpolationShader);\n\t\tInitMaterial(ref m_CoordMaterial, m_CoordShader);\n\t\tInitMaterial(ref m_SamplePositionsMaterial, m_SamplePositionsShader);\n\t\tInitMaterial(ref m_RaymarchMaterial, m_RaymarchShader);\n\t\tInitMaterial(ref m_DepthBreaksMaterial, m_DepthBreaksShader);\n\t\tInitMaterial(ref m_InterpolateAlongRaysMaterial, m_InterpolateAlongRaysShader);\n\t}\n\n\tMesh m_SpotMesh;\n\tfloat m_SpotMeshNear = -1;\n\tfloat m_SpotMeshFar = -1;\n\tfloat m_SpotMeshAngle = -1;\n\tfloat m_SpotMeshRange = -1;\n\n\tvoid InitSpotFrustumMesh()\n\t{\n\t\tif (!m_SpotMesh)\n\t\t{\n\t\t\tm_SpotMesh = new Mesh();\n\t\t\tm_SpotMesh.hideFlags = HideFlags.HideAndDontSave;\n\t\t}\n\n\t\tLight l = m_Light;\n\t\tif (m_SpotMeshNear != m_SpotNear || m_SpotMeshFar != m_SpotFar || m_SpotMeshAngle != l.spotAngle || m_SpotMeshRange != l.range)\n\t\t{\n\t\t\tfloat far = l.range * m_SpotFar;\n\t\t\tfloat near = l.range * m_SpotNear;\n\t\t\tfloat tan = Mathf.Tan(l.spotAngle * Mathf.Deg2Rad * 0.5f);\n\t\t\tfloat halfwidthfar = far * tan;\n\t\t\tfloat halfwidthnear = near * tan;\n\n\t\t\tVector3[] vertices = (m_SpotMesh.vertices != null && m_SpotMesh.vertices.Length == 8) ? m_SpotMesh.vertices : new Vector3[8];\n\t\t\tvertices[0] = new Vector3(-halfwidthfar,  -halfwidthfar,  far);\n\t\t\tvertices[1] = new Vector3( halfwidthfar,  -halfwidthfar,  far);\n\t\t\tvertices[2] = new Vector3( halfwidthfar,   halfwidthfar,  far);\n\t\t\tvertices[3] = new Vector3(-halfwidthfar,   halfwidthfar,  far);\n\t\t\tvertices[4] = new Vector3(-halfwidthnear, -halfwidthnear, near);\n\t\t\tvertices[5] = new Vector3( halfwidthnear, -halfwidthnear, near);\n\t\t\tvertices[6] = new Vector3( halfwidthnear,  halfwidthnear, near);\n\t\t\tvertices[7] = new Vector3(-halfwidthnear,  halfwidthnear, near);\n\t\t\tm_SpotMesh.vertices = vertices;\n\n\t\t\tif (m_SpotMesh.GetTopology( 0 ) != MeshTopology.Triangles || m_SpotMesh.triangles == null || m_SpotMesh.triangles.Length != 36)\n\t\t\t{\n\t\t\t\t//                          far           near          top           right         left          bottom\n\t\t\t\tint[] triangles = new int[]{0,1,2, 0,2,3, 6,5,4, 7,6,4, 3,2,6, 3,6,7, 2,1,5, 2,5,6, 0,3,7, 0,7,4, 5,1,0, 5,0,4};\n\t\t\t\tm_SpotMesh.triangles = triangles;\n\t\t\t}\n\n\t\t\tm_SpotMeshNear = m_SpotNear;\n\t\t\tm_SpotMeshFar = m_SpotFar;\n\t\t\tm_SpotMeshAngle = l.spotAngle;\n\t\t\tm_SpotMeshRange = l.range;\n\t\t}\n\t}\n\n\tpublic void UpdateLightType()\n\t{\n\t\tif (m_Light == null)\n\t\t\tm_Light = GetComponent<Light>();\n\t\t\n\t\tm_LightType = m_Light.type;\n\t}\n\n\tbool ShaderCompiles(Shader shader)\n\t{\n\t\tif (!shader.isSupported)\n\t\t{\n\t\t\tDebug.LogError(\"LightShafts' \" + shader.name + \" didn't compile on this platform.\");\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic bool CheckMinRequirements()\n\t{\n\t\tm_DX11Support = SystemInfo.graphicsShaderLevel >= 50;\n\n\t\tm_MinRequirements = SystemInfo.graphicsShaderLevel >= 30;\n\t\tm_MinRequirements &= SystemInfo.supportsRenderTextures;\n\t\tm_MinRequirements &= SystemInfo.SupportsRenderTextureFormat(RenderTextureFormat.RGFloat);\n\t\tm_MinRequirements &= SystemInfo.SupportsRenderTextureFormat(RenderTextureFormat.RFloat);\n\n\t\tif (!m_MinRequirements)\n\t\t\tDebug.LogError(\"LightShafts require Shader Model 3.0 and render textures (including the RGFloat and RFloat) formats. Disabling.\");\n\n\t\tbool shadersCompile = \tShaderCompiles(m_DepthShader) &&\n\t\t\t\t\t\t\t\tShaderCompiles(m_ColorFilterShader) &&\n\t\t\t\t\t\t\t\tShaderCompiles(m_CoordShader) &&\n\t\t\t\t\t\t\t\tShaderCompiles(m_DepthBreaksShader) &&\n\t\t\t\t\t\t\t\tShaderCompiles(m_RaymarchShader) &&\n\t\t\t\t\t\t\t\tShaderCompiles(m_InterpolateAlongRaysShader) &&\n\t\t\t\t\t\t\t\tShaderCompiles(m_FinalInterpolationShader);\n\n\t\tif (!shadersCompile)\n\t\t\tDebug.LogError(\"LightShafts require above shaders. Disabling.\");\n\n\t\tm_MinRequirements &= shadersCompile;\n\n\t\tm_SamplePositionsShaderCompiles = m_SamplePositionsShader.isSupported;\n\n\t\treturn m_MinRequirements;\n\t}\n\n\tvoid InitResources()\n\t{\n\t\tUpdateLightType();\n\t\t\n\t\tInitMaterials();\n\t\tInitEpipolarTextures();\n\t\tInitLUTs();\n\t\tInitSpotFrustumMesh();\n\t}\n\n\tvoid ReleaseResources()\n\t{\n\t\tReleaseShadowmap();\n\t\tRenderTexture.ReleaseTemporary(m_CoordEpi);\n\t\tRenderTexture.ReleaseTemporary(m_DepthEpi);\n\t\tRenderTexture.ReleaseTemporary(m_InterpolationEpi);\n\t\tRenderTexture.ReleaseTemporary(m_RaymarchedLightEpi);\n\t\tRenderTexture.ReleaseTemporary(m_InterpolateAlongRaysEpi);\n\t}\n}\n"
        },
        {
          "name": "LightShafts.Resources.cs.meta",
          "type": "blob",
          "size": 0.173828125,
          "content": "fileFormatVersion: 2\nguid: 147d8e61b5d41a342b95b190ef0aa7c6\nMonoImporter:\n  serializedVersion: 2\n  defaultReferences: []\n  executionOrder: 0\n  icon: {instanceID: 0}\n  userData: \n"
        },
        {
          "name": "LightShafts.Utils.cs",
          "type": "blob",
          "size": 5.2392578125,
          "content": "ï»¿using UnityEngine;\nusing System.Collections;\n\npublic enum LightShaftsShadowmapMode\n{\n\tDynamic = 0,\n\tStatic = 1\t\n}\n\npublic partial class LightShafts : MonoBehaviour\n{\n\tpublic bool directional {get{return m_LightType == LightType.Directional;}}\n\tpublic bool spot {get{return m_LightType == LightType.Spot;}}\n\n\tBounds GetBoundsLocal()\n\t{\n\t\tif (directional)\n\t\t\treturn new Bounds(new Vector3(0, 0, m_Size.z*0.5f), m_Size);\n\n\t\tLight l = m_Light;\n\t\tVector3 offset = new Vector3(0, 0, l.range * (m_SpotFar + m_SpotNear) * 0.5f);\n\t\tfloat height = (m_SpotFar - m_SpotNear) * l.range;\n\t\tfloat baseSize = Mathf.Tan(l.spotAngle * Mathf.Deg2Rad * 0.5f) * m_SpotFar * l.range * 2.0f;\n\t\treturn new Bounds(offset, new Vector3(baseSize, baseSize, height));\n\t}\n\n\tMatrix4x4 GetBoundsMatrix()\n\t{\n\t\tBounds bounds = GetBoundsLocal();\n\t\tTransform t = transform;\n\t\treturn Matrix4x4.TRS(t.position + t.forward * bounds.center.z, t.rotation, bounds.size);\n\t}\n\n\tfloat GetFrustumApex()\n\t{\n\t\t// Assuming the frustum is inscribed in a unit cube centered at 0\n\t\treturn - m_SpotNear/(m_SpotFar - m_SpotNear) - 0.5f;\n\t}\n\n\tvoid OnDrawGizmosSelected()\n\t{\n\t\tUpdateLightType();\n\t\t\n\t\tGizmos.color = Color.yellow;\n\t\tif (directional)\n\t\t{\n\t\t\tGizmos.matrix = GetBoundsMatrix();\n\t\t\tGizmos.DrawWireCube(Vector3.zero, Vector3.one);\n\t\t}\n\t\telse if (spot)\n\t\t{\n\t\t\tTransform t = transform;\n\t\t\tLight l = m_Light;\n\t\t\tGizmos.matrix = Matrix4x4.TRS(t.position, t.rotation, Vector3.one);\n\t\t\tGizmos.DrawFrustum(t.position, l.spotAngle, l.range * m_SpotFar, l.range * m_SpotNear, 1);\n\t\t}\n\t}\n\n\tvoid RenderQuadSections(Vector4 lightPos)\n\t{\n\t\tfor (int i = 0; i < 4; i++)\n\t\t{\n\t\t\t// Skip one or two quarters, if the light is off screen\n\t\t\tif (i == 0 && lightPos.y > 1 ||\n\t\t\t\ti == 1 && lightPos.x > 1 ||\n\t\t\t\ti == 2 && lightPos.y < -1 ||\n\t\t\t\ti == 3 && lightPos.x < -1)\n\t\t\t\tcontinue;\n\n\t\t\t// index denotes which quarter of the screen to take up,\n\t\t\t// so start at -1, -0.5, 0 or 0.5\n\t\t\tfloat top = i / 2.0f - 1.0f;\n\t\t\tfloat bottom = top + 0.5f;\n\t\t\tGL.Begin(GL.QUADS);\n\t\t\tGL.Vertex3(-1, top, 0);\n\t\t\tGL.Vertex3(1, top, 0);\n\t\t\tGL.Vertex3(1, bottom, 0);\n\t\t\tGL.Vertex3(-1, bottom, 0);\n\t\t\tGL.End();\n\t\t}\n\t}\n\n\tvoid RenderQuad()\n\t{\n\t\tGL.Begin(GL.QUADS);\n\t\tGL.TexCoord2( 0, 0);\n\t\tGL.Vertex3\t(-1,-1, 0);\n\t\tGL.TexCoord2( 0, 1);\n\t\tGL.Vertex3\t(-1, 1, 0);\n\t\tGL.TexCoord2( 1, 1);\n\t\tGL.Vertex3\t( 1, 1, 0);\n\t\tGL.TexCoord2( 1, 0);\n\t\tGL.Vertex3\t( 1,-1, 0);\n\t\tGL.End();\n\t}\n\n\tvoid RenderSpotFrustum()\n\t{\n\t\tGraphics.DrawMeshNow(m_SpotMesh, transform.position, transform.rotation);\n\t}\n\n\tVector4 GetLightViewportPos()\n\t{\n\t\tVector3 lightPos = transform.position;\n\t\tif (directional)\n\t\t\tlightPos = m_CurrentCamera.transform.position + transform.forward;\n\n\t\tVector3 lightViewportPos3 = m_CurrentCamera.WorldToViewportPoint(lightPos);\n\t\treturn new Vector4(lightViewportPos3.x*2.0f - 1.0f, lightViewportPos3.y*2.0f - 1.0f, 0, 0);\n\t}\n\n\tbool IsVisible()\n\t{\n\t\t// Intersect against spot light's OBB (or light frustum's OBB), so AABB in it's space\n\t\tMatrix4x4 lightToCameraProjection = m_CurrentCamera.projectionMatrix * m_CurrentCamera.worldToCameraMatrix * transform.localToWorldMatrix;\n\t\treturn GeometryUtility.TestPlanesAABB(GeometryUtility.CalculateFrustumPlanes(lightToCameraProjection), GetBoundsLocal());\n\t}\n\n\tbool IntersectsNearPlane()\n\t{\n\t\t// Lazy for now:\n\t\t// Just check if any vertex is behind the near plane.\n\t\t// TODO: same for directional\n\t\tVector3[] vertices = m_SpotMesh.vertices;\n\t\tfloat nearPlaneFudged = m_CurrentCamera.nearClipPlane - 0.001f;\n\t\tTransform t = transform;\n\t\tfor (int i = 0; i < vertices.Length; i++)\n\t\t{\n\t\t\tfloat z = m_CurrentCamera.WorldToViewportPoint(t.TransformPoint(vertices[i])).z;\n\t\t\tif (z < nearPlaneFudged)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tvoid SetKeyword(bool firstOn, string firstKeyword, string secondKeyword)\n\t{\n\t\tShader.EnableKeyword(firstOn ? firstKeyword : secondKeyword);\n\t\tShader.DisableKeyword(firstOn ? secondKeyword : firstKeyword);\n\t}\n\n\tpublic void SetShadowmapDirty()\n\t{\n\t\tm_ShadowmapDirty = true;\n\t}\n\n\tvoid GetFrustumRays(out Matrix4x4 frustumRays, out Vector3 cameraPosLocal)\n\t{\n\t\tfloat far = m_CurrentCamera.farClipPlane;\n\t\tVector3 cameraPos = m_CurrentCamera.transform.position;\n\t\tMatrix4x4 m = GetBoundsMatrix().inverse;\n\t\tVector2[] uvs = new Vector2[] {new Vector2(0, 0), new Vector2(1, 0), new Vector2(1, 1), new Vector2(0, 1)};\n\t\tfrustumRays = new Matrix4x4();\n\n\t\tfor (int i = 0; i < 4; i++)\n\t\t{\n\t\t\tVector3 ray = m_CurrentCamera.ViewportToWorldPoint(new Vector3(uvs[i].x, uvs[i].y, far)) - cameraPos;\n\t\t\tray = m.MultiplyVector(ray);\n\t\t\tfrustumRays.SetRow(i, ray);\n\t\t}\n\n\t\tcameraPosLocal = m.MultiplyPoint3x4(cameraPos);\n\t}\n\n\tvoid SetFrustumRays(Material material)\n\t{\n\t\tMatrix4x4 frustumRays;\n\t\tVector3 cameraPosLocal;\n\t\tGetFrustumRays(out frustumRays, out cameraPosLocal);\n\t\tmaterial.SetVector(\"_CameraPosLocal\", cameraPosLocal);\n\t\tmaterial.SetMatrix(\"_FrustumRays\", frustumRays);\n\t\tmaterial.SetFloat(\"_FrustumApex\", GetFrustumApex());\n\t}\n\n\tfloat GetDepthThresholdAdjusted()\n\t{\n\t\treturn m_DepthThreshold/m_CurrentCamera.farClipPlane;\n\t}\n\n\tbool CheckCamera()\n\t{\n\t\tif (m_Cameras == null)\n\t\t\treturn false;\n\n\t\tforeach (Camera cam in m_Cameras)\n\t\t\tif (cam == m_CurrentCamera)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic void UpdateCameraDepthMode()\n\t{\n\t\tif (m_Cameras == null)\n\t\t\treturn;\n\n\t\tforeach(Camera cam in m_Cameras)\n\t\t\tif (cam)\n\t\t\t\tcam.depthTextureMode |= DepthTextureMode.Depth;\n\t}\n}\n"
        },
        {
          "name": "LightShafts.Utils.cs.meta",
          "type": "blob",
          "size": 0.173828125,
          "content": "fileFormatVersion: 2\nguid: 4a4ee2ae3af61ec4ab532c73905640c0\nMonoImporter:\n  serializedVersion: 2\n  defaultReferences: []\n  executionOrder: 0\n  icon: {instanceID: 0}\n  userData: \n"
        },
        {
          "name": "LightShafts.cs",
          "type": "blob",
          "size": 10.044921875,
          "content": "using UnityEngine;\nusing System.Collections;\n\n[ExecuteInEditMode]\n[RequireComponent(typeof(Light))]\npublic partial class LightShafts : MonoBehaviour\n{\n\tpublic void Start()\n\t{\n\t\tCheckMinRequirements();\n\n\t\tif (m_Cameras == null || m_Cameras.Length == 0)\n\t\t\tm_Cameras = new Camera[]{Camera.main};\n\n\t\tUpdateCameraDepthMode();\n\t}\n\n\tvoid UpdateShadowmap()\n\t{\n\t\tif (m_ShadowmapMode == LightShaftsShadowmapMode.Static && !m_ShadowmapDirty)\n\t\t\treturn;\n\n\t\tInitShadowmap();\n\n\t\tif (m_ShadowmapCamera == null)\n\t\t{\n\t\t\tGameObject go = new GameObject(\"Depth Camera\");\n\t\t\tgo.AddComponent(typeof(Camera));\n\t\t\tm_ShadowmapCamera = go.GetComponent<Camera>();\n\t\t\tgo.hideFlags = HideFlags.HideAndDontSave;\n\t\t\tm_ShadowmapCamera.enabled = false;\n\t\t\tm_ShadowmapCamera.clearFlags = CameraClearFlags.SolidColor;\n\t\t}\n\t\tTransform cam = m_ShadowmapCamera.transform;\n\t\tcam.position = transform.position;\n\t\tcam.rotation = transform.rotation;\n\n\t\tif (directional)\n\t\t{\n\t\t\tm_ShadowmapCamera.orthographic = true;\n\t\t\tm_ShadowmapCamera.nearClipPlane = 0;\n\t\t\tm_ShadowmapCamera.farClipPlane = m_Size.z;\n\t\t\tm_ShadowmapCamera.orthographicSize = m_Size.y * 0.5f;\n\t\t\tm_ShadowmapCamera.aspect = m_Size.x / m_Size.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm_ShadowmapCamera.orthographic = false;\n\t\t\tm_ShadowmapCamera.nearClipPlane = m_SpotNear * m_Light.range;\n\t\t\tm_ShadowmapCamera.farClipPlane = m_SpotFar * m_Light.range;\n\t\t\tm_ShadowmapCamera.fieldOfView = m_Light.spotAngle;\n\t\t\tm_ShadowmapCamera.aspect = 1.0f;\n\t\t}\n\t\tm_ShadowmapCamera.renderingPath = RenderingPath.Forward;\n\t\tm_ShadowmapCamera.targetTexture = m_Shadowmap;\n\t\tm_ShadowmapCamera.cullingMask = m_CullingMask;\n\t\tm_ShadowmapCamera.backgroundColor = Color.white;\n\n\t\tm_ShadowmapCamera.RenderWithShader(m_DepthShader, \"RenderType\");\n\n\t\tif (m_Colored)\n\t\t{\n\t\t\tm_ShadowmapCamera.targetTexture = m_ColorFilter;\n\t\t\tm_ShadowmapCamera.cullingMask = m_ColorFilterMask;\n\t\t\tm_ShadowmapCamera.backgroundColor = new Color(m_ColorBalance, m_ColorBalance, m_ColorBalance);\n\t\t\tm_ShadowmapCamera.RenderWithShader(m_ColorFilterShader, \"\");\n\t\t}\n\n\t\tm_ShadowmapDirty = false;\n\t}\n\t\n\tvoid RenderCoords(int width, int height, Vector4 lightPos)\n\t{\n\t\tSetFrustumRays(m_CoordMaterial);\n\n\t\tRenderBuffer[] buffers = {m_CoordEpi.colorBuffer, m_DepthEpi.colorBuffer};\n\t\tGraphics.SetRenderTarget(buffers, m_DepthEpi.depthBuffer);\n\t\tm_CoordMaterial.SetVector(\"_LightPos\", lightPos);\n\t\tm_CoordMaterial.SetVector(\"_CoordTexDim\", new Vector4(m_CoordEpi.width, m_CoordEpi.height, 1.0f / m_CoordEpi.width, 1.0f / m_CoordEpi.height));\n\t\tm_CoordMaterial.SetVector(\"_ScreenTexDim\", new Vector4(width, height, 1.0f / width, 1.0f / height));\n\t\tm_CoordMaterial.SetPass(0);\n\t\tRenderQuad();\n\t}\n\n\tvoid RenderInterpolationTexture(Vector4 lightPos)\n\t{\n\t\tGraphics.SetRenderTarget(m_InterpolationEpi.colorBuffer, m_RaymarchedLightEpi.depthBuffer);\n\t\tif (!m_DX11Support && (Application.platform == RuntimePlatform.WindowsEditor || Application.platform == RuntimePlatform.WindowsPlayer))\n\t\t{\n\t\t\t// Looks like in dx9 stencil is not cleared properly with GL.Clear()\n\t\t\t// Edit: fixed in 4.5, so this hack can be removed\n\t\t\tm_DepthBreaksMaterial.SetPass(1);\n\t\t\tRenderQuad();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tGL.Clear(true, true, new Color(0, 0, 0, 1));\n\t\t}\n\t\tm_DepthBreaksMaterial.SetFloat(\"_InterpolationStep\", m_InterpolationStep);\n\t\tm_DepthBreaksMaterial.SetFloat(\"_DepthThreshold\", GetDepthThresholdAdjusted());\n\t\tm_DepthBreaksMaterial.SetTexture(\"_DepthEpi\", m_DepthEpi);\n\t\tm_DepthBreaksMaterial.SetVector(\"_DepthEpiTexDim\", new Vector4(m_DepthEpi.width, m_DepthEpi.height, 1.0f / m_DepthEpi.width, 1.0f / m_DepthEpi.height));\n\t\tm_DepthBreaksMaterial.SetPass(0);\n\t\tRenderQuadSections(lightPos);\n\t}\n\n\tvoid InterpolateAlongRays(Vector4 lightPos)\n\t{\n\t\tGraphics.SetRenderTarget(m_InterpolateAlongRaysEpi);\n\t\tm_InterpolateAlongRaysMaterial.SetFloat(\"_InterpolationStep\", m_InterpolationStep);\n\t\tm_InterpolateAlongRaysMaterial.SetTexture(\"_InterpolationEpi\", m_InterpolationEpi);\n\t\tm_InterpolateAlongRaysMaterial.SetTexture(\"_RaymarchedLightEpi\", m_RaymarchedLightEpi);\n\t\tm_InterpolateAlongRaysMaterial.SetVector(\"_RaymarchedLightEpiTexDim\", new Vector4(m_RaymarchedLightEpi.width, m_RaymarchedLightEpi.height, 1.0f / m_RaymarchedLightEpi.width, 1.0f / m_RaymarchedLightEpi.height));\n\t\tm_InterpolateAlongRaysMaterial.SetPass(0);\n\t\tRenderQuadSections(lightPos);\n\t}\n\t\n\tvoid RenderSamplePositions(int width, int height, Vector4 lightPos)\n\t{\n\t\tInitRenderTexture (ref m_SamplePositions, width, height, 0, RenderTextureFormat.ARGB32, false);\n\t\t// Unfortunately can't be a temporary RT if we want random write\n\t\tm_SamplePositions.enableRandomWrite = true;\n\t\tm_SamplePositions.filterMode = FilterMode.Point;\n\t\t\t\t\n\t\tGraphics.SetRenderTarget (m_SamplePositions);\n\t\tGL.Clear (false, true, new Color(0,0,0,1));\n\t\t\n\t\tGraphics.ClearRandomWriteTargets();\n\t\tGraphics.SetRandomWriteTarget(1, m_SamplePositions);\n\t\t\n\t\t//We need a render target with m_Coord dimensions, but reading and writing\n\t\t//to the same target produces wrong read results, so using a dummy.\n\t\tGraphics.SetRenderTarget(m_RaymarchedLightEpi);\n\t\t\n\t\tm_SamplePositionsMaterial.SetVector(\"_OutputTexDim\", new Vector4(width-1, height-1, 0, 0));\n\t\tm_SamplePositionsMaterial.SetVector(\"_CoordTexDim\", new Vector4(m_CoordEpi.width, m_CoordEpi.height, 0, 0));\n\t\tm_SamplePositionsMaterial.SetTexture(\"_Coord\", m_CoordEpi);\n\t\tm_SamplePositionsMaterial.SetTexture(\"_InterpolationEpi\", m_InterpolationEpi);\n\n\t\tif (m_ShowInterpolatedSamples)\n\t\t{\n\t\t\tm_SamplePositionsMaterial.SetFloat(\"_SampleType\", 1);\n\t\t\tm_SamplePositionsMaterial.SetVector(\"_Color\", new Vector4(0.4f, 0.4f, 0, 0));\n\t\t\tm_SamplePositionsMaterial.SetPass(0);\n\t\t\tRenderQuad();\n\t\t}\n\n\t\tm_SamplePositionsMaterial.SetFloat(\"_SampleType\", 0);\n\t\tm_SamplePositionsMaterial.SetVector(\"_Color\", new Vector4(1, 0, 0, 0));\n\t\tm_SamplePositionsMaterial.SetPass(0);\n\t\tRenderQuadSections(lightPos);\n\t\t\n\t\tGraphics.ClearRandomWriteTargets();\n\t}\n\n\tvoid ShowSamples(int width, int height, Vector4 lightPos)\n\t{\n\t\tbool showSamples = m_ShowSamples && m_DX11Support && m_SamplePositionsShaderCompiles;\n\t\tSetKeyword(showSamples, \"SHOW_SAMPLES_ON\", \"SHOW_SAMPLES_OFF\");\n\t\tif (showSamples)\n\t\t\tRenderSamplePositions(width, height, lightPos);\n\n\t\tm_FinalInterpolationMaterial.SetFloat(\"_ShowSamplesBackgroundFade\", m_ShowSamplesBackgroundFade);\n\t}\n\n\tvoid Raymarch(int width, int height, Vector4 lightPos)\n\t{\n\t\tSetFrustumRays(m_RaymarchMaterial);\n\n\t\tint shadowmapWidth = m_Shadowmap.width;\n\t\tint shadowmapHeight = m_Shadowmap.height;\n\n\t\tGraphics.SetRenderTarget(m_RaymarchedLightEpi.colorBuffer, m_RaymarchedLightEpi.depthBuffer);\n\t\tGL.Clear(false, true, new Color(0, 0, 0, 1));\n\t\tm_RaymarchMaterial.SetTexture(\"_Coord\", m_CoordEpi);\n\t\tm_RaymarchMaterial.SetTexture(\"_InterpolationEpi\", m_InterpolationEpi);\n\t\tm_RaymarchMaterial.SetTexture(\"_Shadowmap\", m_Shadowmap);\n\t\tfloat brightness = m_Colored ? m_BrightnessColored/m_ColorBalance : m_Brightness;\n\t\tbrightness *= m_Light.intensity;\n\t\tm_RaymarchMaterial.SetFloat(\"_Brightness\", brightness);\n\t\tm_RaymarchMaterial.SetFloat(\"_Extinction\", -m_Extinction);\n\t\tm_RaymarchMaterial.SetVector(\"_ShadowmapDim\", new Vector4(shadowmapWidth, shadowmapHeight, 1.0f / shadowmapWidth, 1.0f / shadowmapHeight));\n\t\tm_RaymarchMaterial.SetVector(\"_ScreenTexDim\", new Vector4(width, height, 1.0f / width, 1.0f / height));\n\t\tm_RaymarchMaterial.SetVector(\"_LightColor\", m_Light.color.linear);\n\t\tm_RaymarchMaterial.SetFloat(\"_MinDistFromCamera\", m_MinDistFromCamera);\n\t\tSetKeyword(m_Colored, \"COLORED_ON\", \"COLORED_OFF\");\n\t\tm_RaymarchMaterial.SetTexture(\"_ColorFilter\", m_ColorFilter);\n\t\tSetKeyword(m_AttenuationCurveOn, \"ATTENUATION_CURVE_ON\", \"ATTENUATION_CURVE_OFF\");\n\t\tm_RaymarchMaterial.SetTexture(\"_AttenuationCurveTex\", m_AttenuationCurveTex);\n\t\tTexture cookie = m_Light.cookie;\n\t\tSetKeyword(cookie != null, \"COOKIE_TEX_ON\", \"COOKIE_TEX_OFF\");\n\t\tif (cookie != null)\n\t\t\tm_RaymarchMaterial.SetTexture(\"_Cookie\", cookie);\n\t\tm_RaymarchMaterial.SetPass(0);\n\n\t\tRenderQuadSections(lightPos);\n\t}\n\n\tpublic void OnRenderObject ()\n\t{\n\t\tm_CurrentCamera = Camera.current;\n\t\tif (!m_MinRequirements || !CheckCamera() || !IsVisible())\n\t\t\treturn;\n\n\t\t// Prepare\n\t\tRenderBuffer depthBuffer = Graphics.activeDepthBuffer;\n\t\tRenderBuffer colorBuffer = Graphics.activeColorBuffer;\n\t\tInitResources();\n\t\tVector4 lightPos = GetLightViewportPos();\n\t\tbool lightOnScreen = lightPos.x >= -1 && lightPos.x <= 1 && lightPos.y >= -1 && lightPos.y <= 1;\n\t\tSetKeyword(lightOnScreen, \"LIGHT_ON_SCREEN\", \"LIGHT_OFF_SCREEN\");\n\t\tint width = Screen.width;\n\t\tint height = Screen.height;\n\t\t\n\t\t// Render the buffers, raymarch, interpolate along rays\n\t\tUpdateShadowmap();\n\t\tSetKeyword(directional, \"DIRECTIONAL_SHAFTS\", \"SPOT_SHAFTS\");\n\t\tRenderCoords(width, height, lightPos);\n\t\tRenderInterpolationTexture(lightPos);\n\t\tRaymarch(width, height, lightPos);\n\t\tInterpolateAlongRays(lightPos);\n\n\t\tShowSamples(width, height, lightPos);\n\n\t\t// Final interpolation and blending onto the screen\n\t\tSetFrustumRays(m_FinalInterpolationMaterial);\n\t\tm_FinalInterpolationMaterial.SetTexture(\"_InterpolationEpi\", m_InterpolationEpi);\n\t\tm_FinalInterpolationMaterial.SetTexture(\"_DepthEpi\", m_DepthEpi);\n\t\tm_FinalInterpolationMaterial.SetTexture(\"_Shadowmap\", m_Shadowmap);\n\t\tm_FinalInterpolationMaterial.SetTexture(\"_Coord\", m_CoordEpi);\n\t\tm_FinalInterpolationMaterial.SetTexture(\"_SamplePositions\", m_SamplePositions);\n\t\tm_FinalInterpolationMaterial.SetTexture(\"_RaymarchedLight\", m_InterpolateAlongRaysEpi);\n\t\tm_FinalInterpolationMaterial.SetVector(\"_CoordTexDim\", new Vector4(m_CoordEpi.width, m_CoordEpi.height, 1.0f / m_CoordEpi.width, 1.0f / m_CoordEpi.height));\n\t\tm_FinalInterpolationMaterial.SetVector(\"_ScreenTexDim\", new Vector4(width, height, 1.0f / width, 1.0f / height));\n\t\tm_FinalInterpolationMaterial.SetVector(\"_LightPos\", lightPos);\n\t\tm_FinalInterpolationMaterial.SetFloat(\"_DepthThreshold\", GetDepthThresholdAdjusted());\n\t\tbool renderAsQuad = directional || IntersectsNearPlane();\n\t\tm_FinalInterpolationMaterial.SetFloat(\"_ZTest\", (float)(renderAsQuad ? UnityEngine.Rendering.CompareFunction.Always : UnityEngine.Rendering.CompareFunction.Less));\n\t\tSetKeyword(renderAsQuad, \"QUAD_SHAFTS\", \"FRUSTUM_SHAFTS\");\n\n\t\tGraphics.SetRenderTarget(colorBuffer, depthBuffer);\n\t\tm_FinalInterpolationMaterial.SetPass(0);\n\t\tif (renderAsQuad)\n\t\t\tRenderQuad();\n\t\telse\n\t\t\tRenderSpotFrustum();\n\n\t\tReleaseResources();\n\t}\n}\n"
        },
        {
          "name": "LightShafts.cs.meta",
          "type": "blob",
          "size": 0.9599609375,
          "content": "fileFormatVersion: 2\nguid: 0109504c2f6a31b4498a8fd6a490584a\nMonoImporter:\n  serializedVersion: 2\n  defaultReferences:\n  - m_CurrentCamera: {instanceID: 0}\n  - m_DepthShader: {fileID: 4800000, guid: 7e188a1e08ecfae4785bed08b1013219, type: 3}\n  - m_ColorFilterShader: {fileID: 4800000, guid: 78da0b5fc3a6e8a469d047d71187e7ef,\n      type: 3}\n  - m_CoordShader: {fileID: 4800000, guid: 170533b360a07f945b98b5d9d11bff19, type: 3}\n  - m_DepthBreaksShader: {fileID: 4800000, guid: 8675ad07e6cda494d977506a7a2a8fbd,\n      type: 3}\n  - m_RaymarchShader: {fileID: 4800000, guid: 8b94af9deac0e2d4e9523f6090a3e61e, type: 3}\n  - m_InterpolateAlongRaysShader: {fileID: 4800000, guid: b4040e961c997484e824ff979a17c3c0,\n      type: 3}\n  - m_SamplePositionsShader: {fileID: 4800000, guid: 328e45223da3ee24a9b9bc2020d76aa4,\n      type: 3}\n  - m_FinalInterpolationShader: {fileID: 4800000, guid: 3fe6f8dd2066bc741806972899aa82f6,\n      type: 3}\n  executionOrder: 0\n  icon: {instanceID: 0}\n  userData: \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.73828125,
          "content": "*Note: I'm working on a more solid and universal volumetrics rendering solution, but it's still WIP (e.g. doesn't support directional lights): [VolumetricLighting](https://github.com/Unity-Technologies/VolumetricLighting)*\n\nLight shafts\n============\nA light shafts (aka light scattering, aka volumetric shadows) effect for Unity.\n\n**[video](http://files.unity3d.com/rcupisz/LightShafts/v.mp4)**\n\n![spot light](http://files.unity3d.com/rcupisz/LightShafts/0.png)\n![directional and spot light](http://files.unity3d.com/rcupisz/LightShafts/1.png)\n\nPerformance: in 1080p on GTX580 about 1.0-1.5ms for a full screen light, down to 0.2ms if the light is smaller or partially occluded.\n\nDownload\n--------\nCheck out this repo into a subfolder of your Unity project (visible meta files), e.g. `Assets/LightShafts/`\n\nLight shafts should work on Windows (DX9 and DX11) and OSX.\n\nVersion 2. Verified in Unity versions 4.5.5f1 - 5.6.0f3.\n\nUsage\n-----\nAdd the LightShafts.cs script to a directional light or spot light and tweak the settings.\n\nIn general volumetric lighting is a very expensive effect. This implementation tries to make it affordable by avoiding slow raymarching for every screen pixel. A smaller number of raymarching samples in important places is chosen instead (red pixels in images below) and the final lighting is interpolated from those.\n\n![sampling](http://files.unity3d.com/rcupisz/LightShafts/2.png)\n\nIt's important to tweak the effect's quality settings to **get as few red (expensive) samples as possible**. Other settings are important for performance too.\n\n- Start out by tweaking the *size* (directional light) or *spot angle* and *volume start and end* (spot light) to get the yellow box/frustum in the scene view tightly around your target area.\n- Set the *culling mask* to only include objects which need to cast volumetric shadow (doesn't matter if the *shadowmap mode* is static, as then the shadowmap is only rendered at startup).\n- Enable *show samples* (DX11 only for now).\n- Tweak *shadowmap resolution* to be as low as possible, but still be able to make out the detail in silhouettes of shadow casters.\n- *Samples across rays* - that many samples - and rays - around the light, when looking at it.\n- *Samples along rays* - that many *potential* samples along each ray, but they only become actual samples if they encounter a difference in depth or are forced by the *force samples every* setting.\n- *Depth threshold* - from camera's perspective, light shafts change intensity wherever there's a bigger depth difference. Make sure this setting creates silhouettes of red pixels around objects where it matters.\n- *Force samples every* - even if there's no abrupt change in depth, light shafts' intensity still changes along it's length somewhat and that gradient needs to be sampled. Set to a higher value if you can (the goal is still to have as few red samples as possible).\n\n### Colored light shafts\n\nTo get the effect of light tinted by stained glass, enable the *colored* checkbox and set the *color filter* layer mask to whatever layer contains your colored objects. Those objects will be rendered to a buffer using a forward rendering camera, so sometimes it might be better to create duplicates with a shader not using lighting, just outputting saturated color. The rays will be tinted along their entire length.\n\nCookies on spot lights are multiplied in as well, and also affect performance.\n\n### LightShafts.cs vs SunShafts.js\n\nThe SunShafts.js effect in standard assets performs a (depth-aware) radial blur of the skybox, fully in screen space. So the effect is more *volatile*, visible only when looking against the light direction, etc., but also cheaper. Use LightShafts.cs when you need a more *grounded* effect, in world space, visible from the side - and can afford it.\n\nWhat's next?\n------------\n- I'll probably add the effect to Unity's image effects standard package, when it's done.\n- 1D min/max mipmap optimization: not sure if I'll implement it. It's usefullness is limited to dx11 and non-colored lights without cookies, mostly. Pull requests welcome, though :)\n- Some dithering would be nice to avoid banding in dark scenes.\n- Re-using the internal shadowmaps instead of rendering new ones - hmm...\n- Cookies: for directional lights too (need an offset setting) and premultiply with color filter, if both are enabled.\n- Make sample visualisation work on dx9 and opengl as well.\n\nLinks\n-----\n- [Original paper](http://www.sfb716.uni-stuttgart.de/uploads/tx_vispublications/espmss10.pdf) on epipolar sampling by Thomas Engelhardt and Carsten Dachsbacher.\n- An [article](http://software.intel.com/en-us/articles/ivb-atmospheric-light-scattering) and [code sample](http://software.intel.com/en-us/blogs/2013/03/18/gtd-light-scattering-sample-updated) on Intel's website.\n\nLicense\n-------\nPublic domain.\n"
        },
        {
          "name": "README.md.meta",
          "type": "blob",
          "size": 0.087890625,
          "content": "fileFormatVersion: 2\nguid: dbbcbe629574042c382ffc6790e6925a\nDefaultImporter:\n  userData: \n"
        },
        {
          "name": "Raymarch.shader",
          "type": "blob",
          "size": 4.154296875,
          "content": "Shader \"Hidden/Raymarch\" {\r\nSubShader {\r\nPass {\r\n\tZWrite Off Fog { Mode Off }\r\n\tBlend Off\r\n\tCull Back\r\n\tStencil\r\n\t{\r\n\t\tRef 0\r\n\t\tComp equal\r\n\t}\r\n\t\r\nCGPROGRAM\r\n#include \"UnityCG.cginc\"\r\n#include \"Shared.cginc\"\r\n#pragma target 3.0\r\n#pragma glsl\r\n#pragma vertex vert_simple\r\n#pragma fragment frag\r\n#pragma multi_compile COLORED_ON COLORED_OFF\r\n#pragma multi_compile ATTENUATION_CURVE_ON ATTENUATION_CURVE_OFF\r\n#pragma multi_compile COOKIE_TEX_ON COOKIE_TEX_OFF\r\n#pragma multi_compile DIRECTIONAL_SHAFTS SPOT_SHAFTS\r\n\r\nsampler2D _CameraDepthTexture;\r\nsampler2D _Coord;\r\nsampler2D _Shadowmap;\r\nsampler2D _ColorFilter;\r\nsampler2D _AttenuationCurveTex;\r\nsampler2D _Cookie;\r\nfloat4 _ShadowmapDim;\r\nfloat4 _ScreenTexDim;\r\nfloat4 _LightColor;\r\nfloat _Extinction;\r\nfloat _Brightness;\r\nfloat _MinDistFromCamera;\r\n\r\ninline float attenuation(float distance)\r\n{\r\n\t#if ATTENUATION_CURVE_ON\r\n\t\treturn tex2Dlod (_AttenuationCurveTex, float4(distance, 0, 0, 0)).r;\r\n\t#else\r\n\t\t#if defined(DIRECTIONAL_SHAFTS)\r\n\t\t\treturn exp(_Extinction * distance);\r\n\t\t#else\r\n\t\t\treturn 1.0 / (1.0 + 25.0 * distance * distance);\r\n\t\t#endif\r\n\t#endif\r\n}\r\n\r\ninline float cookie(float2 pos)\r\n{\r\n\t#if defined(COOKIE_TEX_ON)\r\n\t\treturn tex2Dlod(_Cookie, float4(pos.xy, 0, 0)).w;\r\n\t#else\r\n\t\tfloat2 a = pos*2.0 - 1.0;\r\n\t\treturn saturate(1.0 - pow(dot(a, a), 3.0));\r\n\t#endif\r\n}\r\n\r\n#ifdef SHADER_API_D3D9\r\n#define MAX_STEPS 256\r\n#else\r\n#define MAX_STEPS 512\r\n#endif\r\n\r\nfloat4 frag(posuv i) : COLOR\r\n{\r\n\tfloat2 uv = tex2D(_Coord, i.uv).xy;\r\n\tfloat2 uv05 = (floor(uv*_ScreenTexDim.xy) + 0.5)*_ScreenTexDim.zw;\r\n\tfloat sceneDepth = Linear01Depth(UNITY_SAMPLE_DEPTH(tex2D (_CameraDepthTexture, uv05)));\r\n\r\n\tfloat3 cameraPos = _CameraPosLocal.xyz;\r\n\tfloat near, far, rayLength;\r\n\tfloat3 rayN;\r\n\r\n\t// In the current space the light volume is either the full unit cube\r\n\t// centered at 0, or a frustum inscribed in that cube. We proceed the same,\r\n\t// except that for frustum pos.xy (shadowmap UVs) will need to be stretched out\r\n\t// closer to the near plane, to match shadowmap's perspective.\r\n\t// (We know we'll intersect the volume, since this shader shouldn't be run for\r\n\t// samples which don't.)\r\n\tIntersectVolume(uv, near, far, rayN, rayLength);\r\n\r\n\tsceneDepth *= rayLength;\r\n\r\n\t// Don't want to raymarch behind the camera, so clamp near intersection to 0.\r\n\tnear = max(near, 0);\r\n\tnear = max(near, _MinDistFromCamera);\r\n\r\n\t// The box is centered around 0,0,0. Offset it by 0.5 to\r\n\t// (0,0,0) (1,1,1) to make shadow sampling easier.\r\n\tcameraPos += 0.5;\r\n\r\n\tfloat3 frontPos = near*rayN + cameraPos;\r\n\tfloat depthAlongView = (min(sceneDepth, far) - near);\r\n\tfloat3 frontToBack = depthAlongView*rayN;\r\n\r\n\t// Number of steps is the length of frontToBack in shadowmap texels,\r\n\t// either along shadomap width or height, whichever projection is longer.\r\n\tfloat2 frontToBackTemp = floor (frontToBack.xy * _ShadowmapDim.xy);\r\n\tint steps = 2 * max(abs(frontToBackTemp.x), abs(frontToBackTemp.y));\r\n\tsteps = clamp((fixed)steps, 4, MAX_STEPS);\r\n\tfloat oneOverSteps = 1.0 / float(steps);\r\n\tfrontToBack.xy = frontToBackTemp.xy * _ShadowmapDim.zw;\r\n\tfloat3 frontToBackOverSteps = frontToBack*oneOverSteps;\r\n\r\n\t#if defined(SPOT_SHAFTS)\r\n\tfloat3 params = float3(0.5, 0.5 - _FrustumApex, - 0.5 - _FrustumApex);\r\n\t#endif\r\n\r\n\tfloat3 inscatter = 0;\r\n\tfor (int i = 0; i < steps; i++)\r\n\t{\r\n\t\tfloat3 pos = frontPos + i * frontToBackOverSteps;\r\n\t\t#if defined(SPOT_SHAFTS)\r\n\t\t// stretch out UVs as we get closer to the near plane\r\n\t\tpos.xy = (pos.xy - params.x) * params.y / (pos.z + params.z) + params.x;\r\n\t\t#endif\r\n\t\t\r\n\t\t// Important to use tex2Dlod to save on calculating derivatives, and we're\r\n\t\t// sampling once every texel anyway. tex2D is 6x slower.\r\n\t\tfloat3 sample = tex2Dlod(_Shadowmap, float4(pos.xy, 0, 0)).x > pos.z;\r\n\r\n\t\tsample *= attenuation(pos.z);\r\n\r\n\t\t#if defined(COLORED_ON)\r\n\t\t\tsample *= tex2Dlod(_ColorFilter, float4(pos.xy, 0, 0)).xyz;\r\n\t\t#endif\r\n\r\n\t\t#if defined(SPOT_SHAFTS)\r\n\t\t\tsample *= cookie(pos.xy);\r\n\t\t#endif\r\n\r\n\t\tinscatter += sample;\r\n\t}\r\n\r\n\t// Normalize inscattered light depending on how many steps we took and what part\r\n\t// of the entire depth did we raymarch.\r\n\tinscatter *= _LightColor.rgb * _Brightness * oneOverSteps * depthAlongView;\r\n\treturn saturate(inscatter).xyzz;\r\n}\r\n\r\nENDCG\r\n}\r\n}\r\n}"
        },
        {
          "name": "Raymarch.shader.meta",
          "type": "blob",
          "size": 0.1083984375,
          "content": "fileFormatVersion: 2\nguid: 8b94af9deac0e2d4e9523f6090a3e61e\nShaderImporter:\n  defaultTextures: []\n  userData: \n"
        },
        {
          "name": "SamplePositions.shader",
          "type": "blob",
          "size": 0.81640625,
          "content": "Shader \"Hidden/Sample Positions\" {\nProperties {\n}\nSubShader {\nPass {\n\tCull Off ZWrite Off ZTest Always Fog { Mode Off }\n\nCGPROGRAM\n#pragma target 5.0\n\n#pragma vertex vert\n#pragma fragment frag\n\n#include \"UnityCG.cginc\"\n\nsampler2D _Coord;\nsampler2D _InterpolationEpi;\nfloat4 _OutputTexDim;\nfloat4 _CoordTexDim;\nfloat _SampleType; // 0 - raymarched, 1 - interpolated along the epi ray\nfloat4 _Color;\nRWTexture2D<float4> _OutputTex;\n\nstruct v2f {\n\tfloat4 pos : POSITION;\n\tfloat2 uv : TEXCOORD0;\n};\n\nv2f vert (appdata_img v)\n{\n\tv2f o;\n\to.pos = v.vertex;\n\to.uv = o.pos.xy * 0.5 + 0.5;\n\to.uv.y = 1 - o.uv.y;\n\treturn o;\n}\n\nhalf4 frag (v2f i) : COLOR\n{\n\tint2 loc = floor(tex2D(_Coord, i.uv).xy*_OutputTexDim.xy);\n\tif (_SampleType == all(tex2D(_InterpolationEpi, i.uv).xy))\n\t\t_OutputTex[loc] = _Color;\n\t\n\treturn 0;\n}\n\nENDCG\n\n}\n}\n\nFallback Off\n}\n"
        },
        {
          "name": "SamplePositions.shader.meta",
          "type": "blob",
          "size": 0.1083984375,
          "content": "fileFormatVersion: 2\nguid: 328e45223da3ee24a9b9bc2020d76aa4\nShaderImporter:\n  defaultTextures: []\n  userData: \n"
        },
        {
          "name": "Shared.cginc",
          "type": "blob",
          "size": 4.875,
          "content": "float4 _LightPos;\r\n\r\nfloat2 GetEpipolarLineEntryPoint(float2 exit)\r\n{\r\n#if defined(LIGHT_ON_SCREEN)\r\n\t// If light is on screen, it's the entry point of every epipolar line\r\n\treturn _LightPos.xy;\r\n\r\n#else\r\n\t// If light is outside of the screen, the entry point is intersection of\r\n\t// the epipolar line with the screen edge\r\n\r\n\tfloat2 dir = exit.xy - _LightPos.xy;\r\n\tfloat distToExitEdge = length(dir);\r\n\tdir /= distToExitEdge;\r\n\t\r\n\t// Signed distances from light to interections with screen edges\r\n\t// (1 - validExit) to avoid division by 0\r\n\tbool4 validExit = abs(dir.xyxy) > 1e-5;\r\n\tfloat4 distToEdges = (float4(-1,-1,1,1) - _LightPos.xyxy) / (dir.xyxy + (1 - validExit));\r\n\r\n\t// Find which intersection is the one before exit - that will be the entry.\r\n\t// 3 other are just intersections with extended screen edges, outside of the screen.\r\n\t// TODO: Not sure about the 1e-3 offset here, maybe it should be resolution-dependent?\r\n\tvalidExit = validExit * (distToEdges < (distToExitEdge - 1e-3));\r\n\t// Workaround a compiler bug on osx with temp\r\n\tfloat4 temp = -(1 - validExit);\r\n\ttemp *= 1.0+38;\r\n\tdistToEdges = validExit * distToEdges + temp;\r\n\r\n\tfloat entryDist = 0;\r\n\tentryDist = max(entryDist, distToEdges.x);\r\n\tentryDist = max(entryDist, distToEdges.y);\r\n\tentryDist = max(entryDist, distToEdges.z);\r\n\tentryDist = max(entryDist, distToEdges.w);\r\n\r\n\treturn _LightPos.xy + dir * entryDist;\r\n#endif\r\n}\r\n\r\n// Every _InterpolationStep pixels we need to force a raymarched sample to sample the low freq changes of\r\n// intensity along the epipolar line.\r\n// Closer to the light we should make that minimal sampling more dense, due to higher gradient in light intensity,\r\n// but in those directions the full raymarching takes fewer steps anyway.\r\nfloat _InterpolationStep;\r\n\r\nint GetInterpolationStep(float uvx)\r\n{\r\n\tint step = _InterpolationStep;\r\n\tif ( uvx*8 < 1)\r\n\t\tstep = step/4;\r\n\r\n\treturn step;\r\n}\r\n\r\nstruct appdata_pos\r\n{\r\n    float4 vertex : POSITION;\r\n};\r\n\r\nstruct posuv\r\n{\r\n\tfloat4 pos : SV_POSITION;\r\n\tfloat2 uv : TEXCOORD0;\r\n};\r\n\r\nposuv vert_simple (appdata_pos v)\r\n{\r\n\tposuv o;\r\n\to.pos = v.vertex;\r\n\to.uv = o.pos.xy*0.5 + 0.5;\r\n\t#if !UNITY_UV_STARTS_AT_TOP\r\n\t\to.pos.y *= -1;\r\n\t#endif\r\n\to.uv.y = 1 - o.uv.y;\r\n\t\r\n\treturn o;\r\n}\r\n\r\n// Cube() by Simon Green\r\ninline bool Cube(float3 org, float3 dir, out float tnear, out float tfar)\r\n{\r\n\t// compute intersection of ray with all six bbox planes\r\n\tfloat3 invR = 1.0 / dir;\r\n\tfloat3 tbot = invR * (- 0.5f - org);\r\n\tfloat3 ttop = invR * (  0.5f - org);\r\n\t\r\n\t// re-order intersections to find smallest and largest on each axis\r\n\tfloat3 tmin = min (ttop, tbot);\r\n\tfloat3 tmax = max (ttop, tbot);\r\n\t\r\n\t// find the largest tmin and the smallest tmax\r\n\tfloat2 t0 = max (tmin.xx, tmin.yz);\r\n\ttnear = max (t0.x, t0.y);\r\n\tt0 = min (tmax.xx, tmax.yz);\r\n\ttfar = min (t0.x, t0.y);\r\n\r\n\t// check for hit\r\n\treturn tnear < tfar && tfar > 0;\r\n}\r\n\r\n// frustum inscribed in a unit cube centered at 0, apex on x\r\n#define INF 9.9e8\r\ninline bool Frustum(float3 org, float3 dir, float apex, out float near, out float far)\r\n{\r\n\tfloat2 dirf = float2(0.5 - apex, 0.5); \r\n\tfloat3 tbot, ttop;\r\n\t\r\n\t// intersection with near and far planes\r\n\tfloat invdirz = 1.0 / dir.z;\r\n\ttbot.z = invdirz * (-0.5 - org.z);\r\n\tttop.z = invdirz * (0.5 - org.z);\r\n\r\n\tfloat temp = dirf.y * (org.z - apex);\r\n\t\r\n\t// intersection with inclined planes on y\r\n\ttbot.y = (-temp - dirf.x * org.y) / (dirf.x * dir.y + dirf.y * dir.z);\r\n\tttop.y = ( temp - dirf.x * org.y) / (dirf.x * dir.y - dirf.y * dir.z);\r\n\t\r\n\t// intersection with inclined planes on x\r\n\ttbot.x = (-temp - dirf.x * org.x) / (dirf.x * dir.x + dirf.y * dir.z);\r\n\tttop.x = ( temp - dirf.x * org.x) / (dirf.x * dir.x - dirf.y * dir.z);\r\n\t\r\n\t// if intersecting behind the apex, set t to ray's end\r\n\tfloat4 tempt = float4(tbot.xy, ttop.xy);\r\n\ttempt = lerp(tempt, INF * sign(dir.zzzz), step(org.zzzz + tempt * dir.zzzz, apex.xxxx));\r\n\ttbot.xy = tempt.xy;\r\n\tttop.xy = tempt.zw;\r\n\r\n\t// re-order intersections to find smallest and largest on each axis\r\n\tfloat3 tmin = min(ttop, tbot);\r\n\tfloat3 tmax = max(ttop, tbot);\r\n\t\r\n\t// find the largest tmin and the smallest tmax\r\n\tfloat2 t0 = max(tmin.xx, tmin.yz);\r\n\tnear = max(t0.x, t0.y);\r\n\tt0 = min(tmax.xx, tmax.yz);\r\n\tfar = min(t0.x, t0.y);\r\n\r\n\t// check for hit\r\n\treturn near < far && far > 0.0;\r\n}\r\n\r\nfloat4x4 _FrustumRays;\r\ninline float3 FrustumRay(float2 uv, out float rayLength)\r\n{\r\n\tfloat3 ray0 = lerp(_FrustumRays[0].xyz, _FrustumRays[1].xyz, uv.x);\r\n\tfloat3 ray1 = lerp(_FrustumRays[3].xyz, _FrustumRays[2].xyz, uv.x);\r\n\tfloat3 ray = lerp(ray0, ray1, uv.y);\r\n\trayLength = length(ray);\r\n\treturn ray/rayLength;\r\n}\r\n\r\nfloat4 _CameraPosLocal;\r\nfloat _FrustumApex;\r\ninline bool IntersectVolume(float2 uv, out float near, out float far, out float3 rayN, out float rayLength)\r\n{\r\n\trayN = FrustumRay(uv, rayLength);\r\n\t#if defined(DIRECTIONAL_SHAFTS)\r\n\treturn Cube(_CameraPosLocal.xyz, rayN, near, far);\r\n\t#else\r\n\treturn Frustum(_CameraPosLocal.xyz, rayN, _FrustumApex, near, far);\r\n\t#endif\r\n}"
        },
        {
          "name": "Shared.cginc.meta",
          "type": "blob",
          "size": 0.1083984375,
          "content": "fileFormatVersion: 2\nguid: 856f5e53a230810418615655050fd2cc\nShaderImporter:\n  defaultTextures: []\n  userData: \n"
        },
        {
          "name": "scene-directional.unity",
          "type": "blob",
          "size": 26.5615234375,
          "content": "%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!29 &1\nSceneSettings:\n  m_ObjectHideFlags: 0\n  m_PVSData: \n  m_PVSObjectsArray: []\n  m_PVSPortalsArray: []\n  m_OcclusionBakeSettings:\n    smallestOccluder: 5\n    smallestHole: .25\n    backfaceThreshold: 100\n--- !u!104 &2\nRenderSettings:\n  m_Fog: 0\n  m_FogColor: {r: .5, g: .5, b: .5, a: 1}\n  m_FogMode: 3\n  m_FogDensity: .00999999978\n  m_LinearFogStart: 0\n  m_LinearFogEnd: 300\n  m_AmbientLight: {r: 0, g: 0, b: 0, a: 1}\n  m_SkyboxMaterial: {fileID: 0}\n  m_HaloStrength: .5\n  m_FlareStrength: 1\n  m_FlareFadeSpeed: 3\n  m_HaloTexture: {fileID: 0}\n  m_SpotCookie: {fileID: 0}\n  m_ObjectHideFlags: 0\n--- !u!127 &3\nLevelGameManager:\n  m_ObjectHideFlags: 0\n--- !u!157 &4\nLightmapSettings:\n  m_ObjectHideFlags: 0\n  m_LightProbes: {fileID: 0}\n  m_Lightmaps: []\n  m_LightmapsMode: 1\n  m_BakedColorSpace: 0\n  m_UseDualLightmapsInForward: 0\n  m_LightmapEditorSettings:\n    m_Resolution: 50\n    m_LastUsedResolution: 0\n    m_TextureWidth: 1024\n    m_TextureHeight: 1024\n    m_BounceBoost: 1\n    m_BounceIntensity: 1\n    m_SkyLightColor: {r: .860000014, g: .930000007, b: 1, a: 1}\n    m_SkyLightIntensity: 0\n    m_Quality: 0\n    m_Bounces: 1\n    m_FinalGatherRays: 1000\n    m_FinalGatherContrastThreshold: .0500000007\n    m_FinalGatherGradientThreshold: 0\n    m_FinalGatherInterpolationPoints: 15\n    m_AOAmount: 0\n    m_AOMaxDistance: .100000001\n    m_AOContrast: 1\n    m_LODSurfaceMappingDistance: 1\n    m_Padding: 0\n    m_TextureCompression: 0\n    m_LockAtlas: 0\n--- !u!196 &5\nNavMeshSettings:\n  m_ObjectHideFlags: 0\n  m_BuildSettings:\n    agentRadius: .5\n    agentHeight: 2\n    agentSlope: 45\n    agentClimb: .400000006\n    ledgeDropHeight: 0\n    maxJumpAcrossDistance: 0\n    accuratePlacement: 0\n    minRegionArea: 2\n    widthInaccuracy: 16.666666\n    heightInaccuracy: 10\n  m_NavMesh: {fileID: 0}\n--- !u!1 &59238562\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 59238563}\n  m_Layer: 0\n  m_Name: GameObject\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!4 &59238563\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 59238562}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 1.8477273}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &153204842\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 153204846}\n  - 33: {fileID: 153204845}\n  - 65: {fileID: 153204844}\n  - 23: {fileID: 153204843}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &153204843\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 153204842}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &153204844\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 153204842}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &153204845\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 153204842}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &153204846\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 153204842}\n  m_LocalRotation: {x: -.13802214, y: .0303278323, z: .0245923493, w: .98965925}\n  m_LocalPosition: {x: -2.69812584, y: 3.86266184, z: -19.7803078}\n  m_LocalScale: {x: 89.6017914, y: 5.42017365, z: 32.8245125}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &214555734\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 214555738}\n  - 33: {fileID: 214555737}\n  - 65: {fileID: 214555736}\n  - 23: {fileID: 214555735}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &214555735\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 214555734}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &214555736\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 214555734}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &214555737\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 214555734}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &214555738\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 214555734}\n  m_LocalRotation: {x: -.0359498858, y: .114025332, z: -.1385355, w: .983114302}\n  m_LocalPosition: {x: -3.18343711, y: 1.03633225, z: 7.54568863}\n  m_LocalScale: {x: .696410835, y: .696410835, z: .696410656}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &402865510\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 402865515}\n  - 20: {fileID: 402865514}\n  - 92: {fileID: 402865513}\n  - 124: {fileID: 402865512}\n  - 81: {fileID: 402865511}\n  m_Layer: 0\n  m_Name: Main Camera\n  m_TagString: MainCamera\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!81 &402865511\nAudioListener:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_Enabled: 1\n--- !u!124 &402865512\nBehaviour:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_Enabled: 1\n--- !u!92 &402865513\nBehaviour:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_Enabled: 1\n--- !u!20 &402865514\nCamera:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_Enabled: 1\n  serializedVersion: 2\n  m_ClearFlags: 1\n  m_BackGroundColor: {r: 1, g: 1, b: 1, a: .0196078438}\n  m_NormalizedViewPortRect:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 1\n    height: 1\n  near clip plane: 1\n  far clip plane: 100\n  field of view: 47\n  orthographic: 0\n  orthographic size: 5\n  m_Depth: -1\n  m_CullingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n  m_RenderingPath: 1\n  m_TargetTexture: {fileID: 0}\n  m_HDR: 0\n  m_OcclusionCulling: 1\n--- !u!4 &402865515\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_LocalRotation: {x: .0291578118, y: .955999494, z: .273548156, w: -.10191346}\n  m_LocalPosition: {x: -1.67941368, y: -7.58569622, z: 18.6431599}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &475369437\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 475369441}\n  - 33: {fileID: 475369440}\n  - 65: {fileID: 475369439}\n  - 23: {fileID: 475369438}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &475369438\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 475369437}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &475369439\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 475369437}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &475369440\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 475369437}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &475369441\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 475369437}\n  m_LocalRotation: {x: -.0359498858, y: .114025332, z: -.1385355, w: .983114302}\n  m_LocalPosition: {x: -3.69798756, y: 1.1446079, z: 8.60450268}\n  m_LocalScale: {x: 1.66889369, y: 1.66889369, z: 1.66889369}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &478455180\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 478455184}\n  - 33: {fileID: 478455183}\n  - 65: {fileID: 478455182}\n  - 23: {fileID: 478455181}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &478455181\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 478455180}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &478455182\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 478455180}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &478455183\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 478455180}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &478455184\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 478455180}\n  m_LocalRotation: {x: -.0359498858, y: .114025332, z: -.1385355, w: .983114302}\n  m_LocalPosition: {x: -4.10761833, y: 1.56134748, z: 10.0813341}\n  m_LocalScale: {x: .696410835, y: .696410835, z: .696410775}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &505366422\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 505366426}\n  - 33: {fileID: 505366425}\n  - 65: {fileID: 505366424}\n  - 23: {fileID: 505366423}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &505366423\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 505366422}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &505366424\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 505366422}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &505366425\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 505366422}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &505366426\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 505366422}\n  m_LocalRotation: {x: -.0729634464, y: -.721535504, z: .119713113, w: .67803514}\n  m_LocalPosition: {x: -22.3389015, y: 8.56060123, z: .954948187}\n  m_LocalScale: {x: 21.5759296, y: 5.42017365, z: 29.7989864}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &507516642\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 507516646}\n  - 33: {fileID: 507516645}\n  - 135: {fileID: 507516644}\n  - 23: {fileID: 507516643}\n  m_Layer: 0\n  m_Name: Sphere\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &507516643\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 507516642}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!135 &507516644\nSphereCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 507516642}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Radius: .5\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &507516645\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 507516642}\n  m_Mesh: {fileID: 10207, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &507516646\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 507516642}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: .443247795, y: -1.29321671, z: 5.36803436}\n  m_LocalScale: {x: 6.24883938, y: 6.24883938, z: 6.24883938}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &597730841\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 597730845}\n  - 33: {fileID: 597730844}\n  - 65: {fileID: 597730843}\n  - 23: {fileID: 597730842}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &597730842\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 597730841}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &597730843\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 597730841}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &597730844\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 597730841}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &597730845\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 597730841}\n  m_LocalRotation: {x: -.13802214, y: .0303278323, z: .0245923493, w: .98965925}\n  m_LocalPosition: {x: -.834491432, y: 13.477746, z: 13.8261185}\n  m_LocalScale: {x: 21.5759296, y: 5.42017365, z: 14.8568907}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &671491029\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 671491033}\n  - 33: {fileID: 671491032}\n  - 65: {fileID: 671491031}\n  - 23: {fileID: 671491030}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &671491030\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 671491029}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &671491031\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 671491029}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &671491032\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 671491029}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &671491033\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 671491029}\n  m_LocalRotation: {x: -.0359498858, y: .114025332, z: -.1385355, w: .983114302}\n  m_LocalPosition: {x: -2.83239913, y: 1.17890847, z: 9.78933048}\n  m_LocalScale: {x: .696410835, y: .696410835, z: .696410835}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &1171954671\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 1171954673}\n  - 108: {fileID: 1171954672}\n  - 114: {fileID: 1171954674}\n  m_Layer: 0\n  m_Name: light\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!108 &1171954672\nLight:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1171954671}\n  m_Enabled: 1\n  serializedVersion: 3\n  m_Type: 1\n  m_Color: {r: 1, g: 1, b: 1, a: 1}\n  m_Intensity: .379999995\n  m_Range: 20.4615669\n  m_SpotAngle: 70.943367\n  m_CookieSize: 10\n  m_Shadows:\n    m_Type: 1\n    m_Resolution: -1\n    m_Strength: 1\n    m_Bias: .0500000007\n    m_Softness: 4\n    m_SoftnessFade: 1\n  m_Cookie: {fileID: 0}\n  m_DrawHalo: 0\n  m_ActuallyLightmapped: 0\n  m_Flare: {fileID: 0}\n  m_RenderMode: 0\n  m_CullingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n  m_Lightmapping: 1\n  m_ShadowSamples: 1\n  m_ShadowRadius: 0\n  m_ShadowAngle: 0\n  m_IndirectIntensity: 1\n  m_AreaSize: {x: 1, y: 1}\n--- !u!4 &1171954673\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1171954671}\n  m_LocalRotation: {x: .398788512, y: 0, z: 0, w: .917042911}\n  m_LocalPosition: {x: -2.20669699, y: 16.8675499, z: -3.37934852}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!114 &1171954674\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1171954671}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 0109504c2f6a31b4498a8fd6a490584a, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_ShadowmapMode: 0\n  m_Cameras:\n  - {fileID: 402865514}\n  m_CurrentCamera: {fileID: 402865514}\n  m_Size: {x: 17.4500008, y: 11.3999996, z: 34.5400009}\n  m_SpotNear: .0500000007\n  m_SpotFar: 1\n  m_CullingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n  m_ColorFilterMask:\n    serializedVersion: 2\n    m_Bits: 0\n  m_Brightness: 3.70000005\n  m_BrightnessColored: 5\n  m_Extinction: .439999998\n  m_MinDistFromCamera: 0\n  m_ShadowmapRes: 1024\n  m_DepthShader: {fileID: 4800000, guid: 7e188a1e08ecfae4785bed08b1013219, type: 3}\n  m_ColorFilterShader: {fileID: 4800000, guid: 78da0b5fc3a6e8a469d047d71187e7ef, type: 3}\n  m_Colored: 0\n  m_ColorBalance: 1\n  m_EpipolarLines: 512\n  m_EpipolarSamples: 512\n  m_CoordShader: {fileID: 4800000, guid: 170533b360a07f945b98b5d9d11bff19, type: 3}\n  m_DepthBreaksShader: {fileID: 4800000, guid: 8675ad07e6cda494d977506a7a2a8fbd, type: 3}\n  m_RaymarchShader: {fileID: 4800000, guid: 8b94af9deac0e2d4e9523f6090a3e61e, type: 3}\n  m_InterpolateAlongRaysShader: {fileID: 4800000, guid: b4040e961c997484e824ff979a17c3c0,\n    type: 3}\n  m_SamplePositionsShader: {fileID: 4800000, guid: 328e45223da3ee24a9b9bc2020d76aa4,\n    type: 3}\n  m_FinalInterpolationShader: {fileID: 4800000, guid: 3fe6f8dd2066bc741806972899aa82f6,\n    type: 3}\n  m_DepthThreshold: .699999988\n  m_InterpolationStep: 32\n  m_ShowSamples: 0\n  m_ShowInterpolatedSamples: 0\n  m_ShowSamplesBackgroundFade: .694999993\n  m_AttenuationCurveOn: 0\n  m_AttenuationCurve:\n    serializedVersion: 2\n    m_Curve:\n    - time: 0\n      value: 1\n      inSlope: 0\n      outSlope: 0\n      tangentMode: 0\n    - time: 1\n      value: 1\n      inSlope: 0\n      outSlope: 0\n      tangentMode: 0\n    m_PreInfinity: 2\n    m_PostInfinity: 2\n--- !u!1 &1285836880\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 1285836884}\n  - 33: {fileID: 1285836883}\n  - 65: {fileID: 1285836882}\n  - 23: {fileID: 1285836881}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &1285836881\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1285836880}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &1285836882\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1285836880}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &1285836883\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1285836880}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &1285836884\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1285836880}\n  m_LocalRotation: {x: -.0894119963, y: -.616591513, z: .107983291, w: .774699986}\n  m_LocalPosition: {x: 19.2880058, y: 8.8502264, z: -6.76129341}\n  m_LocalScale: {x: 46.8088722, y: 5.42017365, z: 34.9845123}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &1322532999\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 1322533003}\n  - 33: {fileID: 1322533002}\n  - 65: {fileID: 1322533001}\n  - 23: {fileID: 1322533000}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &1322533000\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1322532999}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &1322533001\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1322532999}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &1322533002\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1322532999}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &1322533003\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1322532999}\n  m_LocalRotation: {x: -.0359498858, y: .114025332, z: -.1385355, w: .983114302}\n  m_LocalPosition: {x: -4.79509306, y: 1.44657516, z: 7.22935581}\n  m_LocalScale: {x: .696410835, y: .696410835, z: .696410716}\n  m_Children: []\n  m_Father: {fileID: 0}\n"
        },
        {
          "name": "scene-directional.unity.meta",
          "type": "blob",
          "size": 0.087890625,
          "content": "fileFormatVersion: 2\nguid: bd53624d13d834f41864ad27cead96a1\nDefaultImporter:\n  userData: \n"
        },
        {
          "name": "scene-spot.unity",
          "type": "blob",
          "size": 17.115234375,
          "content": "%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!29 &1\nSceneSettings:\n  m_ObjectHideFlags: 0\n  m_PVSData: \n  m_PVSObjectsArray: []\n  m_PVSPortalsArray: []\n  m_OcclusionBakeSettings:\n    smallestOccluder: 5\n    smallestHole: .25\n    backfaceThreshold: 100\n--- !u!104 &2\nRenderSettings:\n  m_Fog: 0\n  m_FogColor: {r: .5, g: .5, b: .5, a: 1}\n  m_FogMode: 3\n  m_FogDensity: .00999999978\n  m_LinearFogStart: 0\n  m_LinearFogEnd: 300\n  m_AmbientLight: {r: 0, g: 0, b: 0, a: 1}\n  m_SkyboxMaterial: {fileID: 0}\n  m_HaloStrength: .5\n  m_FlareStrength: 1\n  m_FlareFadeSpeed: 3\n  m_HaloTexture: {fileID: 0}\n  m_SpotCookie: {fileID: 0}\n  m_ObjectHideFlags: 0\n--- !u!127 &3\nLevelGameManager:\n  m_ObjectHideFlags: 0\n--- !u!157 &4\nLightmapSettings:\n  m_ObjectHideFlags: 0\n  m_LightProbes: {fileID: 0}\n  m_Lightmaps: []\n  m_LightmapsMode: 1\n  m_BakedColorSpace: 0\n  m_UseDualLightmapsInForward: 0\n  m_LightmapEditorSettings:\n    m_Resolution: 50\n    m_LastUsedResolution: 0\n    m_TextureWidth: 1024\n    m_TextureHeight: 1024\n    m_BounceBoost: 1\n    m_BounceIntensity: 1\n    m_SkyLightColor: {r: .860000014, g: .930000007, b: 1, a: 1}\n    m_SkyLightIntensity: 0\n    m_Quality: 0\n    m_Bounces: 1\n    m_FinalGatherRays: 1000\n    m_FinalGatherContrastThreshold: .0500000007\n    m_FinalGatherGradientThreshold: 0\n    m_FinalGatherInterpolationPoints: 15\n    m_AOAmount: 0\n    m_AOMaxDistance: .100000001\n    m_AOContrast: 1\n    m_LODSurfaceMappingDistance: 1\n    m_Padding: 0\n    m_TextureCompression: 0\n    m_LockAtlas: 0\n--- !u!196 &5\nNavMeshSettings:\n  m_ObjectHideFlags: 0\n  m_BuildSettings:\n    agentRadius: .5\n    agentHeight: 2\n    agentSlope: 45\n    agentClimb: .400000006\n    ledgeDropHeight: 0\n    maxJumpAcrossDistance: 0\n    accuratePlacement: 0\n    minRegionArea: 2\n    widthInaccuracy: 16.666666\n    heightInaccuracy: 10\n  m_NavMesh: {fileID: 0}\n--- !u!1 &31460979\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 31460983}\n  - 33: {fileID: 31460982}\n  - 64: {fileID: 31460981}\n  - 23: {fileID: 31460980}\n  m_Layer: 0\n  m_Name: Plane\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &31460980\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 31460979}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!64 &31460981\nMeshCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 31460979}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_SmoothSphereCollisions: 0\n  m_Convex: 0\n  m_Mesh: {fileID: 10209, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!33 &31460982\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 31460979}\n  m_Mesh: {fileID: 10209, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &31460983\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 31460979}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: -9.69141102, y: -8.3548708, z: 13.4716568}\n  m_LocalScale: {x: 3.65294385, y: 3.65294385, z: 3.65294385}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &59238562\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 59238563}\n  m_Layer: 0\n  m_Name: GameObject\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!4 &59238563\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 59238562}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 1.8477273}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &153204842\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 153204846}\n  - 33: {fileID: 153204845}\n  - 65: {fileID: 153204844}\n  - 23: {fileID: 153204843}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &153204843\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 153204842}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &153204844\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 153204842}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &153204845\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 153204842}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &153204846\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 153204842}\n  m_LocalRotation: {x: -.325656295, y: .0250359029, z: .0299627203, w: .944681704}\n  m_LocalPosition: {x: -.861720085, y: .081322737, z: 5.71715736}\n  m_LocalScale: {x: 1.89010262, y: 1.89010262, z: 1.89010262}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &402865510\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 402865515}\n  - 20: {fileID: 402865514}\n  - 92: {fileID: 402865513}\n  - 124: {fileID: 402865512}\n  - 81: {fileID: 402865511}\n  m_Layer: 0\n  m_Name: Main Camera\n  m_TagString: MainCamera\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!81 &402865511\nAudioListener:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_Enabled: 1\n--- !u!124 &402865512\nBehaviour:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_Enabled: 1\n--- !u!92 &402865513\nBehaviour:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_Enabled: 1\n--- !u!20 &402865514\nCamera:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_Enabled: 1\n  serializedVersion: 2\n  m_ClearFlags: 1\n  m_BackGroundColor: {r: 0, g: 0, b: 0, a: .0196078438}\n  m_NormalizedViewPortRect:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 1\n    height: 1\n  near clip plane: 1\n  far clip plane: 100\n  field of view: 60\n  orthographic: 0\n  orthographic size: 5\n  m_Depth: -1\n  m_CullingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n  m_RenderingPath: 2\n  m_TargetTexture: {fileID: 0}\n  m_HDR: 0\n  m_OcclusionCulling: 1\n--- !u!4 &402865515\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 402865510}\n  m_LocalRotation: {x: -.0506343134, y: .887798011, z: -.299117506, w: -.346091986}\n  m_LocalPosition: {x: 9.33725834, y: 6.99830723, z: 18.9443817}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &475369437\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 475369441}\n  - 33: {fileID: 475369440}\n  - 65: {fileID: 475369439}\n  - 23: {fileID: 475369438}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &475369438\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 475369437}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &475369439\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 475369437}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &475369440\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 475369437}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &475369441\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 475369437}\n  m_LocalRotation: {x: -.0359498858, y: .114025332, z: -.1385355, w: .983114302}\n  m_LocalPosition: {x: -6.41960526, y: .0823409557, z: 7.24838829}\n  m_LocalScale: {x: 1.66889369, y: 1.66889369, z: 1.66889369}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &507516642\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 507516646}\n  - 33: {fileID: 507516645}\n  - 135: {fileID: 507516644}\n  - 23: {fileID: 507516643}\n  m_Layer: 0\n  m_Name: Sphere\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &507516643\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 507516642}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!135 &507516644\nSphereCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 507516642}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Radius: .5\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &507516645\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 507516642}\n  m_Mesh: {fileID: 10207, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &507516646\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 507516642}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 4.9946146, y: -2.97879314, z: 5.3438015}\n  m_LocalScale: {x: 6.24883938, y: 6.24883938, z: 6.24883938}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!1 &1171954671\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 1171954673}\n  - 108: {fileID: 1171954672}\n  - 114: {fileID: 1171954674}\n  m_Layer: 0\n  m_Name: light\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!108 &1171954672\nLight:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1171954671}\n  m_Enabled: 1\n  serializedVersion: 3\n  m_Type: 0\n  m_Color: {r: 1, g: 1, b: 1, a: 1}\n  m_Intensity: 1.5\n  m_Range: 20.4615669\n  m_SpotAngle: 70.943367\n  m_CookieSize: 10\n  m_Shadows:\n    m_Type: 1\n    m_Resolution: -1\n    m_Strength: 1\n    m_Bias: .0500000007\n    m_Softness: 4\n    m_SoftnessFade: 1\n  m_Cookie: {fileID: 0}\n  m_DrawHalo: 0\n  m_ActuallyLightmapped: 0\n  m_Flare: {fileID: 0}\n  m_RenderMode: 0\n  m_CullingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n  m_Lightmapping: 1\n  m_ShadowSamples: 1\n  m_ShadowRadius: 0\n  m_ShadowAngle: 0\n  m_IndirectIntensity: 1\n  m_AreaSize: {x: 1, y: 1}\n--- !u!4 &1171954673\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1171954671}\n  m_LocalRotation: {x: .398788512, y: 0, z: 0, w: .917042911}\n  m_LocalPosition: {x: -.594215572, y: 5.86210251, z: .748961449}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 0}\n--- !u!114 &1171954674\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 1171954671}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 0109504c2f6a31b4498a8fd6a490584a, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_ShadowmapMode: 0\n  m_Cameras:\n  - {fileID: 402865514}\n  m_CurrentCamera: {fileID: 402865514}\n  m_Size: {x: 10, y: 10, z: 20}\n  m_SpotNear: .0500000007\n  m_SpotFar: 1\n  m_CullingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n  m_ColorFilterMask:\n    serializedVersion: 2\n    m_Bits: 0\n  m_Brightness: 2.75\n  m_BrightnessColored: 5\n  m_Extinction: .439999998\n  m_MinDistFromCamera: 0\n  m_ShadowmapRes: 1024\n  m_DepthShader: {fileID: 4800000, guid: 7e188a1e08ecfae4785bed08b1013219, type: 3}\n  m_ColorFilterShader: {fileID: 4800000, guid: 78da0b5fc3a6e8a469d047d71187e7ef, type: 3}\n  m_Colored: 0\n  m_ColorBalance: 1\n  m_EpipolarLines: 512\n  m_EpipolarSamples: 512\n  m_CoordShader: {fileID: 4800000, guid: 170533b360a07f945b98b5d9d11bff19, type: 3}\n  m_DepthBreaksShader: {fileID: 4800000, guid: 8675ad07e6cda494d977506a7a2a8fbd, type: 3}\n  m_RaymarchShader: {fileID: 4800000, guid: 8b94af9deac0e2d4e9523f6090a3e61e, type: 3}\n  m_InterpolateAlongRaysShader: {fileID: 4800000, guid: b4040e961c997484e824ff979a17c3c0,\n    type: 3}\n  m_SamplePositionsShader: {fileID: 4800000, guid: 328e45223da3ee24a9b9bc2020d76aa4,\n    type: 3}\n  m_FinalInterpolationShader: {fileID: 4800000, guid: 3fe6f8dd2066bc741806972899aa82f6,\n    type: 3}\n  m_DepthThreshold: .5\n  m_InterpolationStep: 32\n  m_ShowSamples: 0\n  m_ShowInterpolatedSamples: 0\n  m_ShowSamplesBackgroundFade: .731999993\n  m_AttenuationCurveOn: 0\n  m_AttenuationCurve:\n    serializedVersion: 2\n    m_Curve:\n    - time: 0\n      value: 1\n      inSlope: 0\n      outSlope: 0\n      tangentMode: 0\n    - time: 1\n      value: 1\n      inSlope: 0\n      outSlope: 0\n      tangentMode: 0\n    m_PreInfinity: 2\n    m_PostInfinity: 2\n--- !u!1 &2024905580\nGameObject:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  serializedVersion: 4\n  m_Component:\n  - 4: {fileID: 2024905584}\n  - 33: {fileID: 2024905583}\n  - 65: {fileID: 2024905582}\n  - 23: {fileID: 2024905581}\n  m_Layer: 0\n  m_Name: Cube\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!23 &2024905581\nRenderer:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 2024905580}\n  m_Enabled: 1\n  m_CastShadows: 1\n  m_ReceiveShadows: 1\n  m_LightmapIndex: 255\n  m_LightmapTilingOffset: {x: 1, y: 1, z: 0, w: 0}\n  m_Materials:\n  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}\n  m_SubsetIndices: \n  m_StaticBatchRoot: {fileID: 0}\n  m_UseLightProbes: 0\n  m_LightProbeAnchor: {fileID: 0}\n  m_ScaleInLightmap: 1\n  m_SortingLayer: 0\n  m_SortingOrder: 0\n  m_SortingLayerID: 0\n--- !u!65 &2024905582\nBoxCollider:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 2024905580}\n  m_Material: {fileID: 0}\n  m_IsTrigger: 0\n  m_Enabled: 1\n  serializedVersion: 2\n  m_Size: {x: 1, y: 1, z: 1}\n  m_Center: {x: 0, y: 0, z: 0}\n--- !u!33 &2024905583\nMeshFilter:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 2024905580}\n  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}\n--- !u!4 &2024905584\nTransform:\n  m_ObjectHideFlags: 0\n  m_PrefabParentObject: {fileID: 0}\n  m_PrefabInternal: {fileID: 0}\n  m_GameObject: {fileID: 2024905580}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: -6.18217278, y: -8.67582607, z: 5.71546936}\n  m_LocalScale: {x: 1.80127406, y: 7.80497169, z: 1.80127406}\n  m_Children: []\n  m_Father: {fileID: 0}\n"
        },
        {
          "name": "scene-spot.unity.meta",
          "type": "blob",
          "size": 0.087890625,
          "content": "fileFormatVersion: 2\nguid: 576afb797ad2fa84cbe51ac6ebbfaffc\nDefaultImporter:\n  userData: \n"
        }
      ]
    }
  ]
}