{
  "metadata": {
    "timestamp": 1736710805950,
    "page": 291,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nodatime/nodatime",
      "stars": 2824,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0830078125,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.130859375,
          "content": "# Editor backups and temporary files\n*~\n*.bak\n*.swp\n\n# IDE-generated files\n*.suo\n*.user\n*.sln.cache\n.vs\n.vscode\n.idea\n\n# IDE add-ins\n*.dotCover\n*.ncrunchproject\n*.ncrunchsolution\n_NCrunch*\n.resharper\n*.ReSharper\n_ReSharper*\nStyleCop.Cache\n.cr\n\n# Auto-created thumbnails\nThumbs.db\n\n# Build output directories (anywhere)\n**/bin/\n**/obj/\n\n# NUnit output\nTestResult.xml\n\n# Output from build steps\n/build/tmp/**\n\n# Sandcastle per-user settings\n/build/NodaTime.shfbproj_*\n/build/NodaTime-Pcl.shfbproj_*\n\n# Generated web site\n/www/_site/**\n\n# Temporary build output directories\n/build/tmp\n/build/releasebuild\n\n# Local copy of benchmark data and Mercurial/Git logs, used for testing the dynamic part of the web site\n/src/NodaTime.Web/benchmarkdata/**\n/src/NodaTime.Web/hg-log.xml\n/src/NodaTime.Web/git-log.txt\n\n# Roslyn temporary files\n/src/*.sln.ide/**\n\n# BenchmarkDotNet output\nBenchmarkDotNet.Artifacts\n\n# Packages installed during the build\npackages\ncoverage\n\n# Local files\nsrc/NodaTime.Web/docfx\nsrc/NodaTime.Web/benchmarks\nbuild/history\n\n# If coverage fails, we don't want to add the pinning global.json\n# file into source control\nsrc/NodaTime.Test/global.json"
        },
        {
          "name": "AUTHORS.txt",
          "type": "blob",
          "size": 0.6767578125,
          "content": "Noda Time contains code contributed by:\n\nAndrey Akinshin <andrey.akinshin@gmail.com>\nCarlos Schults <carlos.schults@gmail.com>\nDavid Nelson <commongenius@hotmail.com>\nDmitry Bulavin <dmitry.bulavin@gmail.com>\nDor \"The Configurator\" Kleiman <configurator@gmail.com>\nJames Keesey <james.keesey@gmail.com>\nJesse Taber <jesse.taber@gmail.com>\nJon Skeet <skeet@pobox.com>\nLasse V. Karlsen <lasse@vkarlsen.no>\nMalcolm Rowe <malcolm.rowe@gmail.com> (Google)\nMartinho Fernandes <martinho.fernandes@gmail.com>\nMatt Johnson <mj1856@hotmail.com>\nMatthew Scharley <matt.scharley@gmail.com>\nNathan Palmer <snowpalmer@gmail.com>\nRichard Schneider <makaretu@gmail.com>\nScott Stephens <stephens.js@gmail.com>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.0263671875,
          "content": "# How to Contribute\n\nThanks for your interest in Noda Time. We appreciate all kinds of contributions, from submitting issues to improving documentation; from writing tests to implementing new code. All help is welcome!\n\n## Basic Requirements\n\nIf you want to contribute to the codebase, you're going to need a text editor or IDE. We recommend [Visual Studio Community](https://visualstudio.microsoft.com/downloads/) (Windows) or [Visual Studio Code](https://code.visualstudio.com/) (Windows/Linux/macOS).\n\n[Visual Studio for Mac](https://visualstudio.microsoft.com/vs/mac/) and [JetBrains Rider](https://www.jetbrains.com/rider/) should be fine as well, but we haven't tried developing Noda Time using them.\n\nYou're also going to need the .NET / .NET Core SDK installed. Look at the [global.json](global.json) file to see which version of the SDK is currently required, then download it from [here](https://dotnet.microsoft.com/download). (The version required to build and test Noda Time won't always be the most recent version; we generally stick to LTS releases unless there's a compelling reason to upgrade to something else.)\n\nPlease make sure you have a [git client](https://git-scm.com/) installed. If you don't already have a GitHub account, [please create one](https://github.com/join).\n\nAfter you're all set, you can [fork the project](https://help.github.com/articles/fork-a-repo). Then you'll be able to clone your fork, so you can edit the files locally on your machine:\n\n```Text\ngit clone https://github.com/YOUR-USERNAME/nodatime.git\n```\n\nOnce you clone the repository, you'll have a [remote repository](https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes) (or simply *remote*) called `origin`, that points to your forked repository on GitHub.\n\nYou'll usually want to add another remote, pointing to the original repository on GitHub. It's an accepted convention to call this remote *upstream*. You can do it like this:\n\n```Text\ngit remote add upstream https://github.com/nodatime/nodatime.git\n```\n\n## How to start contributing?\n\nWe have a [`help-wanted`](https://github.com/nodatime/nodatime/labels/help%20wanted)\nlabel on our issue tracker to indicate tasks which new contributors can work on without much previous experience in Noda Time.\n\nIf you've found something you'd like to help with, please leave a comment in the issue.\n\nAdditionally, feel free to open an issue if you find a bug or want to suggest a feature or enhancement.\n\n### Making Changes\n\nWhen you're ready to start working, create a new branch off the `main` branch:\n\n```\ngit checkout main\ngit pull upstream main\ngit checkout -b SOME-BRANCH-NAME\n```\n\nTry to use a short, descriptive name for your branch, such as `add-tests-foobar-struct`.\n\n### Building\n\nTo build everything under Visual Studio, simply open the src/NodaTime.sln solution file and build normally. To build with just the .NET Core SDK, run\n\n```Text \ndotnet build src/NodaTime.sln\n```\n\n### Running Tests\n\nSimply run the following command:\n\n```Text\ndotnet test src/NodaTime.Test\n```\n\n### Submitting Changes\n\nTo publish your branch to your local fork, run this command from the Git Shell:\n\n```Text\ngit push origin -u MY-BRANCH-NAME\n```\n\nWhen your work is finished, [open a pull request](https://help.github.com/articles/using-pull-requests) against your changes.\n\nIf your pull request fixes an issue, add a comment with the word \"Fixes\", \"Resolves\" or \"Closes\", followed by the issue's number:\n\n>   Fixes #1145\n\nIf you need to, feel free to add comments to the PR asking for suggestions or help.\n\n### Bash scripts\n\n### Other scripts\n\nBash scripts are used for more complex tasks such as updating TZDB. Many contributors will never need to run these scripts, but just occasionally they may be useful when investigating a CI failure.\n\nThese should largely work from any bash environment, but the one used by the maintainers is the version included with [Git for Windows](https://git-scm.com/download/win), also sometimes known as \"git bash\". Please [file an issue](https://github.com/nodatime/nodatime/issues/new) if you need to run a script but have trouble doing so.\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 2.1171875,
          "content": "<Project>\n  <PropertyGroup>\n    <!-- \n      - The most recently-released version. This is the last\n      - thing to change before performing a release.\n      -->\n    <Version>3.2.0</Version>\n    <!--\n      - The version we check for compatibility against. This is changed\n      - immediately *after* a release.\n      -->\n    <PackageValidationBaselineVersion>3.2.0</PackageValidationBaselineVersion>\n  </PropertyGroup>\n  \n  <!-- Common properties across all projects (or ones that at least aren't harmful) -->\n  <PropertyGroup>\n    <!-- Make the repository root available for other properties -->\n    <RepoRoot>$([System.IO.Path]::GetDirectoryName('$(MSBuildThisFileDirectory)'))</RepoRoot>\n\n    <!-- Build properties -->\n    <AssemblyOriginatorKeyFile>$(RepoRoot)/NodaTime Release.snk</AssemblyOriginatorKeyFile>\n    <SignAssembly>true</SignAssembly>\n    <GenerateNeutralResourcesLanguageAttribute>false</GenerateNeutralResourcesLanguageAttribute>\n    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>\n    <Deterministic>True</Deterministic>\n    <LangVersion>latest</LangVersion>\n    <Nullable>enable</Nullable>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <WarningsAsErrors />\n\n    <!-- Packaging properties -->\n    <PackageTags>date;time;timezone;calendar;nodatime</PackageTags>\n    <PackageProjectUrl>https://nodatime.org/</PackageProjectUrl>\n    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>\n    <RepositoryUrl>https://github.com/nodatime/nodatime</RepositoryUrl>\n    <!-- Most of our projects aren't packable, and this is a safe default.\n      -  We enable packing explicitly for NodaTime and NodaTime.Testing. -->\n    <IsPackable>False</IsPackable>\n\n    <!-- Properties to get SourceLink to work -->\n    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>\n    <PublishRepositoryUrl>true</PublishRepositoryUrl>\n    <EmbedUntrackedSources>true</EmbedUntrackedSources>\n    \n    <!-- Always enable InheritDoc, even in debug builds -->\n    <InheritDocEnabled>true</InheritDocEnabled>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 0.615234375,
          "content": "<Project>\n\n  <!-- See https://github.com/dotnet/sourcelink/issues/572 -->\n  <PropertyGroup>\n    <TargetFrameworkMonikerAssemblyAttributesPath>$([System.IO.Path]::Combine('$(IntermediateOutputPath)','$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)'))</TargetFrameworkMonikerAssemblyAttributesPath>\n  </PropertyGroup>\n  <ItemGroup>\n    <EmbeddedFiles Include=\"$(GeneratedAssemblyInfoFile)\"/>\n  </ItemGroup>\n\n  <!-- See https://github.com/saucecontrol/InheritDoc -->\n  <ItemGroup>\n    <PackageReference Include=\"SauceControl.InheritDoc\" Version=\"2.0.1\" PrivateAssets=\"all\" />\n  </ItemGroup>\n\n</Project>\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.4287109375,
          "content": "=============================================================================\n= NOTICE file corresponding to section 4d of the Apache License Version 2.0 =\n=============================================================================\nThis product includes ports of software developed by\nJoda.org (http://www.joda.org/).\n\n(Portions of Noda Time were derived from Joda Time 1.6.0; Joda Time\n1.6.0 is copyright 2001-2009 Stephen Colebourne.)\n"
        },
        {
          "name": "NodaTime Release Public Key.snk",
          "type": "blob",
          "size": 0.15625,
          "content": null
        },
        {
          "name": "NodaTime Release.snk",
          "type": "blob",
          "size": 0.58203125,
          "content": null
        },
        {
          "name": "NodaTime.FxCop",
          "type": "blob",
          "size": 106.3505859375,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FxCopProject Version=\"1.36\" Name=\"My FxCop Project\">\n <ProjectOptions>\n  <SharedProject>True</SharedProject>\n  <Stylesheet Apply=\"False\">c:\\program files\\microsoft fxcop 1.36\\Xml\\FxCopReport.xsl</Stylesheet>\n  <SaveMessages>\n   <Project Status=\"Active, Excluded\" NewOnly=\"False\" />\n   <Report Status=\"Active\" NewOnly=\"False\" />\n  </SaveMessages>\n  <ProjectFile Compress=\"True\" DefaultTargetCheck=\"True\" DefaultRuleCheck=\"True\" SaveByRuleGroup=\"\" Deterministic=\"True\" />\n  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>\n  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>\n  <SourceLookup>True</SourceLookup>\n  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>\n  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>\n  <Spelling Locale=\"en-US\" />\n  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>\n  <CustomDictionaries SearchFxCopDir=\"True\" SearchUserProfile=\"True\" SearchProjectDir=\"True\" />\n  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>\n  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>\n  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>\n </ProjectOptions>\n <Targets>\n  <AssemblyReferenceDirectories>\n   <Directory>$(ProjectDir)/src/NodaTime/bin/Release/</Directory>\n   <Directory>$(ProjectDir)/src/ZoneInfoCompiler/bin/Release/</Directory>\n  </AssemblyReferenceDirectories>\n  <Target Name=\"$(ProjectDir)/src/NodaTime/bin/Debug/NodaTime.dll\" Analyze=\"True\" AnalyzeAllChildren=\"True\" />\n  <Target Name=\"$(ProjectDir)/src/ZoneInfoCompiler/bin/Debug/ZoneInfoCompiler.exe\" Analyze=\"True\" AnalyzeAllChildren=\"True\" />\n </Targets>\n <Rules>\n  <RuleFiles>\n   <RuleFile Name=\"$(FxCopDir)\\Rules\\DesignRules.dll\" Enabled=\"True\" AllRulesEnabled=\"True\" />\n   <RuleFile Name=\"$(FxCopDir)\\Rules\\GlobalizationRules.dll\" Enabled=\"True\" AllRulesEnabled=\"True\" />\n   <RuleFile Name=\"$(FxCopDir)\\Rules\\InteroperabilityRules.dll\" Enabled=\"True\" AllRulesEnabled=\"True\" />\n   <RuleFile Name=\"$(FxCopDir)\\Rules\\MobilityRules.dll\" Enabled=\"True\" AllRulesEnabled=\"True\" />\n   <RuleFile Name=\"$(FxCopDir)\\Rules\\NamingRules.dll\" Enabled=\"True\" AllRulesEnabled=\"True\" />\n   <RuleFile Name=\"$(FxCopDir)\\Rules\\PerformanceRules.dll\" Enabled=\"True\" AllRulesEnabled=\"True\" />\n   <RuleFile Name=\"$(FxCopDir)\\Rules\\PortabilityRules.dll\" Enabled=\"True\" AllRulesEnabled=\"True\" />\n   <RuleFile Name=\"$(FxCopDir)\\Rules\\SecurityRules.dll\" Enabled=\"True\" AllRulesEnabled=\"True\" />\n   <RuleFile Name=\"$(FxCopDir)\\Rules\\UsageRules.dll\" Enabled=\"True\" AllRulesEnabled=\"True\" />\n  </RuleFiles>\n  <Groups />\n  <Settings />\n </Rules>\n <FxCopReport Version=\"1.36\">\n  <Namespaces>\n   <Namespace Name=\"NodaTime.Clocks\">\n    <Messages>\n     <Message TypeName=\"AvoidNamespacesWithFewTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1020\" Created=\"2010-03-09 01:02:44Z\">\n      <Issue>\n       <Item>NodaTime.Clocks</Item>\n      </Issue>\n     </Message>\n    </Messages>\n   </Namespace>\n   <Namespace Name=\"NodaTime.Converters\">\n    <Messages>\n     <Message TypeName=\"AvoidNamespacesWithFewTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1020\" Created=\"2010-03-09 01:02:44Z\">\n      <Issue>\n       <Item>NodaTime.Converters</Item>\n      </Issue>\n     </Message>\n    </Messages>\n   </Namespace>\n   <Namespace Name=\"NodaTime.Utility\">\n    <Messages>\n     <Message TypeName=\"AvoidNamespacesWithFewTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1020\" Created=\"2010-03-09 01:02:44Z\">\n      <Issue>\n       <Item>NodaTime.Utility</Item>\n      </Issue>\n     </Message>\n    </Messages>\n   </Namespace>\n   <Namespace Name=\"NodaTime.ZoneInfoCompiler.Tzdb\">\n    <Messages>\n     <Message Id=\"Tzdb\" TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\" Created=\"2010-03-09 01:02:44Z\">\n      <Issue Name=\"Namespace\">\n       <Item>Tzdb</Item>\n       <Item>NodaTime.ZoneInfoCompiler.Tzdb</Item>\n      </Issue>\n     </Message>\n    </Messages>\n   </Namespace>\n   <Namespace Name=\"NodaTime.ZoneInfoCompiler.winmap\">\n    <Messages>\n     <Message Id=\"winmap\" TypeName=\"IdentifiersShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1709\" Created=\"2010-03-09 01:02:44Z\">\n      <Issue Name=\"Namespace\">\n       <Item>winmap</Item>\n       <Item>NodaTime.ZoneInfoCompiler.winmap</Item>\n       <Item>Winmap</Item>\n      </Issue>\n     </Message>\n     <Message Id=\"winmap\" TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\" Created=\"2010-03-09 01:02:44Z\">\n      <Issue Name=\"Namespace\">\n       <Item>winmap</Item>\n       <Item>NodaTime.ZoneInfoCompiler.winmap</Item>\n      </Issue>\n     </Message>\n    </Messages>\n   </Namespace>\n  </Namespaces>\n  <Targets>\n   <Target Name=\"$(ProjectDir)/src/NodaTime/bin/Debug/NodaTime.dll\">\n    <Modules>\n     <Module Name=\"nodatime.dll\">\n      <Messages>\n       <Message TypeName=\"AssembliesShouldHaveValidStrongNames\" Category=\"Microsoft.Design\" CheckId=\"CA2210\" Created=\"2010-03-09 01:02:44Z\">\n        <Issue Name=\"NoStrongName\">\n         <Item>'NodaTime.dll'</Item>\n        </Issue>\n       </Message>\n      </Messages>\n      <Namespaces>\n       <Namespace Name=\"NodaTime\">\n        <Types>\n         <Type Name=\"DateTimeComparer\">\n          <Messages>\n           <Message TypeName=\"AvoidUninstantiatedInternalClasses\" Category=\"Microsoft.Performance\" CheckId=\"CA1812\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue>\n             <Item>'DateTimeComparer'</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n         <Type Name=\"FieldValueException\">\n          <Messages>\n           <Message TypeName=\"ImplementStandardExceptionConstructors\" Category=\"Microsoft.Design\" CheckId=\"CA1032\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Name=\"MissingConstructor\">\n             <Item>'FieldValueException'</Item>\n             <Item>protected FieldValueException(SerializationInfo, StreamingContext)</Item>\n            </Issue>\n            <Issue Name=\"MissingConstructor\">\n             <Item>'FieldValueException'</Item>\n             <Item>public FieldValueException()</Item>\n            </Issue>\n            <Issue Name=\"MissingConstructor\">\n             <Item>'FieldValueException'</Item>\n             <Item>public FieldValueException(String)</Item>\n            </Issue>\n            <Issue Name=\"MissingConstructor\">\n             <Item>'FieldValueException'</Item>\n             <Item>public FieldValueException(String, Exception)</Item>\n            </Issue>\n           </Message>\n           <Message TypeName=\"MarkISerializableTypesWithSerializable\" Category=\"Microsoft.Usage\" CheckId=\"CA2237\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Certainty=\"95\" Level=\"Error\">\n             <Item>'FieldValueException'</Item>\n            </Issue>\n           </Message>\n          </Messages>\n          <Members>\n           <Member Name=\"#.ctor(NodaTime.Fields.DateTimeFieldType,System.Int32,System.Nullable`1&lt;System.Int64&gt;,System.Nullable`1&lt;System.Int64&gt;)\">\n            <Messages>\n             <Message TypeName=\"DoNotInitializeUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1805\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'FieldValueException.FieldValueException(DateTimeFieldType, int, long?, long?)'</Item>\n               <Item>'FieldValueException.stringValue'</Item>\n               <Item>'string'</Item>\n               <Item>null</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#.ctor(NodaTime.Fields.DateTimeFieldType,System.String)\">\n            <Messages>\n             <Message TypeName=\"DoNotInitializeUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1805\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'FieldValueException.FieldValueException(DateTimeFieldType, string)'</Item>\n               <Item>'FieldValueException.numberValue'</Item>\n               <Item>'int'</Item>\n               <Item>0</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#dateTimefieldType\">\n            <Messages>\n             <Message TypeName=\"AvoidUnusedPrivateFields\" Category=\"Microsoft.Performance\" CheckId=\"CA1823\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'FieldValueException.dateTimefieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#fieldName\">\n            <Messages>\n             <Message TypeName=\"AvoidUnusedPrivateFields\" Category=\"Microsoft.Performance\" CheckId=\"CA1823\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'FieldValueException.fieldName'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#numberValue\">\n            <Messages>\n             <Message TypeName=\"AvoidUnusedPrivateFields\" Category=\"Microsoft.Performance\" CheckId=\"CA1823\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'FieldValueException.numberValue'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#PrependMessage(System.String)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'FieldValueException.PrependMessage(string)'</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"message\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'message'</Item>\n               <Item>'FieldValueException.PrependMessage(string)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#stringValue\">\n            <Messages>\n             <Message TypeName=\"AvoidUnusedPrivateFields\" Category=\"Microsoft.Performance\" CheckId=\"CA1823\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'FieldValueException.stringValue'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"IPartial\">\n          <Members>\n           <Member Name=\"#Get(NodaTime.Fields.DateTimeFieldType)\">\n            <Messages>\n             <Message Id=\"Get\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"Member\">\n               <Item>'IPartial.Get(DateTimeFieldType)'</Item>\n               <Item>Get</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"NodaConstants\">\n          <Members>\n           <Member Name=\"#BCE\">\n            <Messages>\n             <Message Id=\"BCE\" TypeName=\"IdentifiersShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1709\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue Name=\"Member\">\n               <Item>BCE</Item>\n               <Item>'NodaConstants.BCE'</Item>\n               <Item>Bce</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"NodaTimePermission\">\n          <Messages>\n           <Message TypeName=\"IdentifiersShouldNotHaveIncorrectSuffix\" Category=\"Microsoft.Naming\" CheckId=\"CA1711\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Name=\"TypeNoAlternate\">\n             <Item>'NodaTimePermission'</Item>\n             <Item>Permission</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n         <Type Name=\"Offset\">\n          <Members>\n           <Member Name=\"#op_UnaryNegation(NodaTime.Offset)\">\n            <Messages>\n             <Message TypeName=\"OperatorOverloadsHaveNamedAlternates\" Category=\"Microsoft.Usage\" CheckId=\"CA2225\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue>\n               <Item>Negate</Item>\n               <Item>'Offset.operator -(Offset)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#op_UnaryPlus(NodaTime.Offset)\">\n            <Messages>\n             <Message TypeName=\"OperatorOverloadsHaveNamedAlternates\" Category=\"Microsoft.Usage\" CheckId=\"CA2225\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue>\n               <Item>Plus</Item>\n               <Item>'Offset.operator +(Offset)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"SkippedTimeException\">\n          <Messages>\n           <Message TypeName=\"ImplementISerializableCorrectly\" Category=\"Microsoft.Usage\" CheckId=\"CA2240\" Created=\"2010-03-09 01:04:58Z\">\n            <Issue>\n             <Item>'SkippedTimeException'</Item>\n            </Issue>\n           </Message>\n           <Message TypeName=\"ImplementStandardExceptionConstructors\" Category=\"Microsoft.Design\" CheckId=\"CA1032\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Name=\"MissingConstructor\">\n             <Item>'SkippedTimeException'</Item>\n             <Item>protected SkippedTimeException(SerializationInfo, StreamingContext)</Item>\n            </Issue>\n            <Issue Name=\"MissingConstructor\">\n             <Item>'SkippedTimeException'</Item>\n             <Item>public SkippedTimeException()</Item>\n            </Issue>\n            <Issue Name=\"MissingConstructor\">\n             <Item>'SkippedTimeException'</Item>\n             <Item>public SkippedTimeException(String)</Item>\n            </Issue>\n            <Issue Name=\"MissingConstructor\">\n             <Item>'SkippedTimeException'</Item>\n             <Item>public SkippedTimeException(String, Exception)</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n        </Types>\n       </Namespace>\n       <Namespace Name=\"NodaTime.Calendars\">\n        <Types>\n         <Type Name=\"AssembledCalendarSystem\">\n          <Members>\n           <Member Name=\"#.ctor(System.String,NodaTime.Calendars.ICalendarSystem)\">\n            <Messages>\n             <Message TypeName=\"DoNotCallOverridableMethodsInConstructors\" Category=\"Microsoft.Usage\" CheckId=\"CA2214\" Created=\"2010-03-09 01:04:58Z\">\n              <Issue>\n               <Item>'AssembledCalendarSystem.AssembledCalendarSystem(string, ICalendarSystem)'</Item>\n               <Item>&#xD;&#xA;&#xD;&#xA;AssembledCalendarSystem..ctor(String, ICalendarSystem)&#xD;&#xA;AssembledCalendarSystem.ConstructFields():FieldSet&#xD;&#xA;AssembledCalendarSystem.AssembleFields(FieldSet+Builder):Void</Item>\n              </Issue>\n             </Message>\n             <Message TypeName=\"DoNotInitializeUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1805\" Created=\"2010-03-09 01:04:58Z\">\n              <Issue>\n               <Item>'AssembledCalendarSystem.AssembledCalendarSystem(string, ICalendarSystem)'</Item>\n               <Item>'AssembledCalendarSystem.useBaseTimeOfDayFields'</Item>\n               <Item>'bool'</Item>\n               <Item>false</Item>\n              </Issue>\n              <Issue>\n               <Item>'AssembledCalendarSystem.AssembledCalendarSystem(string, ICalendarSystem)'</Item>\n               <Item>'AssembledCalendarSystem.useBaseYearMonthDayFields'</Item>\n               <Item>'bool'</Item>\n               <Item>false</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"BasicCalendarSystem\">\n          <Members>\n           <Member Name=\"#GetDayOfWeek(NodaTime.LocalInstant)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'BasicCalendarSystem.GetDayOfWeek(LocalInstant)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetDaysInMonthMax()\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'BasicCalendarSystem.GetDaysInMonthMax()'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetDaysInYearMax()\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'BasicCalendarSystem.GetDaysInYearMax()'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetMaxMonth()\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'BasicCalendarSystem.GetMaxMonth()'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetTickOfDay(NodaTime.LocalInstant)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'BasicCalendarSystem.GetTickOfDay(LocalInstant)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"BasicGJCalendarSystem\">\n          <Members>\n           <Member Name=\"#.cctor()\">\n            <Messages>\n             <Message TypeName=\"InitializeReferenceTypeStaticFieldsInline\" Category=\"Microsoft.Performance\" CheckId=\"CA1810\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'BasicGJCalendarSystem'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"GregorianCalendarSystem\">\n          <Members>\n           <Member Name=\"#GetInstance(NodaTime.IDateTimeZone)\">\n            <Messages>\n             <Message Id=\"dateTimeZone\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'dateTimeZone'</Item>\n               <Item>'GregorianCalendarSystem.GetInstance(IDateTimeZone)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"ICalendarSystem\">\n          <Members>\n           <Member Name=\"#GetPartialValues(NodaTime.IPartial,NodaTime.LocalInstant)\">\n            <Messages>\n             <Message Id=\"Partial\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'ICalendarSystem.GetPartialValues(IPartial, LocalInstant)'</Item>\n               <Item>'partial'</Item>\n               <Item>Partial</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetPeriodValues(NodaTime.Periods.PeriodType,NodaTime.LocalInstant,NodaTime.LocalInstant)\">\n            <Messages>\n             <Message Id=\"End\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'ICalendarSystem.GetPeriodValues(PeriodType, LocalInstant, LocalInstant)'</Item>\n               <Item>'end'</Item>\n               <Item>End</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#SetPartial(NodaTime.IPartial,NodaTime.LocalInstant)\">\n            <Messages>\n             <Message Id=\"Partial\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'ICalendarSystem.SetPartial(IPartial, LocalInstant)'</Item>\n               <Item>'partial'</Item>\n               <Item>Partial</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#Validate(NodaTime.IPartial,System.Int32[])\">\n            <Messages>\n             <Message Id=\"Partial\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'ICalendarSystem.Validate(IPartial, int[])'</Item>\n               <Item>'partial'</Item>\n               <Item>Partial</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"IsoCalendarSystem\">\n          <Members>\n           <Member Name=\"#.cctor()\">\n            <Messages>\n             <Message TypeName=\"InitializeReferenceTypeStaticFieldsInline\" Category=\"Microsoft.Performance\" CheckId=\"CA1810\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'IsoCalendarSystem'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#Instance\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'IsoCalendarSystem.Instance'</Item>\n               <Item>'IsoCalendarSystem'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n        </Types>\n       </Namespace>\n       <Namespace Name=\"NodaTime.Converters\">\n        <Types>\n         <Type Name=\"ConverterManager\">\n          <Members>\n           <Member Name=\"#AddInstantConverter(NodaTime.Converters.IInstantConverter)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'ConverterManager.AddInstantConverter(IInstantConverter)'</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"converter\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'converter'</Item>\n               <Item>'ConverterManager.AddInstantConverter(IInstantConverter)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#Instance\">\n            <Accessors>\n             <Accessor Name=\"#get_Instance()\">\n              <Messages>\n               <Message TypeName=\"DoNotRaiseExceptionsInUnexpectedLocations\" Category=\"Microsoft.Design\" CheckId=\"CA1065\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"Breaking\">\n                <Issue Name=\"PropertyGetter\" Level=\"Warning\">\n                 <Item>'ConverterManager.Instance.get()'</Item>\n                 <Item>'NotImplementedException'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n           <Member Name=\"#RemoveInstantConverter(NodaTime.Converters.IInstantConverter)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'ConverterManager.RemoveInstantConverter(IInstantConverter)'</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"converter\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'converter'</Item>\n               <Item>'ConverterManager.RemoveInstantConverter(IInstantConverter)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"IConverter\">\n          <Members>\n           <Member Name=\"#GetSupportedType()\">\n            <Messages>\n             <Message TypeName=\"UsePropertiesWhereAppropriate\" Category=\"Microsoft.Design\" CheckId=\"CA1024\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Certainty=\"50\">\n               <Item>'IConverter.GetSupportedType()'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"IInstantConverter\">\n          <Members>\n           <Member Name=\"#GetChronology(System.Object,NodaTime.Chronology)\">\n            <Messages>\n             <Message Id=\"chrono\" TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'IInstantConverter.GetChronology(object, Chronology)'</Item>\n               <Item>chrono</Item>\n               <Item>'chrono'</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"obj\" TypeName=\"IdentifiersShouldNotContainTypeNames\" Category=\"Microsoft.Naming\" CheckId=\"CA1720\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"LanguageIndependentMemberParameter\">\n               <Item>'IInstantConverter.GetChronology(object, Chronology)'</Item>\n               <Item>obj</Item>\n               <Item>'obj'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetChronology(System.Object,NodaTime.IDateTimeZone)\">\n            <Messages>\n             <Message Id=\"obj\" TypeName=\"IdentifiersShouldNotContainTypeNames\" Category=\"Microsoft.Naming\" CheckId=\"CA1720\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"LanguageIndependentMemberParameter\">\n               <Item>'IInstantConverter.GetChronology(object, IDateTimeZone)'</Item>\n               <Item>obj</Item>\n               <Item>'obj'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetInstantMilliseconds(System.Object,NodaTime.Chronology)\">\n            <Messages>\n             <Message Id=\"chrono\" TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'IInstantConverter.GetInstantMilliseconds(object, Chronology)'</Item>\n               <Item>chrono</Item>\n               <Item>'chrono'</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"obj\" TypeName=\"IdentifiersShouldNotContainTypeNames\" Category=\"Microsoft.Naming\" CheckId=\"CA1720\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"LanguageIndependentMemberParameter\">\n               <Item>'IInstantConverter.GetInstantMilliseconds(object, Chronology)'</Item>\n               <Item>obj</Item>\n               <Item>'obj'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n        </Types>\n       </Namespace>\n       <Namespace Name=\"NodaTime.Fields\">\n        <Types>\n         <Type Name=\"DateTimeFieldBase\">\n          <Members>\n           <Member Name=\"#ConvertText(System.String,System.IFormatProvider)\">\n            <Messages>\n             <Message Id=\"provider\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'provider'</Item>\n               <Item>'DateTimeFieldBase.ConvertText(string, IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFieldType\">\n          <Members>\n           <Member Name=\"#CenturyOfEra\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.CenturyOfEra'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#ClockHourOfDay\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.ClockHourOfDay'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#ClockHourOfHalfDay\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.ClockHourOfHalfDay'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#DayOfMonth\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.DayOfMonth'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#DayOfWeek\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.DayOfWeek'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#DayOfYear\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.DayOfYear'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#Era\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.Era'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#HalfDayOfDay\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.HalfDayOfDay'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#HourOfDay\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.HourOfDay'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#HourOfHalfDay\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.HourOfHalfDay'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#MillisecondOfDay\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.MillisecondOfDay'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#MillisecondOfSecond\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.MillisecondOfSecond'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#MinuteOfDay\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.MinuteOfDay'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#MinuteOfHour\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.MinuteOfHour'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#MonthOfYear\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.MonthOfYear'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#SecondOfDay\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.SecondOfDay'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#SecondOfMinute\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.SecondOfMinute'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#TickOfDay\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.TickOfDay'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#TickOfMillisecond\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.TickOfMillisecond'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#WeekOfWeekYear\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.WeekOfWeekYear'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#WeekYear\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.WeekYear'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#WeekYearOfCentury\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.WeekYearOfCentury'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#Year\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.Year'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#YearOfCentury\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.YearOfCentury'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#YearOfEra\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFieldType.YearOfEra'</Item>\n               <Item>'DateTimeFieldType'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DividedDateTimeField\">\n          <Members>\n           <Member Name=\"#.ctor(NodaTime.Fields.RemainderDateTimeField,NodaTime.Fields.DateTimeFieldType)\">\n            <Messages>\n             <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DividedDateTimeField.DividedDateTimeField(RemainderDateTimeField, DateTimeFieldType)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DurationFieldBase\">\n          <Messages>\n           <Message TypeName=\"OverrideMethodsOnComparableTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1036\" Created=\"2010-04-25 19:39:27Z\">\n            <Issue Name=\"Equals\">\n             <Item>'DurationFieldBase'</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'DurationFieldBase'</Item>\n             <Item>!=</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'DurationFieldBase'</Item>\n             <Item>&lt;</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'DurationFieldBase'</Item>\n             <Item>==</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'DurationFieldBase'</Item>\n             <Item>&gt;</Item>\n            </Issue>\n           </Message>\n          </Messages>\n          <Members>\n           <Member Name=\"#Subtract(NodaTime.LocalInstant,System.Int64)\">\n            <Messages>\n             <Message Id=\"0#\" TypeName=\"ParameterNamesShouldMatchBaseDeclaration\" Category=\"Microsoft.Naming\" CheckId=\"CA1725\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue>\n               <Item>'DurationFieldBase.Subtract(LocalInstant, long)'</Item>\n               <Item>'instant'</Item>\n               <Item>'localInstant'</Item>\n               <Item>'IDurationField.Subtract(LocalInstant, long)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"FieldSet\">\n          <Members>\n           <Member Name=\"#WithSupportedFieldsFrom(NodaTime.Fields.FieldSet)\">\n            <Messages>\n             <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'FieldSet.WithSupportedFieldsFrom(FieldSet)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"FieldSet+Builder\">\n          <Messages>\n           <Message TypeName=\"NestedTypesShouldNotBeVisible\" Category=\"Microsoft.Design\" CheckId=\"CA1034\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue>\n             <Item>'FieldSet.Builder'</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n         <Type Name=\"FieldUtils\">\n          <Messages>\n           <Message Id=\"Utils\" TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Name=\"Type\">\n             <Item>Utils</Item>\n             <Item>'FieldUtils'</Item>\n            </Issue>\n           </Message>\n          </Messages>\n          <Members>\n           <Member Name=\"#VerifyValueBounds(NodaTime.Fields.IDateTimeField,System.Int64,System.Int64,System.Int64)\">\n            <Messages>\n             <Message Id=\"field\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'field'</Item>\n               <Item>'FieldUtils.VerifyValueBounds(IDateTimeField, long, long, long)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"IDateTimeField\">\n          <Members>\n           <Member Name=\"#GetAsShortText(NodaTime.IPartial,System.IFormatProvider)\">\n            <Messages>\n             <Message Id=\"Partial\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'IDateTimeField.GetAsShortText(IPartial, IFormatProvider)'</Item>\n               <Item>'partial'</Item>\n               <Item>Partial</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetAsShortText(NodaTime.IPartial,System.Int32,System.IFormatProvider)\">\n            <Messages>\n             <Message Id=\"Partial\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'IDateTimeField.GetAsShortText(IPartial, int, IFormatProvider)'</Item>\n               <Item>'partial'</Item>\n               <Item>Partial</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetAsText(NodaTime.IPartial,System.IFormatProvider)\">\n            <Messages>\n             <Message Id=\"Partial\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'IDateTimeField.GetAsText(IPartial, IFormatProvider)'</Item>\n               <Item>'partial'</Item>\n               <Item>Partial</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetAsText(NodaTime.IPartial,System.Int32,System.IFormatProvider)\">\n            <Messages>\n             <Message Id=\"Partial\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'IDateTimeField.GetAsText(IPartial, int, IFormatProvider)'</Item>\n               <Item>'partial'</Item>\n               <Item>Partial</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetMaximumShortTextLength(System.IFormatProvider)\">\n            <Messages>\n             <Message Id=\"short\" TypeName=\"IdentifiersShouldNotContainTypeNames\" Category=\"Microsoft.Naming\" CheckId=\"CA1720\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"LanguageSpecificMember\">\n               <Item>Short</Item>\n               <Item>'IDateTimeField.GetMaximumShortTextLength(IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"PreciseDurationDateTimeField\">\n          <Members>\n           <Member Name=\"#GetMaximumValueForSet(NodaTime.LocalInstant,System.Int64)\">\n            <Messages>\n             <Message Id=\"value\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'value'</Item>\n               <Item>'PreciseDurationDateTimeField.GetMaximumValueForSet(LocalInstant, long)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"RemainderDateTimeField\">\n          <Members>\n           <Member Name=\"#Divisor\">\n            <Accessors>\n             <Accessor Name=\"#get_Divisor()\">\n              <Messages>\n               <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-03-09 01:02:44Z\">\n                <Issue>\n                 <Item>'RemainderDateTimeField.Divisor.get()'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n           <Member Name=\"#RemainderRangeField\">\n            <Accessors>\n             <Accessor Name=\"#get_RemainderRangeField()\">\n              <Messages>\n               <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-03-09 01:02:44Z\">\n                <Issue>\n                 <Item>'RemainderDateTimeField.RemainderRangeField.get()'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"UnsupportedDurationField\">\n          <Members>\n           <Member Name=\"#ForFieldType(NodaTime.Fields.DurationFieldType)\">\n            <Messages>\n             <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'UnsupportedDurationField.ForFieldType(DurationFieldType)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n        </Types>\n       </Namespace>\n       <Namespace Name=\"NodaTime.Format\">\n        <Types>\n         <Type Name=\"DateTimeFormats\">\n          <Members>\n           <Member Name=\"#.cctor()\">\n            <Messages>\n             <Message TypeName=\"InitializeReferenceTypeStaticFieldsInline\" Category=\"Microsoft.Performance\" CheckId=\"CA1810\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue>\n               <Item>'DateTimeFormats'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatter\">\n          <Members>\n           <Member Name=\"#.ctor(NodaTime.Format.IDateTimePrinter,NodaTime.Format.IDateTimeParser)\">\n            <Messages>\n             <Message TypeName=\"DoNotInitializeUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1805\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatter.DateTimeFormatter(IDateTimePrinter, IDateTimeParser)'</Item>\n               <Item>'DateTimeFormatter.calendarSystem'</Item>\n               <Item>'ICalendarSystem'</Item>\n               <Item>null</Item>\n              </Issue>\n              <Issue>\n               <Item>'DateTimeFormatter.DateTimeFormatter(IDateTimePrinter, IDateTimeParser)'</Item>\n               <Item>'DateTimeFormatter.offsetParsed'</Item>\n               <Item>'bool'</Item>\n               <Item>false</Item>\n              </Issue>\n              <Issue>\n               <Item>'DateTimeFormatter.DateTimeFormatter(IDateTimePrinter, IDateTimeParser)'</Item>\n               <Item>'DateTimeFormatter.provider'</Item>\n               <Item>'IFormatProvider'</Item>\n               <Item>null</Item>\n              </Issue>\n              <Issue>\n               <Item>'DateTimeFormatter.DateTimeFormatter(IDateTimePrinter, IDateTimeParser)'</Item>\n               <Item>'DateTimeFormatter.zone'</Item>\n               <Item>'IDateTimeZone'</Item>\n               <Item>null</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#PrintTo(System.Text.StringBuilder,NodaTime.IPartial)\">\n            <Messages>\n             <Message Id=\"System.IO.StringWriter.#ctor(System.Text.StringBuilder)\" TypeName=\"SpecifyIFormatProvider\" Category=\"Microsoft.Globalization\" CheckId=\"CA1305\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'StringWriter.StringWriter(StringBuilder)'</Item>\n               <Item>'DateTimeFormatter.PrintTo(StringBuilder, IPartial)'</Item>\n               <Item>'StringWriter.StringWriter(StringBuilder, IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder\">\n          <Members>\n           <Member Name=\"#AppendDecimal(NodaTime.Fields.DateTimeFieldType,System.Int32,System.Int32)\">\n            <Messages>\n             <Message TypeName=\"InstantiateArgumentExceptionsCorrectly\" Category=\"Microsoft.Usage\" CheckId=\"CA2208\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"NoArguments\">\n               <Item>'ArgumentException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#AppendFixedDecimal(NodaTime.Fields.DateTimeFieldType,System.Int32)\">\n            <Messages>\n             <Message Id=\"num\" TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'DateTimeFormatterBuilder.AppendFixedDecimal(DateTimeFieldType, int)'</Item>\n               <Item>num</Item>\n               <Item>'numDigits'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#AppendFixedSignedDecimal(NodaTime.Fields.DateTimeFieldType,System.Int32)\">\n            <Messages>\n             <Message Id=\"num\" TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'DateTimeFormatterBuilder.AppendFixedSignedDecimal(DateTimeFieldType, int)'</Item>\n               <Item>num</Item>\n               <Item>'numDigits'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#AppendFraction(NodaTime.Fields.DateTimeFieldType,System.Int32,System.Int32)\">\n            <Messages>\n             <Message TypeName=\"InstantiateArgumentExceptionsCorrectly\" Category=\"Microsoft.Usage\" CheckId=\"CA2208\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue Name=\"NoArguments\">\n               <Item>'ArgumentException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#AppendSignedDecimal(NodaTime.Fields.DateTimeFieldType,System.Int32,System.Int32)\">\n            <Messages>\n             <Message TypeName=\"InstantiateArgumentExceptionsCorrectly\" Category=\"Microsoft.Usage\" CheckId=\"CA2208\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"NoArguments\">\n               <Item>'ArgumentException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#IsParser(System.Object)\">\n            <Messages>\n             <Message TypeName=\"DoNotCastUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1800\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"Parameter\">\n               <Item>'object'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite'</Item>\n               <Item>'DateTimeFormatterBuilder.IsParser(object)'</Item>\n               <Item>castclass</Item>\n              </Issue>\n             </Message>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.IsParser(object)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#IsPrinter(System.Object)\">\n            <Messages>\n             <Message TypeName=\"DoNotCastUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1800\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"Parameter\">\n               <Item>'object'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite'</Item>\n               <Item>'DateTimeFormatterBuilder.IsPrinter(object)'</Item>\n               <Item>castclass</Item>\n              </Issue>\n             </Message>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.IsPrinter(object)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder+Composite\">\n          <Members>\n           <Member Name=\"#.ctor(System.Collections.Generic.List`1&lt;System.Object&gt;)\">\n            <Messages>\n             <Message TypeName=\"DoNotInitializeUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1805\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.Composite.Composite(List&lt;object&gt;)'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite.parsers'</Item>\n               <Item>'IDateTimeParser[]'</Item>\n               <Item>null</Item>\n              </Issue>\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.Composite.Composite(List&lt;object&gt;)'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite.printers'</Item>\n               <Item>'IDateTimePrinter[]'</Item>\n               <Item>null</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#Decompose(System.Collections.Generic.List`1&lt;System.Object&gt;,System.Collections.Generic.List`1&lt;NodaTime.Format.IDateTimePrinter&gt;,System.Collections.Generic.List`1&lt;NodaTime.Format.IDateTimeParser&gt;)\">\n            <Messages>\n             <Message TypeName=\"DoNotCastUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1800\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"Local\">\n               <Item>'element'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite.Decompose(List&lt;object&gt;, List&lt;IDateTimePrinter&gt;, List&lt;IDateTimeParser&gt;)'</Item>\n               <Item>castclass</Item>\n              </Issue>\n              <Issue Name=\"Local\">\n               <Item>'element'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite.Decompose(List&lt;object&gt;, List&lt;IDateTimePrinter&gt;, List&lt;IDateTimeParser&gt;)'</Item>\n               <Item>castclass</Item>\n              </Issue>\n              <Issue Name=\"Local\">\n               <Item>'element'</Item>\n               <Item>'IDateTimeParser'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite.Decompose(List&lt;object&gt;, List&lt;IDateTimePrinter&gt;, List&lt;IDateTimeParser&gt;)'</Item>\n               <Item>isint</Item>\n              </Issue>\n              <Issue Name=\"Local\">\n               <Item>'element'</Item>\n               <Item>'IDateTimePrinter'</Item>\n               <Item>'DateTimeFormatterBuilder.Composite.Decompose(List&lt;object&gt;, List&lt;IDateTimePrinter&gt;, List&lt;IDateTimeParser&gt;)'</Item>\n               <Item>isint</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder+Fraction\">\n          <Members>\n           <Member Name=\"#Print(System.IO.TextWriter,NodaTime.LocalInstant,NodaTime.Calendars.ICalendarSystem)\">\n            <Messages>\n             <Message TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.Fraction.Print(TextWriter, LocalInstant, ICalendarSystem)'</Item>\n               <Item>'SystemException'</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"System.Int64.ToString\" TypeName=\"SpecifyIFormatProvider\" Category=\"Microsoft.Globalization\" CheckId=\"CA1305\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'long.ToString()'</Item>\n               <Item>'DateTimeFormatterBuilder.Fraction.Print(TextWriter, LocalInstant, ICalendarSystem)'</Item>\n               <Item>'long.ToString(IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder+NumberFormatter\">\n          <Members>\n           <Member Name=\"#ParseInto(NodaTime.Format.DateTimeParserBucket,System.String,System.Int32)\">\n            <Messages>\n             <Message Id=\"System.Int32.Parse(System.String)\" TypeName=\"SpecifyIFormatProvider\" Category=\"Microsoft.Globalization\" CheckId=\"CA1305\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'int.Parse(string)'</Item>\n               <Item>'DateTimeFormatterBuilder.NumberFormatter.ParseInto(DateTimeParserBucket, string, int)'</Item>\n               <Item>'int.Parse(string, IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder+PaddedNumber\">\n          <Members>\n           <Member Name=\"#PrintTo(System.IO.TextWriter,NodaTime.IPartial,System.IFormatProvider)\">\n            <Messages>\n             <Message TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.PaddedNumber.PrintTo(TextWriter, IPartial, IFormatProvider)'</Item>\n               <Item>'SystemException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#PrintTo(System.IO.TextWriter,NodaTime.LocalInstant,NodaTime.Calendars.ICalendarSystem,NodaTime.Offset,NodaTime.IDateTimeZone,System.IFormatProvider)\">\n            <Messages>\n             <Message TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.PaddedNumber.PrintTo(TextWriter, LocalInstant, ICalendarSystem, Offset, IDateTimeZone, IFormatProvider)'</Item>\n               <Item>'SystemException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder+TextField\">\n          <Members>\n           <Member Name=\"#PrintTo(System.IO.TextWriter,NodaTime.IPartial,System.IFormatProvider)\">\n            <Messages>\n             <Message TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.TextField.PrintTo(TextWriter, IPartial, IFormatProvider)'</Item>\n               <Item>'SystemException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#PrintTo(System.IO.TextWriter,NodaTime.LocalInstant,NodaTime.Calendars.ICalendarSystem,NodaTime.Offset,NodaTime.IDateTimeZone,System.IFormatProvider)\">\n            <Messages>\n             <Message TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.TextField.PrintTo(TextWriter, LocalInstant, ICalendarSystem, Offset, IDateTimeZone, IFormatProvider)'</Item>\n               <Item>'SystemException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder+TimeZoneName\">\n          <Members>\n           <Member Name=\"#Print(NodaTime.Instant,NodaTime.IDateTimeZone,System.IFormatProvider)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.TimeZoneName.Print(Instant, IDateTimeZone, IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"instant\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'instant'</Item>\n               <Item>'DateTimeFormatterBuilder.TimeZoneName.Print(Instant, IDateTimeZone, IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"provider\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'provider'</Item>\n               <Item>'DateTimeFormatterBuilder.TimeZoneName.Print(Instant, IDateTimeZone, IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder+TimeZoneOffset\">\n          <Members>\n           <Member Name=\"#.ctor(System.String,System.Boolean,System.Int32,System.Int32)\">\n            <Messages>\n             <Message TypeName=\"InstantiateArgumentExceptionsCorrectly\" Category=\"Microsoft.Usage\" CheckId=\"CA2208\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"NoArguments\">\n               <Item>'ArgumentException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#DigitCount(System.String,System.Int32,System.Int32)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.TimeZoneOffset.DigitCount(string, int, int)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder+TwoDigitYear\">\n          <Members>\n           <Member Name=\"#GetTwoDigitYear(NodaTime.IPartial)\">\n            <Messages>\n             <Message TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.TwoDigitYear.GetTwoDigitYear(IPartial)'</Item>\n               <Item>'SystemException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#GetTwoDigitYear(NodaTime.LocalInstant,NodaTime.Calendars.ICalendarSystem)\">\n            <Messages>\n             <Message TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.TwoDigitYear.GetTwoDigitYear(LocalInstant, ICalendarSystem)'</Item>\n               <Item>'SystemException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#ParseInto(NodaTime.Format.DateTimeParserBucket,System.String,System.Int32)\">\n            <Messages>\n             <Message Id=\"System.Int32.Parse(System.String)\" TypeName=\"SpecifyIFormatProvider\" Category=\"Microsoft.Globalization\" CheckId=\"CA1305\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'int.Parse(string)'</Item>\n               <Item>'DateTimeFormatterBuilder.TwoDigitYear.ParseInto(DateTimeParserBucket, string, int)'</Item>\n               <Item>'int.Parse(string, IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#WriteYear(System.IO.TextWriter,System.Int32)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.TwoDigitYear.WriteYear(TextWriter, int)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeFormatterBuilder+UnpaddedNumber\">\n          <Members>\n           <Member Name=\"#PrintTo(System.IO.TextWriter,NodaTime.IPartial,System.IFormatProvider)\">\n            <Messages>\n             <Message TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.UnpaddedNumber.PrintTo(TextWriter, IPartial, IFormatProvider)'</Item>\n               <Item>'SystemException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#PrintTo(System.IO.TextWriter,NodaTime.LocalInstant,NodaTime.Calendars.ICalendarSystem,NodaTime.Offset,NodaTime.IDateTimeZone,System.IFormatProvider)\">\n            <Messages>\n             <Message TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeFormatterBuilder.UnpaddedNumber.PrintTo(TextWriter, LocalInstant, ICalendarSystem, Offset, IDateTimeZone, IFormatProvider)'</Item>\n               <Item>'SystemException'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeParserBucket\">\n          <Members>\n           <Member Name=\"#RestoreState(System.Object)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'DateTimeParserBucket.RestoreState(object)'</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"state\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'state'</Item>\n               <Item>'DateTimeParserBucket.RestoreState(object)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#savedFieldsState\">\n            <Messages>\n             <Message TypeName=\"AvoidUnusedPrivateFields\" Category=\"Microsoft.Performance\" CheckId=\"CA1823\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'DateTimeParserBucket.savedFieldsState'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#SaveState()\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'DateTimeParserBucket.SaveState()'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"DateTimeParserBucket+SavedField\">\n          <Members>\n           <Member Name=\"#CompareReverse(NodaTime.Fields.IDurationField,NodaTime.Fields.IDurationField)\">\n            <Messages>\n             <Message TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\" Created=\"2010-04-25 19:39:27Z\" FixCategory=\"NonBreaking\">\n              <Issue>\n               <Item>'DateTimeParserBucket.SavedField.CompareReverse(IDurationField, IDurationField)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"FormatUtils\">\n          <Members>\n           <Member Name=\"#AppendPaddedInteger(System.Text.StringBuilder,System.Int32,System.Int32)\">\n            <Messages>\n             <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-04-27 17:31:03Z\">\n              <Issue>\n               <Item>'FormatUtils.AppendPaddedInteger(StringBuilder, int, int)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#AppendUnpaddedInteger(System.Text.StringBuilder,System.Int32)\">\n            <Messages>\n             <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-04-27 17:31:03Z\">\n              <Issue>\n               <Item>'FormatUtils.AppendUnpaddedInteger(StringBuilder, int)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"IDateTimePrinter\">\n          <Members>\n           <Member Name=\"#PrintTo(System.IO.TextWriter,NodaTime.IPartial,System.IFormatProvider)\">\n            <Messages>\n             <Message Id=\"Partial\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'IDateTimePrinter.PrintTo(TextWriter, IPartial, IFormatProvider)'</Item>\n               <Item>'partial'</Item>\n               <Item>Partial</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#PrintTo(System.IO.TextWriter,NodaTime.LocalInstant,NodaTime.Calendars.ICalendarSystem,NodaTime.Offset,NodaTime.IDateTimeZone,System.IFormatProvider)\">\n            <Messages>\n             <Message Id=\"timezone\" TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberParameter\">\n               <Item>'IDateTimePrinter.PrintTo(TextWriter, LocalInstant, ICalendarSystem, Offset, IDateTimeZone, IFormatProvider)'</Item>\n               <Item>timezone</Item>\n               <Item>'timezoneOffset'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"IsoDateTimeFormats\">\n          <Members>\n           <Member Name=\"#dhmsf\">\n            <Messages>\n             <Message TypeName=\"AvoidUnusedPrivateFields\" Category=\"Microsoft.Performance\" CheckId=\"CA1823\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'IsoDateTimeFormats.dhmsf'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#WeekYearWeekDay\">\n            <Messages>\n             <Message Id=\"WeekDay\" TypeName=\"CompoundWordsShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1702\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberShouldBeDiscreteTerm\">\n               <Item>WeekDay</Item>\n               <Item>'IsoDateTimeFormats.WeekYearWeekDay'</Item>\n               <Item>Weekday</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"PeriodFormatterBuilder+Composite\">\n          <Members>\n           <Member Name=\"#Parsers\">\n            <Accessors>\n             <Accessor Name=\"#get_Parsers()\">\n              <Messages>\n               <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-04-25 19:39:27Z\">\n                <Issue>\n                 <Item>'PeriodFormatterBuilder.Composite.Parsers.get()'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n           <Member Name=\"#Printers\">\n            <Accessors>\n             <Accessor Name=\"#get_Printers()\">\n              <Messages>\n               <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-04-25 19:39:27Z\">\n                <Issue>\n                 <Item>'PeriodFormatterBuilder.Composite.Printers.get()'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"PeriodFormatterBuilder+FieldFormatter\">\n          <Members>\n           <Member Name=\"#ParseInt(System.String,System.Int32,System.Int32)\">\n            <Messages>\n             <Message Id=\"System.Int32.Parse(System.String)\" TypeName=\"SpecifyIFormatProvider\" Category=\"Microsoft.Globalization\" CheckId=\"CA1305\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'int.Parse(string)'</Item>\n               <Item>'PeriodFormatterBuilder.FieldFormatter.ParseInt(string, int, int)'</Item>\n               <Item>'int.Parse(string, IFormatProvider)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"PeriodFormatterBuilder+PluralAffix\">\n          <Members>\n           <Member Name=\"#Scan(System.String,System.Int32)\">\n            <Messages>\n             <Message Id=\"newPosition\" TypeName=\"RemoveUnusedLocals\" Category=\"Microsoft.Performance\" CheckId=\"CA1804\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'PeriodFormatterBuilder.PluralAffix.Scan(string, int)'</Item>\n               <Item>'newPosition'</Item>\n               <Item>'int'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"PeriodFormatterBuilder+Separator\">\n          <Members>\n           <Member Name=\"#.ctor(System.String,System.String,System.String[],NodaTime.Format.IPeriodPrinter,NodaTime.Format.IPeriodParser,System.Boolean,System.Boolean)\">\n            <Messages>\n             <Message Id=\"System.String.CompareTo(System.String)\" TypeName=\"SpecifyStringComparison\" Category=\"Microsoft.Globalization\" CheckId=\"CA1307\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'PeriodFormatterBuilder.Separator.Separator(string, string, string[], IPeriodPrinter, IPeriodParser, bool, bool)'</Item>\n               <Item>'string.CompareTo(string)'</Item>\n               <Item>'string.Compare(string, string, StringComparison)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n        </Types>\n       </Namespace>\n       <Namespace Name=\"NodaTime.Partials\">\n        <Types>\n         <Type Name=\"AbstractPartial\">\n          <Messages>\n           <Message TypeName=\"OverrideMethodsOnComparableTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1036\" Created=\"2010-04-25 19:39:27Z\">\n            <Issue Name=\"Equals\">\n             <Item>'AbstractPartial'</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'AbstractPartial'</Item>\n             <Item>!=</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'AbstractPartial'</Item>\n             <Item>&lt;</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'AbstractPartial'</Item>\n             <Item>==</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'AbstractPartial'</Item>\n             <Item>&gt;</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n         <Type Name=\"LocalDate\">\n          <Members>\n           <Member Name=\"#Calendar\">\n            <Accessors>\n             <Accessor Name=\"#get_Calendar()\">\n              <Messages>\n               <Message TypeName=\"DoNotRaiseExceptionsInUnexpectedLocations\" Category=\"Microsoft.Design\" CheckId=\"CA1065\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"Breaking\">\n                <Issue Name=\"PropertyGetter\" Level=\"Warning\">\n                 <Item>'LocalDate.Calendar.get()'</Item>\n                 <Item>'NotImplementedException'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n           <Member Name=\"#Size\">\n            <Accessors>\n             <Accessor Name=\"#get_Size()\">\n              <Messages>\n               <Message TypeName=\"DoNotRaiseExceptionsInUnexpectedLocations\" Category=\"Microsoft.Design\" CheckId=\"CA1065\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"Breaking\">\n                <Issue Name=\"PropertyGetter\" Level=\"Warning\">\n                 <Item>'LocalDate.Size.get()'</Item>\n                 <Item>'NotImplementedException'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"LocalTime\">\n          <Members>\n           <Member Name=\"#Calendar\">\n            <Accessors>\n             <Accessor Name=\"#get_Calendar()\">\n              <Messages>\n               <Message TypeName=\"DoNotRaiseExceptionsInUnexpectedLocations\" Category=\"Microsoft.Design\" CheckId=\"CA1065\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"Breaking\">\n                <Issue Name=\"PropertyGetter\" Level=\"Warning\">\n                 <Item>'LocalTime.Calendar.get()'</Item>\n                 <Item>'NotImplementedException'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n           <Member Name=\"#Size\">\n            <Accessors>\n             <Accessor Name=\"#get_Size()\">\n              <Messages>\n               <Message TypeName=\"DoNotRaiseExceptionsInUnexpectedLocations\" Category=\"Microsoft.Design\" CheckId=\"CA1065\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"Breaking\">\n                <Issue Name=\"PropertyGetter\" Level=\"Warning\">\n                 <Item>'LocalTime.Size.get()'</Item>\n                 <Item>'NotImplementedException'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"MonthDay\">\n          <Members>\n           <Member Name=\"#Size\">\n            <Accessors>\n             <Accessor Name=\"#get_Size()\">\n              <Messages>\n               <Message TypeName=\"DoNotRaiseExceptionsInUnexpectedLocations\" Category=\"Microsoft.Design\" CheckId=\"CA1065\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"Breaking\">\n                <Issue Name=\"PropertyGetter\" Level=\"Warning\">\n                 <Item>'MonthDay.Size.get()'</Item>\n                 <Item>'NotImplementedException'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"Partial\">\n          <Messages>\n           <Message Id=\"Partial\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Name=\"Type\">\n             <Item>'Partial'</Item>\n             <Item>Partial</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n         <Type Name=\"PartialUtils\">\n          <Messages>\n           <Message Id=\"Utils\" TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Name=\"Type\">\n             <Item>Utils</Item>\n             <Item>'PartialUtils'</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n         <Type Name=\"YearMonth\">\n          <Members>\n           <Member Name=\"#Size\">\n            <Accessors>\n             <Accessor Name=\"#get_Size()\">\n              <Messages>\n               <Message TypeName=\"DoNotRaiseExceptionsInUnexpectedLocations\" Category=\"Microsoft.Design\" CheckId=\"CA1065\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"Breaking\">\n                <Issue Name=\"PropertyGetter\" Level=\"Warning\">\n                 <Item>'YearMonth.Size.get()'</Item>\n                 <Item>'NotImplementedException'</Item>\n                </Issue>\n               </Message>\n              </Messages>\n             </Accessor>\n            </Accessors>\n           </Member>\n          </Members>\n         </Type>\n        </Types>\n       </Namespace>\n       <Namespace Name=\"NodaTime.Periods\">\n        <Types>\n         <Type Name=\"Period\">\n          <Members>\n           <Member Name=\"#Negate(NodaTime.Periods.Period)\">\n            <Messages>\n             <Message TypeName=\"ConsiderPassingBaseTypesAsParameters\" Category=\"Microsoft.Design\" CheckId=\"CA1011\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue>\n               <Item>'period'</Item>\n               <Item>'Period.Negate(Period)'</Item>\n               <Item>'Period'</Item>\n               <Item>'IPeriod'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"PeriodType\">\n          <Members>\n           <Member Name=\"#DayTime\">\n            <Messages>\n             <Message Id=\"DayTime\" TypeName=\"CompoundWordsShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1702\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberShouldBeDiscreteTerm\">\n               <Item>DayTime</Item>\n               <Item>'PeriodType.DayTime'</Item>\n               <Item>Daytime</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#YearDayTime\">\n            <Messages>\n             <Message Id=\"DayTime\" TypeName=\"CompoundWordsShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1702\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberShouldBeDiscreteTerm\">\n               <Item>DayTime</Item>\n               <Item>'PeriodType.YearDayTime'</Item>\n               <Item>Daytime</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#YearMonthDayTime\">\n            <Messages>\n             <Message Id=\"DayTime\" TypeName=\"CompoundWordsShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1702\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberShouldBeDiscreteTerm\">\n               <Item>DayTime</Item>\n               <Item>'PeriodType.YearMonthDayTime'</Item>\n               <Item>Daytime</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#YearWeekDay\">\n            <Messages>\n             <Message Id=\"WeekDay\" TypeName=\"CompoundWordsShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1702\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberShouldBeDiscreteTerm\">\n               <Item>WeekDay</Item>\n               <Item>'PeriodType.YearWeekDay'</Item>\n               <Item>Weekday</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#YearWeekDayTime\">\n            <Messages>\n             <Message Id=\"DayTime\" TypeName=\"CompoundWordsShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1702\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberShouldBeDiscreteTerm\">\n               <Item>DayTime</Item>\n               <Item>'PeriodType.YearWeekDayTime'</Item>\n               <Item>Daytime</Item>\n              </Issue>\n             </Message>\n             <Message Id=\"WeekDay\" TypeName=\"CompoundWordsShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1702\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"MemberShouldBeDiscreteTerm\">\n               <Item>WeekDay</Item>\n               <Item>'PeriodType.YearWeekDayTime'</Item>\n               <Item>Weekday</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"SingleFieldPeriodBase\">\n          <Messages>\n           <Message TypeName=\"OverrideMethodsOnComparableTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1036\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Name=\"Operator\">\n             <Item>'SingleFieldPeriodBase'</Item>\n             <Item>!=</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'SingleFieldPeriodBase'</Item>\n             <Item>&lt;</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'SingleFieldPeriodBase'</Item>\n             <Item>==</Item>\n            </Issue>\n            <Issue Name=\"Operator\">\n             <Item>'SingleFieldPeriodBase'</Item>\n             <Item>&gt;</Item>\n            </Issue>\n           </Message>\n          </Messages>\n          <Members>\n           <Member Name=\"#FieldType\">\n            <Messages>\n             <Message TypeName=\"PropertyNamesShouldNotMatchGetMethods\" Category=\"Microsoft.Naming\" CheckId=\"CA1721\" Created=\"2010-03-09 01:02:44Z\" FixCategory=\"NonBreaking\">\n              <Issue Name=\"SameType\">\n               <Item>'SingleFieldPeriodBase.FieldType'</Item>\n               <Item>'SingleFieldPeriodBase.GetFieldType(int)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n        </Types>\n       </Namespace>\n       <Namespace Name=\"NodaTime.TimeZones\">\n        <Types>\n         <Type Name=\"CachedDateTimeZone+CacheType\">\n          <Messages>\n           <Message TypeName=\"NestedTypesShouldNotBeVisible\" Category=\"Microsoft.Design\" CheckId=\"CA1034\" Created=\"2010-03-09 01:04:58Z\">\n            <Issue>\n             <Item>'CachedDateTimeZone.CacheType'</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n         <Type Name=\"NullDateTimeZone\">\n          <Members>\n           <Member Name=\"#Instance\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue>\n               <Item>'NullDateTimeZone.Instance'</Item>\n               <Item>'NullDateTimeZone'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n           <Member Name=\"#Read(NodaTime.TimeZones.DateTimeZoneReader,System.String)\">\n            <Messages>\n             <Message Id=\"reader\" TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\" Created=\"2010-04-25 19:39:27Z\" FixCategory=\"DependsOnFix\">\n              <Issue>\n               <Item>'reader'</Item>\n               <Item>'NullDateTimeZone.Read(DateTimeZoneReader, string)'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"WindowsToPosixResource\">\n          <Members>\n           <Member Name=\"#.cctor()\">\n            <Messages>\n             <Message TypeName=\"InitializeReferenceTypeStaticFieldsInline\" Category=\"Microsoft.Performance\" CheckId=\"CA1810\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue>\n               <Item>'WindowsToPosixResource'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"ZoneYearOffset\">\n          <Members>\n           <Member Name=\"#StartOfYear\">\n            <Messages>\n             <Message TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\" Created=\"2010-04-25 19:39:27Z\">\n              <Issue>\n               <Item>'ZoneYearOffset.StartOfYear'</Item>\n               <Item>'ZoneYearOffset'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n        </Types>\n       </Namespace>\n      </Namespaces>\n     </Module>\n    </Modules>\n   </Target>\n   <Target Name=\"$(ProjectDir)/src/ZoneInfoCompiler/bin/Debug/ZoneInfoCompiler.exe\">\n    <Modules>\n     <Module Name=\"zoneinfocompiler.exe\">\n      <Messages>\n       <Message TypeName=\"AssembliesShouldHaveValidStrongNames\" Category=\"Microsoft.Design\" CheckId=\"CA2210\" Created=\"2010-03-09 01:02:44Z\">\n        <Issue Name=\"NoStrongName\">\n         <Item>'ZoneInfoCompiler.exe'</Item>\n        </Issue>\n       </Message>\n       <Message TypeName=\"MarkWindowsFormsEntryPointsWithStaThread\" Category=\"Microsoft.Usage\" CheckId=\"CA2232\" Created=\"2010-03-09 01:02:44Z\">\n        <Issue>\n         <Item>'ZoneInfoCompiler.Main(string[])'</Item>\n         <Item>'ZoneInfoCompiler.exe'</Item>\n        </Issue>\n       </Message>\n      </Messages>\n      <Namespaces>\n       <Namespace Name=\"NodaTime.ZoneInfoCompiler\">\n        <Types>\n         <Type Name=\"ILog\">\n          <Members>\n           <Member Name=\"#Error(System.String,System.Object[])\">\n            <Messages>\n             <Message Id=\"Error\" TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue Name=\"Member\">\n               <Item>'ILog.Error(string, params object[])'</Item>\n               <Item>Error</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n        </Types>\n       </Namespace>\n       <Namespace Name=\"NodaTime.ZoneInfoCompiler.Tzdb\">\n        <Types>\n         <Type Name=\"MissingTokenException\">\n          <Messages>\n           <Message TypeName=\"ImplementStandardExceptionConstructors\" Category=\"Microsoft.Design\" CheckId=\"CA1032\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Name=\"MissingConstructor\">\n             <Item>'MissingTokenException'</Item>\n             <Item>protected MissingTokenException(SerializationInfo, StreamingContext)</Item>\n            </Issue>\n            <Issue Name=\"MissingConstructor\">\n             <Item>'MissingTokenException'</Item>\n             <Item>public MissingTokenException()</Item>\n            </Issue>\n            <Issue Name=\"MissingConstructor\">\n             <Item>'MissingTokenException'</Item>\n             <Item>public MissingTokenException(String, Exception)</Item>\n            </Issue>\n           </Message>\n           <Message TypeName=\"MarkISerializableTypesWithSerializable\" Category=\"Microsoft.Usage\" CheckId=\"CA2237\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Certainty=\"95\" Level=\"Error\">\n             <Item>'MissingTokenException'</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n         <Type Name=\"TzdbCompilerOptions\">\n          <Members>\n           <Member Name=\"#GetUsage()\">\n            <Messages>\n             <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'TzdbCompilerOptions.GetUsage()'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n         <Type Name=\"TzdbZoneInfoParser+ParseException\">\n          <Messages>\n           <Message TypeName=\"ExceptionsShouldBePublic\" Category=\"Microsoft.Design\" CheckId=\"CA1064\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue>\n             <Item>'TzdbZoneInfoParser.ParseException'</Item>\n            </Issue>\n           </Message>\n           <Message TypeName=\"ImplementStandardExceptionConstructors\" Category=\"Microsoft.Design\" CheckId=\"CA1032\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Name=\"MissingConstructor\">\n             <Item>'TzdbZoneInfoParser.ParseException'</Item>\n             <Item>protected ParseException(SerializationInfo, StreamingContext)</Item>\n            </Issue>\n           </Message>\n           <Message TypeName=\"MarkISerializableTypesWithSerializable\" Category=\"Microsoft.Usage\" CheckId=\"CA2237\" Created=\"2010-03-09 01:02:44Z\">\n            <Issue Certainty=\"95\" Level=\"Error\">\n             <Item>'TzdbZoneInfoParser.ParseException'</Item>\n            </Issue>\n           </Message>\n          </Messages>\n         </Type>\n        </Types>\n       </Namespace>\n       <Namespace Name=\"NodaTime.ZoneInfoCompiler.winmap\">\n        <Types>\n         <Type Name=\"WindowsMapperCompilerOptions\">\n          <Members>\n           <Member Name=\"#GetUsage()\">\n            <Messages>\n             <Message TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\" Created=\"2010-03-09 01:02:44Z\">\n              <Issue>\n               <Item>'WindowsMapperCompilerOptions.GetUsage()'</Item>\n              </Issue>\n             </Message>\n            </Messages>\n           </Member>\n          </Members>\n         </Type>\n        </Types>\n       </Namespace>\n      </Namespaces>\n     </Module>\n    </Modules>\n   </Target>\n  </Targets>\n  <Rules>\n   <Rule TypeName=\"AssembliesShouldHaveValidStrongNames\" Category=\"Microsoft.Design\" CheckId=\"CA2210\">\n    <Resolution Name=\"NoStrongName\">Sign {0} with a strong name key.</Resolution>\n   </Rule>\n   <Rule TypeName=\"AvoidNamespacesWithFewTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1020\">\n    <Resolution Name=\"Default\">Consider merging the types defined in '{0}' with another namespace.</Resolution>\n   </Rule>\n   <Rule TypeName=\"AvoidUncalledPrivateCode\" Category=\"Microsoft.Performance\" CheckId=\"CA1811\">\n    <Resolution Name=\"Default\">{0} appears to have no upstream public or protected callers.</Resolution>\n   </Rule>\n   <Rule TypeName=\"AvoidUninstantiatedInternalClasses\" Category=\"Microsoft.Performance\" CheckId=\"CA1812\">\n    <Resolution Name=\"Default\">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>\n   </Rule>\n   <Rule TypeName=\"AvoidUnusedPrivateFields\" Category=\"Microsoft.Performance\" CheckId=\"CA1823\">\n    <Resolution Name=\"Default\">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>\n   </Rule>\n   <Rule TypeName=\"CompoundWordsShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1702\">\n    <Resolution Name=\"MemberShouldBeDiscreteTerm\">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>\n   </Rule>\n   <Rule TypeName=\"ConsiderPassingBaseTypesAsParameters\" Category=\"Microsoft.Design\" CheckId=\"CA1011\">\n    <Resolution Name=\"Default\">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>\n   </Rule>\n   <Rule TypeName=\"DoNotCallOverridableMethodsInConstructors\" Category=\"Microsoft.Usage\" CheckId=\"CA2214\">\n    <Resolution Name=\"Default\">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>\n   </Rule>\n   <Rule TypeName=\"DoNotCastUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1800\">\n    <Resolution Name=\"Local\">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>\n    <Resolution Name=\"Parameter\">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>\n   </Rule>\n   <Rule TypeName=\"DoNotCatchGeneralExceptionTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1031\">\n    <Resolution Name=\"Default\">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>\n   </Rule>\n   <Rule TypeName=\"DoNotDeclareReadOnlyMutableReferenceTypes\" Category=\"Microsoft.Security\" CheckId=\"CA2104\">\n    <Resolution Name=\"Default\">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>\n   </Rule>\n   <Rule TypeName=\"DoNotInitializeUnnecessarily\" Category=\"Microsoft.Performance\" CheckId=\"CA1805\">\n    <Resolution Name=\"Default\">{0} initializes field {1} of type {2} to {3}. Remove this initialization because it will be done automatically by the runtime.</Resolution>\n   </Rule>\n   <Rule TypeName=\"DoNotRaiseExceptionsInUnexpectedLocations\" Category=\"Microsoft.Design\" CheckId=\"CA1065\">\n    <Resolution Name=\"PropertyGetter\">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>\n   </Rule>\n   <Rule TypeName=\"ExceptionsShouldBePublic\" Category=\"Microsoft.Design\" CheckId=\"CA1064\">\n    <Resolution Name=\"Default\">Make exception class {0} public.</Resolution>\n   </Rule>\n   <Rule TypeName=\"IdentifiersShouldBeCasedCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1709\">\n    <Resolution Name=\"Member\">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>\n    <Resolution Name=\"Namespace\">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>\n   </Rule>\n   <Rule TypeName=\"IdentifiersShouldBeSpelledCorrectly\" Category=\"Microsoft.Naming\" CheckId=\"CA1704\">\n    <Resolution Name=\"MemberParameter\">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>\n    <Resolution Name=\"Namespace\">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>\n    <Resolution Name=\"Type\">Correct the spelling of '{0}' in type name {1}.</Resolution>\n   </Rule>\n   <Rule TypeName=\"IdentifiersShouldNotContainTypeNames\" Category=\"Microsoft.Naming\" CheckId=\"CA1720\">\n    <Resolution Name=\"LanguageIndependentMemberParameter\">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>\n    <Resolution Name=\"LanguageSpecificMember\">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>\n   </Rule>\n   <Rule TypeName=\"IdentifiersShouldNotHaveIncorrectSuffix\" Category=\"Microsoft.Naming\" CheckId=\"CA1711\">\n    <Resolution Name=\"TypeNoAlternate\">Rename type name {0} so that it does not end in '{1}'.</Resolution>\n   </Rule>\n   <Rule TypeName=\"IdentifiersShouldNotMatchKeywords\" Category=\"Microsoft.Naming\" CheckId=\"CA1716\">\n    <Resolution Name=\"Member\">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>\n    <Resolution Name=\"MemberParameter\">In virtual/interface member {0}, rename parameter {1} so that it no longer conflicts with the reserved language keyword '{2}'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>\n    <Resolution Name=\"Type\">Rename type {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</Resolution>\n   </Rule>\n   <Rule TypeName=\"ImplementISerializableCorrectly\" Category=\"Microsoft.Usage\" CheckId=\"CA2240\">\n    <Resolution Name=\"Default\">Add an implementation of GetObjectData to type {0}.</Resolution>\n   </Rule>\n   <Rule TypeName=\"ImplementStandardExceptionConstructors\" Category=\"Microsoft.Design\" CheckId=\"CA1032\">\n    <Resolution Name=\"MissingConstructor\">Add the following constructor to {0}: {1}.</Resolution>\n   </Rule>\n   <Rule TypeName=\"InitializeReferenceTypeStaticFieldsInline\" Category=\"Microsoft.Performance\" CheckId=\"CA1810\">\n    <Resolution Name=\"Default\">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>\n   </Rule>\n   <Rule TypeName=\"InstantiateArgumentExceptionsCorrectly\" Category=\"Microsoft.Usage\" CheckId=\"CA2208\">\n    <Resolution Name=\"NoArguments\">Call the {0} constructor that contains a message and/or paramName parameter.</Resolution>\n   </Rule>\n   <Rule TypeName=\"MarkISerializableTypesWithSerializable\" Category=\"Microsoft.Usage\" CheckId=\"CA2237\">\n    <Resolution Name=\"Default\">Add [Serializable] to {0} as this type implements ISerializable.</Resolution>\n   </Rule>\n   <Rule TypeName=\"MarkMembersAsStatic\" Category=\"Microsoft.Performance\" CheckId=\"CA1822\">\n    <Resolution Name=\"Default\">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>\n   </Rule>\n   <Rule TypeName=\"MarkWindowsFormsEntryPointsWithStaThread\" Category=\"Microsoft.Usage\" CheckId=\"CA2232\">\n    <Resolution Name=\"Default\">Mark the entry point method {0} in assembly {1} with an STAThreadAttribute.</Resolution>\n   </Rule>\n   <Rule TypeName=\"NestedTypesShouldNotBeVisible\" Category=\"Microsoft.Design\" CheckId=\"CA1034\">\n    <Resolution Name=\"Default\">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>\n   </Rule>\n   <Rule TypeName=\"OperatorOverloadsHaveNamedAlternates\" Category=\"Microsoft.Usage\" CheckId=\"CA2225\">\n    <Resolution Name=\"Default\">Provide a method named '{0}' as a friendly alternate for operator {1}.</Resolution>\n   </Rule>\n   <Rule TypeName=\"OverrideMethodsOnComparableTypes\" Category=\"Microsoft.Design\" CheckId=\"CA1036\">\n    <Resolution Name=\"Equals\">{0} should override Equals since it implements IComparable.</Resolution>\n    <Resolution Name=\"Operator\">{0} should define operator '{1}' since it implements IComparable.</Resolution>\n   </Rule>\n   <Rule TypeName=\"ParameterNamesShouldMatchBaseDeclaration\" Category=\"Microsoft.Naming\" CheckId=\"CA1725\">\n    <Resolution Name=\"Default\">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>\n   </Rule>\n   <Rule TypeName=\"PropertyNamesShouldNotMatchGetMethods\" Category=\"Microsoft.Naming\" CheckId=\"CA1721\">\n    <Resolution Name=\"SameType\">The property name {0} is confusing given the existence of method {1}. Rename or remove one of these members.</Resolution>\n   </Rule>\n   <Rule TypeName=\"RemoveUnusedLocals\" Category=\"Microsoft.Performance\" CheckId=\"CA1804\">\n    <Resolution Name=\"Default\">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>\n   </Rule>\n   <Rule TypeName=\"ReviewUnusedParameters\" Category=\"Microsoft.Usage\" CheckId=\"CA1801\">\n    <Resolution Name=\"Default\">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>\n   </Rule>\n   <Rule TypeName=\"SpecifyIFormatProvider\" Category=\"Microsoft.Globalization\" CheckId=\"CA1305\">\n    <Resolution Name=\"Default\">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>\n   </Rule>\n   <Rule TypeName=\"SpecifyStringComparison\" Category=\"Microsoft.Globalization\" CheckId=\"CA1307\">\n    <Resolution Name=\"Default\">{0} makes a call to {1} that does not explicitly provide a StringComparison. This should be replaced with a call to {2}.</Resolution>\n   </Rule>\n   <Rule TypeName=\"UsePropertiesWhereAppropriate\" Category=\"Microsoft.Design\" CheckId=\"CA1024\">\n    <Resolution Name=\"Default\">Change {0} to a property if appropriate.</Resolution>\n   </Rule>\n  </Rules>\n </FxCopReport>\n</FxCopProject>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.1806640625,
          "content": "[![GitHub Actions status](https://img.shields.io/github/actions/workflow/status/nodatime/nodatime/push.yaml?branch=main)](https://github.com/nodatime/nodatime/actions/workflows/push.yaml)\n[![AppVeyor Build status](https://ci.appveyor.com/api/projects/status/kw664whqre92a00m?svg=true)](https://ci.appveyor.com/project/nodatime/nodatime)\n[![Coverage Status](https://codecov.io/gh/nodatime/nodatime/branch/main/graph/badge.svg)](https://codecov.io/gh/nodatime/nodatime)\n\nNoda Time is an alternative date and time API for .NET. It helps you to\nthink about your data more clearly, and express operations on that data more\nprecisely.\n\n* [Project web site](https://nodatime.org) - for documentation, installation, downloads etc\n* [Group/mailing list](https://groups.google.com/group/noda-time) - for discussion of potential features \n* [Project source and issue site](https://github.com/nodatime/nodatime)\n* [Stack Overflow tag](http://stackoverflow.com/questions/tagged/nodatime) - for specific \"How do I do X?\" questions\n\n## Contributing\n\nWe appreciate your interest in contributing to Noda Time. See the [contribution guidelines](https://github.com/nodatime/nodatime/blob/main/CONTRIBUTING.md) for more details.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.6201171875,
          "content": "# Version for the build. We make it clear that it's\n# Appveyor as this isn't a version we expect to make\n# it elsewhere...\nversion: 1.0.{build}-appveyor\n\nimage: Visual Studio 2022\n\nbranches:\n  only:\n    - main\n\nenvironment:\n  COVERALLS_REPO_TOKEN:\n    secure: 0MrjEwujECMnIaBkI76fNmCpKy5jr9rZx0rAFOM+41frhVfy2r0ldzzoFC4bvGig\n\ninstall:\n  # Make sure we get the bash that comes with git, not WSL bash\n  - ps: $env:Path = \"C:\\Program Files\\Git\\bin;$env:Path\"\n\n# Perform the build.\nbuild_script:\n  - bash build/appveyor.sh\n  - choco install codecov\n  - codecov -f coverage/coverage.xml\n\n# The tests are run as part of the build.\ntest: off\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.1552734375,
          "content": "{\n  \"$schema\": \"http://json.schemastore.org/global\",\n  \"sdk\": {\n    \"version\": \"8.0.100\",\n    \"allowPrerelease\": false,\n    \"rollForward\": \"latestMinor\"\n  }\n}\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}