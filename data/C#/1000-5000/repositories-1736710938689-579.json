{
  "metadata": {
    "timestamp": 1736710938689,
    "page": 579,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PSAppDeployToolkit/PSAppDeployToolkit",
      "stars": 1928,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2109375,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\n# Top-most EditorConfig file\nroot = true\n\n[*]\ncharset = utf-8-bom\nindent_size = 4\nindent_style = space\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5908203125,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n\n# Denote all files that are truly binary and should not be modified.\n*.png binary\n*.jpg binary\n*.ico binary\n*.gif binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.841796875,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.tlog\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\n*.vbp\n\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\n*.dsw\n*.dsp\n\n# Visual Studio 6 technical files\n*.ncb\n*.aps\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# Visual Studio History (VSHistory) files\n.vshistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n# VS Code files for those working on multiple tools\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n*.code-workspace\n\n# Local History for Visual Studio Code\n.history/\n\n# Windows Installer files from build outputs\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# JetBrains Rider\n*.sln.iml\n\n# Catesta ignores\nArchive\nArtifacts\ncov.xml\ncoverage.xml\n\n# OS generated files\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nehthumbs.db\nThumbs.db\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.txt",
          "type": "blob",
          "size": 86.0546875,
          "content": "ï»¿**Version 3.10.2 [08/13/2024]**\n- Added support for MARKs in VSCode. #994\n- Added Pester Tests for Copy-File, Execute-ProcessAsUser and Set-ActiveSetup\n- Fixed an issue with Test-ServiceExists / Get-LoggedOnUser working in a Windows Sandbox. #1031 #1032 #1035\n- Fixed an issue with log file rotation and log file permissions when running in user context. #1024 #1029 #1030\n- Fixed a number of issues relating to Robocopy in Copy-Files. #868 #1015 #1020 #1021 #1038\n- Fixed an issue where the Show-InstallationPrompt dialog would not display when run through MCM / SCCM in interactive mode. #1004 #1016\n- Fixed an issue where Execute-ProcessAsUser would throw a terminating error when no user logged on #1027\n- Fixed escaping of invalid characters in Block-AppExecution. #1036\n- Fixed a number of issues in Set-ActiveSetup / Execute-ProcessAsUser. #1017\n- Fixed an issue in French translations. #1019\n- Fixed an issue with Get-FileVersion #1007\n\n**Version 3.10.1 [05/03/2024]**\n- Added Turkish language support. Fixes #973.\n- Added parameter sets to Configure-EdgeExtensions to ensure mandatory parameters are correctly grouped.\n- Added missing elements to XML for Finnish language. Fixes #967.\n- Added -ExcludeServiceProfiles to Get-UserProfiles, add passthru of Exclude-ServiceProfiles/ExcludeSystemProfiles/ExcludeDefaultUser/ExcludeNTAccount to Copy-FileToUserProfiles & Remove-FileFromUserProfiles.\n- Added back the folder structure, changelog, license, and examples to the release zip file.\n- Added VLC and WinSCP as new example deployment scripts.\n- Added ServiceUI launch helper script and launch testing batch files to examples.\n- Added Contributing Guide, Code of Conduct, Security Policy and Support docs.\n- Added GitHub form-based Bug Report and Feature Request templates.\n- Added RoboCopyParams to Copy-File, which allows full override of Robocopy Parameters. Added /IT /IM to default parameters.\n- Changed Welcome Prompt so that the Deferral Time Remaining is now bolded. App Title size was also slightly increased so as to remain more prominent.\n- Changed button font so that text wasn't cut off for some localized languages. Fixes #980.\n- Changed RunHidden.vbs to get rid of use of ArrayList as it caused problems on some systems.\n- Changed Robocopy folder creation code to match native PowerShell Copy-File.\n- Changed Execute-ProcessAsUser to include an example for executing the function using \"LeastPrivilege\".\n- Fixed an issue where Execute-ProcessAsUser was not able to execute with RunLevel = 'LeastPrivilege' in some cases.\n- Fixed an issue in Execute-ProcessAsUser where the command line for two of the examples was incorrect.\n- Fixed an issue with Configure-EdgeExtensions where a new extension would not be added if no extensions were configured previously. Fixes #931 and #984.\n- Fixed an issue where Robocopy mode of Copy-File fails to copy files or folders when path begis with \".\\\" or \"..\\\". Fixes #938.\n- Fixed AppDeployToolkitExtensions.ps1 dot-sourcing to where it's always been dot-sourced from.\n- Fixed PowerShell v2 and .NET 3.5 Compatibility. Fixes #948.\n- Removed check on SecurityHealthSystray. Fixes #941.\n- Removed the PDF documentation, the website will be the primary source for this going forward.\n- Updated existing example deployment scripts.\n- Updated Pull Request template.\n- Updated Spanish translations. Fixes #805.\n\n**Version 3.10.0 [03/27/2024]**\n- Added the ability to configure Microsoft Edge Extensions using ExtensionSettings. Function: Configure-EdgeExtensions. This enables Edge Extensions to be installed and managed like applications, enabling extensions to be pushed to specific devices or users alongside existing GPO/Intune extension policies. This should not be used in conjunction with Edge Management Service which leverages the same registry key to configure Edge extensions.\n- Added the ability to copy the Toolkit folder and files to a cache folder on the local machine and execute from there.\n    Functions: Copy-ContentToCache and Remove-ContentFromCache. The cache path can be configured in the config.xml file, default is $envProgramData\\SoftwareCache. When Copy-ContentToCache is used, $dirFiles is updated to point to the local cache path.\n- Added the ability to copy files to all user profiles.\n    Functions: Copy-FileToUserProfiles and Remove-FileFromUserProfiles\n- Changed Copy-File to use Robocopy by default, overcoming the 260 character limitation of native PowerShell Copy-Item and providing more comprehensive file copy functionality and logging. This can be toggled off in the config.xml file by setting Toolkit_UseRobocopy = $false\n- Added Log File Rotation\n- Added VSCode workspace with default settings for PowerShell code formatting, default version (Windows PowerShell) and PSScriptAnalyzer linting.\n- Added ability to position progress dialogs to 'TopLeft', 'Top', 'TopRight', 'TopCenter', 'BottomLeft', 'Bottom', 'BottomRight'\n- Added -Wow6432Node switches for 32-bit registry support to all registry functions.\n- Improved all user interface components to work correctly in High DPI mode.\n- Improved all images and icons for brand consistency and double the resolution for High DPI mode.\n- Improved Get-RunningProcesses function, reducing complexity and improving performance\n- Improved Russian (RU) translations PR #843\n- Improved German (DE) translations PR #854\n- Added translations for many missing strings across a number of different languages. Thanks to ChatGPT for being an XML workhorse :)\n- Added shortcut keys for UI buttons - Alt-D for Defer, Alt-P for Close Programs, Alt-C for Continue\n- Fixed issue with Execute-MSI adding \"Transforms\" Parameters to uninstall Command Line #828\n- Resolved an issue where ConvertTo-NTAccountOrSID would throw an error when attempting to convert orphaned accounts, a warning is now displayed rather than an error. #865\n- Resolved an issue where if WindowStyle parameter is set to 'Hidden', then the UseShellExecute parameter to should be set to '$true' #678\n- Resolved an issue with how Set-ActiveSetup comma-separated version strings were compared to determine which was greater #743\n- Resolved an issue where $IsMultiSessionOS did not return true for Windows 11 Enterprise Multi-Session #807\n- Improved detection of OOBE / ESP\n- Improved documentation of Set-ActiveSetup function.\n- Resolved an issue where Execute-ProcessAsUser ran into issue when called multiple times because it overwrote files from previous invocation #333\n- Resolved an issue where Get-LoggedOnUser choose the wrong user session on Windows multi-session workstation operating systems #863\n- Improved Execute-Process with a useful example #835\n- Improved Execute-MSI so that all repetitive references to .log or .txt file extension in $LogName variable are all removed #759\n- Improved Get-HardwarePlatform to add support for detecting Parallels virtual machines #838\n- Improved Execute-ProcessAsUser and how it parses and executes command-line arguments. #794 #894 #782 #762 #851\n- Improved setup for $ResolveParameters (uses proper filter and piping, supports arrays and dictionaries) #874\n- Improved setup for setting $ScriptSource in Write-Log.\n- Improve $envOffice variable setup by reducing the number of Get-ItemProperty calls.\n- Factor in GPO-configured UpdateChannel property vs. CDNBaseURL property for $envOfficeChannel. #837\n- Add \"monthly enterprise\" UUID to $envOfficeChannel setup.\n- Changed when dot-sourcing of AppDeployToolkitExtensions occurs, so that use of custom functions can make use of UI elements, e.g. displaying a progress dialog.\n- Improved overall codebase for better compliance with Strict Mode.\n- Improved use of arrays throughout in order to improve performance.\n- Improved threat safety when using thread on user interface elements should result in fewer issues with progress dialogs.\n- Fixed UI message strings being incorrectly spaced on screen.\n\n**Version 3.9.3 [01/05/2023]**\n- Improved accuracy of Intune Provisioning/ESP detection #779 #801\n- Resolved an issue where Show-InstallationRestartPrompt would not work with -NoSilentRestart $false #785\n- Resolved an issue where Execute-ProcessAsUser would not work correctly since 3.9.2 #749 #776 #784\n- Resolved an issue where Execute-ProcessAsUser Scheduled Task is not removed after execution since 3.9.0 #791 #793\n- Resolved an issue where 3.9.2 would fail on devices running PowerShell versions below 5.1 due to the function Get-ComputerInfo #765\n- Resolved an issue where Execute-ProcessAsUser would fail due to a whitespace in the $installName if called prior to the Initialization phase #788\n- Resolved an issue where the status text on Show-InstallationProgress was not centered #780\n- Fixed French translation for WelcomePrompt_CountdownMessage #796\n- Added XML configuration option <Toast_Disable> to turn toast notifications off, default value is TRUE, thus reverting to balloon tip notifications as standard until stability is reached in the toast function.\n- Added XML configuration option <Toast_AppName> to define the standard app display name of the toast notification #778\n\n**Version 3.9.2 [06/02/2023]**\n- Toast notifications now show the custom logo in the notification header (#745)\n- Added variables for Office C2R: $envOfficeVersion, $envOfficeBitness, $envOfficeCDNBaseURL, $envOfficeChannel\n- Resolved an issue where toast notifications invoked from Show-BalloonTip would not work when running as a standard user in scenarios where a standard user does not have access to the $envTemp directory or to the profile of another user. (#741)\n- Resolved an issue where Execute-ProcessAsUser fails due to an unexpected VBS file association. (#741)\n- Resolved an issue where the script would fail on Windows Home editions due to the check for Power Users Group which doesn't exist on Home editions. (#728)\n- Removed the (cosmetic) console output related to creation of a temporary directory. (#739)\n\n**Version 3.9.1 [20/01/2023]**\n- Resolved an issue introduced in v3.9.0 where toast notifications would not display when run in the system context (#733)\n- Added Finnish language translations to the UI components (#681)\n- Added variable $IsMultiSessionOS for virtual environments (#697)\n- Add missing dash before TypeName parameter used with New-Object in the in Set-ItemPermission function which resulted in failing to set read permissions on the BlockExecution path. (#721)\n- Resolved an issue introduced in v3.8.4 where registry entries set by Block-AppExecution would not be cleaned up after an interrupted installation (#714)\n- Resolved an issue where a PowerShell prompt would flash on screen when invoking a PowerShell script using Execute-ProcessAsUser (#735)\n- Added the appropriate exit code 1638 for MSIs that are already installed when using the Execute-MSI function with -PassThru (#736)\n- Added creation of the $dirAppDeployTemp directory by default so the variable can be used for general actions (#708)\n\n**Version 3.9.0 [10/01/2023]**\n- AddedRefreshed UI components with updated PSAppDeployToolkit branding\n- Added support for Windows Toast Notifications, instead of using a BalloonTip (only for Windows 10 and above)\n- Changes to dialogs so that the default system font is used for all labels and buttons, adding a more consistent look and feel.\n- Improved documentation - new overview, features and benefits detail to enhance value proposition. Improved Function documentation and overall PDF document layout.\n- Updated text and structure for Comment-Based-Help to align with PowerShell Best Practices\n- Added detection of defaultuser0 OOBE or ESP process to enable Non-Interactive deployment mode for Intune Autopilot/ESP scenarios.\n- Show-InstallationPrompt now has a -TopMost parameter. Fixed the function failing to display a window with -NoWait parameter specified.\n- Show-InstallationWelcome will now display the countdown message if there are no processes running when CloseApps timer is enabled.\n- Show-InstallationProgress now supports moving the WindowLocation dynamically for existing progress dialogs (#685). When the WindowLocation is set to BottomRight, the position is now offset so as not to overlap with toast notifications (#685)\n- Show-InstallationRestartPrompt now has a -TopMost parameter. Resolved an issue where parameters were not handled correctly when running asynchronously. The titlebar now shows the toolkit icon.\n- Fixed vulnerability CWE-428 ensuring quotes are added to ActiveSetup paths with spaces (#726)\n- Fixed -FilterApplication logic in Remove-Applications (#665)\n- Fixed help text for some functions that contained old/incorrect information\n- Fixed $LocalPowerUsersGroup throwing errors on machines where it does not exist (e.g. Domain Controllers)\n- Resolved an issue with Set-ActiveSetup where the function would not correctly execute the process for the current user (#644)\n- Resolved an issue where Set-ActiveSetup would not correctly evaluate whether to execute while running as system (#707)\n- Set-ActiveSetup now also checks Version and IsInstalled properties when attempting to run the process for current user. DisableActiveSetup now also disables ExecuteForCurrentUser. Enhanced logging.\n- Execute-Process now shows a shorter error description rather than the full error information in the popup window, the full error details are available in the log.\n- Changed Block-AppExecution and Unblock-AppExecution so the functions also run during Non-Interactive installs (#699)\n- Fixed a bug that caused Update-Desktop/Refresh-Desktop to crash Powershell on 32bit systems\n- Improved calculation of dpi scale and pixels in the $GetDisplayScaleFactor variable.\n- Resolved an issue where New-Folder would not create the entire path name in some scenarios.\n- CHANGE: If the -ContinueOnError parameter on The Remove-Folder function now stops the script on all errors if the -ContinueOnError parameter is set to $false. The -DisableRecursion parameter now removes everything except non-empty folders.\n- Resolved an issue where the $LocalSystemNTAccount variable was not populated.\n- Resolved an issue where UNC paths were not handled by New-Shortcut, Set-Shortcut and Get-Shortcut. Minor improvement to $iconIndex logic in New-Shortcut.\n- Resolved an issues where the banner file object is locked and cannot be deleted in the same PowerShell session (#717)\n- Updated Get-InstalledApplication to make removal of control characters less aggressive (#691)\n- Updated entire toolkit to align with toolkit styling and formatting standards\n- Updated Execute-MSP functions to utilize toolkit MSI database helper functions\n- Added \"-Force\" and \"-ErrorAction\" parameters to \"Get-ChildItem\" calls in \"Copy-File\" function\n- Added Greek translations\n- Added the appropriate exit code for MSIs that are already installed to the Execute-MSI function (#686)\n- Improved Unblock-AppExecution function removal of the BlockAppExecution Schedule Task XML file\n- Updated Set-PinnedApplication to use \"OrdinalIgnoreCase\" instead of \"CurrentCultureIgnoreCase\" to ignore case of pin action on Windows 10\n- Set the ErrorAction of the \"Unregister-Event'\" command in the Finally block of the Execute-Process function to \"SilentlyContinue\"\n- Reverted some changes in \"Show-InstallationWelcome\" and \"Show-WelcomePrompt\" to maintain compatibility with PowerShell 2.0\n- Reverted changes that removed \"Select-Object -ExpandProperty\" calls to maintain compatibility with PowerShell 2.0\n- Reverted unnecessary conversions of Where-Object pipeline pattern to less readable ForEach-Object pattern. Where-Object pattern is not more performant than ForEach-Object (ForEach or For would be, but the micro-optimization is unnecessary for our usecase).\n- Reverted Resolve-Error function code to that from v3.8.3 to undo all changes\n\n**Version 3.8.4 [26/01/2021]**\n- Fixed Boolean parameters not being passed to Execute-Process\n- Changed Show-InstallationWelcome:\n  - Buttons are now wider\n  - Listbox is also wider so it is aligned with buttons\n  - Countdown is now bigger and in bold\n  - Appname is now in bold to be more visible\n  - Function now internally closes processes by name not by ID\n  - Fixed the hidden abort button not working on toolkit timeout\n  - Performance improvements\n- Changed Show-InstallationPrompt:\n  - Fixed the hidden abort button not working on toolkit timeout\n  - Buttons are now identical in size and position to the ones in Show-InstallationWelcome\n  - Increased the gap between the banner and the text when the message is too short\n  - The function now doesn't call Close-InstallationProgress when running in async mode\n- Changed Show-InstallationRestartPrompt:\n  - Reworked the window to look consistent with Show-InstallationWelcome\n- Changed Show-InstallationProgress:\n  - Reworked the window to look consistent with Show-InstallationWelcome\n  - Function now logs when it is being bypassed due to Deploy Mode\n- Changed Set-ActiveSetup:\n  - Fixed an issue where the function was adding executed active setup registry key when -ExecuteForCurrentUser $false was specified\n  - Function now checks the Active Setup registry key to evaluate whether to execute the StubPath based on the IsInstalled property\n- Fixed typo in Stop-ServiceAndDependencies saying \"start\" instead of \"stop\"\n- Fixed the toolkit checking task scheduler services twice\n- Fixed the toolkit not creating $app variables if they are not created in Deploy-Application.ps1\n- Reworked Close-InstallationProgress so it waits a couple of seconds in case the window is not opened yet\n  - This fixes an issue where the Show-InstallationProgress dialog would not get closed on slower machines where Close-InstallationProgress was called right after Show-InstallationProgress\n  - Function now gets bypassed in Silent Deploy Mode\n- Changed Execute-ProcessAsUser:\n  - The function now escapes invalid xml characters prior to using them in a xml file\n- Fixed signatures for a couple of functions inside AppDeployToolkitMain.cs based on official documentation - No breaking changes\n- Performance improvements across the toolkit\n- Fixed a bug in Set-ItemPermission where SID translation did not work correctly\n- Changed Show-BalloonTip:\n  - Function Show-BalloonTip now logs when it is being bypassed\n  - Added parameter -NoWait for asynchronous execution\n  - The icon tooltip now contains Title - Text\n- Fixed an issue where $envLogonServer would start with backslashes\n- Fixed an issue where some global variable did not get cleared on exit\n  - This caused an issue if you ran multiple toolkits in the same powershell session. It would use the same log file for all toolkits.\n  - This only occurred if you used the .ps1 files directly. Deploy-Application.exe opens a new session each time.\n- Added function Set-Shortcut that allows you to change existing shortcuts\n- Added function Get-Shortcut to retrieve information from a shortcut\n- Changed New-Shortcut:\n  - BREAKING CHANGE: IconIndex parameter is now an Integer. It was previously incorrectly specified as a String.\n  - Reworked the way this function sets shortcut to run as admin\n  - Added additional checks for the input Path in order to provide better log messages and better handling of relative paths\n  - Improved function help text\n- Changed the way Execute-MSI handles paths for Transforms and Patches:\n  - The only accepted separator is now a semi-colon. Commas can be a part of the paths now.\n  - Double quotes are removed from the paths before the entire string is wrapped in double quotes.\n- Encoding of the files has been changed back to UTF8 with BOM, back from UTF8 without BOM:\n  - We chose to go with UTF8 without BOM because it is the encoding for Powershell v6+ and because it is one of the most popular encodings in the world.\n    However this caused issues on Windows Powershell for clients that use a different language from English. Due to Microsoft's chaotic coding decisions, Powershell uses the BOM as a verification that the code is written with non-English characters.\n    In their own words:\"It's not possible to force PowerShell to use a specific input encoding. PowerShell 5.1 and below, running on Windows with the locale set to en-US, defaults to Windows-1252 encoding when there's no BOM.\n    Other locale settings may use a different encoding. To ensure interoperability, it's best to save scripts in a Unicode format with a BOM.\"\n  - Just like changing to UTF8 without BOM, this will not affect the size of the files or their functionality. BOM or Byte Order Mark is just one special character, placed at the start of the files.\n    If you do not use the toolkit on machines with a different language, then this will have no effect on you or your clients. It will however help everyone else display the text in their language correctly.\n\n**Version 3.8.3 [01/10/2020]**\n- Added function Set-ItemPermission that allows you to easily change permissions on files or folders.\n- Added setting READ permissions to BUILTIN\\Users for toolkit's temporary folder so they can get the popup message.\n- Added -AddParameters for Execute-MSP, that lets you add additional parameters.\n- Added -ExecuteForCurrentUser for Set-ActiveSetup, which allows you to disable executing the StubExePath for the current user.\n- Added -UseShellExecute for Execute-Process:\n  - WindowStyle Hidden doesn't usually work without this parameter on. CreateNoWindow will usually not work without this off.\n  - This parameter changes the way the application is started. It is similar to entering a path into the Run dialog or into the Windows Explorer. If it is a file not an application, then the Shell will open it in a program assigned for this extension. The Shell does not stand for command shell but for operating system shell. It also changes how Working Directory is used.\n  - If this parameter is set to $true there is no output/error stream. Only an exit code. Default value is $false which was also the case before, however you couldn't change it through parameters previously.\n  - Expanded description for WindowStyle, CreateNoWindow and WorkingDirectory parameters.\n- Added return value for Execute-Process with -PassThru and -NoWait specified: Returns an object with Id, Handle and ProcessName.\n- Added config paths to the config file for installations where RequireAdmin is False.\n- Added revised documentation which is now included as a PDF.\n- Changed Variables to no longer rely on the system variable PATH for system applications.\n- Changed default -Source value for Write-Log to a more useful value: it will be set to Parent's function name and if not inside a function then the name of the script. If not inside a function or a script, then the value will be set to 'Unknown'.\n- Changed UnBlock-AppExecution and Block-AppExecution so they don't run without admin rights. Instead of throwing an error, they only write and entry to the log.\n- Changed Execute-MSI so when the action is Patch, two variables REINSTALL and REINSTALLMODE are appended to parameters as specified here: https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/msiexec#update-options\n- Changed timestamp of compressed toolkit logs to 24h format to avoid possible double filenames.\n- Changed Get-ScheduledTask to Get-SchedulerTask to resolve the conflict on Windows 10 and added an alias on Powershell versions where this function does not exist.\n- Changed logging inside Convert-RegistryPath to be disabled by default, to decrease log clutter.\n- Changed registry paths to no longer use registry PSDrives and contain full paths.\n- Changed Show-InstallationPrompt so the window scales with the amount of text entered and removed unused space. If there is no icon specified, the text will scale the entire width too.\n- Changed Show-InstallationRestartPrompt so it restarts the computer in Silent and VerySilent deploy modes.\n  - Added NoSilentRestart parameter for the function to retain previous behaviour, which defaults to True.\n  - Renames 'Restart Later' to 'Minimize' to make it more clear to the user.\n- Fixed visual bugs in Show-InstallationWelcome.\n  - The application name is now always displayed.\n  - Fixed uncentered text.\n  - Height of the window is now not limited and scales with the text.\n  - Removes unused variables.\n- Fixed uses of Execute-Process throughout the toolkit with the -PassThru parameter since -PassThru no longer ignores exit codes.\n- Fixed issue with $envOSVersionRevision not being populated on Windows 8 because the \"UBR\" registry value is only being checked if \"$envOSVersionMajor = 10\".\n- Fixed an issue where the correct ProgramFiles and CommonProgramFiles paths were not populated if the Toolkit was launched from a 32-bit process on a 64-bit OS.\n- Fixed Powershell 2.0 issues with GetHostEntry and GetFolderPath.\n- Fixed the issue with config file being read incorrectly and showing incorrect characters in the UI.\n- Fixed Get-UserProfiles so it ignores \"defaultuser0\" account.\n- Fixed a rare issue in Execute-ProcessAsUser causing an error, because of a negative index for SubString.\n  - Improved logging in the function.\n  - CMD will now be started silently without a popup just like powershell.\n\n**Version 3.8.2 [08/05/2020]**\n\nSecurity Notice\n\n- Fixed security issue that could allow elevation of privilege related to the toolkit temp file path [Reserved CVE-2020-10962]\n  - The script temp file path was set to a location that was writeable by a standard user. This is set in the configuration XML.\n  - This security risk only affects deployments that use the Show-InstallationWelcome function with the parameter -BlockExecution or the internal function Block-AppExecution AND are running with elevated permissions AND can be exploited only while the script is running.\n  - To further minimize the risk of an attacker using this to gain additional permissions, it has been moved to a write-protected location.\n  - Note: This change will break deployment scripts that run with Standard User rights. While this has been technically possible to do, we are not aware of anyone doing this. As such, we feel this is the safest course of action for the overall PSADT userbase.\n  - Additionally, a standalone PowerShell script was created, to identify and remediate the issue on existing PSAppDeployToolkit deployment packages. It can be found here:\n    - https://github.com/PSAppDeployToolkit/PSAppDeployToolkit/blob/master/Sources/Set-ToolkitTempPath.ps1\n\nBreaking Changes\n\n- Changed behavior of parameters in Execute-Process. This is a breaking change which may require changes to deployment scripts:\n  - Changes to behavior are being made to reduce confusion around the wording of parameters when a custom workflow is required.\n  - No changes required if your deployment script does not have custom handling of exceptions / exit codes.\n  - ContinueOnError was scoped to ignore non-zero exit codes. It now operates at the function level and will allow continuing if an unknown exception occurs.\n  - If Passthru was specified, all non-zero exit codes and exceptions were ignored. Now, both event types cause a Script Failure.\n\t- To ignore specific exit codes, use the new IgnoreExitCodes parameter, using * to ignore all.\n\t- To stop the script if the process fails, use the ExitOnProcessFailure parameter.\n  - Execute-Process would fail if an exception occurred, even when ContinueOnError was specified. It now ignores exceptions as expected.\n  - ContinueOnError now ignores exceptions as expected. To ignore specific exit codes, use the IgnoreExitCodes parameter.\n\nOther\n\n- Added new parameters to the Execute-MSI function:\n  - NoWait. Allows immediately returning to the script once the process has been started, without waiting for it to complete (Default: False).\n  - IgnoreExitCodes. Allows ignoring specific or all exit codes returned by the process (Default: None).\n  - PriorityClass. Allows changing the process priority immediately after process starts (Default: Normal).\n  - ExitOnProcessFailure. Allows setting the script to immediately stop if the process fails and returns the exit code to the caller (e.g. SCCM) (Default: True).\n  - RepairFromSource. Allows rewriting local msi cache and repair installation from source\n- Added new parameters to the Execute-Process function:\n  - IgnoreExitCodes. Now supports ignoring all exit codes returned by the process (Default: None).\n  - PriorityClass. Allows changing the process priority immediately after process starts (Default: Normal).\n  - ExitOnProcessFailure. Allows setting the script to immediately stop if the process fails and returns the exit code to the caller (e.g. SCCM) (Default: True).\n- Added async reading of standard error stream to Execute-Process\n- Added restoring of PowerShell window title on script exit\n- Changed function Remove-InvalidFileNameChars to only retrieve Invalid Filename Characters once per script execution, instead of once per each function call\n- Improved handling of application install title / name variables\n- Fixed issue where exceptions were bypassed in Execute-Process with PassThru parameter specified.\n- Fixed issue where multiple processes were displayed in the Show-InstallationWelcome dialog when the same process has multiple descriptions.\n- Fixed a number of typos in the documentation.\n- Reverted part of the function Get-InstalledApplication that was causing slowdowns\n- Removed unused variable $processStarted.\n- Added parameter -WorkingDirectory for Execute-ProcessAsUser\n- Fixes for Slovak and Czech translations\n\n**Version 3.8.1 [03/28/2020]**\n- Added support for Repair as an action type (e.g. Install, Uninstall, Repair)\n- Added disabling of the close button for the Show-InstallationProgress window\n- Added ability to Execute-ProcessAsUser function to run PowerShell scriptblocks\n- Added ability to retrieve Product Version in Get-FileVersion\n- Added ability to display help for custom functions in the AppDeployToolkitHelp UI\n- Added ability to disable recursion in Remove-Folder\n- Added Remove-InvalidFileNameChars function and implemented across the toolkit\n- Added Powershell window renaming, in case it's visible to the user\n- Added Czech translations\n- Changed -In parameter usage to .Contains as -In parameter not supported in PowerShell 2.0\n- Changed Banner image to use Cascadia Code as primary font\n- Improved documentation\n- Improved Dutch translations\n- Improved logging in Get-InstalledApplication\n- Fixed issue in Set-PinnedApplication where pin action on StartMenu is case sensitive on Windows 10\n- Fixed Set-ActiveSetup purging incorrectly testing registry values\n- Fixed issue with Deploy-Application.exe where it would prompt to download .NET Framework 3.5 on Windows 8 and above\n- Added default -Source parameter value for Write-Log to fix CMTrace not displaying severity\n\n**Version 3.8.0 [09/23/2019]**\n- Added ability to change the dialog banner height, with a configurable maximum\n- Added ability to change the dialog banner and icon filename through the configuration file\n- Added support for animated GIFs in the dialog banner\n- Added a dynamic dialog banner height with a configurable maximum to the dialogs\n- Added support for flattening folder structure within Copy-File with -Flatten switch\n- Added architecture independence for Zero Touch MSIs where filename ends in x64.msi or x86.msi\n- Added logging to Remove-Folder function so it is also traceable in the log file when successful\n- Changed ProcessObjects parameter in Get-RunningProcesses function to mandatory=$false so Show-InstallationWelcome without CloseApps parameter does not fail\n- Changed encoding of AppDeployToolkitConfig.xml to UTF-8 (was incorrectly UTF16)\n- Fixed an issue where Execute-Process -MsiExecWaitTime used ticks instead of seconds\n- Fixed a number of glitches relating to illegal characters and locale-specific time / date formats\n- Fixed Get-RunningProcessesDynamically .NET error in Show-WelcomePrompt\n- Fixed issue with Write-Log creating bad formatting for CMTrace in non-English cultures\n- Fixed issue with non-standard quote characters in the Execute-MSP function\n- Fixed issue where Show-WelcomePrompt hangs when ForceCloseAppsCountdown is passed to Show-InstallationWelcomePrompt and application(s) listed in CloseApps are not running when timeout is reached\n- Fixed issue where Set-PinnedApplication did not pin to / unpin from taskbar on Windows 10 because Microsoft removed the taskbar verbs\n- Fixed issue where Get-InstalledApplication only supported Basic Latin unicode characters by removing logic which \"removes any control characters which might interfere with logging and creating file path names from these variables\", as the creation of file name is only used in Execute-MSI function and the logic there already replaces invalid filename characters\n- Fixed issue where Get-LoggedOnUser failed to detect if user is member of the Administrators group, when Administrator group has an orphaned account listed\n- Fixed issue where active setup execution fails when StubExePath contains ps1 file in Set-ActiveSetup function\n- Fixed issue where Show-InstallationPrompt would not show when using Title parameter in combination with NoWait\n- Fixed issue where defer times would not decrease from 1 to 0 when Show-InstallationWelcome prompt timed out\n- Fixed issue where a .NET Framework error would appear stating the term 'Get-RunningProcessesDynamically' was not recognized\n- Fixed an ActiveSetup purging error\n- Fixed typo in Remove-Folder function\n- Fixed examples in Enable/Disable-TerminalServerInstallMode\n- Fixed detection of wired network connections in Test-NetworkConnection function on Windows 10 workstations\n- Updated the AppDeployToolkit logo to match the website\n\n**Version 3.7.0 [02/13/2018]**\n- Added the ability to dynamically re-enumerate running applications while displaying the Show-InstallationWelcome prompt. If the CloseApps processes were not running when the prompt was displayed and are subsequently detected to be running, the prompt will be updated with the apps to close. If the CloseApps processes were running when the prompt was displayed and are subsequently detected not to be running, then the installation will automatically continue if no deferral is available. If the CloseApps processes change (new processes launched or running processes closed), the list box will dynamically update every 2 seconds to reflect the currently running applications.\n- Added ContinueFileCopyOnError parameter to the File-Copy function to continue copying files if an error is encountered.\n- Added error handling to catch errors retrieving/deleting scheduled task in Unblock-AppExecution\n- Added detection of App-V pending tasks to the Get-PendingReboot function\n- Added support for creating a hotkey to the New-Shortcut function\n- Added the parameter type column to the logging function\n- Added the Win32_BaseService class to the Test-ServiceExists function\n- Added environment variables; CurrentUILanguage\n- BREAKING CHANGE, The \"Regex\" filter in Remove-MSIApplications previously escaped RegEx characters, but now parses a RegEx statement as expected. Added \"Contains\" filter which emulates RegEx filter from previous version.\n- Re-named \"Refresh-Desktop\" to \"Update-Desktop\" and \"Refresh-SessionEnvironmentVariables\" to \"Update-SessionEnvironmentVariables\" to conform to approved Cmdlet verbs, an alias preserves backwards compatibility with the previous function names\n- Fixed issue where OS Revision Version is not always retrieved correctly in Windows 10\n- Fixed issue in Copy-File where it was not possible to copy an array of file objects\n- Fixed issue in Set-RegistryKey where registry keys with forward slashes now contains actual forward slash [char]0x002F instead of [char]0x2215\n- Fixed issue in Execute-ProcessAsUser where result from the task scheduler could not be parsed on non-English language systems. Fix applies for Vista and higher\n- Fixed issue in Execute-ProcessAsUser which could delete the task before executing it if used without the Wait switch\n- Fixed issue in Execute-ProcessAsUser to allow parameters ending with a double quote\n- Fixed issue where Test-PowerPoint erroneously returned False on non-English language systems\n- Fixed issue where zero-config MSI would run when Show-InstallationRestartPrompt is called\n- Fixed issue where BalloonTip doesn't launch asynchronously when initiated from Exit-Script\n- Fixed case sensitivity in the shortcut path passed to New-Shortcut\n- Fixed issue in Remove-File where a confirmation dialogue would hang the script if a non-empty folder is encountered when the Recurse switch is not specified\n- Fixed issue with white spaces in scheduled task creation breaking the -BlockExecution parameter\n- Fixed missing information in documentation and fixed encoding issue with AppDeployToolkitConfig.xml\n- Fixed issue where TopMost parameter in Show-DialogBox function could not be set to $false\n- Removed PS v3.0 minimum check for Get-Hotfix cmdlet used in Test-MSUpdates\n- Improved parameter validation on -CheckDiskSpace and -RequiredDiskSpace parameters in Show-InstallationWelcome prompt\n- Improved comments and documentation\n\n**Version 3.6.9 [02/12/2017]**\n- Added SecureParameters parameter to additional section of Execute-ProcessAsUser\n- Added SecureParameters parameter to Execute-ProcessAsUser\n- Added -RegEx parameter to Get-InstalledApplication and modified the help text for the -Name parameter\n- Added DoNotExpandEnvironmentNames parameter to Get-RegistryKey to enable retrieving of unexpanded REG_EXPAND_SZ values\n- Added expandstring functionality to the MSI_InstallParams, MSI_SilentParams, and MSI_UninstallParams XML properties\n- Added support for Windows 10 to the function Set-PinnedApplication to enable pinning and unpinning to the Start Menu\n- Added IncludeUpdatesAndHotfixes Parameter to Execute-MSI and Remove-MSI functions\n- BREAKING CHANGE, Changed variable envCommonPrograms to envCommonStartMenuPrograms\n- Changed behavior of Remove-Folder function to continue deleting files recursively when an error is encountered when $ContinueOnError is used\n- Changed severity of failure messages created in the Set-PinnedApplication to warning (2) from error (3)\n- Changed .ps1 script files so that they are UTF-8 BOM encoded so that you can digitally sign files on non-unicode language systems\n- Fixed issue in Exit-Script where the system tray icon was not being removed at the end of the script\n- Fixed issue in Remove-MSIApplication which caused the function to fail in the case of multiple filtered or excluded applications\n- Fixed issue in Get-PendingReboot where detection of a pending SCCM reboot would cause a fatal error for some clients\n- Fixed issue in Test-MSUpdates giving preference to the Get-Hotfix cmdlet for detecting updates\n- Fixed issue where variable envOSVersion was inconsistent in Windows 8 and 8.1 workstations\n- Fixed issue in Execute-ProcessAsUser with Powershell script execution\n- Fixed issue in Test-MSUpdate which returned a false positive when searching for an installed update\n- Fixed typo in Get-HardwarePlatform function\n- Fixed issue in Set-RegistryKey where registry keys with forward slashes were treated like backslashes and broken up into subkeys\n- Fixed issue in Remove-RegistryKey function where it failed to delete the (Default) value when specified due to limitation of Remove-ChildItem cmdlet\n- Fixed issue in New-Shortcut to use Rename-Item parameter name that is compatible with PS 2.0\n- Fixed issue in Get-RegistryKey function which caused it to ignore the (Default) value\n- Improved comments and documentation\n\n**Version 3.6.8 [02/06/2016]**\n- Added environment variables with additions for Pictures, Templates, and Common User locations\n- Added SecureParameters parameter to Execute-MSI and Execute-Process functions\n- Added language translations for Slovak, Hungarian and also updated translations for German\n- Added ParentProcessId property to Get-WindowTitle\n- Fixed issue in Remove-File where deleting of multiple files would stop silently on first error and added LiteralPath parameter\n- Fixed issue in the Uninstall Office 2013 Deploy-Application example where an incorrect variable was referenced to determine if a user session was present for the script execution\n- Fixed issue in Test-MSUpdates where a fatal error occurred when no update history is present on the target system\n- Fixed issue in Install-MSUpdates where the full path to the update file was not passed to Execute-Process for installation\n- Fixed issue where Get-InstalledApplication throws an error when attempting to import invalid registry values from the subkeys of the Uninstall key\n- Fixed formatting of window title name when showing the blocked app dialog window or the restart computer window\n- Fixed issue in Test-PowerPoint where detection did not work if there were multiple screens or if presentation was on screen without mouse focus\n- Fixed issue in Get-RegistryKey where reading an empty value or a DWord value of 0 caused function to return $null\n- Fixed issue in Set-DeferHistory where function did now log $deferTimesRemaining and referenced an incorrect variable name instead\n- Fixed issue in Get-HardwarePlatform where function did not detect Microsoft Surface hardware correctly\n- Fixed issue in Remove-MSIApplications to make sure that an invalid ProductCode is not passed to the Execute-MSI function\n- Improved toolkit so that asynchronous executions of the toolkit write to the same log file instead of creating a new one\n- Improved Get-InstalledApplication to verify ProductCode is valid product code before storing value, also added UninstallSubkey property\n- Improved toolkit to allow setting custom $InstallTitle and $InstallName in Deploy-Application\n- Improved temporary logging folder naming convention to include deployment type in the name\n- Improved Office example script by updating Offscrub13.vbs to latest version from Microsoft, fixes issue with completion notice\n- Improved error handling in the Get-InstalledApplication function\n- Improved error handling in the Test-MSUpdates function\n- Improved Execute-MSI so that environment variables created by MSIs are always updated for Windows Explorer\n- Improved Execute-Process function to capture out of range exit codes and return custom 60013 exit code\n- Improved Remove-RegistryKey function to write warning instead of error to log if a property being deleted does not exist\n- Improved Get-PendingReboot function to check if \"ROOT\\CCM\\ClientSDK\\CCM_ClientUtilities\" WMI class exists before executing method\n- Improved Show-BalloonTip function to suppress balloon notifications if a PowerPoint presentation is in fullscreen slideshow mode or presentation mode\n- Improved comments and documentation\n\n**Version 3.6.7 [09/22/2015]**\n- Fixed Write-Log issue introduced in v3.6.6 that created malformed CMTrace type log files\n- Improved documentation to add section on how to use zero-config MSI install option\n\n**Version 3.6.6 [09/21/2015]**\n- Added error handling for Remove-RegistryKey function when used on key with child keys and -Recurse parameter not used to avoid script hanging\n- Added ability in Remove-MSIApplications to filter the list of results returned by Get-InstalledApplication to only those that should be uninstalled\n- Fixed issue with Set-ServiceStartMode where setting the service to Automatic will set it to Automatic (Delayed Start)\n- Fixed issue introduced in v3.6.5 where blocked application dialog did not display for blocked applications\n- Fixed issue with $appRevision being appended to $installName if not defined\n- Fixed issue in Show-InstallationPrompt with $installName being passed instead of $Title for -ReferringApplication parameter when -NoWait option specified\n- Fixed issue in Test-MSUpdates where information about the discovered KBArticle was not being converted to readable text before being logged\n- Fixed issue with detecting UI language by removing faulty detection method for Windows 8\n- Fixed issue in Block-AppExecution by removing illegal characters such as \"&\" from the arguments string of the XML file before importing it\n- Fixed issue in Get-InstalledApplication where invalid data in the registry could terminate enumeration of the registry\n- Fixed issue with compiling scripts to EXE by removing support for alternative PowerShell hosts from AppDeployToolkitMain.ps1 file\n- Fixed typo in config XML file for Swedish language message for 'ClosePrompt_CountdownMessage'\n- Fixed issue in Show-InstallationWelcome where $notesPath was not defined before it was used\n- Fixed issue in Show-InstallationWelcome where all process names were not enumerated on PS2.0 when trying to close notes processes\n- Changed message update priority, to increase it, from 'Normal' to 'Send' in Show-InstallationProgress (should hopefully address reports that messages do not display on screen on time)\n- Changed Set-Acl and Get-Acl -LiteralPath parameter to -Path in function New-ZipFile as -LiteralPath is not available in PS 2.0\n- Changed $global: variables to $script: variables as these two scopes are the same in the context of the powershell console that executes the script\n- Improved registry functions to throw error if registry hive not specified\n- Improved comments and documentation\n\n**Version 3.6.5 [08/17/2015]**\n- Added function New-MsiTransform to allow creation of transform files for MSI databases. Supporting functions: Set-MsiProperty, Invoke-ObjectMethod, Get-ObjectProperty.\n- Added ability in Remove-MSIApplications to exclude software from being uninstalled by matching against specified property/value/match-type pairs\n- Added function Get-PendingReboot to get pending reboot status for the local computer (thanks to user 'That-Annoying-Guy' for the original code)\n- Added function Test-RegistryValue to check for the existence of a registry value, needed to support Get-PendingReboot function\n- Added ability to install MSP files as part of a zero-config MSI install\n- Added ability to Get-MsiTableProperty to apply a list of transform files to an MSI database after opening it. Also added ability to read properties from MSP files. Also added -GetSummaryInformation parameter to allow reading of Summary Information from a Windows Installer database file.\n- Added support for retrieving $MyInvocationInfo when using alternative PowerShell hosts such as with Sapien PowerShell compiled EXEs\n- Added following variables: $currentDateTime, $envLogicalDrives, $envUserCookies, $envUserDesktop, $envUserFavorites, $envUserInternetCache, $envUserInternetHistory, $envUserMyDocuments, $envUserSendTo, $envUserStartMenu, $envUserStartMenuPrograms, $envUserStartUp, $envSystem32Directory\n- Added function New-ZipFile to allow creating zip archives, cleaned up the code for zipping the log folder from the Exit-Script function\n- Fixed issue with Get-WindowTitle which caused the -PromptToSave functionality in Show-InstallationWelcome to fail on Win 7 PowerShell 2.0 machines\n- Fixed issue with Show-WelcomePrompt which caused the -TopMost $false option to not work (also affected Show-InstallationWelcome)\n- Fixed issue introduced in v3.6.3 where Norwegian language code in config XML was changed to NO. Code reverted back to NB as this is the proper code for the BokmÃ¥l written language supported by Windows.\n- Fixed issue introduced in v3.6.4 by adding back a double quote to the .vbs file generated by Execute-ProcessAsUser (initial reported issue was caused by bad code in the example which has been fixed)\n- Fixed issue in Refresh-Desktop which caused refreshing the global process environment block to fail\n- Fixed issue in Test-MSUpdates where updates that had been uninstalled were detected as installed by the Office updates detection method\n- Fixed issue with detecting user's display UI on XP from registry key 'HKCU\\Control Panel\\International\\Locale', and fixed type in one of the other registry paths checked\n- Fixed issue in Set-ActiveSetup so that HKCU active setup registry keys are created when stubpath is executed for currently logged in user so that it does not execute a second time when user logs into account\n- Fixed issue with New-Folder function displaying console output\n- Fixed issue with Get-MsiTableProperty where reading the property table for a second MSI would throw an error unless -Force parameter specified\n- Fixed issue with the zip compressed log files only being accessible to elevated users\n- Fixed issue with Show-InstallationRestartPrompt where the PSADT restart prompt prevented a manual user initiated Windows Shutdown from being executed\n- Fixed issue with Show-InstallationPrompt and Show-InstallationRestartPrompt where the dialog would be displayed in Silent Mode\n- Fixed issue in Get-InstalledApplication where -ErrorAction could prematurely stop function if permissions issue while enumerating registry keys\n- Fixed issue with Invoke-HKCURegistrySettingsForAllUsers where registry profiles would fail to unload\n- Fixed issue where the final (asynchronous) balloon tip would not display\n- Fixed issue with Zero-Config MSI installations not being able to handle MST files\n- Fixed issue with Get-MsiTableProperty where handle to MSI database file was not released by powershell.exe after reading properties\n- Fixed issue with Close-InstallationProgress where $global:ProgressRunspace was not closed\n- Fixed issue where the toolkit would terminate in session zero due to absence of user domain variable\n- Changed 5000 exit code for \"InstallationDefer_ExitCode\" in config XML to 60012 to be in line with newly defined exit code ranges for the toolkit\n- Changed Deploy-Application.ps1 to allow exiting with custom exit code if failure to parse toolkit\n- Changed registry manipulation functions to use -LiteralPath instead of -Path because * and ? are rare but valid characters for registry names\n- Changed Show-InstallationWelcome and Show-WelcomePrompt to allow display of custom message from XML by using -CustomMessage parameter. Also added -ForceCountdown to allow us to have a countdown timer with the defer option on the welcome screen.\n- Changed variable $envTemp to use recommended method of retrieving temp folder path\n- Improved Exit-Script so that it is possible to manually exit the script with a 3010 or 1641 exit code and trigger an SCCM \"Soft Reboot\"\n- Improved comments and documentation\n\n**Version 3.6.4 [05/19/2015]**\n- Fixed issue with detecting user's display UI when enforced by Group Policy, fixed typo in one of the registry paths\n- Fixed issue with extra double quote at end of VBScript command in function Execute-ProcessAsUser (caused issue in Set-ActiveSetup as well)\n- Fixed issue with Enable-TerminalServerInstallMode and Disable-TerminalServerInstallMode expecting a successful execution of change.exe to return 0 when it should really be 1\n- Fixed issue with Execute-MSI so that Get-MsiTableProperty is only called when the file being executed is an MSI and not when it is an MSP\n- Fixed issue in Invoke-HKCURegistrySettingsForAllUsers where a registry hive would fail to unload because of an active memory reference by manually invoking garbage collection\n- Fixed issue where registry key for deferrals was not being set correctly\n- Fixed issue in Show-InstallationWelcome where blocking \"notes\" would stop script execution\n- Fixed issue where System.Threading.Mutex class does not have Dispose() method prior to .NET 3.5 so will call Close() method instead. This also fixed issue with blocked app message not showing on Win 7 .NET 2.\n- Changed StubPath registry type to 'String' in Set-ActiveSetup\n- Improved comments and documentation\n\n**Version 3.6.3 [04/29/2015]**\n- Added an informational tooltip to the 'Continue' button on the close apps screen to make it clear that it can only be used after closing the listed applications\n- Added -PendingStatusWait as a configurable option to functions Start-ServiceAndDependencies and Stop-ServiceAndDependencies\n- Added translations for following languages to config XML: Arabic, Hebrew, Korean, Portuguese (Brazil), Russian, Chinese (Traditional), Chinese (Simplified)\n- Fixed issue with Get-ScheduledTask not working properly with non-English languages\n- Fixed issue with Write-Log throwing error on Windows 7 when discovering script source under certain conditions\n- Fixed issue with Get-RunningProcesses on Windows 7 where the custom object did not return ProcessDescription property unless -PassThru option was used\n- Fixed issue with the creation of the blocked apps cleanup scheduled task to avoid 259 character limit for the 'Command' property\n- Fixed issue where a file remnant from an old version of the toolkit caused failure in ability to copy toolkit to temporary folder defined in config XML\n- Fixed issue with Set-ActiveSetup where StubExePath was a mandatory parameter when purging active setup entry\n- Fixed issue in config XML where two letter ISO language code for Norwegian was defined as NB instead of NO\n- Fixed issue in Write-Log where hashtable is storing $LogfilePath instead of $LogFileName for LogfileName property when archiving logs\n- Changed icon for Deploy-Application.exe\n- Improved Get-LoggedOnUser by increasing performance. Added IsActiveUserSession and IsRdpSession properties.\n- Improved documentation\n\n**Version 3.6.2 [04/14/2015]**\n- Improved capture of error details in function Invoke-HKCURegistrySettingsForAllUsers when a user profile fails to load\n- Improved internal function Test-MsiExecMutex: renamed function to Test-IsMutexAvailable, added parameters to allow checking for any named mutex, improved error trapping and messages\n- Improved Get-LoggedOnUser by increasing performance (should be much faster now)\n- Improved Show-WelcomePrompt by adding horizontal scrollbar for listbox items that are longer then the window\n- Changed toolkit so that all custom C# code is now in a separate file called \"AppDeployToolkitMain.cs\" which gets compiled once after functions are declared\n- Added an alias called 'Text' for the -Message parameter in Write-Log for backwards compatibility\n- Fixed issue with retrieving the active logged in user's system DPI scale factor because of typo in registry key\n- Fixed issue with malformed log entries being inserted into log file when dot sourcing scriptblock to retrieve logged in user session details\n- Fixed issue in Remove-MSIApplications where 'Path' key could be added to hash table more than once\n- Fixed issue with detecting a logged in user's locale\n- Fixed issue in Get-RunningProcesses where a regex match would detect processes that partially matched the name of the process being searched for\n- Fixed issue in Get-RunningProcesses and Show-InstallationWelcome where a specified custom process description was ignored\n- Fixed issue where Deploy-Application.ps1 script version would be set to toolkit version if it was not specified\n\n**Version 3.6.1 [04/02/2015]**\n- Added Zero-Config deployment for MSI files. No need to customize anything. Drop your MSI in the Files folder and run the toolkit. Information is pulled from the MSI to do branding, logging, and closing in-use processes.\n- Added -DisableLogging switch to Deploy-Application.ps1 to disable logging to file for the script\n- Added -SoftwareUpdatesScanWaitInSeconds and -WaitForPendingUpdatesTimeout parameters to Install-SCCMSoftwareUpdates\n- Added -WildCard search option to Get-InstalledApplication and Remove-MSIApplications\n- Added -PassThru option to Test-Battery which will return the following properties: IsLaptop, IsUsingACPower, ACPowerLineStatus, BatteryChargeStatus, BatteryLifePercent, BatteryLifeRemaining, BatteryFullLifetime\n- Added following parameters to Remove-MSIApplications to match those in Execute-MSI: -Parameters, -AddParameters, -LoggingOptions, -LogName\n- Added default active username for -UserName parameter in Execute-ProcessAsUser\n- Added -SkipMSIAlreadyInstalledCheck parameter to Execute-MSI function to allow ability to skip the check that determines if an MSI is already installed on the system\n- Added SID property to Get-LoggedOnUser function results\n- Added -LoadLoggedOnUserEnvironmentVariables parameter to Refresh-SessionEnvironmentVariables function to allow loading user environment variables when running in the SYSTEM context\n- Added ability in Set-ActiveSetup to execute active setup entry for currently logged on user when running under the SYSTEM account\n- Added ability to detect Primary UI language of active logged in user when running under the SYSTEM account\n- Added function Get-WindowTitle to add ability to search for an open window title and return details about the window\n- Added -WindowHandle and -GetAllWindowTitles parameters to Send-Keys function\n- Added ability to detect display scale factor for currently logged on user when running under the SYSTEM account\n- Added -PassThru parameter to Execute-MSI and Remove-MSIApplications to return ExitCode, STDOut, and STDErr output\n- Fixed issue introduced in 3.6 whereby the toolkit timeout would not be triggered resulting in the wrong exit code being passed\n- Fixed issue in Install-MSUpdates where a folder path with a KB number in the folder name would force the regex to only detect that one KB in the folder\n- Fixed issue in Get-ServiceStartMode to avoid error when DelayedAutoStart property does not exist\n- Fixed issue introduced in 3.6.0 where $sessionZero was incorrectly set to $false after being set to the correct value\n- Fixed issue in Test-PowerPoint related to accurately measuring the size of a non-fullscreen window\n- Fixed variable type for -PassThru parameter in functions for manipulating services\n- Fixed issue in Execute-ProcessAsUser which improperly caused script exit\n- Fixed issue in Get-UserProfiles where 'DefaultUserProfile' registry value was mis-typed as 'DefaultUsersProfile'\n- Fixed issue in Show-InstallationWelcome to avoid error if the Description field of a hung process could not be accessed\n- Fixed issue where script would hang when removing deferrals (cause: Remove-RegistryKey did not have -Recurse parameter specified)\n- Changed Send-Keys function to use new Get-WindowTitle function when searching for window titles\n- Changed Deploy-Application.exe to exit with exit codes in the newly defined range\n- Improved Install-SCCMSoftwareUpdates to only execute if SCCM 2012 or higher installed because method is not compatible with SCCM 2007 or lower\n- Improved Install-SCCMSoftwareUpdates to check if SCCM client service is installed and running before trying to install updates\n- Improved Invoke-SCCMTask to check if SCCM client service is installed and running before invoking task\n- Improved Invoke-SCCMTask to add a few more SCCM 2012 client compatible schedule ids and to only allow execution of a schedule id compatible with the installed version of the client\n- Improved Block-AppExecution by using the import XML method of creating a scheduled task so that we could configure the task that unblocks applications to execute even if running on batteries\n- Improved Deploy-Application.ps1 by setting exit code to 60008 if AppDeployToolkitMain.ps1 fails to dot source\n- Improved Send-Keys function to be able to detect all open windows (including Explorer windows and all child windows), and also to bring any child window into the foreground\n- Improved -PromptToSave function to allow prompting for all child windows of a single instance application (such as Microsoft Word)\n- Improved the behavior for dialog shown when user tries to execute a blocked app so that no more than one dialog can be shown at a time\n- Improved documentation\n\n**Version 3.6.0 [03/11/2015]**\n- Added function Set-ActiveSetup to allow creation/deletion of Active Setup entries (thanks to Denis St-Pierre, Todd MacNaught for code)\n- Added function Execute-ProcessAsUser to support running processes as the current logged on user to provide interaction in the system context. Note: if the user is not a local admin the process launched in user context will not inherit admin rights.\n- Added -PromptToSave parameter to Show-InstallationWelcome to prompt to save working documents when the users selects to close running applications\n- Added -TopMost parameter to Show-InstallationWelcome to allow the ability for the user to move the welcome screen to the background\n- Added variable to determine if running in terminal server session\n- Added functions to handle Windows services: Test-ServiceExists, Stop-ServiceAndDependencies, Start-ServiceAndDependencies, Get-ServiceStartMode, Set-ServiceStartMode\n- Added check to test whether or not the Windows Task Scheduler service is in a healthy state and fix any issues if possible.\n- Added ability in Deploy-Application.exe to read if Admin rights required from XML file and then automatically prompt to elevate on Vista or higher\n- Added -ExcludeDefaultUser parameter to Get-UserProfiles to allow exclusion of the Default User profile\n- Added IsLocalAdmin property to results from Get-LoggedOnUser function to determine if the user account is in the local Administrators security group\n- Added -AddParameters parameter to Execute-MSI to allow augmenting of parameters instead of replacing them\n- Added -ReturnEmptyKeyIfExists parameter to Get-RegistryKey to allow returning empty registry keys if they exist\n- Added -LoggingOptions parameter to Execute-MSI to allow overriding the default logging options specified in the config file\n- Added validation for -Path parameter in Execute-MSI function\n- Fixed issue where Show-InstallationRestartPrompt and Show-InstallationPrompt with -NoWait parameter didn't work\n- Added default action of Install to Execute-MSI\n- Added ability to specify multiple transforms and patches in Execute-MSI using a comma separated list\n- Added ability in XML configuration to override the detected language with a statically defined language for installation UI elements\n- Fixed issue in Show-InstallationProgress where -BottomRight parameter would cause prompt to be placed off screen where DPI is > 100%\n- Fixed issue with error being thrown when reading the DPI scale from the registry if the property doesn't exist\n- Fixed issue with Show-InstallationWelcome failing if \"notes\" specified with -CloseApps parameter when Notes application not installed\n- Fixed issue in Execute-MSI where LogName parameter did not work correctly\n- Fixed issue with Show-InstallationWelcome where deferrals would be ignored if CloseAppsCountdown parameter is specified\n- Fixed issue in Copy-File where operation would fail if destination folder was not created before operation when using wildcards in -Path parameter\n- Fixed issue in Unblock-AppExecution on some systems where process failed to unblock if only one process was initially blocked\n- Fixed issue with Deploy-Application.exe not executing on systems where only .NET 4 or higher installed by adding Deploy-Application.exe.config file\n- Fixed issue with Deploy-Application.exe by using -Command parameter instead of -File to avoid bug in PowerShell 2.0 where incorrect exit code might be returned if -File parameter used\n- Fixed a number of issues with the Office 2013 example script\n- Fixed issue whereby pressing enter would default to a hidden Abort button on Show-installationWelcome and Show-Installation Prompt\n- Fixed aesthetic issue whereby use of DeferDays or DeferDeadline without DeferTimes would show a deferral count of 1 remaining\n- Fixed issue in Get-InstalledApplication to properly detect applications when -Exact parameter used\n- Fixed issue in Get-UniversalDate where function would fail for some valid date formats under some culture settings\n- Fixed issue in Write-Log where it was not possible to change logfile name and directory after the first time these paths were set\n- Fixed issue with Deploy-Application.ps1 where variable expansion wouldn't work in Show-InstallationPrompt example\n- Fixed issue with Install-SCCMSoftwareUpdates not working on all clients\n- Fixed issue where modal dialog windows were not properly disposed\n- Improved path validation in Deploy-Application.exe, rewrote utility in C#\n- Improved defining default values for script variables not defined\n- Improved path validation in Execute-Process\n- Improved path validation in Execute-MSI\n- Improved working directory validation in Execute-MSI\n- Improved error message when toolkit launched without admin permissions\n- Improved detection of when invoking script is the Help script to avoid false positives\n- Improved Deploy-Application.ps1 to use Write-Error instead of Write-Output when toolkit fails to dot source\n- Improved Get-ScheduledTask to retrieve all scheduled task details, remove spaces and colons from property names, allow retrieval of details for a specific task name, and remove lines with column headers from results\n- Improved compilation of custom C# code by using -IgnoreWarnings switch with Add-Type cmdlet so that toolkit does not fail to run because of a warning\n- Improved Write-Log to log following for CMTrace log type: thread id, file name of source script\n- Improved environment variable population when running in system context\n- Improved Write-Log to log PID and log source for CMTrace log type\n- Improved Remove-RegistryKey to check if a key exists before trying to delete it and log a warning if key does not exist\n- Changed default Exit Codes for internal Toolkit functions. The range of 60000 is used for internal, and 70000 should be used for custom extensions\n- Changed toolkit to remove unused variables which did not exist and were being read from XML file\n- Changed Register-DLL/Unregister-DLL function to combine them into one function called Invoke-RegisterOrUnregisterDLL. Created Aliases for new function name to maintain backwards compatibility.\n- Changed Notes process termination using NSD to only run if Notes processes are running\n- Updated documentation\n- Added Polish translations\n- Updated German translations\n- Updated Italian translations\n\n**Version 3.5.0 [11/24/2014]**\n- Added CMTrace compatible log files to Write-Log (now the default). Legacy log format still available through configuration in XML config file\n- Added ability to modify HKCU registry settings for all users on a machine by loading registry hives. Added functions to support this: Invoke-HKCURegistrySettingsForAllUsers, Get-UserProfiles, ConvertTo-NTAccountOrSID. Modified functions to support this: Convert-RegistryPath, Get-RegistryKey, Set-RegistryKey, Remove-RegistryKey\n- Added ability in Register-DLL / Unregister-DLL to detect bitness of DLL files and register for the correct architecture automatically\n- Added ability for Test-PowerPoint to actually detect if user is presenting slideshow in fullscreen mode\n- Added Get-LoggedOnUser to get session details for all local and RDP logged on users\n- Added Refresh-SessionEnvironmentVariables to allow reloading of newly created environment variables for the current process\n- Added new variables for Domain Membership, Process Information, Account Permissions, OS Type and Versions, PowerShell and .NET versions, TimeZone Bias\n- Added TRANSFORMSSECURE=1 as default where Transform parameter is specified\n- Added ability to detect active console user (user with control of the monitor, keyboard, mouse)\n- Added ForceCloseAppsCountdown parameter to Show-InstallationWelcome allowing a countdown to close apps regardless of whether deferral is allowed\n- Added Patch parameter to Execute-MSI to allow an MSP file to be specified on the command line with an MSI installation\n- Added ability to Get-InstalledApplication to detect whether a 64-bit or 32-bit application\n- Added CreateNoWindow parameter to Execute-Process\n- Changed Deploy-Application.exe to new executable built in VB.NET\n- Changed detection of Admin rights by looking for Admin SID on the current processes access token, previous method checked for membership in the BuiltInAdministrator group\n- Changed Restart Prompt default selected button to Restart Later\n- Changed $envOSArchitecture variable so that it reports consistent value regardless of OS language\n- Improved detection of change.exe failures for TerminalServerInstallMode\n- Improved detection of logged in users, including users connected through RDP\n- Improved error trapping and logging of messages throughout script. Modified messages for clarity and consistency.\n- Improved parameter validation on all functions to simplify function logic and give standard error messages when function parameters not specified properly, also helps make clear which parameters are mandatory and which are not\n- Improved Set-PinnedApplication to detect when one of the chosen actions is not available on an operating system (such as pinning items to Start Menu on Windows 8)\n- Improved session 0 detection\n- Improved Execute-MSI and Execute-Process to sync parameter names for -Path and -Parameters and add alias for backwards compatibility\n- Improved method of detecting OS architecture so that detection works on some non-English operating systems\n- Improved Block-AppExecution to not flash CMD window right before displaying application block message\n- Show-InstallationWelcome, Show-InstallationPrompt: Fixed clipping of text when non-default DPI settings used\n- Fixed creation of URL shortcuts in New-Shortcut\n- Fixed detection of when script is running from a task sequence\n- Fixed issue in Get-InstalledApplication where an \"Invalid Cast\" error was thrown if registry contains a value with invalid data\n- Fixed issue in New-Shortcut where an error would be thrown if no icon was specified\n- Fixed issue in Test-Battery where the incorrect information would be returned if the battery was failing\n- Fixed issue in Send-Keys where there was an improper script exit upon failure\n- Fixed issue with Show-BalloonTip where icon was not disposed before exit\n- Fixed issue where Block-Execution would display an error creating the scheduled task if the Application Name was too long (command was longer than 261 characters)\n- Fixed issue where Block-Execution was not showing a message window when user tried to open a blocked app\n- Fixed issue where Block-Execution was creating a scheduled task to clean up blocked apps which would not execute\n- Fixed issue where AppDeployToolkitHelp.ps1 threw an error when executed\n- Fixed CloseAppsCountdown and PersistPrompt in Show-InstallationWelcome (bug introduced in v3.2)\n- Fixed issue in Show-InstallationPrompt and Show-InstallationWelcome where timeout object was not disposed and would cause timeout of subsequent UI components\n- Fixed issue with enumerating hashtable boolean parameters into string format\n- Fixed centering of Show-InstallationProgress window where DPI scale is not 100%\n- Fixed centering of toolkit banner in UI elements where the full length banner is not used\n- Fixed issue where MinimizeAll() and UndoMinimizeAll() method calls were inserting a $null into the pipeline\n- Fixed issue in Execute-Process to asynchronously capture process Standard Output\n- Updated Deploy-Application template to be consistent with the rest of the toolkit. Scripts from previous versions are fully backwards compatible.\n- Updated German translations\n- Updated Norwegian translations\n- Updated documentation\n\n**Version 3.2.0 [08/22/2014]**\n- Added further optimization and best practice enhancements to Execute-Process to improve parameter validation, object and exception handling.\n- Added a check for in-progress MSI installations preventing an MSI from installing and waits up to 10 minutes - this reduces instances of MSI error code 1618 (Test-MsiExecMutex)\n- Added Get-MsiExitCodeMessage - used by Execute-MSI (also available to Execute-Process) to get MSI exit code description if not handled by default.\n- Get-InstalledApplication and Remove-MSIApplication now support exact application name matching\n- Added error message to clarify when the toolkit fails to dot source and functions are not available\n- Improved exception handling in Write-Log\n- The install title format on asynchronous UI elements will now match the synchronous UI elements\n- Asynchronous toolkit invocations now write to the same log file as synchronous\n- Install-MSUpdates now handles redistributables such as the VC++ runtime redistributables\n- Added additional uninstallation sections to Deploy-Application.ps1 template to mirror installation sections\n- Added Dutch translations\n- (Thanks to mmashwani for his excellent contributions to this release)\n\n**Version 3.1.5 [08/01/2014]**\n- Added Send-Keys function to send a sequence of keys to an application window (Thanks to mmashwani)\n- Added 3 optimization/stability improvements to Execute-Process following MS best practice (Thanks to mmashwani)\n- Fixed issue where Execute-MSI did not use value from XML file for uninstall but instead ran all uninstalls silently by default\n- Fixed error on 1641 exit code (should be a success like 3010)\n- Fixed issue with error handling in Invoke-SCCMTask\n- Fixed issue with deferral dates where the letter Z is in the month (non-English languages)\n- Fixed issue where custom process descriptions failed to display in Show-InstallationWelcome if an exact process name was specified\n- Updated French translations\n\n**Version 3.1.4 [06/10/2014]**\n- Added New-Folder and Remove-Folder functions (Thanks to SueH)\n- Added NoWait parameter to Execute-Process\n- Added the ability for Deploy-Application.exe to point to a different .ps1 file by specifying it on the command-line\n- Added checks to Deploy-Application.exe to verify the AppDeployToolkit folder exists\n- Added PSAppDeployToolkit icon to Deploy-Application.exe\n- Fixed issue where hang could occur if file version was null when using Get-FileVersion\n- Improved exception handling and logging for a number of functions\n\n**Version 3.1.3 [05/22/2014]**\n- Added CompressLogs option to the config file. Each Install / Uninstall creates a timestamped zip file with all MSI and PSAppDeployToolkit logs contained within\n- Added variable expansion to all paths in the configuration file\n- Added documentation for each of the Toolkit internal variables that can be used\n- Changed Install-MSUpdates to continue if any errors are encountered when installing updates\n- Implement /Force parameter on Update-GroupPolicy (ensure that any logoff message is ignored)\n- Fixed issue where the AppClose Countdown timer would reset if the user attempted to close the UI\n- Fixed error handling in Set-PinnedApplication if the executable existed but the shortcut wasn't actually pinned\n\n**Version 3.1.2 [04/30/2014]**\n- Added Get-IniValue / Set-IniValue functions. Replaces Get-IniContent / Set-IniContent which were a bit unwieldy. The new functions are much easier to use.\n- Added -Value parameter to Get-RegistryKey so that a specific registry value can be retrieved instead of the entire Key as an object\n- Fixed Test-Battery to work with machines that can have multiple batteries\n- Fixed issue where BlockExecution would fail if a Custom Temp Path was specified in the config file\n- Updated examples with latest templates and Office 2013\n- Updated French translations\n- Updated Japanese translations\n\n**Version 3.1.1 [03/27/2014]**\n- Added -NoCountdown parameter to Show-InstallationRestartPrompt to provide an option for just displaying the restart now or restart later buttons. The UI will restore/reposition itself persistently based on the interval value specified in the config file.\n- Fixed issue whereby the restart prompt could be closed from the task bar\n- Added Recurse parameter to Copy-File function\n- Fixed exact process match on Show-InstallationWelcome was broken in a recent release\n- Fixed MinimizeWindows parameter which was broken in a recent release\n\n**Version 3.1.0 [02/25/2014]**\n- Re-coded BlockExecution to be more stable and prevent issues unblocking execution\n- Added support for installing applications on Remote Desktop Session Host/Citrix servers\n- Added handling of UI assembly load errors affecting PS 2.0 and .NET 4.0 and greater. Errors are ignored only if deploy mode is set to non-interactive\n- Fixed ContinueOnError parameter data type which was set as a switch but should have been boolean\n- Added default progress message for Uninstallation deployment mode\n- Fixed issue with detection of Session 0 on XP which resulted in no UI being displayed\n- Fixed issue where Working Directory wouldn't be set correctly if using a subfolder in $dirFiles\n\n**Version 3.0.12 [01/17/2014]**\n- Fixed error handling of Pin To Start in Win 8 (not programmatically supported in Win 8.1)\n- Fixed issue where user generated thumbs.db file in AppDeployToolkit folder could cause BlockExecution to fail\n- Fixed issue where uninstalls would fail if there was a backslash in the MSI DisplayName\n- Fixed issue where Execute-Process could fail but return an exit code of 0 indicating success\n- Fixed issue where DeferDays or in some scenarios DeferDeadline values would be erroneously converted to a different timezone.\n- Fixed issue where Remove-MSIApplications and Get-InstalledApplication wouldn't find a match if the application name contained square brackets\n\n**Version 3.0.11 [01/07/2014]**\n- Changed persistent prompt interval to default to 60 seconds\n- Fixed issue with false Session 0 detected on some XP machines\n- Fixed minimum configuration version checking\n- Fixed Set-RegistryValue not accepting arrays\n\n**Version 3.0.10 [12/05/2013]**\n- Improved process matching in CloseApps, Remove-MSIApplications & Get-InstalledApplication (for support of apps with special characters, like NotePad++)\n- Revert change that prevented AllowDefer and CloseAppsCountdown from working together\n\n**Version 3.0.9 [11/29/2013]**\n- Note- We recently attempted to add a killer new feature and release 3.1.0. We thought we had nailed it but ended up hitting problems once we went into production environments.\n  - Worse still, we ended up causing a bunch of problems in 3.0.8 trying to reverse out all of these changes.\n  - We've prided ourselves on getting to be a really stable toolkit that works well in an enterprise environment.\n  - So we're very sorry for the shoddiness of 3.0.8 and have taken a number of steps (a QA process and test scripts) to ensure we don't have these issues going forward.\n- Added handling of X86 environment variables so they are never empty\n- Added prevention of AllowDefer and CloseAppsCountdown at the same time\n- Added x86 support to Register-DLL and Unregister-DLL (if DLL is dropped in SysWOW64)\n- Fixed Register-DLL and Unregister-DLL when using paths with spaces\n- Fixed sporadic log file corruption that were introduced in v3.0.8\n- Fixed CloseAppsCountdown that got broken in v3.0.8\n- Fixed DeployMode handling that got broken in v3.0.8\n\n**Version 3.0.8 [11/26/2013]**\n- Show-InstallationWelcome now supports exact process matching by specifying .exe after process name.\n- Added Swedish translation & improved German translation.\n- Changed Write-Log function to use StreamWriter, which is faster\n- Modified application name on block app execution prompt (cosmetic).\n- Fixed an issue where displaying BlockExecution message with interfere with the main application installation\n- Fixed parameter encapsulation in asynchronous prompts and scheduled task creation.\n- Fixed extension script not dot-sourcing from UNC path.\n- Fixed Toolkit logpath not reading config file value.\n- Fixed UI timeout resetting on Show-InstallationWelcome prompt when continue button is clicked\n- Fixed UI timeout not decrementing deferrals remaining.\n\n**Version 3.0.7 [10/24/2013]**\n- Fixed issue where Session 0 was not detected correctly, resulting in issues when attempting to display a UI when none was allowed\n- Fixed Installation Prompt and Installation Restart Prompt appearing when deploy mode was non-interactive or silent\n- Fixed issue where defer prompt is displayed after force closing multiple applications\n- Fixed issue executing blocked app execution dialog from UNC path (executed instead from local temporary directory)\n- Added sanitization of all application details to prevent invalid characters in log file name creation (which would break the script)\n- Fixed Test-Battery function returning inverse value (was True when Power was connected)\n- Fixed error failing to locate schtasks.exe\n- Fixed \"Restart Now\" button text not using text from config file\n- Corrected the window properties of the countdown-no-hide phase of restart prompt to be topmost.\n\n**Version 3.0.6 [10/10/2013]**\n- Added PersistPrompt parameter to Show-InstallationWelcome and Show-InstallationPrompt. Prompt window is persistently returned to center screen after interval specified in config file (default 10 seconds). For Show-InstallationWelcome, this only takes effect if deferral is not available to user. The user will have no option but to respond to the prompt - resistance is futile!\n- Added example advanced Office 2010 deployment script\n- Asynchronous actions now write to the same log file as synchronous actions\n- Changed Defer Exit Code default to 5000. In CM07, deployments with deferrals should be set on a recurring schedule (ie, every 4 hours, not just As Soon As Possible). In CM12, the Application Model evaluates once a day by default (can be changed in Client Settings)\n- Fixed Get-ScheduledTask not running on non-English system\n- Fixed error deleting deferral history in registry on successful installation.\n- Fixed non default Defer Exit Code from displaying error - should display a warning\n- Updated documentation with information on how to build and deploy Adobe Acrobat using SCCM 2007 / 2012 packages, and SCCM 2012 application model\n- Updated documentation with information on how to use advanced Office 2010 deployment script\n- Updated documentation with important information on how deferrals work with SCCM 2007 and differences with SCCM 2012\n\n**Version 3.0.5 [09/27/2013]**\n- Fixed issue with Show-InstallationPrompt not running asynchronously with the NoWait parameter.\n- Fixed issue with Show-InstallationRestartPrompt closing with the parent process.\n- Fixed issue matching application names with brackets in Remove-MSIApplications.\n- Fixed exception after clicking \"Close Programs\" button on Show-InstallationWelcomePrompt (only known to affect v3.0.4).\n- Fixed issue with one deferral more showing than is remaining (cosmetic only)\n- Deferral history is now reset on successful installation\n- Added ExitOnTimeout parameter to Show-InstallationPrompt (default is true)\n- Added MinimizeWindows parameter to Show-InstallationPrompt (default is false)\n- Added MinimizeWindows parameter to Show-InstallationWelcome (default is true)\n- Added extra space for the <DeferPrompt_WelcomeMessage> message\n- Added additional XML configuration items:\n  - Specify separate toolkit and msi log directories\n  - Specify whether administrator rights are required\n  - Minimum supported version check for the XMl config file\n  - Configure deferral exit code\n  - Configure temporary path for caching toolkit files\n  - Configure registry path for storing deferral information\n\n**Version 3.0.4 [09/13/2013]**\n- Added parameter to Show-InstallationWelcome called \"AllowDeferCloseApps\" which only provides a deferral option if there are running applications that need to be closed.\n- Added ability to configure the timeout period for Show-InstallationPrompt\n- Added option to position progress window in bottom right of screen (above task bar) and specify whether it is topmost.\n- Added Danish translations\n- Added Italian translations\n- Added Japanese translations\n- Changes to French translations\n- Fixed issue where Test-MSUpdates function could fail with an exception calling QueryHistory\n- Fixed issue where Install-MSUpdates function could fail with an \"argument is null or empty\" exception\n- Removed default ButtonRightText \"OK\" value on Show-InstallationPrompt to allow prompts with only the middle button.\n- The exit code used for UI timeouts or deferrals can now be configured in XML (default is 1618).\n\n**Version 3.0.3 [09/05/2013]**\n- Fixed issue where spaces in the file path would cause block execution prompt not to work\n- Fixed issue where non-English UIs which were not already localized would fail to fall back on English as a default\n- Fixed issue with uninstalling applications with non-ascii characters in the name or version\n\n**Version 3.0.2 [08/29/2013]**\n\n- Added CheckDiskSpace and RequiredDiskSpace parameters to Show-InstallationWelcome\n  - If CheckDiskSpace parameter is used, disk space will be evaluated before showing the Welcome screen. If disk space requirements are not met, an error message will be displayed and a Fast Retry (1618) exit code generated. The disk space requirements are calculated automatically based on the size of the source files or by specifying the required space in MB using the RequiredDiskSpace parameter.\n- Added Get-FreeDiskSpace function (returns value in MB)\n- Show-InstallationPrompt enhancements\n  - MessageAlignment - align message text on the prompt\n  - Icon - display a system icon on the prompt\n  - NoWait - display the prompt asynchronously and continue the script without waiting for user response\n  - Cosmetic improvements\n- Added parameter validation to Invoke-SCCMTask\n- Cosmetic improvements to Show-InstallationWelcome & Show-InstallationProgress\n- Fixed issue where user would not be granted their last deferral.\n\n**Version 3.0.1 [08/28/2013]**\n- Fixed issue where using NonInteractive DeployMode would cause a bluescreen (!!!)\n- Fixed issue where Remove-MSIApplications would only remove the first application if multiple matches were made\n- Fixed issue where automatic timeout of Welcome screen was not triggered\n- Fixed issue where automatic timeout of installation prompt caused a .NET exception\n- Fixed help system to work with Standard User rights\n- Fixed text cutoff issue with non-English languages\n- Minor fixes to the help information and default template\n- Updated French translation\n\n**Version 3.0.0 [08/23/2013]**\n- Each UI element now has a customizable banner\n- Show-InstallationWelcome function\n  - Replaces Stop-RunningApplications (deprecated) and presents a unified welcome screen\n  - Deferral system. Ability to defer installation x number of times / days / until deadline date\n  - Ability to force closing applications after a countdown period\n- Show-InstallationPrompt function\n  - Replaces Show-DialogBox (deprecated)\n  - Standardized UI with the rest of the toolkit\n  - Customizable text and 3 buttons\n- Show-InstallationRestartPrompt function\n  - Displays a restart prompt with a countdown to a forced restart, independent of SCCM restart mechanism\n- Invoke-SCCMTask function\n  - Replaces Update-SCCMInventory and Update-SCCMDeployments (deprecated)\n  - No longer reliant on COM object which could cause issues on x64 machines\n- Get-UniversalDate function\n- Write-Log now works with the PowerShell Pipeline and -PassThru\n- Set-RegistryKey now accepts arrays\n- Improved error handling: ContinueOnError switch allows to to control the error action for functions that fail. ContinueOnErrorGlobalPreference allows you to debug the script to detect errors in functions.\n- Fixed issue with BlockExecution failing under PowerShell v2\n- Fixed issue with Show-InstallationProgress failing on .NET Framework versions prior to 4.5\n- Fixed issue with command-line parameters not being passed through Deploy-Application.exe on x86 operating systems\n- Test-MSUpdates KB regex matching is now case insensitive\n- Parameters passed to scripts are now logged.\n\n- Backwards Compatibility Considerations:\n  - The following functions have been deprecated and are no longer supported:\n  - Stop-RunningApplications\n  - Update-SCCMInventory\n  - Update-SCCMDeployments\n\nVersion 2.0.1 [08/15/2013]**\n- New Show-DialogBox parameters: TopMost and DefaultButton. Specify whether dialog box is topmost (new default) and specify default selected button.\n- Fixed issue with long file names when removing certain types of software using Remove-MSIApplications.\n- Added ability to turn automatic balloon notifications on or off in the XML config file.\n- Attempted to fix issue with stale balloon notifications.\n- Attempted to fix issue with installation progress not updating or hanging.\n\nVersion 2.0.0 [08/07/2013]**\n- Initial Public Release.\n"
        },
        {
          "name": "COPYING.Lesser",
          "type": "blob",
          "size": 7.47265625,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5078125,
          "content": "# ![AppDeployToolkitLogo](https://github.com/user-attachments/assets/7766bcb3-fa87-496e-9b19-7a8e194dcd97)\n\n## Enterprise App Deployment, Simplified.\n\nPSAppDeployToolkit is a versatile solution that streamlines and standardizes the process of software deployment, making it easier than ever to manage your IT environment. It has a comprehensive set of features, such as dynamic logging, user interaction capabilities, and customizable functionality.\n\n### Standardize and enhance every software deployment\n\nPSAppDeployToolkit allows you to encapsulate a typical Windows Installer MSI or Setup executable to provide it with enhanced capabilities.\n\n- Validate prerequisites such as dependencies on minimum software versions\n- Ensure that in-use applications are closed and prevent reopening during the deployment\n- Check with the user if now is a good time to start an install and allow them to defer\n- Uninstall existing applications and perform clean up operations\n- Capture any important settings that may be required for an upgrade or migration\n- Run the installation silently and capture logs in the event of an issue\n- Run post-installation configuration tasks to customize for your environment\n- Prompt the user to restart their computer if required, immediately, on a timer and with a deadline\n\n## Getting Started\n\n-> [System Requirements](https://psappdeploytoolkit.com/docs/getting-started/requirements)\n-> [Downloading](https://psappdeploytoolkit.com/docs/getting-started/download)\n\n### PSAppDeployToolkit Links\n\n-> [Homepage](https://psappdeploytoolkit.com)\n-> [Documentation](https://psappdeploytoolkit.com/docs)\n-> [Function & Variable References](https://psappdeploytoolkit.com/docs/reference)\n-> [Download Latest Release](https://github.com/PSAppDeployToolkit/PSAppDeployToolkit/releases)\n-> [News](https://psappdeploytoolkit.com/blog)\n\n### Community Links\n\n-> [Discourse Forum](https://discourse.psappdeploytoolkit.com/)\n-> [Discord Chat](https://discord.com/channels/618712310185197588/627204361545842688)\n-> [Reddit](https://reddit.com/r/psadt)\n\n## License\n\nThe PowerShell App Deployment Tool is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n"
        },
        {
          "name": "actions_bootstrap.ps1",
          "type": "blob",
          "size": 2.5048828125,
          "content": "# Bootstrap dependencies\n\n# https://docs.microsoft.com/powershell/module/packagemanagement/get-packageprovider\nGet-PackageProvider -Name Nuget -ForceBootstrap | Out-Null\n\n# https://docs.microsoft.com/powershell/module/powershellget/set-psrepository\nSet-PSRepository -Name PSGallery -InstallationPolicy Trusted\n\n# List of PowerShell Modules required for the build\n$modulesToInstall = New-Object System.Collections.Generic.List[object]\n# https://github.com/pester/Pester\n[void]$modulesToInstall.Add(([PSCustomObject]@{\n            ModuleName    = 'Pester'\n            ModuleVersion = '5.6.1'\n        }))\n# https://github.com/nightroman/Invoke-Build\n[void]$modulesToInstall.Add(([PSCustomObject]@{\n            ModuleName    = 'InvokeBuild'\n            ModuleVersion = '5.11.3'\n        }))\n# https://github.com/PowerShell/PSScriptAnalyzer\n[void]$modulesToInstall.Add(([PSCustomObject]@{\n            ModuleName    = 'PSScriptAnalyzer'\n            ModuleVersion = '1.22.0'\n        }))\n# https://github.com/PowerShell/platyPS\n# older version used due to: https://github.com/PowerShell/platyPS/issues/457\n[void]$modulesToInstall.Add(([PSCustomObject]@{\n            ModuleName    = 'platyPS'\n            ModuleVersion = '0.14.2'\n        }))\n# https://github.com/alt3/Docusaurus.Powershell\n# Needed for our website documentation\n[void]$modulesToInstall.Add(([PSCustomObject]@{\n            ModuleName    = 'Alt3.Docusaurus.Powershell'\n            ModuleVersion = '1.0.37'\n        }))\n\n\n\n'Installing PowerShell Modules'\nforeach ($module in $modulesToInstall) {\n    $installSplat = @{\n        Name               = $module.ModuleName\n        RequiredVersion    = $module.ModuleVersion\n        Repository         = 'PSGallery'\n        SkipPublisherCheck = $true\n        Force              = $true\n        Scope              = 'CurrentUser'\n        ErrorAction        = 'Stop'\n    }\n    try {\n        if ($module.ModuleName -eq 'Pester' -and ($IsWindows -or $PSVersionTable.PSVersion -le [version]'5.1')) {\n            # special case for Pester certificate mismatch with older Pester versions - https://github.com/pester/Pester/issues/2389\n            # this only affects windows builds\n            Install-Module @installSplat -SkipPublisherCheck\n        }\n        else {\n            Install-Module @installSplat\n        }\n        Import-Module -Name $module.ModuleName -ErrorAction Stop\n        '  - Successfully installed {0}' -f $module.ModuleName\n    }\n    catch {\n        $message = 'Failed to install {0}' -f $module.ModuleName\n        \"  - $message\"\n        throw\n    }\n}\n\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}