{
  "metadata": {
    "timestamp": 1736710930788,
    "page": 561,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Azure/azure-functions-host",
      "stars": 1957,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1162109375,
          "content": "ï»¿[*.cs]\n\n# SA1008: Opening parenthesis should not be preceded by a space.\ndotnet_diagnostic.SA1008.severity = silent\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.84375,
          "content": "*.doc  diff=astextplain\n*.DOC\tdiff=astextplain\n*.docx\tdiff=astextplain\n*.DOCX\tdiff=astextplain\n*.dot\tdiff=astextplain\n*.DOT\tdiff=astextplain\n*.pdf\tdiff=astextplain\n*.PDF\tdiff=astextplain\n*.rtf\tdiff=astextplain\n*.RTF\tdiff=astextplain\n\n*.jpg  \tbinary\n*.png \tbinary\n*.gif \tbinary\n\n*.cs text=auto diff=csharp \n*.vb text=auto\n*.c text=auto\n*.cpp text=auto\n*.cxx text=auto\n*.h text=auto\n*.hxx text=auto\n*.py text=auto\n*.rb text=auto\n*.java text=auto\n*.html text=auto\n*.htm text=auto\n*.css text=auto\n*.scss text=auto\n*.sass text=auto\n*.less text=auto\n*.js text=auto\n*.lisp text=auto\n*.clj text=auto\n*.sql text=auto\n*.php text=auto\n*.lua text=auto\n*.m text=auto\n*.asm text=auto\n*.erl text=auto\n*.fs text=auto\n*.fsx text=auto\n*.hs text=auto\n*.ps1 text=auto\n*.sh text=auto\n\n*.csproj text=auto\n*.vbproj text=auto\n*.fsproj text=auto\n*.dbproj text=auto\n*.sln text=auto eol=crlf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 8.1630859375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from `dotnet new gitignore`\n\n# dotenv files\n.env\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n[Oo]ut/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# Tye\n.tye/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.tlog\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\n*.vbp\n\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\n*.dsw\n*.dsp\n\n# Visual Studio 6 technical files\n*.ncb\n*.aps\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# MSBuild pre-process file\npp.xml\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# Visual Studio History (VSHistory) files\n.vshistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n# VS Code files for those working on multiple tools\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n*.code-workspace\n\n# Local History for Visual Studio Code\n.history/\n\n# Windows Installer files from build outputs\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# JetBrains Rider\n*.sln.iml\n.idea\n\n##\n## Visual studio for Mac\n##\n\n\n# globs\nMakefile.in\n*.userprefs\n*.usertasks\nconfig.make\nconfig.status\naclocal.m4\ninstall-sh\nautom4te.cache/\n*.tar.gz\ntarballs/\ntest-results/\n\n# Mac bundle stuff\n*.dmg\n*.app\n\n# content below from: https://github.com/github/gitignore/blob/master/Global/macOS.gitignore\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# content below from: https://github.com/github/gitignore/blob/master/Global/Windows.gitignore\n# Windows thumbnail cache files\nThumbs.db\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# Vim temporary swap files\n*.swp\n\n# Azure Functions files\nlocal.settings.json\n\n# Host repo specific files\n/buildoutput\n/.output\n/tools/Nuget.exe\n/tools/ExtensionsMetadataGenerator/packages\n/tools/ExtensionsMetadataGenerator/src/ExtensionsMetadataGenerator/runtimeassemblies.txt\n/tools/ExtensionsMetadataGenerator/test/ExtensionsMetadataGeneratorTests/runtimeAssemblies.txt\nBenchmarkDotNet.Artifacts/\n"
        },
        {
          "name": ".sscignore",
          "type": "blob",
          "size": 0.044921875,
          "content": "{ \"cfs\": [ \"CFS0001\", \"CFS0013\", \"CFS0031\" ] }"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.6484375,
          "content": "# See https://help.github.com/articles/about-codeowners/\n# for more info about CODEOWNERS file\n#\n# It uses the same pattern rule for gitignore file\n# https://git-scm.com/docs/gitignore#_pattern_format\n#\n\n* @azure/azure-functions-core\n\n# Adding codeowner for Python specific files such that GitHub automatically adds python folks as a reviewer.\neng/build/Workers.Python.props @vrdmr @gavin-aguiar @YunchuWang @pdthummar @hallvictoria\n\n# Deps.json validation file\ntest/WebJobs.Script.Tests/Microsoft.Azure.WebJobs.Script.WebHost.deps.json @fabiocav @brettsam @mathewc\n\nsrc/WebJobs.Script.WebHost/PreJIT/* @vrdmr @pragnagopa @eliaslopezgt @azure/azure-functions-core\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.634765625,
          "content": "## General\n\n - The host is currently going through a redesign for v2 which moves it onto .NET core and move languages out into their own separate repos. These guidelines are generally written for the work going on in `dev` which is v2. The `master` branch and a few others are still `v1` and have a different workflow.\n - The host has some dependencies on having some Azure resources provisioned, so before you get started, make sure you have reliable access to an Azure subscription. E2E tests require a lot of various services to be provisioned. If you're making large contributions which would affect E2E tests, it'll be expected that you can provision those services yourself.\n - Be nice :) Everyone is busy and sometimes it can take a bit to get responses on things. Just be patient and, if you do poke someone for help, please be courteous and respectful.\n\n## Questions & Help\n\nIf you have questions about Azure Functions, we encourage you to reach out to the community and Azure Functions dev team for help.\n\n - For all questions and technical help, [our Q&A forums](https://docs.microsoft.com/en-us/answers/questions/topics/single/25345.html) are an easy place to have a conversation with our engineering team.\n - For questions which fit the Stack Overflow format (\"*how* does this work?\"), we monitor the [azure-functions](http://stackoverflow.com/questions/tagged/azure-functions) tag.\n - You can also tweet/follow [@AzureFunctions](https://twitter.com/azurefunctions).\n \nWhile we do our best to help out in a timely basis, we don't have any promise around the above resources. If you need an SLA on support from us, it's recommended you invest in an [Azure Support plan](https://azure.microsoft.com/en-us/support/options/).\n\n## Issues & feature requests\n\nWe track functional issues in a variety of places for Azure Functions. If you have found an issue or have a feature request, please submit an issue to the below repositories.\n\n|Item|Description|Link|\n|----|-----|-----|\n|Documentation|Docs for Azure Functions features + getting started|[File an Issue](https://github.com/azure/azure-functions/issues)|\n|Runtime|Script Host, Triggers & Bindings, Language Support|[File an Issue](https://github.com/Azure/azure-webjobs-sdk-script/issues)|\n|Core Tools|Command line interface for local development|[File an Issue](https://github.com/Azure/azure-functions-cli/issues)|\n|Dev Tools|Visual Studio and VS Code|[File an Issue](https://github.com/Azure/azure-functions/issues)|\n|Portal|User Interface or Experience Issue|[File an Issue](https://github.com/ProjectKudu/AzureFunctionsPortal/issues)|\n|Templates|Code Issues with Creation Template|[File an Issue](https://github.com/Azure/azure-webjobs-sdk-templates/issues)|\n\nBefore filing an issue, please check that it doesn't already exist. If you're not sure if you should file an issue, you can open up a [Q&A forum question](https://docs.microsoft.com/en-us/answers/questions/topics/single/25345.html). We also have a [uservoice feedback site](https://feedback.azure.com/forums/355860-azure-functions) which we can track your feature requests through.\n\n## Pre-reqs for developing\n\n - OS\n    - Windows 10 (suggested)\n    - Mac OS X/Linux (not-recommended for now)\n       - While you can develop from a Mac/Linux machine, it can be a rough experience and not all unit tests pass today. We have improvements where we hope to make this easier.\n - Language runtimes\n    - Note: today you have to have Node.js and Java installed, but in the long run we hope move those tests out into their own repos\n    - [Java 8 ](http://www.oracle.com/technetwork/java/javase/downloads/index.html) (JDK and JRE required)\n    - [Node 8.4+](https://nodejs.org/en/)\n    - [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2)\n - Editor\n    - [Visual Studio 2019](https://visualstudio.microsoft.com/vs/) (recommended)\n    - [VS Code](https://code.visualstudio.com/) (works, but has some quirks running tests)\n - Misc tools (suggested)\n    - [git](https://git-scm.com/downloads) - source control\n    - [nvm (nvm-windows for windows)](https://github.com/coreybutler/nvm-windows) - Node Version Manager (for managing multiple versions of Node.js)\n    - Commander/ConEmu(Windows)/iTerm(mac) - console managers; makes dealing with lots of consoles more manageable\n    - [functions core tools](https://www.npmjs.com/package/azure-functions-core-tools) - helps for making samples/etc. `npm i -g azure-functions-core-tools@core`\n\n## Running locally (Visual Studio) (v2+)\n\nFirst thing you'll want to try is to run the Function host locally. \n1. Set the WebJobs.Script.WebHost to the startup project\n2. Change the debug configuration to \"WebJobs.Script.WebHost.Core\"\n3. Add `AzureWebJobsScriptRoot` setting pointing at your test project\n   - You can add this variable a few ways:\n        1. Add a Environment Variable via a global variable (have to restart VS afterwards)\n        2. Add a setting to appsettings.json (be careful not to check it in)\n        3. Add an environment variable via the Debug configuration for the project (be careful not to check it in)\n   - You can create a simple hello world function app via the function core tools CLI. In a sample directory just run:\n      ```\n      func init\n      func new -l javascript -t httptrigger -n hello\n      echo $PWD\n      ```\n      The output of $PWD is your current directory, use that full path\n4. Click debug - this should launch a new terminal and browser window. If you created a new http triggered function named \"hello\", you should be able to add \"api/hello\" to your base URL and see your Function's response and the `context.log` statement in the terminal.\n\nIf you want to test anything other than HTTP, it will require the `AzureWebJobsStorage` and `AzureWebJobsDashboard` settings get set to an Azure Storage Account connection string. You'll also need to add settings for any non-storage services you might want to connect to. You can do this via the same 3 methods described above.\n\n\n## Running tests (Visual Studio)\nThere are three test projects in the WebJobs.Script solution\n - WebJobs.Script.Tests\n - WebJobs.Script.Test.Integration\n\nThe only thing you need to set up for the tests is your Storage Account for the integration tests. You need to set the `AzureWebJobsStorage` and `AzureWebJobsDashboard` settings for WebJobs.Script.Tests.Integration project. The appsettings.json method is pretty clean, but you need to create it. Be sure \"CopyToOutput\" is true and rebuild afterwards for the appsettings.json file. To run end to end (E2E) tests, see the set up requirements for Samples under [Home](https://github.com/Azure/azure-webjobs-sdk-script/wiki).\n\nThen open up for your test explorer (CTRL+E, T) and click Run All. If any fail, you might have set something up wrong locally.\n\n## Change flow\n\nThe general flow for making a change to the script host is:\n1. ð´ Fork the repo (add the fork via `git remote add me <clone url here>`\n2. ð³ Create a branch for your change (generally use dev) (`git checkout -b my-change`)\n3. ð  Make your change\n4. âï¸ Test your changes\n5. â¬ï¸ Push your changes to your fork (`git push me my-change`)\n6. ð Open a PR to the dev branch\n7. ð¢ Address feedback and make sure tests pass (yes even if it's an \"unrelated\" test failure)\n8. ð¦ [Squash](https://git-scm.com/docs/git-rebase) your changes into a meaningful commits (usually 1 commit) (`git rebase -i HEAD~N` where `N` is commits you want to squash)\n9. :shipit: Rebase and merge (This will be done for you if you don't have contributor access)\n10. âï¸ Delete your branch (optional)\n\n## Getting help\n\n - Leave comments on your PR and @ people for attention\n - [@AzureFunctions](https://twitter.com/AzureFunctions) on twitter\n - (MSFT Internal only) Functions Dev teams channel & email\n"
        },
        {
          "name": "CodeQL.yml",
          "type": "blob",
          "size": 0.0810546875,
          "content": "path_classifiers:\n  library:\n    - \"out/bin/**/workers\"\n    - \"out/pub/**/workers\"\n"
        },
        {
          "name": "CustomDictionary.xml",
          "type": "blob",
          "size": 3.1611328125,
          "content": "<!-- See http://msdn.microsoft.com/en-us/library/bb514188.aspx for details -->\n<Dictionary>\n  <Words>\n    <Unrecognized>\n    </Unrecognized>\n    <Recognized>\n      <Word>e</Word>  <!-- to get eTag variants working -->\n      <Word>autofac</Word>\n      <Word>api</Word>\n      <Word>apis</Word>\n      <Word>auth</Word>\n      <Word>bson</Word>\n      <Word>cors</Word>\n      <Word>ctor</Word>\n      <Word>deserializes</Word>\n      <Word>dto</Word>\n      <Word>edm</Word>\n      <Word>guid</Word>\n      <Word>hashset</Word>\n      <Word>infos</Word>\n      <Word>jwt</Word>\n      <Word>loc</Word>\n      <Word>mpns</Word>\n      <Word>mvc</Word>\n      <Word>nullables</Word>\n      <Word>nuget</Word>\n      <Word>queryables</Word>\n      <Word>realtime</Word>\n      <Word>rel</Word>\n      <Word>rev</Word>\n      <Word>rfc</Word>\n      <Word>src</Word>\n      <Word>CancellationToken</Word>\n      <Word>CloudBlobStream</Word>\n      <Word>CloudStorageAccount</Word>\n      <Word>ServiceBus</Word>\n      <Word>ServiceBusTrigger</Word>\n      <Word>BrokeredMessage</Word>\n      <Word>ICollector</Word>\n      <Word>IAsyncCollector</Word>\n      <Word>WebJobs</Word>\n      <Word>TextWriter</Word>\n      <Word>INameResolver</Word>\n      <Word>IJobHostContextFactory</Word>\n      <Word>ReflectedType</Word>\n      <Word>IDictionary</Word>\n      <Word>IQueryable</Word>\n      <Word>ITableEntity</Word>\n      <Word>CloudQueue</Word>\n      <Word>IStorageQueueMessage</Word>\n      <Word>IAttributeBindingSource</Word>\n      <Word>ServiceProvider</Word>\n      <Word>RequestedObjectKey</Word>\n      <Word>FileAccess</Word>\n      <Word>ReadWrite</Word>\n      <Word>IStorageTable</Word>\n      <Word>TableEntityContext</Word>\n      <Word>TableName</Word>\n      <Word>PropertyType</Word>\n      <Word>TextReader</Word>\n      <Word>Aborter</Word>\n      <Word>Unparsable</Word>\n      <Word>Unparsable</Word>\n      <Word>Ninject</Word>\n      <Word>PartitionKey</Word>\n      <Word>RowKey</Word>\n      <Word>BlobAttribute</Word>\n      <Word>ConnectionString</Word>\n      <Word>MessagingProvider</Word>\n      <Word>CloudBlobContainer</Word>\n      <Word>SingletonAttribute</Word>\n      <Word>Prefetch</Word>\n      <Word>ScopeId</Word>\n      <Word>FunctionMetadata</Word>\n      <Word>Debounce</Word>\n      <Word>ScriptHost</Word>\n      <Word>EventHub</Word>\n      <Word>Non</Word>\n      <Word>Decryptable</Word>\n\t</Recognized>\n    <Deprecated/>\n    <Compound>\n      <Term CompoundAlternate=\"CancellationToken\">cancellationToken</Term>\n      <Term CompoundAlternate=\"TableName\">tableName</Term>\n      <Term CompoundAlternate=\"ETag\">etag</Term>\n      <Term CompoundAlternate=\"ETag\">eTag</Term>\n      <Term CompoundAlternate=\"Typescript\">TypeScript</Term>\n    </Compound>\n    <DiscreteExceptions>\n\t\t<Term>WebJobs</Term>\n\t\t<Term>ServiceBus</Term>\n\t\t<Term>PartitionKey</Term>\n\t\t<Term>RowKey</Term>\n\t\t<Term>BlobAttribute</Term>\n\t\t<Term>ConnectionString</Term>\n\t\t<Term>MessagingProvider</Term>\n\t\t<Term>SingletonAttribute</Term>\n\t\t<Term>ScopeId</Term>\n    <Term>FunctionMetadata</Term>\n    <Term>ScriptHost</Term>\n    <Term>EventHub</Term>\n    </DiscreteExceptions>\n  </Words>\n  <Acronyms>\n    <CasingExceptions>\n\t<Acronym>ETag</Acronym>\n    </CasingExceptions>\n  </Acronyms>\n</Dictionary>\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.6279296875,
          "content": "<Project>\n\n  <!-- artifacts -->\n  <PropertyGroup>\n    <ArtifactsPath>$(MSBuildThisFileDirectory)out</ArtifactsPath>\n    <ArtifactsPublishOutputName>pub</ArtifactsPublishOutputName>\n    <ArtifactsPackageOutputName>pkg</ArtifactsPackageOutputName>\n    <IsPackable>false</IsPackable> <!-- default false -->\n  </PropertyGroup>\n\n  <!-- paths -->\n  <PropertyGroup>\n    <RepoRoot>$(MSBuildThisFileDirectory)</RepoRoot>\n    <EngRoot>$(RepoRoot)eng/</EngRoot>\n    <EngBuildRoot>$(EngRoot)build/</EngBuildRoot>\n    <EngResourceRoot>$(EngRoot)res/</EngResourceRoot>\n  </PropertyGroup>\n\n  <Import Project=\"$(EngBuildRoot)Engineering.props\" />\n\n</Project>\n"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 0.0791015625,
          "content": "<Project>\n\n  <Import Project=\"$(EngBuildRoot)Engineering.targets\" />\n\n</Project>\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.09375,
          "content": "FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS installer-env\n\nENV PublishWithAspNetCoreTargetManifest false\n\nCOPY . /workingdir\n\nRUN cd workingdir && \\\n    dotnet publish src/WebJobs.Script.WebHost/WebJobs.Script.WebHost.csproj --output /azure-functions-host\n\n# Runtime image\nFROM mcr.microsoft.com/azure-functions/python:3.0\n\nRUN apt-get update && \\\n    apt-get install -y gnupg && \\\n    curl -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n    apt-get update && \\\n    apt-get install -y nodejs dotnet-sdk-3.1\n\n# Install the dependencies for Visual Studio Remote Debugger\nRUN apt-get update && apt-get install -y --no-install-recommends unzip procps\n\n# Install Visual Studio Remote Debugger\nRUN curl -sSL https://aka.ms/getvsdbgsh | bash /dev/stdin -v latest -l ~/vsdbg\n\nCOPY --from=installer-env [\"/azure-functions-host\", \"/azure-functions-host\"]\n\nENV AzureWebJobsScriptRoot=/home/site/wwwroot \\\n    HOME=/home \\\n    ASPNETCORE_URLS=http://+:80 \\\n    AZURE_FUNCTIONS_ENVIRONMENT=Development \\\n    FUNCTIONS_WORKER_RUNTIME=\n\nEXPOSE 80\n\nCMD dotnet /azure-functions-host/Microsoft.Azure.WebJobs.Script.WebHost.dll\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.064453125,
          "content": "MIT License\n\nCopyright (c) .NET Foundation.  All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LICENSE_APACHE.txt",
          "type": "blob",
          "size": 11.0947265625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (c) .NET Foundation and Contributors\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NuGet.config",
          "type": "blob",
          "size": 1.1240234375,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\n    <add key=\"Microsoft.Azure.Functions.PowerShellWorker\" value=\"https://azfunc.pkgs.visualstudio.com/e6a70c92-4128-439f-8012-382fe78d6396/_packaging/Microsoft.Azure.Functions.PowerShellWorker/nuget/v3/index.json\" />\n    <add key=\"AzureFunctions@internalrelease\" value=\"https://azfunc.pkgs.visualstudio.com/e6a70c92-4128-439f-8012-382fe78d6396/_packaging/AzureFunctions%40internalrelease/nuget/v3/index.json\" />\n    <add key=\"AzureFunctionsRelease\" value=\"https://azfunc.pkgs.visualstudio.com/e6a70c92-4128-439f-8012-382fe78d6396/_packaging/AzureFunctionsRelease/nuget/v3/index.json\" />\n    <add key=\"AzureFunctionsPreRelease\" value=\"https://azfunc.pkgs.visualstudio.com/e6a70c92-4128-439f-8012-382fe78d6396/_packaging/AzureFunctionsPreRelease/nuget/v3/index.json\" />\n    <add key=\"AzureFunctionsTempStaging\" value=\"https://azfunc.pkgs.visualstudio.com/e6a70c92-4128-439f-8012-382fe78d6396/_packaging/AzureFunctionsTempStaging/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.646484375,
          "content": "![Azure Functions Logo](https://raw.githubusercontent.com/Azure/azure-functions-cli/master/src/Azure.Functions.Cli/npm/assets/azure-functions-logo-color-raster.png)\n\n|Branch|Status|\n|---|---|\n|dev|[![Build Status](https://dev.azure.com/azfunc/public/_apis/build/status%2Fazure%2Fazure-functions-host%2Fhost.public?repoName=Azure%2Fazure-functions-host&branchName=dev)](https://dev.azure.com/azfunc/public/_build/latest?definitionId=377&repoName=Azure%2Fazure-functions-host&branchName=dev)|\n|in-proc|[![Build Status](https://dev.azure.com/azfunc/public/_apis/build/status%2Fazure%2Fazure-functions-host%2Fhost.public?repoName=Azure%2Fazure-functions-host&branchName=in-proc)](https://dev.azure.com/azfunc/public/_build/latest?definitionId=377&repoName=Azure%2Fazure-functions-host&branchName=in-proc)|\n|release/4.x|[![Build Status](https://dev.azure.com/azfunc/public/_apis/build/status%2Fazure%2Fazure-functions-host%2Fhost.public?repoName=Azure%2Fazure-functions-host&branchName=release%2F4.x)](https://dev.azure.com/azfunc/public/_build/latest?definitionId=377&repoName=Azure%2Fazure-functions-host&branchName=release%2F4.x)|\n|release/in-proc|[![Build Status](https://dev.azure.com/azfunc/public/_apis/build/status%2Fazure%2Fazure-functions-host%2Fhost.public?repoName=Azure%2Fazure-functions-host&branchName=release%2Fin-proc)](https://dev.azure.com/azfunc/public/_build/latest?definitionId=377&repoName=Azure%2Fazure-functions-host&branchName=release%2Fin-proc)|\n\nAzure Functions Host\n===\n\nThis repo contains code for the runtime host used by the [Azure Functions](https://docs.microsoft.com/en-us/azure/azure-functions/) service. The Azure Functions runtime builds upon the [Azure WebJobs SDK](https://github.com/Azure/azure-webjobs-sdk) to provide a hosting platform for functions written in many different [languages](https://docs.microsoft.com/en-us/azure/azure-functions/supported-languages) and supporting a wide variety of [triggers and bindings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings?tabs=csharp#supported-bindings).\n\n### License\n\nThis project is under the benevolent umbrella of the [.NET Foundation](http://www.dotnetfoundation.org/) and is licensed under [the MIT License](LICENSE.txt)\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n### Questions\n\nSee the [getting help](https://github.com/Azure/azure-webjobs-sdk-script/wiki#getting-help) section in the wiki.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6923828125,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.7 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "WebJobs.Script.sln",
          "type": "blob",
          "size": 12.4892578125,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.31717.71\nMinimumVisualStudioVersion = 15.0.0.0\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{16351B76-87CA-4A8C-80A1-3DD83A0C4AA6}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"schemas\", \"schemas\", \"{67174433-2838-460C-9880-419476D02994}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"json\", \"json\", \"{3A4AF861-66F2-4C34-BB9E-69F0D392BB1A}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tschemas\\json\\extensions.json = schemas\\json\\extensions.json\n\t\tschemas\\json\\function.json = schemas\\json\\function.json\n\t\tschemas\\json\\README.md = schemas\\json\\README.md\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WebJobs.Script\", \"src\\WebJobs.Script\\WebJobs.Script.csproj\", \"{BCFBE330-871A-44BE-9016-83845231230F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WebJobs.Script.WebHost\", \"src\\WebJobs.Script.WebHost\\WebJobs.Script.WebHost.csproj\", \"{D5162088-C119-4A06-896D-E65983CAEDFD}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"test\", \"test\", \"{AFB0F5F7-A612-4F4A-94DD-8B69CABF7970}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tsrc\\WebJobs.Script.WebHost\\appsettings.Development.json = src\\WebJobs.Script.WebHost\\appsettings.Development.json\n\t\tsrc\\WebJobs.Script.WebHost\\appsettings.json = src\\WebJobs.Script.WebHost\\appsettings.json\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WebJobs.Script.Tests\", \"test\\WebJobs.Script.Tests\\WebJobs.Script.Tests.csproj\", \"{3BA93614-3A4A-49B0-BFBC-7831E2C02BB7}\"\nEndProject\nProject(\"{D954291E-2A0B-460D-934E-DC6B0785DB48}\") = \"WebJobs.Script.Tests.Shared\", \"test\\WebJobs.Script.Tests.Shared\\WebJobs.Script.Tests.Shared.shproj\", \"{35C9CCB7-D8B6-4161-BB0D-BCFA7C6DCFFB}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WebJobs.Script.Tests.Integration\", \"test\\WebJobs.Script.Tests.Integration\\WebJobs.Script.Tests.Integration.csproj\", \"{EDDDAED1-0E37-4ED7-A595-63F686DEE90A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WebJobs.Script.Grpc\", \"src\\WebJobs.Script.Grpc\\WebJobs.Script.Grpc.csproj\", \"{38920568-003E-448F-963B-41B739D1E01C}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"TestFunctions\", \"test\\TestFunctions\\TestFunctions.csproj\", \"{5C308A72-5CF3-45E8-B64F-2C98F567054A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WebJobs.Script.Abstractions\", \"src\\WebJobs.Script.Abstractions\\WebJobs.Script.Abstractions.csproj\", \"{9A522D9D-2D86-4572-B7D1-ECBFBFAF312C}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{9111825C-9831-4672-8223-82F489853F19}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Samples\", \"sample\\Samples.csproj\", \"{F381CDD6-50BD-48BC-B292-230C52589A30}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"benchmarks\", \"benchmarks\", \"{D5F77934-E468-4EE7-82F8-3B8149591174}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tbenchmarks\\README.md = benchmarks\\README.md\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Microsoft.Azure.WebJobs.Script.Benchmarks\", \"benchmarks\\WebJobs.Script.Benchmarks\\Microsoft.Azure.WebJobs.Script.Benchmarks.csproj\", \"{766DE3D5-4FB1-4602-9BB5-3779EECC232D}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"CSharpPrecompiledTestProjects\", \"CSharpPrecompiledTestProjects\", \"{B3ACC1B2-81F4-4035-9B24-169D4C7CB076}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Dependency56\", \"test\\CSharpPrecompiledTestProjects\\Dependency56\\Dependency56.csproj\", \"{504B98C7-F27F-4C02-9881-33048D4283CF}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"NativeDependencyNoRuntimes\", \"test\\CSharpPrecompiledTestProjects\\NativeDependencyNoRuntimes\\NativeDependencyNoRuntimes.csproj\", \"{A094FBDA-B6A7-48DA-BF7C-39FA661C1A07}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"WebJobsStartupTests\", \"test\\CSharpPrecompiledTestProjects\\WebJobsStartupTests\\WebJobsStartupTests.csproj\", \"{9D7556C5-C828-4C19-8EC9-E10030777E48}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"AssemblyLoadContextRace\", \"test\\CSharpPrecompiledTestProjects\\AssemblyLoadContextRace\\AssemblyLoadContextRace.csproj\", \"{29167303-5857-4BD5-9DDA-9EEA8C26CACC}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Dependency55\", \"test\\CSharpPrecompiledTestProjects\\Dependency55\\Dependency55.csproj\", \"{A7A6A7C2-DD95-4425-916E-9AC629CD4DB8}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"ReferenceOlderRuntimeAssembly\", \"test\\CSharpPrecompiledTestProjects\\ReferenceOlderRuntimeAssembly\\ReferenceOlderRuntimeAssembly.csproj\", \"{C14B6921-A12B-4203-8E3A-34BA4E5ACC98}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"MultipleDependencyVersions\", \"test\\CSharpPrecompiledTestProjects\\MultipleDependencyVersions\\MultipleDependencyVersions.csproj\", \"{51E41947-888E-43BE-A1A9-6607AAED7B57}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{BCFBE330-871A-44BE-9016-83845231230F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BCFBE330-871A-44BE-9016-83845231230F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BCFBE330-871A-44BE-9016-83845231230F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BCFBE330-871A-44BE-9016-83845231230F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D5162088-C119-4A06-896D-E65983CAEDFD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D5162088-C119-4A06-896D-E65983CAEDFD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D5162088-C119-4A06-896D-E65983CAEDFD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D5162088-C119-4A06-896D-E65983CAEDFD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{3BA93614-3A4A-49B0-BFBC-7831E2C02BB7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{3BA93614-3A4A-49B0-BFBC-7831E2C02BB7}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{3BA93614-3A4A-49B0-BFBC-7831E2C02BB7}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{3BA93614-3A4A-49B0-BFBC-7831E2C02BB7}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{EDDDAED1-0E37-4ED7-A595-63F686DEE90A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{EDDDAED1-0E37-4ED7-A595-63F686DEE90A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{EDDDAED1-0E37-4ED7-A595-63F686DEE90A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EDDDAED1-0E37-4ED7-A595-63F686DEE90A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{38920568-003E-448F-963B-41B739D1E01C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{38920568-003E-448F-963B-41B739D1E01C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{38920568-003E-448F-963B-41B739D1E01C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{38920568-003E-448F-963B-41B739D1E01C}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5C308A72-5CF3-45E8-B64F-2C98F567054A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5C308A72-5CF3-45E8-B64F-2C98F567054A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5C308A72-5CF3-45E8-B64F-2C98F567054A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5C308A72-5CF3-45E8-B64F-2C98F567054A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9A522D9D-2D86-4572-B7D1-ECBFBFAF312C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9A522D9D-2D86-4572-B7D1-ECBFBFAF312C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9A522D9D-2D86-4572-B7D1-ECBFBFAF312C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9A522D9D-2D86-4572-B7D1-ECBFBFAF312C}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F381CDD6-50BD-48BC-B292-230C52589A30}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F381CDD6-50BD-48BC-B292-230C52589A30}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{766DE3D5-4FB1-4602-9BB5-3779EECC232D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{766DE3D5-4FB1-4602-9BB5-3779EECC232D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{766DE3D5-4FB1-4602-9BB5-3779EECC232D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{766DE3D5-4FB1-4602-9BB5-3779EECC232D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{504B98C7-F27F-4C02-9881-33048D4283CF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{504B98C7-F27F-4C02-9881-33048D4283CF}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{504B98C7-F27F-4C02-9881-33048D4283CF}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{504B98C7-F27F-4C02-9881-33048D4283CF}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A094FBDA-B6A7-48DA-BF7C-39FA661C1A07}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A094FBDA-B6A7-48DA-BF7C-39FA661C1A07}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A094FBDA-B6A7-48DA-BF7C-39FA661C1A07}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A094FBDA-B6A7-48DA-BF7C-39FA661C1A07}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9D7556C5-C828-4C19-8EC9-E10030777E48}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9D7556C5-C828-4C19-8EC9-E10030777E48}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9D7556C5-C828-4C19-8EC9-E10030777E48}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9D7556C5-C828-4C19-8EC9-E10030777E48}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{29167303-5857-4BD5-9DDA-9EEA8C26CACC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{29167303-5857-4BD5-9DDA-9EEA8C26CACC}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{29167303-5857-4BD5-9DDA-9EEA8C26CACC}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{29167303-5857-4BD5-9DDA-9EEA8C26CACC}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A7A6A7C2-DD95-4425-916E-9AC629CD4DB8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A7A6A7C2-DD95-4425-916E-9AC629CD4DB8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A7A6A7C2-DD95-4425-916E-9AC629CD4DB8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A7A6A7C2-DD95-4425-916E-9AC629CD4DB8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C14B6921-A12B-4203-8E3A-34BA4E5ACC98}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C14B6921-A12B-4203-8E3A-34BA4E5ACC98}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C14B6921-A12B-4203-8E3A-34BA4E5ACC98}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C14B6921-A12B-4203-8E3A-34BA4E5ACC98}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{51E41947-888E-43BE-A1A9-6607AAED7B57}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{51E41947-888E-43BE-A1A9-6607AAED7B57}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{51E41947-888E-43BE-A1A9-6607AAED7B57}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{51E41947-888E-43BE-A1A9-6607AAED7B57}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{3A4AF861-66F2-4C34-BB9E-69F0D392BB1A} = {67174433-2838-460C-9880-419476D02994}\n\t\t{BCFBE330-871A-44BE-9016-83845231230F} = {16351B76-87CA-4A8C-80A1-3DD83A0C4AA6}\n\t\t{D5162088-C119-4A06-896D-E65983CAEDFD} = {16351B76-87CA-4A8C-80A1-3DD83A0C4AA6}\n\t\t{3BA93614-3A4A-49B0-BFBC-7831E2C02BB7} = {AFB0F5F7-A612-4F4A-94DD-8B69CABF7970}\n\t\t{35C9CCB7-D8B6-4161-BB0D-BCFA7C6DCFFB} = {AFB0F5F7-A612-4F4A-94DD-8B69CABF7970}\n\t\t{EDDDAED1-0E37-4ED7-A595-63F686DEE90A} = {AFB0F5F7-A612-4F4A-94DD-8B69CABF7970}\n\t\t{38920568-003E-448F-963B-41B739D1E01C} = {16351B76-87CA-4A8C-80A1-3DD83A0C4AA6}\n\t\t{5C308A72-5CF3-45E8-B64F-2C98F567054A} = {AFB0F5F7-A612-4F4A-94DD-8B69CABF7970}\n\t\t{9A522D9D-2D86-4572-B7D1-ECBFBFAF312C} = {16351B76-87CA-4A8C-80A1-3DD83A0C4AA6}\n\t\t{766DE3D5-4FB1-4602-9BB5-3779EECC232D} = {D5F77934-E468-4EE7-82F8-3B8149591174}\n\t\t{B3ACC1B2-81F4-4035-9B24-169D4C7CB076} = {AFB0F5F7-A612-4F4A-94DD-8B69CABF7970}\n\t\t{504B98C7-F27F-4C02-9881-33048D4283CF} = {B3ACC1B2-81F4-4035-9B24-169D4C7CB076}\n\t\t{A094FBDA-B6A7-48DA-BF7C-39FA661C1A07} = {B3ACC1B2-81F4-4035-9B24-169D4C7CB076}\n\t\t{9D7556C5-C828-4C19-8EC9-E10030777E48} = {B3ACC1B2-81F4-4035-9B24-169D4C7CB076}\n\t\t{29167303-5857-4BD5-9DDA-9EEA8C26CACC} = {B3ACC1B2-81F4-4035-9B24-169D4C7CB076}\n\t\t{A7A6A7C2-DD95-4425-916E-9AC629CD4DB8} = {B3ACC1B2-81F4-4035-9B24-169D4C7CB076}\n\t\t{C14B6921-A12B-4203-8E3A-34BA4E5ACC98} = {B3ACC1B2-81F4-4035-9B24-169D4C7CB076}\n\t\t{51E41947-888E-43BE-A1A9-6607AAED7B57} = {B3ACC1B2-81F4-4035-9B24-169D4C7CB076}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {85400884-5FFD-4C27-A571-58CB3C8CAAC5}\n\tEndGlobalSection\n\tGlobalSection(SharedMSBuildProjectFiles) = preSolution\n\t\ttest\\WebJobs.Script.Tests.Shared\\WebJobs.Script.Tests.Shared.projitems*{35c9ccb7-d8b6-4161-bb0d-bcfa7c6dcffb}*SharedItemsImports = 13\n\t\ttest\\WebJobs.Script.Tests.Shared\\WebJobs.Script.Tests.Shared.projitems*{3ba93614-3a4a-49b0-bfbc-7831e2c02bb7}*SharedItemsImports = 5\n\t\ttest\\WebJobs.Script.Tests.Shared\\WebJobs.Script.Tests.Shared.projitems*{edddaed1-0e37-4ed7-a595-63f686dee90a}*SharedItemsImports = 5\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "check.ps1",
          "type": "blob",
          "size": 3.9853515625,
          "content": "ï»¿# Check prereqs for Script Runtime \r\n# prints diagnostic messages. \r\n\r\nfunction Check([string] $componentName, [string] $verstr, [Version] $requiredVersion)\r\n{\r\n    if ($verStr[0] -eq \"v\")  # trim leading 'v'\r\n    { \r\n        $verStr = $verStr.Substring(1)\r\n    }\r\n\t\r\n    # Version could be a beta, like 2.1.200-preview-007576\r\n    $x = $verstr;\r\n    $idxDash = $x.IndexOf('-')\r\n    if ($idxDash -gt 0) {\r\n        $x = $x.Substring(0, $idxDash)\r\n    }\r\n\r\n    $actualVersion = [Version]::Parse($x)\r\n\r\n    $msg = $componentName + \" \" + $verstr;\r\n\r\n    if ($actualVersion -lt $requiredVersion)\r\n    {\r\n        Write-Host (\"[X] \" + $msg +\". Error. Must be at least major version \" + $requiredVersion) -ForegroundColor Red\r\n        return $false\r\n    } else {\r\n        Write-Host -NoNewline (\"[*] \" + $msg) -foreground \"green\"\r\n        Write-Host \"    (must be at least\" $requiredVersion \")\"\r\n        return $true\r\n    }\r\n}\r\n\r\n\r\nWrite-Host \"Checking dependencies\"\r\n\r\n# Check VS \r\n# Use vswhere, which is installed with VS 15.2 and later.  https://github.com/Microsoft/vswhere \r\n$x= [Environment]::ExpandEnvironmentVariables(\"%ProgramFiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere.exe\")\r\nif(![System.IO.File]::Exists($x)){\r\n    Write-Host \"    VSWhere is missing. Is VS 2017 installed? See https://www.visualstudio.com/downloads/ \" -ForegroundColor Red\r\n} else {\r\n    $installedVersions = & $x -property catalog_buildVersion   \r\n    \r\n    # could be either a string or an array of strings. \r\n    if ($installedVersions  -is [array]) {\r\n        # as an array, take the latest version on the machine\r\n        $latest =  [Version]::Parse($installedVersions[0])\r\n        Write-Host \"    Multiple VS versions installed:\"\r\n        foreach($ver in $installedVersions) {\r\n            $verCurrent = [Version]::Parse($ver)\r\n            Write-Host \"      \" $verCurrent\r\n            if ($verCurrent -gt $latest) {\r\n                $latest = $verCurrent\r\n            }\r\n        }    \r\n    } else {\r\n        $latest = $installedVersions;\r\n    }\r\n    \r\n\r\n    $ok = Check \"VS 2017\" ($latest.ToString()) ([Version]::Parse(\"15.7.0\"))\r\n    if (-Not $ok) {\r\n        Write-Host \"    You can update VS from the Tools | Extensions and Updates menu.\"\r\n    }\r\n}\r\n\r\n#  Check dotnet\r\n# C:\\dev\\AFunc\\script-core3>dotnet --version\r\n# 2.0.0\r\n$actualVersion = & \"dotnet\" --version\r\n$ok = Check \"dotnet\" $actualVersion ([Version]::Parse(\"2.1.300\"))\r\nif (-Not $ok) {\r\n    Write-Host \"You can update by installing '.NET Core 2.1 SDK' from https://www.microsoft.com/net/download/windows\"\r\n    Write-Host \r\n}\r\n\r\n# Check Node\r\n$actualVersion = & \"node\" -v\r\n$ok = Check \"node\" $actualVersion ([Version]::Parse(\"8.4.0\"))\r\nif (-Not $ok) {\r\n    Write-Host \"    You can update node by downloading the latest from https://nodejs.org\"\r\n    Write-Host \r\n}\r\n\r\n# Check NPM \r\n$actualVersion = & \"npm\" -v\r\n$ok = Check \"npm\" $actualVersion ([Version]::Parse(\"5.0\"))\r\n\r\nif (-Not $ok) {\r\n    Write-Host \"You can upgrade npm by running: \"\r\n    Write-Host \"    npm install -g npm@latest\" \r\n    Write-Host \r\n}\r\n\r\n# Check Java\r\n$javaFullVersion = & \"java\" -version 2>&1\r\n$javaVersion = $javaFullVersion[0].toString().Split(' ')\r\n$javaVersion = $javaVersion[2].Trim('\"')\r\n$underscoreIndex = $javaVersion.IndexOf('_')\r\n$actualVersion = $javaVersion.Substring(0, $underscoreIndex)\r\n$ok = Check \"java\" $actualVersion ([Version]::Parse(\"1.8.0\"))\r\n\r\nif (-Not $ok) {\r\n    Write-Host \"    You can udpate java by downloading from http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" \r\n    Write-Host \r\n}\r\n$ok = Test-Path 'env:JAVA_HOME'\r\nif (-Not $ok) {\r\n\tWrite-Host \"JAVA_HOME Environment variable not set. Set it to JDK folder. Example c:\\Program Files\\Java\\jdk1.8.0_171\" -ForegroundColor Red\r\n\tWrite-Host \r\n}\r\n\r\n\r\n# See here for hints on doing Devenv detection:\r\n# https://stackoverflow.com/questions/42435592/determining-installed-visual-studio-path-for-2017 \r\n# Or here: https://stackoverflow.com/questions/40694598/how-do-i-call-visual-studio-2017-rcs-version-of-msbuild-from-a-bat-file/40702534#40702534"
        },
        {
          "name": "dotnet-install.sh",
          "type": "blob",
          "size": 29.4677734375,
          "content": "#!/usr/bin/env bash\n# Copyright (c) .NET Foundation and contributors. All rights reserved.\n# Licensed under the MIT license. See LICENSE file in the project root for full license information.\n#\n# Original file from https://github.com/dotnet/cli/blob/80d542b8f4eff847a0f72dc8f2c2a29851272778/scripts/obtain/dotnet-install.sh\n\n# Stop script on NZEC\nset -e\n# Stop script if unbound variable found (use ${var:-} if intentional)\nset -u\n# By default cmd1 | cmd2 returns exit code of cmd2 regardless of cmd1 success\n# This is causing it to fail\nset -o pipefail\n\n# Use in the the functions: eval $invocation\ninvocation='say_verbose \"Calling: ${yellow:-}${FUNCNAME[0]} ${green:-}$*${normal:-}\"'\n\n# standard output may be used as a return value in the functions\n# we need a way to write text on the screen in the functions so that\n# it won't interfere with the return value.\n# Exposing stream 3 as a pipe to standard output of the script itself\nexec 3>&1\n\n# Setup some colors to use. These need to work in fairly limited shells, like the Ubuntu Docker container where there are only 8 colors.\n# See if stdout is a terminal\nif [ -t 1 ] && command -v tput > /dev/null; then\n    # see if it supports colors\n    ncolors=$(tput colors)\n    if [ -n \"$ncolors\" ] && [ $ncolors -ge 8 ]; then\n        bold=\"$(tput bold       || echo)\"\n        normal=\"$(tput sgr0     || echo)\"\n        black=\"$(tput setaf 0   || echo)\"\n        red=\"$(tput setaf 1     || echo)\"\n        green=\"$(tput setaf 2   || echo)\"\n        yellow=\"$(tput setaf 3  || echo)\"\n        blue=\"$(tput setaf 4    || echo)\"\n        magenta=\"$(tput setaf 5 || echo)\"\n        cyan=\"$(tput setaf 6    || echo)\"\n        white=\"$(tput setaf 7   || echo)\"\n    fi\nfi\n\nsay_warning() {\n    printf \"%b\\n\" \"${yellow:-}dotnet_install: Warning: $1${normal:-}\"\n}\n\nsay_err() {\n    printf \"%b\\n\" \"${red:-}dotnet_install: Error: $1${normal:-}\" >&2\n}\n\nsay() {\n    # using stream 3 (defined in the beginning) to not interfere with stdout of functions\n    # which may be used as return value\n    printf \"%b\\n\" \"${cyan:-}dotnet-install:${normal:-} $1\" >&3\n}\n\nsay_verbose() {\n    if [ \"$verbose\" = true ]; then\n        say \"$1\"\n    fi\n}\n\n# This platform list is finite - if the SDK/Runtime has supported Linux distribution-specific assets,\n#   then and only then should the Linux distribution appear in this list.\n# Adding a Linux distribution to this list does not imply distribution-specific support.\nget_legacy_os_name_from_platform() {\n    eval $invocation\n\n    platform=\"$1\"\n    case \"$platform\" in\n        \"centos.7\")\n            echo \"centos\"\n            return 0\n            ;;\n        \"debian.8\")\n            echo \"debian\"\n            return 0\n            ;;\n        \"fedora.23\")\n            echo \"fedora.23\"\n            return 0\n            ;;\n        \"fedora.27\")\n            echo \"fedora.27\"\n            return 0\n            ;;\n        \"fedora.24\")\n            echo \"fedora.24\"\n            return 0\n            ;;\n        \"opensuse.13.2\")\n            echo \"opensuse.13.2\"\n            return 0\n            ;;\n        \"opensuse.42.1\")\n            echo \"opensuse.42.1\"\n            return 0\n            ;;\n        \"opensuse.42.3\")\n            echo \"opensuse.42.3\"\n            return 0\n            ;;\n        \"rhel.7\"*)\n            echo \"rhel\"\n            return 0\n            ;;\n        \"ubuntu.14.04\")\n            echo \"ubuntu\"\n            return 0\n            ;;\n        \"ubuntu.16.04\")\n            echo \"ubuntu.16.04\"\n            return 0\n            ;;\n        \"ubuntu.16.10\")\n            echo \"ubuntu.16.10\"\n            return 0\n            ;;\n        \"ubuntu.18.04\")\n            echo \"ubuntu.18.04\"\n            return 0\n            ;;\n        \"alpine.3.4.3\")\n            echo \"alpine\"\n            return 0\n            ;;\n    esac\n    return 1\n}\n\nget_linux_platform_name() {\n    eval $invocation\n\n    if [ -n \"$runtime_id\" ]; then\n        echo \"${runtime_id%-*}\"\n        return 0\n    else\n        if [ -e /etc/os-release ]; then\n            . /etc/os-release\n            echo \"$ID.$VERSION_ID\"\n            return 0\n        elif [ -e /etc/redhat-release ]; then\n            local redhatRelease=$(</etc/redhat-release)\n            if [[ $redhatRelease == \"CentOS release 6.\"* || $redhatRelease == \"Red Hat Enterprise Linux Server release 6.\"* ]]; then\n                echo \"rhel.6\"\n                return 0\n            fi\n        fi\n    fi\n\n    say_verbose \"Linux specific platform name and version could not be detected: UName = $uname\"\n    return 1\n}\n\nget_current_os_name() {\n    eval $invocation\n\n    local uname=$(uname)\n    if [ \"$uname\" = \"Darwin\" ]; then\n        echo \"osx\"\n        return 0\n    elif [ \"$uname\" = \"Linux\" ]; then\n        local linux_platform_name\n        linux_platform_name=\"$(get_linux_platform_name)\" || { echo \"linux\" && return 0 ; }\n\n        if [[ $linux_platform_name == \"rhel.6\" ]]; then\n            echo $linux_platform_name\n            return 0\n        elif [[ $linux_platform_name == alpine* ]]; then\n            echo \"linux-musl\"\n            return 0\n        else\n            echo \"linux\"\n            return 0\n        fi\n    fi\n\n    say_err \"OS name could not be detected: UName = $uname\"\n    return 1\n}\n\nget_legacy_os_name() {\n    eval $invocation\n\n    local uname=$(uname)\n    if [ \"$uname\" = \"Darwin\" ]; then\n        echo \"osx\"\n        return 0\n    elif [ -n \"$runtime_id\" ]; then\n        echo $(get_legacy_os_name_from_platform \"${runtime_id%-*}\" || echo \"${runtime_id%-*}\")\n        return 0\n    else\n        if [ -e /etc/os-release ]; then\n            . /etc/os-release\n            os=$(get_legacy_os_name_from_platform \"$ID.$VERSION_ID\" || echo \"\")\n            if [ -n \"$os\" ]; then\n                echo \"$os\"\n                return 0\n            fi\n        fi\n    fi\n\n    say_verbose \"Distribution specific OS name and version could not be detected: UName = $uname\"\n    return 1\n}\n\nmachine_has() {\n    eval $invocation\n\n    hash \"$1\" > /dev/null 2>&1\n    return $?\n}\n\n\ncheck_min_reqs() {\n    local hasMinimum=false\n    if machine_has \"curl\"; then\n        hasMinimum=true\n    elif machine_has \"wget\"; then\n        hasMinimum=true\n    fi\n\n    if [ \"$hasMinimum\" = \"false\" ]; then\n        say_err \"curl (recommended) or wget are required to download dotnet. Install missing prerequisite to proceed.\"\n        return 1\n    fi\n    return 0\n}\n\ncheck_pre_reqs() {\n    eval $invocation\n\n    if [ \"${DOTNET_INSTALL_SKIP_PREREQS:-}\" = \"1\" ]; then\n        return 0\n    fi\n\n    if [ \"$(uname)\" = \"Linux\" ]; then\n        if [ ! -x \"$(command -v ldconfig)\" ]; then\n            echo \"ldconfig is not in PATH, trying /sbin/ldconfig.\"\n            LDCONFIG_COMMAND=\"/sbin/ldconfig\"\n        else\n            LDCONFIG_COMMAND=\"ldconfig\"\n        fi\n\n        local librarypath=${LD_LIBRARY_PATH:-}\n        LDCONFIG_COMMAND=\"$LDCONFIG_COMMAND -NXv ${librarypath//:/ }\"\n\n        [ -z \"$($LDCONFIG_COMMAND 2>/dev/null | grep libunwind)\" ] && say_warning \"Unable to locate libunwind. Probable prerequisite missing; please install libunwind.\"\n        [ -z \"$($LDCONFIG_COMMAND 2>/dev/null | grep libssl)\" ] && say_warning \"Unable to locate libssl. Probable prerequisite missing; please install libssl.\"\n        [ -z \"$($LDCONFIG_COMMAND 2>/dev/null | grep libicu)\" ] && say_warning \"Unable to locate libicu. Probable prerequisite missing; please install libicu.\"\n        [ -z \"$($LDCONFIG_COMMAND 2>/dev/null | grep -F libcurl.so)\" ] && say_warning \"Unable to locate libcurl. Probable prerequisite missing; please install libcurl.\"\n    fi\n\n    return 0\n}\n\n# args:\n# input - $1\nto_lowercase() {\n    #eval $invocation\n\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\n    return 0\n}\n\n# args:\n# input - $1\nremove_trailing_slash() {\n    #eval $invocation\n\n    local input=\"${1:-}\"\n    echo \"${input%/}\"\n    return 0\n}\n\n# args:\n# input - $1\nremove_beginning_slash() {\n    #eval $invocation\n\n    local input=\"${1:-}\"\n    echo \"${input#/}\"\n    return 0\n}\n\n# args:\n# root_path - $1\n# child_path - $2 - this parameter can be empty\ncombine_paths() {\n    eval $invocation\n\n    # TODO: Consider making it work with any number of paths. For now:\n    if [ ! -z \"${3:-}\" ]; then\n        say_err \"combine_paths: Function takes two parameters.\"\n        return 1\n    fi\n\n    local root_path=\"$(remove_trailing_slash \"$1\")\"\n    local child_path=\"$(remove_beginning_slash \"${2:-}\")\"\n    say_verbose \"combine_paths: root_path=$root_path\"\n    say_verbose \"combine_paths: child_path=$child_path\"\n    echo \"$root_path/$child_path\"\n    return 0\n}\n\nget_machine_architecture() {\n    eval $invocation\n\n    if command -v uname > /dev/null; then\n        CPUName=$(uname -m)\n        case $CPUName in\n        armv7l)\n            echo \"arm\"\n            return 0\n            ;;\n        aarch64)\n            echo \"arm64\"\n            return 0\n            ;;\n        esac\n    fi\n\n    # Always default to 'x64'\n    echo \"x64\"\n    return 0\n}\n\n# args:\n# architecture - $1\nget_normalized_architecture_from_architecture() {\n    eval $invocation\n\n    local architecture=\"$(to_lowercase \"$1\")\"\n    case \"$architecture\" in\n        \\<auto\\>)\n            echo \"$(get_normalized_architecture_from_architecture \"$(get_machine_architecture)\")\"\n            return 0\n            ;;\n        amd64|x64)\n            echo \"x64\"\n            return 0\n            ;;\n        arm)\n            echo \"arm\"\n            return 0\n            ;;\n        arm64)\n            echo \"arm64\"\n            return 0\n            ;;\n    esac\n\n    say_err \"Architecture \\`$architecture\\` not supported. If you think this is a bug, please report it at https://github.com/dotnet/cli/issues\"\n    return 1\n}\n\n# version_info is a conceptual two line string representing commit hash and 4-part version\n# format:\n# Line 1: # commit_hash\n# Line 2: # 4-part version\n\n# args:\n# version_text - stdin\nget_version_from_version_info() {\n    eval $invocation\n\n    cat | tail -n 1 | sed 's/\\r$//'\n    return 0\n}\n\n# args:\n# version_text - stdin\nget_commit_hash_from_version_info() {\n    eval $invocation\n\n    cat | head -n 1 | sed 's/\\r$//'\n    return 0\n}\n\n# args:\n# install_root - $1\n# relative_path_to_package - $2\n# specific_version - $3\nis_dotnet_package_installed() {\n    eval $invocation\n\n    local install_root=\"$1\"\n    local relative_path_to_package=\"$2\"\n    local specific_version=\"${3//[$'\\t\\r\\n']}\"\n\n    local dotnet_package_path=\"$(combine_paths \"$(combine_paths \"$install_root\" \"$relative_path_to_package\")\" \"$specific_version\")\"\n    say_verbose \"is_dotnet_package_installed: dotnet_package_path=$dotnet_package_path\"\n\n    if [ -d \"$dotnet_package_path\" ]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\n# args:\n# azure_feed - $1\n# channel - $2\n# normalized_architecture - $3\n# coherent - $4\nget_latest_version_info() {\n    eval $invocation\n\n    local azure_feed=\"$1\"\n    local channel=\"$2\"\n    local normalized_architecture=\"$3\"\n    local coherent=\"$4\"\n\n    local version_file_url=null\n    if [[ \"$runtime\" == \"dotnet\" ]]; then\n        version_file_url=\"$uncached_feed/Runtime/$channel/latest.version\"\n    elif [[ \"$runtime\" == \"aspnetcore\" ]]; then\n        version_file_url=\"$uncached_feed/aspnetcore/Runtime/$channel/latest.version\"\n    elif [ -z \"$runtime\" ]; then\n        if [ \"$coherent\" = true ]; then\n            version_file_url=\"$uncached_feed/Sdk/$channel/latest.coherent.version\"\n        else\n            version_file_url=\"$uncached_feed/Sdk/$channel/latest.version\"\n        fi\n    else\n        say_err \"Invalid value for \\$runtime\"\n        return 1\n    fi\n    say_verbose \"get_latest_version_info: latest url: $version_file_url\"\n\n    download \"$version_file_url\"\n    return $?\n}\n\n# args:\n# azure_feed - $1\n# channel - $2\n# normalized_architecture - $3\n# version - $4\nget_specific_version_from_version() {\n    eval $invocation\n\n    local azure_feed=\"$1\"\n    local channel=\"$2\"\n    local normalized_architecture=\"$3\"\n    local version=\"$(to_lowercase \"$4\")\"\n\n    case \"$version\" in\n        latest)\n            local version_info\n            version_info=\"$(get_latest_version_info \"$azure_feed\" \"$channel\" \"$normalized_architecture\" false)\" || return 1\n            say_verbose \"get_specific_version_from_version: version_info=$version_info\"\n            echo \"$version_info\" | get_version_from_version_info\n            return 0\n            ;;\n        coherent)\n            local version_info\n            version_info=\"$(get_latest_version_info \"$azure_feed\" \"$channel\" \"$normalized_architecture\" true)\" || return 1\n            say_verbose \"get_specific_version_from_version: version_info=$version_info\"\n            echo \"$version_info\" | get_version_from_version_info\n            return 0\n            ;;\n        *)\n            echo \"$version\"\n            return 0\n            ;;\n    esac\n}\n\n# args:\n# azure_feed - $1\n# channel - $2\n# normalized_architecture - $3\n# specific_version - $4\nconstruct_download_link() {\n    eval $invocation\n\n    local azure_feed=\"$1\"\n    local channel=\"$2\"\n    local normalized_architecture=\"$3\"\n    local specific_version=\"${4//[$'\\t\\r\\n']}\"\n\n    local osname\n    osname=\"$(get_current_os_name)\" || return 1\n\n    local download_link=null\n    if [[ \"$runtime\" == \"dotnet\" ]]; then\n        download_link=\"$azure_feed/Runtime/$specific_version/dotnet-runtime-$specific_version-$osname-$normalized_architecture.tar.gz\"\n    elif [[ \"$runtime\" == \"aspnetcore\" ]]; then\n        download_link=\"$azure_feed/aspnetcore/Runtime/$specific_version/aspnetcore-runtime-$specific_version-$osname-$normalized_architecture.tar.gz\"\n    elif [ -z \"$runtime\" ]; then\n        download_link=\"$azure_feed/Sdk/$specific_version/dotnet-sdk-$specific_version-$osname-$normalized_architecture.tar.gz\"\n    else\n        return 1\n    fi\n\n    echo \"$download_link\"\n    return 0\n}\n\n# args:\n# azure_feed - $1\n# channel - $2\n# normalized_architecture - $3\n# specific_version - $4\nconstruct_legacy_download_link() {\n    eval $invocation\n\n    local azure_feed=\"$1\"\n    local channel=\"$2\"\n    local normalized_architecture=\"$3\"\n    local specific_version=\"${4//[$'\\t\\r\\n']}\"\n\n    local distro_specific_osname\n    distro_specific_osname=\"$(get_legacy_os_name)\" || return 1\n\n    local legacy_download_link=null\n    if [[ \"$runtime\" == \"dotnet\" ]]; then\n        legacy_download_link=\"$azure_feed/Runtime/$specific_version/dotnet-$distro_specific_osname-$normalized_architecture.$specific_version.tar.gz\"\n    elif [ -z \"$runtime\" ]; then\n        legacy_download_link=\"$azure_feed/Sdk/$specific_version/dotnet-dev-$distro_specific_osname-$normalized_architecture.$specific_version.tar.gz\"\n    else\n        return 1\n    fi\n\n    echo \"$legacy_download_link\"\n    return 0\n}\n\nget_user_install_path() {\n    eval $invocation\n\n    if [ ! -z \"${DOTNET_INSTALL_DIR:-}\" ]; then\n        echo \"$DOTNET_INSTALL_DIR\"\n    else\n        echo \"$HOME/.dotnet\"\n    fi\n    return 0\n}\n\n# args:\n# install_dir - $1\nresolve_installation_path() {\n    eval $invocation\n\n    local install_dir=$1\n    if [ \"$install_dir\" = \"<auto>\" ]; then\n        local user_install_path=\"$(get_user_install_path)\"\n        say_verbose \"resolve_installation_path: user_install_path=$user_install_path\"\n        echo \"$user_install_path\"\n        return 0\n    fi\n\n    echo \"$install_dir\"\n    return 0\n}\n\n# args:\n# install_root - $1\nget_installed_version_info() {\n    eval $invocation\n\n    local install_root=\"$1\"\n    local version_file=\"$(combine_paths \"$install_root\" \"$local_version_file_relative_path\")\"\n    say_verbose \"Local version file: $version_file\"\n    if [ ! -z \"$version_file\" ] | [ -r \"$version_file\" ]; then\n        local version_info=\"$(cat \"$version_file\")\"\n        echo \"$version_info\"\n        return 0\n    fi\n\n    say_verbose \"Local version file not found.\"\n    return 0\n}\n\n# args:\n# relative_or_absolute_path - $1\nget_absolute_path() {\n    eval $invocation\n\n    local relative_or_absolute_path=$1\n    echo \"$(cd \"$(dirname \"$1\")\" && pwd -P)/$(basename \"$1\")\"\n    return 0\n}\n\n# args:\n# input_files - stdin\n# root_path - $1\n# out_path - $2\n# override - $3\ncopy_files_or_dirs_from_list() {\n    eval $invocation\n\n    local root_path=\"$(remove_trailing_slash \"$1\")\"\n    local out_path=\"$(remove_trailing_slash \"$2\")\"\n    local override=\"$3\"\n    local osname=\"$(get_current_os_name)\"\n    local override_switch=$(\n        if [ \"$override\" = false ]; then\n            if [[ \"$osname\" == \"linux-musl\" ]]; then\n                printf -- \"-u\";\n            else\n                printf -- \"-n\";\n            fi\n        fi)\n\n    cat | uniq | while read -r file_path; do\n        local path=\"$(remove_beginning_slash \"${file_path#$root_path}\")\"\n        local target=\"$out_path/$path\"\n        if [ \"$override\" = true ] || (! ([ -d \"$target\" ] || [ -e \"$target\" ])); then\n            mkdir -p \"$out_path/$(dirname \"$path\")\"\n            cp -R $override_switch \"$root_path/$path\" \"$target\"\n        fi\n    done\n}\n\n# args:\n# zip_path - $1\n# out_path - $2\nextract_dotnet_package() {\n    eval $invocation\n\n    local zip_path=\"$1\"\n    local out_path=\"$2\"\n\n    local temp_out_path=\"$(mktemp -d \"$temporary_file_template\")\"\n\n    local failed=false\n    tar -xzf \"$zip_path\" -C \"$temp_out_path\" > /dev/null || failed=true\n\n    local folders_with_version_regex='^.*/[0-9]+\\.[0-9]+[^/]+/'\n    find \"$temp_out_path\" -type f | grep -Eo \"$folders_with_version_regex\" | sort | copy_files_or_dirs_from_list \"$temp_out_path\" \"$out_path\" false\n    find \"$temp_out_path\" -type f | grep -Ev \"$folders_with_version_regex\" | copy_files_or_dirs_from_list \"$temp_out_path\" \"$out_path\" \"$override_non_versioned_files\"\n\n    rm -rf \"$temp_out_path\"\n\n    if [ \"$failed\" = true ]; then\n        say_err \"Extraction failed\"\n        return 1\n    fi\n}\n\n# args:\n# remote_path - $1\n# [out_path] - $2 - stdout if not provided\ndownload() {\n    eval $invocation\n\n    local remote_path=\"$1\"\n    local out_path=\"${2:-}\"\n\n    local failed=false\n    if machine_has \"curl\"; then\n        downloadcurl \"$remote_path\" \"$out_path\" || failed=true\n    elif machine_has \"wget\"; then\n        downloadwget \"$remote_path\" \"$out_path\" || failed=true\n    else\n        failed=true\n    fi\n    if [ \"$failed\" = true ]; then\n        say_verbose \"Download failed: $remote_path\"\n        return 1\n    fi\n    return 0\n}\n\ndownloadcurl() {\n    eval $invocation\n    local remote_path=\"$1\"\n    local out_path=\"${2:-}\"\n\n    # Append feed_credential as late as possible before calling curl to avoid logging feed_credential\n    remote_path=\"${remote_path}${feed_credential}\"\n\n    local failed=false\n    if [ -z \"$out_path\" ]; then\n        curl --retry 10 -sSL -f --create-dirs \"$remote_path\" || failed=true\n    else\n        curl --retry 10 -sSL -f --create-dirs -o \"$out_path\" \"$remote_path\" || failed=true\n    fi\n    if [ \"$failed\" = true ]; then\n        say_verbose \"Curl download failed\"\n        return 1\n    fi\n    return 0\n}\n\ndownloadwget() {\n    eval $invocation\n    local remote_path=\"$1\"\n    local out_path=\"${2:-}\"\n\n    # Append feed_credential as late as possible before calling wget to avoid logging feed_credential\n    remote_path=\"${remote_path}${feed_credential}\"\n\n    local failed=false\n    if [ -z \"$out_path\" ]; then\n        wget -q --tries 10 -O - \"$remote_path\" || failed=true\n    else\n        wget --tries 10 -O \"$out_path\" \"$remote_path\" || failed=true\n    fi\n    if [ \"$failed\" = true ]; then\n        say_verbose \"Wget download failed\"\n        return 1\n    fi\n    return 0\n}\n\ncalculate_vars() {\n    eval $invocation\n    valid_legacy_download_link=true\n\n    normalized_architecture=\"$(get_normalized_architecture_from_architecture \"$architecture\")\"\n    say_verbose \"normalized_architecture=$normalized_architecture\"\n\n    specific_version=\"$(get_specific_version_from_version \"$azure_feed\" \"$channel\" \"$normalized_architecture\" \"$version\")\"\n    say_verbose \"specific_version=$specific_version\"\n    if [ -z \"$specific_version\" ]; then\n        say_err \"Could not get version information.\"\n        return 1\n    fi\n\n    download_link=\"$(construct_download_link \"$azure_feed\" \"$channel\" \"$normalized_architecture\" \"$specific_version\")\"\n    say_verbose \"download_link=$download_link\"\n\n    legacy_download_link=\"$(construct_legacy_download_link \"$azure_feed\" \"$channel\" \"$normalized_architecture\" \"$specific_version\")\" || valid_legacy_download_link=false\n\n    if [ \"$valid_legacy_download_link\" = true ]; then\n        say_verbose \"legacy_download_link=$legacy_download_link\"\n    else\n        say_verbose \"Cound not construct a legacy_download_link; omitting...\"\n    fi\n\n    install_root=\"$(resolve_installation_path \"$install_dir\")\"\n    say_verbose \"install_root=$install_root\"\n}\n\ninstall_dotnet() {\n    eval $invocation\n    local download_failed=false\n    local asset_name=''\n    local asset_relative_path=''\n\n    if [[ \"$runtime\" == \"dotnet\" ]]; then\n        asset_relative_path=\"shared/Microsoft.NETCore.App\"\n        asset_name=\".NET Core Runtime\"\n    elif [[ \"$runtime\" == \"aspnetcore\" ]]; then\n        asset_relative_path=\"shared/Microsoft.AspNetCore.App\"\n        asset_name=\"ASP.NET Core Runtime\"\n    elif [ -z \"$runtime\" ]; then\n        asset_relative_path=\"sdk\"\n        asset_name=\".NET Core SDK\"\n    else\n        say_err \"Invalid value for \\$runtime\"\n        return 1\n    fi\n\n    #  Check if the SDK version is already installed.\n    if is_dotnet_package_installed \"$install_root\" \"$asset_relative_path\" \"$specific_version\"; then\n        say \"$asset_name version $specific_version is already installed.\"\n        return 0\n    fi\n\n    mkdir -p \"$install_root\"\n    zip_path=\"$(mktemp \"$temporary_file_template\")\"\n    say_verbose \"Zip path: $zip_path\"\n\n    say \"Downloading link: $download_link\"\n\n    # Failures are normal in the non-legacy case for ultimately legacy downloads.\n    # Do not output to stderr, since output to stderr is considered an error.\n    download \"$download_link\" \"$zip_path\" 2>&1 || download_failed=true\n\n    #  if the download fails, download the legacy_download_link\n    if [ \"$download_failed\" = true ]; then\n        say \"Cannot download: $download_link\"\n\n        if [ \"$valid_legacy_download_link\" = true ]; then\n            download_failed=false\n            download_link=\"$legacy_download_link\"\n            zip_path=\"$(mktemp \"$temporary_file_template\")\"\n            say_verbose \"Legacy zip path: $zip_path\"\n            say \"Downloading legacy link: $download_link\"\n            download \"$download_link\" \"$zip_path\" 2>&1 || download_failed=true\n        fi\n    fi\n\n    if [ \"$download_failed\" = true ]; then\n        say_err \"Could not download $asset_name version $specific_version\"\n        return 1\n    fi\n\n    say \"Extracting zip from $download_link\"\n    extract_dotnet_package \"$zip_path\" \"$install_root\"\n\n    #  Check if the SDK version is now installed; if not, fail the installation.\n    if ! is_dotnet_package_installed \"$install_root\" \"$asset_relative_path\" \"$specific_version\"; then\n        say_err \"$asset_name version $specific_version failed to install with an unknown error.\"\n        return 1\n    fi\n\n    return 0\n}\n\nlocal_version_file_relative_path=\"/.version\"\nbin_folder_relative_path=\"\"\ntemporary_file_template=\"${TMPDIR:-/tmp}/dotnet.XXXXXXXXX\"\n\nchannel=\"LTS\"\nversion=\"Latest\"\ninstall_dir=\"<auto>\"\narchitecture=\"<auto>\"\ndry_run=false\nno_path=false\nazure_feed=\"https://builds.dotnet.microsoft.com/dotnet\"\nuncached_feed=\"https://dotnetcli.blob.core.windows.net/dotnet\"\nfeed_credential=\"\"\nverbose=false\nruntime=\"\"\nruntime_id=\"\"\noverride_non_versioned_files=true\n\nwhile [ $# -ne 0 ]\ndo\n    name=\"$1\"\n    case \"$name\" in\n        -c|--channel|-[Cc]hannel)\n            shift\n            channel=\"$1\"\n            ;;\n        -v|--version|-[Vv]ersion)\n            shift\n            version=\"$1\"\n            ;;\n        -i|--install-dir|-[Ii]nstall[Dd]ir)\n            shift\n            install_dir=\"$1\"\n            ;;\n        --arch|--architecture|-[Aa]rch|-[Aa]rchitecture)\n            shift\n            architecture=\"$1\"\n            ;;\n        --shared-runtime|-[Ss]hared[Rr]untime)\n            say_warning \"The --shared-runtime flag is obsolete and may be removed in a future version of this script. The recommended usage is to specify '--runtime dotnet'.\"\n            if [ -z \"$runtime\" ]; then\n                runtime=\"dotnet\"\n            fi\n            ;;\n        --runtime|-[Rr]untime)\n            shift\n            runtime=\"$1\"\n            if [[ \"$runtime\" != \"dotnet\" ]] && [[ \"$runtime\" != \"aspnetcore\" ]]; then\n                say_err \"Unsupported value for --runtime: '$1'. Valid values are 'dotnet' and 'aspnetcore'.\"\n                exit 1\n            fi\n            ;;\n        --dry-run|-[Dd]ry[Rr]un)\n            dry_run=true\n            ;;\n        --no-path|-[Nn]o[Pp]ath)\n            no_path=true\n            ;;\n        --verbose|-[Vv]erbose)\n            verbose=true\n            ;;\n        --azure-feed|-[Aa]zure[Ff]eed)\n            shift\n            azure_feed=\"$1\"\n            ;;\n        --uncached-feed|-[Uu]ncached[Ff]eed)\n            shift\n            uncached_feed=\"$1\"\n            ;;\n        --feed-credential|-[Ff]eed[Cc]redential)\n            shift\n            feed_credential=\"$1\"\n            ;;\n        --runtime-id|-[Rr]untime[Ii]d)\n            shift\n            runtime_id=\"$1\"\n            ;;\n        --skip-non-versioned-files|-[Ss]kip[Nn]on[Vv]ersioned[Ff]iles)\n            override_non_versioned_files=false\n            ;;\n        -?|--?|-h|--help|-[Hh]elp)\n            script_name=\"$(basename \"$0\")\"\n            echo \".NET Tools Installer\"\n            echo \"Usage: $script_name [-c|--channel <CHANNEL>] [-v|--version <VERSION>] [-p|--prefix <DESTINATION>]\"\n            echo \"       $script_name -h|-?|--help\"\n            echo \"\"\n            echo \"$script_name is a simple command line interface for obtaining dotnet cli.\"\n            echo \"\"\n            echo \"Options:\"\n            echo \"  -c,--channel <CHANNEL>         Download from the channel specified, Defaults to \\`$channel\\`.\"\n            echo \"      -Channel\"\n            echo \"          Possible values:\"\n            echo \"          - Current - most current release\"\n            echo \"          - LTS - most current supported release\"\n            echo \"          - 2-part version in a format A.B - represents a specific release\"\n            echo \"              examples: 2.0; 1.0\"\n            echo \"          - Branch name\"\n            echo \"              examples: release/2.0.0; Master\"\n            echo \"  -v,--version <VERSION>         Use specific VERSION, Defaults to \\`$version\\`.\"\n            echo \"      -Version\"\n            echo \"          Possible values:\"\n            echo \"          - latest - most latest build on specific channel\"\n            echo \"          - coherent - most latest coherent build on specific channel\"\n            echo \"              coherent applies only to SDK downloads\"\n            echo \"          - 3-part version in a format A.B.C - represents specific version of build\"\n            echo \"              examples: 2.0.0-preview2-006120; 1.1.0\"\n            echo \"  -i,--install-dir <DIR>             Install under specified location (see Install Location below)\"\n            echo \"      -InstallDir\"\n            echo \"  --architecture <ARCHITECTURE>      Architecture of dotnet binaries to be installed, Defaults to \\`$architecture\\`.\"\n            echo \"      --arch,-Architecture,-Arch\"\n            echo \"          Possible values: x64, arm, and arm64\"\n            echo \"  --runtime <RUNTIME>                Installs a shared runtime only, without the SDK.\"\n            echo \"      -Runtime\"\n            echo \"          Possible values:\"\n            echo \"          - dotnet     - the Microsoft.NETCore.App shared runtime\"\n            echo \"          - aspnetcore - the Microsoft.AspNetCore.App shared runtime\"\n            echo \"  --skip-non-versioned-files         Skips non-versioned files if they already exist, such as the dotnet executable.\"\n            echo \"      -SkipNonVersionedFiles\"\n            echo \"  --dry-run,-DryRun                  Do not perform installation. Display download link.\"\n            echo \"  --no-path, -NoPath                 Do not set PATH for the current process.\"\n            echo \"  --verbose,-Verbose                 Display diagnostics information.\"\n            echo \"  --azure-feed,-AzureFeed            Azure feed location. Defaults to $azure_feed, This parameter typically is not changed by the user.\"\n            echo \"  --uncached-feed,-UncachedFeed      Uncached feed location. This parameter typically is not changed by the user.\"\n            echo \"  --feed-credential,-FeedCredential  Azure feed shared access token. This parameter typically is not specified.\"\n            echo \"  --runtime-id                       Installs the .NET Tools for the given platform (use linux-x64 for portable linux).\"\n            echo \"      -RuntimeId\"\n            echo \"  -?,--?,-h,--help,-Help             Shows this help message\"\n            echo \"\"\n            echo \"Obsolete parameters:\"\n            echo \"  --shared-runtime                   The recommended alternative is '--runtime dotnet'.\"\n            echo \"      -SharedRuntime                 Installs just the shared runtime bits, not the entire SDK.\"\n            echo \"\"\n            echo \"Install Location:\"\n            echo \"  Location is chosen in following order:\"\n            echo \"    - --install-dir option\"\n            echo \"    - Environmental variable DOTNET_INSTALL_DIR\"\n            echo \"    - $HOME/.dotnet\"\n            exit 0\n            ;;\n        *)\n            say_err \"Unknown argument \\`$name\\`\"\n            exit 1\n            ;;\n    esac\n\n    shift\ndone\n\ncheck_min_reqs\ncalculate_vars\n\nif [ \"$dry_run\" = true ]; then\n    say \"Payload URL: $download_link\"\n    if [ \"$valid_legacy_download_link\" = true ]; then\n        say \"Legacy payload URL: $legacy_download_link\"\n    fi\n    say \"Repeatable invocation: ./$(basename \"$0\") --version $specific_version --channel $channel --install-dir $install_dir\"\n    exit 0\nfi\n\ncheck_pre_reqs\ninstall_dotnet\n\nbin_path=\"$(get_absolute_path \"$(combine_paths \"$install_root\" \"$bin_folder_relative_path\")\")\"\nif [ \"$no_path\" = false ]; then\n    say \"Adding to current process PATH: \\`$bin_path\\`. Note: This change will be visible only when sourcing script.\"\n    export PATH=\"$bin_path\":\"$PATH\"\nelse\n    say \"Binaries of dotnet can be found in $bin_path\"\nfi\n\nsay \"Installation finished successfully.\""
        },
        {
          "name": "eng",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.18359375,
          "content": "{\n  \"sdk\": {\n    \"version\": \"8.0.101\",\n    \"rollForward\": \"latestFeature\"\n  },\n  \"msbuild-sdks\": {\n    \"Microsoft.Build.NoTargets\": \"3.7.56\",\n    \"Microsoft.Build.Traversal\": \"4.1.0\"\n  }\n}"
        },
        {
          "name": "omnisharp.json",
          "type": "blob",
          "size": 0.048828125,
          "content": "{\n    \"script\": {\n        \"enabled\": false\n    }\n}"
        },
        {
          "name": "release_notes.md",
          "type": "blob",
          "size": 0.6396484375,
          "content": "### Release notes\n\n<!-- Please add your release notes in the following format:\n- My change description (#PR)\n-->\n\n- Allow for an output binding value of an invocation result to be null (#10698)\n- Updated dotnet-isolated worker to 1.0.12.\n  - [Corrected the path for the prelaunch app location.](https://github.com/Azure/azure-functions-dotnet-worker/pull/2897)\n  - [Added net9 prelaunch app.](https://github.com/Azure/azure-functions-dotnet-worker/pull/2898)\n- Update the `DefaultHttpProxyService` to better handle client disconnect scenarios (#10688)\n  - Replaced `InvalidOperationException` with `HttpForwardingException` when there is a ForwarderError\n"
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "schemas",
          "type": "tree",
          "content": null
        },
        {
          "name": "src.ruleset",
          "type": "blob",
          "size": 2.728515625,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RuleSet Name=\"WebJobs SDK\" Description=\"This rule set contains the rules that applies to sources\" ToolsVersion=\"15.0\">\n  <IncludeAll Action=\"Error\" />\n  <Rules AnalyzerId=\"Microsoft.Analyzers.ManagedCodeAnalysis\" RuleNamespace=\"Microsoft.Rules.Managed\">\n    <Rule Id=\"CA1006\" Action=\"None\" />\n    <Rule Id=\"CA1020\" Action=\"None\" />\n    <Rule Id=\"CA1024\" Action=\"None\" />\n    <Rule Id=\"CA1026\" Action=\"None\" />\n    <Rule Id=\"CA1031\" Action=\"None\" />\n    <Rule Id=\"CA1033\" Action=\"None\" />\n    <Rule Id=\"CA1062\" Action=\"None\" />\n    <Rule Id=\"CA1303\" Action=\"None\" />\n    <Rule Id=\"CA1305\" Action=\"None\" />\n    <Rule Id=\"CA1307\" Action=\"None\" />\n    <Rule Id=\"CA1308\" Action=\"None\" />\n    <Rule Id=\"CA1506\" Action=\"None\" />\n    <Rule Id=\"CA1726\" Action=\"None\" />\n    <Rule Id=\"CA1800\" Action=\"None\" />\n    <Rule Id=\"CA2204\" Action=\"None\" />\n    <Rule Id=\"CA2210\" Action=\"None\" />\n    <Rule Id=\"CA2243\" Action=\"None\" />\n    <Rule Id=\"CA904\" Action=\"None\" />\n    <Rule Id=\"CA905\" Action=\"None\" />\n    <Rule Id=\"CA908\" Action=\"None\" />\n    <Rule Id=\"CS0618\" Action=\"None\" />\n  </Rules>\n  <Rules AnalyzerId=\"StyleCop.Analyzers\" RuleNamespace=\"StyleCop.Analyzers\">\n    <Rule Id=\"SA0001\" Action=\"None\" />\n    <Rule Id=\"SA1005\" Action=\"None\" />\n    <Rule Id=\"SA1101\" Action=\"None\" />\n    <Rule Id=\"SA1116\" Action=\"None\" />\n    <Rule Id=\"SA1117\" Action=\"None\" />\n    <Rule Id=\"SA1127\" Action=\"None\" />\n    <Rule Id=\"SA1128\" Action=\"None\" />\n    <Rule Id=\"SA1139\" Action=\"None\" />\n    <Rule Id=\"SA1202\" Action=\"None\" />\n    <Rule Id=\"SA1204\" Action=\"None\" />\n    <Rule Id=\"SA1308\" Action=\"None\" />\n    <Rule Id=\"SA1309\" Action=\"None\" />\n    <Rule Id=\"SA1314\" Action=\"None\" />\n    <Rule Id=\"SA1402\" Action=\"None\" />\n    <Rule Id=\"SA1404\" Action=\"None\" />\n    <Rule Id=\"SA1405\" Action=\"None\" />\n    <Rule Id=\"SA1413\" Action=\"None\" />\n    <Rule Id=\"SA1502\" Action=\"None\" />\n    <Rule Id=\"SA1512\" Action=\"None\" />\n    <Rule Id=\"SA1513\" Action=\"None\" />\n    <Rule Id=\"SA1611\" Action=\"None\" />\n    <Rule Id=\"SA1615\" Action=\"None\" />\n    <Rule Id=\"SA1618\" Action=\"None\" />\n    <Rule Id=\"SA1515\" Action=\"None\" />\n  </Rules>\n  <Rules AnalyzerId=\"xunit.analyzers\" RuleNamespace=\"xunit.analyzers\">\n    <Rule Id=\"xUnit1004\" Action=\"None\" />\n    <Rule Id=\"xUnit2013\" Action=\"Hidden\" />\n    <Rule Id=\"xUnit2009\" Action=\"Hidden\" />\n    <Rule Id=\"xUnit2004\" Action=\"Hidden\" />\n    <Rule Id=\"xUnit1013\" Action=\"None\" />\n    <Rule Id=\"xUnit2015\" Action=\"None\" />\n    <Rule Id=\"xUnit2000\" Action=\"None\" />\n    <Rule Id=\"xUnit2018\" Action=\"None\" />\n    <Rule Id=\"xUnit2003\" Action=\"None\" />\n    <Rule Id=\"xUnit2017\" Action=\"Hidden\" />\n    <Rule Id=\"xUnit2002\" Action=\"None\" />\n    <Rule Id=\"xUnit2005\" Action=\"None\" />\n    <Rule Id=\"xUnit2012\" Action=\"None\" />\n  </Rules>\n</RuleSet>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stylecop.json",
          "type": "blob",
          "size": 1.033203125,
          "content": "ï»¿{\n  // ACTION REQUIRED: This file was automatically added to your project, but it\n  // will not take effect until additional steps are taken to enable it. See the\n  // following page for additional information:\n  //\n  // https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/EnableConfiguration.md\n\n  \"$schema\": \"https://raw.githubusercontent.com/DotNetAnalyzers/StyleCopAnalyzers/master/StyleCop.Analyzers/StyleCop.Analyzers/Settings/stylecop.schema.json\",\n  \"settings\": {\n    \"documentationRules\": {\n      \"companyName\": \".NET Foundation\",\n      \"copyrightText\": \"Copyright (c) .NET Foundation. All rights reserved.\\r\\nLicensed under the MIT License. See License.txt in the project root for license information.\",\n      \"xmlHeader\": false,\n      \"documentInterfaces\": false,\n      \"documentInternalElements\": false,\n      \"documentExposedElements\": false,\n      \"documentPrivateElements\": false,\n      \"documentPrivateFields\": false\n    },\n    \"orderingRules\": {\n      \"usingDirectivesPlacement\": \"outsideNamespace\"\n    }\n  }\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}