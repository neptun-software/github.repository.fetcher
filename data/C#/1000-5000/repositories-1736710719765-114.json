{
  "metadata": {
    "timestamp": 1736710719765,
    "page": 114,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/RulesEngine",
      "stars": 3761,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 5.9306640625,
          "content": "# Rules in this file were initially inferred by Visual Studio IntelliCode from the C:\\Users\\abcy\\source\\repos\\RulesEngine codebase based on best match to current usage at 22-12-2020\n# You can modify the rules from these initially generated values to suit your own policies\n# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference\n[*.cs]\n\n\n#Core editorconfig formatting - indentation\n\n#use soft tabs (spaces) for indentation\nindent_style = space\n\n#Formatting - indentation options\n\n#indent switch case contents.\ncsharp_indent_case_contents = true\n#indent switch labels\ncsharp_indent_switch_labels = true\n\n#Formatting - new line options\n\n#place catch statements on a new line\ncsharp_new_line_before_catch = true\n#place else statements on a new line\ncsharp_new_line_before_else = true\n#require members of anonymous types to be on separate lines\ncsharp_new_line_before_members_in_anonymous_types = true\n#require members of object intializers to be on separate lines\ncsharp_new_line_before_members_in_object_initializers = true\n#require braces to be on a new line for methods, control_blocks, and types (also known as \"Allman\" style)\ncsharp_new_line_before_open_brace = methods, control_blocks, types\n\n#Formatting - organize using options\n\n#do not place System.* using directives before other using directives\ndotnet_sort_system_directives_first = false\n\n#Formatting - spacing options\n\n#require NO space between a cast and the value\ncsharp_space_after_cast = false\n#require a space before the colon for bases or interfaces in a type declaration\ncsharp_space_after_colon_in_inheritance_clause = true\n#require a space after a keyword in a control flow statement such as a for loop\ncsharp_space_after_keywords_in_control_flow_statements = true\n#require a space before the colon for bases or interfaces in a type declaration\ncsharp_space_before_colon_in_inheritance_clause = true\n#remove space within empty argument list parentheses\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\n#remove space between method call name and opening parenthesis\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\n#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call\ncsharp_space_between_method_call_parameter_list_parentheses = false\n#remove space within empty parameter list parentheses for a method declaration\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\n#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\n\n#Formatting - wrapping options\n\n#leave code block on single line\ncsharp_preserve_single_line_blocks = true\n#leave statements and member declarations on the same line\ncsharp_preserve_single_line_statements = true\n\n#Style - Code block preferences\n\n#prefer curly braces even for one line of code\ncsharp_prefer_braces = true:suggestion\n\n#Style - expression bodied member options\n\n#prefer block bodies for constructors\ncsharp_style_expression_bodied_constructors = false:suggestion\n#prefer block bodies for methods\ncsharp_style_expression_bodied_methods = false:suggestion\n\n#Style - expression level options\n\n#prefer out variables to be declared inline in the argument list of a method call when possible\ncsharp_style_inlined_variable_declaration = true:suggestion\n#prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them\ndotnet_style_predefined_type_for_member_access = true:suggestion\n\n#Style - Expression-level  preferences\n\n#prefer objects to be initialized using object initializers when possible\ndotnet_style_object_initializer = true:suggestion\n#prefer inferred anonymous type member names\ndotnet_style_prefer_inferred_anonymous_type_member_names = false:suggestion\n\n#Style - implicit and explicit types\n\n#prefer var over explicit type in all cases, unless overridden by another code style rule\ncsharp_style_var_elsewhere = true:suggestion\n#prefer var is used to declare variables with built-in system types such as int\ncsharp_style_var_for_built_in_types = true:suggestion\n#prefer var when the type is already mentioned on the right-hand side of a declaration expression\ncsharp_style_var_when_type_is_apparent = true:suggestion\n\n#Style - language keyword and framework type options\n\n#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\n\n#Style - Miscellaneous preferences\n\n#prefer anonymous functions over local functions\ncsharp_style_pattern_local_over_anonymous_function = false:suggestion\n\n#Style - modifier options\n\n#prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion\n\n#Style - Modifier preferences\n\n#when this rule is set to a list of modifiers, prefer the specified ordering.\ncsharp_preferred_modifier_order = public,private,internal,readonly,static,async,override,sealed:suggestion\n\n#Style - qualification options\n\n#prefer fields not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_field = false:suggestion\n#prefer methods not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_method = false:suggestion\n#prefer properties not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_property = false:suggestion\n\n\n#file header\n[*.{cs,vb}]\nfile_header_template = Copyright (c) Microsoft Corporation.\\nLicensed under the MIT License.\nfile_header_template_style = prepend:error\nfile_header_template_style = replace:suggestion\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.5654296875,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n**/Properties/launchSettings.json\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk \n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output \nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder \n.mfractor/\n/src/RulesEngine/RulesEngine.sln.licenseheader\n/assets/RulesEnginePackageFile.xml\ncoveragereport/\n\nsrc/**/*.snk\n\ndist"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.015625,
          "content": "# CHANGELOG\n\nAll notable changes to this project will be documented in this file.\n\n## [5.0.3]\n- Updated dependencies to latest\n- Fixed RulesEngine throwing exception when type name is same as input name\n- Added config to disable FastCompile for expressions\n- Added RuleParameter.Create method for better handling on types when value is null\n\n## [5.0.2]\n- Fixed Scoped Params returning incorrect results in some corner case scenarios\n\n## [5.0.1]\n- Added option to disable automatic type registry for input parameters in reSettings\n- Added option to make expression case sensitive in reSettings\n\n## [5.0.0]\n- Fixed security bug related to System.Dynamic.Linq.Core\n\n### Breaking Changes\n- As a part of security bug fix, method call for only registered types via reSettings will be allowed. This only impacts strongly typed inputs and nested types\n\n\n## [4.0.0]\n- RulesEngine is now available in both dotnet 6 and netstandard 2.0\n- Dependency on ILogger, MemoryCache have been removed \n- Obsolete Properties and Methods have been removed\n- Fixed name of RuleParameter is ignored if the type is recognized (by @peeveen)\n### Breaking Changes\n- ILogger has been removed from RulesEngine and all its constructors\n```diff\n- RulesEngine(string[] jsonConfig, ILogger logger = null, ReSettings reSettings = null)\n+ RulesEngine(string[] jsonConfig, ReSettings reSettings = null)\n\n- RulesEngine(Workflow[] Workflows, ILogger logger = null, ReSettings reSettings = null)\n+ RulesEngine(Workflow[] Workflows, ReSettings reSettings = null)\n\n- RulesEngine(ILogger logger = null, ReSettings reSettings = null)\n+ RulesEngine(ReSettings reSettings = null)\n```\n- Obsolete methods and properties have been removed, from the follow models:-\n\t- RuleResultTree\n\t\t- `ToResultTreeMessages()` has been removed from `RuleResultTree` model\n\t\t- `GetMessages()` has been removed from `RuleResultTree` model\n\t\t- `RuleEvaluatedParams` has been removed from `RuleResultTree` model, Please use `Inputs` instead\n\n\t- Workflow\n\t\t- `WorkflowRulesToInject` has been removed, Please use `WorkflowsToInject` instead\n\t\t- `ErrorType` has been removed from `Rule`\n\n\t- Resettings\n\t\t- `EnableLocalParams` has been removed from `ReSettings`, Please use `EnableScopedParams` instead\n\t\n\n## [3.5.0]\n- `EvaluateRule` action now support custom inputs and filtered inputs\n- Added `ContainsWorkflow` method in RulesEngine (by @okolobaxa)\n- Fixed minor bugs (#258 & #259)\n\n## [3.4.0]\n- Made RulesEngine Strong Name and Authenticode signed\n- Renamed few models to streamline names (by @alexrich)\n\t- `WorkflowRules` is renamed to `Workflow`\n\t- `WorkflowRulesToInject` is renamed to `WorkflowsToInject`\n\t- `RuleAction` is renamed to `RuleActions`\n\t\n\t**Note**: The old models are still supported but will be removed with version 4.0.0\n\n\n## [3.3.0]\n- Added support for actions in nested rules\n- Improved serialization support for System.Text.Json for workflow model\n  \nBreaking Change:\n  - Type of Action has been changed from `Dictionary<ActionTriggerType, ActionInfo>` to `RuleActions`\n    - No impact if you are serializing workflow from json\n    - For workflow objects created in code, refer - [link](https://github.com/microsoft/RulesEngine/pull/182/files#diff-a5093dda2dcc1e4958ce3533edb607bb61406e1f0a9071eca4e317bdd987c0d3)\n\n## [3.2.0]\n- Added AddOrUpdateWorkflow method to update workflows atomically (by @AshishPrasad)\n- Updated dependencies to latest\n\nBreaking Change:\n  - `AddWorkflow` now throws exception if you try to add a workflow which already exists.\n  Use `AddOrUpdateWorkflow` to update existing workflow\n\n## [3.1.0]\n- Added globalParams feature which can be applied to all rules\n- Enabled localParams support for nested Rules\n- Made certain fields in Rule model optional allowing users to define workflow with minimal fields\n- Added option to disable Rule in workflow json\n- Added `GetAllRegisteredWorkflow` to RulesEngine to return all registered workflows\n- Runtime errors for expressions will now be logged as errorMessage instead of throwing Exceptions by default\n- Fixed RuleParameter passed as null\n\n## [3.0.2]\n- Fixed LocalParams cache not getting cleaned up when RemoveWorkflows and ClearWorkflows are called\n\n## [3.0.1]\n- Moved ActionResult and ActionRuleResult under RulesEngine.Models namespace\n\n\n## [3.0.0]\n### Major Enhancements\n- Added support for Actions. More details on [actions wiki](https://github.com/microsoft/RulesEngine/wiki/Actions)\n- Major performance improvement\n\t- 25% improvement from previous version\n\t- Upto 35% improvement by disabling optional features\n- RulesEngine now virtually supports unlimited inputs (Previous limitation was 16 inputs)\n- RuleExpressionParser is now available to use expression evaluation outside RulesEngine\n\n### Breaking Changes\n- `ExecuteRule` method has been renamed to `ExecuteAllRulesAsync`\n- `Input` field in RuleResultTree has been changed to `Inputs` which returns all the the inputs as Dictionary of name and value pair\n\n## [2.1.5] - 02-11-2020\n- Added `Properties` field to Rule to allow custom fields to Rule\n\n## [2.1.4] - 15-10-2020\n- Added exception data properties to identify RuleName.\n\n## [2.1.3] - 12-10-2020\n- Optional parameter for rethrow exception on failure of expression compilation.\n\n## [2.1.2] - 02-10-2020\n- Fixed binary expression requirement. Now any expression will work as long as it evalutes to boolean.\n\n## [2.1.1] - 01-09-2020\n- Fixed exception thrown when errormessage field is null\n- Added better messaging when identifier is not found in expression\n- Fixed other minor bugs\n\n## [2.1.0] - 18-05-2020\n- Adding local param support to make expression authroing more intuitive.\n\n## [2.0.0] - 18-05-2020\n### Changed\n- Interface simplified by removing redundant parameters in the IRulesEngine.\n- Custom Logger replaced with Microsoft Logger.\n\n## [1.0.2] - 16-01-2020\n### Added\n- Cache system added so that rules compilation is stored and thus made more efficient.\n\n### Fix\n- Concurrency issue which arose by dictionary was resolved.\n\n## [1.0.1] - 24-09-2019\n### Added\n- Exceptions handling scenario in the case a rule execution throws an exception \n\n## [1.0.0] - 20-08-2019\n\n### Added\n- The first version of the NuGet\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.43359375,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1142578125,
          "content": "    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.890625,
          "content": "# Rules Engine\n![build](https://github.com/microsoft/RulesEngine/workflows/build/badge.svg?branch=main)\n[![Coverage Status](https://coveralls.io/repos/github/microsoft/RulesEngine/badge.svg?branch=main)](https://coveralls.io/github/microsoft/RulesEngine?branch=main)\n[![Nuget download][download-image]][download-url]\n\n[download-image]: https://img.shields.io/nuget/dt/RulesEngine\n[download-url]: https://www.nuget.org/packages/RulesEngine/\n\n## Overview\n\nRules Engine is a library/NuGet package for abstracting business logic/rules/policies out of a system. It provides a simple way of giving you the ability to put your rules in a store outside the core logic of the system, thus ensuring that any change in rules don't affect the core system.\n\n## Installation\n\nTo install this library, download the latest version of [NuGet Package](https://www.nuget.org/packages/RulesEngine/) from [nuget.org](https://www.nuget.org/) and refer it into your project.  \n\n## How to use it\n\nThere are several ways to populate workflows for the Rules Engine as listed below.\n\nYou need to store the rules based on the [schema definition](https://github.com/microsoft/RulesEngine/blob/main/schema/workflow-schema.json) given and they can be stored in any store as deemed appropriate like Azure Blob Storage, Cosmos DB, Azure App Configuration, [Entity Framework](https://github.com/microsoft/RulesEngine#entity-framework), SQL Servers, file systems etc. For RuleExpressionType `LambdaExpression`, the rule is written as a [lambda expressions](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/lambda-expressions).\n\nAn example rule:\n\n```json\n[\n  {\n    \"WorkflowName\": \"Discount\",\n    \"Rules\": [\n      {\n        \"RuleName\": \"GiveDiscount10\",\n        \"SuccessEvent\": \"10\",\n        \"ErrorMessage\": \"One or more adjust rules failed.\",\n        \"ErrorType\": \"Error\",\n        \"RuleExpressionType\": \"LambdaExpression\",\n        \"Expression\": \"input1.country == \\\"india\\\" AND input1.loyaltyFactor <= 2 AND input1.totalPurchasesToDate >= 5000\"\n      },\n      {\n        \"RuleName\": \"GiveDiscount20\",\n        \"SuccessEvent\": \"20\",\n        \"ErrorMessage\": \"One or more adjust rules failed.\",\n        \"ErrorType\": \"Error\",\n        \"RuleExpressionType\": \"LambdaExpression\",\n        \"Expression\": \"input1.country == \\\"india\\\" AND input1.loyaltyFactor >= 3 AND input1.totalPurchasesToDate >= 10000\"\n      }\n    ]\n  }\n]\n```\n\nYou can inject the rules into the Rules Engine by initiating an instance by using the following code - \n\n```c#\nvar rulesEngine = new RulesEngine(workflow);\n```\nHere, *workflow* is a list of deserialized objects based on the schema explained above\nOnce initialised, the Rules Engine needs to execute the rules for a given input. This can be done by calling the method `ExecuteAllRulesAsync`: \n\n```c#\nList<RuleResultTree> response = await rulesEngine.ExecuteAllRulesAsync(workflowName, input);\n```\n\nHere, *workflowName* is the name of the workflow, which is *Discount* in the above mentioned example. And *input* is the object which needs to be checked against the rules,  which itself may consist of a list of class instances.\n\nThe *response* will contain a list of [*RuleResultTree*](https://github.com/microsoft/RulesEngine/wiki/Getting-Started#ruleresulttree) which gives information if a particular rule passed or failed. \n\n_Note: A detailed example showcasing how to use Rules Engine is explained in [Getting Started page](https://github.com/microsoft/RulesEngine/wiki/Getting-Started) of [Rules Engine Wiki](https://github.com/microsoft/RulesEngine/wiki)._\n\n_A demo app for the is available at [this location](https://github.com/microsoft/RulesEngine/tree/main/demo)._\n\n### Basic\n\nA simple example via code only is as follows:\n\n```c#\nList<Rule> rules = new List<Rule>();\n\nRule rule = new Rule();\nrule.RuleName = \"Test Rule\";\nrule.SuccessEvent = \"Count is within tolerance.\";\nrule.ErrorMessage = \"Over expected.\";\nrule.Expression = \"count < 3\";\nrule.RuleExpressionType = RuleExpressionType.LambdaExpression;\nrules.Add(rule);\n\nvar workflows = new List<Workflow>();\n\nWorkflow exampleWorkflow = new Workflow();\nexampleWorkflow.WorkflowName = \"Example Workflow\";\nexampleWorkflow.Rules = rules;\n\nworkflows.Add(exampleWorkflow);\n\nvar bre = new RulesEngine.RulesEngine(workflows.ToArray());\n```\n### Entity Framework\n\nConsuming Entity Framework and populating the Rules Engine is shown in the [EFDemo class](https://github.com/microsoft/RulesEngine/blob/main/demo/DemoApp/EFDemo.cs) with Workflow rules populating the array and passed to the Rules Engine, The Demo App includes an example [RulesEngineDemoContext](https://github.com/microsoft/RulesEngine/blob/main/demo/DemoApp.EFDataExample/RulesEngineDemoContext.cs) using SQLite and could be swapped out for another provider.\n\n```c#\nvar wfr = db.Workflows.Include(i => i.Rules).ThenInclude(i => i.Rules).ToArray();\nvar bre = new RulesEngine.RulesEngine(wfr, null);\n```\n\n*Note: For each level of nested rules expected, a ThenInclude query appended will be needed as shown above.*\n\n## How it works\n\n![](https://github.com/microsoft/RulesEngine/blob/main/assets/BlockDiagram.png)\n\nThe rules can be stored in any store and be fed to the system in a structure which adheres to the [schema](https://github.com/microsoft/RulesEngine/blob/main/schema/workflow-schema.json) of WorkFlow model.\n\nA wrapper needs to be created over the Rules Engine package, which will get the rules and input message(s) from any store that your system dictates and put it into the Engine. The wrapper then handles the output using appropriate means.\n\n_Note: To know in detail of the workings of Rules Engine, please visit [How it works section](https://github.com/microsoft/RulesEngine/wiki/Introduction#how-it-works) in [Rules Engine Wiki](https://github.com/microsoft/RulesEngine/wiki)._\n\n## 3rd Party Tools\n\n### RulesEngine Editor\nThere is an editor library with it's own [NuGet Package](https://www.nuget.org/packages/RulesEngineEditor/) written in Blazor, more information is in it's repo https://github.com/alexreich/RulesEngineEditor. \n\n#### Live Demo\nhttps://alexreich.github.io/RulesEngineEditor  \n> This can also be installed as a standalone PWA and used offline.\n\n#### With Sample Data\nhttps://alexreich.github.io/RulesEngineEditor/demo\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n---\n\n_For more details please check out [Rules Engine Wiki](https://github.com/microsoft/RulesEngine/wiki)._\n"
        },
        {
          "name": "RulesEngine.sln",
          "type": "blob",
          "size": 3.7978515625,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.31717.71\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"RulesEngine\", \"src\\RulesEngine\\RulesEngine.csproj\", \"{CD4DFE6A-083B-478E-8377-77F474833E30}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"RulesEngine.UnitTest\", \"test\\RulesEngine.UnitTest\\RulesEngine.UnitTest.csproj\", \"{50E0C2A5-E2C8-4B12-8C0E-B69F698A82BF}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"DemoApp\", \"demo\\DemoApp\\DemoApp.csproj\", \"{57BB8C07-799A-4F87-A7CC-D3D3F694DD02}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{CD4DFE6A-083B-478E-8377-77F474833E30} = {CD4DFE6A-083B-478E-8377-77F474833E30}\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{019DF693-8442-45B4-88C3-55CB7AFCB42E}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\tCHANGELOG.md = CHANGELOG.md\n\t\tglobal.json = global.json\n\t\tREADME.md = README.md\n\t\tschema\\workflow-list-schema.json = schema\\workflow-list-schema.json\n\t\tschema\\workflow-schema.json = schema\\workflow-schema.json\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"RulesEngineBenchmark\", \"benchmark\\RulesEngineBenchmark\\RulesEngineBenchmark.csproj\", \"{C058809F-C720-4EFC-925D-A486627B238B}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{CD4DFE6A-083B-478E-8377-77F474833E30} = {CD4DFE6A-083B-478E-8377-77F474833E30}\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"DemoApp.EFDataExample\", \"demo\\DemoApp.EFDataExample\\DemoApp.EFDataExample.csproj\", \"{E376D3E6-6890-4C09-9EA0-3EFD9C1E036D}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{CD4DFE6A-083B-478E-8377-77F474833E30}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CD4DFE6A-083B-478E-8377-77F474833E30}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CD4DFE6A-083B-478E-8377-77F474833E30}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CD4DFE6A-083B-478E-8377-77F474833E30}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{50E0C2A5-E2C8-4B12-8C0E-B69F698A82BF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{50E0C2A5-E2C8-4B12-8C0E-B69F698A82BF}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{50E0C2A5-E2C8-4B12-8C0E-B69F698A82BF}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{50E0C2A5-E2C8-4B12-8C0E-B69F698A82BF}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{57BB8C07-799A-4F87-A7CC-D3D3F694DD02}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{57BB8C07-799A-4F87-A7CC-D3D3F694DD02}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{57BB8C07-799A-4F87-A7CC-D3D3F694DD02}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{57BB8C07-799A-4F87-A7CC-D3D3F694DD02}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C058809F-C720-4EFC-925D-A486627B238B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C058809F-C720-4EFC-925D-A486627B238B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C058809F-C720-4EFC-925D-A486627B238B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C058809F-C720-4EFC-925D-A486627B238B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E376D3E6-6890-4C09-9EA0-3EFD9C1E036D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E376D3E6-6890-4C09-9EA0-3EFD9C1E036D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E376D3E6-6890-4C09-9EA0-3EFD9C1E036D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E376D3E6-6890-4C09-9EA0-3EFD9C1E036D}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {E1F2EC8E-4005-4DFE-90ED-296D4592867A}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.71484375,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.5 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc751383(v=technet.10)), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/en-us/msrc/pgp-key-msrc).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/en-us/msrc/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.1044921875,
          "content": "{\n  \"sdk\": {\n    \"version\": \"8.0.0\",\n    \"rollForward\": \"latestFeature\",\n    \"allowPrerelease\": false\n  }\n}"
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "signing",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}