{
  "metadata": {
    "timestamp": 1736711122405,
    "page": 959,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alelievr/HDRP-Custom-Passes",
      "stars": 1328,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4521484375,
          "content": "[Ll]ibrary/\n[Tt]emp/\n[Oo]bj/\n[Bb]uild/\n[Bb]uilds/\n[Ll]ogs/\nAssets/AssetStoreTools*\n\n# Visual Studio cache directory\n.vs/\n\n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n*.opendb\n\n# Unity3D generated meta files\n*.pidb.meta\n*.pdb.meta\n\n# Unity3D Generated File On Crash Reports\nsysinfo.txt\n\n# Builds\n*.apk\n*.unitypackage\nUserSettings\nLogs\n.idea\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vsconfig",
          "type": "blob",
          "size": 0.0986328125,
          "content": "ï»¿{\n  \"version\": \"1.0\",\n  \"components\": [ \n    \"Microsoft.VisualStudio.Workload.ManagedGame\"\n  ]\n} \n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "MIT License\n\nCopyright (c) 2019 Antoine Lelievre\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.1162109375,
          "content": "# HDRP-Custom-Passes\nA bunch of custom passes made for HDRP. This project have been setup for Unity 2022.3 version with HDRP 14.x.\n\nIf you're looking for older versions, you can find them in the git branches: [2020.2/3](https://github.com/alelievr/HDRP-Custom-Passes/tree/2020.2), [2021.2/3](https://github.com/alelievr/HDRP-Custom-Passes/tree/2021.2).\n\n## TIPS Effect:\n\nFeatures:\n+ Edge detect\n+ Draw Mesh\n+ Compositing with fullscreen pass\n\nSource file link for this effect: [TIPS.cs](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/TIPS/TIPS.cs) and [TIPS.shader](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/TIPS/Resources/TIPS.shader)\n\n![TIPS_Effect](https://user-images.githubusercontent.com/6877923/65622342-c9e09200-dfc5-11e9-9625-02ce78c75b11.gif)\n![TIPS_Effect_Size](https://user-images.githubusercontent.com/6877923/65622971-124c7f80-dfc7-11e9-8e5c-9c9069877223.gif)\n![TIPS_Effect_Color](https://user-images.githubusercontent.com/6877923/65623107-5b043880-dfc7-11e9-9bcc-426895ca09ba.gif)\n\n## Slight Blur Effect:\n\nFeatures:\n+ 2 Pass gaussian blur and a downscale\n+ Masking to not blur certain part of the screen using meshes\n\nSource file link for this effect: [SlightBlur.cs](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/SlightBlur/SlightBlur.cs) and [Blur.shader](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/SlightBlur/Resources/CompositeBlur.shader)\n![SlightBlur](https://user-images.githubusercontent.com/6877923/66118285-47179280-e5d6-11e9-9d92-1e7cc844bf03.gif)\n\n## Outline Effect:\n\nSource file link for this effect: [02_Selection_Objects.shader](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/Selection/Shaders/02_Selection_Objects.shader) and [02_Selection_Fullscreen.shader](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/Selection/Shaders/02_Selection_Fullscreen.shader)\n\nEffect made without custom C#, setup in the inspector: \n![image](https://user-images.githubusercontent.com/6877923/66144393-0b49f080-e609-11e9-8251-368c8fabe548.png)\n\n![OutlineThickness](https://user-images.githubusercontent.com/6877923/66143724-f02ab100-e607-11e9-9fbf-af639112d17a.gif)\n![OutlineColor2](https://user-images.githubusercontent.com/6877923/66144282-d89ff800-e608-11e9-8f57-29604e404916.gif)\n\n## See Through Effect:\n\nSource file link for this effect: [SeeThrough.cs](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/SeeThrough/SeeThrough.cs) and [SeeThroughStencil.shader](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/SeeThrough/SeeThroughStencil.shader)\n![SeeThrough](https://user-images.githubusercontent.com/6877923/87780070-37e49700-c82e-11ea-9d03-d5ce2a4410c6.gif)\n\n\n## AR Effect:\n\nFeatures:\n+ Early depth pass\n+ Composite with video in background\n\n![AR](https://user-images.githubusercontent.com/32760367/66135092-ac30af80-e5f9-11e9-89bf-b534ac1443bc.png)\n\n## Glitch Effect:\n\nFeatures:\n+ Display a \"bad reception\" effect over objects of specified layer, using the following shader:\n![SS_Glitch](https://user-images.githubusercontent.com/32760367/66395699-63ea0680-e9d8-11e9-88d3-d9b2e6f71837.png)\n\n![Glitch](https://user-images.githubusercontent.com/32760367/66395665-4f0d7300-e9d8-11e9-812e-4f913405addc.gif)\n\n## Scrolling Formulas Effect:\n\nFeatures:\n+ Uses a builtin fullscreen custom pass and a custom pass fullscreen shader\n+ Triplanar mapping\n![ScrollingFormulas](https://user-images.githubusercontent.com/6877923/67881514-eb8ee500-fb40-11e9-9545-b2b71bd44e6e.gif)\n\n## Liquid\n\nFeatures:\n+ Meta balls made by bluring normals\n+ Visual Effect Graph inside a custom pass\n+ Overriding depth and normals of a fullscreen transparent to emulate a surface\n![Liquid](https://user-images.githubusercontent.com/6877923/68505769-57233180-0268-11ea-9137-6983e859d214.gif)\n\n## Glass\n\nFeatures:\n+ Thickness aproximation using a custom pass rendering backfaces in custom depth\n![image](https://user-images.githubusercontent.com/32760367/68871276-76a0db00-06fc-11ea-9f97-db4c7b98dac1.png)\n\n## Depth Capture\n\nFeatures:\n+ Render objects from a different camera and output their depth in a depth buffer\n+ Source code: [CameraDepthBake.cs](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/Scenes/CameraDepthBaking/CameraDepthBake.cs)\n![image](https://user-images.githubusercontent.com/6877923/69529388-7dd3ae80-0f70-11ea-97f9-95a60acedd8d.png)\n\n## Render With Normal Buffer\n\nRendering objects in the normal buffer is essential to make objects work with screen space effects. This example show how to create a custom pass that renders an object in the depth, normal and color buffer so the SSAO can correctly be applied (you can see the exagerated SSAO effect in this screenshot)\n\n![image](https://user-images.githubusercontent.com/6877923/94256977-e857d100-ff2a-11ea-84b9-79ff5c26c76b.png)\n\nAnd this is the same image without rendering the object to the normal buffer:  \n![image](https://user-images.githubusercontent.com/6877923/94257125-1b9a6000-ff2b-11ea-98d4-a592798a075b.png)\nAs you can see the SSAO is completely messed-up\n\n\nNote that because you need to render the object in both depth-prepass and forward pass, you need two custom passes volume with different injection points:  \n![image](https://user-images.githubusercontent.com/6877923/94257371-7cc23380-ff2b-11ea-8da8-895911a23103.png)\n\n## ScreenSpace Camera UI Blur\n\nThis effect blurs the camera color buffer and renders the screenspace UI on top of it. It is intended to be used in the after post process injection point\n![UI_blur](https://user-images.githubusercontent.com/6877923/99794633-c04fad00-2b2a-11eb-8cef-7f253599d5cb.gif)\n\nNote that this custom pass also avoid z test issues when doing this kind of as the transparent objects are rendered after everything.\n\n![image](https://user-images.githubusercontent.com/6877923/99796085-29382480-2b2d-11eb-89b8-73c1cd16af48.png)\n\n\n## Render Video Without TAA\n\nThis effect allows you to render an object (for example a video player) without TAA. It uses custom post processes to achieve this, so be sure to have the \"VideoPlaybackWithoutTAAPostProcess\" post process in your HDRP default settings:\n\n![image](https://user-images.githubusercontent.com/6877923/116881655-d1493200-ac23-11eb-9590-47e9a110f20e.png).\n\nAs you can see in the videos, this pass will remove all artifacts visible when an object doesn't have valid motion vector data (which is the case for most texture animation or video playback):\n\nWith TAA:\n\nhttps://user-images.githubusercontent.com/6877923/116881360-77e10300-ac23-11eb-8a19-f176d2364f11.mp4\n\nWithout TAA:\n\nhttps://user-images.githubusercontent.com/6877923/116881366-78799980-ac23-11eb-97b0-5f8aa18f9b3c.mp4\n\nBy default in this effect, the `fixDepthBufferJittering` field is disabled because it's a very costly operation (re-render all the objects in the scene into an unjittered depth buffer) but it allows to get rid of all TAA artifacts remaining after you add this effect (mainly depth jittering).\n\nCustom pass effect sources: [Assets/CustomPasses/Video Playback Without TAA](https://github.com/alelievr/HDRP-Custom-Passes/tree/master/Assets/CustomPasses/Video%20Playback%20Without%20TAA).\n\n## Render Object Motion Vectors\n\nRender the Object motion vectors (not camera motion vectors!) into a render texture\n![image](https://user-images.githubusercontent.com/6877923/116994966-c05af800-acd9-11eb-8534-f582600047d2.png)\n\nSources: [Assets/CustomPasses/RenderMotionVectors](https://github.com/alelievr/HDRP-Custom-Passes/tree/master/Assets/CustomPasses/RenderMotionVectors)\n\n## Copy Buffer\n\nCustom pass that can copy the following buffers to a render texture:\n- Color\n- Normal\n- Roughness\n- Depth\n- Motion Vectors\n\n![image](https://user-images.githubusercontent.com/6877923/124479199-524cb300-dda6-11eb-8525-9d009617327f.png)\n\nSource: [Assets/CustomPasses/CopyPass](https://github.com/alelievr/HDRP-Custom-Passes/tree/master/Assets/CustomPasses/CopyPass)\n\n## Screen Space Wetness\n\nEffect that modifies the normal and roughness buffers in screen space to give a \"wet\" effect to objects.\nSources: [Assets/CustomPasses/Wetness](https://github.com/alelievr/HDRP-Custom-Passes/tree/master/Assets/CustomPasses/Wetness)\n\nIt's also compatible with ShaderGraph using the SubGraph \"EncodeIntoToNormalBuffer\".\n\nhttps://user-images.githubusercontent.com/6877923/195407733-1e73b63c-5ba6-488f-829d-d4cb0d0b1412.mp4\n\n## Current Depth To Custom Depth\n\nDuing HDRP rendering, you only have access to the depth buffer that contains all opaque objects, the depth texture is not updated when rendering transparent with depth pre/post passes.\n\nThis custom pass copies the current camera depth (up to date with the current injection point) to the custom depth buffer. The custom depth buffer can then be sampled in a fullscreen shader graph using the custom depth node.\n\nSource file for this effect: [CurrentDepthToCustomDepth.cs](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/CurrentDepthToCustomDepth/CurrentDepthToCustomDepth.cs) and [CurrentDepthToCustomDepth.shader](https://github.com/alelievr/HDRP-Custom-Passes/blob/master/Assets/CustomPasses/CurrentDepthToCustomDepth/CurrentDepthToCustomDepth.shader).\n"
        },
        {
          "name": "UserSettings",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}