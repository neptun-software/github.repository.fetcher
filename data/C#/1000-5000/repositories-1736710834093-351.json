{
  "metadata": {
    "timestamp": 1736710834093,
    "page": 351,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Unity-Technologies/BoatAttack",
      "stars": 2581,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.53515625,
          "content": "*.psd filter=lfs diff=lfs merge=lfs -text\n*.png filter=lfs diff=lfs merge=lfs -text\n*.exr filter=lfs diff=lfs merge=lfs -text\n*.zip filter=lfs diff=lfs merge=lfs -text\n*.tiff filter=lfs diff=lfs merge=lfs -text\n*.tif filter=lfs diff=lfs merge=lfs -text\n*.raw filter=lfs diff=lfs merge=lfs -text\n*.fbx filter=lfs diff=lfs merge=lfs -text\n*.jpg filter=lfs diff=lfs merge=lfs -text\n*.wav filter=lfs diff=lfs merge=lfs -text\n*.obj filter=lfs diff=lfs merge=lfs -text\n*.aiff filter=lfs diff=lfs merge=lfs -text\n*.tga filter=lfs diff=lfs merge=lfs -text\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6640625,
          "content": "/[Ll]ibrary/\n/[Tt]emp/\n/[Oo]bj/\n/[Bb]uild/\n/[Bb]uilds/\n/Assets/AssetStoreTools*\n\n# Visual Studio 2015 cache directory\n/.vs/\n\n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n\n# Unity3D generated meta files\n*.pidb.meta\n\n# Unity3D Generated File On Crash Reports\nsysinfo.txt\n\n# Builds\n*.apk\n*.unitypackage\nAssets/_Ignore\n_Ignore.meta\n.idea\nLogs\nAssets/Plugins/Editor/JetBrains\nAssets/Plugins/Editor/JetBrains.meta\nRecordings\nPackages/com.unity.*\nMemoryCaptures\nAssets/BuildReports\nSerializedBuildInfo\nSwitchIL2CPP*\nAssets/ActualImages*\nPackages/packages-lock.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.4609375,
          "content": "Boat Attack copyright © 2018 Unity Technologies ApS\n\nLicensed under the Unity Companion License for Unity-dependent projects--see [Unity Companion License](http://www.unity3d.com/legal/licenses/Unity_Companion_License). \n\nUnless expressly provided otherwise, the Software under this license is made available strictly on an “AS IS” BASIS WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED. Please review the license for details on these and other terms and conditions.\n"
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.3984375,
          "content": "**_Note:This repository uses GitLFS, to use this repo you need to pull via Git and make sure GitLFS is installed locally_**\n\n# Boat Attack\n###### Demo Project using the Universal RP from Unity3D\n\n[![Click for Youtube Video](https://media.githubusercontent.com/media/Verasl/BoatAttack/release/2019.3/Assets/Textures/UI/welcome-title.png)](https://drive.google.com/file/d/1PTNdhnqbhzSWUCfAinIefP5cfr6Dezuw/view)\n\nThis Unity project has been created to aid the testing and development of Universal RP. The project is a small vertical slice of a boat racing game, complete with race-able boats and island environment.\n\nFeel free to post any issues, but know this is a 'as is' repo, it's meant more for discovery of how some of the Universal RP features work and a learning resource for some tricks.\n\n**Project Features**:\n  * Uses Universal RP from Unity\n  * Mobile optimized, low poly, LODs, no compute\n  * C# Jobs buoyancy system\n  * Cinemachine camera setups\n  * Shader Graph usage\n  * Post-processing v3 with Volume blending\n  * Addressables asset management package\n  * Custom Universal RP rendering for planar reflections via [SRP callbacks](https://docs.unity3d.com/ScriptReference/Rendering.RenderPipelineManager.html)\n  * Custom SciptableRenderPass usage for WaterFX and Caustics\n  * Gerstner based water system in local package(WIP)\n  * Much more..\n\n[Demo Footage](https://drive.google.com/file/d/1PTNdhnqbhzSWUCfAinIefP5cfr6Dezuw/view)\n\n# Usage\n\n#### Getting the project\nvia Git:\n  1. Make sure you have GitLFS installed, check [here](https://git-lfs.github.com) for details.\n  2. Clone the repo as usual via cmd/terminal or in your favourite Git GUI software.\n  3. Checkout the branch that matches the Unity verison you are using, eg `release/2019.3`\n\nDownloadable zips:\n  1. [2019.3 Project (Unity 2019.3f5)](https://drive.google.com/file/d/1vXpbVC36GHnyC-Eitl1WpLay9l_YqJGQ/view?usp=sharing)\n\n#### Load the project:\nOnce you have the project files locally you can load the project, ideally in the Unity version that is noted in the `ProjectSettings/ProjectVersion.txt` for the best experience.\nUpon loading the project will display a small welcome screen with some buttons to load starting scenes.\n\nScenes worth noting:\n - `scenes/main_menu.unity` - Starting menu scene if you want to have a full play-through of the demo.\n - `scenes/demo_island.unity` - Setup to play in the editor and go straight into an AI based race.\n - `scenes/_levels/level_Island.unity` - The scene loaded when entering from the main menu.\n - `scenes/Testing/***.unity` - Assorted test scenes, these are in need of updating and come as is.\n\n#### Build the project:\nOne thing to make sure you do before building is make sure to build the addressable assets, this can be done via the addressables window, for more information please checkout the addressables [package documentation](https://docs.unity3d.com/Packages/com.unity.addressables@latest).\nOnce the addressable assets are built you can continue to build a player as usual.\n\nOne thing to mention is not all controls and platforms have been tested, especially for the menu work. if you want to just see the project running on a device you can add the `scenes/demo_island.unity` scene to the build list and disable/remove the others.\n\n# Todo\n\nAs this project is on going there is a lot more left that needs to be worked on, so I repeat this is not a resource for production ready workflow ideas or systems and lots of it was put together very quickly.\n\nSome of the things left to do:\n * Make water system more modular and improve UX\n * Improve boat AI\n * Add imposter rendering for vegetation\n * Cleanup menu system to switch between Demoing/Playing/Benchmarking\n * Implement Unity Physics\n * Optimize cross platform performance and stability\n * Continue code cleanup\n * Wiki explaining features/systems in more depth\n * Add more sizzle....\n\n![Sunny Island](https://gdurl.com/STO1)\n\n# Credits\n[Andre McGrail](http://www.andremcgrail.com) - Design, Programming, Modeling, Textures, SFX\n\n[Alex Best](https://big_ally.artstation.com) - Modeling, Textures\n\n[Stintah](https://soundcloud.com/stintah) - Soundtrack\n\nSpecial thanks to:\n\n[Felipe Lira](https://github.com/phi-lira) - For Making Universal RP & LWRP\n\n[Tim Cooper](https://github.com/stramit) - Assorted SRP code help\n\nAnd thanks to many more who have helped with suggestions and feedback!\n\n# Notes\n\n*Make sure you clone the repo as downloading the zip will not contain the GitLFS files(all textures/meshes etc)\n"
        },
        {
          "name": "TestRunnerOptions.json",
          "type": "blob",
          "size": 0.03125,
          "content": "{\n    \"disableBatchMode\": true\n}"
        },
        {
          "name": "UserSettings",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}