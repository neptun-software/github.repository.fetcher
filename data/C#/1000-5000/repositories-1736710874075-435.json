{
  "metadata": {
    "timestamp": 1736710874075,
    "page": 435,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "reactjs/React.NET",
      "stars": 2303,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1748046875,
          "content": "# editorconfig.org\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = tab\ninsert_final_newline = true\n\n[*.json]\nindent_size = 2\nindent_style = space\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.052734375,
          "content": "* text eol=lf\n*.png binary\n*.exe binary\n*.dll binary\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.775390625,
          "content": "_old/\nsrc/SharedAssemblyVersionInfo.cs\n*.nupkg\n*.snupkg\nsrc/**/*.nuspec\n!src/template.nuspec\nsite/jekyll/_site\nsrc/React.Sample.Cassette/cassette-cache\nsrc/React.Sample.*/ClearScript.V8\nsrc/React.Sample.Webpack/build\n*.generated.js\n*.generated.js.map\n*.generated.min.js\n*.lock.json\n.vs/\nresults/\ndist/\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\nx64/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n*.ncrunch*\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# NuGet Packages Directory\npackages/\n## TODO: If the tool you use requires repositories.config uncomment the next line\n#!packages/repositories.config\n\n# Enable \"build/\" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets\n# This line needs to be after the ignore of the build folder (and the packages folder if the line above has been uncommented)\n!packages/build/\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.076171875,
          "content": "MIT License for ReactJS.NET\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9404296875,
          "content": "# [ReactJS.NET](http://reactjs.net/)\n\nReactJS.NET is a library that makes it easier to use [Babel](http://babeljs.io/) along with Facebook's [React](https://reactjs.org/) and [JSX](https://reactjs.org/docs/jsx-in-depth.html) from C#.\n\n![.NET Core Desktop](https://github.com/reactjs/React.NET/workflows/.NET%20Core%20Desktop/badge.svg)\n[![NuGet version](http://img.shields.io/nuget/v/React.Core.svg)](https://www.nuget.org/packages/React.Core/)\n[![Download count](https://img.shields.io/nuget/dt/React.Core.svg)](https://www.nuget.org/packages/React.Core/)\n\n# Features\n\n- On-the-fly [JSX to JavaScript compilation](http://reactjs.net/getting-started/usage.html) via [Babel](http://babeljs.io/)\n\n* JSX to JavaScript compilation via popular minification/combination\n  libraries:\n  - [ASP.NET Bundling and Minification](http://reactjs.net/bundling/weboptimizer.html)\n  - [Cassette](http://reactjs.net/bundling/cassette.html)\n  - [Webpack](http://reactjs.net/bundling/webpack.html)\n  - [MSBuild](http://reactjs.net/bundling/msbuild.html)\n* [Server-side component rendering](http://reactjs.net/features/server-side-rendering.html)\n  to make your initial render super-fast, including support for:\n  - [CSS-in-JS libraries](https://reactjs.net/features/css-in-js.html)\n  - [React Router](https://reactjs.net/features/react-router.html)\n  - [React Helmet](https://reactjs.net/features/react-helmet.html)\n  - Custom JS logic via implementing [IRenderFunctions](https://github.com/reactjs/React.NET/blob/c93921f059bfe9419ad7094c184979da422a4477/src/React.Core/IRenderFunctions.cs) and passing to [Html.React](https://github.com/reactjs/React.NET/blob/c93921f059bfe9419ad7094c184979da422a4477/src/React.AspNet/HtmlHelperExtensions.cs#L71)\n* [Runs on Windows, OS X and Linux](http://reactjs.net/getting-started/chakracore.html) via .NET Core and ChakraCore\n* Supports both ASP.NET 4.0/4.5 and ASP.NET Core\n\n# Quick Start\n\n```\ndotnet new -i React.Template\ndotnet new reactnet-vanilla\ndotnet run\n```\n\n#### Planning on using `require` or `import` module syntax in your application? Use the `reactnet-webpack` template instead for webpack support.\n\nSee also:\n\n- [Getting Started](https://reactjs.net/getting-started/aspnetcore.html)\n- [Tutorial](https://reactjs.net/tutorials/aspnetcore.html)\n\n## Building Manually and Contributing\n\nWhen building your own copy of ReactJS.NET (for example, if implementing a new\nfeature or fixing a bug), your first build always needs to be done using the\nbuild script (`dev-build.bat`) as this generates a few files required by the\nbuild (such as `SharedAssemblyVersionInfo.cs`). Once this build is completed,\nyou can open `React.sln` in Visual Studio and compile directly from Visual\nStudio. Please refer to the [documentation page on\ncontributing](http://reactjs.net/dev/contributing.html) for more information on\ncontributing to ReactJS.NET.\n\nNote that the build requires you to have Git installed. If you do not want to\ninstall Git, you may remove the `GitVersion` task from `build.proj`.\n"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 0.8720703125,
          "content": "trigger:\n    - main\n    - ci-updates\n\npool:\n    vmImage: 'windows-2019'\n\nvariables:\n    buildPlatform: 'Any CPU'\n    buildConfiguration: 'Release'\n    buildType: 'Release'\n\nsteps:\n    - task: NodeTool@0\n      inputs:\n          versionSpec: '10.x'\n\n    - script: npm install --global npm\n\n    - task: UseDotNet@2\n      displayName: 'Use .NET Core sdk'\n      inputs:\n        packageType: 'sdk'\n        version: '3.1.x'\n\n    - task: VSBuild@1\n      inputs:\n          solution: 'build.proj'\n          msbuildArgs: '/p:PackageOutputDir=\"$(build.artifactStagingDirectory)\"'\n          platform: '$(buildPlatform)'\n          configuration: '$(buildConfiguration)'\n\n    - task: DotNetCoreCLI@2\n      inputs:\n          command: 'test'\n          projects: 'tests/React.Tests/React.Tests.csproj'\n          arguments: '--no-build --configuration $(buildConfiguration)'\n\n    - task: PublishBuildArtifacts@1\n"
        },
        {
          "name": "build.proj",
          "type": "blob",
          "size": 6.9853515625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\nCopyright (c) 2014-Present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.\n-->\n<Project ToolsVersion=\"4.0\" DefaultTargets=\"Build;Test;Package\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n\t<PropertyGroup>\n\t\t<Major>5</Major>\n\t\t<Minor>2</Minor>\n\t\t<Build>13</Build>\n\t\t<Revision>0</Revision>\n\t\t<DevNuGetServer>http://reactjs.net/packages/</DevNuGetServer>\n\t\t<MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\\tools\\MSBuildTasks</MSBuildCommunityTasksPath>\n\t\t<PackageOutputDir>$(MSBuildProjectDirectory)\\output</PackageOutputDir>\n\t\t<BuildType Condition=\"'$(BuildType)' == ''\">Dev</BuildType>\n\n\t\t<SolutionFile>src\\React.sln</SolutionFile>\n\t</PropertyGroup>\n\t<ItemGroup>\n\t\t<PackageAssemblies Include=\"Cassette.React\" />\n\t\t<PackageAssemblies Include=\"React.AspNet\" />\n\t\t<PackageAssemblies Include=\"React.AspNet.Middleware\" />\n\t\t<PackageAssemblies Include=\"React.Core\" />\n\t\t<PackageAssemblies Include=\"React.MSBuild\" />\n\t\t<PackageAssemblies Include=\"React.Owin\" />\n\t\t<PackageAssemblies Include=\"React.Router\" />\n\t\t<PackageAssemblies Include=\"React.Router.Mvc4\" />\n\t\t<PackageAssemblies Include=\"React.Web\" />\n\t\t<PackageAssemblies Include=\"React.Web.Mvc4\" />\n\t\t<PackageAssemblies Include=\"React.Template\" />\n\t\t<PackageAssemblies Include=\"System.Web.Optimization.React\" />\n\t</ItemGroup>\n\n\t<Import Project=\"$(MSBuildProjectDirectory)\\tools\\MSBuildTasks\\MSBuild.Community.Tasks.Targets\" />\n\n\t<Target Name=\"RestorePackages\" DependsOnTargets=\"Clean;UpdateVersion\">\n\t\t<!-- NuGet packages for \"legacy\" projects (eg. React.Samples.Mvc4) -->\n\t\t<Exec\n\t\t\tWorkingDirectory=\"$(MSBuildProjectDirectory)\"\n\t\t\tCommand=\"tools\\NuGet\\nuget.exe restore $(SolutionFile)\"\n\t\t/>\n\t\t<!-- NuGet packages for modern .csproj projects -->\n\t\t<Exec\n\t\t\tWorkingDirectory=\"$(MSBuildProjectDirectory)\"\n\t\t\tCommand=\"dotnet restore $(SolutionFile) /p:Version=$(VersionString)\"\n\t\t/>\n\t\t<!-- npm packages -->\n\t\t<Exec\n\t\t\tWorkingDirectory=\"src/React.Core\"\n\t\t\tCommand=\"npm install\"\n\t\t/>\n\t\t<Exec\n\t\t\tWorkingDirectory=\"src/React.Core/Resources/babel-legacy\"\n\t\t\tCommand=\"npm install\"\n\t\t/>\n\t\t<Exec\n\t\t\tWorkingDirectory=\"src/React.Sample.Mvc4\"\n\t\t\tCommand=\"npm install\"\n\t\t/>\n\t</Target>\n\n\t<Target Name=\"UpdateVersion\">\n\t\t<GitVersion LocalPath=\"$(MSBuildProjectDirectory)\">\n\t\t\t<Output TaskParameter=\"CommitHash\" PropertyName=\"Revision\" />\n\t\t</GitVersion>\n\t\t<Time Format=\"yyyyMMdd-HHmm\">\n\t\t\t<Output TaskParameter=\"FormattedTime\" PropertyName=\"Date\" />\n\t\t</Time>\n\t\t<!-- Prepend date to build version if a dev build-->\n\t\t<PropertyGroup Condition=\"$(BuildType) == 'Release'\">\n\t\t\t<VersionString>$(Major).$(Minor).$(Build)</VersionString>\n\t\t</PropertyGroup>\n\t\t<PropertyGroup Condition=\"$(BuildType) != 'Release'\">\n\t\t\t<VersionString>$(Major).$(Minor).$(Build)-dev-$(Date)</VersionString>\n\t\t</PropertyGroup>\n\t\t<!-- Set version for assemblies -->\n\t\t<AssemblyInfo\n\t\t\tCodeLanguage=\"CS\"\n\t\t\tOutputFile=\"src\\SharedAssemblyVersionInfo.cs\"\n\t\t\tAssemblyVersion=\"$(Major).$(Minor)\"\n\t\t\tAssemblyFileVersion=\"$(VersionString).$(Revision)\"\n\t\t\tAssemblyInformationalVersion=\"$(VersionString)\"\n\t\t/>\n\t</Target>\n\n\t<Target Name=\"Clean\" BeforeTargets=\"Build\">\n\t\t<!--\n\t\t\tASP.NET Core projects don't delete generated .nupkg files when cleaned or rebuilt, so we need to\n\t\t\tdo it here. See https://github.com/aspnet/XRE/issues/1301\n\t\t-->\n\t\t<DeleteTree Directories=\"src/artifacts\" />\n\t\t<DeleteTree Directories=\"src/%(PackageAssemblies.Identity)/bin\" />\n\t</Target>\n\n\t<Target Name=\"Build\" DependsOnTargets=\"RestorePackages;UpdateVersion\">\n\t\t<Exec WorkingDirectory=\"src/React.Core\" Command=\"node_modules/.bin/webpack\" />\n\t\t<Exec WorkingDirectory=\"src/React.Core/Resources/babel-legacy\" Command=\"node_modules/.bin/webpack\" />\n\t\t<MSBuild Projects=\"$(SolutionFile)\" Targets=\"Rebuild\" Properties=\"Configuration=Release;Platform=Any CPU;NoWarn=1607,7035,1701;Version=$(VersionString)\" />\n\t</Target>\n\n\t<Target Name=\"Test\" DependsOnTargets=\"Build\">\n\t\t<Exec\n\t\t\tWorkingDirectory=\"$(MSBuildProjectDirectory)\"\n\t\t\tCommand=\"dotnet test --configuration Release --no-build tests/React.Tests/React.Tests.csproj\"\n\t\t/>\n\t\t<Exec\n\t\t\tWorkingDirectory=\"$(MSBuildProjectDirectory)\"\n\t\t\tCommand=\"dotnet test --configuration Release --no-build tests/React.Tests.Integration/React.Tests.Integration.csproj\"\n\t\t/>\n\t</Target>\n\n\t<Target Name=\"PackageTemplates\" DependsOnTargets=\"Build;PackageLibrary\">\n\t\t<Exec WorkingDirectory=\"src/React.Template/reactnet-vanilla\" Command=\"dotnet restore ReactDemo.sln\" />\n\t\t<Exec WorkingDirectory=\"src/React.Template/reactnet-vanilla\" Command=\"dotnet add package React.AspNet -v $(VersionString) -n\" />\n\t\t<Exec WorkingDirectory=\"src/React.Template/reactnet-vanilla\" Command=\"dotnet restore ReactDemo.sln -s $(PackageOutputDir) \" />\n\t\t<Exec WorkingDirectory=\"src/React.Template/reactnet-vanilla\" Command=\"dotnet build ReactDemo.sln -c Release -p:Version=$(VersionString)\" />\n\n\t\t<Exec WorkingDirectory=\"src/React.Template/reactnet-webpack\" Command=\"dotnet restore\" />\n\t\t<Exec WorkingDirectory=\"src/React.Template/reactnet-webpack\" Command=\"dotnet add package React.AspNet -v $(VersionString) -n\" />\n\t\t<Exec WorkingDirectory=\"src/React.Template/reactnet-webpack\" Command=\"dotnet add package React.Router -v $(VersionString) -n\" />\n\t\t<Exec WorkingDirectory=\"src/React.Template/reactnet-webpack\" Command=\"dotnet restore -s $(PackageOutputDir) \" />\n\t\t<Exec WorkingDirectory=\"src/React.Template/reactnet-webpack\" Command=\"dotnet build -c Release -p:Version=$(VersionString)\" />\n\n\t\t<Exec WorkingDirectory=\"src/React.Template\" Command=\"dotnet pack --output $(PackageOutputDir) React.Template.csproj -c Release /p:Version=$(VersionString)\" />\n\t</Target>\n\n\t<Target Name=\"PackageLibrary\" DependsOnTargets=\"Build\">\n\t\t<!-- Delete old packages -->\n\t\t<RemoveDir Directories=\"$(PackageOutputDir)\" />\n\n\t\t<!-- Create new packages -->\n\t\t<MakeDir Directories=\"$(PackageOutputDir)\" />\n\t\t<Exec\n\t\t\tWorkingDirectory=\"$(MSBuildProjectDirectory)\"\n\t\t\tCommand=\"dotnet pack --output $(PackageOutputDir) --configuration Release  --no-build src/%(PackageAssemblies.Identity) /p:Version=$(VersionString)\"\n\t\t/>\n\t</Target>\n\n\t<Target Name=\"Package\">\n\t\t<CallTarget Targets=\"PackageLibrary\" />\n\t\t<CallTarget Targets=\"PackageTemplates\" />\n\t</Target>\n\n\t<Target Name=\"Push\">\n\t\t<CallTarget Targets=\"PushDev\" Condition=\"$(BuildType) != 'Release'\" />\n\t\t<CallTarget Targets=\"PushRelease\" Condition=\"$(BuildType) == 'Release'\" />\n\t</Target>\n\t<Target Name=\"PushRelease\">\n\t\t<ItemGroup>\n\t\t\t<PackageFiles Include=\"$(PackageOutputDir)\\*.nupkg\" Exclude=\"$(PackageOutputDir)\\*.symbols.nupkg\" />\n\t\t</ItemGroup>\n\t\t<Exec\n\t\t\tWorkingDirectory=\"$(MSBuildProjectDirectory)\"\n\t\t\tCommand=\"tools\\NuGet\\nuget.exe push %(PackageFiles.Identity) -NonInteractive -Source https://www.nuget.org/api/v2/package\"\n\t\t/>\n\t</Target>\n\t<Target Name=\"PushDev\">\n\t\t<Exec\n\t\t\tWorkingDirectory=\"$(MSBuildProjectDirectory)\"\n\t\t\tCommand=\"tools\\NuGet\\nuget.exe push $(PackageOutputDir)\\*.symbols.nupkg -Source $(DevNuGetServer) -NonInteractive\"\n\t\t/>\n\t</Target>\n</Project>\n"
        },
        {
          "name": "dev-build-push.bat",
          "type": "blob",
          "size": 0.0576171875,
          "content": "call runs-msbuild.bat \"/p:BuildType=Dev\" \"/t:Package;Push\"\n"
        },
        {
          "name": "dev-build.bat",
          "type": "blob",
          "size": 0.0400390625,
          "content": "call runs-msbuild.bat \"/p:BuildType=Dev\"\n"
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 1.392578125,
          "content": "[build]\n  base = \"site/jekyll\"\n  publish = \"site/jekyll/_site\"\n  command = \"bundle exec jekyll build\"\n\n# Shortcuts\n[[redirects]]\n  from = \"/download\"\n  to = \"/getting-started/download.html\"\n  status = 302\n\n[[redirects]]\n  from = \"/docs\"\n  to = \"/getting-started/aspnetcore.html\"\n  status = 302\n\n# Old documentation URLs\n[[redirects]]\n  from = \"/getting-started/aspnet5.html\"\n  to = \"/getting-started/aspnetcore.html\"\n\n[[redirects]]\n  from = \"/getting-started/tutorial.html\"\n  to = \"/tutorials/aspnetcore.html\"\n  \n[[redirects]]\n  from = \"/guides/weboptimizer.html\"\n  to = \"/bundling/weboptimizer.html\"\n\n[[redirects]]\n  from = \"/guides/cassette.html\"\n  to = \"/bundling/cassette.html\"\n  \n[[redirects]]\n  from = \"/guides/webpack.html\"\n  to = \"/bundling/webpack.html\"\n  \n[[redirects]]\n  from = \"/guides/msbuild.html\"\n  to = \"/bundling/msbuild.html\"\n  \n[[redirects]]\n  from = \"/guides/server-side-rendering.html\"\n  to = \"/features/server-side-rendering.html\"\n  \n[[redirects]]\n  from = \"/guides/es6.html\"\n  to = \"/features/es6.html\"\n  \n[[redirects]]\n  from = \"/guides/react-router.html\"\n  to = \"/features/react-router.html\"\n  \n[[redirects]]\n  from = \"/guides/chakracore.html\"\n  to = \"/getting-started/chakracore.html\"\n\n# Old package URLs\n[[redirects]]\n  from = \"/packages/*\"\n  to = \"https://ci.appveyor.com/nuget/reactjs.net/:splat\"\n\n[[redirects]]\n  from = \"/dev/packages/*\"\n  to = \"https://ci.appveyor.com/nuget/reactjs.net/:splat\"\n"
        },
        {
          "name": "release-build-push.bat",
          "type": "blob",
          "size": 0.0615234375,
          "content": "call runs-msbuild.bat \"/p:BuildType=Release\" \"/t:Package;Push\"\n"
        },
        {
          "name": "release-build.bat",
          "type": "blob",
          "size": 0.0439453125,
          "content": "call runs-msbuild.bat \"/p:BuildType=Release\"\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.8935546875,
          "content": "{\n  \"extends\": [\n    \"config:base\"\n  ],\n  \"packageRules\": [\n    {\n      \"sourceUrlPrefixes\": [\"https://github.com/Taritsyn/JavaScriptEngineSwitcher\"],\n      \"groupName\": \"JavaScriptEngineSwitcher packages\"\n    },\n    {\n      \"sourceUrlPrefixes\": [\"https://github.com/aspnet/Extensions\"],\n      \"groupName\": \"ASP.NET Extensions\"\n    },\n    {\n      \"packagePatterns\": [\"^Microsoft.AspNetCore\"],\n      \"groupName\": \"ASP.NET Core packages\"\n    },\n    {\n      \"packagePatterns\": [\"^Microsoft.Owin\"],\n      \"groupName\": \"Owin packages\"\n    },\n    {\n      \"sourceUrlPrefixes\": [\n        \"https://github.com/aspnet/MetaPackages\",\n        \"https://github.com/aspnet/AspNetCore\"\n      ],\n      \"groupName\": \"ASP.NET Core packages\"\n    },\n    {\n      \"packagePatterns\": [\"^React\"],\n      \"groupName\": \"React.NET packages\"\n    }\n  ],\n  \"separateMinorPatch\": true,\n  \"automerge\": false,\n  \"patch\": {\n    \"automerge\": true\n  }\n}\n"
        },
        {
          "name": "runs-msbuild.bat",
          "type": "blob",
          "size": 0.6953125,
          "content": "@echo off\n\nset BUILDTYPE=\"%~1\"\nset ACTION=\"%~2\"\n\nfor %%s in (\n    \"%ProgramFiles(x86)%\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin\\MSBuild.exe\"\n    \"%ProgramFiles(x86)%\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\MSBuild.exe\"\n    \"%ProgramFiles(x86)%\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin\\MSBuild.exe\"\n    \"%ProgramFiles(x86)%\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\MSBuild.exe\"\n) do (\n    if exist %%s (\n        echo %%s build.proj %ACTION% %BUILDTYPE%\n        %%s build.proj %ACTION% %BUILDTYPE%\n        goto :done\n    )\n)\n\n:notfound\necho Could not find MSBuild.exe. Make sure Visual Studio 2019 is installed and try again.\n\n:done\npause\n"
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorial-code",
          "type": "tree",
          "content": null
        },
        {
          "name": "webhooks",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}