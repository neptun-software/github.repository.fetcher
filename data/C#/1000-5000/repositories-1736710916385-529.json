{
  "metadata": {
    "timestamp": 1736710916385,
    "page": 529,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "paolosalvatori/ServiceBusExplorer",
      "stars": 2040,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.4599609375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n\n[Dd]ebug/\n[Rr]elease/\nx64/\nbuild/\n[Bb]in/\n[Oo]bj/\n\n# Enable \"build/\" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets\n!packages/*/build/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n*_i.c\n*_p.c\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.log\n*.scc\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n*.ncrunch*\n.*crunch*.local.xml\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.Publish.xml\n\n# NuGet Packages Directory\n## TODO: If you have NuGet Package Restore enabled, uncomment the next line\npackages/\n\n# Windows Azure Build Output\ncsx\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.[Pp]ublish.xml\n*.pfx\n*.publishsettings\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\nApp_Data/*.mdf\nApp_Data/*.ldf\n\n\n#LightSwitch generated files\nGeneratedArtifacts/\n_Pvt_Extensions/\nModelManifest.xml\n\n# =========================\n# Windows detritus\n# =========================\n\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Mac desktop service store files\n.DS_Store\n\n# Visual Studio 2015 cache/options directory\n.vs/\n\n# JetBrains Rider\n.idea/\n\n# The new Debug Profile file\n/src/ServiceBusExplorer/Properties/launchSettings.json\n\n# VS code settings\n.vscode/settings.json\n\n# Event Grid Explorer Library pkgrefgen\n/src/EventGridExplorerLibrary/.pkgrefgen/\n"
        },
        {
          "name": "EventGridExplorer_README.md",
          "type": "blob",
          "size": 2.4853515625,
          "content": "# Event Grid Explorer - Support for Event Grid V2 in Service Bus Explorer\n**Author:** Amy Wang\n\nThe Event Grid Explorer provides a tool for viewing and managing Event Grid V2 entities, including namespaces, topics and subscriptions, as well as provide create/delete operations for topics and subscriptions, publish/receive operations for events, and acknowledge/release/reject operations for events.\nCurrently, the Event Grid Explorer features the functionality that is available for the preview version of Event Grid V2.\nThis additional support for Event Grid enables users to test event delivery with ease, contributing to the adoption of the new service.\nNote: The EventGridExplorerLibrary uses models that are generated by Microsoft (R) AutoRest Code Generator\n\n## Connect to Event Grid\n\nUnder the File tab, the user can connect to an Event Grid V2 namespace by providing the Resource Group, Namespace Name, Subscription ID, API Version, Retry Timeout and Cloud Tenant which selects the associated tenant ID.\n\n![Connect to EGV2](./media/connect-event-grid.png)\n\n![Connection Info](./media/connect-info-event-grid.png)\n\n## Main View\n\nWhen the connection is successful, a tree view of the Event Grid V2 namespace with its contained topics and subscriptions is displayed along with properties views.\nRight-clicking the Topics and Subscriptions nodes enables the user to create topics/subscriptions and right-clicking the existing topics and subscriptions enables the user to publish/receive events and delete these entities.\n\n![Main View](./media/main-view-event-grid.png)\n\n## Publish\n\nWhen right-clicking the Publish option on a topic, the user can create and publish an event by entering the event source, type and JSON payload. \nEvents are expected to use the CloudEvent format, as specified in the Azure SDK for .NET\n\n![Publish Event to Topic](./media/publish-event-grid.png)\n\n## Receive\n\nWhen receiving events through a subscription, the user can receive the maximum number of events (100) or a top number of events.\nWhen successful, the data view table is populated with the received events and the event data is displayed in a JSON format.\n\n![Receive Event Popup](./media/receive-popup-event-grid.png)\n\n![Receive Events in Subscription](./media/receive-results-event-grid.png)\n\n## Event Settlement\n\nThe user can multi-select the received events in the table to acknowledge, release, or reject events.\nWhen successful, the event status column is updated with the operation performed.\n\n![Event Action](./media/event-action-event-grid.png)\n"
        },
        {
          "name": "Generate-VerificationFile.ps1",
          "type": "blob",
          "size": 1.2744140625,
          "content": "param(\n    [Parameter(Mandatory=$true, HelpMessage=\"Released version of ServiceBusExplorer\")]\n    [string] $Version,\n    [Parameter(Mandatory=$true, HelpMessage=\"Path to the ServiceBusExplorer exe\")]\n    [string] $ExePath,\n    [Parameter(Mandatory=$true, HelpMessage=\"Location of the VERIFICATION.txt template\")]\n    [string] $TemplateFilePath,\n    [Parameter(Mandatory=$true, HelpMessage=\"Location to output the result to\")]\n    [string] $OutputFilePath\n)\n\nWrite-Output \"Creating VERIFICATION.txt based on template '$($TemplateFilePath)' for '$($ExePath)'\"\n\n# Get content of template\n$rawTemplate = Get-Content $TemplateFilePath | Out-String\nWrite-Output \"VERIFICATION.txt template: $($rawTemplate)\"\n\n# Hash ServiceBusExplorer.exe\n$hashResult = Get-FileHash $ExePath -Algorithm MD5\nWrite-Output \"Created hash '$($hashResult.Hash)'\"\n\n# Update template with checksum\n$rawTemplate = $rawTemplate.Replace('%CHECKSUM%', $hashResult.Hash)\nWrite-Output \"Replaced checksum in template with '$($hashResult.Hash)'\"\n\n# Updating template with version\n$rawTemplate = $rawTemplate.Replace('%VERSION%', $Version)\nWrite-Output \"Replaced version in template with '$($Version)'\"\n\n# Store output in VERIFICATION file\nNew-Item -Path $OutputFilePath -Value $rawTemplate -Force\nWrite-Host \"Wrote results to $($OutputFilePath)\""
        },
        {
          "name": "GetNumberVersion.ps1",
          "type": "blob",
          "size": 0.5869140625,
          "content": "# Verify it is a proper version\nparam(\n    [Parameter(Mandatory=$false)]\n\t[string]\n    $Version \n)\n\nSet-StrictMode -Version 3\n\n# RegEx from https://semver.org/\n[string]$semanticRegEx = '^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$'\n\nif (-not ($Version -match $semanticRegEx)) {\n\tthrow \"The version must follow semantic versioning, see https://semver.org/.\" + `\n\t\t\" For instance 4.3.22-beta.\"\n}\n\n$parts = $Version -split {$_ -eq '-' -or $_ -eq '+'}\n\nreturn $parts[0]\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0556640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Microsoft Azure\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "NEWFEATURES.md",
          "type": "blob",
          "size": 0.71484375,
          "content": "- HandlePartitionControl: IncomingBytesPerSecond OutgoingBytesPerSecond\n- EventData.SerializedSizeInBytes is used to calculate KB/sec in the partitionlistenercontrol\n- Added new properties (LastEnqueuedOffset and LastEnqueuedTimeUtc) to PartitionDescription control \n- Fixed visualization of event data properties in the partition listener control\n- Greatly improved message tracking and clear of the partition listener control\n- Relay Message saved to file\n- Support for Persistent and Dynamic Relay Services\n- Export Persistent Relay Services\n- Event Hub Metrics\n- All Metric\n- Partition Consumer\n- Added Metrics to consumer groups \n- New behavior: no chart is shown if a metric doesn't have any data\nnotification hubs metrics\n\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.9091796875,
          "content": "**Author:** Paolo Salvatori ([@babosbird](https://twitter.com/babosbird))  \n**Collaborators:**  Sean Feldman ([@sfeldman](https://twitter.com/sfeldman)) and Erik Mogensen ([@koltrast](https://twitter.com/koltrast))  \n**Contributors:** [Many](https://github.com/paolosalvatori/ServiceBusExplorer/graphs/contributors)\n\n# Service Bus Explorer\nThe Service Bus Explorer allows users to efficiently administer messaging entities. The tool provides advanced features like import/export functionality and the ability to test topic, queues, subscriptions, relay services, notification hubs and events hubs.\n\n![Service Bus Explorer](./media/service-bus-explorer.png)\n\n# Software requirements\nThe following software is required to run ServiceBusExplorer. It may run on other versions.\n\n- Windows 10 or later\n- .NET Framework 4.6.2\n\n# Installation\n\nIt is strongly recommended to set `Configuration File for Settings and Connection Strings` to `User Configuration File` as shown in the figure below to reduce problems when upgrading. \n![UserConfiguration](./media/UserConfigFile.png)\n\n> **_Note:_** The `ServiceBusExplorer.exe.config` in the application directory will get overwritten during the upgrade.\n>\n> If you have made changes to it, you should back it up before upgrading. If you follow the recommendation above then only advanced changes such as WCF configuration modifications cause this. \n>\n> Do not overwite the new configuration file with the old file since the `runtime` section in the new must file not be modified. \n\n## Using [Chocolatey](https://chocolatey.org/install)\n\n### Installing for the first time\n\n```\nchoco install ServiceBusExplorer\n```\n\n### Upgrading\n\n```\nchoco upgrade ServiceBusExplorer\n```\n\nThe default location of the executable is `C:\\ProgramData\\chocolatey\\lib\\ServiceBusExplorer\\tools\\ServiceBusExplorer.exe`.\n\nMore information on our [Chocolatey page](https://chocolatey.org/packages/ServiceBusExplorer).\n\n## Using [Scoop](https://scoop.sh)\n\n> **__Warning_** The `scoop` package is not maintained by the ServiceBusExplorer project so carefully check the package and the URLs it uses before using it. Also, the current package keeps the old version of `ServiceBusExplorer.exe.config`. That may cause assembly loading issues so do not use it for upgrading.\n\n```\nscoop install extras/servicebusexplorer\n```\n\nThe default location of the executable is `%USERPROFILE%\\scoop\\apps\\servicebusexplorer\\current\\tools\\ServiceBusExplorer.exe`.\n\n## Using GitHub\n```\ncurl -s https://api.github.com/repos/paolosalvatori/ServiceBusExplorer/releases/latest | grep browser_download_url | cut -d '\"' -f 4\n```\n\n# Contributions\nThere are no dedicated developers so development is entirely based on voluntary effort.\n\nHere are some guidelines concerning contributions:\n\n- All contributions should be done on `main`.\n- Every pull request is built by GitHub Actions and should preferably be linked to a GitHub issue.\n- Write unit tests, if applicable.\n- We have started to migrate from the old SDK to the latest SDKs for Service Bus, Event Hubs, Relay and Notification Hubs. Therefore, new classes should not depend on the old SDK unless absolutely necessary.  \n\n\n## Development Environment\n\nVisual Studio 2022 17.8.0 or later is required to build the solution. \n\nWhen editing UI elements Visual Studio should run as a DPI-unaware process. For more information about this, see the [Visual Studio documentation](https://docs.microsoft.com/en-us/dotnet/framework/winforms/disable-dpi-awareness-visual-studio). In Visual Studio 2022 the informational bar looks like this ![AutoscalingTurnedOff](./media/AutoscalingTurnedOff.png) when it is running as a DPI-unaware process.\n\n\n# Azure Service Bus\nMicrosoft Azure Service Bus is a reliable information delivery service. The purpose of this service is to make communication easier. When two or more parties want to exchange information, they need a communication facilitator. Service Bus is a brokered, or third-party communication mechanism. This is similar to a postal service in the physical world. Postal services make it very easy to send different kinds of letters and packages with a variety of delivery guarantees, anywhere in the world.\n\nSimilar to the postal service delivering letters, Service Bus is flexible information delivery from both the sender and the recipient. The messaging service ensures that the information is delivered even if the two parties are never both online at the same time, or if they aren't available at the exact same time. In this way, messaging is similar to sending a letter, while non-brokered communication is similar to placing a phone call (or how a phone call used to be - before call waiting and caller ID, which are much more like brokered messaging).\n\nThe message sender can also require a variety of delivery characteristics including transactions, duplicate detection, time-based expiration, and batching. These patterns have postal analogies as well: repeat delivery, required signature, address change, or recall.\n\nFor more information, feel free to read the official documentation [here](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-overview).\n\n# Service Bus Explorer for Windows Server\nThe Service Bus Explorer 2.1.0 can be used with the Service Bus for Windows Server 1.1. The Service Bus Explorer 2.1.0 uses a version of the [Microsoft.ServiceBus.dll](http://www.nuget.org/packages/WindowsAzure.ServiceBus/) client library which is compatible with the Service Bus for Windows Server 1.1 RTM version. You can download the source code of the Service Bus Explorer 2.1.0 [here](https://github.com/paolosalvatori/ServiceBusExplorer/releases/tag/2.1.0).\n\n# Documentation\n[Here](./docs/documentation.md) you can find the tool documentation and a log of the features implemented over time.\n\n# Alternative Service Bus Management Tools\nService Bus Explorer is only one of the management tools available for Azure Service Bus.\n\nHere are a couple of alternatives. We do not take responsibility for them though:\n\n| Tool                                     | Description                                   |\n| ---------------------------------------- | --------------------------------------------- |\n| Microsoft Azure Management Portal        | SaaS, web based, extremely basic              |\n| Serverless360                            | paid with free trial, SaaS, web based         |\n| [PowerShell]                             | free, open source, cross platform             |\n| [Purple Explorer]                        | free, open source, cross platform             |\n| [Superbus]                               | paid with a free trial, macOS                 |\n| [Service Bus Cloud Explorer]             | paid with a free basic plan, SaaS, web based  |\n\n[PowerShell]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-manage-with-ps\n[Purple Explorer]: https://github.com/telstrapurple/PurpleExplorer\n[Superbus]: https://superbus.app/\n[Service Bus Cloud Explorer]: https://cloudbricks.io/products/service_bus_cloud_explorer/\n"
        },
        {
          "name": "SetVersion.ps1",
          "type": "blob",
          "size": 0.740234375,
          "content": "param(\n\t[Parameter(Mandatory)]\n\t[string]\n\t$FileName,\n\n\t[Parameter(Mandatory)]\n\t[string]\n\t$PropertyName,\n\n\t[Parameter(Mandatory, \n\t\tParameterSetName = 'Version')]\n\t[Version]\n\t$Version,\n\n\t[Parameter(Mandatory, \n\t\tParameterSetName = 'VersionString')]\n\t[string]\n\t$VersionString\n)\n\nSet-StrictMode -Version 2\n\n$pattern = \"^\\[assembly: $PropertyName\\(\"\"(.*)\"\"\\)\\]$\"\n$found = $false\n\nif ($Version) {\n\t$VersionString = $Version\n}\n\n$content = (Get-Content $fileName -Encoding UTF8) | ForEach-Object {\n\tif ($_ -match $pattern) {\n  \t   \t\"[assembly: $PropertyName(\"\"{0}\"\")]\" -f $VersionString\n\t\t$found = $true\n\t} \n\telse {\n\t\t$_\n\t}\n} \n\nif (-not $found) {\n\t$content += \"[assembly: $PropertyName(\"\"{0}\"\")]\" -f $VersionString\n}\n\n$content | Set-Content $fileName -Encoding UTF8"
        },
        {
          "name": "VERIFICATION-Template.txt",
          "type": "blob",
          "size": 0.7802734375,
          "content": "VERIFICATION\nVerification is intended to assist the Chocolatey moderators and community\nin verifying that this package's contents are trustworthy.\n\nThe installer have been downloaded from their official download link listed on <https://github.com/paolosalvatori/ServiceBusExplorer/releases>\nand can be verified like this:\n\n1. Download the following installers:\n  64-Bit: <https://github.com/paolosalvatori/ServiceBusExplorer/releases/download/%VERSION%/ServiceBusExplorer-%VERSION%.zip>\n2. You can use one of the following methods to obtain the checksum\n  - Use powershell function 'Get-Filehash'\n  - Use chocolatey utility 'checksum.exe'\n\n  checksum type: md5\n  checksum64: %CHECKSUM%\n\nFile 'LICENSE.txt' is obtained from <https://github.com/paolosalvatori/ServiceBusExplorer/blob/main/LICENSE.txt>"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}