{
  "metadata": {
    "timestamp": 1736710861982,
    "page": 407,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sprache/Sprache",
      "stars": 2382,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2294921875,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.7412109375,
          "content": "# Created by https://www.gitignore.io/api/visualstudio,windows,osx\n\n### VisualStudio ###\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Allow anything under lib\n!**/lib/**\n\n# Visual Studio 2015 cache/options directory\n.vs/\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Click-Once directory\npublish/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Microsoft Fakes\nFakesAssemblies/\n\n### Windows ###\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n### OSX ###\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\nartifacts\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.0029296875,
          "content": "# Sprache [![Sprache tag on Stack Overflow](https://img.shields.io/badge/stackoverflow-sprache-orange.svg)](http://stackoverflow.com/questions/tagged/sprache) [![Join the chat at https://gitter.im/sprache/Sprache](https://badges.gitter.im/sprache/Sprache.svg)](https://gitter.im/sprache/Sprache?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![NuGet](https://img.shields.io/nuget/v/Sprache.svg)](https://nuget.org/packages/Sprache) [![Build status](https://ci.appveyor.com/api/projects/status/xrn2d7b9crqj8l4a?svg=true)](https://ci.appveyor.com/project/Sprache/sprache)\n\nSprache is a simple, lightweight library for constructing parsers directly in C# code.\n\nIt doesn't compete with \"industrial strength\" language workbenches - it fits somewhere in between regular expressions and a full-featured toolset like [ANTLR](http://antlr.org).\n\n![Sprache](https://avatars1.githubusercontent.com/u/1999078?v=3&s=200)\n\n### Usage\n\nUnlike most parser-building frameworks, you use Sprache directly from your program code, and don't need to set up any build-time code generation tasks. Sprache itself is a single tiny assembly.\n\nA simple parser might parse a sequence of characters:\n\n```csharp\n// Parse any number of capital 'A's in a row\nvar parseA = Parse.Char('A').AtLeastOnce();\n```\n\nSprache provides a number of built-in functions that can make bigger parsers from smaller ones, often callable via Linq query comprehensions:\n\n```csharp\nParser<string> identifier =\n    from leading in Parse.WhiteSpace.Many()\n    from first in Parse.Letter.Once().Text()\n    from rest in Parse.LetterOrDigit.Many().Text()\n    from trailing in Parse.WhiteSpace.Many()\n    select first + rest;\n\nvar id = identifier.Parse(\" abc123  \");\n\nAssert.AreEqual(\"abc123\", id);\n```\n\n### Examples and Tutorials\n\nThe best place to start is [this introductory article](http://nblumhardt.com/2010/01/building-an-external-dsl-in-c/).\n\n**Examples** included with the source demonstrate:\n\n* [Parsing XML directly to a Document object](https://github.com/sprache/Sprache/blob/master/samples/XmlExample/Program.cs)\n* [Parsing numeric expressions to `System.Linq.Expression` objects](https://github.com/sprache/Sprache/blob/master/samples/LinqyCalculator/ExpressionParser.cs)\n* [Parsing comma-separated values (CSV) into lists of strings](https://github.com/sprache/Sprache/blob/master/test/Sprache.Tests/Scenarios/CsvTests.cs)\n\n**Tutorials** explaining Sprache:\n * Overview of Sprache methods, [long guide by Justing Pealing](https://justinpealing.me.uk/post/2020-03-11-sprache1-chars/)\n * A great [CodeProject article by Alexey Yakovlev ](http://www.codeproject.com/Articles/795056/Sprache-Calc-building-yet-another-expression-evalu) (and [in Russian](http://habrahabr.ru/post/228037/))\n * Mike Hadlow's example of [parsing connection strings](http://mikehadlow.blogspot.com.au/2012/09/parsing-connection-string-with-sprache.html)\n * Alexey Golub's article on [monadic parser combinators](https://tyrrrz.me/blog/monadic-parser-combinators) that shows how to build a JSON parser using Sprache\n\n**Real-world** parsers built with Sprache:\n\n * The [template parser](https://github.com/OctopusDeploy/Octostache/blob/master/source/Octostache/Templates/TemplateParser.cs) in [Octostache](https://github.com/OctopusDeploy/Octostache), the variable substitution language of [Octopus Deploy](https://octopus.com)\n * The [XAML binding expression parser](https://github.com/OmniGUI/OmniXAML/blob/master/OmniXaml/InlineParsers/Extensions/MarkupExtensionParser.cs) in [OmniXaml](https://github.com/OmniGUI/OmniXAML), the cross-platform XAML implementation\n * Parts of the filter expression parser in [Seq](https://datalust.co/seq), a structured log server for .NET\n * The [connection string parser](https://github.com/EasyNetQ/EasyNetQ/blob/master/Source/EasyNetQ/ConnectionString/ConnectionStringGrammar.cs) in [EasyNetQ](http://easynetq.com/), a .NET API for RabbitMQ\n * [ApexSharp parser](https://github.com/apexsharp/apexparser/blob/master/ApexSharp.ApexParser/Parser/ApexGrammar.cs), a two-way [Apex to C# transpiler](https://github.com/apexsharp/apexparser) (Salesforce programming language)\n * Sprache appears in the [credits for JetBrains ReSharper](https://confluence.jetbrains.com/display/ReSharper/Third-Party+Software+Shipped+With+ReSharper#Third-PartySoftwareShippedWithReSharper-Sprache)\n\n### Background\n\nParser combinators are covered extensively on the web. The original paper describing the monadic implementation by [Graham Hutton and Eric Meijer](http://www.cs.nott.ac.uk/~gmh/monparsing.pdf) is very readable. Sprache was originally written by [Nicholas Blumhardt](http://nblumhardt.com) and grew out of some exercises in [Hutton's Haskell book](http://www.amazon.com/Programming-Haskell-Graham-Hutton/dp/0521692695).\n\nThe implementation of Sprache draws on ideas from:\n\n* [Luke Hoban's Blog](http://blogs.msdn.com/b/lukeh/archive/2007/08/19/monadic-parser-combinators-using-c-3-0.aspx)\n* [Brian McNamara's Blog](http://lorgonblog.wordpress.com/2007/12/02/c-3-0-lambda-and-the-first-post-of-a-series-about-monadic-parser-combinators/)\n"
        },
        {
          "name": "Sprache.sln",
          "type": "blob",
          "size": 8.8583984375,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 15\nVisualStudioVersion = 15.0.26730.15\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Build\", \"Build\", \"{10F554FC-7631-443D-8046-17AD2F31AD2E}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tappveyor.yml = appveyor.yml\n\t\tbuild.ps1 = build.ps1\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Samples\", \"Samples\", \"{76AC6F3F-F4CD-444B-8E28-A370D67A72D7}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Test\", \"Test\", \"{FAE12EEF-CFC3-460D-99D5-F5FC911FDA19}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{86E3AEAC-8EEB-45B6-835D-E4FD1684495F}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.gitattributes = .gitattributes\n\t\t.gitignore = .gitignore\n\t\tappveyor.yml = appveyor.yml\n\t\tlicence.txt = licence.txt\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Sprache.Tests\", \"test\\Sprache.Tests\\Sprache.Tests.csproj\", \"{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Sprache\", \"src\\Sprache\\Sprache.csproj\", \"{5600F661-00AB-4711-8C29-FB8DDF45A5EC}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"XmlExample\", \"samples\\XmlExample\\XmlExample.csproj\", \"{42F99BDF-5F43-40A6-A713-E84EE845F022}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LinqyCalculator\", \"samples\\LinqyCalculator\\LinqyCalculator.csproj\", \"{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"TinyTemplates\", \"samples\\TinyTemplates\\TinyTemplates.csproj\", \"{A0410D8D-2D98-4EE4-A177-DB31CA493D19}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"TinyTemplates.Tests\", \"samples\\TinyTemplates.Tests\\TinyTemplates.Tests.csproj\", \"{CB505FE2-4188-49D9-9BFD-1D1E213B4423}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|Mixed Platforms = Debug|Mixed Platforms\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|Mixed Platforms = Release|Mixed Platforms\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Release|Mixed Platforms.Build.0 = Release|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B}.Release|x86.Build.0 = Release|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Release|Mixed Platforms.Build.0 = Release|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{5600F661-00AB-4711-8C29-FB8DDF45A5EC}.Release|x86.Build.0 = Release|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Release|Mixed Platforms.Build.0 = Release|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022}.Release|x86.Build.0 = Release|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Release|Mixed Platforms.Build.0 = Release|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E}.Release|x86.Build.0 = Release|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Release|Mixed Platforms.Build.0 = Release|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19}.Release|x86.Build.0 = Release|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Release|Mixed Platforms.Build.0 = Release|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423}.Release|x86.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{5AF7E4AE-EFC0-485C-8560-C0785A21D28B} = {FAE12EEF-CFC3-460D-99D5-F5FC911FDA19}\n\t\t{42F99BDF-5F43-40A6-A713-E84EE845F022} = {76AC6F3F-F4CD-444B-8E28-A370D67A72D7}\n\t\t{D7A17F71-DD1E-4CD9-9CC8-66322FD8698E} = {76AC6F3F-F4CD-444B-8E28-A370D67A72D7}\n\t\t{A0410D8D-2D98-4EE4-A177-DB31CA493D19} = {76AC6F3F-F4CD-444B-8E28-A370D67A72D7}\n\t\t{CB505FE2-4188-49D9-9BFD-1D1E213B4423} = {76AC6F3F-F4CD-444B-8E28-A370D67A72D7}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {25D283A8-FFD6-44C2-B475-A4CF29BB7298}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.404296875,
          "content": "version: '{build}'\nimage: Visual Studio 2019\n\nbranches:\n  only:\n  - main\n  - develop\n\npull_requests:\n  do_not_increment_build_number: true\n\nbuild_script:\n- ps: .\\build.ps1\n\nartifacts:\n- path: '.\\artifacts\\*.nupkg'\n\ndeploy:\n- provider: NuGet\n  api_key:\n    secure: LOSaZSy3ZL836xUIcCovdIt5kbL/aahbQPl2CvLCWxWaS+YSpKMB/OUAlbgLGp8Z \n  skip_symbols: true\n  artifact: /.*\\.nupkg/\n  on:\n      branch: /^(main|develop)$/\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 1.5087890625,
          "content": "$branch = @{ $true = $env:APPVEYOR_REPO_BRANCH; $false = $(git symbolic-ref --short -q HEAD) }[$env:APPVEYOR_REPO_BRANCH -ne $NULL];\n$revision = @{ $true = \"{0:00000}\" -f [convert]::ToInt32(\"0\" + $env:APPVEYOR_BUILD_NUMBER, 10); $false = \"local\" }[$env:APPVEYOR_BUILD_NUMBER -ne $NULL];\n$suffix = @{ $true = \"\"; $false = \"$($branch.Substring(0, [math]::Min(10,$branch.Length)))-$revision\"}[$branch -eq \"main\" -and $revision -ne \"local\"]\n\necho \"build: Version suffix is $suffix\"\n\nPush-Location $PSScriptRoot\n\nif(Test-Path ./artifacts) {\n\techo \"build: Cleaning ./artifacts\"\n\tRemove-Item ./artifacts -Force -Recurse\n}\n# run restore on all *.csproj files in the src folder including 2>1 to redirect stderr to stdout for badly behaved tools\nGet-ChildItem -Path ./src -Filter *.csproj -Recurse | ForEach-Object { \n\techo \"build: Restoring packages\"\n\t& dotnet restore $_.FullName --no-cache\n\tif($LASTEXITCODE -ne 0) { exit 1 }\n}\n\n# run pack on all *.csproj files in the src folder including 2>1 to redirect stderr to stdout for badly behaved tools\nGet-ChildItem -Path ./src -Filter *.csproj -Recurse | ForEach-Object {\n\techo \"build: Packing $_.FullName\"\n\tif ($suffix) { \n\t\t& dotnet pack $_.FullName -c Release -o ./artifacts --version-suffix=$suffix\n\t} else {\n\t\t& dotnet pack $_.FullName -c Release -o ./artifacts\n\t}\n\tif($LASTEXITCODE -ne 0) { exit 1 }\n}\n\n# run tests\nGet-ChildItem -Path ./test -Filter *.csproj -Recurse | ForEach-Object {\n\techo \"build: Testing $_.FullName\"\n\t & dotnet test -c Release $_.FullName\n\t if($LASTEXITCODE -ne 0) { exit 1 }\n}\n"
        },
        {
          "name": "icon.png",
          "type": "blob",
          "size": 8.75390625,
          "content": null
        },
        {
          "name": "licence.txt",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License\n\nCopyright (c) 2011 Nicholas Blumhardt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}