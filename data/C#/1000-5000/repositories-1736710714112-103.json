{
  "metadata": {
    "timestamp": 1736710714112,
    "page": 103,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "GhostPack/Seatbelt",
      "stars": 3900,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0478515625,
          "content": ".vs\n*.user\n[Dd]ebug/\n[Rr]elease/\n[Bb]in/\n[Oo]bj/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 13.0859375,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [1.2.1] - 2022-07-11\n\n### Added\n\n* Status message in the \"LSASettings\" module when TokenLeakDetectDelaySecs is set\n \n\n## [1.2.0] - 2022-05-18\n\n### Added\n\n* Added the following commands:\n    * SecureBoot - Secure Boot configuration\n    * OneNote - List cached OneNote files (@tijme)\n    * WifiProfile - WIFI profile enumeration including passwords if possible (@guervild)\n    * WMI - Runs a specified WMI query\n    * OptionalFeatures - List Optional Features/Roles (via WMI)\n    * CertificateThumbprints - Finds thumbprints for all certificate store certs on the system\n    * Certificates - Finds user and machine certificate files\n    * KeePass - Finds KeePass configuration files\n    * Dsregcmd - Tenant information - replacement for Dsregcmd /status (@leftp)\n    * CloudSyncProvider - Configured Office 365 endpoints (tenants and teamsites) which are synchronised by OneDrive (@stufus)\n    * OracleSQLDeveloper - Finds Oracle SQLDeveloper connections.xml files\n* Added \"type\" to NetworkShares command\n* Added ability to specify regex for PowerShell scraping commands\n* Added ability to specify regex for ProcessCreationEvents and SysmonEvents commands\n* Added support for getting directory information through the fileinfo command\n* Additional error handling in various places\n* Added hardware ID + client directory to RDPSessions\n* Added ParentProcessID to Processes command\n* (Optional) Command versioning\n* Added filtering to Services command\n* Added ability to exclude specific commands from command groups (@mgeeky)\n* Process information (if possible) to NamedPipes command (@Wra7h)\n\n### Changed\n\n* @dtmsecurity's rdpsession improvements\n* Upgraded to C# 9 support\n* ARPTable refactor\n* Misc cleanup/refactoring\n* Updated license\n\n### Fixed\n\n* Corrected support for PowerShell Core versions in associated commands\n* Corrected MemoryStream output method\n* Split sysmon output across several lines\n* Removed console output from arp command\n* PSSessionSettings bugs\n* Vault pointer size fix\n* Office version handling\n* More nullable type issues\n* Fix for ChromeHistory if file is opened already\n\n\n## [1.1.1] - 2020-11-06\n\n### Added\n\n* Added remote support to the following commands:\n    * PowerShell, DotNet\n    * FirefoxPresence, FirefoxHistory\n    * ChromePresence/ChromeHistory/ChromeBookmarks\n    * InternetExplorerFavorites, IEUrls\n    * SlackDownloads, SlackPresence, SlackWorkspaces\n    * CloudCredentials, FileZilla, OutlookDownloads, RDCManFiles\n    * SuperPutty, LocalUsers, LocalGroups, PowerShellHistory\n    * Credguard, InstalledProducts, AppLocker, AuditPolicyRegistry\n    * DNSCache, PSSessionSettings, OSInfo, EnvironmentVariables, DpapiMasterKeys\n\n* Implemented remote event log support:\n    * ExplicitLogonEvents, LogonEvents, PoweredOnEvents, PowerShellEvents, ProcessCreationEvents, SysmonEvents\n\n* Chrome* modules now converted to Chromium support:\n    * Chrome, Edge, Brave, Opera\n\n* Added IBM Bluemix enumeration to CloudCredentials\n\n\n### Fixed\n\n* Better error handling in various modules\n* OS version number collection on Windows 10\n* McAfeeSiteList null pointer exception\n* Interpretation of uac/tokenfilter/filteradmintoken values\n* Nullable type issues\n* WindowsFirewall filtering\n\n\n## [1.1.0] - 2020-09-30\n\n### Added\n\n* Added the following commands:\n    * Hotfixes - installed hotfixes (via WMI)\n    * MicrosoftUpdates - all Microsoft updates (via COM)\n    * HuntLolbas - hunt for living-off-the-land binaries (from @NotoriousRebel)\n    * PowerShellHistory - searches PowerShell console history files for sensitive regex matches (adapted from @NotoriousRebel)\n    * RDPSettings - Remote Desktop Server/Client Settings\n    * SecPackageCreds - obtains credentials from security packages (InternalMonologue for the current user)\n    * FileZilla - files user FileZilla configuration files/passwords\n    * SuperPutty - files user SuperPutty configuration files\n    * McAfeeSiteList - finds/decrypts McAfee SiteList.xml files\n    * McAfeeConfigs- finds McAfee configuration files\n\n### Changed\n\n* Added CLR version enumeration to \"DotNet\" and \"PowerShell\" commands\n* Updated LSASettings to detect restricted admin mode\n* Added ZoneMapKey & Auth settings to \"InternetSettings\" (Francis Lacoste)\n* Added support for ByteArrays in \"WindowsVault\"\n* Redid assembly detection to (hopefully) prevent image load events\n* Added version/description fields to processes and services\n* Added ASR rules to \"WindowsDefender\" command\n\n### Fixed\n\n* Big fix for event log searching\n* Fix for sensitive command line scraping\n* Code cleanup/dead code removal\n* Allow empty companyname the Services command\n* Better exception handling\n* Various fixes/expansions for the \"WindowsVault\" command\n* Added disposing of output sinks\n* Other misc. bug fixes\n\n\n## [1.0.0] - 2020-05-26\n\n### Added\n\n* Added the following commands:\n    * NTLMSettings, SCCM, WSUS, UserRightAssignments, IdleTime, FileInfo, NamedPipes, NetworkProfile\n    * AMSIProviders, RPCMappedEndpoints, LocalUsers, CredGuard, LocalGPOs, OutlookDownloads\n    * AppLocker (thanks @_RastaMouse! https://github.com/GhostPack/Seatbelt/pull/15)\n    * InstalledProducts and Printers commands, with DACLs included for printers\n    * SearchIndex - module to search the Windows Search Indexer\n    * WMIEventFilter/WMIEventConsumer/WMIEventConsumer commands\n    * ScheduledTasks command (via WMI for win8+)\n    * AuditPolicies/AuditSettings - classic and advanced audit policy settings\n    * EnvironmentPath - %ENV:PATH% folder enumeration, along with DACLs\n    * ProcessCreation - from @djhohnstein's EventLogParser project. Expanded sensitive regexes.\n    * CredEnum - use CredEnumerate() to enumerate the credentials from the user's credential set (thanks @djhohnstein and @peewpw)\n    * SecurityPackages - uses EnumerateSecurityPackages() to enumerate available security packages\n    * WindowsDefender - exclusions for paths/extensions/processes for Windows Defender\n    * DotNet - detects .NET versions and whether AMSI is enabled/can by bypassed (similar to 'PowerShell')\n    * ProcessOwners - simplified enumeration of non-session 0 processes/owners that can function remotely\n    * dir\n        * Allows recursively enumerating directories and searching for files based on a regex\n        * Lists user folders by default\n        * Usage:   \"dir [path] [depth] [searchRegex] [ignoreErrors? true/false]\"\n        * Default: \"dir C:\\users\\ 2 \\\\(Documents|Downloads|Desktop) false\"\n            * Shows files in users' documents/downloads/desktop folders \n    * reg\n        * Allows recursively listing and searching for registry values on the current machine and remotely (if remote registry is enabled).\n    * Added additional defensive process checks thanks to @swarleysez, @Ne0nd0g, and @leechristensen. See https://github.com/GhostPack/Seatbelt/pull/17 and https://github.com/GhostPack/Seatbelt/pull/19.\n    * Added Xen virtual machine detections thanks to @rasta-mouse. See https://github.com/GhostPack/Seatbelt/pull/18\n* Added the following command aliases:\n    * \"Remote\" for common commands to run remotely\n    * \"Slack\" to run Slack-specific modules\n    * \"Chrome\" to run Chrome-specific modules\n* Added in ability to give commands arguments (to be expanded in the future). Syntax: `Seatbelt.exe \"PoweredOnEvents 30\"`\n* Added remote support for WMI/registry enumeration modules that are marked with a +\n    * Usage: computername=COMPUTER.DOMAIN.COM [username=DOMAIN\\USER password=PASSWORD]\n* Added the \"-q\" command-line flag to not print the logo\n* Added ability to output to a file with the the \"-o <file>\" parameter\n    * Providing a file that ends in .json produces JSON-structured output!\n* Added in the architecture for different output sinks. Still need to convert a lot of cmdlets to the new format.\n* Added a module template.\n* Added CHANGELOG.md.\n\n\n### Changed\n\n* Externalized all commands into their own class/file\n* Cleaned up some of the registry querying code\n* Commands can now be case-insensitive\n* Seatbelt's help message is now dynamically created\n* Renamed RebootSchedule to PoweredOnEvents\n    * Now enumerates events for system startup/shutdown, unexpected shutdown, and sleeping/awaking.\n* Modified the output of the Logon and ExplicitLogon event commands to be easier to read/analyze\n* LogonEvents, ExplicitLogonEvents, and PoweredOnEvents take an argument of how many days back to collect logs for. Example: Seatbelt.exe \"LogonEvents 50\"\n* Added Added timezone, locale information, MachineGuid, Build number and UBR (if present) to OSInfo command\n* Refactored registry enumeration code\n* Putty command now lists if agent forwarding is enabled\n* Renamed BasicOSInfo to OSInfo\n* Simplified IsLocalAdmin code\n* Added the member type to localgroupmembership output\n* Simplified the RDPSavedConnections code\n* Formatted the output of RDPSavedConnections to be prettier\n* Formatted the output of RecentFiles to be prettier\n* Modified logonevents default so that it only outputs the past day on servers\n* Re-wrote the PowerShell command. Added AMSI information and hints for bypassing.\n* Add NTLM/Kerberos informational alerts to the LogonEvents command\n* Changed the output format of DpapiMasterKeys\n* Re-wrote the Registry helper code\n* Refactored the helper code\n* Incorprated [@mark-s's](https://github.com/mark-s) code to speed up the interestingfiles command. See [#16](https://github.com/GhostPack/Seatbelt/pull/16)\n* Added SDDL to the \"fileinfo\" command\n* Added MRUs for all office applications to the RecentFiles command\n* RecentFiles now has a paramater that restricts how old the documents are. \"RecentFiles 20\" - Shows files accessed in the last 20 days.\n* Renamed RegistryValue command to \"reg\"\n* Search terms in the \"reg\" command now match keys, value names, and values.\n* Updated the \"reg\" commands arguments.\n    * Usage: \"reg <HIVE[\\PATH\\TO\\KEY]> [depth] [searchTerm] [ignoreErrors]\"\n    * Defaults: \"reg HKLM\\Software 1 default true\"\n* Added generic GetSecurityInfos command into SecurityUtil\n* Formatting tweak for DPAPIMasterkeys\n* WindowsVaults output filtering\n* Renamed RecentFiles to ExplorerMRUs, broke out functionality for ExplorerMRUs and OfficeMRUs\n* Broke IETriage command into IEUrls and IEFavorites\n* Changed FirefoxCommand to FirefoxHistory\n* Changed ChromePresence and FirefoxPresence to display last modified timestamps for the history/cred/etc. files\n* Split ChromeCommand into ChromeHistoryCommand and ChromeBookmarksCommand\n* Broke PuttyCommand into PuttyHostKeys and PuttySessions\n* Added SDDL field to InterestingFiles command\n* Modified IdleTime to display the current user and time in h:m:s:ms format\n* Moved Firewall enumeration to the registry (instead of the COM object). Thanks @Max_68!\n* Changed TokenGroups output formatting\n* Renamed localgroupmemberships to localgroups\n* Changed network firewall enumeration to display \"non-builtin\" rules instead of deny. Added basic filtering.\n* Added IsDotNet property to the FileInfo command\n* Renamed \"NonstandardProcesses\" and \"NonstandardServices\" to \"Processes\" and \"Services\", respectively\n* LocalGroups now enumerates all (by default non-empty) local groups and memberships, along with comments\n* Added a \"modules\" argument to the \"Processes\" command to display non-Microsoft loaded processes\n* Notify operator when LSA Protected Mode is enabled (RunAsPPL)\n* Updated the EnvironmentVariables command to distinguish between user/system/current process/volatile variables\n* Added a user filter to ExplicitLogonEvents. Usage: `ExplicitLogonEvents <days> <targetUserRegex>`\n* Added version check for Chrome (v80+)\n* Added analysis messages for the logonevents command\n* Rewrote and expanded README.md\n\n\n### Fixed\n\n* Some timestamp converting code in the ticket extraction section\n* Fixed Chrome bookmark command (threw an exception with folders)\n* Fixed reboot schedule (xpath query wasn't precise enough, leading to exceptions)\n* Fixed an exception that was being thrown in the CloudCredential command\n* NonstandardServices command\n    * Fixed a bug that occurred during enumeration\n    * Added ServiceDll and User fields\n    * Partially fixed path parsing in NonstandardServices with some help from OJ (@TheColonial)! See https://github.com/GhostPack/Seatbelt/pull/14\n    * Cleaned up the code\n* Fixed a bug in localgroupmembership\n* Check if it's a Server before running the AntiVirus check (the WMI class isn't on servers)\n* Fixed a bug in WindowsCredentialFiles so it wouldn't output null bytes\n* Fixed a null reference bug in the PowerShell command\n* Fixed the OS version comparisons in WindowsVault command\n* Fixed a DWORD parsing bug in the registry util class for big (i.e. negative int) values\n* ARPTable bug fix/error handling\n* Fixed PuttySession HKCU v. HKU bug\n* Fixed a terminating exception bug in the Processes command when obtaining file version info\n* More additional bug fixes than we can count >_<\n\n\n### Removed\n\n* Removed the UserFolder command (replaced by DirectoryList command)\n\n\n## [0.2.0] - 2018-08-20\n\n### Added\n* @djhohnstein's vault enumeration\n\n\n### Changed\n* @ClementNotin/@cnotin's various fixes\n\n\n## [0.1.0] - 2018-07-24\n\n* Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 12.734375,
          "content": "Seatbelt is provided under the 3-clause BSD license below.\n\n*************************************************************\n\nCopyright (c) 2022, Will Schroeder and Lee Christensen\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n    The names of its contributors may not be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n********************* License for sandbox-attacksurface-analysis-tools *********************\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 36.87890625,
          "content": "# Seatbelt\r\n\r\n----\r\n\r\nSeatbelt is a C# project that performs a number of security oriented host-survey \"safety checks\" relevant from both offensive and defensive security perspectives.\r\n\r\n[@andrewchiles](https://twitter.com/andrewchiles)' [HostEnum.ps1](https://github.com/threatexpress/red-team-scripts/blob/master/HostEnum.ps1) script and [@tifkin\\_](https://twitter.com/tifkin_)'s [Get-HostProfile.ps1](https://github.com/leechristensen/Random/blob/master/PowerShellScripts/Get-HostProfile.ps1) provided inspiration for many of the artifacts to collect.\r\n\r\n[@harmj0y](https://twitter.com/harmj0y) and [@tifkin_](https://twitter.com/tifkin_) are the primary authors of this implementation.\r\n\r\nSeatbelt is licensed under the BSD 3-Clause license.\r\n\r\n\r\n## Table of Contents\r\n\r\n- [Seatbelt](#seatbelt)\r\n  * [Table of Contents](#table-of-contents)\r\n  * [Command Line Usage](#command-line-usage)\r\n  * [Command Groups](#command-groups)\r\n    + [system](#system)\r\n    + [user](#user)\r\n    + [misc](#misc)\r\n    + [Additional Command Groups](#additional-command-groups)\r\n  * [Command Arguments](#command-arguments)\r\n  * [Output](#output)\r\n  * [Remote Enumeration](#remote-enumeration)\r\n  * [Building Your Own Modules](#building-your-own-modules)\r\n  * [Compile Instructions](#compile-instructions)\r\n  * [Acknowledgments](#acknowledgments)\r\n\r\n\r\n## Command Line Usage\r\n\r\n```\r\n\r\n\r\n                        %&&@@@&&                                                                                  \r\n                        &&&&&&&%%%,                       #&&@@@@@@%%%%%%###############%                         \r\n                        &%&   %&%%                        &////(((&%%%%%#%################//((((###%%%%%%%%%%%%%%%\r\n%%%%%%%%%%%######%%%#%%####%  &%%**#                      @////(((&%%%%%%######################(((((((((((((((((((\r\n#%#%%%%%%%#######%#%%#######  %&%,,,,,,,,,,,,,,,,         @////(((&%%%%%#%#####################(((((((((((((((((((\r\n#%#%%%%%%#####%%#%#%%#######  %%%,,,,,,  ,,.   ,,         @////(((&%%%%%%%######################(#(((#(#((((((((((\r\n#####%%%####################  &%%......  ...   ..         @////(((&%%%%%%%###############%######((#(#(####((((((((\r\n#######%##########%#########  %%%......  ...   ..         @////(((&%%%%%#########################(#(#######((#####\r\n###%##%%####################  &%%...............          @////(((&%%%%%%%%##############%#######(#########((#####\r\n#####%######################  %%%..                       @////(((&%%%%%%%################                        \r\n                        &%&   %%%%%      Seatbelt         %////(((&%%%%%%%%#############*                         \r\n                        &%%&&&%%%%%        v1.2.1         ,(((&%%%%%%%%%%%%%%%%%,                                 \r\n                         #%%%%##,                                                                                 \r\n\r\n\r\nAvailable commands (+ means remote usage is supported):\r\n\r\n    + AMSIProviders          - Providers registered for AMSI\r\n    + AntiVirus              - Registered antivirus (via WMI)\r\n    + AppLocker              - AppLocker settings, if installed\r\n      ARPTable               - Lists the current ARP table and adapter information (equivalent to arp -a)\r\n      AuditPolicies          - Enumerates classic and advanced audit policy settings\r\n    + AuditPolicyRegistry    - Audit settings via the registry\r\n    + AutoRuns               - Auto run executables/scripts/programs\r\n      azuread                - Return AzureAD info\r\n      Certificates           - Finds user and machine personal certificate files\r\n      CertificateThumbprints - Finds thumbprints for all certificate store certs on the system\r\n    + ChromiumBookmarks      - Parses any found Chrome/Edge/Brave/Opera bookmark files\r\n    + ChromiumHistory        - Parses any found Chrome/Edge/Brave/Opera history files\r\n    + ChromiumPresence       - Checks if interesting Chrome/Edge/Brave/Opera files exist\r\n    + CloudCredentials       - AWS/Google/Azure/Bluemix cloud credential files\r\n    + CloudSyncProviders     - All configured Office 365 endpoints (tenants and teamsites) which are synchronised by OneDrive.\r\n      CredEnum               - Enumerates the current user's saved credentials using CredEnumerate()\r\n    + CredGuard              - CredentialGuard configuration\r\n      dir                    - Lists files/folders. By default, lists users' downloads, documents, and desktop folders (arguments == [directory] [maxDepth] [regex] [boolIgnoreErrors]\r\n    + DNSCache               - DNS cache entries (via WMI)\r\n    + DotNet                 - DotNet versions\r\n    + DpapiMasterKeys        - List DPAPI master keys\r\n      EnvironmentPath        - Current environment %PATH$ folders and SDDL information\r\n    + EnvironmentVariables   - Current environment variables\r\n    + ExplicitLogonEvents    - Explicit Logon events (Event ID 4648) from the security event log. Default of 7 days, argument == last X days.\r\n      ExplorerMRUs           - Explorer most recently used files (last 7 days, argument == last X days)\r\n    + ExplorerRunCommands    - Recent Explorer \"run\" commands\r\n      FileInfo               - Information about a file (version information, timestamps, basic PE info, etc. argument(s) == file path(s)\r\n    + FileZilla              - FileZilla configuration files\r\n    + FirefoxHistory         - Parses any found FireFox history files\r\n    + FirefoxPresence        - Checks if interesting Firefox files exist\r\n    + Hotfixes               - Installed hotfixes (via WMI)\r\n      IdleTime               - Returns the number of seconds since the current user's last input.\r\n    + IEFavorites            - Internet Explorer favorites\r\n      IETabs                 - Open Internet Explorer tabs\r\n    + IEUrls                 - Internet Explorer typed URLs (last 7 days, argument == last X days)\r\n    + InstalledProducts      - Installed products via the registry\r\n      InterestingFiles       - \"Interesting\" files matching various patterns in the user's folder. Note: takes non-trivial time.\r\n    + InterestingProcesses   - \"Interesting\" processes - defensive products and admin tools\r\n      InternetSettings       - Internet settings including proxy configs and zones configuration\r\n    + KeePass                - Finds KeePass configuration files\r\n    + LAPS                   - LAPS settings, if installed\r\n    + LastShutdown           - Returns the DateTime of the last system shutdown (via the registry).\r\n      LocalGPOs              - Local Group Policy settings applied to the machine/local users\r\n    + LocalGroups            - Non-empty local groups, \"-full\" displays all groups (argument == computername to enumerate)\r\n    + LocalUsers             - Local users, whether they're active/disabled, and pwd last set (argument == computername to enumerate)\r\n    + LogonEvents            - Logon events (Event ID 4624) from the security event log. Default of 10 days, argument == last X days.\r\n    + LogonSessions          - Windows logon sessions\r\n      LOLBAS                 - Locates Living Off The Land Binaries and Scripts (LOLBAS) on the system. Note: takes non-trivial time.\r\n    + LSASettings            - LSA settings (including auth packages)\r\n    + MappedDrives           - Users' mapped drives (via WMI)\r\n      McAfeeConfigs          - Finds McAfee configuration files\r\n      McAfeeSiteList         - Decrypt any found McAfee SiteList.xml configuration files.\r\n      MicrosoftUpdates       - All Microsoft updates (via COM)\r\n      MTPuTTY                - MTPuTTY configuration files\r\n      NamedPipes             - Named pipe names, any readable ACL information and associated process information.\r\n    + NetworkProfiles        - Windows network profiles\r\n    + NetworkShares          - Network shares exposed by the machine (via WMI)\r\n    + NTLMSettings           - NTLM authentication settings\r\n      OfficeMRUs             - Office most recently used file list (last 7 days)\r\n      OneNote                - List OneNote backup files\r\n    + OptionalFeatures       - List Optional Features/Roles (via WMI)\r\n      OracleSQLDeveloper     - Finds Oracle SQLDeveloper connections.xml files\r\n    + OSInfo                 - Basic OS info (i.e. architecture, OS version, etc.)\r\n    + OutlookDownloads       - List files downloaded by Outlook\r\n    + PoweredOnEvents        - Reboot and sleep schedule based on the System event log EIDs 1, 12, 13, 42, and 6008. Default of 7 days, argument == last X days.\r\n    + PowerShell             - PowerShell versions and security settings\r\n    + PowerShellEvents       - PowerShell script block logs (4104) with sensitive data.\r\n    + PowerShellHistory      - Searches PowerShell console history files for sensitive regex matches.\r\n      Printers               - Installed Printers (via WMI)\r\n    + ProcessCreationEvents  - Process creation logs (4688) with sensitive data.\r\n      Processes              - Running processes with file info company names that don't contain 'Microsoft', \"-full\" enumerates all processes\r\n    + ProcessOwners          - Running non-session 0 process list with owners. For remote use.\r\n    + PSSessionSettings      - Enumerates PS Session Settings from the registry\r\n    + PuttyHostKeys          - Saved Putty SSH host keys\r\n    + PuttySessions          - Saved Putty configuration (interesting fields) and SSH host keys\r\n      RDCManFiles            - Windows Remote Desktop Connection Manager settings files\r\n    + RDPSavedConnections    - Saved RDP connections stored in the registry\r\n    + RDPSessions            - Current incoming RDP sessions (argument == computername to enumerate)\r\n    + RDPsettings            - Remote Desktop Server/Client Settings\r\n      RecycleBin             - Items in the Recycle Bin deleted in the last 30 days - only works from a user context!\r\n      reg                    - Registry key values (HKLM\\Software by default) argument == [Path] [intDepth] [Regex] [boolIgnoreErrors]\r\n      RPCMappedEndpoints     - Current RPC endpoints mapped\r\n    + SCCM                   - System Center Configuration Manager (SCCM) settings, if applicable\r\n    + ScheduledTasks         - Scheduled tasks (via WMI) that aren't authored by 'Microsoft', \"-full\" dumps all Scheduled tasks\r\n      SearchIndex            - Query results from the Windows Search Index, default term of 'passsword'. (argument(s) == <search path> <pattern1,pattern2,...>\r\n      SecPackageCreds        - Obtains credentials from security packages\r\n    + SecureBoot             - Secure Boot configuration\r\n      SecurityPackages       - Enumerates the security packages currently available using EnumerateSecurityPackagesA()\r\n      Services               - Services with file info company names that don't contain 'Microsoft', \"-full\" dumps all processes\r\n    + SlackDownloads         - Parses any found 'slack-downloads' files\r\n    + SlackPresence          - Checks if interesting Slack files exist\r\n    + SlackWorkspaces        - Parses any found 'slack-workspaces' files\r\n    + SuperPutty             - SuperPutty configuration files\r\n    + Sysmon                 - Sysmon configuration from the registry\r\n    + SysmonEvents           - Sysmon process creation logs (1) with sensitive data.\r\n      TcpConnections         - Current TCP connections and their associated processes and services\r\n      TokenGroups            - The current token's local and domain groups\r\n      TokenPrivileges        - Currently enabled token privileges (e.g. SeDebugPrivilege/etc.)\r\n    + UAC                    - UAC system policies via the registry\r\n      UdpConnections         - Current UDP connections and associated processes and services\r\n      UserRightAssignments   - Configured User Right Assignments (e.g. SeDenyNetworkLogonRight, SeShutdownPrivilege, etc.) argument == computername to enumerate\r\n      WifiProfile            - Enumerates the saved Wifi profiles and extract the ssid, authentication type, cleartext key/passphrase (when possible)\r\n    + WindowsAutoLogon       - Registry autologon information\r\n      WindowsCredentialFiles - Windows credential DPAPI blobs\r\n    + WindowsDefender        - Windows Defender settings (including exclusion locations)\r\n    + WindowsEventForwarding - Windows Event Forwarding (WEF) settings via the registry\r\n    + WindowsFirewall        - Non-standard firewall rules, \"-full\" dumps all (arguments == allow/deny/tcp/udp/in/out/domain/private/public)\r\n      WindowsVault           - Credentials saved in the Windows Vault (i.e. logins from Internet Explorer and Edge).\r\n    + WMI                    - Runs a specified WMI query\r\n      WMIEventConsumer       - Lists WMI Event Consumers\r\n      WMIEventFilter         - Lists WMI Event Filters\r\n      WMIFilterBinding       - Lists WMI Filter to Consumer Bindings\r\n    + WSUS                   - Windows Server Update Services (WSUS) settings, if applicable\r\n\r\n\r\nSeatbelt has the following command groups: All, User, System, Slack, Chromium, Remote, Misc\r\n\r\n    You can invoke command groups with         \"Seatbelt.exe <group>\"\r\n\r\n\r\n    Or command groups except specific commands \"Seatbelt.exe <group> -Command\"\r\n\r\n   \"Seatbelt.exe -group=all\" runs all commands\r\n\r\n   \"Seatbelt.exe -group=user\" runs the following commands:\r\n\r\n        azuread, Certificates, CertificateThumbprints, ChromiumPresence, CloudCredentials, \r\n        CloudSyncProviders, CredEnum, dir, DpapiMasterKeys, \r\n        ExplorerMRUs, ExplorerRunCommands, FileZilla, FirefoxPresence, \r\n        IdleTime, IEFavorites, IETabs, IEUrls, \r\n        KeePass, MappedDrives, MTPuTTY, OfficeMRUs, \r\n        OneNote, OracleSQLDeveloper, PowerShellHistory, PuttyHostKeys, \r\n        PuttySessions, RDCManFiles, RDPSavedConnections, SecPackageCreds, \r\n        SlackDownloads, SlackPresence, SlackWorkspaces, SuperPutty, \r\n        TokenGroups, WindowsCredentialFiles, WindowsVault\r\n\r\n   \"Seatbelt.exe -group=system\" runs the following commands:\r\n\r\n        AMSIProviders, AntiVirus, AppLocker, ARPTable, AuditPolicies, \r\n        AuditPolicyRegistry, AutoRuns, Certificates, CertificateThumbprints, \r\n        CredGuard, DNSCache, DotNet, EnvironmentPath, \r\n        EnvironmentVariables, Hotfixes, InterestingProcesses, InternetSettings, \r\n        LAPS, LastShutdown, LocalGPOs, LocalGroups, \r\n        LocalUsers, LogonSessions, LSASettings, McAfeeConfigs, \r\n        NamedPipes, NetworkProfiles, NetworkShares, NTLMSettings, \r\n        OptionalFeatures, OSInfo, PoweredOnEvents, PowerShell, \r\n        Processes, PSSessionSettings, RDPSessions, RDPsettings, \r\n        SCCM, SecureBoot, Services, Sysmon, \r\n        TcpConnections, TokenPrivileges, UAC, UdpConnections, \r\n        UserRightAssignments, WifiProfile, WindowsAutoLogon, WindowsDefender, \r\n        WindowsEventForwarding, WindowsFirewall, WMI, WMIEventConsumer, \r\n        WMIEventFilter, WMIFilterBinding, WSUS\r\n\r\n   \"Seatbelt.exe -group=slack\" runs the following commands:\r\n\r\n        SlackDownloads, SlackPresence, SlackWorkspaces\r\n\r\n   \"Seatbelt.exe -group=chromium\" runs the following commands:\r\n\r\n        ChromiumBookmarks, ChromiumHistory, ChromiumPresence\r\n\r\n   \"Seatbelt.exe -group=remote\" runs the following commands:\r\n\r\n        AMSIProviders, AntiVirus, AuditPolicyRegistry, ChromiumPresence, CloudCredentials, \r\n        DNSCache, DotNet, DpapiMasterKeys, EnvironmentVariables, \r\n        ExplicitLogonEvents, ExplorerRunCommands, FileZilla, Hotfixes, \r\n        InterestingProcesses, KeePass, LastShutdown, LocalGroups, \r\n        LocalUsers, LogonEvents, LogonSessions, LSASettings, \r\n        MappedDrives, NetworkProfiles, NetworkShares, NTLMSettings, \r\n        OptionalFeatures, OSInfo, PoweredOnEvents, PowerShell, \r\n        ProcessOwners, PSSessionSettings, PuttyHostKeys, PuttySessions, \r\n        RDPSavedConnections, RDPSessions, RDPsettings, SecureBoot, \r\n        Sysmon, WindowsDefender, WindowsEventForwarding, WindowsFirewall\r\n        \r\n\r\n   \"Seatbelt.exe -group=misc\" runs the following commands:\r\n\r\n        ChromiumBookmarks, ChromiumHistory, ExplicitLogonEvents, FileInfo, FirefoxHistory, \r\n        InstalledProducts, InterestingFiles, LogonEvents, LOLBAS, \r\n        McAfeeSiteList, MicrosoftUpdates, OutlookDownloads, PowerShellEvents, \r\n        Printers, ProcessCreationEvents, ProcessOwners, RecycleBin, \r\n        reg, RPCMappedEndpoints, ScheduledTasks, SearchIndex, \r\n        SecurityPackages, SysmonEvents\r\n\r\n\r\nExamples:\r\n    'Seatbelt.exe <Command> [Command2] ...' will run one or more specified checks only\r\n    'Seatbelt.exe <Command> -full' will return complete results for a command without any filtering.\r\n    'Seatbelt.exe \"<Command> [argument]\"' will pass an argument to a command that supports it (note the quotes).\r\n    'Seatbelt.exe -group=all' will run ALL enumeration checks, can be combined with \"-full\".\r\n    'Seatbelt.exe -group=all -AuditPolicies' will run all enumeration checks EXCEPT AuditPolicies, can be combined with \"-full\".\r\n    'Seatbelt.exe <Command> -computername=COMPUTER.DOMAIN.COM [-username=DOMAIN\\USER -password=PASSWORD]' will run an applicable check remotely\r\n    'Seatbelt.exe -group=remote -computername=COMPUTER.DOMAIN.COM [-username=DOMAIN\\USER -password=PASSWORD]' will run remote specific checks\r\n    'Seatbelt.exe -group=system -outputfile=\"C:\\Temp\\out.txt\"' will run system checks and output to a .txt file.\r\n    'Seatbelt.exe -group=user -q -outputfile=\"C:\\Temp\\out.json\"' will run in quiet mode with user checks and output to a .json file.\r\n```\r\n\r\n**Note:** searches that target users will run for the current user if not-elevated and for ALL users if elevated.\r\n\r\n\r\n## Command Groups\r\n\r\n**Note:** many commands do some type of filtering by default. Supplying the `-full` argument prevents filtering output. Also, the command group `all` will run all current checks.\r\n\r\nFor example, the following command will run ALL checks and returns ALL output:\r\n\r\n`Seatbelt.exe -group=all -full`\r\n\r\n### system\r\n\r\nRuns checks that mine interesting data about the system.\r\n\r\nExecuted with: `Seatbelt.exe -group=system`\r\n\r\n| Command | Description |\r\n| ----------- | ----------- |\r\n| AMSIProviders | Providers registered for AMSI |\r\n| AntiVirus |  Registered antivirus (via WMI) |\r\n| AppLocker | AppLocker settings, if installed |\r\n| ARPTable | Lists the current ARP table and adapter information(equivalent to arp -a) |\r\n| AuditPolicies | Enumerates classic and advanced audit policy settings |\r\n| AuditPolicyRegistry | Audit settings via the registry |\r\n| AutoRuns | Auto run executables/scripts/programs |\r\n| Certificates | User and machine personal certificate files |\r\n| CertificateThumbprints | Thumbprints for all certificate store certs on the system |\r\n| CredGuard | CredentialGuard configuration |\r\n| DNSCache | DNS cache entries (via WMI) |\r\n| DotNet | DotNet versions |\r\n| EnvironmentPath | Current environment %PATH$ folders and SDDL information |\r\n| EnvironmentVariables | Current user environment variables |\r\n| Hotfixes | Installed hotfixes (via WMI) |\r\n| InterestingProcesses | \"Interesting\" processes - defensive products and admin tools |\r\n| InternetSettings | Internet settings including proxy configs |\r\n| LAPS | LAPS settings, if installed |\r\n| LastShutdown | Returns the DateTime of the last system shutdown (via the registry) |\r\n| LocalGPOs |  Local Group Policy settings applied to the machine/local users |\r\n| LocalGroups | Non-empty local groups, \"full\" displays all groups (argument == computername to enumerate) |\r\n| LocalUsers | Local users, whether they're active/disabled, and pwd last set (argument == computername to enumerate) |\r\n| LogonSessions | Logon events (Event ID 4624) from the security event log. Default of 10 days, argument == last X days. |\r\n| LSASettings | LSA settings (including auth packages) |\r\n| McAfeeConfigs | Finds McAfee configuration files |\r\n| NamedPipes | Named pipe names and any readable ACL information |\r\n| NetworkProfiles | Windows network profiles |\r\n| NetworkShares |  Network shares exposed by the machine (via WMI) |\r\n| NTLMSettings | NTLM authentication settings |\r\n| OptionalFeatures | TODO |\r\n| OSInfo | Basic OS info (i.e. architecture, OS version, etc.) |\r\n| PoweredOnEvents | Reboot and sleep schedule based on the System event log EIDs 1, 12, 13, 42, and 6008. Default of 7 days, argument == last X days. |\r\n| PowerShell | PowerShell versions and security settings |\r\n| Processes | Running processes with file info company names that don't contain 'Microsoft', \"full\" enumerates all processes |\r\n| PSSessionSettings | Enumerates PS Session Settings from the registry |\r\n| RDPSessions | Current incoming RDP sessions (argument == computername to enumerate) |\r\n| RDPsettings | Remote Desktop Server/Client Settings |\r\n| SCCM | System Center Configuration Manager (SCCM) settings, if applicable |\r\n| Services | Services with file info company names that don't contain 'Microsoft', \"full\" dumps all processes |\r\n| Sysmon | Sysmon configuration from the registry |\r\n| TcpConnections |  Current TCP connections and their associated processes and services |\r\n| TokenPrivileges | Currently enabled token privileges (e.g. SeDebugPrivilege/etc.) |\r\n| UAC | UAC system policies via the registry |\r\n| UdpConnections | Current UDP connections and associated processes and services |\r\n| UserRightAssignments | Configured User Right Assignments (e.g. SeDenyNetworkLogonRight, SeShutdownPrivilege, etc.) argument == computername to enumerate |\r\n| WifiProfile | TODO |\r\n| WindowsAutoLogon | Registry autologon information |\r\n| WindowsDefender | Windows Defender settings (including exclusion locations) |\r\n| WindowsEventForwarding | Windows Event Forwarding (WEF) settings via the registry |\r\n| WindowsFirewall | Non-standard firewall rules, \"full\" dumps all (arguments == allow/deny/tcp/udp/in/out/domain/private/public) |\r\n| WMIEventConsumer | Lists WMI Event Consumers |\r\n| WMIEventFilter | Lists WMI Event Filters |\r\n| WMIFilterBinding | Lists WMI Filter to Consumer Bindings |\r\n| WSUS | Windows Server Update Services (WSUS) settings, if applicable |\r\n\r\n\r\n### user\r\n\r\nRuns checks that mine interesting data about the currently logged on user (if not elevated) or ALL users (if elevated).\r\n\r\nExecuted with: `Seatbelt.exe -group=user`\r\n\r\n| Command | Description |\r\n| ----------- | ----------- |\r\n| Certificates | User and machine personal certificate files |\r\n| CertificateThumbprints | Thumbprints for all certificate store certs on the system |\r\n| ChromiumPresence | Checks if interesting Chrome/Edge/Brave/Opera files exist |\r\n| CloudCredentials | AWS/Google/Azure cloud credential files |\r\n| CloudSyncProviders | TODO |\r\n| CredEnum | Enumerates the current user's saved credentials using CredEnumerate() |\r\n| dir | Lists files/folders. By default, lists users' downloads, documents, and desktop folders (arguments == \\<directory\\> \\<depth\\> \\<regex\\> |\r\n| DpapiMasterKeys | List DPAPI master keys |\r\n| Dsregcmd | TODO |\r\n| ExplorerMRUs | Explorer most recently used files (last 7 days, argument == last X days) |\r\n| ExplorerRunCommands | Recent Explorer \"run\" commands |\r\n| FileZilla | FileZilla configuration files |\r\n| FirefoxPresence | Checks if interesting Firefox files exist |\r\n| IdleTime | Returns the number of seconds since the current user's last input. |\r\n| IEFavorites | Internet Explorer favorites |\r\n| IETabs | Open Internet Explorer tabs |\r\n| IEUrls| Internet Explorer typed URLs (last 7 days, argument == last X days) |\r\n| KeePass | TODO |\r\n| MappedDrives | Users' mapped drives (via WMI) |\r\n| OfficeMRUs | Office most recently used file list (last 7 days) |\r\n| OneNote | TODO |\r\n| OracleSQLDeveloper | TODO |\r\n| PowerShellHistory | Iterates through every local user and attempts to read their PowerShell console history if successful will print it  |\r\n| PuttyHostKeys | Saved Putty SSH host keys |\r\n| PuttySessions | Saved Putty configuration (interesting fields) and SSH host keys |\r\n| RDCManFiles | Windows Remote Desktop Connection Manager settings files |\r\n| RDPSavedConnections | Saved RDP connections stored in the registry |\r\n| SecPackageCreds | Obtains credentials from security packages |\r\n| SlackDownloads | Parses any found 'slack-downloads' files |\r\n| SlackPresence | Checks if interesting Slack files exist |\r\n| SlackWorkspaces | Parses any found 'slack-workspaces' files |\r\n| SuperPutty | SuperPutty configuration files |\r\n| TokenGroups | The current token's local and domain groups |\r\n| WindowsCredentialFiles | Windows credential DPAPI blobs |\r\n| WindowsVault | Credentials saved in the Windows Vault (i.e. logins from Internet Explorer and Edge). |\r\n\r\n\r\n### misc\r\n\r\nRuns all miscellaneous checks.\r\n\r\nExecuted with: `Seatbelt.exe -group=misc`\r\n\r\n| Command | Description |\r\n| ----------- | ----------- |\r\n| ChromiumBookmarks | Parses any found Chrome/Edge/Brave/Opera bookmark files |\r\n| ChromiumHistory | Parses any found Chrome/Edge/Brave/Opera history files |\r\n| ExplicitLogonEvents | Explicit Logon events (Event ID 4648) from the security event log. Default of 7 days, argument == last X days. |\r\n| FileInfo | Information about a file (version information, timestamps, basic PE info, etc. argument(s) == file path(s) |\r\n| FirefoxHistory | Parses any found FireFox history files |\r\n| InstalledProducts | Installed products via the registry |\r\n| InterestingFiles | \"Interesting\" files matching various patterns in the user's folder. Note: takes non-trivial time. |\r\n| LogonEvents | Logon events (Event ID 4624) from the security event log. Default of 10 days, argument == last X days. |\r\n| LOLBAS | Locates Living Off The Land Binaries and Scripts (LOLBAS) on the system. Note: takes non-trivial time. |\r\n| McAfeeSiteList | Decrypt any found McAfee SiteList.xml configuration files. |\r\n| MicrosoftUpdates | All Microsoft updates (via COM) |\r\n| OutlookDownloads | List files downloaded by Outlook |\r\n| PowerShellEvents | PowerShell script block logs (4104) with sensitive data. |\r\n| Printers | Installed Printers (via WMI) |\r\n| ProcessCreationEvents | Process creation logs (4688) with sensitive data. |\r\n| ProcessOwners | Running non-session 0 process list with owners. For remote use. |\r\n| RecycleBin | Items in the Recycle Bin deleted in the last 30 days - only works from a user context! |\r\n| reg | Registry key values (HKLM\\Software by default) argument == [Path] [intDepth] [Regex] [boolIgnoreErrors] |\r\n| RPCMappedEndpoints | Current RPC endpoints mapped |\r\n| ScheduledTasks | Scheduled tasks (via WMI) that aren't authored by 'Microsoft', \"full\" dumps all Scheduled tasks |\r\n| SearchIndex | Query results from the Windows Search Index, default term of 'passsword'. (argument(s) == \\<search path\\> \\<pattern1,pattern2,...\\> |\r\n| SecurityPackages | Enumerates the security packages currently available using EnumerateSecurityPackagesA() |\r\n| SysmonEvents | Sysmon process creation logs (1) with sensitive data. |\r\n\r\n\r\n### Additional Command Groups\r\n\r\nExecuted with: `Seatbelt.exe -group=GROUPNAME`\r\n\r\n| Alias | Description |\r\n| ----------- | ----------- |\r\n| Slack | Runs modules that start with \"Slack*\" |\r\n| Chromium | Runs modules that start with \"Chromium*\" |\r\n| Remote | Runs the following modules (for use against a remote system): AMSIProviders, AntiVirus, AuditPolicyRegistry, ChromiumPresence, CloudCredentials, DNSCache, DotNet, DpapiMasterKeys, EnvironmentVariables, ExplicitLogonEvents, ExplorerRunCommands, FileZilla, Hotfixes, InterestingProcesses, KeePass, LastShutdown, LocalGroups, LocalUsers, LogonEvents, LogonSessions, LSASettings, MappedDrives, NetworkProfiles, NetworkShares, NTLMSettings, OptionalFeatures, OSInfo, PoweredOnEvents, PowerShell, ProcessOwners, PSSessionSettings, PuttyHostKeys, PuttySessions, RDPSavedConnections, RDPSessions, RDPsettings, Sysmon, WindowsDefender, WindowsEventForwarding, WindowsFirewall |\r\n\r\n\r\n## Command Arguments\r\n\r\nCommand that accept arguments have it noted in their description. To pass an argument to a command, enclose the command an arguments in double quotes.\r\n\r\nFor example, the following command returns 4624 logon events for the last 30 days:\r\n\r\n`Seatbelt.exe \"LogonEvents 30\"`\r\n\r\nThe following command queries a registry three levels deep, returning only keys/valueNames/values that match the regex `.*defini.*`, and ignoring any errors that occur.\r\n\r\n`Seatbelt.exe \"reg \\\"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\\" 3 .*defini.* true\"`\r\n\r\n\r\n## Output\r\n\r\nSeatbelt can redirect its output to a file with the `-outputfile=\"C:\\Path\\file.txt\"` argument. If the file path ends in .json, the output will be structured json.\r\n\r\nFor example, the following command will output the results of system checks to a txt file:\r\n\r\n`Seatbelt.exe -group=system -outputfile=\"C:\\Temp\\system.txt\"`\r\n\r\n\r\n## Remote Enumeration\r\n\r\nCommands noted with a + in the help menu can be run remotely against another system. This is performed over WMI via queries for WMI classes and WMI's StdRegProv for registry enumeration.\r\n\r\nTo enumerate a remote system, supply `-computername=COMPUTER.DOMAIN.COM` - an alternate username and password can be specified with `-username=DOMAIN\\USER -password=PASSWORD`\r\n\r\nFor example, the following command runs remote-focused checks against a remote system:\r\n\r\n`Seatbelt.exe -group=remote -computername=192.168.230.209 -username=THESHIRE\\sam -password=\"yum \\\"po-ta-toes\\\"\"`\r\n\r\n\r\n## Building Your Own Modules\r\n\r\nSeatbelt's structure is completely modular, allowing for additional command modules to be dropped into the file structure and loaded up dynamically.\r\n\r\nThere is a commented command module template at `.\\Seatbelt\\Commands\\Template.cs` for reference. Once built, drop the module in the logical file location, include it in the project in the Visual Studio Solution Explorer, and compile.\r\n\r\n\r\n## Compile Instructions\r\n\r\nWe are not planning on releasing binaries for Seatbelt, so you will have to compile yourself.\r\n\r\nSeatbelt has been built against .NET 3.5 and 4.0 with C# 8.0 features and is compatible with [Visual Studio Community Edition](https://visualstudio.microsoft.com/downloads/). Simply open up the project .sln, choose \"release\", and build. To change the target .NET framework version, [modify the project's settings](https://github.com/GhostPack/Seatbelt/issues/27) and rebuild the project.\r\n\r\n\r\n## Acknowledgments\r\n\r\nSeatbelt incorporates various collection items, code C# snippets, and bits of PoCs found throughout research for its capabilities. These ideas, snippets, and authors are highlighted in the appropriate locations in the source code, and include:\r\n\r\n* [@andrewchiles](https://twitter.com/andrewchiles)' [HostEnum.ps1](https://github.com/threatexpress/red-team-scripts/blob/master/HostEnum.ps1) script and [@tifkin\\_](https://twitter.com/tifkin_)'s [Get-HostProfile.ps1](https://github.com/leechristensen/Random/blob/master/PowerShellScripts/Get-HostProfile.ps1) provided inspiration for many of the artifacts to collect.\r\n* [Boboes' code concerning NetLocalGroupGetMembers](https://stackoverflow.com/questions/33935825/pinvoke-netlocalgroupgetmembers-runs-into-fatalexecutionengineerror/33939889#33939889)\r\n* [ambyte's code for converting a mapped drive letter to a network path](https://gist.github.com/ambyte/01664dc7ee576f69042c)\r\n* [Igor Korkhov's code to retrieve current token group information](https://stackoverflow.com/questions/2146153/how-to-get-the-logon-sid-in-c-sharp/2146418#2146418)\r\n* [RobSiklos' snippet to determine if a host is a virtual machine](https://stackoverflow.com/questions/498371/how-to-detect-if-my-application-is-running-in-a-virtual-machine/11145280#11145280)\r\n* [JGU's snippet on file/folder ACL right comparison](https://stackoverflow.com/questions/1410127/c-sharp-test-if-user-has-write-access-to-a-folder/21996345#21996345)\r\n* [Rod Stephens' pattern for recursive file enumeration](http://csharphelper.com/blog/2015/06/find-files-that-match-multiple-patterns-in-c/)\r\n* [SwDevMan81's snippet for enumerating current token privileges](https://stackoverflow.com/questions/4349743/setting-size-of-token-privileges-luid-and-attributes-array-returned-by-gettokeni)\r\n* [Jared Atkinson's PowerShell work on Kerberos ticket caches](https://github.com/Invoke-IR/ACE/blob/master/ACE-Management/PS-ACE/Scripts/ACE_Get-KerberosTicketCache.ps1)\r\n* [darkmatter08's Kerberos C# snippet](https://www.dreamincode.net/forums/topic/135033-increment-memory-pointer-issue/)\r\n* Numerous [PInvoke.net](https://www.pinvoke.net/) samples <3\r\n* [Jared Hill's awesome CodeProject to use Local Security Authority to Enumerate User Sessions](https://www.codeproject.com/Articles/18179/Using-the-Local-Security-Authority-to-Enumerate-Us)\r\n* [Fred's code on querying the ARP cache](https://social.technet.microsoft.com/Forums/lync/en-US/e949b8d6-17ad-4afc-88cd-0019a3ac9df9/powershell-alternative-to-arp-a?forum=ITCG)\r\n* [ShuggyCoUk's snippet on querying the TCP connection table](https://stackoverflow.com/questions/577433/which-pid-listens-on-a-given-port-in-c-sharp/577660#577660)\r\n* [yizhang82's example of using reflection to interact with COM objects through C#](https://gist.github.com/yizhang82/a1268d3ea7295a8a1496e01d60ada816)\r\n* [@djhohnstein](https://twitter.com/djhohnstein)'s [SharpWeb project](https://github.com/djhohnstein/SharpWeb/blob/master/Edge/SharpEdge.cs)\r\n* [@djhohnstein](https://twitter.com/djhohnstein)'s [EventLogParser project](https://github.com/djhohnstein/EventLogParser)\r\n* [@cmaddalena](https://twitter.com/cmaddalena)'s [SharpCloud project](https://github.com/chrismaddalena/SharpCloud), BSD 3-Clause\r\n* [@_RastaMouse](https://twitter.com/_RastaMouse)'s [Watson project](https://github.com/rasta-mouse/Watson/), GPL License\r\n* [@_RastaMouse](https://twitter.com/_RastaMouse)'s [Work on AppLocker enumeration](https://rastamouse.me/2018/09/enumerating-applocker-config/)\r\n* [@peewpw](https://twitter.com/peewpw)'s [Invoke-WCMDump project](https://github.com/peewpw/Invoke-WCMDump/blob/master/Invoke-WCMDump.ps1), GPL License\r\n* TrustedSec's [HoneyBadger project](https://github.com/trustedsec/HoneyBadger/tree/master/modules/post/windows/gather), BSD 3-Clause\r\n* CENTRAL Solutions's [Audit User Rights Assignment Project](https://www.centrel-solutions.com/support/tools.aspx?feature=auditrights), No license\r\n* Collection ideas inspired from [@ukstufus](https://twitter.com/ukstufus)'s [Reconerator](https://github.com/stufus/reconerator)\r\n* Office MRU locations and timestamp parsing information from Dustin Hurlbut's paper [Microsoft Office 2007, 2010 - Registry Artifacts](https://ad-pdf.s3.amazonaws.com/Microsoft_Office_2007-2010_Registry_ArtifactsFINAL.pdf)\r\n* The [Windows Commands list](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands), used for sensitive regex construction\r\n* [Ryan Ries' code for enumeration mapped RPC endpoints](https://stackoverflow.com/questions/21805038/how-do-i-pinvoke-rpcmgmtepeltinqnext)\r\n* [Chris Haas' post on EnumerateSecurityPackages()](https://stackoverflow.com/a/5941873)\r\n* [darkoperator](carlos_perez)'s work [on the HoneyBadger project](https://github.com/trustedsec/HoneyBadger)\r\n* [@airzero24](https://twitter.com/airzero24)'s work on [WMI Registry enumeration](https://github.com/airzero24/WMIReg)\r\n* Alexandru's answer on [RegistryKey.OpenBaseKey alternatives](https://stackoverflow.com/questions/26217199/what-are-some-alternatives-to-registrykey-openbasekey-in-net-3-5)\r\n* Tomas Vera's [post on JavaScriptSerializer](http://www.tomasvera.com/programming/using-javascriptserializer-to-parse-json-objects/)\r\n* Marc Gravell's [note on recursively listing files/folders](https://stackoverflow.com/a/929418)\r\n* [@mattifestation](https://twitter.com/mattifestation)'s [Sysmon rule parser](https://github.com/mattifestation/PSSysmonTools/blob/master/PSSysmonTools/Code/SysmonRuleParser.ps1#L589-L595)\r\n* Some inspiration from spolnik's [Simple.CredentialsManager project](https://github.com/spolnik/Simple.CredentialsManager), Apache 2 license\r\n* [This post on Credential Guard settings](https://www.tenforums.com/tutorials/68926-verify-if-device-guard-enabled-disabled-windows-10-a.html)\r\n* [This thread](https://social.technet.microsoft.com/Forums/windows/en-US/b0e13a16-51a6-4aca-8d44-c85e097f882b/nametype-in-nla-information-for-a-network-profile) on network profile information\r\n* Mark McKinnon's post on [decoding the DateCreated and DateLastConnected SSID values](http://cfed-ttf.blogspot.com/2009/08/decoding-datecreated-and.html)\r\n* This Specops [post on group policy caching](https://specopssoft.com/blog/things-work-group-policy-caching/)\r\n* sa_ddam213's StackOverflow post on [enumerating items in the Recycle Bin](https://stackoverflow.com/questions/18071412/list-filenames-in-the-recyclebin-with-c-sharp-without-using-any-external-files)\r\n* Kirill Osenkov's [code for managed assembly detection](https://stackoverflow.com/a/15608028)\r\n* The [Mono project](https://github.com/mono/linux-packaging-mono/blob/d356d2b7db91d62b80a61eeb6fbc70a402ac3cac/external/corefx/LICENSE.TXT) for the SecBuffer/SecBufferDesc classes\r\n* [Elad Shamir](https://twitter.com/elad_shamir) and his [Internal-Monologue](https://github.com/eladshamir/Internal-Monologue/) project, [Vincent Le Toux](https://twitter.com/mysmartlogon) for his [DetectPasswordViaNTLMInFlow](https://github.com/vletoux/DetectPasswordViaNTLMInFlow/) project, and Lee Christensen for this [GetNTLMChallenge](https://github.com/leechristensen/GetNTLMChallenge/) project. All of these served as inspiration int he SecPackageCreds command.\r\n* @leftp and @eksperience's [Gopher project](https://github.com/EncodeGroup/Gopher) for inspiration for the FileZilla and SuperPutty commands\r\n* @funoverip for the original McAfee SiteList.xml decryption code\r\n\r\nWe've tried to do our due diligence for citations, but if we've left someone/something out, please let us know!\r\n"
        },
        {
          "name": "Seatbelt.sln",
          "type": "blob",
          "size": 1.09375,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.28010.0\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Seatbelt\", \"Seatbelt\\Seatbelt.csproj\", \"{AEC32155-D589-4150-8FE7-2900DF4554C8}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{AEC32155-D589-4150-8FE7-2900DF4554C8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{AEC32155-D589-4150-8FE7-2900DF4554C8}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{AEC32155-D589-4150-8FE7-2900DF4554C8}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{AEC32155-D589-4150-8FE7-2900DF4554C8}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {582494D9-B9F0-40F9-B7B3-4483685E6732}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "Seatbelt",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}