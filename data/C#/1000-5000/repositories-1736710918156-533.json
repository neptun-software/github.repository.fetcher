{
  "metadata": {
    "timestamp": 1736710918156,
    "page": 533,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "2881099/csredis",
      "stars": 2028,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.7548828125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\n[Xx]64/\n[Xx]86/\n[Bb]uild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\npackage-lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# TODO: Un-comment the next line if you do not want to checkin \n# your web deploy settings because they may include unencrypted\n# passwords\n#*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Microsoft Azure ApplicationInsights config file\nApplicationInsights.config\n\n# Windows Store app package directory\nAppPackages/\nBundleArtifacts/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# LightSwitch generated files\nGeneratedArtifacts/\nModelManifest.xml\n\n# Paket dependency manager\n.paket/paket.exe\n\n# FAKE - F# Make\n.fake/"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0341796875,
          "content": "MIT License\n\nCopyright (c) 2018 Ye\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.298828125,
          "content": "## Features\n\n- CSRedisClient and RedisHelper Keep all method names consistent with redis-cli\n\n- Support geo type commands (redis-server 3.2 or above is required)\n\n- Support Redis Cluster redis-trib.rb\n\n- Support Redis Sentinel and master-slave\n\n- Supports stream type commands (requires redis-server 5.0 and above)\n\n| Package Name |  NuGet | Downloads | |\n|--------------|  ------- |  ---- | -- |\n| CSRedisCore | [![nuget](https://img.shields.io/nuget/v/CSRedisCore.svg?style=flat-square)](https://www.nuget.org/packages/CSRedisCore) | [![stats](https://img.shields.io/nuget/dt/CSRedisCore.svg?style=flat-square)](https://www.nuget.org/stats/packages/CSRedisCore?groupby=Version) |\n| Caching.CSRedis | [![nuget](https://img.shields.io/nuget/v/Caching.CSRedis.svg?style=flat-square)](https://www.nuget.org/packages/Caching.CSRedis) | [![stats](https://img.shields.io/nuget/dt/Caching.CSRedis.svg?style=flat-square)](https://www.nuget.org/stats/packages/Caching.CSRedis?groupby=Version) | IDistributedCache |\n\n> dotnet add package CSRedisCore\n\n## Single machine redis\n\n```csharp\nvar csredis = new CSRedis.CSRedisClient(\"127.0.0.1:6379,password=123,defaultDatabase=13,prefix=my_\");\n```\n\n| Parameter         | Default   | Explain |\n| :---------------- | --------: | :------------------- |\n| user              | \\<Empty\\> | Redis server user (redis 6.0+) |\n| password          | \\<Empty\\> | Redis server password |\n| defaultDatabase   | 0         | Redis server database |\n| **asyncPipeline** | false     | The asynchronous method automatically uses pipeline, and the 10W concurrent time is 450ms (welcome to feedback) |\n| poolsize          | 50        | Connection pool size |\n| idleTimeout       | 20000     | Idle time of elements in the connection pool (MS), suitable for connecting to remote redis server |\n| connectTimeout    | 5000      | Connection timeout (MS) |\n| syncTimeout       | 10000     | Send / receive timeout (MS) |\n| preheat           | 5         | Preheat connections, receive values such as preheat = 5 preheat 5 connections |\n| autoDispose       | true      | Follow system exit event to release automatically |\n| ssl               | false     | Enable encrypted transmission |\n| testcluster       | true      | 是否尝试集群模式，阿里云、腾讯云集群需要设置此选项为 false |\n| tryit             | 0         | Execution error, retry attempts |\n| name              | \\<Empty\\> | Connection name, use client list command to view |\n| prefix            | \\<Empty\\> | key前辍，所有方法都会附带此前辍，csredis.Set(prefix + \"key\", 111); |\n\n> IPv6: [fe80::b164:55b3:4b4f:7ce6%15]:6379\n\n# Redis Sentinel\n\n```csharp\nvar csredis = new CSRedis.CSRedisClient(\"mymaster,password=123,prefix=my_\", \n  new [] { \"192.169.1.10:26379\", \"192.169.1.11:26379\", \"192.169.1.12:26379\" });\n```\n\nRead only: new CSRedisClient(\"mymaster,password=123\", new [] { Sentinels }, false)\n\n# Redis Cluster\n\n假设你已经配置好 redis-trib 集群，定义一个【普通模式】的 CSRedisClient 对象，它会根据 redis-server 返回的 MOVED | ASK 错误记录slot，自动增加节点 Nodes 属性。\n\n> 127.0.0.1:6379,password=123,defaultDatabase=0,poolsize=50,prefix=\n\n> 其他节点在运行过程中自动增加，确保每个节点密码一致。\n\n警告：本模式与【分区模式】同时使用时，切记不可设置“prefix=key前辍”（或者全部设置成一样），否则会导致 keySlot 计算结果与服务端不匹配，无法记录 slotCache。\n\n> 注意：官方集群不支持多 keys 的命令、【管道】、Eval（脚本）等众多杀手级功能。\n\n# IDistributedCache\n\n> dotnet add package Caching.CSRedis\n\n```csharp\nRedisHelper.Initialization(csredis);\nservices.AddSingleton<IDistributedCache>(new Microsoft.Extensions.Caching.Redis.CSRedisCache(RedisHelper.Instance));\n```\n\n> Note: CSRedisClient is singleton, RedisHelper static class is recommended\n\n```csharp\nRedisHelper.Set(\"test1\", \"123123\", 60);\nRedisHelper.Get(\"test1\");\n//The method name is the same as the command of redis cli\n```\n\n# Operate on multiple databases\n\n```csharp\nvar connectionString = \"127.0.0.1:6379,password=123,poolsize=10\";\nvar redis = new CSRedisClient[14]; //Singleton\nfor (var a = 0; a< redis.Length; a++) \n  redis[a] = new CSRedisClient(connectionString + \",defaultDatabase=\" + a);\n\nredis[1].Get(\"test1\");\n```\n\n> Multiple RedisHelper\n\n```csharp\npublic abstract class MyHelper1 : RedisHelper<MyHelper1> {}\npublic abstract class MyHelper2 : RedisHelper<MyHelper2> {}\n\nMyHelper1.Initialization(new CSRedisClient(\"....\"));\nMyHelper2.Initialization(new CSRedisClient(\"....\"));\n```\n\n# Subscribe/Publish\n\n```csharp\n//Native subscribe\nRedisHelper.Subscribe(\n  (\"chan1\", msg => Console.WriteLine(msg.Body)),\n  (\"chan2\", msg => Console.WriteLine(msg.Body)));\n\nRedisHelper.PSubscribe(new[] { \"test*\", \"*test001\", \"test*002\" }, msg => {\n  Console.WriteLine($\"PSUB   {msg.MessageId}:{msg.Body}    {msg.Pattern}: chan:{msg.Channel}\");\n});\n\n//模式订阅已经解决的难题：\n//1、分区的节点匹配规则，导致通配符最大可能匹配全部节点，所以全部节点都要订阅\n//2、本组 \"test*\", \"*test001\", \"test*002\" 订阅全部节点时，需要解决同一条消息不可执行多次\n\nRedisHelper.Publish(\"chan1\", \"123123123\");\n```\n\n参考资料：[【由浅至深】redis 实现发布订阅的几种方式](https://www.cnblogs.com/kellynic/p/9952386.html)\n\n# CacheShell\n\n```csharp\n//不加缓存的时候，要从数据库查询\nvar t1 = Test.Select.WhereId(1).ToOne();\n\n//一般的缓存代码，如不封装还挺繁琐的\nvar cacheValue = RedisHelper.Get(\"test1\");\nif (!string.IsNullOrEmpty(cacheValue)) {\n\ttry {\n\t\treturn JsonConvert.DeserializeObject(cacheValue);\n\t} catch {\n\t\t//出错时删除key\n\t\tRedisHelper.Remove(\"test1\");\n\t\tthrow;\n\t}\n}\nvar t1 = Test.Select.WhereId(1).ToOne();\nRedisHelper.Set(\"test1\", JsonConvert.SerializeObject(t1), 10); //缓存10秒\n\n//使用缓存壳效果同上，以下示例使用 string 和 hash 缓存数据\nvar t1 = RedisHelper.CacheShell(\"test1\", 10, () => Test.Select.WhereId(1).ToOne());\nvar t2 = RedisHelper.CacheShell(\"test\", \"1\", 10, () => Test.Select.WhereId(1).ToOne());\nvar t3 = RedisHelper.CacheShell(\"test\", new [] { \"1\", \"2\" }, 10, notCacheFields => new [] {\n  (\"1\", Test.Select.WhereId(1).ToOne()),\n  (\"2\", Test.Select.WhereId(2).ToOne())\n});\n```\n\n# Pipeline\n\n使用管道模式，打包多条命令一起执行，从而提高性能。\n\n```csharp\nvar ret1 = RedisHelper.StartPipe(p => p.Set(\"a\", \"1\").Get(\"a\"));\n```\n\n# Benchmark\n\n100,000 operations\n\n```shell\nStackExchange.Redis StringSet：7882ms\nCSRedisCore Set：6101ms\n-------------------\nStackExchange.Redis StringGet：7729ms\nCSRedisCore Get：5762ms\n-------------------\nStackExchange.Redis StringSetAsync：8094ms\nCSRedisCore SetAsync：6315ms\n-------------------\nStackExchange.Redis StringGetAsync：7986ms\nCSRedisClient GetAsync：4931ms\nCSRedisCore GetAsync：5960ms\n-------------------\nCSRedisCore SetAsync(Task.WaitAll)：559ms\nStackExchange.Redis StringSetAsync (concurrent Task.WaitAll)：172ms\n-------------------\nCSRedisCore GetAsync(Task.WaitAll)：435ms\nStackExchange.Redis StringGetAsync (concurrent Task.WaitAll)：176ms\n```\n\n## 💕 Donation (捐赠)\n\n> 感谢你的打赏\n\n- [Alipay](https://www.cnblogs.com/FreeSql/gallery/image/338860.html)\n\n- [WeChat](https://www.cnblogs.com/FreeSql/gallery/image/338859.html)\n\n# Thank\n\nOriginal open source project: https://github.com/ctstone/csredis\n\n"
        },
        {
          "name": "csredis.sln",
          "type": "blob",
          "size": 2.33203125,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.29609.76\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CSRedisCore.Tests\", \"test\\CSRedisCore.Tests\\CSRedisCore.Tests.csproj\", \"{70B1F8DC-C245-421E-866D-3F4149692F69}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Help\", \"Help\", \"{A5960636-4D92-46C1-8902-7668FA64B69D}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CSRedisCore\", \"src\\CSRedisCore\\CSRedisCore.csproj\", \"{75C241B2-F18A-4F2E-8C17-80799DFFAAC3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Microsoft.Extensions.Caching.CSRedis\", \"src\\Microsoft.Extensions.Caching.CSRedis\\Microsoft.Extensions.Caching.CSRedis.csproj\", \"{D80EFF1F-91CF-4D22-B36E-3E345A41C05E}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{70B1F8DC-C245-421E-866D-3F4149692F69}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{70B1F8DC-C245-421E-866D-3F4149692F69}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{70B1F8DC-C245-421E-866D-3F4149692F69}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{70B1F8DC-C245-421E-866D-3F4149692F69}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{75C241B2-F18A-4F2E-8C17-80799DFFAAC3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{75C241B2-F18A-4F2E-8C17-80799DFFAAC3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{75C241B2-F18A-4F2E-8C17-80799DFFAAC3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{75C241B2-F18A-4F2E-8C17-80799DFFAAC3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D80EFF1F-91CF-4D22-B36E-3E345A41C05E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D80EFF1F-91CF-4D22-B36E-3E345A41C05E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D80EFF1F-91CF-4D22-B36E-3E345A41C05E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D80EFF1F-91CF-4D22-B36E-3E345A41C05E}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {CC7869DF-0D54-4191-AF80-ECE8C8AE6085}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 6.4990234375,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}