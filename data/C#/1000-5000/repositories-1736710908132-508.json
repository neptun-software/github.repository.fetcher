{
  "metadata": {
    "timestamp": 1736710908132,
    "page": 508,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Unity-Technologies/Unity-Robotics-Hub",
      "stars": 2097,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 1.9892578125,
          "content": "; see http://editorconfig.org/ for docs on this file\n; See https://github.com/dotnet/format for dotnet format\n\nroot = true\n\n[*]\nignore_if_in_header = This code was generated by a tool|<auto-generated>\nindent_style = space\nindent_size = 4\n; uncomment to help with sharing files across os's (i.e. network share or through local vm)\n#end_of_line = lf\n; avoid a bom, which causes endless problems with naive text tooling\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n; keeping auto-format enabled helps avoid merge hell for projects without CI-based format validation\n#disable_auto_format = true\n\n[*.cs]\n; uncomment to enable full formatting of c# files\nformatters = generic, uncrustify\n\n[*.asmdef]\nscrape_api = true\n\n[**/Tests/**.asmdef]\nscrape_api = false\n\n[*.Tests.asmdef]\nscrape_api = false\n\n[*.md]\nindent_size = 2\n; trailing whitespace is unfortunately significant in markdown\ntrim_trailing_whitespace = false\n; uncomment to enable basic formatting of markdown files\n#formatters = generic\n\n[{Makefile,makefile}]\n; tab characters are part of the Makefile format\nindent_style = tab\n\n[*.asmdef]\nindent_size = 4\n\n[*.json]\nindent_size = 2\n\n[*.{vcproj,bat,cmd,xaml,tt,t4,ttinclude}]\nend_of_line = crlf\n\n; this VS-specific stuff is based on experiments to see how VS will modify a file after it has been manually edited.\n; the settings are meant to closely match what VS does to minimize unnecessary diffs.\n[*.{vcxproj,vcxproj.filters}]\nindent_style = space\nindent_size = 2\nend_of_line = crlf\ncharset = utf-8-bom\ntrim_trailing_whitespace = true\ninsert_final_newline = false\n; must be broken out because of 51-char bug (https://github.com/editorconfig/editorconfig-visualstudio/issues/21)\n[*.{csproj,pyproj,props,targets}]\nindent_style = space\nindent_size = 2\nend_of_line = crlf\ncharset = utf-8-bom\ntrim_trailing_whitespace = true\ninsert_final_newline = false\n[*.{sln,sln.template}]\nindent_style = tab\nindent_size = 4\nend_of_line = crlf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.16796875,
          "content": ".DS_Store\n*.swp\n.idea\n.vscode/\n\n# Generated by local utr runs\n.Editor\n.download\n.bin\ntest-results\n\ntutorials/pick_and_place/PickAndPlaceProject/Packages/packages-lock.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.5166015625,
          "content": "[submodule \"tutorials/pick_and_place/ROS/src/niryo_one_ros\"]\n\tpath = tutorials/pick_and_place/ROS/src/niryo_one_ros\n\turl = https://github.com/NiryoRobotics/niryo_one_ros.git\n[submodule \"tutorials/pick_and_place/ROS/src/moveit_msgs\"]\n\tpath = tutorials/pick_and_place/ROS/src/moveit_msgs\n\turl = https://github.com/ros-planning/moveit_msgs.git\n[submodule \"tutorials/pick_and_place/ROS/src/ros_tcp_endpoint\"]\n\tpath = tutorials/pick_and_place/ROS/src/ros_tcp_endpoint\n\turl = https://github.com/Unity-Technologies/ROS-TCP-Endpoint.git\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.9921875,
          "content": "repos:\n    -   repo: https://github.com/pre-commit/pre-commit-hooks\n        rev: v4.0.1\n        hooks:\n            -   id: mixed-line-ending\n                exclude: >\n                    (?x)^(\n                        .*cs.meta|\n                        .*.css|\n                        .*.meta|\n                        .*.mat|\n                        .*.preset|\n                        .*.lighting|\n                        .*.dae\n                    )$\n                args: [--fix=lf]\n\n            -   id: trailing-whitespace\n                name: trailing-whitespace-markdown\n                types: [markdown]\n            -   id: check-merge-conflict\n                args: [--assume-in-merge]\n            -   id: check-yaml\n                # Won't handle the templating in yamato\n                exclude: \\.yamato/.*\n\n\n    - repo: https://github.com/dotnet/format\n      rev: v5.1.225507\n      hooks:\n          - id: dotnet-format\n            entry: dotnet-format whitespace\n            args: [--folder, --include]\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.5498046875,
          "content": "# Changelog\n\nAll notable changes to this repository will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/) and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n\n## Unreleased\n\n### Upgrade Notes\n\n### Known Issues\n\n### Added\n\n### Changed\n\n### Deprecated\n\n### Removed\n\n### Fixed\n\n\n## v0.7.0\n\n### Added\n\nAdded Sonarqube scanners.\n\n### Changed\n\nUpdates to PickAndPlace dependencies. ROS-TCP-Connector v0.7.0, ROS-TCP-Endpoint v0.7.0, URDF-Importer v 0.5.2\n\nUpdated PickAndPlace project and tutorial part2 for documnentation and compilation fixes.\n\n\n## v0.6.0 2021-10-04\n\n### Added\n\nFixed the ROS-Unity Integration tutorial `robo_demo.launch` to be up-to-date with file paths, and updated Pick-and-Place Part 2 ROS Settings screenshot.\n\nAdd the [Close Stale Issues](https://github.com/marketplace/actions/close-stale-issues) action\n\nUpdated Pick-and-Place scripts for style conformity, updated custom msg formats and made according script and tutorial changes.\n\n### Fixed\n\nFixed dotnet format\n\nFixed Source Destination topic on the ROS side\n\n## v0.5.1\n\n### Changed\n\nAdded link to Robotics-Nav2-SLAM-Example to list of \"Getting Started\" resources.\n\n### Fixed\n\nFixed the ROS-Unity Integration tutorial to use the correct link to install ROS-TCP-Connector package\n\nFixed the Pick and Place Tutorial to use ArticulationBody jointPositions, rather than the xDrive.target, for updating the current joint angle positions\n\nFixed network.md in ROS-Unity Integration tutorial by removing the obsolete UNITY_IP\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.48828125,
          "content": "Unity Robotics Hub copyright © 2020 Unity Technologies.\n\nThis software is subject to, and made available under the Apache 2.0 license (the “License”). You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0\n\nUnless expressly provided otherwise, the software under this license is made available strictly on an “AS IS” BASIS WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED. Please review the Terms of Service for details on these and other terms and conditions. \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.302734375,
          "content": "<p align=\"center\"><img src=\"images/warehouse.gif\"/></p>\n\n# Unity Robotics Hub\n\n<!-- [![Version](https://img.shields.io/github/v/tag/Unity-Technologies/Unity-Robotics-Hub)](https://github.com/Unity-Technologies/Unity-Robotics-Hub/releases) -->\n[![License](https://img.shields.io/badge/license-Apache--2.0-green.svg)](LICENSE.md)\n![ROS](https://img.shields.io/badge/ros-melodic-brightgreen)\n![ROS](https://img.shields.io/badge/ros-noetic-brightgreen)\n![ROS](https://img.shields.io/badge/ros2-foxy-brightgreen)\n![Unity](https://img.shields.io/badge/unity-2020.2+-brightgreen)\n\nThis is a central repository for tools, tutorials, resources, and documentation for robotic simulation in Unity.\n\n> The contents of this repository are in active development. Its features and API are subject to significant change as development progresses.\n\n---\n\nWe're currently working on lots of things! Please take a short moment fill out our [survey](https://unitysoftware.co1.qualtrics.com/jfe/form/SV_0ojVkDVW0nNrHkW) to help us identify what products and packages to build next.\n\n---\n\n## Introduction\n\nSimulation plays an important role in robotics development, and we’re here to ensure that roboticists can use Unity for these simulations. We're starting off with a set of tools to make it easier to use Unity with existing ROS-based workflows. Try out some of our samples below to get started quickly.\n\n## Getting Started\n### [Quick Installation Instructions](tutorials/quick_setup.md)\n\nBrief steps on installing the Unity Robotics packages.\n\n### [Pick-and-Place Tutorial](tutorials/pick_and_place/README.md)\n\nA complete end-to-end demonstration, including how to set up the Unity environment, how to import a robot from URDF, and how to set up two-way communication with ROS for control.\n\n### [Object Pose Estimation Tutorial](https://github.com/Unity-Technologies/Robotics-Object-Pose-Estimation)\n\nA complete end-to-end demonstration in which we collect training data in Unity and use that data to train a deep neural network to predict the pose of a cube. This model is then deployed in a simulated robotic pick-and-place task.\n\n### [Articulations Robot Demo](https://github.com/Unity-Technologies/articulations-robot-demo)\n\nA robot simulation demonstrating Unity's new physics solver (no ROS dependency).\n\n### [**New!**] [Navigation 2 SLAM Example](https://github.com/Unity-Technologies/Robotics-Nav2-SLAM-Example)\n\nAn example simulation environment, integrated with ROS 2 and **[New!] Visualizations**, which enables the exercise of ROS 2's Navigation 2 and slam_toolbox packages using a simulated Turtlebot 3.\n\n## Documentation\n\n| Tutorial | Description |\n|---|---|\n| [ROS–Unity Integration](tutorials/ros_unity_integration/README.md) | A set of component-level tutorials showing how to set up communication between ROS and Unity |\n| [URDF Importer](tutorials/urdf_importer/urdf_tutorial.md) | Steps on using the Unity package for loading [URDF](http://wiki.ros.org/urdf) files |\n| [**New!**] [Visualizations](https://github.com/Unity-Technologies/ROS-TCP-Connector/blob/main/com.unity.robotics.visualizations/Documentation~/README.md) | Usage instructions for adding visualizations for incoming and outgoing ROS messages |\n\n## Component Repos\n\n| Repo | Functionality |\n|---|---|\n| [ROS TCP Endpoint](https://github.com/Unity-Technologies/ROS-TCP-Endpoint) | ROS node for sending/receiving messages from Unity |\n| [ROS TCP Connector](https://github.com/Unity-Technologies/ROS-TCP-Connector) | Unity package for sending, receiving, and visualizing messages from ROS |\n| [URDF Importer](https://github.com/Unity-Technologies/URDF-Importer) | Unity package for loading [URDF](http://wiki.ros.org/urdf) files |\n\n\n\n## Additional Resources\n\n### Blog Posts and Talks\n\n- [**New!**] (October 4, 2021) Introducing: Unity Robotics Visualizations Package [blog post](https://blog.unity.com/manufacturing/Introducing-Unity-Robotics-Visualizations-Package)\n- (August 13, 2021) Advance your robot autonomy with ROS 2 and Unity [blog post](https://blog.unity.com/manufacturing/advance-your-robot-autonomy-with-ros-2-and-unity)\n- (March 2, 2021) Teaching robots to see with Unity [blog post](https://blogs.unity3d.com/2021/03/02/teaching-robots-to-see-with-unity/)\n- (November 19, 2020) Robotics simulation in Unity is as easy as 1, 2, 3! [blog post](https://blogs.unity3d.com/2020/11/19/robotics-simulation-in-unity-is-as-easy-as-1-2-3/)\n- (November 12, 2020)\nUnite Now 2020: Simulating Robots with ROS and Unity [video](https://resources.unity.com/unitenow/onlinesessions/simulating-robots-with-ros-and-unity)\n- (August 26, 2020)\nAnnouncing Unity Robotic Simulation [blog post](https://unity.com/solutions/automotive-transportation-manufacturing/robotics)\n- (May 20, 2020)\nUse articulation bodies to easily prototype industrial designs with realistic motion and behavior [blog post](https://blogs.unity3d.com/2020/05/20/use-articulation-bodies-to-easily-prototype-industrial-designs-with-realistic-motion-and-behavior/)\n\n### More from Unity\n\n- [Unity Industrial Simulation](https://unity.com/products/unity-simulation)\n- [Unity Computer Vision](https://unity.com/computer-vision)\n- [Unity ML-Agents Toolkit](https://github.com/Unity-Technologies/ml-agents)\n\n## New Physics Features in Unity\n### New Features\n- **Contact Modification API** This API will allow users to define custom contact reactions, such as ignoring subsets of contact points, in order to help simulate holes, slippery surfaces, soft contacts, and more. It is available in Unity versions **2021.2a12+**. [Read more about the new Contact Modification API](https://forum.unity.com/threads/experimental-contacts-modification-api.924809/).\n- **Collision detection modes exposed for ArticulationBody: discrete, sweep-based CCD, and speculative CCD**. New continuous collision detection (CCD) modes will ensure that fast-moving objects collide with objects, instead of tunneling or passing through those objects, which can happen in the default “discrete” mode. This API is available in Unity versions **2020.3.5f1+**. [Read more about continuous collision detection](https://docs.unity3d.com/2020.3/Documentation/ScriptReference/ArticulationBody-collisionDetectionMode.html).\n\n### Coming Soon\nHere’s a peek into what our Physics Team is hard at work on…\n\n- **Wheel Collider shapes**. This feature will allow the user to specify the shape of the collider to be used for collision detection. Currently the collider shape is fixed to a cylinder, and collision detection is performed by casting a ray from the center of the cylinder. Custom shapes will improve the accuracy of simulating wheels over rough terrains, holes, etc. [Read more about Wheel Collider](https://docs.unity3d.com/Manual/class-WheelCollider.html).\n- **Force/Torque Sensor API**. This API will allow users to get the force and torque acting on an articulation body (useful for simulating a force/torque sensor!), as well as to get the motor torque applied by an articulation drive.\n- **Query primitives**. These simple, GameObject-less shapes allow for collision detection without requiring simulation (i.e., without calling Physics.Simulate). This feature will allow users to initialize objects in feasible locations, and can also be used for motion planning.\n\n## ROS 2\nROS2 support is now available! You can get started by following [this tutorial](https://github.com/Unity-Technologies/Unity-Robotics-Hub/blob/main/tutorials/ros_unity_integration/publisher.md).\n\n## Community and Feedback\n\nThe Unity Robotics projects are open-source and we encourage and welcome contributions.\n\n## Support\n\nFor questions or discussions about Unity Robotics package installations or how to best set up and integrate your robotics projects, please create a new thread on the [Unity Robotics forum](https://forum.unity.com/forums/robotics.623/) and make sure to include as much detail as possible.\n\nFor feature requests, bugs, or other issues, please file a [GitHub issue](https://github.com/Unity-Technologies/Unity-Robotics-Hub/issues) using the provided templates and the Robotics team will investigate as soon as possible.\n\nFor any other questions or feedback, connect directly with the\nRobotics team at [unity-robotics@unity3d.com](mailto:unity-robotics@unity3d.com).\n\n## Newsletter\nTo get notified about new updates and features, [sign up for our newsletter](https://create.unity3d.com/robotics-simulation-newsletter-sign-up)!\n\n## FAQs\n[FAQs](faq.md)\n\n## License\n[Apache License 2.0](LICENSE.md)\n"
        },
        {
          "name": "Third Party Notices.md",
          "type": "blob",
          "size": 2.87890625,
          "content": "Component name: ROS# (siemens/ros-sharp)\n\nLicense Type: Apache 2.0\n\nCopyright 2017-2020 Siemens AG\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied. See the License for the\nspecific language governing permissions and limitations under the License.\n```\n\n---\n\nComponent Name: Niryo One ROS Stack (niryo_one_ros/niryo_one_description)\n\nLicense Type: GPLv3\n\n```\nCopyright (C) 2017 Niryo\nAll rights reserved.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n```\n\n---\n\nComponent Name: MoveIt Msgs (ros-planning/moveit_msgs)\n\nLicense Type: BSD 3-clause\n\n```\nCopyright (c)\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n  Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\n  Neither the name of the copyright holder nor the names of its contributors\n  may be used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n"
        },
        {
          "name": "faq.md",
          "type": "blob",
          "size": 5.3974609375,
          "content": "# Frequently Asked Questions & Troubleshooting\n\n- [Frequently Asked Questions & Troubleshooting](#frequently-asked-questions--troubleshooting)\n- [General Questions](#general-questions)\n\t- [Is ROS 2 support planned?](#is-ros-2-support-planned)\n\t- [How does your Unity integration compare to ROS#?](#how-does-your-unity-integration-compare-to-ros)\n\t- [How can I install the Unity Packages without starting from a template project?](#how-can-i-install-the-unity-packages-without-starting-from-a-template-project)\n- [ROS-TCP Endpoint/Connector](#ros-tcp-endpointconnector)\n\t- [How does the TCP Endpoint compare to Rosbridge Server?](#how-does-the-tcp-endpoint-compare-to-rosbridge-server)\n\t- [I'm getting the error: `...failed because unknown error handler name 'rosmsg'`.](#im-getting-the-error-failed-because-unknown-error-handler-name-rosmsg)\n- [URDF-Importer](#urdf-importer)\n\t- [I don't see an option to Import Robot from URDF, or I have compile errors upon importing the URDF-Importer.](#i-dont-see-an-option-to-import-robot-from-urdf-or-i-have-compile-errors-upon-importing-the-urdf-importer)\n- [Can't find what you're looking for?](#cant-find-what-youre-looking-for)\n\n# General Questions\nDoes the package support ROS 2?\n---\nYes it does! You can get started by following [this tutorial](https://github.com/Unity-Technologies/Unity-Robotics-Hub/blob/main/tutorials/ros_unity_integration/publisher.md).\n\nHow does your Unity integration compare to ROS#?\n---\nTwo of the Unity Robotics repos (URDF Importer and TCP Connector) have been forked from the [Siemens ROS# repo](https://github.com/siemens/ros-sharp).\n\nIn the URDF Importer we have added the functionality to instantiate a robot from URDF into a Unity scene with [Articulation Body](https://docs.unity3d.com/2020.2/Documentation/Manual/class-ArticulationBody.html) components on their corresponding joints.\n\nAside from facilitating communication with the TCP Endpoint, the TCP Connector contains an adapted version of the `MessageGeneration` code from ROS#. However, unlike ROS# our messages are transmitted in ROS's own serialization format, eliminating the JSON encoding/decoding step for some significant performance improvements.\n\nYou can find more details about the differences between our implementation and ROS#, along with some of their future plans, in the [ROS# project](https://github.com/siemens/ros-sharp/wiki/Ext_RosSharp_RoboticsHub#differences-between-unity-robotics-hub-and-ros).\n\nHow can I install the Unity Packages without starting from a template project?\n---\nRefer to the [Quick Start](tutorials/quick_setup.md) instructions on how to import these packages.\n\n\n# ROS-TCP Endpoint/Connector\n\nHow does the TCP Endpoint compare to [Rosbridge Server](http://wiki.ros.org/rosbridge_server)?\n---\nTo put it simply, the TCP Endpoint does not have the extra overhead of having to serialize and deserialize from JSON as its only function is to pass 'ROS serialized' messages between Unity and ROS. That being said the TCP Endpoint is not as general as ROS Bridge and has the strict requirement that all messages be serialized by the TCP Connector code.\n\nHere are some preliminary numbers from a few initial tests done during the discovery stage of this project. We will publish more test results publicly after we go through more rigorous testing but these results should be generally close enough for those curious about performance improvements.\n\n**Note:** These tests were run on a single machine that was only running ROS and a Unity executable.\n\n1. Sending 100 (1036x1698) images, one per frame, from Unity to ROS. The time was logged when the message was sent from Unity, before being serialized, and again when the message was received by a ROS Subscriber and deserialized into a message object.\n\n\t- ROS# with ROS Bridge Suite on average took about 10 seconds per image. The bridge slowed down dramatically after the first 10 or so messages.\n\t- TCP Connector with the TCP Endpoint on average took ~0.6 seconds per image.\n\n2. Only testing the TCP Connector and TCP Endpoint to determine how long it would take to send 1000  912x1698 images, one per frame, we found that it took ~12 seconds for the ROS subscriber to receive and deserialize all messages with only ~10 messages never being received.\n\n3. Finally a test was done calling a ROS service where the service accepts a small message of a few strings and numerics and returns the same message.\n\nThe time was logged when the message was sent from Unity before being serialized, again when the message was received and deserialized by the ROS Service, and one more time when Unity receives and deserializes the service response into the message object.\n\n- ROS# with ROS Bridge Suite took ~2 seconds\n- TCP Connector with TCP Endpoint took ~0.17 seconds\n\nI'm getting the error: `...failed because unknown error handler name 'rosmsg'`.\n---\nThis is due to a bug in an outdated package version. Try running `sudo apt-get update && sudo apt-get upgrade` to upgrade.\n\n# URDF-Importer\n\nI don't see an option to Import Robot from URDF, or I have compile errors upon importing the URDF-Importer.\n---\nThe [ArticulationBody](https://docs.unity3d.com/2020.2/Documentation/Manual/class-ArticulationBody.html) has dependencies on Unity Editor versions [2020.2.0](https://unity3d.com/unity/whats-new/2020.2.0)+. Try updating your project to the latest 2020.2 release.\n\n\n# Can't find what you're looking for?\nConnect directly with the Robotics team at [unity-robotics@unity3d.com](mailto:unity-robotics@unity3d.com)!"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorials",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}