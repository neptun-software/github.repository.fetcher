{
  "metadata": {
    "timestamp": 1736710771986,
    "page": 234,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aspnet/JavaScriptServices",
      "stars": 3037,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 0.3642578125,
          "content": "init:\n- git config --global core.autocrlf true\ninstall:\n- ps: Install-Product node 6.9.2 x64\nbranches:\n  only:\n  - master\n  - /^release\\/.*$/\n  - /^(.*\\/)?ci-.*$/\nbuild_script:\n- ps: .\\run.ps1 default-build\nclone_depth: 1\nenvironment:\n  global:\n    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true\n    DOTNET_CLI_TELEMETRY_OPTOUT: 1\ntest: 'off'\ndeploy: 'off'\nos: Visual Studio 2017\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.841796875,
          "content": "*.doc  diff=astextplain\n*.DOC\tdiff=astextplain\n*.docx\tdiff=astextplain\n*.DOCX\tdiff=astextplain\n*.dot\tdiff=astextplain\n*.DOT\tdiff=astextplain\n*.pdf\tdiff=astextplain\n*.PDF\tdiff=astextplain\n*.rtf\tdiff=astextplain\n*.RTF\tdiff=astextplain\n\n*.jpg  \tbinary\n*.png \tbinary\n*.gif \tbinary\n\n*.cs text=auto diff=csharp\n*.vb text=auto\n*.resx text=auto\n*.c text=auto\n*.cpp text=auto\n*.cxx text=auto\n*.h text=auto\n*.hxx text=auto\n*.py text=auto\n*.rb text=auto\n*.java text=auto\n*.html text=auto\n*.htm text=auto\n*.css text=auto\n*.scss text=auto\n*.sass text=auto\n*.less text=auto\n*.js text=auto\n*.lisp text=auto\n*.clj text=auto\n*.sql text=auto\n*.php text=auto\n*.lua text=auto\n*.m text=auto\n*.asm text=auto\n*.erl text=auto\n*.fs text=auto\n*.fsx text=auto\n*.hs text=auto\n\n*.csproj text=auto\n*.vbproj text=auto\n*.fsproj text=auto\n*.dbproj text=auto\n*.sln text=auto eol=crlf\n*.sh eol=lf\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3134765625,
          "content": "[Oo]bj/\n[Bb]in/\nTestResults/\n.nuget/\n*.sln.ide/\n_ReSharper.*/\npackages/\nartifacts/\nPublishProfiles/\n*.user\n*.suo\n*.cache\n*.docstates\n_ReSharper.*\nnuget.exe\n*net45.csproj\n*net451.csproj\n*k10.csproj\n*.psess\n*.vsp\n*.pidb\n*.userprefs\n*DS_Store\n*.ncrunchsolution\n*.*sdf\n*.ipch\n.vs/\nnpm-debug.log\n/.build/\n.vscode/\nglobal.json\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3115234375,
          "content": "language: csharp\nsudo: required\ndist: trusty\naddons:\n  apt:\n    packages:\n    - gettext\n    - libcurl4-openssl-dev\n    - libicu-dev\n    - libssl-dev\n    - libunwind8\n    - zlib1g\nmono: none\nos:\n- linux\n- osx\nosx_image: xcode7.1\nscript:\n- ./build.sh\nbranches:\n  only:\n  - master\n  - /^release\\/.*$/\n  - /^(.*\\/)?ci-.*$/\n"
        },
        {
          "name": ".vsts-pipelines",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1669921875,
          "content": "Contributing\n======\n\nInformation on contributing to this repo is in the [Contributing Guide](https://github.com/aspnet/Home/blob/master/CONTRIBUTING.md) in the Home repo.\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.6015625,
          "content": "﻿<Project>\n  <Import Project=\"version.props\" />\n  <Import Project=\"build\\dependencies.props\" />\n  <Import Project=\"build\\sources.props\" />\n\n  <PropertyGroup>\n    <Product>Microsoft ASP.NET Core</Product>\n    <RepositoryUrl>https://github.com/aspnet/javascriptservices</RepositoryUrl>\n    <RepositoryType>git</RepositoryType>\n    <RepositoryRoot>$(MSBuildThisFileDirectory)</RepositoryRoot>\n    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)build\\Key.snk</AssemblyOriginatorKeyFile>\n    <SignAssembly>true</SignAssembly>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 0.36328125,
          "content": "<Project>\n  <PropertyGroup>\n    <RuntimeFrameworkVersion Condition=\" '$(TargetFramework)' == 'netcoreapp3.0' \">$(MicrosoftNETCoreAppPackageVersion)</RuntimeFrameworkVersion>\n    <NETStandardImplicitPackageVersion Condition=\" '$(TargetFramework)' == 'netstandard2.0' \">$(NETStandardLibrary20PackageVersion)</NETStandardImplicitPackageVersion>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "JavaScriptServices.sln",
          "type": "blob",
          "size": 5.9990234375,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 15\nVisualStudioVersion = 15.0.26730.16\nMinimumVisualStudioVersion = 15.0.26730.03\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{27304DDE-AFB2-4F8B-B765-E3E2F11E886C}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tsrc\\Directory.Build.props = src\\Directory.Build.props\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Microsoft.AspNetCore.NodeServices\", \"src\\Microsoft.AspNetCore.NodeServices\\Microsoft.AspNetCore.NodeServices.csproj\", \"{66B77203-1469-41DF-92F2-2BE6900BD36F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Microsoft.AspNetCore.NodeServices.Sockets\", \"src\\Microsoft.AspNetCore.NodeServices.Sockets\\Microsoft.AspNetCore.NodeServices.Sockets.csproj\", \"{F46DEF99-6FAA-4406-B5D8-6FF34EF669E3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Microsoft.AspNetCore.SpaServices\", \"src\\Microsoft.AspNetCore.SpaServices\\Microsoft.AspNetCore.SpaServices.csproj\", \"{66B071A8-EFC8-4A06-BEF6-06B99AE27EEC}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"misc\", \"misc\", \"{99EAF1FE-22C8-4526-BE78-74B24125D37F}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.gitignore = .gitignore\n\t\tglobal.json = global.json\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"samples\", \"samples\", \"{23836492-E7F4-4376-85BF-A635C304AC46}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"misc\", \"misc\", \"{E6A161EA-646C-4033-9090-95BE809AB8D9}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LatencyTest\", \"samples\\misc\\LatencyTest\\LatencyTest.csproj\", \"{1931B19A-EC42-4D56-B2D0-FB06D17244DA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Webpack\", \"samples\\misc\\Webpack\\Webpack.csproj\", \"{DE479DC3-1461-4EAD-A188-4AF7AA4AE344}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"NodeServicesExamples\", \"samples\\misc\\NodeServicesExamples\\NodeServicesExamples.csproj\", \"{93EFCC5F-C6EE-4623-894F-A42B22C0B6FE}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{645F7363-1240-4FB6-9422-B32A327C979F}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tDirectory.Build.targets = Directory.Build.targets\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Microsoft.AspNetCore.SpaServices.Extensions\", \"src\\Microsoft.AspNetCore.SpaServices.Extensions\\Microsoft.AspNetCore.SpaServices.Extensions.csproj\", \"{D40BD1C4-6A6F-4213-8535-1057F3EB3400}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{66B77203-1469-41DF-92F2-2BE6900BD36F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{66B77203-1469-41DF-92F2-2BE6900BD36F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{66B77203-1469-41DF-92F2-2BE6900BD36F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{66B77203-1469-41DF-92F2-2BE6900BD36F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F46DEF99-6FAA-4406-B5D8-6FF34EF669E3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F46DEF99-6FAA-4406-B5D8-6FF34EF669E3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F46DEF99-6FAA-4406-B5D8-6FF34EF669E3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F46DEF99-6FAA-4406-B5D8-6FF34EF669E3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{66B071A8-EFC8-4A06-BEF6-06B99AE27EEC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{66B071A8-EFC8-4A06-BEF6-06B99AE27EEC}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{66B071A8-EFC8-4A06-BEF6-06B99AE27EEC}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{66B071A8-EFC8-4A06-BEF6-06B99AE27EEC}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1931B19A-EC42-4D56-B2D0-FB06D17244DA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1931B19A-EC42-4D56-B2D0-FB06D17244DA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1931B19A-EC42-4D56-B2D0-FB06D17244DA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1931B19A-EC42-4D56-B2D0-FB06D17244DA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{DE479DC3-1461-4EAD-A188-4AF7AA4AE344}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{DE479DC3-1461-4EAD-A188-4AF7AA4AE344}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{DE479DC3-1461-4EAD-A188-4AF7AA4AE344}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{DE479DC3-1461-4EAD-A188-4AF7AA4AE344}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{93EFCC5F-C6EE-4623-894F-A42B22C0B6FE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{93EFCC5F-C6EE-4623-894F-A42B22C0B6FE}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{93EFCC5F-C6EE-4623-894F-A42B22C0B6FE}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{93EFCC5F-C6EE-4623-894F-A42B22C0B6FE}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D40BD1C4-6A6F-4213-8535-1057F3EB3400}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D40BD1C4-6A6F-4213-8535-1057F3EB3400}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D40BD1C4-6A6F-4213-8535-1057F3EB3400}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D40BD1C4-6A6F-4213-8535-1057F3EB3400}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{66B77203-1469-41DF-92F2-2BE6900BD36F} = {27304DDE-AFB2-4F8B-B765-E3E2F11E886C}\n\t\t{F46DEF99-6FAA-4406-B5D8-6FF34EF669E3} = {27304DDE-AFB2-4F8B-B765-E3E2F11E886C}\n\t\t{66B071A8-EFC8-4A06-BEF6-06B99AE27EEC} = {27304DDE-AFB2-4F8B-B765-E3E2F11E886C}\n\t\t{E6A161EA-646C-4033-9090-95BE809AB8D9} = {23836492-E7F4-4376-85BF-A635C304AC46}\n\t\t{1931B19A-EC42-4D56-B2D0-FB06D17244DA} = {E6A161EA-646C-4033-9090-95BE809AB8D9}\n\t\t{DE479DC3-1461-4EAD-A188-4AF7AA4AE344} = {E6A161EA-646C-4033-9090-95BE809AB8D9}\n\t\t{93EFCC5F-C6EE-4623-894F-A42B22C0B6FE} = {E6A161EA-646C-4033-9090-95BE809AB8D9}\n\t\t{D40BD1C4-6A6F-4213-8535-1057F3EB3400} = {27304DDE-AFB2-4F8B-B765-E3E2F11E886C}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {DDF59B0D-2DEC-45D6-8667-DCB767487101}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0947265625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (c) .NET Foundation and Contributors\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NuGet.config",
          "type": "blob",
          "size": 0.1943359375,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <!-- Restore sources should be defined in build/sources.props. -->\n  </packageSources>\n</configuration>\n"
        },
        {
          "name": "NuGetPackageVerifier.json",
          "type": "blob",
          "size": 0.0712890625,
          "content": "{\n  \"Default\": {\n    \"rules\": [\n      \"DefaultCompositeRule\"\n    ]\n  }\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.0517578125,
          "content": "# JavaScriptServices [Archived]\n\n## IMPORTANT\n\nThe features described in this article are obsolete as of ASP.NET Core 3.0. A simpler SPA frameworks integration mechanism is available in the [Microsoft.AspNetCore.SpaServices.Extensions](https://www.nuget.org/packages/Microsoft.AspNetCore.SpaServices.Extensions) NuGet package. For more information, see [[Announcement] Obsoleting Microsoft.AspNetCore.SpaServices and Microsoft.AspNetCore.NodeServices](https://github.com/dotnet/AspNetCore/issues/12890).\n\n\n## What is this?\n\n`JavaScriptServices` is a set of client-side technologies for ASP.NET Core. It provides infrastructure that you'll find useful if you:\n\n-  Use Angular / React / Vue / Aurelia / Knockout / etc.\n-  Build your client-side resources using Webpack.\n-  Execute JavaScript on the server at runtime.\n\nRead [Building Single Page Applications on ASP.NET Core with JavaScriptServices](https://blogs.msdn.microsoft.com/webdev/2017/02/14/building-single-page-applications-on-asp-net-core-with-javascriptservices/) for more details.\n\nThis repo contains:\n\n * A set of NuGet/NPM packages that implement functionality for:\n   * Invoking arbitrary NPM packages at runtime from .NET code ([docs](/src/Microsoft.AspNetCore.NodeServices#simple-usage-example))\n   * Server-side prerendering of SPA components ([docs](/src/Microsoft.AspNetCore.SpaServices#server-side-prerendering))\n   * Webpack dev middleware ([docs](/src/Microsoft.AspNetCore.SpaServices#webpack-dev-middleware))\n   * Hot module replacement (HMR) ([docs](/src/Microsoft.AspNetCore.SpaServices#webpack-hot-module-replacement))\n   * Server-side and client-side routing integration ([docs](/src/Microsoft.AspNetCore.SpaServices#routing-helper-mapspafallbackroute))\n   * Server-side and client-side validation integration\n   * \"Lazy loading\" for Knockout apps\n * Samples and docs\n\nIt's cross-platform (Windows, Linux, or macOS) and works with .NET Core 2.0 or later.\n\n## Creating new applications\n\nPrerequisites:\n\n* [.NET Core 2.0](https://www.microsoft.com/net/core) (or later) SDK\n* [Node.js](https://nodejs.org/) version 6 (or later)\n\nWith these prerequisites, you can immediately create new ASP.NET Core applications that use Angular, React, or React+Redux without having to install anything extra.\n\n### Option 1: Creating Angular/React/Redux applications from the command line (cross-platform)\n\nIn an empty directory, run (for example) `dotnet new angular`. Other supported SPA frameworks include React and React+Redux. You can see the list of available SPA templates by running `dotnet new spa`.\n\nOnce the generator has run and restored all the dependencies, you can start up your new ASP.NET Core SPA:\n\n    npm install\n    dotnet run\n\n### Option 2: Creating Angular/React/Redux applications using Visual Studio 2017 Update 3 or later (Windows only)\n\nUsing the `File`->`New Project` dialog, select *ASP.NET Core Web Application*. You will then be offered the option to create an application with Angular, React, or React+Redux. When the application is created, you can build and run it in the normal way.\n\n### More info and other SPA frameworks\n\nFor a more detailed (albeit somewhat outdated) walkthrough, see [getting started with the `aspnetcore-spa` generator](http://blog.stevensanderson.com/2016/05/02/angular2-react-knockout-apps-on-aspnet-core/).\n\nIf you want to build an ASP.NET Core application with Aurelia, Knockout, or Vue, you can use the `Microsoft.AspNetCore.SpaTemplates` package. On the command line, run `dotnet new --install Microsoft.AspNetCore.SpaTemplates`. Then you will be able to run `dotnet new aurelia` (or `dotnet new vue`, etc.) to create your new application.\n\n## Adding to existing applications\n\nIf you have an existing ASP.NET Core application, or if you just want to use the underlying JavaScriptServices packages directly, you can install these packages using NuGet and NPM:\n\n * `Microsoft.AspNetCore.NodeServices`\n   * This provides a fast and robust way for .NET code to run JavaScript on the server inside a Node.js environment. You can use this to consume arbitrary functionality from NPM packages at runtime in your ASP.NET Core app.\n   * Most applications developers don't need to use this directly, but you can do so if you want to implement your own functionality that involves calling Node.js code from .NET at runtime.\n   * Find [documentation and usage examples here](/src/Microsoft.AspNetCore.NodeServices#microsoftaspnetcorenodeservices).\n * `Microsoft.AspNetCore.SpaServices`\n   * This provides infrastructure that's generally useful when building Single Page Applications (SPAs) with technologies such as Angular or React (for example, server-side prerendering and webpack middleware). Internally, it uses the `NodeServices` package to implement its features.\n   * Find [documentation and usage examples here](/src/Microsoft.AspNetCore.SpaServices#microsoftaspnetcorespaservices)\n\nThere were previously other packages called  `Microsoft.AspNetCore.AngularServices` and `Microsoft.AspNetCore.ReactServices` but these are not currently needed - all applicable functionality is in `Microsoft.AspNetCore.SpaServices`, because it's sufficiently general.\n\nIf you want to build a helper library for some other SPA framework, you can do so by taking a dependency on `Microsoft.AspNetCore.SpaServices` and wrapping its functionality in whatever way is most useful for your SPA framework.\n\n## Samples\n\nThe [`samples` directory](/samples) contains examples of:\n\n- Using the JavaScript services family of packages with Angular and React.\n- A standalone `NodeServices` usage for runtime code transpilation and image processing.\n\n**To run the samples:**\n\n * Clone this repo\n * At the repo's root directory (the one containing `src`, `samples`, etc.), run `dotnet restore`\n * Change directory to the sample you want to run (for example, `cd samples/angular/MusicStore`)\n * Restore Node dependencies by running `npm install`\n   * If you're trying to run the Angular \"Music Store\" sample, then also run `gulp` (which you need to have installed globally). None of the other samples require this.\n * Run the application (`dotnet run`)\n * Browse to [http://localhost:5000](http://localhost:5000)\n"
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 0.25390625,
          "content": "@ECHO OFF\nPowerShell -NoProfile -NoLogo -ExecutionPolicy unrestricted -Command \"[System.Threading.Thread]::CurrentThread.CurrentCulture = ''; [System.Threading.Thread]::CurrentThread.CurrentUICulture = '';& '%~dp0run.ps1' default-build %*; exit $LASTEXITCODE\"\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.2470703125,
          "content": "#!/usr/bin/env bash\n\nset -euo pipefail\nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n\n# Call \"sync\" between \"chmod\" and execution to prevent \"text file busy\" error in Docker (aufs)\nchmod +x \"$DIR/run.sh\"; sync\n\"$DIR/run.sh\" default-build \"$@\"\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "korebuild-lock.txt",
          "type": "blob",
          "size": 0.0810546875,
          "content": "version:3.0.0-build-20181114.5\ncommithash:880e9a204d4ee4a18dfd83c9fb05a192a28bca60\n"
        },
        {
          "name": "korebuild.json",
          "type": "blob",
          "size": 0.216796875,
          "content": "{\n  \"$schema\": \"https://raw.githubusercontent.com/aspnet/BuildTools/master/tools/korebuild.schema.json\",\n  \"channel\": \"master\",\n  \"toolsets\": {\n    \"nodejs\": {\n      \"required\": true,\n      \"minVersion\": \"6.9\"\n    }\n  }\n}\n"
        },
        {
          "name": "run.cmd",
          "type": "blob",
          "size": 0.240234375,
          "content": "@ECHO OFF\nPowerShell -NoProfile -NoLogo -ExecutionPolicy unrestricted -Command \"[System.Threading.Thread]::CurrentThread.CurrentCulture = ''; [System.Threading.Thread]::CurrentThread.CurrentUICulture = '';& '%~dp0run.ps1' %*; exit $LASTEXITCODE\"\n"
        },
        {
          "name": "run.ps1",
          "type": "blob",
          "size": 6.4619140625,
          "content": "#!/usr/bin/env powershell\n#requires -version 4\n\n<#\n.SYNOPSIS\nExecutes KoreBuild commands.\n\n.DESCRIPTION\nDownloads korebuild if required. Then executes the KoreBuild command. To see available commands, execute with `-Command help`.\n\n.PARAMETER Command\nThe KoreBuild command to run.\n\n.PARAMETER Path\nThe folder to build. Defaults to the folder containing this script.\n\n.PARAMETER Channel\nThe channel of KoreBuild to download. Overrides the value from the config file.\n\n.PARAMETER DotNetHome\nThe directory where .NET Core tools will be stored.\n\n.PARAMETER ToolsSource\nThe base url where build tools can be downloaded. Overrides the value from the config file.\n\n.PARAMETER Update\nUpdates KoreBuild to the latest version even if a lock file is present.\n\n.PARAMETER Reinstall\nRe-installs KoreBuild\n\n.PARAMETER ConfigFile\nThe path to the configuration file that stores values. Defaults to korebuild.json.\n\n.PARAMETER ToolsSourceSuffix\nThe Suffix to append to the end of the ToolsSource. Useful for query strings in blob stores.\n\n.PARAMETER CI\nSets up CI specific settings and variables.\n\n.PARAMETER Arguments\nArguments to be passed to the command\n\n.NOTES\nThis function will create a file $PSScriptRoot/korebuild-lock.txt. This lock file can be committed to source, but does not have to be.\nWhen the lockfile is not present, KoreBuild will create one using latest available version from $Channel.\n\nThe $ConfigFile is expected to be an JSON file. It is optional, and the configuration values in it are optional as well. Any options set\nin the file are overridden by command line parameters.\n\n.EXAMPLE\nExample config file:\n```json\n{\n  \"$schema\": \"https://raw.githubusercontent.com/aspnet/BuildTools/master/tools/korebuild.schema.json\",\n  \"channel\": \"master\",\n  \"toolsSource\": \"https://aspnetcore.blob.core.windows.net/buildtools\"\n}\n```\n#>\n[CmdletBinding(PositionalBinding = $false)]\nparam(\n    [Parameter(Mandatory = $true, Position = 0)]\n    [string]$Command,\n    [string]$Path = $PSScriptRoot,\n    [Alias('c')]\n    [string]$Channel,\n    [Alias('d')]\n    [string]$DotNetHome,\n    [Alias('s')]\n    [string]$ToolsSource,\n    [Alias('u')]\n    [switch]$Update,\n    [switch]$Reinstall,\n    [string]$ToolsSourceSuffix,\n    [string]$ConfigFile = $null,\n    [switch]$CI,\n    [Parameter(ValueFromRemainingArguments = $true)]\n    [string[]]$Arguments\n)\n\nSet-StrictMode -Version 2\n$ErrorActionPreference = 'Stop'\n\n#\n# Functions\n#\n\nfunction Get-KoreBuild {\n\n    $lockFile = Join-Path $Path 'korebuild-lock.txt'\n\n    if (!(Test-Path $lockFile) -or $Update) {\n        Get-RemoteFile \"$ToolsSource/korebuild/channels/$Channel/latest.txt\" $lockFile $ToolsSourceSuffix\n    }\n\n    $version = Get-Content $lockFile | Where-Object { $_ -like 'version:*' } | Select-Object -first 1\n    if (!$version) {\n        Write-Error \"Failed to parse version from $lockFile. Expected a line that begins with 'version:'\"\n    }\n    $version = $version.TrimStart('version:').Trim()\n    $korebuildPath = Join-Paths $DotNetHome ('buildtools', 'korebuild', $version)\n\n    if ($Reinstall -and (Test-Path $korebuildPath)) {\n        Remove-Item -Force -Recurse $korebuildPath\n    }\n\n    if (!(Test-Path $korebuildPath)) {\n        Write-Host -ForegroundColor Magenta \"Downloading KoreBuild $version\"\n        New-Item -ItemType Directory -Path $korebuildPath | Out-Null\n        $remotePath = \"$ToolsSource/korebuild/artifacts/$version/korebuild.$version.zip\"\n\n        try {\n            $tmpfile = Join-Path ([IO.Path]::GetTempPath()) \"KoreBuild-$([guid]::NewGuid()).zip\"\n            Get-RemoteFile $remotePath $tmpfile $ToolsSourceSuffix\n            if (Get-Command -Name 'Microsoft.PowerShell.Archive\\Expand-Archive' -ErrorAction Ignore) {\n                # Use built-in commands where possible as they are cross-plat compatible\n                Microsoft.PowerShell.Archive\\Expand-Archive -Path $tmpfile -DestinationPath $korebuildPath\n            }\n            else {\n                # Fallback to old approach for old installations of PowerShell\n                Add-Type -AssemblyName System.IO.Compression.FileSystem\n                [System.IO.Compression.ZipFile]::ExtractToDirectory($tmpfile, $korebuildPath)\n            }\n        }\n        catch {\n            Remove-Item -Recurse -Force $korebuildPath -ErrorAction Ignore\n            throw\n        }\n        finally {\n            Remove-Item $tmpfile -ErrorAction Ignore\n        }\n    }\n\n    return $korebuildPath\n}\n\nfunction Join-Paths([string]$path, [string[]]$childPaths) {\n    $childPaths | ForEach-Object { $path = Join-Path $path $_ }\n    return $path\n}\n\nfunction Get-RemoteFile([string]$RemotePath, [string]$LocalPath, [string]$RemoteSuffix) {\n    if ($RemotePath -notlike 'http*') {\n        Copy-Item $RemotePath $LocalPath\n        return\n    }\n\n    $retries = 10\n    while ($retries -gt 0) {\n        $retries -= 1\n        try {\n            Invoke-WebRequest -UseBasicParsing -Uri $($RemotePath + $RemoteSuffix) -OutFile $LocalPath\n            return\n        }\n        catch {\n            Write-Verbose \"Request failed. $retries retries remaining\"\n        }\n    }\n\n    Write-Error \"Download failed: '$RemotePath'.\"\n}\n\n#\n# Main\n#\n\n# Load configuration or set defaults\n\n$Path = Resolve-Path $Path\nif (!$ConfigFile) { $ConfigFile = Join-Path $Path 'korebuild.json' }\n\nif (Test-Path $ConfigFile) {\n    try {\n        $config = Get-Content -Raw -Encoding UTF8 -Path $ConfigFile | ConvertFrom-Json\n        if ($config) {\n            if (!($Channel) -and (Get-Member -Name 'channel' -InputObject $config)) { [string] $Channel = $config.channel }\n            if (!($ToolsSource) -and (Get-Member -Name 'toolsSource' -InputObject $config)) { [string] $ToolsSource = $config.toolsSource}\n        }\n    }\n    catch {\n        Write-Host -ForegroundColor Red $Error[0]\n        Write-Error \"$ConfigFile contains invalid JSON.\"\n        exit 1\n    }\n}\n\nif (!$DotNetHome) {\n    $DotNetHome = if ($env:DOTNET_HOME) { $env:DOTNET_HOME } `\n        elseif ($env:USERPROFILE) { Join-Path $env:USERPROFILE '.dotnet'} `\n        elseif ($env:HOME) {Join-Path $env:HOME '.dotnet'}`\n        else { Join-Path $PSScriptRoot '.dotnet'}\n}\n\nif (!$Channel) { $Channel = 'master' }\nif (!$ToolsSource) { $ToolsSource = 'https://aspnetcore.blob.core.windows.net/buildtools' }\n\n# Execute\n\n$korebuildPath = Get-KoreBuild\nImport-Module -Force -Scope Local (Join-Path $korebuildPath 'KoreBuild.psd1')\n\ntry {\n    Set-KoreBuildSettings -ToolsSource $ToolsSource -DotNetHome $DotNetHome -RepoPath $Path -ConfigFile $ConfigFile -CI:$CI\n    Invoke-KoreBuildCommand $Command @Arguments\n}\nfinally {\n    Remove-Module 'KoreBuild' -ErrorAction Ignore\n}\n"
        },
        {
          "name": "run.sh",
          "type": "blob",
          "size": 8.740234375,
          "content": "#!/usr/bin/env bash\n\nset -euo pipefail\n\n#\n# variables\n#\n\nRESET=\"\\033[0m\"\nRED=\"\\033[0;31m\"\nYELLOW=\"\\033[0;33m\"\nMAGENTA=\"\\033[0;95m\"\nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n[ -z \"${DOTNET_HOME:-}\" ] && DOTNET_HOME=\"$HOME/.dotnet\"\nverbose=false\nupdate=false\nreinstall=false\nrepo_path=\"$DIR\"\nchannel=''\ntools_source=''\ntools_source_suffix=''\nci=false\n\n#\n# Functions\n#\n__usage() {\n    echo \"Usage: $(basename \"${BASH_SOURCE[0]}\") command [options] [[--] <Arguments>...]\"\n    echo \"\"\n    echo \"Arguments:\"\n    echo \"    command                The command to be run.\"\n    echo \"    <Arguments>...         Arguments passed to the command. Variable number of arguments allowed.\"\n    echo \"\"\n    echo \"Options:\"\n    echo \"    --verbose                                             Show verbose output.\"\n    echo \"    -c|--channel <CHANNEL>                                The channel of KoreBuild to download. Overrides the value from the config file..\"\n    echo \"    --config-file <FILE>                                  The path to the configuration file that stores values. Defaults to korebuild.json.\"\n    echo \"    -d|--dotnet-home <DIR>                                The directory where .NET Core tools will be stored. Defaults to '\\$DOTNET_HOME' or '\\$HOME/.dotnet.\"\n    echo \"    --path <PATH>                                         The directory to build. Defaults to the directory containing the script.\"\n    echo \"    -s|--tools-source|-ToolsSource <URL>                  The base url where build tools can be downloaded. Overrides the value from the config file.\"\n    echo \"    --tools-source-suffix|-ToolsSourceSuffix <SUFFIX>     The suffix to append to tools-source. Useful for query strings.\"\n    echo \"    -u|--update                                           Update to the latest KoreBuild even if the lock file is present.\"\n    echo \"    --reinstall                                           Reinstall KoreBuild.\"\n    echo \"    --ci                                                  Apply CI specific settings and environment variables.\"\n    echo \"\"\n    echo \"Description:\"\n    echo \"    This function will create a file \\$DIR/korebuild-lock.txt. This lock file can be committed to source, but does not have to be.\"\n    echo \"    When the lockfile is not present, KoreBuild will create one using latest available version from \\$channel.\"\n\n    if [[ \"${1:-}\" != '--no-exit' ]]; then\n        exit 2\n    fi\n}\n\nget_korebuild() {\n    local version\n    local lock_file=\"$repo_path/korebuild-lock.txt\"\n    if [ ! -f \"$lock_file\" ] || [ \"$update\" = true ]; then\n        __get_remote_file \"$tools_source/korebuild/channels/$channel/latest.txt\" \"$lock_file\" \"$tools_source_suffix\"\n    fi\n    version=\"$(grep 'version:*' -m 1 \"$lock_file\")\"\n    if [[ \"$version\" == '' ]]; then\n        __error \"Failed to parse version from $lock_file. Expected a line that begins with 'version:'\"\n        return 1\n    fi\n    version=\"$(echo \"${version#version:}\" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')\"\n    local korebuild_path=\"$DOTNET_HOME/buildtools/korebuild/$version\"\n\n    if [ \"$reinstall\" = true ] && [ -d \"$korebuild_path\" ]; then\n        rm -rf \"$korebuild_path\"\n    fi\n\n    {\n        if [ ! -d \"$korebuild_path\" ]; then\n            mkdir -p \"$korebuild_path\"\n            local remote_path=\"$tools_source/korebuild/artifacts/$version/korebuild.$version.zip\"\n            tmpfile=\"$(mktemp)\"\n            echo -e \"${MAGENTA}Downloading KoreBuild ${version}${RESET}\"\n            if __get_remote_file \"$remote_path\" \"$tmpfile\" \"$tools_source_suffix\"; then\n                unzip -q -d \"$korebuild_path\" \"$tmpfile\"\n            fi\n            rm \"$tmpfile\" || true\n        fi\n\n        source \"$korebuild_path/KoreBuild.sh\"\n    } || {\n        if [ -d \"$korebuild_path\" ]; then\n            echo \"Cleaning up after failed installation\"\n            rm -rf \"$korebuild_path\" || true\n        fi\n        return 1\n    }\n}\n\n__error() {\n    echo -e \"${RED}error: $*${RESET}\" 1>&2\n}\n\n__warn() {\n    echo -e \"${YELLOW}warning: $*${RESET}\"\n}\n\n__machine_has() {\n    hash \"$1\" > /dev/null 2>&1\n    return $?\n}\n\n__get_remote_file() {\n    local remote_path=$1\n    local local_path=$2\n    local remote_path_suffix=$3\n\n    if [[ \"$remote_path\" != 'http'* ]]; then\n        cp \"$remote_path\" \"$local_path\"\n        return 0\n    fi\n\n    local failed=false\n    if __machine_has wget; then\n        wget --tries 10 --quiet -O \"$local_path\" \"${remote_path}${remote_path_suffix}\" || failed=true\n    else\n        failed=true\n    fi\n\n    if [ \"$failed\" = true ] && __machine_has curl; then\n        failed=false\n        curl --retry 10 -sSL -f --create-dirs -o \"$local_path\" \"${remote_path}${remote_path_suffix}\" || failed=true\n    fi\n\n    if [ \"$failed\" = true ]; then\n        __error \"Download failed: $remote_path\" 1>&2\n        return 1\n    fi\n}\n\n#\n# main\n#\n\ncommand=\"${1:-}\"\nshift\n\nwhile [[ $# -gt 0 ]]; do\n    case $1 in\n        -\\?|-h|--help)\n            __usage --no-exit\n            exit 0\n            ;;\n        -c|--channel|-Channel)\n            shift\n            channel=\"${1:-}\"\n            [ -z \"$channel\" ] && __usage\n            ;;\n        --config-file|-ConfigFile)\n            shift\n            config_file=\"${1:-}\"\n            [ -z \"$config_file\" ] && __usage\n            if [ ! -f \"$config_file\" ]; then\n                __error \"Invalid value for --config-file. $config_file does not exist.\"\n                exit 1\n            fi\n            ;;\n        -d|--dotnet-home|-DotNetHome)\n            shift\n            DOTNET_HOME=\"${1:-}\"\n            [ -z \"$DOTNET_HOME\" ] && __usage\n            ;;\n        --path|-Path)\n            shift\n            repo_path=\"${1:-}\"\n            [ -z \"$repo_path\" ] && __usage\n            ;;\n        -s|--tools-source|-ToolsSource)\n            shift\n            tools_source=\"${1:-}\"\n            [ -z \"$tools_source\" ] && __usage\n            ;;\n        --tools-source-suffix|-ToolsSourceSuffix)\n            shift\n            tools_source_suffix=\"${1:-}\"\n            [ -z \"$tools_source_suffix\" ] && __usage\n            ;;\n        -u|--update|-Update)\n            update=true\n            ;;\n        --reinstall|-[Rr]einstall)\n            reinstall=true\n            ;;\n        --ci|-[Cc][Ii])\n            ci=true\n            ;;\n        --verbose|-Verbose)\n            verbose=true\n            ;;\n        --)\n            shift\n            break\n            ;;\n        *)\n            break\n            ;;\n    esac\n    shift\ndone\n\nif ! __machine_has unzip; then\n    __error 'Missing required command: unzip'\n    exit 1\nfi\n\nif ! __machine_has curl && ! __machine_has wget; then\n    __error 'Missing required command. Either wget or curl is required.'\n    exit 1\nfi\n\n[ -z \"${config_file:-}\" ] && config_file=\"$repo_path/korebuild.json\"\nif [ -f \"$config_file\" ]; then\n    if __machine_has jq ; then\n        if jq '.' \"$config_file\" >/dev/null ; then\n            config_channel=\"$(jq -r 'select(.channel!=null) | .channel' \"$config_file\")\"\n            config_tools_source=\"$(jq -r 'select(.toolsSource!=null) | .toolsSource' \"$config_file\")\"\n        else\n            __error \"$config_file contains invalid JSON.\"\n            exit 1\n        fi\n    elif __machine_has python ; then\n        if python -c \"import json,codecs;obj=json.load(codecs.open('$config_file', 'r', 'utf-8-sig'))\" >/dev/null ; then\n            config_channel=\"$(python -c \"import json,codecs;obj=json.load(codecs.open('$config_file', 'r', 'utf-8-sig'));print(obj['channel'] if 'channel' in obj else '')\")\"\n            config_tools_source=\"$(python -c \"import json,codecs;obj=json.load(codecs.open('$config_file', 'r', 'utf-8-sig'));print(obj['toolsSource'] if 'toolsSource' in obj else '')\")\"\n        else\n            __error \"$config_file contains invalid JSON.\"\n            exit 1\n        fi\n    elif __machine_has python3 ; then\n        if python3 -c \"import json,codecs;obj=json.load(codecs.open('$config_file', 'r', 'utf-8-sig'))\" >/dev/null ; then\n            config_channel=\"$(python3 -c \"import json,codecs;obj=json.load(codecs.open('$config_file', 'r', 'utf-8-sig'));print(obj['channel'] if 'channel' in obj else '')\")\"\n            config_tools_source=\"$(python3 -c \"import json,codecs;obj=json.load(codecs.open('$config_file', 'r', 'utf-8-sig'));print(obj['toolsSource'] if 'toolsSource' in obj else '')\")\"\n        else\n            __error \"$config_file contains invalid JSON.\"\n            exit 1\n        fi\n    else\n        __error 'Missing required command: jq or python. Could not parse the JSON file.'\n        exit 1\n    fi\n\n    [ ! -z \"${config_channel:-}\" ] && channel=\"$config_channel\"\n    [ ! -z \"${config_tools_source:-}\" ] && tools_source=\"$config_tools_source\"\nfi\n\n[ -z \"$channel\" ] && channel='master'\n[ -z \"$tools_source\" ] && tools_source='https://aspnetcore.blob.core.windows.net/buildtools'\n\nget_korebuild\nset_korebuildsettings \"$tools_source\" \"$DOTNET_HOME\" \"$repo_path\" \"$config_file\" \"$ci\"\ninvoke_korebuild_command \"$command\" \"$@\"\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.props",
          "type": "blob",
          "size": 0.97265625,
          "content": "﻿<Project>\n  <PropertyGroup>\n    <VersionPrefix>3.0.0</VersionPrefix>\n    <VersionSuffix>alpha1</VersionSuffix>\n    <PackageVersion Condition=\"'$(IsFinalBuild)' == 'true' AND '$(VersionSuffix)' == 'rtm' \">$(VersionPrefix)</PackageVersion>\n    <PackageVersion Condition=\"'$(IsFinalBuild)' == 'true' AND '$(VersionSuffix)' != 'rtm' \">$(VersionPrefix)-$(VersionSuffix)-final</PackageVersion>\n    <BuildNumber Condition=\"'$(BuildNumber)' == ''\">t000</BuildNumber>\n    <FeatureBranchVersionPrefix Condition=\"'$(FeatureBranchVersionPrefix)' == ''\">a-</FeatureBranchVersionPrefix>\n    <VersionSuffix Condition=\"'$(VersionSuffix)' != '' And '$(FeatureBranchVersionSuffix)' != ''\">$(FeatureBranchVersionPrefix)$(VersionSuffix)-$([System.Text.RegularExpressions.Regex]::Replace('$(FeatureBranchVersionSuffix)', '[^\\w-]', '-'))</VersionSuffix>\n    <VersionSuffix Condition=\"'$(VersionSuffix)' != '' And '$(BuildNumber)' != ''\">$(VersionSuffix)-$(BuildNumber)</VersionSuffix>\n  </PropertyGroup>\n</Project>\n"
        }
      ]
    }
  ]
}