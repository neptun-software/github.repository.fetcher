{
  "metadata": {
    "timestamp": 1736710723196,
    "page": 122,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "morelinq/MoreLINQ",
      "stars": 3715,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 4.810546875,
          "content": "# http://editorconfig.org/\n\nroot = true\n\n[*]\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n[*.Build.{props,targets}]\nindent_size = 2\n\n[*.{sln}]\nindent_style = tab\n\n[*.{json,yml}]\nindent_size = 2\n\n[*.{cs,tt}]\ncharset = utf-8\nindent_style = space\nindent_size = 4\nmax_line_length = 100\n\n[*.cs]\ndotnet_analyzer_diagnostic.category-Style.severity = warning\n\n# IDE0022: Use expression/block body for methods\ndotnet_diagnostic.IDE0022.severity = suggestion\n\n# IDE1006: Naming rule violation\ndotnet_diagnostic.IDE1006.severity = warning\n\n# Naming capitalization styles\ndotnet_naming_style.camel_case_style.capitalization = camel_case\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\n\n# Naming rule that private instance fields must use camel case\ndotnet_naming_symbols.private_fields.applicable_kinds = field\ndotnet_naming_symbols.private_fields.applicable_accessibilities = private\ndotnet_naming_rule.camel_case_private_fields.severity = warning\ndotnet_naming_rule.camel_case_private_fields.symbols = private_fields\ndotnet_naming_rule.camel_case_private_fields.style = camel_case_style\n\n# Naming rule that static read-only fields must use Pascal case\ndotnet_naming_symbols.static_readonly_fields.applicable_kinds = field\ndotnet_naming_symbols.static_readonly_fields.applicable_accessibilities = *\ndotnet_naming_symbols.static_readonly_fields.required_modifiers = readonly, static\ndotnet_naming_rule.pascal_case_static_readonly_fields.severity = warning\ndotnet_naming_rule.pascal_case_static_readonly_fields.symbols = static_readonly_fields\ndotnet_naming_rule.pascal_case_static_readonly_fields.style = pascal_case_style\n\n# Naming rule that const fields must use Pascal case\ndotnet_naming_symbols.const_fields.applicable_kinds = field\ndotnet_naming_symbols.const_fields.applicable_accessibilities = *\ndotnet_naming_symbols.const_fields.required_modifiers = const\ndotnet_naming_rule.pascal_case_const_fields.severity = warning\ndotnet_naming_rule.pascal_case_const_fields.symbols = const_fields\ndotnet_naming_rule.pascal_case_const_fields.style = pascal_case_style\n\n# this. preferences\ndotnet_style_qualification_for_event = false\ndotnet_style_qualification_for_field = true\ndotnet_style_qualification_for_method = false\ndotnet_style_qualification_for_property = false\n\n# Prefer \"var\" everywhere\ncsharp_style_var_for_built_in_types = true\ncsharp_style_var_when_type_is_apparent = true\ncsharp_style_var_elsewhere = true\n\n# Prefer method-like constructs to have a block body\ncsharp_style_expression_bodied_methods = true\ncsharp_style_expression_bodied_constructors = true\ncsharp_style_expression_bodied_operators = true\n\n# Prefer property-like constructs to have an expression-body\ncsharp_style_expression_bodied_properties = true\ncsharp_style_expression_bodied_indexers = true\ncsharp_style_expression_bodied_accessors = true\n\n# Suggest more modern language features when available\ncsharp_style_pattern_matching_over_is_with_cast_check = true\ncsharp_style_pattern_matching_over_as_with_null_check = true\ncsharp_style_inlined_variable_declaration = true\ncsharp_style_throw_expression = true\ncsharp_style_conditional_delegate_call = true\ncsharp_prefer_simple_default_expression = true\n\n# Spacing\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\n\n# Wrapping\ncsharp_preserve_single_line_statements = true\ncsharp_preserve_single_line_blocks = true\n\n# Indentation\ncsharp_indent_case_contents_when_block = false\n\n# Modifier preferences\ndotnet_style_require_accessibility_modifiers = omit_if_default\n\n# IDE0011: Add braces\ncsharp_prefer_braces = when_multiline\n\n# IDE0061: Use block body for local functions\ncsharp_style_expression_bodied_local_functions = true\n\n# IDE0065: Misplaced using directive\ncsharp_using_directive_placement = inside_namespace\n\n# IDE0048: Add parentheses for clarity\ndotnet_diagnostic.IDE0048.severity = suggestion\n\n# IDE0055: Fix formatting\ndotnet_diagnostic.IDE0055.severity = suggestion\n\n# IDE0046: Convert to conditional expression\ndotnet_diagnostic.IDE0046.severity = suggestion\n\n# CA1510: Use 'ArgumentNullException.ThrowIfNull' instead of explicitly throwing a new exception instance\n# TODO: Remove post https://github.com/morelinq/MoreLINQ/issues/903\ndotnet_diagnostic.CA1510.severity = suggestion\n\n# CA1512: Use 'ArgumentOutOfRangeException.ThrowIfNegativeOrZero' instead of explicitly throwing a new exception instance\n# TODO: Remove post https://github.com/morelinq/MoreLINQ/issues/903\ndotnet_diagnostic.CA1512.severity = suggestion\n\n# CA1513: Use 'ObjectDisposedException.ThrowIf' instead of explicitly throwing a new exception instance\n# TODO: Remove post https://github.com/morelinq/MoreLINQ/issues/903\ndotnet_diagnostic.CA1513.severity = suggestion\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3818359375,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n*.sh eol=lf\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 10.0009765625,
          "content": "*.opencover.xml\n**/TestResults/\n.actrc\ndocs/\n\n# Created by https://www.toptal.com/developers/gitignore/api/windows,linux,macos,visualstudio,visualstudiocode,rider\n# Edit at https://www.toptal.com/developers/gitignore?templates=windows,linux,macos,visualstudio,visualstudiocode,rider\n\n### Linux ###\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n# .nfs files are created when an open file is removed but is still being accessed\n.nfs*\n\n### macOS ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### macOS Patch ###\n# iCloud generated files\n*.icloud\n\n### Rider ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# AWS User-specific\n.idea/**/aws.xml\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/artifacts\n# .idea/compiler.xml\n# .idea/jarRepositories.xml\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# SonarLint plugin\n.idea/sonarlint/\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### VisualStudioCode ###\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n!.vscode/*.code-snippets\n\n# Local History for Visual Studio Code\n.history/\n\n# Built Visual Studio Code Extensions\n*.vsix\n\n### VisualStudioCode Patch ###\n# Ignore all local history of files\n.history\n.ionide\n\n### Windows ###\n# Windows thumbnail cache files\nThumbs.db\nThumbs.db:encryptable\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n### VisualStudio ###\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.tlog\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\n*.vbp\n\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\n*.dsw\n*.dsp\n\n# Visual Studio 6 technical files\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# Visual Studio History (VSHistory) files\n.vshistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n# VS Code files for those working on multiple tools\n*.code-workspace\n\n# Local History for Visual Studio Code\n\n# Windows Installer files from build outputs\n\n# JetBrains Rider\n*.sln.iml\n\n### VisualStudio Patch ###\n# Additional files built by Visual Studio\n\n# End of https://www.toptal.com/developers/gitignore/api/windows,linux,macos,visualstudio,visualstudiocode,rider\n"
        },
        {
          "name": "COPYING.txt",
          "type": "blob",
          "size": 11.1318359375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n==============================================================================\nThe following notice applies to a small portion of the code:\n\nThe MIT License (MIT)\n\nCopyright (c) Microsoft Corporation\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.4482421875,
          "content": "<Project>\n  <PropertyGroup>\n    <LangVersion>13</LangVersion>\n    <Nullable>enable</Nullable>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <AnalysisLevel>8.0-all</AnalysisLevel>\n    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>\n    <!-- Workaround for IDE0005 (Remove unnecessary usings/imports); see https://github.com/dotnet/roslyn/issues/41640 -->\n    <NoWarn>EnableGenerateDocumentationFile</NoWarn>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "MoreLinq.Test.Aot",
          "type": "tree",
          "content": null
        },
        {
          "name": "MoreLinq.Test",
          "type": "tree",
          "content": null
        },
        {
          "name": "MoreLinq.shfbproj",
          "type": "blob",
          "size": 5.7109375,
          "content": "﻿<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <!-- Import the common properties to support NuGet restore -->\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\n  <PropertyGroup>\n    <!-- The configuration and platform will be used to determine which\n         assemblies to include from solution and project documentation\n         sources -->\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\n    <SchemaVersion>2.0</SchemaVersion>\n    <ProjectGuid>{ec1e25bc-01b9-4d23-a78a-0b3068f01e7a}</ProjectGuid>\n    <SHFBSchemaVersion>2017.9.26.0</SHFBSchemaVersion>\n    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual\n         Studio adds them anyway -->\n    <AssemblyName>Documentation</AssemblyName>\n    <RootNamespace>Documentation</RootNamespace>\n    <Name>Documentation</Name>\n    <!-- SHFB properties -->\n    <FrameworkVersion>.NET Core/.NET Standard/.NET 5.0+</FrameworkVersion>\n    <OutputPath>.\\docs\\api\\</OutputPath>\n    <HtmlHelpName>Help</HtmlHelpName>\n    <Language>en-US</Language>\n    <ProjectSummary>MoreLINQ fills in a few gaps left by LINQ to Objects.</ProjectSummary>\n    <HelpFileFormat>Website</HelpFileFormat>\n    <SyntaxFilters>Standard</SyntaxFilters>\n    <PresentationStyle>Default2022</PresentationStyle>\n    <CleanIntermediates>True</CleanIntermediates>\n    <KeepLogFile>True</KeepLogFile>\n    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>\n    <IndentHtml>False</IndentHtml>\n    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>\n    <SaveComponentCacheCapacity>100</SaveComponentCacheCapacity>\n    <DocumentationSources>\n      <DocumentationSource sourceFile=\"MoreLinq\\bin\\Release\\net6.0\\MoreLinq.dll\" />\n      <DocumentationSource sourceFile=\"MoreLinq\\bin\\Release\\net6.0\\MoreLinq.xml\" />\n    </DocumentationSources>\n    <HelpFileFormat>Website</HelpFileFormat>\n    <CopyrightHref>http://www.apache.org/licenses/LICENSE-2.0</CopyrightHref>\n    <CopyrightText>&#169; 2008 Jonathan Skeet. Portions &#169; 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph. Portions &#169; 2010 Johannes Rudolph, Leopold Bushkin. Portions &#169; 2015 Felipe Sateler, &#8220;sholland&#8221;. Portions &#169; 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh). Portions &#169; 2017 Jonas Nyrup (jnyrup). Portions &#169; Microsoft. All rights reserved.</CopyrightText>\n    <FeedbackEMailAddress>morelinq-dev%40googlegroups.com</FeedbackEMailAddress>\n    <FeedbackEMailLinkText>MoreLinq Google Groups</FeedbackEMailLinkText>\n    <HelpTitle>MoreLinq</HelpTitle>\n    <NamingMethod>MemberName</NamingMethod>\n    <ContentPlacement>AboveNamespaces</ContentPlacement>\n    <RootNamespaceContainer>False</RootNamespaceContainer>\n    <NamespaceGrouping>False</NamespaceGrouping>\n    <MaximumGroupParts>2</MaximumGroupParts>\n    <Preliminary>False</Preliminary>\n    <SdkLinkTarget>Blank</SdkLinkTarget>\n    <NamespaceSummaries>\n      <NamespaceSummaryItem name=\"(global)\" isDocumented=\"False\" />\n      <NamespaceSummaryItem name=\"MoreLinq\" isDocumented=\"True\">Provides types and extension methods that extend LINQ to Objects.</NamespaceSummaryItem>\n      <NamespaceSummaryItem name=\"MoreLinq.Experimental\" isDocumented=\"True\">Provides experimental types and extension methods that extend LINQ to Objects.\n\n          THE METHODS ARE EXPERIMENTAL.\n\n          THEY MAY BE UNSTABLE AND UNTESTED.\n\n          THEY MAY BE REMOVED FROM A FUTURE MAJOR OR MINOR RELEASE AND POSSIBLY\n          WITHOUT NOTICE.\n\n          USE THEM AT YOUR OWN RISK.\n\n          THE METHODS ARE PUBLISHED FOR FIELD EXPERIMENTATION TO SOLICIT\n          FEEDBACK ON THEIR UTILITY AND DESIGN/IMPLEMENTATION DEFECTS.\n      </NamespaceSummaryItem>\n      <NamespaceSummaryItem name=\"MoreLinq.Extensions\" isDocumented=\"True\" />\n    </NamespaceSummaries>\n  </PropertyGroup>\n  <!-- There are no properties for these groups.  AnyCPU needs to appear in\n       order for Visual Studio to perform the build.  The others are optional\n       common platform types that may appear. -->\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|x86' \">\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|x86' \">\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|x64' \">\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|x64' \">\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|Win32' \">\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|Win32' \">\n  </PropertyGroup>\n  <!-- Import the common build targets during NuGet restore because before the packages are being installed, $(SHFBROOT) is not set yet -->\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.Common.targets\" Condition=\"'$(MSBuildRestoreSessionId)' != ''\" />\n  <!-- Import the SHFB build targets during build -->\n  <Import Project=\"$(SHFBROOT)\\SandcastleHelpFileBuilder.targets\" Condition=\"'$(MSBuildRestoreSessionId)' == ''\" />\n  <!-- The pre-build and post-build event properties must appear *after* the targets file import in order to be\n\t\t\t evaluated correctly. -->\n  <PropertyGroup>\n    <PreBuildEvent>\n    </PreBuildEvent>\n    <PostBuildEvent>\n    </PostBuildEvent>\n    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "MoreLinq.sln",
          "type": "blob",
          "size": 3.0927734375,
          "content": "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.3.32929.385\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{835F8FFA-471F-4322-B721-A897F27872FA}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\tbuild.cmd = build.cmd\n\t\tbuild.sh = build.sh\n\t\tbuilddocs.cmd = builddocs.cmd\n\t\tCOPYING.txt = COPYING.txt\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tglobal.json = global.json\n\t\tmsbuild.cmd = msbuild.cmd\n\t\tpack.cmd = pack.cmd\n\t\tpack.sh = pack.sh\n\t\tREADME.md = README.md\n\t\ttest.cmd = test.cmd\n\t\ttest.sh = test.sh\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MoreLinq\", \"MoreLinq\\MoreLinq.csproj\", \"{FE8BA6AF-584F-44E0-9F80-2DE800672A87}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MoreLinq.Test\", \"MoreLinq.Test\\MoreLinq.Test.csproj\", \"{FE8BA6AF-584F-44E0-9F80-2DE800672A88}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MoreLinq.ExtensionsGenerator\", \"bld\\ExtensionsGenerator\\MoreLinq.ExtensionsGenerator.csproj\", \"{5FA8F0E8-648A-4C4F-B1BB-B0C46959A36E}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"MoreLinq.Test.Aot\", \"MoreLinq.Test.Aot\\MoreLinq.Test.Aot.csproj\", \"{776973A3-AC2E-423E-8106-B4E296CE7752}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{FE8BA6AF-584F-44E0-9F80-2DE800672A87}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{FE8BA6AF-584F-44E0-9F80-2DE800672A87}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{FE8BA6AF-584F-44E0-9F80-2DE800672A87}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{FE8BA6AF-584F-44E0-9F80-2DE800672A87}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{FE8BA6AF-584F-44E0-9F80-2DE800672A88}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{FE8BA6AF-584F-44E0-9F80-2DE800672A88}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{FE8BA6AF-584F-44E0-9F80-2DE800672A88}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{FE8BA6AF-584F-44E0-9F80-2DE800672A88}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5FA8F0E8-648A-4C4F-B1BB-B0C46959A36E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5FA8F0E8-648A-4C4F-B1BB-B0C46959A36E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5FA8F0E8-648A-4C4F-B1BB-B0C46959A36E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5FA8F0E8-648A-4C4F-B1BB-B0C46959A36E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{776973A3-AC2E-423E-8106-B4E296CE7752}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{776973A3-AC2E-423E-8106-B4E296CE7752}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{776973A3-AC2E-423E-8106-B4E296CE7752}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{776973A3-AC2E-423E-8106-B4E296CE7752}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {6A8EBCB0-B3EB-4D85-AD02-D349122C1D8E}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "MoreLinq",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.7822265625,
          "content": "# MoreLINQ\n\nLINQ to Objects is missing a few desirable features.\n\nThis project enhances LINQ to Objects with extra methods, in a manner which\nkeeps to the spirit of LINQ.\n\nMoreLINQ is available for download and installation as\n[NuGet packages](https://www.nuget.org/packages/morelinq/).\n\nDocumentation for the stable and beta releases can be found at\n[morelinq.github.io](https://morelinq.github.io/).\n\n\n## Usage\n\nMoreLINQ can be used in one of two ways. The simplest is to just import the\n`MoreLinq` namespace and all extension methods become instantly available for\nyou to use on the types they extend (typically some instantiation of\n`IEnumerable<T>`). In some very rare instances, however, doing so can cause\nconflicts with other libraries you may be using that incidentally also extend\nthe same type with an identically named method and signature. This happened\nwith MoreLINQ, for example, when Microsoft .NET Framework 4.0 introduced\n[`Zip`][netzip] and [MoreLINQ already had one][zip]. Starting with version 3.0\nof MoreLINQ, you can reduce the potential for present (or even future)\nconflicts by individually importing just the extension methods you need using\nthe [static imports feature introduced in C# 6][using-static]:\n\n```c#\nusing static MoreLinq.Extensions.LagExtension;\nusing static MoreLinq.Extensions.LeadExtension;\n```\n\nIn the example above, only the [`Lag`][lag] and [`Lead`][lead] extension\nmethods will be available in scope.\n\nApart from extension methods, MoreLINQ also offers regular static method that\n*generate* (instead of operating on) sequences, like [`Unfold`][unfold],\n[`Random`][random], [`Sequence`][sequence] and others. If you want to use these\nwhile statically importing other individual extension methods, you can do so via\naliasing:\n\n```c#\nusing static MoreLinq.Extensions.LagExtension;\nusing static MoreLinq.Extensions.LeadExtension;\nusing MoreEnumerable = MoreLinq.MoreEnumerable;\n```\n\nIn the example above, [`Lag`][lag] and [`Lead`][lead] will be available as\nextension methods as well as all the regular static methods on\n`MoreEnumerable` but _without_ any of the extension methods offered by\n`MoreEnumerable`.\n\n\n[lag]: https://morelinq.github.io/2.0/ref/api/html/Overload_MoreLinq_MoreEnumerable_Lag.htm\n[lead]: https://morelinq.github.io/2.0/ref/api/html/Overload_MoreLinq_MoreEnumerable_Lead.htm\n[using-static]: https://docs.microsoft.com/en-us/dotnet/articles/csharp/whats-new/csharp-6#using-static\n[netzip]: https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.zip#System_Linq_Enumerable_Zip__3_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___1__System_Func___0___1___2__\n[zip]: https://morelinq.github.io/1.x/ref/api/html/M_MoreLinq_MoreEnumerable_Zip__3.htm\n[unfold]: https://morelinq.github.io/2.3/ref/api/html/M_MoreLinq_MoreEnumerable_Unfold__3.htm\n[random]: https://morelinq.github.io/2.0/ref/api/html/Overload_MoreLinq_MoreEnumerable_Random.htm\n[sequence]: https://morelinq.github.io/2.2/ref/api/html/Overload_MoreLinq_MoreEnumerable_Sequence.htm\n\n\n## Building\n\nRun either `build.cmd` if building on Windows or `build.sh` if building on macOS\nor a [Linux distribution supported by .NET][dotnet-linux].\n\nSome code in the project is generated using [T4][t4] templates. To regenerate\nthe code from modified templates, run `MoreLinq\\tt.cmd` (Windows) or\n`MoreLinq/tt.sh` depending on your platform.\n\nBuilding the documentation is supported on Windows only and requires\n[Sandcastle Help File Builder (SHFB)][shfb]. Executing `builddocs.cmd`\ngenerates the documentation in the `docs/api` directory. It can be browsed\nlocally using any HTTP server of static files, like\n[dotnet-serve][dotnet-serve].\n\n[dotnet-linux]: https://learn.microsoft.com/en-us/dotnet/core/install/linux\n[shfb]: https://github.com/EWSoftware/SHFB/releases/tag/v2022.12.30.0\n[dotnet-serve]: https://www.nuget.org/packages/dotnet-serve\n[t4]: https://docs.microsoft.com/en-us/visualstudio/modeling/code-generation-and-t4-text-templates\n\n\n## Operators\n\n### Acquire\n\nEnsures that a source sequence of disposable objects are all acquired\nsuccessfully. If the acquisition of any one fails then those successfully\nacquired till that point are disposed.\n\n### Aggregate\n\nApplies multiple accumulators sequentially in a single pass over a sequence.\n\nThis method has 7 overloads.\n\n### AggregateRight\n\nApplies a right-associative accumulator function over a sequence.\nThis operator is the right-associative version of the Aggregate LINQ operator.\n\nThis method has 3 overloads.\n\n### Append\n\nReturns a sequence consisting of the head element and the given tail elements.\n\n### Assert\n\nAsserts that all elements of a sequence meet a given condition otherwise\nthrows an exception.\n\nThis method has 2 overloads.\n\n### AssertCount\n\nAsserts that a source sequence contains a given count of elements.\n\nThis method has 2 overloads.\n\n### AtLeast\n\nDetermines whether or not the number of elements in the sequence is greater\nthan or equal to the given integer.\n\n### AtMost\n\nDetermines whether or not the number of elements in the sequence is lesser\nthan or equal to the given integer.\n\n### Backsert\n\nInserts the elements of a sequence into another sequence at a\nspecified index from the tail of the sequence, where zero always represents\nthe last position, one represents the second-last element, two represents\nthe third-last element and so on.\n\n### Batch\n\nBatches the source sequence into sized buckets.\n\nThis method has 4 overloads, 2 of which are experimental.\n\n### Cartesian\n\nReturns the Cartesian product of two or more sequences by combining each\nelement from the sequences and applying a user-defined projection to the\nset.\n\nThis method has 7 overloads.\n\n### Choose\n\nApplies a function to each element of the source sequence and returns a new\nsequence of result elements for source elements where the function returns a\ncouple (2-tuple) having a `true` as its first element and result as the\nsecond.\n\n### CompareCount\n\nCompares two sequences and returns an integer that indicates whether the\nfirst sequence has fewer, the same or more elements than the second sequence.\n\n### ~~Concat~~\n\nReturns a sequence consisting of the head element and the given tail elements.\n\nThis extension was rendered obsolete in version 3.0 and eventually removed in\nversion 4.0. Use [`Append`][linq-append] from .NET instead that's been available\nsince .NET Standard 1.6+, .NET Core 1.0+ and .NET Framework 4.7.1+.\n\n[linq-append]: https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.append\n\n### Consume\n\nCompletely consumes the given sequence. This method uses immediate execution,\nand doesn't store any data during execution\n\n### CountBetween\n\nDetermines whether or not the number of elements in the sequence is between an\ninclusive range of minimum and maximum integers.\n\n### CountBy\n\nApplies a key-generating function to each element of a sequence and returns a\nsequence of unique keys and their number of occurrences in the original\nsequence.\n\nThis method has 2 overloads.\n\n### CountDown\n\nProvides a countdown counter for a given count of elements at the tail of the\nsequence where zero always represents the last element, one represents the\nsecond-last element, two represents the third-last element and so on.\n\n### DistinctBy\n\nReturns all distinct elements of the given source, where \"distinctness\" is\ndetermined via a projection and the default equality comparer for the\nprojected type.\n\nThis method has 2 overloads.\n\n### Duplicates\n\nReturns all duplicate elements of the given source.\n\nThis method has 2 overloads.\n\n### EndsWith\n\nDetermines whether the end of the first sequence is equivalent to the second\nsequence.\n\nThis method has 2 overloads.\n\n### EquiZip\n\nReturns a projection of tuples, where each tuple contains the N-th\nelement from each of the argument sequences. An exception is thrown\nif the input sequences are of different lengths.\n\nThis method has 3 overloads.\n\n### Exactly\n\nDetermines whether or not the number of elements in the sequence is equals\nto the given integer.\n\n### ExceptBy\n\nReturns the set of elements in the first sequence which aren't in the second\nsequence, according to a given key selector.\n\nThis method has 2 overloads.\n\n### Exclude\n\nExcludes elements from a sequence starting at a given index\n\n### FallbackIfEmpty\n\nReturns the elements of a sequence and falls back to another if the original\nsequence is empty.\n\nThis method has 6 overloads.\n\n### FillBackward\n\nReturns a sequence with each null reference or value in the source replaced\nwith the following non-null reference or value in that sequence.\n\nThis method has 3 overloads.\n\n### FillForward\n\nReturns a sequence with each null reference or value in the source replaced\nwith the previous non-null reference or value seen in that sequence.\n\nThis method has 3 overloads.\n\n### Flatten\n\nFlattens a sequence containing arbitrarily-nested sequences.\n\nThis method has 3 overloads.\n\n### Fold\n\nReturns the result of applying a function to a sequence with 1 to 16 elements.\n\nThis method has 16 overloads.\n\n### ForEach\n\nImmediately executes the given action on each element in the source sequence.\n\nThis method has 2 overloads.\n\n### From\n\nReturns a sequence containing the values resulting from invoking (in order)\neach function in the source sequence of functions.\n\nThis method has 4 overloads.\n\n### FullGroupJoin\n\nPerforms a Full Group Join between the and sequences.\n\nThis method has 4 overloads.\n\n### FullJoin\n\nPerforms a full outer join between two sequences.\n\nThis method has 4 overloads.\n\n### Generate\n\nReturns a sequence of values consecutively generated by a generator function\n\n### GenerateByIndex\n\nReturns a sequence of values based on indexes\n\n### GroupAdjacent\n\nGroups the adjacent elements of a sequence according to a specified key\nselector function.\n\nThis method has 6 overloads.\n\n### ~~Incremental~~\n\n`Incremental` was redundant with `Pairwise` and so deprecated since version\n[2.1][v2.1]. It was eventually removed in version [3.0][v3.0].\n\n### Index\n\nReturns a sequence of where the key is the zero-based index of the value in\nthe source sequence.\n\nThis method has 2 overloads.\n\n### IndexBy\n\n\nApplies a key-generating function to each element of a sequence and returns\na sequence that contains the elements of the original sequence as well its\nkey and index inside the group of its key. An additional argument specifies\na comparer to use for testing equivalence of keys.\n\nThis method has 2 overloads.\n\n### Insert\n\nInserts the elements of a sequence into another sequence at a specified index.\n\n### Interleave\n\nInterleaves the elements of two or more sequences into a single sequence,\nskipping sequences as they are consumed.\n\n### Lag\n\nProduces a projection of a sequence by evaluating pairs of elements separated\nby a negative offset.\n\nThis method has 2 overloads.\n\n### Lead\n\nProduces a projection of a sequence by evaluating pairs of elements separated\nby a positive offset.\n\nThis method has 2 overloads.\n\n### LeftJoin\n\nPerforms a left outer join between two sequences.\n\nThis method has 4 overloads.\n\n### ~~MaxBy~~\n\n:warning: **This method is obsolete. Use [`Maxima`](#maxima) instead.**\n\nReturns the maxima (maximal elements) of the given sequence, based on the\ngiven projection.\n\nThis method has 2 overloads.\n\n### Maxima\n\nReturns the maxima (maximal elements) of the given sequence, based on the\ngiven projection.\n\nThis method has 2 overloads.\n\n### ~~MinBy~~\n\n:warning: **This method is obsolete. Use [`Minima`](#minima) instead.**\n\nReturns the minima (minimal elements) of the given sequence, based on the\ngiven projection.\n\nThis method has 2 overloads.\n\n### Minima\n\nReturns the minima (minimal elements) of the given sequence, based on the\ngiven projection.\n\nThis method has 2 overloads.\n\n### Move\n\nReturns a sequence with a range of elements in the source sequence\nmoved to a new offset.\n\n### OrderBy\n\nSorts the elements of a sequence in a particular direction (ascending,\ndescending) according to a key.\n\nThis method has 2 overloads.\n\n### OrderedMerge\n\nMerges two ordered sequences into one. Where the elements equal in both\nsequences, the element from the first sequence is returned in the resulting\nsequence.\n\nThis method has 7 overloads.\n\n### Pad\n\nPads a sequence with default values if it is narrower (shorter in length) than\na given width.\n\nThis method has 3 overloads.\n\n### PadStart\n\nPads a sequence with default values in the beginning if it is narrower\n(shorter in length) than a given width.\n\nThis method has 3 overloads.\n\n### Pairwise\n\nReturns a sequence resulting from applying a function to each element in the\nsource sequence and its predecessor, with the exception of the first element\nwhich is only returned as the predecessor of the second element\n\n### PartialSort\n\nCombines `OrderBy` (where element is key) and `Take` in a single operation.\n\nThis method has 4 overloads.\n\n### PartialSortBy\n\nCombines `OrderBy` and `Take` in a single operation.\n\nThis method has 4 overloads.\n\n### Partition\n\nPartitions a sequence by a predicate, or a grouping by Boolean keys or up to 3\nsets of keys.\n\nThis method has 10 overloads.\n\n### Permutations\n\nGenerates a sequence of lists that represent the permutations of the original\nsequence\n\n### Pipe\n\nExecutes the given action on each element in the source sequence and yields it\n\n### Prepend\n\nPrepends a single value to a sequence\n\n### PreScan\n\nPerforms a pre-scan (exclusive prefix sum) on a sequence of elements\n\n### Random\n\nReturns an infinite sequence of random integers using the standard .NET random\nnumber generator.\n\nThis method has 6 overloads.\n\n### RandomDouble\n\nReturns an infinite sequence of random double values between 0.0 and 1.0.\n\nThis method has 2 overloads.\n\n### RandomSubset\n\nReturns a sequence of a specified size of random elements from the original\nsequence.\n\nThis method has 2 overloads.\n\n### Rank\n\nRanks each item in the sequence in descending ordering using a default\ncomparer.\n\nThis method has 2 overloads.\n\n### RankBy\n\nRanks each item in the sequence in descending ordering by a specified key\nusing a default comparer.\n\nThis method has 2 overloads.\n\n### Repeat\n\nRepeats the sequence indefinitely or a specific number of times.\n\nThis method has 2 overloads.\n\n### Return\n\nReturns a single-element sequence containing the item provided.\n\n### RightJoin\n\nPerforms a right outer join between two sequences.\n\nThis method has 4 overloads.\n\n### RunLengthEncode\n\nRun-length encodes a sequence by converting consecutive instances of the same\nelement into a `KeyValuePair<T, int>` representing the item and its occurrence\ncount.\n\nThis method has 2 overloads.\n\n### Scan\n\nPeforms a scan (inclusive prefix sum) on a sequence of elements.\n\nThis method has 2 overloads.\n\n### ScanBy\n\nApplies an accumulator function over sequence element keys, returning the keys\nalong with intermediate accumulator states.\n\nThis method has 2 overloads.\n\n### ScanRight\n\nPeforms a right-associative scan (inclusive prefix) on a sequence of elements.\nThis operator is the right-associative version of the Scan operator.\n\nThis method has 2 overloads.\n\n### Segment\n\nDivides a sequence into multiple sequences by using a segment detector based\non the original sequence.\n\nThis method has 3 overloads.\n\n### Sequence\n\nGenerates a sequence of [numbers] within the (inclusive) specified range.\n\nThis method has 5 overloads.\n\n[numbers]: https://learn.microsoft.com/en-us/dotnet/api/system.numerics.inumber-1\n\n### Shuffle\n\nReturns a sequence of elements in random order from the original sequence.\n\nThis method has 2 overloads.\n\n### SkipLast\n\nBypasses a specified number of elements at the end of the sequence.\n\n### SkipLastWhile\n\nRemoves elements from the end of a sequence as long as a specified condition is true.\n\n### SkipUntil\n\nSkips items from the input sequence until the given predicate returns true\nwhen applied to the current source item; that item will be the last skipped\n\n### Slice\n\nExtracts elements from a sequence at a particular zero-based starting index\n\n### SortedMerge\n\nMerges two or more sequences that are in a common order (either ascending or\ndescending) into a single sequence that preserves that order.\n\nThis method has 2 overloads.\n\n### Split\n\nSplits the source sequence by a separator.\n\nThis method has 12 overloads.\n\n### StartsWith\n\nDetermines whether the beginning of the first sequence is equivalent to the\nsecond sequence.\n\nThis method has 2 overloads.\n\n### Subsets\n\nReturns a sequence of representing all of the subsets of any size that are\npart of the original sequence.\n\nThis method has 2 overloads.\n\n### TagFirstLast\n\nReturns a sequence resulting from applying a function to each element in the\nsource sequence with additional parameters indicating whether the element is\nthe first and/or last of the sequence\n\n### TakeEvery\n\nReturns every N-th element of a source sequence\n\n### TakeLast\n\nReturns a specified number of contiguous elements from the end of a sequence\n\n### TakeUntil\n\nReturns items from the input sequence until the given predicate returns true\nwhen applied to the current source item; that item will be the last returned\n\n### ThenBy\n\nPerforms a subsequent ordering of elements in a sequence in a particular\ndirection (ascending, descending) according to a key.\n\nThis method has 2 overloads.\n\n### ToArrayByIndex\n\nCreates an array from an IEnumerable<T> where a function is used to determine\nthe index at which an element will be placed in the array.\n\nThis method has 6 overloads.\n\n### ToDataTable\n\nAppends elements in the sequence as rows of a given object with a set of\nlambda expressions specifying which members (property or field) of each\nelement in the sequence will supply the column values.\n\nThis method has 4 overloads.\n\n### ToDelimitedString\n\nCreates a delimited string from a sequence of values. The delimiter used\ndepends on the current culture of the executing thread.\n\nThis method has 15 overloads.\n\n### ToDictionary\n\nCreates a [dictionary][dict] from a sequence of [key-value pair][kvp] elements\nor tuples of 2.\n\nThis method has 4 overloads.\n\n### ToHashSet\n\nReturns a [hash-set][hashset] of the source items using the default equality\ncomparer for the type.\n\nThis method has 2 overloads.\n\n### ToLookup\n\nCreates a [lookup][lookup] from a sequence of [key-value pair][kvp] elements\nor tuples of 2.\n\nThis method has 4 overloads.\n\n### Transpose\n\nTransposes the rows of a sequence into columns.\n\n### TraverseBreadthFirst\n\nTraverses a tree in a breadth-first fashion, starting at a root node and using\na user-defined function to get the children at each node of the tree.\n\n### TraverseDepthFirst\n\nTraverses a tree in a depth-first fashion, starting at a root node and using a\nuser-defined function to get the children at each node of the tree.\n\n### Trace\n\nTraces the elements of a source sequence for diagnostics.\n\nThis method has 3 overloads.\n\n### Unfold\n\nReturns a sequence generated by applying a state to the generator function,\nand from its result, determines if the sequence should have a next element and\nits value, and the next state in the recursive call.\n\n### Window\n\nProcesses a sequence into a series of subsequences representing a windowed\nsubset of the original\n\n### ~~Windowed~~\n\nProcesses a sequence into a series of subsequences representing a windowed\nsubset of the original\n\nThis method was removed and has been superseded by [`Window`](#window) instead.\n\n### WindowLeft\n\nCreates a left-aligned sliding window over the source sequence of a given size.\n\n### WindowRight\n\nCreates a right-aligned sliding window over the source sequence of a given size.\n\n### ZipLongest\n\nReturns a projection of tuples, where each tuple contains the N-th\nelement from each of the argument sequences. The resulting sequence\nwill always be as long as the longest of input sequences where the\ndefault value of each of the shorter sequence element types is used\nfor padding.\n\nThis method has 3 overloads.\n\n### ZipShortest\n\nReturns a projection of tuples, where each tuple contains the N-th\nelement from each of the argument sequences. The resulting sequence\nis as short as the shortest input sequence.\n\nThis method has 3 overloads.\n\n\n## Experimental Operators\n\nTHESE METHODS ARE EXPERIMENTAL. THEY MAY BE UNSTABLE AND UNTESTED. THEY MAY BE\nREMOVED FROM A FUTURE MAJOR OR MINOR RELEASE AND POSSIBLY WITHOUT NOTICE. USE\nTHEM AT YOUR OWN RISK. THE METHODS ARE PUBLISHED FOR FIELD EXPERIMENTATION TO\nSOLICIT FEEDBACK ON THEIR UTILITY AND DESIGN/IMPLEMENTATION DEFECTS.\n\nUse of experimental methods requires importing the `MoreLinq.Experimental`\nnamespace.\n\n### Aggregate\n\nApplies multiple accumulator queries sequentially in a single pass over a\nsequence.\n\nThis method has 8 overloads.\n\n### Await\n\nCreates a sequence query that streams the result of each task in the source\nsequence as it completes asynchronously.\n\nThis method has 2 overloads.\n\n### AwaitCompletion\n\nAwaits completion of all asynchronous evaluations irrespective of whether they\nsucceed or fail. An additional argument specifies a function that projects the\nfinal result given the source item and completed task.\n\n### Memoize\n\nCreates a sequence that lazily caches the source as it is iterated for the\nfirst time, reusing the cache thereafter for future re-iterations. If the\nsource is already cached or buffered then it is returned verbatim.\n\n### Merge\n\nConcurrently merges all the elements of multiple asynchronous streams into a\nsingle asynchronous stream. An overload with an additional parameter specifies\nthe maximum concurrent operations that may be in flight at any give time.\n\nThis method has 2 overloads.\n\n### TrySingle\n\nReturns the only element of a sequence that has just one element. If the\nsequence has zero or multiple elements, then returns a user-defined value\nthat indicates the cardinality of the result sequence.\n\nThis method has 2 overloads.\n\n\n[#122]: https://github.com/morelinq/MoreLINQ/issues/122\n[dict]: https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.Dictionary-2\n[hashset]: https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1\n[kvp]: https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.KeyValuePair-2\n[lookup]: https://docs.microsoft.com/en-us/dotnet/api/system.linq.lookup-2\n[v2.1]: https://github.com/morelinq/MoreLINQ/releases/tag/v2.1.0\n[v3.0]: https://github.com/morelinq/MoreLINQ/releases/tag/v3.0.0\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 3.240234375,
          "content": "version: '{build}'\nimage:\n- Visual Studio 2022\n- Ubuntu1804\nenvironment:\n  DOTNET_CLI_TELEMETRY_OPTOUT: true\n  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true\n  SKIP_TEST_BUILD: true\nskip_commits:\n  files:\n  - '*.md'\n  - '*.txt'\n  - '**/.gitignore'\n  - .github/**\nfor:\n-\n  matrix:\n    only:\n      - image: Visual Studio 2022\n  environment:\n    IMAGE_NAME: win\n  deploy:\n  - provider: NuGet\n    server: https://www.myget.org/F/morelinq/api/v2/package\n    api_key:\n      secure: fhGwXyO35FSshRzs5GWmF1LJTrd1sIqmS/jNCSfO2LfOciuYAKiXuFMYZFGiTAl+\n    symbol_server: https://www.myget.org/F/morelinq/symbols/api/v2/package\n    on:\n      branch: master\n  notifications:\n  - provider: Email\n    to:\n    - morelinq-roll@googlegroups.com\n    on_build_success: true\n    on_build_failure: true\n    on_build_status_changed: false\n-\n  matrix:\n    only:\n      - image: Ubuntu1804\n  environment:\n    IMAGE_NAME: ubuntu-18.04\ninstall:\n- npm install -g eclint\n- git rm .editorconfig\n- pwsh: git rm 'tools/dotnet-install.*'\n- pwsh: ./eclint.ps1 -InsertFinalNewline -Verbose\n- pwsh: ./eclint.ps1 -TrimTrailingWhitespace -Verbose\n- git reset --hard\n- ps: if ($isWindows) { tools\\dotnet-install.ps1 -JSonFile global.json }\n- ps: if ($isWindows) { tools\\dotnet-install.ps1 -Runtime dotnet -Version 6.0.11 -SkipNonVersionedFiles }\n- ps: if ($isWindows) { tools\\dotnet-install.ps1 -Runtime dotnet -Version 8.0.11 -SkipNonVersionedFiles }\n- sh: ./tools/dotnet-install.sh --jsonfile global.json\n- sh: ./tools/dotnet-install.sh --runtime dotnet --version 6.0.11 --skip-non-versioned-files\n- sh: ./tools/dotnet-install.sh --runtime dotnet --version 8.0.11 --skip-non-versioned-files\n- sh: export PATH=\"$HOME/.dotnet:$PATH\"\nbefore_build:\n- dotnet --info\n- pwsh: |\n    grep --extended-regexp '^[[:space:]]*using[[:space:]]+System\\.Linq;' (dir -Recurse -File -Filter *Test.cs MoreLinq.Test)\n    if ($LASTEXITCODE -eq 0) {\n        throw 'Unit tests should not import System.Linq'\n    } else {\n        $LASTEXITCODE = 0\n    }\n# Touch T4 templates to force code generation & validation\n- touch MoreLinq/*.g.tt\nbuild_script:\n- ps: |\n    $id = $env:APPVEYOR_REPO_COMMIT_TIMESTAMP -replace '([-:]|\\.0+Z)', ''\n    $id = $id.Substring(0, 13)\n    if ($isWindows) { cmd /c call pack.cmd ci-$id } else { ./pack.sh ci-$id }\n    if ($LASTEXITCODE -ne 0) {\n        throw \"Building/Packing failed with an exit code of $LASTEXITCODE.\"\n    }\nafter_build:\n- ps: |\n    $diff = git diff --ignore-all-space --exit-code 2>&1\n    $diff | % { if ($_ -is [string]) { $_ } else { [string]$_ } } | echo\n    if ($LASTEXITCODE -ne 0) {\n        throw \"New code was generated during build that's not been committed.\"\n    }\n- ps: |\n    dir dist\\*.nupkg | % {\n      dotnet meziantou.validate-nuget-package --excluded-rules IconMustBeSet $_\n      if ($LASTEXITCODE) {\n        throw \"Package validation failed: $_\"\n      }\n    }\ntest_script:\n- cmd: test.cmd\n- sh: ./test.sh\n- ps: dotnet reportgenerator '-reports:MoreLinq.Test/TestResults/coverage-*.opencover.xml' -targetdir:tmp/cover -tag:(git show -q --pretty=%H)\n- ps: |\n    cd tmp/cover\n    tar -cz -f \"../../coverage-report-${env:IMAGE_NAME}.tar.gz\" *\n- sh: curl -sSL https://codecov.io/bash > codecov\n- sh: chmod +x codecov\n- sh: if [ \"$CI_LINUX\" = \"true\" ]; then ./codecov; fi\nartifacts:\n- path: dist\\*.nupkg\n- path: coverage-report-*\n"
        },
        {
          "name": "bld",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 1.318359375,
          "content": "@echo off\npushd \"%~dp0\"\ncall :main %*\npopd & exit /b %ERRORLEVEL%\n\n:main\nsetlocal\nset MSBUILDTERMINALLOGGER=off\nfor %%i in (dotnet.exe) do set dotnet=%%~dpnx$PATH:i\nif \"%dotnet%\"==\"\" goto :nodotnet\nif \"%1\"==\"docs\" shift & goto :docs\n:build\ndotnet restore && dotnet tool restore ^\n  && call :codegen MoreLinq\\Extensions.g.cs -x \"[/\\\\]ToDataTable\\.cs$\" -u System.Linq -u System.Collections MoreLinq ^\n  && call :codegen MoreLinq\\Extensions.ToDataTable.g.cs -i \"[/\\\\]ToDataTable\\.cs$\" -u System.Data -u System.Linq.Expressions MoreLinq ^\n  && call MoreLinq\\tt ^\n  && for %%i in (debug release) do dotnet build -c %%i --no-restore %* || exit /b 1\nexit /b %ERRORLEVEL%\n\n:docs\ncall :build && call msbuild.cmd MoreLinq.shfbproj %1 %2 %3 %4 %5 %6 %7 %8 %9\nexit /b %ERRORLEVEL%\n\n:nodotnet\necho>&2 dotnet executable not found in PATH\necho>&2 For more on dotnet, see https://www.microsoft.com/net/core\nexit /b 2\n\n:codegen\necho | set /p=Generating extensions wrappers (%1)...\ndotnet build bld\\ExtensionsGenerator\\MoreLinq.ExtensionsGenerator.csproj -c Release >build.log 2>&1 || (\n    echo Failed!\n    type build.log\n    del build.log\n    exit /b 1\n)\ndel build.log\ndotnet bld\\ExtensionsGenerator\\bin\\Release\\MoreLinq.ExtensionsGenerator.dll %2 %3 %4 %5 %6 %7 %8 %9 > \"%temp%\\%~nx1\" ^\n  && move \"%temp%\\%~nx1\" \"%~dp1\" > nul ^\n  && echo Done.\nexit /b %ERRORLEVEL%\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.8876953125,
          "content": "#!/usr/bin/env bash\nset -e\ncd \"$(dirname \"$0\")\"\nexport MSBUILDTERMINALLOGGER=off\ndotnet restore\ndotnet tool restore\ncodegen() {\n    dest=\"$1\"\n    printf \"Generating extensions wrappers (%s)...\" \"$1\"\n    shift\n    dotnet build bld/ExtensionsGenerator/MoreLinq.ExtensionsGenerator.csproj -c Release >build.log || (\n        printf \"Failed!\\n\"\n        cat build.log\n        rm build.log\n        exit 1\n    )\n    dotnet bld/ExtensionsGenerator/bin/Release/MoreLinq.ExtensionsGenerator.dll \"$@\" > \"$dest\"\n    printf \"Done.\\n\"\n}\ncodegen MoreLinq/Extensions.g.cs -x \"[/\\\\\\\\]ToDataTable\\.cs$\" -u System.Linq -u System.Collections MoreLinq\ncodegen MoreLinq/Extensions.ToDataTable.g.cs -i \"[/\\\\\\\\]ToDataTable\\.cs$\" -u System.Data -u System.Linq.Expressions MoreLinq\nMoreLinq/tt.sh\nif [[ -z \"$1\" ]]; then\n    configs=\"Debug Release\"\nelse\n    configs=\"$1\"\nfi\nfor c in $configs; do\n    dotnet build --no-restore -c $c\ndone\n"
        },
        {
          "name": "builddocs.cmd",
          "type": "blob",
          "size": 0.0234375,
          "content": "@call \"%~dp0build\" docs\n"
        },
        {
          "name": "eclint.ps1",
          "type": "blob",
          "size": 1.466796875,
          "content": "[CmdletBinding(DefaultParameterSetName='Default')]\nparam (\n    [Parameter(ParameterSetName='Default')]\n    [switch]$TrimTrailingWhitespace,\n    [Parameter(ParameterSetName='Default')]\n    [switch]$InsertFinalNewline,\n\n    [Parameter(Mandatory=$true, ParameterSetName='ShowGlob')]\n    [switch]$ShowGlob\n)\n\n$ErrorActionPreference = 'Stop'\n\n$exts =\n    git ls-files --eol |            # get versioned file paths with line endings\n    ? { $_ -notmatch '/-text\\b' } | # exclude binary files\n    % { ($_ -split '\\t', 2)[1] } |  # get file path\n    Split-Path -Extension |         # get file extension\n    ? { $_.Length -gt 1 } |         # exclude those without an extension\n    Sort-Object |                   # sort alphabetically\n    Select-Object -Unique |         # remove duplicates\n    % { $_.Substring(1) }           # remove leading dot\n\n$glob = \"**/*.{$($exts -join ',')}\"\n\nif ($PSCmdlet.ParameterSetName -eq 'ShowGlob') {\n    Write-Output $glob\n    return\n}\n\nif (-not (Get-Command eclint -ErrorAction SilentlyContinue)) {\n    throw 'ECLint is not installed. To install, run: npm install -g eclint'\n}\n\n$rules = @()\n\nif ($trimTrailingWhitespace) {\n    $rules += '--trim_trailing_whitespace'\n}\n\nif ($insertFinalNewline) {\n    $rules += '--insert_final_newline'\n}\n\n$rules | % {\n\n    Write-Verbose \"eclint check $rule $glob\"\n\n    # https://github.com/jednano/eclint\n    eclint check $_ $glob\n\n    if ($LASTEXITCODE) {\n        throw \"eclint terminated with a non-zero exit code ($LASTEXITCODE).\"\n    }\n}\n"
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.076171875,
          "content": "{\n  \"sdk\": {\n    \"version\": \"9.0.100\",\n    \"rollForward\": \"latestPatch\"\n  }\n}\n"
        },
        {
          "name": "msbuild.cmd",
          "type": "blob",
          "size": 1.2431640625,
          "content": "@echo off\nsetlocal\nfor %%e in (Community Professional Enterprise) do (\n    if exist \"%ProgramFiles%\\Microsoft Visual Studio\\2022\\%%e\\MSBuild\\Current\\Bin\\MSBuild.exe\" (\n        set \"MSBUILD=%ProgramFiles%\\Microsoft Visual Studio\\2022\\%%e\\MSBuild\\Current\\Bin\\MSBuild.exe\"\n    )\n)\nif exist \"%MSBUILD%\" goto :build\nset MSBUILD=\nfor %%i in (MSBuild.exe) do set MSBUILD=%%~dpnx$PATH:i\nif not defined MSBUILD goto :nomsbuild\nset MSBUILD_VERSION_MAJOR=\nset MSBUILD_VERSION_MINOR=\nfor /f \"delims=. tokens=1,2,3,4\" %%m in ('msbuild /version /nologo') do (\n    set MSBUILD_VERSION_MAJOR=%%m\n)\nif not defined MSBUILD_VERSION_MAJOR goto :nomsbuild\nif %MSBUILD_VERSION_MAJOR% lss 17    goto :nomsbuild\n:build\n\"%MSBUILD%\" %*\nexit /b %ERRORLEVEL%\n\n:nomsbuild\necho>&2 Microsoft Build Engine 17.0 or a later version is required to build\necho>&2 the solution. For installation instructions, see:\necho>&2 https://docs.microsoft.com/en-us/visualstudio/install/use-command-line-parameters-to-install-visual-studio\necho>&2 At the very least, you will want to install the MSBuilt Tool workload\necho>&2 that has the identifier \"Microsoft.VisualStudio.Workload.MSBuildTools\":\necho>&2 https://docs.microsoft.com/en-us/visualstudio/install/workload-component-id-vs-build-tools#msbuild-tools\nexit /b 1\n"
        },
        {
          "name": "pack.cmd",
          "type": "blob",
          "size": 0.310546875,
          "content": "@echo off\npushd \"%~dp0\"\ncall :main %*\npopd & exit /b %ERRORLEVEL%\n\n:main\nsetlocal\nif not exist dist md dist\nif not %ERRORLEVEL%==0 exit /b %ERRORLEVEL%\nset VERSION_SUFFIX=\nif not \"%~1\"==\"\" set VERSION_SUFFIX=/p:VersionSuffix=%1\ncall build ^\n  && dotnet pack --no-build -c Release %VERSION_SUFFIX%\nexit /b %ERRORLEVEL%\n"
        },
        {
          "name": "pack.sh",
          "type": "blob",
          "size": 0.2216796875,
          "content": "#!/usr/bin/env bash\nset -e\ncd \"$(dirname \"$0\")\"\nVERSION_SUFFIX=\nif [ ! -z \"$1\" ]; then VERSION_SUFFIX=\"--version-suffix $1\"; fi\n./build.sh\nif [ ! -d dist ]; then mkdir dist; fi\ndotnet pack --no-build -c Release $VERSION_SUFFIX\n"
        },
        {
          "name": "test.cmd",
          "type": "blob",
          "size": 2.03515625,
          "content": "@echo off\npushd \"%~dp0\"\ncall :main %*\npopd & exit /b %ERRORLEVEL%\n\n:main\nsetlocal\nif not defined SKIP_TEST_BUILD set SKIP_TEST_BUILD=false\nif %SKIP_TEST_BUILD%==false call build || exit /b 1\nif not \"%~1\"==\"aot\" goto :test-all\ncall :test-aot net8.0 && call :test-aot net9.0\nexit /b %ERRORLEVEL%\n:test-all\ncall :clean ^\n  && call :test net9.0 Debug ^\n  && call :test net9.0 Release ^\n  && call :test net8.0 Debug ^\n  && call :test net8.0 Release ^\n  && call :test net6.0 Debug ^\n  && call :test net6.0 Release ^\n  && call :test net471 Debug ^\n  && call :test net471 Release ^\n  && call :report-cover ^\n  && call :test-aot net8.0 ^\n  && call :test-aot net9.0\nexit /b %ERRORLEVEL%\n\n:clean\nsetlocal\ncd MoreLinq.Test\nif exist TestResults rd /s /q TestResults || exit /b 1\nif exist TestResult.xml del TestResult.xml || exit /b 1\nexit /b %ERRORLEVEL%\n\n:test\nsetlocal\ncd MoreLinq.Test\necho Testing %1 (%2)...\nif %1==net471 (\n    bin\\%2\\net471\\MoreLinq.Test.exe\n    exit /b %ERRORLEVEL%\n)\ndotnet test --no-build -f %1 -c %2 --settings coverlet.runsettings || exit /b 1\ncd TestResults\nset TEST_RESULTS_DIR=\nfor /f %%d in ('dir /b /od /ad') do if not defined TEST_RESULTS_DIR set TEST_RESULTS_DIR=%%~d\nif not defined TEST_RESULTS_DIR (\n    echo>&2 Test coverage XML not found!\n    exit /b 1\n)\ncopy \"%TEST_RESULTS_DIR%\\coverage.opencover.xml\" coverage-%1-%2.opencover.xml > nul\nexit /b %ERRORLEVEL%\n\n:report-cover\nsetlocal\ncd MoreLinq.Test\\TestResults\ndotnet reportgenerator -reports:coverage-*.opencover.xml ^\n                       -reporttypes:Html;TextSummary ^\n                       -targetdir:reports ^\n  && type reports\\Summary.txt\nexit /b %ERRORLEVEL%\n\n:test-aot\nsetlocal\ncd MoreLinq.Test.Aot\ndotnet publish -f %1\nif not ERRORLEVEL==0 exit /b %ERRORLEVEL%\nset AOT_TEST_PUBLISH_DIR=\nfor /f %%d in ('cmd /c \"dir /ad /s /b publish | findstr /c:%1\"') do if not defined AOT_TEST_PUBLISH_DIR set AOT_TEST_PUBLISH_DIR=%%~d\nif not defined AOT_TEST_PUBLISH_DIR (\n    echo>&2 Published binary directory not found!\n    exit /b 1\n)\n\"%AOT_TEST_PUBLISH_DIR%\\MoreLinq.Test.Aot.exe\"\nexit /b %ERRORLEVEL%\n"
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 1.0517578125,
          "content": "#!/usr/bin/env bash\nset -eo pipefail\ncd \"$(dirname \"$0\")\"\nif [[ \"${SKIP_TEST_BUILD:=false}\" == \"false\" ]]; then\n    ./build.sh $c\nfi\nif [[ -d \"MoreLinq.Test/TestResults\" ]]; then\n    rm -rf MoreLinq.Test/TestResults\nfi\nif [[ -z \"$1\" ]]; then\n    configs=\"Debug Release\"\nelse\n    configs=\"$1\"\nfi\nfor f in net6.0 net8.0 net9.0; do\n    for c in $configs; do\n        dotnet test --no-build -c $c -f $f --settings MoreLinq.Test/coverlet.runsettings MoreLinq.Test\n        TEST_RESULTS_DIR=\"$(ls -dc MoreLinq.Test/TestResults/* | head -1)\"\n        cp \"$TEST_RESULTS_DIR/coverage.opencover.xml\" \"MoreLinq.Test/TestResults/coverage-$f-$c.opencover.xml\"\n    done\ndone\ndotnet reportgenerator -reports:MoreLinq.Test/TestResults/coverage-*.opencover.xml \\\n                       -reporttypes:Html\\;TextSummary \\\n                       -targetdir:MoreLinq.Test/TestResults/reports\ncat MoreLinq.Test/TestResults/reports/Summary.txt\nfor f in net8.0 net9.0; do\n    dotnet publish -f $f MoreLinq.Test.Aot\n    \"$(find MoreLinq.Test.Aot -type d -name publish | grep -F $f)/MoreLinq.Test.Aot\"\ndone\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}