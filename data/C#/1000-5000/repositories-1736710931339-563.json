{
  "metadata": {
    "timestamp": 1736710931339,
    "page": 563,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Habrador/Unity-Programming-Patterns",
      "stars": 1950,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.25390625,
          "content": "# This .gitignore file should be placed at the root of your Unity project directory\n#\n# Get latest from https://github.com/github/gitignore/blob/main/Unity.gitignore\n#\n/[Ll]ibrary/\n/[Tt]emp/\n/[Oo]bj/\n/[Bb]uild/\n/[Bb]uilds/\n/[Ll]ogs/\n/[Uu]ser[Ss]ettings/\n\n# MemoryCaptures can get excessive in size.\n# They also could contain extremely sensitive data\n/[Mm]emoryCaptures/\n\n# Recordings can get excessive in size\n/[Rr]ecordings/\n\n# Uncomment this line if you wish to ignore the asset store tools plugin\n# /[Aa]ssets/AssetStoreTools*\n\n# Autogenerated Jetbrains Rider plugin\n/[Aa]ssets/Plugins/Editor/JetBrains*\n\n# Visual Studio cache directory\n.vs/\n\n# Gradle cache directory\n.gradle/\n\n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n*.mdb\n*.opendb\n*.VC.db\n\n# Unity3D generated meta files\n*.pidb.meta\n*.pdb.meta\n*.mdb.meta\n\n# Unity3D generated file on crash reports\nsysinfo.txt\n\n# Builds\n*.apk\n*.aab\n*.unitypackage\n*.app\n\n# Crashlytics generated file\ncrashlytics-build.properties\n\n# Packed Addressables\n/[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*\n\n# Temporary auto-generated Android Assets\n/[Aa]ssets/[Ss]treamingAssets/aa.meta\n/[Aa]ssets/[Ss]treamingAssets/aa/*\n"
        },
        {
          "name": ".vsconfig",
          "type": "blob",
          "size": 0.0966796875,
          "content": "﻿{\n  \"version\": \"1.0\",\n  \"components\": [\n    \"Microsoft.VisualStudio.Workload.ManagedGame\"\n  ]\n}\n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2020 Erik Nordeus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.7119140625,
          "content": "﻿# Game programming patterns in Unity\n\nHere you can find a collection of programming (design) patterns in Unity, mainly from the book [Game Programming Patterns](http://gameprogrammingpatterns.com). These are very useful to better organize your Unity project as it grows because they capture best practices and solutions to commonly occuring problems. You don't have to use them - you should see them as tools in your toolbox. You can also experiment with how they are implemented to fit your specific needs. Some patterns, such as Update, Game Loop, Component, are already built-in into Unity so you are already using them! \n\nProgramming patterns can be divided into the following groups:\n1. **Architectural patterns.** One example is the MVC (Model-View-Controller).\n2. **Design patterns.** Are more specific than architectural patterns, such as the Singleton.\n3. **Anti-patterns.** Are a collection of patterns programmers are using to solve problems even though they shouldn't use them because they are ineffective solutions. One example is a \"God object,\" most likely called GameController where you collect everything you might need to make the game work. The problem with such as class is that it will grow in size, which will make it more difficult to maintain, and it will also be difficult to debug because the code doesn't belong together.  \n\nPatterns from the book Game Programming Patterns:\n\n1. [Command](_text/1-command.md)\n2. [Flyweight](_text/2-flyweight.md)\n3. [Observer](_text/3-observer.md)\n4. [Prototype](_text/4-prototype.md)\n5. [Singleton](_text/5-singleton.md)\n6. [State](_text/6-state.md)\n7. [Double Buffer](_text/7-double-buffer.md)\n8. [Game Loop](_text/8-game-loop.md)\n9. [Update Method](_text/9-update-method.md)\n10. [Bytecode](_text/10-bytecode.md)\n11. [Subclass Sandbox](_text/11-subclass-sandbox.md)\n12. [Type Object](_text/12-type-object.md)\n13. [Component](_text/13-component.md)\n14. [Event Queue](_text/14-event-queue.md)\n15. [Service Locator](_text/15-service-locator.md)\n16. [Data Locality](_text/16-data-locality.md)\n17. [Dirty Flag](_text/17-dirty-flag.md)\n18. [Object Pool](_text/18-object-pool.md)\n19. [Spatial Partition](_text/19-spatial-partition.md)\n\nOther patterns:\n\n20. [Decorator](_text/20-decorator.md)\n21. [Factory](_text/21-factory.md)\n22. [Facade](_text/22-facade.md)\n23. [Template](_text/23-template.md)\n\nNote that these are not all patterns out there. I recently read a book called \"Machine Learning Design Patterns\" which includes even more design patterns with a focus on machine learning problems. But I will continue adding patterns as I find them and if they are related to game development.  \n\n\n\n# Sources and Read More\n\n- [Game Programming Patterns](http://gameprogrammingpatterns.com)\n- [Game Development Patterns with Unity 2021](https://www.amazon.com/Game-Development-Patterns-Unity-2021/dp/1800200811)\n- [Head First Design Patterns](https://www.amazon.com/Head-First-Design-Patterns-Brain-Friendly/dp/0596007124)\n- [Game Programming Gems](https://www.amazon.com/Game-Programming-Gems-CD/dp/1584500492)\n- [Game Programming Gems 2](https://www.amazon.com/Game-Programming-Gems-GAME-PROGRAMMING/dp/1584500549)\n- [Refactoring Guru](https://refactoring.guru/design-patterns)\n- [Design Patterns in C# With Real-Time Examples](https://dotnettutorials.net/course/dot-net-design-patterns/)\n- [Level up your code with game programming patterns](https://resources.unity.com/games/level-up-your-code-with-game-programming-patterns)\n\n\n\n# Special Thanks\n\n- **[masoudarvishian](https://github.com/masoudarvishian)** for implementing Event Queue pattern, Service Locator pattern, and bug fixing.\n- **[VladimirMirMir](https://github.com/VladimirMirMir)** for bug fixing.\n- **[JayadevHaddadi](https://github.com/JayadevHaddadi)** for fixing event code. \n"
        },
        {
          "name": "_images",
          "type": "tree",
          "content": null
        },
        {
          "name": "_text",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}