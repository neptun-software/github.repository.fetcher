{
  "metadata": {
    "timestamp": 1736710888431,
    "page": 464,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "WalletWasabi/WalletWasabi",
      "stars": 2227,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 13.3076171875,
          "content": "# You can learn more about .editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference\nroot = true\n\n# For all files.\n[*]\n\ncharset = utf-8\ninsert_final_newline = true\n\n# Formatting - remove any whitespace characters preceding newline characters\ntrim_trailing_whitespace = true\n\n[*.{cs,csproj,props}]\n\n# use hard tabs for indentation\nindent_style = tab\nindent_size = 4\n\n# Formatting - set preferred newline characters\nend_of_line = lf\n\n[*.{xaml,axaml}]\n\nindent_style = space\nindent_size = 2\n\n[*.cs]\n\n# Spell Checker rules\nspelling_languages = en-us\nspelling_checkable_types = strings,identifiers,comments\nspelling_error_severity = information\nspelling_exclusion_path = .\\exclusion.dic\n\n# require braces to be on a new line for all\ncsharp_new_line_before_open_brace = all\n\n# Formatting - spacing options\n\n# require NO space between a cast and the value\ncsharp_space_after_cast = false:error\n# require a space before the colon for bases or interfaces in a type declaration\ncsharp_space_after_colon_in_inheritance_clause = true:error\n# require a space after a keyword in a control flow statement such as a for loop\ncsharp_space_after_keywords_in_control_flow_statements = true:error\n# require a space before the colon for bases or interfaces in a type declaration\ncsharp_space_before_colon_in_inheritance_clause = true:error\n# remove space within empty argument list parentheses\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false:error\n# remove space between method call name and opening parenthesis\ncsharp_space_between_method_call_name_and_opening_parenthesis = false:error\n# do not place space characters after the opening parenthesis and before the closing parenthesis of a method call\ncsharp_space_between_method_call_parameter_list_parentheses = false:error\n# remove space within empty parameter list parentheses for a method declaration\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false:error\n# place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.\ncsharp_space_between_method_declaration_parameter_list_parentheses = false:error\n\n# Formatting - wrapping options\n\n# leave code block on single line\ncsharp_preserve_single_line_blocks = true:error\n# leave statements and member declarations on the same line\ncsharp_preserve_single_line_statements = true:error\n\n# Style - expression bodied member options\n\n# prefer expression-bodied members for accessors\ncsharp_style_expression_bodied_accessors = true:suggestion\n# prefer block bodies for constructors\ncsharp_style_expression_bodied_constructors = false:suggestion\n# prefer expression-bodied members for operators\ncsharp_style_expression_bodied_operators = true:suggestion\n# prefer expression-bodied members for properties\ncsharp_style_expression_bodied_properties = true:suggestion\n\n# Style - expression level options\n\n# prefer out variables to be declared inline in the argument list of a method call when possible\ncsharp_style_inlined_variable_declaration = true:error\ncsharp_style_deconstructed_variable_declaration = false:warning\n# prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them\ndotnet_style_predefined_type_for_member_access = true:error\n\n# Style - language keyword and framework type options\n\n# prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them\ndotnet_style_predefined_type_for_locals_parameters_members = true:error\n\n# Style - qualification options\n\n# prefer events not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_event = false:error\n# prefer fields not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_field = false:error\n# prefer methods not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_method = false:error\n# prefer properties not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_property = false:error\n\ndotnet_style_object_initializer = false:warning\ndotnet_style_collection_initializer = true:error\ndotnet_style_explicit_tuple_names = true:error\n\ncsharp_prefer_simple_default_expression = true:error\n\ncsharp_indent_case_contents = true:warning\ncsharp_indent_switch_labels = true:warning\ncsharp_style_namespace_declarations = file_scoped:warning\n\n# prefer 'is null' for reference equality checks\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:error\n\n# prefer braces\ncsharp_prefer_braces = true:error\n\n# do not suggest readonly fields\ndotnet_style_readonly_field = false:error\n\n# use expression body for lambdas\ncsharp_style_expression_bodied_lambdas = true:suggestion\n\n# IDE0066: Convert switch statement to expression\ncsharp_style_prefer_switch_expression = true:error\n\n# IDE0063: Use simple 'using' statement\ncsharp_prefer_simple_using_statement = true:error\n\n# IDE0054: Use compound assignment\ndotnet_style_prefer_compound_assignment = true:error\n\n# IDE0062: Make local function 'static'\ncsharp_prefer_static_local_function = true:error\n\n\n# name all constant or static fields using PascalCase\ndotnet_naming_rule.constant_or_static_fields_should_be_pascal_case.severity = error\ndotnet_naming_rule.constant_or_static_fields_should_be_pascal_case.symbols  = constant_or_static_fields\ndotnet_naming_rule.constant_or_static_fields_should_be_pascal_case.style    = pascal_case_style\n\ndotnet_naming_symbols.constant_or_static_fields.applicable_kinds   = field\ndotnet_naming_symbols.constant_or_static_fields.required_modifiers = const\ndotnet_naming_symbols.constant_or_static_fields.required_modifiers = static\n\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\n\n# private fields should be _camelCase\ndotnet_naming_rule.camel_case_for_private_fields.severity = error\ndotnet_naming_rule.camel_case_for_private_fields.symbols  = private_fields\ndotnet_naming_rule.camel_case_for_private_fields.style    = camel_case_underscore_style\n\ndotnet_naming_symbols.private_fields.applicable_kinds = field\ndotnet_naming_symbols.private_fields.applicable_accessibilities = private\n\ndotnet_naming_style.camel_case_underscore_style.required_prefix = _\ndotnet_naming_style.camel_case_underscore_style.capitalization = camel_case\n\n# No other public/protected/protected_internal/private_protected fields are allowed\ndotnet_naming_rule.disallowed_fields_rule.severity = error\ndotnet_naming_rule.disallowed_fields_rule.symbols  = disallowed_fields_symbols\ndotnet_naming_rule.disallowed_fields_rule.style    = disallowed_fields_style\n\ndotnet_naming_symbols.disallowed_fields_symbols.applicable_kinds           = field\ndotnet_naming_symbols.disallowed_fields_symbols.applicable_accessibilities = public, protected_internal, protected, private_protected\n# disallowed_fields_style - Anything that has this style applied is marked as disallowed\ndotnet_naming_style.disallowed_fields_style.capitalization  = all_upper\ndotnet_naming_style.disallowed_fields_style.required_prefix = ____RULE_VIOLATION____\ndotnet_naming_style.disallowed_fields_style.required_suffix = ____RULE_VIOLATION____\n\n# async methods should end with Async suffix\ndotnet_naming_rule.async_methods_end_with_async.severity = warning\ndotnet_naming_rule.async_methods_end_with_async.symbols  = any_async_methods\ndotnet_naming_rule.async_methods_end_with_async.style    = end_with_async\n\ndotnet_naming_symbols.any_async_methods.applicable_kinds           = method\ndotnet_naming_symbols.any_async_methods.applicable_accessibilities = *\ndotnet_naming_symbols.any_async_methods.required_modifiers         = async\n\ndotnet_naming_style.end_with_async.required_suffix = Async\ndotnet_naming_style.end_with_async.capitalization  = pascal_case\n\n# Interfaces must be IPascalCase\ndotnet_naming_rule.interfaces_I_pascal_case.severity = error\ndotnet_naming_rule.interfaces_I_pascal_case.symbols  = interfaces_symbols\ndotnet_naming_rule.interfaces_I_pascal_case.style    = I_pascal_case_style\n\ndotnet_naming_symbols.interfaces_symbols.applicable_kinds = interface\ndotnet_naming_symbols.interfaces_symbols.applicable_accessibilities = *\n\ndotnet_naming_style.I_pascal_case_style.required_prefix = I\ndotnet_naming_style.I_pascal_case_style.capitalization = pascal_case\n\n# name most members using PascalCase (except interface, field, local, parameter, type_parameter)\ndotnet_naming_rule.most_members_must_be_pascal_case.severity = error\ndotnet_naming_rule.most_members_must_be_pascal_case.symbols  = most_members_symbols\ndotnet_naming_rule.most_members_must_be_pascal_case.style    = pascal_case_style\n\ndotnet_naming_symbols.most_members_symbols.applicable_kinds   = class, struct, enum, property, method, event, namespace, local_function\ndotnet_naming_symbols.most_members_symbols.applicable_accessibilities = *\n\n# name Local variables & parameters using camelCase\ndotnet_naming_rule.local_variables_and_parameters_camel_case.severity = error\ndotnet_naming_rule.local_variables_and_parameters_camel_case.symbols  = local_variables_and_parameters_symbols\ndotnet_naming_rule.local_variables_and_parameters_camel_case.style    = camel_case_style\n\ndotnet_naming_symbols.local_variables_and_parameters_symbols.applicable_kinds = local,parameter\n\ndotnet_naming_style.camel_case_style.capitalization = camel_case\n\n# name local constant using PascalCase\ndotnet_naming_rule.local_const_pascal_case.severity = error\ndotnet_naming_rule.local_const_pascal_case.symbols  = local_const\ndotnet_naming_rule.local_const_pascal_case.style    = pascal_case_style\n\ndotnet_naming_symbols.local_const.applicable_kinds   = local\ndotnet_naming_symbols.local_const.required_modifiers = const\n\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\n\n# all type parameters should be TPascalCase\ndotnet_naming_rule.type_parameters_T_pascal_case.severity = error\ndotnet_naming_rule.type_parameters_T_pascal_case.symbols  = type_parameters_symbols\ndotnet_naming_rule.type_parameters_T_pascal_case.style    = T_pascal_case_style\n\ndotnet_naming_symbols.type_parameters_symbols.applicable_kinds = type_parameter\n\ndotnet_naming_style.T_pascal_case_style.required_prefix = T\ndotnet_naming_style.T_pascal_case_style.capitalization = pascal_case\n\n\n# IDE0004: Remove Unnecessary Cast\ndotnet_diagnostic.IDE0004.severity = error\n\n# IDE0019: Use pattern matching\ncsharp_style_pattern_matching_over_as_with_null_check = true:error\n\n# IDE0028: Simplify collection initialization\ndotnet_diagnostic.IDE0028.severity = silent\n\n# IDE0032: Use auto property\ndotnet_style_prefer_auto_properties = true:error\n\n# IDE0056: Use index operator\ncsharp_style_prefer_index_operator = true:error\n\n# IDE0057: Use range operator\ncsharp_style_prefer_range_operator = true:error\n\n# IDE0071: Simplify interpolation\ndotnet_style_prefer_simplified_interpolation = true:error\n\n# IDE0130: Warn and provide code fixes for when namespaces do not match the folder structure.\ndotnet_diagnostic.IDE0130.severity = warning\n\n# IDE0290: Use primary constructor\ndotnet_diagnostic.IDE0290.severity = silent\n\n# IDE0300: Simplify collection initialization\ndotnet_diagnostic.IDE0300.severity = silent\n\n# IDE0305: Simplify collection initialization\ndotnet_diagnostic.IDE0305.severity = silent\n\n# CA1304: Specify CultureInfo\ndotnet_diagnostic.CA1304.severity = warning\n\n# CA1305: Specify IFormatProvider\ndotnet_diagnostic.CA1305.severity = warning\n\n# CA1816: Dispose methods should call SuppressFinalize\ndotnet_diagnostic.CA1816.severity = none\n\n# CA1822: This complains to make functions static. Static is evil. Don't let it complain.\ndotnet_diagnostic.CA1822.severity = none\n\n# CA1825: Avoid zero-length array allocations\ndotnet_diagnostic.CA1825.severity = warning\n\n# CA1827: Do not use Count() or LongCount() when Any() can be used\ndotnet_diagnostic.CA1827.severity = warning\n\n# CA1829: Use Length/Count property instead of Count() when available\ndotnet_diagnostic.CA1829.severity = warning\n\n# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'\ndotnet_diagnostic.CA1835.severity = warning\n\n# CA1841: Prefer Dictionary Contains methods\ndotnet_diagnostic.CA1841.severity = warning\n\n# CA1845: Use span-based 'string.Concat'\ndotnet_diagnostic.CA1845.severity = warning\n\n# CA1846: Prefer AsSpan over Substring\ndotnet_diagnostic.CA1846.severity = warning\n\n# CA1847: Use string.Contains(char) instead of string.Contains(string) with single characters\ndotnet_diagnostic.CA1847.severity = warning\n\n# CA1859: Use concrete types when possible for improved performance\ndotnet_diagnostic.CA1859.severity = none\n\n# CA1865-CA1867: Use 'string.Method(char)' instead of 'string.Method(string)' for string with single char\ndotnet_diagnostic.CA1865.severity = warning\ndotnet_diagnostic.CA1866.severity = warning\ndotnet_diagnostic.CA1867.severity = warning\n\n# CA1868: Unnecessary call to Set.Contains(item)\ndotnet_diagnostic.CA1868.severity = warning\n\n# CA2000: Dispose objects before losing scope\ndotnet_diagnostic.CA2000.severity = warning\n\n# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value\ndotnet_diagnostic.CA2009.severity = warning\n\n# CA2016: Forward the 'CancellationToken' parameter to methods that take one\ndotnet_diagnostic.CA2016.severity = warning\n\n# CA2200: Rethrow to preserve stack details\ndotnet_diagnostic.CA2200.severity = warning\n\n# xUnit1030: Do not call ConfigureAwait in test method\ndotnet_diagnostic.xUnit1030.severity = warning\n\n# RS0030: Do not use banned APIs\ndotnet_diagnostic.RS0030.severity = error\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.4873046875,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n**/osx64/Tor/tor text eol=lf\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.603515625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n#Visual Studio Code\n.vscode/\n!.vscode/settings.json\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n#*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Coverlet\nlcov.info\n/WalletWasabi.Tests/coverage.json\n/WalletWasabi.Backend/wwwroot/unversioned/*\n\n\\.DS_Store\n*.DS_Store\n/NuGet.Config\n\n# WindowsInstaller generated files\n/WalletWasabi.WindowsInstaller/ComponentsGenerated.wxs\n/WalletWasabi.WindowsInstaller/*.wixobj\n\n# This file is created by an F# VS Code plugin\n.ionide/symbolCache.db\n**/launchSettings.json\n"
        },
        {
          "name": "BannedSymbols.txt",
          "type": "blob",
          "size": 0.3056640625,
          "content": "# The file contains a list of banned API for Wasabi Wallet project.\n# \n# Syntax: https://github.com/dotnet/roslyn-analyzers/blob/main/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md\nM:System.Net.Http.HttpClient.#ctor();Each use of an HTTP client operating over clearnet must be approved.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 21.16015625,
          "content": "# Contributing to Wasabi Wallet\n\n## How to be useful for the project\n\n- Any issue labelled as [good first issue](https://github.com/WalletWasabi/WalletWasabi/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) is good to start contributing to Wasabi.\n- Always focus on a specific issue in your pull request and avoid unrelated/unnecessary changes.\n- Avoid working on complex problems (fees, amount decomposition, coin selection...) without extensive research on the context, either on GitHub or asking to contributors.\n- Consider filing a new issue or explaining in an opened issue the change that you want to make, and wait for concept ACKs to work on the implementation.\n- Feel free to join the [Wasabi Slack Server](https://join.slack.com/t/tumblebit/shared_invite/enQtNjQ1MTQ2NzQ1ODI0LWIzOTg5YTM3YmNkOTg1NjZmZTQ3NmM1OTAzYmQyYzk1M2M0MTdlZDk2OTQwNzFiNTg1ZmExNzM0NjgzY2M0Yzg) to discuss with other contributors. \n- [Community calls](https://meet.fulmo.org/community) are held on Mondays at 14:00 UTC, they can be used to ask questions, report a problem or just listen.\n\n## Automatic code clean up\n\n**Visual Studio IDE:**\n\n**DO** use [CodeMaid](https://www.codemaid.net/), a Visual Studio extension to automatically clean up your code on saving the file.\nCodeMaid is a non-intrusive code cleanup tool.\n\nWasabi's CodeMaid settings [can be found in the root of the repository](https://github.com/WalletWasabi/WalletWasabi/blob/master/CodeMaid.config). They are automatically picked up by Visual Studio when you open the project, assuming the CodeMaid extension is installed. Unfortunately CodeMaid has no Visual Studio Code extension yet. You can check out the progress on this [under this GitHub issue](https://github.com/codecadwallader/codemaid/issues/273).\n\n**Rider IDE:**\n\nIn Rider, you can achieve similar functionality by going to `Settings -> Tools -> Action on Save` and enabling `Reformat and Cleanup Code` and changing `Profile` to `Reformat Code`.\n\nAnd also enable `Enable EditorConfig support` in `Settings -> Editor -> Code Style`.\n\n![image](https://user-images.githubusercontent.com/16364053/159900227-627f4b67-e793-421b-836a-09660971c807.png)\n![image](https://user-images.githubusercontent.com/16364053/159900956-539868b7-9fd2-44ed-9ec6-d58569bd9dbb.png)\n\n## .editorconfig\n\nNot only CodeMaid, but Visual Studio also enforces consistent coding style through [`.editorconfig`](https://github.com/WalletWasabi/WalletWasabi/blob/master/.editorconfig) file.\n\nIf you are using Visual Studio Code make sure to install \"C# Dev Kit\" extension and add the following settings to your settings file:\n\n```json\n\"editor.formatOnSave\": true\n```\n\n## Technologies and scope\n\n- [.NET SDK](https://dotnet.microsoft.com/en-us/): free, open-source, cross-platform framework for building apps. SDK version path: [WalletWasabi/global.json](https://github.com/WalletWasabi/WalletWasabi/blob/master/global.json).\n- [C#](https://dotnet.microsoft.com/en-us/languages/csharp): open-source programming language.\n- Model-View-ViewModel architecture (MVVM).\n- [Avalonia UI](https://www.avaloniaui.net/): framework to create cross-platform UI.\n- [xUnit](https://xunit.net/): create unit tests.\n- Dependencies path: [WalletWasabi/Directory.Packages.props](https://github.com/WalletWasabi/WalletWasabi/blob/master/Directory.Packages.props).\n- Developer's documentation path: [WalletWasabi/WalletWasabi.Documentation/](https://github.com/WalletWasabi/WalletWasabi/tree/master/WalletWasabi.Documentation).\n\n# Code conventions\n\n## Refactoring\n\nIf you are a new contributor **DO** keep refactoring pull requests short, uncomplex and easy to verify. It requires a certain level of experience to know where the code belongs to and to understand the full ramification (including rebase effort of open pull requests) - [source](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#refactoring).\n\n## Comments\n\n**DO** follow [Microsoft's C# commenting conventions](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/inside-a-program/coding-conventions#commenting-conventions).\n\n- Place the comment on a separate line, not at the end of a line of code.\n- Begin comment text with an uppercase letter.\n- End comment text with a period.\n- Insert one space between the comment delimiter (`//`) and the comment text, as shown in the following example.\n- Do not create formatted blocks of asterisks around comments.\n\n```cs\n// The following declaration creates a query. It does not run\n// the query.\n```\n\n## Asynchronous Locking\n\n**DO NOT** mix awaitable and non-awaitable locks.\n\n```cs\n// GOOD\nprivate AsyncLock AsyncLock { get; } = new();\nusing (await AsyncLock.LockAsync())\n{\n\t...\n}\n\n// GOOD\nprivate object Lock { get; } = new();\nlock (Lock)\n{\n\t...\n}\n\n// BAD\nusing (AsyncLock.Lock())\n{\n\t...\n}\n```\n\n## Null Check\n\n**DO** use `is null` instead of `== null`. It was a performance consideration in the past but from C# 7.0 it does not matter anymore, today we use this convention to keep our code consistent.\n\n```cs\nif (foo is null)\n{\n\treturn;\n}\n```\n\n## Empty quotes\n\n**DO** use `\"\"` instead of `string.Empty` for consistency.\n\n```cs\nif (foo is null)\n{\n\treturn \"\";\n}\n```\n\n## Blocking\n\n**DO NOT** block with `.Result, .Wait(), .GetAwaiter().GetResult()`. Never.\n\n```cs\n// BAD\nIoHelpers.DeleteRecursivelyWithMagicDustAsync(Folder).GetAwaiter().GetResult();\n```\n\n## `async void`\n\n**DO NOT** `async void`, except for event subscriptions. `async Task` instead.\n**DO** `try catch` in `async void`, otherwise the software can crash.\n\n```cs\n{\n\tMyClass.SomethingHappened += MyClass_OnSomethingHappenedAsync;\n}\n\n// GOOD\nprivate async void Synchronizer_ResponseArrivedAsync(object? sender, EventArgs e)\n{\n\ttry\n\t{\n\t\tawait FooAsync();\n\t}\n\tcatch (Exception ex)\n\t{\n\t\tLogger.LogError<MyClass2>(ex);\n\t}\n}\n```\n- [Async/Await - Best Practices](https://docs.microsoft.com/en-us/archive/msdn-magazine/2013/march/async-await-best-practices-in-asynchronous-programming)\n\n## `ConfigureAwait(false)`\n\nBasically every async library method should use `ConfigureAwait(false)` except:\n- Methods that touch objects on the UI Thread, like modifying UI controls.\n- Methods that are unit tests, xUnit [Fact].\n\n**Usage:**\n```cs\nawait MyMethodAsync().ConfigureAwait(false);\n```\n\n**Top level synchronization**\n```cs\n// Later we need to modify UI control so we need to sync back to this thread, thus don't use .ConfigureAwait(false);.\n// Note: inside MyMethodAsync() you can still use .ConfigureAwait(false);.\nvar result = await MyMethodAsync();\n\n// At this point we are still on the UI thread, so you can safely touch UI elements.\nmyUiControl.Text = result;\n```\n\n- [ConfigureAwait FAQ](https://devblogs.microsoft.com/dotnet/configureawait-faq/)\n\n## Never throw AggregateException and Exception in a mixed way\nIt causes confusion and awkward catch clauses.\n[Example](https://github.com/WalletWasabi/WalletWasabi/pull/10353/files)\n\n## Unused return value\n\n- Good: `using IDisposable _ = BenchmarkLogger.Measure();`\n- Bad: `_ = PrevOutsIndex.Remove(txInput.PrevOut);`\n- Bad: `_ = Directory.CreateDirectory(dir);`\n- Good: `_ = WaitAsync();` - disables warning message. Remark: you should always `await` or store the reference of the task.\n- Good: `_ = new HwiClient(network);`\n\nIn general\n- If the return value is not used, write nothing.\n- In cases when the object needs to be disposed, but you do not need the object, `_ =` should be used.\n- In case you want to create an object but do not need the reference, `_ =` should be used.\n- If it generates a compiler warning, investigate, and if you are sure you can suppress the warning with `_ =` but elaborate on it with a comment.\n- In special cases `_ =` can be used but a reasonable elaboration is required by adding a comment above. \n\n---\n\n# UI Coding Conventions\n\nThe following is a list of UI specific coding conventions. Follow these any time you are contributing code in the following projects:\n - `WalletWasabi.Fluent`\n - `WalletWasabi.Fluent.Desktop`\n - `WalletWasabi.Fluent.Generators`\n\n ## Disposing Subscriptions in ReactiveObjects\n\n**DO** follow [ReactiveUI's Subscription Disposing Conventions](https://reactiveui.net/docs/guidelines/framework/dispose-your-subscriptions).\n\n**DO** dispose your subscription if you are referencing another object. **DO** use the `.DisposeWith()` method.\n\n```cs\nObservable.FromEventPattern(...)\n\t.ObserveOn(RxApp.MainThreadScheduler)\n\t.Subscribe(...)\n\t.DisposeWith(Disposables);\n```\n\n**DO NOT** dispose your subscription if a component exposes an event and also subscribes to it itself. That's because the subscription is manifested as the component having a reference to itself. Same is true with Rx. If you're a VM and you e.g. WhenAnyValue against your own property, there's no need to clean that up because that is manifested as the VM having a reference to itself.\n\n```cs\nthis.WhenAnyValue(...)\n\t.ObserveOn(RxApp.MainThreadScheduler)\n\t.Subscribe(...);\n```\n\n## Subscribe triggered once on initialization\n\nWhen you subscribe with the usage of `.WhenAnyValue()` right after the creation one call of Subscription will be triggered. This is by design and most of the cases it is fine. Still you can suppress this behaviour by adding `Skip(1)`.\n\n```cs\nthis.WhenAnyValue(x => x.PreferPsbtWorkflow)\n\t.Skip(1)\n\t.Subscribe(value =>\n\t{\n\t\t// Expensive operation, that should not run unnecessary.\n\t});\n```\n\n- [Example](https://stackoverflow.com/questions/36705139/why-does-whenanyvalue-observable-trigger-on-subscription)\n\n## ObservableAsPropertyHelpers Over Properties\n\n**DO** follow [ReactiveUI's Oaph Over Properties Principle](https://reactiveui.net/docs/guidelines/framework/prefer-oaph-over-properties).\n\n**DO** use  `ObservableAsPropertyHelper` with `WhenAny` when a property's value depends on another property, a set of properties, or an observable stream, rather than set the value explicitly.\n\n```cs\npublic class RepositoryViewModel : ReactiveObject\n{\n  private ObservableAsPropertyHelper<bool> _canDoIt;\n\n  public RepositoryViewModel()\n  {\n    _canDoIt = this.WhenAnyValue(...)\n\t\t.ToProperty(this, x => x.CanDoIt, scheduler: RxApp.MainThreadScheduler);\n  }\n\n  public bool CanDoIt => _canDoIt?.Value ?? false;\n}\n```\n\n**DO** always subscribe to these `ObservableAsPropertyHelper`s after their initialization is done.\n\n## No code in Code-behind files (.xaml.cs)\n\nAll the logic should go into `ViewModels` or `Behaviors`.\n\n## Main MUST be Synchronous\n\nFor Avalonia applications the Main method must be synchronous. No async-await here! If you await inside Main before Avalonia has initialised its renderloop / UIThread, then OSX will stop working. Why? Because OSX applications (and some of Unixes) assume that the very first thread created in a program is the UIThread. Cocoa apis check this and crash if they are not called from Thread 0. Awaiting means that Avalonia may not be able to capture Thread 0 for the UIThread.\n\n## Avoid Binding expressions with SubProperties\nIf you have a `Binding` expression i.e. `{Binding MyProperty.ChildProperty}` then most likely the UI design is flawed and you have broken the MVVM pattern.\n\nThis kind of Binding demonstrates that your View is dependent not on just 1 ViewModel, but multiple Viewmodels and a very specific relationship between them.\n\nIf you find yourself having to do this, please re-think the UI design. To follow the MVVM pattern correctly to ensure the UI remains maintainable and testable then we should have a 1-1 view, viewmodel relationship. That means every view should only depend on a single viewmodel.\n\n## Familiarise yourself with MVVM Pattern\nIt is very important for us to follow the MVVM pattern in UI code. Whenever difficulties arise in refactoring the UI or adding new UI features its usually where we have ventured from this path.\n\nSome pointers on how to recognise if we are breaking MVVM:\n\n* Putting code in .xaml.cs (code-behind files)\n* Putting business logic inside control code\n* Views that depend on more than 1 viewmodel class.\n\nIf it seems not possible to implement something without breaking some of this advice please consult with @danwalmsley.\n\n## Avoid using Grid as much as possible, Use Panel instead\nIf you don't need any row or column splitting for your child controls, just use `Panel` as your default container control instead of `Grid` since it is a moderately memory and CPU intensive control.\n\n## ViewModel Hierarchy\n\nThe ViewModel structure should reflect the UI structure as much as possible. This means that ViewModels can have *child* ViewModels directly referenced in their code, just like Views have direct reference to *child* views.\n\n❌ **DO NOT** write ViewModel code that depends on *parent* or *sibling* ViewModels in the logical UI structure. This harms both testability and maintainability.\n\nExamples:\n\n - ✔️ `MainViewModel` represents the Main Wasabi UI and references `NavBarViewModel`.\n - ✔️ `NavBarViewModel` represents the left-side navigation bar and references `WalletListViewModel`.\n - ❌ `NavBarViewModel` code must NOT reference `MainViewModel` (its logical parent).\n - ❌ `WalletListViewModel` code must NOT reference `NavBarViewModel` (its logical parent).\n - ❌ `WalletListViewModel` code must NOT reference other ViewModels that are logical children of `NavBarViewModel` (its logical siblings).\n\n## UI Models\n\nThe UI Model classes (which comprise the *Model* part of the MVVM pattern) sit as an abstraction layer between the UI and the larger Wasabi Object Model (which lives in the `WalletWasabi` project). This layer is responsible for:\n\n - Exposing Wasabi data and functionality in a UI-friendly manner. Usually in the form of Observables.\n\n - Avoiding tight coupling between UI code and business logic. This is critical for testability of UI code, mainly ViewModels.\n\n❌ **DO NOT** write ViewModel code that depends directly on `WalletWasabi` objects such as `Wallet`, `KeyManager`, `HdPubKey`, etc.\n\n✔️ **DO** write ViewModel code that depends on `IWalletModel`, `IWalletRepository`, `IAddress`, etc.\n\n❌ **DO NOT** convert regular .NET properties from `WalletWasabi` objects into observables or INPC properties in ViewModel code.\n\n❌ **DO NOT** convert regular .NET events from `WalletWasabi` objects into observables in ViewModel code.\n\n✔️ If such conversions are required, **DO** write them into the UI Model layer.\n\n## UiContext\n\nViewModels that depend on external components (such as Navigation, Clipboard, QR Reader, etc) can access these via the `ViewModelBase.UIContext` property. For instance:\n\n - Get text from clipboard: `var text = await UIContext.Clipboard.GetTextAsync();`\n\n - Generate QR Code: `await UIContext.QrGenerator.Generate(data);`\n\n - Open a popup or navigate to another Viewmodel: `UIContext.Navigate().To(....)`\n\nThis is done to facilitate unit testing of viewmodels, since all dependencies that live inside the `UiContext` are designed to be mock-friendly.\n\n❌ **DO NOT** write Viewmodel code that directly depends on external device-specific components or code that might otherwise not work in the context of a unit test.\n\n## Source-Generated ViewModel Constructors\n\nWhenever a ViewModel references its `UiContext` property, the `UiContext` object becomes an actual **dependency** of said ViewModel. It must therefore be initialized, ideally as a constructor parameter.\n\nIn order to minimize the amount of boilerplate required for such initialization, several things occur in this case:\n - A new constructor is generated for that ViewModel, including all parameters of any existing constructor plus the UiContext.\n - This generated constructor initializes the `UiContext` *after* running the code of the manually written constructor (if any).\n - A Roslyn Analyzer inspects any manually written constructors in the ViewModel to prevent references to `UiContext` in the constructor body, before the above mentioned initialization can take place, resulting in `NullReferenceException`s.\n - The Analyzer demands the manually written constructor to be declared `private`, so that external instantiation of the ViewModel is done by calling the source-generated constructor.\n\n❌ Writing code that directly references `UiContext` in a ViewModel's constructor body will result in a compile-time error.\n\n❌ Writing code that indirectly references `UiContext` in ViewModel's constructor body will result in a run-time `NullReferenceException`.\n\n✔️ Writing code that directly or indirectly references `UiContext` inside a lambda expression in a ViewModel's constructor body is okay, since this code is deferred to a later time at run-time when the `UiContext` property has already been properly initialized.\n\nExample:\n\n```csharp\n    // ❌ BAD, constructor should be private\n    public AddressViewModel(IAddress address)\n\t{\n\t\tif (condition)\n\t\t{\n\t\t\t//❌ BAD, UiContext is null at this point.\n\t\t\tUiContext.Navigate().To(someOtherViewModel);\n\t\t}\n\t}\n\n    // ✔️ GOOD, constructor is private\n    private AddressViewModel(IAddress address)\n\t{\n\t\t//✔️ GOOD, UiContext is already initialized when the Command runs\n\t\tNextCommand = ReactiveCommand.Create(() => UiContext.Navigate().To(someOtherViewModel)));\n\t}\n```\n\nIf you absolutely must reference `UiContext` in the constructor, you can create a public constructor explicitly taking `UiContext` as a parameter:\n\n```csharp\n    // ✔️ GOOD,\n    public AddressViewModel(UiContext uiContext, IAddress address)\n\t{\n\t\tUiContext = uiContext;\n\n\t\t// ✔️Other code here can safely use the UiContext since it's explicitly initialized above.\n\t}\n```\n\nIn this case, no additional constructors will be generated, and the analyzer will be satisfied.\n\n# Pull Requests\n\n### Committing Patches\n\nIn general, [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\nand diffs should be easy to read. For this reason, do not mix any formatting\nfixes or code moves with actual code changes.\n\nMake sure each individual commit is hygienic: that it builds successfully on its\nown without warnings, errors, regressions, or test failures.\n\nCommit messages should be verbose by default consisting of a short subject line\n(50 chars max), a blank line and detailed explanatory text as separate\nparagraph(s), unless the title alone is self-explanatory (like \"Correct typo\nin readme.md\") in which case a single title line is sufficient. Commit messages should be\nhelpful to people reading your code in the future, so explain the reasoning for\nyour decisions. Further explanation [here](https://chris.beams.io/posts/git-commit/).\n\nIf a particular commit references another issue, please add the reference. For\nexample: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\nwill cause the corresponding issue to be closed when the pull request is merged.\n\nCommit messages should never contain any `@` mentions (usernames prefixed with \"@\").\n\nPlease refer to the [Git manual](https://git-scm.com/doc) for more information\nabout Git.\n\n  - Push changes to your fork\n  - Create pull request\n\n### Features\n\nWhen adding a new feature, thought must be given to the long term technical debt\nand maintenance that feature may require after inclusion. Before proposing a new\nfeature that will require maintenance, please consider if you are willing to\nmaintain it (including bug fixing). If features get orphaned with no maintainer\nin the future, they may be removed by the Repository Maintainer.\n\n### Refactoring\n\nRefactoring is a necessary part of any software project's evolution. The\nfollowing guidelines cover refactoring pull requests for the project.\n\nThere are three categories of refactoring: code-only moves, code style fixes, and\ncode refactoring. In general, refactoring pull requests should not mix these\nthree kinds of activities in order to make refactoring pull requests easy to\nreview and uncontroversial. In all cases, refactoring PRs must not change the\nbehaviour of code within the pull request (bugs must be preserved as is).\n\nProject maintainers aim for a quick turnaround on refactoring pull requests, so\nwhere possible keep them short, uncomplex and easy to verify.\n\nPull requests that refactor the code should not be made by new contributors. It\nrequires a certain level of experience to know where the code belongs to and to\nunderstand the full ramification (including rebase effort of open pull requests).\n\nTrivial pull requests or pull requests that refactor the code with no clear\nbenefits may be immediately closed by the maintainers to reduce unnecessary\nworkload on reviewing.\n\n### Squashing Commits\n\nIf your pull request contains fixup commits (commits that change the same line of code repeatedly) or too fine-grained\ncommits, you may be asked to [squash](https://git-scm.com/docs/git-rebase#_interactive_mode) your commits\nbefore it will be reviewed.\n\nPlease refrain from creating several pull requests for the same change.\nUse the pull request that is already open (or was created earlier) to amend\nchanges. This preserves the discussion and review that happened earlier for\nthe respective change set.\n\nThe length of time required for peer review is unpredictable and will vary from\npull request to pull request.\n\n### Merging Pull Requests\n\nThere are different ways to merge commits on GitHub. By default, the \"Create merge commit\" should be used. If there are several commits addressing the same change, the author can be asked to squash commits. For example:\n\n- Fix code format\n- Fix code format again\n- More code format fix\n\nAvoid squashing excessively. The objective is not to achieve a brief commit history but rather a sequential one, where each commit encapsulates a single logical change in the code, as detailed by its commit message.\n\n"
        },
        {
          "name": "CodeMaid.config",
          "type": "blob",
          "size": 1.6953125,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n    <configSections>\n        <sectionGroup name=\"userSettings\" type=\"System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" >\n            <section name=\"SteveCadwallader.CodeMaid.Properties.Settings\" type=\"System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n        </sectionGroup>\n    </configSections>\n    <userSettings>\n        <SteveCadwallader.CodeMaid.Properties.Settings>\n            <setting name=\"Cleaning_AutoCleanupOnFileSave\" serializeAs=\"String\">\n                <value>True</value>\n            </setting>\n            <setting name=\"Reorganizing_AlphabetizeMembersOfTheSameGroup\"\n                serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n            <setting name=\"Cleaning_InsertEndOfFileTrailingNewLine\" serializeAs=\"String\">\n                <value>True</value>\n            </setting>\n            <setting name=\"Cleaning_RemoveEndOfFileTrailingNewLine\" serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n            <setting name=\"Cleaning_RunVisualStudioRemoveAndSortUsingStatements\"\n                serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n            <setting name=\"Cleaning_PerformPartialCleanupOnExternal\" serializeAs=\"String\">\n                <value>2</value>\n            </setting>\n            <setting name=\"Feature_BuildProgressToolWindow\" serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n        </SteveCadwallader.CodeMaid.Properties.Settings>\n    </userSettings>\n</configuration>"
        },
        {
          "name": "Contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.88671875,
          "content": "<Project>\n <PropertyGroup>\n\t<TargetFramework>net8.0</TargetFramework>\n\t<RuntimeIdentifiers>win-x64;linux-x64;linux-arm64;osx-x64;osx-arm64</RuntimeIdentifiers>\n\t<AnalysisLevel>latest</AnalysisLevel>\n\t<LangVersion>12</LangVersion>\n\t<Nullable>enable</Nullable>\n\t<Deterministic>true</Deterministic>\n\t<InvariantGlobalization>true</InvariantGlobalization>\n\t<WarningsAsErrors>false</WarningsAsErrors>\n\n\t<!-- Audit both top-level and transitive dependencies for vulnerabilities in NuGet packages. -->\n\t<!-- https://learn.microsoft.com/en-us/nuget/concepts/auditing-packages#setting-a-security-audit-mode -->\n\t<NuGetAuditMode>all</NuGetAuditMode>\n    <NuGetAuditLevel>low</NuGetAuditLevel>\n </PropertyGroup>\n\n <ItemGroup>\n\t<PackageReference Include=\"Microsoft.CodeAnalysis.BannedApiAnalyzers\" PrivateAssets=\"all\" />\n\t<AdditionalFiles Include=\"$(MSBuildThisFileDirectory)BannedSymbols.txt\"/>\n </ItemGroup>\n</Project>\n"
        },
        {
          "name": "Directory.Packages.props",
          "type": "blob",
          "size": 3.837890625,
          "content": "<Project>\n  <PropertyGroup>\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\n    <AvaloniaVersion>11.0.999-cibuild0044755-beta</AvaloniaVersion>\n  </PropertyGroup>\n  <ItemGroup>\n    <!-- AspNetCore. -->\n    <PackageVersion Include=\"Markdown.Avalonia\" Version=\"11.0.3-a1\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.WebUtilities\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.Extensions.Caching.Abstractions\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.Extensions.Caching.Memory\" Version=\"8.0.1\" />\n    <PackageVersion Include=\"Microsoft.Extensions.Hosting.Abstractions\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.Extensions.Http\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"NNostr.Client\" Version=\"0.0.49\" />\n    <PackageVersion Include=\"SkiaSharp.NativeAssets.Linux\" Version=\"2.88.8\" />\n    <PackageVersion Include=\"System.IO.Pipelines\" Version=\"8.0.0\" />\n    <!-- JSON. -->\n    <PackageVersion Include=\"Microsoft.AspNetCore.Mvc.NewtonsoftJson\" Version=\"8.0.0\" />\n    <!-- SQLite. -->\n    <PackageVersion Include=\"Microsoft.Data.Sqlite\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.Win32.SystemEvents\" Version=\"8.0.0\" />\n    <!-- C# analysis. -->\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.Common\" Version=\"4.6.0\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"4.6.0\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.Analyzers\" Version=\"3.3.4\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.BannedApiAnalyzers\" Version=\"3.3.4\" />\n    <PackageVersion Include=\"System.Private.Uri\" Version=\"4.3.2\" />\n    <!-- Version 4.3.0 contains a vulnerability, manually bumped to 4.3.2. -->\n    <PackageVersion Include=\"System.Text.Json\" Version=\"8.0.5\" />\n    <!-- Version 8.0.3 contains a vulnerability, manually bumped to 8.0.4. -->\n    <!-- Core libraries. -->\n    <PackageVersion Include=\"WabiSabi\" Version=\"1.0.1.2\" />\n    <PackageVersion Include=\"NBitcoin\" Version=\"7.0.46\" />\n    <!-- Backend. -->\n    <PackageVersion Include=\"Swashbuckle.AspNetCore\" Version=\"6.5.0\" />\n    <!-- UI. -->\n    <PackageVersion Include=\"Avalonia\" Version=\"$(AvaloniaVersion)\" />\n    <PackageVersion Include=\"Avalonia.Controls.TreeDataGrid\" Version=\"11.0.2\" />\n    <PackageVersion Include=\"Avalonia.Diagnostics\" Version=\"$(AvaloniaVersion)\" />\n    <PackageVersion Include=\"Avalonia.Xaml.Behaviors\" Version=\"11.0.5\" />\n    <PackageVersion Include=\"Avalonia.Desktop\" Version=\"$(AvaloniaVersion)\" />\n    <PackageVersion Include=\"Avalonia.ReactiveUI\" Version=\"$(AvaloniaVersion)\" />\n    <PackageVersion Include=\"Avalonia.Skia\" Version=\"$(AvaloniaVersion)\" />\n    <PackageVersion Include=\"Avalonia.Themes.Fluent\" Version=\"$(AvaloniaVersion)\" />\n    <PackageVersion Include=\"Avalonia.Fonts.Inter\" Version=\"$(AvaloniaVersion)\" />\n    <PackageVersion Include=\"System.Runtime\" Version=\"4.3.1\" />\n    <PackageVersion Include=\"QRackers\" Version=\"1.1.0\" />\n    <PackageVersion Include=\"DynamicData\" Version=\"8.1.1\" />\n    <!-- UI Mobile. -->\n    <PackageVersion Include=\"Avalonia.Android\" Version=\"$(AvaloniaVersion)\" />\n    <PackageVersion Include=\"Xamarin.AndroidX.AppCompat\" Version=\"1.3.1.3\" />\n    <PackageVersion Include=\"Xamarin.AndroidX.Lifecycle.ViewModel\" Version=\"2.3.1.3\" />\n    <PackageVersion Include=\"Avalonia.iOS\" Version=\"$(AvaloniaVersion)\" />\n    <!-- UI Testing. -->\n    <PackageVersion Include=\"Avalonia.Headless.XUnit\" Version=\"$(AvaloniaVersion)\" />\n    <!-- Testing. -->\n    <PackageVersion Include=\"coverlet.collector\" Version=\"6.0.0\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.Mvc.Testing\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.8.0\" />\n    <PackageVersion Include=\"Moq\" Version=\"[4.18.4]\" />\n    <PackageVersion Include=\"xunit\" Version=\"2.6.6\" />\n    <PackageVersion Include=\"xunit.runner.visualstudio\" Version=\"2.5.6\" />\n  </ItemGroup>\n</Project>"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0595703125,
          "content": "MIT License\n\nCopyright (c) 2024 The Wasabi Wallet Developers\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "NOTICE.md",
          "type": "blob",
          "size": 2.02734375,
          "content": "This project incorporates code and dependencies from the following open source projects:\n\n## AsyncEx\n**License:** AsyncEx<br/>\n**Copyright:** Copyright (c) 2014 StephenCleary<br/>\n**Included:** A helper library for async/await.<br/>\n\n## Avalonia\n**License:** MIT License<br/>\n**Copyright:** Copyright (c) AvaloniaUI OÜ All Rights Reserved<br/>\n**Included:** Cross-platform UI framework used for building the application interface.<br/>\n\n## Coverlet\n**License:** MIT License<br/>\n**Copyright:** Copyright (c) 2018 Toni Solarin-Sodara<br/>\n**Included:** Cross-platform code coverage tool for .NET applications.<br/>\n\n## DynamicData\n**License:** MIT License<br/>\n**Copyright:** Copyright (c) Roland Pheasant 2011-2022<br/>\n**Included:** Reactive extensions for managing dynamic collections.<br/>\n\n## Ginger Wallet\n**License:** MIT License<br/>\n**Copyright:** Copyright (c) 2024 GingerPrivacy<br/>\n**Included:** Settings layout, Markdown integration & parts of Release Highlights feature<br/>\n\n## HWI (Hardware Wallet Interface)\n**License:** MIT License<br/>\n**Copyright:** Copyright (c) 2017 Andrew Chow<br/>\n**Included:** Binaries for hardware wallet integration.<br/>\n\n## Moq\n**License:** BSD 3-Clause License<br/>\n**Copyright:** Copyright (c) 2007, Clarius Consulting, Manas Technology Solutions, InSTEDD,\nand Contributors. All rights reserved.<br/>\n**Included:** Library for creating mock objects in unit tests.<br/>\n\n## NBitcoin\n**License:** MIT License<br/>\n**Copyright:**  Copyright (c) 2023 Metaco SA<br/>\n**Included:** Library for Bitcoin protocol and blockchain-related functionalities.<br/>\n\n## Tor\n**License:** BSD 3-Clause License<br/>\n**Copyright:** Copyright (c) 2001-2004, Roger Dingledine<br/>\nCopyright (c) 2004-2006, Roger Dingledine, Nick Mathewson<br/>\nCopyright (c) 2007-2019, The Tor Project, Inc.<br/>\n**Included:** Binaries for anonymous network routing.<br/>\n\n## Xunit\n**License:** Apache License 2.0<br/>\n**Copyright:**  Copyright (c) .NET Foundation and Contributors<br/>\n**Included:** Testing framework used for writing and running unit tests.<br/>\n"
        },
        {
          "name": "NuGet.Config",
          "type": "blob",
          "size": 0.5224609375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\n    <add key=\"avalonia-all\" value=\"https://nuget-feed-all.avaloniaui.net/v3/index.json\" />\n  </packageSources>\n\n  <packageSourceMapping>\n    <packageSource key=\"avalonia-all\">\n      <package pattern=\"*\"/>\n    </packageSource>\n    <packageSource key=\"nuget.org\">\n      <package pattern=\"*\"/>\n    </packageSource>\n  </packageSourceMapping>\n</configuration>\n"
        },
        {
          "name": "PGP.txt",
          "type": "blob",
          "size": 5.6943359375,
          "content": "-----BEGIN PGP PUBLIC KEY BLOCK-----\nComment: User-ID:\tzkSNACKs <zksnacks@gmail.com>\nComment: Valid from:\t2019. 08. 22. 15:57\nComment: Valid until:\t2028. 02. 24. 12:00\nComment: Type:\t2 048-bit RSA (secret key available)\nComment: Usage:\tSigning, Certifying User-IDs\nComment: Fingerprint:\t6FB3872B5D42292F59920797856348328949861E\n\n\n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\n=yFQZ\n-----END PGP PUBLIC KEY BLOCK-----\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5556640625,
          "content": "<p align=\"center\">\n  <a href=\"https://wasabiwallet.io\">\n    <img src=\"https://github.com/WalletWasabi/WalletWasabi/blob/master/ui-ww.png\">\n  </a>\n</p>\n\n<h3 align=\"center\">\n    An open-source, non-custodial, privacy-focused Bitcoin wallet for desktop.\n</h3>\n\n<h3 align=\"center\">\n  <a href=\"https://wasabiwallet.io\">\n    Website\n  </a>\n  <span> | </span>\n  <a href=\"https://docs.wasabiwallet.io/\">\n    Documentation\n  </a>\n  <span> | </span>\n  <a href=\"https://wasabiwallet.io/swagger/index.html\">\n    API\n  </a>\n  <span> | </span>\n  <a href=\"https://github.com/WalletWasabi/WalletWasabi/discussions/5185\">\n    Support\n  </a>\n  <span> | </span>\n  <a href=\"https://www.youtube.com/c/WasabiWallet\">\n    YouTube\n  </a>\n  <span> | </span>\n  <a href=\"https://github.com/WalletWasabi/WalletWasabi/blob/master/PGP.txt\">\n    PGP\n  </a>\n</h3>\n<br>\n\n# [Download Wasabi](https://github.com/WalletWasabi/WalletWasabi/releases)\n\n<br>\n\n# Build From Source Code\n\n### Get The Requirements\n\n1. Get Git: https://git-scm.com/downloads\n2. Get .NET 8.0 SDK: https://dotnet.microsoft.com/download\n3. Optionally disable .NET's telemetry by executing in the terminal `export DOTNET_CLI_TELEMETRY_OPTOUT=1` on Linux and macOS or `setx DOTNET_CLI_TELEMETRY_OPTOUT 1` on Windows.\n\n### Get Wasabi\n\nClone & Restore & Build\n\n```sh\ngit clone --depth=1 --single-branch --branch=master https://github.com/WalletWasabi/WalletWasabi.git\ncd WalletWasabi/WalletWasabi.Fluent.Desktop\ndotnet build\n```\n\n### Run Wasabi\n\nRun Wasabi with `dotnet run` from the `WalletWasabi.Fluent.Desktop` folder.\n\n### Update Wasabi\n\n```sh\ngit pull\n```\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 9.513671875,
          "content": "# Security Policy\n\nIf a vulnerability does not compromise users' privacy or security, open a [regular GitHub issue](https://github.com/WalletWasasbi/WalletWasabi/issues/new/choose).\nIf it does, then pay great care to responsible disclosure. Report a [private vulnerability on GitHub](https://github.com/WalletWasabi/WalletWasabi/security/advisories/new) or send an email to molnardavid84@gmail.com, preferably using PGP encryption: `F079 0C08 68BD BAB8 EE33 F9CE 50FB 7FEB 00F9 7588`\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n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\nTeI=\n=QePN\n-----END PGP PUBLIC KEY BLOCK-----\n```\n"
        },
        {
          "name": "Settings.StyleCop",
          "type": "blob",
          "size": 34.40234375,
          "content": "<StyleCopSettings Version=\"105\">\n  <GlobalSettings>\n    <CollectionProperty Name=\"DeprecatedWords\">\n      <Value>preprocessor,pre-processor</Value>\n      <Value>shortlived,short-lived</Value>\n    </CollectionProperty>\n    <BooleanProperty Name=\"AutoCheckForUpdate\">False</BooleanProperty>\n    <BooleanProperty Name=\"WriteCache\">False</BooleanProperty>\n    <StringProperty Name=\"MergeSettingsFiles\">NoMerge</StringProperty>\n  </GlobalSettings>\n  <Parsers>\n    <Parser ParserId=\"StyleCop.CSharp.CsParser\">\n      <ParserSettings>\n        <CollectionProperty Name=\"GeneratedFileFilters\">\n          <Value>\\.g\\.cs$</Value>\n          <Value>\\.generated\\.cs$</Value>\n          <Value>\\.g\\.i\\.cs$</Value>\n          <Value>TemporaryGeneratedFile_.*\\.cs$</Value>\n        </CollectionProperty>\n        <BooleanProperty Name=\"AnalyzeDesignerFiles\">False</BooleanProperty>\n      </ParserSettings>\n    </Parser>\n  </Parsers>\n  <Analyzers>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.NamingRules\">\n      <Rules>\n        <Rule Name=\"StaticReadonlyFieldsMustBeginWithUpperCaseLetter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FieldNamesMustNotBeginWithUnderscore\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ConstFieldNamesMustBeginWithUpperCaseLetter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"AccessibleFieldsMustBeginWithUpperCaseLetter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"VariableNamesMustNotBePrefixed\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FieldNamesMustNotContainUnderscore\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementMustBeginWithUpperCaseLetter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementMustBeginWithLowerCaseLetter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"InterfaceNamesMustBeginWithI\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FieldNamesMustNotUseHungarianNotation\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FieldNamesMustBeginWithLowerCaseLetter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings>\n        <CollectionProperty Name=\"Hungarian\">\n          <Value>as</Value>\n          <Value>db</Value>\n          <Value>do</Value>\n          <Value>id</Value>\n          <Value>if</Value>\n          <Value>in</Value>\n          <Value>is</Value>\n          <Value>my</Value>\n          <Value>no</Value>\n          <Value>on</Value>\n          <Value>to</Value>\n          <Value>ui</Value>\n        </CollectionProperty>\n      </AnalyzerSettings>\n    </Analyzer>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.DocumentationRules\">\n      <Rules>\n        <Rule Name=\"ElementsMustBeDocumented\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PartialElementsMustBeDocumented\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"EnumerationItemsMustBeDocumented\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DocumentationMustContainValidXml\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementDocumentationMustHaveSummary\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PartialElementDocumentationMustHaveSummary\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementDocumentationMustHaveSummaryText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PartialElementDocumentationMustHaveSummaryText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementDocumentationMustNotHaveDefaultSummary\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PropertyDocumentationMustHaveValue\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PropertyDocumentationMustHaveValueText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementParametersMustBeDocumented\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementParameterDocumentationMustMatchElementParameters\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementParameterDocumentationMustDeclareParameterName\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementParameterDocumentationMustHaveText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementReturnValueMustBeDocumented\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementReturnValueDocumentationMustHaveValue\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementReturnValueDocumentationMustHaveText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"VoidReturnValueMustNotBeDocumented\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"GenericTypeParametersMustBeDocumented\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"GenericTypeParametersMustBeDocumentedPartialClass\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"GenericTypeParameterDocumentationMustMatchTypeParameters\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"GenericTypeParameterDocumentationMustDeclareParameterName\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"GenericTypeParameterDocumentationMustHaveText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PropertySummaryDocumentationMustMatchAccessors\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PropertySummaryDocumentationMustOmitSetAccessorWithRestrictedAccess\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementDocumentationMustNotBeCopiedAndPasted\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"SingleLineCommentsMustNotUseDocumentationStyleSlashes\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DocumentationTextMustNotBeEmpty\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DocumentationTextMustBeginWithACapitalLetter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DocumentationTextMustEndWithAPeriod\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DocumentationTextMustContainWhitespace\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DocumentationMustMeetCharacterPercentage\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DocumentationTextMustMeetMinimumCharacterLength\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ConstructorSummaryDocumentationMustBeginWithStandardText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DestructorSummaryDocumentationMustBeginWithStandardText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DocumentationHeadersMustNotContainBlankLines\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"IncludedDocumentationFileDoesNotExist\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"IncludedDocumentationXPathDoesNotExist\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"IncludeNodeDoesNotContainValidFileAndPath\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"InheritDocMustBeUsedWithInheritingClass\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementDocumentationMustBeSpelledCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileMustHaveHeader\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileHeaderMustShowCopyright\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileHeaderMustHaveCopyrightText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileHeaderCopyrightTextMustMatch\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileHeaderMustContainFileName\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileHeaderFileNameDocumentationMustMatchFileName\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileHeaderMustHaveSummary\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileHeaderMustHaveValidCompanyText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileHeaderCompanyNameTextMustMatch\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileHeaderFileNameDocumentationMustMatchTypeName\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings />\n    </Analyzer>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.LayoutRules\">\n      <Rules>\n        <Rule Name=\"CurlyBracketsMustNotBeOmitted\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementsMustBeSeparatedByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ClosingCurlyBracketMustBeFollowedByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CurlyBracketsForMultiLineStatementsMustNotShareLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"SingleLineCommentMustBePrecededByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementDocumentationHeaderMustBePrecededByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementDocumentationHeadersMustNotBeFollowedByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CodeMustNotContainMultipleBlankLinesInARow\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"StatementMustNotBeOnSingleLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementMustNotBeOnSingleLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"SingleLineCommentsMustNotBeFollowedByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"AllAccessorsMustBeMultiLineOrSingleLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"OpeningCurlyBracketsMustNotBeFollowedByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"OpeningCurlyBracketsMustNotBePrecedededByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ClosingCurlyBracketsMustNotBePrecededByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ChainedStatementBlocksMustNotBePrecededByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"WhileDoFooterMustNotBePrecededByBlankLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CodeMustNotContainBlankLinesAtStartOfFile\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CodeMustNotContainBlankLinesAtEndOfFile\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings />\n    </Analyzer>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.OrderingRules\">\n      <Rules>\n        <Rule Name=\"UsingDirectivesMustBePlacedWithinNamespace\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementsMustAppearInTheCorrectOrder\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ElementsMustBeOrderedByAccess\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"StaticElementsMustAppearBeforeInstanceElements\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"StaticReadonlyElementsMustAppearBeforeStaticNonReadonlyElements\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"InstanceReadonlyElementsMustAppearBeforeInstanceNonReadonlyElements\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"UsingDirectivesMustBeOrderedAlphabeticallyByNamespace\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"UsingAliasDirectivesMustBeOrderedAlphabeticallyByAliasName\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ConstantsMustAppearBeforeFields\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DeclarationKeywordsMustFollowOrder\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ProtectedMustComeBeforeInternal\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PartialElementsMustDeclareAccess\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PropertyAccessorsMustFollowOrder\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"EventAccessorsMustFollowOrder\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"UsingAliasDirectivesMustBePlacedAfterOtherUsingDirectives\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings />\n    </Analyzer>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.ReadabilityRules\">\n      <Rules>\n        <Rule Name=\"DoNotPrefixCallsWithBaseUnlessLocalImplementationExists\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PrefixLocalCallsWithThis\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"QueryClauseMustFollowPreviousClause\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"QueryClausesMustBeOnSeparateLinesOrAllOnOneLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PrefixCallsCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"SplitParametersMustStartOnLineAfterDeclaration\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ParametersMustBeOnSameLineOrSeparateLines\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"QueryClauseMustBeginOnNewLineWhenPreviousClauseSpansMultipleLines\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"QueryClausesSpanningMultipleLinesMustBeginOnOwnLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CodeMustNotContainEmptyStatements\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CodeMustNotContainMultipleStatementsOnOneLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"UseStringEmptyForEmptyStrings\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ParameterMustFollowComma\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"UseBuiltInTypeAlias\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"OpeningParenthesisMustBeOnDeclarationLine\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ClosingParenthesisMustBeOnLineOfLastParameter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CommentsMustContainText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ParameterListMustFollowDeclaration\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ParameterMustNotSpanMultipleLines\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DoNotPlaceRegionsWithinElements\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DoNotUseRegions\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"BlockStatementsMustNotContainEmbeddedRegions\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"UseShorthandForNullableTypes\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"BlockStatementsMustNotContainEmbeddedComments\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CommaMustBeOnSameLineAsPreviousParameter\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ClosingParenthesisMustBeOnLineOfOpeningParenthesis\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings />\n    </Analyzer>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.SpacingRules\">\n      <Rules>\n        <Rule Name=\"DocumentationLinesMustBeginWithSingleSpace\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"SingleLineCommentsMustBeginWithSingleSpace\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"TabsMustNotBeUsed\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"OpeningParenthesisMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ClosingParenthesisMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CodeMustNotContainMultipleWhitespaceInARow\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"KeywordsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CommasMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"SemicolonsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"SymbolsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PreprocessorKeywordsMustNotBePrecededBySpace\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"OperatorKeywordMustBeFollowedBySpace\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"OpeningSquareBracketsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ClosingSquareBracketsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"OpeningCurlyBracketsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ClosingCurlyBracketsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"OpeningGenericBracketsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ClosingGenericBracketsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"OpeningAttributeBracketsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ClosingAttributeBracketsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"NullableTypeSymbolsMustNotBePrecededBySpace\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"MemberAccessSymbolsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"IncrementDecrementSymbolsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"NegativeSignsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PositiveSignsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DereferenceAndAccessOfSymbolsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ColonsMustBeSpacedCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DoNotSplitNullConditionalOperators\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings />\n    </Analyzer>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.MaintainabilityRules\">\n      <Rules>\n        <Rule Name=\"AccessModifierMustBeDeclared\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FieldsMustBePrivate\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileMayOnlyContainASingleClass\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"FileMayOnlyContainASingleNamespace\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"StatementMustNotUseUnnecessaryParenthesis\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"RemoveDelegateParenthesisWhenPossible\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"AttributeConstructorMustNotUseUnnecessaryParenthesis\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"CodeAnalysisSuppressionMustHaveJustification\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DebugAssertMustProvideMessageText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"DebugFailMustProvideMessageText\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ArithmeticExpressionsMustDeclarePrecedence\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"ConditionalExpressionsMustDeclarePrecendence\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"RemoveUnnecessaryCode\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">True</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings />\n    </Analyzer>\n  </Analyzers>\n</StyleCopSettings>"
        },
        {
          "name": "WalletWasabi.Backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "WalletWasabi.Daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "WalletWasabi.Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "WalletWasabi.Fluent.Desktop",
          "type": "tree",
          "content": null
        },
        {
          "name": "WalletWasabi.Fluent.Generators",
          "type": "tree",
          "content": null
        },
        {
          "name": "WalletWasabi.Fluent",
          "type": "tree",
          "content": null
        },
        {
          "name": "WalletWasabi.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "WalletWasabi.WindowsInstaller",
          "type": "tree",
          "content": null
        },
        {
          "name": "WalletWasabi.sln",
          "type": "blob",
          "size": 7.5,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.3.32819.101\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WalletWasabi.Backend\", \"WalletWasabi.Backend\\WalletWasabi.Backend.csproj\", \"{A378E063-1660-472F-9CB2-0A3E96A56A63}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WalletWasabi.Tests\", \"WalletWasabi.Tests\\WalletWasabi.Tests.csproj\", \"{50BDFA09-7575-4EEE-B733-D41B65B06D00}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WalletWasabi\", \"WalletWasabi\\WalletWasabi.csproj\", \"{526AC796-6CC0-4ADA-9A7E-C12267719A1A}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{6611C6DA-01B6-4C7D-ACD9-F212DD5D66BD}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\t.gitattributes = .gitattributes\n\t\t.gitignore = .gitignore\n\t\tCONTRIBUTING.md = CONTRIBUTING.md\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tDirectory.Packages.props = Directory.Packages.props\n\t\texclusion.dic = exclusion.dic\n\t\tglobal.json = global.json\n\t\tREADME.md = README.md\n\t\tSettings.StyleCop = Settings.StyleCop\n\t\tNuGet.Config = NuGet.Config\n\t\tdeps.nix = deps.nix\n\t\tflake.lock = flake.lock\n\t\tflake.nix = flake.nix\n\tEndProjectSection\nEndProject\nProject(\"{930C7802-8A8C-48F9-8165-68863BCCD9DD}\") = \"WalletWasabi.WindowsInstaller\", \"WalletWasabi.WindowsInstaller\\WalletWasabi.WindowsInstaller.wixproj\", \"{54654468-4F58-4253-84BD-6F53A8D3D2C4}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WalletWasabi.Fluent.Desktop\", \"WalletWasabi.Fluent.Desktop\\WalletWasabi.Fluent.Desktop.csproj\", \"{177A8AC0-7879-4719-A8A9-49E1D75B3A2B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WalletWasabi.Fluent.Generators\", \"WalletWasabi.Fluent.Generators\\WalletWasabi.Fluent.Generators.csproj\", \"{5A3DFE7E-F850-4C07-BF10-F845FA328C98}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WalletWasabi.Fluent\", \"WalletWasabi.Fluent\\WalletWasabi.Fluent.csproj\", \"{1E9A8055-DC14-4C7D-8878-887D50B55A10}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WalletWasabi.Daemon\", \"WalletWasabi.Daemon\\WalletWasabi.Daemon.csproj\", \"{29599048-B3F1-48B9-AEBB-1A32D64BC4F5}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{A378E063-1660-472F-9CB2-0A3E96A56A63}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A378E063-1660-472F-9CB2-0A3E96A56A63}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A378E063-1660-472F-9CB2-0A3E96A56A63}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{A378E063-1660-472F-9CB2-0A3E96A56A63}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{A378E063-1660-472F-9CB2-0A3E96A56A63}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A378E063-1660-472F-9CB2-0A3E96A56A63}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A378E063-1660-472F-9CB2-0A3E96A56A63}.Release|x64.ActiveCfg = Debug|Any CPU\n\t\t{A378E063-1660-472F-9CB2-0A3E96A56A63}.Release|x64.Build.0 = Debug|Any CPU\n\t\t{50BDFA09-7575-4EEE-B733-D41B65B06D00}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{50BDFA09-7575-4EEE-B733-D41B65B06D00}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{50BDFA09-7575-4EEE-B733-D41B65B06D00}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{50BDFA09-7575-4EEE-B733-D41B65B06D00}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{50BDFA09-7575-4EEE-B733-D41B65B06D00}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{50BDFA09-7575-4EEE-B733-D41B65B06D00}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{50BDFA09-7575-4EEE-B733-D41B65B06D00}.Release|x64.ActiveCfg = Debug|Any CPU\n\t\t{50BDFA09-7575-4EEE-B733-D41B65B06D00}.Release|x64.Build.0 = Debug|Any CPU\n\t\t{526AC796-6CC0-4ADA-9A7E-C12267719A1A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{526AC796-6CC0-4ADA-9A7E-C12267719A1A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{526AC796-6CC0-4ADA-9A7E-C12267719A1A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{526AC796-6CC0-4ADA-9A7E-C12267719A1A}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{526AC796-6CC0-4ADA-9A7E-C12267719A1A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{526AC796-6CC0-4ADA-9A7E-C12267719A1A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{526AC796-6CC0-4ADA-9A7E-C12267719A1A}.Release|x64.ActiveCfg = Debug|Any CPU\n\t\t{526AC796-6CC0-4ADA-9A7E-C12267719A1A}.Release|x64.Build.0 = Debug|Any CPU\n\t\t{54654468-4F58-4253-84BD-6F53A8D3D2C4}.Debug|Any CPU.ActiveCfg = Debug|x64\n\t\t{54654468-4F58-4253-84BD-6F53A8D3D2C4}.Debug|x64.ActiveCfg = Release|x64\n\t\t{54654468-4F58-4253-84BD-6F53A8D3D2C4}.Release|Any CPU.ActiveCfg = Release|x64\n\t\t{54654468-4F58-4253-84BD-6F53A8D3D2C4}.Release|x64.ActiveCfg = Release|x64\n\t\t{54654468-4F58-4253-84BD-6F53A8D3D2C4}.Release|x64.Build.0 = Release|x64\n\t\t{177A8AC0-7879-4719-A8A9-49E1D75B3A2B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{177A8AC0-7879-4719-A8A9-49E1D75B3A2B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{177A8AC0-7879-4719-A8A9-49E1D75B3A2B}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{177A8AC0-7879-4719-A8A9-49E1D75B3A2B}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{177A8AC0-7879-4719-A8A9-49E1D75B3A2B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{177A8AC0-7879-4719-A8A9-49E1D75B3A2B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{177A8AC0-7879-4719-A8A9-49E1D75B3A2B}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{177A8AC0-7879-4719-A8A9-49E1D75B3A2B}.Release|x64.Build.0 = Release|Any CPU\n\t\t{5A3DFE7E-F850-4C07-BF10-F845FA328C98}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5A3DFE7E-F850-4C07-BF10-F845FA328C98}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5A3DFE7E-F850-4C07-BF10-F845FA328C98}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{5A3DFE7E-F850-4C07-BF10-F845FA328C98}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{5A3DFE7E-F850-4C07-BF10-F845FA328C98}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5A3DFE7E-F850-4C07-BF10-F845FA328C98}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5A3DFE7E-F850-4C07-BF10-F845FA328C98}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{5A3DFE7E-F850-4C07-BF10-F845FA328C98}.Release|x64.Build.0 = Release|Any CPU\n\t\t{1E9A8055-DC14-4C7D-8878-887D50B55A10}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1E9A8055-DC14-4C7D-8878-887D50B55A10}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1E9A8055-DC14-4C7D-8878-887D50B55A10}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{1E9A8055-DC14-4C7D-8878-887D50B55A10}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{1E9A8055-DC14-4C7D-8878-887D50B55A10}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1E9A8055-DC14-4C7D-8878-887D50B55A10}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1E9A8055-DC14-4C7D-8878-887D50B55A10}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{1E9A8055-DC14-4C7D-8878-887D50B55A10}.Release|x64.Build.0 = Release|Any CPU\n\t\t{29599048-B3F1-48B9-AEBB-1A32D64BC4F5}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{29599048-B3F1-48B9-AEBB-1A32D64BC4F5}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{29599048-B3F1-48B9-AEBB-1A32D64BC4F5}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{29599048-B3F1-48B9-AEBB-1A32D64BC4F5}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{29599048-B3F1-48B9-AEBB-1A32D64BC4F5}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{29599048-B3F1-48B9-AEBB-1A32D64BC4F5}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{29599048-B3F1-48B9-AEBB-1A32D64BC4F5}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{29599048-B3F1-48B9-AEBB-1A32D64BC4F5}.Release|x64.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {F367BF06-2061-479C-9FE1-184C87CD39B4}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "WalletWasabi",
          "type": "tree",
          "content": null
        },
        {
          "name": "deps-all.nix",
          "type": "blob",
          "size": 59.203125,
          "content": "# This file was automatically generated by passthru.fetch-deps.\n# Please dont edit it manually, your changes might get overwritten!\n\n{ fetchNuGet }: [\n  (fetchNuGet { pname = \"Avalonia\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-ee9ixHmuSOAma5JJDmoi4sMzPRgthhmx/GlTDOT/Whk=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia/11.0.999-cibuild0044755-beta/avalonia.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Angle.Windows.Natives\"; version = \"2.1.0.2023020321\"; hash = \"sha256-TWop9cvak6cMv2vrA/GlpuYBxS8Fuj5UmupGIV7Q5Ks=\"; })\n  (fetchNuGet { pname = \"Avalonia.AvaloniaEdit\"; version = \"11.0.0\"; hash = \"sha256-8lJBbbUn6RP4+8qO7VMDdL334o6hTf3Lj3EgIA75K4o=\"; })\n  (fetchNuGet { pname = \"Avalonia.BuildServices\"; version = \"0.0.29\"; hash = \"sha256-WPHRMNowRnYSCh88DWNBCltWsLPyOfzXGzBqLYE7tRY=\"; })\n  (fetchNuGet { pname = \"Avalonia.Controls.ColorPicker\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-d84cW3FzcgrlxDEwfWT5janKyZaDsw7aTnXXKIhn2aw=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.controls.colorpicker/11.0.999-cibuild0044755-beta/avalonia.controls.colorpicker.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Controls.DataGrid\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-nTNiZTj/uEs/D7zIJuR22Nk9AndOWdk23qTP1lbop28=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.controls.datagrid/11.0.999-cibuild0044755-beta/avalonia.controls.datagrid.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Controls.TreeDataGrid\"; version = \"11.0.2\"; hash = \"sha256-D3xoKUls3k7LJhNJ3Yh4rKxIOQxxJCLzNxnm01T1EK0=\"; })\n  (fetchNuGet { pname = \"Avalonia.Desktop\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-DJplESNLS1SD95/cpluA8wlQM8hD6ZuTJg1f2PBxFZI=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.desktop/11.0.999-cibuild0044755-beta/avalonia.desktop.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Diagnostics\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-kFGhrek5dQ6/BADJph2XVaqNSLIv/UuJvyGRrv3RAeI=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.diagnostics/11.0.999-cibuild0044755-beta/avalonia.diagnostics.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Fonts.Inter\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-Pcz6DO0t7N+7KLAlcg2MyLxhjSdV4RXti+rVyKz5i44=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.fonts.inter/11.0.999-cibuild0044755-beta/avalonia.fonts.inter.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.FreeDesktop\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-P/EeNwizinOTTQStzUrKAd8OvnQL403jhxyvrm8GzIo=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.freedesktop/11.0.999-cibuild0044755-beta/avalonia.freedesktop.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Headless\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-63m3hLEpUEp8SarUcM18Nf9smdxYJ7ym9vY6d96sHQo=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.headless/11.0.999-cibuild0044755-beta/avalonia.headless.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Headless.XUnit\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-YWCuN2u2ZGHtYTqGBDgdkOf5RNiqBkdG8upwHJPonok=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.headless.xunit/11.0.999-cibuild0044755-beta/avalonia.headless.xunit.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Native\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-Lu1XHN6xDPTqwbtAYb3OwWHpolUVbHsQJaKmDoVAV1Y=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.native/11.0.999-cibuild0044755-beta/avalonia.native.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.ReactiveUI\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-t31LwDpNAABJeaQHSNOH49TZpbwveIe4Vyv+6vXgnU8=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.reactiveui/11.0.999-cibuild0044755-beta/avalonia.reactiveui.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Remote.Protocol\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-Dg341cnUgEQ7IvmRZ7Q40sAdaKU8djyvaFcYeeUNnRg=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.remote.protocol/11.0.999-cibuild0044755-beta/avalonia.remote.protocol.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Skia\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-6SiWSpE4b1J43e7QZ7U4cy0FcHYXy7bQaHDS85exTyQ=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.skia/11.0.999-cibuild0044755-beta/avalonia.skia.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Svg\"; version = \"11.0.0\"; hash = \"sha256-edKxg+OsZ2EkWvSDpGxRTLmEx3U1G0+6CbRJy4VUr/Y=\"; })\n  (fetchNuGet { pname = \"Avalonia.Themes.Fluent\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-yR5SKAELuynkl8PWpNWVNr9FsydCLe0re+NLKV7U9Os=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.themes.fluent/11.0.999-cibuild0044755-beta/avalonia.themes.fluent.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Themes.Simple\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-Me1m7A0wcZS4vm1KRDQmZP9BwOMnN+BG15ujVOSDDbk=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.themes.simple/11.0.999-cibuild0044755-beta/avalonia.themes.simple.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Win32\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-pP4mhBnOr5nRYsMUqcFrQ0V6Qrb+dJ4IM3NmdQgRx9I=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.win32/11.0.999-cibuild0044755-beta/avalonia.win32.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.X11\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-wQ9l8AWnbtImiD4Rwn6297t+f0cs9Z67GA6xV37sfdQ=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.x11/11.0.999-cibuild0044755-beta/avalonia.x11.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Behaviors\"; version = \"11.0.5\"; hash = \"sha256-wS0clXNKAG4uy539dUjbrRdzHrdHsloivpY5SEBCNtY=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions\"; version = \"11.0.5\"; hash = \"sha256-s/o0416K/nZkVWcNPuKbqmwLKhWsMeEds/dT85QOp4c=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Custom\"; version = \"11.0.5\"; hash = \"sha256-0HVVQTHD+D4q4IYjMJ6H90mMefBLr5pSKDy7JMq10cE=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.DragAndDrop\"; version = \"11.0.5\"; hash = \"sha256-iwchyONRjTbSSNxaGROeM62RL964KCs0fWz6VIO4O/k=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Draggable\"; version = \"11.0.5\"; hash = \"sha256-C8acIjqy8Akf1ZFVLBq+wKuGaP8YOlKEa+e2RaowKak=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Events\"; version = \"11.0.5\"; hash = \"sha256-NbG4wOT5d4z6OkGMLdB7pZrRcu0BOK5PBGZ098iE3IU=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Reactive\"; version = \"11.0.5\"; hash = \"sha256-zrbr7MW+3LOyhIMi5VB8YRfr19vyWtcaxwqXjbkTDAA=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Responsive\"; version = \"11.0.5\"; hash = \"sha256-TfcYEdLMxYffBcBzcyoKWESrQltozigJKx+CLNCMz08=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactivity\"; version = \"11.0.5\"; hash = \"sha256-nNoI2rxJBFuYs1lg3O3rXeigJWoGjzGWdU8jsWGz7+4=\"; })\n  (fetchNuGet { pname = \"Castle.Core\"; version = \"5.1.1\"; hash = \"sha256-oVkQB+ON7S6Q27OhXrTLaxTL0kWB58HZaFFuiw4iTrE=\"; })\n  (fetchNuGet { pname = \"ColorDocument.Avalonia\"; version = \"11.0.3-a1\"; hash = \"sha256-Pkh5FX+4pBzep5oCCyhIiR559QyFCEb1vrfEgG0wREw=\"; })\n  (fetchNuGet { pname = \"ColorTextBlock.Avalonia\"; version = \"11.0.3-a1\"; hash = \"sha256-fWJuApxnJLISayQJIKEBVOt/t1Qyj+0s+RezZkMnPio=\"; })\n  (fetchNuGet { pname = \"coverlet.collector\"; version = \"6.0.0\"; hash = \"sha256-IEmweTMapcPhFHpmJsPXfmMhravYOrWupgjeOvMmQ4o=\"; })\n  (fetchNuGet { pname = \"dotnet-xunit\"; version = \"2.3.1\"; hash = \"sha256-pGghnfgZMfv6Fb49kLtdbtkcxvBuMsNhNhObFyfVP3A=\"; })\n  (fetchNuGet { pname = \"DynamicData\"; version = \"7.9.5\"; hash = \"sha256-3XjOMuFathku9oWyss360+Ze5UMP7tSmUbMoax7qONU=\"; })\n  (fetchNuGet { pname = \"DynamicData\"; version = \"8.1.1\"; hash = \"sha256-xECMwHgVkHgi2sZwMGe4tAHgxX2Uj+USPkRFhNLpoF4=\"; })\n  (fetchNuGet { pname = \"ExCSS\"; version = \"4.1.4\"; hash = \"sha256-7dKCwRC+Jt4CTLz9LF3LpmaB8ch1HFrcan7CmM3toPg=\"; })\n  (fetchNuGet { pname = \"Fizzler\"; version = \"1.2.1\"; hash = \"sha256-FROW1WzitXTauf2Hn7YejOLqNKN2Nd+Q2etFB1pYsvA=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp\"; version = \"7.3.0\"; hash = \"sha256-LlPQO/NYgIMWicvLOtWsQzCp512QpIImYDP9/n2rDOc=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp.NativeAssets.Linux\"; version = \"7.3.0\"; hash = \"sha256-AEHjgqX0o+Fob0SeZ6EikGKoEe6rRxess5fVJ31UL0U=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp.NativeAssets.macOS\"; version = \"7.3.0\"; hash = \"sha256-6oFcdKb17UX5wyAUeCCKXGvzkf0w3MNdZOVMvs54tqw=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp.NativeAssets.WebAssembly\"; version = \"7.3.0\"; hash = \"sha256-9VI0xCavuuIIStuQ7ipBfWu5HrAt+Kk/F2j57C1llTU=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp.NativeAssets.Win32\"; version = \"7.3.0\"; hash = \"sha256-WnB7l73hneU9Kpbm8S9zEYbZHjFre24vWz0vl8+v28M=\"; })\n  (fetchNuGet { pname = \"HtmlAgilityPack\"; version = \"1.11.42\"; hash = \"sha256-y1sdZXb4+wjvH5gmwyBZOn5CLid7lTHgxEsy13BgdjM=\"; })\n  (fetchNuGet { pname = \"Libuv\"; version = \"1.9.0\"; hash = \"sha256-DjTLVqtEUVStzRjEMvhPeatqKs5OuuDhcHYSGGCi5ik=\"; })\n  (fetchNuGet { pname = \"LinqKit.Core\"; version = \"1.2.5\"; hash = \"sha256-0z4RpAt+WvydeCN0GJu4vsMfCxzxmoi+LTE6fQ51NZY=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia\"; version = \"11.0.3-a1\"; hash = \"sha256-tzSWAz/fVQ58EFbSIWO/UoNWQlRJ3g1XA78wYWflLV0=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia.Html\"; version = \"11.0.3-a1\"; hash = \"sha256-rpQiHK/UXEQgbJuaejDirhHJxWjGTpF7ddsEmcP6Pe4=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia.Svg\"; version = \"11.0.3-a1\"; hash = \"sha256-nTuS+2wGv0Y+envK3Sgt+sdXKSHe8qOt8AVl6QbdjfQ=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia.SyntaxHigh\"; version = \"11.0.3-a1\"; hash = \"sha256-t91Gok0OaMBFN/l+fYIoEG8nPWPeXJZZucjtn/23Dq0=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia.Tight\"; version = \"11.0.3-a1\"; hash = \"sha256-KkRzr8BXmUCGCVv/64gg1aiXHUY0yGj5t12OsYAidcw=\"; })\n  (fetchNuGet { pname = \"MicroCom.Runtime\"; version = \"0.11.0\"; hash = \"sha256-VdwpP5fsclvNqJuppaOvwEwv2ofnAI5ZSz2V+UEdLF0=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.JsonPatch\"; version = \"8.0.0\"; hash = \"sha256-X8lbEnCVHjMcp28ZPqwFTU3R75mFAHNFW0hE7rATBfw=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.Mvc.NewtonsoftJson\"; version = \"8.0.0\"; hash = \"sha256-4Ho979nHLi8NRtmeY3/cw0eSUno7gfQhUKwCYejDLIc=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.Mvc.Testing\"; version = \"8.0.0\"; hash = \"sha256-5M4Y1OmJrkU4EakzlYxsBQ4G2kdAd2rzWKL23m9bBjo=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.TestHost\"; version = \"8.0.0\"; hash = \"sha256-7+7DzHVTyKzsn4Fjxdmjlu4beKQupVWtk8Zh2KnIFpA=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.WebUtilities\"; version = \"8.0.0\"; hash = \"sha256-e4wqTJUgPfq6CfRwuXTw32K9vB+hOpSLxSZDpzv23Yg=\"; })\n  (fetchNuGet { pname = \"Microsoft.Bcl.AsyncInterfaces\"; version = \"6.0.0\"; hash = \"sha256-49+H/iFwp+AfCICvWcqo9us4CzxApPKC37Q5Eqrw+JU=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build\"; version = \"15.3.409\"; hash = \"sha256-AU0ZVHH95IZ/Lg69Q2LLaRBa5TojHmaSTtp7cTUz+G8=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build.Framework\"; version = \"15.3.409\"; hash = \"sha256-QgePmmyc2ZANHtFhSNJvtX6/gOXsyF6QV27BmBa3CrY=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build.Runtime\"; version = \"15.3.409\"; hash = \"sha256-+OBCCLWxwANvWr2ySLASXd7WD3tXqV98MM/J8rFlvow=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build.Tasks.Core\"; version = \"15.3.409\"; hash = \"sha256-Y6QKjeGZd6tkf3X57M/9C8Ej21Hma74jE5+d+7znuow=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build.Utilities.Core\"; version = \"15.3.409\"; hash = \"sha256-znJ/BOVWXmVykTUQWxE+wAotuMSIHAWxQVLWrhMFCt0=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Analyzers\"; version = \"1.1.0\"; hash = \"sha256-7KrZfK3kUbmeT82eVadvHurZcaFq3FDj4qkIIeExJiM=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Analyzers\"; version = \"3.0.0\"; hash = \"sha256-KDbCfsBWSJ5ohEXUKp1s1LX9xA2NPvXE/xVzj68EdC0=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Analyzers\"; version = \"3.3.4\"; hash = \"sha256-qDzTfZBSCvAUu9gzq2k+LOvh6/eRvJ9++VCNck/ZpnE=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.BannedApiAnalyzers\"; version = \"3.3.4\"; hash = \"sha256-YPTHTZ8xRPMLADdcVYRO/eq3O9uZjsD+OsGRZE+0+e8=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Common\"; version = \"1.3.0\"; hash = \"sha256-Jcw54WWyfPKdkeqRAG4xjihiGP/djjAkvpR6KM2I+CQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Common\"; version = \"3.8.0\"; hash = \"sha256-3G9vSc/gHH7FWgOySLTut1+eEaf3H66qcPOvNPLOx4o=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Common\"; version = \"4.6.0\"; hash = \"sha256-4koWiniIrv4ZBmS9SZb3347KaejKKh11n7CRj9fkc2M=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.CSharp\"; version = \"1.3.0\"; hash = \"sha256-OqqvMHNj9Xql4YTEPMlzoGXXELoLC7JkRGjS0pil+m4=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.CSharp\"; version = \"3.8.0\"; hash = \"sha256-i/r3V/No/VzqmJlWxpGoirvlbJDbBPa/ONZtzYrxuc4=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.CSharp\"; version = \"4.6.0\"; hash = \"sha256-OCxUWSolVrmP2bs2SX9WLjb/U8Box8s1Tayk05/n2/k=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.CSharp.Scripting\"; version = \"3.8.0\"; hash = \"sha256-fA9Qu+vTyMZ9REzxJ4aMg/SHCDRk4q9k4ZGUdynoHnA=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Scripting.Common\"; version = \"3.8.0\"; hash = \"sha256-866jMHp8kbc1FYpKuUWnd7ViU6kGJTAxPcL/IjXrT0I=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.VisualBasic\"; version = \"1.3.0\"; hash = \"sha256-lIKN1dG59aY8zeYgkY8Kdnv4UBgSwVbghz5ngPyEzKA=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeCoverage\"; version = \"17.8.0\"; hash = \"sha256-cv/wAXfTNS+RWEsHWNKqRDHC7LOQSSdFJ1a9cZuSfJw=\"; })\n  (fetchNuGet { pname = \"Microsoft.CSharp\"; version = \"4.0.1\"; hash = \"sha256-0huoqR2CJ3Z9Q2peaKD09TV3E6saYSqDGZ290K8CrH8=\"; })\n  (fetchNuGet { pname = \"Microsoft.CSharp\"; version = \"4.3.0\"; hash = \"sha256-a3dAiPaVuky0wpcHmpTVtAQJNGZ2v91/oArA+dpJgj8=\"; })\n  (fetchNuGet { pname = \"Microsoft.CSharp\"; version = \"4.7.0\"; hash = \"sha256-Enknv2RsFF68lEPdrf5M+BpV1kHoLTVRApKUwuk/pj0=\"; })\n  (fetchNuGet { pname = \"Microsoft.Data.Sqlite\"; version = \"8.0.0\"; hash = \"sha256-0Q+1SxcHyNgkz4DUTJVaiteOQGydf2Uzk6y/R/rwwws=\"; })\n  (fetchNuGet { pname = \"Microsoft.Data.Sqlite.Core\"; version = \"8.0.0\"; hash = \"sha256-aew8/vRyzCc7MMNHziR8tsg66EFkJC+Snst3F+a3Ehc=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.ApiDescription.Server\"; version = \"6.0.5\"; hash = \"sha256-RJjBWz+UHxkQE2s7CeGYdTZ218mCufrxl0eBykZdIt4=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Caching.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-xGpKrywQvU1Wm/WolYIxgHYEFfgkNGeJ+GGc5DT3phI=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Caching.Memory\"; version = \"8.0.1\"; hash = \"sha256-5Q0vzHo3ZvGs4nPBc/XlBF4wAwYO8pxq6EGdYjjXZps=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration\"; version = \"8.0.0\"; hash = \"sha256-9BPsASlxrV8ilmMCjdb3TiUcm5vFZxkBnAI/fNBSEyA=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-4eBpDkf7MJozTZnOwQvwcfgRKQGcNXe0K/kF+h5Rl8o=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.Binder\"; version = \"8.0.0\"; hash = \"sha256-GanfInGzzoN2bKeNwON8/Hnamr6l7RTpYLA49CNXD9Q=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.CommandLine\"; version = \"8.0.0\"; hash = \"sha256-fmPC/o8S+weTtQJWykpnGHm6AKVU21xYE/CaHYU7zgg=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.EnvironmentVariables\"; version = \"8.0.0\"; hash = \"sha256-+bjFZvqCsMf2FRM2olqx/fub+QwfM1kBhjGVOT5HC48=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.FileExtensions\"; version = \"8.0.0\"; hash = \"sha256-BCxcjVP+kvrDDB0nzsFCJfU74UK4VBvct2JA4r+jNcs=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.Json\"; version = \"8.0.0\"; hash = \"sha256-Fi/ijcG5l0BOu7i96xHu96aN5/g7zO6SWQbTsI3Qetg=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.UserSecrets\"; version = \"8.0.0\"; hash = \"sha256-/yj5QaEzeRStvOFoBpPRPXlEehGtr2E6/rJb+OEPIK8=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.DependencyInjection\"; version = \"8.0.0\"; hash = \"sha256-+qIDR8hRzreCHNEDtUcPfVHQdurzWPo/mqviCH78+EQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.DependencyInjection.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-75KzEGWjbRELczJpCiJub+ltNUMMbz5A/1KQU+5dgP8=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.DependencyInjection.Abstractions\"; version = \"8.0.2\"; hash = \"sha256-UfLfEQAkXxDaVPC7foE/J3FVEXd31Pu6uQIhTic3JgY=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.DependencyModel\"; version = \"8.0.0\"; hash = \"sha256-qkCdwemqdZY/yIW5Xmh7Exv74XuE39T8aHGHCofoVgo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Diagnostics\"; version = \"8.0.0\"; hash = \"sha256-fBLlb9xAfTgZb1cpBxFs/9eA+BlBvF8Xg0DMkBqdHD4=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Diagnostics.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-USD5uZOaahMqi6u7owNWx/LR4EDrOwqPrAAim7iRpJY=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileProviders.Abstractions\"; version = \"2.0.0\"; hash = \"sha256-hKe5UMOTF9AhZ6duDj99gNwEOUuIDzc4cVcaL3Us3jQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileProviders.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-uQSXmt47X2HGoVniavjLICbPtD2ReQOYQMgy3l0xuMU=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileProviders.Physical\"; version = \"2.0.0\"; hash = \"sha256-Q2demwVat35Itq1KKBKn3FAZ7A1bpRGsEIFgfZ5IFFA=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileProviders.Physical\"; version = \"8.0.0\"; hash = \"sha256-29y5ZRQ1ZgzVOxHktYxyiH40kVgm5un2yTGdvuSWnRc=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileSystemGlobbing\"; version = \"2.0.0\"; hash = \"sha256-5D0oI9xxg5CzjiVWwPmgd+yNAJaqEzQqdxw+ErLxnwo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileSystemGlobbing\"; version = \"8.0.0\"; hash = \"sha256-+Oz41JR5jdcJlCJOSpQIL5OMBNi+1Hl2d0JUHfES7sU=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Hosting\"; version = \"8.0.0\"; hash = \"sha256-sKHa+w4/pMeQb5RRFqLtMTUJy5H6hSIGWchbH2pxSrg=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Hosting.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-0JBx+wwt5p1SPfO4m49KxNOXPAzAU0A+8tEc/itvpQE=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Http\"; version = \"8.0.0\"; hash = \"sha256-UgljypOLld1lL7k7h1noazNzvyEHIJw+r+6uGzucFSY=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging\"; version = \"8.0.0\"; hash = \"sha256-Meh0Z0X7KyOEG4l0RWBcuHHihcABcvCyfUXgasmQ91o=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Abstractions\"; version = \"1.0.0\"; hash = \"sha256-asIXVFsAK7ELd/f+vLwhxYDdazqRTmf+fGJ4WFtcCeo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-Jmddjeg8U5S+iBTwRlVAVLeIHxc4yrrNgqVMOB7EjM4=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Abstractions\"; version = \"8.0.2\"; hash = \"sha256-cHpe8X2BgYa5DzulZfq24rg8O2K5Lmq2OiLhoyAVgJc=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Configuration\"; version = \"8.0.0\"; hash = \"sha256-mzmstNsVjKT0EtQcdAukGRifD30T82BMGYlSu8k4K7U=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Console\"; version = \"8.0.0\"; hash = \"sha256-bdb9YWWVn//AeySp7se87/tCN2E7e8Gx2GPMw28cd9c=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Debug\"; version = \"8.0.0\"; hash = \"sha256-AJunzYBZM2wCg86hnPnMrBuWIIyW/4PnIVoDSU969cA=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.EventLog\"; version = \"8.0.0\"; hash = \"sha256-vXBm4yhWGP4uow0CqstuqOkxO8yeZEM15JTTenjPbhc=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.EventSource\"; version = \"8.0.0\"; hash = \"sha256-kaR7YOlq5s8W9nZDtH/lKtnfGbrgOuQY4DUPcA2lcj0=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Options\"; version = \"8.0.0\"; hash = \"sha256-n2m4JSegQKUTlOsKLZUUHHKMq926eJ0w9N9G+I3FoFw=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Options\"; version = \"8.0.2\"; hash = \"sha256-AjcldddddtN/9aH9pg7ClEZycWtFHLi9IPe1GGhNQys=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Options.ConfigurationExtensions\"; version = \"8.0.0\"; hash = \"sha256-A5Bbzw1kiNkgirk5x8kyxwg9lLTcSngojeD+ocpG1RI=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Primitives\"; version = \"2.0.0\"; hash = \"sha256-q44LtMvyNEKSvgERvA+BrasKapP92Sc91QR4u2TJ9/Y=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Primitives\"; version = \"8.0.0\"; hash = \"sha256-FU8qj3DR8bDdc1c+WeGZx/PCZeqqndweZM9epcpXjSo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Net.Http.Headers\"; version = \"8.0.0\"; hash = \"sha256-Byowq5bRdxNHHjfxjzq+umnifUyKz0t65xeiB4Bjrkw=\"; })\n  (fetchNuGet { pname = \"Microsoft.NET.Test.Sdk\"; version = \"17.8.0\"; hash = \"sha256-uz7QvW+NsVRsp8FR1wjnGEOkUaPX4JyieywvCN6g2+s=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.App\"; version = \"1.0.0\"; hash = \"sha256-V+YsHLTJKL4QE7kvSCQw5bCtmUAjkW6DTbbDo45mCUQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.App\"; version = \"2.0.5\"; hash = \"sha256-ZuMG1tPcQ0HkZaj5j/IxiqCHq0+h3HYV/IAeToSZZ2E=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetAppHost\"; version = \"2.0.5\"; hash = \"sha256-mku/xvtXrLOvDR47pNipYqOJo0bRbed8l7oill7regE=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHost\"; version = \"1.0.1\"; hash = \"sha256-yiyZ4KGVRDZRgAuoSl4ZNWnRR3ityniyRPvzS799JOM=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHostPolicy\"; version = \"1.0.1\"; hash = \"sha256-4dNpj9sxKfV1jEFDma2hM7d+xJ6+/wJwP3/SugLneG0=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHostPolicy\"; version = \"2.0.5\"; hash = \"sha256-U3s8nlIbA3IKoDwlTmY8uVfJJmoKU8bRn2heHqfWrGw=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHostResolver\"; version = \"1.0.1\"; hash = \"sha256-hGJLA8Q6R+up9zHzk+Up2KF1a+fXZeEWrAZ+iNfQP4E=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHostResolver\"; version = \"2.0.5\"; hash = \"sha256-HI72PKGyYZ8jn9KlZH40Pa4M4Q9VZDp6EJ83h25z4us=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Jit\"; version = \"1.0.2\"; hash = \"sha256-T92T+bmdXfpAe73OKFTYXGJW1gTHuwcryBSgV7mwSkk=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"1.0.1\"; hash = \"sha256-mZotlGZqtrqDSoBrZhsxFe6fuOv5/BIo0w2Z2x0zVAU=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"1.1.0\"; hash = \"sha256-FeM40ktcObQJk4nMYShB61H/E8B7tIKfl9ObJ0IOcCM=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"1.1.1\"; hash = \"sha256-8hLiUKvy/YirCWlFwzdejD2Db3DaXhHxT7GSZx/znJg=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"2.0.1\"; hash = \"sha256-1xZBheXlvHr0aNlOks+b1bzv1CxAtCaipZest6OtUMg=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"2.1.2\"; hash = \"sha256-gYQQO7zsqG+OtN4ywYQyfsiggS2zmxw4+cPXlK+FB5Q=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Runtime.CoreCLR\"; version = \"1.0.2\"; hash = \"sha256-7K5EruLlrFmN3rAfXZMPK3hfhS728k5Gew0e+L3Ur8M=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Targets\"; version = \"1.0.1\"; hash = \"sha256-lxxw/Gy32xHi0fLgFWNj4YTFBSBkjx5l6ucmbTyf7V4=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Targets\"; version = \"1.1.0\"; hash = \"sha256-0AqQ2gMS8iNlYkrD+BxtIg7cXMnr9xZHtKAuN4bjfaQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Targets\"; version = \"1.1.3\"; hash = \"sha256-WLsf1NuUfRWyr7C7Rl9jiua9jximnVvzy6nk2D2bVRc=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Windows.ApiSets\"; version = \"1.0.1\"; hash = \"sha256-6PR4o/wQxBaJ5eRdt/awSO80EP3QqpWIk0XkCR9kaJo=\"; })\n  (fetchNuGet { pname = \"Microsoft.OpenApi\"; version = \"1.2.3\"; hash = \"sha256-OafkxXKnDmLZo5tjifjycax0n0F/OnWQTEZCntBMYR0=\"; })\n  (fetchNuGet { pname = \"Microsoft.TestPlatform.ObjectModel\"; version = \"17.8.0\"; hash = \"sha256-9TwGrjVvbtyetw67Udp3EMK5MX8j0RFRjduxPCs9ESw=\"; })\n  (fetchNuGet { pname = \"Microsoft.TestPlatform.TestHost\"; version = \"17.8.0\"; hash = \"sha256-+CTYFu631uovLCO47RKe86YaAqfoLA4r73vKORJUsjg=\"; })\n  (fetchNuGet { pname = \"Microsoft.VisualBasic\"; version = \"10.0.1\"; hash = \"sha256-7HHzZcWLVTTQ1K1rCIyoB+UxLHMvOIz+O5av6XDa22A=\"; })\n  (fetchNuGet { pname = \"Microsoft.VisualStudio.Web.CodeGeneration.Contracts\"; version = \"2.0.2\"; hash = \"sha256-wfqv/WRzU6C805zcTsjv3sOK5vvBNDR2Nh0yYOXSRrs=\"; })\n  (fetchNuGet { pname = \"Microsoft.VisualStudio.Web.CodeGeneration.Tools\"; version = \"2.0.2\"; hash = \"sha256-Bu8ImFY8W/jS2KgpuGOSD8pbJG8mJvHPaaPoHA2ocjo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Win32.Primitives\"; version = \"4.0.1\"; hash = \"sha256-B4t5El/ViBdxALMcpZulewc4j/3SIXf71HhJWhm4Ctk=\"; })\n  (fetchNuGet { pname = \"Microsoft.Win32.Registry\"; version = \"4.0.0\"; hash = \"sha256-M/06F/Z2wTHCh4pZOgtCjUGLD1FJXEJKCmzOeFMl7uo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Win32.SystemEvents\"; version = \"8.0.0\"; hash = \"sha256-UcxurEamYD+Bua0PbPNMYAZaRulMrov8CfbJGIgTaRQ=\"; })\n  (fetchNuGet { pname = \"Moq\"; version = \"4.18.4\"; hash = \"sha256-JOmYlcTJdQOthRxnT0jAD6WG+NVLMmIV2BM9rNhNg3Q=\"; })\n  (fetchNuGet { pname = \"NBitcoin\"; version = \"7.0.27\"; hash = \"sha256-LrCPSGrMwVOU2BdQxQD/HmhBFlASEtv8o7L8uOQyUWg=\"; })\n  (fetchNuGet { pname = \"NBitcoin.Secp256k1\"; version = \"3.1.0\"; hash = \"sha256-vhp1Rjl//09c8U912Mqfu6/Ip0/ljnZkCkDo9k45dtU=\"; })\n  (fetchNuGet { pname = \"NBitcoin.Secp256k1\"; version = \"3.1.4\"; hash = \"sha256-D/V/vEAqZxAOjn5fPg028QLpkfweDG56N8/dsc80Fz8=\"; })\n  (fetchNuGet { pname = \"NETStandard.Library\"; version = \"1.6.0\"; hash = \"sha256-ExWI1EKDCRishcfAeHVS/RoJphqSqohmJIC/wz3ZtVo=\"; })\n  (fetchNuGet { pname = \"NETStandard.Library\"; version = \"2.0.1\"; hash = \"sha256-s4UiH848a+p2yWwMH+8PaYGnQL2qnY0GmixoeLvkhDQ=\"; })\n  (fetchNuGet { pname = \"NETStandard.Library\"; version = \"2.0.3\"; hash = \"sha256-Prh2RPebz/s8AzHb2sPHg3Jl8s31inv9k+Qxd293ybo=\"; })\n  (fetchNuGet { pname = \"Newtonsoft.Json\"; version = \"10.0.1\"; hash = \"sha256-Gw7dQIsmYfmcR5ASTuMsB8cqaI4g3osw0j+LO1jEzJY=\"; })\n  (fetchNuGet { pname = \"Newtonsoft.Json\"; version = \"13.0.1\"; hash = \"sha256-K2tSVW4n4beRPzPu3rlVaBEMdGvWSv/3Q1fxaDh4Mjo=\"; })\n  (fetchNuGet { pname = \"Newtonsoft.Json\"; version = \"13.0.3\"; hash = \"sha256-hy/BieY4qxBWVVsDqqOPaLy1QobiIapkbrESm6v2PHc=\"; })\n  (fetchNuGet { pname = \"Newtonsoft.Json.Bson\"; version = \"1.0.2\"; hash = \"sha256-ZUj6YFSMZp5CZtXiamw49eZmbp1iYBuNsIKNnjxcRzA=\"; })\n  (fetchNuGet { pname = \"NNostr.Client\"; version = \"0.0.49\"; hash = \"sha256-o0aeqJlWcfKClhizyygWomiHXphErFiFuNzHGjJkb6s=\"; })\n  (fetchNuGet { pname = \"NuGet.Frameworks\"; version = \"4.0.0\"; hash = \"sha256-+DF9CVW4HxvbECOJ7UN2uaZ36zT0PyT632yUyggyWVk=\"; })\n  (fetchNuGet { pname = \"NuGet.Frameworks\"; version = \"6.5.0\"; hash = \"sha256-ElqfN4CcKxT3hP2qvxxObb4mnBlYG89IMxO0Sm5oZ2g=\"; })\n  (fetchNuGet { pname = \"QRackers\"; version = \"1.1.0\"; hash = \"sha256-ssYywDrJTMl2ZIBNyYO/TWBAxOtWJ7hI4UG7SXgsF/E=\"; })\n  (fetchNuGet { pname = \"ReactiveUI\"; version = \"18.3.1\"; hash = \"sha256-1rf4icGRKTR3XIWJpkQJCG7ObRM+72ITB5K+ND1is9M=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Collections\"; version = \"4.3.0\"; hash = \"sha256-4PGZqyWhZ6/HCTF2KddDsbmTTjxs2oW79YfkberDZS8=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Diagnostics.Tracing\"; version = \"4.3.0\"; hash = \"sha256-dsmTLGvt8HqRkDWP8iKVXJCS+akAzENGXKPV18W2RgI=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Globalization\"; version = \"4.3.0\"; hash = \"sha256-PaiITTFI2FfPylTEk7DwzfKeiA/g/aooSU1pDcdwWLU=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.IO\"; version = \"4.3.0\"; hash = \"sha256-vej7ySRhyvM3pYh/ITMdC25ivSd0WLZAaIQbYj/6HVE=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Reflection\"; version = \"4.3.0\"; hash = \"sha256-ns6f++lSA+bi1xXgmW1JkWFb2NaMD+w+YNTfMvyAiQk=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Reflection.Extensions\"; version = \"4.3.0\"; hash = \"sha256-Y2AnhOcJwJVYv7Rp6Jz6ma0fpITFqJW+8rsw106K2X8=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Reflection.Primitives\"; version = \"4.3.0\"; hash = \"sha256-LkPXtiDQM3BcdYkAm5uSNOiz3uF4J45qpxn5aBiqNXQ=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Resources.ResourceManager\"; version = \"4.3.0\"; hash = \"sha256-9EvnmZslLgLLhJ00o5MWaPuJQlbUFcUF8itGQNVkcQ4=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Runtime\"; version = \"4.3.0\"; hash = \"sha256-qwhNXBaJ1DtDkuRacgHwnZmOZ1u9q7N8j0cWOLYOELM=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Runtime.Handles\"; version = \"4.3.0\"; hash = \"sha256-PQRACwnSUuxgVySO1840KvqCC9F8iI9iTzxNW0RcBS4=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Runtime.InteropServices\"; version = \"4.3.0\"; hash = \"sha256-Kaw5PnLYIiqWbsoF3VKJhy7pkpoGsUwn4ZDCKscbbzA=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Text.Encoding\"; version = \"4.3.0\"; hash = \"sha256-Q18B9q26MkWZx68exUfQT30+0PGmpFlDgaF0TnaIGCs=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Threading.Tasks\"; version = \"4.3.0\"; hash = \"sha256-agdOM0NXupfHbKAQzQT8XgbI9B8hVEh+a/2vqeHctg4=\"; })\n  (fetchNuGet { pname = \"runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-LXUPLX3DJxsU1Pd3UwjO1PO9NM2elNEDXeu2Mu/vNps=\"; })\n  (fetchNuGet { pname = \"runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-qeSqaUI80+lqw5MK4vMpmO0CZaqrmYktwp6L+vQAb0I=\"; })\n  (fetchNuGet { pname = \"runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-SrHqT9wrCBsxILWtaJgGKd6Odmxm8/Mh7Kh0CUkZVzA=\"; })\n  (fetchNuGet { pname = \"runtime.native.System\"; version = \"4.0.0\"; hash = \"sha256-bmaM0ovT4X4aqDJOR255Yda/u3fmHZskU++lMnsy894=\"; })\n  (fetchNuGet { pname = \"runtime.native.System\"; version = \"4.3.0\"; hash = \"sha256-ZBZaodnjvLXATWpXXakFgcy6P+gjhshFXmglrL5xD5Y=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.IO.Compression\"; version = \"4.1.0\"; hash = \"sha256-085JrZxNEwIHdBWKKKFsh1JzpF0AblvrUsz5T8kH4jQ=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.Net.Http\"; version = \"4.0.1\"; hash = \"sha256-5nWnTQrA1T6t9r8MqIiV4yTNu+IH0of2OX1qteoS+8E=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.Net.Security\"; version = \"4.0.1\"; hash = \"sha256-E64W+qCHZGYbhzQOEeToCob/4K8cTg3uOO7ltZG7ZNo=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.Security.Cryptography\"; version = \"4.0.0\"; hash = \"sha256-6Q8eYzC32BbGIiTHoQaE6B3cD81vYQcH5SCswYRSp0w=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-Jy01KhtcCl2wjMpZWH+X3fhHcVn+SyllWFY8zWlz/6I=\"; })\n  (fetchNuGet { pname = \"runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-wyv00gdlqf8ckxEdV7E+Ql9hJIoPcmYEuyeWb5Oz3mM=\"; })\n  (fetchNuGet { pname = \"runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-zi+b4sCFrA9QBiSGDD7xPV27r3iHGlV99gpyVUjRmc4=\"; })\n  (fetchNuGet { pname = \"runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-gybQU6mPgaWV3rBG2dbH6tT3tBq8mgze3PROdsuWnX0=\"; })\n  (fetchNuGet { pname = \"runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-VsP72GVveWnGUvS/vjOQLv1U80H2K8nZ4fDAmI61Hm4=\"; })\n  (fetchNuGet { pname = \"runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-4yKGa/IrNCKuQ3zaDzILdNPD32bNdy6xr5gdJigyF5g=\"; })\n  (fetchNuGet { pname = \"runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-HmdJhhRsiVoOOCcUvAwdjpMRiyuSwdcgEv2j9hxi+Zc=\"; })\n  (fetchNuGet { pname = \"runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-pVFUKuPPIx0edQKjzRon3zKq8zhzHEzko/lc01V/jdw=\"; })\n  (fetchNuGet { pname = \"runtime.unix.System.Diagnostics.Debug\"; version = \"4.3.0\"; hash = \"sha256-ReoazscfbGH+R6s6jkg5sIEHWNEvjEoHtIsMbpc7+tI=\"; })\n  (fetchNuGet { pname = \"runtime.unix.System.Private.Uri\"; version = \"4.3.0\"; hash = \"sha256-c5tXWhE/fYbJVl9rXs0uHh3pTsg44YD1dJvyOA0WoMs=\"; })\n  (fetchNuGet { pname = \"runtime.unix.System.Runtime.Extensions\"; version = \"4.3.0\"; hash = \"sha256-l8S9gt6dk3qYG6HYonHtdlYtBKyPb29uQ6NDjmrt3V4=\"; })\n  (fetchNuGet { pname = \"ShimSkiaSharp\"; version = \"1.0.0\"; hash = \"sha256-DFpkL3S0EET0Y0TBUNtQI30F9T9R7a5Ppb0ijODPuj0=\"; })\n  (fetchNuGet { pname = \"SkiaSharp\"; version = \"2.88.3\"; hash = \"sha256-WyMAjnQt8ZsuWpGLI89l/f4bHvv+cg7FdTAL7CtJBvs=\"; })\n  (fetchNuGet { pname = \"SkiaSharp\"; version = \"2.88.7\"; hash = \"sha256-Ip3afwTr4QOqtwOUKqK6g/9Ug4dMSebTci5K29Jc3Dg=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.Linux\"; version = \"2.88.7\"; hash = \"sha256-QdQRN1IBjqohmI8U+6WJRPgOsh8a9soN2UvVObs1H1w=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.macOS\"; version = \"2.88.3\"; hash = \"sha256-8G4swiLMr6XS3kjfO/YC1PyoVdfSq7nxZthZZ+KTKqQ=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.macOS\"; version = \"2.88.7\"; hash = \"sha256-WgPldXSqPMm0TrdUWAyjge5rcRhd9G3/Ix/v/2NQvBc=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.WebAssembly\"; version = \"2.88.7\"; hash = \"sha256-oIjFF+Rv+g8AKyNaaVAgnHX3eeP/l8K2sgHs9bRyUMw=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.Win32\"; version = \"2.88.3\"; hash = \"sha256-2PhMTwRHitT13KCKiZltKIFieAvNY4jBmVZ2ndVynA8=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.Win32\"; version = \"2.88.7\"; hash = \"sha256-+7RxCAr+ne9MZWdXKKpV4ZbHW0k6hLD20ZFWWOCiNYU=\"; })\n  (fetchNuGet { pname = \"Splat\"; version = \"14.4.1\"; hash = \"sha256-i1yzIVpKdFjZMI4J8H970nZCxszklgDitYTEKKz0zA8=\"; })\n  (fetchNuGet { pname = \"SQLitePCLRaw.bundle_e_sqlite3\"; version = \"2.1.6\"; hash = \"sha256-dZD/bZsYXjOu46ZH5Y/wgh0uhHOqIxC+S+0ecKhr718=\"; })\n  (fetchNuGet { pname = \"SQLitePCLRaw.core\"; version = \"2.1.6\"; hash = \"sha256-RxWjm52PdmMV98dgDy0BCpF988+BssRZUgALLv7TH/E=\"; })\n  (fetchNuGet { pname = \"SQLitePCLRaw.lib.e_sqlite3\"; version = \"2.1.6\"; hash = \"sha256-uHt5d+SFUkSd6WD7Tg0J3e8eVoxy/FM/t4PAkc9PJT0=\"; })\n  (fetchNuGet { pname = \"SQLitePCLRaw.provider.e_sqlite3\"; version = \"2.1.6\"; hash = \"sha256-zHc/YZsd72eXlI8ba1tv58HZWUIiyjJaxq2CCP1hQe8=\"; })\n  (fetchNuGet { pname = \"Svg.Custom\"; version = \"1.0.0\"; hash = \"sha256-uYYud7rFWdfHXERew9MdfIP/hRrdRYR64l1F4rF6uy4=\"; })\n  (fetchNuGet { pname = \"Svg.Model\"; version = \"1.0.0\"; hash = \"sha256-J91Y4xuCYCFl57I1eZjLD7N73WA2lbhGbRc/mhlmMns=\"; })\n  (fetchNuGet { pname = \"Swashbuckle.AspNetCore\"; version = \"6.5.0\"; hash = \"sha256-thAX5M8OihCU5Pmht5FzQPR7K+gbia580KnI8i9kwUw=\"; })\n  (fetchNuGet { pname = \"Swashbuckle.AspNetCore.Swagger\"; version = \"6.5.0\"; hash = \"sha256-bKJG6fhLBB5rKoVm0nc4PfecBtDg/r2G1hrZ6Izryug=\"; })\n  (fetchNuGet { pname = \"Swashbuckle.AspNetCore.SwaggerGen\"; version = \"6.5.0\"; hash = \"sha256-A+n8r9bM8UU0ZpzS5pHqa/JOX+cY0jTbfTH7XfwbCUM=\"; })\n  (fetchNuGet { pname = \"Swashbuckle.AspNetCore.SwaggerUI\"; version = \"6.5.0\"; hash = \"sha256-BxYBRvabFUIRkZ67YbUY6djxbLPtmPlAfREeFNg8HZ4=\"; })\n  (fetchNuGet { pname = \"System.AppContext\"; version = \"4.1.0\"; hash = \"sha256-v6YfyfrKmhww+EYHUq6cwYUMj00MQ6SOfJtcGVRlYzs=\"; })\n  (fetchNuGet { pname = \"System.Buffers\"; version = \"4.0.0\"; hash = \"sha256-+YUymoyS0O+xVyF2+LiAdZlMww8nofPN4ja9ylYqRo8=\"; })\n  (fetchNuGet { pname = \"System.Buffers\"; version = \"4.5.1\"; hash = \"sha256-wws90sfi9M7kuCPWkv1CEYMJtCqx9QB/kj0ymlsNaxI=\"; })\n  (fetchNuGet { pname = \"System.Collections\"; version = \"4.0.11\"; hash = \"sha256-puoFMkx4Z55C1XPxNw3np8nzNGjH+G24j43yTIsDRL0=\"; })\n  (fetchNuGet { pname = \"System.Collections\"; version = \"4.3.0\"; hash = \"sha256-afY7VUtD6w/5mYqrce8kQrvDIfS2GXDINDh73IjxJKc=\"; })\n  (fetchNuGet { pname = \"System.Collections.Concurrent\"; version = \"4.0.12\"; hash = \"sha256-zIEM7AB4SyE9u6G8+o+gCLLwkgi6+3rHQVPdn/dEwB8=\"; })\n  (fetchNuGet { pname = \"System.Collections.Immutable\"; version = \"1.2.0\"; hash = \"sha256-FQ3l+ulbLSPhQ0JcQCC4D4SzjTnHsRqcOj56Ywy7pMo=\"; })\n  (fetchNuGet { pname = \"System.Collections.Immutable\"; version = \"1.6.0\"; hash = \"sha256-gnu+8nN48GAd4GRgeB5cAQmW7VnCubL/8h7zO377fd0=\"; })\n  (fetchNuGet { pname = \"System.Collections.Immutable\"; version = \"5.0.0\"; hash = \"sha256-GdwSIjLMM0uVfE56VUSLVNgpW0B//oCeSFj8/hSlbM8=\"; })\n  (fetchNuGet { pname = \"System.Collections.Immutable\"; version = \"7.0.0\"; hash = \"sha256-9an2wbxue2qrtugYES9awshQg+KfJqajhnhs45kQIdk=\"; })\n  (fetchNuGet { pname = \"System.Collections.NonGeneric\"; version = \"4.0.1\"; hash = \"sha256-jdCVXmGOsJ+2F0xAagCkiMZ91SGAm9iOhO2u4ksmKaU=\"; })\n  (fetchNuGet { pname = \"System.Collections.NonGeneric\"; version = \"4.3.0\"; hash = \"sha256-8/yZmD4jjvq7m68SPkJZLBQ79jOTOyT5lyzX4SCYAx8=\"; })\n  (fetchNuGet { pname = \"System.Collections.Specialized\"; version = \"4.3.0\"; hash = \"sha256-QNg0JJNx+zXMQ26MJRPzH7THdtqjrNtGLUgaR1SdvOk=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel\"; version = \"4.0.1\"; hash = \"sha256-X5T36S49q1odsn6wAET6EGNlsxOyd66naMr5T3G9mGw=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel\"; version = \"4.3.0\"; hash = \"sha256-i00uujMO4JEDIEPKLmdLY3QJ6vdSpw6Gh9oOzkFYBiU=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel.Annotations\"; version = \"4.1.0\"; hash = \"sha256-jhvr6zS+iC4OXBkdXr+S8rPy/5nfhZtDVVJiAc0f1VA=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel.Annotations\"; version = \"4.5.0\"; hash = \"sha256-15yE2NoT9vmL9oGCaxHClQR1jLW1j1ef5hHMg55xRso=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel.Primitives\"; version = \"4.3.0\"; hash = \"sha256-IOMJleuIBppmP4ECB3uftbdcgL7CCd56+oAD/Sqrbus=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel.TypeConverter\"; version = \"4.3.0\"; hash = \"sha256-PSDiPYt8PgTdTUBz+GH6lHCaM1YgfObneHnZsc8Fz54=\"; })\n  (fetchNuGet { pname = \"System.Console\"; version = \"4.0.0\"; hash = \"sha256-jtZfT/TpJtLisV/y5Mk3IfCpE79zwhBYXtyGP9jC3Xo=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Contracts\"; version = \"4.0.1\"; hash = \"sha256-Mq2MU+80m+zqhe92JazEIDi4rsgk8MHg3yjNYlObzXg=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Debug\"; version = \"4.0.11\"; hash = \"sha256-P+rSQJVoN6M56jQbs76kZ9G3mAWFdtF27P/RijN8sj4=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Debug\"; version = \"4.3.0\"; hash = \"sha256-fkA79SjPbSeiEcrbbUsb70u9B7wqbsdM9s1LnoKj0gM=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.DiagnosticSource\"; version = \"4.0.0\"; hash = \"sha256-dYh9UoFesuGcHY+ewsI+z2WnNy+bwHPsHQ3t85cbzNg=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.DiagnosticSource\"; version = \"8.0.0\"; hash = \"sha256-+aODaDEQMqla5RYZeq0Lh66j+xkPYxykrVvSCmJQ+Vs=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.EventLog\"; version = \"6.0.0\"; hash = \"sha256-zUXIQtAFKbiUMKCrXzO4mOTD5EUphZzghBYKXprowSM=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.EventLog\"; version = \"8.0.0\"; hash = \"sha256-rt8xc3kddpQY4HEdghlBeOK4gdw5yIj4mcZhAVtk2/Y=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.FileVersionInfo\"; version = \"4.0.0\"; hash = \"sha256-Yy94jPhDXF2QHOF7qTmqKkn1048K9xkKryuBeDzsu+g=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Process\"; version = \"4.1.0\"; hash = \"sha256-OgW6ogQ+oYADYS0PHmwXdhrOKQJpqXlwzSvmfjTLNBg=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.StackTrace\"; version = \"4.0.1\"; hash = \"sha256-gqqCAwpDsca242nli+fejgqwPAuwROv3NoNeOnFXSWA=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Tools\"; version = \"4.0.1\"; hash = \"sha256-vSBqTbmWXylvRa37aWyktym+gOpsvH43mwr6A962k6U=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Tools\"; version = \"4.3.0\"; hash = \"sha256-gVOv1SK6Ape0FQhCVlNOd9cvQKBvMxRX9K0JPVi8w0Y=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.TraceSource\"; version = \"4.0.0\"; hash = \"sha256-cCjdPU7ow91HGf1hBIOLJMQGO6pNmF+N+5/Z38XJh9U=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Tracing\"; version = \"4.1.0\"; hash = \"sha256-JA0jJcLbU3zh52ub3zweob2EVHvxOqiC6SCYHrY5WbQ=\"; })\n  (fetchNuGet { pname = \"System.Dynamic.Runtime\"; version = \"4.0.11\"; hash = \"sha256-qWqFVxuXioesVftv2RVJZOnmojUvRjb7cS3Oh3oTit4=\"; })\n  (fetchNuGet { pname = \"System.Dynamic.Runtime\"; version = \"4.3.0\"; hash = \"sha256-k75gjOYimIQtLBD5NDzwwi3ZMUBPRW3jmc3evDMMJbU=\"; })\n  (fetchNuGet { pname = \"System.Globalization\"; version = \"4.0.11\"; hash = \"sha256-rbSgc2PIEc2c2rN6LK3qCREAX3DqA2Nq1WcLrZYsDBw=\"; })\n  (fetchNuGet { pname = \"System.Globalization\"; version = \"4.3.0\"; hash = \"sha256-caL0pRmFSEsaoeZeWN5BTQtGrAtaQPwFi8YOZPZG5rI=\"; })\n  (fetchNuGet { pname = \"System.Globalization.Calendars\"; version = \"4.0.1\"; hash = \"sha256-EJN3LbN+b0O9Dr2eg7kfThCYpne0iJ/H/GIyUTNVYC8=\"; })\n  (fetchNuGet { pname = \"System.Globalization.Extensions\"; version = \"4.0.1\"; hash = \"sha256-zLtkPryJwqTGcJqMC6zoMMvMrT+aAL5GoumjmMtqUEI=\"; })\n  (fetchNuGet { pname = \"System.Globalization.Extensions\"; version = \"4.3.0\"; hash = \"sha256-mmJWA27T0GRVuFP9/sj+4TrR4GJWrzNIk2PDrbr7RQk=\"; })\n  (fetchNuGet { pname = \"System.Interactive.Async\"; version = \"6.0.1\"; hash = \"sha256-4yzkdop+BMlpQ+qz/H7D7LkH1Ekh9n51t9yteHpv/58=\"; })\n  (fetchNuGet { pname = \"System.IO\"; version = \"4.1.0\"; hash = \"sha256-V6oyQFwWb8NvGxAwvzWnhPxy9dKOfj/XBM3tEC5aHrw=\"; })\n  (fetchNuGet { pname = \"System.IO\"; version = \"4.3.0\"; hash = \"sha256-ruynQHekFP5wPrDiVyhNiRIXeZ/I9NpjK5pU+HPDiRY=\"; })\n  (fetchNuGet { pname = \"System.IO.Compression\"; version = \"4.1.0\"; hash = \"sha256-UT4KEfJNZOk7b4X0AqLFUsqfHu6myVH/BhbRKYc+1Uc=\"; })\n  (fetchNuGet { pname = \"System.IO.Compression.ZipFile\"; version = \"4.0.1\"; hash = \"sha256-An0Twb9JODl/nuVm6MR0kJ3aj4WxGpI/1/vVp5b94kA=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem\"; version = \"4.0.1\"; hash = \"sha256-4VKXFgcGYCTWVXjAlniAVq0dO3o5s8KHylg2wg2/7k0=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem\"; version = \"4.3.0\"; hash = \"sha256-vNIYnvlayuVj0WfRfYKpDrhDptlhp1pN8CYmlVd2TXw=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem.Primitives\"; version = \"4.0.1\"; hash = \"sha256-IpigKMomqb6pmYWkrlf0ZdpILtRluX2cX5sOKVW0Feg=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem.Primitives\"; version = \"4.3.0\"; hash = \"sha256-LMnfg8Vwavs9cMnq9nNH8IWtAtSfk0/Fy4s4Rt9r1kg=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem.Watcher\"; version = \"4.0.0\"; hash = \"sha256-OcLhbiHvn453sJsZBHe6RmtDlCaaarcqRB439HGU7mU=\"; })\n  (fetchNuGet { pname = \"System.IO.MemoryMappedFiles\"; version = \"4.0.0\"; hash = \"sha256-1VQa8FoMUNAsja31OvOn7ungif+IPusAe9YcR+kRF6o=\"; })\n  (fetchNuGet { pname = \"System.IO.Pipelines\"; version = \"6.0.0\"; hash = \"sha256-xfjF4UqTMJpf8KsBWUyJlJkzPTOO/H5MW023yTYNQSA=\"; })\n  (fetchNuGet { pname = \"System.IO.Pipelines\"; version = \"8.0.0\"; hash = \"sha256-LdpB1s4vQzsOODaxiKstLks57X9DTD5D6cPx8DE1wwE=\"; })\n  (fetchNuGet { pname = \"System.IO.Pipes\"; version = \"4.0.0\"; hash = \"sha256-6qMAD6DCZ5c1wswLWi1msqwu8GwI8un1RzjpUhzbrjs=\"; })\n  (fetchNuGet { pname = \"System.IO.UnmanagedMemoryStream\"; version = \"4.0.1\"; hash = \"sha256-Sx60QjHjvXQMAL7O4aN81321gu13LE0XzCRtt7hFTwQ=\"; })\n  (fetchNuGet { pname = \"System.Linq\"; version = \"4.1.0\"; hash = \"sha256-ZQpFtYw5N1F1aX0jUK3Tw+XvM5tnlnshkTCNtfVA794=\"; })\n  (fetchNuGet { pname = \"System.Linq\"; version = \"4.3.0\"; hash = \"sha256-R5uiSL3l6a3XrXSSL6jz+q/PcyVQzEAByiuXZNSqD/A=\"; })\n  (fetchNuGet { pname = \"System.Linq.Async\"; version = \"6.0.1\"; hash = \"sha256-uH5fZhcyQVtnsFc6GTUaRRrAQm05v5euJyWCXSFSOYI=\"; })\n  (fetchNuGet { pname = \"System.Linq.Expressions\"; version = \"4.1.0\"; hash = \"sha256-7zqB+FXgkvhtlBzpcZyd81xczWP0D3uWssyAGw3t7b4=\"; })\n  (fetchNuGet { pname = \"System.Linq.Expressions\"; version = \"4.3.0\"; hash = \"sha256-+3pvhZY7rip8HCbfdULzjlC9FPZFpYoQxhkcuFm2wk8=\"; })\n  (fetchNuGet { pname = \"System.Linq.Parallel\"; version = \"4.0.1\"; hash = \"sha256-TV1F3KYFipPmPnWFjX6hOZQNFsG2m729EdgPSFzqY0Q=\"; })\n  (fetchNuGet { pname = \"System.Linq.Queryable\"; version = \"4.0.1\"; hash = \"sha256-XOFRO+lyoxsWtIUJfg5JCqv9Gx35ASOc94WIR8ZMVoY=\"; })\n  (fetchNuGet { pname = \"System.Memory\"; version = \"4.5.3\"; hash = \"sha256-Cvl7RbRbRu9qKzeRBWjavUkseT2jhZBUWV1SPipUWFk=\"; })\n  (fetchNuGet { pname = \"System.Memory\"; version = \"4.5.4\"; hash = \"sha256-3sCEfzO4gj5CYGctl9ZXQRRhwAraMQfse7yzKoRe65E=\"; })\n  (fetchNuGet { pname = \"System.Memory\"; version = \"4.5.5\"; hash = \"sha256-EPQ9o1Kin7KzGI5O3U3PUQAZTItSbk9h/i4rViN3WiI=\"; })\n  (fetchNuGet { pname = \"System.Net.Http\"; version = \"4.1.0\"; hash = \"sha256-y6PnGuObJvOkhl9CXNFJQcV3SXuEz5yRLOCxGGTEucQ=\"; })\n  (fetchNuGet { pname = \"System.Net.NameResolution\"; version = \"4.0.0\"; hash = \"sha256-EAO67qEDqrtxEa+J3xccA5/lgCJ0PiRU9DYZsO++QzY=\"; })\n  (fetchNuGet { pname = \"System.Net.Primitives\"; version = \"4.0.11\"; hash = \"sha256-2YSijNhCdw/ZU2yfH7vE+ReA8pgxRCXPnWr+ab36v4M=\"; })\n  (fetchNuGet { pname = \"System.Net.Requests\"; version = \"4.0.11\"; hash = \"sha256-MLXxaUhHQC3pId/6r4q0EF37CIExt0+4Na8ZpUtRs44=\"; })\n  (fetchNuGet { pname = \"System.Net.Security\"; version = \"4.0.0\"; hash = \"sha256-65Vqr/B5B336KEW69aM95+f7s5u2Q7/OiJmBarV2fnk=\"; })\n  (fetchNuGet { pname = \"System.Net.Sockets\"; version = \"4.1.0\"; hash = \"sha256-muK7oXIX7ykqhXskuUt0KX6Hzg5VogJhUS0JiOB2BY0=\"; })\n  (fetchNuGet { pname = \"System.Net.WebHeaderCollection\"; version = \"4.0.1\"; hash = \"sha256-uJSV6kmL+V/9/ot1LhHXGCd8Ndcu6zk+AJ8wgGS/fYE=\"; })\n  (fetchNuGet { pname = \"System.Numerics.Vectors\"; version = \"4.1.1\"; hash = \"sha256-Kv4FrStml5+X7hGDCLhJJaIwJDvdJdYMBfcCcOjNf/Y=\"; })\n  (fetchNuGet { pname = \"System.Numerics.Vectors\"; version = \"4.4.0\"; hash = \"sha256-auXQK2flL/JpnB/rEcAcUm4vYMCYMEMiWOCAlIaqu2U=\"; })\n  (fetchNuGet { pname = \"System.Numerics.Vectors\"; version = \"4.5.0\"; hash = \"sha256-qdSTIFgf2htPS+YhLGjAGiLN8igCYJnCCo6r78+Q+c8=\"; })\n  (fetchNuGet { pname = \"System.ObjectModel\"; version = \"4.0.12\"; hash = \"sha256-MudZ/KYcvYsn2cST3EE049mLikrNkmE7QoUoYKKby+s=\"; })\n  (fetchNuGet { pname = \"System.ObjectModel\"; version = \"4.3.0\"; hash = \"sha256-gtmRkWP2Kwr3nHtDh0yYtce38z1wrGzb6fjm4v8wN6Q=\"; })\n  (fetchNuGet { pname = \"System.Private.DataContractSerialization\"; version = \"4.1.1\"; hash = \"sha256-OaE+ZcEfkpIkbdMOMAMiJa9vgiVP25FGuFrf+N/mafY=\"; })\n  (fetchNuGet { pname = \"System.Private.Uri\"; version = \"4.3.0\"; hash = \"sha256-fVfgcoP4AVN1E5wHZbKBIOPYZ/xBeSIdsNF+bdukIRM=\"; })\n  (fetchNuGet { pname = \"System.Private.Uri\"; version = \"4.3.2\"; hash = \"sha256-jB2+W3tTQ6D9XHy5sEFMAazIe1fu2jrENUO0cb48OgU=\"; })\n  (fetchNuGet { pname = \"System.Reactive\"; version = \"5.0.0\"; hash = \"sha256-M5Z8pw8rVb8ilbnTdaOptzk5VFd5DlKa7zzCpuytTtE=\"; })\n  (fetchNuGet { pname = \"System.Reactive\"; version = \"6.0.0\"; hash = \"sha256-hXB18OsiUHSCmRF3unAfdUEcbXVbG6/nZxcyz13oe9Y=\"; })\n  (fetchNuGet { pname = \"System.Reflection\"; version = \"4.1.0\"; hash = \"sha256-idZHGH2Yl/hha1CM4VzLhsaR8Ljo/rV7TYe7mwRJSMs=\"; })\n  (fetchNuGet { pname = \"System.Reflection\"; version = \"4.3.0\"; hash = \"sha256-NQSZRpZLvtPWDlvmMIdGxcVuyUnw92ZURo0hXsEshXY=\"; })\n  (fetchNuGet { pname = \"System.Reflection.DispatchProxy\"; version = \"4.0.1\"; hash = \"sha256-GdjA81UywW1yeAyNi+MR5agmOXl859GrWwiOui2jT9U=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit\"; version = \"4.0.1\"; hash = \"sha256-F1MvYoQWHCY89/O4JBwswogitqVvKuVfILFqA7dmuHk=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit\"; version = \"4.3.0\"; hash = \"sha256-5LhkDmhy2FkSxulXR+bsTtMzdU3VyyuZzsxp7/DwyIU=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit.ILGeneration\"; version = \"4.0.1\"; hash = \"sha256-YG+eJBG5P+5adsHiw/lhJwvREnvdHw6CJyS8ZV4Ujd0=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit.ILGeneration\"; version = \"4.3.0\"; hash = \"sha256-mKRknEHNls4gkRwrEgi39B+vSaAz/Gt3IALtS98xNnA=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit.Lightweight\"; version = \"4.0.1\"; hash = \"sha256-uVvNOnL64CPqsgZP2OLqNmxdkZl6Q0fTmKmv9gcBi+g=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit.Lightweight\"; version = \"4.3.0\"; hash = \"sha256-rKx4a9yZKcajloSZHr4CKTVJ6Vjh95ni+zszPxWjh2I=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Extensions\"; version = \"4.0.1\"; hash = \"sha256-NsfmzM9G/sN3H8X2cdnheTGRsh7zbRzvegnjDzDH/FQ=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Extensions\"; version = \"4.3.0\"; hash = \"sha256-mMOCYzUenjd4rWIfq7zIX9PFYk/daUyF0A8l1hbydAk=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Metadata\"; version = \"1.3.0\"; hash = \"sha256-a/RQr++mSsziWaOTknicfIQX/zJrwPFExfhK6PM0tfg=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Metadata\"; version = \"1.6.0\"; hash = \"sha256-JJfgaPav7UfEh4yRAQdGhLZF1brr0tUWPl6qmfNWq/E=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Metadata\"; version = \"5.0.0\"; hash = \"sha256-Wo+MiqhcP9dQ6NuFGrQTw6hpbJORFwp+TBNTq2yhGp8=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Metadata\"; version = \"7.0.0\"; hash = \"sha256-GwAKQhkhPBYTqmRdG9c9taqrKSKDwyUgOEhWLKxWNPI=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Primitives\"; version = \"4.0.1\"; hash = \"sha256-SFSfpWEyCBMAOerrMCOiKnpT+UAWTvRcmoRquJR6Vq0=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Primitives\"; version = \"4.3.0\"; hash = \"sha256-5ogwWB4vlQTl3jjk1xjniG2ozbFIjZTL9ug0usZQuBM=\"; })\n  (fetchNuGet { pname = \"System.Reflection.TypeExtensions\"; version = \"4.1.0\"; hash = \"sha256-R0YZowmFda+xzKNR4kKg7neFoE30KfZwp/IwfRSKVK4=\"; })\n  (fetchNuGet { pname = \"System.Reflection.TypeExtensions\"; version = \"4.3.0\"; hash = \"sha256-4U4/XNQAnddgQIHIJq3P2T80hN0oPdU2uCeghsDTWng=\"; })\n  (fetchNuGet { pname = \"System.Resources.Reader\"; version = \"4.0.0\"; hash = \"sha256-NOax26EYc/L4bfedL2a33fg4sFXVkBwzVTQ41saJTsk=\"; })\n  (fetchNuGet { pname = \"System.Resources.ResourceManager\"; version = \"4.0.1\"; hash = \"sha256-cZ2/3/fczLjEpn6j3xkgQV9ouOVjy4Kisgw5xWw9kSw=\"; })\n  (fetchNuGet { pname = \"System.Resources.ResourceManager\"; version = \"4.3.0\"; hash = \"sha256-idiOD93xbbrbwwSnD4mORA9RYi/D/U48eRUsn/WnWGo=\"; })\n  (fetchNuGet { pname = \"System.Resources.Writer\"; version = \"4.0.0\"; hash = \"sha256-u9LxSndJMc3H/8GoelW6iyn7erRXy3YEvZs1OVEQFx4=\"; })\n  (fetchNuGet { pname = \"System.Runtime\"; version = \"4.1.0\"; hash = \"sha256-FViNGM/4oWtlP6w0JC0vJU+k9efLKZ+yaXrnEeabDQo=\"; })\n  (fetchNuGet { pname = \"System.Runtime\"; version = \"4.3.0\"; hash = \"sha256-51813WXpBIsuA6fUtE5XaRQjcWdQ2/lmEokJt97u0Rg=\"; })\n  (fetchNuGet { pname = \"System.Runtime\"; version = \"4.3.1\"; hash = \"sha256-R9T68AzS1PJJ7v6ARz9vo88pKL1dWqLOANg4pkQjkA0=\"; })\n  (fetchNuGet { pname = \"System.Runtime.CompilerServices.Unsafe\"; version = \"4.4.0\"; hash = \"sha256-SeTI4+yVRO2SmAKgOrMni4070OD+Oo8L1YiEVeKDyig=\"; })\n  (fetchNuGet { pname = \"System.Runtime.CompilerServices.Unsafe\"; version = \"4.7.1\"; hash = \"sha256-UvyoDV8O0oY3HPG1GbA56YVdvwTGEfjYR5gW1O7IK4U=\"; })\n  (fetchNuGet { pname = \"System.Runtime.CompilerServices.Unsafe\"; version = \"6.0.0\"; hash = \"sha256-bEG1PnDp7uKYz/OgLOWs3RWwQSVYm+AnPwVmAmcgp2I=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Extensions\"; version = \"4.1.0\"; hash = \"sha256-X7DZ5CbPY7jHs20YZ7bmcXs9B5Mxptu/HnBUvUnNhGc=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Extensions\"; version = \"4.3.0\"; hash = \"sha256-wLDHmozr84v1W2zYCWYxxj0FR0JDYHSVRaRuDm0bd/o=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Handles\"; version = \"4.0.1\"; hash = \"sha256-j2QgVO9ZOjv7D1het98CoFpjoYgxjupuIhuBUmLLH7w=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Handles\"; version = \"4.3.0\"; hash = \"sha256-KJ5aXoGpB56Y6+iepBkdpx/AfaJDAitx4vrkLqR7gms=\"; })\n  (fetchNuGet { pname = \"System.Runtime.InteropServices\"; version = \"4.1.0\"; hash = \"sha256-QceAYlJvkPRJc/+5jR+wQpNNI3aqGySWWSO30e/FfQY=\"; })\n  (fetchNuGet { pname = \"System.Runtime.InteropServices\"; version = \"4.3.0\"; hash = \"sha256-8sDH+WUJfCR+7e4nfpftj/+lstEiZixWUBueR2zmHgI=\"; })\n  (fetchNuGet { pname = \"System.Runtime.InteropServices.RuntimeInformation\"; version = \"4.0.0\"; hash = \"sha256-5j53amb76A3SPiE3B0llT2XPx058+CgE7OXL4bLalT4=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Loader\"; version = \"4.0.0\"; hash = \"sha256-gE5/ehU3Qq5phhSxGuPmSv1DFVQeiyl1/+YyrO+I7lI=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Numerics\"; version = \"4.0.1\"; hash = \"sha256-1pJt5ZGxLPTX1mjOi8qZPXyyOMkYV0NstoUCv91HYPg=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Numerics\"; version = \"4.3.0\"; hash = \"sha256-P5jHCgMbgFMYiONvzmaKFeOqcAIDPu/U8bOVrNPYKqc=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Serialization.Formatters\"; version = \"4.3.0\"; hash = \"sha256-Feic7MGKVG4imh7kpLkPHmApQzYjq7SxHnazh2wZkoQ=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Serialization.Primitives\"; version = \"4.1.1\"; hash = \"sha256-80B05oxJbPLGq2pGOSl6NlZvintX9A1CNpna2aN0WRA=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Serialization.Primitives\"; version = \"4.3.0\"; hash = \"sha256-zu5m1M9usend+i9sbuD6Xbizdo8Z6N5PEF9DAtEVewc=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Serialization.Xml\"; version = \"4.1.1\"; hash = \"sha256-Mx/8hiqvp1E4I6ysJC3U8D2B9qhRQcVvEOivV6w65IQ=\"; })\n  (fetchNuGet { pname = \"System.Security.Claims\"; version = \"4.0.1\"; hash = \"sha256-xqI0HHahNAd9g3jqgnLKH4P/pIueef6cy3qvRDQFvA0=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Algorithms\"; version = \"4.2.0\"; hash = \"sha256-BelNIpEyToEp/VYKnje/q1P7KNEpQNtOzGPU18pLGpE=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Cng\"; version = \"4.2.0\"; hash = \"sha256-7F+m3HnmBsgE4xWF8FeCGlaEgQM3drqA6HEaQr6MEoU=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Csp\"; version = \"4.0.0\"; hash = \"sha256-WHyR6vVK3zaT4De7jgQFUar1P5fiX9ECwiVkJDFFm7M=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Encoding\"; version = \"4.0.0\"; hash = \"sha256-ZO7ha39J5uHkIF2RoEKv/bW/bLbVvYMO4+rWyYsKHik=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.OpenSsl\"; version = \"4.0.0\"; hash = \"sha256-mLijAozynzjiOMyh2P5BHcfVq3Ovd0T/phG08SIbXZs=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Primitives\"; version = \"4.0.0\"; hash = \"sha256-sEdPftfTxQd/8DpdpqUZC2XWC0SjVCPqAkEleLl17EQ=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.X509Certificates\"; version = \"4.1.0\"; hash = \"sha256-sBUUhJP+yYDXvcjNMKqNpn8yzGUpVABwK9vVUvYKjzI=\"; })\n  (fetchNuGet { pname = \"System.Security.Principal\"; version = \"4.0.1\"; hash = \"sha256-9wBgPnJfFOtrhKZ7wDXZ4q12GklQ49Ka02/9v7Frf9k=\"; })\n  (fetchNuGet { pname = \"System.Security.Principal.Windows\"; version = \"4.0.0\"; hash = \"sha256-38wEUCB889Mpm4WgRFEQBB+4HtE0X0wu+knrDyJie7Q=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding\"; version = \"4.0.11\"; hash = \"sha256-PEailOvG05CVgPTyKLtpAgRydlSHmtd5K0Y8GSHY2Lc=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding\"; version = \"4.3.0\"; hash = \"sha256-GctHVGLZAa/rqkBNhsBGnsiWdKyv6VDubYpGkuOkBLg=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.CodePages\"; version = \"4.0.1\"; hash = \"sha256-wxtwWQSTv5tuFP79KhUAhaL6bL4d8lSzSWkCn9aolwM=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.CodePages\"; version = \"4.5.1\"; hash = \"sha256-PIhkv59IXjyiuefdhKxS9hQfEwO9YWRuNudpo53HQfw=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.CodePages\"; version = \"7.0.0\"; hash = \"sha256-eCKTVwumD051ZEcoJcDVRGnIGAsEvKpfH3ydKluHxmo=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.Extensions\"; version = \"4.0.11\"; hash = \"sha256-+kf7J3dEhgCbnCM5vHYlsTm5/R/Ud0Jr6elpHm922iI=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.Extensions\"; version = \"4.3.0\"; hash = \"sha256-vufHXg8QAKxHlujPHHcrtGwAqFmsCD6HKjfDAiHyAYc=\"; })\n  (fetchNuGet { pname = \"System.Text.Encodings.Web\"; version = \"8.0.0\"; hash = \"sha256-IUQkQkV9po1LC0QsqrilqwNzPvnc+4eVvq+hCvq8fvE=\"; })\n  (fetchNuGet { pname = \"System.Text.Json\"; version = \"8.0.0\"; hash = \"sha256-XFcCHMW1u2/WujlWNHaIWkbW1wn8W4kI0QdrwPtWmow=\"; })\n  (fetchNuGet { pname = \"System.Text.Json\"; version = \"8.0.5\"; hash = \"sha256-yKxo54w5odWT6nPruUVsaX53oPRe+gKzGvLnnxtwP68=\"; })\n  (fetchNuGet { pname = \"System.Text.RegularExpressions\"; version = \"4.1.0\"; hash = \"sha256-x6OQN6MCN7S0fJ6EFTfv4rczdUWjwuWE9QQ0P6fbh9c=\"; })\n  (fetchNuGet { pname = \"System.Text.RegularExpressions\"; version = \"4.3.0\"; hash = \"sha256-VLCk1D1kcN2wbAe3d0YQM/PqCsPHOuqlBY1yd2Yo+K0=\"; })\n  (fetchNuGet { pname = \"System.Threading\"; version = \"4.0.11\"; hash = \"sha256-mob1Zv3qLQhQ1/xOLXZmYqpniNUMCfn02n8ZkaAhqac=\"; })\n  (fetchNuGet { pname = \"System.Threading\"; version = \"4.3.0\"; hash = \"sha256-ZDQ3dR4pzVwmaqBg4hacZaVenQ/3yAF/uV7BXZXjiWc=\"; })\n  (fetchNuGet { pname = \"System.Threading.Channels\"; version = \"8.0.0\"; hash = \"sha256-c5TYoLNXDLroLIPnlfyMHk7nZ70QAckc/c7V199YChg=\"; })\n  (fetchNuGet { pname = \"System.Threading.Overlapped\"; version = \"4.0.1\"; hash = \"sha256-CAWZlavcuBQHs+kaSX9CmkpHF7wC8rFrug3XPb5KJzo=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks\"; version = \"4.0.11\"; hash = \"sha256-5SLxzFg1df6bTm2t09xeI01wa5qQglqUwwJNlQPJIVs=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks\"; version = \"4.3.0\"; hash = \"sha256-Z5rXfJ1EXp3G32IKZGiZ6koMjRu0n8C1NGrwpdIen4w=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Dataflow\"; version = \"4.6.0\"; hash = \"sha256-YYrT3GRzVBdendxt8FUDCnOBJi0nw/CJ9VrzcPJWLSg=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Extensions\"; version = \"4.0.0\"; hash = \"sha256-+YdcPkMhZhRbMZHnfsDwpNbUkr31X7pQFGxXYcAPZbE=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Extensions\"; version = \"4.3.0\"; hash = \"sha256-X2hQ5j+fxcmnm88Le/kSavjiGOmkcumBGTZKBLvorPc=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Extensions\"; version = \"4.5.4\"; hash = \"sha256-owSpY8wHlsUXn5xrfYAiu847L6fAKethlvYx97Ri1ng=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Parallel\"; version = \"4.0.1\"; hash = \"sha256-5VyRZ97Fug4reK/cQ6wsCrJ5jH53aGu1a4ZkKMZrnIQ=\"; })\n  (fetchNuGet { pname = \"System.Threading.Thread\"; version = \"4.0.0\"; hash = \"sha256-7EtSJuKqcW107FYA5Ko9NFXEWUPIzNDtlfKaQV2pvb8=\"; })\n  (fetchNuGet { pname = \"System.Threading.ThreadPool\"; version = \"4.0.10\"; hash = \"sha256-/fowWjM/0ZZFC1Rwu0i5N71iRxV2JOd3jQV2Jn0wuTk=\"; })\n  (fetchNuGet { pname = \"System.Threading.Timer\"; version = \"4.0.1\"; hash = \"sha256-5lU6zt1O9JDSPr2KAHw4BYgysHnt0yyZrMNa5IIjxZY=\"; })\n  (fetchNuGet { pname = \"System.ValueTuple\"; version = \"4.5.0\"; hash = \"sha256-niH6l2fU52vAzuBlwdQMw0OEoRS/7E1w5smBFoqSaAI=\"; })\n  (fetchNuGet { pname = \"System.Xml.ReaderWriter\"; version = \"4.0.11\"; hash = \"sha256-haZAFFQ9Sl2DhfvEbdx2YRqKEoxNMU5STaqpMmXw0zA=\"; })\n  (fetchNuGet { pname = \"System.Xml.ReaderWriter\"; version = \"4.3.0\"; hash = \"sha256-QQ8KgU0lu4F5Unh+TbechO//zaAGZ4MfgvW72Cn1hzA=\"; })\n  (fetchNuGet { pname = \"System.Xml.XDocument\"; version = \"4.0.11\"; hash = \"sha256-KPz1kxe0RUBM+aoktJ/f9p51GudMERU8Pmwm//HdlFg=\"; })\n  (fetchNuGet { pname = \"System.Xml.XDocument\"; version = \"4.3.0\"; hash = \"sha256-rWtdcmcuElNOSzCehflyKwHkDRpiOhJJs8CeQ0l1CCI=\"; })\n  (fetchNuGet { pname = \"System.Xml.XmlDocument\"; version = \"4.0.1\"; hash = \"sha256-gdoFrPo54v1LjkBF79f8EvtltVVjHz9ZI9kc5ve0GkY=\"; })\n  (fetchNuGet { pname = \"System.Xml.XmlDocument\"; version = \"4.3.0\"; hash = \"sha256-kbuV4Y7rVJkfMp2Kgoi8Zvdatm9CZNmlKB3GZgANvy4=\"; })\n  (fetchNuGet { pname = \"System.Xml.XmlSerializer\"; version = \"4.0.11\"; hash = \"sha256-v6x4d6W18dijG5cDqQmVHdtWRf6Y4OkdBolT3d5g3wY=\"; })\n  (fetchNuGet { pname = \"System.Xml.XPath\"; version = \"4.0.1\"; hash = \"sha256-lQCoK2M51SGRuGjfiuIW26Y2goABY2RLE6cZ4816WDo=\"; })\n  (fetchNuGet { pname = \"System.Xml.XPath.XDocument\"; version = \"4.0.1\"; hash = \"sha256-H/zyMMB1YB8vd+StYJr99KLqWmSHhaP7RHDLRcFhzbo=\"; })\n  (fetchNuGet { pname = \"System.Xml.XPath.XmlDocument\"; version = \"4.0.1\"; hash = \"sha256-bK9AfAYrdSipdRbmo8Rk7394ku92UFNe2TEQF5+k/lA=\"; })\n  (fetchNuGet { pname = \"Tmds.DBus.Protocol\"; version = \"0.15.0\"; hash = \"sha256-4gk2vXDjKFaBh82gTkwg3c/5GRjiH+bvM5elfDSbKTU=\"; })\n  (fetchNuGet { pname = \"WabiSabi\"; version = \"1.0.1.2\"; hash = \"sha256-Gx+tuXraMABak8s0SeofbXpNLVfTnxz4At4+HejnQeU=\"; })\n  (fetchNuGet { pname = \"xunit\"; version = \"2.6.6\"; hash = \"sha256-uuTcjtXrMiTTMsCnyG5vBEN94zZyJVGzJAV7yjxIggg=\"; })\n  (fetchNuGet { pname = \"xunit.abstractions\"; version = \"2.0.2\"; hash = \"sha256-w5APCW7suBdoDOmQqm/8Gq6+Sk88JcTR09zjmj9s17E=\"; })\n  (fetchNuGet { pname = \"xunit.abstractions\"; version = \"2.0.3\"; hash = \"sha256-0D1y/C34iARI96gb3bAOG8tcGPMjx+fMabTPpydGlAM=\"; })\n  (fetchNuGet { pname = \"xunit.analyzers\"; version = \"1.10.0\"; hash = \"sha256-TmH5jen7Y90lpM6c18DGsMbUoXKq2I9Clqsu0m9fmSw=\"; })\n  (fetchNuGet { pname = \"xunit.assert\"; version = \"2.6.6\"; hash = \"sha256-ZbUViqWlExgASGARoQzSbAt0HWfQOSgyGnu1T5ZJd+Y=\"; })\n  (fetchNuGet { pname = \"xunit.core\"; version = \"2.4.0\"; hash = \"sha256-dt59aoFjpqlbcPFGwPrzOSEBSPIn33tLcLraK8xEntE=\"; })\n  (fetchNuGet { pname = \"xunit.core\"; version = \"2.6.6\"; hash = \"sha256-lt5/d8CE1I1MPqQ/NKaWEV6ICGjkWID/xDnvmjUpInY=\"; })\n  (fetchNuGet { pname = \"xunit.extensibility.core\"; version = \"2.4.0\"; hash = \"sha256-LbuXEcEJjGn3L6FCbC119+MY/QLvfLlGkCeAsCsZqGE=\"; })\n  (fetchNuGet { pname = \"xunit.extensibility.core\"; version = \"2.6.6\"; hash = \"sha256-gGZxPQNghCPFvbijnIrSt17iuxwImHvWEHtNVFY4HDk=\"; })\n  (fetchNuGet { pname = \"xunit.extensibility.execution\"; version = \"2.4.0\"; hash = \"sha256-chRJEazwq93yhVONlbtTI1znqYy0gdAoQajPRnhM/i4=\"; })\n  (fetchNuGet { pname = \"xunit.extensibility.execution\"; version = \"2.6.6\"; hash = \"sha256-5Mvv9Nu+pCwZz4CIZX1l+yo6S6mEGIWPaOTyv7srSVg=\"; })\n  (fetchNuGet { pname = \"xunit.runner.visualstudio\"; version = \"2.5.6\"; hash = \"sha256-CLlPdVfUk7Uw/cjOduQfPyA8d5+l1hCjFzf+snw11M4=\"; })\n]\n"
        },
        {
          "name": "deps.nix",
          "type": "blob",
          "size": 59.203125,
          "content": "# This file was automatically generated by passthru.fetch-deps.\n# Please dont edit it manually, your changes might get overwritten!\n\n{ fetchNuGet }: [\n  (fetchNuGet { pname = \"Avalonia\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-ee9ixHmuSOAma5JJDmoi4sMzPRgthhmx/GlTDOT/Whk=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia/11.0.999-cibuild0044755-beta/avalonia.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Angle.Windows.Natives\"; version = \"2.1.0.2023020321\"; hash = \"sha256-TWop9cvak6cMv2vrA/GlpuYBxS8Fuj5UmupGIV7Q5Ks=\"; })\n  (fetchNuGet { pname = \"Avalonia.AvaloniaEdit\"; version = \"11.0.0\"; hash = \"sha256-8lJBbbUn6RP4+8qO7VMDdL334o6hTf3Lj3EgIA75K4o=\"; })\n  (fetchNuGet { pname = \"Avalonia.BuildServices\"; version = \"0.0.29\"; hash = \"sha256-WPHRMNowRnYSCh88DWNBCltWsLPyOfzXGzBqLYE7tRY=\"; })\n  (fetchNuGet { pname = \"Avalonia.Controls.ColorPicker\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-d84cW3FzcgrlxDEwfWT5janKyZaDsw7aTnXXKIhn2aw=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.controls.colorpicker/11.0.999-cibuild0044755-beta/avalonia.controls.colorpicker.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Controls.DataGrid\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-nTNiZTj/uEs/D7zIJuR22Nk9AndOWdk23qTP1lbop28=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.controls.datagrid/11.0.999-cibuild0044755-beta/avalonia.controls.datagrid.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Controls.TreeDataGrid\"; version = \"11.0.2\"; hash = \"sha256-D3xoKUls3k7LJhNJ3Yh4rKxIOQxxJCLzNxnm01T1EK0=\"; })\n  (fetchNuGet { pname = \"Avalonia.Desktop\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-DJplESNLS1SD95/cpluA8wlQM8hD6ZuTJg1f2PBxFZI=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.desktop/11.0.999-cibuild0044755-beta/avalonia.desktop.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Diagnostics\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-kFGhrek5dQ6/BADJph2XVaqNSLIv/UuJvyGRrv3RAeI=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.diagnostics/11.0.999-cibuild0044755-beta/avalonia.diagnostics.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Fonts.Inter\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-Pcz6DO0t7N+7KLAlcg2MyLxhjSdV4RXti+rVyKz5i44=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.fonts.inter/11.0.999-cibuild0044755-beta/avalonia.fonts.inter.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.FreeDesktop\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-P/EeNwizinOTTQStzUrKAd8OvnQL403jhxyvrm8GzIo=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.freedesktop/11.0.999-cibuild0044755-beta/avalonia.freedesktop.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Headless\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-63m3hLEpUEp8SarUcM18Nf9smdxYJ7ym9vY6d96sHQo=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.headless/11.0.999-cibuild0044755-beta/avalonia.headless.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Headless.XUnit\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-YWCuN2u2ZGHtYTqGBDgdkOf5RNiqBkdG8upwHJPonok=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.headless.xunit/11.0.999-cibuild0044755-beta/avalonia.headless.xunit.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Native\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-Lu1XHN6xDPTqwbtAYb3OwWHpolUVbHsQJaKmDoVAV1Y=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.native/11.0.999-cibuild0044755-beta/avalonia.native.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.ReactiveUI\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-t31LwDpNAABJeaQHSNOH49TZpbwveIe4Vyv+6vXgnU8=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.reactiveui/11.0.999-cibuild0044755-beta/avalonia.reactiveui.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Remote.Protocol\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-Dg341cnUgEQ7IvmRZ7Q40sAdaKU8djyvaFcYeeUNnRg=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.remote.protocol/11.0.999-cibuild0044755-beta/avalonia.remote.protocol.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Skia\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-6SiWSpE4b1J43e7QZ7U4cy0FcHYXy7bQaHDS85exTyQ=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.skia/11.0.999-cibuild0044755-beta/avalonia.skia.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Svg\"; version = \"11.0.0\"; hash = \"sha256-edKxg+OsZ2EkWvSDpGxRTLmEx3U1G0+6CbRJy4VUr/Y=\"; })\n  (fetchNuGet { pname = \"Avalonia.Themes.Fluent\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-yR5SKAELuynkl8PWpNWVNr9FsydCLe0re+NLKV7U9Os=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.themes.fluent/11.0.999-cibuild0044755-beta/avalonia.themes.fluent.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Themes.Simple\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-Me1m7A0wcZS4vm1KRDQmZP9BwOMnN+BG15ujVOSDDbk=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.themes.simple/11.0.999-cibuild0044755-beta/avalonia.themes.simple.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Win32\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-pP4mhBnOr5nRYsMUqcFrQ0V6Qrb+dJ4IM3NmdQgRx9I=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.win32/11.0.999-cibuild0044755-beta/avalonia.win32.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.X11\"; version = \"11.0.999-cibuild0044755-beta\"; hash = \"sha256-wQ9l8AWnbtImiD4Rwn6297t+f0cs9Z67GA6xV37sfdQ=\"; url = \"https://nuget-feed-all.avaloniaui.net/v3/package/avalonia.x11/11.0.999-cibuild0044755-beta/avalonia.x11.11.0.999-cibuild0044755-beta.nupkg\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Behaviors\"; version = \"11.0.5\"; hash = \"sha256-wS0clXNKAG4uy539dUjbrRdzHrdHsloivpY5SEBCNtY=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions\"; version = \"11.0.5\"; hash = \"sha256-s/o0416K/nZkVWcNPuKbqmwLKhWsMeEds/dT85QOp4c=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Custom\"; version = \"11.0.5\"; hash = \"sha256-0HVVQTHD+D4q4IYjMJ6H90mMefBLr5pSKDy7JMq10cE=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.DragAndDrop\"; version = \"11.0.5\"; hash = \"sha256-iwchyONRjTbSSNxaGROeM62RL964KCs0fWz6VIO4O/k=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Draggable\"; version = \"11.0.5\"; hash = \"sha256-C8acIjqy8Akf1ZFVLBq+wKuGaP8YOlKEa+e2RaowKak=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Events\"; version = \"11.0.5\"; hash = \"sha256-NbG4wOT5d4z6OkGMLdB7pZrRcu0BOK5PBGZ098iE3IU=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Reactive\"; version = \"11.0.5\"; hash = \"sha256-zrbr7MW+3LOyhIMi5VB8YRfr19vyWtcaxwqXjbkTDAA=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactions.Responsive\"; version = \"11.0.5\"; hash = \"sha256-TfcYEdLMxYffBcBzcyoKWESrQltozigJKx+CLNCMz08=\"; })\n  (fetchNuGet { pname = \"Avalonia.Xaml.Interactivity\"; version = \"11.0.5\"; hash = \"sha256-nNoI2rxJBFuYs1lg3O3rXeigJWoGjzGWdU8jsWGz7+4=\"; })\n  (fetchNuGet { pname = \"Castle.Core\"; version = \"5.1.1\"; hash = \"sha256-oVkQB+ON7S6Q27OhXrTLaxTL0kWB58HZaFFuiw4iTrE=\"; })\n  (fetchNuGet { pname = \"ColorDocument.Avalonia\"; version = \"11.0.3-a1\"; hash = \"sha256-Pkh5FX+4pBzep5oCCyhIiR559QyFCEb1vrfEgG0wREw=\"; })\n  (fetchNuGet { pname = \"ColorTextBlock.Avalonia\"; version = \"11.0.3-a1\"; hash = \"sha256-fWJuApxnJLISayQJIKEBVOt/t1Qyj+0s+RezZkMnPio=\"; })\n  (fetchNuGet { pname = \"coverlet.collector\"; version = \"6.0.0\"; hash = \"sha256-IEmweTMapcPhFHpmJsPXfmMhravYOrWupgjeOvMmQ4o=\"; })\n  (fetchNuGet { pname = \"dotnet-xunit\"; version = \"2.3.1\"; hash = \"sha256-pGghnfgZMfv6Fb49kLtdbtkcxvBuMsNhNhObFyfVP3A=\"; })\n  (fetchNuGet { pname = \"DynamicData\"; version = \"7.9.5\"; hash = \"sha256-3XjOMuFathku9oWyss360+Ze5UMP7tSmUbMoax7qONU=\"; })\n  (fetchNuGet { pname = \"DynamicData\"; version = \"8.1.1\"; hash = \"sha256-xECMwHgVkHgi2sZwMGe4tAHgxX2Uj+USPkRFhNLpoF4=\"; })\n  (fetchNuGet { pname = \"ExCSS\"; version = \"4.1.4\"; hash = \"sha256-7dKCwRC+Jt4CTLz9LF3LpmaB8ch1HFrcan7CmM3toPg=\"; })\n  (fetchNuGet { pname = \"Fizzler\"; version = \"1.2.1\"; hash = \"sha256-FROW1WzitXTauf2Hn7YejOLqNKN2Nd+Q2etFB1pYsvA=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp\"; version = \"7.3.0\"; hash = \"sha256-LlPQO/NYgIMWicvLOtWsQzCp512QpIImYDP9/n2rDOc=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp.NativeAssets.Linux\"; version = \"7.3.0\"; hash = \"sha256-AEHjgqX0o+Fob0SeZ6EikGKoEe6rRxess5fVJ31UL0U=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp.NativeAssets.macOS\"; version = \"7.3.0\"; hash = \"sha256-6oFcdKb17UX5wyAUeCCKXGvzkf0w3MNdZOVMvs54tqw=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp.NativeAssets.WebAssembly\"; version = \"7.3.0\"; hash = \"sha256-9VI0xCavuuIIStuQ7ipBfWu5HrAt+Kk/F2j57C1llTU=\"; })\n  (fetchNuGet { pname = \"HarfBuzzSharp.NativeAssets.Win32\"; version = \"7.3.0\"; hash = \"sha256-WnB7l73hneU9Kpbm8S9zEYbZHjFre24vWz0vl8+v28M=\"; })\n  (fetchNuGet { pname = \"HtmlAgilityPack\"; version = \"1.11.42\"; hash = \"sha256-y1sdZXb4+wjvH5gmwyBZOn5CLid7lTHgxEsy13BgdjM=\"; })\n  (fetchNuGet { pname = \"Libuv\"; version = \"1.9.0\"; hash = \"sha256-DjTLVqtEUVStzRjEMvhPeatqKs5OuuDhcHYSGGCi5ik=\"; })\n  (fetchNuGet { pname = \"LinqKit.Core\"; version = \"1.2.5\"; hash = \"sha256-0z4RpAt+WvydeCN0GJu4vsMfCxzxmoi+LTE6fQ51NZY=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia\"; version = \"11.0.3-a1\"; hash = \"sha256-tzSWAz/fVQ58EFbSIWO/UoNWQlRJ3g1XA78wYWflLV0=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia.Html\"; version = \"11.0.3-a1\"; hash = \"sha256-rpQiHK/UXEQgbJuaejDirhHJxWjGTpF7ddsEmcP6Pe4=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia.Svg\"; version = \"11.0.3-a1\"; hash = \"sha256-nTuS+2wGv0Y+envK3Sgt+sdXKSHe8qOt8AVl6QbdjfQ=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia.SyntaxHigh\"; version = \"11.0.3-a1\"; hash = \"sha256-t91Gok0OaMBFN/l+fYIoEG8nPWPeXJZZucjtn/23Dq0=\"; })\n  (fetchNuGet { pname = \"Markdown.Avalonia.Tight\"; version = \"11.0.3-a1\"; hash = \"sha256-KkRzr8BXmUCGCVv/64gg1aiXHUY0yGj5t12OsYAidcw=\"; })\n  (fetchNuGet { pname = \"MicroCom.Runtime\"; version = \"0.11.0\"; hash = \"sha256-VdwpP5fsclvNqJuppaOvwEwv2ofnAI5ZSz2V+UEdLF0=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.JsonPatch\"; version = \"8.0.0\"; hash = \"sha256-X8lbEnCVHjMcp28ZPqwFTU3R75mFAHNFW0hE7rATBfw=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.Mvc.NewtonsoftJson\"; version = \"8.0.0\"; hash = \"sha256-4Ho979nHLi8NRtmeY3/cw0eSUno7gfQhUKwCYejDLIc=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.Mvc.Testing\"; version = \"8.0.0\"; hash = \"sha256-5M4Y1OmJrkU4EakzlYxsBQ4G2kdAd2rzWKL23m9bBjo=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.TestHost\"; version = \"8.0.0\"; hash = \"sha256-7+7DzHVTyKzsn4Fjxdmjlu4beKQupVWtk8Zh2KnIFpA=\"; })\n  (fetchNuGet { pname = \"Microsoft.AspNetCore.WebUtilities\"; version = \"8.0.0\"; hash = \"sha256-e4wqTJUgPfq6CfRwuXTw32K9vB+hOpSLxSZDpzv23Yg=\"; })\n  (fetchNuGet { pname = \"Microsoft.Bcl.AsyncInterfaces\"; version = \"6.0.0\"; hash = \"sha256-49+H/iFwp+AfCICvWcqo9us4CzxApPKC37Q5Eqrw+JU=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build\"; version = \"15.3.409\"; hash = \"sha256-AU0ZVHH95IZ/Lg69Q2LLaRBa5TojHmaSTtp7cTUz+G8=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build.Framework\"; version = \"15.3.409\"; hash = \"sha256-QgePmmyc2ZANHtFhSNJvtX6/gOXsyF6QV27BmBa3CrY=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build.Runtime\"; version = \"15.3.409\"; hash = \"sha256-+OBCCLWxwANvWr2ySLASXd7WD3tXqV98MM/J8rFlvow=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build.Tasks.Core\"; version = \"15.3.409\"; hash = \"sha256-Y6QKjeGZd6tkf3X57M/9C8Ej21Hma74jE5+d+7znuow=\"; })\n  (fetchNuGet { pname = \"Microsoft.Build.Utilities.Core\"; version = \"15.3.409\"; hash = \"sha256-znJ/BOVWXmVykTUQWxE+wAotuMSIHAWxQVLWrhMFCt0=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Analyzers\"; version = \"1.1.0\"; hash = \"sha256-7KrZfK3kUbmeT82eVadvHurZcaFq3FDj4qkIIeExJiM=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Analyzers\"; version = \"3.0.0\"; hash = \"sha256-KDbCfsBWSJ5ohEXUKp1s1LX9xA2NPvXE/xVzj68EdC0=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Analyzers\"; version = \"3.3.4\"; hash = \"sha256-qDzTfZBSCvAUu9gzq2k+LOvh6/eRvJ9++VCNck/ZpnE=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.BannedApiAnalyzers\"; version = \"3.3.4\"; hash = \"sha256-YPTHTZ8xRPMLADdcVYRO/eq3O9uZjsD+OsGRZE+0+e8=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Common\"; version = \"1.3.0\"; hash = \"sha256-Jcw54WWyfPKdkeqRAG4xjihiGP/djjAkvpR6KM2I+CQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Common\"; version = \"3.8.0\"; hash = \"sha256-3G9vSc/gHH7FWgOySLTut1+eEaf3H66qcPOvNPLOx4o=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Common\"; version = \"4.6.0\"; hash = \"sha256-4koWiniIrv4ZBmS9SZb3347KaejKKh11n7CRj9fkc2M=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.CSharp\"; version = \"1.3.0\"; hash = \"sha256-OqqvMHNj9Xql4YTEPMlzoGXXELoLC7JkRGjS0pil+m4=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.CSharp\"; version = \"3.8.0\"; hash = \"sha256-i/r3V/No/VzqmJlWxpGoirvlbJDbBPa/ONZtzYrxuc4=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.CSharp\"; version = \"4.6.0\"; hash = \"sha256-OCxUWSolVrmP2bs2SX9WLjb/U8Box8s1Tayk05/n2/k=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.CSharp.Scripting\"; version = \"3.8.0\"; hash = \"sha256-fA9Qu+vTyMZ9REzxJ4aMg/SHCDRk4q9k4ZGUdynoHnA=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.Scripting.Common\"; version = \"3.8.0\"; hash = \"sha256-866jMHp8kbc1FYpKuUWnd7ViU6kGJTAxPcL/IjXrT0I=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeAnalysis.VisualBasic\"; version = \"1.3.0\"; hash = \"sha256-lIKN1dG59aY8zeYgkY8Kdnv4UBgSwVbghz5ngPyEzKA=\"; })\n  (fetchNuGet { pname = \"Microsoft.CodeCoverage\"; version = \"17.8.0\"; hash = \"sha256-cv/wAXfTNS+RWEsHWNKqRDHC7LOQSSdFJ1a9cZuSfJw=\"; })\n  (fetchNuGet { pname = \"Microsoft.CSharp\"; version = \"4.0.1\"; hash = \"sha256-0huoqR2CJ3Z9Q2peaKD09TV3E6saYSqDGZ290K8CrH8=\"; })\n  (fetchNuGet { pname = \"Microsoft.CSharp\"; version = \"4.3.0\"; hash = \"sha256-a3dAiPaVuky0wpcHmpTVtAQJNGZ2v91/oArA+dpJgj8=\"; })\n  (fetchNuGet { pname = \"Microsoft.CSharp\"; version = \"4.7.0\"; hash = \"sha256-Enknv2RsFF68lEPdrf5M+BpV1kHoLTVRApKUwuk/pj0=\"; })\n  (fetchNuGet { pname = \"Microsoft.Data.Sqlite\"; version = \"8.0.0\"; hash = \"sha256-0Q+1SxcHyNgkz4DUTJVaiteOQGydf2Uzk6y/R/rwwws=\"; })\n  (fetchNuGet { pname = \"Microsoft.Data.Sqlite.Core\"; version = \"8.0.0\"; hash = \"sha256-aew8/vRyzCc7MMNHziR8tsg66EFkJC+Snst3F+a3Ehc=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.ApiDescription.Server\"; version = \"6.0.5\"; hash = \"sha256-RJjBWz+UHxkQE2s7CeGYdTZ218mCufrxl0eBykZdIt4=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Caching.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-xGpKrywQvU1Wm/WolYIxgHYEFfgkNGeJ+GGc5DT3phI=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Caching.Memory\"; version = \"8.0.1\"; hash = \"sha256-5Q0vzHo3ZvGs4nPBc/XlBF4wAwYO8pxq6EGdYjjXZps=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration\"; version = \"8.0.0\"; hash = \"sha256-9BPsASlxrV8ilmMCjdb3TiUcm5vFZxkBnAI/fNBSEyA=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-4eBpDkf7MJozTZnOwQvwcfgRKQGcNXe0K/kF+h5Rl8o=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.Binder\"; version = \"8.0.0\"; hash = \"sha256-GanfInGzzoN2bKeNwON8/Hnamr6l7RTpYLA49CNXD9Q=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.CommandLine\"; version = \"8.0.0\"; hash = \"sha256-fmPC/o8S+weTtQJWykpnGHm6AKVU21xYE/CaHYU7zgg=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.EnvironmentVariables\"; version = \"8.0.0\"; hash = \"sha256-+bjFZvqCsMf2FRM2olqx/fub+QwfM1kBhjGVOT5HC48=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.FileExtensions\"; version = \"8.0.0\"; hash = \"sha256-BCxcjVP+kvrDDB0nzsFCJfU74UK4VBvct2JA4r+jNcs=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.Json\"; version = \"8.0.0\"; hash = \"sha256-Fi/ijcG5l0BOu7i96xHu96aN5/g7zO6SWQbTsI3Qetg=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Configuration.UserSecrets\"; version = \"8.0.0\"; hash = \"sha256-/yj5QaEzeRStvOFoBpPRPXlEehGtr2E6/rJb+OEPIK8=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.DependencyInjection\"; version = \"8.0.0\"; hash = \"sha256-+qIDR8hRzreCHNEDtUcPfVHQdurzWPo/mqviCH78+EQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.DependencyInjection.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-75KzEGWjbRELczJpCiJub+ltNUMMbz5A/1KQU+5dgP8=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.DependencyInjection.Abstractions\"; version = \"8.0.2\"; hash = \"sha256-UfLfEQAkXxDaVPC7foE/J3FVEXd31Pu6uQIhTic3JgY=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.DependencyModel\"; version = \"8.0.0\"; hash = \"sha256-qkCdwemqdZY/yIW5Xmh7Exv74XuE39T8aHGHCofoVgo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Diagnostics\"; version = \"8.0.0\"; hash = \"sha256-fBLlb9xAfTgZb1cpBxFs/9eA+BlBvF8Xg0DMkBqdHD4=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Diagnostics.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-USD5uZOaahMqi6u7owNWx/LR4EDrOwqPrAAim7iRpJY=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileProviders.Abstractions\"; version = \"2.0.0\"; hash = \"sha256-hKe5UMOTF9AhZ6duDj99gNwEOUuIDzc4cVcaL3Us3jQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileProviders.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-uQSXmt47X2HGoVniavjLICbPtD2ReQOYQMgy3l0xuMU=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileProviders.Physical\"; version = \"2.0.0\"; hash = \"sha256-Q2demwVat35Itq1KKBKn3FAZ7A1bpRGsEIFgfZ5IFFA=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileProviders.Physical\"; version = \"8.0.0\"; hash = \"sha256-29y5ZRQ1ZgzVOxHktYxyiH40kVgm5un2yTGdvuSWnRc=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileSystemGlobbing\"; version = \"2.0.0\"; hash = \"sha256-5D0oI9xxg5CzjiVWwPmgd+yNAJaqEzQqdxw+ErLxnwo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.FileSystemGlobbing\"; version = \"8.0.0\"; hash = \"sha256-+Oz41JR5jdcJlCJOSpQIL5OMBNi+1Hl2d0JUHfES7sU=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Hosting\"; version = \"8.0.0\"; hash = \"sha256-sKHa+w4/pMeQb5RRFqLtMTUJy5H6hSIGWchbH2pxSrg=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Hosting.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-0JBx+wwt5p1SPfO4m49KxNOXPAzAU0A+8tEc/itvpQE=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Http\"; version = \"8.0.0\"; hash = \"sha256-UgljypOLld1lL7k7h1noazNzvyEHIJw+r+6uGzucFSY=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging\"; version = \"8.0.0\"; hash = \"sha256-Meh0Z0X7KyOEG4l0RWBcuHHihcABcvCyfUXgasmQ91o=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Abstractions\"; version = \"1.0.0\"; hash = \"sha256-asIXVFsAK7ELd/f+vLwhxYDdazqRTmf+fGJ4WFtcCeo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Abstractions\"; version = \"8.0.0\"; hash = \"sha256-Jmddjeg8U5S+iBTwRlVAVLeIHxc4yrrNgqVMOB7EjM4=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Abstractions\"; version = \"8.0.2\"; hash = \"sha256-cHpe8X2BgYa5DzulZfq24rg8O2K5Lmq2OiLhoyAVgJc=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Configuration\"; version = \"8.0.0\"; hash = \"sha256-mzmstNsVjKT0EtQcdAukGRifD30T82BMGYlSu8k4K7U=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Console\"; version = \"8.0.0\"; hash = \"sha256-bdb9YWWVn//AeySp7se87/tCN2E7e8Gx2GPMw28cd9c=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.Debug\"; version = \"8.0.0\"; hash = \"sha256-AJunzYBZM2wCg86hnPnMrBuWIIyW/4PnIVoDSU969cA=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.EventLog\"; version = \"8.0.0\"; hash = \"sha256-vXBm4yhWGP4uow0CqstuqOkxO8yeZEM15JTTenjPbhc=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Logging.EventSource\"; version = \"8.0.0\"; hash = \"sha256-kaR7YOlq5s8W9nZDtH/lKtnfGbrgOuQY4DUPcA2lcj0=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Options\"; version = \"8.0.0\"; hash = \"sha256-n2m4JSegQKUTlOsKLZUUHHKMq926eJ0w9N9G+I3FoFw=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Options\"; version = \"8.0.2\"; hash = \"sha256-AjcldddddtN/9aH9pg7ClEZycWtFHLi9IPe1GGhNQys=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Options.ConfigurationExtensions\"; version = \"8.0.0\"; hash = \"sha256-A5Bbzw1kiNkgirk5x8kyxwg9lLTcSngojeD+ocpG1RI=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Primitives\"; version = \"2.0.0\"; hash = \"sha256-q44LtMvyNEKSvgERvA+BrasKapP92Sc91QR4u2TJ9/Y=\"; })\n  (fetchNuGet { pname = \"Microsoft.Extensions.Primitives\"; version = \"8.0.0\"; hash = \"sha256-FU8qj3DR8bDdc1c+WeGZx/PCZeqqndweZM9epcpXjSo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Net.Http.Headers\"; version = \"8.0.0\"; hash = \"sha256-Byowq5bRdxNHHjfxjzq+umnifUyKz0t65xeiB4Bjrkw=\"; })\n  (fetchNuGet { pname = \"Microsoft.NET.Test.Sdk\"; version = \"17.8.0\"; hash = \"sha256-uz7QvW+NsVRsp8FR1wjnGEOkUaPX4JyieywvCN6g2+s=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.App\"; version = \"1.0.0\"; hash = \"sha256-V+YsHLTJKL4QE7kvSCQw5bCtmUAjkW6DTbbDo45mCUQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.App\"; version = \"2.0.5\"; hash = \"sha256-ZuMG1tPcQ0HkZaj5j/IxiqCHq0+h3HYV/IAeToSZZ2E=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetAppHost\"; version = \"2.0.5\"; hash = \"sha256-mku/xvtXrLOvDR47pNipYqOJo0bRbed8l7oill7regE=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHost\"; version = \"1.0.1\"; hash = \"sha256-yiyZ4KGVRDZRgAuoSl4ZNWnRR3ityniyRPvzS799JOM=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHostPolicy\"; version = \"1.0.1\"; hash = \"sha256-4dNpj9sxKfV1jEFDma2hM7d+xJ6+/wJwP3/SugLneG0=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHostPolicy\"; version = \"2.0.5\"; hash = \"sha256-U3s8nlIbA3IKoDwlTmY8uVfJJmoKU8bRn2heHqfWrGw=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHostResolver\"; version = \"1.0.1\"; hash = \"sha256-hGJLA8Q6R+up9zHzk+Up2KF1a+fXZeEWrAZ+iNfQP4E=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.DotNetHostResolver\"; version = \"2.0.5\"; hash = \"sha256-HI72PKGyYZ8jn9KlZH40Pa4M4Q9VZDp6EJ83h25z4us=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Jit\"; version = \"1.0.2\"; hash = \"sha256-T92T+bmdXfpAe73OKFTYXGJW1gTHuwcryBSgV7mwSkk=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"1.0.1\"; hash = \"sha256-mZotlGZqtrqDSoBrZhsxFe6fuOv5/BIo0w2Z2x0zVAU=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"1.1.0\"; hash = \"sha256-FeM40ktcObQJk4nMYShB61H/E8B7tIKfl9ObJ0IOcCM=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"1.1.1\"; hash = \"sha256-8hLiUKvy/YirCWlFwzdejD2Db3DaXhHxT7GSZx/znJg=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"2.0.1\"; hash = \"sha256-1xZBheXlvHr0aNlOks+b1bzv1CxAtCaipZest6OtUMg=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Platforms\"; version = \"2.1.2\"; hash = \"sha256-gYQQO7zsqG+OtN4ywYQyfsiggS2zmxw4+cPXlK+FB5Q=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Runtime.CoreCLR\"; version = \"1.0.2\"; hash = \"sha256-7K5EruLlrFmN3rAfXZMPK3hfhS728k5Gew0e+L3Ur8M=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Targets\"; version = \"1.0.1\"; hash = \"sha256-lxxw/Gy32xHi0fLgFWNj4YTFBSBkjx5l6ucmbTyf7V4=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Targets\"; version = \"1.1.0\"; hash = \"sha256-0AqQ2gMS8iNlYkrD+BxtIg7cXMnr9xZHtKAuN4bjfaQ=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Targets\"; version = \"1.1.3\"; hash = \"sha256-WLsf1NuUfRWyr7C7Rl9jiua9jximnVvzy6nk2D2bVRc=\"; })\n  (fetchNuGet { pname = \"Microsoft.NETCore.Windows.ApiSets\"; version = \"1.0.1\"; hash = \"sha256-6PR4o/wQxBaJ5eRdt/awSO80EP3QqpWIk0XkCR9kaJo=\"; })\n  (fetchNuGet { pname = \"Microsoft.OpenApi\"; version = \"1.2.3\"; hash = \"sha256-OafkxXKnDmLZo5tjifjycax0n0F/OnWQTEZCntBMYR0=\"; })\n  (fetchNuGet { pname = \"Microsoft.TestPlatform.ObjectModel\"; version = \"17.8.0\"; hash = \"sha256-9TwGrjVvbtyetw67Udp3EMK5MX8j0RFRjduxPCs9ESw=\"; })\n  (fetchNuGet { pname = \"Microsoft.TestPlatform.TestHost\"; version = \"17.8.0\"; hash = \"sha256-+CTYFu631uovLCO47RKe86YaAqfoLA4r73vKORJUsjg=\"; })\n  (fetchNuGet { pname = \"Microsoft.VisualBasic\"; version = \"10.0.1\"; hash = \"sha256-7HHzZcWLVTTQ1K1rCIyoB+UxLHMvOIz+O5av6XDa22A=\"; })\n  (fetchNuGet { pname = \"Microsoft.VisualStudio.Web.CodeGeneration.Contracts\"; version = \"2.0.2\"; hash = \"sha256-wfqv/WRzU6C805zcTsjv3sOK5vvBNDR2Nh0yYOXSRrs=\"; })\n  (fetchNuGet { pname = \"Microsoft.VisualStudio.Web.CodeGeneration.Tools\"; version = \"2.0.2\"; hash = \"sha256-Bu8ImFY8W/jS2KgpuGOSD8pbJG8mJvHPaaPoHA2ocjo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Win32.Primitives\"; version = \"4.0.1\"; hash = \"sha256-B4t5El/ViBdxALMcpZulewc4j/3SIXf71HhJWhm4Ctk=\"; })\n  (fetchNuGet { pname = \"Microsoft.Win32.Registry\"; version = \"4.0.0\"; hash = \"sha256-M/06F/Z2wTHCh4pZOgtCjUGLD1FJXEJKCmzOeFMl7uo=\"; })\n  (fetchNuGet { pname = \"Microsoft.Win32.SystemEvents\"; version = \"8.0.0\"; hash = \"sha256-UcxurEamYD+Bua0PbPNMYAZaRulMrov8CfbJGIgTaRQ=\"; })\n  (fetchNuGet { pname = \"Moq\"; version = \"4.18.4\"; hash = \"sha256-JOmYlcTJdQOthRxnT0jAD6WG+NVLMmIV2BM9rNhNg3Q=\"; })\n  (fetchNuGet { pname = \"NBitcoin\"; version = \"7.0.46\"; hash = \"sha256-c5KHQ/TYGBTMoKKKo7XYR8r7VTJlaU0ZW6KqWRMjh2Y=\"; })\n  (fetchNuGet { pname = \"NBitcoin.Secp256k1\"; version = \"3.1.0\"; hash = \"sha256-vhp1Rjl//09c8U912Mqfu6/Ip0/ljnZkCkDo9k45dtU=\"; })\n  (fetchNuGet { pname = \"NBitcoin.Secp256k1\"; version = \"3.1.4\"; hash = \"sha256-D/V/vEAqZxAOjn5fPg028QLpkfweDG56N8/dsc80Fz8=\"; })\n  (fetchNuGet { pname = \"NETStandard.Library\"; version = \"1.6.0\"; hash = \"sha256-ExWI1EKDCRishcfAeHVS/RoJphqSqohmJIC/wz3ZtVo=\"; })\n  (fetchNuGet { pname = \"NETStandard.Library\"; version = \"2.0.1\"; hash = \"sha256-s4UiH848a+p2yWwMH+8PaYGnQL2qnY0GmixoeLvkhDQ=\"; })\n  (fetchNuGet { pname = \"NETStandard.Library\"; version = \"2.0.3\"; hash = \"sha256-Prh2RPebz/s8AzHb2sPHg3Jl8s31inv9k+Qxd293ybo=\"; })\n  (fetchNuGet { pname = \"Newtonsoft.Json\"; version = \"10.0.1\"; hash = \"sha256-Gw7dQIsmYfmcR5ASTuMsB8cqaI4g3osw0j+LO1jEzJY=\"; })\n  (fetchNuGet { pname = \"Newtonsoft.Json\"; version = \"13.0.1\"; hash = \"sha256-K2tSVW4n4beRPzPu3rlVaBEMdGvWSv/3Q1fxaDh4Mjo=\"; })\n  (fetchNuGet { pname = \"Newtonsoft.Json\"; version = \"13.0.3\"; hash = \"sha256-hy/BieY4qxBWVVsDqqOPaLy1QobiIapkbrESm6v2PHc=\"; })\n  (fetchNuGet { pname = \"Newtonsoft.Json.Bson\"; version = \"1.0.2\"; hash = \"sha256-ZUj6YFSMZp5CZtXiamw49eZmbp1iYBuNsIKNnjxcRzA=\"; })\n  (fetchNuGet { pname = \"NNostr.Client\"; version = \"0.0.49\"; hash = \"sha256-o0aeqJlWcfKClhizyygWomiHXphErFiFuNzHGjJkb6s=\"; })\n  (fetchNuGet { pname = \"NuGet.Frameworks\"; version = \"4.0.0\"; hash = \"sha256-+DF9CVW4HxvbECOJ7UN2uaZ36zT0PyT632yUyggyWVk=\"; })\n  (fetchNuGet { pname = \"NuGet.Frameworks\"; version = \"6.5.0\"; hash = \"sha256-ElqfN4CcKxT3hP2qvxxObb4mnBlYG89IMxO0Sm5oZ2g=\"; })\n  (fetchNuGet { pname = \"QRackers\"; version = \"1.1.0\"; hash = \"sha256-ssYywDrJTMl2ZIBNyYO/TWBAxOtWJ7hI4UG7SXgsF/E=\"; })\n  (fetchNuGet { pname = \"ReactiveUI\"; version = \"18.3.1\"; hash = \"sha256-1rf4icGRKTR3XIWJpkQJCG7ObRM+72ITB5K+ND1is9M=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Collections\"; version = \"4.3.0\"; hash = \"sha256-4PGZqyWhZ6/HCTF2KddDsbmTTjxs2oW79YfkberDZS8=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Diagnostics.Tracing\"; version = \"4.3.0\"; hash = \"sha256-dsmTLGvt8HqRkDWP8iKVXJCS+akAzENGXKPV18W2RgI=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Globalization\"; version = \"4.3.0\"; hash = \"sha256-PaiITTFI2FfPylTEk7DwzfKeiA/g/aooSU1pDcdwWLU=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.IO\"; version = \"4.3.0\"; hash = \"sha256-vej7ySRhyvM3pYh/ITMdC25ivSd0WLZAaIQbYj/6HVE=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Reflection\"; version = \"4.3.0\"; hash = \"sha256-ns6f++lSA+bi1xXgmW1JkWFb2NaMD+w+YNTfMvyAiQk=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Reflection.Extensions\"; version = \"4.3.0\"; hash = \"sha256-Y2AnhOcJwJVYv7Rp6Jz6ma0fpITFqJW+8rsw106K2X8=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Reflection.Primitives\"; version = \"4.3.0\"; hash = \"sha256-LkPXtiDQM3BcdYkAm5uSNOiz3uF4J45qpxn5aBiqNXQ=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Resources.ResourceManager\"; version = \"4.3.0\"; hash = \"sha256-9EvnmZslLgLLhJ00o5MWaPuJQlbUFcUF8itGQNVkcQ4=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Runtime\"; version = \"4.3.0\"; hash = \"sha256-qwhNXBaJ1DtDkuRacgHwnZmOZ1u9q7N8j0cWOLYOELM=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Runtime.Handles\"; version = \"4.3.0\"; hash = \"sha256-PQRACwnSUuxgVySO1840KvqCC9F8iI9iTzxNW0RcBS4=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Runtime.InteropServices\"; version = \"4.3.0\"; hash = \"sha256-Kaw5PnLYIiqWbsoF3VKJhy7pkpoGsUwn4ZDCKscbbzA=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Text.Encoding\"; version = \"4.3.0\"; hash = \"sha256-Q18B9q26MkWZx68exUfQT30+0PGmpFlDgaF0TnaIGCs=\"; })\n  (fetchNuGet { pname = \"runtime.any.System.Threading.Tasks\"; version = \"4.3.0\"; hash = \"sha256-agdOM0NXupfHbKAQzQT8XgbI9B8hVEh+a/2vqeHctg4=\"; })\n  (fetchNuGet { pname = \"runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-LXUPLX3DJxsU1Pd3UwjO1PO9NM2elNEDXeu2Mu/vNps=\"; })\n  (fetchNuGet { pname = \"runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-qeSqaUI80+lqw5MK4vMpmO0CZaqrmYktwp6L+vQAb0I=\"; })\n  (fetchNuGet { pname = \"runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-SrHqT9wrCBsxILWtaJgGKd6Odmxm8/Mh7Kh0CUkZVzA=\"; })\n  (fetchNuGet { pname = \"runtime.native.System\"; version = \"4.0.0\"; hash = \"sha256-bmaM0ovT4X4aqDJOR255Yda/u3fmHZskU++lMnsy894=\"; })\n  (fetchNuGet { pname = \"runtime.native.System\"; version = \"4.3.0\"; hash = \"sha256-ZBZaodnjvLXATWpXXakFgcy6P+gjhshFXmglrL5xD5Y=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.IO.Compression\"; version = \"4.1.0\"; hash = \"sha256-085JrZxNEwIHdBWKKKFsh1JzpF0AblvrUsz5T8kH4jQ=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.Net.Http\"; version = \"4.0.1\"; hash = \"sha256-5nWnTQrA1T6t9r8MqIiV4yTNu+IH0of2OX1qteoS+8E=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.Net.Security\"; version = \"4.0.1\"; hash = \"sha256-E64W+qCHZGYbhzQOEeToCob/4K8cTg3uOO7ltZG7ZNo=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.Security.Cryptography\"; version = \"4.0.0\"; hash = \"sha256-6Q8eYzC32BbGIiTHoQaE6B3cD81vYQcH5SCswYRSp0w=\"; })\n  (fetchNuGet { pname = \"runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-Jy01KhtcCl2wjMpZWH+X3fhHcVn+SyllWFY8zWlz/6I=\"; })\n  (fetchNuGet { pname = \"runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-wyv00gdlqf8ckxEdV7E+Ql9hJIoPcmYEuyeWb5Oz3mM=\"; })\n  (fetchNuGet { pname = \"runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-zi+b4sCFrA9QBiSGDD7xPV27r3iHGlV99gpyVUjRmc4=\"; })\n  (fetchNuGet { pname = \"runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-gybQU6mPgaWV3rBG2dbH6tT3tBq8mgze3PROdsuWnX0=\"; })\n  (fetchNuGet { pname = \"runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-VsP72GVveWnGUvS/vjOQLv1U80H2K8nZ4fDAmI61Hm4=\"; })\n  (fetchNuGet { pname = \"runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-4yKGa/IrNCKuQ3zaDzILdNPD32bNdy6xr5gdJigyF5g=\"; })\n  (fetchNuGet { pname = \"runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-HmdJhhRsiVoOOCcUvAwdjpMRiyuSwdcgEv2j9hxi+Zc=\"; })\n  (fetchNuGet { pname = \"runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl\"; version = \"4.3.0\"; hash = \"sha256-pVFUKuPPIx0edQKjzRon3zKq8zhzHEzko/lc01V/jdw=\"; })\n  (fetchNuGet { pname = \"runtime.unix.System.Diagnostics.Debug\"; version = \"4.3.0\"; hash = \"sha256-ReoazscfbGH+R6s6jkg5sIEHWNEvjEoHtIsMbpc7+tI=\"; })\n  (fetchNuGet { pname = \"runtime.unix.System.Private.Uri\"; version = \"4.3.0\"; hash = \"sha256-c5tXWhE/fYbJVl9rXs0uHh3pTsg44YD1dJvyOA0WoMs=\"; })\n  (fetchNuGet { pname = \"runtime.unix.System.Runtime.Extensions\"; version = \"4.3.0\"; hash = \"sha256-l8S9gt6dk3qYG6HYonHtdlYtBKyPb29uQ6NDjmrt3V4=\"; })\n  (fetchNuGet { pname = \"ShimSkiaSharp\"; version = \"1.0.0\"; hash = \"sha256-DFpkL3S0EET0Y0TBUNtQI30F9T9R7a5Ppb0ijODPuj0=\"; })\n  (fetchNuGet { pname = \"SkiaSharp\"; version = \"2.88.3\"; hash = \"sha256-WyMAjnQt8ZsuWpGLI89l/f4bHvv+cg7FdTAL7CtJBvs=\"; })\n  (fetchNuGet { pname = \"SkiaSharp\"; version = \"2.88.7\"; hash = \"sha256-Ip3afwTr4QOqtwOUKqK6g/9Ug4dMSebTci5K29Jc3Dg=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.Linux\"; version = \"2.88.7\"; hash = \"sha256-QdQRN1IBjqohmI8U+6WJRPgOsh8a9soN2UvVObs1H1w=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.macOS\"; version = \"2.88.3\"; hash = \"sha256-8G4swiLMr6XS3kjfO/YC1PyoVdfSq7nxZthZZ+KTKqQ=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.macOS\"; version = \"2.88.7\"; hash = \"sha256-WgPldXSqPMm0TrdUWAyjge5rcRhd9G3/Ix/v/2NQvBc=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.WebAssembly\"; version = \"2.88.7\"; hash = \"sha256-oIjFF+Rv+g8AKyNaaVAgnHX3eeP/l8K2sgHs9bRyUMw=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.Win32\"; version = \"2.88.3\"; hash = \"sha256-2PhMTwRHitT13KCKiZltKIFieAvNY4jBmVZ2ndVynA8=\"; })\n  (fetchNuGet { pname = \"SkiaSharp.NativeAssets.Win32\"; version = \"2.88.7\"; hash = \"sha256-+7RxCAr+ne9MZWdXKKpV4ZbHW0k6hLD20ZFWWOCiNYU=\"; })\n  (fetchNuGet { pname = \"Splat\"; version = \"14.4.1\"; hash = \"sha256-i1yzIVpKdFjZMI4J8H970nZCxszklgDitYTEKKz0zA8=\"; })\n  (fetchNuGet { pname = \"SQLitePCLRaw.bundle_e_sqlite3\"; version = \"2.1.6\"; hash = \"sha256-dZD/bZsYXjOu46ZH5Y/wgh0uhHOqIxC+S+0ecKhr718=\"; })\n  (fetchNuGet { pname = \"SQLitePCLRaw.core\"; version = \"2.1.6\"; hash = \"sha256-RxWjm52PdmMV98dgDy0BCpF988+BssRZUgALLv7TH/E=\"; })\n  (fetchNuGet { pname = \"SQLitePCLRaw.lib.e_sqlite3\"; version = \"2.1.6\"; hash = \"sha256-uHt5d+SFUkSd6WD7Tg0J3e8eVoxy/FM/t4PAkc9PJT0=\"; })\n  (fetchNuGet { pname = \"SQLitePCLRaw.provider.e_sqlite3\"; version = \"2.1.6\"; hash = \"sha256-zHc/YZsd72eXlI8ba1tv58HZWUIiyjJaxq2CCP1hQe8=\"; })\n  (fetchNuGet { pname = \"Svg.Custom\"; version = \"1.0.0\"; hash = \"sha256-uYYud7rFWdfHXERew9MdfIP/hRrdRYR64l1F4rF6uy4=\"; })\n  (fetchNuGet { pname = \"Svg.Model\"; version = \"1.0.0\"; hash = \"sha256-J91Y4xuCYCFl57I1eZjLD7N73WA2lbhGbRc/mhlmMns=\"; })\n  (fetchNuGet { pname = \"Swashbuckle.AspNetCore\"; version = \"6.5.0\"; hash = \"sha256-thAX5M8OihCU5Pmht5FzQPR7K+gbia580KnI8i9kwUw=\"; })\n  (fetchNuGet { pname = \"Swashbuckle.AspNetCore.Swagger\"; version = \"6.5.0\"; hash = \"sha256-bKJG6fhLBB5rKoVm0nc4PfecBtDg/r2G1hrZ6Izryug=\"; })\n  (fetchNuGet { pname = \"Swashbuckle.AspNetCore.SwaggerGen\"; version = \"6.5.0\"; hash = \"sha256-A+n8r9bM8UU0ZpzS5pHqa/JOX+cY0jTbfTH7XfwbCUM=\"; })\n  (fetchNuGet { pname = \"Swashbuckle.AspNetCore.SwaggerUI\"; version = \"6.5.0\"; hash = \"sha256-BxYBRvabFUIRkZ67YbUY6djxbLPtmPlAfREeFNg8HZ4=\"; })\n  (fetchNuGet { pname = \"System.AppContext\"; version = \"4.1.0\"; hash = \"sha256-v6YfyfrKmhww+EYHUq6cwYUMj00MQ6SOfJtcGVRlYzs=\"; })\n  (fetchNuGet { pname = \"System.Buffers\"; version = \"4.0.0\"; hash = \"sha256-+YUymoyS0O+xVyF2+LiAdZlMww8nofPN4ja9ylYqRo8=\"; })\n  (fetchNuGet { pname = \"System.Buffers\"; version = \"4.5.1\"; hash = \"sha256-wws90sfi9M7kuCPWkv1CEYMJtCqx9QB/kj0ymlsNaxI=\"; })\n  (fetchNuGet { pname = \"System.Collections\"; version = \"4.0.11\"; hash = \"sha256-puoFMkx4Z55C1XPxNw3np8nzNGjH+G24j43yTIsDRL0=\"; })\n  (fetchNuGet { pname = \"System.Collections\"; version = \"4.3.0\"; hash = \"sha256-afY7VUtD6w/5mYqrce8kQrvDIfS2GXDINDh73IjxJKc=\"; })\n  (fetchNuGet { pname = \"System.Collections.Concurrent\"; version = \"4.0.12\"; hash = \"sha256-zIEM7AB4SyE9u6G8+o+gCLLwkgi6+3rHQVPdn/dEwB8=\"; })\n  (fetchNuGet { pname = \"System.Collections.Immutable\"; version = \"1.2.0\"; hash = \"sha256-FQ3l+ulbLSPhQ0JcQCC4D4SzjTnHsRqcOj56Ywy7pMo=\"; })\n  (fetchNuGet { pname = \"System.Collections.Immutable\"; version = \"1.6.0\"; hash = \"sha256-gnu+8nN48GAd4GRgeB5cAQmW7VnCubL/8h7zO377fd0=\"; })\n  (fetchNuGet { pname = \"System.Collections.Immutable\"; version = \"5.0.0\"; hash = \"sha256-GdwSIjLMM0uVfE56VUSLVNgpW0B//oCeSFj8/hSlbM8=\"; })\n  (fetchNuGet { pname = \"System.Collections.Immutable\"; version = \"7.0.0\"; hash = \"sha256-9an2wbxue2qrtugYES9awshQg+KfJqajhnhs45kQIdk=\"; })\n  (fetchNuGet { pname = \"System.Collections.NonGeneric\"; version = \"4.0.1\"; hash = \"sha256-jdCVXmGOsJ+2F0xAagCkiMZ91SGAm9iOhO2u4ksmKaU=\"; })\n  (fetchNuGet { pname = \"System.Collections.NonGeneric\"; version = \"4.3.0\"; hash = \"sha256-8/yZmD4jjvq7m68SPkJZLBQ79jOTOyT5lyzX4SCYAx8=\"; })\n  (fetchNuGet { pname = \"System.Collections.Specialized\"; version = \"4.3.0\"; hash = \"sha256-QNg0JJNx+zXMQ26MJRPzH7THdtqjrNtGLUgaR1SdvOk=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel\"; version = \"4.0.1\"; hash = \"sha256-X5T36S49q1odsn6wAET6EGNlsxOyd66naMr5T3G9mGw=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel\"; version = \"4.3.0\"; hash = \"sha256-i00uujMO4JEDIEPKLmdLY3QJ6vdSpw6Gh9oOzkFYBiU=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel.Annotations\"; version = \"4.1.0\"; hash = \"sha256-jhvr6zS+iC4OXBkdXr+S8rPy/5nfhZtDVVJiAc0f1VA=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel.Annotations\"; version = \"4.5.0\"; hash = \"sha256-15yE2NoT9vmL9oGCaxHClQR1jLW1j1ef5hHMg55xRso=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel.Primitives\"; version = \"4.3.0\"; hash = \"sha256-IOMJleuIBppmP4ECB3uftbdcgL7CCd56+oAD/Sqrbus=\"; })\n  (fetchNuGet { pname = \"System.ComponentModel.TypeConverter\"; version = \"4.3.0\"; hash = \"sha256-PSDiPYt8PgTdTUBz+GH6lHCaM1YgfObneHnZsc8Fz54=\"; })\n  (fetchNuGet { pname = \"System.Console\"; version = \"4.0.0\"; hash = \"sha256-jtZfT/TpJtLisV/y5Mk3IfCpE79zwhBYXtyGP9jC3Xo=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Contracts\"; version = \"4.0.1\"; hash = \"sha256-Mq2MU+80m+zqhe92JazEIDi4rsgk8MHg3yjNYlObzXg=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Debug\"; version = \"4.0.11\"; hash = \"sha256-P+rSQJVoN6M56jQbs76kZ9G3mAWFdtF27P/RijN8sj4=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Debug\"; version = \"4.3.0\"; hash = \"sha256-fkA79SjPbSeiEcrbbUsb70u9B7wqbsdM9s1LnoKj0gM=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.DiagnosticSource\"; version = \"4.0.0\"; hash = \"sha256-dYh9UoFesuGcHY+ewsI+z2WnNy+bwHPsHQ3t85cbzNg=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.DiagnosticSource\"; version = \"8.0.0\"; hash = \"sha256-+aODaDEQMqla5RYZeq0Lh66j+xkPYxykrVvSCmJQ+Vs=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.EventLog\"; version = \"6.0.0\"; hash = \"sha256-zUXIQtAFKbiUMKCrXzO4mOTD5EUphZzghBYKXprowSM=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.EventLog\"; version = \"8.0.0\"; hash = \"sha256-rt8xc3kddpQY4HEdghlBeOK4gdw5yIj4mcZhAVtk2/Y=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.FileVersionInfo\"; version = \"4.0.0\"; hash = \"sha256-Yy94jPhDXF2QHOF7qTmqKkn1048K9xkKryuBeDzsu+g=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Process\"; version = \"4.1.0\"; hash = \"sha256-OgW6ogQ+oYADYS0PHmwXdhrOKQJpqXlwzSvmfjTLNBg=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.StackTrace\"; version = \"4.0.1\"; hash = \"sha256-gqqCAwpDsca242nli+fejgqwPAuwROv3NoNeOnFXSWA=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Tools\"; version = \"4.0.1\"; hash = \"sha256-vSBqTbmWXylvRa37aWyktym+gOpsvH43mwr6A962k6U=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Tools\"; version = \"4.3.0\"; hash = \"sha256-gVOv1SK6Ape0FQhCVlNOd9cvQKBvMxRX9K0JPVi8w0Y=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.TraceSource\"; version = \"4.0.0\"; hash = \"sha256-cCjdPU7ow91HGf1hBIOLJMQGO6pNmF+N+5/Z38XJh9U=\"; })\n  (fetchNuGet { pname = \"System.Diagnostics.Tracing\"; version = \"4.1.0\"; hash = \"sha256-JA0jJcLbU3zh52ub3zweob2EVHvxOqiC6SCYHrY5WbQ=\"; })\n  (fetchNuGet { pname = \"System.Dynamic.Runtime\"; version = \"4.0.11\"; hash = \"sha256-qWqFVxuXioesVftv2RVJZOnmojUvRjb7cS3Oh3oTit4=\"; })\n  (fetchNuGet { pname = \"System.Dynamic.Runtime\"; version = \"4.3.0\"; hash = \"sha256-k75gjOYimIQtLBD5NDzwwi3ZMUBPRW3jmc3evDMMJbU=\"; })\n  (fetchNuGet { pname = \"System.Globalization\"; version = \"4.0.11\"; hash = \"sha256-rbSgc2PIEc2c2rN6LK3qCREAX3DqA2Nq1WcLrZYsDBw=\"; })\n  (fetchNuGet { pname = \"System.Globalization\"; version = \"4.3.0\"; hash = \"sha256-caL0pRmFSEsaoeZeWN5BTQtGrAtaQPwFi8YOZPZG5rI=\"; })\n  (fetchNuGet { pname = \"System.Globalization.Calendars\"; version = \"4.0.1\"; hash = \"sha256-EJN3LbN+b0O9Dr2eg7kfThCYpne0iJ/H/GIyUTNVYC8=\"; })\n  (fetchNuGet { pname = \"System.Globalization.Extensions\"; version = \"4.0.1\"; hash = \"sha256-zLtkPryJwqTGcJqMC6zoMMvMrT+aAL5GoumjmMtqUEI=\"; })\n  (fetchNuGet { pname = \"System.Globalization.Extensions\"; version = \"4.3.0\"; hash = \"sha256-mmJWA27T0GRVuFP9/sj+4TrR4GJWrzNIk2PDrbr7RQk=\"; })\n  (fetchNuGet { pname = \"System.Interactive.Async\"; version = \"6.0.1\"; hash = \"sha256-4yzkdop+BMlpQ+qz/H7D7LkH1Ekh9n51t9yteHpv/58=\"; })\n  (fetchNuGet { pname = \"System.IO\"; version = \"4.1.0\"; hash = \"sha256-V6oyQFwWb8NvGxAwvzWnhPxy9dKOfj/XBM3tEC5aHrw=\"; })\n  (fetchNuGet { pname = \"System.IO\"; version = \"4.3.0\"; hash = \"sha256-ruynQHekFP5wPrDiVyhNiRIXeZ/I9NpjK5pU+HPDiRY=\"; })\n  (fetchNuGet { pname = \"System.IO.Compression\"; version = \"4.1.0\"; hash = \"sha256-UT4KEfJNZOk7b4X0AqLFUsqfHu6myVH/BhbRKYc+1Uc=\"; })\n  (fetchNuGet { pname = \"System.IO.Compression.ZipFile\"; version = \"4.0.1\"; hash = \"sha256-An0Twb9JODl/nuVm6MR0kJ3aj4WxGpI/1/vVp5b94kA=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem\"; version = \"4.0.1\"; hash = \"sha256-4VKXFgcGYCTWVXjAlniAVq0dO3o5s8KHylg2wg2/7k0=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem\"; version = \"4.3.0\"; hash = \"sha256-vNIYnvlayuVj0WfRfYKpDrhDptlhp1pN8CYmlVd2TXw=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem.Primitives\"; version = \"4.0.1\"; hash = \"sha256-IpigKMomqb6pmYWkrlf0ZdpILtRluX2cX5sOKVW0Feg=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem.Primitives\"; version = \"4.3.0\"; hash = \"sha256-LMnfg8Vwavs9cMnq9nNH8IWtAtSfk0/Fy4s4Rt9r1kg=\"; })\n  (fetchNuGet { pname = \"System.IO.FileSystem.Watcher\"; version = \"4.0.0\"; hash = \"sha256-OcLhbiHvn453sJsZBHe6RmtDlCaaarcqRB439HGU7mU=\"; })\n  (fetchNuGet { pname = \"System.IO.MemoryMappedFiles\"; version = \"4.0.0\"; hash = \"sha256-1VQa8FoMUNAsja31OvOn7ungif+IPusAe9YcR+kRF6o=\"; })\n  (fetchNuGet { pname = \"System.IO.Pipelines\"; version = \"6.0.0\"; hash = \"sha256-xfjF4UqTMJpf8KsBWUyJlJkzPTOO/H5MW023yTYNQSA=\"; })\n  (fetchNuGet { pname = \"System.IO.Pipelines\"; version = \"8.0.0\"; hash = \"sha256-LdpB1s4vQzsOODaxiKstLks57X9DTD5D6cPx8DE1wwE=\"; })\n  (fetchNuGet { pname = \"System.IO.Pipes\"; version = \"4.0.0\"; hash = \"sha256-6qMAD6DCZ5c1wswLWi1msqwu8GwI8un1RzjpUhzbrjs=\"; })\n  (fetchNuGet { pname = \"System.IO.UnmanagedMemoryStream\"; version = \"4.0.1\"; hash = \"sha256-Sx60QjHjvXQMAL7O4aN81321gu13LE0XzCRtt7hFTwQ=\"; })\n  (fetchNuGet { pname = \"System.Linq\"; version = \"4.1.0\"; hash = \"sha256-ZQpFtYw5N1F1aX0jUK3Tw+XvM5tnlnshkTCNtfVA794=\"; })\n  (fetchNuGet { pname = \"System.Linq\"; version = \"4.3.0\"; hash = \"sha256-R5uiSL3l6a3XrXSSL6jz+q/PcyVQzEAByiuXZNSqD/A=\"; })\n  (fetchNuGet { pname = \"System.Linq.Async\"; version = \"6.0.1\"; hash = \"sha256-uH5fZhcyQVtnsFc6GTUaRRrAQm05v5euJyWCXSFSOYI=\"; })\n  (fetchNuGet { pname = \"System.Linq.Expressions\"; version = \"4.1.0\"; hash = \"sha256-7zqB+FXgkvhtlBzpcZyd81xczWP0D3uWssyAGw3t7b4=\"; })\n  (fetchNuGet { pname = \"System.Linq.Expressions\"; version = \"4.3.0\"; hash = \"sha256-+3pvhZY7rip8HCbfdULzjlC9FPZFpYoQxhkcuFm2wk8=\"; })\n  (fetchNuGet { pname = \"System.Linq.Parallel\"; version = \"4.0.1\"; hash = \"sha256-TV1F3KYFipPmPnWFjX6hOZQNFsG2m729EdgPSFzqY0Q=\"; })\n  (fetchNuGet { pname = \"System.Linq.Queryable\"; version = \"4.0.1\"; hash = \"sha256-XOFRO+lyoxsWtIUJfg5JCqv9Gx35ASOc94WIR8ZMVoY=\"; })\n  (fetchNuGet { pname = \"System.Memory\"; version = \"4.5.3\"; hash = \"sha256-Cvl7RbRbRu9qKzeRBWjavUkseT2jhZBUWV1SPipUWFk=\"; })\n  (fetchNuGet { pname = \"System.Memory\"; version = \"4.5.4\"; hash = \"sha256-3sCEfzO4gj5CYGctl9ZXQRRhwAraMQfse7yzKoRe65E=\"; })\n  (fetchNuGet { pname = \"System.Memory\"; version = \"4.5.5\"; hash = \"sha256-EPQ9o1Kin7KzGI5O3U3PUQAZTItSbk9h/i4rViN3WiI=\"; })\n  (fetchNuGet { pname = \"System.Net.Http\"; version = \"4.1.0\"; hash = \"sha256-y6PnGuObJvOkhl9CXNFJQcV3SXuEz5yRLOCxGGTEucQ=\"; })\n  (fetchNuGet { pname = \"System.Net.NameResolution\"; version = \"4.0.0\"; hash = \"sha256-EAO67qEDqrtxEa+J3xccA5/lgCJ0PiRU9DYZsO++QzY=\"; })\n  (fetchNuGet { pname = \"System.Net.Primitives\"; version = \"4.0.11\"; hash = \"sha256-2YSijNhCdw/ZU2yfH7vE+ReA8pgxRCXPnWr+ab36v4M=\"; })\n  (fetchNuGet { pname = \"System.Net.Requests\"; version = \"4.0.11\"; hash = \"sha256-MLXxaUhHQC3pId/6r4q0EF37CIExt0+4Na8ZpUtRs44=\"; })\n  (fetchNuGet { pname = \"System.Net.Security\"; version = \"4.0.0\"; hash = \"sha256-65Vqr/B5B336KEW69aM95+f7s5u2Q7/OiJmBarV2fnk=\"; })\n  (fetchNuGet { pname = \"System.Net.Sockets\"; version = \"4.1.0\"; hash = \"sha256-muK7oXIX7ykqhXskuUt0KX6Hzg5VogJhUS0JiOB2BY0=\"; })\n  (fetchNuGet { pname = \"System.Net.WebHeaderCollection\"; version = \"4.0.1\"; hash = \"sha256-uJSV6kmL+V/9/ot1LhHXGCd8Ndcu6zk+AJ8wgGS/fYE=\"; })\n  (fetchNuGet { pname = \"System.Numerics.Vectors\"; version = \"4.1.1\"; hash = \"sha256-Kv4FrStml5+X7hGDCLhJJaIwJDvdJdYMBfcCcOjNf/Y=\"; })\n  (fetchNuGet { pname = \"System.Numerics.Vectors\"; version = \"4.4.0\"; hash = \"sha256-auXQK2flL/JpnB/rEcAcUm4vYMCYMEMiWOCAlIaqu2U=\"; })\n  (fetchNuGet { pname = \"System.Numerics.Vectors\"; version = \"4.5.0\"; hash = \"sha256-qdSTIFgf2htPS+YhLGjAGiLN8igCYJnCCo6r78+Q+c8=\"; })\n  (fetchNuGet { pname = \"System.ObjectModel\"; version = \"4.0.12\"; hash = \"sha256-MudZ/KYcvYsn2cST3EE049mLikrNkmE7QoUoYKKby+s=\"; })\n  (fetchNuGet { pname = \"System.ObjectModel\"; version = \"4.3.0\"; hash = \"sha256-gtmRkWP2Kwr3nHtDh0yYtce38z1wrGzb6fjm4v8wN6Q=\"; })\n  (fetchNuGet { pname = \"System.Private.DataContractSerialization\"; version = \"4.1.1\"; hash = \"sha256-OaE+ZcEfkpIkbdMOMAMiJa9vgiVP25FGuFrf+N/mafY=\"; })\n  (fetchNuGet { pname = \"System.Private.Uri\"; version = \"4.3.0\"; hash = \"sha256-fVfgcoP4AVN1E5wHZbKBIOPYZ/xBeSIdsNF+bdukIRM=\"; })\n  (fetchNuGet { pname = \"System.Private.Uri\"; version = \"4.3.2\"; hash = \"sha256-jB2+W3tTQ6D9XHy5sEFMAazIe1fu2jrENUO0cb48OgU=\"; })\n  (fetchNuGet { pname = \"System.Reactive\"; version = \"5.0.0\"; hash = \"sha256-M5Z8pw8rVb8ilbnTdaOptzk5VFd5DlKa7zzCpuytTtE=\"; })\n  (fetchNuGet { pname = \"System.Reactive\"; version = \"6.0.0\"; hash = \"sha256-hXB18OsiUHSCmRF3unAfdUEcbXVbG6/nZxcyz13oe9Y=\"; })\n  (fetchNuGet { pname = \"System.Reflection\"; version = \"4.1.0\"; hash = \"sha256-idZHGH2Yl/hha1CM4VzLhsaR8Ljo/rV7TYe7mwRJSMs=\"; })\n  (fetchNuGet { pname = \"System.Reflection\"; version = \"4.3.0\"; hash = \"sha256-NQSZRpZLvtPWDlvmMIdGxcVuyUnw92ZURo0hXsEshXY=\"; })\n  (fetchNuGet { pname = \"System.Reflection.DispatchProxy\"; version = \"4.0.1\"; hash = \"sha256-GdjA81UywW1yeAyNi+MR5agmOXl859GrWwiOui2jT9U=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit\"; version = \"4.0.1\"; hash = \"sha256-F1MvYoQWHCY89/O4JBwswogitqVvKuVfILFqA7dmuHk=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit\"; version = \"4.3.0\"; hash = \"sha256-5LhkDmhy2FkSxulXR+bsTtMzdU3VyyuZzsxp7/DwyIU=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit.ILGeneration\"; version = \"4.0.1\"; hash = \"sha256-YG+eJBG5P+5adsHiw/lhJwvREnvdHw6CJyS8ZV4Ujd0=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit.ILGeneration\"; version = \"4.3.0\"; hash = \"sha256-mKRknEHNls4gkRwrEgi39B+vSaAz/Gt3IALtS98xNnA=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit.Lightweight\"; version = \"4.0.1\"; hash = \"sha256-uVvNOnL64CPqsgZP2OLqNmxdkZl6Q0fTmKmv9gcBi+g=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Emit.Lightweight\"; version = \"4.3.0\"; hash = \"sha256-rKx4a9yZKcajloSZHr4CKTVJ6Vjh95ni+zszPxWjh2I=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Extensions\"; version = \"4.0.1\"; hash = \"sha256-NsfmzM9G/sN3H8X2cdnheTGRsh7zbRzvegnjDzDH/FQ=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Extensions\"; version = \"4.3.0\"; hash = \"sha256-mMOCYzUenjd4rWIfq7zIX9PFYk/daUyF0A8l1hbydAk=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Metadata\"; version = \"1.3.0\"; hash = \"sha256-a/RQr++mSsziWaOTknicfIQX/zJrwPFExfhK6PM0tfg=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Metadata\"; version = \"1.6.0\"; hash = \"sha256-JJfgaPav7UfEh4yRAQdGhLZF1brr0tUWPl6qmfNWq/E=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Metadata\"; version = \"5.0.0\"; hash = \"sha256-Wo+MiqhcP9dQ6NuFGrQTw6hpbJORFwp+TBNTq2yhGp8=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Metadata\"; version = \"7.0.0\"; hash = \"sha256-GwAKQhkhPBYTqmRdG9c9taqrKSKDwyUgOEhWLKxWNPI=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Primitives\"; version = \"4.0.1\"; hash = \"sha256-SFSfpWEyCBMAOerrMCOiKnpT+UAWTvRcmoRquJR6Vq0=\"; })\n  (fetchNuGet { pname = \"System.Reflection.Primitives\"; version = \"4.3.0\"; hash = \"sha256-5ogwWB4vlQTl3jjk1xjniG2ozbFIjZTL9ug0usZQuBM=\"; })\n  (fetchNuGet { pname = \"System.Reflection.TypeExtensions\"; version = \"4.1.0\"; hash = \"sha256-R0YZowmFda+xzKNR4kKg7neFoE30KfZwp/IwfRSKVK4=\"; })\n  (fetchNuGet { pname = \"System.Reflection.TypeExtensions\"; version = \"4.3.0\"; hash = \"sha256-4U4/XNQAnddgQIHIJq3P2T80hN0oPdU2uCeghsDTWng=\"; })\n  (fetchNuGet { pname = \"System.Resources.Reader\"; version = \"4.0.0\"; hash = \"sha256-NOax26EYc/L4bfedL2a33fg4sFXVkBwzVTQ41saJTsk=\"; })\n  (fetchNuGet { pname = \"System.Resources.ResourceManager\"; version = \"4.0.1\"; hash = \"sha256-cZ2/3/fczLjEpn6j3xkgQV9ouOVjy4Kisgw5xWw9kSw=\"; })\n  (fetchNuGet { pname = \"System.Resources.ResourceManager\"; version = \"4.3.0\"; hash = \"sha256-idiOD93xbbrbwwSnD4mORA9RYi/D/U48eRUsn/WnWGo=\"; })\n  (fetchNuGet { pname = \"System.Resources.Writer\"; version = \"4.0.0\"; hash = \"sha256-u9LxSndJMc3H/8GoelW6iyn7erRXy3YEvZs1OVEQFx4=\"; })\n  (fetchNuGet { pname = \"System.Runtime\"; version = \"4.1.0\"; hash = \"sha256-FViNGM/4oWtlP6w0JC0vJU+k9efLKZ+yaXrnEeabDQo=\"; })\n  (fetchNuGet { pname = \"System.Runtime\"; version = \"4.3.0\"; hash = \"sha256-51813WXpBIsuA6fUtE5XaRQjcWdQ2/lmEokJt97u0Rg=\"; })\n  (fetchNuGet { pname = \"System.Runtime\"; version = \"4.3.1\"; hash = \"sha256-R9T68AzS1PJJ7v6ARz9vo88pKL1dWqLOANg4pkQjkA0=\"; })\n  (fetchNuGet { pname = \"System.Runtime.CompilerServices.Unsafe\"; version = \"4.4.0\"; hash = \"sha256-SeTI4+yVRO2SmAKgOrMni4070OD+Oo8L1YiEVeKDyig=\"; })\n  (fetchNuGet { pname = \"System.Runtime.CompilerServices.Unsafe\"; version = \"4.7.1\"; hash = \"sha256-UvyoDV8O0oY3HPG1GbA56YVdvwTGEfjYR5gW1O7IK4U=\"; })\n  (fetchNuGet { pname = \"System.Runtime.CompilerServices.Unsafe\"; version = \"6.0.0\"; hash = \"sha256-bEG1PnDp7uKYz/OgLOWs3RWwQSVYm+AnPwVmAmcgp2I=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Extensions\"; version = \"4.1.0\"; hash = \"sha256-X7DZ5CbPY7jHs20YZ7bmcXs9B5Mxptu/HnBUvUnNhGc=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Extensions\"; version = \"4.3.0\"; hash = \"sha256-wLDHmozr84v1W2zYCWYxxj0FR0JDYHSVRaRuDm0bd/o=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Handles\"; version = \"4.0.1\"; hash = \"sha256-j2QgVO9ZOjv7D1het98CoFpjoYgxjupuIhuBUmLLH7w=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Handles\"; version = \"4.3.0\"; hash = \"sha256-KJ5aXoGpB56Y6+iepBkdpx/AfaJDAitx4vrkLqR7gms=\"; })\n  (fetchNuGet { pname = \"System.Runtime.InteropServices\"; version = \"4.1.0\"; hash = \"sha256-QceAYlJvkPRJc/+5jR+wQpNNI3aqGySWWSO30e/FfQY=\"; })\n  (fetchNuGet { pname = \"System.Runtime.InteropServices\"; version = \"4.3.0\"; hash = \"sha256-8sDH+WUJfCR+7e4nfpftj/+lstEiZixWUBueR2zmHgI=\"; })\n  (fetchNuGet { pname = \"System.Runtime.InteropServices.RuntimeInformation\"; version = \"4.0.0\"; hash = \"sha256-5j53amb76A3SPiE3B0llT2XPx058+CgE7OXL4bLalT4=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Loader\"; version = \"4.0.0\"; hash = \"sha256-gE5/ehU3Qq5phhSxGuPmSv1DFVQeiyl1/+YyrO+I7lI=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Numerics\"; version = \"4.0.1\"; hash = \"sha256-1pJt5ZGxLPTX1mjOi8qZPXyyOMkYV0NstoUCv91HYPg=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Numerics\"; version = \"4.3.0\"; hash = \"sha256-P5jHCgMbgFMYiONvzmaKFeOqcAIDPu/U8bOVrNPYKqc=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Serialization.Formatters\"; version = \"4.3.0\"; hash = \"sha256-Feic7MGKVG4imh7kpLkPHmApQzYjq7SxHnazh2wZkoQ=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Serialization.Primitives\"; version = \"4.1.1\"; hash = \"sha256-80B05oxJbPLGq2pGOSl6NlZvintX9A1CNpna2aN0WRA=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Serialization.Primitives\"; version = \"4.3.0\"; hash = \"sha256-zu5m1M9usend+i9sbuD6Xbizdo8Z6N5PEF9DAtEVewc=\"; })\n  (fetchNuGet { pname = \"System.Runtime.Serialization.Xml\"; version = \"4.1.1\"; hash = \"sha256-Mx/8hiqvp1E4I6ysJC3U8D2B9qhRQcVvEOivV6w65IQ=\"; })\n  (fetchNuGet { pname = \"System.Security.Claims\"; version = \"4.0.1\"; hash = \"sha256-xqI0HHahNAd9g3jqgnLKH4P/pIueef6cy3qvRDQFvA0=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Algorithms\"; version = \"4.2.0\"; hash = \"sha256-BelNIpEyToEp/VYKnje/q1P7KNEpQNtOzGPU18pLGpE=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Cng\"; version = \"4.2.0\"; hash = \"sha256-7F+m3HnmBsgE4xWF8FeCGlaEgQM3drqA6HEaQr6MEoU=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Csp\"; version = \"4.0.0\"; hash = \"sha256-WHyR6vVK3zaT4De7jgQFUar1P5fiX9ECwiVkJDFFm7M=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Encoding\"; version = \"4.0.0\"; hash = \"sha256-ZO7ha39J5uHkIF2RoEKv/bW/bLbVvYMO4+rWyYsKHik=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.OpenSsl\"; version = \"4.0.0\"; hash = \"sha256-mLijAozynzjiOMyh2P5BHcfVq3Ovd0T/phG08SIbXZs=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.Primitives\"; version = \"4.0.0\"; hash = \"sha256-sEdPftfTxQd/8DpdpqUZC2XWC0SjVCPqAkEleLl17EQ=\"; })\n  (fetchNuGet { pname = \"System.Security.Cryptography.X509Certificates\"; version = \"4.1.0\"; hash = \"sha256-sBUUhJP+yYDXvcjNMKqNpn8yzGUpVABwK9vVUvYKjzI=\"; })\n  (fetchNuGet { pname = \"System.Security.Principal\"; version = \"4.0.1\"; hash = \"sha256-9wBgPnJfFOtrhKZ7wDXZ4q12GklQ49Ka02/9v7Frf9k=\"; })\n  (fetchNuGet { pname = \"System.Security.Principal.Windows\"; version = \"4.0.0\"; hash = \"sha256-38wEUCB889Mpm4WgRFEQBB+4HtE0X0wu+knrDyJie7Q=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding\"; version = \"4.0.11\"; hash = \"sha256-PEailOvG05CVgPTyKLtpAgRydlSHmtd5K0Y8GSHY2Lc=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding\"; version = \"4.3.0\"; hash = \"sha256-GctHVGLZAa/rqkBNhsBGnsiWdKyv6VDubYpGkuOkBLg=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.CodePages\"; version = \"4.0.1\"; hash = \"sha256-wxtwWQSTv5tuFP79KhUAhaL6bL4d8lSzSWkCn9aolwM=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.CodePages\"; version = \"4.5.1\"; hash = \"sha256-PIhkv59IXjyiuefdhKxS9hQfEwO9YWRuNudpo53HQfw=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.CodePages\"; version = \"7.0.0\"; hash = \"sha256-eCKTVwumD051ZEcoJcDVRGnIGAsEvKpfH3ydKluHxmo=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.Extensions\"; version = \"4.0.11\"; hash = \"sha256-+kf7J3dEhgCbnCM5vHYlsTm5/R/Ud0Jr6elpHm922iI=\"; })\n  (fetchNuGet { pname = \"System.Text.Encoding.Extensions\"; version = \"4.3.0\"; hash = \"sha256-vufHXg8QAKxHlujPHHcrtGwAqFmsCD6HKjfDAiHyAYc=\"; })\n  (fetchNuGet { pname = \"System.Text.Encodings.Web\"; version = \"8.0.0\"; hash = \"sha256-IUQkQkV9po1LC0QsqrilqwNzPvnc+4eVvq+hCvq8fvE=\"; })\n  (fetchNuGet { pname = \"System.Text.Json\"; version = \"8.0.0\"; hash = \"sha256-XFcCHMW1u2/WujlWNHaIWkbW1wn8W4kI0QdrwPtWmow=\"; })\n  (fetchNuGet { pname = \"System.Text.Json\"; version = \"8.0.5\"; hash = \"sha256-yKxo54w5odWT6nPruUVsaX53oPRe+gKzGvLnnxtwP68=\"; })\n  (fetchNuGet { pname = \"System.Text.RegularExpressions\"; version = \"4.1.0\"; hash = \"sha256-x6OQN6MCN7S0fJ6EFTfv4rczdUWjwuWE9QQ0P6fbh9c=\"; })\n  (fetchNuGet { pname = \"System.Text.RegularExpressions\"; version = \"4.3.0\"; hash = \"sha256-VLCk1D1kcN2wbAe3d0YQM/PqCsPHOuqlBY1yd2Yo+K0=\"; })\n  (fetchNuGet { pname = \"System.Threading\"; version = \"4.0.11\"; hash = \"sha256-mob1Zv3qLQhQ1/xOLXZmYqpniNUMCfn02n8ZkaAhqac=\"; })\n  (fetchNuGet { pname = \"System.Threading\"; version = \"4.3.0\"; hash = \"sha256-ZDQ3dR4pzVwmaqBg4hacZaVenQ/3yAF/uV7BXZXjiWc=\"; })\n  (fetchNuGet { pname = \"System.Threading.Channels\"; version = \"8.0.0\"; hash = \"sha256-c5TYoLNXDLroLIPnlfyMHk7nZ70QAckc/c7V199YChg=\"; })\n  (fetchNuGet { pname = \"System.Threading.Overlapped\"; version = \"4.0.1\"; hash = \"sha256-CAWZlavcuBQHs+kaSX9CmkpHF7wC8rFrug3XPb5KJzo=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks\"; version = \"4.0.11\"; hash = \"sha256-5SLxzFg1df6bTm2t09xeI01wa5qQglqUwwJNlQPJIVs=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks\"; version = \"4.3.0\"; hash = \"sha256-Z5rXfJ1EXp3G32IKZGiZ6koMjRu0n8C1NGrwpdIen4w=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Dataflow\"; version = \"4.6.0\"; hash = \"sha256-YYrT3GRzVBdendxt8FUDCnOBJi0nw/CJ9VrzcPJWLSg=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Extensions\"; version = \"4.0.0\"; hash = \"sha256-+YdcPkMhZhRbMZHnfsDwpNbUkr31X7pQFGxXYcAPZbE=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Extensions\"; version = \"4.3.0\"; hash = \"sha256-X2hQ5j+fxcmnm88Le/kSavjiGOmkcumBGTZKBLvorPc=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Extensions\"; version = \"4.5.4\"; hash = \"sha256-owSpY8wHlsUXn5xrfYAiu847L6fAKethlvYx97Ri1ng=\"; })\n  (fetchNuGet { pname = \"System.Threading.Tasks.Parallel\"; version = \"4.0.1\"; hash = \"sha256-5VyRZ97Fug4reK/cQ6wsCrJ5jH53aGu1a4ZkKMZrnIQ=\"; })\n  (fetchNuGet { pname = \"System.Threading.Thread\"; version = \"4.0.0\"; hash = \"sha256-7EtSJuKqcW107FYA5Ko9NFXEWUPIzNDtlfKaQV2pvb8=\"; })\n  (fetchNuGet { pname = \"System.Threading.ThreadPool\"; version = \"4.0.10\"; hash = \"sha256-/fowWjM/0ZZFC1Rwu0i5N71iRxV2JOd3jQV2Jn0wuTk=\"; })\n  (fetchNuGet { pname = \"System.Threading.Timer\"; version = \"4.0.1\"; hash = \"sha256-5lU6zt1O9JDSPr2KAHw4BYgysHnt0yyZrMNa5IIjxZY=\"; })\n  (fetchNuGet { pname = \"System.ValueTuple\"; version = \"4.5.0\"; hash = \"sha256-niH6l2fU52vAzuBlwdQMw0OEoRS/7E1w5smBFoqSaAI=\"; })\n  (fetchNuGet { pname = \"System.Xml.ReaderWriter\"; version = \"4.0.11\"; hash = \"sha256-haZAFFQ9Sl2DhfvEbdx2YRqKEoxNMU5STaqpMmXw0zA=\"; })\n  (fetchNuGet { pname = \"System.Xml.ReaderWriter\"; version = \"4.3.0\"; hash = \"sha256-QQ8KgU0lu4F5Unh+TbechO//zaAGZ4MfgvW72Cn1hzA=\"; })\n  (fetchNuGet { pname = \"System.Xml.XDocument\"; version = \"4.0.11\"; hash = \"sha256-KPz1kxe0RUBM+aoktJ/f9p51GudMERU8Pmwm//HdlFg=\"; })\n  (fetchNuGet { pname = \"System.Xml.XDocument\"; version = \"4.3.0\"; hash = \"sha256-rWtdcmcuElNOSzCehflyKwHkDRpiOhJJs8CeQ0l1CCI=\"; })\n  (fetchNuGet { pname = \"System.Xml.XmlDocument\"; version = \"4.0.1\"; hash = \"sha256-gdoFrPo54v1LjkBF79f8EvtltVVjHz9ZI9kc5ve0GkY=\"; })\n  (fetchNuGet { pname = \"System.Xml.XmlDocument\"; version = \"4.3.0\"; hash = \"sha256-kbuV4Y7rVJkfMp2Kgoi8Zvdatm9CZNmlKB3GZgANvy4=\"; })\n  (fetchNuGet { pname = \"System.Xml.XmlSerializer\"; version = \"4.0.11\"; hash = \"sha256-v6x4d6W18dijG5cDqQmVHdtWRf6Y4OkdBolT3d5g3wY=\"; })\n  (fetchNuGet { pname = \"System.Xml.XPath\"; version = \"4.0.1\"; hash = \"sha256-lQCoK2M51SGRuGjfiuIW26Y2goABY2RLE6cZ4816WDo=\"; })\n  (fetchNuGet { pname = \"System.Xml.XPath.XDocument\"; version = \"4.0.1\"; hash = \"sha256-H/zyMMB1YB8vd+StYJr99KLqWmSHhaP7RHDLRcFhzbo=\"; })\n  (fetchNuGet { pname = \"System.Xml.XPath.XmlDocument\"; version = \"4.0.1\"; hash = \"sha256-bK9AfAYrdSipdRbmo8Rk7394ku92UFNe2TEQF5+k/lA=\"; })\n  (fetchNuGet { pname = \"Tmds.DBus.Protocol\"; version = \"0.15.0\"; hash = \"sha256-4gk2vXDjKFaBh82gTkwg3c/5GRjiH+bvM5elfDSbKTU=\"; })\n  (fetchNuGet { pname = \"WabiSabi\"; version = \"1.0.1.2\"; hash = \"sha256-Gx+tuXraMABak8s0SeofbXpNLVfTnxz4At4+HejnQeU=\"; })\n  (fetchNuGet { pname = \"xunit\"; version = \"2.6.6\"; hash = \"sha256-uuTcjtXrMiTTMsCnyG5vBEN94zZyJVGzJAV7yjxIggg=\"; })\n  (fetchNuGet { pname = \"xunit.abstractions\"; version = \"2.0.2\"; hash = \"sha256-w5APCW7suBdoDOmQqm/8Gq6+Sk88JcTR09zjmj9s17E=\"; })\n  (fetchNuGet { pname = \"xunit.abstractions\"; version = \"2.0.3\"; hash = \"sha256-0D1y/C34iARI96gb3bAOG8tcGPMjx+fMabTPpydGlAM=\"; })\n  (fetchNuGet { pname = \"xunit.analyzers\"; version = \"1.10.0\"; hash = \"sha256-TmH5jen7Y90lpM6c18DGsMbUoXKq2I9Clqsu0m9fmSw=\"; })\n  (fetchNuGet { pname = \"xunit.assert\"; version = \"2.6.6\"; hash = \"sha256-ZbUViqWlExgASGARoQzSbAt0HWfQOSgyGnu1T5ZJd+Y=\"; })\n  (fetchNuGet { pname = \"xunit.core\"; version = \"2.4.0\"; hash = \"sha256-dt59aoFjpqlbcPFGwPrzOSEBSPIn33tLcLraK8xEntE=\"; })\n  (fetchNuGet { pname = \"xunit.core\"; version = \"2.6.6\"; hash = \"sha256-lt5/d8CE1I1MPqQ/NKaWEV6ICGjkWID/xDnvmjUpInY=\"; })\n  (fetchNuGet { pname = \"xunit.extensibility.core\"; version = \"2.4.0\"; hash = \"sha256-LbuXEcEJjGn3L6FCbC119+MY/QLvfLlGkCeAsCsZqGE=\"; })\n  (fetchNuGet { pname = \"xunit.extensibility.core\"; version = \"2.6.6\"; hash = \"sha256-gGZxPQNghCPFvbijnIrSt17iuxwImHvWEHtNVFY4HDk=\"; })\n  (fetchNuGet { pname = \"xunit.extensibility.execution\"; version = \"2.4.0\"; hash = \"sha256-chRJEazwq93yhVONlbtTI1znqYy0gdAoQajPRnhM/i4=\"; })\n  (fetchNuGet { pname = \"xunit.extensibility.execution\"; version = \"2.6.6\"; hash = \"sha256-5Mvv9Nu+pCwZz4CIZX1l+yo6S6mEGIWPaOTyv7srSVg=\"; })\n  (fetchNuGet { pname = \"xunit.runner.visualstudio\"; version = \"2.5.6\"; hash = \"sha256-CLlPdVfUk7Uw/cjOduQfPyA8d5+l1hCjFzf+snw11M4=\"; })\n]\n"
        },
        {
          "name": "exclusion.dic",
          "type": "blob",
          "size": 2.4677734375,
          "content": "# Words from URIs (remove/ignore once the spell checker allows it)\ncecefcc\ndotnet\nmicrosoft\nfrostwire\nmediawiki\nbips\nmurch\nerhardt\ncoinselection\n\n# Non-Words\nxffffffff\nNmæo\nufffd\npczvf\nfced\nebcdc\ndcfd\nfeea\neffffffff\nadfacaab\nedcaeba\nafca\n\n# Words\ncoinjoin\ncoinjoins\ncoinjoining\nmempool\nAsync\nWabi\nSabi\nAlices\nalice\nVsize\nvsizes\nNotifier\nUtxo\ngithub\nalices\nPrevout\nsegwit\nSegwit\njson\ntxid\ncoinbase\npubkey\nvout\nscripthash\npubkeyhash\nmultisig\nnulldata\nkeyhash\npreviousblockhash\nanonset\nanonsets\nsatoshi\nsatoshis\nscriptpubkey\nroundings\nasync\nwpkh\nsats\nargs\nwassabee\nMetaco\nCirc\nTrezor\ngitweb\ntorproject\ntorspec\nColdcard\nxpub\nreindexed\nBuiltin\nbtcpayserver\nbtcpay\nissuecomment\njulio\nnotifier\ninit\nreorged\nnavigatable\nConf\nutxo\nvsize\nCscore\ncscores\nwabi\ndoesnt\nblahblahblah\nFunc\nPleb\nSignalled\ntrezor\nvbyte\nlinq\nGraphviz\nscriptpubkeys\ntxout\nfontcolor\ndeserialize\nietf\nrpce\nprev\nutxos\nZpub\npsbt\nAuth\ntxids\nchainwork\nmediantime\ndesc\naddr\nprevout\nlocktime\nmerkleroot\nstrippedsize\ndenom\nDenoms\nnopara\npleb\nlontivero\nipynb\nstackoverflow\nunix\ntypeof\nsegwittaproot\nestimatesmartfee\nnaive\ndenoms\nfulls\nchaumian\noffchain\nGuid\nunconfirmation\nlistunspentcoins\nlistcoins\ncreatewallet\ngetwalletinfo\ngetnewaddress\ngetstatus\ngethistory\nlistkeys\nstartcoinjoin\nstartcoinjoinsweep\nstopcoinjoin\nselectwallet\nUserfacing\nserializer\nregtest\nnewtonsoft\nanonscore\nwasabisig\nprivkey\nlinux\ndigicert\ndist\nsigntool\nclearsign\nalgo\ncdelivery\nbitcoind\nchmod\nsudo\nhicolor\nwasabiwallet\nzksnacks\npolicykit\npayjoin\ndpkg\nutils\ndebian\nsomethingyoudontunderstand\nsomethingelseyoudontget\nplist\nspctl\nicns\nvolname\nsrcfolder\nxcrun\naltool\nxcrum\ncodesign\nxcode\nxargs\nntip\nhdiutil\nhdutil\nsqlite\nSqlite\nextpubkey\nMajord\nBacken\nAwaiter\nrpcuser\nrpcpassword\nrpccookiefile\nrpcbind\nrpcport\nwhitebind\ntestnet\nEndpointing\nptcv\ndatadir\nprinttoconsole\nfeerate\nmempool\nmaxmempool\nmempoolminfee\nminrelaytxfee\nresp\nrpcworkqueue\ntxns\nmissingorspent\nParams\nconf\ncookiefile\nauth\nrpcallowip\nsoftwareexpiry\ntxindex\ndisablewallet\nmempoolreplacement\nfallbackfee\nlistenonion\ndnsseed\nfixedseeds\nupnp\nnatpmp\npersistmempool\nrpcthreads\nblockstream\nGolomb\nbcinfo\npbcinfo\nDeserialized\ntaprootextpubkey\nrecompute\nsayajin\nhashset\nenum\nusings\nclearnet\nsyncer\nbackend's\nCpfp\nwritelog\nsubstractasync\njsonrpc\nXunit\nbitcoind\ndatadir\ntestnet\nconf\nwwwroot\nColdcard\nTrezor\nUtxos\nsubstate\nIsnt\njsonifyer\ntxin\nSchnorr\nRkey\nRpub\nDeserializes\nNonces\nDont\nrpubkey\nUnblind\nsplitted\nonlybinaries\ngeneratekeys\nappleid\nwassabeed\nhwi'\nbitcoind'\noptin\ngetfeerates\nMiddlewares\nunregistration\nlegaldocuments\nupsert\ntxid\nTxids\n"
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 0.5556640625,
          "content": "{\n  \"nodes\": {\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1728538411,\n        \"narHash\": \"sha256-f0SBJz1eZ2yOuKUr5CA9BHULGXVSn6miBuUWdTyhUhU=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"b69de56fac8c2b6f8fd27f2eca01dcda8e0a4221\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixpkgs-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 4.724609375,
          "content": "{\n  description = \"Wasabi Wallet flake\";\n\n  inputs.nixpkgs.url = \"github:NixOS/nixpkgs/nixpkgs-unstable\";\n  outputs = { self, nixpkgs }:\n    let\n        pkgs = import nixpkgs { system = \"x86_64-linux\"; };\n        deployScript = pkgs.writeScriptBin \"deploy\" (builtins.readFile ./Contrib/deploy.sh);\n        gitRev = if (builtins.hasAttr \"rev\" self) then self.rev else \"dirty\";\n        buildWasabiModule = pkgs.buildDotnetModule {\n          pname = \"wasabi\";\n          version = \"2.0.0-${builtins.substring 0 8 (self.lastModifiedDate or self.lastModified or \"19700101\")}-${gitRev}\";\n          nugetDeps = ./deps.nix; # nix build .#packages.x86_64-linux.all.passthru.fetch-deps\n          dotnetFlags = [ \"-p:CommitHash=${gitRev}\"];\n          dotnet-sdk = pkgs.dotnetCorePackages.sdk_8_0;\n          dotnet-runtime = pkgs.dotnetCorePackages.aspnetcore_8_0;\n\n          src = ./.;\n        };\n\n        # Build Wasabi Backend\n        buildBackend = buildWasabiModule.overrideAttrs (oldAttrs: rec {\n          pname = \"WalletWasabi.Backend\";\n          projectFile = \"WalletWasabi.Backend/WalletWasabi.Backend.csproj\";\n          executables = [ \"WalletWasabi.Backend\" ];\n          runtimeDeps = [ pkgs.openssl pkgs.zlib ];\n          postInstall = ''\n            ln -s ${deployScript}/bin/deploy $out\n          '';\n        });\n\n        # Build all components and run tests (CI)\n        buildEverything = buildWasabiModule.overrideAttrs (oldAttrs: rec {\n          pname = \"WalletWasabi\";\n          projectFile = [\"WalletWasabi.Backend/WalletWasabi.Backend.csproj\" \"WalletWasabi.Fluent.Desktop/WalletWasabi.Fluent.Desktop.csproj\"];\n          executables = [ \"WalletWasabi.Backend\" \"WalletWasabi.Fluent.Desktop\" ];\n          runtimeDeps = with pkgs; [\n             pkgs.openssl pkgs.zlib\n             # for client\n             tor hwi bitcoind-knots\n             xorg.libX11 xorg.libXrandr xorg.libX11.dev xorg.libICE xorg.libSM fontconfig.lib ];\n          # Testing\n          doCheck = true;\n          testProjectFile = \"WalletWasabi.Tests/WalletWasabi.Tests.csproj\";\n          dotnetTestFlags = [\"--filter \\\"FullyQualifiedName~UnitTests\\\"\" \"--logger \\\"console;verbosity=detailed\\\"\"];\n\n          # wrap manually, because we want not so ugly executable names\n          dontDotnetFixup = true;\n\n          preFixup = ''\n            wrapDotnetProgram $out/lib/${pname}/WalletWasabi.Fluent.Desktop $out/bin/wasabi\n            wrapDotnetProgram $out/lib/${pname}/WalletWasabi.Backend $out/bin/wbend\n          '';\n\n          microservices = \"./WalletWasabi/Microservices/Binaries/lin64/\";\n          preBuild = ''\n            cp -r ${pkgs.tor}/bin/tor ${microservices}/Tor/tor\n            cp ${pkgs.hwi}/bin/hwi ${microservices}/hwi\n            cp ${pkgs.bitcoind-knots}/bin/bitcoind ${microservices}/bitcoind\n          '';\n        });\n\n        # dotnet trace\n        dotnet-trace = pkgs.buildDotnetGlobalTool {\n          pname = \"dotnet-trace\";\n          nugetName = \"dotnet-trace\";\n          version = \"8.0.510501\";\n          nugetSha256 = \"sha256-Kt5x8n5Q0T+BaTVufhsyjXbi/BlGKidb97DWSbI6Iq8=\";\n          dotnet-sdk = pkgs.dotnetCorePackages.sdk_8_0;\n        };\n        # dotnet dump\n        dotnet-dump = pkgs.buildDotnetGlobalTool {\n          pname = \"dotnet-dump\";\n          nugetName = \"dotnet-dump\";\n          version = \"8.0.510501\";\n          nugetSha256 = \"sha256-H7Z4EA/9G3DvVuXbnQJF7IJMEB2SkzRjTAL3eZMqCpI=\";\n          dotnet-sdk = pkgs.dotnetCorePackages.sdk_8_0;\n        };\n        # dotnet counters\n        dotnet-counters = pkgs.buildDotnetGlobalTool {\n          pname = \"dotnet-counters\";\n          nugetName = \"dotnet-counters\";\n          version = \"8.0.510501\";\n          nugetSha256 = \"sha256-gAexbRzKP/8VPhFy2OqnUCp6ze3CkcWLYR1nUqG71PI=\";\n          dotnet-sdk = pkgs.dotnetCorePackages.sdk_8_0;\n        };\n        wasabi-shell = pkgs.mkShell {\n           name = \"wasabi-shell\";\n           packages = [\n             pkgs.dotnetCorePackages.sdk_8_0\n             dotnet-trace\n             dotnet-dump\n             dotnet-counters\n             ];\n\n           shellHook = ''\n             export DOTNET_CLI_TELEMETRY_OPTOUT=1\n             export DOTNET_NOLOGO=1\n             export DOTNET_ROOT=${pkgs.dotnetCorePackages.sdk_8_0}\n             export PS1='\\n\\[\\033[1;34m\\][Wasabi:\\w]\\$\\[\\033[0m\\] '\n           '';\n        };\n        migrateBackendFilters = {\n           type = \"app\";\n           program = \"${(pkgs.writeShellScript \"migrateBackendFilters\" ''\n              ${pkgs.dotnetCorePackages.sdk_8_0}/bin/dotnet fsi ${./.}/Contrib/Migration/migrateBackendFilters.fsx;\n              '')}\";\n        };\n    in\n    {\n      packages.x86_64-linux.default = buildBackend;\n      packages.x86_64-linux.all = buildEverything;\n      devShells.x86_64-linux.default = wasabi-shell;\n\n      apps.x86_64-linux.migrateFilters = migrateBackendFilters;\n    };\n}\n"
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.107421875,
          "content": "{\n  \"sdk\": {\n    \"version\": \"8.0.100\",\n    \"allowPrerelease\": false,\n    \"rollForward\": \"latestFeature\"\n  }\n}\n"
        },
        {
          "name": "omnisharp.json",
          "type": "blob",
          "size": 2.1572265625,
          "content": "{\n    \"FormattingOptions\": {\n      \"NewLine\": \"\\n\",\n      \"UseTabs\": true,\n      \"TabSize\": 4,\n      \"IndentationSize\": 4,\n      \"SpacingAfterMethodDeclarationName\": false,\n      \"SpaceWithinMethodDeclarationParenthesis\": false,\n      \"SpaceBetweenEmptyMethodDeclarationParentheses\": false,\n      \"SpaceAfterMethodCallName\": false,\n      \"SpaceWithinMethodCallParentheses\": false,\n      \"SpaceBetweenEmptyMethodCallParentheses\": false,\n      \"SpaceAfterControlFlowStatementKeyword\": true,\n      \"SpaceWithinExpressionParentheses\": false,\n      \"SpaceWithinCastParentheses\": false,\n      \"SpaceWithinOtherParentheses\": false,\n      \"SpaceAfterCast\": false,\n      \"SpacesIgnoreAroundVariableDeclaration\": false,\n      \"SpaceBeforeOpenSquareBracket\": false,\n      \"SpaceBetweenEmptySquareBrackets\": false,\n      \"SpaceWithinSquareBrackets\": false,\n      \"SpaceAfterColonInBaseTypeDeclaration\": true,\n      \"SpaceAfterComma\": true,\n      \"SpaceAfterDot\": false,\n      \"SpaceAfterSemicolonsInForStatement\": true,\n      \"SpaceBeforeColonInBaseTypeDeclaration\": true,\n      \"SpaceBeforeComma\": false,\n      \"SpaceBeforeDot\": false,\n      \"SpaceBeforeSemicolonsInForStatement\": false,\n      \"SpacingAroundBinaryOperator\": \"single\",\n      \"IndentBraces\": false,\n      \"IndentBlock\": true,\n      \"IndentSwitchSection\": true,\n      \"IndentSwitchCaseSection\": true,\n      \"IndentSwitchCaseSectionWhenBlock\": true,\n      \"LabelPositioning\": \"oneLess\",\n      \"WrappingPreserveSingleLine\": true,\n      \"WrappingKeepStatementsOnSingleLine\": true,\n      \"NewLinesForBracesInTypes\": true,\n      \"NewLinesForBracesInMethods\": true,\n      \"NewLinesForBracesInProperties\": true,\n      \"NewLinesForBracesInAccessors\": true,\n      \"NewLinesForBracesInAnonymousMethods\": true,\n      \"NewLinesForBracesInControlBlocks\": true,\n      \"NewLinesForBracesInAnonymousTypes\": true,\n      \"NewLinesForBracesInObjectCollectionArrayInitializers\": true,\n      \"NewLinesForBracesInLambdaExpressionBody\": true,\n      \"NewLineForElse\": true,\n      \"NewLineForCatch\": true,\n      \"NewLineForFinally\": true,\n      \"NewLineForMembersInObjectInit\": true,\n      \"NewLineForMembersInAnonymousTypes\": true,\n      \"NewLineForClausesInQuery\": true\n    }\n  }"
        },
        {
          "name": "ui-ww.png",
          "type": "blob",
          "size": 252.240234375,
          "content": null
        }
      ]
    }
  ]
}