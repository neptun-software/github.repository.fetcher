{
  "metadata": {
    "timestamp": 1736710816975,
    "page": 313,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "stevencohn/OneMore",
      "stars": 2729,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 3.568359375,
          "content": "ï»¿[*.cs]\n\n# CA1031: Do not catch general exception types\ndotnet_diagnostic.CA1031.severity = none\n\n# NOTE: Requires **VS2019 16.3** or later\n# Rules for OneMore\n# Description: Code analysis rules for OneMore.csproj.\n\n# Code files\n[*.{cs,vb}]\n\ndotnet_diagnostic.CA1001.severity = warning\ndotnet_diagnostic.CA1009.severity = warning\ndotnet_diagnostic.CA1016.severity = warning\ndotnet_diagnostic.CA1033.severity = warning\ndotnet_diagnostic.CA1049.severity = warning\ndotnet_diagnostic.CA1060.severity = warning\ndotnet_diagnostic.CA1061.severity = warning\ndotnet_diagnostic.CA1063.severity = warning\ndotnet_diagnostic.CA1065.severity = warning\ndotnet_diagnostic.CA1301.severity = warning\ndotnet_diagnostic.CA1400.severity = warning\ndotnet_diagnostic.CA1401.severity = warning\ndotnet_diagnostic.CA1403.severity = warning\ndotnet_diagnostic.CA1404.severity = warning\ndotnet_diagnostic.CA1405.severity = warning\ndotnet_diagnostic.CA1410.severity = warning\ndotnet_diagnostic.CA1415.severity = warning\ndotnet_diagnostic.CA1821.severity = warning\ndotnet_diagnostic.CA1900.severity = warning\ndotnet_diagnostic.CA1901.severity = warning\ndotnet_diagnostic.CA2002.severity = warning\ndotnet_diagnostic.CA2100.severity = warning\ndotnet_diagnostic.CA2101.severity = warning\ndotnet_diagnostic.CA2108.severity = warning\ndotnet_diagnostic.CA2111.severity = warning\ndotnet_diagnostic.CA2112.severity = warning\ndotnet_diagnostic.CA2114.severity = warning\ndotnet_diagnostic.CA2116.severity = warning\ndotnet_diagnostic.CA2117.severity = warning\ndotnet_diagnostic.CA2122.severity = warning\ndotnet_diagnostic.CA2123.severity = warning\ndotnet_diagnostic.CA2124.severity = warning\ndotnet_diagnostic.CA2126.severity = warning\ndotnet_diagnostic.CA2131.severity = warning\ndotnet_diagnostic.CA2132.severity = warning\ndotnet_diagnostic.CA2133.severity = warning\ndotnet_diagnostic.CA2134.severity = warning\ndotnet_diagnostic.CA2137.severity = warning\ndotnet_diagnostic.CA2138.severity = warning\ndotnet_diagnostic.CA2140.severity = warning\ndotnet_diagnostic.CA2141.severity = warning\ndotnet_diagnostic.CA2146.severity = warning\ndotnet_diagnostic.CA2147.severity = warning\ndotnet_diagnostic.CA2149.severity = warning\ndotnet_diagnostic.CA2200.severity = warning\ndotnet_diagnostic.CA2202.severity = warning\ndotnet_diagnostic.CA2207.severity = warning\ndotnet_diagnostic.CA2212.severity = warning\ndotnet_diagnostic.CA2213.severity = warning\ndotnet_diagnostic.CA2214.severity = warning\ndotnet_diagnostic.CA2216.severity = warning\ndotnet_diagnostic.CA2220.severity = warning\ndotnet_diagnostic.CA2229.severity = warning\ndotnet_diagnostic.CA2231.severity = warning\ndotnet_diagnostic.CA2232.severity = warning\ndotnet_diagnostic.CA2235.severity = warning\ndotnet_diagnostic.CA2236.severity = warning\ndotnet_diagnostic.CA2237.severity = warning\ndotnet_diagnostic.CA2238.severity = warning\ndotnet_diagnostic.CA2240.severity = warning\ndotnet_diagnostic.CA2241.severity = warning\ndotnet_diagnostic.CA2242.severity = warning\n\ndotnet_diagnostic.IDE0079.severity = none # Remove unnecessary suppression (IDE complaining about Sonar)\n\ndotnet_diagnostic.S108.severity = none # Nested blocks of code should not be left empty\ndotnet_diagnostic.S125.severity = none # Sections of code should not be commented out\ndotnet_diagnostic.S1066.severity = none # Collapsible \"if\" statements should be merged\ndotnet_diagnostic.S1135.severity = none # Track uses of \"TODO\" tags\ndotnet_diagnostic.S1172.severity = none # Unused method parameters should be removed\ndotnet_diagnostic.S2696.severity = none # Make enclosing instance method static\ndotnet_diagnostic.S3358.severity = none # Ternary operators should not be nested\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0302734375,
          "content": "*.txt eol=crlf\n*.resx eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.7822265625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n**/Properties/launchSettings.json\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n**/TestResults/*\n*.psess\n*.vsp\n*.vspx\n*.sap\nbin\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Typescript v1 declaration files\ntypings/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\nOneNote_RecycleBin/\n/docs/OneMore Wiki.zip\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.3330078125,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "OneMore.sln",
          "type": "blob",
          "size": 12.4580078125,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.32014.148\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"OneMore\", \"OneMore\\OneMore.csproj\", \"{D874E185-08FE-48C5-BADE-0FE84060C978}\"\nEndProject\nProject(\"{54435603-DBB4-11D2-8724-00A0C9A8B90C}\") = \"Setup\", \"OneMoreSetup\\OneMoreSetup.vdproj\", \"{617FC926-3389-4888-B08B-29B28E413936}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{2679BE09-8144-4B5B-957E-D463F00FA66E}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\tbuild.ps1 = build.ps1\n\t\tinstall-vsix.ps1 = install-vsix.ps1\n\t\tiq.ps1 = iq.ps1\n\t\tLICENSE = LICENSE\n\t\tREADME.md = README.md\n\t\tregister-onemore.reg = register-onemore.reg\n\t\tsetregistry.ps1 = setregistry.ps1\n\t\tsetversion.ps1 = setversion.ps1\n\t\tstop.ps1 = stop.ps1\n\t\tupdate-sdk.ps1 = update-sdk.ps1\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Themes\", \"Themes\", \"{B33891C1-D812-4C1D-B6DC-2175A68C4ADC}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tThemes\\Confluence6.xml = Themes\\Confluence6.xml\n\t\tThemes\\Confluence7.xml = Themes\\Confluence7.xml\n\t\tThemes\\DarkBlue.xml = Themes\\DarkBlue.xml\n\t\tThemes\\DarkGreen.xml = Themes\\DarkGreen.xml\n\t\tThemes\\DarkOrange.xml = Themes\\DarkOrange.xml\n\t\tThemes\\Orange.xml = Themes\\Orange.xml\n\t\tThemes\\Red.xml = Themes\\Red.xml\n\t\tThemes\\Standard.xml = Themes\\Standard.xml\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Plugins\", \"Plugins\", \"{9D56ACB1-3CDF-48EB-B786-4F924E899CE2}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tPlugins\\Export-PageInfo-readme.txt = Plugins\\Export-PageInfo-readme.txt\n\t\tPlugins\\Export-PageInfo.ps1 = Plugins\\Export-PageInfo.ps1\n\t\tPlugins\\Get-MeetingDate-readme.txt = Plugins\\Get-MeetingDate-readme.txt\n\t\tPlugins\\Get-MeetingDate.ps1 = Plugins\\Get-MeetingDate.ps1\n\t\tPlugins\\Set-BlueBackground-readme.txt = Plugins\\Set-BlueBackground-readme.txt\n\t\tPlugins\\Set-BlueBackground.ps1 = Plugins\\Set-BlueBackground.ps1\n\t\tPlugins\\Set-RainbowSections-readme.txt = Plugins\\Set-RainbowSections-readme.txt\n\t\tPlugins\\Set-RainbowSections.ps1 = Plugins\\Set-RainbowSections.ps1\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Templates\", \"Templates\", \"{31896922-72FF-4823-80C0-8EC46936AC71}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tTemplates\\OneNote_Keyboard_Shortcuts.zip = Templates\\OneNote_Keyboard_Shortcuts.zip\n\tEndProjectSection\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"OneMoreProtocolHandler\", \"OneMoreProtocolHandler\\OneMoreProtocolHandler.csproj\", \"{BD0FA4FC-8CA9-4056-93DD-14537A758D48}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"OneMoreSetupActions\", \"OneMoreSetupActions\\OneMoreSetupActions.csproj\", \"{200381E7-37C7-4B30-9F5E-81FA44BF83CC}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"OneMoreCalendar\", \"OneMoreCalendar\\OneMoreCalendar.csproj\", \"{1F87159C-B663-4464-B272-E0C57BE22306}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \".github\", \".github\", \"{AD3F5496-C83B-4C86-B78D-EE7C6CCABB8A}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.github\\FUNDING.yml = .github\\FUNDING.yml\n\t\t.github\\pull_request_template.md = .github\\pull_request_template.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"workflows\", \"workflows\", \"{5771E974-F302-4CB6-86B8-B57C74C07709}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.github\\workflows\\build.yml = .github\\workflows\\build.yml\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"ISSUE_TEMPLATE\", \"ISSUE_TEMPLATE\", \"{147D185C-D069-495B-955A-74C81BDD20CF}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.github\\ISSUE_TEMPLATE\\bug_report.md = .github\\ISSUE_TEMPLATE\\bug_report.md\n\t\t.github\\ISSUE_TEMPLATE\\feature_request.md = .github\\ISSUE_TEMPLATE\\feature_request.md\n\t\t.github\\ISSUE_TEMPLATE\\question.md = .github\\ISSUE_TEMPLATE\\question.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Reference\", \"Reference\", \"{64F48016-BB0D-4F25-89BE-00444FD64C53}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tReference\\0336.OneNoteApplication_2013.xsd = Reference\\0336.OneNoteApplication_2013.xsd\n\t\tReference\\customui14.xsd = Reference\\customui14.xsd\n\t\tReference\\onenotecontrols-2016.xlsx = Reference\\onenotecontrols-2016.xlsx\n\tEndProjectSection\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"OneMoreTray\", \"OneMoreTray\\OneMoreTray.csproj\", \"{383ABB76-4F97-4C78-AC59-BC851AA15B5A}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"packers\", \"packers\", \"{06C4CB95-3744-44A4-9F5A-201F9909EA13}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tpackers\\prepare.ps1 = packers\\prepare.ps1\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"chocolatey\", \"chocolatey\", \"{51C92C04-B6EF-4DF3-B832-BBF4F92AD6E9}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tpackers\\chocolatey\\onemore.nuspec = packers\\chocolatey\\onemore.nuspec\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"tools\", \"tools\", \"{6A346706-764C-40DA-AFFC-BFB22B310BF5}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tpackers\\chocolatey\\tools\\chocolateybeforemodify.ps1 = packers\\chocolatey\\tools\\chocolateybeforemodify.ps1\n\t\tpackers\\chocolatey\\tools\\chocolateyinstall.ps1 = packers\\chocolatey\\tools\\chocolateyinstall.ps1\n\t\tpackers\\chocolatey\\tools\\chocolateyuninstall.ps1 = packers\\chocolatey\\tools\\chocolateyuninstall.ps1\n\t\tpackers\\chocolatey\\tools\\LICENSE.txt = packers\\chocolatey\\tools\\LICENSE.txt\n\t\tpackers\\chocolatey\\tools\\VERIFICATION.txt = packers\\chocolatey\\tools\\VERIFICATION.txt\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Debug|Any CPU.ActiveCfg = Debug|x86\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Debug|Any CPU.Build.0 = Debug|x86\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Debug|x64.Build.0 = Debug|x64\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Debug|x86.ActiveCfg = Debug|x86\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Debug|x86.Build.0 = Debug|x86\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Release|Any CPU.ActiveCfg = Release|x86\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Release|x64.ActiveCfg = Release|x64\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Release|x64.Build.0 = Release|x64\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Release|x86.ActiveCfg = Release|x86\n\t\t{D874E185-08FE-48C5-BADE-0FE84060C978}.Release|x86.Build.0 = Release|x86\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Debug|Any CPU.ActiveCfg = Debug\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Debug|Any CPU.Build.0 = Debug\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Debug|x64.ActiveCfg = Debug\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Debug|x64.Build.0 = Debug\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Debug|x86.ActiveCfg = Debug\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Debug|x86.Build.0 = Debug\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Release|Any CPU.ActiveCfg = Release\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Release|Any CPU.Build.0 = Release\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Release|x64.ActiveCfg = Release\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Release|x64.Build.0 = Release\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Release|x86.ActiveCfg = Release\n\t\t{617FC926-3389-4888-B08B-29B28E413936}.Release|x86.Build.0 = Release\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Release|x64.Build.0 = Release|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{BD0FA4FC-8CA9-4056-93DD-14537A758D48}.Release|x86.Build.0 = Release|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Release|x64.Build.0 = Release|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{200381E7-37C7-4B30-9F5E-81FA44BF83CC}.Release|x86.Build.0 = Release|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Release|x64.Build.0 = Release|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{1F87159C-B663-4464-B272-E0C57BE22306}.Release|x86.Build.0 = Release|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Release|x64.Build.0 = Release|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{383ABB76-4F97-4C78-AC59-BC851AA15B5A}.Release|x86.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{B33891C1-D812-4C1D-B6DC-2175A68C4ADC} = {2679BE09-8144-4B5B-957E-D463F00FA66E}\n\t\t{9D56ACB1-3CDF-48EB-B786-4F924E899CE2} = {2679BE09-8144-4B5B-957E-D463F00FA66E}\n\t\t{31896922-72FF-4823-80C0-8EC46936AC71} = {2679BE09-8144-4B5B-957E-D463F00FA66E}\n\t\t{AD3F5496-C83B-4C86-B78D-EE7C6CCABB8A} = {2679BE09-8144-4B5B-957E-D463F00FA66E}\n\t\t{5771E974-F302-4CB6-86B8-B57C74C07709} = {AD3F5496-C83B-4C86-B78D-EE7C6CCABB8A}\n\t\t{147D185C-D069-495B-955A-74C81BDD20CF} = {AD3F5496-C83B-4C86-B78D-EE7C6CCABB8A}\n\t\t{64F48016-BB0D-4F25-89BE-00444FD64C53} = {2679BE09-8144-4B5B-957E-D463F00FA66E}\n\t\t{06C4CB95-3744-44A4-9F5A-201F9909EA13} = {2679BE09-8144-4B5B-957E-D463F00FA66E}\n\t\t{51C92C04-B6EF-4DF3-B832-BBF4F92AD6E9} = {06C4CB95-3744-44A4-9F5A-201F9909EA13}\n\t\t{6A346706-764C-40DA-AFFC-BFB22B310BF5} = {51C92C04-B6EF-4DF3-B832-BBF4F92AD6E9}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {19E5943B-AB7E-4164-98B6-0C88B01BFABE}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "OneMore",
          "type": "tree",
          "content": null
        },
        {
          "name": "OneMoreCalendar",
          "type": "tree",
          "content": null
        },
        {
          "name": "OneMoreProtocolHandler",
          "type": "tree",
          "content": null
        },
        {
          "name": "OneMoreSetup",
          "type": "tree",
          "content": null
        },
        {
          "name": "OneMoreSetupActions",
          "type": "tree",
          "content": null
        },
        {
          "name": "OneMoreSmokeTests",
          "type": "tree",
          "content": null
        },
        {
          "name": "OneMoreTray",
          "type": "tree",
          "content": null
        },
        {
          "name": "Plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.48828125,
          "content": "ï»¿# ![logo](OneMore/Properties/Images/Logo48.png \"logo\") OneMore - a OneNote Add-in\n\nOneMore is an add-in for OneNote with simple and powerful features that make OneNote a better OneNote.\n\n* Download the [latest release](https://github.com/stevencohn/OneMore/releases/latest)\n* Read the [installation instructions](https://onemoreaddin.com/get-started/How%20to%20Install%20OneMore.htm)\n* See the new [OneNote Wiki](https://onemoreaddin.com/) for a full user guide\n\n# [![version](https://img.shields.io/github/v/release/stevencohn/OneMore?display_name=tag&color=7E5C81)](https://github.com/stevencohn/OneMore/releases/latest) [![downloads](https://img.shields.io/github/downloads/stevencohn/OneMore/total?color=blue)](https://github.com/stevencohn/OneMore/releases/latest) [![platform](https://img.shields.io/badge/platform-windows%20%7C%20onenote%20desktop-649BC1)](https://onemoreaddin.com/get-started/How%20to%20Install%20OneNote.htm) [![GitHub license](https://img.shields.io/badge/license-mpl--2.0-BF6A48)](https://github.com/stevencohn/OneMore/blob/main/LICENSE) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://onemoreaddin.com/developers/Setup.htm) ![](https://tokei.rs/b1/github/project-jedi/jcl)\n\n\n# Highlights\n- Quickly access all OneMore commands from the almighty [Command Palette](https://onemoreaddin.com/the-basics/Basics.htm)!\n- Type and search for [inline #hashtags](https://onemoreaddin.com/commands/Search%20and%20Tag%20Commands.htm)\n- Use the [Navigator window](https://onemoreaddin.com/the-basics/Navigator.htm) to keep track of visited pages, a personalized reading list, and navigate the headings of the current page.\n- Integrating with the [ribbon bar](https://onemoreaddin.com/the-basics/Basics.htm), extends <a href=\"https://onemoreaddin.com/context-menus/Context%20Menu%20Extensions.htm\">context menus</a>, and provides customized <a href=\"https://onemoreaddin.com/the-basics/OneNote%20Keyboard%20Shortcuts.htm\">keyboard shortcuts</a>\n- Create [customized font styles](https://onemoreaddin.com/commands/My%20Styles%20Commands.htm) in addition to those provided by OneNote, apply a style to selected text, or apply all styles to the entire page\n- Use predefined [table styles](https://onemoreaddin.com/commands/Table%20Style%20Commands.htm) or create your own to selectively set cell background and fonts\n- Manage a collection of [favorite pages and sections](https://onemoreaddin.com/commands/Favorites%20Commands.htm) with shortcuts to quickly jump to a favorite\n- Add [colorized syntax highlighting](https://onemoreaddin.com/commands/Colorize%20Command.htm) to snippets of source code\n- Add [formulas in table cells](https://onemoreaddin.com/commands/Table%20Commands.htm) using Excel-like expressions\n- [Crop, rotate, or adjust images](https://onemoreaddin.com/commands/Image%20Commands.htm) on a page without opening an external photo editor\n- Save and reuse [custom snippets](https://onemoreaddin.com/commands/Snippets%20Commands.htm) of content anywhere on any page\n- - And many, many moreâ¦ see below\n\n## Screenshots\n\n| Some of the OneMore menus | The OneMore Calendar |\n|---|---|\n| ![screenshot](OneMore/Properties/Images/Screenshot.png) | ![Calendar](OneMore/Properties/Images/Calendar.png) |\n_Click an image to enlarge_\n\n## ð Features - Over 160 commands and growing!\n*Want more from OneMore? OneMore has more...*\n\nSee the ð **[OneNote Wiki](https://onemoreaddin.com/)** for a full user guide, setup instructions,\nand description of each command.\n\n\nÂ© 2020 Steven M Cohn. All rights reserved.\n"
        },
        {
          "name": "Reference",
          "type": "tree",
          "content": null
        },
        {
          "name": "Templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "Themes",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 7.66796875,
          "content": "<#\n.SYNOPSIS\nBuild both x86 and x64 msi\n\n.PARAMETER ConfigBits\nSpecifies the bitness of the build: 64 or 86, default is 64\n\n.PARAMETER Both\nBuild both x86 and x64 kits.\n\n.PARAMETER Fast\nBuild just the .csproj projects using default parameters.\nThis will build OneMore, OneMorCalendar, OneMoreProtocolHandler, and OneMoreSetupActions.\n\n.PARAMETER Prep\nRun DisableOutOfProcBuild. This only needs to be run once on a machine, or after upgrading\nor reinstalling Visual Studio. It is required to build installer kits from the command line.\n#>\n\n# CmdletBinding adds -Verbose functionality, SupportsShouldProcess adds -WhatIf\n[CmdletBinding(SupportsShouldProcess = $true)]\nparam (\n\t[int] $configbits = 64,\n\t[switch] $fast,\n\t[switch] $both,\n\t[switch] $prep\n\t)\n\nBegin\n{\n\t$script:devenv = ''\n\t$script:vsregedit = ''\n\t$script:vdproj = ''\n\n\tfunction FindVisualStudio\n\t{\n\t\t$cmd = Get-Command devenv -ErrorAction:SilentlyContinue\n\t\tif ($cmd -ne $null)\n\t\t{\n\t\t\t$script:devenv = $cmd.Source\n\t\t\t$script:ideroot = Split-Path -Parent $devenv\n\t\t\t$script:vsregedit = Join-Path $ideroot 'VSRegEdit.exe'\n\t\t\treturn $true\n\t\t}\n\n\t\t$0 = 'C:\\Program Files\\Microsoft Visual Studio\\2022'\n\t\tif (FindVS $0) { return $true }\n\n\t\t$0 = 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019'\n\t\treturn FindVS $0\n\t}\n\n\tfunction FindVS\n\t{\n\t\tparam($vsroot)\n\t\t$script:devenv = Join-Path $vsroot 'Enterprise\\Common7\\IDE\\devenv.com'\n\n\t\tif (!(Test-Path $devenv))\n\t\t{\n\t\t\t$script:devenv = Join-Path $vsroot 'Professional\\Common7\\IDE\\devenv.com'\n\t\t}\n\t\tif (!(Test-Path $devenv))\n\t\t{\n\t\t\t$script:devenv = Join-Path $vsroot 'Community\\Common7\\IDE\\devenv.com'\n\t\t}\n\n\t\tif (!(Test-Path $devenv))\n\t\t{\n\t\t\tWrite-Host \"devenv not found in $vsroot\" -ForegroundColor Yellow\n\t\t\treturn $false\n\t\t}\n\n\t\t$script:ideroot = Split-Path -Parent $devenv\n\t\t$script:vsregedit = Join-Path $ideroot 'VSRegEdit.exe'\n\t\treturn $true\n\t}\n\n\tfunction DisableOutOfProcBuild\n\t{\n\t\t$0 = Join-Path $ideroot 'CommonExtensions\\Microsoft\\VSI\\DisableOutOfProcBuild'\n\t\tif (Test-Path $0)\n\t\t{\n\t\t\tPush-Location $0\n\t\t\tif (Test-Path .\\DisableOutOfProcBuild.exe) {\n\t\t\t\t.\\DisableOutOfProcBuild.exe\n\t\t\t}\n\t\t\tPop-Location\n\t\t\tWrite-Host '... disabled out-of-proc builds; reboot is recommended'\n\t\t\treturn\n\t\t}\n\t\tWrite-Host \"*** could not find $0\\DisableOutOfProcBuild.exe\" -ForegroundColor Yellow\n\t}\n\n\tfunction PreserveVdproj\n\t{\n\t\tWrite-Host '... preserving vdproj' -ForegroundColor DarkGray\n\t\tCopy-Item $vdproj .\\vdproj.tmp -Force -Confirm:$false\n\t}\n\n\tfunction RestoreVdproj\n\t{\n\t\tWrite-Host '... restoring vdproj' -ForegroundColor DarkGray\n\t\tCopy-Item .\\vdproj.tmp $vdproj -Force -Confirm:$false\n\t\tRemove-Item .\\vdproj.tmp -Force\n\t}\n\n\tfunction Configure\n\t{\n\t\tparam([int]$bitness)\n\t\t$lines = @(Get-Content $vdproj)\n\n\t\t$productVersion = $lines | `\n\t\t\tWhere-Object { $_ -match '\"ProductVersion\" = \"8:(.+?)\"' } | `\n\t\t\tForEach-Object { $matches[1] }\n\n\t\tWrite-Host\n\t\tWrite-Host \"... configuring vdproj for x$bitness build of $productVersion\" -ForegroundColor Yellow\n\n\t\t'' | Out-File $vdproj -nonewline\n\n\t\t$lines | ForEach-Object `\n\t\t{\n\t\t\tif ($_ -match '\"OutputFileName\" = \"')\n\t\t\t{\n\t\t\t\t# \"OutputFilename\" = \"8:Debug\\\\OneMore_v_Setupx86.msi\"\n\t\t\t\t$line = $_.Replace('OneMore_v_', \"OneMore_$($productVersion)_\")\n\t\t\t\tif ($bitness -eq 64) {\n\t\t\t\t\t$line.Replace('x86', 'x64') | Out-File $vdproj -Append\n\t\t\t\t} else {\n\t\t\t\t\t$line.Replace('x64', 'x86') | Out-File $vdproj -Append\n\t\t\t\t}\n\t\t\t}\n\t\t\telseif ($_ -match '\"DefaultLocation\" = \"')\n\t\t\t{\n\t\t\t\t# \"DefaultLocation\" = \"8:[ProgramFilesFolder][Manufacturer]\\\\[ProductName]\"\n\t\t\t\tif ($bitness -eq 64) {\n\t\t\t\t\t$_.Replace('ProgramFilesFolder', 'ProgramFiles64Folder') | Out-File $vdproj -Append\n\t\t\t\t} else {\n\t\t\t\t\t$_.Replace('ProgramFiles64Folder', 'ProgramFilesFolder') | Out-File $vdproj -Append\n\t\t\t\t}\n\t\t\t}\n\t\t\telseif ($_ -match '\"TargetPlatform\" = \"')\n\t\t\t{\n\t\t\t\t# x86 -> \"3:0\"\n\t\t\t\t# x64 -> \"3:1\"\n\t\t\t\tif ($bitness -eq 64) {\n\t\t\t\t\t'\"TargetPlatform\" = \"3:1\"' | Out-File $vdproj -Append\n\t\t\t\t} else {\n\t\t\t\t\t'\"TargetPlatform\" = \"3:0\"' | Out-File $vdproj -Append\n\t\t\t\t}\n\t\t\t}\n\t\t\t#elseif ($_ -match '\"SourcePath\" = .*WebView2Loader\\.dll\"$')\n\t\t\t#{\n\t\t\t#    if ($bitness -eq 64) {\n\t\t\t#        $_.Replace('\\\\x86', '\\\\x64') | Out-File $vdproj -Append\n\t\t\t#        $_.Replace('win-x86', 'win-x64') | Out-File $vdproj -Append\n\t\t\t#    } else {\n\t\t\t#        $_.Replace('\\\\x64', '\\\\x86') | Out-File $vdproj -Append\n\t\t\t#        $_.Replace('win-x64', 'win-x86') | Out-File $vdproj -Append\n\t\t\t#    }\n\t\t\t#}\n\t\t\telseif (($_ -match '\"Name\" = \"8:OneMoreSetupActions --install ') -or `\n\t\t\t\t\t($_ -match '\"Arguments\" = \"8:--install '))\n\t\t\t{\n\t\t\t\tif ($bitness -eq 64) {\n\t\t\t\t\t$_.Replace('x86', 'x64') | Out-File $vdproj -Append\n\t\t\t\t} else {\n\t\t\t\t\t$_.Replace('x64', 'x86') | Out-File $vdproj -Append\n\t\t\t\t}\n\t\t\t}\n\t\t\telseif ($_ -notmatch '^\"Scc')\n\t\t\t{\n\t\t\t\t$_ | Out-File $vdproj -Append\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction BuildFast\n\t{\n\t\tparam([int]$bitness)\n\t\tWrite-Host \"... building x$bitness DLLs\" -ForegroundColor Yellow\n\n\t\t# build...\n\n\t\tPush-Location OneMore\n\t\tBuildComponent 'OneMore' $true\n\t\tPop-Location\n\n\t\tPush-Location OneMoreTray\n\t\tBuildComponent 'OneMoreTray' $true\n\t\tPop-Location\n\n\t\tPush-Location OneMoreCalendar\n\t\tBuildComponent 'OneMoreCalendar' $true\n\t\tPop-Location\n\n\t\tPush-Location OneMoreProtocolHandler\n\t\tBuildComponent 'OneMoreProtocolHandler'\n\t\tPop-Location\n \n\t\tPush-Location OneMoreSetupActions\n\t\tBuildComponent 'OneMoreSetupActions'\n\t\tPop-Location\n\t}\n\n\tfunction BuildComponent\n\t{\n\t\tparam($name, $restore = $false)\n\t\t# output file cannot exist before build\n\t\tif (Test-Path .\\Debug\\*)\n\t\t{\n\t\t\tRemove-Item .\\Debug\\*.* -Force -Confirm:$false\n\t\t}\n\t\t# nuget restore\n\t\tif ($restore)\n\t\t{\n\t\t\t$cmd = 'nuget restore .\\$name.csproj'\n\t\t\twrite-Host $cmd -ForegroundColor DarkGray\n\t\t\tnuget restore .\\$name.csproj\n\t\t}\n\t\t$cmd = \"$devenv .\\$name.csproj /build \"\"Debug|AnyCPU\"\" /project $name /projectconfig Debug\"\n\t\twrite-Host $cmd -ForegroundColor DarkGray\n\t\t. $devenv .\\$name.csproj /build \"Debug|AnyCPU\" /project $name /projectconfig Debug\n\t}\n\n\tfunction Build\n\t{\n\t\tparam([int]$bitness)\n\t\tWrite-Host \"... building x$bitness MSI\" -ForegroundColor Yellow\n\n\t\t# output file cannot exist before build\n\t\tif (Test-Path .\\Debug\\*)\n\t\t{\n\t\t\tRemove-Item .\\Debug\\*.* -Force -Confirm:$false\n\t\t}\n\n\t\tif ($PSCmdlet.MyInvocation.BoundParameters[\"Verbose\"].IsPresent)\n\t\t{\n\t\t\tWrite-Host '... enabling MSBuild verbose logging' -ForegroundColor DarkYellow\n\t\t\t$cmd = \". '$vsregedit' set local HKCU General MSBuildLoggerVerbosity dword 4`n\"\n\t\t\twrite-Host $cmd -ForegroundColor DarkGray\n\t\t\t. $vsregedit set local HKCU General MSBuildLoggerVerbosity dword 4 | Out-Null\n\t\t}\n\n\t\t$cmd = \"$devenv .\\OneMoreSetup.vdproj /build \"\"Debug|x$bitness\"\" /project Setup /projectconfig Debug /out `$env:TEMP\\OneMoreBuild.log\"\n\t\twrite-Host $cmd -ForegroundColor DarkGray\n\n\t\t# build\n\t\t. $devenv .\\OneMoreSetup.vdproj /build \"Debug|x$bitness\" /project Setup /projectconfig Debug /out $env:TEMP\\OneMorebuild.log\n\n\t\t# move msi to Downloads for safe-keeping and to allow next Platform build\n\t\tMove-Item .\\Debug\\*.msi $home\\Downloads -Force\n\t\tWrite-Host \"... x$bitness MSI copied to $home\\Downloads\\\" -ForegroundColor DarkYellow\n\n\t\tif ($PSCmdlet.MyInvocation.BoundParameters[\"Verbose\"].IsPresent)\n\t\t{\n\t\t\tWrite-Host '... disabling MSBuild verbose logging' -ForegroundColor DarkYellow\n\t\t\t$cmd = \". '$vsregedit' set local HKCU General MSBuildLoggerVerbosity dword 1`n\"\n\t\t\twrite-Host $cmd -ForegroundColor DarkGray\n\t\t\t. $vsregedit set local HKCU General MSBuildLoggerVerbosity dword 1 | Out-Null\n\t\t}\n\t}\n}\nProcess\n{\n\tif (-not (FindVisualStudio))\n\t{\n\t\treturn\n\t}\n\t\n\tif ($prep)\n\t{\n\t\tDisableOutOfProcBuild\n\t\treturn\n\t}\n\n\tif ($fast)\n\t{\n\t\tBuildFast 64\n\t}\n\telse\n\t{\n\t\tPush-Location OneMoreSetup\n\t\t$script:vdproj = Resolve-Path .\\OneMoreSetup.vdproj\n\t\tPreserveVdproj\n\n\t\tif ($configbits -eq 86 -or $both)\n\t\t{\n\t\t\tConfigure 86\n\t\t\tBuild 86\n\t\t}\n\n\t\tif ($configBits -eq 64 -or $both)\n\t\t{\n\t\t\tConfigure 64\n\t\t\tBuild 64\n\t\t}\n\n\t\tRestoreVdproj\n\t}\n\n\tPop-Location\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-vsix.ps1",
          "type": "blob",
          "size": 1.4267578125,
          "content": "<#\n.SYNOPSIS\nInstall the InstallerProjects VS Extension to support vdproj Deployment Project builds\n#>\n\nparam ()\n\nBegin\n{\n\n    function InstallVSExtensions\n    {\n        $root = & \"${env:ProgramFiles(x86)}\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -latest -property installationPath\n        $installer = \"$root\\Common7\\IDE\\vsixinstaller.exe\"\n\n        # TODO: currently for VS2022\n        # TODO: update these versions every now and then...\n\n        InstallVsix $installer 'InstallerProjects' 'VisualStudioClient/vsextensions/MicrosoftVisualStudio2022InstallerProjects/2.0.0/vspackage'\n\n        Write-Host\n        Write-Host '... Waiting a minute for the VSIXInstaller processes to complete' -ForegroundColor Yellow\n        Start-Sleep 60\n    }\n\n\n    function InstallVsix\n    {\n        param($installer, $name, $uri)\n        Write-Host \"... installing $name extension in the background\" -ForegroundColor Yellow\n\n        $url = \"https://marketplace.visualstudio.com/_apis/public/gallery/publishers/$uri\"\n        $vsix = \"$($env:TEMP)\\$name`.vsix\"\n\n        # download package directly from VS Marketplace and install\n        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]'Ssl3,Tls,Tls11,Tls12'\n        $progressPreference = 'silentlyContinue'\n        Invoke-WebRequest $url -OutFile $vsix\n        $progressPreference = 'Continue'\n\n        & $installer /quiet /norepair $vsix\n    }\n}\nProcess\n{\n    InstallVSExtensions\n}\n"
        },
        {
          "name": "iq.ps1",
          "type": "blob",
          "size": 11.6484375,
          "content": "<#\n.SYNOPSIS\nInstallation qualification\n#>\n\n[CmdletBinding()]\nparam ()\n\nBegin\n{\n    $script:guid = '{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}'\n    $script:webview2client = '{F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}'\n    $script:modern = ($env:PROCESSOR_ARCHITECTURE -match '64')\n    $script:onewow = $false\n\n    function WriteTitle\n    {\n        param($text)\n        Write-Host \"`n$text...\" -Fore DarkCyan\n    }\n\n    function WriteOK\n    {\n        param($text)\n        Write-Host 'OK ' -Fore Green -NoNewLine\n        Write-Host $text\n    }\n\n    function WriteBad\n    {\n        param($text)\n        Write-Host 'BAD ' -Fore Red -NoNewLine\n        Write-Host $text -Fore Yellow\n    }\n\n    function WriteValue\n    {\n        param($text)\n        Write-Host \"= $text\" -Fore DarkGray\n    }\n\n    function HasKey\n    {\n        param($kpath)\n        if (-not (Test-Path $kpath))\n        {\n            write-Host \"key not found: $kpath\" -Fore Red\n            return $false\n        }\n        return $true\n    }\n\n    function HasProperty\n    {\n        param($kpath, $name)\n        $ok = (Get-ItemProperty $kpath).PSObject.Properties.Name -contains $name\n        if (-not $ok)\n        {\n            write-Host \"property not found: $kpath\\$name\" -Fore Red\n            return $false\n        }\n        return $true\n    }\n\n    function HasValue\n    {\n        param($kpath, $name, $value, [switch] $match, [switch] $equals)\n        if (-not (HasProperty $kpath $name))\n        {\n            return $false\n        }\n        $script:lastValue = (Get-ItemPropertyValue -Path $kpath -Name $name)\n        if ($value.Contains('*'))\n        {\n            if (-not ($lastValue -like $value))\n            {\n                Write-Host \"invalid value: $kpath\\$name, '$lastValue' <> '$value'\" -Fore Red\n                return $false\n            }\n        }\n        else {\n            if ($match) { if ($lastvalue -notmatch $value) {\n                Write-Host \"bad value: $kpath\\$name, '$lastValue' !~ '$value'\" -Fore Yellow\n                return $false\n            }}\n            elseif ($lastvalue -ne $value) {\n                Write-Host \"bad value: $kpath\\$name, '$lastValue' <> '$value'\" -Fore Red\n            }\n        }\n        return $true\n    }\n    \n    function GetVersions\n    {\n        WriteTitle 'Versions'\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\Excel.Application\\CurVer'\n        if (-not (HasKey $0)) {\n            write-Host 'cannot determine version of Office, assuming 16.0' -Fore Yellow\n            $script:offversion = '16.0'\n        } else {\n            $parts = (Get-ItemPropertyValue -Path $0 -Name '(default)').Split('.')\n            $script:offVersion = $parts[$parts.Length - 1] + '.0'\n            WriteOK \"Office version is $offVersion\"\n        }\n\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\onenote\\shell\\Open\\command'\n        if (-not (HasKey $0)) {\n            write-Host 'cannot determine shell command path of OneNote'\n        } else {\n            $script:onewow = (Get-ItemPropertyValue -Path $0 -Name '(default)'\n                ).Contains('Program Files (x86)')\n        }\n\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\OneNote.Application\\CurVer'\n        if (-not (HasKey $0)) {\n            write-Host 'cannot determine version of OneNote'\n        } else {\n            $parts = (Get-ItemPropertyValue -Path $0 -Name '(default)').Split('.')\n            $script:oneVersion = $parts[$parts.Length - 1] + '.0'\n            if ($onewow) {\n                WriteOK \"OneNote version is $oneVersion (32-bit)\"\n            } else {\n                WriteOK \"OneNote version is $oneVersion (64-bit)\"\n            }\n        }\n    }\n\n    function CheckAppID\n    {\n        WriteTitle 'AppID'\n        $0 = \"Registry::HKEY_CLASSES_ROOT\\AppID\\$guid\"\n        $ok = (HasKey $0)\n        if ($ok) { $ok = (HasValue $0 'DllSurrogate' '') }\n        if ($ok) { WriteOK $0 } else { WriteBad $0 }\n    }\n\n    function CheckRoot\n    {\n        WriteTitle 'Root'\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\onemore'\n        $ok = (HasKey $0)\n        if ($ok) {\n            $ok = (HasValue $0 '(default)' 'URL:OneMore Protocol Handler') -and $ok\n            $ok = (HasValue $0 'URL Protocol' '') -and $ok\n        }\n        if ($ok) { WriteOK $0 } else { WriteBad $0 }\n    }\n\n    function CheckShell\n    {\n        WriteTitle 'Shell'\n        # this also covers the virtual node LOCAL_MACHINE\\SOFTWARE\\Classes\\onemore\\shell\\open\\command\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\onemore\\shell\\open\\command'\n        $ok = (HasKey $0)\n        if ($ok) { $ok = (HasValue $0 '(default)' '\\\\OneMoreProtocolHandler.exe\"? %1 %2 %3 %4 %5' -match) }\n        if ($ok) { WriteOK \"$0\" } else { WriteBad $0 }\n        WriteValue $lastvalue\n    }\n\n    function CheckAddIn\n    {\n        WriteTitle 'AddIn'\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\River.OneMoreAddIn'\n        $ok = (HasKey $0)\n        if ($ok) {\n            $ok = (HasValue $0 '(default)' 'River.OneMoreAddIn.AddIn') -and $ok\n            $1 = \"$0\\CLSID\"\n            $ok = (HasValue $1 '(default)' $guid) -and $ok\n            $1 = \"$0\\CurVer\"\n            $ok = (HasValue $1 '(default)' 'River.OneMoreAddIn.1') -and $ok\n        }\n        if ($ok) { WriteOK \"$0\" } else { WriteBad $0 }\n\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\River.OneMoreAddIn.1'\n        $ok = (HasValue $0 '(default)' 'Addin class')\n        $1 = \"$0\\CLSID\"\n        $ok = (HasValue $1 '(default)' $guid) -and $ok\n        if ($ok) { WriteOK \"$0\" } else { WriteBad $0 }\n    }\n\n    function CheckCLSID\n    {\n        param([boolean] $wow = $false)\n\n        if ($wow) { $clsid = 'WOW6432Node\\CLSID' } else { $clsid = 'CLSID' }\n\n        WriteTitle $clsid\n        $0 = \"Registry::HKEY_CLASSES_ROOT\\$clsid\\$guid\"\n        $ok = (HasKey $0)\n        if ($ok) {\n            $ok = (HasValue $0 '(default)' 'River.OneMoreAddIn.AddIn')\n            $ok = (HasValue $0 'AppID' $guid) -and $ok\n        }\n        if ($ok) { WriteOK $0 } else { WriteBad $0 ; return }\n\n        $1 = \"$0\\Implemented Categories\\{62C8FE65-4EBB-45E7-B440-6E39B2CDBF29}\"\n        $ver = $null\n        $ok = (HasKey $0)\n        if ($ok) {\n            $1 = \"$0\\InprocServer32\"\n            $ok = (HasKey $1)\n            if ($ok) {\n                $ok = (HasValue $1 '(default)' 'mscoree.dll')\n                $ok = (HasValue $1 'ThreadingModel' 'Both') -and $ok\n                \n                $ok = (HasValue $1 'CodeBase' '*\\River.OneMoreAddIn.dll') -and $ok\n                if ($ok) { $script:codeBase = $lastValue }\n\n                $oo = (HasValue $1 'Class' 'River.OneMoreAddIn.AddIn')\n                if ($oo) { $script:class = $lastValue }\n                $ok = $oo -and $ok\n\n                $oo = (HasValue $1 'RuntimeVersion' 'v*')\n                if ($oo) { $script:runtimeVersion = $lastValue }\n                $ok = $oo -and $ok\n\n                $oo = (HasValue $1 'Assembly' 'River.OneMoreAddIn, Version=*')\n                if ($oo) { $script:assembly = $lastValue }\n                $ok = $oo -and $ok\n\n                if ($oo)\n                {\n                    if ($assembly -match ',\\sVersion=([0-9\\.]+),\\s')\n                    {\n                        $ver = $matches[1]\n                    }\n                }\n            }\n        }\n        if ($ok) { WriteOK $1 } else { WriteBad $1 }\n\n        if ($ver)\n        {\n            $1 = \"$0\\InprocServer32\\$ver\"\n            $ok = (HasValue $1 'Assembly' $assembly)\n            $ok = (HasValue $1 'CodeBase' $codeBase) -and $ok\n            $ok = (HasValue $1 'RuntimeVersion' $runtimeVersion) -and $ok\n            $ok = (HasValue $1 'Class' $class) -and $ok\n            if ($ok) { WriteOK $1 } else { WriteBad $1 }\n        }\n        else\n        {\n            Write-Host \"skipping $0\\InprocServer32\\<version>\" -Fore Yellow\n        }\n\n        WriteValue \"Assembly = $assembly\"\n        WriteValue \"CodeBase = $codeBase\"\n        WriteValue \"RuntimeVersion = $runtimeVersion\"\n        WriteValue \"Class = $class\"\n\n        $1 = \"$0\\ProgID\"\n        $ok = (HasKey $1)\n        if ($ok) { $ok = (HasValue $1 '(default)' 'River.OneMoreAddIn') }\n        if ($ok) { WriteOK $1 } else { WriteBad $1 }\n\n        $1 = \"$0\\Programmable\"\n        $ok = (HasKey $1)\n        if ($ok) { $ok = (HasValue $1 '(default)' '') }\n        if ($ok) { WriteOK $1 } else { WriteBad $1 }\n\n        $1 = \"$0\\TypeLib\"\n        $ok = (HasKey $1)\n        if ($ok) { $ok = (HasValue $1 '(default)' $guid) }\n        if ($ok) { WriteOK $1 } else { WriteBad $1 }\n\n        $1 = \"$0\\VersionIndependentProgID\"\n        $ok = (HasKey $1)\n        if ($ok) { $ok = (HasValue $1 '(default)' 'River.OneMoreAddIn') }\n        if ($ok) { WriteOK $1 } else { WriteBad $1 }\n    }\n\n    function CheckUser\n    {\n        WriteTitle 'User'\n        $0 = \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AppID\\$guid\"\n        $ok = (HasKey $0)\n        if ($ok) { $ok = (HasValue $0 'DllSurrogate' '') }\n        if ($ok) { WriteOK $0 } else { WriteBad $0 }\n\n        $0 = 'Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\OneNote\\AddIns\\River.OneMoreAddIn'\n        $ok = (HasValue $0 'LoadBehavior' '3')\n        $ok = (HasValue $0 'Description' 'Extension for OneNote') -and $ok\n        $ok = (HasValue $0 'FriendlyName' 'OneMoreAddIn') -and $ok\n        if ($ok) { WriteOK $0 } else { WriteBad $0 }\n\n        $0 = 'Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\River.OneMoreAddIn.dll'\n        if ($codebase -eq $null) {\n            Write-Host 'CLSID codebase is not defined' -Fore Yellow\n            WriteBAD $0\n        } \n        else {\n            $ok = (HasValue $0 'Path' $codeBase)\n            if ($ok) { WriteOK $0 } else { WriteBad $0 }\n            WriteValue $lastvalue\n        }\n\n        $0 = \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Office\\$offVersion\\Common\\Security\\Trusted Protocols\\All Applications\\onemore:\"\n        $ok = (HasKey $0)\n        if ($ok) { WriteOK $0 } else { WriteBad $0 }\n    }\n\n    function CheckWebView2\n    {\n        WriteTitle 'WebView2'\n\n        # either of these keys need to be defined, per\n        # > https://docs.microsoft.com/en-us/microsoft-edge/webview2/concepts/distribution\n\n        if ($modern) {\n            $0 = \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\EdgeUpdate\\Clients\\$webview2client\"\n        } else {\n            $0 = \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\EdgeUpdate\\Clients\\$webview2client\"\n        }\n\n        $ok = (checkWebView2Entry $0)\n        if (-not $ok) {\n            Write-Host '... checking CURRENT_USER' -Fore Yellow\n            $0 = \"Registry::HKEY_CURRENT_USER\\Software\\Microsoft\\EdgeUpdate\\Clients\\$webview2client\"\n            $ok = (checkWebView2Entry $0)\n        }\n\n        if (-not $ok) { WriteBad 'WebView2 not installed' }\n    }\n\n    function checkWebView2Entry\n    {\n        param($path)\n        $ok = (HasKey $path)\n        if ($ok) {\n            $ok = (HasValue $path 'pv' '[^0\\.0\\.0\\.0]' -match)\n            if ($ok) {\n                $location = (Get-ItemPropertyValue -Path $path -Name 'location')\n                $ok = (Test-Path $location)\n                if ($ok) {\n                    WriteOK $path\n                    WriteOK \"location = $location\"\n                } else {\n                    WriteBad $path\n                    Write-Host \"... location not found $location\" -Fore Yellow\n                }\n                WriteValue \"version = $lastvalue\"\n                WriteValue \"location = $location\"\n            } else {\n                WriteBad $path\n                Write-Host '... has version 0.0.0.0' -Fore Yellow\n            }\n        }\n        return $ok\n    }\n}\nProcess\n{\n    $vcolor = $Host.PrivateData.VerboseForegroundColor\n    $Host.PrivateData.VerboseForegroundColor = 'DarkGray'\n\n    GetVersions\n    CheckAppID\n    CheckRoot\n    CheckShell\n    CheckAddIn\n    CheckCLSID\n\n    if ($onewow) {\n        CheckCLSID $true\n    }\n\n    CheckUser\n    CheckWebView2\n\n    $Host.PrivateData.VerboseForegroundColor = $vcolor\n}\n"
        },
        {
          "name": "packers",
          "type": "tree",
          "content": null
        },
        {
          "name": "register-onemore.reg",
          "type": "blob",
          "size": 6.1875,
          "content": "ï»¿;---------------------------------------------------------------\r\n;; This is an example showing how an add-in is registered.\r\n;; It is not intended to be run directly.\r\n;; Instead, use setregistry.ps1 or run the installer.\r\n;---------------------------------------------------------------\r\nWindows Registry Editor Version 5.00\r\n\r\n[HKEY_CLASSES_ROOT\\AppID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}]\r\n\"DllSurrogate\"=\"\"\r\n\r\n[HKEY_CLASSES_ROOT\\onemore]\r\n@=\"URL:OneMore Protocol Handler\"\r\n\"URL Protocol\"=\"\"\r\n\r\n[HKEY_CLASSES_ROOT\\onemore\\shell]\r\n\r\n[HKEY_CLASSES_ROOT\\onemore\\shell\\open]\r\n\r\n[HKEY_CLASSES_ROOT\\onemore\\shell\\open\\command]\r\n@=\"\\\"C:\\\\Program Files\\\\River\\\\OneMoreAddIn\\\\OneMoreProtocolHandler.exe\\\" %1 %2 %3 %4 %5\"\r\n\r\n[HKEY_CLASSES_ROOT\\River.OneMoreAddIn]\r\n@=\"River.OneMoreAddIn.AddIn\"\r\n\r\n[HKEY_CLASSES_ROOT\\River.OneMoreAddIn\\CLSID]\r\n@=\"{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\"\r\n\r\n[HKEY_CLASSES_ROOT\\River.OneMoreAddIn\\CurVer]\r\n@=\"River.OneMoreAddIn.1\"\r\n\r\n[HKEY_CLASSES_ROOT\\River.OneMoreAddIn.1]\r\n@=\"Addin class\"\r\n\r\n[HKEY_CLASSES_ROOT\\River.OneMoreAddIn.1\\CLSID]\r\n@=\"{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\"\r\n\r\n[HKEY_CLASSES_ROOT\\CLSID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}]\r\n@=\"River.OneMoreAddIn.AddIn\"\r\n\"AppID\"=\"{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\"\r\n\r\n[HKEY_CLASSES_ROOT\\CLSID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\\Implemented Categories]\r\n\r\n[HKEY_CLASSES_ROOT\\CLSID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\\Implemented Categories\\{62C8FE65-4EBB-45E7-B440-6E39B2CDBF29}]\r\n\r\n[HKEY_CLASSES_ROOT\\CLSID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\\InprocServer32]\r\n@=\"mscoree.dll\"\r\n\"ThreadingModel\"=\"Both\"\r\n\"CodeBase\"=\"C:\\\\Program Files\\\\River\\\\OneMoreAddIn\\\\River.OneMoreAddIn.dll\"\r\n\"Class\"=\"River.OneMoreAddIn.AddIn\"\r\n\"RuntimeVersion\"=\"v4.0.30319\"\r\n\"Assembly\"=\"River.OneMoreAddIn, Version=5.8.3.0, Culture=neutral, PublicKeyToken=null\"\r\n\r\n[HKEY_CLASSES_ROOT\\CLSID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\\InprocServer32\\5.8.3.0]\r\n\"Assembly\"=\"River.OneMoreAddIn, Version=5.8.3.0, Culture=neutral, PublicKeyToken=null\"\r\n\"CodeBase\"=\"C:\\\\Program Files\\\\River\\\\OneMoreAddIn\\\\River.OneMoreAddIn.dll\"\r\n\"RuntimeVersion\"=\"v4.0.30319\"\r\n\"Class\"=\"River.OneMoreAddIn.AddIn\"\r\n\r\n[HKEY_CLASSES_ROOT\\CLSID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\\ProgID]\r\n@=\"River.OneMoreAddin\"\r\n\r\n[HKEY_CLASSES_ROOT\\CLSID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\\Programmable]\r\n@=\"\"\r\n\r\n[HKEY_CLASSES_ROOT\\CLSID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\\TypeLib]\r\n@=\"{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\"\r\n\r\n[HKEY_CLASSES_ROOT\\CLSID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\\VersionIndependentProgID]\r\n@=\"River.OneMoreAddIn\"\r\n\r\n[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AppID\\{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}]\r\n\"DllSurrogate\"=\"\"\r\n\r\n[HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\OneNote\\AddIns\\River.OneMoreAddIn]\r\n\"LoadBehavior\"=dword:00000003\r\n\"Description\"=\"Extension for OneNote\"\r\n\"FriendlyName\"=\"OneMoreAddIn\"\r\n\r\n[HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\River.OneMoreAddIn.dll]\r\n\"Path\"=\"C:\\\\Program Files\\\\River\\\\OneMoreAddIn\\\\River.OneMoreAddIn.dll\"\r\n\r\n[HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Office\\16.0\\Common\\Security\\Trusted Protocols\\All Applications\\onemore:]\r\n"
        },
        {
          "name": "setregistry.ps1",
          "type": "blob",
          "size": 11.4208984375,
          "content": "<#\n.SYNOPSIS\nUpdate OneMore registry keys to point to the current development directories\nintead of the program files install path\n\n.PARAMETER Reset\nResets the registry settings back to the install path\n#>\n\n[CmdletBinding()]\nparam ([switch] $Reset)\n\nBegin\n{\n    $script:guid = '{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}'\n    $script:catid = '{62C8FE65-4EBB-45E7-B440-6E39B2CDBF29}' # HKCR\\Component Categories... .NET\n    $script:modern = ($env:PROCESSOR_ARCHITECTURE -match '64')\n    $script:onewow = $false\n\n    function HasKey\n    {\n        param($kpath)\n        if (-not (Test-Path $kpath))\n        {\n            write-Host \"key not found: $kpath\" -Fore Red\n            return $false\n        }\n        return $true\n    }\n\n    function WriteTitle\n    {\n        param($text)\n        Write-Host \"`n$text...\" -Fore DarkCyan\n    }\n\n    function WriteOK\n    {\n        param($text)\n        Write-Host 'OK ' -Fore Green -NoNewLine\n        Write-Host $text\n    }\n\n    function WriteBad\n    {\n        param($text)\n        Write-Host 'BAD ' -Fore Red -NoNewLine\n        Write-Host $text -Fore Yellow\n    }\n\n    function WriteValue\n    {\n        param($text)\n        Write-Host \"= $text\" -Fore DarkGray\n    }\n\n    function EnsurePath\n    {\n        param($repath)\n        if (!(Test-Path $repath))\n        {\n            write-Verbose \"creating $repath\"\n            New-Item $repath -Force\n        }\n        return $repath\n    }\n\n    function ReportOneNoteVersion\n    {\n        Write-Host\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\onenote\\shell\\Open\\command'\n        if (-not (HasKey $0))\n        {\n            writeBad 'cannot determine shell command path of OneNote'\n            return $false\n        }\n        else\n        {\n            $script:onewow = (Get-ItemPropertyValue -Path $0 -Name '(default)'\n                ).Contains('Program Files (x86)')\n        }\n\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\OneNote.Application\\CurVer'\n        if (-not (HasKey $0))\n        {\n            writeBad 'cannot determine version of OneNote'\n            return $false\n        }\n\n        $parts = (Get-ItemPropertyValue -Path $0 -Name '(default)').Split('.')\n        $script:oneVersion = $parts[$parts.Length - 1] + \".0\"\n\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\Excel.Application\\CurVer'\n        if (-not (HasKey $0)) {\n            write-Host 'cannot determine version of Office, assuming 16.0' -Fore Yellow\n            $script:offversion = '16.0'\n        } else {\n            $parts = (Get-ItemPropertyValue -Path $0 -Name '(default)').Split('.')\n            $script:offVersion = $parts[$parts.Length - 1] + '.0'\n        }\n\n        if ($onewow)\n        {\n            WriteOK \"OneNote version is $oneVersion (32-bit), Office version is $offversion\"\n        }\n        else\n        {\n            WriteOK \"OneNote version is $oneVersion (64-bit), Office version is $offversion\"\n        }\n\n        return $true\n    }\n\n    function GetOneNoteProperties\n    {\n        if (-not $modern)\n        {\n            $script:onewow = $false\n            return\n        }\n\n        $0 = 'Registry::HKEY_CLASSES_ROOT\\OneNote.Application\\CLSID'\n        if (!(Test-Path $0))\n        {\n            WriteBad 'cannot determine CLSID of OneNote'\n            return $false\n        }\n        $clsid = (Get-ItemPropertyValue -Path $0 -Name '(default)')\n\n        $0 = \"Registry::HKEY_CLASSES_ROOT\\CLSID\\$clsid\\LocalServer32\"\n        if (!(Test-Path $0))\n        {\n            $0 = \"Registry::HKEY_CLASSES_ROOT\\WOW6432Node\\CLSID\\$clsid\\LocalServer32\"\n        }\n\n        $server = (Get-ItemPropertyValue -Path $0 -Name '(default)')\n        if (!(Test-Path $server))\n        {\n            WriteBad $server\n            return $false\n        }\n\n        WriteOK \"OneNote found at $server\"\n        $script:onewow = $server.Contains('Program Files (x86)')\n        return $true\n    }\n\n    function SetPaths\n    {\n        if ($Reset)\n        {\n            $root = $env:ProgramFiles\n            $script:addin = Join-Path $root 'River\\OneMoreAddIn\\River.OneMoreAddIn.dll'\n            $script:proto = Join-Path $root 'River\\OneMoreAddIn\\OneMoreProtocolHandler.exe'\n        }\n        else\n        {\n            $script:root = Get-Location\n            $script:addin = Join-Path $root 'OneMore\\bin\\x86\\Debug\\River.OneMoreAddIn.dll'\n            if (!(Test-Path $addin))\n            {\n                $script:addin = Join-Path $root 'OneMore\\bin\\x64\\Debug\\River.OneMoreAddIn.dll'\n            }\n\n            $script:proto = Join-Path $root 'OneMoreProtocolHandler\\bin\\Debug\\OneMoreProtocolHandler.exe'\n            if (!(Test-Path $addin))\n            {\n                WriteBad \"`nCannot find $addin\"\n                Write-Host \"Build the OneMore solution before calling setregistry.ps1`n\" -Fore Yellow\n                return $false\n            }\n        }\n\n        WriteOK \"OneMore found at $addin\"\n        return $true\n    }\n\n    # ProductVersion may be truncated such as \"4.12\" so this expands it to be \"4.12.0.0\"\n    function MakeVersion\n    {\n        param($version)\n        $parts = $version.Split('.')\n        for (($i = $parts.Length); $i -lt 4; $i++)\n        {\n            $version = \"$version.0\"\n        }\n        WriteOK \"OneMore version is $version\"\n        return $version\n    }\n\n    function SetRoot\n    {\n        WriteTitle 'Root'\n        $0 = (EnsurePath 'Registry::HKEY_CLASSES_ROOT\\River.OneMoreAddIn')\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value 'River.OneMoreAddIn.AddIn'\n        WriteOK $0\n\n        $0 = (EnsurePath 'Registry::HKEY_CLASSES_ROOT\\River.OneMoreAddIn\\CLSID')\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value $guid\n        WriteOK $0\n\n        $0 = (EnsurePath 'Registry::HKEY_CLASSES_ROOT\\River.OneMoreAddIn\\CurVer')\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value 'River.OneMoreAddIn.1'\n        WriteOK $0\n\n        $0 = (EnsurePath 'Registry::HKEY_CLASSES_ROOT\\River.OneMoreAddIn.1')\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value 'Addin class'\n        WriteOK $0\n\n        $0 = (EnsurePath 'Registry::HKEY_CLASSES_ROOT\\River.OneMoreAddIn.1\\CLSID')\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value $guid\n        WriteOK $0\n        return $true\n    }\n\n    function SetAppID\n    {\n        WriteTitle 'AppID'\n        $0 = (EnsurePath \"Registry::HKEY_CLASSES_ROOT\\AppID\\$guid\")\n        Set-ItemProperty $0 -Name 'DllSurrogate' -Type String -Value ''\n        WriteOK $0\n        return $true\n    }\n\n    function SetProtocolHandler\n    {\n        WriteTitle 'Protocol handler'\n        $0 = (EnsurePath 'Registry::HKEY_CLASSES_ROOT\\onemore')\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value 'URL:OneMore Protocol Handler'\n        Set-ItemProperty $0 -Name 'URL Protocol' -Type String -Value ''\n        WriteOK $0\n\n        # onemore:// protocol handler registration\n        $0 = (EnsurePath 'Registry::HKEY_CLASSES_ROOT\\onemore\\shell\\open\\command')\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value \"`\"$proto`\" %1 %2 %3 %4 %5\"\n        WriteOK $0\n        WriteValue \"`\"$proto`\" %1 %2 %3 %4 %5\"\n        return $true\n    }\n\n    function SetCLSID\n    {\n        param([boolean] $wow = $false)\n\n        if ($wow) { $clsid = 'WOW6432Node\\CLSID' } else { $clsid = 'CLSID' }\n        WriteTitle $clsid\n\n        $script:root = Get-Location\n        $resx = Join-Path $root 'OneMore\\Properties\\Resources.Designer.cs'\n        if (!(Test-Path $resx))\n        {\n            WriteBad \"could not find $resx\"\n            return $false\n        }\n        $runtime = Get-Content $resx | where { $_ -match 'Runtime version:(\\d+(?:\\.\\d+){2})' } | foreach { $matches[1] }\n        if (!$runtime)\n        {\n            WriteBad 'could not determine .NET RuntimeVersion'\n            return $false\n        }\n\n        $0 = (EnsurePath \"Registry::HKEY_CLASSES_ROOT\\$clsid\\$guid\")\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value 'River.OneMoreAddIn.AddIn'\n        Set-ItemProperty $0 -Name 'AppID' -Type String -Value $guid\n        WriteOK $0\n\n        $0 = (EnsurePath \"Registry::HKEY_CLASSES_ROOT\\$clsid\\Implemented Categories\\$catid\")\n        WriteOK $0\n\n        $0 = (EnsurePath \"Registry::HKEY_CLASSES_ROOT\\$clsid\\$guid\\InprocServer32\")\n        $asm = \"River.OneMoreAddIn, Version=$pv, Culture=neutral, PublicKeyToken=null\"\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value 'mscoree.dll'\n        Set-ItemProperty $0 -Name 'Assembly' -Type String -Value $asm\n        Set-ItemProperty $0 -Name 'Class' -Type String -Value 'River.OneMoreAddIn.AddIn'\n        Set-ItemProperty $0 -Name 'CodeBase' -Type String -Value $addin\n        Set-ItemProperty $0 -Name 'RuntimeVersion' -Type String -Value \"v$runtime\"\n        Set-ItemProperty $0 -Name 'ThreadingModel' -Type String -Value 'Both'\n        WriteOK $0\n\n        $0 = (EnsurePath \"Registry::HKEY_CLASSES_ROOT\\$clsid\\$guid\\InprocServer32\\$pv\")\n        $asm = \"River.OneMoreAddIn, Version=$pv, Culture=neutral, PublicKeyToken=null\"\n        Set-ItemProperty $0 -Name 'Assembly' -Type String -Value $asm\n        Set-ItemProperty $0 -Name 'Class' -Type String -Value 'River.OneMoreAddIn.AddIn'\n        Set-ItemProperty $0 -Name 'CodeBase' -Type String -Value $addin\n        Set-ItemProperty $0 -Name 'RuntimeVersion' -Type String -Value \"v$runtime\"\n        WriteOK $0\n        WriteValue $addin\n\n        $0 = (EnsurePath \"Registry::HKEY_CLASSES_ROOT\\$clsid\\$guid\\ProgID\")\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value 'River.OneMoreAddIn'\n        WriteOK $0\n\n        $0 = (EnsurePath \"Registry::HKEY_CLASSES_ROOT\\$clsid\\$guid\\Programmable\")\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value ''\n        WriteOK $0\n\n        $0 = (EnsurePath \"Registry::HKEY_CLASSES_ROOT\\$clsid\\$guid\\TypeLib\")\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value $guid\n        WriteOK $0\n\n        $0 = (EnsurePath \"Registry::HKEY_CLASSES_ROOT\\$clsid\\$guid\\VersionIndependentProgID\")\n        Set-ItemProperty $0 -Name '(Default)' -Type String -Value 'River.OneMoreAddIn'\n        WriteOK $0\n\n        return $true\n    }\n\n    function SetUser\n    {\n        WriteTitle 'User'\n        $0 = (EnsurePath \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AppID\\$guid\")\n        Set-ItemProperty $0 -Name 'DllSurrogate' -Type String -Value ''\n        WriteOK $0\n\n        $0 = (EnsurePath 'Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\OneNote\\AddIns\\River.OneMoreAddIn')\n        Set-ItemProperty $0 -Name 'LoadBehavior' -Type DWord -Value 3\n        Set-ItemProperty $0 -Name 'Description' -Type String -Value 'Extension for OneNote'\n        Set-ItemProperty $0 -Name 'FriendlyName' -Type String -Value 'OneMoreAddIn'\n        WriteOK $0\n\n        $0 = (EnsurePath 'Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\River.OneMoreAddIn.dll')\n        Set-ItemProperty $0 -Name Path -Type String -Value $addin\n        WriteOK $0\n        WriteValue $addin\n\n        $0 = (EnsurePath \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Office\\$offversion\\Common\\Security\\Trusted Protocols\\All Applications\\onemore:\")\n        WriteOK $0\n        return $true\n    }\n}\nProcess\n{\n    $vcolor = $Host.PrivateData.VerboseForegroundColor\n    $Host.PrivateData.VerboseForegroundColor = 'DarkGray'\n\n    if (!(ReportOneNoteVersion)) { return }\n    if (!(GetOneNoteProperties)) { return }\n    if (!(SetPaths)) { return }\n\n    $script:pv = MaKeVersion (Get-Item $addin | % { $_.VersionInfo.ProductVersion })\n\n    $ok = SetRoot\n    $ok = SetAppID\n    $ok = SetProtocolHandler\n    $ok = SetCLSID\n\n    if ($onewow)\n    {\n        $ok = SetCLSID $true\n    }\n\n    $ok = SetUser\n\n    $Host.PrivateData.VerboseForegroundColor = $vcolor\n}\n"
        },
        {
          "name": "setversion.ps1",
          "type": "blob",
          "size": 1.78515625,
          "content": "<#\n.SYNOPSIS\nSet the version of OneMore, OneMoreProtocolHandler, and OneMoreSetup\n\n.PARAMETER version\nThe version string to apply. Must be of the form major.minor or major.minor.patch\n#>\n\nparam (\n    [Parameter(Mandatory = $true)]\n    [ValidatePattern({^\\d+\\.\\d+(?:\\.\\d+)?(?:\\-Beta|\\-Experimental)?$})]\n    [string] $version\n    )\n\nBegin\n{\n}\nProcess\n{\n    $0 = '.\\OneMore\\Properties\\AssemblyInfo.cs'\n    $content = (Get-Content $0) -replace 'Version = \"\\d+\\.\\d+(?:\\.\\d+)?\";',\"Version = \"\"$version\"\";\"\n    $content | Out-File $0 -Force\n\n    $0 = '.\\OneMoreCalendar\\Properties\\AssemblyInfo.cs'\n    $content = (Get-Content $0) -replace 'Version = \"\\d+\\.\\d+(?:\\.\\d+)?\";',\"Version = \"\"$version\"\";\"\n    $content | Out-File $0 -Force\n\n    $0 = '.\\OneMoreProtocolHandler\\Properties\\AssemblyInfo.cs'\n    $content = (Get-Content $0) -replace 'Version = \"\\d+\\.\\d+(?:\\.\\d+)?\";',\"Version = \"\"$version\"\";\"\n    $content | Out-File $0 -Force\n\n    $0 = '.\\OneMoreSetupActions\\Properties\\AssemblyInfo.cs'\n    $content = (Get-Content $0) -replace 'Version = \"\\d+\\.\\d+(?:\\.\\d+)?\";',\"Version = \"\"$version\"\";\"\n    $content | Out-File $0 -Force\n\n    $0 = '.\\OneMoreTray\\Properties\\AssemblyInfo.cs'\n    $content = (Get-Content $0) -replace 'Version = \"\\d+\\.\\d+(?:\\.\\d+)?\";',\"Version = \"\"$version\"\";\"\n    $content | Out-File $0 -Force\n\n    $0 = '.\\OneMoreSetup\\OneMoreSetup.vdproj'\n    $guid1 = [Guid]::NewGuid().ToString('B').ToUpper()\n    $guid2 = [Guid]::NewGuid().ToString('B').ToUpper()\n    $content = (Get-Content $0) -replace '\"ProductVersion\" = \"8:\\d+\\.\\d+(?:\\.\\d+)?\"',\"\"\"ProductVersion\"\" = \"\"8:$version\"\"\"\n    $content = $content -replace '\"ProductCode\" = \"8:{[A-F0-9-]+}\"',\"\"\"ProductCode\"\" = \"\"8:$guid1\"\"\"\n    $content = $content -replace '\"PackageCode\" = \"8:{[A-F0-9-]+}\"',\"\"\"PackageCode\"\" = \"\"8:$guid2\"\"\"\n    $content | Out-File $0 -Force\n}\n"
        },
        {
          "name": "stop.ps1",
          "type": "blob",
          "size": 1.4013671875,
          "content": "<#\n.SYNOPSIS\nStop the OneMore add-in dllhost process and then the OneNote process\n#>\n\nparam()\n\nBegin\n{\n    $guid = \"{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\";\n}\nProcess\n{\n    # CommandLine == C:\\WINDOWS\\system32\\DllHost.exe /Processid:{88AB88AB-CDFB-4C68-9C3A-F10B75A5BC61}\n    $processId = gcim Win32_Process | select ProcessId, CommandLine | `\n        where { $_.CommandLine -and $_.CommandLine.Contains($guid) } | `\n        foreach { $_.ProcessId }\n\n    if ($processId)\n    {\n        Write-Host \"... stopping dllhost\" -Fore DarkYellow\n        taskkill /pid $processId /f\n    }\n    else\n    {\n        Write-Host '... dllhost not found' -Fore DarkGray\n    }\n\n    $processId = gcim Win32_Process | select ProcessId, Name | `\n        where { $_.Name -eq 'ONENOTE.EXE' } | `\n        foreach { $_.ProcessId }\n\n    if ($processId)\n    {\n        Write-Host \"... stopping ONENOTE.EXE\" -Fore DarkYellow\n        taskkill /fi \"pid gt 0\" /im ONENOTE.exe /t /f\n    }\n    else\n    {\n        Write-Host '... ONENOTE.EXE not found' -Fore DarkGray\n    }\n\n    $processId = gcim Win32_Process | select ProcessId, Name | `\n        where { $_.Name -eq 'OneMoreTray.exe' } | `\n        foreach { $_.ProcessId }\n\n    if ($processId)\n    {\n        Write-Host \"... stopping OneMoreTray.exe\" -Fore DarkYellow\n        taskkill /fi \"pid gt 0\" /im OneMoreTray.exe /t /f\n    }\n    else\n    {\n        Write-Host '... OneMoreTray.exe not found' -Fore DarkGray\n    }\n}\n"
        },
        {
          "name": "update-sdk.ps1",
          "type": "blob",
          "size": 4.40625,
          "content": "<#\n.SYNOPSIS\nUpdate the OneMore.csproj reference hints to point to the latest installed version\nof the Windows SDK.\n#>\n\nparam ()\n\nBegin\n{\n    $script:DOSDevicesKey = 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\DOS Devices'\n\n    $script:csproj = $null\n    $script:kitsroot = $null\n    $script:sdkver = $null\n    $script:netpath = $null\n    $script:basePath = $null\n    $script:forceBase = $false\n\n\n    function WriteOK\n    {\n        param($text)\n        Write-Host 'OK ' -Fore Green -NoNewLine\n        Write-Host $text\n    }\n\n\n    function GetDriveMapping\n    {\n        # if the current drive is a virtual drive letter (persistent mapping) then the calls to\n        # Resolve-Path will not work, so we need to get the actual target of the drive\n\n        $letter = [System.IO.Path]::GetPathRoot($pwd.path)[0] + ':'\n        $map = Get-ItemProperty $DOSDevicesKey | `\n            Select-Object $letter -Expand $letter -ErrorAction 'SilentlyContinue'\n\n        if ($map -ne $null)\n        {\n            # \\??\\C:\\Development\n            $script:basePath = $map.Substring(4)\n            $script:forceBase = $true\n        }\n        else\n        {\n            $script:basePath = [System.IO.Path]::GetPathRoot($env:SystemRoot)\n        }\n    }\n\n\n    function GetSDKVersion\n    {\n        # use powershell explicitly because pwsh will return wrong path\n        $script:netpath = (powershell -c '[System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory()')\n\n        $0 = 'Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots'\n        if (!(Test-Path $0))\n        {\n            Write-Host 'Windows SDK not found!' -ForegroundColor Red\n            return $null\n        }\n\n        $script:kitsroot = (Get-ItemPropertyValue -Path $0 -Name 'KitsRoot10')\n\n        return (Get-ChildItem $0 -Name | Select-Object -Last 1)\n    }\n\n\n    function PatchReferences\n    {\n        $updated = $false\n\n        $lines = @(Get-Content $csproj)\n        \n        for ($i =0; $i -lt $lines.Count; $i++)\n        {\n            $line = $lines[$i]\n            $handled = $false\n\n            # $matches[1]=netpath\n            if ($line -match '<HintPath>(.+\\\\Framework64\\\\v\\d+\\.\\d+\\.\\d+\\\\)System.Runtime.WindowsRuntime.dll</HintPath>')\n            {\n                $p = [System.IO.Path]::GetFullPath($basePath + $matches[1].ToString())\n                if (($p.ToString() -ne $netpath) -or $forceBase)\n                {\n                    WriteOK \"updating .NET Framework path: $netpath\"\n                    $lines[$i] = $line.Replace($matches[1], $netpath)\n                    $handled = $true\n                }\n                else {\n                    WriteOK 'NET Framework path is already correct'\n                }\n            }\n            # $matches[1]=sdkpath, $matches[2]=version\n            elseif ($line -match '<HintPath>(.+\\\\)UnionMetadata\\\\(\\d+\\.\\d+\\.\\d+\\.\\d+)\\\\Windows.winmd</HintPath>')             \n            {\n                $p = \"$($matches[1])UnionMetadata\\\\$($matches[2])\\\\Windows.winmd\"\n                if (($matches[2] -ne $sdkver) -or ![System.IO.Directory]::Exists($p))\n                {\n                    # always forces base\n                    $fullpath = $kitsroot; 'UnionMetadata', $sdkver, 'Windows.winmd' | `\n                        foreach { $fullpath = Join-Path $fullpath $_ }\n\n                    WriteOK \"patching Windows SDK path: $fullpath\"\n                    $lines[$i] = \"<HintPath>$fullpath</HintPath>\"\n                    $handled = $true\n                }\n                else\n                {\n                    WriteOK 'Windows SDK is already correct'\n                }\n            }\n\n            if ($handled)\n            {\n                $updated = $handled\n            }\n        }\n\n        # Updating $lines in memory is super fast. Also, Out-File -Append seems to have a problem\n        # where it skips lines because it thinks the csproj is locked, probably if VS is open\n\n        if ($updated)\n        {\n            $lines | Out-File $csproj\n        }\n\n        return $updated\n    }\n}\nProcess\n{\n    Push-Location OneMore\n    GetDriveMapping\n    $script:csproj = Resolve-Path .\\OneMore.csproj\n\n    $script:sdkver = GetSDKVersion\n    if ($sdkver) \n    {\n        Write-Host \"`nUpdating Windows SDK $sdkver \" -NoNewline\n        write-Host \"($kitsroot)`n\" -ForegroundColor DarkGray\n\n        if (PatchReferences) {\n            WriteOK 'done'\n        }\n        else {\n            WriteOK 'no changes required'\n        }\n    }\n\n    Pop-Location\n}\n"
        }
      ]
    }
  ]
}