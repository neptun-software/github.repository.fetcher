{
  "metadata": {
    "timestamp": 1736711002811,
    "page": 710,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TouchScript/TouchScript",
      "stars": 1679,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.076171875,
          "content": "* text eol=lf\n*.png binary\n*.jpg binary\n*.dll binary\n*.swf binary\n*.ttf binary"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.21875,
          "content": "#OS junk files\n[Tt]humbs.db\n*.DS_Store\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n.vs\nTouchScript.userprefs\nTouchScript.v12.suo\n\nTouchScript.unitypackage"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2216796875,
          "content": "[submodule \"External/TUIO/TUIOsharp\"]\n\tpath = External/TUIO/TUIOsharp\n\turl = https://github.com/valyard/TUIOsharp.git\n[submodule \"Modules/Playmaker\"]\n\tpath = Modules/Playmaker\n\turl = https://github.com/TouchScript/Playmaker.git"
        },
        {
          "name": "AssetStore",
          "type": "tree",
          "content": null
        },
        {
          "name": "Build",
          "type": "tree",
          "content": null
        },
        {
          "name": "Docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "External",
          "type": "tree",
          "content": null
        },
        {
          "name": "Modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.49609375,
          "content": "![](https://raw.github.com/wiki/TouchScript/TouchScript/images/dvfu.jpg)\n\n## TouchScript — multi-touch library for Unity\n\nWhen working on a project for mobile devices or PCs with touch input you will soon require basic gestures like tap, pan, pinch and zoom — they are not hard to implement manually using Unity API or using a package from Asset Store. The hard part is to make these gestures work together, e.g. to have a button with a tap gesture placed on a zoomable window. This is where you will need **TouchScript** — it makes handling complex gesture interactions on any touch surface an effortless job. \n\n## Why TouchScript?\n- TouchScript abstracts touch and gesture logic from input methods and platforms. Your touch-related code will be the same everywhere.\n- TouchScript supports many touch input methods starting from smartphones to giant touch surfaces: mouse, Windows 7/8 touch, mobile (iOS, Android, Windows Store/Windows Phone), TUIO.\n- TouchScript includes common gesture implementations: press, release, tap, long press, flick, pinch/scale/rotate.\n- TouchScript allows you to write your own gestures and custom pointer input logic.\n- TouchScript manages gestures in transform hierarchy and makes sure that the most relevant gesture will receive touch input.\n- TouchScript comes with many examples and is extensively documented.\n- TouchScript makes it easy to test multi-touch gestures without an actual multi-touch device using built-in second touch simulator (activated with Alt + click), [TUIOPad on iOS](https://itunes.apple.com/us/app/tuiopad/id412446962) or [TUIODroid on Android](https://play.google.com/store/apps/details?id=tuioDroid.impl&hl=en\"). [Read more](Testing-multitouch-on-a-PC).\n- It's free and open-source. Licensed under MIT license.\n\nDeveloped by Valentin Simonov.\n\n## Getting started\n### Downloading the package\nTo use **TouchScript** in your project you either need to \n* download the [latest release from Github](https://github.com/TouchScript/TouchScript/releases),\n* or get it from [Asset Store](https://www.assetstore.unity3d.com/en/#!/content/7394),\n* or clone the [repository](https://github.com/TouchScript/TouchScript) and use the source ([more info on how to do it](https://github.com/TouchScript/TouchScript/wiki/How-to-Contribute)).\n\n### Your first TouchScript project\nTo test how TouchScript works, create an empty scene and drag two prefabs from `TouchScript/Prefabs` folder to the scene: `TouchManager` and `Cursors`. Press Play and click or touch (if your PC supports touch input) the Game View — you will see colored circles, pointer cursors.\n\n> Note: to simulate a second pointer you can hold Alt and click anywhere within the Game View.\n\nYou can make any GameObject react to touch input — just attach one of the scripts called Gestures to it. TouchScript ships with a few built-in Gestures which you can find in `Component/TouchScript/Gestures` menu. It is also possible to write your own gestures.\n\nTo test how built-in Gestures work, create an empty cube in the scene and attach a `TransformGesture` to it either from `Component` menu or `Add Component` button. Make the cube large enough to be able to touch it with two fingers. Attach another component called `Transformer` to the cube — this component listens to events from `TransformGesture` and applies translation, rotation and scaling to the GameObject.\n\nPress Play. Note how you can drag the object with one touch and scale or rotate it with two touches. Don't forget that you can use Alt + click to simulate a second pointer ([read more more about testing multi-touch gestures](https://github.com/TouchScript/TouchScript/wiki/Testing-multitouch-on-a-PC)).\n\n### Examples\nTouchScript comes with many examples in `TouchScript/Examples` folder. Open `Examples.unity` scene and read description for every example to find out what it is about.  \n\n[All examples are explaned here.](https://github.com/TouchScript/TouchScript/wiki/Examples)\n\n### What to read next\n- [How to receive a pointer.](https://github.com/TouchScript/TouchScript/wiki/Pointer-Input)\n- [What is a Gesture and how to work with it.](https://github.com/TouchScript/TouchScript/wiki/Gestures)\n- [What is an Input Source and why it is needed.](https://github.com/TouchScript/TouchScript/wiki/Input-Sources)\n- [What is a Layer and why it is needed.](https://github.com/TouchScript/TouchScript/wiki/Layers)\n- [Some info on how TouchScript works internally.](https://github.com/TouchScript/TouchScript/wiki/Main-Ideas-Behind-TouchScript)\n- [How to affect which objects can be touched.](https://github.com/TouchScript/TouchScript/wiki/Modifying-Hits)\n- [How to change touch coordinates from an input device.](https://github.com/TouchScript/TouchScript/wiki/Remapping-Coordinates-From-an-Input-Source)\n- [How to write a custom Gesture.](https://github.com/TouchScript/TouchScript/wiki/Tutorial.-Writing-a-Custom-Gesture.)\n- [How you can help.](https://github.com/TouchScript/TouchScript/wiki/How-to-Contribute)\n\n## Need help?\n> If you have a problem using TouchScript or running examples please check the [FAQ](FAQ) before submitting issues.\n\n - [FAQ](FAQ)  \n_Some of the questions have been already asked multiple times. Check if yours is in the list._\n - [Documentation](http://touchscript.github.io/docs/)  \n_Complete up-to-date generated docs with all public API annotated._\n - [Official Forum](http://touchprefab.com/index.php)  \n_Want to ask a question about TouchScript? Use the official Forum._\n - [Issues](https://github.com/TouchScript/TouchScript/issues)  \n_Found a bug? Got a feature request? Feel free to post it in Issues._  \n"
        },
        {
          "name": "Resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "Source",
          "type": "tree",
          "content": null
        },
        {
          "name": "TouchScript.DotSettings",
          "type": "blob",
          "size": 4.548828125,
          "content": "﻿<wpf:ResourceDictionary xml:space=\"preserve\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:s=\"clr-namespace:System;assembly=mscorlib\" xmlns:ss=\"urn:shemas-jetbrains-com:settings-storage-xaml\" xmlns:wpf=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_FOR_STMT/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTIPLE_DECLARATION/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS/@EntryValue\">True</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/EMPTY_BLOCK_STYLE/@EntryValue\">TOGETHER_SAME_LINE</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_USINGS_STMT/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AROUND_MULTIPLICATIVE_OP/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LINES/@EntryValue\">False</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Constants/@EntryIndexedValue\">&lt;Policy Inspect=\"True\" Prefix=\"\" Suffix=\"\" Style=\"AA_BB\" /&gt;</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue\">&lt;Policy Inspect=\"True\" Prefix=\"\" Suffix=\"\" Style=\"AA_BB\" /&gt;</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue\">&lt;Policy Inspect=\"True\" Prefix=\"\" Suffix=\"\" Style=\"aaBb\" /&gt;</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue\">&lt;Policy Inspect=\"True\" Prefix=\"\" Suffix=\"\" Style=\"aaBb\" /&gt;</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticReadonly/@EntryIndexedValue\">&lt;Policy Inspect=\"True\" Prefix=\"\" Suffix=\"\" Style=\"AA_BB\" /&gt;</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=StaticReadonly/@EntryIndexedValue\">&lt;Policy Inspect=\"True\" Prefix=\"\" Suffix=\"\" Style=\"AA_BB\" /&gt;</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/UserRules/=1086015e_002D32bf_002D4ab3_002Da595_002Deb37cf7f6a12/@EntryIndexedValue\">&lt;Policy&gt;&lt;Descriptor Staticness=\"Static, Instance\" AccessRightKinds=\"Private, Protected, ProtectedInternal, Internal\" Description=\"Fields (not public)\"&gt;&lt;ElementKinds&gt;&lt;Kind Name=\"FIELD\" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect=\"True\" Prefix=\"\" Suffix=\"\" Style=\"aaBb\" /&gt;&lt;/Policy&gt;</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/UserRules/=59479a4e_002D2d86_002D4f96_002Dab21_002D3dbba101a743/@EntryIndexedValue\">&lt;Policy&gt;&lt;Descriptor Staticness=\"Static, Instance\" AccessRightKinds=\"Private, Protected, ProtectedInternal, Internal\" Description=\"Methods (not public)\"&gt;&lt;ElementKinds&gt;&lt;Kind Name=\"METHOD\" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect=\"True\" Prefix=\"\" Suffix=\"\" Style=\"aaBb\" /&gt;&lt;/Policy&gt;</s:String>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAddAccessorOwnerDeclarationBracesMigration/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateThisQualifierSettings/@EntryIndexedValue\">True</s:Boolean></wpf:ResourceDictionary>"
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 1.57421875,
          "content": "This software is distributed under The MIT License (MIT).\n\nCopyright (c) 2015 Valentin Simonov and other contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nAssets used in examples:\n1. Skybox Volume 2 (https://www.assetstore.unity3d.com/en/#!/content/3392)\n2. Planet Earth Free (https://www.assetstore.unity3d.com/en/#!/content/23399)\n3. Wooden Table and Chair (https://www.assetstore.unity3d.com/en/#!/content/18996)\n4. Touch gesture illustrations provided by GestureWorks® (www.gestureworks.com)\n5. Cartoon UI elements (http://opengameart.org/content/free-game-gui)\n6. Cat images are just random images from Google search."
        }
      ]
    }
  ]
}