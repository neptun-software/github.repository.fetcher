{
  "metadata": {
    "timestamp": 1736710865075,
    "page": 415,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "qiankanglai/LoopScrollRect",
      "stars": 2356,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3818359375,
          "content": "/[Ll]ibrary/\r\n/[Tt]emp/\r\n/[Oo]bj/\r\n/[Bb]uild/\r\n/Logs/\r\n# Autogenerated VS/MD solution and project files\r\n*.csproj\r\n*.unityproj\r\n*.sln\r\n*.suo\r\n*.tmp\r\n*.user\r\n*.userprefs\r\n*.pidb\r\n*.booproj\r\n\r\n# Unity3D generated meta files\r\n*.pidb.meta\r\n\r\n# Unity3D Generated File On Crash Reports\r\nsysinfo.txt\r\n\r\n# OS generated\r\n.DS_Store\r\n.DS_Store?\r\n._*\r\n.Spotlight-V100\r\n.Trashes\r\nehthumbs.db\r\nThumbs.db\r\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.32421875,
          "content": "# Changelog\n\n## [1.1.2] - 2022-07-18\n### Added\n- Infinity sample for multi prefab.\n### Changed\n- Fix API below Unity 2020\n- Fix `RefreshCells` with total count changes.\n- Check `m_Content` afterwards.\n- Fix SizeHelper with no content spacing considered.\n\n## [1.1.1] - 2022-04-23\n### Added\n- Register at OpenUPM.\n### Changed\n- Fix `RefreshCells` when `totalCount` increases.\n\n## [1.1.0] - 2022-03-25\n### Added\n- Changelog\n- Add support for different sources.\n- More complex demo from @SyaoranChang (Great thanks for valuable suggestion)\n### Changed\n- ReOrganize Project with Unity Package.\n- Improve scrolling within tiny steps.\n\n## [1.0.6] - 2021-08-01\n### Changed\n- Continue seperating data source and prefab source.\n- Fix padding from @CodingFishWu.\n- Fix issue when grid is not full from @zxsean.\n\n## [1.0.5] - 2020-10-06\n### Changed\n- Seperate data source.\n- Improve performance with more skippable cases and better pooling.\n- Implement `fillViewRect` in `RefillCells` from @roointan.\n\n## [1.0.4] - 2018-01-04\n### Added\n- Quick jump.\n\n## [1.0.3] - 2016-10-12\n### Added\n- ScrollBar support.\n### Changed\n- Fix Grid issues.\n\n## [1.0.2] - 2016-01-21\n### Changed\n- Code cleanup.\n- Performance optimization from @zxsean.\n\n## [1.0.1] - 2015-12-02\n### Added\n- Infinity version.\n- Reverse Direction mode.\n- Threshold for better control.\n\n## [1.0.0] - 2015-08-15"
        },
        {
          "name": "CHANGELOG.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: ab3222005e06e4c4aad63f7fd097f61c\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Editor.meta",
          "type": "blob",
          "size": 0.1875,
          "content": "fileFormatVersion: 2\nguid: b10ceda9bec25b14ea5e190eb9bb0341\nfolderAsset: yes\ntimeCreated: 1476279504\nlicenseType: Free\nDefaultImporter:\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "Images~",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2017 Kanglai Qian\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LICENSE.meta",
          "type": "blob",
          "size": 0.1513671875,
          "content": "fileFormatVersion: 2\nguid: 715b0533d08f38d40829525f03a34ffd\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.3486328125,
          "content": "# Loop Scroll Rect\r\n\r\n[![openupm](https://img.shields.io/npm/v/me.qiankanglai.loopscrollrect?label=openupm&registry_uri=https://package.openupm.com)](https://openupm.com/packages/me.qiankanglai.loopscrollrect/)\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n\r\nThese scripts help make your ScrollRect `Reusable`, because it will only build cells when needed. If you have a large number of cells in a scroll rect, you absolutely need it! It will save a lot of time loading and draw call, along with memory in use, while still working smoothly.\r\n\r\n中文说明请看[这里](http://qiankanglai.me/2015/08/15/LoopScrollRect/)。\r\n\r\n## Installation\r\n\r\nOpen Package Manager and Add package from git URL `https://github.com/qiankanglai/LoopScrollRect.git`.\r\n\r\nWith [OpenUPM](https://openupm.com/), just one command `openupm add me.qiankanglai.loopscrollrect`.\r\n\r\nWith older Unity version, just clone the repo and put into `Assets/`.\r\n\r\n## Demo\r\n\r\nDemo for Loop Scroll Rect. Each cell knows its own index, and it is able to modify its content/size/color easily.\r\n\r\nAlso ScrollBar is supported now! It supports both vertical & horizontal directions, back and forth.\r\n\r\n![Demo1](Images~/demo1.gif)\r\n\r\n![Demo2](Images~/demo2.gif)\r\n\r\nDemo without mask. As you can see, the cells are only instantiated when needed and recycled.\r\n\r\n![Demo3](Images~/demo3.gif)\r\n\r\n**New**: Scroll to Index\r\n\r\n![ScrollToIndex](Images~/ScrollToIndex.gif)\r\n\r\n## Introduction\r\n\r\nThe original idea comes from @ivomarel's [InfinityScroll](https://github.com/ivomarel/InfinityScroll). After serveral refactorisations, I almost rewrite all the codes:\r\n- Avoid using `sizeDelta` directly since it doesn't always mean size\r\n- Support GridLayout\r\n- Avoid blocking when dragging back\r\n- Take advantage of pool rather than instantiate/destroy every time\r\n- Improve some other details for performance\r\n- Supports reverse direction\r\n- **Supports ScrollBar** (this doesn't work in Infinite mode, and may behavior strange for cells with different size)\r\n\r\nMy scripts copies `ScrollRect` from [UGUI](https://bitbucket.org/Unity-Technologies/ui) rather than inherit `ScrollRect` like InfinityScroll. I need to modify some private variants to make dragging smooth. All my codes is wrapped with comments like `==========LoopScrollRect==========`, making maintaining a little easier.\r\n\r\n## Example\r\n\r\nPlease refer to `InitOnStart.cs` for quick example implmentation. It's high recommended for implmentating your own cache pool.\r\n\r\n### Infinite Version\r\n\r\nIf you need scroll infinitely, you can simply set `totalCount` to a negative number.\r\n\r\n### Quick Jump\r\n\r\nI've implemented a simple version with `Coroutine`. You can use the following API:\r\n\r\n    public void SrollToCell(int index, float speed)\r\n\r\nHere is a corner case unsolved yet: You can't jump to the last cells which cannot be pulled to the start.\r\n\r\n## Example: Loop Vertical Scroll Rect\r\n\r\nThese steps may be confusing, so you can just open the demo scene and copy & paste :D\r\n\r\nYou can also remove EasyObjPool and use your pool instead.\r\n\r\n- Prepare cell prefabs\r\n    - The cell needs `Layout Element` attached and preferred width/height\r\n    - You should add a script receiving message `void ScrollCellIndex (int idx) `\r\n\r\n![ScrollCell](Images~/ScrollCell.png)\r\n\r\n- Right click in Hierarchy and click **UI/Loop Horizontal Scroll Rect** or **UI/Loop Vertical Scroll Rect**. It is the same for these two in the Component Menu.\r\n    - Init in Start: call Refill cells automatically when Start\r\n    - Prefab Pool: the EasyObjPool gameObject\r\n    - Prefab Pool Name: the corresponding pool in step 1\r\n    - Total Count: How many cells are available (index: 0 ~ TotalCount-1)\r\n    - Threshold: How many additional pixels of content should be prepared before start or after end?\r\n    - ReverseDirection: If you want scroll from bottom or right, you should toggle this\r\n    - Clear Cells: remove existing cells and keep uninitialized\r\n    - Refill Cells: initialize and fill up cells\r\n\r\n![LoopVerticalScrollRect](Images~/LoopVerticalScrollRect.png)\r\n\r\nIf you need scroll from top or left, setting content's pivot to 1 and disable ReverseDirection. Otherwise, you should set 0 to pivot and enable ReverseDirection (I have made `VerticalScroll_Reverse` in the demo scene as reference).\r\n\r\nI highly suggests you trying these parameters by hand. More details can be found in the demo scene.\r\n"
        },
        {
          "name": "README.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: 1849c0aa4b3db7b4abb98f58e56ea315\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Runtime.meta",
          "type": "blob",
          "size": 0.1875,
          "content": "fileFormatVersion: 2\nguid: ec0ddcd49b026ab4fb6b7d49fd693e57\nfolderAsset: yes\ntimeCreated: 1439395131\nlicenseType: Free\nDefaultImporter:\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "Samples~",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.8095703125,
          "content": "{\n  \"name\": \"me.qiankanglai.loopscrollrect\",\n  \"version\": \"1.1.2-p1\",\n  \"displayName\": \"LoopScrollRect\",\n  \"description\": \"make your ScrollRect `Reusable`\",\n  \"repository\": {\n      \"type\": \"git\",\n      \"url\": \"ssh://git@github.com:qiankanglai/LoopScrollRect.git\"\n  },\n  \"unity\": \"2019.4\",\n  \"documentationUrl\": \"https://github.com/qiankanglai/LoopScrollRect/blob/master/README.md\",\n  \"licensesUrl\": \"https://github.com/qiankanglai/LoopScrollRect/blob/master/LICENSE.md\",\n  \"dependencies\": {\n    \"com.unity.ugui\": \"1.0.0\"\n  },\n  \"keywords\": [\n    \"UGUI\"\n  ],\n  \"author\": {\n    \"name\": \"Kanglai Qian\",\n    \"email\": \"qiankanglai@gmail.com\",\n    \"url\": \"https://qiankanglai.me\"\n  },\n  \"samples\": [\n    {\n      \"displayName\": \"Demo\",\n      \"description\": \"Contains several Loop Scroll demo\",\n      \"path\": \"Samples~/Demo\"\n    }\n  ]\n}\n"
        },
        {
          "name": "package.json.meta",
          "type": "blob",
          "size": 0.1591796875,
          "content": "fileFormatVersion: 2\nguid: f78e6866c9700084eac29c4d47125214\nPackageManifestImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        }
      ]
    }
  ]
}