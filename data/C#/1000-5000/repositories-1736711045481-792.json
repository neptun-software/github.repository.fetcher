{
  "metadata": {
    "timestamp": 1736711045481,
    "page": 792,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dwmkerr/sharpshell",
      "stars": 1544,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitbook.yaml",
          "type": "blob",
          "size": 0.150390625,
          "content": "# Our docs are rooted in the docs folder.\nroot: ./docs/\n\n# Ensure that we use the README.md file from the project root.\nstructure:\n  readme: ../README.md\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6865234375,
          "content": "#ignore thumbnails created by windows/mac\nThumbs.db\n.DS_Store\n\n#Ignore files build by Visual Studio\n*.user\n*.aps\n*.pch\n*.vspscc\n*_i.c\n*_p.c\n*.ncb\n*.suo\n*.bak\n*.cache\n*.ilk\n*.log\n.vs/\n[Bb]in\n[Dd]ebug*/\n*.sbr\nobj/\n[Rr]elease*/\n_ReSharper*/\nSharpShell/.nuget\nSharpShell/ipch/\n*.sdf\n*.opensdf\nBuild/Tools/ServerManager.vshost.exe.manifest\n!Release/\nRelease/2.*\nRelease/nuspec/SharpShell/lib\nRelease/nuspec/SharpShellTools/lib\nSharpShell/packages\n*.db\n*.opendb\n\n# Artifacts\nSharpShell/artifacts\n\n# Artifacts which are automatically copied into other asseblies.\nSharpShell/Tools/ServerRegistrationManager/EmbeddedReferences/SharpShell.dll\n\n# Test project user specific files.\nDllWithResources.vcxproj.filters\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.380859375,
          "content": "## Version 2.7.2.0\n\n- Context Menus: Shell context menu extension items are inserted in the correct system defined location, fixes [#313](https://github.com/dwmkerr/sharpshell/issues/313)\n\n## Version 2.7.1\n\n- Property Pages: Fix potential crash when using Tab Controls in property pages.\n\n## Version 2.7.0\n\n- Property Pages: Added a new 'Resources' property sheet sample.\n- Server Registration: If file extension classes are not present in the registry, then SharpShell will create them. If you discover *new* issues with registration, it may be worth quickly checking with the prior version, as there is small risk that new issues will occur due to these changes.\n\n## Version 2.6.1\n\n- Property Pages: Fix issue which led to intermittent explorer.exe crashes (shell was unloading servers too early it seemed)\n- Property Pages: Fix issue with incorrect background colour and controls which disappear.\n- Property Pages: Are resized automatically, which fixes some scaling issues.\n- Property Pages: Improved logging for Property Pages.\n- Native Bridge: Improved Native Bridge logging.\n\n## Version 2.6.0\n\nNote that release 2.4.3 was incorrectly released as 2.5.3. This release jumps to 2.6.0 to attempt to minimise disruption.\n\n- Updated samples, documentation and code for Desk Band Extensions.\n- Better logging for server registration activities.\n- Bug fixes for the Desk Band Extensions.\n- Better support for Context Menus in the Test Shell.\n- The Native Bridge uses the static C Runtime Library, which should eliminate certain runtime issues for property sheets.\n\n\n## Version 2.4.3\n\n- Update to Visual Studio 2017\n- ServerRegistrationManager deployed as part of CI/CD\n- SharpShell always built in Release mode for CI/CD\n\n## Version 2.4.1\n\n- Fixed a bug where the Server Registration Manager could only register servers which were referencing the _same_ version of the SharpShell assembly as the manager itself (#194).\n\n## Version 2.4\n\n- Added `DesktopBackground` and `DirectoryBackground` association types.\n- Context Menu Handlers: Fixed a bug where Unicode characters would not be rendered correctly.\n- Server Registration Manager: Additional flag to force x86 or x64.\n- Custom Namespace Extension: Fixed crash on Windows 10 when navigating away from the extension.\n- Shell Preview Handler: Fixed file permission bug.\n- Shell Preview Handler: Fixed resize bug.\n- Shell Namespace Extension: Interop bugfixes.\n\n## Version 2.3\n\n * When IconHandlers are registered, if the icon class doesn't exist it is\n   created.\n * The shell is notified when extensions are registered, meaning the explorer\n   process does not need to be restarted. \n\n## Version 2.2\n\n * SharpShell is now built with Visual Studio 2013 Community Edition.\n * Overhauled the logging mechanism.\n * Fixed preview handler bugs #33, #58, #50, #52, #56.\n * Preview handlers no longer flicker.\n\n\n### Breaking Changes\n\n * `Logging.DebugLog` and `Logging.DebugError` are no longer available. Logging is \n   enabled based on configuration in the registry rather than debug mode. Use \n   `Logging.Log` or `Logging.Error` instead.\n * `Logging` class has no facility to enable/disable logging.\n * Preview Handlers MUST be decorated with the `PreviewHandler` attribute. This\n   pattern will be implemented for other extensions in time.\n\n### srm\n\n* Show SharpShell config on the machine with `srm config`.\n\n### Development\n\n* The SharpShell assembly embedded into SRM is updated automatically during the build.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Dave Kerr\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.068359375,
          "content": "# SharpShell\n\n[![Build status](https://ci.appveyor.com/api/projects/status/ebvrjdsjm8ne7sdw/branch/master?svg=true)](https://ci.appveyor.com/project/dwmkerr/sharpshell/branch/master) [![codecov](https://codecov.io/gh/dwmkerr/sharpshell/branch/master/graph/badge.svg)](https://codecov.io/gh/dwmkerr/sharpshell) [![NuGet](https://img.shields.io/nuget/dt/SharpShell.svg)](https://www.nuget.org/packages/SharpShell/) [![GuardRails badge](https://badges.guardrails.io/dwmkerr/sharpshell.svg?token=569f2cc38a148f785f3a38ef0bcf5f5964995d7ca625abfad9956b14bd06ad96&provider=github)](https://dashboard.guardrails.io/default/gh/dwmkerr/sharpshell)\n\nSharpShell makes it easy to create Windows Shell Extensions using the .NET Framework.\n\n<!-- vim-markdown-toc GFM -->\n\n* [Installation](#installation)\n* [User Guide](#user-guide)\n* [Supported Shell Extensions](#supported-shell-extensions)\n    * [Shell Context Menus](#shell-context-menus)\n    * [Icon Handlers](#icon-handlers)\n    * [Info Tip Handlers](#info-tip-handlers)\n    * [Drop Handlers](#drop-handlers)\n    * [Preview Handlers](#preview-handlers)\n    * [Icon Overlay Handlers](#icon-overlay-handlers)\n    * [Thumbnail Handlers](#thumbnail-handlers)\n    * [Property Sheet Extensions](#property-sheet-extensions)\n    * [Desk Band Extensions](#desk-band-extensions)\n* [Developer Guide](#developer-guide)\n    * [Building & Testing](#building--testing)\n    * [Enabling Logging](#enabling-logging)\n    * [CI/CD](#cicd)\n    * [Creating a Release](#creating-a-release)\n* [Compatibility](#compatibility)\n* [Documentation](#documentation)\n* [Contributor Guide](#contributor-guide)\n* [Testimonials](#testimonials)\n* [Projects that use SharpShell](#projects-that-use-sharpshell)\n* [Thanks](#thanks)\n* [License](#license)\n\n<!-- vim-markdown-toc -->\n\nIf you find this project useful, please consider [Sponsoring](https://github.com/sponsors/dwmkerr)!\n\n## Installation\n\nInstall SharpShell by searching for 'SharpShell' in the NuGet package manager, or using the Package Manager Console:\n\n```\nPM > Install-Package SharpShell\n```\n\nThe latest official packages are listed below:\n\n| Component                   | Package                                                                                                                                                              |\n|-----------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `SharpShell`                | [![SharpShell NuGet Package](https://img.shields.io/nuget/v/SharpShell.svg)](https://www.nuget.org/packages/SharpShell)                                              |\n| `SharpShellTools`           | [![SharpShellTools Nuget Package](https://img.shields.io/nuget/v/SharpShellTools.svg)](https://www.nuget.org/packages/SharpShellTools)                                         |\n| `ServerRegistrationManager` | [![ServerRegistrationManager NuGet Package](https://img.shields.io/nuget/v/ServerRegistrationManager.svg)](https://www.nuget.org/packages/ServerRegistrationManager) |\n\n## User Guide\n\nAll documentation is being moved to [`docs`](./docs).\n\nSome of the most useful guides are:\n\n- [Deploying SharpShell Servers](./docs/installing/installing.md)\n- [Troubleshooting](./docs/troubleshooting.md)\n\n## Supported Shell Extensions\n\nThe following extensions are supported by SharpShell.\n\n### Shell Context Menus\n\nShell Context Menus allow the context menus used in Windows Explorer to be customised.\n\n![Shell Context Menu Screenshot](./docs/extensions/contextmenuhandler/contextmenu-screenshot.png)\n\n[Step by Step Tutorial on the CodeProject](http://www.codeproject.com/Articles/512956/NET-Shell-Extensions-Shell-Context-Menus).\n\n### Icon Handlers\n\nShell Icon Handlers are DLLs that are registered in the system to customise the appearance of icons.\n\n![Shell Icon Handler Screenshot](./docs/extensions/iconhandler/iconhandler-screenshot.png)\n\n[Step by Step Tutorial on the CodeProject](http://www.codeproject.com/Articles/522665/NET-Shell-Extensions-Shell-Icon-Handlers).\n\n### Info Tip Handlers\n\nShell Info Tip Handlers are DLLs that are registered in the system to customise tooltips for items in the shell.\n\n![Shell Info Tip Handler Screenshot](./docs/extensions/infotiphandler/infotiphandler-screenshot.png)\n\n[Step by Step Tutorial on the CodeProject](http://www.codeproject.com/Articles/527058/NET-Shell-Extensions-Shell-Info-Tip-Handlers).\n\n### Drop Handlers\n\nShell Drop  Handlers are DLLs that are registered in the system to extend the drag and drop functionality in the Shell.\n\n![Shell Drop Handler Screenshot](./docs/extensions/drophandler/drophandler-screenshot.png)\n\n[Step by Step Tutorial on the CodeProject](http://www.codeproject.com/Articles/529515/NET-Shell-Extensions-Shell-Drop-Handlers).\n\n### Preview Handlers\n\nShell PreviewHandlers are dlls that can be registered in the system to allow you to create visually rich previews for items that are displayed directly in Windows Explorer.\n\n![Shell Preview Handler Screenshot](./docs/extensions/previewhandler/previewhandler-screenshot.png)\n\n[Step by Step Tutorial on the CodeProject](http://www.codeproject.com/Articles/533948/NET-Shell-Extensions-Shell-Preview-Handlers).\n\n### Icon Overlay Handlers\n\nShell Icon Overlay Handlers can be really useful. They let you display an icon overlay over shell objects to provide extra information. Programs like Dropbox use these overlays to show whether files are synchronised or not.\n\n![Shell Icon Overlay Handler Screenshot](./docs/extensions/overlayhandler/overlayhandler-screenshot.png)\n\n[Step by Step Tutorial on the CodeProject](http://www.codeproject.com/Articles/545781/NET-Shell-Extensions-Shell-Icon-Overlay-Handlers).\n\n### Thumbnail Handlers\n\nShell Thumbnail Handlers (or as they're sometimes known, Shell Thumbnail Providers) are COM servers that you can write to customise the appearance of the thumbnail icons in the Windows Shell.\n\n![Shell Thumbnail Handler Screenshot](./docs/extensions/thumbnailhandler/thumbnailhandler-screenshot.jpg)\n\n[Step by Step Tutorial on the CodeProject](http://www.codeproject.com/Articles/563114/NET-Shell-Extensions-Shell-Thumbnail-Handlers).\n\n### Property Sheet Extensions\n\nThese are extensions that add extra pages to the property sheets shown for shell items such as files, network shares, folders and so on.\n\n![Shell Thumbnail Handler Screenshot](./docs/extensions/propertysheetextension/propertysheetextensions-screenshot.png)\n\n[Documentation](./docs/extensions/propertysheetextension/propertysheetextension.md).\n\n### Desk Band Extensions\n\nThese are extensions which add custom functionality to the Windows Desktop or Task Bar.\n\n![Shell Desk Band Screenshot](./docs/extensions/deskband/deskband-screenshot.png)\n\n[Documentation](./docs/extensions/deskband/deskband.md)\n\n## Developer Guide\n\nThe repository made up the following components:\n\n| Component                                                   | Description                                            |\n|-------------------------------------------------------------|--------------------------------------------------------|\n| [`docs/`](./docs)                                           | Project Documentation                                  |\n| [`SharpShell/`](./SharpShell)                               | The core SharpShell assemblies.                        |\n| [`SharpShellInstallerSample/`](./SharpShellInstallerSample) | An example of an installer for a SharpShell extension. |\n| [`SharpShellNativeBridge/`](./SharpShellNativeBridge)      | Interface to Win32 code needed for property sheets.    |\n| [`Tests/`](./Tests)                                         | Regression test scripts and data.                      |\n\nMost developers will only need to work with the code in the SharpShell folder.\n\nSharpShell is currently developed in Visual Studio 2017, and can be built using the [Community Edition](https://visualstudio.microsoft.com/vs/community/).\n\nIn order to maximize compatibility, we do not use the latest version of each SDK. The following components are needed:\n\n- .NET Core runtime\n- Microsoft Visual Studio 2017 Installer Projects\n-  [Chocolatey](https://chocolatey.org/) (choco)\n\n### Building & Testing\n\nAs long as the correct components have be installed for Visual Studio, you should be able to just open the main `./SharpShell/SharpShell.sln` solution to build, test and run any of the code or samples.\n\nTo build using Powershell (which is what is done in the CI/CD process), first allow Powershell to execute scripts and then install Chololatey:\n\n```ps1\nSet-ExecutionPolicy Bypass -Scope Process -Force\n[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n```\n\nNow the following scripts to run the processes:\n\n| Script         | Notes                                                                                                                                |\n|----------------|--------------------------------------------------------------------------------------------------------------------------------------|\n| `config.ps1`   | Ensure your machine can run builds by installing necessary components such as `nunit`. Should only need to be run once.              |\n| `build.ps1`    | Build all solutions. Ensures that we build both 32/64 bit versions of native components.                                             |\n| `test.ps1`     | Run all tests, including those in samples.                                                                                           |\n| `coverage.ps1` | Create a coverage report for the main `SharpShell` project (samples are not included). Reports are written to `./artifacts/coverage` |\n\nThese scripts will generate various artifacts which may be useful to review:\n\n```\nartifacts\\\n  \\build\n    \\SharpShell           # The SharpShell assembly.\n  \\tests                  # NUnit Test Reportsd\n  \\coverage               # Coverage Reports\n```\n\nOnly assemblies and binaries which need to be copied into other projects are added to the `artifacts/build` folder. This makes chaining more complex dependencies manageable. The solution is fairly standard, but be aware that:\n\n1. `SharpShell` contains the `SharpShellNativeBridge` binaries. To update them, build the `SharpShellNativeBridge` solution from source and embed the new binaries.\n4. The `SharpShell` assembly is copied to `artifacts/build/SharpShell` folder after a successful build.\n5. The `SharpShell` assembly is embedded in the `ServerRegistrationManager` binary. The assembly is copied from `artifacts/build/SharpShell` prior to the server registration manager build.\n\nAll of the above steps are automated, and will run whether a build is trigger from Visual Studio, the `build.ps1` script or `msbuild`.\n\n### Enabling Logging\n\nA detailed guide explaining how to configure and use logging for SharpShell is at:\n\n[./docs/logging/logging.md](./docs/logging/logging.md)\n\nYou can also use the [SharpShell-Easy-Log](https://github.com/ElektroStudios/SharpShell-Easy-Log) tool to quickly enable/disable logging options and view the logs realtime:\n\n[![SharpShell Easy Log](./docs/logging/sharpshell-easy-log.png)](https://github.com/ElektroStudios/SharpShell-Easy-Log)\n\nThe tool is available at: [github.com/ElektroStudios/SharpShell-Easy-Log](https://github.com/ElektroStudios/SharpShell-Easy-Log)\n\n### CI/CD\n\nCI/CD is currently handled by AppVeyor. AppVeyor will:\n\n1. Build the project\n2. Run the tests\n3. Create the core SharpShell NuGet Package\n4. Publish the package to [nuget.org](https://nuget.org) if a version tag is pushed\n5. Create a GitHub release with the package if a version tag is pushed\n\n### Creating a Release\n\nTo create a release:\n\n1. Update the version number in [`SharedAssemblyInfo.cs`](./SharpShell/SharedAssemblyInfo.cs)\n2. Update the [`CHANGELOG.md`](./CHANGELOG.md)\n3. Create a new version tag, then push\n\nAppVeyor will build and publish a new NuGet package and as long as a new semver tag is pushed.\n\n## Compatibility\n\nThe goal is to maximize compatibility for platforms which are supported. For platforms which are no longer in support SharpShell _may_ work, but is not tested.\n\nNote: At the moment compatibility across platforms is being verified, this section of the documentation will be updated soon.\n\n🟢 - Fully Supported; tested and verified as part of the build process\n🟠 - Partly Supported; potentially will work, but no longer formally supported or tested\n🔴 - Not Supported; confirmed that this will not work, unless the code is modified\n\n| Component          | Compatibility       |\n|--------------------|---------------------|\n| **Windows**        |                     |\n| Windows 11         | 🟢 Fully Supported  |\n| Windows 10         | 🟢 Fully Supported  |\n| Windows 8.1        | 🟠 Partly Supported |\n| Windows 8          | 🟠 Partly Supported |\n| Windows 7          | 🟠 Partly Supported |\n| **Visual Studio**  |                     |\n| Visual Studio 2022 | 🟢 Fully Supported  |\n| Visual Studio 2019 | 🟢 Fully Supported  |\n| Visual Studio 2017 | 🟠 Partly Supported |\n| Visual Studio 2015 | 🟠 Partly Supported |\n| **msbuild**        |                     |\n| msbuild 17.3       | 🟢 Fully Supported  |\n| msbuild 16.11      | 🟢 Fully Supported  |\n| msbuild 15.9       | 🟠 Partly Supported |\n\n## Documentation\n\nDocumentation is still work in progress, and any contributions would be most welcome!\n\n- [COM Server Associations](./docs/com-server-associations.md)\n- [Context Menus](./docs/context-menu.md)\n- [Managed Shell Extensions](./docs/managed-shell-extensions.md)\n- [Logging](./docs/logging/logging.md)\n- [Troubleshooting](./docs/troubleshooting.md)\n\n## Contributor Guide\n\nThe project is maintained by the following group:\n\n| User                                        | Role                         |\n|---------------------------------------------|------------------------------|\n| [`dwmkerr`](https://github.com/dwmkerr)     | Project creator, maintainer. |\n| [`Countryen`](https://github.com/Countryen) | Project maintainer.          |\n\nWe have a [Code of Conduct](.github/CODE_OF_CONDUCT.md) aimed at keeping the community welcoming and inclusive.\n\n## Testimonials\n\nIf you've used SharpShell and would like to add a testimonial, just send me a message!\n\n> CmisSync, our Dropbox-like client for Enterprise Content Management servers, just switched to SharpShell,\n> and we are extremely pleased with this library. Our previous custom-built Windows Explorer integration\n> was buggy, unreliable and hard to maintain, and SharpShell is really rock-solid in comparison. The best\n> part: It only took 2 days to integrate SharpShell into our software, testing and installer included.\n> Thanks SharpShell!\n\nNicolas Raoul - [CmisSync.com](http://CmisSync.com)\n\n## Projects that use SharpShell\n\nSend me a message to add a project to this list:\n\n - [Trello Context Menu](https://github.com/GeorgeHahn/TrelloContextMenu)\n - [REAL Shuffle Player 2.0](http://download.cnet.com/Real-Shuffle-Player/3000-2139_4-75992715.html)\n - [The CmisSync context menu](http://aegif-labo.blogspot.jp/2014/08/the-cmissync-context-menu-check-out.html)\n - [TenClips](http://www.paludour.net/TenClips.html)\n - [Checksum Inspector](https://github.com/XxDeadLiiNexX/Checksum-Inspector/#checksum-inspector)\n - [VSIX PowerToys](https://github.com/hmemcpy/VSIXPowerToys)\n - [FileSystemScanner](https://github.com/sensboston/FileSystemScanner)\n - [Windows Explorer Thumbnails for MagicaVoxel .vox files](https://github.com/Arlorean/Voxels)\n - [Markdown Preview](https://github.com/Atrejoe/MarkdownPreview)\n - [SharePoint Shell Extensions by Archon Gnosis](https://sse.technology/)\n - [.NET Assembly Info Shell Extension by ElektroStudios](https://github.com/ElektroStudios/.NET-Assembly-Info-ShellEx)\n - [Modern UI BreadCrumbs WPF Control by Dirkster99](https://github.com/Dirkster99/bm)\n\n## Thanks\n\nMany thanks to [JetBrains](https://www.jetbrains.com/?from=sharpshell) for providing an Open Source License for their products!\n\n[![JetBrains](./docs/thanks/jetbrains.png)](https://www.jetbrains.com/?from=sharpshell)\n\n## License\n\nSharpShell is licensed under the MIT License - the details are at [LICENSE.md](https://raw.github.com/dwmkerr/sharpshell/master/LICENSE.md)\n"
        },
        {
          "name": "SharpShell",
          "type": "tree",
          "content": null
        },
        {
          "name": "SharpShellInstallerSample",
          "type": "tree",
          "content": null
        },
        {
          "name": "SharpShellNativeBridge",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.3876953125,
          "content": "version: 1.0.{build}\nimage: Visual Studio 2017\nconfiguration: Release\nenvironment:\n  CODECOV_TOKEN: 875a7530-b25b-49e9-a2ba-fe8b7a80cc6b\n\n# Before building, restore Nuget packages and install dependencies.\nbefore_build:\n- ps: |\n    nuget restore SharpShell\\SharpShell.sln\n    .\\SharpShell\\config.ps1\n\nbuild:\n  project: SharpShell\\SharpShell.sln\n  publish_nuget: true\n  verbosity: minimal\n\n# Before packaging, zip up the tools.\nbefore_package:\n- ps: |\n    7z a ServerManager.zip C:\\projects\\sharpshell\\SharpShell\\Tools\\ServerManager\\bin\\Release\\*\n    7z a ServerRegistrationManager.zip C:\\projects\\sharpshell\\SharpShell\\Tools\\ServerRegistrationManager\\bin\\Release\\*\n\n# Track our artifacts.\nartifacts:\n- path: ServerManager.zip\n  name: ServerManager\n- path: ServerRegistrationManager.zip\n  name: ServerRegistrationManager\n- path: SharpShell\\artifacts\n  name: artifacts\n\n# Deploy to Nuget and GitHub Releases.\ndeploy:\n- provider: NuGet\n  api_key:\n    secure: TWio+nDN8Ew7+OH7J3tLcEoM6DmxrIwfAr+2Ag8ROWJUEnXyoSAZ/I1GxBgB0qMd\n  on:\n    APPVEYOR_REPO_TAG: true\n- provider: GitHub\n  auth_token:\n    secure: KTWUORrnJKPKLSf/3ROLY50T9UfgTMnKHf3OjBOv8tlY/DAxtlglRU3eM+j45fMt\n  artifact: SharpShell.*.nupkg, ServerRegistrationManager.*.nupkg, ServerManager.zip, ServerRegistrationManager.zip\n  on:\n    APPVEYOR_REPO_TAG: true\n\n# After the build as completed, analyse coverage and upload.\non_success:\n- ps: ./SharpShell/coverage.ps1\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}