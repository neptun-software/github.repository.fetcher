{
  "metadata": {
    "timestamp": 1736710765763,
    "page": 220,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nomi-san/parsec-vdd",
      "stars": 3102,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 10.9853515625,
          "content": "### C++ ###\n# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n### Csharp ###\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.iobj\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.tlog\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\n*.vbp\n\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\n*.dsw\n*.dsp\n\n# Visual Studio 6 technical files\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# Visual Studio History (VSHistory) files\n.vshistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n# VS Code files for those working on multiple tools\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n*.code-workspace\n\n# Local History for Visual Studio Code\n.history/\n\n# Windows Installer files from build outputs\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# JetBrains Rider\n*.sln.iml\n\n### VisualStudio ###\n\n# User-specific files\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n\n# Mono auto generated files\n\n# Build results\n\n# Visual Studio 2015/2017 cache/options directory\n# Uncomment if you have tasks that create the project's static files in wwwroot\n\n# Visual Studio 2017 auto generated files\n\n# MSTest test Results\n\n# NUnit\n\n# Build Results of an ATL Project\n\n# Benchmark Results\n\n# .NET Core\n\n# ASP.NET Scaffolding\n\n# StyleCop\n\n# Files built by Visual Studio\n\n# Chutzpah Test files\n\n# Visual C++ cache files\n\n# Visual Studio profiler\n\n# Visual Studio Trace Files\n\n# TFS 2012 Local Workspace\n\n# Guidance Automation Toolkit\n\n# ReSharper is a .NET coding add-in\n\n# TeamCity is a build add-in\n\n# DotCover is a Code Coverage Tool\n\n# AxoCover is a Code Coverage Tool\n\n# Coverlet is a free, cross platform Code Coverage Tool\n\n# Visual Studio code coverage results\n\n# NCrunch\n\n# MightyMoose\n\n# Web workbench (sass)\n\n# Installshield output folder\n\n# DocProject is a documentation generator add-in\n\n# Click-Once directory\n\n# Publish Web Output\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\n\n# NuGet Packages\n# NuGet Symbol Packages\n# The packages folder can be ignored because of Package Restore\n# except build/, which is used as an MSBuild target.\n# Uncomment if necessary however generally it will be regenerated when needed\n# NuGet v3's project.json files produces more ignorable files\n\n# Microsoft Azure Build Output\n\n# Microsoft Azure Emulator\n\n# Windows Store app package directories and files\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n# but keep track of directories ending in .cache\n\n# Others\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n\n# RIA/Silverlight projects\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n\n# SQL Server files\n\n# Business Intelligence projects\n\n# Microsoft Fakes\n\n# GhostDoc plugin setting file\n\n# Node.js Tools for Visual Studio\n\n# Visual Studio 6 build log\n\n# Visual Studio 6 workspace options file\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\n\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\n\n# Visual Studio 6 technical files\n\n# Visual Studio LightSwitch build output\n\n# Paket dependency manager\n\n# FAKE - F# Make\n\n# CodeRush personal settings\n\n# Python Tools for Visual Studio (PTVS)\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n\n# Telerik's JustMock configuration file\n\n# BizTalk build output\n\n# OpenCover UI analysis results\n\n# Azure Stream Analytics local run output\n\n# MSBuild Binary and Structured Log\n\n# NVidia Nsight GPU debugger configuration file\n\n# MFractors (Xamarin productivity tool) working folder\n\n# Local History for Visual Studio\n\n# Visual Studio History (VSHistory) files\n\n# BeatPulse healthcheck temp database\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\n\n# Ionide (cross platform F# VS Code tools) working folder\n\n# Fody - auto-generated XML schema\n\n# VS Code files for those working on multiple tools\n\n# Local History for Visual Studio Code\n\n# Windows Installer files from build outputs\n\n# JetBrains Rider\n\n### VisualStudio Patch ###\n# Additional files built by Visual Studio\n\n# End of https://www.toptal.com/developers/gitignore/api/visualstudio,csharp,c++\n\n#########################\n\n*.zip"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "MIT License\n\nCopyright (c) 2023 Nguyen Duy <wuuyi123@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.9990234375,
          "content": "<!-- tracking -->\n<img src=\"https://i.imgur.com/dDUa6GH.png\" width=\"0\" height=\"0\" />\n\n<p align=\"center\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/user-attachments/assets/74e7db71-6166-49ae-b6c5-7543b15c60eb\">\n    <img alt=\"Parsec Virtual Display Driver\" src=\"https://github.com/user-attachments/assets/57202381-021c-428a-ae38-0fc4b2e0ee0c\">\n  </picture>\n</p>\n\n<p align=\"center\">\n  ✨ Perfect <strong>virtual display</strong> for game streaming\n</p>\n\n<p align=\"center\">\n  <a href=\"#\">\n    <img src=\"https://img.shields.io/github/stars/nomi-san/parsec-vdd?style=for-the-badge&logo=github\" />\n  </a>\n  <a href=\"https://github.com/nomi-san/parsec-vdd/releases\">\n    <img src=\"https://img.shields.io/github/downloads/nomi-san/parsec-vdd/total?style=for-the-badge\" />\n  </a>\n</p>\n\n<br>\n\n## ℹ About\n\nThis project provides a **standalone solution for creating virtual displays** on\na Windows host using the **Parsec Virtual Display Driver** (VDD), independent of\nthe **Parsec app**.\n\nThe Parsec VDD enables virtual displays on Windows 10+ systems, a feature\navailable to Parsec Teams and Warp customers. With VDD, users can add up to\nthree virtual displays to a host machine they connect to, ideal for setups where\nphysical monitors may be unavailable or when additional displays are beneficial.\n\nBuilt by Parsec, the VDD leverages the IddCx API (Indirect Display Driver) to\ngenerate virtual displays with support for high resolutions and refresh rates,\nincluding up to 4K and 240 Hz. This capability makes it a versatile tool for\ngaming, streaming, or remote work, allowing users to simulate multiple screens\nfor an enhanced, flexible visual experience.\n\n## 📺 ParsecVDisplay App\n\nParsecVDisplay is a comprehensive virtual display manager for Parsec VDD, built\nwith C# and WPF. The app provides an intuitive interface to manage virtual\ndisplays, showing the number of active displays and allowing users to add or\nremove specific virtual displays. It also supports features like changing\ndisplay resolution, capturing screenshots, and more, making it a versatile tool\nfor flexible display management.\n\n👉 Check out [Releases](https://github.com/nomi-san/parsec-vdd/releases) to\ndownload it.\n\n<p align=\"center\">\n  <img src=\"https://github.com/nomi-san/parsec-vdd/assets/38210249/71b25bc6-eee1-4d80-94e0-e39eab7f8fb9\" />\n</p>\n\n## 🚀 Using Core API\n\n### Design notes\n\nParsec VDD is designed to work with Parsec client-connection sessions. When the\nuser connects to the host, the app will start controlling the driver, it sends\nIO control codes and gets results. When adding a virtual display, you will get\nits index to be used for unplugging, the maximum number of displays could be\nadded up to 16 per adapter. You have to ping the driver periodically to keep\nadded displays alive, otherwise all of them will be unplugged after a second.\nThere's no direct way to manipulate added displays, you should call Win32\nDisplay API to change their display mode (see the ParsecVDisplay source).\n\n```mermaid\nflowchart LR\n  A(app)\n  B(vdd)\n\n  A <--->|ioctl| B\n  A ..->|ping| B\n\n  B --- X(display1)\n  B --- Y(display2)\n  B --- Z(display3)\n\n  winapi -->|manipulate| X\n```\n\n### Using the code\n\n- The core API is designed as single C/C++ header that can be added to any\n  project, 👉 [core/parsec-vdd.h](./core/parsec-vdd.h)\n- There is also a simple demo program, 👉 [core/vdd-demo.cc](./core/vdd-demo.cc)\n\n### Picking a driver\n\nYou have to install the driver to make them work.\n\n| Version           | Minimum OS      | IddCx | Notes                                                     |\n| :---------------- | :-------------- | :---: | :-------------------------------------------------------- |\n| [parsec-vdd-0.38] | Windows 10 1607 |  1.0  | Obsolete, may crash randomly.                             |\n| [parsec-vdd-0.41] | Windows 10 19H2 |  1.4  | Stable.                                                   |\n| [parsec-vdd-0.45] | Windows 10 21H2 |  1.5  | Better streaming color, but may not work on some Windows. |\n\n[parsec-vdd-0.38]: https://builds.parsec.app/vdd/parsec-vdd-0.38.0.0.exe\n[parsec-vdd-0.41]: https://builds.parsec.app/vdd/parsec-vdd-0.41.0.0.exe\n[parsec-vdd-0.45]: https://builds.parsec.app/vdd/parsec-vdd-0.45.0.0.exe\n\n> All of them also work on Windows Server 2019 or higher.\n\nYou can unzip (using 7z) the driver setup above to obtain the driver files and\n`nefconw` CLI.\n\n```\nvdd-0.45/\n  |__ nefconw.exe\n  |__ driver/\n    |__ mm.cat\n    |__ mm.dll\n    |__ mm.inf\n```\n\nCommand line method to install the driver using `nefconw` (admin required):\n\n```\nstart /wait .\\nefconw.exe --remove-device-node --hardware-id Root\\Parsec\\VDA --class-guid \"4D36E968-E325-11CE-BFC1-08002BE10318\"\nstart /wait .\\nefconw.exe --create-device-node --class-name Display --class-guid \"4D36E968-E325-11CE-BFC1-08002BE10318\" --hardware-id Root\\Parsec\\VDA\nstart /wait .\\nefconw.exe --install-driver --inf-path \".\\driver\\mm.inf\"\n```\n\nIn addition, you can run the driver setup in silent mode to install it quickly.\n\n```\n.\\parsec-vdd-0.45.0.0.exe /S\n```\n\n## 😥 Known Limitations\n\n> This list shows the known limitations of Parsec VDD.\n\n### 1. HDR support\n\nParsec VDD does not support HDR on its displays (see the EDID below).\nTheoretically, you can unlock support by editing the EDID, then adding HDR\nmetadata and setting 10-bit+ color depth. Unfortunately, you cannot flash its\nfirmware like a physical device, or modify the registry value.\n\nAll IDDs have their own fixed EDID block inside the driver binary to initialize\nthe monitor specs. So the solution is to modify this block in the driver DLL\n(mm.dll), then reinstall it with `nefconw` CLI (see above).\n\n### 2. Custom resolutions\n\nBefore connecting, the virtual display looks in the `HKLM\\SOFTWARE\\Parsec\\vdd`\nregistry for additional preset resolutions. Currently this supports a maximum of\n5 values.\n\n```yaml\nHKLM\\SOFTWARE\\Parsec\\vdd:\n  - key: [0 -> 5]\n    value: { width, height, hz }\n```\n\nTo unlock this limit, you need to patch the driver DLL the same way as above,\nbut **5 is enough** for personal use.\n\n## 😑 Known Bugs\n\n> This is a list of known issues when working with standalone Parsec VDD.\n\n### 1. Incompatible with Parsec Privacy Mode\n\n![Alt text](https://i.imgur.com/C74IRgC.png)\n\nIf you have enabled \"Privacy Mode\" in Parsec Host settings, please disable it\nand clear the connected display configurations in the following Registry path.\n\n```\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\GraphicsDrivers\\Connectivity\n```\n\nThis option causes your main display to turn off when virtual displays are\nadded, making it difficult to turn the display on and disrupting the remote\ndesktop session.\n\n### 2. // todo\n\n## 🤔 Comparison with other IDDs\n\nThe table below shows a comparison with other popular Indirect Display Driver\nprojects.\n\n| Project                        | Iddcx version | Signed | Gaming | HDR |                               H-Cursor                               | Tweakable | Controller |\n| :----------------------------- | :-----------: | :----: | :----: | :-: | :------------------------------------------------------------------: | :-------: | :--------: |\n| [usbmmidd_v2]                  |               |   ✅   |   ❌   | ❌  |                                  ❌                                  |           |            |\n| [IddSampleDriver]              |      1.2      |   ❌   |   ❌   | ❌  |                                  ❌                                  |           |            |\n| [RustDeskIddDriver]            |      1.2      |   ❌   |   ❌   | ❌  |                                  ❌                                  |           |            |\n| [Virtual-Display-Driver (HDR)] |     1.10      |   ❌   |        | ✅  |                                  ❌                                  |           |            |\n| [virtual-display-rs]           |      1.5      |   ❌   |        | ❌  | [#81](https://github.com/MolotovCherry/virtual-display-rs/issues/81) |    ✅     |     ✅     |\n| parsec-vdd                     |      1.5      |   ✅   |   ✅   | ❌  |                                  ✅                                  |    🆗     |     ✅     |\n\n✅ - full support, 🆗 - limited support\n\n[usbmmidd_v2]: https://www.amyuni.com/forum/viewtopic.php?t=3030\n[IddSampleDriver]: https://github.com/roshkins/IddSampleDriver\n[RustDeskIddDriver]: https://github.com/fufesou/RustDeskIddDriver\n[virtual-display-rs]: https://github.com/MolotovCherry/virtual-display-rs\n[Virtual-Display-Driver (HDR)]: https://github.com/itsmikethetech/Virtual-Display-Driver\n\n**Signed** means that the driver files have a valid digital signature.\n**H-Cursor** means hardware cursor support, without it, you will get a double\ncursor on some remote desktop apps. **Tweakable** is the ability to customize\ndisplay modes. Visit\n[MSDN IddCx versions](https://learn.microsoft.com/en-us/windows-hardware/drivers/display/iddcx-versions)\nto check the minimum supported Windows version.\n\n## 📘 Parsec VDD Specs\n\nCommon preset display modes:\n\n| Resolution  | Common Name | Aspect Ratio | Refresh Rates (Hz) |\n| ----------- | ----------- | ------------ | ------------------ |\n| 3840 x 2160 | 4K UHD      | 16:9         | 24/30/60/144/240   |\n| 3440 x 1440 | UltraWide   | 21.5:9       | 24/30/60/144/240   |\n| 2560 x 1440 | 2K          | 16:9         | 24/30/60/144/240   |\n| 2560 x 1080 | UltraWide   | 21:9         | 24/30/60/144/240   |\n| 1920 x 1080 | FHD         | 16:9         | 24/30/60/144/240   |\n| 1600 x 900  | HD+         | 16:9         | 60/144/240         |\n| 1280 x 720  | HD          | 16:9         | 60/144/240         |\n\nCheck out [docs/PARSEC_VDD_SPECS](./docs/PARSEC_VDD_SPECS.md) to see full of\npreset display modes the driver specs.\n\n## 🤝 Sponsors\n\n<table>\n  <tr>\n    <td><img src=\"https://github.com/user-attachments/assets/58e9a6f4-6630-437d-a758-b284c0ed41e7\" /></td>\n    <td>Free code signing on Windows provided by <a href=\"https://signpath.io\">SignPath.io</a>, certificate by <a href=\"https://signpath.org\">SignPath Foundation</a></td>\n  </tr>\n</table>\n\n## 🍻 Credits\n\n- Thanks to Parsec for the driver\n- The app's background was from old parsecgaming.com\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "parsec-vdd.sln",
          "type": "blob",
          "size": 1.5830078125,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.11.35327.3\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"ParsecVDisplay\", \"app\\ParsecVDisplay.csproj\", \"{2D44934F-B4CF-4F2C-BD03-AE60B71AD045}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"core\", \"core\", \"{9B03AE1C-BE49-45A8-9B89-11CE21AD1BF8}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tcore\\parsec-vdd.h = core\\parsec-vdd.h\n\t\tcore\\vdd-demo.cc = core\\vdd-demo.cc\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \".github\", \".github\", \"{44F3B28D-7C30-43D1-8153-C7A88B29B511}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.github\\workflows\\build.yml = .github\\workflows\\build.yml\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{2D44934F-B4CF-4F2C-BD03-AE60B71AD045}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2D44934F-B4CF-4F2C-BD03-AE60B71AD045}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2D44934F-B4CF-4F2C-BD03-AE60B71AD045}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2D44934F-B4CF-4F2C-BD03-AE60B71AD045}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {745BF2B1-7A1D-48D6-87E6-3AF8CEAB96C5}\n\tEndGlobalSection\nEndGlobal\n"
        }
      ]
    }
  ]
}