{
  "metadata": {
    "timestamp": 1736710800006,
    "page": 278,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/Git-Credential-Manager-for-Windows",
      "stars": 2875,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2431640625,
          "content": ".vs/\n[Bb]in/\n[Dd]ebug/\n[Dd]eploy/\n[Oo]bj/\n[Oo]utput/\n[Pp]ackages/\n[Rr]elease/\n[Ss]ymbols/\n[Tt]est[Rr]esult/\n\n*.suo\n*.tmp\n*.user\n*.vsp\n*.vspx\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Coverity files\n/cov-int/\n/gcw.tar\n/gcw.tgz\n/gcw.lzma\n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "AzureDevOps.Authentication",
          "type": "tree",
          "content": null
        },
        {
          "name": "Bitbucket.Authentication",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "CodeMaid.config",
          "type": "blob",
          "size": 4.5927734375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n    <configSections>\n        <sectionGroup name=\"userSettings\" type=\"System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" >\n            <section name=\"SteveCadwallader.CodeMaid.Properties.Settings\" type=\"System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n        </sectionGroup>\n    </configSections>\n    <userSettings>\n        <SteveCadwallader.CodeMaid.Properties.Settings>\n            <setting name=\"Formatting_CommentXmlKeepTagsTogether\" serializeAs=\"String\">\n                <value>True</value>\n            </setting>\n            <setting name=\"Cleaning_InsertEndOfFileTrailingNewLine\" serializeAs=\"String\">\n                <value>True</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeConstructors\" serializeAs=\"String\">\n                <value>Constructors||1||Constructors</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeDestructors\" serializeAs=\"String\">\n                <value>Destructors||2||Destructors</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeFields\" serializeAs=\"String\">\n                <value>Fields||3||Fields</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeEvents\" serializeAs=\"String\">\n                <value>Events||4||Events</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeIndexers\" serializeAs=\"String\">\n                <value>Indexers||5||Indexers</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeProperties\" serializeAs=\"String\">\n                <value>Properties||6||Properties</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeMethods\" serializeAs=\"String\">\n                <value>Methods||7||Methods</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeDelegates\" serializeAs=\"String\">\n                <value>Delegates||8||Delegates</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeEnums\" serializeAs=\"String\">\n                <value>Enums||9||Enums</value>\n            </setting>\n            <setting name=\"Reorganizing_MemberTypeInterfaces\" serializeAs=\"String\">\n                <value>Interfaces||10||Interfaces</value>\n            </setting>\n            <setting name=\"Cleaning_InsertBlankLinePaddingAfterRegionTags\"\n                serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n            <setting name=\"Cleaning_RemoveBlankLinesAtBottom\" serializeAs=\"String\">\n                <value>True</value>\n            </setting>\n            <setting name=\"Cleaning_InsertBlankLinePaddingBeforeEndRegionTags\"\n                serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n            <setting name=\"Formatting_CommentRunDuringCleanup\" serializeAs=\"String\">\n                <value>True</value>\n            </setting>\n            <setting name=\"Cleaning_InsertBlankLinePaddingAfterEndRegionTags\"\n                serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n            <setting name=\"Cleaning_RemoveRegions\" serializeAs=\"String\">\n                <value>2</value>\n            </setting>\n            <setting name=\"Cleaning_InsertBlankLinePaddingBeforeRegionTags\"\n                serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n            <setting name=\"Reorganizing_RegionsRemoveExistingRegions\" serializeAs=\"String\">\n                <value>True</value>\n            </setting>\n            <setting name=\"Digging_PrimarySortOrder\" serializeAs=\"String\">\n                <value>0</value>\n            </setting>\n            <setting name=\"Digging_SynchronizeOutlining\" serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n            <setting name=\"Reorganizing_ExplicitMembersAtEnd\" serializeAs=\"String\">\n                <value>True</value>\n            </setting>\n            <setting name=\"Formatting_CommentXmlSplitSummaryTagToMultipleLines\"\n                serializeAs=\"String\">\n                <value>True</value>\n            </setting>\n            <setting name=\"Formatting_CommentXmlAlignParamTags\" serializeAs=\"String\">\n                <value>False</value>\n            </setting>\n            <setting name=\"Cleaning_UpdateFileHeaderCSharp\" serializeAs=\"String\">\n                <value>\n                </value>\n            </setting>\n        </SteveCadwallader.CodeMaid.Properties.Settings>\n    </userSettings>\n</configuration>"
        },
        {
          "name": "Docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "GcmParentWindowTest",
          "type": "tree",
          "content": null
        },
        {
          "name": "GitCredentialManager.sln",
          "type": "blob",
          "size": 11.177734375,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 15\nVisualStudioVersion = 15.0.27130.2036\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Documents\", \"Documents\", \"{663DC05D-FDC6-4EAB-AC4B-983D486B92B9}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tappveyor.yml = appveyor.yml\n\t\tLICENSE.txt = LICENSE.txt\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Files\", \"Files\", \"{D6456F11-40CB-4E55-8761-FF2199A7004C}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tanalysisRules.ruleset = analysisRules.ruleset\n\t\txunit.runner.json = xunit.runner.json\n\tEndProjectSection\nEndProject\nProject(\"{D954291E-2A0B-460D-934E-DC6B0785DB48}\") = \"Cli-Shared\", \"Shared\\Cli\\Cli-Shared.shproj\", \"{19770407-94D5-49D3-8ED1-C72637BA7D90}\"\nEndProject\nProject(\"{D954291E-2A0B-460D-934E-DC6B0785DB48}\") = \"Gui-Shared\", \"Shared\\Gui\\Gui-Shared.shproj\", \"{4A4F5ADA-7166-4799-BC7C-D5882637CF7A}\"\nEndProject\nProject(\"{D954291E-2A0B-460D-934E-DC6B0785DB48}\") = \"Microsoft.Alm.Win32\", \"Shared\\Win32\\Microsoft.Alm.Win32.shproj\", \"{19770407-37CD-41AC-B50C-CF885BBCE344}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Microsoft.Alm.Authentication\", \"Microsoft.Alm.Authentication\\Src\\Microsoft.Alm.Authentication.csproj\", \"{19770407-B493-459D-BB4F-04FBEFB1BA13}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"AzureDevOps.Authentication\", \"AzureDevOps.Authentication\\Src\\AzureDevOps.Authentication.csproj\", \"{19770407-D7D8-4A37-914C-F552FF4B90D4}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"GitHub.Authentication\", \"GitHub.Authentication\\Src\\GitHub.Authentication.csproj\", \"{CF306116-BBF0-4CC7-AFCE-A506AC4752CB}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Bitbucket.Authentication\", \"Bitbucket.Authentication\\Src\\Bitbucket.Authentication.csproj\", \"{EE663736-5BAD-4CA6-A4F8-99978925AD8A}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Cli-Manager\", \"Cli\\Manager\\Cli-Manager.csproj\", \"{19770407-63D4-40A8-A9DF-F1C4B473308A}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Cli-Askpass\", \"Cli\\Askpass\\Cli-Askpass.csproj\", \"{19770407-B33A-4EBE-92B8-04C93F43CAE0}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Microsoft.Alm.Authentication.Test\", \"Microsoft.Alm.Authentication\\Test\\Microsoft.Alm.Authentication.Test.csproj\", \"{19781214-371F-415C-93C5-44CEAA0E9A34}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"AzureDevOps.Authentication.Test\", \"AzureDevOps.Authentication\\Test\\AzureDevOps.Authentication.Test.csproj\", \"{19781214-5254-464A-BC69-FAC502046564}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Bitbucket.Authentication.Test\", \"Bitbucket.Authentication\\Test\\Bitbucket.Authentication.Test.csproj\", \"{AECD6D57-F900-4D43-A01A-4AA3C68F39C2}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Cli-Test\", \"Cli\\Test\\Cli-Test.csproj\", \"{19781214-AE6D-4DCC-BA9F-12CB0C6581AE}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"GitHub.Authentication.Test\", \"GitHub.Authentication\\Test\\GitHub.Authentication.Test.csproj\", \"{F24E0E80-8DDB-41D4-9F94-DCBC0CE81583}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"GcmParentWindowTest\", \"GcmParentWindowTest\\GcmParentWindowTest.csproj\", \"{2F110EEF-14BA-4324-9DA4-C7D16469B064}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Microsoft.Alm.Authentication.Proxy\", \"Microsoft.Alm.Authentication\\Proxy\\Microsoft.Alm.Authentication.Proxy.csproj\", \"{04151231-FE04-4A05-943A-54EB952CEA62}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"AzureDevOps.Authentication.Proxy\", \"AzureDevOps.Authentication\\Proxy\\AzureDevOps.Authentication.Proxy.csproj\", \"{04151231-4FA4-49B2-AE6D-EBDBA36B1169}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"GitHub.Authentication.Proxy\", \"GitHub.Authentication\\Proxy\\GitHub.Authentication.Proxy.csproj\", \"{04151231-4DF4-4312-8F35-72BAD788F741}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Bitbucket.Authentication.Proxy\", \"Bitbucket.Authentication\\Proxy\\Bitbucket.Authentication.Proxy.csproj\", \"{04151231-2501-4212-A7F7-C07E932B4A4C}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Build\", \"Build\", \"{FFD83274-AA49-445A-ABE3-ED487B35A4A6}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tappveyor.yml = appveyor.yml\n\t\tbuild-docs.cmd = build-docs.cmd\n\t\tbuild.props = build.props\n\t\tbuild.targets = build.targets\n\t\tdevops-ci.yml = devops-ci.yml\n\t\tdevops-pr.yml = devops-pr.yml\n\t\tdevops-rs.yml = devops-rs.yml\n\t\tdevops-tt.yml = devops-tt.yml\n\t\tproxy.props = proxy.props\n\t\ttest.props = test.props\n\t\ttest.targets = test.targets\n\t\tvsts-ci.yml = vsts-ci.yml\n\t\tvsts-rs.yml = vsts-rs.yml\n\t\tvsts-tt.yml = vsts-tt.yml\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SharedMSBuildProjectFiles) = preSolution\n\t\tShared\\Win32\\Microsoft.Alm.Win32.projitems*{19770407-37cd-41ac-b50c-cf885bbce344}*SharedItemsImports = 13\n\t\tShared\\Cli\\Cli-Shared.projitems*{19770407-63d4-40a8-a9df-f1c4b473308a}*SharedItemsImports = 4\n\t\tShared\\Cli\\Cli-Shared.projitems*{19770407-94d5-49d3-8ed1-c72637ba7d90}*SharedItemsImports = 13\n\t\tShared\\Cli\\Cli-Shared.projitems*{19770407-b33a-4ebe-92b8-04c93f43cae0}*SharedItemsImports = 4\n\t\tShared\\Win32\\Microsoft.Alm.Win32.projitems*{19770407-b493-459d-bb4f-04fbefb1ba13}*SharedItemsImports = 4\n\t\tShared\\Gui\\Gui-Shared.projitems*{4a4f5ada-7166-4799-bc7c-d5882637cf7a}*SharedItemsImports = 13\n\t\tShared\\Gui\\Gui-Shared.projitems*{cf306116-bbf0-4cc7-afce-a506ac4752cb}*SharedItemsImports = 4\n\t\tShared\\Gui\\Gui-Shared.projitems*{ee663736-5bad-4ca6-a4f8-99978925ad8a}*SharedItemsImports = 4\n\tEndGlobalSection\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{19770407-B493-459D-BB4F-04FBEFB1BA13}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19770407-B493-459D-BB4F-04FBEFB1BA13}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19770407-B493-459D-BB4F-04FBEFB1BA13}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{19770407-B493-459D-BB4F-04FBEFB1BA13}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{19770407-D7D8-4A37-914C-F552FF4B90D4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19770407-D7D8-4A37-914C-F552FF4B90D4}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19770407-D7D8-4A37-914C-F552FF4B90D4}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{19770407-D7D8-4A37-914C-F552FF4B90D4}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{CF306116-BBF0-4CC7-AFCE-A506AC4752CB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CF306116-BBF0-4CC7-AFCE-A506AC4752CB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CF306116-BBF0-4CC7-AFCE-A506AC4752CB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CF306116-BBF0-4CC7-AFCE-A506AC4752CB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{EE663736-5BAD-4CA6-A4F8-99978925AD8A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{EE663736-5BAD-4CA6-A4F8-99978925AD8A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{EE663736-5BAD-4CA6-A4F8-99978925AD8A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EE663736-5BAD-4CA6-A4F8-99978925AD8A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{19770407-63D4-40A8-A9DF-F1C4B473308A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19770407-63D4-40A8-A9DF-F1C4B473308A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19770407-63D4-40A8-A9DF-F1C4B473308A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{19770407-63D4-40A8-A9DF-F1C4B473308A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{19770407-B33A-4EBE-92B8-04C93F43CAE0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19770407-B33A-4EBE-92B8-04C93F43CAE0}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19770407-B33A-4EBE-92B8-04C93F43CAE0}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{19770407-B33A-4EBE-92B8-04C93F43CAE0}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{19781214-371F-415C-93C5-44CEAA0E9A34}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19781214-371F-415C-93C5-44CEAA0E9A34}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19781214-371F-415C-93C5-44CEAA0E9A34}.Release|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19781214-371F-415C-93C5-44CEAA0E9A34}.Release|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19781214-5254-464A-BC69-FAC502046564}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19781214-5254-464A-BC69-FAC502046564}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19781214-5254-464A-BC69-FAC502046564}.Release|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19781214-5254-464A-BC69-FAC502046564}.Release|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AECD6D57-F900-4D43-A01A-4AA3C68F39C2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AECD6D57-F900-4D43-A01A-4AA3C68F39C2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AECD6D57-F900-4D43-A01A-4AA3C68F39C2}.Release|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AECD6D57-F900-4D43-A01A-4AA3C68F39C2}.Release|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19781214-AE6D-4DCC-BA9F-12CB0C6581AE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19781214-AE6D-4DCC-BA9F-12CB0C6581AE}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19781214-AE6D-4DCC-BA9F-12CB0C6581AE}.Release|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19781214-AE6D-4DCC-BA9F-12CB0C6581AE}.Release|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F24E0E80-8DDB-41D4-9F94-DCBC0CE81583}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F24E0E80-8DDB-41D4-9F94-DCBC0CE81583}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F24E0E80-8DDB-41D4-9F94-DCBC0CE81583}.Release|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F24E0E80-8DDB-41D4-9F94-DCBC0CE81583}.Release|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2F110EEF-14BA-4324-9DA4-C7D16469B064}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2F110EEF-14BA-4324-9DA4-C7D16469B064}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2F110EEF-14BA-4324-9DA4-C7D16469B064}.Release|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2F110EEF-14BA-4324-9DA4-C7D16469B064}.Release|Any CPU.Build.0 = Debug|Any CPU\n\t\t{04151231-FE04-4A05-943A-54EB952CEA62}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{04151231-FE04-4A05-943A-54EB952CEA62}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{04151231-FE04-4A05-943A-54EB952CEA62}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{04151231-FE04-4A05-943A-54EB952CEA62}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{04151231-4FA4-49B2-AE6D-EBDBA36B1169}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{04151231-4FA4-49B2-AE6D-EBDBA36B1169}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{04151231-4FA4-49B2-AE6D-EBDBA36B1169}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{04151231-4FA4-49B2-AE6D-EBDBA36B1169}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{04151231-4DF4-4312-8F35-72BAD788F741}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{04151231-4DF4-4312-8F35-72BAD788F741}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{04151231-4DF4-4312-8F35-72BAD788F741}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{04151231-4DF4-4312-8F35-72BAD788F741}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{04151231-2501-4212-A7F7-C07E932B4A4C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{04151231-2501-4212-A7F7-C07E932B4A4C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{04151231-2501-4212-A7F7-C07E932B4A4C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{04151231-2501-4212-A7F7-C07E932B4A4C}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {10E6BD8A-AC3B-42CB-8D76-3890E770E063}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "GitHub.Authentication",
          "type": "tree",
          "content": null
        },
        {
          "name": "Installer",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.10546875,
          "content": "Git Credential Manager for Windows\n\nCopyright (c) Microsoft Corporation\nAll rights reserved.\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"\"Software\"\"), to deal\nin the Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Microsoft.Alm.Authentication",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.576171875,
          "content": "# Git Credential Manager for Windows\n\n[![GitHub Release](https://img.shields.io/github/release/microsoft/git-credential-manager-for-windows.svg?style=flat-square)](https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases)\n[![Build status](https://img.shields.io/appveyor/ci/whoisj/git-credential-manager-for-windows.svg?style=flat-square)](https://ci.appveyor.com/project/whoisj/git-credential-manager-for-windows/branch/master)\n[![Coverity Scan Build Status](https://img.shields.io/coverity/scan/11371.svg?style=flat-square)](https://scan.coverity.com/projects/git-credential-manager-for-windows)\n[![GitHub Downloads](https://img.shields.io/github/downloads/Microsoft/Git-Credential-Manager-for-Windows/total.svg?style=flat-square)](https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases)\n[![@MicrosoftGit on Twitter](https://img.shields.io/twitter/follow/microsoftgit.svg?style=social&label=Follow%20%40microsoftgit)](https://twitter.com/microsoftgit)\n\n* * *\n\n## NOTICE: This project is no longer being maintained. :warning:\n\nGit Credential Manager for Windows is no longer being maintained. The cross-platform\n[Git Credential Manager Core (GCM Core)](https://aka.ms/gcmcore) is the official replacement.\n\nGCM Core is included as an optional component of Git for Windows 2.28 and will be made the default credential\nhelper as of Git for Windows 2.29. GCM Core can also be manually installed from [this page](https://github.com/microsoft/Git-Credential-Manager-Core/releases/latest).\n\n* * *\n\n## NOTICE: Experiencing GitHub push/fetch problems?\n\n[GitHub will disable password-based authentication](https://github.blog/changelog/2019-08-08-password-based-http-basic-authentication-deprecation-and-removal/)\non APIs Git Credential Manager for Windows uses to create tokens. As a result, GCM\nfor Windows will no longer be able to create new access tokens for GitHub.\n\n[Git Credential Manager Core (GCM Core)](https://aka.ms/gcmcore) supports OAuth-based\nauthentication with GitHub and is the replacement for GCM for Windows.\n\nPlease update to Git for Windows 2.28 and select \"Git Credential Manager Core\" from\nthe installer when asked to \"select a credential helper\", or manually install GCM Core\nfrom [here](https://github.com/microsoft/Git-Credential-Manager-Core/releases/latest).\n\n---\n\nAs of 22 Feb 2018, [GitHub has disabled support for weak encryption](https://githubengineering.com/crypto-deprecation-notice/) which means many users will suddenly find themselves unable to authenticate using a Git for Windows which (impacts versions older than v2.16.0). **DO NOT PANIC**, there's a fix. [Update Git for Windows](https://github.com/git-for-windows/git/releases) to the latest (or at least v2.16.0).\n\nThe most common error users see looks like:\n\n```text\nfatal: HttpRequestException encountered.\n   An error occurred while sending the request.\nfatal: HttpRequestException encountered.\n   An error occurred while sending the request.\nUsername for 'https://github.com':\n```\n\nIf, after updating Git for Windows, you are still having problems authenticating with GitHub, please read this [Developer Community](https://developercommunity.visualstudio.com/content/problem/201457/unable-to-connect-to-github-due-to-tls-12-only-cha.html) topic which contains additional remedial actions you can take to resolve the problem.\n\nIf you are experiencing issue when using **Visual Studio**, please read **[Unable to connect to GitHub with Visual Studio](https://developercommunity.visualstudio.com/content/problem/201457/unable-to-connect-to-github-due-to-tls-12-only-cha.html)**.\n\n* * *\n\nThe [Git Credential Manager for Windows](https://github.com/Microsoft/Git-Credential-Manager-for-Windows) (GCM) provides secure Git credential storage for Windows. It's the successor to the [Windows Credential Store for Git](https://gitcredentialstore.codeplex.com/) (git-credential-winstore), which is no longer maintained. Compared to Git's built-in credential storage for Windows ([wincred](https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage)), which provides single-factor authentication support working on any HTTP enabled Git repository, GCM provides multi-factor authentication support for [Azure DevOps](https://dev.azure.com/), [Team Foundation Server](Docs/Faq.md#q-i-thought-microsoft-was-maintaining-this-why-does-the-gcm-not-work-as-expected-with-tfs), GitHub, and Bitbucket.\n\nThis project includes:\n\n* Secure password storage in the Windows Credential Store.\n* Multi-factor authentication support for Azure DevOps.\n* Two-factor authentication support for GitHub.\n* Two-factor authentication support for Bitbucket.\n* Personal Access Token generation and usage support for Azure DevOps, GitHub, and Bitbucket.\n* Non-interactive mode support for Azure DevOps backed by Azure Directory.\n* NTLM/Kerberos authentication for Team Foundation Server ([see notes](Docs/Faq.md#q-i-thought-microsoft-was-maintaining-this-why-does-the-gcm-not-work-as-expected-with-tfs)).\n* Optional settings for [build agent optimization](Docs/Automation.md).\n\n## Community\n\nThis is a community project so feel free to contribute ideas, submit bugs, fix bugs, or code new features. For detailed information on how the GCM works go to the [wiki](https://github.com/Microsoft/Git-Credential-Manager-for-Windows/wiki/How-the-Git-Credential-Managers-works).\n\n## Download and Install\n\nTo use the GCM, you can download the [latest installer](https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/latest). To install, double-click `GCMW-{version}.exe` and follow the instructions presented.\n\nWhen prompted to select your terminal emulator for Git Bash you should choose the Windows' default console window, or make sure GCM is [configured to use modal dialogs](Docs/Configuration.md#modalprompt). GCM cannot prompt you for credentials, at the console, in a MinTTY setup.\n\n### Manual Installation\n\nNote for users with special installation needs, you can still extract the `gcm-{version}.zip` file and run install.cmd from an administrator command prompt. This allows specification of the installation options explained below.\n\n### Installation in an MSYS2 Environment\n\nTo use the GCM along with git installed with `pacman` in an MSYS2 environment, simply [download a release zip](https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases) and extract the contents directly into `C:\\msys64\\usr\\lib\\git-core` (assuming your MSYS2 environment is installed in `C:\\msys64`). Then run:\n\n```shell\ngit config --global credential.helper manager\n```\n\n## How to use\n\nYou don't. It [magically](https://github.com/Microsoft/Git-Credential-Manager-for-Windows/issues/31) works when credentials are needed. For example, when pushing to [Azure DevOps](https://dev.azure.com), it automatically opens a window and initializes an oauth2 flow to get your token.\n\n### Build and Install from Sources\n\nTo build and install the GCM yourself, clone the sources, open the solution file in Visual Studio, and build the solution. All necessary components will be copied from the build output locations into a `.\\Deploy` folder at the root of the solution. From an elevated command prompt in the `.\\Deploy` folder issue the following command `git-credential-manager install`. Additional information about [development and debugging](Docs/Development.md) are available in our documents area.\n\n[Various options](Docs/Configuration.md) are available for uniquely configured systems, like automated build systems. For systems with a **non-standard placement of Git** use the `--path <git>` parameter to supply where Git is located and thus where the GCM should be deployed to. For systems looking to **avoid checking for the Microsoft .NET Framework** and other similar prerequisites use the `--force` option. For systems looking for **silent installation without any prompts**, use the `--passive` option.\n\n### Additional Resources\n\n* [Credential Manager Usage](Docs/CredentialManager.md)\n* [Askpass Usage](Docs/Askpass.md)\n* [Configuration Options](Docs/Configuration.md)\n* [Build Agent and Automation Support](Docs/Automation.md)\n* [Bitbucket Specific Details](Docs/Bitbucket.md)\n* [Frequently Asked Questions](Docs/Faq.md)\n* [Development and Debugging](Docs/Development.md)\n\n## Contribute\n\nThere are many ways to contribute.\n\n* [Submit bugs](https://github.com/Microsoft/Git-Credential-Manager-for-Windows/issues) and help us verify fixes as they are checked in.\n* Review [code changes](https://github.com/Microsoft/Git-Credential-Manager-for-Windows/pulls).\n* Contribute bug fixes and features.\n\n### Code Contributions\n\nFor code contributions, you will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you grant us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under the appropriate copyright.\n\nPlease submit a Contributor License Agreement (CLA) before submitting a pull request. You may visit <https://cla.microsoft.com> to sign digitally. Alternatively, download the agreement [Microsoft Contribution License Agreement.pdf](https://cla.microsoft.com/cladoc/microsoft-contribution-license-agreement.pdf), sign, scan, and email it back to <cla@microsoft.com>. Be sure to include your GitHub user name along with the agreement. Once we have received the signed CLA, we'll review the request.\n\n## Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact <opencode@microsoft.com> with any additional questions or comments.\n\n## License\n\nThis project uses the [MIT License](LICENSE.txt).\n"
        },
        {
          "name": "Shared",
          "type": "tree",
          "content": null
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0263671875,
          "content": "theme: jekyll-theme-minimal"
        },
        {
          "name": "analysisRules.ruleset",
          "type": "blob",
          "size": 1.6640625,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RuleSet Name=\"GCM Analysis Rules\" Description=\"This rule set contains all Microsoft rules except the annoying ones.\" ToolsVersion=\"15.0\">\n  <IncludeAll Action=\"Warning\" />\n  <Rules AnalyzerId=\"Microsoft.Analyzers.ManagedCodeAnalysis\" RuleNamespace=\"Microsoft.Rules.Managed\">\n    <Rule Id=\"CA1014\" Action=\"None\" />\n    <Rule Id=\"CA1017\" Action=\"None\" />\n    <Rule Id=\"CA1021\" Action=\"None\" />\n    <Rule Id=\"CA1031\" Action=\"None\" />\n    <Rule Id=\"CA1032\" Action=\"None\" />\n    <Rule Id=\"CA1034\" Action=\"None\" />\n    <Rule Id=\"CA1051\" Action=\"None\" />\n    <Rule Id=\"CA1054\" Action=\"None\" />\n    <Rule Id=\"CA1055\" Action=\"None\" />\n    <Rule Id=\"CA1056\" Action=\"None\" />\n    <Rule Id=\"CA1057\" Action=\"None\" />\n    <Rule Id=\"CA1060\" Action=\"None\" />\n    <Rule Id=\"CA1303\" Action=\"None\" />\n    <Rule Id=\"CA1305\" Action=\"None\" />\n    <Rule Id=\"CA1404\" Action=\"None\" />\n    <Rule Id=\"CA1702\" Action=\"None\" />\n    <Rule Id=\"CA1703\" Action=\"None\" />\n    <Rule Id=\"CA1704\" Action=\"None\" />\n    <Rule Id=\"CA1707\" Action=\"None\" />\n    <Rule Id=\"CA1709\" Action=\"None\" />\n    <Rule Id=\"CA1710\" Action=\"None\" />\n    <Rule Id=\"CA1711\" Action=\"None\" />\n    <Rule Id=\"CA1716\" Action=\"None\" />\n    <Rule Id=\"CA1724\" Action=\"None\" />\n    <Rule Id=\"CA1726\" Action=\"None\" />\n    <Rule Id=\"CA2104\" Action=\"None\" />\n    <Rule Id=\"CA2105\" Action=\"None\" />\n    <Rule Id=\"CA2201\" Action=\"None\" />\n    <Rule Id=\"CA2202\" Action=\"None\" />\n    <Rule Id=\"CA2204\" Action=\"None\" />\n    <Rule Id=\"CA2205\" Action=\"None\" />\n    <Rule Id=\"CA2208\" Action=\"None\" />\n    <Rule Id=\"CA2210\" Action=\"None\" />\n    <Rule Id=\"CA2225\" Action=\"None\" />\n    <Rule Id=\"CA2234\" Action=\"None\" />\n  </Rules>\n</RuleSet>"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.783203125,
          "content": "version: \"{build}\"\n\nimage:\n  - Visual Studio 2017\n\nconfiguration:\n  - Release\n\nplatform: Any CPU\n\nbefore_build:\n  - nuget restore\n\nbuild:\n  parallel: true\n  verbosity: minimal\n\nbuild_script:\n  - msbuild \"GitCredentialManager.sln\" /bl:GitCredentialManager.binlog /logger:\"C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\" /consoleloggerparameters:Verbosity=minimal /maxcpucount /nodeReuse:false /target:\"Build\" /property:Configuration=\"%configuration%\";Platform=\"%platform%\"\n\ncache:\n  - packages -> **\\packages.config\n\nmatrix:\n  fast_finish: true\n\ntest:\n  assemblies:\n    - '**\\*.Test.dll'\n\nartifacts:\n  - path: GitCredentialManager.binlog\n    name: MSBuild Log\n  - path: Deploy\\*.*\n    name: Build Results\n    type: zip\n\non_failure:\n  - appveyor PushArtifact GitCredentialManager.binlog\n"
        },
        {
          "name": "build-docs.cmd",
          "type": "blob",
          "size": 1.2333984375,
          "content": ":: Want to update this thing and don't know how?\n:: Check http://ss64.com/nt/syntax.html\n:: This script requires Pandoc 1.19.2 or later at https://github.com/jgm/pandoc/releases\n@ECHO OFF\nSETLOCAL ENABLEEXTENSIONS\n\nSET assets=%~dp0Assets\nSET dstdir=%~dp0Deploy\nSET srcdir=%~dp0Docs\n\nIF NOT EXIST \"%dstdir%\" (\n    mkdir \"%dstdir%\" > nul 2>&1\n)\n\nIF EXIST %srcdir% (\n    ((WHERE pandoc > nul 2>&1) && (pandoc --from=markdown --to=html5 --self-contained --standalone --include-in-header=\"%assets%\\head_css.html\" --normalize --output=\"%dstdir%\\git-credential-manager.html\" \"%srcdir%\\CredentialManager.md\" \"%srcdir%\\Configuration.md\" \"%srcdir%\\Faq.md\" \"%srcdir%\\Automation.md\" \"%srcdir%\\Development.md\") && (ECHO git-credential-manager.html generated.)) || (ECHO Skipping git-credential-manager HTML generation, Pandoc not installed.)\n    ((WHERE pandoc > nul 2>&1) && (pandoc --from=markdown --to=html5 --self-contained --standalone --include-in-header=\"%assets%\\head_css.html\" --normalize --output=\"%dstdir%\\git-askpass.html\" \"%srcdir%\\Askpass.md\" \"%srcdir%\\Configuration.md\" \"%srcdir%\\Faq.md\" \"%srcdir%\\Automation.md\" \"%srcdir%\\Development.md\") && (ECHO git-askpass.html generated.)) || (ECHO Skipping git-askpass HTML generation, Pandoc not installed.)\n)\n\nEXIT /B 0"
        },
        {
          "name": "build.props",
          "type": "blob",
          "size": 1.9072265625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"15.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <PropertyGroup>\n    <ProjectName>Git Credential Manager for Windows</ProjectName>\n    <ProjectUrl>https://github.com/Microsoft/Git-Credential-Manager-for-Windows</ProjectUrl>\n  </PropertyGroup>\n  <PropertyGroup>\n    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\n    <CodeAnalysisRuleSet>..\\..\\analysisRules.ruleset</CodeAnalysisRuleSet>\n    <FileAlignment>512</FileAlignment>\n    <PlatformTarget>AnyCPU</PlatformTarget>\n    <Prefer32Bit>false</Prefer32Bit>\n    <RunCodeAnalysis>true</RunCodeAnalysis>\n    <TargetFrameworkProfile />\n    <WarningLevel>4</WarningLevel>\n  </PropertyGroup>\n  <PropertyGroup>\n    <Configuration Condition=\" '$(Configuration)' == '' Or '$(Configuration)' == '*Undefined*' \">Debug</Configuration>\n    <Platform Condition=\" '$(Platform)' == '' Or  '$(Platform)' == '*Undefined*' \" >Any CPU</Platform>\n    <SolutionDir Condition=\" '$(SolutionDir)' == '' Or '$(SolutionDir)' == '*Undefined*' \" >$(MSBuildThisFileDirectory)</SolutionDir>\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|Any CPU' Or '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\n    <DebugSymbols>true</DebugSymbols>\n    <DebugType>full</DebugType>\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\n    <ErrorReport>prompt</ErrorReport>\n    <Optimize>false</Optimize>\n    <OutputPath>bin\\Debug\\</OutputPath>\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|Any CPU' Or '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\n    <DebugType>pdbonly</DebugType>\n    <DefineConstants>TRACE</DefineConstants>\n    <ErrorReport>prompt</ErrorReport>\n    <Optimize>true</Optimize>\n    <OutputPath>bin\\Release\\</OutputPath>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <WarningsAsErrors />\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "build.targets",
          "type": "blob",
          "size": 0.970703125,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"15.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <Target Name=\"EnumerateProps\" BeforeTargets=\"BeforeBuild\">\n    <Message Text=\"ProjectName = $(ProjectName)\" />\n    <Message Text=\"ProjectUrl = $(ProjectUrl)\" />\n    <Message Text=\"ConfigurationPlatform = $(Configuration)|$(Platform)\" />\n    <Message Text=\"TargetFrameworkVersion = $(TargetFrameworkVersion)\" />\n    <Message Text=\"RootNamespace = $(RootNamespace)\" />\n    <Message Text=\"AutoGenerateBindingRedirects = $(AutoGenerateBindingRedirects)\" />\n    <Message Text=\"AssemblyName = $(AssemblyName)\" />\n    <Message Text=\"OutputType = $(OutputType)\" />\n    <Message Text=\"SignType = $(SignType)\" />\n  </Target>\n  <Target Name=\"RemoveDirectories\" AfterTargets=\"CoreClean\">\n    <Delete Files=\"$(OutputPath)\\*.*;$(IntermediateOutputPath)\\*.*\" />\n    <RemoveDir Directories=\"$(IntermediateOutputPath);$(OutputPath)\"/>\n  </Target>\n</Project>"
        },
        {
          "name": "coverity.bat",
          "type": "blob",
          "size": 2.1279296875,
          "content": "@ECHO OFF\n\nSETLOCAL\n\nPUSHD %~dp0\n\nSET PATH=C:\\MSYS\\bin;%PATH%\n\nIF NOT DEFINED COVDIR SET \"COVDIR=C:\\cov-analysis\"\nIF DEFINED COVDIR IF NOT EXIST \"%COVDIR%\" (\n    ECHO.\n    ECHO ERROR: Coverity not found in \"%COVDIR%\"\n    GOTO End\n)\n\n\nCALL :SubVSPath\nIF NOT EXIST \"%VS_PATH%\" CALL :SUBMSG \"ERROR\" \"Visual Studio 2017 NOT FOUND!\"\n\n\n:Cleanup\nIF EXIST \"cov-int\"  RD /q /s \"cov-int\"\nIF EXIST \"gcw.lzma\" DEL \"gcw.lzma\"\nIF EXIST \"gcw.tar\"  DEL \"gcw.tar\"\nIF EXIST \"gcw.tgz\"  DEL \"gcw.tgz\"\n\n\n:Main\nSET \"TOOLSET=%VS_PATH%\\Common7\\Tools\\vsdevcmd\"\nCALL \"%TOOLSET%\"\n\nSET MSBUILD_SWITCHES=/nologo /t:Rebuild /p:Configuration=Release /p:Platform=\"Any CPU\"^\n /maxcpucount /consoleloggerparameters:DisableMPLogging;Summary;Verbosity=minimal\n\n\"%COVDIR%\\bin\\cov-build.exe\" --dir cov-int MSBuild.exe GitCredentialManager.sln %MSBUILD_SWITCHES%\n\n\n:tar\ntar --version 1>&2 2>NUL || (ECHO. & ECHO ERROR: tar not found & GOTO SevenZip)\ntar caf \"gcw.lzma\" \"cov-int\"\nGOTO End\n\n\n:SevenZip\nCALL :SubDetectSevenzipPath\n\nrem Coverity is totally bogus with lzma...\nrem And since I cannot replicate the arguments with 7-Zip, just use tar/gzip.\nIF EXIST \"%SEVENZIP%\" (\n    \"%SEVENZIP%\" a -ttar \"gcw.tar\" \"cov-int\"\n    \"%SEVENZIP%\" a -tgzip \"gcw.tgz\" \"gcw.tar\"\n    IF EXIST \"gcw.tar\" DEL \"gcw.tar\"\n    GOTO End\n)\n\n\n:SubDetectSevenzipPath\nFOR %%G IN (7z.exe) DO (SET \"SEVENZIP_PATH=%%~$PATH:G\")\nIF EXIST \"%SEVENZIP_PATH%\" (SET \"SEVENZIP=%SEVENZIP_PATH%\" & EXIT /B)\n\nFOR %%G IN (7za.exe) DO (SET \"SEVENZIP_PATH=%%~$PATH:G\")\nIF EXIST \"%SEVENZIP_PATH%\" (SET \"SEVENZIP=%SEVENZIP_PATH%\" & EXIT /B)\n\nFOR /F \"tokens=2*\" %%A IN (\n    'REG QUERY \"HKLM\\SOFTWARE\\7-Zip\" /v \"Path\" 2^>NUL ^| FIND \"REG_SZ\" ^|^|\n     REG QUERY \"HKLM\\SOFTWARE\\Wow6432Node\\7-Zip\" /v \"Path\" 2^>NUL ^| FIND \"REG_SZ\"') DO SET \"SEVENZIP=%%B\\7z.exe\"\nEXIT /B\n\n\n:SubVSPath\nFOR /f \"delims=\" %%A IN ('\"%ProgramFiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -property installationPath -latest -requires Microsoft.Component.MSBuild Microsoft.VisualStudio.Component.VC.ATLMFC Microsoft.VisualStudio.Component.VC.Tools.x86.x64') DO SET \"VS_PATH=%%A\"\nEXIT /B\n\n\n:End\nPOPD\nECHO. & ECHO Press any key to close this window...\nPAUSE >NUL\nENDLOCAL\nEXIT /B\n"
        },
        {
          "name": "devops-ci.yml",
          "type": "blob",
          "size": 3.2978515625,
          "content": "# ** Git Credential Manager for Windows **\n# \n# Copyright (c) Microsoft Corporation\n# All rights reserved.\n# \n# MIT License\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"\"\"\"Software\"\"\"\"), to deal\n# in the Software without restriction, including without limitation the rights to\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n# the Software, and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"\n# \n# == Continuous Integration Pipeline ==\n# \n# Learn more at https://docs.microsoft.com/en-us/vsts/pipelines/get-started-yaml?view=vsts&tabs=gitvsts\n# https://microsoft-git-tools.visualstudio.com/Git-Credential-Manager-for-Windows\n\nphases:\n  - template: devops-tt.yml\n    parameters:\n      QueueName: 'Hosted VS2017'\n\n      CoreBuild:\n        - task: MSBuild@1\n          displayName: 'Core Build'\n          inputs:\n            solution: 'Installer/Installer.proj'\n            msbuildArguments: '/nologo /verbosity:$(Build.Verbosity) /binaryLogger:$(Build.SourcesDirectory)/$(build.buildNumber).binlog'\n            platform: '$(Build.Platform)'\n            configuration: '$(Build.Configuration)'\n            maximumCpuCount: false\n            msbuildArchitecture: '$(Build.Architecture)'\n\n      MicrobuildSetup: []\n      MicrobuildClean: []\n\n      NugetCommand:\n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            restoreSolution: 'GitCredentialManager.sln'\n            verbosityRestore: 'quiet'\n        \n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            command: custom\n            arguments: restore \"$(Build.SourcesDirectory)\\Installer\\packages.config\" -PackagesDirectory \"$(Build.SourcesDirectory)\\packages\" -SolutionDirectory \"$(Build.SourcesDirectory)\" -Verbosity Quiet\n\n      PublishArtifacts:\n        - task: PublishBuildArtifacts@1\n          displayName: 'Publish Artifact: Binary Log'\n          continueOnError: true\n          condition:  eq(variables['system.pullrequest.isfork'], false)\n          inputs:\n            pathtoPublish: '$(Build.SourcesDirectory)\\$(build.buildNumber).binlog'\n            artifactName: '$(build.buildNumber).binlog'\n            publishLocation: Container\n        \n        - task: PublishBuildArtifacts@1\n          displayName: 'Publish Artifact: Binaries'\n          continueOnError: true\n          condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))\n          inputs:\n            pathtoPublish: '$(Build.SourcesDirectory)\\Deploy\\'\n            artifactName: '$(Build.BuildNumber).output'\n            publishLocation: Container\n"
        },
        {
          "name": "devops-pr.yml",
          "type": "blob",
          "size": 2.2041015625,
          "content": "# ** Git Credential Manager for Windows **\n# \n# Copyright (c) Microsoft Corporation\n# All rights reserved.\n# \n# MIT License\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"\"\"\"Software\"\"\"\"), to deal\n# in the Software without restriction, including without limitation the rights to\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n# the Software, and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"\n# \n# == Pull Request Validtion Pipeline ==\n# \n# Learn more at https://docs.microsoft.com/en-us/vsts/pipelines/get-started-yaml?view=vsts&tabs=gitvsts\n# https://dev.azure.com/microsoft-git-tools/Git-Credential-Manager-for-Windows\n\nphases:\n  - template: devops-tt.yml\n    parameters:\n      QueueName: 'Hosted VS2017'\n\n      CoreBuild:\n        - task: MSBuild@1\n          displayName: 'Core Build'\n          inputs:\n            solution: \"GitCredentialManager.sln\"\n            msbuildArguments: /nologo /verbosity:$(Build.Verbosity) \"/binaryLogger:$(Build.SourcesDirectory)/$(build.buildNumber).binlog\"\n            platform: '$(Build.Platform)'\n            configuration: '$(Build.Configuration)'\n            maximumCpuCount: false\n            msbuildArchitecture: '$(Build.Architecture)'\n\n      MicrobuildSetup: []\n      MicrobuildClean: []\n\n      NugetCommand:\n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            restoreSolution: 'GitCredentialManager.sln'\n            verbosityRestore: 'quiet'\n\n      PublishArtifacts: []\n"
        },
        {
          "name": "devops-rs.yml",
          "type": "blob",
          "size": 3.96484375,
          "content": "# ** Git Credential Manager for Windows **\n# \n# Copyright (c) Microsoft Corporation\n# All rights reserved.\n# \n# MIT License\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"\"\"\"Software\"\"\"\"), to deal\n# in the Software without restriction, including without limitation the rights to\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n# the Software, and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"\n# \n# == RealSign and Release Pipeline ==\n# \n# Learn more at https://docs.microsoft.com/en-us/vsts/pipelines/get-started-yaml?view=vsts&tabs=gitvsts\n\nphases:\n  - template: devops-tt.yml\n    parameters:\n      QueueName: 'VSEng-MicroBuildVS2017'\n\n      CoreBuild:\n        - task: MSBuild@1\n          displayName: 'Core Build'\n          inputs:\n            solution: 'Installer/Installer.proj'\n            msbuildArguments: '/nologo /verbosity:$(Build.Verbosity) \"/binaryLogger:$(Build.SourcesDirectory)/$(build.buildNumber).binlog\"'\n            platform: '$(Build.Platform)'\n            configuration: '$(Build.Configuration)'\n            maximumCpuCount: false\n            msbuildArchitecture: '$(Build.Architecture)'\n\n      MicrobuildSetup:\n        - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1\n          displayName: Setup MicroBuild Signing\n          condition: and(succeeded(), or(eq(variables['signType'],'real'), eq(variables['signType'],'test')))\n          continueOnError: true\n          inputs:\n            feedSource: https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json\n            signType: '$(SignType)'\n            zipSources: true\n\n      MicrobuildClean:\n        - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1\n          displayName: MicroBuild Cleanup\n          condition: or(eq(variables['signType'],'real'), eq(variables['signType'],'test'))\n          continueOnError: true\n\n      NugetCommand:\n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            restoreSolution: 'GitCredentialManager.sln'\n            verbosityRestore: 'quiet'\n        \n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            command: custom\n            arguments: restore \"$(Build.SourcesDirectory)\\Installer\\packages.config\" -PackagesDirectory \"$(Build.SourcesDirectory)\\packages\" -SolutionDirectory \"$(Build.SourcesDirectory)\" -Verbosity Quiet\n\n      PublishArtifacts:\n        - task: PublishBuildArtifacts@1\n          displayName: 'Publish Artifact: Binary Log'\n          continueOnError: true\n          condition:  eq(variables['system.pullrequest.isfork'], false)\n          inputs:\n            pathtoPublish: $(Build.SourcesDirectory)\\$(build.buildNumber).binlog\n            artifactName: $(build.buildNumber).binlog\n            publishLocation: Container\n        \n        - task: PublishBuildArtifacts@1\n          displayName: 'Publish Artifact: Binaries'\n          continueOnError: true\n          condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))\n          inputs:\n            pathtoPublish: $(Build.SourcesDirectory)\\Deploy\\\n            artifactName: $(Build.BuildNumber).output\n            publishLocation: Container\n"
        },
        {
          "name": "devops-tt.yml",
          "type": "blob",
          "size": 2.5458984375,
          "content": "# ** Git Credential Manager for Windows **\n# \n# Copyright (c) Microsoft Corporation\n# All rights reserved.\n# \n# MIT License\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"\"\"\"Software\"\"\"\"), to deal\n# in the Software without restriction, including without limitation the rights to\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n# the Software, and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"\n# \n# == Pipeline Template ==\n# \n# Learn more at https://docs.microsoft.com/en-us/vsts/pipelines/get-started-yaml?view=vsts&tabs=gitvsts\n\nparameters:\n  QueueName: ''\n  CoreBuild: []\n  MicrobuildSetup: []\n  MicrobuildClean: []\n  NugetCommand: []\n  PublishArtifacts: []\n\nphases:\n  - phase: Build\n    queue:\n      name: ${{ parameters.QueueName }}\n      demands: \n      - msbuild\n      - visualstudio\n      - vstest\n    \n    steps:\n    - task: NuGetToolInstaller@0\n      displayName: 'Use NuGet 4.4.0'\n      inputs:\n        versionSpec: 4.4.0\n    \n    - ${{ parameters.NugetCommand }}\n    \n    - ${{ parameters.MicrobuildSetup }}\n    \n    - ${{ parameters.CoreBuild }}\n    \n    - task: VSTest@2\n      displayName: 'Execute Tests (Xunit)'\n      inputs:\n        testAssemblyVer2: |\n         **\\*Test.dll\n         !**\\xunit.*.dll\n         !**\\obj\\**\n        searchFolder: '$(Build.SourcesDirectory)'\n        runInParallel: true\n        runTestsInIsolation: true\n        codeCoverageEnabled: true\n        platform: '$(Build.Platform)'\n        configuration: '$(Build.Configuration)'\n    \n    - ${{ parameters.PublishArtifacts }}\n    \n    - task: DeleteFiles@1\n      displayName: 'Delete Artifacts from Agent'\n      inputs:\n        sourceFolder: '$(Build.SourcesDirectory)'\n        contents: |\n         *.binlog\n         Deploy\\*.*\n         **\\bin\\**\\*.*\n         **\\obj\\**\\*.*\n    \n    - ${{ parameters.MicrobuildClean }}\n    "
        },
        {
          "name": "proxy.props",
          "type": "blob",
          "size": 0.951171875,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <Import Project=\"Build.props\" />\n  <PropertyGroup>\n    <ProjectName>Proxy</ProjectName>\n    <ProjectUrl>https://github.com/Microsoft/Git-Credential-Manager-for-Windows</ProjectUrl>\n  </PropertyGroup>\n  <PropertyGroup>\n    <OutputType>Library</OutputType>\n    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\n  </PropertyGroup>\n  <PropertyGroup>\n    <TargetFrameworkProfile />\n    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\n    <RunCodeAnalysis>false</RunCodeAnalysis>\n  </PropertyGroup>\n  <PropertyGroup>\n    <DebugSymbols>true</DebugSymbols>\n    <DebugType>full</DebugType>\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\n    <ErrorReport>prompt</ErrorReport>\n    <Optimize>false</Optimize>\n    <OutputPath>bin\\Debug\\</OutputPath>\n    <WarningLevel>4</WarningLevel>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "test.props",
          "type": "blob",
          "size": 1.5927734375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <Import Project=\"Build.props\" />\n  <PropertyGroup>\n    <ProjectName>Test</ProjectName>\n    <ProjectUrl>https://github.com/Microsoft/Git-Credential-Manager-for-Windows</ProjectUrl>\n  </PropertyGroup>\n  <PropertyGroup>\n    <OutputType>Library</OutputType>\n    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>\n    <ReferencePath>$(ProgramFiles)\\Common Files\\microsoft shared\\VSTT\\$(VisualStudioVersion)\\UITestExtensionPackages</ReferencePath>\n    <TestProjectType>UnitTest</TestProjectType>\n    <VisualStudioVersion Condition=\"'$(VisualStudioVersion)' == ''\">10.0</VisualStudioVersion>\n    <VSToolsPath Condition=\"'$(VSToolsPath)' == ''\">$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)</VSToolsPath>\n  </PropertyGroup>\n  <PropertyGroup>\n    <TargetFrameworkProfile />\n    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\n    <RunCodeAnalysis>false</RunCodeAnalysis>\n  </PropertyGroup>\n  <PropertyGroup>\n    <DebugSymbols>true</DebugSymbols>\n    <DebugType>full</DebugType>\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\n    <ErrorReport>prompt</ErrorReport>\n    <Optimize>false</Optimize>\n    <OutputPath>bin\\Debug\\</OutputPath>\n    <WarningLevel>4</WarningLevel>\n  </PropertyGroup>\n  <ItemGroup>\n    <None Include=\"..\\..\\xunit.runner.json\">\n      <Link>xunit.runner.json</Link>\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </None>\n  </ItemGroup>\n</Project>\n"
        },
        {
          "name": "test.targets",
          "type": "blob",
          "size": 0.353515625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"15.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <Import Project=\"$(SolutionDir)build.targets\" />\n  <Import Project=\"$(VSToolsPath)\\TeamTest\\Microsoft.TestTools.targets\" Condition=\"Exists('$(VSToolsPath)\\TeamTest\\Microsoft.TestTools.targets')\" />\n</Project>"
        },
        {
          "name": "vsts-ci.yml",
          "type": "blob",
          "size": 3.2958984375,
          "content": "# ** Git Credential Manager for Windows **\n# \n# Copyright (c) Microsoft Corporation\n# All rights reserved.\n# \n# MIT License\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"\"\"\"Software\"\"\"\"), to deal\n# in the Software without restriction, including without limitation the rights to\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n# the Software, and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"\n# \n# == Continuous Integration Pipeline ==\n# \n# Learn more at https://docs.microsoft.com/en-us/vsts/pipelines/get-started-yaml?view=vsts&tabs=gitvsts\n# https://microsoft-git-tools.visualstudio.com/Git-Credential-Manager-for-Windows\n\nphases:\n  - template: vsts-tt.yml\n    parameters:\n      QueueName: 'Hosted VS2017'\n\n      CoreBuild:\n        - task: MSBuild@1\n          displayName: 'Core Build'\n          inputs:\n            solution: 'Installer/Installer.proj'\n            msbuildArguments: '/nologo /verbosity:$(Build.Verbosity) /binaryLogger:$(Build.SourcesDirectory)/$(build.buildNumber).binlog'\n            platform: '$(Build.Platform)'\n            configuration: '$(Build.Configuration)'\n            maximumCpuCount: false\n            msbuildArchitecture: '$(Build.Architecture)'\n\n      MicrobuildSetup: []\n      MicrobuildClean: []\n\n      NugetCommand:\n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            restoreSolution: 'GitCredentialManager.sln'\n            verbosityRestore: 'quiet'\n        \n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            command: custom\n            arguments: restore \"$(Build.SourcesDirectory)\\Installer\\packages.config\" -PackagesDirectory \"$(Build.SourcesDirectory)\\packages\" -SolutionDirectory \"$(Build.SourcesDirectory)\" -Verbosity Quiet\n\n      PublishArtifacts:\n        - task: PublishBuildArtifacts@1\n          displayName: 'Publish Artifact: Binary Log'\n          continueOnError: true\n          condition:  eq(variables['system.pullrequest.isfork'], false)\n          inputs:\n            pathtoPublish: '$(Build.SourcesDirectory)\\$(build.buildNumber).binlog'\n            artifactName: '$(build.buildNumber).binlog'\n            publishLocation: Container\n        \n        - task: PublishBuildArtifacts@1\n          displayName: 'Publish Artifact: Binaries'\n          continueOnError: true\n          condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))\n          inputs:\n            pathtoPublish: '$(Build.SourcesDirectory)\\Deploy\\'\n            artifactName: '$(Build.BuildNumber).output'\n            publishLocation: Container\n"
        },
        {
          "name": "vsts-pr.yml",
          "type": "blob",
          "size": 2.205078125,
          "content": "# ** Git Credential Manager for Windows **\n# \n# Copyright (c) Microsoft Corporation\n# All rights reserved.\n# \n# MIT License\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"\"\"\"Software\"\"\"\"), to deal\n# in the Software without restriction, including without limitation the rights to\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n# the Software, and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"\n# \n# == Pull Request Validtion Pipeline ==\n# \n# Learn more at https://docs.microsoft.com/en-us/vsts/pipelines/get-started-yaml?view=vsts&tabs=gitvsts\n# https://microsoft-git-tools.visualstudio.com/Git-Credential-Manager-for-Windows\n\nphases:\n  - template: vsts-tt.yml\n    parameters:\n      QueueName: 'Hosted VS2017'\n\n      CoreBuild:\n        - task: MSBuild@1\n          displayName: 'Core Build'\n          inputs:\n            solution: \"GitCredentialManager.sln\"\n            msbuildArguments: /nologo /verbosity:$(Build.Verbosity) \"/binaryLogger:$(Build.SourcesDirectory)/$(build.buildNumber).binlog\"\n            platform: '$(Build.Platform)'\n            configuration: '$(Build.Configuration)'\n            maximumCpuCount: false\n            msbuildArchitecture: '$(Build.Architecture)'\n\n      MicrobuildSetup: []\n      MicrobuildClean: []\n\n      NugetCommand:\n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            restoreSolution: 'GitCredentialManager.sln'\n            verbosityRestore: 'quiet'\n\n      PublishArtifacts: []\n"
        },
        {
          "name": "vsts-rs.yml",
          "type": "blob",
          "size": 3.962890625,
          "content": "# ** Git Credential Manager for Windows **\n# \n# Copyright (c) Microsoft Corporation\n# All rights reserved.\n# \n# MIT License\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"\"\"\"Software\"\"\"\"), to deal\n# in the Software without restriction, including without limitation the rights to\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n# the Software, and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"\n# \n# == RealSign and Release Pipeline ==\n# \n# Learn more at https://docs.microsoft.com/en-us/vsts/pipelines/get-started-yaml?view=vsts&tabs=gitvsts\n\nphases:\n  - template: vsts-tt.yml\n    parameters:\n      QueueName: 'VSEng-MicroBuildVS2017'\n\n      CoreBuild:\n        - task: MSBuild@1\n          displayName: 'Core Build'\n          inputs:\n            solution: 'Installer/Installer.proj'\n            msbuildArguments: '/nologo /verbosity:$(Build.Verbosity) \"/binaryLogger:$(Build.SourcesDirectory)/$(build.buildNumber).binlog\"'\n            platform: '$(Build.Platform)'\n            configuration: '$(Build.Configuration)'\n            maximumCpuCount: false\n            msbuildArchitecture: '$(Build.Architecture)'\n\n      MicrobuildSetup:\n        - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1\n          displayName: Setup MicroBuild Signing\n          condition: and(succeeded(), or(eq(variables['signType'],'real'), eq(variables['signType'],'test')))\n          continueOnError: true\n          inputs:\n            feedSource: https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json\n            signType: '$(SignType)'\n            zipSources: true\n\n      MicrobuildClean:\n        - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1\n          displayName: MicroBuild Cleanup\n          condition: or(eq(variables['signType'],'real'), eq(variables['signType'],'test'))\n          continueOnError: true\n\n      NugetCommand:\n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            restoreSolution: 'GitCredentialManager.sln'\n            verbosityRestore: 'quiet'\n        \n        - task: NuGetCommand@2\n          displayName: NuGet restore\n          inputs:\n            command: custom\n            arguments: restore \"$(Build.SourcesDirectory)\\Installer\\packages.config\" -PackagesDirectory \"$(Build.SourcesDirectory)\\packages\" -SolutionDirectory \"$(Build.SourcesDirectory)\" -Verbosity Quiet\n\n      PublishArtifacts:\n        - task: PublishBuildArtifacts@1\n          displayName: 'Publish Artifact: Binary Log'\n          continueOnError: true\n          condition:  eq(variables['system.pullrequest.isfork'], false)\n          inputs:\n            pathtoPublish: $(Build.SourcesDirectory)\\$(build.buildNumber).binlog\n            artifactName: $(build.buildNumber).binlog\n            publishLocation: Container\n        \n        - task: PublishBuildArtifacts@1\n          displayName: 'Publish Artifact: Binaries'\n          continueOnError: true\n          condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))\n          inputs:\n            pathtoPublish: $(Build.SourcesDirectory)\\Deploy\\\n            artifactName: $(Build.BuildNumber).output\n            publishLocation: Container\n"
        },
        {
          "name": "vsts-tt.yml",
          "type": "blob",
          "size": 2.5458984375,
          "content": "# ** Git Credential Manager for Windows **\n# \n# Copyright (c) Microsoft Corporation\n# All rights reserved.\n# \n# MIT License\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"\"\"\"Software\"\"\"\"), to deal\n# in the Software without restriction, including without limitation the rights to\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n# the Software, and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"\n# \n# == Pipeline Template ==\n# \n# Learn more at https://docs.microsoft.com/en-us/vsts/pipelines/get-started-yaml?view=vsts&tabs=gitvsts\n\nparameters:\n  QueueName: ''\n  CoreBuild: []\n  MicrobuildSetup: []\n  MicrobuildClean: []\n  NugetCommand: []\n  PublishArtifacts: []\n\nphases:\n  - phase: Build\n    queue:\n      name: ${{ parameters.QueueName }}\n      demands: \n      - msbuild\n      - visualstudio\n      - vstest\n    \n    steps:\n    - task: NuGetToolInstaller@0\n      displayName: 'Use NuGet 4.4.0'\n      inputs:\n        versionSpec: 4.4.0\n    \n    - ${{ parameters.NugetCommand }}\n    \n    - ${{ parameters.MicrobuildSetup }}\n    \n    - ${{ parameters.CoreBuild }}\n    \n    - task: VSTest@2\n      displayName: 'Execute Tests (Xunit)'\n      inputs:\n        testAssemblyVer2: |\n         **\\*Test.dll\n         !**\\xunit.*.dll\n         !**\\obj\\**\n        searchFolder: '$(Build.SourcesDirectory)'\n        runInParallel: true\n        runTestsInIsolation: true\n        codeCoverageEnabled: true\n        platform: '$(Build.Platform)'\n        configuration: '$(Build.Configuration)'\n    \n    - ${{ parameters.PublishArtifacts }}\n    \n    - task: DeleteFiles@1\n      displayName: 'Delete Artifacts from Agent'\n      inputs:\n        sourceFolder: '$(Build.SourcesDirectory)'\n        contents: |\n         *.binlog\n         Deploy\\*.*\n         **\\bin\\**\\*.*\n         **\\obj\\**\\*.*\n    \n    - ${{ parameters.MicrobuildClean }}\n    "
        },
        {
          "name": "xunit.runner.json",
          "type": "blob",
          "size": 0.2119140625,
          "content": "{\n  \"appDomain\": \"ifAvailable\",\n  \"diagnosticMessages\": false,\n  \"methodDisplay\": \"method\",\n  \"parallelizeAssembly\": true,\n  \"parallelizeTestCollections\": true,\n  \"preEnumerateTheories\": true,\n  \"shadowCopy\": false\n}\n"
        }
      ]
    }
  ]
}