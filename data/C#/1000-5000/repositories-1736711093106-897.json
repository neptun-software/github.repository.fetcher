{
  "metadata": {
    "timestamp": 1736711093106,
    "page": 897,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OpenSAGE/OpenSAGE",
      "stars": 1403,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 3.994140625,
          "content": "# EditorConfig is awesome:http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# All Files\n[*]\nindent_style = space\n\n# Code files\n[*.cs]\nindent_size = 4\ninsert_final_newline = true\ncharset = utf-8-bom\ntrim_trailing_whitespace = true\n\n# Solution Files\n[*.sln]\nindent_style = tab\n\n# XML Project Files\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n# Configuration Files\n[*.{json,xml,yml,config,props,targets,nuspec,resx,ruleset}]\nindent_size = 2\n\n# Markdown Files\n[*.md]\ntrim_trailing_whitespace = false\n\n# Code file style settings\n[*.cs]\ndotnet_sort_system_directives_first = true\ndotnet_style_qualification_for_field = false:suggestion\ndotnet_style_qualification_for_property = false:suggestion\ndotnet_style_qualification_for_method = false:suggestion\ndotnet_style_qualification_for_event = false:suggestion\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\ndotnet_style_predefined_type_for_member_access = true:suggestion\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ncsharp_style_var_for_built_in_types = true:suggestion\ncsharp_style_var_when_type_is_apparent = true:suggestion\ncsharp_style_var_elsewhere = true:suggestion\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_space_after_cast = false\ncsharp_prefer_braces = true:suggestion\n\ndotnet_naming_rule.constants_must_be_pascal_cased.symbols                                             = constant_symbols\ndotnet_naming_rule.constants_must_be_pascal_cased.style                                               = pascal_case_style\ndotnet_naming_rule.constants_must_be_pascal_cased.severity                                            = warning\n\ndotnet_naming_rule.private_static_fields_must_be_pascal_cased.symbols                                 = private_static_field_symbols\ndotnet_naming_rule.private_static_fields_must_be_pascal_cased.style                                   = pascal_case_style\ndotnet_naming_rule.private_static_fields_must_be_pascal_cased.severity                                = warning\n\ndotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.symbols   = private_field_symbols\ndotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.style     = camel_case_and_prefix_with_underscore_style\ndotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.severity  = warning\n\ndotnet_naming_symbols.constant_symbols.applicable_kinds                                               = field\ndotnet_naming_symbols.constant_symbols.required_modifiers                                             = const\ndotnet_naming_symbols.constant_symbols.applicable_accessibilities                                     = *\n\ndotnet_naming_symbols.private_static_field_symbols.applicable_kinds                                   = field\ndotnet_naming_symbols.private_static_field_symbols.required_modifiers                                 = static,shared\ndotnet_naming_symbols.private_static_field_symbols.applicable_accessibilities                         = private\n\ndotnet_naming_symbols.private_field_symbols.applicable_kinds                                          = field\ndotnet_naming_symbols.private_field_symbols.applicable_accessibilities                                = private\n\ndotnet_naming_style.pascal_case_style.capitalization                                                  = pascal_case\n\ndotnet_naming_style.camel_case_and_prefix_with_underscore_style.required_prefix                       = _\ndotnet_naming_style.camel_case_and_prefix_with_underscore_style.capitalization                        = camel_case\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.16796875,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n\n# Declare files that will always have CRLF line endings on checkout.\n*.txt text eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.833984375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n**/Properties/launchSettings.json\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Typescript v1 declaration files\ntypings/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n\nimgui.ini\n\nShaderCache\nDeveloperMode.ini"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.5302734375,
          "content": "Contributing to OpenSage\n======================\n\nThis document describes contribution guidelines that are specific to OpenSage. It closely matches the guidelines defined by the [C# standard library](https://github.com/dotnet/corefx) itself\n\nDeveloper Guide\n--------------------\nIn case you want some more knowledge on how to get started with development of OpenSage please take a look at our [Developer Guide](docs/developer-guide.md). \n\nCoding Style Changes\n--------------------\n\nOpenSage tries to strictly match the coding style described in [Coding Style](docs/coding-style.md). We plan to do that with tooling, in a holistic way. In the meantime, please:\n\n* **DO NOT** send PRs for style changes.\n\nPull Requests\n-------------\n\n* **DO** submit all code changes via pull requests (PRs) rather than through a direct commit. PRs will be reviewed and potentially merged by the repo maintainers after a peer review that includes at least one maintainer.\n* **DO** give PRs short-but-descriptive names (e.g. \"Improve code coverage for System.Console by 10%\", not \"Fix #1234\")\n* **DO** refer to any relevant issues, and include [keywords](https://help.github.com/articles/closing-issues-via-commit-messages/) that automatically close issues when the PR is merged.\n* **DO** tag any users that should know about and/or review the change.\n* **DO** ensure each commit successfully builds.  The entire PR must pass all tests in the Continuous Integration (CI) system before it'll be merged.\n* **DO** address PR feedback in an additional commit(s) rather than amending the existing commits, and only rebase/squash them when necessary.  This makes it easier for reviewers to track changes.\n* **DO** assume that [\"Rebase and Merge\"](https://github.com/blog/2141-squash-your-commits) will be used to merge your commit unless you request otherwise in the PR.\n* **DO NOT** fix merge conflicts using a merge commit. Prefer `git rebase`.\n* **DO NOT** mix independent, unrelated changes in one PR. Separate real product/test code changes from larger code formatting/dead code removal changes. Separate unrelated fixes into separate PRs, especially if they are in different assemblies.\n\nMerging Pull Requests (for contributors with write access)\n----------------------------------------------------------\n\n* **DO** use [\"Rebase and Merge\"](https://github.blog/2016-09-26-rebase-and-merge-pull-requests) by default for contributions.\n* **DO** use [\"Squash and Merge\"](https://github.com/blog/2141-squash-your-commits) in case a PR author created many small commits, which don't make a lot of sense individually.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 7.3818359375,
          "content": "GNU Lesser General Public License\n=================================\n\n_Version 3, 29 June 2007_  \n_Copyright © 2007 Free Software Foundation, Inc. &lt;<http://fsf.org/>&gt;_\n\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n\n\nThis version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n### 0. Additional Definitions\n\nAs used herein, “this License” refers to version 3 of the GNU Lesser\nGeneral Public License, and the “GNU GPL” refers to version 3 of the GNU\nGeneral Public License.\n\n“The Library” refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\nAn “Application” is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\nA “Combined Work” is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the “Linked\nVersion”.\n\nThe “Minimal Corresponding Source” for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\nThe “Corresponding Application Code” for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n### 1. Exception to Section 3 of the GNU GPL\n\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n### 2. Conveying Modified Versions\n\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n* **a)** under this License, provided that you make a good faith effort to\nensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\n\n* **b)** under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n### 3. Object Code Incorporating Material from Library Header Files\n\nThe object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n* **a)** Give prominent notice with each copy of the object code that the\nLibrary is used in it and that the Library and its use are\ncovered by this License.\n* **b)** Accompany the object code with a copy of the GNU GPL and this license\ndocument.\n\n### 4. Combined Works\n\nYou may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n* **a)** Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\n\n* **b)** Accompany the Combined Work with a copy of the GNU GPL and this license\ndocument.\n\n* **c)** For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\n\n* **d)** Do one of the following:\n    - **0)** Convey the Minimal Corresponding Source under the terms of this\nLicense, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n    - **1)** Use a suitable shared library mechanism for linking with the\nLibrary.  A suitable mechanism is one that **(a)** uses at run time\na copy of the Library already present on the user's computer\nsystem, and **(b)** will operate properly with a modified version\nof the Library that is interface-compatible with the Linked\nVersion.\n\n* **e)** Provide Installation Information, but only if you would otherwise\nbe required to provide such information under section 6 of the\nGNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the\nApplication with a modified version of the Linked Version. (If\nyou use option **4d0**, the Installation Information must accompany\nthe Minimal Corresponding Source and Corresponding Application\nCode. If you use option **4d1**, you must provide the Installation\nInformation in the manner specified by section 6 of the GNU GPL\nfor conveying Corresponding Source.)\n\n### 5. Combined Libraries\n\nYou may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n* **a)** Accompany the combined library with a copy of the same work based\non the Library, uncombined with any other library facilities,\nconveyed under the terms of this License.\n* **b)** Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n### 6. Revised Versions of the GNU Lesser General Public License\n\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License “or any later version”\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.2265625,
          "content": "![OpenSAGE](/art/opensage-logo.png)\n============================================================\n\n[![Build Status](https://github.com/OpenSage/OpenSage/workflows/CI/badge.svg)](https://github.com/OpenSAGE/OpenSAGE/actions)\n[![Discord Chat](https://img.shields.io/discord/398393968234332161.svg?logo=discord)](https://discord.gg/G2FhZUT)\n[![codecov](https://codecov.io/gh/OpenSAGE/OpenSAGE/branch/master/graph/badge.svg)](https://codecov.io/gh/OpenSAGE/OpenSAGE)\n\n**OpenSAGE**: a free, open source re-implementation of [SAGE](https://en.wikipedia.org/wiki/SAGE_(game_engine)), the 3D \nreal time strategy (RTS) engine used in Command & Conquer™: Generals and other \nRTS titles from EA Pacific.\n\nThis project is being developed with an initial focus on Command & Conquer:\nGenerals and Command & Conquer: Generals Zero Hour. Support for other SAGE-based\ngames may come later. The primary development target is Windows, with support\nplanned for macOS at a later date.\n\n## Work in progress\n\nThis project is in the *very* early stages. There is still a long way to go before there's anything playable. \nThe initial focus is on understanding the data formats used in Command & Conquer: Generals and Zero Hour.\n\nHere's a rough roadmap:\n\n### Parse data files\n\n* [x] `.map`\n* [x] `.w3d`\n* [x] `.wak`\n* [x] `.wnd`\n* [x] `.csf`\n* [x] `.ini`\n* [x] `.ani`\n* [x] `.dds`\n* [x] `.tga`\n* [x] `.const`\n* [x] `.apt`\n* [x] `.wav`\n* [x] `.mp3`\n\n### Rendering\n\n* [x] Render 3D models loaded from `.w3d`, including animations\n* [ ] Render maps loaded from `.map` (in progress)\n* [ ] Render particle systems (in progress)\n* [ ] Render GUI loaded from `.wnd` (in progress)\n\n### Game logic\n\n* [ ] Scripting engine (in progress)\n* [ ] APT virtual machine (in progress)\n* [ ] AI - Path finding, base building, fighting\n* [ ] Physics engine\n* [ ] Weapons\n* [ ] Locomotors\n* [ ] Input (keyboard, mouse)\n* [ ] Network play\n* [ ] Much more...\n\n### Platforms\n\n* [x] Windows\n  * OpenGL 4.3\n  * Direct3D 11\n* [x] Mac\n  * Metal 2 (requires macOS High Sierra)\n* [x] Linux\n  * OpenGL 4.3\n\n## Legal disclaimers\n\n* This project is not affiliated with or endorsed by EA in any way. Command & Conquer is a trademark of Electronic Arts.\n* This project is non-commercial. The source code is available for free and always will be.\n* OpenSAGE is nowhere near playable yet, but when it is and you want to play Generals or Zero Hour with it,\n  you will need to have a legally acquired installation of one of those games. OpenSAGE uses data files from the original games. \n  You can purchase [Command & Conquer: The Ultimate Collection through Origin](https://www.origin.com/twn/en-us/store/command-and-conquer/command-and-conquer-the-ultimate-collection/ultimate-collection).\n* This is a blackbox re-implementation project. The code in this project was written based on reading data files, \n  and observing the game running. In some cases (for example refpack decompression) the code was written based on specs available on the Internet.\n  I believe this puts the project in the clear, legally speaking. If someone at EA disagrees, please talk to me.\n* If you want to contribute to this repository, your contribution must be either your own original code, or open source code with a\n  clear acknowledgement of its origin. No code that was acquired through reverse engineering executable binaries will be accepted.\n* No assets from the original games are included in this repo.\n\nA note on the name: while Command & Conquer is a trademark of EA, SAGE is not (as far as I can tell, based on a US trademark search). \"OpenSAGE\" seems like a good way to make it clear what the project is about, without infringing on trademarks.\n\n## About\n\nOpenSAGE is being created by me, Tim Jones. I was at university in February 2003 when C&C Generals was first released. I spent far too much time playing it and the sequel, Zero Hour (and as a consequence, not enough time studying). In my opinion, as a near-real-world RTS game, it is still unmatched even 14 years later.\n\nI later bought The First Decade on DVD, and it was this copy I wanted to install in Windows 10. I even bought an external DVD drive in order to do so. It wasn't straightforward, and it made me worry that one day I won't be able to play what is still my favourite RTS game.\n\nOne thing led to another, and I found myself opening `.map` files in a hex viewer. I had the idea of recreating the game, using the original assets. This appealed to me on many levels: it's a preservation of history, it satisfies my nostalgia, and it's an extreme programming challenge.\n\nIt's a vast project, and who knows how far I'll get. Hopefully we'll all have some fun along the way.\n\n## Community\n\nWe have a growing [OpenSAGE Discord](https://discord.gg/G2FhZUT) community. If you have questions about the project or can't get it working,\nthere's usually someone there who can help out.\n\n## Acknowledgements\n\nFirst, I would like to thank Stephan Vedder ([feliwir](https://github.com/feliwir)) for his efforts, over several years, to understand\nseveral of the key SAGE data formats, including `.w3d`. Without his prior work, I would have had a much harder time getting started.\n\nDeeZire's [module list](http://www.redsys.su/mkportal/files/ModuleList.txt) has been extremely helpful in understanding all the `Object` parameters in `.ini` files.\n\nThe font used in the OpenSAGE logo was created by Dexistor371 and is available from [DeviantArt](https://dexistor371.deviantart.com/art/Command-and-Conquer-logo-font-396527879).\n\nThe sage / leaf icon used in the OpenSAGE logo was created by Monjin Friends and is licenced under [Creative Commons CC BY 3.0 US](https://creativecommons.org/licenses/by/3.0/us/). It is available [from the Noun Project](https://thenounproject.com/term/leaf/1052490/).\n\nFinally, I want to thank the original team who built Generals and Zero Hour, because without their work, I wouldn't be doing any of this.\n(As I get further into the project, I'm gaining ever greater admiration for what those people were able to achieve 14 years ago, both technically\nand artistically.)\n\n## Similar projects\n\nThese projects have similar goals:\n\n* [Arda](https://github.com/feliwir/arda)\n* [smx-smx/openSage](https://github.com/smx-smx/openSage)\n\n[OpenRA](https://www.openra.net/) already does for the Westwood RTS games what I hope to do for the EA-era RTS games with OpenSAGE.\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.1181640625,
          "content": "{\n  \"sdk\": {\n    \"version\": \"8.0.100\",\n    \"rollForward\": \"latestFeature\"\n  },\n  \"tools\": {\n    \"dotnet\": \"8.0.100\"\n  }\n}"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}