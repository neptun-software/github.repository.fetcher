{
  "metadata": {
    "timestamp": 1736711079683,
    "page": 866,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Unity-Technologies/InputSystem",
      "stars": 1441,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".buginfo",
          "type": "blob",
          "size": 0.0859375,
          "content": "system: jira\nserver: jira.unity3d.com\nproject: ISXB\nissuetype: Bug\npackage: Input System"
        },
        {
          "name": ".fork",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5830078125,
          "content": "# by convention everything should be LF\n* text eol=lf\n\n# VS can handle these as LF, but really wants them as CRLF\n*.vcproj          text eol=crlf\n*.vcxproj         text eol=crlf\n*.vcxproj.filters text eol=crlf\n*.csproj          text eol=crlf\n*.props           text eol=crlf\n*.targets         text eol=crlf\n*.sln             text eol=crlf\n*.sln.template    text eol=crlf\n*.bat             text eol=crlf\n*.cmd             text eol=crlf\n*.xaml            text eol=crlf\n\n*.dll binary\n*.exe binary\n*.pdb binary\n*.png binary\n*.jpg binary\n*.exr binary\n*.ttf binary\n*.pdf binary\n*.xcf binary\n*.ico binary\n"
        },
        {
          "name": ".gitconfig",
          "type": "blob",
          "size": 0.025390625,
          "content": "[core]\n    autocrlf=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8916015625,
          "content": "InitTestScene*\n*.preformat.bak*\n*.orig\n*.orig.meta\n.vs/\n.vsconfig\nAssets/Plugins/Editor/JetBrains\nAssets/Plugins/Editor/JetBrains.meta\n\n/[Ll]ibrary/\n/[Tt]emp/\n/[Oo]bj/\n/[Bb]uild/\n/[Bb]uilds/\n/[Ll]ogs/\n/[Uu]ser[Ss]ettings/\n\n*.sln\n*.sln*user\n*.csproj\n*.DotSettings\n*.userprefs\n.idea/\nupm-ci~/\nobj/\n.DS_Store\ndocerrors.log\n\nAssets/**/*.api\nAssets/**/*.api.meta\nAssets/__TestInputAsset.inputactions\nAssets/__TestInputAsset.inputactions.meta\n\nPackages/packages-lock.json\nPackages/com.unity.inputsystem/artifacts/**\nPackages/com.unity.inputsystem/build/**\nPackages/com.unity.inputsystem/Documentation~/ApiDocs/**\nPackages/com.unity.inputsystem/.DS_Store\nPackages/com.unity.inputsystem/.npmrc\nPackages/com.unity.inputsystem/**/*.api\nPackages/com.unity.inputsystem/**/*.api.meta\n\nPackages/com.unity.package-manager-ui/\nPackages/com.unity.package-manager-doctools/\n\nTools/CI/[Bb]in\nTools/CI/[Oo]bj\n\n.Editor\n.bin\n.download\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1650390625,
          "content": "[submodule \"Tools/CodeAnalyzerTestProject/api-analyzers\"]\n\tpath = Tools/CodeAnalyzerTestProject/api-analyzers\n\turl = https://github.com/Unity-Technologies/api-anaylzers\n"
        },
        {
          "name": ".repoconfig",
          "type": "blob",
          "size": 0.1376953125,
          "content": "[version]\nrepoconfig = 5\n\n[format]\npath-ignore=<<EOT\n^(\n Packages/com\\.unity\\.package-manager-doctools\n|Tools/CodeAnalyzerTestProject\n)/\nEOT\n"
        },
        {
          "name": ".yamato",
          "type": "tree",
          "content": null
        },
        {
          "name": "AndroidBuildTests.cmd",
          "type": "blob",
          "size": 0.16015625,
          "content": "REM Use this script if you don't want to enable script executions on your system\nPowerShell -NoProfile -ExecutionPolicy Bypass -Command \"& .\\AndroidBuildTests.ps1\"\n"
        },
        {
          "name": "AndroidBuildTests.ps1",
          "type": "blob",
          "size": 0.73046875,
          "content": "$Env:EDITOR_LOCATION = \"\"\n\nIf (!$Env:EDITOR_LOCATION)\n{\n\tWrite-Output \"Please specify Editor path, for ex., C:/Program Files/Unity/Hub/Editor/2019.3.13f1/Editor or modify this bat file\"\n\t$Env:EDITOR_LOCATION = Read-Host -Prompt 'Editor Location'\n}\n\nIf (!$Env:EDITOR_LOCATION)\n{\n\tWrite-Output \"Invalid editor location, exiting\"\n\texit\n}\n\nWrite-Output \"Editor location is $Env:EDITOR_LOCATION\"\n\nInvoke-WebRequest -Uri \"https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat\" -OutFile \"utr.bat\"\n./utr.bat --suite=playmode --platform=Android --editor-location=\"$Env:EDITOR_LOCATION\" --testproject=F:/Projects/InputSystem --player-save-path=build/players --artifacts_path=build/logs --scripting-backend=il2cpp --build-only\n"
        },
        {
          "name": "AndroidRunTests.cmd",
          "type": "blob",
          "size": 0.158203125,
          "content": "REM Use this script if you don't want to enable script executions on your system\nPowerShell -NoProfile -ExecutionPolicy Bypass -Command \"& .\\AndroidRunTests.ps1\"\n"
        },
        {
          "name": "AndroidRunTests.ps1",
          "type": "blob",
          "size": 0.6865234375,
          "content": "$Env:ANDROID_SDK_ROOT = \"\"\n\nIf (!$Env:ANDROID_SDK_ROOT)\n{\n\tWrite-Output \"Please specify Android SDK Root path, for ex., C:/Program Files/Unity/Hub/Editor/2019.3.13f1/Editor/Data/PlaybackEngines/AndroidPlayer/SDK or modify this bat file\"\n\t$Env:ANDROID_SDK_ROOT = Read-Host -Prompt 'Android SDK ROOT'\n}\n\nIf (!$Env:ANDROID_SDK_ROOT)\n{\n\tWrite-Output \"Invalid ANDROID_SDK_ROOT location, exiting\"\n\texit\n}\n\nWrite-Output \"ANDROID_SDK_ROOT is $Env:ANDROID_SDK_ROOT\"\n\nInvoke-WebRequest -Uri \"https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat\" -OutFile \"utr.bat\"\n./utr.bat --suite=playmode --platform=android --player-load-path=build/players --artifacts_path=build/test-results\n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTIONS.md",
          "type": "blob",
          "size": 1.375,
          "content": "# Contributions\n\n## All contributions are subject to the [Unity Contribution Agreement(UCA)](https://unity3d.com/legal/licenses/Unity_Contribution_Agreement)\nBy making a pull request, you are confirming agreement to the terms and conditions of the UCA, including that your Contributions are your original creation and that you have complete right and authority to make your Contributions.\n\n## Once you have a change ready that complies to the rules above, open a pull request in GitHub.\n\nNotes:\n\n* We can rarely take a pull request directly and as-is because our CI doesn't run on PRs coming from forks. So, in most cases we will have to incorporate your changes into a branch inside the repository and merge it into the `develop` branch via a separate PR. When we do so, we will clearly state that in your PR.\n* All changes are subject to the following requirements:\n  1) Tests need to be green.\n  2) Behavioral changes need to be accompanied by test changes/additions.\n  3) Where relevant, documentation (xmldoc and/or Manual) needs to be updated.\n  4) Fixes, changes, and additions need to be documented in [CHANGELOG](Packages/com.unity.inputsystem/CHANGELOG.md).\n  5) Breaking API changes can only be introduced in new major versions.\n* The more a PR deviates from these requirements, the more work we have to do on our side to incorporate your changes. Give your PR a leg up by making it easy on us :)\n"
        },
        {
          "name": "Docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExternalSampleProjects",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.4794921875,
          "content": "Input System © 2023 Unity Technologies\n\nLicensed under the Unity Companion License for Unity-dependent projects (see [https://unity3d.com/legal/licenses/unity_companion_license](https://unity3d.com/legal/licenses/unity_companion_license)).\n\nUnless expressly provided otherwise, the Software under this license is made available strictly on an “AS IS” BASIS WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED. Please review the license for details on these and other terms and conditions.\n"
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.7265625,
          "content": "# Unity Input System (Package)\n\nThe Unity Input System package is an extension package to the [Unity Platform](https://unity.com/products/unity-platform) which provides a system to configure game actions and access input devices to interact with Unity content. It is intended to be a more powerful, flexible, and configurable replacement to [Unity Input API](https://docs.unity3d.com/ScriptReference/Input.html) (the `UnityEngine.Input` class).\n\n## Prerequisites\n\nThe current version of the Input System requires Unity 2019 LTS, Unity 2020 LTS, Unity 2021 or Unity Beta (may be subject to instabilities) and included tooling to compile and run. The recommended way of installing Unity is via [Unity Hub](https://unity3d.com/get-unity/download).\n\n## Getting Started\n\nFor instructions on how to get started using the Input System within Unity see [Input System Manual - Installation](https://docs.unity3d.com/Packages/com.unity.inputsystem@latest/index.html?subfolder=/manual/Installation.html).\n\nTutorials on how to use the Input System are available as part of:\n- [Unity Learn - Using the Input System in Unity](https://learn.unity.com/project/using-the-input-system-in-unity) - Video tutorials on how to use the Input System in Unity.\n- [Warriors Demo Project](https://github.com/UnityTechnologies/InputSystem_Warriors) - A demo project illustrating a wide range of tools and features in the Input System, including local multi-player using different input methods.\n- Example projects part of this repository:\n    - [Custom Composite](Assets/Samples/CustomComposite) - Shows how to implement and register a custom `InputBindingComposite`.\n    - [Custom Device](Assets/Samples/CustomDevice) - Demonstrates how to add and author a custom device.\n    - [Custom Device Usages](Assets/Samples/CustomDeviceUsages) - An example of how to tag devices with custom \"usages\" and how to bind actions specifically to devices with only those usages.\n    - [Gamepad Mouse Cursor](Assets/Samples/GamepadMouseCursor) - An example of UI pointer navigation driven from gamepad input.\n    - [In-game Hints](Assets/Samples/InGameHints) - Illustrates how to display text in the UI that involves action bindings as well as object interaction.\n    - [Input Recorder](Assets/Samples/InputRecorder) - Demonstrates how to use [`InputEventTrace`](https://docs.unity3d.com/Packages/com.unity.inputsystem@latest/index.html?subfolder=/api/UnityEngine.InputSystem.LowLevel.InputEventTrace.html) and [`InputRecorder`](./InputRecorder.cs).\n    - [On-screen Controls](Assets/Samples/OnScreenControls) - Demonstrates how to set up and use on-screen gamepad-like controls.\n    - [Rebinding UI](Assets/Samples/RebindingUI) - Demonstrates how to set up a rebinding UI to reconfigure bindings during run-time.\n    - [Simple Demo](Assets/Samples/SimpleDemo) - Shows how to set up a simple character controller using actions, action asset as well as using the `PlayerInput` component.\n    - [Simple Multiplayer](Assets/Samples/SimpleMultiplayer) - Demonstrates a basic split-screen local multiplayer setup where players can join by pressing buttons on the supported devices to join the game.\n    - [UI vs Game Input](Assets/Samples/UIvsGameInput) - Illustrates how to handle input and resolve ambiguities that arise when overlaying UI elements in the game-view.\n    - [Visualizers](Assets/Samples/Visualizers) - Provides various input data visualizations for common devices.\n\n## How to use a released versions of the package within a Unity project\n\nAll released versions of the Input System package are available via the Unity Package Manager, see [`Input System Manual - Installation`](https://docs.unity3d.com/Packages/com.unity.inputsystem@latest/index.html?subfolder=/manual/Installation.html) for instructions how to fetch the package and compatible versions of samples and install them into your Unity project.\n\n## How to use the latest changes of the package in a Unity project\n\nTo test out the latest (unreleased) changes:\n\n1. Clone [develop](https://github.com/Unity-Technologies/InputSystem/tree/develop). The intention is to always keep the `develop` branch in a releasable state, but it reflects current development and may contain bugs or unexpected behavior that was not present in the latest released version.\n2. Add the local package to your project by following the steps described in [Unity Manual - Installing a package from a local folder](https://docs.unity3d.com/Manual/upm-ui-local.html) and select `Packages/com.unity.inputsystem/package.json`.\n\n## Recommended way of developing the Input System\n\n1. Clone [develop](https://github.com/Unity-Technologies/InputSystem/tree/develop) or the desired branch or release tag.\n2. Open the root folder of the repository in the Unity Editor. This way you have access to tests and samples that are excluded when importing only the package into another Unity project.\n\nDuring development, run Input System automated tests by selecting `Window > General > Test Runner` to access the Test Runner and select `Run All` for `PlayMode` or `EditMode` tests.\n\n## Contribution & Feedback\nThis project is developed by Unity Technologies but welcomes user contributions and feedback.\n\nIf you have any feedback or questions about Unity's Input System, you are invited to join us on the [Unity Forums](https://forum.unity.com/forums/new-input-system.103/).\n\nIf you want to contribute to the development of the Input System see [CONTRIBUTIONS.md](https://github.com/Unity-Technologies/InputSystem/blob/develop/CONTRIBUTIONS.md) for additional information.\n\n## License\n\nThis package is distributed under the [Unity Companion License for Unity-dependent projects](LICENSE.md) license with addition of [third party licenses](Third%20Party%20Notices.md) which applies to the [Assets/Samples/RebindingUI](Assets/Samples/RebindingUI) example project specifically.\n"
        },
        {
          "name": "Third Party Notices.md",
          "type": "blob",
          "size": 7.2958984375,
          "content": "# This package contains third-party software components governed by the license(s) indicated below\n\n---\n\n<pre>\nComponent Name: Assets/Samples/RebindingUI/Icons/*.png (RebindingUI sample icon assets)\nSource URL:     https://opengameart.org/content/free-keyboard-and-controllers-prompts-pack\nVersion:        4.0\nLicense:        Creative Commons CC0\nLicense URL:    https://creativecommons.org/publicdomain/zero/1.0/\n\n\nCreative Commons Legal Code\n\nCC0 1.0 Universal\n\n    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\n    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\n    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\n    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\n    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\n    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\n    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\n    HEREUNDER.\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n</pre>\n"
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "cleangarbage.cmd",
          "type": "blob",
          "size": 0.1552734375,
          "content": "REM Use this script if you don't want to enable script executions on your system\nPowerShell -NoProfile -ExecutionPolicy Bypass -Command \"& .\\cleangarbage.ps1\"\n"
        },
        {
          "name": "cleangarbage.ps1",
          "type": "blob",
          "size": 0.234375,
          "content": "Get-ChildItem Assets -Recurse -Name \"*.preformat*\" | foreach { rm Assets/$_ }\nGet-ChildItem Packages -Recurse -Name \"*.preformat*\" | foreach { rm Packages/$_ }\nGet-ChildItem Assets -Recurse -Name \"InitTestScene*\" | foreach { rm Assets/$_ }\n"
        },
        {
          "name": "cleangarbage.sh",
          "type": "blob",
          "size": 0.154296875,
          "content": "#!/bin/sh\nfind Assets -name \"*.preformat*\" -exec rm {} \\;\nfind Packages -name \"*.preformat*\" -exec rm {} \\;\nfind Assets -name \"InitTestScene*\" -exec rm {} \\;\n"
        },
        {
          "name": "countsloc.sh",
          "type": "blob",
          "size": 0.2177734375,
          "content": "#!/bin/sh\necho \"----- System ------\"\nwc `find Packages/com.unity.inputsystem/InputSystem -name \"*.cs\"`\necho \"----- Tests -------\"\nwc `find Packages/com.unity.inputsystem/Tests -name \"*.cs\"` `find Assets/Tests -name \"*.cs\"`\n"
        },
        {
          "name": "format.cmd",
          "type": "blob",
          "size": 0.1494140625,
          "content": "REM Use this script if you don't want to enable script executions on your system\nPowerShell -NoProfile -ExecutionPolicy Bypass -Command \"& .\\format.ps1\"\n"
        },
        {
          "name": "format.ps1",
          "type": "blob",
          "size": 0.26953125,
          "content": "if ( Test-Path ${Home}/unity-meta )\n{\n    git -C ${Home}/unity-meta fetch\n    git -C ${Home}/unity-meta pull\n}\nelse\n{\n    git clone git@github.cds.internal.unity3d.com:unity/unity-meta.git ${Home}/unity-meta\n}\nperl \"${Home}/unity-meta/Tools/Format/format.pl\" Assets Packages\n\n"
        },
        {
          "name": "format.sh",
          "type": "blob",
          "size": 0.0654296875,
          "content": "#!/bin/sh\nperl ~/unity-meta/Tools/Format/format.pl Assets Packages\n"
        },
        {
          "name": "git-add-api.ps1",
          "type": "blob",
          "size": 0.642578125,
          "content": "# Copy .api files from Packages/com.unity.inputsystem to Tools/API/{CurrentVersion}.\n\n# Read current version from package.json.\n$CurrentVersion = (Get-Content Packages/com.unity.inputsystem/package.json | ConvertFrom-Json).version\n\n# Create Tools/API/{CurrentVersion} directory.\nif ( -Not ( Test-Path Tools/API/$CurrentVersion ) )\n{\n    mkdir Tools/API/$CurrentVersion\n}\n\n# Grap all .api files from Packages/com.unity.inputsystem and copy them to Tools/API/{CurrentVersion}.\nGet-ChildItem Packages/com.unity.inputsystem -Recurse -Filter *.api | foreach { cp $_.FullName Tools/API/$CurrentVersion }\n\n# Add them to git.\ngit add Tools/API/$CurrentVersion/*.api\n"
        },
        {
          "name": "git-prep.ps1",
          "type": "blob",
          "size": 0.3173828125,
          "content": "# Preps a working copy.\n\n# Put doctools package in place.\nif ( Test-Path Packages/com.unity.package-manager-doctools )\n{\n    rm -Recurse -Force Packages/com.unity.package-manager-doctools\n}\ngit clone git@github.cds.internal.unity3d.com:unity/com.unity.package-manager-doctools.git Packages/com.unity.package-manager-doctools\n"
        },
        {
          "name": "projectlist.txt",
          "type": "blob",
          "size": 0.0146484375,
          "content": "../InputSystem\n"
        },
        {
          "name": "steam_appid.txt",
          "type": "blob",
          "size": 0.0029296875,
          "content": "480"
        }
      ]
    }
  ]
}