{
  "metadata": {
    "timestamp": 1736710902241,
    "page": 494,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gkngkc/UnityStandaloneFileBrowser",
      "stars": 2141,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.369140625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0283203125,
          "content": "/[Ll]ibrary/\n/[Tt]emp/\n/[Oo]bj/\n/[Bb]uild/\n/[Bb]uilds/\n/Assets/AssetStoreTools*\n\n# Autogenerated VS/MD solution and project files\nExportedObj/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n\n\n# Unity3D generated meta files\n*.pidb.meta\n\n# Unity3D Generated File On Crash Reports\nsysinfo.txt\n\n# Builds\n*.apk\n\n# =========================\n# Operating System Files\n# =========================\n\n# OSX\n# =========================\n\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# Windows\n# =========================\n\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\noutput_log.txt\n\n.vscode"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "Images",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2017 Gökhan Gökçe\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Package",
          "type": "tree",
          "content": null
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "Plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.533203125,
          "content": "# Unity Standalone File Browser\n\nA simple wrapper for native file dialogs on Windows/Mac/Linux.\n\n- Works in editor and runtime.\n- Open file/folder, save file dialogs supported.\n- Multiple file selection.\n- File extension filter.\n- Mono/IL2CPP backends supported.\n- Linux support by [Ricardo Rodrigues](https://github.com/RicardoEPRodrigues).\n- Basic WebGL support.\n\n[Download Package](https://github.com/gkngkc/UnityStandaloneFileBrowser/releases/download/1.2/StandaloneFileBrowser.unitypackage)\n\nExample usage:\n\n```csharp\n// Open file\nvar paths = StandaloneFileBrowser.OpenFilePanel(\"Open File\", \"\", \"\", false);\n\n// Open file async\nStandaloneFileBrowser.OpenFilePanelAsync(\"Open File\", \"\", \"\", false, (string[] paths) => {  });\n\n// Open file with filter\nvar extensions = new [] {\n    new ExtensionFilter(\"Image Files\", \"png\", \"jpg\", \"jpeg\" ),\n    new ExtensionFilter(\"Sound Files\", \"mp3\", \"wav\" ),\n    new ExtensionFilter(\"All Files\", \"*\" ),\n};\nvar paths = StandaloneFileBrowser.OpenFilePanel(\"Open File\", \"\", extensions, true);\n\n// Save file\nvar path = StandaloneFileBrowser.SaveFilePanel(\"Save File\", \"\", \"\", \"\");\n\n// Save file async\nStandaloneFileBrowser.SaveFilePanelAsync(\"Save File\", \"\", \"\", \"\", (string path) => {  });\n\n// Save file with filter\nvar extensionList = new [] {\n    new ExtensionFilter(\"Binary\", \"bin\"),\n    new ExtensionFilter(\"Text\", \"txt\"),\n};\nvar path = StandaloneFileBrowser.SaveFilePanel(\"Save File\", \"\", \"MySaveFile\", extensionList);\n```\nSee Sample/BasicSampleScene.unity for more detailed examples.\n\nMac Screenshot\n![Alt text](/Images/sfb_mac.jpg?raw=true \"Mac\")\n\nWindows Screenshot\n![Alt text](/Images/sfb_win.jpg?raw=true \"Win\")\n\nLinux Screenshot\n![Alt text](/Images/sfb_linux.jpg?raw=true \"Win\")\n\nNotes:\n- Windows\n    * Requires .NET 2.0 api compatibility level \n    * Async dialog opening not implemented, ..Async methods simply calls regular sync methods.\n    * Plugin import settings should be like this;\n    \n    ![Alt text](/Images/win_import_1.jpg?raw=true \"Plugin Import Ookii\") ![Alt text](/Images/win_import_2.jpg?raw=true \"Plugin Import System.Forms\")\n    \n- Mac\n    * Sync calls are throws an exception at development build after native panel loses and gains focus. Use async calls to avoid this.\n\nWebGL:\n - Basic upload/download file support.\n - File filter support.\n - Not well tested, probably not much reliable.\n - Since browsers require more work to do file operations, webgl isn't directly implemented to Open/Save calls. You can check CanvasSampleScene.unity and canvas sample scripts for example usages.\n \n Live Demo: https://gkngkc.github.io/\n"
        }
      ]
    }
  ]
}