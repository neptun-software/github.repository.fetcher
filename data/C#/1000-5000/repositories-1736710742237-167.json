{
  "metadata": {
    "timestamp": 1736710742237,
    "page": 167,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Siccity/xNode",
      "stars": 3409,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1337890625,
          "content": "root = true\n\n[*.cs]\nindent_style = space\nindent_size = 4\nend_of_line = crlf\ninsert_final_newline = false\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3408203125,
          "content": "/[Ll]ibrary/\n/[Tt]emp/\n/[Oo]bj/\n/[Bb]uild/\n\n# Autogenerated VS/MD solution and project files\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n\n# Unity3D generated meta files\n*.pidb.meta\n\n# Unity3D Generated File On Crash Reports\nsysinfo.txt\n\n/Examples/\n\n.git.meta\n.gitignore.meta\n.gitattributes.meta\n\n# OS X only:\n.DS_Store"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.677734375,
          "content": "## Contributing to xNode\nðŸ’™Thank you for taking the time to contributeðŸ’™\n\nIf you haven't already, join our [Discord channel](https://discord.gg/qgPrHv4)!\n\n## Pull Requests\nTry to keep your pull requests relevant, neat, and manageable. If you are adding multiple features, split them into separate PRs.\nThese are the main points to follow:\n\n1) Use formatting which is consistent with the rest of xNode base (see below)\n2) Keep _one feature_ per PR (see below)\n3) xNode aims to be compatible with C# 4.x, do not use new language features\n4) Avoid including irellevant whitespace or formatting changes\n5) Comment your code\n6) Spell check your code / comments\n7) Use concrete types, not *var*\n8) Use english language\n\n## New features\nxNode aims to be simple and extendible, not trying to fix all of Unity's shortcomings.\n\nApproved changes might be rejected if bundled with rejected changes, so keep PRs as separate as possible.\n\nIf your feature aims to cover something not related to editing nodes, it generally won't be accepted. If in doubt, ask on the Discord channel.\n\n## Coding conventions\nUsing consistent formatting is key to having a clean git history. Skim through the code and you'll get the hang of it quickly.\n* Methods, Types and properties PascalCase\n* Variables camelCase\n* Public methods XML commented. Params described if not obvious\n* Explicit usage of brackets when doing multiple math operations on the same line\n\n## Formatting\nI use VSCode with the C# FixFormat extension and the following setting overrides:\n```json\n\"csharpfixformat.style.spaces.beforeParenthesis\": false,\n\"csharpfixformat.style.indent.regionIgnored\": true\n```\n* Open braces on same line as condition\n* 4 spaces for indentation.\n"
        },
        {
          "name": "CONTRIBUTING.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: bc1db8b29c76d44648c9c86c2dfade6d\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2017 Thor Brigsted\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "LICENSE.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: 77523c356ccf04f56b53e6527c6b12fd\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.546875,
          "content": "<img align=\"right\" width=\"100\" height=\"100\" src=\"https://user-images.githubusercontent.com/37786733/41541140-71602302-731a-11e8-9434-79b3a57292b6.png\">\n\n[![Discord](https://img.shields.io/discord/361769369404964864.svg)](https://discord.gg/qgPrHv4)\n[![GitHub issues](https://img.shields.io/github/issues/Siccity/xNode.svg)](https://github.com/Siccity/xNode/issues)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/Siccity/xNode/master/LICENSE.md)\n[![GitHub Wiki](https://img.shields.io/badge/wiki-available-brightgreen.svg)](https://github.com/Siccity/xNode/wiki)\n[![openupm](https://img.shields.io/npm/v/com.github.siccity.xnode?label=openupm&registry_uri=https://package.openupm.com)](https://openupm.com/packages/com.github.siccity.xnode/)\n\n[Downloads](https://github.com/Siccity/xNode/releases) / [Asset Store](http://u3d.as/108S) / [Documentation](https://github.com/Siccity/xNode/wiki)\n\nSupport xNode on [Ko-fi](https://ko-fi.com/Z8Z5DYWA) or [Patreon](https://www.patreon.com/thorbrigsted)\n\nFor full Odin support, consider using [KAJed82's fork](https://github.com/KAJed82/xNode)\n\n### xNode\nThinking of developing a node-based plugin? Then this is for you. You can download it as an archive and unpack to a new unity project, or connect it as git submodule.\n\nxNode is super userfriendly, intuitive and will help you reap the benefits of node graphs in no time.\nWith a minimal footprint, it is ideal as a base for custom state machines, dialogue systems, decision makers etc.\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/6402525/53689100-3821e680-3d4e-11e9-8440-e68bd802bfd9.png\">\n</p>\n\n### Key features\n* Lightweight in runtime\n* Very little boilerplate code\n* Strong separation of editor and runtime code\n* No runtime reflection (unless you need to edit/build node graphs at runtime. In this case, all reflection is cached.)\n* Does not rely on any 3rd party plugins\n* Custom node inspector code is very similar to regular custom inspector code\n* Supported from Unity 5.3 and up\n\n### Wiki\n* [Getting started](https://github.com/Siccity/xNode/wiki/Getting%20Started) - create your very first node node and graph\n* [Examples branch](https://github.com/Siccity/xNode/tree/examples) - look at other small projects\n\n### Installation\n<details><summary>Instructions</summary>\n\n### Installing with Unity Package Manager\n***Via Git URL***\n*(Requires Unity version 2018.3.0b7  or above)*\n\nTo install this project as a [Git dependency](https://docs.unity3d.com/Manual/upm-git.html) using the Unity Package Manager,\nadd the following line to your project's `manifest.json`:\n\n```\n\"com.github.siccity.xnode\": \"https://github.com/siccity/xNode.git\"\n```\n\nYou will need to have Git installed and available in your system's PATH.\n\nIf you are using [Assembly Definitions](https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html) in your project, you will need to add `XNode` and/or `XNodeEditor` as Assembly Definition References.\n\n***Via OpenUPM***\n\nThe package is available on the [openupm registry](https://openupm.com). It's recommended to install it via [openupm-cli](https://github.com/openupm/openupm-cli).\n\n```\nopenupm add com.github.siccity.xnode\n```\n\n### Installing with git\n***Via Git Submodule***\n\nTo add xNode as a [submodule](https://git-scm.com/book/en/v2/Git-Tools-Submodules) in your existing git project,\nrun the following git command from your project root:\n\n```\ngit submodule add git@github.com:Siccity/xNode.git Assets/Submodules/xNode\n```\n\n### Installing 'the old way'\nIf no source control or package manager is available to you, you can simply copy/paste the source files into your assets folder.\n\n</details>\n\n### Node example:\n```csharp\n// public classes deriving from Node are registered as nodes for use within a graph\npublic class MathNode : Node {\n    // Adding [Input] or [Output] is all you need to do to register a field as a valid port on your node \n    [Input] public float a;\n    [Input] public float b;\n    // The value of an output node field is not used for anything, but could be used for caching output results\n    [Output] public float result;\n    [Output] public float sum;\n\n    // The value of 'mathType' will be displayed on the node in an editable format, similar to the inspector\n    public MathType mathType = MathType.Add;\n    public enum MathType { Add, Subtract, Multiply, Divide}\n    \n    // GetValue should be overridden to return a value for any specified output port\n    public override object GetValue(NodePort port) {\n\n        // Get new a and b values from input connections. Fallback to field values if input is not connected\n        float a = GetInputValue<float>(\"a\", this.a);\n        float b = GetInputValue<float>(\"b\", this.b);\n\n        // After you've gotten your input values, you can perform your calculations and return a value\n        if (port.fieldName == \"result\")\n            switch(mathType) {\n                case MathType.Add: default: return a + b;\n                case MathType.Subtract: return a - b;\n                case MathType.Multiply: return a * b;\n                case MathType.Divide: return a / b;\n            }\n        else if (port.fieldName == \"sum\") return a + b;\n        else return 0f;\n    }\n}\n```\n\n### Plugins\nPlugins are repositories that add functionality to xNode\n* [xNodeGroups](https://github.com/Siccity/xNodeGroups): adds resizable groups\n\n### Community\nJoin the [Discord](https://discord.gg/qgPrHv4 \"Join Discord server\") server to leave feedback or get support.\nFeel free to also leave suggestions/requests in the [issues](https://github.com/Siccity/xNode/issues \"Go to Issues\") page.\n"
        },
        {
          "name": "README.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: 243efae3a6b7941ad8f8e54dcf38ce8c\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Scripts.meta",
          "type": "blob",
          "size": 0.1875,
          "content": "fileFormatVersion: 2\nguid: 657b15cb3ec32a24ca80faebf094d0f4\nfolderAsset: yes\ntimeCreated: 1505418321\nlicenseType: Free\nDefaultImporter:\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.22265625,
          "content": "{\n  \"name\": \"com.github.siccity.xnode\",\n  \"description\": \"xNode provides a set of APIs and an editor interface for creating and editing custom node graphs.\",\n  \"version\": \"1.8.0\",\n  \"unity\": \"2018.1\",\n  \"displayName\": \"xNode\"\n}\n"
        },
        {
          "name": "package.json.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: e9869d68f06b74538a01e9b8e406159e\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        }
      ]
    }
  ]
}