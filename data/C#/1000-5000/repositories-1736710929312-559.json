{
  "metadata": {
    "timestamp": 1736710929312,
    "page": 559,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vovgou/loxodon-framework",
      "stars": 1964,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1005859375,
          "content": "Library\nobj\nTemp\n.vs\n*.csproj\n*.sln\nLogs\n*.log\npackage-lock.json\npackage-lock.json.meta\n.lpproj\n*.user\n"
        },
        {
          "name": "Installation.md",
          "type": "blob",
          "size": 2.4443359375,
          "content": "## Installation\n\n### Install via OpenUPM \n\n[OpenUPM](https://openupm.com/) can automatically manage dependencies, it is recommended to use it to install the framework.\n\nRequires [nodejs](https://nodejs.org/en/download/)'s npm and openupm-cli, if not installed please install them first.\n\n    # Install openupm-cli,please ignore if it is already installed.\n    npm install -g openupm-cli \n    \n    #Go to the root directory of your project\n    cd F:/workspace/New Unity Project\n    \n    #Install loxodon-framework\n    openupm add com.vovgou.loxodon-framework\n    \n### Install via Packages/manifest.json (recommended)\n\nModify the Packages/manifest.json file in your project, add the third-party repository \"package.openupm.com\"'s configuration and add \"com.vovgou.loxodon-framework\" in the \"dependencies\" node.\n\nThe framework and all plugins have also been published to the npm repository. Users can install them using the npm repository at [https://registry.npmjs.org/](https://registry.npmjs.org/).You only need to change the URL in the configuration below from 'https://package.openupm.com' to 'https://registry.npmjs.org/'.\n\n**Installing the framework in this way does not require nodejs and openm-cli.**\n\n    {\n      \"dependencies\": {\n        ...\n        \"com.unity.modules.xr\": \"1.0.0\",\n        \"com.vovgou.loxodon-framework\": \"2.6.3\",\n      },\n      \"scopedRegistries\": [\n        {\n          \"name\": \"package.openupm.com\",\n          \"url\": \"https://package.openupm.com\",\n          \"scopes\": [\n            \"com.vovgou\"\n          ]\n        }\n      ]\n    }\n\n### Install via git URL\n\nAfter Unity 2019.3.4f1 that support path query parameter of git package. You can add https://github.com/vovgou/loxodon-framework.git?path=Loxodon.Framework/Assets/LoxodonFramework to Package Manager\n\n![](docs/images/install_via_git.png)\n\n### Install via *.unitypackage file\n\nDownload [Loxodon.Framework2.x.x.unitypackage](https://github.com/vovgou/loxodon-framework/releases) and import it into your project.\n\n- [AssetStore](https://assetstore.unity.com/packages/tools/gui/loxodon-framework-77446)\n- [Releases](https://github.com/vovgou/loxodon-framework/releases)\n\n### Import the samples\n\n - Unity 2019 and later versions can import examples through Package Manager.\n\n   ![](docs/images/install_examples.png)\n   \n - If the Editor is Unity 2018 version, please find Examples.unitypackage and Tutorials.unitypackage in the \"Packages/Loxodon Framework/Package Resources/\" folder, double-click to import into the project."
        },
        {
          "name": "Installation_CN.md",
          "type": "blob",
          "size": 4.146484375,
          "content": "## 安装\n\n自Loxodon.Framework 2.0版本开始，保留了原有的 .unitypackage包发布方式，同时添加了UPM发布方式，此版本要求Unity 2018.4.2及以上版本，框架的目录结构和API都进行了一些调整，同时引入了async/await、Task等新特性，升级前请先查看下文的升级注意事项。\n\n**安装注意：在中国区下载的Unity版本屏蔽了第三方仓库，会导致UPM包安装失败，咨询了Unity中国相关人员说是马上会放开，如果UPM方式安装失败请使用.unitypackage文件安装或者使用非中国区的Unity版本**\n\n### 1.x.x版本升级到2.0注意事项\n\n**从1.x.x版本升级到2.0版本前，请先删除老版本的所有文件，按下面的安装步骤安装新版本。2.0版本的教程和示例代码默认不会自动导入，如需要请手动导入到项目中。**\n\n** Loxodon.Framework.XLua和Loxodon.Framework.Bundle因为依赖问题仍然使用传统方式发布。 **\n\n**不兼容的改变：**\n- **修改了IUIViewLocator接口以及实现，如果继承了此接口的自定义实现需要调整。**\n- **修改了本地化模块的IDataProvider接口及实现，如果没有自定义类，不会有影响。**\n- **IAsyncTask和IProgressTask有用到多线程,在WebGL平台不支持，2.0版本后建议不再使用，框架中用到了它们的地方都改为IAsyncResult和IProgressResult。**\n- **新的API使用了async/await和Task，不再支持.net 2.0**\n- **修改了Window、WindowManager等几个类的函数，改IAsyncTask为IAsyncResult**\n\n### 使用 OpenUPM 安装\n\n[OpenUPM](https://openupm.com/) 是一个开源的UPM包仓库，它支持发布第三方的UPM包，它能够自动管理包的依赖关系，可以使用它安装本框架.\n\n通过openupm命令安装包,要求[nodejs](https://nodejs.org/en/download/) and openupm-cli客户端的支持，如果没有安装请先安装nodejs和open-cli。\n\n    # 使用npm命令安装openupm-cli，如果已经安装请忽略.\n    npm install -g openupm-cli \n    \n    #切换当前目录到项目的根目录\n    cd F:/workspace/New Unity Project\n    \n    #安装 loxodon-framework\n    openupm add com.vovgou.loxodon-framework\n    \n### 修改Packages/manifest.json文件安装(推荐)\n\n通过修改manifest.json文件安装，不需要安装nodejs和openupm-cli客户端。在Unity项目根目录下找到Packages/manifest.json文件，在文件的scopedRegistries（没有可以自己添加）节点下添加第三方仓库package.openupm.com的配置，同时在dependencies节点下添加com.vovgou.loxodon-framework的配置，保存后切换到Unity窗口即可完成安装。\n\n框架及所有插件同时也发布到npm的仓库中，也可以使用npm的仓库安装下载插件：[https://registry.npmjs.org/](https://registry.npmjs.org/)\n\n    {\n      \"dependencies\": {\n        ...\n        \"com.unity.modules.xr\": \"1.0.0\",\n        \"com.vovgou.loxodon-framework\": \"2.6.3\",\n      },\n      \"scopedRegistries\": [\n        {\n          \"name\": \"package.openupm.com\",\n          \"url\": \"https://package.openupm.com\",\n          \"scopes\": [\n            \"com.vovgou\"\n          ]\n        }\n      ]\n    }\n\n\n### 通过git URL安装\n\nUnity 2019.3.4f1及以上版本支持使用git URL安装. 如下图添加 https://github.com/vovgou/loxodon-framework.git?path=Loxodon.Framework/Assets/LoxodonFramework 地址到UPM管理器，耐性等待一段时间，下载完成后即安装成功。\n\n![](docs/images/install_via_git.png)\n\n### 通过 *.unitypackage 文件安装\n\n从以下地址下载 [Loxodon.Framework2.x.x.unitypackage](https://github.com/vovgou/loxodon-framework/releases) 后,导入到你的项目中即完成安装.\n\n- [AssetStore](https://assetstore.unity.com/packages/tools/gui/loxodon-framework-77446)\n- [Releases](https://github.com/vovgou/loxodon-framework/releases)\n\n### 导入示例\n\n - Unity 2019 及以上版本可以通过Package Manager导入示例\n\n   打开包管理器，找到Import into project 按钮点击，导入示例到项目中。\n\n   ![](docs/images/install_examples.png)\n   \n - Unity 2018 版本导入示例\n\n   在Packages/Loxodon Framework/PackageResources/ 目录中找到Examples.unitypackage和Tutorials.unitypackage，双击导入到项目。"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2018 Clark Yang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Loxodon.Framework.Addressable",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.Connection",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.Data",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.FairyGUI",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.Fody",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.ILRuntime",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.LocalizationsForCsv",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.Log4Net",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.NLog",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.OSA",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.Obfuscation",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.TextFormatting",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.TextMeshPro",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.TextUGUI",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.UIToolkit",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework.XLua",
          "type": "tree",
          "content": null
        },
        {
          "name": "Loxodon.Framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.0478515625,
          "content": "![](docs/images/icon.png)\n\n# Loxodon Framework(Unity-MVVM)\n\n[![license](https://img.shields.io/github/license/vovgou/loxodon-framework?color=blue)](https://github.com/vovgou/loxodon-framework/blob/master/LICENSE)\n[![release](https://img.shields.io/github/v/tag/vovgou/loxodon-framework?label=release)](https://github.com/vovgou/loxodon-framework/releases)\n[![openupm](https://img.shields.io/npm/v/com.vovgou.loxodon-framework?label=openupm&registry_uri=https://package.openupm.com)](https://openupm.com/packages/com.vovgou.loxodon-framework/)\n[![npm](https://img.shields.io/npm/v/com.vovgou.loxodon-framework)](https://www.npmjs.com/package/com.vovgou.loxodon-framework)\n\n[(中文版)](README_CN.md)\n\n**MVVM and Databinding for Unity3d(C# & XLua & ILRuntime)**\n\n*Developed by Clark*\n\nRequires Unity 2018.4 or higher.\n\nLoxodonFramework is a lightweight MVVM (Model-View-ViewModel) framework specifically crafted for Unity3D. It includes data binding and various useful components. The framework's performance is meticulously optimized, avoiding value type boxing and unboxing, minimizing garbage collection overhead. It utilizes dynamic delegates/static code weaving techniques to ensure comparable performance between data binding and direct invocation, zero garbage collection during UI view updates, and more. Additionally, it has been validated in projects, demonstrating superior performance, stability, and reliability with a clear, extensible architecture. We hope it can contribute to making your game development faster and more effortless.\n\nFor tutorials,examples and support,please see the project.You can also discuss the project in the Unity Forums.\n\nThe plugin is compatible with MacOSX,Windows,Linux,UWP,WebGL,IOS and Android,and provides all the source code of the project.\n\nIf you like this framework or think it is useful, please write a review on [AssetStore](https://assetstore.unity.com/packages/tools/gui/loxodon-framework-2-0-178583#reviews) or give me a STAR or FORK it on Github, thank you!\n\n**Tested in Unity 3D on the following platforms:**  \nPC/Mac/Linux  \nIOS  \nAndroid  \nUWP(window10)  \nWebGL  \n\n## Installation\n\nFor detailed installation steps, please refer to the **[installation documentation](Installation.md)**.\n\n## English manual\n\n- [HTML](https://github.com/vovgou/loxodon-framework/blob/master/docs/LoxodonFramework_en.md)\n- [PDF](https://github.com/vovgou/loxodon-framework/blob/master/docs/LoxodonFramework_en.pdf)\n\n## Key Features:\n- MVVM Framework;\n- Multiple platforms;\n- Higher Extensibility;\n- async&await (C#&Lua)\n- try&catch&finally for lua\n- XLua support(You can make your game in lua.);\n- Asynchronous result and asynchronous task are supported;\n- Scheduled Executor and Multi-threading;<br>\n- Messaging system support;\n- Preferences can be encrypted;\n- Localization support;\n- Code weaving\n- Databinding support:\n    - Avoiding boxing and unboxing of value types;\n    - Optimizing performance through dynamic delegates/static code weaving techniques, avoiding the use of reflection;\n    - Minimizing garbage collection, avoiding memory allocations during string concatenation, and numeric-to-string conversions;\n    - Data binding performance is comparable to direct invocation;\n    - Zero garbage collection during UI view updates;\n    - Field binding;\n    - Property binding;\n    - Dictionary,list and array binding;\n    - Event binding;\n    - Unity3d's EventBase binding;\n    - Static property and field binding;\n    - Method binding;\n    - Command binding;\n    - ObservableProperty,ObservableDictionary and ObservableList binding;\n    - Expression binding;\n\n## Notes  \n- .Net2.0 and .Net2.0 Subset,please use version 1.9.x.\n- LoxodonFramework 2.0 supports .Net4.x and .Net Standard2.0  \n- LoxodonFramework 2.0 supports Mono and IL2CPP \n\n## Plugins\n- [Loxodon Framework OSA](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.OSA)\n\n\tThis plugin is designed to optimize [Optimized ScrollView Adapter](https://assetstore.unity.com/packages/tools/gui/optimized-scrollview-adapter-68436), specifically adding data binding capabilities to ListView and GridView.\n\n    **Note: This plugin depends on [Optimized ScrollView Adapter](https://assetstore.unity.com/packages/tools/gui/optimized-scrollview-adapter-68436). Please ensure you have installed Optimized ScrollView Adapter before using this plugin.**\n\n- [Loxodon Framework TextFormatting](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.TextFormatting) \n\n    This is a text formatting plugin modified based on the official C# library. By extending the AppendFormat function of StringBuilder, it aims to avoid garbage collection (GC) when concatenating strings or converting numbers to strings. This optimization is particularly beneficial in scenarios with high-performance requirements.\n\n    Furthermore, the plugin extends Unity's Unity GUI (UGUI) by introducing two new text controls: TemplateText and FormattableText. These controls support the data binding features of MVVM, allowing the binding of ViewModel or value-type objects to the controls. This approach eliminates the need for boxing and unboxing of value-type objects, thus maximizing the optimization of garbage collection (GC).\n\n    It's worth noting that using the controls TemplateTextMeshPro or FormattableTextMeshProUGUI from Loxodon.Framework.TextMeshPro can further reduce garbage collection (GC), achieving a completely GC-free update of the game view.\n\n- [Loxodon Framework TextMeshPro](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.TextMeshPro) \n\n\tThis plugin primarily serves to enhance AlertDialog and Toast views by providing TextMeshPro support, replacing UnityEngine.UI.Text with TextMeshProUGUI for optimized UI views.\n\n\tAdditionally, the plugin depends on the Loxodon.Framework.TextFormatting plugin, further optimizing garbage collection. By utilizing FormattableTextMeshProUGUI and TemplateTextMeshProUGUI controls, updating UI views results in absolutely no garbage collection (GC), achieving a fully GC-free view update.\n\n- [Loxodon Framework Data](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Data)\n\n\tThis plugin supports exporting data from Excel files to Json files, Lua files, or LiteDB databases. Additionally, it enables converting data to C# objects using Json.Net. It is recommended to use LiteDB for storing configuration data, as it is a lightweight NoSQL embedded database that supports ORM functionality, BSON format, and data indexing, making it highly convenient to use.\n\n    - [Loxodon.Framework.Data.LiteDB](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Data/Packages/com.vovgou.loxodon-framework-data-litedb)\n    - [Loxodon.Framework.Data.Newtonsoft](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Data/Packages/com.vovgou.loxodon-framework-data-newtonsoft)\n\n\n- [Loxodon Framework Fody](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Fody)\n\n\tThis is a plugin for static code weaving, comprising multiple sub-plugins. It supports static weaving for objects, including the addition of the ToString function, integration of the PropertyChanged event, incorporation of the BindingProxy class, and more. This not only optimizes performance but also enhances development efficiency.\n\n    - [Loxodon.Framework.Fody.PropertyChanged](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Fody/Packages/com.vovgou.loxodon-framework-fody-propertychanged)\n    - [Loxodon.Framework.Fody.ToString](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Fody/Packages/com.vovgou.loxodon-framework-fody-tostring)\n    - [Loxodon.Framework.Fody.BindingProxy](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Fody/Packages/com.vovgou.loxodon-framework-fody-bindingproxy)\n    \n\n- [Loxodon Framework UIToolkit](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.UIToolkit)\n\n\tThis plugin integrates UIToolkit into the Loxodon.Framework, introducing the UIToolkitWindow class. It supports data binding and allows for a mix of UIToolkit and UGUI.\n\n- [Loxodon Framework ILRuntime](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.ILRuntime)\n\n- [Loxodon Framework Localization For CSV](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.LocalizationsForCsv)\n\n    It supports localization files in csv format, requires Unity2018.4 or higher.\n\n- [Loxodon Framework XLua](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.XLua)\n\n    It supports making games with lua scripts.\n\n- [Loxodon Framework Bundle](https://assetstore.unity.com/packages/slug/87419)\n\n    Loxodon Framework Bundle is an AssetBundle manager.It provides a functionality that can automatically manage/load an AssetBundle and its dependencies from local or remote location.Asset Dependency Management including BundleManifest that keep track of every AssetBundle and all of their dependencies. An AssetBundle Simulation Mode which allows for iterative testing of AssetBundles in a the Unity editor without ever building an AssetBundle.\n\n    The asset redundancy analyzer can help you find the redundant assets included in the AssetsBundles.Create a fingerprint for the asset by collecting the characteristic data of the asset. Find out the redundant assets in all AssetBundles by fingerprint comparison.it only supports the AssetBundle of Unity 5.6 or higher.\n\n    ![](docs/images/bundle.png)\n- [Loxodon Framework NLog](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.NLog)\n\n    This plug-in integrates NLog into Loxodon.Framework. It is recommended to use this plug-in instead of the Log4Net plug-in. It allocates less heap memory during the log printing process.\n- [Loxodon Framework Log4Net](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Log4Net)\n\n    This is a log plugin.It helps you to use Log4Net in the Unity3d.\n\n    ![](docs/images/log4net.png)\n\n- [Loxodon Framework Obfuscation](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Obfuscation)\n\n\tThe plugin is a data type memory obfuscation tool that supports ObfuscatedByte, ObfuscatedShort, ObfuscatedInt, ObfuscatedLong, ObfuscatedFloat, and ObfuscatedDouble types. Its purpose is to prevent memory modification of game values by memory editors. The plugin supports all arithmetic operators for numerical types and can automatically convert between them and their standard counterparts (byte, short, int, long, float, double).\n\n\tDuring the obfuscation of Float and Double types, the plugin converts them to int and long types for bitwise AND and OR operations to ensure that precision is not lost. Unsafe code is used for type conversion to balance conversion performance. The plugin aims to provide a comprehensive solution for protecting game values against memory modification, allowing for seamless integration with different numerical types and maintaining performance through careful type conversion.\n\n    **Example:**\n\n\t\tObfuscatedInt  length = 200;\n\t\tObfuscatedFloat scale = 20.5f;\n\t\tint offset = 30;\n\t\t\n\t\tfloat value = (length * scale) + offset;\n\n- [Loxodon Framework Addressable](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Addressable)\n\n- [Loxodon Framework Connection](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Connection)\n\n    This is a network connection component, implemented using TcpClient, supports IPV6 and IPV4, automatically recognizes the current network when connecting with a domain name, and preferentially connects to the IPV4 network.\n\n- [DotNetty for Unity](https://github.com/vovgou/DotNettyForUnity)\n\n    DotNetty is a port of [Netty](https://github.com/netty/netty), asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients.\n\n    This version is modified based on [DotNetty](https://github.com/Azure/DotNetty)'s 0.7.5 version and is a customized version for the Unity development platform. It includes the removal of certain dependency libraries, bug fixes, performance optimizations, and enhancements to cater to game development on the Unity platform. Additionally, it has undergone testing under IL2CPP for compatibility and reliability.\n\n- [LiteDB](https://github.com/mbdavid/LiteDB)\n\n    LiteDB is a small, fast and lightweight NoSQL embedded database.\n\n    ![](https://camo.githubusercontent.com/d85fc448ef9266962a8e67f17f6d16080afdce6b/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f445f313432727a57774145434a44643f666f726d61743d6a7067266e616d653d39303078393030)\n\n## Quick Start\n\nCreate a view and view model of the progress bar.\n\n![](docs/images/progress.png)\n\n    public class ProgressBarViewModel : ViewModelBase\n    {\n        private string tip;\n        private bool enabled;\n        private float value;\n        public ProgressBarViewModel()\n        {\n        }\n\n        public string Tip\n        {\n            get { return this.tip; }\n            set { this.Set<string>(ref this.tip, value, nameof(Tip)); }\n        }\n\n        public bool Enabled\n        {\n            get { return this.enabled; }\n            set { this.Set<bool>(ref this.enabled, value, nameof(Enabled)); }\n        }\n\n        public float Value\n        {\n            get { return this.value; }\n            set { this.Set<float>(ref this.value, value, nameof(Value)); }\n        }\n    }\n\n    public class ProgressBarView : UIView\n    {\n        public GameObject progressBar;\n        public Text progressTip;\n        public Text progressText;\n        public Slider progressSlider;\n\n        protected override void Awake()\n        {\n            var bindingSet = this.CreateBindingSet<ProgressBar, ProgressBarViewModel>();\n\n            bindingSet.Bind(this.progressBar).For(v => v.activeSelf).To(vm => vm.Enabled).OneWay();\n            bindingSet.Bind(this.progressTip).For(v => v.text).To(vm => vm.Tip).OneWay();\n            bindingSet.Bind(this.progressText).For(v => v.text)\n                .ToExpression(vm => string.Format(\"{0:0.00}%\", vm.Value * 100)).OneWay();\n            bindingSet.Bind(this.progressSlider).For(v => v.value).To(vm => vm.Value).OneWay();\n\n            bindingSet.Build();\n        }\n    }\n\n\n    IEnumerator Unzip(ProgressBarViewModel progressBar)\n    {\n        progressBar.Tip = \"Unziping\";\n        progressBar.Enabled = true;//Display the progress bar\n\n        for(int i=0;i<30;i++)\n        {            \n            //TODO:Add unzip code here.\n\n            progressBar.Value = (i/(float)30);            \n            yield return null;\n        }\n\n        progressBar.Enabled = false;//Hide the progress bar\n        progressBar.Tip = \"\";        \n    }\n\n\n## Tutorials and Examples\n\n ![](docs/images/Launcher.gif)\n\n ![](docs/images/Databinding.gif)\n\n ![](docs/images/ListView.gif)\n\n ![](docs/images/Localization.gif)\n\n![](docs/images/Interaction.gif)\n\n## Introduction\n- Window View\n\n  ![](docs/images/Window.png)\n- Localization\n\n  ![](docs/images/Localization.png)\n- Databinding\n\n  ![](docs/images/Databinding.png)\n- Variable Example\n\n  ![](docs/images/Variable.png)\n- ListView Binding\n\n  ![](docs/images/ListView.png)\n\n## Contact Us\nEmail: [yangpc.china@gmail.com](mailto:yangpc.china@gmail.com)   \nWebsite: [https://vovgou.github.io/loxodon-framework/](https://vovgou.github.io/loxodon-framework/)  \nQQ Group: 622321589 15034148\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 19.373046875,
          "content": "![](docs/images/icon.png)\n\n# Loxodon Framework(Unity-MVVM)\n\n[![license](https://img.shields.io/github/license/vovgou/loxodon-framework?color=blue)](https://github.com/vovgou/loxodon-framework/blob/master/LICENSE)\n[![release](https://img.shields.io/github/v/tag/vovgou/loxodon-framework?label=release)](https://github.com/vovgou/loxodon-framework/releases)\n[![openupm](https://img.shields.io/npm/v/com.vovgou.loxodon-framework?label=openupm&registry_uri=https://package.openupm.com)](https://openupm.com/packages/com.vovgou.loxodon-framework/)\n[![npm](https://img.shields.io/npm/v/com.vovgou.loxodon-framework)](https://www.npmjs.com/package/com.vovgou.loxodon-framework)\n\n[(English)](README.md)\n\n**MVVM and Databinding for Unity3d（C# & XLua & ILRuntime）**\n\n*开发者 Clark*\n\n要求Unity 2018.4 或者更高版本\n\nLoxodonFramework是一个轻量级的MVVM(Model-View-ViewModel)框架，它是专门为Unity3D游戏开发设计的，参考了WPF和Android的MVVM设计，它提供了视图和视图模型的数据绑定、本地化、一个简单的对象容器、配置文件组件、线程工具组件、应用上下文和玩家上下文，异步线程和协程的任务组件等基本组件，同时还提供了一个UI视图的框架。所有代码都基于面向对象面向接口的思路设计，几乎所有功能都可以自定义。而且在数据绑定部分进行了性能优化，避免值类型装箱拆箱，最小化垃圾回收的开销，使用动态委托/静态织入技术确保数据绑定和直接调用有相当的性能，0GC更新UI视图等等，它支持绑定到UGUI、UIToolkit和FairyGUI控件，同时也很容易扩展对其他UI控件的支持。此外，它已经在项目中得到验证（UWA评分SSS级，可在战斗中完全关闭GC，在6、7前手机都保证60FPS），性能优越，稳定可靠，架构清晰，可灵活扩展。 我们希望它能够帮助您更快、更轻松地开发游戏。\n\n本框架使用C#语言开发，同时也支持使用XLua或者ILRuntime来开发，如果项目需要热更新，那么只要安装了XLua或者ILRuntime插件，则可以完全使用Lua或者ILRuntime来开发游戏。对于新立项的项目，建议使用HybridCLR来做热更新。\n\n这个插件兼容 MacOSX,Windows,Linux,UWP,IOS and Android,WebGL等等，并且完全开源。\n\n如果你喜欢这个框架或者觉得它对你来说是有用的，请帮我在[AssetStore](https://assetstore.unity.com/packages/tools/gui/loxodon-framework-2-0-178583#reviews)上写一个评论或者在Github上给一颗星，更多人的参与才是开源作者工作的动力，谢谢！\n\n**已测试的平台：**  \nPC/Mac/Linux  \nIOS  \nAndroid  \nUWP(window10)  \nWebGL  \n\n## 安装\n\n自Loxodon.Framework 2.0版本开始，保留了原有的 .unitypackage包发布方式，同时添加了UPM发布方式，此版本要求Unity 2018.4.2及以上版本，框架的目录结构和API都进行了一些调整，同时引入了async/await、Task等新特性，升级前请先查看下文的升级注意事项。\n\n**安装注意：在中国区下载的Unity版本屏蔽了第三方仓库，会导致UPM包安装失败，咨询了Unity中国相关人员说是马上会放开，如果UPM方式安装失败请使用.unitypackage文件安装或者使用非中国区的Unity版本**\n\n### 1.x.x版本升级到2.0注意事项\n\n**从1.x.x版本升级到2.0版本前，请先删除老版本的所有文件，按下面的安装步骤安装新版本。2.0版本的教程和示例代码默认不会自动导入，如需要请手动导入到项目中。**\n\n**Loxodon.Framework.XLua和Loxodon.Framework.Bundle因为依赖问题仍然使用传统方式发布。**\n\n**不兼容的改变：**\n- **修改了IUIViewLocator接口以及实现，如果继承了此接口的自定义实现需要调整。**\n- **修改了本地化模块的IDataProvider接口及实现，如果没有自定义类，不会有影响。**\n- **IAsyncTask和IProgressTask有用到多线程,在WebGL平台不支持，2.0版本后建议不再使用，框架中用到了它们的地方都改为IAsyncResult和IProgressResult。**\n- **新的API使用了async/await和Task，不再支持.net 2.0**\n- **修改了Window、WindowManager等几个类的函数，改IAsyncTask为IAsyncResult**\n\n详细安装过程请参阅[安装文档](Installation_CN.md)\n\n\n## 中文文档\n\n- [HTML](https://github.com/vovgou/loxodon-framework/blob/master/docs/LoxodonFramework.md)\n- [PDF](https://github.com/vovgou/loxodon-framework/blob/master/docs/LoxodonFramework.pdf)\n- [常见问题解答 FAQ](https://github.com/vovgou/loxodon-framework/blob/master/docs/faq.md)\n\n## 关键功能：\n- MVVM框架，支持UGUI、UIToolkit和FairyGUI;\n- 支持XLua，可以完全使用Lua脚本开发（可选）;\n- 支持async&await (C#和Lua都支持);\n- Lua支持了try&catch&finally;\n- 支持ILRuntime;\n- 多平台支持;\n- 高扩展性，面向接口开发;\n- 运行时委托替代反射（包括IOS平台），尽可能的避免值类型的装箱拆箱;\n- 支持线程和协程的异步结果和异步任务，采用Future/Promise设计模式;\n- 多线程组件和定时执行器;\n- 支持消息系统，订阅和发布事件;\n- 支持对象池;\n- 支持Properties的配置文件;\n- 可加密的配置文件，支持对象存取，可以自定义对象转换器，支持更多的对象;\n- 本地化支持，支持xml、csv、asset等多种配置方式，支持图片等多媒体资源本地化;\n- 数据绑定支持:\n    - 避免了值类型的装箱和拆箱;\n    - 使用动态委托/静态织入技术优化性能，避免反射(绑定与直接调用性能相当);\n    - 最小化GC分配，避免字符串拼接，避免数字转字符串产生GC;\n    - 0GC更新UI视图;\n    - Field绑定，只支持OneTime的模式，因无法支持改变通知;\n    - 属性绑定，支持TwoWay双向绑定，值修改自动通知;\n    - 普通字典、列表绑定，不支持改变通知;\n    - 支持C#事件绑定;\n    - 支持Unity3D的EventBase事件绑定;\n    - 支持静态类的属性和Field的绑定;\n    - 支持方法绑定;\n    - 支持命令绑定，通过命令绑定可以方便控制按钮的有效无效状态;\n    - 支持可观察属性、字典、列表的绑定，支持改变通知，视图模型修改自动更改UI显示;\n    - 支持表达式的绑定;\n    - 支持类型转换器，可以将图片名称转换为图集中的Sprite\n\n## 注意：  \n- .Net2.0 和 .Net2.0 Subset 请使用 1.9.x 版本，2.0版本不在支持\n- LoxodonFramework 2.0 支持 .Net4.x 和 .Net Standard2.0  \n- LoxodonFramework 2.0 支持 Mono 和 IL2CPP\n\n## 插件与集成（可选）\n- [Loxodon Framework OSA](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.OSA)\n\n    这个插件是对Unity的列表插件[Optimized ScrollView Adapter](https://assetstore.unity.com/packages/tools/gui/optimized-scrollview-adapter-68436)进行扩展，为ListView和GridView增加了数据绑定功能。\n\n    **注意：本插件依赖[Optimized ScrollView Adapter](https://assetstore.unity.com/packages/tools/gui/optimized-scrollview-adapter-68436)，请在使用前先安装Optimized ScrollView Adapter。**\n\n- [Loxodon Framework TextFormatting](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.TextFormatting)\n\n    这是一个基于C#官方库修改的文本格式化插件，它通过扩展StringBuilder的AppendFormat函数，旨在避免在字符串拼接或数字转为字符串时产生垃圾回收（GC）。这样可以提高性能，特别是在对性能要求较高的场景下。\n\n    此外，插件还对Unity的UGUI进行了扩展，引入了两个新的文本控件：TemplateText和FormattableText。这两个控件支持MVVM的数据绑定特性，可以将ViewModel或值类型的对象与控件进行绑定，同时避免了值类型对象的装箱和拆箱，以最大程度地优化垃圾回收(GC)。\n\n    值得注意的是，如果使用Loxodon.Framework.TextMeshPro中的TemplateTextMeshPro或者FormattableTextMeshProUGUI控件，可以进一步减少垃圾回收（GC），完全0GC的更新游戏视图。\n\n- [Loxodon Framework TextMeshPro](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.TextMeshPro)\n\n\t这个插件主要作用是为AlertDialog和Toast视图提供TextMeshPro的支持，使用TextMeshProUGUI代替UnityEngine.UI.Text，来优化UI视图。\n\n\t此外此插件依赖Loxodon.Framework.TextFormatting插件，进一步优化了垃圾收集，使用FormattableTextMeshProUGUI和TemplateTextMeshProUGUI控件更新UI视图完全不会产生垃圾回收(GC)，完全做到0GC更新视图。\n\n    **注意：本插件依赖TextMeshPro**\n\n\n- [Loxodon Framework Data](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Data)\n\n\t此插件支持从Excel文件中导出数据到Json文件、Lua文件或者LiteDB数据库，以及通过Json.Net将数据转为C#对象。推荐使用LiteDB存储配置数据，这是一个轻量级的NoSQL嵌入式数据库，它本身就支持ORM功能、支持BSON格式、支持数据索引功能，使用起来非常方便。\n\n    - [Loxodon.Framework.Data.LiteDB](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Data/Packages/com.vovgou.loxodon-framework-data-litedb)\n    - [Loxodon.Framework.Data.Newtonsoft](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Data/Packages/com.vovgou.loxodon-framework-data-newtonsoft)\n\n- [Loxodon Framework Fody](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Fody)\n\n    这是一个静态织入代码的插件，它由多个子插件组成，支持为对象静态织入ToString函数，织入PropertyChanged事件，织入BindingProxy类等，在优化性能的同时也提高开发效率。\n\n    - [Loxodon.Framework.Fody.PropertyChanged](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Fody/Packages/com.vovgou.loxodon-framework-fody-propertychanged)\n    - [Loxodon.Framework.Fody.ToString](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Fody/Packages/com.vovgou.loxodon-framework-fody-tostring)\n    - [Loxodon.Framework.Fody.BindingProxy](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Fody/Packages/com.vovgou.loxodon-framework-fody-bindingproxy)\n\n\n- [Loxodon Framework UIToolkit](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.UIToolkit)\n\n    此插件将UIToolkit整合到Loxodon.Framework框架中，增加了UIToolkitWindow类，支持数据绑定，支持UIToolkit和UGUI的混用。\n\n- [Loxodon Framework ILRuntime](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.ILRuntime)\n\n\tLoxodon.Framework.ILRuntime插件为框架增加了对ILRuntime的支持，可以在ILRuntime环境以MVVM的模式开发游戏。同时还可以引入Fody静态织入INotifyPropertyChanged接口，自动为VM对象的属性添加属性改变事件，简化代码编写，具体可以参见我的示例代码。\n\n- [Loxodon Framework Localization For CSV](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.LocalizationsForCsv)\n\n    支持本地化文件格式为csv文件格式，要求 Unity2018.4 以上版本.\n\n- [Loxodon Framework XLua](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.XLua)\n\n    Loxodon.Framework框架的XLua插件，它是一个lua的MVVM框架，支持lua和c#混合编程或者也可以完全使用lua来编写您的整个游戏。安装步骤详见下一章节或者查看[Loxodon.Framework.XLua的文档](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.XLua)    \n\n- [Loxodon Framework Bundle](https://assetstore.unity.com/packages/slug/87419)\n\n    AssetBundle加载和管理的工具，也是一个AssetBundle资源冗余分析工具。它能够自动管理AssetBundle之间复杂的依赖关系，它通过引用计数来维护AssetBundle之间的依赖。你既可以预加载一个AssetBundle，自己管理它的释放，也可以直接通过异步的资源加载函数直接加载资源，资源加载函数会自动去查找资源所在的AB包，自动加载AB，使用完后又会自动释放AB。 它还支持弱缓存，如果对象模板已经在缓存中，则不需要重新去打开AB。它支持多种加载方式，WWW加载，UnityWebRequest加载，File方式的加载等等（在Unity5.6以上版本，请不要使用WWW加载器，它会产生内存峰值）。它提供了一个AssetBundle的打包界面，支持加密AB包（只建议加密敏感资源，因为会影响性能）。同时它也绕开了Unity3D早期版本的一些bug，比如多个协程并发加载同一个资源，在android系统会出错。它的冗余分析是通过解包AssetBundle进行的，这比在编辑器模式下分析的冗余更准确。\n\n    ![](docs/images/bundle.png)\n\n- [Loxodon Framework FairyGUI](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.FairyGUI)\n\n    框架已支持FairyGUI控件的数据绑定，请下载FairyGUI-unity和Loxodon Framework FairyGUI，并导入项目中。\n\n    **下载：**\n    [FairyGUI-unity](https://github.com/fairygui/FairyGUI-unity)\n    [Loxodon Framework FairyGUI](https://github.com/vovgou/loxodon-framework/releases)  \n\n- [Loxodon Framework NLog](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.NLog)\n\n    支持使用NLog在Unity中打印日志，建议使用这个插件替代以前的Log4Net插件，他在日志打印过程中分配更少的堆内存。\n- [Loxodon Framework Log4Net](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Log4Net)\n\n    支持使用Log4Net在Unity中打印日志的插件，支持在局域网中远程调试。\n\n    ![](docs/images/log4net.png)\n\n- [Loxodon Framework Obfuscation](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Obfuscation)\n\n    数据类型内存混淆插件，支持ObfuscatedByte，ObfuscatedShort，ObfuscatedInt,ObfuscatedLong,ObfuscatedFloat,ObfuscatedDouble类型，防止内存修改器修改游戏数值，支持数值类型的所有运算符，与byte、short、int、long、float、double类型之间可以自动转换，使用时替换对应的数值类型即可。\n    Float和Double类型混淆时转为int和long类型进行与或运算，确保不会丢失精度，类型转换时使用unsafe代码，兼顾转换性能。\n\n- [Loxodon Framework Addressable](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Addressable)\n\n    有关Addressable Asset System功能的扩展与支持。\n\n- [Loxodon Framework Connection](https://github.com/vovgou/loxodon-framework?path=Loxodon.Framework.Connection)\n\n    这是一个网络连接组件，使用TcpClient实现，实现了Socket连接，自动重连，消息的订阅，事件订阅，请求、响应等操作，支持IPV6和IPV4，使用域名连接时自动识别当前网络，优先连接IPV4网络。使用IPV4地址连接时，自动尝试以``64:ff9b::``为前缀的IPV6地址，如果正确配置NAT64网关，也应该可以连上（未测试）。\n\n    使用本组件之前，需要自定义消息的编码解码器和消息类型，如果协议存在握手消息，请自定义IHandshakeHandler，实现握手功能。\n\n- [DotNetty for Unity](https://github.com/vovgou/DotNettyForUnity)\n\n    DotNetty是著名的java网络库[Netty](https://github.com/netty/netty)的一个C#版本，异步事件驱动网络应用框架，用于快速开发可维护的高性能协议服务器和客户端。  \n\n    这个版本是基于[DotNetty](https://github.com/Azure/DotNetty)的0.7.5版本修改的，是一个为Unity开发平台定制的版本。 它删除了一些依赖库，修复了一些bug，优化了和提升了性能，以适用Unity平台上的游戏开发，并通过了IL2CPP下的测试。\n\n- [LiteDB](https://github.com/mbdavid/LiteDB)\n\n    这是一个NoSQL的嵌入式文档数据库，它完全可以替代SQLite，它由C#语言开发，支持加密，支持ORM，很小巧，性能也不错，有数据库客户端，用它来存储游戏数值配表或者客户端数据存储，它是一个非常不错的选择。\n\n    ![](https://camo.githubusercontent.com/d85fc448ef9266962a8e67f17f6d16080afdce6b/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f445f313432727a57774145434a44643f666f726d61743d6a7067266e616d653d39303078393030)\n\n- [lua-protobuf](https://github.com/starwing/lua-protobuf)\n\n    lua版本的protobuf解码项目，支持protobuf 3，使用lua开发的同学可以使用这个来解码，推荐。\n\n- [Flatbuffers](https://github.com/google/flatbuffers)\n\n    FlatBuffers是继Protobuf之后，谷歌的另外一个开源的、跨平台的、高效的序列化工具库。它专门为游戏开发或其他性能敏感的应用程序需求而创建。它提供了包括C、C++、C#、java、lua、go、python等等语言的支持，建议大家游戏开发可以选择它作为序列化工具库。\n\n## 快速开始\n\n创建一个进度条的视图和视图模型，并将视图中的UI控件和视图模型绑定，修改视图模型ProgressBarViewModel中的属性，视图UI界面将会自动改变。\n\n![](docs/images/progress.png)\n\n    public class ProgressBarViewModel : ViewModelBase\n    {\n        private string tip;\n        private bool enabled;\n        private float value;\n        public ProgressBarViewModel()\n        {\n        }\n\n        public string Tip\n        {\n            get { return this.tip; }\n            set { this.Set<string>(ref this.tip, value, nameof(Tip)); }\n        }\n\n        public bool Enabled\n        {\n            get { return this.enabled; }\n            set { this.Set<bool>(ref this.enabled, value, nameof(Enabled)); }\n        }\n\n        public float Value\n        {\n            get { return this.value; }\n            set { this.Set<float>(ref this.value, value, nameof(Value)); }\n        }\n    }\n\n    public class ProgressBarView : UIView\n    {\n        public GameObject progressBar;\n        public Text progressTip;\n        public Text progressText;\n        public Slider progressSlider;\n\n        protected override void Awake()\n        {\n            var bindingSet = this.CreateBindingSet<ProgressBar, ProgressBarViewModel>();\n\n            bindingSet.Bind(this.progressBar).For(v => v.activeSelf).To(vm => vm.Enabled).OneWay();\n            bindingSet.Bind(this.progressTip).For(v => v.text).To(vm => vm.Tip).OneWay();\n            bindingSet.Bind(this.progressText).For(v => v.text)\n                .ToExpression(vm => string.Format(\"{0:0.00}%\", vm.Value * 100)).OneWay();\n            bindingSet.Bind(this.progressSlider).For(v => v.value).To(vm => vm.Value).OneWay();\n\n            bindingSet.Build();\n        }\n    }\n\n\n    IEnumerator Unzip(ProgressBarViewModel progressBar)\n    {\n        progressBar.Tip = \"Unziping\";\n        progressBar.Enabled = true;//Display the progress bar\n\n        for(int i=0;i<30;i++)\n        {            \n            //TODO:Add unzip code here.\n\n            progressBar.Value = (i/(float)30);            \n            yield return null;\n        }\n\n        progressBar.Enabled = false;//Hide the progress bar\n        progressBar.Tip = \"\";        \n    }\n\n## 教程和示例\n\n ![](docs/images/Launcher.gif)\n\n ![](docs/images/Databinding.gif)\n\n ![](docs/images/ListView.gif)\n\n ![](docs/images/Localization.gif)\n\n![](docs/images/Interaction.gif)\n\n\n## 介绍\n- 窗口视图示例\n\n  ![](docs/images/Window.png)\n- 本地化示例\n\n  ![](docs/images/Localization.png)\n- 数据绑定示例\n\n  ![](docs/images/Databinding.png)\n- 变量 示例\n\n  ![](docs/images/Variable.png)\n- 列表视图绑定\n\n  ![](docs/images/ListView.png)\n\n## 联系方式\n邮箱: [yangpc.china@gmail.com](mailto:yangpc.china@gmail.com)   \n网站: [https://vovgou.github.io/loxodon-framework/](https://vovgou.github.io/loxodon-framework/)  \nQQ群: 622321589 15034148\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0263671875,
          "content": "theme: jekyll-theme-cayman\n"
        },
        {
          "name": "_includes",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}