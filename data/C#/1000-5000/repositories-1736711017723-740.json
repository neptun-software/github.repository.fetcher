{
  "metadata": {
    "timestamp": 1736711017723,
    "page": 740,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "natemcmaster/LettuceEncrypt",
      "stars": 1631,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 5.24609375,
          "content": "root = true\n\n[*]\nindent_style             = space\ntrim_trailing_whitespace = true\ninsert_final_newline     = true\n\n[*.{xml,csproj,props,targets,config}]\nindent_size = 2\n\n[*.json]\nindent_size = 2\n\n[*.cs]\nindent_size                                                            = 4\n\n# Style I care about\ncsharp_style_expression_bodied_constructors                            = false\ncsharp_prefer_braces                                                   = true\ndotnet_sort_system_directives_first                                    = true\ncsharp_using_directive_placement                                       = outside_namespace\n\n# Stuff that is usually best\ncsharp_style_inlined_variable_declaration                              = true\ncsharp_style_var_elsewhere                                             = true\ncsharp_space_after_cast                                                = false\ncsharp_style_pattern_matching_over_as_with_null_check                  = true\ncsharp_style_pattern_matching_over_is_with_cast_check                  = true\ncsharp_style_var_for_built_in_types                                    = true\ncsharp_style_var_when_type_is_apparent                                 = true\ncsharp_new_line_before_catch                                           = true\ncsharp_new_line_before_else                                            = true\ncsharp_new_line_before_finally                                         = true\ncsharp_indent_case_contents                                            = true\ncsharp_new_line_before_open_brace                                      = all\ncsharp_indent_switch_labels                                            = true\ncsharp_indent_labels                                                   = one_less_than_current\ncsharp_prefer_simple_default_expression                                = true\ncsharp_preserve_single_line_blocks                                     = true\ncsharp_preserve_single_line_statements                                 = true\n\n# Good defaults, but not always\ndotnet_style_object_initializer                                        = true\ncsharp_style_expression_bodied_indexers                                = true\ncsharp_style_expression_bodied_accessors                               = true\ncsharp_style_throw_expression                                          = true\ncsharp_style_namespace_declarations                                    = file_scoped:suggestion\n\n# Default severity for analyzer diagnostics with category 'Style' (escalated to build warnings)\n# dotnet_analyzer_diagnostic.category-Style.severity                     = suggestion\n\n# Required naming style\ndotnet_diagnostic.IDE0006.severity = error\n\n# suppress warning aboud unused methods\ndotnet_diagnostic.IDE0051.severity = none\n\n# Missing required header\ndotnet_diagnostic.IDE0040.severity = error\n\n# Missing accessibility modifier\ndotnet_diagnostic.IDE0073.severity = warning\n\n# Remove unnecessary parenthesis\ndotnet_diagnostic.IDE0047.severity = warning\n\n# Parenthesis added for clarity\ndotnet_diagnostic.IDE0048.severity = warning\n\n# Suppress explicit type instead of var\ndotnet_diagnostic.IDE0008.severity = none\n\n# Suppress unused expression\ndotnet_diagnostic.IDE0058.severity = none\n\n\n\n# Naming styles\n\n## Constants are PascalCase\ndotnet_naming_style.pascal_case.capitalization                         = pascal_case\n\ndotnet_naming_symbols.constants.applicable_kinds                       = field, property\ndotnet_naming_symbols.constants.applicable_accessibilities             = *\ndotnet_naming_symbols.constants.required_modifiers                     = const\n\ndotnet_naming_rule.constants_should_be_pascal_case.symbols             = constants\ndotnet_naming_rule.constants_should_be_pascal_case.style               = pascal_case\ndotnet_naming_rule.constants_should_be_pascal_case.severity            = error\n\n## Private static fields start with s_\ndotnet_naming_style.s_underscore_camel_case.required_prefix            = s_\ndotnet_naming_style.s_underscore_camel_case.capitalization             = camel_case\n\ndotnet_naming_symbols.private_static_fields.applicable_kinds           = field\ndotnet_naming_symbols.private_static_fields.applicable_accessibilities = private\ndotnet_naming_symbols.private_static_fields.required_modifiers         = static\n\ndotnet_naming_rule.private_static_fields_should_be_underscore.symbols  = private_static_fields\ndotnet_naming_rule.private_static_fields_should_be_underscore.style    = s_underscore_camel_case\ndotnet_naming_rule.private_static_fields_should_be_underscore.severity = suggestion\n\n## Private fields are _camelCase\ndotnet_naming_style.underscore_camel_case.required_prefix              = _\ndotnet_naming_style.underscore_camel_case.capitalization               = camel_case\n\ndotnet_naming_symbols.private_fields.applicable_kinds                  = field\ndotnet_naming_symbols.private_fields.applicable_accessibilities        = private\n\ndotnet_naming_rule.private_fields_should_be_underscore.symbols         = private_fields\ndotnet_naming_rule.private_fields_should_be_underscore.style           = underscore_camel_case\ndotnet_naming_rule.private_fields_should_be_underscore.severity        = error\n\n# File header\nfile_header_template = Copyright (c) Nate McMaster.\\nLicensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0751953125,
          "content": ".DS_Store\nobj/\nbin/\n.vs/\n.build/\nartifacts/\n*.user\nTestResults/\n.idea/\n*.iml\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.43359375,
          "content": "Contributing Guide\n==================\n\nContributions are welcome! If you would like to help out, here are some suggestions for how to get involved.\n\n## Get involved\n[Watch][watchers] this repository to get notifications about all conversations. GitHub issues and pull requests are the authoritative\nsource of truth for design reviews, release schedules, and bug fixes.\n\n## You don't have to contribute code\n\nThere are more ways to help that don't involve writing code.\n\n* Respond to new issues. Users often open an issue to ask a question. You are welcome to offer your answer on the thread.\n* :+1: Up vote features that you think are important.\n* Look through issues labeled [closed-stale][closed-stale] to see if there are feature requests worth reviving.\n* Review pull requests.\n\n## Contributing code\n\n* Open issues labeled [\"help wanted\"][help-wanted] are issues that I think are worth doing, but no one has volunteered to do the work yet.\n  Make a comment on issues you want assigned to yourself.\n* Pull requests are more likely to be accepted if I have first agreed to accept a feature or bug fix. Open an issue first if you aren't sure.\n\n## Questions?\n\nOpen a GitHub issue if you'd like to help and don't know where to begin.\n\n[watchers]: https://github.com/natemcmaster/LettuceEncrypt/watchers\n[closed-stale]: https://github.com/natemcmaster/LettuceEncrypt/labels/closed-stale\n[help-wanted]: https://github.com/natemcmaster/LettuceEncrypt/labels/help%20wanted\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 3.3720703125,
          "content": "<Project>\n  <PropertyGroup>\n    <PackageTags>lets-encrypt;aspnetcore;https;certificates</PackageTags>\n    <Authors>Nate McMaster</Authors>\n    <Copyright>Copyright Â© Nate McMaster</Copyright>\n    <NeutralLanguage>en-US</NeutralLanguage>\n    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>\n    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>\n    <PackageProjectUrl>https://github.com/natemcmaster/LettuceEncrypt</PackageProjectUrl>\n    <RepositoryUrl>https://github.com/natemcmaster/LettuceEncrypt</RepositoryUrl>\n    <RepositoryType>git</RepositoryType>\n    <SymbolPackageFormat>snupkg</SymbolPackageFormat>\n    <DebugType>portable</DebugType>\n    <IsPackable>false</IsPackable>\n    <WarnOnPackingNonPackableProject>false</WarnOnPackingNonPackableProject>\n    <IncludeSymbols>true</IncludeSymbols>\n    <EmbedUntrackedSources>true</EmbedUntrackedSources>\n    <LangVersion>10.0</LangVersion>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>\n    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)src\\StrongName.snk</AssemblyOriginatorKeyFile>\n    <SignAssembly>true</SignAssembly>\n    <NoWarn>$(NoWarn);NU5105</NoWarn>\n    <WarningsNotAsErrors>$(WarningsNotAsErrors);CS1591</WarningsNotAsErrors>\n    <IsPackableFalseWarningTask>false</IsPackableFalseWarningTask>\n\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <GenerateFullPaths Condition=\"'$(TERM_PROGRAM)' == 'vscode'\">true</GenerateFullPaths>\n    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>\n    <BaseOutputPath>$(MSBuildThisFileDirectory).build\\$(MSBuildProjectName)\\bin\\</BaseOutputPath>\n    <BaseIntermediateOutputPath>$(MSBuildThisFileDirectory).build\\$(MSBuildProjectName)\\obj\\</BaseIntermediateOutputPath>\n    <!-- Hide results files in Solution Explorer -->\n    <DefaultItemExcludes>$(DefaultItemExcludes);TestResults\\**</DefaultItemExcludes>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <VersionPrefix>1.3.3</VersionPrefix>\n    <VersionSuffix>beta</VersionSuffix>\n    <IncludePreReleaseLabelInPackageVersion Condition=\"'$(IS_STABLE_BUILD)' != 'true'\">true</IncludePreReleaseLabelInPackageVersion>\n    <BuildNumber Condition=\" '$(BuildNumber)' == '' \">$([MSBuild]::ValueOrDefault($(BUILD_NUMBER), 0))</BuildNumber>\n    <VersionSuffix>$(VersionSuffix).$(BuildNumber)</VersionSuffix>\n    <SourceRevisionId Condition=\"'$(SourceRevisionId)' == ''\">$(BUILD_SOURCEVERSION)</SourceRevisionId>\n    <PackageVersion>$(VersionPrefix)</PackageVersion>\n    <PackageVersion Condition=\"'$(IncludePreReleaseLabelInPackageVersion)' == 'true'\">$(PackageVersion)-$(VersionSuffix)</PackageVersion>\n\n    <PackageReleaseNotes>\n      See release notes at https://github.com/natemcmaster/LettuceEncrypt/releases/tag/v$(PackageVersion).\n    </PackageReleaseNotes>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <PackageIcon>icon.png</PackageIcon>\n    <PackageIconUrl>https://raw.githubusercontent.com/wiki/natemcmaster/LettuceEncrypt/logo.png</PackageIconUrl>\n  </PropertyGroup>\n\n  <ItemGroup Condition=\" '$(IsPackable)' == 'true' \">\n    <None Include=\"$(MSBuildThisFileDirectory)src\\icon.png\">\n      <Pack>true</Pack>\n      <PackagePath>/$(PackageIcon)</PackagePath>\n      <Visible>false</Visible>\n    </None>\n  </ItemGroup>\n\n  <Import Project=\"$(MSBuildProjectDirectory)/releasenotes.props\"\n          Condition=\"Exists('$(MSBuildProjectDirectory)/releasenotes.props')\" />\n</Project>\n"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 0.5732421875,
          "content": "<Project InitialTargets=\"UpdateCiSettings\">\n\n  <Target Name=\"UpdateCiSettings\" Condition=\"'$(CI)' == 'true' and '$(MSBuildProjectName)' == 'LettuceEncrypt' and '$(GITHUB_OUTPUT)' != ''\">\n    <WriteLinesToFile File=\"$(GITHUB_OUTPUT)\" Overwrite=\"false\" Lines=\"package_version=$(PackageVersion)\" />\n  </Target>\n\n  <PropertyGroup>\n    <PackageDescription Condition=\" '$(SourceRevisionId)' != '' and '$(RepositoryUrl)' != '' \">$(PackageDescription)\n\nThis package was build from source code at $(RepositoryUrl)/tree/$(SourceRevisionId)\n    </PackageDescription>\n  </PropertyGroup>\n\n</Project>\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 9.5546875,
          "content": "Apache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n    \"License\" shall mean the terms and conditions for use, reproduction,\n    and distribution as defined by Sections 1 through 9 of this document.\n\n    \"Licensor\" shall mean the copyright owner or entity authorized by\n    the copyright owner that is granting the License.\n\n    \"Legal Entity\" shall mean the union of the acting entity and all\n    other entities that control, are controlled by, or are under common\n    control with that entity. For the purposes of this definition,\n    \"control\" means (i) the power, direct or indirect, to cause the\n    direction or management of such entity, whether by contract or\n    otherwise, or (ii) ownership of fifty percent (50%) or more of the\n    outstanding shares, or (iii) beneficial ownership of such entity.\n\n    \"You\" (or \"Your\") shall mean an individual or Legal Entity\n    exercising permissions granted by this License.\n\n    \"Source\" form shall mean the preferred form for making modifications,\n    including but not limited to software source code, documentation\n    source, and configuration files.\n\n    \"Object\" form shall mean any form resulting from mechanical\n    transformation or translation of a Source form, including but\n    not limited to compiled object code, generated documentation,\n    and conversions to other media types.\n\n    \"Work\" shall mean the work of authorship, whether in Source or\n    Object form, made available under the License, as indicated by a\n    copyright notice that is included in or attached to the work\n    (an example is provided in the Appendix below).\n\n    \"Derivative Works\" shall mean any work, whether in Source or Object\n    form, that is based on (or derived from) the Work and for which the\n    editorial revisions, annotations, elaborations, or other modifications\n    represent, as a whole, an original work of authorship. For the purposes\n    of this License, Derivative Works shall not include works that remain\n    separable from, or merely link (or bind by name) to the interfaces of,\n    the Work and Derivative Works thereof.\n\n    \"Contribution\" shall mean any work of authorship, including\n    the original version of the Work and any modifications or additions\n    to that Work or Derivative Works thereof, that is intentionally\n    submitted to Licensor for inclusion in the Work by the copyright owner\n    or by an individual or Legal Entity authorized to submit on behalf of\n    the copyright owner. For the purposes of this definition, \"submitted\"\n    means any form of electronic, verbal, or written communication sent\n    to the Licensor or its representatives, including but not limited to\n    communication on electronic mailing lists, source code control systems,\n    and issue tracking systems that are managed by, or on behalf of, the\n    Licensor for the purpose of discussing and improving the Work, but\n    excluding communication that is conspicuously marked or otherwise\n    designated in writing by the copyright owner as \"Not a Contribution.\"\n\n    \"Contributor\" shall mean Licensor and any individual or Legal Entity\n    on behalf of whom a Contribution has been received by Licensor and\n    subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n    this License, each Contributor hereby grants to You a perpetual,\n    worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n    copyright license to reproduce, prepare Derivative Works of,\n    publicly display, publicly perform, sublicense, and distribute the\n    Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n    this License, each Contributor hereby grants to You a perpetual,\n    worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n    (except as stated in this section) patent license to make, have made,\n    use, offer to sell, sell, import, and otherwise transfer the Work,\n    where such license applies only to those patent claims licensable\n    by such Contributor that are necessarily infringed by their\n    Contribution(s) alone or by combination of their Contribution(s)\n    with the Work to which such Contribution(s) was submitted. If You\n    institute patent litigation against any entity (including a\n    cross-claim or counterclaim in a lawsuit) alleging that the Work\n    or a Contribution incorporated within the Work constitutes direct\n    or contributory patent infringement, then any patent licenses\n    granted to You under this License for that Work shall terminate\n    as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n    Work or Derivative Works thereof in any medium, with or without\n    modifications, and in Source or Object form, provided that You\n    meet the following conditions:\n\n    (a) You must give any other recipients of the Work or\n        Derivative Works a copy of this License; and\n\n    (b) You must cause any modified files to carry prominent notices\n        stating that You changed the files; and\n\n    (c) You must retain, in the Source form of any Derivative Works\n        that You distribute, all copyright, patent, trademark, and\n        attribution notices from the Source form of the Work,\n        excluding those notices that do not pertain to any part of\n        the Derivative Works; and\n\n    (d) If the Work includes a \"NOTICE\" text file as part of its\n        distribution, then any Derivative Works that You distribute must\n        include a readable copy of the attribution notices contained\n        within such NOTICE file, excluding those notices that do not\n        pertain to any part of the Derivative Works, in at least one\n        of the following places: within a NOTICE text file distributed\n        as part of the Derivative Works; within the Source form or\n        documentation, if provided along with the Derivative Works; or,\n        within a display generated by the Derivative Works, if and\n        wherever such third-party notices normally appear. The contents\n        of the NOTICE file are for informational purposes only and\n        do not modify the License. You may add Your own attribution\n        notices within Derivative Works that You distribute, alongside\n        or as an addendum to the NOTICE text from the Work, provided\n        that such additional attribution notices cannot be construed\n        as modifying the License.\n\n    You may add Your own copyright statement to Your modifications and\n    may provide additional or different license terms and conditions\n    for use, reproduction, or distribution of Your modifications, or\n    for any such Derivative Works as a whole, provided Your use,\n    reproduction, and distribution of the Work otherwise complies with\n    the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n    any Contribution intentionally submitted for inclusion in the Work\n    by You to the Licensor shall be under the terms and conditions of\n    this License, without any additional terms or conditions.\n    Notwithstanding the above, nothing herein shall supersede or modify\n    the terms of any separate license agreement you may have executed\n    with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n    names, trademarks, service marks, or product names of the Licensor,\n    except as required for reasonable and customary use in describing the\n    origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n    agreed to in writing, Licensor provides the Work (and each\n    Contributor provides its Contributions) on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n    implied, including, without limitation, any warranties or conditions\n    of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n    PARTICULAR PURPOSE. You are solely responsible for determining the\n    appropriateness of using or redistributing the Work and assume any\n    risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n    whether in tort (including negligence), contract, or otherwise,\n    unless required by applicable law (such as deliberate and grossly\n    negligent acts) or agreed to in writing, shall any Contributor be\n    liable to You for damages, including any direct, indirect, special,\n    incidental, or consequential damages of any character arising as a\n    result of this License or out of the use or inability to use the\n    Work (including but not limited to damages for loss of goodwill,\n    work stoppage, computer failure or malfunction, or any and all\n    other commercial damages or losses), even if such Contributor\n    has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n    the Work or Derivative Works thereof, You may choose to offer,\n    and charge a fee for, acceptance of support, warranty, indemnity,\n    or other liability obligations and/or rights consistent with this\n    License. However, in accepting such obligations, You may act only\n    on Your own behalf and on Your sole responsibility, not on behalf\n    of any other Contributor, and only if You agree to indemnify,\n    defend, and hold each Contributor harmless for any liability\n    incurred by, or claims asserted against, such Contributor by reason\n    of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LettuceEncrypt.sln",
          "type": "blob",
          "size": 9.9169921875,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.31903.59\nMinimumVisualStudioVersion = 16.0.0.0\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"samples\", \"samples\", \"{C1D11C9E-C330-450D-9FD4-13A679A3D707}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Web\", \"samples\\Web\\Web.csproj\", \"{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{CC50E6BF-ECAC-4B32-9DDF-68E0C09DEA4A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LettuceEncrypt\", \"src\\LettuceEncrypt\\LettuceEncrypt.csproj\", \"{195FD49D-AA3B-4936-A7D6-AD52784C7E84}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"test\", \"test\", \"{F832E417-FA9F-4DB4-8E82-3D56054E47B1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LettuceEncrypt.UnitTests\", \"test\\LettuceEncrypt.UnitTests\\LettuceEncrypt.UnitTests.csproj\", \"{0BFCC67B-4746-4158-8056-E93C879D9C80}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"files\", \"files\", \"{A92C89F3-2206-4BB0-8279-7DDA81FD1F5B}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\t.gitignore = .gitignore\n\t\tbuild.ps1 = build.ps1\n\t\tCONTRIBUTING.md = CONTRIBUTING.md\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tDirectory.Build.targets = Directory.Build.targets\n\t\t.config\\dotnet-tools.json = .config\\dotnet-tools.json\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LettuceEncrypt.Azure\", \"src\\LettuceEncrypt.Azure\\LettuceEncrypt.Azure.csproj\", \"{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LettuceEncrypt.Azure.UnitTests\", \"test\\LettuceEncrypt.Azure.UnitTests\\LettuceEncrypt.Azure.UnitTests.csproj\", \"{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"KeyVault\", \"samples\\KeyVault\\KeyVault.csproj\", \"{6143D097-6983-4A29-9DAE-1DD0EBC900D2}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"McMaster.AspNetCore.Kestrel.Certificates\", \"src\\Kestrel.Certificates\\McMaster.AspNetCore.Kestrel.Certificates.csproj\", \"{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Release|x64.Build.0 = Release|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060}.Release|x86.Build.0 = Release|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Release|x64.Build.0 = Release|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84}.Release|x86.Build.0 = Release|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80}.Release|x86.Build.0 = Release|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Release|x64.Build.0 = Release|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7}.Release|x86.Build.0 = Release|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Release|x64.Build.0 = Release|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343}.Release|x86.Build.0 = Release|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Release|x64.Build.0 = Release|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2}.Release|x86.Build.0 = Release|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Release|x64.Build.0 = Release|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168}.Release|x86.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{014A3D8E-1DFB-470B-AF44-7E7DFA16E060} = {C1D11C9E-C330-450D-9FD4-13A679A3D707}\n\t\t{195FD49D-AA3B-4936-A7D6-AD52784C7E84} = {CC50E6BF-ECAC-4B32-9DDF-68E0C09DEA4A}\n\t\t{0BFCC67B-4746-4158-8056-E93C879D9C80} = {F832E417-FA9F-4DB4-8E82-3D56054E47B1}\n\t\t{3E8A37BC-D59C-497D-A3BF-2A9740F351C7} = {CC50E6BF-ECAC-4B32-9DDF-68E0C09DEA4A}\n\t\t{5D2D6ACA-3EE3-42C8-84D1-D9B6ABE38343} = {F832E417-FA9F-4DB4-8E82-3D56054E47B1}\n\t\t{6143D097-6983-4A29-9DAE-1DD0EBC900D2} = {C1D11C9E-C330-450D-9FD4-13A679A3D707}\n\t\t{8131AFC9-ED23-4A3A-9D38-5200E4D8B168} = {CC50E6BF-ECAC-4B32-9DDF-68E0C09DEA4A}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {EA50A4AB-48E4-4D43-8EFD-2BC849EA7AF8}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.2275390625,
          "content": "<h1>\n<img src=\"./src/icon.png\" width=\"42\" height=\"42\"/>\nLettuceEncrypt for ASP.NET Core\n</h1>\n\n[![Build Status][ci-badge]][ci] [![Code Coverage][codecov-badge]][codecov]\n[![NuGet][nuget-badge] ![NuGet Downloads][nuget-download-badge]][nuget]\n\n[ci]: https://github.com/natemcmaster/LettuceEncrypt/actions?query=workflow%3ACI+branch%3Amain\n[ci-badge]: https://github.com/natemcmaster/LettuceEncrypt/workflows/CI/badge.svg\n[codecov]: https://codecov.io/gh/natemcmaster/LettuceEncrypt\n[codecov-badge]: https://codecov.io/gh/natemcmaster/LettuceEncrypt/branch/main/graph/badge.svg?token=l6uSsHZ8nA\n[nuget]: https://www.nuget.org/packages/LettuceEncrypt/\n[nuget-badge]: https://img.shields.io/nuget/v/LettuceEncrypt.svg?style=flat-square\n[nuget-download-badge]: https://img.shields.io/nuget/dt/LettuceEncrypt?style=flat-square\n[ACME]: https://en.wikipedia.org/wiki/Automated_Certificate_Management_Environment\n[Let's Encrypt]: https://letsencrypt.org/\n\nLettuceEncrypt provides API for ASP.NET Core projects to integrate with a certificate authority (CA), such as\n[Let's Encrypt], for free, automatic HTTPS (SSL/TLS) certificates using the [ACME] protocol.\n\nWhen enabled, your web server will **automatically** generate an HTTPS certificate during start up.\nIt then configures Kestrel to use this certificate for all HTTPS traffic.\nSee [usage instructions below](#usage) to get started.\n\nCreated and developed by [@natemcmaster](https://github.com/natemcmaster) with â¤ï¸ from Seattle âï¸.\nThis project was formerly known as \"McMaster.AspNetCore.LetsEncrypt\", but [has been renamed for\ntrademark reasons](https://github.com/natemcmaster/LettuceEncrypt/issues/99). This project is **not an official\noffering** from Let's EncryptÂ® or ISRGâ¢.\n\nThis project is 100% organic and best served cold with ranch and carrots. ð¥¬\n\n### Project status\n\nThis project is in maintenance mode. I lost interest in developing features. I will make a patch if there is a security issue. I'll also consider an update if a new .NET major version breaks and the patch fix required is small. Please see https://github.com/natemcmaster/LettuceEncrypt/security/policy if you wish to report a security concern.\n\n## Will this work for me?\n\nThat depends on [which kind of web server you are using](#web-server-scenarios). This library only works with\n[Kestrel](https://docs.microsoft.com/aspnet/core/fundamentals/servers/kestrel), which is the default server\nconfiguration for ASP.NET Core projects. Other servers, such as IIS and HTTP.sys, are not supported.\nFurthermore, this only works when Kestrel is the edge server.\n\nNot sure? [Read \"Web Server Scenarios\" below for more details.](#web-server-scenarios)\n\nUsing :cloud: Azure App Services (aka WebApps)? This library isn't for you, but you can still get free HTTPS certificates.\nSee [\"Securing An Azure App Service with Let's Encrypt\"](https://www.hanselman.com/blog/SecuringAnAzureAppServiceWebsiteUnderSSLInMinutesWithLetsEncrypt.aspx) by Scott Hanselman for more details.\n\n## Usage\n\nInstall this package into your project using NuGet ([see details here][nuget]).\n\nThe primary API usage is to call `IServiceCollection.AddLettuceEncrypt` in the `Startup` class `ConfigureServices` method.\n\n```csharp\nusing Microsoft.Extensions.DependencyInjection;\n\npublic class Startup\n{\n    public void ConfigureServices(IServiceCollection services)\n    {\n        services.AddLettuceEncrypt();\n    }\n}\n```\n\nA few required options should be set, typically via the appsettings.json file.\n\n```jsonc\n// appsettings.json\n{\n    \"LettuceEncrypt\": {\n        // Set this to automatically accept the terms of service of your certificate authority.\n        // If you don't set this in config, you will need to press \"y\" whenever the application starts\n        \"AcceptTermsOfService\": true,\n\n        // You must specify at least one domain name\n        \"DomainNames\": [ \"example.com\", \"www.example.com\" ],\n\n        // You must specify an email address to register with the certificate authority\n        \"EmailAddress\": \"it-admin@example.com\"\n    }\n}\n```\n\n## Additional options\n\n### Kestrel configuration\n\nIf your code is using the `.UseKestrel()` method to configure IP addresses, ports, or HTTPS settings,\nyou will also need to call `UseLettuceEncrypt`. This is required to make Lettuce Encrypt work.\n\n#### Example: ConfigureHttpsDefaults\n\nIf calling `ConfigureHttpsDefaults`, use `UseLettuceEncrypt` like this:\n\n```c#\nwebBuilder.UseKestrel(k =>\n{\n    var appServices = k.ApplicationServices;\n    k.ConfigureHttpsDefaults(h =>\n    {\n        h.ClientCertificateMode = ClientCertificateMode.RequireCertificate;\n        h.UseLettuceEncrypt(appServices);\n    });\n});\n```\n\n#### Example: Listen + UseHttps\nIf using `Listen` + `UseHttps` to manually configure Kestrel's address binding, use `UseLettuceEncrypt` like this:\n\n```c#\nwebBuilder.UseKestrel(k =>\n{\n    var appServices = k.ApplicationServices;\n    k.Listen(\n        IPAddress.Any, 443,\n        o => o.UseHttps(h =>\n        {\n            h.UseLettuceEncrypt(appServices);\n        }));\n});\n```\n\n### Customizing storage\n\nCertificates are stored to the machine's X.509 store by default. Certificates can be stored in additional\nlocations by using extension methods after calling `AddLettuceEncrypt()` in the `Startup` class.\n\nMultiple storage locations can be configured.\n\n### Save generated certificates and account information to a directory\n\nThis will save and load certificate files (PFX format) using the specified directory.\nIt will also save your certificate authority account key into the same directory.\n\n```c#\nusing LettuceEncrypt;\nusing Microsoft.Extensions.DependencyInjection;\n\npublic void ConfigureServices(IServiceCollection services)\n{\n    services\n        .AddLettuceEncrypt()\n        .PersistDataToDirectory(new DirectoryInfo(\"C:/data/LettuceEncrypt/\"), \"Password123\");\n}\n```\n\n### Save generated certificates to Azure Key Vault\n\nInstall [LettuceEncrypt.Azure](https://nuget.org/packages/LettuceEncrypt.Azure).\nThis will save and load certificate files using an Azure Key Vault.\nIt will also save your certificate authority account key as a secret in the same vault.\n\n```c#\nusing LettuceEncrypt;\nusing Microsoft.Extensions.DependencyInjection;\n\npublic void ConfigureServices(IServiceCollection services)\n{\n    services\n        .AddLettuceEncrypt()\n        .PersistCertificatesToAzureKeyVault();\n}\n```\n\n```jsonc\n// appsettings.json\n{\n    \"LettuceEncrypt\": {\n        \"AzureKeyVault\": {\n            // Required - specify the name of your key vault\n            \"AzureKeyVaultEndpoint\": \"https://myaccount.vault.azure.net/\"\n\n            // Optional - specify the secret name used to store your account info (used for cert rewewals)\n            // If not specified, name defaults to \"le-encrypt-${ACME server URL}\"\n            \"AccountKeySecretName\": \"my-lets-encrypt-account\"\n        }\n    }\n}\n```\n\n### Customizing how the certs are saved and loaded\n\nCreate a class that implements `ICertificateRepository` to customize how to save your certificates.\n\nCreate a class that implements `ICertificateSource` to customize where pre-existing certificates are\nfound when the server starts.\n\n```c#\nusing LettuceEncrypt;\nusing Microsoft.Extensions.DependencyInjection;\n\npublic void ConfigureServices(IServiceCollection services)\n{\n    services.AddLettuceEncrypt();\n    services.AddSingleton<ICertificateRepository, MyCertRepo>();\n    services.AddSingleton<ICertificateSource, MyCertSource>();\n}\n\nclass MyCertRepo : ICertificateRepository\n{\n    public async Task SaveAsync(X509Certificate2 certificate, CancellationToken cancellationToken)\n    {\n        byte[] certData = certificate.Export(X509ContentType.Pfx, \"optionallySetPfxPassword\");\n        // save this data somehow\n    }\n}\n\nclass MyCertSource : ICertificateSource\n{\n    public async Task<IEnumerable<X509Certificate2>> GetCertificatesAsync(CancellationToken cancellationToken);\n    {\n        // find and return certificate objects. Return an empty enumerable if none are found\n    }\n}\n```\n\n### Customizing saving your account key\n\nYour interactions with the certificate authority are encrypted with a private\nkey which is generated automatically on first-use. To ensure you can renew certificates\nlater using the same account, this account key is saved to disk by default.\nYou can customize where this account information is shared by adding your own implementation\nof `IAccountStore`.\n\n```c#\nusing LettuceEncrypt;\nusing LettuceEncrypt.Accounts;\n\n\npublic void ConfigureServices(IServiceCollection services)\n{\n    services.AddLettuceEncrypt();\n    services.AddSingleton<IAccountStore, MyAccountStore>();\n}\n\n\nclass MyAccountStore: IAccountStore\n{\n    public Task SaveAccountAsync(AccountModel account, CancellationToken cancellationToken)\n    {\n        // save the account object somewhere\n    }\n\n    // add #nullable enable if using c#, or remove the question mark for older versions of C#\n    public Task<AccountModel?> GetAccountAsync(CancellationToken cancellationToken)\n    {\n        // return null if there is no account and one will be created for you\n    }\n}\n```\n\n\n### Changing which challenge types are used\n\nThe ACME protocol supports multiple methods for proving you own a DNS name called \"challenge types\".\nIf you wish to manually select which challenge types are used, set the \"AllowedChallengeTypes\" method.\nThe default value is \"Any\", which means this library will exhaust all supported challenge types before\ngiving up.\n\nCurrent supported values:\n* `Http01` - The HTTP-01 challenge, which uses a well-known URL on the server and a HTTP request/response.\n* `TlsAlpn01` - The TLS-ALPN-01 challenge, which uses an auto-generated, ephemeral certificate in the TLS handshake.\n* `Dns01` - The DNS-01 challenge, which uses TXT record under that domain name.\n* `Any` - _(default)_ - use HTTP-01 and/or TLS-ALPN-01 DNS-01\n\nTip: if you wish to set multiple method types and are use the \"appsettings.json\" approach, provide a comma-seperated list.\n\n\n```json\n{\n    \"LettuceEncrypt\": {\n        \"AllowedChallengeTypes\": \"Http01, TlsAlpn01, Dns01\"\n    }\n}\n```\n\n\n### When using DNS-01\n\nWhen using the DNS-01 challenge a `IDnsChallengeProvider` must be add and replace the `NoOpDnsChallengeProvider`\n\n```c#\npublic class MyDnsChallengeProvider : IDnsChallengeProvider\n{\n    private readonly ISomeExternalDnsClient _client;\n\n    public MyDnsChallengeProvider(ISomeExternalDnsClient client) => _client = client;\n\n    public Task AddTxtRecordAsync(string domainName, string txt, CancellationToken ct = default)\n    {\n        return _client.AddDnsTxtRecord(domainName, txt, ct);\n    }\n\n    public Task RemoveTxtRecordAsync(string domainName, string txt, CancellationToken ct = default)\n    {\n        return _client.RemoveDnsTxtRecord(domainName, txt, ct);\n    }\n}\n```\n\n## Testing in development\n\nSee the [developer docs](./test/Integration/) for details on how to test in a non-production environment.\n\n## Web Server Scenarios\n\nI recommend also reading [Microsoft's official documentation on hosting and deploying ASP.NET Core](https://docs.microsoft.com/aspnet/core/host-and-deploy/).\n\n### ASP.NET Core with Kestrel\n\n:white_check_mark: supported\n\n![Diagram of Kestrel on the edge with Kestrel](https://i.imgur.com/vhQTgUe.png)\n\nIn this scenario, ASP.NET Core is hosted by the Kestrel server (the default, in-process HTTP server) and that web server exposes its ports directly to the internet. This library will configure Kestrel with an auto-generated certificate.\n\n### ASP.NET Core with IIS\n\n:x: NOT supported\n\n![Diagram of Kestrel on the edge with IIS](https://i.imgur.com/PmrcLkN.png)\n\nIn this scenario, ASP.NET Core is hosted by IIS and that web server exposes its ports directly to the internet. IIS does not support dynamically configuring HTTPS certificates, so this library cannot support this scenario, but you can still configure cert automation using a different tool. See [\"Using Let's Encrypt with IIS On Windows\"](https://weblog.west-wind.com/posts/2016/feb/22/using-lets-encrypt-with-iis-on-windows) for details.\n\nAzure App Service uses this for ASP.NET Core 2.2 and newer, which is why this library cannot support that scenario.. Older versions of ASP.NET Core on Azure App Service run with IIS as the reverse proxy (see below), which is also an unsupported scenario.\n\n\n### ASP.NET Core with Kestrel Behind a TCP Load Balancer (aka SSL pass-thru)\n\n:white_check_mark: supported\n\n![Diagram of TCP Load Balancer](https://i.imgur.com/txqLTv5.png)\n\nIn this scenario, ASP.NET Core is hosted by the Kestrel server (the default, in-process HTTP server) and that web server exposes its ports directly to a local network. A TCP load balancer such as nginx forwards traffic without decrypting it to the host running Kestrel. This library will configure Kestrel with an auto-generated certificate.\n\n### ASP.NET Core with Kestrel Behind a Reverse Proxy\n\n:x: NOT supported\n\n![Diagram of reverse proxy](https://i.imgur.com/LA4jms7.png)\n\nIn this scenario, HTTPS traffic is decrypted by a different web server that is beyond the control of ASP.NET Core. This library cannot support this scenario because HTTPS certificates must be configured by the reverse proxy server.\n\nThis is commonly done by web hosting providers. For example, :cloud: Azure App Services (aka WebApps) often runs older versions of ASP.NET Core in a reverse proxy.\n\nIf you are running the reverse proxy, you can still get free HTTPS certificates, but you'll need to use a different method. [Try Googling this](https://www.google.com/search?q=let%27s%20encrypt%20nginx).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.5048828125,
          "content": "# Security Policy\n\n## Supported Versions\n\nIt is highly recommended that you use the newest versions of this library as they are released.\nOnly the latest version of this library will be supported with security updates.\n\n## Reporting a Vulnerability\n\nIf you have found an issue that you believe is a security vulnerability, DO NOT OPEN an issue on GitHub. Instead,\nemail your concerns to open-source@natemcmaster.com. Security concerns will be reviewed as soon as possible and\nyou can expect a reply within two weeks.\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 1.3046875,
          "content": "#!/usr/bin/env pwsh\n[CmdletBinding(PositionalBinding = $false)]\nparam(\n    [ValidateSet('Debug', 'Release')]\n    $Configuration = $null,\n    [switch]\n    $ci,\n    [Parameter(ValueFromRemainingArguments = $true)]\n    [string[]]$MSBuildArgs\n)\n\nSet-StrictMode -Version 1\n$ErrorActionPreference = 'Stop'\n\nImport-Module -Force -Scope Local \"$PSScriptRoot/src/common.psm1\"\n\n#\n# Main\n#\n\nif ($env:CI -eq 'true') {\n    $ci = $true\n}\n\nif (!$Configuration) {\n    $Configuration = if ($ci) { 'Release' } else { 'Debug' }\n}\n\nif ($ci) {\n    $MSBuildArgs += '-p:CI=true'\n\n    & dotnet --info\n}\n\nif (-not (Test-Path variable:\\IsCoreCLR)) {\n    $IsWindows = $true\n}\n\n$artifacts = \"$PSScriptRoot/artifacts/\"\n\nRemove-Item -Recurse $artifacts -ErrorAction Ignore\n\n[string[]] $formatArgs=@()\nif ($ci) {\n    $formatArgs += '--verify-no-changes'\n}\n\nexec dotnet format -v detailed @formatArgs\nexec dotnet build --configuration $Configuration '-warnaserror:CS1591' @MSBuildArgs\nexec dotnet pack --no-restore --no-build --configuration $Configuration -o $artifacts @MSBuildArgs\n\n[string[]] $testArgs=@()\nif ($env:TF_BUILD) {\n    $testArgs += '--logger', 'trx'\n}\n\nexec dotnet test --no-restore --no-build --configuration $Configuration '-clp:Summary' `\n    --collect:\"XPlat Code Coverage\" `\n    @testArgs `\n    @MSBuildArgs\n\nwrite-host -f green 'BUILD SUCCEEDED'\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0283203125,
          "content": "ignore:\n  - samples\n  - test\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}