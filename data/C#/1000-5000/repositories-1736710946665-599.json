{
  "metadata": {
    "timestamp": 1736710946665,
    "page": 599,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "enkodellc/blazorboilerplate",
      "stars": 1884,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.4638671875,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n* -crlf\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following\n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n#\n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the\n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.43359375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio\n.vs/\n.vscode/\n\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n#*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n[Bb]in/**/*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- Backup*.rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n#Keys\n*.pfx\n*.rsa\n*.jwk\n*.p8\n\n/docs/_build\n\n/src/BlazorBoilerplate.Server/*.db\n/src/BlazorBoilerplate.Server/appsettings.Local.json\n\n/src/BlazorBoilerplate.Server/Keys\n/src/BlazorBoilerplate.Server/Modules\n/src/BlazorBoilerplate.Server/Properties/PublishProfiles\n/src/BlazorBoilerplate.Server/Properties/ServiceDependencies\n!/src/BlazorBoilerplate.Server/Properties/PublishProfiles/Release-win-x64.pubxml\n\n/src/Server/BlazorBoilerplate.Server/*.db\n/src/Server/BlazorBoilerplate.Server/appsettings.Local.json\n\n/src/Server/BlazorBoilerplate.Server/Keys\n/src/Server/BlazorBoilerplate.Server/Modules\n/src/Server/BlazorBoilerplate.Server/Themes\n/src/Server/BlazorBoilerplate.Server/Properties/PublishProfiles\n/src/Server/BlazorBoilerplate.Server/Properties/ServiceDependencies\n!/src/Server/BlazorBoilerplate.Server/Properties/PublishProfiles/Release-win-x64.pubxml\n"
        },
        {
          "name": ".whitesource",
          "type": "blob",
          "size": 0.134765625,
          "content": "{\n  \"checkRunSettings\": {\n    \"vulnerableCheckRunConclusionLevel\": \"failure\"\n  },\n  \"issueSettings\": {\n    \"minSeverityLevel\": \"LOW\"\n  }\n}"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2822265625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at support@blazorboilerplate.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.7900390625,
          "content": "# Contributing to Blazor Boilerplate\n\nWe love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:\n- Reporting a bug\n- Discussing the current state of the code\n- Submitting a fix\n- Proposing new features\n- Becoming a maintainer\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n\n## Pull Request Process\n\n1. Please first discuss the change you wish to make via issue or\n[Blazor Boilerplate Gitter](https://gitter.im/blazorboilerplate/community) with the owners of this repository before making a change.\n2. Fork the repo and create your branch from master.\n3. If you've added code that should be tested, add tests.\n4. If you've changed APIs, update the documentation.\n5. Ensure the test suite passes.\n6. Make sure your code lints.\n7. Ensure to remove any file databases / data.db from the PR.\n8. Issue that pull request!\n\n## Any contributions you make will be under the MIT Software License\nIn short, when you submit code changes, your submissions are understood to be under the same [MIT License](http://choosealicense.com/licenses/mit/) that covers the project. Feel free to contact the maintainers if that's a concern.\n\n## Report bugs using Github's [issues](https://github.com/enkodellc/blazorboilerplate/issues)\nWe use GitHub issues to track public bugs. Report a bug by [opening a new issue](https://github.com/enkodellc/blazorboilerplate/issues/new); it's that easy!\n\n## Write bug reports with detail, background, and sample code\n[This is an example](http://stackoverflow.com/q/12488905/180626) of a bug report someone wrote, and I think it's not a bad model. Here's [another example from Craig Hockenberry](http://www.openradar.me/11905408), another app developer.\n\n**Great Bug Reports** tend to have:\n\n- A quick summary and/or background\n- Steps to reproduce\n  - Be specific!\n  - Give sample code if you can. [this stackoverflow question](http://stackoverflow.com/q/12488905/180626) includes sample code that *anyone* with a base R setup can run to reproduce what I was seeing\n- What you expected would happen\n- What actually happens\n- Notes (possibly including why you think this might be happening, or stuff you tried that didn't work)\n\nPeople *love* thorough bug reports. I'm not even kidding.\n\n## Use a Consistent Coding Style\nI'm again borrowing these from [Facebook's Guidelines](https://github.com/facebook/draft-js/blob/a9316a723f9e918afde44dea68b5f9f39b7d9b00/CONTRIBUTING.md)\n\n* 4 spaces for indentation rather than tabs\n\n## License\nBy contributing, you agree that your contributions will be licensed under its MIT License.\n\n## References\nThis document was adapted from the open-source contribution guidelines for [Facebook's Draft](https://github.com/facebook/draft-js/blob/a9316a723f9e918afde44dea68b5f9f39b7d9b00/CONTRIBUTING.md)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.037109375,
          "content": "MIT License\n\nCopyright (c) 2019 Keith\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.1142578125,
          "content": "# <img src=\"https://github.com/enkodellc/blazorboilerplate/blob/master/docs/images/logo-title.png\" alt=\"Blazor Boilerplate\" style=\"max-wdith:100%\"/>\n\n***Note** The current master branch is now fixed and working with net7.0\n\nBlazor is a web framework designed to run in the browser on a WebAssembly-based .NET runtime. Blazor Boilerplate aka Blazor Starter Template is a SPA admin template that is able to run both WebAssembly (Core-Hosted) and Server-Side Blazor with a .NET Core 6.0 Server. Default mode for BB is Server Side. To switch to Webassembly log in as Admin and go to settings. [Read more here](https://blazor-boilerplate.readthedocs.io/en/latest/features/dual_mode_blazor.html)\n\n## Repository Notes\n- Yes, I did not update this repository for a couple of years. During this time I was the CTO of a mid-size software company. We used BB as the base of our application. It was fairly successful. It was a SAAS app with about 1,200 daily users. \n- Read the news below to stay up to date on the repo. We will try to keep the latest major changes on a different branch and have the more stable / tested version on the master branch.\n- There are several people who use this as a base for a production app. If you do so please donate. Gio and Enkode have thousands of hours of coding and support into BB. Show your support by contributing or donating.\n- The main roadblock after the project is running is learning Breeze for Entity Framework. We have some examples and will put out a few more. [IAmTimeCorey](https://www.youtube.com/watch?v=qkJ9keBmQWo) has a great video for new users of EF.  \n\n\n[![Build Status](https://enkodellc.visualstudio.com/blazorboilerplate/_apis/build/status/enkodellc.blazorboilerplate?branchName=master)](https://enkodellc.visualstudio.com/blazorboilerplate/_build/latest?definitionId=1&branchName=master)\n[![Live Demo](https://img.shields.io/badge/demo-online-green.svg)](https://blazorboilerplate.com)\n[![GitHub Stars](https://img.shields.io/github/stars/enkodellc/blazorboilerplate.svg)](https://github.com/enkodellc/blazorboilerplate/stargazers)\n[![GitHub Issues](https://img.shields.io/github/issues/enkodellc/blazorboilerplate.svg)](https://github.com/enkodellc/blazorboilerplate/issues)\n[![MIT](https://img.shields.io/github/license/SamProf/MatBlazor.svg)](LICENSE)\n[![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.me/enkodellc)\n[![Gitter](https://badges.gitter.im/BlazorBoilerplate/community.svg)](https://gitter.im/blazorboilerplate/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n## Goals\n- This repository is community driven. It is not and never will be controlled by a corporation. It's success is dependent on people using it, reviewing it, offering suggestions and most importantly contributing. Please join the [gitter discussion](https://gitter.im/blazorboilerplate/community) \n- To create a boilerplate with Blazor / Razor components that includes the most common functionality to start a real world application quickly.\n- Avoid many external components & libraries which can make it difficult to maintain, update, track down code, learn code and issues.\n- Minimal Javascript. Currently only using js for MudBlazor / Material Design. We may use components with JS in them but so far no Javascript has been written specifically for anything in the repository.\n\n\n# Live demo\n- [Blazor Boilerplate - CSB/WASM](https://blazorboilerplate.com) - Kick the tires.  *Note Firewall does block some foreign IP addresses. Swagger UI to view the server API [https://blazorboilerplate.com/swagger/index.html](https://blazorboilerplate.com/swagger/index.html).\n\n## Prerequisites\nDon't know what Blazor is? Read [here](https://docs.microsoft.com/en-us/aspnet/core/blazor)\n\nComplete all Blazor dependencies.\n\n- The latest [.Net 7.0 SDK](https://dotnet.microsoft.com/en-us/download/dotnet/7.0)\n- Install the Visual Studio 2022 + with the ASP.NET and web development workload selected.\n- Entity Framework Core on the command-line tools: **dotnet tool install --global dotnet-ef**\n\n### How to run\n1. Install the **Visual Studio 2022 (v17.0.1 at minimum)**\n2. Clone or download.\n3. Review / Update appsettings.json - DefaultConnection.\n4. Open the solution in Visual Studio and press F5.\n5. To view the API using Swagger UI, Run the solution and go to: [http://localhost:53414/swagger/index.html](http://localhost:53414/swagger/index.html). Live example:\n[https://blazorboilerplate.com/swagger/index.html](https://blazorboilerplate.com/swagger/index.html)\n\n## Publish on IIS - What works for me on my Windows Server 2016 & SQL Server 2014 (Enkodellc)\n1. Publish BlazorBoilerplate.Server project to your IIS website folder.\n2. Install your SSL. Make sure your SSL is in the **WebHosting** Certificate Store, and in Linux **My** Certificate Store.\n    - A free certificate from [Let's Encrypt](https://letsencrypt.org/) will work. \n    - For steps 2 & 3 the utility [win-acme](https://github.com/win-acme/win-acme) installs the\ncertificate on your server, performs renewal and configure your IIS Website Bindings to have https binding with the SSL certificate set and Port 443 for default.\n\n3. Configure your IIS Website Bindings to have https binding with the SSL certificate set and Port 443 for default. Enable WebSockets for SignalR.\n4. Configure / create appsettings.production.config. Set Connection String. If you are using Sql Server then make sure your connection string contains **MultipleActiveResultSets=true**, Set Thumbprint / SSL. Thumbprint example:  **143fbd7bc36e78b1bcf9a53c13336eaebe33353a**\n5. Login with either the user **[user | user123]** or admin **[admin | admin123]** default accounts.\n\n### Thanks To\n- [Blazor](https://blazor.net)\n- [BlazorWithIdentity](https://github.com/stavroskasidis/BlazorWithIdentity)\n- [MudBlazor](https://github.com/MudBlazor/MudBlazor/)\n- [MatBlazor](https://github.com/SamProf/MatBlazor)\n\n## Contributing\n\nPlease star, watch and fork! We'd greatly appreciate any contribution you make. I am very open to updates and features, though most feature requests will be depending on how much community support exists. \n\n## Disclaimer / About the Author\n\nI (Enkodellc) started this repository as I was frustrated with the examples out there that people were charging money for and were in my opinion\nincomplete or closed source. I paid for 4-5 of these solutions with an Angular front-end / .Net Core back-end and none of them were what I was looking for. This is my\nattempt to create something that developers can start a Blazor project with several great features to build from. \nI have a lot of experience with ASP.Net webforms an new to .NET Core and Blazor. This code is not meant to be perfect or follow every best practice. \nIt though is my ambition to learn and get feedback on what best practices can be implemented. I will be migrating a Webforms app to Blazor so this is my \nopportunity to learn, share, grow, and get feedback on what hopefully will be a great Blazor Starter Kit.\n  \nI have taken small solutions from other repositories and will do my best to recognize those contributions. I am very open to ideas and \n suggestions. I am not a great developer, but I try. So please take this into consideration when using this repository. If you wish to hire me for \n consulting or as a contractor please reach out via [email](mailto:support@blazorboilerplate.com) or [https://gitter.im/enkodellc](https://gitter.im/enkodellc). I have taken well  over 1,000 hours  to create, maintain, and answer questions. Please [donate](https://www.paypal.me/enkodellc) to support my efforts.\n\n## Completed \n - Basic Login / User Creation\n - Admin Theme using Material Design / MudBlazor - 12/1/2021 Switched from MatBlazor\n - Swagger UI API visualizer - [View the live API](https://blazorboilerplate.com/swagger/index.html)\n - Log Files using Serilog\n - Choose between SQL Lite File or MS SQL Database or Postgres\n - Email Confirmation of Registered Users\n - Forgot Password Functionality\n - ISoftDelete Interface for Models - Allows for \"trash / restore\" of data **IsDeleted** property\n - IAuditable Interface for Models - Allows for **CreatedOn, CreatedBy, ModifiedOn, ModifiedBy** properties  \n - Api Audit Trail / Middleware to log Api Requests and Responses\n - Api Response Class to maintain consistent Api Requests and Responses\n - Todo List CRUD Example with N-Tier Layers Not just some fluff that most others do\n - Seed Database & Database Migrations\n - Forum chat and notification system - Thanks <a href=\"https://github.com/ajgoldenwings\" target=\"_blank\">ajgoldenwings</a>\n - Drag and Drop Examples - <a href=\"https://chrissainty.com/investigating-drag-and-drop-with-blazor/\" target=\"_blank\">Chris Sainty Blazor Blog</a>\n - Docker Container Support\n - Dual Mode (CSB / SSB) - Client Side / Webassembly & Sever Side. Thanks [MarkStega](https://github.com/MarkStega)\n - Error Log to Database with Serilog & SQL. Thanks [np-at](https://github.com/np-at)\n \n## [Road map](https://github.com/enkodellc/blazorboilerplate/projects/1)\n\n## License\nThis project is licensed under the terms of the [MIT license](LICENSE).\n\n### Problem Solving Tips\n- If you get compile errors after updating your EF Models, delete the obj and bin folders from your project and then rebuild. \n- If you are having issues with authentication or any other strange behavior try using Incognito mode / different browser. \n- Make sure you have all pre-requisites installed.\n- Keep It Simple Stupid: If you are running into issues with SQL / connection string. First CHECK both appsettings.json (appsettings.production.json for production) and (appsettings.development.json for development). \n- If still failing get on [Gitter BlazorBoilerplate](https://gitter.im/blazorboilerplate/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n for Blazor Boilerplate or  [Gitter aspnet/Blazor](https://gitter.im/aspnet/Blazor?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge).\n- Debugging is very limited on WebAssembly / Client-side Blazor. Use Debug_SSB for debugging the UI. Just be aware of browser caching issues when switching modes.\n The server side of the project can easily be debugged, just not there yet on the client-side code.\n- If you are getting compiler errors try and close VS delete your .vs directory in the solution folder. If that doesn't work delete the solution and redownload the repo.\n \n### Postgres Support\n*Note this might be out of date.. Delete Existing Migrations in the BlazorBoilerplate.Server/Migrations Folder and then create your own migrations:  \n  -`dotnet ef --startup-project ..\\BlazorBoilerplate.Server migrations add InitialApplicationDbMigration --context ApplicationDbContext -o Migrations\\ApplicationDb`  \n\n### Docker Support\n- Prerequisite: Install [Docker Desktop](https://go.microsoft.com/fwlink/?linkid=847268) \n- Include / Reload **docker-compose** project in solution.\n- [Do Docker stuff](https://docs.docker.com/v17.09/docker-for-windows/install/) - I don't have much experience with Docker.\n- In the command line go to the Utils folder and run \"docker-compose build\". Once complete run \"docker-compose up\"\n- The following will happen in the **browser** with ASPNETCORE_ENVIRONMENT=Development:\n- Connecting via localhost in chrome or firefox: You will get a console error: \"Cannot assign requested address (localhost:port)\" - because the js client is trying to connect to your local machine rather than the docker container. Login will not work. \n- Connecting over external ip address/dns: Login will work, but you will get a console error in the following scenarios:\n- In chrome over http: Cannot read property 'register' of undefined. Login works. After login: There is no additional error.\n- In chrome over https: 1) An SSL certificate error occurred when fetching the script; 2) DOMException: Failed to register a ServiceWorker for scope ('https://x.x.x.x:port/') with script ('https://x.x.x.x:port/service-worker.js'); Login works. After login: There is no additional error.\n- In firefox over http: 1) navigator.serviceWorker is undefined. Login works. After login: WebSocket is not in the OPEN state\n- In firefox over https: 1) No errors. Login works. After login: WebSocket is not in the OPEN state. \n- In ASPNETCORE_ENVIRONMENT=Production: http will redirect to https. If you are using a self signed/invalid ssl certificate the following will occur:\n- In chrome or firefox over https: Same as above except login will fail. After login attempt: There was an unhandled exception on the current circuit, so this circuit will be terminated.\n- Note: In Production, if the httpClientHandler server certificate validation returns false (caused by a self signed/invalid ssl certificate) then the login will fail. In Development, overriding the certificate validation via ServerCertificateCustomValidationCallback = () => { return true; } prevents the ssl cert validation from failing which causes the login to succeed.\n\n### Azure Support\n- [Azure Hosting Wiki](https://github.com/enkodellc/blazorboilerplate/wiki/Hosting-Blazor-boilerplate-on-Microsoft-Azure) \n- *Note that Azure isn't as up to date with their SDK as Blazor Boilerplate so you might have to use an older version\n\n## News\n### 7.0.17 Net Core 7\n-  Moved the version to coincide with .Net.\n-  Removed IS4 since Duende took control and their license was not inline with our production uses and we really didn't need it.\n\n### 4.0.0 Net Core 6\n- MudBlazor 6\n- EF 5 - Waiting on Breeze Updates\n- Nuget Package Updates\n\n### 3.1.0 MudBlazor\n- Virtual Table \n- MudBlazor 5\n- .net Core 6, VS 2019, Linux Friendly\n\n### 3.0.0 Net Core 5\n\n### 2.0.0 Development is now Master  (Major Project Refactor - Thanks GioviQ) ([Documentation](https://blazor-boilerplate.readthedocs.io/en/latest/))\n- Localization Support. Thanks [GioviQ](https://github.com/GioviQ) \n- DotNet Template Solution. Thanks [GioviQ](https://github.com/GioviQ) \n- Update to Identity Server 4.1.0,. Thanks [GioviQ](https://github.com/GioviQ) \n- [Demo for Development Branch - SSB](https://blazor-server.quarella.net/)\n- [Demo for Development Branch - CSB](https://blazor-wasm.quarella.net/)\n- Nuget Package Updates / WebAssembly 3.2.1\n\n### 1.0.0 - Master branch\n- Nuget Package updates Blazor 3.2 - Production!\n\n### 0.8.2 - Master branch\n- Nuget Package updates \n\n### 0.8.1 Stable - Master branch\n- Blazor WebAssembly 3.2.0 Preview 5\n- Nuget Package updates \n\n### 0.8.0 (Major Project Refactor - Thanks DanielBunting)\n- Refactor Project Architecture. Thanks [DanielBunting](https://github.com/DanielBunting) \n- Add Initial Tests. Thanks [DanielBunting](https://github.com/DanielBunting) \n- Project Code Review. Thanks [GioviQ](https://github.com/GioviQ) \n- Revised AuthorizationPolicyProvider. Thanks [mobinseven](https://github.com/mobinseven) \n- Server-side Multi-Tenant V.1 (Not working / No UI) - Thanks [mobinseven](https://github.com/mobinseven) \n- SQL Server Error Logging with Serilog Thanks [np-at](https://github.com/np-at)\n- Added Ultramapper for Dto restore / clone. Thanks [GioviQ](https://github.com/GioviQ) \n\n### 0.7.0 (Breaking Changes)\n- .NET Core 3.2 Preview 1- Microsoft & Other Nuget package updates - Program.cs refactored for CSB\n- MatBlazor 2.1.2\n- Server-Side Blazor Auth Cookie Issue [#138](https://github.com/enkodellc/blazorboilerplate/issues/138) -  Thanks [marcotana](https://github.com/marcotana)\n- Exit from Login dialog [#139](https://github.com/enkodellc/blazorboilerplate/issues/139) -  Thanks [Oleg26Dev](https://github.com/Oleg26Dev)\n- Focus on Login Form Entry - Thanks [responsive-edge](https://github.com/responsive-edge)\n- Azure Hosting Wiki and Project update - Thanks [soomon](https://github.com/soomon)\n- Known Issue with new project structure - Breaks CSB Debugging (shift + alt + d) - Expect fix in .Net Core 3.2 preview 2. Use SSB for debugging.\n\n### 0.6.1 (No Major Breaking Changes)\n- .NET Core 3.1.1 - Microsoft Nuget package updates - security patches no code changes \n- Known Issue with new project structure - Breaks CSB Debugging (shift + alt + d) - Expect fix in .Net Core 3.2 preview 2. Use SSB for debugging.\n\n### 0.6.0 (Major Breaking Changes)\n- Dual Mode CSB & SSB [View Wiki](https://github.com/enkodellc/blazorboilerplate/wiki/Dual-Mode-CSB---SSB-Tips). Thanks [MarkStega](https://github.com/MarkStega)\n    - There are changes to solution structure for Dual Mode. Switching modes can be tricky with the browser cache so if you see something strange use incognito mode or a different browser. \n    Best solution is to pick your version and stick with it, then expect to clear cache when switching. Read the Wiki!\n    - Known Issue with new project structure - Breaks CSB (shift + alt + d) Debugging - Expect fix in .Net Core 3.2 preview 2 . Use SSB for debugging.\n\n### 0.5.0\n- MatBlazor 2.0 Breaking Changes\n- .NET Core 3.1.0 / v3.1.0-preview4 Blazor Nuget package updates\n- Admin Roles / Permissions Management. Thanks [vd3d](https://github.com/vd3d)\n- Fix Login EditForm / Double submit of Login. Thanks [MarkStega](https://github.com/MarkStega)\n- UserProfile Fixes. Thanks [mobinseven](https://github.com/mobinseven)\n- Chrome Cookie updates. Thanks [oneparameter](https://github.com/oneparameter)\n    \n### 0.4.0\n - Docker Support. Thanks [npraskins](https://github.com/npraskins) & [acid12](https://github.com/acid12)\n - Fixed IAuditable / ShadowProperties for CreatedOn, CreatedBy, ModifiedOn, ModifiedBy.  Thanks [acid12](https://github.com/acid12)\n - Known Issues:\n    - Drag and Drop example does not work in FF. Known FF issue.\n\n### 0.3.2 \n- Identity Server 4 - Authentication with ASP.Net Identity Authorization with Policies  \n- v3.1.0-preview3 / Nuget Package updates\n- Authorize / Policy Examples on Users Page\n- Known Issues: \n  - IAuditable Shadow Properties not getting UserId\n  - Drag and Drop example does not work in FF. Known FF issue.\n\n### 0.3.0 - IS4 (Breaking Changes from 0.2.3)\n- Identity Server 4 First Release - Delete your DB! Thanks to [ganmuru](https://github.com/ganmuru)\n- User Profile Store Last Page Visited / Return on Login\n- .NET Core 3.0.100 / Blazor 3.0.0-preview9.19457.4 update\n- Known Issues: \n  - IAuditable Shadow Properties not getting UserId\n\n### 0.2.3 - .Net Core Authentication / Authorization (Stable Version)\n- .NET Core 3.0.100 / Blazor 3.0.0-preview9.19457.4 update\n- Known Issues: \n  - IAuditable Shadow Properties not getting UserId\n\n### 0.2.2 \n- Drag and Drop Examples\n- .NET Core 3.0.0-rc1.19457.4 update\n- Known Issues: \n  - IAuditable Shadow Properties not getting UserId\n\n### 0.2.1 \n- Update to .NET Core 3.0 Preview 9\n- User Management Screen (CRUD) & User Password Reset - Thanks [npraskins](https://github.com/npraskins) \n- Confirmation Delete Dialog Stylize & Implementation\n- Known Issues: \n  - IAuditable Shadow Properties not getting UserId\n\n### 0.2.0 \n- CRUD Todo List example\n- Restructure Project Refactor BlazorBoilerplate.Shared for N-Tier Design\n- Automapper for Client (dto) / Server Models\n- Removed old Migrations. Recommend to delete your database to start new.\n- Implement ShadowProperties for Auditable, SoftDelete Interfaces for Models (In Progress)\n- DB Seed Data\n- Forum chat and notification system - Thanks <a href=\"https://github.com/ajgoldenwings\" target=\"_blank\">ajgoldenwings</a>\n- Known Issues: \n  - IAuditable Shadow Properties not getting UserId\n\n### 0.1.9\n- Update to SDK 3.0.0-preview8-28405-07\n- Added IpAddress and UserId to Middleware ApiLogging\n- Review / Fix VS code Warnings and Information notice. Clean up code.\n- UserProfile - Beta\n- MatBlazor 1.6.0\n\n### 0.1.8\n- Middleware to log Api Requests and Responses for auditing and debugging. Thanks [salslab](https://github.com/salslab/AspNetCoreApiLoggingSample)\n- Middleware for consistent API Responses and Exception Handling. Thanks [proudmonkey](http://vmsdurano.com/asp-net-core-and-web-api-a-custom-wrapper-for-managing-exceptions-and-consistent-responses/)\n- Email Pop3 / IMAP retrieval. Thanks [npraskins](https://github.com/npraskins)\n- Responsive Navigation / Closed / Full / Minified / Minified & Hover effect\n- Added MatNavMenu PR for MatBlazor - Ver 1.5\n- Updated demo site for new MatNavMenu and rest of 0.1.8 code\n\n### 0.1.7\n- User Profile Management\n- Refactor Email Settings and API\n- MatBlazor 1.3.0\n- Migrate to .NET Core 3.0\n\n### 0.1.6 \n- Email confirmation on Registration \n  - Configure Email Configuration in server appsettings.json\n  - Set \"RequireConfirmedEmail\" to true in appsettings.json\n- Forgot Password\n  - Configure Email Configuration in server appsettings.json\n- Updated Email Templates for Forgot Password \n  \n### 0.1.5\n- Added Azure DevOps Pipeline for build status\n- Added Update Email Templates\n- Implemented New User Registration Email Template\n- Implement AuthorizeView for Theme\n- Breakout Theme Components \n\n### 0.1.4\n- Add Mailkit for Email - Future work to add Email Templates\n- Started API Auth CascadingAuthenticationState / Polices / Claims\n- Added SQL Server as a DB option\n\n### 0.1.3\n- Update to MatBlazor 1.2.1 - Not yet released so using local copy\n- Update Theme / Drawer minify & close\n- Fixed Known Issue - UserProfile not loading after login. Thanks [nstohler](https://github.com/nstohler)\n- Secure Pages.\n- Anonymous Home Page.\n\n### 0.1.2\n- Update to SDK 3.0.100-preview6-012264 - Breaking Changes\n- Update to MatBlazor 1.2\n- Update Theme\n- Known Issue - UserProfile not loading after login\n- Registration Form added Form Validation\n- Todo Table Fetch from API Example\n\n###  0.1.1\n- Updated Theme / Responsive\n- Added Serilog Log Files\n\n### 0.1.0\n- Initial release\n"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 0.9404296875,
          "content": "# ASP.NET\n# Build and test ASP.NET projects.\n# Add steps that publish symbols, save build artifacts, deploy, and more:\n# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4\n\npool:\n  vmImage: 'windows-2019'\n\nvariables:\n  solution: '**/*.sln'\n  buildPlatform: 'Any CPU'\n  buildConfiguration: 'Release'\n\n\nsteps:\n- task: UseDotNet@2\n  displayName: 'Install SDK'\n  inputs:\n    packageType: sdk\n    version: '7.0.x'\n    includePreviewVersions: true\n\n# - task: NuGetToolInstaller@0\n\n- script: dotnet build ./src/BlazorBoilerplate.sln --configuration $(buildConfiguration)\n  displayName: 'dotnet build blazorboilerplate'\n\n- task: DotNetCoreCLI@2\n  displayName: 'Publishing App...'\n  inputs:\n    command: publish\n    publishWebProjects: true\n    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'\n    zipAfterPublish: false\n\n- task: PublishBuildArtifacts@1\n  displayName: 'Publishing Build Artifacts...'\n"
        },
        {
          "name": "createLocalTemplate.cmd",
          "type": "blob",
          "size": 0.0283203125,
          "content": "cd src\ndotnet new -i .\\\npause"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}