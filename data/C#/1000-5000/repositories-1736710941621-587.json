{
  "metadata": {
    "timestamp": 1736710941621,
    "page": 587,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dotnet-presentations/dotnet-maui-workshop",
      "stars": 1902,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.8681640625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n.idea/\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n"
        },
        {
          "name": "Art",
          "type": "tree",
          "content": null
        },
        {
          "name": "Community Modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 1.580078125,
          "content": "<Project>\n\t<PropertyGroup>\n\t\t<SupportedOSPlatformVersion Condition=\"'$(TargetFramework)' == 'net9.0-ios'\">15.0</SupportedOSPlatformVersion>\n\t\t<SupportedOSPlatformVersion Condition=\"'$(TargetFramework)' == 'net9.0-maccatalyst'\">15.0</SupportedOSPlatformVersion>\n\t\t<SupportedOSPlatformVersion Condition=\"'$(TargetFramework)' == 'net9.0-android'\">21.0</SupportedOSPlatformVersion>\n\t\t<SupportedOSPlatformVersion Condition=\"$(TargetFramework.Contains('-windows'))\">10.0.17763.0</SupportedOSPlatformVersion>\n\t\t<TargetPlatformMinVersion Condition=\"$(TargetFramework.Contains('-windows'))\">10.0.17763.0</TargetPlatformMinVersion>\n\t\t<SupportedOSPlatformVersion Condition=\"$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'\">6.5</SupportedOSPlatformVersion>\n\t\t\n\t\t<MauiEnableXamlCBindingWithSourceCompilation>true</MauiEnableXamlCBindingWithSourceCompilation>\n\t</PropertyGroup>\n\n\t<!-- Build Properties must be defined within these property groups to ensure successful publishing\n\tto the Mac App Store. See: https://aka.ms/maui-publish-app-store#define-build-properties-in-your-project-file -->\n  <PropertyGroup Condition=\"$(TargetFramework.Contains('-maccatalyst')) and '$(Configuration)' == 'Debug'\">\n    <CodesignEntitlements>Platforms/MacCatalyst/Entitlements.Debug.plist</CodesignEntitlements>\n  </PropertyGroup>\n\n  <PropertyGroup Condition=\"$(TargetFramework.Contains('-maccatalyst')) and '$(Configuration)' == 'Release'\">\n    <CodesignEntitlements>Platforms/MacCatalyst/Entitlements.Release.plist</CodesignEntitlements>\n    <UseHardenedRuntime>true</UseHardenedRuntime>\n  </PropertyGroup>\n</Project>"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 1.109375,
          "content": "<Project>\n\t<ItemGroup>\n\t\t<PackageReference Include=\"CommunityToolkit.Mvvm\" Version=\"8.3.2\" />\n\t\t<PackageReference Include=\"Microsoft.Extensions.Logging.Debug\" Version=\"9.0.*-*\" />\n\t</ItemGroup>\n\n\t<ItemGroup Condition=\"$(TargetFramework.Contains('-windows'))\">\n\t\t<!-- Required - WinUI does not yet have buildTransitive for everything -->\n\t</ItemGroup>\n\n\t<PropertyGroup>\n\n\t\t<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->\n\t\t<!-- <TargetFrameworks>$(TargetFrameworks);net9.0-tizen</TargetFrameworks> -->\n\n\t\t<!-- Note for MacCatalyst:\n\t\tThe default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.\n\t\tWhen specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifer>.\n\t\tThe Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;\n\t\teither BOTH runtimes must be indicated or ONLY macatalyst-x64. -->\n\t\t<!-- ex. <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->\n\t</PropertyGroup>\n</Project>\n"
        },
        {
          "name": "Finish",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0673828125,
          "content": "MIT License\n\nCopyright (c) 2022 .NET Presentations: Events in a Box!\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Part 0 - Overview",
          "type": "tree",
          "content": null
        },
        {
          "name": "Part 1 - Displaying Data",
          "type": "tree",
          "content": null
        },
        {
          "name": "Part 2 - MVVM",
          "type": "tree",
          "content": null
        },
        {
          "name": "Part 3 - Navigation",
          "type": "tree",
          "content": null
        },
        {
          "name": "Part 4 - Platform Features",
          "type": "tree",
          "content": null
        },
        {
          "name": "Part 5 - CollectionView",
          "type": "tree",
          "content": null
        },
        {
          "name": "Part 6 - AppThemes",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.2255859375,
          "content": "# .NET MAUI - Workshop\n\nToday we will build a [.NET MAUI](https://docs.microsoft.com/dotnet/maui?WT.mc_id=friends-mauiworkshop-jamont) application that will display a list of Monkeys from around the world. We will start by building the business logic backend that pulls down json-encoded data from a RESTful endpoint. We will then leverage [.NET MAUI](https://docs.microsoft.com/xamarin/essentials/index?WT.mc_id=friends-mauiworkshop-jamont) to find the closest monkey to us and also show the monkey on a map. We will also see how to display data in many different ways and then finally fully theme the application.\n\n## Languages\nThis workshop is available in the following languages:\n* English - default README files\n* [Chinese (Simplified)](README.zh-cn.md) - README files ending with .zh-cn.md (Translated by [Kinfey Lo](https://github.com/kinfey))\n* [Chinese (Traditional)](README.zh-tw.md) - README filed ending with .zh-tw.md (Translated by [James Tsai](https://github.com/JamestsaiTW))\n\n## Setup Guide\nHey there! This workshop will be a hands on and a bring your own device workshop. You can develop on PC,  Mac, or Linux and all you will need to do is install Visual Studio 2022 with the .NET MAUI Workshop or Visual Studio Code with the .NET MAUI extension. It is built on .NET 9, which means you will need version 17.12 of Visual Studio 2022 or newer. See [full installation guide for .NET MAUI](https://learn.microsoft.com/dotnet/maui/get-started/installation?view=net-maui-9.0) for more information.\n\nBefore starting the workshop, I recommend going through the quick 10 minute [.NET MAUI Tutorial](https://docs.microsoft.com/dotnet/maui/get-started/first-app?WT.mc_id=friends-mauiworkshop-jamont) that will guide you through installation and also ensuring everything is configured correct.\n\nIf you are new to mobile development, we recommend deploying to a physical Android device which can be setup in just a few steps. If you don't have a device, don't worry as you can setup an [Android emulator with hardware acceleration](https://docs.microsoft.com/xamarin/android/get-started/installation/android-emulator?WT.mc_id=friends-mauiworkshop-jamont). If you don't have time to set this up ahead of time, don't worry as we are here to help during the workshop.\n\nBeyond that you will be good to go for the workshop!\n\n## Agenda\nI have also put together an abstract of what you can expect for the day long workshop:\n\n* [Part 0](Part%200%20-%20Overview/README.md) - 30 Min Session - Introduction to .NET MAUI Session & Setup Help\n* [Part 1](Part%201%20-%20Displaying%20Data/README.md) - Single Page List of Data\n* [Part 2](Part%202%20-%20MVVM/README.md) - MVVM & Data Binding\n* [Part 3](Part%203%20-%20Navigation/README.md) - Navigation\n* [Part 4](Part%204%20-%20Platform%20Features/README.md) - Implementing Platform Features\n* [Part 5](Part%205%20-%20CollectionView/README.md) - CollectionView & Beyond\n* [Part 6](Part%206%20-%20AppThemes/README.md) - Theming the app\n\nTo get started open the `Part 1 - Displaying Data` folder and open `MonkeyFinder.sln`. You can use this throughout the workshop. Each **part** has a **README** file with directions for that part. If you came in late, you can open any of the folders and  there is a starting project for that section.\n\n## Video Walkthrough\nJames recorded a [full 4-hour walkthrough](https://www.youtube.com/watch?v=DuNLR_NJv8U) end-to-end on [his YouTube](https://youtube.com/jamesmontemagno)!\n\n## Blazor Hybrid Workshop\n\nIf you want to learn more about Blazor Hybrid too, then we have got [another great workshop](https://aka.ms/blazor-hybrid-workshop) lined up for you!\n\nIn this workshop you will build the same app as in this one, the Monkey Finder app, but now using Blazor Hybrid. By doing both workshops, you can really see the differences and similarities between the two approaches.\n\n## More links and resources:\n- [.NET MAUI Website](https://dot.net/maui)\n- [.NET MAUI on Microsoft Learn](https://docs.microsoft.com/learn/paths/build-apps-with-dotnet-maui/)\n- [.NET MAUI Documentation](https://docs.microsoft.com/dotnet/maui) \n- [.NET MAUI on GitHub](https://github.com/dotnet/maui)\n- [.NET Beginner Series Videos](https://dot.net/videos)\n\nIf you have any questions please reach out to me on Twitter [@JamesMontemagno](https://twitter.com/jamesmontemagno). \n"
        },
        {
          "name": "README.zh-cn.md",
          "type": "blob",
          "size": 3.4384765625,
          "content": "# .NET MAUI - 动手实验手册\n\n今天我们将会构建一个 [.NET MAUI](https://docs.microsoft.com/dotnet/maui?WT.mc_id=friends-mauiworkshop-jamont) 的应用程序，它将显示来自世界各地的猴子列表。 我们将从构建业务逻辑后端开始，该后端从 RESTful 端点提取 json 编码的数据。 然后，我们将利用 [.NET MAUI](https://docs.microsoft.com/xamarin/essentials/index?WT.mc_id=friends-mauiworkshop-jamont) 找到离我们最近的猴子，并将猴子展示在地图上。 我们还将学习到如何用多种不同的方式显示数据，最后开发一个完整的主题化应用程序。\n\n## 动手实验环境需知\n本次实验将是一个需要动手和自备设备的实验。您可以在 PC（推荐）或 Mac 上进行开发，您需要做的就是安装带有 .NET MAUI workload 的 Visual Studio 2022 或 Visual Studio Code.\n\n在开始本实验系列之前，我建议先用10分钟快速阅读 [.NET MAUI 教程](https://docs.microsoft.com/dotnet/maui/get-started/first-app?WT.mc_id=friends-mauiworkshop-jamont)，它将指导您完成安装和正确配置好所需要的实验环境。\n\n如果您是移动应用开发的新手，我们建议您把应用直接部署到 Android 设备(只需几个步骤即可完成有关设置)。如果您没有设备，请不用担心，因为您可以设置 [具有硬件加速功能的 Android 模拟器](https://docs.microsoft.com/xamarin/android/get-started/installation/android-emulator?WT.mc_id=friends-mauiworkshop-jamont)。如果您没有时间提前准备好相关设置，也不要担心，因为我们会在实验期间提供有关的提示和帮助。\n\n## 实验内容\n\n这是本次实验的有关内容：\n\n* [实验准备](Part%200%20-%20Overview/README.zh-cn.md) - 介绍 .NET MAUI 基本知识以及环境安装 \n* [实验一: 显示数据](Part%201%20-%20Displaying%20Data/README.zh-cn.md) - 实现单页数据列表\n* [实验二: MVVM 和数据绑定](Part%202%20-%20MVVM/README.zh-cn.md) - MVVM 设计模式和数据绑定\n* [实验三: 添加导航页面](Part%203%20-%20Navigation/README.zh-cn.md) - 为应用添加导航\n* [实验四: 访问平台特性](Part%204%20-%20Platform%20Features/README.zh-cn.md) - 实现不同平台特定功能\n* [实验五: 为 CollectionView 添加下拉刷新](Part%205%20-%20CollectionView/README.md) - CollectionView 使用技巧\n* [实验六: 应用程序主题设置](Part%206%20-%20AppThemes/README.zh-cn.md) - 主题化应用\n\n\n要开始使用，请打开“Part 1 - Displaying Data”文件夹并打开“MonkeyFinder.sln”。 您可以在整个实验过程中使用该项目。 每个**实验**都有一个 **README** 文件，其中包含该步骤实验过程的说明。 您也可以打开任何步骤的文件夹，里面都有一个和步骤对应的项目，您也可以打开来查看每一步的实现。\n\n## 教学视频\nJames 已经录制了4个小时的完整有关本次实验的手把手教学视频，各位小伙伴请到 [James 的 YouTube 频道](https://youtube.com/jamesmontemagno) 观看\n\n## 更多链接和资源：\n- [.NET MAUI 官方网站](https://dot.net/maui)\n- [Microsoft Learn 上的 .NET MAUI 的学习路径](https://aka.ms/Learn.MAUI)\n- [.NET MAUI 官方文档](https://aka.ms/Docs.MAUI)\n- [GitHub 上的 .NET MAUI 项目](https://github.com/dotnet/maui)\n- [.NET 初学者入门系列视频](https://dot.net/videos)\n\n\n如果您有任何问题，请在 Twitter 上与[@JamesMontemagno](https://twitter.com/jamesmontemagno) 联系。\n\n\n"
        },
        {
          "name": "README.zh-tw.md",
          "type": "blob",
          "size": 4.8193359375,
          "content": "# .NET MAUI 的 Hands-on Lab 手冊\n\n今天我們將會透過 [.NET MAUI](https://docs.microsoft.com/dotnet/maui?WT.mc_id=EM-MVP-5001645) 技術建構出一個跨平台執行的應用程式，它將會透過列表的方式來展示來自世界各地的猴子資料。首先我們將從使用網際網路服務的應用邏輯開始，此服務會以 RESTful API 的方式來回應用 json 格式表示的猴子資料。接著，在此 [.NET MAUI](https://docs.microsoft.com/xamarin/essentials/index?WT.mc_id=EM-MVP-5001645) 的應用程式中，透過 [.NET MAUI](https://docs.microsoft.com/xamarin/essentials/index?WT.mc_id=EM-MVP-5001645) 所設計的 API 使用，來撰寫搜尋如何計算與搜尋到當前距離最近的猴子，並透過 API 從此應用程式轉跳到平台裝置內建的地圖應用來呈現來展示猴子所在的地點。當然也將會學到更多利用不同的方式來呈現資料，並在最後學習到讓應用程式如何自動適應系統佈景主題的深色或淺色模式的調整處理。\n\n## Hands-on Lab 環境設定\n操作此 Hands-on Lab 是需要自己實際動手與設定相關設備的。您將可以在 PC（推薦）或 Mac 上進行開發，您需要做的就是先安裝好在 Visual Studio 2022 或 Visaul Studio Code，並確認有設定 .NET MAUI 工作負載的安裝。\n\n在開始著手進行此 Hands-on Lab 前，會建議先用 10 分鐘左右的時間來閱讀一下 [.NET MAUI 教學](https://docs.microsoft.com/dotnet/maui/get-started/first-app?WT.mc_id=EM-MVP-5001645)，在此教學中會指導您安裝與正確地設置好，要進行此 Hands-on Lab 所需的開發環境。\n\n如果您是行動應用開發的新手，會建議您直接把應用程式直接部署到 Android 實體裝置中 (通常只需幾個步驟就可以完成相關的設置) 進行測試。當然，如果您沒有 Android 的實體裝置可以使用，也不用擔心，可以透過設定 [具有硬體加速功能的 Android 模擬器](https://docs.microsoft.com/xamarin/android/get-started/installation/android-emulator?WT.mc_id=EM-MVP-5001645) 的方式來使用模擬器進行測試。而如果真的沒有時間能提前準備好相關的設定，也沒關係的，在此 Hands-on Lab 的進行過程中，都會盡可能的有相關的對應提示和可能幫助介紹。\n\n## Hands-on Lab 各個 Part 內容\n\n有關此 Hands-on Lab 的各個 Part 內容介紹：\n\n* [Hands-on Lab Part 0: 約 30 分鐘的環節](Part%200%20-%20Overview/README.zh-tw.md) - 有關 .NET MAUI 的基本知識與其開發環境的安裝介紹 \n* [Hands-on Lab Part 1: 呈現出資料](Part%201%20-%20Displaying%20Data/README.zh-tw.md) - 實作單頁資料呈現列表\n* [Hands-on Lab Part 2: MVVM 和資料繫結](Part%202%20-%20MVVM/README.zh-tw.md) - MVVM 框架設計和資料繫結\n* [Hands-on Lab Part 3: 增加巡覽功能](Part%203%20-%20Navigation/README.zh-tw.md) - 幫 App 增加巡覽功能進行頁面轉跳\n* [Hands-on Lab Part 4: 了解平台特性](Part%204%20-%20Platform%20Features/README.zh-tw.md) - 實現不同平台的特定功能\n* [Hands-on Lab Part 5: 幫 CollectionView 增加下拉更新](Part%205%20-%20CollectionView/README.zh-tw.md) - 增加下拉更新資料功能並學習 CollectionView 多資料呈現控制項的使用技巧\n* [Hands-on Lab Part 6: 設定 App 的佈景主題](Part%206%20-%20AppThemes/README.zh-tw.md) - 有關 App 如何針對淺色/深色模式的處理佈景主題的設置\n\n\n要開始進行此 Hands-on Lab，請開啟「Part 1 - Displaying Data」資料夾並開啟 「MonkeyFinder.sln」。可以在整個 Hands-on Lab 進行的過程中持續的使用此一開始的專案。而為確保每個階段的進行，除了在 **Hands-on Lab 的 Part** 都有一個 **README** 文件，有對 Hands-on Lab 在此 Part 的過程中進行內容的說明。同時，也在任何一個 Part 的資料夾當中，都找到對應該個 Part 的專案程式，您也可以直接開啟該 Part 資料夾中的專案，來開始進行此 Part 要完成的內容，然後在透過下一個 Part 的專案來確認完成後應有的結果。\n\n## 教學影片\nJames Montemagno 已有錄製大約 4 小時有關此 Hands-on Lab 的 Step by Step 教學影片，各位捧友們可以到 [James Montemagno 的 YouTube 频道](https://youtube.com/jamesmontemagno) 觀看學習\n\n## 更多連結和資源：\n- [.NET MAUI 官方網站](https://dot.net/maui)\n- [Microsoft Learn 上的 .NET MAUI 的學習路徑](https://aka.ms/Learn.MAUI)\n- [.NET MAUI 官方文件](https://aka.ms/Docs.MAUI)\n- [GitHub 上的 .NET MAUI 專案](https://github.com/dotnet/maui)\n- [.NET 初心者的入門系列影片集](https://dot.net/videos)\n\n\n如果您有任何問题，也可以到 Twitter 上與 [@JamesMontemagno](https://twitter.com/jamesmontemagno) 聯繫，也可到 Facebook 的 [Xamarin Asia Developers 社群](https://www.facebook.com/groups/XamarinAsiaDevelopers/) 來提問。\n\n\n"
        },
        {
          "name": "Slides",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}