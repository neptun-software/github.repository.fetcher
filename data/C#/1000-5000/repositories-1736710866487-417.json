{
  "metadata": {
    "timestamp": 1736710866487,
    "page": 417,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "BookerLiu/GeekDesk",
      "stars": 2355,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.6103515625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- Backup*.rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb"
        },
        {
          "name": "App.config",
          "type": "blob",
          "size": 4.3115234375,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n\t<configSections>\n\t\t<section name=\"SystemIcons\" type=\"System.Configuration.DictionarySectionHandler\" />\n\t\t<section name=\"ShowSecondsSettings\" type=\"System.Configuration.DictionarySectionHandler\" />\n\t\t<section name=\"SystemBGs\" type=\"System.Collections.ObjectModel.ObservableCollection\" />\n\t\t<section name=\"GradientBGParam\" type=\"GeekDesk.ViewModel.GradientBGParam\" />\n\t</configSections>\n\t<ShowSecondsSettings>\n\t\t<add key=\"Version\" value=\"1.0.01\" />\n\t\t<add key=\"LProportion\" value=\"0.82\" />\n\t\t<add key=\"TProportion\" value=\"0.03\" />\n\t\t<add key=\"DelayTime\" value=\"1500\" />\n\t</ShowSecondsSettings>\n\t<SystemIcons>\n\t\t<add key=\"Calculator\" value=\"è®¡ç®å¨\" />\n\t\t<add key=\"Computer\" value=\"æ­¤çµè\" />\n\t\t<add key=\"GroupPolicy\" value=\"ç»ç­ç¥\" />\n\t\t<add key=\"Network\" value=\"ç½ç»è¿æ¥\" />\n\t\t<add key=\"RecycleBin\" value=\"åæ¶ç«\" />\n\t\t<add key=\"Registry\" value=\"æ³¨åè¡¨ç¼è¾å¨\" />\n\t\t<add key=\"Notepad\" value=\"è®°äºæ¬\" />\n\t\t<add key=\"Mstsc\" value=\"è¿ç¨æ¡é¢è¿æ¥\" />\n\t\t<add key=\"Control\" value=\"æ§å¶é¢æ¿\" />\n\t\t<add key=\"CMD\" value=\"å½ä»¤è¡\" />\n\t\t<add key=\"Services\" value=\"æå¡\" />\n\t</SystemIcons>\n\t<SystemBGs>\n\t\t<GradientBGParam Color1=\"#FCCF31\" Color2=\"#F55555\" Name=\"è¯¸ç¥é»æ\" />\n\t</SystemBGs>\n\t<startup>\n\t\t<supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.7.2\" />\n\t</startup>\n\t<runtime>\n\t\t<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\n\t\t\t<probing privatePath=\"lib;Plugins\\EveryThing\\lib\" />\n\t\t\t<dependentAssembly>\n\t\t\t\t<assemblyIdentity name=\"CommonServiceLocator\" publicKeyToken=\"489b6accfaf20ef0\" culture=\"neutral\" />\n\t\t\t\t<bindingRedirect oldVersion=\"0.0.0.0-2.0.6.0\" newVersion=\"2.0.6.0\" />\n\t\t\t</dependentAssembly>\n\t\t\t<dependentAssembly>\n\t\t\t\t<assemblyIdentity name=\"System.Runtime.CompilerServices.Unsafe\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\n\t\t\t\t<bindingRedirect oldVersion=\"0.0.0.0-4.0.6.0\" newVersion=\"4.0.6.0\" />\n\t\t\t</dependentAssembly>\n\t\t\t<dependentAssembly>\n\t\t\t\t<assemblyIdentity name=\"System.Threading.Tasks.Extensions\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\n\t\t\t\t<bindingRedirect oldVersion=\"0.0.0.0-4.2.0.1\" newVersion=\"4.2.0.1\" />\n\t\t\t</dependentAssembly>\n\t\t\t<dependentAssembly>\n\t\t\t\t<assemblyIdentity name=\"Newtonsoft.Json\" publicKeyToken=\"30ad4fe6b2a6aeed\" culture=\"neutral\" />\n\t\t\t\t<bindingRedirect oldVersion=\"0.0.0.0-13.0.0.0\" newVersion=\"13.0.0.0\" />\n\t\t\t</dependentAssembly>\n\t\t\t<dependentAssembly>\n\t\t\t\t<assemblyIdentity name=\"System.Memory\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\n\t\t\t\t<bindingRedirect oldVersion=\"0.0.0.0-4.0.1.1\" newVersion=\"4.0.1.1\" />\n\t\t\t</dependentAssembly>\n\t\t\t<dependentAssembly>\n\t\t\t\t<assemblyIdentity name=\"Microsoft.Extensions.Logging.Abstractions\" publicKeyToken=\"adb9793829ddae60\" culture=\"neutral\" />\n\t\t\t\t<bindingRedirect oldVersion=\"0.0.0.0-2.1.1.0\" newVersion=\"2.1.1.0\" />\n\t\t\t</dependentAssembly>\n\t\t</assemblyBinding>\n\t</runtime>\n\t<appSettings>\n\t\t<add key=\"Version\" value=\"2.5.14\" />\n\t\t<add key=\"GitHubUrl\" value=\"https://github.com/BookerLiu/GeekDesk\" />\n\t\t<add key=\"GiteeUrl\" value=\"https://gitee.com/BookerLiu/GeekDesk/tree/master\" />\n\t\t<add key=\"GitHubUpdateUrl\" value=\"https://raw.githubusercontent.com/BookerLiu/GeekDesk/master/Update.json\" />\n\t\t<add key=\"GiteeUpdateUrl\" value=\"https://gitee.com/BookerLiu/GeekDesk/raw/master/Update.json\" />\n\t\t<!--<add key=\"GiteeUpdateUrl\" value=\"file:///D:/WorkSpace/workspace-VS/GeekDesk/Update.json\" />-->\n\t\t<add key=\"ClientSettingsProvider.ServiceUri\" value=\"\" />\n\t\t<add key=\"CustomIconTeachUrl\" value=\"https://mp.weixin.qq.com/s/LxoHAekho9HBVl4FRw_Law\" />\n\t\t<add key=\"ShowPublicWeChat\" value=\"Y\" />\n\t</appSettings>\n\t<system.web>\n\t\t<membership defaultProvider=\"ClientAuthenticationMembershipProvider\">\n\t\t\t<providers>\n\t\t\t\t<add name=\"ClientAuthenticationMembershipProvider\" type=\"System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" serviceUri=\"\" />\n\t\t\t</providers>\n\t\t</membership>\n\t\t<roleManager defaultProvider=\"ClientRoleProvider\" enabled=\"true\">\n\t\t\t<providers>\n\t\t\t\t<add name=\"ClientRoleProvider\" type=\"System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" serviceUri=\"\" cacheTimeout=\"86400\" />\n\t\t\t</providers>\n\t\t</roleManager>\n\t</system.web>\n</configuration>"
        },
        {
          "name": "App.xaml",
          "type": "blob",
          "size": 1.333984375,
          "content": "<Application x:Class=\"GeekDesk.App\" \n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" \n             xmlns:local=\"clr-namespace:GeekDesk\" \n             StartupUri=\"MainWindow.xaml\" \n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \n             d1p1:Ignorable=\"d\" \n             xmlns:d1p1=\"http://schemas.openxmlformats.org/markup-compatibility/2006\">\n  <Application.Resources>\n        <ResourceDictionary>\n            <ResourceDictionary.MergedDictionaries>\n                <ResourceDictionary Source=\"/GeekDesk;component/Resource/Dictionary/Geometry.xaml\"/>\n                <ResourceDictionary Source=\"pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml\"/>\n                <ResourceDictionary Source=\"pack://application:,,,/HandyControl;component/Themes/Theme.xaml\"/>\n                <ResourceDictionary Source=\"/GeekDesk;component/Resource/Dictionary/CommonStyle.xaml\"/>\n                <ResourceDictionary Source=\"pack://application:,,,/XamlFlair.WPF;component/DefaultAnimations.xaml\"/>\n                <ResourceDictionary Source=\"/GeekDesk;component/Resource/Dictionary/XamlFlairSettings.xaml\"/>\n            </ResourceDictionary.MergedDictionaries>\n        </ResourceDictionary>\n  </Application.Resources>\n</Application>"
        },
        {
          "name": "App.xaml.cs",
          "type": "blob",
          "size": 2.4775390625,
          "content": "ï»¿using GeekDesk.Constant;\nusing GeekDesk.Util;\nusing System;\nusing System.Windows;\nusing System.Windows.Input;\nusing System.Windows.Threading;\n\nnamespace GeekDesk\n{\n    /// <summary>\n    /// App.xaml çäº¤äºé»è¾\n    /// </summary>\n    public partial class App : Application\n    {\n\n        System.Threading.Mutex mutex;\n\n        public App()\n        {\n            this.Startup += new StartupEventHandler(App_Startup);\n            Application.Current.DispatcherUnhandledException += Current_DispatcherUnhandledException;\n            AppDomain.CurrentDomain.UnhandledException += CurrentDomain_UnhandledException;\n        }\n\n        private void App_Startup(object sender, StartupEventArgs e)\n        {\n            mutex = new System.Threading.Mutex(true, Constants.MY_NAME, out bool ret);\n            if (!ret)\n            {\n                System.Threading.Thread.Sleep(2000);\n                mutex = new System.Threading.Mutex(true, Constants.MY_NAME, out ret);\n                if (!ret)\n                {\n                    MessageUtil.SendMsgByWName(\n                        \"GeekDesk_Main_\" + Constants.MY_UUID,\n                        \"ShowApp\"\n                        );\n                    Environment.Exit(0);\n                }\n            }\n        }\n\n        void Current_DispatcherUnhandledException(object sender, System.Windows.Threading.DispatcherUnhandledExceptionEventArgs e)\n        {\n            e.Handled = true;//ä½¿ç¨è¿ä¸è¡ä»£ç åè¯è¿è¡æ¶ï¼è¯¥å¼å¸¸è¢«å¤çäºï¼ä¸åä½ä¸ºUnhandledExceptionæåºäºã\n            Mouse.OverrideCursor = null;\n            LogUtil.WriteErrorLog(e, \"æªæè·å¼å¸¸!\");\n            if (Constants.DEV)\n            {\n                MessageBox.Show(\"GeekDeskéå°ä¸ä¸ªé®é¢, ä¸ç¨æå¿, è¿ä¸å½±åå¶å®æä½!\");\n            }\n        }\n\n        void CurrentDomain_UnhandledException(object sender, UnhandledExceptionEventArgs e)\n        {\n            LogUtil.WriteErrorLog(e, \"ä¸¥éå¼å¸¸!\");\n            //MessageBox.Show(\"GeekDeskéå°æªç¥é®é¢å´©æº!\");\n        }\n        public static void DoEvents()\n        {\n            var frame = new DispatcherFrame();\n            Dispatcher.CurrentDispatcher.BeginInvoke(DispatcherPriority.Background,\n                new DispatcherOperationCallback(\n                    delegate (object f)\n                    {\n                        ((DispatcherFrame)f).Continue = false;\n                        return null;\n                    }), frame);\n            Dispatcher.PushFrame(frame);\n        }\n\n\n    }\n\n}\n"
        },
        {
          "name": "Command",
          "type": "tree",
          "content": null
        },
        {
          "name": "Constant",
          "type": "tree",
          "content": null
        },
        {
          "name": "Control",
          "type": "tree",
          "content": null
        },
        {
          "name": "Converts",
          "type": "tree",
          "content": null
        },
        {
          "name": "CustomComponent",
          "type": "tree",
          "content": null
        },
        {
          "name": "GeekDesk.csproj",
          "type": "blob",
          "size": 31.4130859375,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <Import Project=\"packages\\Microsoft.SourceLink.GitHub.1.0.0\\build\\Microsoft.SourceLink.GitHub.props\" Condition=\"Exists('packages\\Microsoft.SourceLink.GitHub.1.0.0\\build\\Microsoft.SourceLink.GitHub.props')\" />\n  <Import Project=\"packages\\Microsoft.SourceLink.Common.1.0.0\\build\\Microsoft.SourceLink.Common.props\" Condition=\"Exists('packages\\Microsoft.SourceLink.Common.1.0.0\\build\\Microsoft.SourceLink.Common.props')\" />\n  <Import Project=\"packages\\Microsoft.Build.Tasks.Git.1.0.0\\build\\Microsoft.Build.Tasks.Git.props\" Condition=\"Exists('packages\\Microsoft.Build.Tasks.Git.1.0.0\\build\\Microsoft.Build.Tasks.Git.props')\" />\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\n  <PropertyGroup>\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\n    <ProjectGuid>{B4983CEC-2281-413C-8ECF-92EE0E40A713}</ProjectGuid>\n    <OutputType>WinExe</OutputType>\n    <RootNamespace>GeekDesk</RootNamespace>\n    <AssemblyName>GeekDesk</AssemblyName>\n    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\n    <FileAlignment>512</FileAlignment>\n    <ProjectTypeGuids>{60dc8134-eba5-43b8-bcc9-bb4bc16c2548};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>\n    <WarningLevel>4</WarningLevel>\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\n    <Deterministic>true</Deterministic>\n    <TargetFrameworkProfile />\n    <IsWebBootstrapper>false</IsWebBootstrapper>\n    <NuGetPackageImportStamp>\n    </NuGetPackageImportStamp>\n    <PublishUrl>publish\\</PublishUrl>\n    <Install>true</Install>\n    <InstallFrom>Disk</InstallFrom>\n    <UpdateEnabled>false</UpdateEnabled>\n    <UpdateMode>Foreground</UpdateMode>\n    <UpdateInterval>7</UpdateInterval>\n    <UpdateIntervalUnits>Days</UpdateIntervalUnits>\n    <UpdatePeriodically>false</UpdatePeriodically>\n    <UpdateRequired>false</UpdateRequired>\n    <MapFileExtensions>true</MapFileExtensions>\n    <ApplicationRevision>0</ApplicationRevision>\n    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>\n    <UseApplicationTrust>false</UseApplicationTrust>\n    <BootstrapperEnabled>true</BootstrapperEnabled>\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\n    <PlatformTarget>AnyCPU</PlatformTarget>\n    <DebugSymbols>true</DebugSymbols>\n    <DebugType>full</DebugType>\n    <Optimize>false</Optimize>\n    <OutputPath>bin\\Debug\\</OutputPath>\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\n    <ErrorReport>prompt</ErrorReport>\n    <WarningLevel>4</WarningLevel>\n    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\n    <Prefer32Bit>false</Prefer32Bit>\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\n    <PlatformTarget>AnyCPU</PlatformTarget>\n    <DebugType>pdbonly</DebugType>\n    <Optimize>true</Optimize>\n    <OutputPath>bin\\Release\\</OutputPath>\n    <DefineConstants>TRACE</DefineConstants>\n    <ErrorReport>prompt</ErrorReport>\n    <WarningLevel>4</WarningLevel>\n    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\n    <Prefer32Bit>false</Prefer32Bit>\n    <GenerateSerializationAssemblies>Auto</GenerateSerializationAssemblies>\n  </PropertyGroup>\n  <PropertyGroup>\n    <StartupObject>GeekDesk.App</StartupObject>\n  </PropertyGroup>\n  <PropertyGroup>\n    <SignManifests>false</SignManifests>\n  </PropertyGroup>\n  <PropertyGroup>\n    <ApplicationIcon>Logo.ico</ApplicationIcon>\n  </PropertyGroup>\n  <PropertyGroup>\n    <TargetZone>LocalIntranet</TargetZone>\n  </PropertyGroup>\n  <PropertyGroup>\n    <GenerateManifests>false</GenerateManifests>\n  </PropertyGroup>\n  <PropertyGroup>\n    <ApplicationManifest>app.manifest</ApplicationManifest>\n  </PropertyGroup>\n  <ItemGroup>\n    <Reference Include=\"CommonServiceLocator, Version=2.0.6.0, Culture=neutral, PublicKeyToken=489b6accfaf20ef0, processorArchitecture=MSIL\">\n      <HintPath>packages\\CommonServiceLocator.2.0.6\\lib\\net45\\CommonServiceLocator.dll</HintPath>\n    </Reference>\n    <Reference Include=\"Gma.System.MouseKeyHook, Version=5.6.130.0, Culture=neutral, processorArchitecture=MSIL\">\n      <HintPath>packages\\MouseKeyHook.5.6.0\\lib\\net40\\Gma.System.MouseKeyHook.dll</HintPath>\n    </Reference>\n    <Reference Include=\"HandyControl, Version=3.3.0.0, Culture=neutral, PublicKeyToken=45be8712787a1e5b, processorArchitecture=MSIL\">\n      <HintPath>packages\\HandyControl.3.3.0\\lib\\net472\\HandyControl.dll</HintPath>\n    </Reference>\n    <Reference Include=\"KeyMouseHook, Version=1.0.6.0, Culture=neutral, processorArchitecture=MSIL\">\n      <HintPath>packages\\KeyMouseHook.1.0.6\\lib\\net40\\KeyMouseHook.dll</HintPath>\n    </Reference>\n    <Reference Include=\"Microsoft.Extensions.Logging.Abstractions, Version=2.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60, processorArchitecture=MSIL\">\n      <HintPath>packages\\Microsoft.Extensions.Logging.Abstractions.2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll</HintPath>\n    </Reference>\n    <Reference Include=\"Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\">\n      <HintPath>packages\\Newtonsoft.Json.13.0.1\\lib\\net45\\Newtonsoft.Json.dll</HintPath>\n    </Reference>\n    <Reference Include=\"NPinyin.Core, Version=3.0.0.0, Culture=neutral, processorArchitecture=MSIL\">\n      <HintPath>packages\\NPinyin.Core.3.0.0\\lib\\net45\\NPinyin.Core.dll</HintPath>\n    </Reference>\n    <Reference Include=\"Quartz, Version=3.3.3.0, Culture=neutral, PublicKeyToken=f6b8c98a402cc8a4, processorArchitecture=MSIL\">\n      <HintPath>packages\\Quartz.3.3.3\\lib\\net472\\Quartz.dll</HintPath>\n    </Reference>\n    <Reference Include=\"System\" />\n    <Reference Include=\"System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\">\n      <HintPath>packages\\System.Buffers.4.5.1\\lib\\net461\\System.Buffers.dll</HintPath>\n    </Reference>\n    <Reference Include=\"System.Configuration\" />\n    <Reference Include=\"System.Configuration.Install\" />\n    <Reference Include=\"System.Data\" />\n    <Reference Include=\"System.Diagnostics.DiagnosticSource, Version=4.0.5.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\">\n      <HintPath>packages\\System.Diagnostics.DiagnosticSource.4.7.1\\lib\\net46\\System.Diagnostics.DiagnosticSource.dll</HintPath>\n    </Reference>\n    <Reference Include=\"System.Drawing\" />\n    <Reference Include=\"System.Drawing.Common, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\">\n      <HintPath>packages\\System.Drawing.Common.6.0.0-preview.6.21352.12\\lib\\net461\\System.Drawing.Common.dll</HintPath>\n    </Reference>\n    <Reference Include=\"System.Management\" />\n    <Reference Include=\"System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\">\n      <HintPath>packages\\System.Memory.4.5.4\\lib\\net461\\System.Memory.dll</HintPath>\n    </Reference>\n    <Reference Include=\"System.Numerics\" />\n    <Reference Include=\"System.Numerics.Vectors, Version=4.1.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\n      <HintPath>packages\\System.Numerics.Vectors.4.5.0\\lib\\net46\\System.Numerics.Vectors.dll</HintPath>\n    </Reference>\n    <Reference Include=\"System.Reactive, Version=5.0.0.0, Culture=neutral, PublicKeyToken=94bc3704cddfc263, processorArchitecture=MSIL\">\n      <HintPath>packages\\System.Reactive.5.0.0\\lib\\net472\\System.Reactive.dll</HintPath>\n    </Reference>\n    <Reference Include=\"System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\n      <HintPath>packages\\System.Runtime.CompilerServices.Unsafe.4.5.3\\lib\\net461\\System.Runtime.CompilerServices.Unsafe.dll</HintPath>\n    </Reference>\n    <Reference Include=\"System.Runtime.Remoting\" />\n    <Reference Include=\"System.ServiceProcess\" />\n    <Reference Include=\"System.Threading.Tasks.Extensions, Version=4.2.0.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\">\n      <HintPath>packages\\System.Threading.Tasks.Extensions.4.5.4\\lib\\net461\\System.Threading.Tasks.Extensions.dll</HintPath>\n    </Reference>\n    <Reference Include=\"System.Web\" />\n    <Reference Include=\"System.Web.Extensions\" />\n    <Reference Include=\"System.Windows\" />\n    <Reference Include=\"System.Windows.Forms\" />\n    <Reference Include=\"System.Xml\" />\n    <Reference Include=\"Microsoft.CSharp\" />\n    <Reference Include=\"System.Core\" />\n    <Reference Include=\"System.Xml.Linq\" />\n    <Reference Include=\"System.Data.DataSetExtensions\" />\n    <Reference Include=\"System.Net.Http\" />\n    <Reference Include=\"System.Xaml\">\n      <RequiredTargetFramework>4.0</RequiredTargetFramework>\n    </Reference>\n    <Reference Include=\"WindowsAPICodePack.Shell.CommonFileDialogs, Version=1.1.5.0, Culture=neutral, processorArchitecture=MSIL\">\n      <HintPath>packages\\WindowsAPICodePack.Shell.CommonFileDialogs.1.1.5\\lib\\net452\\WindowsAPICodePack.Shell.CommonFileDialogs.dll</HintPath>\n    </Reference>\n    <Reference Include=\"WindowsBase\" />\n    <Reference Include=\"PresentationCore\" />\n    <Reference Include=\"PresentationFramework\" />\n    <Reference Include=\"XamlFlair.WPF, Version=1.2.13.0, Culture=neutral, processorArchitecture=MSIL\">\n      <HintPath>packages\\XamlFlair.WPF.1.2.13\\lib\\net472\\XamlFlair.WPF.dll</HintPath>\n    </Reference>\n  </ItemGroup>\n  <ItemGroup>\n    <ApplicationDefinition Include=\"App.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </ApplicationDefinition>\n    <Compile Include=\"Command\\DelegateCommand.cs\" />\n    <Compile Include=\"Command\\DelegateCommandBase.cs\" />\n    <Compile Include=\"Constant\\AppHideType.cs\" />\n    <Compile Include=\"Constant\\Constants.cs\" />\n    <Compile Include=\"Constant\\HotKeyType.cs\" />\n    <Compile Include=\"Constant\\IconType.cs\" />\n    <Compile Include=\"Constant\\CommonEnum.cs\" />\n    <Compile Include=\"Constant\\IconStartType.cs\" />\n    <Compile Include=\"Constant\\MenuType.cs\" />\n    <Compile Include=\"Constant\\PasswordType.cs\" />\n    <Compile Include=\"Constant\\RunTimeStatus.cs\" />\n    <Compile Include=\"Constant\\SearchType.cs\" />\n    <Compile Include=\"Constant\\SortType.cs\" />\n    <Compile Include=\"Constant\\TodoTaskExecType.cs\" />\n    <Compile Include=\"Constant\\BGStyle.cs\" />\n    <Compile Include=\"Constant\\UpdateType.cs\" />\n    <Compile Include=\"Constant\\WidthTypeEnum.cs\" />\n    <Compile Include=\"Control\\Other\\GlobalMsgNotification.xaml.cs\">\n      <DependentUpon>GlobalMsgNotification.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Other\\BacklogNotificatin.xaml.cs\">\n      <DependentUpon>BacklogNotificatin.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Other\\CustomIconUrlDialog.xaml.cs\">\n      <DependentUpon>CustomIconUrlDialog.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Other\\GradientBGDialog.xaml.cs\">\n      <DependentUpon>GradientBGDialog.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Other\\PasswordDialog.xaml.cs\">\n      <DependentUpon>PasswordDialog.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Other\\MyColorPickerDialog.xaml.cs\">\n      <DependentUpon>MyColorPickerDialog.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Other\\IconInfoUrlDialog.xaml.cs\">\n      <DependentUpon>IconInfoUrlDialog.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Other\\SearchResControl.xaml.cs\">\n      <DependentUpon>SearchResControl.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\UserControls\\Config\\OtherControl.xaml.cs\">\n      <DependentUpon>OtherControl.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\UserControls\\SystemItem\\SystemItem.xaml.cs\">\n      <DependentUpon>SystemItem.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\UserControls\\ToDo\\TodoControl.xaml.cs\">\n      <DependentUpon>TodoControl.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\UserControls\\IconFont\\IconPannel.xaml.cs\">\n      <DependentUpon>IconPannel.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Windows\\GlobalColorPickerWindow.xaml.cs\">\n      <DependentUpon>GlobalColorPickerWindow.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Windows\\PixelColorPickerWindow.xaml.cs\">\n      <DependentUpon>PixelColorPickerWindow.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Windows\\SystemItemWindow.xaml.cs\">\n      <DependentUpon>SystemItemWindow.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Windows\\ToDoInfoWindow.xaml.cs\">\n      <DependentUpon>ToDoInfoWindow.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Windows\\ToDoWindow.xaml.cs\">\n      <DependentUpon>ToDoWindow.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Windows\\ConfigWindow.xaml.cs\">\n      <DependentUpon>ConfigWindow.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Other\\IconInfoDialog.xaml.cs\">\n      <DependentUpon>IconInfoDialog.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\UserControls\\Config\\AboutControl.xaml.cs\">\n      <DependentUpon>AboutControl.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\UserControls\\PannelCard\\LeftCardControl.xaml.cs\">\n      <DependentUpon>LeftCardControl.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\UserControls\\Config\\ThemeControl.xaml.cs\">\n      <DependentUpon>ThemeControl.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\UserControls\\PannelCard\\RightCardControl.xaml.cs\">\n      <DependentUpon>RightCardControl.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\UserControls\\Config\\MotionControl.xaml.cs\">\n      <DependentUpon>MotionControl.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Windows\\IconfontWindow.xaml.cs\">\n      <DependentUpon>IconfontWindow.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Control\\Windows\\UpdateWindow.xaml.cs\">\n      <DependentUpon>UpdateWindow.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Converts\\CountGreZero2BoolConvert.cs\" />\n    <Compile Include=\"Converts\\Count2VisibleConvert.cs\" />\n    <Compile Include=\"Converts\\GetWidthByWWConvert.cs\" />\n    <Compile Include=\"Converts\\SearchTypeConvert.cs\" />\n    <Compile Include=\"Converts\\StringAppendConvert.cs\" />\n    <Compile Include=\"Converts\\DoubleToGridLength.cs\" />\n    <Compile Include=\"Converts\\MenuInfoConvert.cs\" />\n    <Compile Include=\"Converts\\SearchResWidth.cs\" />\n    <Compile Include=\"Converts\\SortTypeConvert.cs\" />\n    <Compile Include=\"Converts\\TodoTaskExecConvert.cs\" />\n    <Compile Include=\"Converts\\IntToCornerRadius.cs\" />\n    <Compile Include=\"Converts\\OpcityConvert.cs\" />\n    <Compile Include=\"Converts\\BGStyleConvert.cs\" />\n    <Compile Include=\"Converts\\UpdateTypeConvert.cs\" />\n    <Compile Include=\"Converts\\ReverseBoolConvert.cs\" />\n    <Compile Include=\"Converts\\Visibility2BooleanConverter.cs\" />\n    <Compile Include=\"CustomComponent\\DraggAnimatedPanel\\DraggAnimatedPanel.cs\" />\n    <Compile Include=\"CustomComponent\\DraggAnimatedPanel\\DraggAnimatedPanel.Drag.cs\" />\n    <Compile Include=\"Converts\\HideTypeConvert.cs\" />\n    <Compile Include=\"Interface\\IWindowCommon.cs\" />\n    <Compile Include=\"MyThread\\RelativePathThread.cs\" />\n    <Compile Include=\"Plugins\\EveryThing\\Constant\\EveryThingConst.cs\" />\n    <Compile Include=\"Plugins\\EveryThing\\EveryThing32.cs\" />\n    <Compile Include=\"Plugins\\EveryThing\\EveryThing64.cs\" />\n    <Compile Include=\"Plugins\\EveryThing\\EveryThingUtil.cs\" />\n    <Compile Include=\"Plugins\\ShowSeconds\\Common\\Constants.cs\" />\n    <Compile Include=\"Plugins\\ShowSeconds\\SecondsWindow.xaml.cs\">\n      <DependentUpon>SecondsWindow.xaml</DependentUpon>\n    </Compile>\n    <Compile Include=\"Plugins\\ShowSeconds\\ViewModel\\SecondsDataContext.cs\" />\n    <Compile Include=\"Task\\ShowSecondTask.cs\" />\n    <Compile Include=\"Task\\ToDoTask.cs\" />\n    <Compile Include=\"MyThread\\MouseHookThread.cs\" />\n    <Compile Include=\"MyThread\\DispatcherBuild.cs\" />\n    <Compile Include=\"MyThread\\UpdateThread.cs\" />\n    <Compile Include=\"Util\\AeroGlassHelper.cs\" />\n    <Compile Include=\"Util\\BGSettingUtil.cs\" />\n    <Compile Include=\"Util\\BlurGlassUtil.cs\" />\n    <Compile Include=\"Util\\ColorUtil.cs\" />\n    <Compile Include=\"Util\\DefaultIcons.cs\" />\n    <Compile Include=\"Util\\DragAdorner.cs\" />\n    <Compile Include=\"Util\\FileWatcher.cs\" />\n    <Compile Include=\"Util\\GlobalHotKey.cs\" />\n    <Compile Include=\"Util\\CommonCode.cs\" />\n    <Compile Include=\"Util\\FileIcon.cs\" />\n    <Compile Include=\"Util\\FileUtil.cs\" />\n    <Compile Include=\"ViewModel\\Temp\\GuideInfoList.cs\" />\n    <Compile Include=\"Util\\HideWindowUtil.cs\" />\n    <Compile Include=\"Util\\IconHelper.cs\" />\n    <Compile Include=\"Util\\IconUtil.cs\" />\n    <Compile Include=\"Util\\KeyUtil.cs\" />\n    <Compile Include=\"Util\\ListBoxDragDropManager.cs\" />\n    <Compile Include=\"Util\\LogUtil.cs\" />\n    <Compile Include=\"Util\\MarginHide.cs\" />\n    <Compile Include=\"Util\\HttpUtil.cs\" />\n    <Compile Include=\"Util\\ImageUtil.cs\" />\n    <Compile Include=\"Converts\\MenuWidthConvert.cs\" />\n    <Compile Include=\"Util\\MD5Util.cs\" />\n    <Compile Include=\"Util\\MessageUtil.cs\" />\n    <Compile Include=\"Util\\MouseHook.cs\" />\n    <Compile Include=\"Util\\MouseUtil.cs\" />\n    <Compile Include=\"Util\\NativeMethods.cs\" />\n    <Compile Include=\"Util\\ProcessUtil.cs\" />\n    <Compile Include=\"Util\\RegisterUtil.cs\" />\n    <Compile Include=\"Util\\RelayCommand.cs\" />\n    <Compile Include=\"Util\\ScreenUtil.cs\" />\n    <Compile Include=\"Util\\ScrollUtil.cs\" />\n    <Compile Include=\"Util\\ShellContextMenu.cs\" />\n    <Compile Include=\"Util\\ShowWindowFollowMouse.cs\" />\n    <Compile Include=\"Util\\StringUtil.cs\" />\n    <Compile Include=\"Util\\SvgToGeometry.cs\" />\n    <Compile Include=\"Util\\UserActivityHook.cs\" />\n    <Compile Include=\"CustomComponent\\VirtualizingWrapPanel\\ItemRange.cs\" />\n    <Compile Include=\"CustomComponent\\VirtualizingWrapPanel\\SpacingMode.cs\" />\n    <Compile Include=\"CustomComponent\\VirtualizingWrapPanel\\VirtualizingPanelBase.cs\" />\n    <Compile Include=\"CustomComponent\\VirtualizingWrapPanel\\VirtualizingWrapPanel.cs\" />\n    <Compile Include=\"Util\\WindowsThumbnailProvider.cs\" />\n    <Compile Include=\"Util\\WindowUtil.cs\" />\n    <Compile Include=\"CustomComponent\\VirtualizingWrapPanel\\ScrollDirection.cs\" />\n    <Compile Include=\"ViewModel\\AppConfig.cs\" />\n    <Compile Include=\"ViewModel\\AppData.cs\" />\n    <Compile Include=\"ViewModel\\GradientBGParam.cs\" />\n    <Compile Include=\"ViewModel\\CPDataContext.cs\" />\n    <Compile Include=\"ViewModel\\Temp\\GradientBGParamList.cs\" />\n    <Compile Include=\"ViewModel\\Temp\\SearchIconList.cs\" />\n    <Compile Include=\"ViewModel\\ToDoInfo.cs\" />\n    <Compile Include=\"ViewModel\\IconfontInfo.cs\" />\n    <Compile Include=\"ViewModel\\IconInfo.cs\" />\n    <Compile Include=\"ViewModel\\MenuInfo.cs\" />\n    <Page Include=\"Control\\Other\\GlobalMsgNotification.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Control\\Other\\BacklogNotificatin.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\Other\\CustomIconUrlDialog.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Control\\Other\\GradientBGDialog.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Control\\Other\\PasswordDialog.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Control\\Other\\MyColorPickerDialog.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Control\\Other\\IconInfoUrlDialog.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Control\\Other\\SearchResControl.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Control\\UserControls\\Config\\OtherControl.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\UserControls\\SystemItem\\SystemItem.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Control\\UserControls\\ToDo\\TodoControl.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\UserControls\\IconFont\\IconPannel.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\Windows\\GlobalColorPickerWindow.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\Windows\\PixelColorPickerWindow.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\Windows\\SystemItemWindow.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Control\\Windows\\ToDoInfoWindow.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\Windows\\ToDoWindow.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\Windows\\ConfigWindow.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\Other\\IconInfoDialog.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\UserControls\\Config\\AboutControl.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\UserControls\\PannelCard\\LeftCardControl.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\UserControls\\Config\\ThemeControl.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\UserControls\\PannelCard\\RightCardControl.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\UserControls\\Config\\MotionControl.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\Windows\\IconfontWindow.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Control\\Windows\\UpdateWindow.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"MainWindow.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Compile Include=\"App.xaml.cs\">\n      <DependentUpon>App.xaml</DependentUpon>\n      <SubType>Code</SubType>\n    </Compile>\n    <Compile Include=\"MainWindow.xaml.cs\">\n      <DependentUpon>MainWindow.xaml</DependentUpon>\n      <SubType>Code</SubType>\n    </Compile>\n    <Page Include=\"Plugins\\ShowSeconds\\SecondsWindow.xaml\">\n      <Generator>MSBuild:Compile</Generator>\n      <SubType>Designer</SubType>\n    </Page>\n    <Page Include=\"Resource\\Dictionary\\Geometry.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Resource\\Dictionary\\CommonStyle.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n    </Page>\n    <Page Include=\"Resource\\Dictionary\\XamlFlairSettings.xaml\">\n      <SubType>Designer</SubType>\n      <Generator>MSBuild:Compile</Generator>\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </Page>\n  </ItemGroup>\n  <ItemGroup>\n    <Compile Include=\"Properties\\AssemblyInfo.cs\">\n      <SubType>Code</SubType>\n    </Compile>\n    <Compile Include=\"Properties\\Resources.Designer.cs\">\n      <AutoGen>True</AutoGen>\n      <DesignTime>True</DesignTime>\n      <DependentUpon>Resources.resx</DependentUpon>\n    </Compile>\n    <Compile Include=\"Properties\\Settings.Designer.cs\">\n      <AutoGen>True</AutoGen>\n      <DependentUpon>Settings.settings</DependentUpon>\n      <DesignTimeSharedInput>True</DesignTimeSharedInput>\n    </Compile>\n    <EmbeddedResource Include=\"Properties\\Resources.resx\">\n      <Generator>ResXFileCodeGenerator</Generator>\n      <LastGenOutput>Resources.Designer.cs</LastGenOutput>\n    </EmbeddedResource>\n    <Resource Include=\"Resource\\Iconfont\\iconfont.json\" />\n    <None Include=\"app.manifest\" />\n    <None Include=\"Plugins\\EveryThing\\32\\Everything.ini\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </None>\n    <None Include=\"Plugins\\EveryThing\\32\\Everything.lng\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </None>\n    <None Include=\"Plugins\\EveryThing\\64\\Everything.ini\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </None>\n    <None Include=\"Plugins\\EveryThing\\64\\Everything.lng\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </None>\n    <None Include=\"Properties\\app.manifest\" />\n    <None Include=\"Update.json\" />\n    <None Include=\"packages.config\" />\n    <None Include=\"Properties\\Settings.settings\">\n      <Generator>SettingsSingleFileGenerator</Generator>\n      <LastGenOutput>Settings.Designer.cs</LastGenOutput>\n    </None>\n  </ItemGroup>\n  <ItemGroup>\n    <None Include=\"App.config\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Resource Include=\"Resource\\Image\\å¾ç.png\" />\n    <Resource Include=\"Resource\\Image\\æä»¶å¤¹.png\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Resource Include=\"Resource\\Iconfont\\iconfont.js\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Resource Include=\"Resource\\Image\\BacklogImg.png\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Resource Include=\"Resource\\Image\\TitleLogo.png\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Resource Include=\"Resource\\Image\\About.png\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Resource Include=\"Taskbar.ico\" />\n  </ItemGroup>\n  <ItemGroup>\n    <COMReference Include=\"IWshRuntimeLibrary\">\n      <Guid>{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}</Guid>\n      <VersionMajor>1</VersionMajor>\n      <VersionMinor>0</VersionMinor>\n      <Lcid>0</Lcid>\n      <WrapperTool>tlbimp</WrapperTool>\n      <Isolated>False</Isolated>\n      <EmbedInteropTypes>True</EmbedInteropTypes>\n    </COMReference>\n  </ItemGroup>\n  <ItemGroup>\n    <Resource Include=\"Resource\\Image\\SystemIcon\\Services.png\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Resource Include=\"Resource\\Image\\SystemIcon\\Calculator.png\" />\n    <Resource Include=\"Resource\\Image\\SystemIcon\\CMD.png\" />\n    <Resource Include=\"Resource\\Image\\SystemIcon\\Computer.png\" />\n    <Resource Include=\"Resource\\Image\\SystemIcon\\Control.png\" />\n    <Resource Include=\"Resource\\Image\\SystemIcon\\GroupPolicy.png\" />\n    <Resource Include=\"Resource\\Image\\SystemIcon\\Mstsc.png\" />\n    <Resource Include=\"Resource\\Image\\SystemIcon\\Network.png\" />\n    <Resource Include=\"Resource\\Image\\SystemIcon\\Notepad.png\" />\n    <Resource Include=\"Resource\\Image\\SystemIcon\\RecycleBin.png\" />\n    <Resource Include=\"Resource\\Image\\SystemIcon\\Registry.png\" />\n  </ItemGroup>\n  <ItemGroup>\n    <BootstrapperPackage Include=\".NETFramework,Version=v4.7.2\">\n      <Visible>False</Visible>\n      <ProductName>Microsoft .NET Framework 4.7.2 %28x86 å x64%29</ProductName>\n      <Install>true</Install>\n    </BootstrapperPackage>\n    <BootstrapperPackage Include=\"Microsoft.Net.Framework.3.5.SP1\">\n      <Visible>False</Visible>\n      <ProductName>.NET Framework 3.5 SP1</ProductName>\n      <Install>false</Install>\n    </BootstrapperPackage>\n  </ItemGroup>\n  <ItemGroup>\n    <Resource Include=\"Logo.ico\" />\n  </ItemGroup>\n  <ItemGroup>\n    <None Include=\"Plugins\\EveryThing\\lib\\Everything32.dll\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </None>\n    <None Include=\"Plugins\\EveryThing\\lib\\Everything64.dll\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </None>\n  </ItemGroup>\n  <ItemGroup>\n    <WCFMetadata Include=\"Connected Services\\\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Content Include=\"Plugins\\EveryThing\\32\\Everything.exe\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </Content>\n    <Content Include=\"Plugins\\EveryThing\\64\\Everything.exe\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </Content>\n  </ItemGroup>\n  <ItemGroup />\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\n  <ProjectExtensions>\n    <VisualStudio>\n      <UserProperties update_1json__JsonSchema=\"https://beaujs.com/schema.json\" />\n    </VisualStudio>\n  </ProjectExtensions>\n  <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n    <PropertyGroup>\n      <ErrorText>è¿å°è®¡ç®æºä¸ç¼ºå°æ­¤é¡¹ç®å¼ç¨ç NuGet ç¨åºåãä½¿ç¨âNuGet ç¨åºåè¿åâå¯ä¸è½½è¿äºç¨åºåãæå³æ´å¤ä¿¡æ¯ï¼è¯·åè§ http://go.microsoft.com/fwlink/?LinkID=322105ãç¼ºå°çæä»¶æ¯ {0}ã</ErrorText>\n    </PropertyGroup>\n    <Error Condition=\"!Exists('packages\\Microsoft.Build.Tasks.Git.1.0.0\\build\\Microsoft.Build.Tasks.Git.props')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\Microsoft.Build.Tasks.Git.1.0.0\\build\\Microsoft.Build.Tasks.Git.props'))\" />\n    <Error Condition=\"!Exists('packages\\Microsoft.Build.Tasks.Git.1.0.0\\build\\Microsoft.Build.Tasks.Git.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\Microsoft.Build.Tasks.Git.1.0.0\\build\\Microsoft.Build.Tasks.Git.targets'))\" />\n    <Error Condition=\"!Exists('packages\\Microsoft.SourceLink.Common.1.0.0\\build\\Microsoft.SourceLink.Common.props')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\Microsoft.SourceLink.Common.1.0.0\\build\\Microsoft.SourceLink.Common.props'))\" />\n    <Error Condition=\"!Exists('packages\\Microsoft.SourceLink.Common.1.0.0\\build\\Microsoft.SourceLink.Common.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\Microsoft.SourceLink.Common.1.0.0\\build\\Microsoft.SourceLink.Common.targets'))\" />\n    <Error Condition=\"!Exists('packages\\Microsoft.SourceLink.GitHub.1.0.0\\build\\Microsoft.SourceLink.GitHub.props')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\Microsoft.SourceLink.GitHub.1.0.0\\build\\Microsoft.SourceLink.GitHub.props'))\" />\n    <Error Condition=\"!Exists('packages\\Microsoft.SourceLink.GitHub.1.0.0\\build\\Microsoft.SourceLink.GitHub.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\Microsoft.SourceLink.GitHub.1.0.0\\build\\Microsoft.SourceLink.GitHub.targets'))\" />\n  </Target>\n  <Import Project=\"packages\\Microsoft.Build.Tasks.Git.1.0.0\\build\\Microsoft.Build.Tasks.Git.targets\" Condition=\"Exists('packages\\Microsoft.Build.Tasks.Git.1.0.0\\build\\Microsoft.Build.Tasks.Git.targets')\" />\n  <Import Project=\"packages\\Microsoft.SourceLink.Common.1.0.0\\build\\Microsoft.SourceLink.Common.targets\" Condition=\"Exists('packages\\Microsoft.SourceLink.Common.1.0.0\\build\\Microsoft.SourceLink.Common.targets')\" />\n  <Import Project=\"packages\\Microsoft.SourceLink.GitHub.1.0.0\\build\\Microsoft.SourceLink.GitHub.targets\" Condition=\"Exists('packages\\Microsoft.SourceLink.GitHub.1.0.0\\build\\Microsoft.SourceLink.GitHub.targets')\" />\n  <PropertyGroup>\n    <PreBuildEvent>\n    </PreBuildEvent>\n  </PropertyGroup>\n  <PropertyGroup>\n    <PostBuildEvent>; Move all assemblies and related files to lib folder\nROBOCOPY \"$(TargetDir) \" \"$(TargetDir)lib\\ \" /XF Data *.exe *.config *.manifest /XD \"$(TargetDir)lib\" plugins logs bak /E /IS /MOVE\nROBOCOPY \"$(TargetDir) \" \"$(TargetDir)lib\\ \" *.dll /XD \"$(TargetDir)lib\"  /E /S /MOVE\nif %25errorlevel%25 leq 4 exit 0 else exit %25errorlevel%25</PostBuildEvent>\n  </PropertyGroup>\n</Project>"
        },
        {
          "name": "GeekDesk.sln",
          "type": "blob",
          "size": 1.0703125,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17 \nVisualStudioVersion = 17.1.32319.34\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"GeekDesk\", \"GeekDesk.csproj\", \"{B4983CEC-2281-413C-8ECF-92EE0E40A713}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{B4983CEC-2281-413C-8ECF-92EE0E40A713}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{B4983CEC-2281-413C-8ECF-92EE0E40A713}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{B4983CEC-2281-413C-8ECF-92EE0E40A713}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{B4983CEC-2281-413C-8ECF-92EE0E40A713}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {7D844F27-975B-4CFF-A373-E665FB8866DE}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "Interface",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Logo.ico",
          "type": "blob",
          "size": 174.931640625,
          "content": null
        },
        {
          "name": "MainWindow.xaml",
          "type": "blob",
          "size": 18.3310546875,
          "content": "ï»¿<Window x:Class=\"GeekDesk.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:uc=\"clr-namespace:GeekDesk.Control.UserControls.PannelCard\"\n        xmlns:cn=\"clr-namespace:GeekDesk.Constant\"\n        xmlns:xf=\"clr-namespace:XamlFlair;assembly=XamlFlair.WPF\"\n        xmlns:local=\"clr-namespace:GeekDesk\"\n        mc:Ignorable=\"d\"\n        xmlns:cvt=\"clr-namespace:GeekDesk.Converts\"\n        x:Name=\"AppWindow\"\n        xmlns:hc=\"https://handyorg.github.io/handycontrol\" xmlns:viewmodel=\"clr-namespace:GeekDesk.ViewModel\" \n        xmlns:my=\"clr-namespace:GeekDesk.Util\"\n        d:DataContext=\"{d:DesignInstance Type=viewmodel:AppData}\"\n        Title=\"GeekDesk_Main_8400A17AEEF7C029\" \n        MinWidth=\"600\"\n        MinHeight=\"400\"\n        WindowStyle=\"None\"\n        AllowsTransparency=\"True\"\n        Background=\"Transparent\"\n        ShowInTaskbar=\"False\"\n        Opacity=\"1\"\n        Deactivated=\"AppWindow_Deactivated\"\n        SizeChanged=\"Window_SizeChanged\"\n        PreviewKeyDown=\"OnKeyDown\"\n        Focusable=\"True\"\n        MouseDown=\"MainWindow_MouseDown\"\n        MouseEnter=\"MainWindow_MouseEnter\"\n        GotFocus=\"Window_GotFocus\"\n        Loaded=\"Window_Loaded\"   \n        SourceInitialized=\"Window_SourceInitialized\"\n        Topmost=\"{Binding AppConfig.AlwaysTopmost}\"\n        >\n\n    <Window.Resources>\n        <RoutedUICommand x:Key=\"SearchHotKeyDown\" Text=\"SearchHotKeyDown\"/>\n        <cvt:MenuWidthConvert x:Key=\"MenuWidthConvert\"/>\n        <cvt:OpcityConvert x:Key=\"OpcityConvert\"/>\n        <cvt:IntToCornerRadius x:Key=\"IntToCornerRadius\"/>\n        <cvt:DoubleToGridLength x:Key=\"DoubleToGridLength\"/>\n        <cvt:ReverseBoolConvert x:Key=\"ReverseBoolConvert\"/>\n    </Window.Resources>\n\n    <WindowChrome.WindowChrome>\n        <WindowChrome CaptionHeight=\"0\" CornerRadius=\"30\" ResizeBorderThickness=\"23\"/>\n    </WindowChrome.WindowChrome>\n\n    <Window.InputBindings>\n        <KeyBinding Gesture=\"Ctrl+F\" Key=\"F\"  Command=\"{StaticResource SearchHotKeyDown}\"/>\n    </Window.InputBindings>\n    <Window.CommandBindings>\n        <CommandBinding Command=\"{StaticResource SearchHotKeyDown}\" CanExecute=\"SearchHotKeyDown\"/>\n    </Window.CommandBindings>\n\n    <!--Opacity=\"{Binding AppConfig.PannelOpacity, Mode=TwoWay, Converter={StaticResource OpcityConvert}}\"-->\n    <Grid>\n        <!--é®ç½©å±border ç¨äºå¼å¯¼æç¤º-->\n        <Border Margin=\"20\"\n                Visibility=\"Collapsed\"\n                MouseDown=\"DragMove\"\n                CornerRadius=\"{Binding AppConfig.PannelCornerRadius, Mode=OneWay, Converter={StaticResource IntToCornerRadius}}\"\n                BorderThickness=\"0\"\n                x:Name=\"GrayBorder\"\n                Panel.ZIndex=\"888\"\n                >\n            <Border.Background>\n                <SolidColorBrush Color=\"Gray\" Opacity=\"0.9\"/>\n            </Border.Background>\n            \n            <!--<hc:Poptip.Instance>\n                <hc:Poptip  PlacementType=\"Top\" IsOpen=\"False\" HitMode=\"None\">\n                    <hc:Poptip.ContentTemplate>\n                        <DataTemplate>\n                            <Border Background=\"White\" Width=\"300\" Height=\"150\">\n                                <TextBlock Text=\"è¿æ¯ä¸ä¸ªæµæµè¯\"/>\n                            </Border>\n                        </DataTemplate>\n                    </hc:Poptip.ContentTemplate>\n                </hc:Poptip>\n            </hc:Poptip.Instance>-->\n        </Border>\n\n        <hc:Card x:Name=\"GuideCard\" Width=\"300\" Height=\"180\" Panel.ZIndex=\"888\" \n                 VerticalAlignment=\"Top\"\n                 HorizontalAlignment=\"Left\" Visibility=\"Collapsed\">\n            <hc:Card.Background>\n                <SolidColorBrush Color=\"White\" Opacity=\"0.85\"/>\n            </hc:Card.Background>\n            <!--Card çåå®¹é¨å-->\n            <Border CornerRadius=\"4,4,0,0\" Width=\"300\" Height=\"100\">\n                <TextBlock TextWrapping=\"Wrap\" \n                           x:Name=\"GuideText\"\n                           VerticalAlignment=\"Center\"\n                           HorizontalAlignment=\"Center\"\n                           LineHeight=\"22\"\n                           FontSize=\"14\"\n                           Text=\"\"/>\n            </Border>\n            <!--Card çå°¾é¨é¨å-->\n            <hc:Card.Footer>\n                <Grid>\n                    <StackPanel Margin=\"10\" Width=\"150\" Height=\"50\" HorizontalAlignment=\"Left\">\n                        <!--Card çä¸çº§åå®¹-->\n                        <WrapPanel>\n                            <TextBlock TextWrapping=\"Wrap\"  \n                                   x:Name=\"GuideTitle1\"\n                                   Style=\"{DynamicResource TextBlockLargeBold}\" \n                                   TextTrimming=\"CharacterEllipsis\" \n                                   Text=\"å¼å¯¼æç¤º\" \n                                   FontSize=\"20\"\n                                   HorizontalAlignment=\"Left\"/>\n                            <TextBlock TextWrapping=\"Wrap\"\n                                       x:Name=\"GuideNum\"\n                                   Style=\"{DynamicResource TextBlockLargeBold}\" \n                                   TextTrimming=\"CharacterEllipsis\" \n                                   Text=\"1\" \n                                   FontSize=\"20\"\n                                   HorizontalAlignment=\"Left\"/>\n                        </WrapPanel>\n                        <!--Card çäºçº§åå®¹-->\n                        <TextBlock TextWrapping=\"NoWrap\" \n                                   x:Name=\"GuideTitle2\"\n                               Style=\"{DynamicResource TextBlockDefault}\" \n                               TextTrimming=\"CharacterEllipsis\" \n                               Text=\"å¿«æ·æ¹å¼åå»º\" \n                               Margin=\"0,6,0,0\"\n                               FontSize=\"14\"\n                               HorizontalAlignment=\"Left\"/>\n                    </StackPanel>\n                    <hc:UniformSpacingPanel HorizontalAlignment=\"Right\">\n                        <Button Style=\"{StaticResource MyBtnStyle}\" x:Name=\"PreviewGuideBtn\" Click=\"PreviewGuideBtn_Click\" Margin=\"0,0,20,0\" Content=\"ä¸ä¸æ­¥\"/>\n                        <Button Style=\"{StaticResource MyBtnStyle}\" x:Name=\"NextGuideBtn\" Click=\"NextGuideBtn_Click\" Margin=\"0,0,20,0\" Content=\"ä¸ä¸æ­¥\"/>\n                    </hc:UniformSpacingPanel>\n                </Grid>\n            </hc:Card.Footer>\n        </hc:Card>\n\n\n        <Border Margin=\"20\" CornerRadius=\"{Binding AppConfig.PannelCornerRadius, Mode=TwoWay, Converter={StaticResource IntToCornerRadius}}\"  \n            BorderThickness=\"0\"\n            Focusable=\"True\"\n                Panel.ZIndex=\"1\"\n            x:Name=\"BGBorder\"\n                Background=\"AliceBlue\"\n            hc:Dialog.Token=\"MainWindowDialog\"\n            xf:Animations.Primary=\"{xf:Animate BasedOn={StaticResource FadeInAndGrowHorizontally}, Event=None}\"\n            xf:Animations.PrimaryBinding=\"{Binding AppConfig.IsShow, Mode=OneWay}\"\n            xf:Animations.Secondary=\"{xf:Animate BasedOn={StaticResource  FadeOut}, Event=None}\"\n            xf:Animations.SecondaryBinding=\"{Binding AppConfig.IsShow, Mode=OneWay, Converter={StaticResource ReverseBoolConvert}}\"\n            xf:Animations.SecondaryCompletionCommand=\"{Binding HideCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}\"\n            xf:Animations.AllowOpacityReset=\"False\"\n            >\n            <Border.Effect>\n                <DropShadowEffect BlurRadius=\"30\" Direction=\"-90\" Color=\"Gray\"\n                              RenderingBias=\"Quality\" ShadowDepth=\"2\"/>\n            </Border.Effect>\n            <hc:DialogContainer Focusable=\"True\">\n                <Grid>\n\n\n                    <Grid.RowDefinitions>\n                        <RowDefinition Height=\"40\" MouseDown=\"DragMove\"></RowDefinition>\n                        <RowDefinition Height=\"*\"></RowDefinition>\n                    </Grid.RowDefinitions>\n                    <Grid.ColumnDefinitions>\n                        <ColumnDefinition x:Name=\"LeftColumn\" MinWidth=\"80\" Width=\"{Binding AppConfig.MenuCardWidth, Mode=TwoWay, Converter={StaticResource DoubleToGridLength}}\" MaxWidth=\"280\"></ColumnDefinition>\n                        <ColumnDefinition x:Name=\"RightColumn\" Width=\"*\"></ColumnDefinition>\n                    </Grid.ColumnDefinitions>\n\n\n\n\n                    <CheckBox Style=\"{StaticResource MyCheckBoxStyle}\" x:Name=\"ShowBox\" Visibility=\"Hidden\" Panel.ZIndex=\"2\"/>\n                    <CheckBox Style=\"{StaticResource MyCheckBoxStyle}\" x:Name=\"HideBox\" Visibility=\"Hidden\" Panel.ZIndex=\"2\"/>\n\n                    <StackPanel HorizontalAlignment=\"Right\" Panel.ZIndex=\"99\" hc:Growl.GrowlParent=\"False\" hc:Growl.Token=\"MainWindowGrowl\" Grid.Column=\"1\" Grid.Row=\"1\"/>\n                    <StackPanel HorizontalAlignment=\"Center\" Panel.ZIndex=\"99\" hc:Growl.GrowlParent=\"False\" hc:Growl.Token=\"MainWindowAskGrowl\" Grid.Column=\"1\" Grid.Row=\"1\"/>\n\n                    <DockPanel Grid.Row=\"0\" Grid.Column=\"0\" MouseDown=\"DragMove\">\n                        <DockPanel.Background>\n                            <SolidColorBrush Opacity=\"0.01\"/>\n                        </DockPanel.Background>\n                        <Image Visibility=\"{Binding AppConfig.TitleLogoVisible}\" \n                               Source=\"/Resource/Image/TitleLogo.png\" \n                               RenderOptions.BitmapScalingMode=\"HighQuality\" \n                               Margin=\"10,0,0,0\" \n                               Width=\"200\" \n                               Height=\"30\" \n                               Opacity=\"0.8\"\n                               HorizontalAlignment=\"Left\"/>\n                    </DockPanel>\n\n                    <DockPanel Grid.Row=\"0\" Grid.Column=\"2\" MouseDown=\"DragMove\">\n                        <DockPanel.Background>\n                            <SolidColorBrush Opacity=\"0.01\"/>\n                        </DockPanel.Background>\n                        <hc:UniformSpacingPanel  x:Name=\"MainBtnPanel\" Grid.ColumnSpan=\"4\" HorizontalAlignment=\"Right\" VerticalAlignment=\"Center\">\n                            <Button Background=\"Transparent\"\n                                    BorderThickness=\"0\"\n                                    hc:IconElement.Geometry=\"M917.930667 512c0-57.6 36.181333-106.496 86.869333-125.952a505.429333 505.429333 0 0 0-55.210667-133.461333A134.826667 134.826667 0 0 1 771.413333 74.410667 507.733333 507.733333 0 0 0 637.952 19.2 135.168 135.168 0 0 1 512 106.069333 134.912 134.912 0 0 1 386.048 19.2 505.429333 505.429333 0 0 0 252.586667 74.410667c22.186667 49.749333 13.141333 109.824-27.562667 150.528a135.168 135.168 0 0 1-150.528 27.648 502.016 502.016 0 0 0-55.296 133.461333c50.688 19.626667 86.869333 68.437333 86.869333 125.952 0 57.6-36.181333 106.496-86.869333 125.952 12.117333 47.530667 30.72 92.330667 55.210667 133.461333a134.826667 134.826667 0 0 1 178.090666 178.176 507.733333 507.733333 0 0 0 133.546667 55.210667A135.168 135.168 0 0 1 512 917.930667c57.6 0 106.496 36.181333 125.952 86.869333a505.429333 505.429333 0 0 0 133.461333-55.210667 134.912 134.912 0 0 1 27.562667-150.528 135.168 135.168 0 0 1 150.528-27.648 502.016 502.016 0 0 0 55.296-133.461333A134.912 134.912 0 0 1 917.930667 512zM512 647.338667a135.338667 135.338667 0 1 1 0.085333-270.762667A135.338667 135.338667 0 0 1 512 647.338667z\"\n                                    hc:IconElement.Height=\"18\"\n                                    hc:IconElement.Width=\"18\"\n                                    HorizontalAlignment=\"Right\"\n                                    Click=\"ConfigButtonClick\"\n                                    Initialized=\"SettingButton_Initialized\"\n                                    PreviewMouseLeftButtonDown=\"AppButton_PreviewMouseLeftButtonDown\"\n                                    x:Name=\"SettingButton\"\n                                    FocusVisualStyle=\"{x:Null}\"\n                                    >\n                                <Button.ContextMenu>\n                                    <ContextMenu x:Name=\"SettingMenus\" Width=\"130\">\n                                        <MenuItem Header=\"è®¾ç½®\" Click=\"ConfigMenuClick\"/>\n                                        <MenuItem Header=\"å¾å\" Click=\"BacklogMenuClick\"/>\n                                        <MenuItem Header=\"æ°æå¼å¯¼\" Click=\"Guide_Click\"/>\n                                    </ContextMenu>\n                                </Button.ContextMenu>\n                            </Button>\n                            <Button Background=\"Transparent\" \n                                    BorderThickness=\"0\"\n                                    hc:IconElement.Geometry=\"M828.770654 148.714771C641.293737-20.89959 354.184117-19.590868 168.245698 152.630946c-212.062907 196.418185-212.062907 522.329912 0 718.748098 185.93842 172.221815 473.048039 173.520546 660.524956 3.916176 219.435707-198.536117 219.435707-528.054322 0-726.580449z m-121.880976 569.643707c-11.708566 11.708566-30.680039 11.708566-42.388605 0L502.729054 556.586459c-0.659356-0.659356-1.728312-0.659356-2.397659 0L338.609327 718.318517c-11.708566 11.708566-30.680039 11.708566-42.388605 0l-0.039961-0.039961c-11.708566-11.708566-11.708566-30.680039 0-42.388605l161.732059-161.732058c0.659356-0.659356 0.659356-1.728312 0-2.397659L296.1408 350.008195c-11.708566-11.708566-11.708566-30.680039 0-42.388605l0.039961-0.039961c11.708566-11.708566 30.680039-11.708566 42.388605 0l161.772019 161.77202c0.659356 0.659356 1.728312 0.659356 2.397659 0L664.551024 307.539668c11.708566-11.708566 30.680039-11.708566 42.388605 0l0.039961 0.039961c11.708566 11.708566 11.708566 30.680039 0 42.388605L545.15762 511.770224c-0.659356 0.659356-0.659356 1.728312 0 2.397659L706.919649 675.939902c11.708566 11.708566 11.708566 30.680039 0 42.388605l-0.029971 0.029971z\" \n                                    hc:IconElement.Height=\"18\"\n                                    hc:IconElement.Width=\"18\"\n                                    HorizontalAlignment=\"Right\"\n                                    Click=\"CloseButtonClick\"\n                                    PreviewMouseLeftButtonDown=\"AppButton_PreviewMouseLeftButtonDown\"\n                                    FocusVisualStyle=\"{x:Null}\"\n                                    />\n                        </hc:UniformSpacingPanel>\n                    </DockPanel>\n\n\n                    <uc:LeftCardControl x:Name=\"LeftCard\" Grid.Row=\"1\" Grid.Column=\"0\"/>\n\n                    <!--åå²çº¿-->\n                    <GridSplitter Opacity=\"0\" Grid.Row=\"1\" Grid.Column=\"0\" Width=\"5\"  VerticalAlignment=\"Stretch\" HorizontalAlignment=\"Right\"/>\n\n                    <Border x:Name=\"SearchResContainer\" Panel.ZIndex=\"2\" \n                        Visibility=\"Collapsed\"\n                        Grid.Row=\"1\" Grid.Column=\"1\" \n                        HorizontalAlignment=\"Right\" MaxWidth=\"200\" \n                        VerticalAlignment=\"Top\"\n                        CornerRadius=\"8\"\n                        Margin=\"0,20,40,0\"\n                        >\n                        <Border.Style>\n                            <Style TargetType=\"Border\" >\n                                <Setter Property=\"Background\">\n                                    <Setter.Value>\n                                        <SolidColorBrush Color=\"White\" Opacity=\"0.6\"/>\n                                    </Setter.Value>\n                                </Setter>\n                                <Setter Property=\"MaxWidth\" Value=\"300\"/>\n                            </Style>\n                        </Border.Style>\n                        <WrapPanel Margin=\"8\">\n                            <TextBlock Opacity=\"0.6\" Text=\"g:\"/>\n                            <TextBlock x:Name=\"GeekDeskSearchTotal\" Opacity=\"0.6\" Text=\"0\"/>\n                            <TextBlock Opacity=\"0.6\" Text=\"+\"/>\n                            <TextBlock Opacity=\"0.6\" Text=\"e:\"/>\n                            <TextBlock x:Name=\"EverythingSearchCount\" Opacity=\"0.6\" Text=\"0\"/>\n                            <TextBlock Opacity=\"0.6\" Text=\" of \"/>\n                            <TextBlock x:Name=\"EverythingSearchTotal\" Opacity=\"0.6\" Text=\"0\"/>\n                        </WrapPanel>\n                    </Border>\n\n                    <!--æç´¢è¾å¥æ¡-->\n                    <TextBox Panel.ZIndex=\"2\" Grid.Row=\"0\" Grid.Column=\"1\" \n                             x:Name=\"SearchBox\"\n                             Width=\"0\"\n                             Margin=\"-100,5,0,0\"\n                             Height=\"32\"\n                             FontSize=\"16\"\n                             BorderThickness=\"0\"\n                             TextChanged=\"SearchBox_TextChanged\"\n                             Style=\"{StaticResource MyTextBoxStyle}\"\n                             >\n                        <TextBox.Background>\n                            <SolidColorBrush Color=\"White\" Opacity=\"0.5\" />\n                        </TextBox.Background>\n                    </TextBox>\n\n\n                    <hc:NotifyIcon Icon=\"/Logo.ico\" Click=\"NotifyIcon_Click\" x:Name=\"BarIcon\"\n                            Visibility=\"{Binding AppConfig.ShowBarIcon, Mode=TwoWay, Converter={StaticResource Boolean2VisibilityConverter}}\">\n                        <hc:NotifyIcon.ContextMenu>\n                            <ContextMenu Width=\"130\" x:Name=\"TaskbarContextMenu\">\n                                <MenuItem Header=\"æå¼é¢æ¿\" Click=\"ShowApp\"/>\n                                <MenuItem Header=\"æ¾è²å¨\" Click=\"ColorPicker\"/>\n                                <MenuItem Header=\"å¤ä»½\" Click=\"BakDataFile\"/>\n                                <MenuItem Header=\"éèå¾æ \" Click=\"CloseBarIcon\"/>\n                                <MenuItem Header=\"å¾å\"  Click=\"BacklogMenuClick\"/>\n                                <MenuItem Header=\"ç¨åºç®å½\"  Click=\"OpenThisDir\"/>\n                                <MenuItem Header=\"è®¾ç½®\"  Click=\"ConfigApp\"/>\n                                <MenuItem Header=\"éå¯\"  Click=\"ReStartApp\"/>\n                                <MenuItem Header=\"éåº\" Click=\"ExitApp\"/>\n                            </ContextMenu>\n                        </hc:NotifyIcon.ContextMenu>\n                    </hc:NotifyIcon>\n\n                    <uc:RightCardControl x:Name=\"RightCard\" Grid.Row=\"1\" Grid.Column=\"1\"/>\n\n\n                    <StackPanel hc:Growl.GrowlParent=\"True\" VerticalAlignment=\"Top\" Margin=\"0,10,10,0\"/>\n                </Grid>\n            </hc:DialogContainer>\n        </Border>\n\n    </Grid>\n\n</Window>\n"
        },
        {
          "name": "MainWindow.xaml.cs",
          "type": "blob",
          "size": 38.2587890625,
          "content": "ï»¿using GeekDesk.Constant;\nusing GeekDesk.Control.Other;\nusing GeekDesk.Control.UserControls.Config;\nusing GeekDesk.Control.UserControls.PannelCard;\nusing GeekDesk.Control.Windows;\nusing GeekDesk.Interface;\nusing GeekDesk.MyThread;\nusing GeekDesk.Plugins.EveryThing;\nusing GeekDesk.Plugins.EveryThing.Constant;\nusing GeekDesk.Task;\nusing GeekDesk.Util;\nusing GeekDesk.ViewModel;\nusing GeekDesk.ViewModel.Temp;\nusing Microsoft.Win32;\nusing NPinyin;\nusing ShowSeconds;\nusing System;\nusing System.Collections.ObjectModel;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Runtime.CompilerServices;\nusing System.Runtime.InteropServices;\nusing System.Text;\nusing System.Threading;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Input;\nusing System.Windows.Interop;\nusing System.Windows.Media;\nusing System.Windows.Media.Animation;\nusing System.Windows.Media.Imaging;\nusing System.Windows.Media.Media3D;\nusing System.Windows.Shell;\nusing System.Windows.Threading;\nusing static GeekDesk.Util.ShowWindowFollowMouse;\n\nnamespace GeekDesk\n{\n    /// <summary>\n    /// MainWindow.xaml çäº¤äºé»è¾\n    /// </summary>\n    /// \n    public partial class MainWindow : Window, IWindowCommon\n    {\n\n        public static AppData appData;\n        public static ToDoInfoWindow toDoInfoWindow;\n        public static int hotKeyId = -1;\n        public static int toDoHotKeyId = -1;\n        public static int colorPickerHotKeyId = -1;\n        public static MainWindow mainWindow;\n\n       \n\n        private static bool dataFileExist = true;\n        public MainWindow()\n        {\n            \n            //å è½½æ°æ®\n            LoadData();\n            InitializeComponent();\n\n            //ç¨äºå¶ä»ç±»è®¿é®\n            mainWindow = this;\n\n            //æ§è¡å¾åæé\n            ToDoTask.BackLogCheck();\n\n            ////å®ä¾åéè Hideç±»ï¼è¿è¡æ¶é´timerè®¾ç½®\n            MarginHide.ReadyHide(this);\n            if (appData.AppConfig.MarginHide)\n            {\n                MarginHide.StartHide();\n            }\n\n        }\n\n        private void Window_SourceInitialized(object sender, EventArgs e)\n        {\n            try\n            {\n                //ç¦ç¨çªå£æå¤§å\n                WindowUtil.DisableMaxWindow(this);\n            }\n            catch (Exception) { }\n        }\n\n\n\n        /// <summary>\n        /// æç´¢å¿«æ·é®æä¸\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void SearchHotKeyDown(object sender, CanExecuteRoutedEventArgs e)\n        {\n            if (appData.AppConfig.SearchType == SearchType.HOT_KEY && !RunTimeStatus.SEARCH_BOX_SHOW)\n            {\n                ShowSearchBox();\n            } else if (RunTimeStatus.SEARCH_BOX_SHOW)\n            {\n                HidedSearchBox();\n            }\n        }\n\n        /// <summary>\n        /// æ¾ç¤ºæç´¢æ¡\n        /// </summary>\n        private void ShowSearchBox()\n        {\n            RunTimeStatus.SEARCH_BOX_SHOW = true;\n            RightCard.VisibilitySearchCard(Visibility.Visible);\n            SearchBox.Width = 400;\n            SearchBox.Focus();\n\n            //æ§è¡ä¸éaæ¥è¯¢\n            //SearchBox_TextChanged(null, null);\n        }\n        /// <summary>\n        /// æç´¢å¼å§\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void SearchBox_TextChanged(object sender, TextChangedEventArgs e)\n        {\n            if (!RunTimeStatus.SEARCH_BOX_SHOW\n               && appData.AppConfig.SearchType != SearchType.KEY_DOWN\n               )\n            {\n                SearchBox.TextChanged -= SearchBox_TextChanged;\n                SearchBox.Clear();\n                SearchBox.TextChanged += SearchBox_TextChanged;\n                return;\n            }\n\n            if (!RunTimeStatus.SEARCH_BOX_SHOW) ShowSearchBox();\n\n            //å·æ°æç´¢å é¼ æ ç§»å¨æ¬¡æ°ç½®ä¸º0\n            RunTimeStatus.MOUSE_MOVE_COUNT = 0;\n            //éèpopup\n            RightCard.MyPoptip.IsOpen = false;\n\n            string inputText = SearchBox.Text.ToLower();\n            if (!string.IsNullOrEmpty(inputText))\n            {\n                RunTimeStatus.EVERYTHING_SEARCH_DELAY_TIME = 300;\n                if (!RunTimeStatus.EVERYTHING_NEW_SEARCH)\n                {                    \n                    RunTimeStatus.EVERYTHING_NEW_SEARCH = true;\n                    //æ¾ç¤ºæç´¢ç»æåè¡¨\n                    RightCard.VisibilitySearchCard(Visibility.Visible);\n                    //ææ¶éèæ¡ç®ä¿¡æ¯\n                    SearchResContainer.Visibility = Visibility.Collapsed;\n                    //æ¾ç¤ºå è½½æ¡\n                    RightCard.Loading_RightCard.Visibility = Visibility.Visible;\n                    object obj = RightCard.VerticalCard.Content;\n                    if (obj != null)\n                    {\n                        SearchResControl control = obj as SearchResControl;\n                        control.VerticalUFG.Visibility = Visibility.Collapsed;\n                    }\n                    SearchDelay();\n                }\n            } else\n            {\n                //éèæ¡ç®ä¿¡æ¯\n                SearchResContainer.Visibility = Visibility.Collapsed;\n                //æ¸ç©ºæ¥è¯¢ç»æ\n                object obj = RightCard.VerticalCard.Content;\n                if (obj != null)\n                {\n                    SearchResControl control = obj as SearchResControl;\n                    control.VerticalUFG.Visibility = Visibility.Collapsed;\n                }\n            }\n            \n        }\n\n        private void SearchDelay()\n        {\n\n            new Thread(() =>\n            {\n\n                while (RunTimeStatus.EVERYTHING_SEARCH_DELAY_TIME > 0)\n                {\n                    Thread.Sleep(10);\n                    RunTimeStatus.EVERYTHING_SEARCH_DELAY_TIME -= 10;\n                }\n                RunTimeStatus.EVERYTHING_NEW_SEARCH = false;\n\n                this.Dispatcher.Invoke(() =>\n                {\n                    string inputText = SearchBox.Text.ToLower().Trim();\n                    if (string.IsNullOrEmpty(inputText))\n                    {\n                        RightCard.Loading_RightCard.Visibility = Visibility.Collapsed;\n                        return;\n                    }\n                    new Thread(() =>\n                    {\n                        ObservableCollection<IconInfo> resList = new ObservableCollection<IconInfo>();\n\n                        if (appData.AppConfig.EnableEveryThing == true)\n                        {\n                            ObservableCollection<IconInfo> iconBakList = EveryThingUtil.Search(inputText);                            \n                            foreach (IconInfo icon in iconBakList)\n                            {\n                                resList.Add(icon);\n                            }\n                        }\n\n                        int geekDeskCount = 0;\n                        //GeekDeskæ°æ®æç´¢\n                        ObservableCollection<MenuInfo> menuList = appData.MenuList;\n                        foreach (MenuInfo menu in menuList)\n                        {\n                            ObservableCollection<IconInfo> iconList = menu.IconList;\n                            foreach (IconInfo icon in iconList)\n                            {\n                                if (RunTimeStatus.EVERYTHING_NEW_SEARCH) return;\n                                string pyName = Pinyin.GetInitials(icon.Name).ToLower();\n                                if (icon.Name.Contains(inputText) || pyName.Contains(inputText))\n                                {\n                                    geekDeskCount++;\n                                    resList.Add(icon);\n                                }\n                            }\n                        }\n\n                        this.Dispatcher.Invoke(() =>\n                        {\n                            if (appData.AppConfig.EnableEveryThing == true)\n                            {\n                                int everythingTotal = Convert.ToInt32(EveryThingUtil.Everything_GetNumResults());\n                                GeekDeskSearchTotal.Text = Convert.ToString(geekDeskCount);\n                                EverythingSearchCount.Text = Convert.ToString(resList.Count - geekDeskCount);\n                                EverythingSearchTotal.Text = Convert.ToString(everythingTotal + geekDeskCount);\n                                SearchResContainer.Visibility = Visibility.Visible;\n                            }\n                            SearchResControl control = new SearchResControl(resList);\n                            RightCard.VerticalCard.Content = control;\n                            //å³é­å è½½ææ\n                            RightCard.Loading_RightCard.Visibility = Visibility.Collapsed;\n                        });\n                    }).Start();\n\n                });\n\n            }).Start();\n        }\n\n        /// <summary>\n        /// éèæç´¢æ¡\n        /// </summary>\n        public void HidedSearchBox()\n        {\n            RunTimeStatus.EVERYTHING_NEW_SEARCH = true;\n            RunTimeStatus.SEARCH_BOX_HIDED_300 = false;\n            new Thread(() =>\n            {\n                Thread.Sleep(300);\n                RunTimeStatus.SEARCH_BOX_HIDED_300 = true;\n            }).Start();\n            new Thread(() =>\n            {\n                Thread.Sleep(1000);\n                RunTimeStatus.EVERYTHING_NEW_SEARCH = false;\n            }).Start();\n            new Thread(() =>\n            {\n                this.Dispatcher.Invoke(() =>\n                {\n                    Keyboard.Focus(SearchBox);\n                    RunTimeStatus.SEARCH_BOX_SHOW = false;\n                    SearchBox.TextChanged -= SearchBox_TextChanged;\n                    SearchBox.Clear();\n                    SearchBox.TextChanged += SearchBox_TextChanged;\n                    SearchBox.Width = 0;\n                    SearchResContainer.Visibility = Visibility.Collapsed;\n                    RightCard.VerticalCard.Content = null;\n                    RightCard.VisibilitySearchCard(Visibility.Collapsed);\n                });\n            }).Start();\n        }\n\n\n        /// <summary>\n        /// å è½½ç¼å­æ°æ®\n        /// </summary>\n        private void LoadData()\n        {\n            //å¤æ­æ°æ®æä»¶æ¯å¦å­å¨ å¦æä¸å­å¨é£ä¹æ¯ç¬¬ä¸æ¬¡æå¼ç¨åº\n            dataFileExist = File.Exists(Constants.DATA_FILE_PATH);\n\n            appData = CommonCode.GetAppDataByFile();\n\n            this.DataContext = appData;\n            if (appData.MenuList.Count == 0)\n            {\n                appData.MenuList.Add(new MenuInfo() { MenuName = \"NewMenu\", MenuId = System.Guid.NewGuid().ToString(), MenuEdit = Visibility.Collapsed });\n            }\n\n            this.Width = appData.AppConfig.WindowWidth;\n            this.Height = appData.AppConfig.WindowHeight;\n        }\n\n        /// <summary>\n        /// çªå£å è½½å®æ¯ æ§è¡æ¹æ³\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        void Window_Loaded(object sender, RoutedEventArgs e)\n        {\n            BGSettingUtil.BGSetting();\n            if (!appData.AppConfig.StartedShowPanel)\n            {\n                this.Visibility = Visibility.Collapsed;\n            }\n            else\n            {\n                ShowApp();\n            }\n            //ç»ä»»å¡æ å¾æ ä¸ä¸ªåå­\n            BarIcon.Text = Constants.MY_NAME;\n\n            //æ³¨åç­é®\n            if (true == appData.AppConfig.EnableAppHotKey)\n            {\n                RegisterHotKey(true);\n            }\n            if (true == appData.AppConfig.EnableTodoHotKey)\n            {\n                RegisterCreateToDoHotKey(true);\n            }\n\n            if (true == appData.AppConfig.EnableColorPickerHotKey)\n            {\n                RegisterColorPickerHotKey(true);\n            }\n\n            //æ³¨åèªå¯å¨\n            if (!appData.AppConfig.SelfStartUped && !Constants.DEV)\n            {\n                RegisterUtil.SetSelfStarting(appData.AppConfig.SelfStartUp, Constants.MY_NAME);\n            }\n\n            //æ³¨åé¼ æ çå¬äºä»¶\n            if (appData.AppConfig.MouseMiddleShow)\n            {\n                MouseHookThread.Hook();\n            }\n\n            //æ¾ç§æä»¶\n            if (appData.AppConfig.SecondsWindow == true)\n            {\n                SecondsWindow.ShowWindow();\n            }\n\n            //çå¬å®æ¶æä»¶å¤¹èå\n            FileWatcher.EnableLinkMenuWatcher(appData);\n\n\n            //æ´æ°çº¿ç¨å¼å¯  æ£æµæ´æ°\n            UpdateThread.Update();\n\n            //å»ºç«ç¸å¯¹è·¯å¾\n            RelativePathThread.MakeRelativePath();\n\n            //æ¯ç»ç  ææ¶æªè§£å³é´å½±é®é¢\n            //BlurGlassUtil.EnableBlur(this);\n\n            //è®¾ç½®å½å±æ¡é¢  è§£å³æ¡é¢è¦çç¨åºçé¢çbug\n            WindowUtil.SetOwner(this, WindowUtil.GetDesktopHandle(this, DesktopLayer.Progman));\n\n            if (appData.AppConfig.EnableEveryThing == true)\n            {\n                //å¼å¯EveryThingæä»¶\n                EveryThingUtil.EnableEveryThing();\n            }\n\n            Keyboard.Focus(SearchBox);\n\n            MessageUtil.ChangeWindowMessageFilter(MessageUtil.WM_COPYDATA, 1);\n\n\n            if (!dataFileExist)\n            {\n                Guide();\n            }\n        }\n\n\n\n        /// <summary>\n        /// æ³¨åå½åçªå£çç­é®\n        /// </summary>\n        public static void RegisterHotKey(bool first)\n        {\n            try\n            {\n                if (appData.AppConfig.HotkeyModifiers != GlobalHotKey.HotkeyModifiers.None)\n                {\n                    hotKeyId = GlobalHotKey.RegisterHotKey(appData.AppConfig.HotkeyModifiers, appData.AppConfig.Hotkey, () =>\n                    {\n                        if (RunTimeStatus.MAIN_HOT_KEY_DOWN) return;\n                        RunTimeStatus.MAIN_HOT_KEY_DOWN = true;\n                        new Thread(() =>\n                        {\n                            Thread.Sleep(RunTimeStatus.MAIN_HOT_KEY_TIME);\n                            RunTimeStatus.MAIN_HOT_KEY_DOWN = false;\n                        }).Start();\n\n                        if (MotionControl.hotkeyFinished)\n                        {\n                            if (CheckShouldShowApp())\n                            {\n                                ShowApp();\n                            }\n                            else\n                            {\n                                HideApp();\n                            }\n                        }\n                    });\n                    if (!first)\n                    {\n                        HandyControl.Controls.Growl.Success(\"GeekDeskå¿«æ·é®æ³¨åæå(\" + appData.AppConfig.HotkeyStr + \")!\", \"HotKeyGrowl\");\n                    }\n                }\n                else\n                {\n                }\n            }\n            catch (Exception)\n            {\n                if (first)\n                {\n                    HandyControl.Controls.Growl.WarningGlobal(\"GeekDeskå¯å¨å¿«æ·é®å·²è¢«å¶å®ç¨åºå ç¨(\" + appData.AppConfig.HotkeyStr + \")!\");\n                }\n                else\n                {\n                    HandyControl.Controls.Growl.Warning(\"GeekDeskå¯å¨å¿«æ·é®å·²è¢«å¶å®ç¨åºå ç¨(\" + appData.AppConfig.HotkeyStr + \")!\", \"HotKeyGrowl\");\n\n                }\n            }\n        }\n\n\n\n        /// <summary>\n        /// æ³¨åæ°å»ºå¾åçç­é®\n        /// </summary>\n        public static void RegisterCreateToDoHotKey(bool first)\n        {\n            try\n            {\n\n                if (appData.AppConfig.HotkeyModifiers != GlobalHotKey.HotkeyModifiers.None)\n                {\n                    //å è½½å®æ¯æ³¨åç­é®\n                    toDoHotKeyId = GlobalHotKey.RegisterHotKey(appData.AppConfig.ToDoHotkeyModifiers, appData.AppConfig.ToDoHotkey, () =>\n                    {\n                        if (MotionControl.hotkeyFinished)\n                        {\n                            ToDoWindow.ShowOrHide();\n                        }\n                    });\n                    if (!first)\n                    {\n                        HandyControl.Controls.Growl.Success(\"æ°å»ºå¾åä»»å¡å¿«æ·é®æ³¨åæå(\" + appData.AppConfig.ToDoHotkeyStr + \")!\", \"HotKeyGrowl\");\n                    }\n                }\n\n            }\n            catch (Exception)\n            {\n                if (first)\n                {\n                    HandyControl.Controls.Growl.WarningGlobal(\"æ°å»ºå¾åä»»å¡å¿«æ·é®å·²è¢«å¶å®ç¨åºå ç¨(\" + appData.AppConfig.ToDoHotkeyStr + \")!\");\n                }\n                else\n                {\n                    HandyControl.Controls.Growl.Warning(\"æ°å»ºå¾åä»»å¡å¿«æ·é®å·²è¢«å¶å®ç¨åºå ç¨(\" + appData.AppConfig.ToDoHotkeyStr + \")!\", \"HotKeyGrowl\");\n                }\n            }\n        }\n\n        /// <summary>\n        /// æ³¨åæ°å»ºå¾åçç­é®\n        /// </summary>\n        public static void RegisterColorPickerHotKey(bool first)\n        {\n            try\n            {\n                if (appData.AppConfig.HotkeyModifiers != GlobalHotKey.HotkeyModifiers.None)\n                {\n                    //å è½½å®æ¯æ³¨åç­é®\n                    colorPickerHotKeyId = GlobalHotKey.RegisterHotKey(appData.AppConfig.ColorPickerHotkeyModifiers, appData.AppConfig.ColorPickerHotkey, () =>\n                    {\n                        if (MotionControl.hotkeyFinished)\n                        {\n                            GlobalColorPickerWindow.CreateNoShow();\n                        }\n                    });\n                    if (!first)\n                    {\n                        HandyControl.Controls.Growl.Success(\"æ¾è²å¨å¿«æ·é®æ³¨åæå(\" + appData.AppConfig.ColorPickerHotkeyStr + \")!\", \"HotKeyGrowl\");\n                    }\n                }\n            }\n            catch (Exception)\n            {\n                if (first)\n                {\n                    HandyControl.Controls.Growl.WarningGlobal(\"æ¾è²å¨å¿«æ·é®å·²è¢«å¶å®ç¨åºå ç¨(\" + appData.AppConfig.ColorPickerHotkeyStr + \")!\");\n                }\n                else\n                {\n                    HandyControl.Controls.Growl.Warning(\"æ¾è²å¨å¿«æ·é®å·²è¢«å¶å®ç¨åºå ç¨(\" + appData.AppConfig.ColorPickerHotkeyStr + \")!\", \"HotKeyGrowl\");\n                }\n            }\n        }\n\n\n\n\n        /// <summary>\n        /// ç¨åºçªä½æå¨\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void DragMove(object sender, MouseEventArgs e)\n        {\n            if (e.LeftButton == MouseButtonState.Pressed)\n            {\n                DragMove();\n            }\n        }\n\n\n\n\n        /// <summary>\n        /// å³é­æé®åå»äºä»¶\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void CloseButtonClick(object sender, RoutedEventArgs e)\n        {\n            HideApp();\n        }\n\n\n\n        ///// <summary>\n        ///// å·¦ä¾§æ å®½åº¦æ¹å æä¹å\n        ///// </summary>\n        ///// <param name=\"sender\"></param>\n        ///// <param name=\"e\"></param>\n        //private void LeftCardResize(object sender, System.Windows.Controls.Primitives.DragCompletedEventArgs e)\n        //{\n        //    appData.AppConfig.MenuCardWidth = LeftColumn.Width.Value;\n        //}\n\n\n\n        /// <summary>\n        /// å³é®ä»»å¡æ å¾æ  æ¾ç¤ºä¸»é¢æ¿\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        public void ShowApp(object sender, RoutedEventArgs e)\n        {\n            ShowApp();\n        }\n        public static void ShowApp()\n        {\n            //æå¨å±ååºç¨åä¸æ¾ç¤º\n            //if (CommonCode.IsPrimaryFullScreen())\n            //{\n            //    return;\n            //}\n\n            if (MarginHide.ON_HIDE)\n            {\n                //ä¿®æ¹è´´è¾¹éèç¶æä¸ºæªéè\n                MarginHide.IS_HIDE = false;\n                if (!CommonCode.MouseInWindow(mainWindow))\n                {\n                    RunTimeStatus.MARGIN_HIDE_AND_OTHER_SHOW = true;\n                    MarginHide.WaitHide(3000);\n                }\n            }\n\n            if (appData.AppConfig.FollowMouse)\n            {\n                ShowWindowFollowMouse.Show(mainWindow, MousePosition.CENTER, 0, 0);\n            }\n\n\n            MainWindow.mainWindow.Activate();\n            mainWindow.Show();\n            //mainWindow.Visibility = Visibility.Visible;\n            if (appData.AppConfig.AppAnimation)\n            {\n                appData.AppConfig.IsShow = true;\n            }\n            else\n            {\n                appData.AppConfig.IsShow = null;\n                //é²æ­¢æ°¸è¿ä¸æ¾ç¤ºçé¢\n                if (mainWindow.Opacity < 1)\n                {\n                    mainWindow.Opacity = 1;\n                }\n            }\n\n\n            //FadeStoryBoard(1, (int)CommonEnum.WINDOW_ANIMATION_TIME, Visibility.Visible);\n\n            Keyboard.Focus(mainWindow);\n            if (RunTimeStatus.SHOW_MENU_PASSWORDBOX)\n            {\n                mainWindow.RightCard.PDDialog.SetFocus();\n            }\n            else\n            {\n                Keyboard.Focus(mainWindow.SearchBox);\n            }\n        }\n\n        public static void HideApp()\n        {\n            if (appData.AppConfig.AppAnimation)\n            {\n                appData.AppConfig.IsShow = false;\n            }\n            else\n            {\n                appData.AppConfig.IsShow = null;\n                HideAppVis();\n            }\n\n        }\n\n        private static void HideAppVis()\n        {\n            //å³é­éå®\n            RunTimeStatus.LOCK_APP_PANEL = false;\n            if (RunTimeStatus.SEARCH_BOX_SHOW)\n            {\n                mainWindow.HidedSearchBox();\n            }\n            mainWindow.Visibility = Visibility.Collapsed;\n            //if (!MarginHide.IS_HIDE)\n            //{\n\n            //}\n            //else\n            //{\n            //    ShowApp();\n            //}\n        }\n\n        /// <summary>\n        /// æ·¡å¥æ·¡åºææ\n        /// </summary>\n        /// <param name=\"opacity\"></param>\n        /// <param name=\"milliseconds\"></param>\n        /// <param name=\"visibility\"></param>\n        public static void FadeStoryBoard(int opacity, int milliseconds, Visibility visibility)\n        {\n            if (appData.AppConfig.AppAnimation)\n            {\n                DoubleAnimation opacityAnimation = new DoubleAnimation\n                {\n                    From = mainWindow.Opacity,\n                    To = opacity,\n                    Duration = new Duration(TimeSpan.FromMilliseconds(milliseconds))\n                };\n                opacityAnimation.Completed += (s, e) =>\n                {\n                    mainWindow.BeginAnimation(OpacityProperty, null);\n                    if (visibility == Visibility.Visible)\n                    {\n                        mainWindow.Opacity = 1;\n                    }\n                    else\n                    {\n                        mainWindow.Opacity = 0;\n                        CommonCode.SortIconList();\n                    }\n                };\n                Timeline.SetDesiredFrameRate(opacityAnimation, 60);\n                mainWindow.BeginAnimation(OpacityProperty, opacityAnimation);\n            }\n            else\n            {\n                //é²æ­¢å³é­å¨ç»å çªä½ä»æ¯0éæåº¦\n                mainWindow.Opacity = 1;\n                mainWindow.Visibility = visibility;\n                if (visibility == Visibility.Collapsed)\n                {\n                    CommonCode.SortIconList();\n                }\n            }\n        }\n\n\n\n\n        /// <summary>\n        /// å¾çå¾æ åå»äºä»¶\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void NotifyIcon_Click(object sender, RoutedEventArgs e)\n        {\n            if (CheckShouldShowApp())\n            {\n                ShowApp();\n            }\n            else\n            {\n                HideApp();\n            }\n        }\n\n        private static bool CheckShouldShowApp()\n        {\n            return mainWindow.Visibility == Visibility.Collapsed\n                || mainWindow.Opacity == 0\n                || MarginHide.IS_HIDE\n                || !WindowUtil.WindowIsTop(mainWindow);\n        }\n\n        /// <summary>\n        /// å³é®ä»»å¡æ å¾æ  è®¾ç½®\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void ConfigApp(object sender, RoutedEventArgs e)\n        {\n            ConfigWindow.Show(appData.AppConfig, this);\n        }\n\n\n        /// <summary>\n        /// å³é®ä»»å¡æ å¾æ æå¼ç¨åºç®å½\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void OpenThisDir(object sender, RoutedEventArgs e)\n        {\n            Process p = new Process();\n            p.StartInfo.FileName = \"Explorer.exe\";\n            p.StartInfo.Arguments = \"/e,/select,\" + Constants.APP_DIR + Constants.MY_NAME + \".exe\";\n            p.Start();\n        }\n\n\n\n\n        /// <summary>\n        /// è®¾ç½®å¾æ \n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void ConfigButtonClick(object sender, RoutedEventArgs e)\n        {\n            SettingMenus.IsOpen = true;\n        }\n\n        /// <summary>\n        /// è®¾ç½®èåç¹å»\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void ConfigMenuClick(object sender, RoutedEventArgs e)\n        {\n            ConfigWindow.Show(appData.AppConfig, this);\n        }\n        /// <summary>\n        /// å¾åä»»å¡\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void BacklogMenuClick(object sender, RoutedEventArgs e)\n        {\n            ToDoWindow.Show();\n        }\n        /// <summary>\n        /// ç¦ç¨è®¾ç½®æé®å³é®èå\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void SettingButton_Initialized(object sender, EventArgs e)\n        {\n            SettingButton.ContextMenu = null;\n        }\n\n\n        private void AppWindowLostFocus()\n        {\n            if (appData.AppConfig.AppHideType == AppHideType.LOST_FOCUS\n                && this.Opacity == 1 && !RunTimeStatus.LOCK_APP_PANEL)\n            {\n                //å¦æå¼å¯äºè´´è¾¹éè åçªä½ä¸è´´è¾¹æéèçªå£\n                if (!appData.AppConfig.MarginHide || (appData.AppConfig.MarginHide && !MarginHide.IS_HIDE))\n                {\n                    HideApp();\n                }\n            }\n        }\n\n\n        private void Window_SizeChanged(object sender, SizeChangedEventArgs e)\n        {\n            if (this.DataContext != null)\n            {\n                AppData appData = this.DataContext as AppData;\n                appData.AppConfig.WindowWidth = this.Width;\n                appData.AppConfig.WindowHeight = this.Height;\n            }\n            if (guideRun)\n            {\n                Guide();\n            }\n        }\n\n\n\n        /// <summary>\n        /// å³é®ä»»å¡æ å¾æ éåº\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void ExitApp(object sender, RoutedEventArgs e)\n        {\n            if (appData.AppConfig.MouseMiddleShow || appData.AppConfig.SecondsWindow == true)\n            {\n                MouseHookThread.Dispose();\n            }\n            if (appData.AppConfig.EnableEveryThing == true)\n            {\n                EveryThingUtil.DisableEveryThing();\n            }\n            Application.Current.Shutdown();\n        }\n        /// <summary>\n        /// éå¯\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void ReStartApp(object sender, RoutedEventArgs e)\n        {\n            if (appData.AppConfig.MouseMiddleShow || appData.AppConfig.SecondsWindow == true)\n            {\n                MouseHookThread.Dispose();\n            }\n\n            Process p = new Process();\n            p.StartInfo.FileName = Constants.APP_DIR + \"GeekDesk.exe\";\n            p.StartInfo.WorkingDirectory = Constants.APP_DIR;\n            p.Start();\n\n            Application.Current.Shutdown();\n        }\n\n        /// <summary>\n        /// å³é­æçå¾æ \n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void CloseBarIcon(object sender, RoutedEventArgs e)\n        {\n            appData.AppConfig.ShowBarIcon = false;\n        }\n\n\n        public void OnKeyDown(object sender, KeyEventArgs e)\n        {\n            //char c = (char)e.Key;\n\n            if (e.Key == Key.Escape)\n            {\n                HideApp();\n            }\n\n            if (RunTimeStatus.SEARCH_BOX_SHOW && (e.Key == Key.Up\n                || e.Key == Key.Down\n                || e.Key == Key.Tab\n                || e.Key == Key.Enter\n                ))\n            {\n                if (e.Key == Key.Down || e.Key == Key.Tab)\n                {\n                    SearchResControl res = RightCard.VerticalCard.Content as SearchResControl;\n                    res.SearchListBoxIndexAdd();\n                }\n                else if (e.Key == Key.Up)\n                {\n                    SearchResControl res = RightCard.VerticalCard.Content as SearchResControl;\n                    res.SearchListBoxIndexSub();\n                }\n                else if (e.Key == Key.Enter)\n                {\n                    SearchResControl res = RightCard.VerticalCard.Content as SearchResControl;\n                    res.StartupSelectionItem();\n                }\n            }\n        }\n\n\n\n        /// <summary>\n        /// ä¸ºäºè®©ä¿®æ¹èåçtextBoxå¤±å»ç¦ç¹\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void MainWindow_MouseDown(object sender, MouseButtonEventArgs e)\n        {\n            SearchBox.Focus();\n        }\n\n        /// <summary>\n        /// é¼ æ è¿å¥å \n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void MainWindow_MouseEnter(object sender, MouseEventArgs e)\n        {\n            //é²æ­¢å»¶è¿è´´è¾¹éè\n            RunTimeStatus.MARGIN_HIDE_AND_OTHER_SHOW = false;\n        }\n\n        /// <summary>\n        /// æå¼å±å¹æ¾è²å¨\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void ColorPicker(object sender, RoutedEventArgs e)\n        {\n            TaskbarContextMenu.IsOpen = false;\n            GlobalColorPickerWindow.CreateNoShow();\n        }\n\n        private void Window_GotFocus(object sender, RoutedEventArgs e)\n        {\n            // å¦ææ²¡æå¨ä¿®æ¹èå å¹¶ä¸ä¸æ¯å³é®ç¹å»äºé¢æ¿\n            if (!RunTimeStatus.IS_MENU_EDIT\n                && !RunTimeStatus.SHOW_RIGHT_BTN_MENU\n                && !RunTimeStatus.APP_BTN_IS_DOWN)\n            {\n                if (RunTimeStatus.SHOW_MENU_PASSWORDBOX)\n                {\n                    //å¿é¡»å¨å¶å®ææ¬æ¡æ²¡æå·¥ä½çæ¶åæç»å¯ç æ¡ç¦ç¹\n                    RightCard.PDDialog.SetFocus();\n                }\n                else\n                {\n                    //å¿é¡»å¨å¶å®ææ¬æ¡æ²¡æå·¥ä½çæ¶åæç»æç´¢æ¡ç¦ç¹\n                    Keyboard.Focus(SearchBox);\n                }\n\n            }\n\n        }\n\n        private void AppWindow_Deactivated(object sender, EventArgs e)\n        {\n            AppWindowLostFocus();\n        }\n\n        /// <summary>\n        /// å¤ä»½æ°æ®æä»¶\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        [Obsolete]\n        private void BakDataFile(object sender, RoutedEventArgs e)\n        {\n            Thread t = new Thread(() =>\n            {\n                CommonCode.BakAppData();\n            });\n            t.ApartmentState = ApartmentState.STA;\n            t.Start();\n        }\n\n        private void AppButton_PreviewMouseLeftButtonDown(object sender, MouseButtonEventArgs e)\n        {\n            //ç¹å»äºé¢æ¿\n            RunTimeStatus.APP_BTN_IS_DOWN = true;\n            new Thread(() =>\n            {\n                Thread.Sleep(50);\n                RunTimeStatus.APP_BTN_IS_DOWN = false;\n            }).Start();\n        }\n\n\n        private ICommand _hideCommand;\n        public ICommand HideCommand\n        {\n            get\n            {\n                if (_hideCommand == null)\n                {\n                    _hideCommand = new RelayCommand(\n                        p =>\n                        {\n                            return true;\n                        },\n                        p =>\n                        {\n                            HideAppVis();\n                        });\n                }\n                return _hideCommand;\n            }\n        }\n\n        protected override void OnSourceInitialized(EventArgs e)\n        {\n            base.OnSourceInitialized(e);\n            HwndSource hwndSource = PresentationSource.FromVisual(this) as HwndSource;\n            if (hwndSource != null)\n            {\n                IntPtr handle = hwndSource.Handle;\n                hwndSource.AddHook(new HwndSourceHook(WndProc));\n            }\n        }\n\n        IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)\n        {\n            if (msg == MessageUtil.WM_COPYDATA)\n            {\n                MessageUtil.CopyDataStruct cds = (MessageUtil.CopyDataStruct)System.Runtime.InteropServices.Marshal.PtrToStructure(lParam, typeof(MessageUtil.CopyDataStruct));\n                if (\"ShowApp\".Equals(cds.msg))\n                {\n                    ShowApp();\n                }\n            }\n            return hwnd;\n        }\n\n        #region æ°æå¼å¯¼\n\n        private int guideIndex = 0;\n        private bool guideRun = false;\n        private void Guide()\n        {\n            try\n            {\n                guideRun = true;\n                //é²æ­¢å½±åä¸»ç¨åºè¿ç¨\n                if (CheckShouldShowApp())\n                {\n                    ShowApp();\n                }\n                GrayBorder.Visibility = Visibility.Visible;\n                GuideSwitch(guideIndex);\n                GuideCard.Visibility = Visibility.Visible;\n            }\n            catch (Exception) { guideRun = false; }\n        }\n\n        private void GuideSwitch(int index)\n        {\n            guideIndex = index;\n            GuideNum.Text = Convert.ToString(index + 1);\n            GuideTitle1.Text = GuideInfoList.mainWindowGuideList[index].Title1;\n            GuideTitle2.Text = GuideInfoList.mainWindowGuideList[index].Title2;\n            GuideText.Text = GuideInfoList.mainWindowGuideList[index].GuideText;\n\n            if (index == 0)\n            {\n                PreviewGuideBtn.Visibility = Visibility.Collapsed;\n                NextGuideBtn.Content = \"ä¸ä¸æ­¥\";\n            } else if (index > 0 && index < GuideInfoList.mainWindowGuideList.Count - 1)\n            {\n                PreviewGuideBtn.Visibility = Visibility.Visible;\n                NextGuideBtn.Content = \"ä¸ä¸æ­¥\";\n            } else\n            {\n                NextGuideBtn.Content = \"å®æ\";\n            }\n\n            switch (index)\n            {\n                default: //0  //å³ä¾§åè¡¨åºå\n                    \n                    Point point = RightCard.TransformToAncestor(this).Transform(new Point(0, 0));\n                    //åé¨ä¸­ä¸\n                    GrayBoderClip(point.X, point.Y, RightCard.ActualWidth, RightCard.ActualHeight,\n                        new Thickness(point.X + RightCard.ActualWidth / 2 - GuideCard.ActualWidth / 2, point.Y, 0, 0));\n                    break;\n                case 1:  //å·¦ä¾§èå\n                    Point leftCardPoint = LeftCard.TransformToAncestor(this).Transform(new Point(0, 0));\n                    GrayBoderClip(leftCardPoint.X , leftCardPoint.Y , LeftCard.ActualWidth, LeftCard.ActualHeight,\n                        // å¤é¨ä¸­ä¸ä¾§\n                        new Thickness(leftCardPoint.X + LeftCard.ActualWidth,\n                        leftCardPoint.Y + LeftCard.ActualHeight / 2 - GuideCard.ActualHeight / 2, 0, 0));\n                    break;\n                case 2: //å¤´é¨ææ½æ \n                    GrayBoderClip(0, 0, this.Width, 50,\n                        // å¤é¨ä¸­ä¸ä¾§\n                        new Thickness(this.Width / 2 - GuideCard.ActualWidth / 2, 50, 0, 0));\n                    break;\n                case 3:\n                    Point mainBtnPoint = MainBtnPanel.TransformToAncestor(this).Transform(new Point(0, 0));\n                    GrayBoderClip(mainBtnPoint.X, mainBtnPoint.Y, MainBtnPanel.ActualWidth, MainBtnPanel.ActualHeight,\n                        // å¤é¨å·¦ä¸ä¾§\n                        new Thickness(mainBtnPoint.X - GuideCard.Width,\n                        mainBtnPoint.Y, 0, 0));\n                    break;\n            }\n        }\n\n\n        private void GrayBoderClip(double x, double y, double w, double h, Thickness margin)\n        {\n            PathGeometry borGeometry = new PathGeometry();\n\n            RectangleGeometry rg = new RectangleGeometry();\n            rg.Rect = new Rect(0, 0, this.Width, this.Height);\n            borGeometry = Geometry.Combine(borGeometry, rg, GeometryCombineMode.Union, null);\n            GrayBorder.Clip = borGeometry;\n\n            RectangleGeometry rg1 = new RectangleGeometry();\n            rg1.Rect = new Rect(x - 20, y - 20, w, h);\n            borGeometry = Geometry.Combine(borGeometry, rg1, GeometryCombineMode.Exclude, null);\n            GuideCard.Margin = margin;\n            GrayBorder.Clip = borGeometry;\n        }\n\n        private void PreviewGuideBtn_Click(object sender, RoutedEventArgs e)\n        {\n            int index = Convert.ToInt32(GuideNum.Text.ToString()) - 1;\n            int previewIndex = index - 1;\n            GuideSwitch(previewIndex);\n        }\n\n        private void NextGuideBtn_Click(object sender, RoutedEventArgs e)\n        {\n            if (\"å®æ\".Equals(NextGuideBtn.Content.ToString())) {\n                GrayBorder.Visibility = Visibility.Collapsed;\n                GuideCard.Visibility = Visibility.Collapsed;\n                guideIndex = 0;\n                guideRun = false;\n                return;\n            }\n            int index = Convert.ToInt32(GuideNum.Text.ToString()) - 1;\n            int nextIndex = index + 1;\n            GuideSwitch(nextIndex);\n        }\n\n\n        #endregion\n\n        private void Guide_Click(object sender, RoutedEventArgs e)\n        {\n            Guide();\n        }\n    }\n}\n"
        },
        {
          "name": "MainWindow.xaml.rej",
          "type": "blob",
          "size": 0.3037109375,
          "content": "# BookerLiu\ndiff a/MainWindow.xaml b/MainWindow.xaml\t(rejected hunks)\n@@ -20,6 +20,7 @@\n         SizeChanged=\"Window_SizeChanged\"\n         KeyDown=\"OnKeyDown\"\n         Focusable=\"True\"\n+        GotFocus=\"MainWindow_GotFocus\"\n         MouseDown=\"MainWindow_MouseDown\"\n         >\n     <WindowChrome.WindowChrome>\n"
        },
        {
          "name": "MyThread",
          "type": "tree",
          "content": null
        },
        {
          "name": "Plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "Properties",
          "type": "tree",
          "content": null
        },
        {
          "name": "README-zh.md",
          "type": "blob",
          "size": 2.5087890625,
          "content": "# GeekDesk æå®¢æ¡é¢\nå°å·§ã**ç¾è§**çæ¡é¢å¿«éå¯å¨ç®¡çå·¥å·, åæ¶éæäºEverythingæç´¢\n- [ä¸­æä»ç»](README-zh.md)\n- [English-machine translation](README.md)  \n \n<img src=\"https://s4.ax1x.com/2021/12/15/TSrwfU.png\" a border=\"0\" width=\"800px\"/>\n\n\n**åè´¹ / ç¾è§ / é«åº¦å®å¶å** æ¯ä»GeekDeskè¯çå¼å§å°±æçéæ±åæ¹å, æªæ¥ä¹ä¼åçè¿äºæ¹ååå±  \n\nå¤§å®¶å¦ææå¥½çå»ºè®®å¯ä»¥æIssue  \n\nå¦å¤å¦æä½ åæ¬¢ GeekDeskçè¯, æè®¸å¯ä»¥ä¸ºä½èè´­ä¹°é²è±æ´åæ°´  \nå½ç¶, ç¹ä¸ª**Star**ä¹æ¯å¯¹ä½èçæ¿å±å¦~ ððð\n\n<img src=\"https://z3.ax1x.com/2021/07/20/WYdfmR.jpg\" alt=\"WYdfmR.jpg\" border=\"0\" width=\"400px\"/>\n\n### GitHub\n[https://github.com/BookerLiu/GeekDesk](https://github.com/BookerLiu/GeekDesk)  \n### ç äº\n[https://gitee.com/BookerLiu/GeekDesk](https://gitee.com/BookerLiu/GeekDesk)\n\n\n## éæEverything å¿«éæç´¢å¨çæä»¶\n- 2.5.14åä¹åçæ¬éæäºEverythingåè½  \n  \n![](https://s3.bmp.ovh/imgs/2023/04/25/ecfbf59916b9b854.gif)\n\n## å¨å±ç­é® ä¸é®å¼åº é¼ æ è·é\n- èªå®ä¹ç­é® è®¾ç½®å¹¶ä½¿ç¨èªå·±ä¹ æ¯çå¿«æ·é®\n- ä¸é®å¼åº ä½¿ç¨é¼ æ ä¸­é®å¼åº\n- é¼ æ è·é èªå¨è¿½éé¼ æ ä½ç½®\n<img src=\"https://s4.ax1x.com/2021/12/15/TSlg8f.gif\" alt=\"WJt4hQ.gif\" border=\"0\" width=\"800px\"/>\n\n## èªå®ä¹å£çº¸\n- éæéæ©èªå·±åæ¬¢çå£çº¸  \n<img src=\"https://s4.ax1x.com/2021/12/15/TSNx4H.gif\" alt=\"WJt4hQ.gif\" border=\"0\" width=\"800px\"/>\n\n\n## æ¯ç»çç­çé¢ææ\n- èæ¯å¾çæ¯ç»çææ\n- çé¢éæåº¦\n- çé¢åè§  \n<img src=\"https://s4.ax1x.com/2021/12/15/TSabTO.gif\" alt=\"WGOYSU.gif\" border=\"0\" width=\"800px\"/>\n\n## èªå®ä¹èåå¾æ \n- 80å¤ä¸ªç³»ç»å¾æ å¯ä¾éæ©\n- å¦æ¯æå¨çº¿å¯¼å¥é¿éå·´å·´iconå¾æ   \n- ~~ç¯å¹åå ,å¬ä¼å·ååå¤ **èªå®ä¹å¾æ ** å¯ä»¥æ¥çæç¨~~  ç°å¨è½¯ä»¶åå·²ç»è´´ä¸æç¨é¾æ¥å¦  ä¹æ¬¢è¿å¤§å®¶å³æ³¨æçå¬ä¼å·:blush:\n<img src=\"https://s4.ax1x.com/2021/12/15/TSd1NF.gif\" border=\"0\" width=\"800px\"/>\n\n## å®æ¶æé æ°¸ä¸å¿è®°\n- å¿«æ·é®å¿«éæ°å»ºå¾åäºé¡¹\n<img src=\"https://s4.ax1x.com/2021/12/15/TSDCvj.gif\" alt=\"WJU6df.gif\" border=\"0\" width=\"800px\"/>\n\n## å¼åæ¡æ¶\n- wpf\n- .net 4.7.2\n- [HandyControl](https://github.com/HandyOrg/HandyControl)  \n\n## Stargazers over time\n[![Stargazers over time](https://starchart.cc/BookerLiu/GeekDesk.svg)](https://starchart.cc/BookerLiu/GeekDesk)\n\n## è´¡ç®è\n\n<a href=\"https://github.com/BookerLiu/GeekDesk/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=BookerLiu/GeekDesk\" />\n</a>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8271484375,
          "content": "# GeekDesk æå®¢æ¡é¢\nSmall, **beautiful** desktop quickstart management tool with integrated Everything search\n- [ä¸­æä»ç»](README-zh.md)\n- [English-machine translation](README.md)\n  \n<img src=\"https://s4.ax1x.com/2021/12/15/TSrwfU.png\" a border=\"0\" width=\"800px\"/>\n\n\nFree / beautiful / highly customized is the need and direction since the birth of GeekDesk, and will develop in these directions in the future\n\nyou can raise issues if you have good suggestions\n\nIn addition, if you like GeekDesk, you may be able to buy anti-exfoliation shampoo for the author\nOf course, ordering a Star is also an incentive for the author~ ððð  \n  \n[**Paypal**](https://www.paypal.com/paypalme/BookerLiu) \n  \n### Other:\n<img src=\"https://z3.ax1x.com/2021/07/20/WYdfmR.jpg\" alt=\"WYdfmR.jpg\" border=\"0\" width=\"400px\"/>\n\n### GitHub\n[https://github.com/BookerLiu/GeekDesk](https://github.com/BookerLiu/GeekDesk)  \n### Gitee\n[https://gitee.com/BookerLiu/GeekDesk](https://gitee.com/BookerLiu/GeekDesk)\n\n\n## Integrate Everything to quickly search the entire disk\n- Integrate Everything to quickly search the entire disk  \n  \n![](https://s3.bmp.ovh/imgs/2023/04/25/ecfbf59916b9b854.gif)\n\n## Global hotkeys / one-click callout / mouse follow\n- Customize hotkeys settings and use the shortcuts you are used to\n- One-click outbound call Use the middle mouse button to call out\n- Mouse Follow Automatically follows the mouse position\n<img src=\"https://s4.ax1x.com/2021/12/15/TSlg8f.gif\" alt=\"WJt4hQ.gif\" border=\"0\" width=\"800px\"/>\n\n## Custom wallpaper\n- Feel free to choose your favorite wallpaper  \n<img src=\"https://s4.ax1x.com/2021/12/15/TSNx4H.gif\" alt=\"WJt4hQ.gif\" border=\"0\" width=\"800px\"/>\n\n\n## Interface effects such as frosted glass\n- Background image frosted glass effect\n- Interface transparency\n- Interface rounded corners  \n<img src=\"https://s4.ax1x.com/2021/12/15/TSabTO.gif\" alt=\"WGOYSU.gif\" border=\"0\" width=\"800px\"/>\n\n## Customize the menu icon\n- More than 80 system icons to choose from\n- It also supports online import of Alibaba icon icons  \n- For space reasons, reply in the public account Custom icon You can view the tutorial Now the tutorial link has been pasted in the software Welcome to pay attention to my public accountð\n<img src=\"https://s4.ax1x.com/2021/12/15/TSd1NF.gif\" border=\"0\" width=\"800px\"/>\n\n## Scheduled reminders Never forget\n- Scheduled reminders Never forget\n<img src=\"https://s4.ax1x.com/2021/12/15/TSDCvj.gif\" alt=\"WJU6df.gif\" border=\"0\" width=\"800px\"/>\n\n## Development framework\n- wpf\n- .net 4.7.2\n- [HandyControl](https://github.com/HandyOrg/HandyControl)  \n\n## Stargazers over time\n[![Stargazers over time](https://starchart.cc/BookerLiu/GeekDesk.svg)](https://starchart.cc/BookerLiu/GeekDesk)\n\n## Contributors\n\n<a href=\"https://github.com/BookerLiu/GeekDesk/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=BookerLiu/GeekDesk\" />\n</a>\n"
        },
        {
          "name": "Resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "Task",
          "type": "tree",
          "content": null
        },
        {
          "name": "Taskbar.ico",
          "type": "blob",
          "size": 4.185546875,
          "content": null
        },
        {
          "name": "Update.json",
          "type": "blob",
          "size": 1.5302734375,
          "content": "{\n\t\"title\": \"GeekDeskçæ¬æ´æ°\",\n\t\"subTitle\": \"V2.5.14\",\n\t\"msgTitle\": \"æ¬æ¬¡æ´æ°åå®¹å¦ä¸\",\n\t\"msg\": \"['å¥½ä¹ä¸è§, å«æ¥æ æ, è¾èåèå®¶äº, ææ¯ä¸ªå¤æåæçäºº, å¿éæäºä»¿å¾¨åè¿·è«, ç¥ææäººé½åç¨ä¼¼é¦, ä¸çåå¹³.', 'GeekDeskåå¤å²å»ä¸ä¸Gitee GVP, å¸æå¤§å®¶è½ç»æç¹ä¸ä¸ç äº(Gitee)åGitHubçstarâ¤â¤â¤', 'ä¹åæä¼æ½æ¶é´ç¼åä¸ä¸å¼åèææ¡£, æ¹ä¾¿å¤§å®¶æ´æ¸æ¥çäºè§£é¡¹ç®ç»æ, ä»èææ´å¤çäººåä¸è¿æ¥å¼å(ä¸ç´æ²¡æç¼åæ¯å ä¸ºå¤ªæäº), ä¸å¤è¯´äº, çä¸è¿æ¬¡æ´æ°åå®¹å§', 'éæEverythingæç´¢,è®¾ç½®-->å¶å®-->å¾éEverythingæä»¶å¼å¯', 'å¢å äºå³èæä»¶å¤¹åè½, å³é®ç¹å»å·¦ä¾§æ -->æ°å»ºå³èèå', 'å¢å å¼ºå¶ç½®é¡¶å¼å³,è®¾ç½®-->æ¾ç¤ºè®¾ç½®-->å¾é/åæ¶ ç½®äºé¡¶å±', 'å³ä¾§æ å¾æ åè¡¨å¢å äºèªéåºåå®½, ä¸ä¼åºç°å¾æ æ¾ç¤ºä¸åçæåµäº', 'ç®åæ·»å äºæ°æå¼å¯¼æç¤º', 'å å¯èåbugä¿®å¤ By @1062406901', 'å¤æ¾ç¤ºå¨æ¾è²å¨bugä¿®å¤ By @1062406901', 'æå¨å¾æ å°èåçå¼å¸¸ä¿®å¤ By @Hsxxxxxx', 'ä¼åé¨åUI', 'å¶å®bugä¿®å¤ååè½ä¼å','å³æ³¨å¾®ä¿¡å¬ä¼å·\\\\'æå ä¸ªå¨\\\\'å¯ä»¥ç¬¬ä¸æ¶é´æ¶å°æ´æ°éç¥(å¬ä¼å·ä¹æ¯ä½ç³»ç»´æ¤, å¸æè½å³æ³¨çäººå¤ä¸ç¹å§, è®©ä½èè¿ä¸ªç©·Bæ£å£é¥­å)']\",\n\t\"githubUrl\": \"https://github.com/BookerLiu/GeekDesk/releases\",\n\t\"giteeUrl\": \"https://gitee.com/BookerLiu/GeekDesk/releases\",\n\t\"statisticUrl\": \"http://43.138.23.39:8989/bookerService/geekDeskController/userCountStatistic\",\n\t\"version\": \"2.5.14\"\n}\n"
        },
        {
          "name": "Util",
          "type": "tree",
          "content": null
        },
        {
          "name": "ViewModel",
          "type": "tree",
          "content": null
        },
        {
          "name": "app.manifest",
          "type": "blob",
          "size": 3.326171875,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<assembly manifestVersion=\"1.0\" xmlns=\"urn:schemas-microsoft-com:asm.v1\">\n  <assemblyIdentity version=\"1.0.0.0\" name=\"MyApplication.app\" />\n  <trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v2\">\n    <security>\n      <requestedPrivileges xmlns=\"urn:schemas-microsoft-com:asm.v3\">\n        <!-- UAC æ¸åéé¡¹\n             å¦ææ³è¦æ´æ¹ Windows ç¨æ·å¸æ·æ§å¶çº§å«ï¼è¯·ä½¿ç¨\n             ä»¥ä¸èç¹ä¹ä¸æ¿æ¢ requestedExecutionLevel èç¹ã\n\n        <requestedExecutionLevel  level=\"asInvoker\" uiAccess=\"false\" />\n        <requestedExecutionLevel  level=\"requireAdministrator\" uiAccess=\"false\" />\n        <requestedExecutionLevel  level=\"highestAvailable\" uiAccess=\"false\" />\n\n            æå® requestedExecutionLevel åç´ å°ç¦ç¨æä»¶åæ³¨åè¡¨èæåã\n            å¦æä½ çåºç¨ç¨åºéè¦æ­¤èæåæ¥å®ç°ååå¼å®¹æ§ï¼åç§»é¤æ­¤\n            åç´ ã\n        -->\n        <requestedExecutionLevel level=\"asInvoker\" uiAccess=\"false\" />\n      </requestedPrivileges>\n      <applicationRequestMinimum>\n        <defaultAssemblyRequest permissionSetReference=\"Custom\" />\n        <PermissionSet ID=\"Custom\" SameSite=\"site\" />\n      </applicationRequestMinimum>\n    </security>\n  </trustInfo>\n  <compatibility xmlns=\"urn:schemas-microsoft-com:compatibility.v1\">\n    <application>\n      <!-- è®¾è®¡æ­¤åºç¨ç¨åºä¸å¶ä¸èµ·å·¥ä½ä¸å·²éå¯¹æ­¤åºç¨ç¨åºè¿è¡æµè¯ç\n           Windows çæ¬çåè¡¨ãåæ¶è¯è®ºéå½çåç´ ï¼\n           Windows å°èªå¨éæ©æå¼å®¹çç¯å¢ã -->\n      <!-- Windows Vista -->\n      <!--<supportedOS Id=\"{e2011457-1546-43c5-a5fe-008deee3d3f0}\" />-->\n      <!-- Windows 7 -->\n      <!--<supportedOS Id=\"{35138b9a-5d96-4fbd-8e2d-a2440225f93a}\" />-->\n      <!-- Windows 8 -->\n      <!--<supportedOS Id=\"{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}\" />-->\n      <!-- Windows 8.1 -->\n      <!--<supportedOS Id=\"{1f676c76-80e1-4239-95bb-83d0f6d0da78}\" />-->\n      <!-- Windows 10 -->\n      <!--<supportedOS Id=\"{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}\" />-->\n    </application>\n  </compatibility>\n  <!-- æç¤ºè¯¥åºç¨ç¨åºå¯æç¥ DPI ä¸ Windows å¨ DPI è¾é«æ¶å°ä¸ä¼å¯¹å¶è¿è¡\n       èªå¨ç¼©æ¾ãWindows Presentation Foundation (WPF)åºç¨ç¨åºèªå¨æç¥ DPIï¼æ é\n       éæ©å å¥ãéæ©å å¥æ­¤è®¾ç½®ç Windows çªä½åºç¨ç¨åº(é¢å .NET Framework 4.6)è¿åº\n       å¨å¶ app.config ä¸­å° \"EnableWindowsFormsHighDpiAutoResizing\" è®¾ç½®è®¾ç½®ä¸º \"true\"ã\n       \n       å°åºç¨ç¨åºè®¾ä¸ºæç¥é¿è·¯å¾ãè¯·åé https://docs.microsoft.com/windows/win32/fileio/maximum-file-path-limitation -->\n  <application xmlns=\"urn:schemas-microsoft-com:asm.v3\">\n    <windowsSettings>\n      <dpiAware xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">true</dpiAware>\n      <longPathAware xmlns=\"http://schemas.microsoft.com/SMI/2016/WindowsSettings\">true</longPathAware>\n    </windowsSettings>\n  </application>\n  <!-- å¯ç¨ Windows å¬å±æ§ä»¶åå¯¹è¯æ¡çä¸»é¢(Windows XP åæ´é«çæ¬) -->\n  <!--\n  <dependency>\n    <dependentAssembly>\n      <assemblyIdentity\n          type=\"win32\"\n          name=\"Microsoft.Windows.Common-Controls\"\n          version=\"6.0.0.0\"\n          processorArchitecture=\"*\"\n          publicKeyToken=\"6595b64144ccf1df\"\n          language=\"*\"\n        />\n    </dependentAssembly>\n  </dependency>\n  -->\n</assembly>"
        },
        {
          "name": "packages.config",
          "type": "blob",
          "size": 1.9208984375,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<packages>\n  <package id=\"CommonServiceLocator\" version=\"2.0.6\" targetFramework=\"net452\" requireReinstallation=\"true\" />\n  <package id=\"HandyControl\" version=\"3.3.0\" targetFramework=\"net472\" />\n  <package id=\"KeyMouseHook\" version=\"1.0.6\" targetFramework=\"net472\" developmentDependency=\"true\" />\n  <package id=\"Microsoft.Build.Tasks.Git\" version=\"1.0.0\" targetFramework=\"net472\" developmentDependency=\"true\" />\n  <package id=\"Microsoft.Extensions.Logging.Abstractions\" version=\"2.1.1\" targetFramework=\"net472\" />\n  <package id=\"Microsoft.SourceLink.Common\" version=\"1.0.0\" targetFramework=\"net472\" developmentDependency=\"true\" />\n  <package id=\"Microsoft.SourceLink.GitHub\" version=\"1.0.0\" targetFramework=\"net472\" developmentDependency=\"true\" />\n  <package id=\"MouseKeyHook\" version=\"5.6.0\" targetFramework=\"net472\" />\n  <package id=\"Newtonsoft.Json\" version=\"13.0.1\" targetFramework=\"net472\" />\n  <package id=\"NPinyin.Core\" version=\"3.0.0\" targetFramework=\"net472\" />\n  <package id=\"Quartz\" version=\"3.3.3\" targetFramework=\"net472\" />\n  <package id=\"System.Buffers\" version=\"4.5.1\" targetFramework=\"net472\" />\n  <package id=\"System.Diagnostics.DiagnosticSource\" version=\"4.7.1\" targetFramework=\"net472\" />\n  <package id=\"System.Drawing.Common\" version=\"6.0.0-preview.6.21352.12\" targetFramework=\"net472\" />\n  <package id=\"System.Memory\" version=\"4.5.4\" targetFramework=\"net472\" />\n  <package id=\"System.Numerics.Vectors\" version=\"4.5.0\" targetFramework=\"net472\" />\n  <package id=\"System.Reactive\" version=\"5.0.0\" targetFramework=\"net472\" />\n  <package id=\"System.Runtime.CompilerServices.Unsafe\" version=\"4.5.3\" targetFramework=\"net472\" />\n  <package id=\"System.Threading.Tasks.Extensions\" version=\"4.5.4\" targetFramework=\"net472\" />\n  <package id=\"WindowsAPICodePack.Shell.CommonFileDialogs\" version=\"1.1.5\" targetFramework=\"net472\" />\n  <package id=\"XamlFlair.WPF\" version=\"1.2.13\" targetFramework=\"net472\" />\n</packages>"
        }
      ]
    }
  ]
}