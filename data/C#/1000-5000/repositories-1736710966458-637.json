{
  "metadata": {
    "timestamp": 1736710966458,
    "page": 637,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OmniSharp/omnisharp-roslyn",
      "stars": 1808,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.78515625,
          "content": "# EditorConfig is awesome: http://EditorConfig.org\n\nroot = true\n\n[*]\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\n\n# CA2254: The logging message template should not vary between calls to 'LoggerExtensions.LogDebug(ILogger, string?, params object?[])'\ndotnet_diagnostic.CA2254.severity = none\ndotnet_diagnostic.VSTHRD002.severity = none\ndotnet_diagnostic.VSTHRD003.severity = none\ndotnet_diagnostic.VSTHRD105.severity = none\ndotnet_diagnostic.VSTHRD110.severity = none\ndotnet_diagnostic.VSTHRD200.severity = none\n\ndotnet_sort_system_directives_first = true\n\n[*.cs]\nindent_size = 4\n\n[*.{yml,yaml}]\nindent_size = 2\n\n[tests/**/*.cs]\ndotnet_diagnostic.RS1038.severity = none\ndotnet_diagnostic.RS1041.severity = none\ndotnet_diagnostic.RS1042.severity = none\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.8662109375,
          "content": "*.doc  diff=astextplain\n*.DOC\tdiff=astextplain\n*.docx\tdiff=astextplain\n*.DOCX\tdiff=astextplain\n*.dot\tdiff=astextplain\n*.DOT\tdiff=astextplain\n*.pdf\tdiff=astextplain\n*.PDF\tdiff=astextplain\n*.rtf\tdiff=astextplain\n*.RTF\tdiff=astextplain\n\n*.jpg  \tbinary\n*.png \tbinary\n*.gif \tbinary\n\n*.cs text=auto diff=csharp \n*.vb text=auto\n*.resx text=auto\n*.c text=auto\n*.cpp text=auto\n*.cxx text=auto\n*.h text=auto\n*.hxx text=auto\n*.py text=auto\n*.rb text=auto\n*.java text=auto\n*.html text=auto\n*.htm text=auto\n*.css text=auto\n*.scss text=auto\n*.sass text=auto\n*.less text=auto\n*.js text=auto\n*.lisp text=auto\n*.clj text=auto\n*.sql text=auto\n*.php text=auto\n*.lua text=auto\n*.m text=auto\n*.asm text=auto\n*.erl text=auto\n*.fs text=auto\n*.fsx text=auto\n*.hs text=auto\n\n*.csproj text=auto\n*.vbproj text=auto\n*.fsproj text=auto\n*.dbproj text=auto\n*.xproj text=auto\n*.sln text=auto eol=crlf\n\n*.sh text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6845703125,
          "content": "[Oo]bj/\n[Bb]in/\nTestResults/\n.nuget/\n*.sln.ide/\n_ReSharper.*/\nartifacts/\nPublishProfiles/\n*.user\n*.suo\n*.cache\n*.docstates\n_ReSharper.*\nnuget.exe\n*net45.csproj\n*net451.csproj\n*k10.csproj\n*.psess\n*.vsp\n*.pidb\n*.userprefs\n*DS_Store\n*.ncrunchsolution\n*.*sdf\n*.ipch\n*.sln.ide\ndebugSettings.json\nbuildlog\n/.vs\n*.lock.json\n/omnisharp*.tar.gz\nscripts/Omnisharp*\n.msbuild-*/\n.msbuild/\n\n# NuGet\n*.nuget.targets\n\n# Build folder\n.dotnet/\n.dotnet-legacy/\n.dotnet-future/\n.mono/\ntools/*\n!tools/packages.config\n\n# Test assets\ntest-assets/**/tools/*\n!test-assets/**/tools/packages.config\n\n# VS Code\n/.vscode/settings.json\n/.vscode/launch.json\n\n# VS\nlaunchSettings.json\n\n# Rider\n.idea/\ntest-assets/**/nugets\n*.binlog\n"
        },
        {
          "name": ".lgtm",
          "type": "blob",
          "size": 0.0498046875,
          "content": "approvals = 1\npattern = \"(?i):shipit:|:\\\\+1:|LGTM\"\n"
        },
        {
          "name": ".pipelines",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILD.md",
          "type": "blob",
          "size": 3.611328125,
          "content": "# Requirements\n\n## Windows\n\nIn order to build OmniSharp, the [.NET 4.7.2 targeting pack](https://dotnet.microsoft.com/download/dotnet-framework/thank-you/net472-developer-pack-offline-installer) must be installed if it isn't already.\n\n## macOS\n\n**Mono 6.6.0** or greater is required. You can install this using the latest [.pkg](http://www.mono-project.com/download/#download-mac) or install it view [Homebrew](https://brew.sh/):\n\n```\nbrew update\nbrew install mono\nbrew install homebrew/cask/mono-mdk\n```\n\n## Linux\n\nBecause OmniSharp uses the .NET Core SDK as part of the build, not all Linux distros are supported. A good rule of thumb is to check the list [here](https://docs.microsoft.com/dotnet/core/install/dependencies?pivots=os-linux) to see if your particular distro is supported.\n\n**Mono 6.6.0** or greater is required. Each distro or derivative has its own set of instructions for installing Mono which you can find [here](http://www.mono-project.com/download/#download-lin). Be sure to install `msbuild` as well, which may be a separate package.\n\n# Usage\n\nRun `build.(ps1|sh)` with the desired set of arguments (see below for options).\nThe build script itself is `build.cake`, written in C# using the [Cake build automation system](http://cakebuild.net/).\nAll build related activites should be encapsulated in this file for cross-platform access.\n\n# Arguments\n\nNote: The arguments below should prefixed with a single hyphen on Windows (PowerShell-style) and a double-hyphen on OSX/Linux.\n\n  `-target TargetName`: The name of the build task/target to execute (see below for listing and details).\n    Defaults to `Default`.\n\n  `-configuration (Release|Debug)`: The configuration to build.\n    Defaults to `Debug`.\n\n  `-test-configuration (Release|Debug)`: The configuration to use for the unit tests.\n    Defaults to `Debug`.\n\n  `-install-path Path`: Path used for the **Install** target.\n    Defaults to `(%USERPROFILE%|$HOME)/.omnisharp`\n\n  `-publish-all`: Publishes all platforms for the current OS. On Windows, specifying this argument would produce win7-x86, win7-x64, and win10-arm64 builds. On OSX/Linux, this argument causes osx, linux-x86, linux-x64, linux-musl-x64, linux-musl-arm64 and linux-arm64 builds to be published.\n\n  `-archive`: Enable the generation of publishable archives after a build.\n\nNote: On macOS/Linux, be sure to pass the arguments above with a double hyphen! (e.g. `--target TargetName`).\n\n# Targets\n\n**Default**: Alias for All.\n\n**All**: Full build including testing.\n\n**Quick**: Local build which skips all testing.\n\n**Install**: Same as quick, but installs the generated binaries into `install-path`.\n\n# Configuration files\n\n## build.json\n\nA number of build-related options, including folder names for different entities. Interesting options:\n\n**DotNetInstallScriptURL**: The URL where the .NET SDK install script is located.\n  Can be used to pin to a specific script version, if a breaking change occurs.\n\n**DotNetChannel**: The .NET Core SDK channel used for retreiving the tools.\n\n**DotNetVersion**: The .NET Core SDK version used for the build. Can be used to pin to a specific version.\n  Using the string `Latest` will retrieve the latest version.\n\n# Artifacts generated\n\n* OmniSharp binaries for specified runtimes `artifacts/publish/OmniSharp/{platform}/`\n* Scripts to run OmniSharp at `scripts/OmniSharp(.Core)(.cmd)`\n  * These scripts are updated for every build and every install.\n  * The scripts point to the installed binary after and install, otherwise just the build folder (reset if a new build occurs without an install).\n* Test logs in `artifacts/logs`\n* Archived binaries in `artifacts/package` (only if `-archive` used on command line)\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 96.7353515625,
          "content": "# Changelog\nAll changes to the project will be documented in this file.\n\n## [1.39.13] - 2024-12-31\n* Update Roslyn to 4.13.0-3.24620.4 (PR: [#2642](https://github.com/OmniSharp/omnisharp-roslyn/pull/2642))\n\n## [1.39.12] - 2024-07-26\n* Update .NET SDKs (PR: [#2621](https://github.com/OmniSharp/omnisharp-roslyn/pull/2621))\n* Update Roslyn to 4.12.0-1.24358.3 (PR: [#2619](https://github.com/OmniSharp/omnisharp-roslyn/pull/2619))\n* Fix code fix construction (PR: [#2620](https://github.com/OmniSharp/omnisharp-roslyn/pull/2620))\n* Remove NuGet.Packaging.Core, as it's an assembly that only contains forwarders  (PR: [#2610](https://github.com/OmniSharp/omnisharp-roslyn/pull/2610))\n* Fix inlay hints lambdas parameter type null reference exception (PR: [#2604](https://github.com/OmniSharp/omnisharp-roslyn/pull/2604))\n* Update SDKs and Roslyn (PR: [#2603](https://github.com/OmniSharp/omnisharp-roslyn/pull/2603))\n* Pass project path when performing a restore (PR: [#2593](https://github.com/OmniSharp/omnisharp-roslyn/pull/2593))\n\n## [1.39.11] - 2023-12-19\n* Update changelog (PR: [#2591](https://github.com/OmniSharp/omnisharp-roslyn/pull/2591))\n* Update Readme text and fix broken link. ([#2581](https://github.com/OmniSharp/omnisharp-roslyn/issues/2581), PR: [#2582](https://github.com/OmniSharp/omnisharp-roslyn/pull/2582))\n* Update SDKs and dependencies ([#2586](https://github.com/OmniSharp/omnisharp-roslyn/issues/2586), PR: [#2588](https://github.com/OmniSharp/omnisharp-roslyn/pull/2588))\n* Updated to latest dotnet-script 1.5.0 (PR: [#2585](https://github.com/OmniSharp/omnisharp-roslyn/pull/2585))\n\n## [1.39.10] - 2023-10-05\n* Add RazorComplier EA to support razor generators (PR: [#2572](https://github.com/OmniSharp/omnisharp-roslyn/pull/2572))\n\n## [1.39.9] - 2023-10-04\n* Add Kind parameter to InlayHint (PR: [#2570](https://github.dev/OmniSharp/omnisharp-roslyn/pull/2570))\n* Do not include commit characters if the typed span is empty (PR: [#2569](https://github.com/OmniSharp/omnisharp-roslyn/pull/2569))\n* Update Roslyn to version 4.9.0-1.23504.3 (PR: [#2567](https://github.com/OmniSharp/omnisharp-roslyn/pull/2567))\n* Async diagnostics analyzer work queue (PR: [#2351](https://github.com/OmniSharp/omnisharp-roslyn/pull/2351))\n* Add InlayHint implementation to OmniSharp.LSP (PR: [#2566](https://github.com/OmniSharp/omnisharp-roslyn/pull/2566))\n* Include the project file name when invoking `dotnet build` (PR: [#2565](https://github.com/OmniSharp/omnisharp-roslyn/pull/2565))\n* feat: ignore diagnostics for generated code (PR: [#2509](https://github.com/OmniSharp/omnisharp-roslyn/pull/2509))\n* Update documentation to reflect --stdio flag deprecation (#2439) (PR: [#2554](https://github.com/OmniSharp/omnisharp-roslyn/pull/2554))\n* Update Roslyn to version 4.8.0-1.23374.10 (PR: [#2555](https://github.com/OmniSharp/omnisharp-roslyn/pull/2555))\n* Use double quote when quoting un script path (PR: [#2553](https://github.com/OmniSharp/omnisharp-roslyn/pull/2553))\n\n## [1.39.8] - 2023-07-17\n* Use core LSP TokenTypes where possible and validate token names (PR: [#2548](https://github.com/OmniSharp/omnisharp-roslyn/pull/2548))\n\n## [1.39.7] - 2023-06-16\n* Respond to breaking change in VSCode 1.79.2 in completion (PR:[#2542](https://github.com/OmniSharp/omnisharp-roslyn/pull/2542))\n* Use dotnet-cake for build (PR:[#2537](https://github.com/OmniSharp/omnisharp-roslyn/pull/2537))\n* Implement LSP CodeAction resolve (PR:[#2467](https://github.com/OmniSharp/omnisharp-roslyn/pull/2467))\n\n## [1.39.6] - 2023-03-14\n* Use new VS threading version to match with Razor (PR:[#2518](https://github.com/OmniSharp/omnisharp-roslyn/pull/2518))\n\n## [1.39.5] - 2023-03-09\n* Update to Roslyn `4.6.0-3.23153.5` (PR:[#2511](https://github.com/OmniSharp/omnisharp-roslyn/pull/2511))\n* Report to the client if the project being loaded is sdk style (PR:[#2502](https://github.com/OmniSharp/omnisharp-roslyn/pull/2502))\n\n## [1.39.4] - 2023-01-18\n* Disable snippets in sync completion (PR: [#2497](https://github.com/OmniSharp/omnisharp-roslyn/pull/2497))\n\n## [1.39.3] - 2023-01-03\n* Update Roslyn to 4.5.0-2.22527.10 (PR: [#2486](https://github.com/OmniSharp/omnisharp-roslyn/pull/2486))\n* Update dotnet-script dependencies to 1.4.0 (PR: [#2477](https://github.com/OmniSharp/omnisharp-roslyn/pull/2477))\n* Register the LanguageServerLogger only once (PR: [#2473](https://github.com/OmniSharp/omnisharp-roslyn/pull/2473))\n\n## [1.39.2] - 2022-10-26\n* Add missing LSP Handlers (PR: [#2463](https://github.com/OmniSharp/omnisharp-roslyn/pull/2463))\n* Add the TypeDefinitionHandler to the LSP (PR: [#2461](https://github.com/OmniSharp/omnisharp-roslyn/pull/2461))\n* Update .NET SDK and Roslyn (PR: [#2458](https://github.com/OmniSharp/omnisharp-roslyn/pull/2458))\n* Don't remap line mappings in Razor files (PR: [#2460](https://github.com/OmniSharp/omnisharp-roslyn/pull/2460))\n* Adds missing /open endpoint to Cake (PR: [#2457](https://github.com/OmniSharp/omnisharp-roslyn/pull/2457))\n* Adds V2 Highlight support to Cake (PR: [#2456](https://github.com/OmniSharp/omnisharp-roslyn/pull/2456))\n* Include Cake bits in .NET 6 builds (PR: [#2455](https://github.com/OmniSharp/omnisharp-roslyn/pull/2455))\n* Host dependency cleanup (PR: [#2436](https://github.com/OmniSharp/omnisharp-roslyn/pull/2436))\n* Upgrade http driver to latest ASP.NET Core version when running in .NET 6 (PR: [#2446](https://github.com/OmniSharp/omnisharp-roslyn/pull/2446))\n* updated IL Spy to 7.2.1.6856 (PR: [#2447](https://github.com/OmniSharp/omnisharp-roslyn/pull/2447))\n* Add comment to app.config explaining System.Memory versioning (PR: [#2444](https://github.com/OmniSharp/omnisharp-roslyn/pull/2444))\n* Add explicit System.Memory dependency to Hosts (PR: [#2443](https://github.com/OmniSharp/omnisharp-roslyn/pull/2443))\n* Return generated file info for find references (PR: [#2434](https://github.com/OmniSharp/omnisharp-roslyn/pull/2434))\n* Support NUnit TheoryAttribute (PR: [#2435](https://github.com/OmniSharp/omnisharp-roslyn/pull/2435))\n* Provide SourceGeneratedFileInfo for workspace symbolls requests (PR: [#2431](https://github.com/OmniSharp/omnisharp-roslyn/pull/2431))\n* Take the first dotnet cli we find instead of the last one we find (match the comment) (PR: [#2427](https://github.com/OmniSharp/omnisharp-roslyn/pull/2427)]\n* Record whether a CodeAction is a fix or not (PR: [#2430](https://github.com/OmniSharp/omnisharp-roslyn/pull/2430))\n* Update VMs used in build CI. (PR: [#2425](https://github.com/OmniSharp/omnisharp-roslyn/pull/2425))\n* Only get first document's highlights (PR: [#2424](https://github.com/OmniSharp/omnisharp-roslyn/pull/2424))\n\n## [1.39.1] - 2022-07-25\n* Update Roslyn to 4.4.0 1.22369.1 (PR: [#2420](https://github.com/OmniSharp/omnisharp-roslyn/pull/2420))\n* Simplify some code (PR: [#2370](https://github.com/OmniSharp/omnisharp-roslyn/pull/2370))\n* Return meaningful error when pinned SDK version is not found. ([[omnisharp-vscode#5128](https://github.com/OmniSharp/omnisharp-vscode/issues/5128), PR: [#2403](https://github.com/OmniSharp/omnisharp-roslyn/pull/2403))\n* Added support for `<WarningsAsErrors>nullable</WarningsAsErrors>` ([#2292](https://github.com/OmniSharp/omnisharp-roslyn/issues/2292), PR: [#2406](https://github.com/OmniSharp/omnisharp-roslyn/pull/2406))\n* Removed nuget versioning reference from OmniSharp.Abstractions ([#2410](https://github.com/OmniSharp/omnisharp-roslyn/issues/2410), PR: [#2414](https://github.com/OmniSharp/omnisharp-roslyn/pull/2414))\n* Bump Newtonsoft.Json to 13.0.1 (PR: [#2415](https://github.com/OmniSharp/omnisharp-roslyn/pull/2415))\n\n## [1.39.0] - 2022-05-19\n* Update Roslyn to 4.3.0-2.22267.5 (PR: [#2401](https://github.com/OmniSharp/omnisharp-roslyn/pull/2401))\n* Fixed run script for Mono ([omnisharp-vscode#5181](https://github.com/OmniSharp/omnisharp-vscode/issues/5181), [omnisharp-vscode#5179](https://github.com/OmniSharp/omnisharp-vscode/issues/5179), PR: [#2398](https://github.com/OmniSharp/omnisharp-roslyn/pull/2398))\n* Fall back to /usr/lib/os-release if /etc/os-release doesn't exist (PR: [#2380](https://github.com/OmniSharp/omnisharp-roslyn/pull/2380))\n* Added support for linux-musl-x64 and linux-musl-arm64 ([#2366](https://github.com/OmniSharp/omnisharp-roslyn/issues/2366), PR: [#2395](https://github.com/OmniSharp/omnisharp-roslyn/pull/2395))\n* Enable GoToDefinition for symbols in metadata documents ([omnisharp-vscode#4818](https://github.com/OmniSharp/omnisharp-vscode/issues/4818), PR: [#2390](https://github.com/OmniSharp/omnisharp-roslyn/pull/2390))\n* Use human readable doc in lsp's signature help ([#2372](https://github.com/OmniSharp/omnisharp-roslyn/issues/2372), PR: [#2392](https://github.com/OmniSharp/omnisharp-roslyn/pull/2392))\n* Add TextEdits support to InlayHints (PR: [#2385](https://github.com/OmniSharp/omnisharp-roslyn/pull/2385))\n* Fix Equals of AutoCompleteResponse and simplify some code (PR: [#2362](https://github.com/OmniSharp/omnisharp-roslyn/pull/2362))\n* Support O# running on .NET 7 SDKs (PR: [#2377](https://github.com/OmniSharp/omnisharp-roslyn/pull/2377))\n* Provide constructor accepting hostServices (PR: [#2373](https://github.com/OmniSharp/omnisharp-roslyn/pull/2373))\n* Typo fix ([#2374](https://github.com/OmniSharp/omnisharp-roslyn/pull/2374))\n* Update to latest .NET SDKs (PR: [#2378](https://github.com/OmniSharp/omnisharp-roslyn/pull/2378))\n* Remove MSBuild and Mono from release packages ([#2339](https://github.com/OmniSharp/omnisharp-roslyn/issues/2339), PR: [#2360](https://github.com/OmniSharp/omnisharp-roslyn/pull/2360))\n\n## [1.38.2] - 2022-03-22\n* Add analyze open documents only (PR: [#2346](https://github.com/OmniSharp/omnisharp-roslyn/pull/2346))\n* Create a new GoToTypeDefinition endpoint ([#2297](https://github.com/OmniSharp/omnisharp-roslyn/issues/2297), PR: [#2315](https://github.com/OmniSharp/omnisharp-roslyn/pull/2315))\n* Eliminate more instances of IWorkspaceOptionsProvider (PR: [#2343](https://github.com/OmniSharp/omnisharp-roslyn/pull/2343))\n* Update Build.md brew cask instructions (PR: [#2355](https://github.com/OmniSharp/omnisharp-roslyn/pull/2355))\n* Remove not used middleware extension methods and unify adding middleware (PR: [#2340](https://github.com/OmniSharp/omnisharp-roslyn/pull/2340))\n* Pass --overwrite when pushing build artifacts to azure (PR: [#2358](https://github.com/OmniSharp/omnisharp-roslyn/pull/2358))\n* Delete System.Configuration.ConfigurationManager from deployed packages ([omnisharp-vscode#5113](https://github.com/OmniSharp/omnisharp-vscode/issues/5113), PR: [#2359](https://github.com/OmniSharp/omnisharp-roslyn/pull/2359))\n* Support inlay hints (PR: [#2357](https://github.com/OmniSharp/omnisharp-roslyn/pull/2357))\n* Update build tools to match .NET SDK 6.0.201 ([#2363](https://github.com/OmniSharp/omnisharp-roslyn/pull/2363))\n\n## [1.38.1] - 2022-02-18\n* Reuse Roslyn's analyzer assembly loader (PR: [#2236](https://github.com/OmniSharp/omnisharp-roslyn/pull/2236))\n* Pass Completion, Rename and Block Structure options directly instead of updating the Workspace (PR: [#2306](https://github.com/OmniSharp/omnisharp-roslyn/pull/2306))\n* Update included build tool to match the current 6.0.200 sdk (PR: [#2329](https://github.com/OmniSharp/omnisharp-roslyn/pull/2329))\n* Fix concurrency issue in CSharpDiagnosticWorker (PR: [#2333](https://github.com/OmniSharp/omnisharp-roslyn/pull/2333))\n* run analyzers on multiple threads if allowed to (PR: [#2285](https://github.com/OmniSharp/omnisharp-roslyn/pull/2285))\n* Add MSBuild project to solution and apply the change to Roslyn workspace as a unit (PR: [#2314](https://github.com/OmniSharp/omnisharp-roslyn/pull/2314))\n* Updated to Roslyn 4.0.1 (PR: [#2323](https://github.com/OmniSharp/omnisharp-roslyn/pull/2323))\n* Enable OmniSharp.Cake tests for .NET 6 (PR: [#2307](https://github.com/OmniSharp/omnisharp-roslyn/pull/2307))\n* Handle completions with trailing whitespace on previous lines (PR: [#2319](https://github.com/OmniSharp/omnisharp-roslyn/pull/2319))\n* Update build bools to match .NET SDK 6.0.200 (PR: [#2347](https://github.com/OmniSharp/omnisharp-roslyn/pull/2347))\n\n## [1.38.0] - 2021-12-15\n* Build OmniSharp servers that run on .NET 6 SDK (PR: [2291](https://github.com/OmniSharp/omnisharp-roslyn/pull/2291))\n* Allow net6 build of O# to load newer .NET SDKs (PR: [#2308](https://github.com/OmniSharp/omnisharp-roslyn/pull/2308))\n* Allow alternate versions of documents to be Semantically Highlighted (PR: [#2304](https://github.com/OmniSharp/omnisharp-roslyn/pull/2304))\n* Pass the logger for loading projects. So errors occur in loading projects can be printed out. ([omnisharp-vscode#4832](https://github.com/OmniSharp/omnisharp-vscode/issues/4832), PR: [#2288](https://github.com/OmniSharp/omnisharp-roslyn/pull/2288))\n* Update OmniSharp.Cake dependencies (PR: [#2280](https://github.com/OmniSharp/omnisharp-roslyn/pull/2280))\n* Ensure each published platform uses matching hostfxr library (PR: [#2272](https://github.com/OmniSharp/omnisharp-roslyn/pull/2272))\n* Produce an Arm64 build for Linux (PR: [#2271](https://github.com/OmniSharp/omnisharp-roslyn/pull/2271))\n* Use 6.0.100 SDK for building (PR: [#2269](https://github.com/OmniSharp/omnisharp-roslyn/pull/2269))\n* Added Code of Conduct (PR: [#2266](https://github.com/OmniSharp/omnisharp-roslyn/pull/2266))\n* Improved Cake/CSX info messages (PR: [#2264](https://github.com/OmniSharp/omnisharp-roslyn/pull/2264))\n\n## [1.37.17] - 2021-11-02\n* Update versions to match dotnet SDK 6.0.1xx (PR: [#2262](https://github.com/OmniSharp/omnisharp-roslyn/pull/2262))\n* Remove all completion commit characters in suggestion mode. ([#1974](https://github.com/OmniSharp/omnisharp-vscode/issues/1974), [#3219](https://github.com/OmniSharp/omnisharp-vscode/issues/3219), [#3647](https://github.com/OmniSharp/omnisharp-vscode/issues/3647), [#4833](https://github.com/OmniSharp/omnisharp-vscode/issues/4833), PR: [#2253](https://github.com/OmniSharp/omnisharp-roslyn/pull/2253))\n* fixed logging interpolation in ProjectManager (PR: [#2246](https://github.com/OmniSharp/omnisharp-roslyn/pull/2246))\n* Support signature help for implicit object creation ([#2243](https://github.com/OmniSharp/omnisharp-roslyn/issues/2243), PR: [#2244](https://github.com/OmniSharp/omnisharp-roslyn/pull/2244))\n* Implement /v2/gotodefinition for Cake ([#2209](https://github.com/OmniSharp/omnisharp-roslyn/issues/2209), PR: [#2212](https://github.com/OmniSharp/omnisharp-roslyn/pull/2212))\n\n## [1.37.16] - 2021-10-01\n*  Update included Build Tools to match .NET SDK 6 (PR: [#2239](https://github.com/OmniSharp/omnisharp-roslyn/pull/2239))\n* Add Custom .NET CLI support to OmniSharp (PR: [#2227](https://github.com/OmniSharp/omnisharp-roslyn/pull/2227))\n* Handle .editorconfig changes without running a new design time build ([#2112](https://github.com/OmniSharp/omnisharp-roslyn/issues/2112) PR: [#2234](https://github.com/OmniSharp/omnisharp-roslyn/pull/2234))\n* Do not return nulls when getting documents by path ([#2125](https://github.com/OmniSharp/omnisharp-roslyn/issues/2125) PR: [#2233](https://github.com/OmniSharp/omnisharp-roslyn/pull/2233))\n* handle RecordStructName in semantic highlighting classification ([#2228](https://github.com/OmniSharp/omnisharp-roslyn/issues/2228) PR: [#2232](https://github.com/OmniSharp/omnisharp-roslyn/pull/2232))\n* Update CodeStructureService with FileScoped Namespace support ([#2225](https://github.com/OmniSharp/omnisharp-roslyn/issues/2225) PR: [#2226](https://github.com/OmniSharp/omnisharp-roslyn/pull/2226))\n\n## [1.37.15] - 2021-08-31\n* Update Roslyn to 4.0.0-4.21427.11 (PR: [#2220](https://github.com/OmniSharp/omnisharp-roslyn/pull/2220))\n* Update NuGet to 5.10.0 ([#2027](https://github.com/OmniSharp/omnisharp-roslyn/issues/2027), PR: [#2034](https://github.com/OmniSharp/omnisharp-roslyn/pull/2034))\n* Remove .NET Core 2.1 (PR: [#2219](https://github.com/OmniSharp/omnisharp-roslyn/pull/2219))\n* Update versions to match .NET SDK 6 RC1 (PR: [#2217](https://github.com/OmniSharp/omnisharp-roslyn/pull/2217))\n* Use FullPaths for Locations that are returned with relative paths. ([#2215](https://github.com/OmniSharp/omnisharp-roslyn/issues/2215), PR: [#2216](https://github.com/OmniSharp/omnisharp-roslyn/pull/2216))\n* Improved logging in project manager (PR: [#2203](https://github.com/OmniSharp/omnisharp-roslyn/pull/2203))\n* Log a warning when external features path has no assemblies ([#2201](https://github.com/OmniSharp/omnisharp-roslyn/issues/2201), PR: [#2202](https://github.com/OmniSharp/omnisharp-roslyn/pull/2202))\n\n## [1.37.14] - 2021-07-27\n* Update to latest .NET SDKs (PR: [#2197](https://github.com/OmniSharp/omnisharp-roslyn/pull/2197))\n* Update included Build Tools to match .NET SDK 6 Preview 7 (PR: [#2196](https://github.com/OmniSharp/omnisharp-roslyn/pull/2196))\n* Upgrade McMaster.Extensions.CommandLineUtils to 3.1.0 ([omnisharp-vscode#4090](https://github.com/OmniSharp/omnisharp-vscode/issues/4090), PR: [#2192](https://github.com/OmniSharp/omnisharp-roslyn/pull/2192))\n\n## [1.37.13] - 2021-07-16\n* Update Roslyn to 4.0.0-2.21354.7 (PR: [#2189](https://github.com/OmniSharp/omnisharp-roslyn/pull/2189))\n* Update included Build Tools to match .NET SDK 6 Preview 6 (PR: [#2187](https://github.com/OmniSharp/omnisharp-roslyn/pull/2187))\n\n## [1.37.12] - 2021-07-09\n* Generate binary redirects for OmniSharp libraries (PR: [#2185](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2185))\n* Update Roslyn to 4.0.0-2.21322.50 (PR: [#2183](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2183))\n* Added support for diagnostic suppressors ([#1711](https://github.com/OmniSharp/omnisharp-roslyn/issues/1711), PR: [#2182](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2182))\n* Use the Microsoft.Build.Locator package for discovery (PR: [#2181](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2181))\n* fixed Cake test following the auto merge of #2175 (PR: [#2176](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2176))\n* Update build tools to match NET 6 Preview 5 (PR: [#2175](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2175))\n\n## [1.37.11] - 2021-06-18\n* Include timing info in logged responses (PR: [#2173](https://www.github.com/omnisharp/omnisharp-roslyn/pull/2173))\n* Defend against null value in BuildErrorEventArgs ([#2171](https://github.com/OmniSharp/omnisharp-roslyn/issues/2171), PR: [#2172](https://www.github.com/omnisharp/omnisharp-roslyn/pull/2172))\n* Updated to all the latest .NET SDKs (PR: [#2166](https://www.github.com/omnisharp/omnisharp-roslyn/pull/2166))\n* Add support for GoToDefinition on source-generated files (PR: [#2170](https://www.github.com/omnisharp/omnisharp-roslyn/pull/2170))\n* Add V2 version of GotoDefinitionService (PR: [#2168](https://www.github.com/omnisharp/omnisharp-roslyn/pull/2168))\n* avoid NRE when document is null (PR: [#2163](https://www.github.com/omnisharp/omnisharp-roslyn/pull/2163)))\n\n## [1.37.10] - 2021-05-25\n* Update included toolset to match .NET 6 preview4 (PR: [#2159](https://github.com/OmniSharp/omnisharp-roslyn/pull/2159))\n\n## [1.37.9] - 2021-05-17\n* Add async completion support (PR: [#1986](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/1986))\n* Only subscribe to AppDomain.AssemblyResolve once (PR: [#2149](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2149))\n* Update build tools to match .NET 6 Preview 3 SDK. (PR: [#2134](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2134))\n* Do not return null responses from BlockStructureService and CodeStructureService (PR: [#2148](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2148))\n* Strong-name sign OmniSharp assemblies (PR: [#2143](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2143))\n* Updated IL Spy to 7.0.0 stable (PR: [#2142](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2142))\n* Do not crash on startup when configuration is invalid (PR: [#2140](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2140))\n* Bump System.Text.Encodings.Web from 4.7.1 to 4.7.2 in /tools (PR: [#2137](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2137))\n* Correctly set compilation platform of the project (PR: [#2135](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2135))\n* Fix typo (PR: [#2098](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2098))\n* Rework completion resolution ([#2123](https://github.com/OmniSharp/omnisharp-roslyn/issues/2123), PR: [#2126](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2126))\n* Report back the solution filter name in workspace updated event (PR: [#2130](https://www.github.com/OmniSharp/omnisharp-roslyn/pull/2130))\n\n## [1.37.8] - 2021-03-27\n* Support Solution filter (.slnf) (PR: [#2121](https://github.com/OmniSharp/omnisharp-roslyn/pull/2121))\n* updated to IL Spy 7.0.0.6372 (PR: [#2113](https://github.com/OmniSharp/omnisharp-roslyn/pull/2113))\n* Add sentinel file to MSBuild to enable workload resolver ([omnisharp-vscode#4417](https://github.com/OmniSharp/omnisharp-vscode/issues/4417), PR: [#2111](https://github.com/OmniSharp/omnisharp-roslyn/pull/2111))\n* fixed CS8605 \"Unboxing possibly null value\" (PR: [#2108](https://github.com/OmniSharp/omnisharp-roslyn/pull/2108))\n* fixed a 1.37.7 regression: added binding redirects for System.Threading.Tasks.Dataflow (PR: [#2107](https://github.com/OmniSharp/omnisharp-roslyn/pull/2107))\n\n## [1.37.7] - 2021-03-04\n* Update Roslyn version to `3.10.0-1.21125.6` (PR: [#2105](https://github.com/OmniSharp/omnisharp-roslyn/pull/2105))\n* Update included build tools to closely match NET 6 Preview 1 SDK (PR: [#2103](https://github.com/OmniSharp/omnisharp-roslyn/pull/2103))\n* Updated to latest lsp version (PR: [#2099](https://github.com/OmniSharp/omnisharp-roslyn/pull/2099))\n* Improve custom error messages for MSB3644 (PR: [#2097](https://github.com/OmniSharp/omnisharp-roslyn/pull/2097))\n* Do not call FindReferencesAsync for null symbol ([#2054](https://github.com/OmniSharp/omnisharp-roslyn/issues/2054), PR: [#2089](https://github.com/OmniSharp/omnisharp-roslyn/pull/2089))\n* Move LSP Completion to the new CompletionService (PR: [#2074](https://github.com/OmniSharp/omnisharp-roslyn/pull/2074))\n* use an OmniSharp specific message for MSB3644 ([#2029](https://github.com/OmniSharp/omnisharp-roslyn/issues/2029), PR: [#2069](https://github.com/OmniSharp/omnisharp-roslyn/pull/2069))\n* changed the default RunFixAllRequest timeout to 10 seconds (PR: [#2066](https://github.com/OmniSharp/omnisharp-roslyn/pull/2066))\n\n## [1.37.6] - 2021-01-19\n* Handle records in syntax highlighting ([#2048](https://github.com/OmniSharp/omnisharp-roslyn/issues/2048), PR: [#2049](https://github.com/OmniSharp/omnisharp-roslyn/pull/2049))\n* Remove formatting on new line (PR: [#2053](https://github.com/OmniSharp/omnisharp-roslyn/pull/2053))\n* Validate highlighting ranges in semantic highlighting requests (PR: [#2055](https://github.com/OmniSharp/omnisharp-roslyn/pull/2055))\n* Delay project system init to avoid solution update race (PR: [#2057](https://github.com/OmniSharp/omnisharp-roslyn/pull/2057))\n* Use \"variable\" kind for parameter completion ([#2060](https://github.com/OmniSharp/omnisharp-roslyn/issues/2060), PR: [#2061](https://github.com/OmniSharp/omnisharp-roslyn/pull/2061))\n* Log request when response fails ([#2064](https://github.com/OmniSharp/omnisharp-roslyn/pull/2064))\n\n## [1.37.5] - 2020-12-16\n* Update Roslyn version to 3.9.0-2.20570.24 (PR: [#2022](https://github.com/OmniSharp/omnisharp-roslyn/pull/2022))\n* Gracefully handle GitVersion failure, and set a default version. (PR: [#2030](https://github.com/OmniSharp/omnisharp-roslyn/pull/2030))\n* Editorconfig improvements - do not lose state, trigger re-analysis on change ([#1955](https://github.com/OmniSharp/omnisharp-roslyn/issues/1955), [omnisharp-vscode#4165](https://github.com/OmniSharp/omnisharp-vscode/issues/4165), [omnisharp-vscode#4184](https://github.com/OmniSharp/omnisharp-vscode/issues/4184), PR: [#2028](https://github.com/OmniSharp/omnisharp-roslyn/pull/2028))\n* Add documentation comment creation to the FormatAfterKeystrokeService (PR: [#2023](https://github.com/OmniSharp/omnisharp-roslyn/pull/2023))\n* Raise default GotoDefinitionRequest timeout from 2s to 10s ([omnisharp-vscode#4260](https://github.com/OmniSharp/omnisharp-vscode/issues/4260), PR: [#2032](https://github.com/OmniSharp/omnisharp-roslyn/pull/2032))\n* Register languageServer as ILanguageServerFacade (PR: [#2025](https://github.com/OmniSharp/omnisharp-roslyn/pull/2025))\n* Workspace create file workaround (PR: [#2019](https://github.com/OmniSharp/omnisharp-roslyn/pull/2019))\n* Added `msbuild:UseBundledOnly` option to force the usage of bundled MSBuild (PR: [#2038](https://github.com/OmniSharp/omnisharp-roslyn/pull/2038))\n* Build NetCoreApp2.1 test project with .NET Core SDK 2.1 (PR: [#2040](https://github.com/OmniSharp/omnisharp-roslyn/pull/2040))\n\n## [1.37.4] - 2020-11-20\n* Fixed global Mono MSBuild version reporting (PR: [#1988](https://github.com/OmniSharp/omnisharp-roslyn/pull/1988))\n* Fixed incremental changes and completion in Cake (PR: [#1997](https://github.com/OmniSharp/omnisharp-roslyn/pull/1997))\n* Omnisharp now uses libPaths and sourcePaths defined in custom .rsp file for scripting (PR: [#2000](https://github.com/OmniSharp/omnisharp-roslyn/pull/2000))\n* C# scripting should use language version \"latest\" by default (PR: [#2001](https://github.com/OmniSharp/omnisharp-roslyn/pull/2001))\n* Fixed null references in LSP mode when requests are handled before the server fully initializes ([#1742](https://github.com/OmniSharp/omnisharp-roslyn/issues/1742https://github.com/OmniSharp/omnisharp-roslyn/issues/1742), [#1515](https://github.com/OmniSharp/omnisharp-roslyn/issues/1515), [#1083](https://github.com/OmniSharp/omnisharp-roslyn/issues/1083), PR: [#2005](https://github.com/OmniSharp/omnisharp-roslyn/pull/2005))\n* Fixed logging in LSP mode (PR: [#2002](https://github.com/OmniSharp/omnisharp-roslyn/pull/2002))\n* Upgraded LSP mode to `OmniSharp.Extensions.LanguageServer 0.18.3` (PR: [#1998](https://github.com/OmniSharp/omnisharp-roslyn/pull/1998))\n* Improve handling with Cake Script Service (PR: [#2013](https://github.com/OmniSharp/omnisharp-roslyn/pull/2013))\n* Updated to latest Dotnet.Script scripting packages for .NET 5.0 ([#2020](https://github.com/OmniSharp/omnisharp-roslyn/issues/2020), PR: [#2012](https://github.com/OmniSharp/omnisharp-roslyn/pull/2012))\n* Updated Roslyn to `3.8.0`, MSBuild to `16.8.0`, DotNetHostResolver to `5.0.0`, Nuget packages to `5.8.0-rc.6930` and MSBuildSDKResolver to `5.0.101-servicing.20564.2` to match .NET 5.0.100 SDK (PR: [#2015](https://github.com/OmniSharp/omnisharp-roslyn/pull/2015), [#2016](https://github.com/OmniSharp/omnisharp-roslyn/pull/2016))\n* Workspace create file workaround for VS Code (to avoid race condtion on newly created files) ([omnisharp-vscode#4181](https://github.com/OmniSharp/omnisharp-vscode/issues/4181), PR: [#2019](https://github.com/OmniSharp/omnisharp-roslyn/pull/2019))\n* Response file can now used enviroment variables in the path + more error handling (PR: [#2008](https://github.com/OmniSharp/omnisharp-roslyn/pull/2008))\n\n## [1.37.3] - 2020-10-14\n* Fixed a bug when the server wouldn't start on MacOS/Linux when a username contained a space (PR: [#1979](https://github.com/OmniSharp/omnisharp-roslyn/pull/1979))\n* Update to Mono 6.12.0 (PR: [#1981](https://github.com/OmniSharp/omnisharp-roslyn/pull/1981))\n* Fix responsiveness regression with targeted DiagnosticWorker revert ([#1982](https://github.com/OmniSharp/omnisharp-roslyn/issues/1982), [#1983](https://github.com/OmniSharp/omnisharp-roslyn/issues/1983), PR: [#1984](https://github.com/OmniSharp/omnisharp-roslyn/pull/1984))\n\n## [1.37.2] - 2020-10-09\n* Updated MSBuild, MSBuild resolvers and Roslyn to match .NET Core 5.0 RC2 and VS 16.8 Preview 4. (PR: [#1971](https://github.com/OmniSharp/omnisharp-roslyn/pull/1971), PR: [#1974](https://github.com/OmniSharp/omnisharp-roslyn/pull/1974))\n* Decouple FixAll from the workspace ([#1960](https://github.com/OmniSharp/omnisharp-roslyn/issues/1960), PR: [#1962](https://github.com/OmniSharp/omnisharp-roslyn/pull/1962))\n* Added binding redirects for Microsoft.CodeAnalysis.Features and Microsoft.CodeAnalysis.CSharp.Features (PR: [#1964](https://github.com/OmniSharp/omnisharp-roslyn/pull/1964))\n* Always log error responses with error level (PR: [#1963](https://github.com/OmniSharp/omnisharp-roslyn/pull/1963))\n* Added support for override property completion. **Warning**: contains breaking change, as `InsertText` was removed from the response, please use `TextEdit` instead (PR: [#1957](https://github.com/OmniSharp/omnisharp-roslyn/pull/1957))\n* Correctly handle <ProjectReferences> that don't produce references (PR: [#1956](https://github.com/OmniSharp/omnisharp-roslyn/pull/1956))\n* Marked `/autocomplete` endpoint as obsolete - the clients should be switching to `/completion` and `/completion/resolve` (PR: [#1951](https://github.com/OmniSharp/omnisharp-roslyn/pull/1951))\n* Fixed escapes in regex completions ([#1949](https://github.com/OmniSharp/omnisharp-roslyn/issues/1949), PR: [#1950](https://github.com/OmniSharp/omnisharp-roslyn/pull/1950))\n* Fixed completion on part of existing string ([omnisharp-vscode#4063](https://github.com/OmniSharp/omnisharp-vscode/issues/4063), PR: [#1941](https://github.com/OmniSharp/omnisharp-roslyn/pull/1941))\n* Fixed LSP completion item kinds (PR: [#1940](https://github.com/OmniSharp/omnisharp-roslyn/pull/1940))\n* Added support for textDocument/implementation in LSP mode (PR: [#1970](https://github.com/OmniSharp/omnisharp-roslyn/pull/1970))\n* Fixed namespace icon in completion response ([omnisharp-vscode#4051](https://github.com/OmniSharp/omnisharp-vscode/issues/4051), PR: [#1936](https://github.com/OmniSharp/omnisharp-roslyn/pull/1936))\n* Improved performance of find implementations (PR: [#1935](https://github.com/OmniSharp/omnisharp-roslyn/pull/1935))\n* Add support for new quick info endpoint when working with Cake (PR: [#1945](https://github.com/OmniSharp/omnisharp-roslyn/pull/1945))\n* Add support for new completion endpoints when working with Cake ([#1939](https://github.com/OmniSharp/omnisharp-roslyn/issues/1939), PR: [#1944](https://github.com/OmniSharp/omnisharp-roslyn/pull/1944))\n* When an analyzer fails to load, log an error (PR: [#1972](https://github.com/OmniSharp/omnisharp-roslyn/pull/1972))\n* Added support for 'extract base class' (PR: [#1969](https://github.com/OmniSharp/omnisharp-roslyn/pull/1969))\n* OmniSharp.Path can only be set in user settings (PR: [#1946](https://github.com/OmniSharp/omnisharp-roslyn/pull/1946))\n* Add support for code actions besides ApplyChangesOperation's (PR: [#1724](https://github.com/OmniSharp/omnisharp-roslyn/pull/1724))\n\n## [1.37.1] - 2020-09-01\n* Ensure that all quickinfo sections have linebreaks between them, and don't add unecessary duplicate linebreaks (PR: [#1900](https://github.com/OmniSharp/omnisharp-roslyn/pull/1900))\n* Support completion of unimported types (PR: [#1896](https://github.com/OmniSharp/omnisharp-roslyn/pull/1896))\n* Exclude Misc project from InternalsVisibleTo completion (PR: [#1902](https://github.com/OmniSharp/omnisharp-roslyn/pull/1902))\n* Ensure unimported things are sorted after imported things (PR: [#1903](https://github.com/OmniSharp/omnisharp-roslyn/pull/1903))\n* Updated lsp library to fix issue with signature help, etc ([#1887](https://github.com/OmniSharp/omnisharp-roslyn/issues/1887), PR: [#1890](https://github.com/OmniSharp/omnisharp-roslyn/pull/1890))\n* Correctly handle multiple reference aliases (PR: [#1905](https://github.com/OmniSharp/omnisharp-roslyn/pull/1905))\n* Better handle completion when the display text is not in the final result (PR: [#1908](https://github.com/OmniSharp/omnisharp-roslyn/pull/1908))\n* Correctly mark hover markup content as markdown ([#1906](https://github.com/OmniSharp/omnisharp-roslyn/issues/1906), PR: [#1909](https://github.com/OmniSharp/omnisharp-roslyn/pull/1909))\n* Upgrade lsp ([#1898](https://github.com/OmniSharp/omnisharp-roslyn/issues/1898), PR: [#1911](https://github.com/OmniSharp/omnisharp-roslyn/pull/1911))\n* Updated to ILSpy 6.1.0.5902 (PR: [#1913](https://github.com/OmniSharp/omnisharp-roslyn/pull/1913))\n* Updated to NET 5.0 preview8 (PR: [#1916](https://github.com/OmniSharp/omnisharp-roslyn/pull/1916))\n* Add HTTP Driver back to build.json (PR: [#1918](https://github.com/OmniSharp/omnisharp-roslyn/pull/1918))\n* Use ExecutionPolicy Bypass when running powershell.exe (PR: [#1917](https://github.com/OmniSharp/omnisharp-roslyn/pull/1917))\n* Update the package that Arch Linux users need to install (PR: [#1921](https://github.com/OmniSharp/omnisharp-roslyn/pull/1921))\n* Updated the docs to mention .NET 4.7.2 targeting pack (PR: [#1922](https://github.com/OmniSharp/omnisharp-roslyn/pull/1922))\n* Support for configurations remapping in solution files ([#1828](https://github.com/OmniSharp/omnisharp-roslyn/issues/1828), PR: [#1835](https://github.com/OmniSharp/omnisharp-roslyn/pull/1835))\n* Only run dotnet --info once for the working directory (PR: [#1925](https://github.com/OmniSharp/omnisharp-roslyn/pull/1925))\n* Update build tool versions for NET 5 RC1 (PR: [#1926](https://github.com/OmniSharp/omnisharp-roslyn/pull/1926))\n* Update Roslyn to 3.8.0-3.20451.2 (PR: [#1927](https://github.com/OmniSharp/omnisharp-roslyn/pull/1927))\n\n## [1.37.0] - 2020-08-18\n* Update Roslyn version and tooling to match .NET 5 Preview8 (PR: [#1897](https://github.com/OmniSharp/omnisharp-roslyn/pull/1897))\n* Updated lsp library to fix issue with signature help, etc (PR: [#1890](https://github.com/OmniSharp/omnisharp-roslyn/pull/1890))\n* Include version matched target files with minimal MSBuild (PR: [#1895](https://github.com/OmniSharp/omnisharp-roslyn/pull/1895))\n* Fix lack of trailing italics in quickinfo (PR: [#1894](https://github.com/OmniSharp/omnisharp-roslyn/pull/1894))\n* Added System.Reflection.Emit.* to embedded mono script (PR: [#1892](https://github.com/OmniSharp/omnisharp-roslyn/pull/1892))\n* Start moving omnisharp to directly using Roslyn's completion service (PR: [#1877](https://github.com/OmniSharp/omnisharp-roslyn/pull/1877))\n* Add asynchronous test completed events (PR: [#1802](https://github.com/OmniSharp/omnisharp-roslyn/pull/1802))\n\n## [1.36.1] - 2020-08-12\n* Fix MSBuild version mismatch with new SDKs ([omnisharp-vscode#3951](https://github.com/OmniSharp/omnisharp-vscode/issues/3951), PR: [#1883](https://github.com/OmniSharp/omnisharp-roslyn/pull/1883))\n\n## [1.36.0] - 2020-08-10\n* Introduced a new `/quickinfo` endpoint to provide a richer set of information compared to `/typeinfo`. Consumers are encouraged to use it as their hover provider ([#1808](https://github.com/OmniSharp/omnisharp-roslyn/issues/1808), PR: [#1860](https://github.com/OmniSharp/omnisharp-roslyn/pull/1860))\n* Updated LSP hover provider to use the new QuickInfo based services (PR: [#1870](https://github.com/OmniSharp/omnisharp-roslyn/pull/1870))\n* Fixed return type in LSP completion handler ([#1864](https://github.com/OmniSharp/omnisharp-roslyn/issues/1864), PR: [#1869](https://github.com/OmniSharp/omnisharp-roslyn/pull/1869))\n* Upgraded to the latest version of the csharp-language-server-protocol [#1815](https://github.com/OmniSharp/omnisharp-roslyn/pull/1815)\n* Added support for Roslyn `EmbeddedLanguageCompletionProvider` which enables completions for string literals for `DateTime` and `Regex` ([#1871](https://github.com/OmniSharp/omnisharp-roslyn/pull/1871))\n* Improve performance of the `textDocument/codeAction` request. (PR: [#1814](https://github.com/OmniSharp/omnisharp-roslyn/pull/1814))\n* Updated Roslyn to Roslyn version and tools to match .NET 5 Preview8 (PR: [#1867](https://github.com/OmniSharp/omnisharp-roslyn/pull/1867))\n* Provide a warning when the discovered MSBuild version is lower than the minimumMSBuildVersion supported by the configured SDK (PR: [#1875](https://github.com/OmniSharp/omnisharp-roslyn/pull/1875))\n* Use the real MSBuild product version during discovery (PR: [#1876](https://github.com/OmniSharp/omnisharp-roslyn/pull/1876))\n* Fixed debugging in .NET 5 preview SDKs ([omnisharp-vscode#3459](https://github.com/OmniSharp/omnisharp-vscode/issues/3459), PR: [#1862](https://github.com/OmniSharp/omnisharp-roslyn/pull/1862))\n\n## [1.35.4] - 2020-07-22\n* Update to Roslyn `3.8.0-1.20357.3` (PR: [#1849](https://github.com/OmniSharp/omnisharp-roslyn/pull/1849))\n* Added LSP handler for the `workspace/symbol` request. (PR: [#1799](https://github.com/OmniSharp/omnisharp-roslyn/pull/1799))\n* Use global MSBuild property when resetting target framework ([#1738](https://github.com/OmniSharp/omnisharp-roslyn/issues/1738), PR: [#1846](https://github.com/OmniSharp/omnisharp-roslyn/pull/1846))\n* Do not use Visual Studio MSBuild if it doesn't have .NET SDK resolver ([#1842](https://github.com/OmniSharp/omnisharp-roslyn/issues/1842), [#1730](https://github.com/OmniSharp/omnisharp-roslyn/issues/1730), PR: [#1845](https://github.com/OmniSharp/omnisharp-roslyn/pull/1845))\n* Only request dotnet info once for the solution or directory ([#1844](https://github.com/OmniSharp/omnisharp-roslyn/issues/1844), PR: [#1857](https://github.com/OmniSharp/omnisharp-roslyn/pull/1857))\n* Allow client to specify symbol filter for FindSymbols Endpoint. (PR: [#1823](https://github.com/OmniSharp/omnisharp-roslyn/pull/1823))\n* Exclude additive classifications from \"/highlight\" requests ([#1576](https://github.com/OmniSharp/omnisharp-roslyn/issues/1576), PR: [#1726](https://github.com/OmniSharp/omnisharp-roslyn/pull/1726))\n* Upgraded to Mono 6.10.0.105, msbuild 16.6 and added missing targets (PR: [#1854](https://github.com/OmniSharp/omnisharp-roslyn/pull/1854))\n\n## [1.35.3] - 2020-06-11\n* Added LSP handler for `textDocument/codeAction` request. (PR: [#1795](https://github.com/OmniSharp/omnisharp-roslyn/pull/1795))\n* Expose a custom LSP `omnisharp/client/findReferences` command via code lens (meant to be handled by LSP client). (PR: [#1807](https://github.com/OmniSharp/omnisharp-roslyn/pull/1807))\n* Added `DirectoryDelete` option to `FileChangeType` allowing clients to report deleted directories that need to be removed (along all the files) from the workspace (PR: [#1821](https://github.com/OmniSharp/omnisharp-roslyn/pull/1821))\n* Do not crash when plugin assembly cannot be loaded ([#1307](https://github.com/OmniSharp/omnisharp-roslyn/issues/1307), PR: [#1827](https://github.com/OmniSharp/omnisharp-roslyn/pull/1827))\n\n## [1.35.2] - 2020-05-20\n* Added support for `WarningsAsErrors` in csproj files (PR: [#1779](https://github.com/OmniSharp/omnisharp-roslyn/pull/1779))\n* Added support for `WarningsNotAsErrors` in csproj files ([#1681](https://github.com/OmniSharp/omnisharp-roslyn/issues/1681), PR: [#1784](https://github.com/OmniSharp/omnisharp-roslyn/pull/1784))\n* Improved MSBuild scoring system ([#1783](https://github.com/OmniSharp/omnisharp-roslyn/issues/1783), PR: [#1797](https://github.com/OmniSharp/omnisharp-roslyn/pull/1797))\n* Updated OmniSharp.Extensions.LanguageServer to `0.14.2` to fix synchronisation (PR: [#1791](https://github.com/OmniSharp/omnisharp-roslyn/pull/1791))\n* Add test discovery and NoBuild option to test requests (PR: [#1719](https://github.com/OmniSharp/omnisharp-roslyn/pull/1719))\n* Update to Roslyn `3.7.0-2.20269.10` (PR: [#1804](https://github.com/OmniSharp/omnisharp-roslyn/pull/1804))\n\n## [1.35.1] - 2020-05-04\n* Fixed not supported exception when trying to decompile a BCL assembly on Mono. For now we do not try to resolve implementation assembly from a ref assembly (PR: [#1767](https://github.com/OmniSharp/omnisharp-roslyn/pull/1767))\n* Added support for generic classes in test runner ([omnisharp-vscode#3722](https://github.com/OmniSharp/omnisharp-vscode/issues/3722), PR: [#1768](https://github.com/OmniSharp/omnisharp-roslyn/pull/1768))\n* Improved autocompletion performance (PR: [#1761](https://github.com/OmniSharp/omnisharp-roslyn/pull/1761))\n* Move to Roslyn's .editorconfig support ([#1657](https://github.com/OmniSharp/omnisharp-roslyn/issues/1657), PR: [#1771](https://github.com/OmniSharp/omnisharp-roslyn/pull/1771))\n* Fully update CompilationOptions when project files change (PR: [#1774](https://github.com/OmniSharp/omnisharp-roslyn/pull/1774))\n* Updated to Roslyn `3.6.0-4.20228.5` (PR: [#1778](https://github.com/OmniSharp/omnisharp-roslyn/pull/1778))\n\n## [1.35.0] - 2020-04-10\n* Support for `<RunAnalyzers />` and `<RunAnalyzersDuringLiveAnalysis />` (PR: [#1739](https://github.com/OmniSharp/omnisharp-roslyn/pull/1739))\n* Add `typeparam` documentation comments to text description ([omnisharp-vscode#3516](https://github.com/OmniSharp/omnisharp-vscode/issues/3516), PR: [#1749](https://github.com/OmniSharp/omnisharp-roslyn/pull/1749))\n* Tag `#region` blocks appropriately in the block structure service ([omnisharp-vscode#2621](https://github.com/OmniSharp/omnisharp-vscode/issues/2621), PR: [#1748](https://github.com/OmniSharp/omnisharp-roslyn/pull/1748))\n* Added support for decompilation based on ILSpy (similar to VS). The feature is currently opt-into and needs to be enabled using OmniSharp configuration (PR: [#1751](https://github.com/OmniSharp/omnisharp-roslyn/pull/1751))\n    ```JSON\n        {\n            \"RoslynExtensionsOptions\": {\n                \"enableDecompilationSupport\": true\n            }\n        }\n    ```\n\n## [1.34.15] - 2020-03-25\n* Support for .NET Core 3.1 in csx files (PR: [#1731](https://github.com/OmniSharp/omnisharp-roslyn/pull/1731))\n* Update the minimal MSBuild to better support .NET 5 Previews ([omnisharp-vscode#3653](https://github.com/OmniSharp/omnisharp-vscode/issues/3653), PR: [#1746](https://github.com/OmniSharp/omnisharp-roslyn/pull/1746))\n* Updated to Roslyn `3.6.0-3.20170.19` (PR: [#1745](https://github.com/OmniSharp/omnisharp-roslyn/pull/1745))\n* Added semantic highlighting endpoint `/v2/highlight` (PR: [#1734](https://github.com/OmniSharp/omnisharp-roslyn/pull/1734))\n\n## [1.34.14] - 2020-03-09\n* Added support for `annotations` value of `Nullable` csproj property ([#1721](https://github.com/OmniSharp/omnisharp-roslyn/issues/1721), PR: [#1722](https://github.com/OmniSharp/omnisharp-roslyn/pull/1722))\n* Added ability to specify custom RunSettings for tests (PR: [omnisharp-vscode#3573](https://github.com/OmniSharp/omnisharp-vscode/pull/3573), PR: [#1710](https://github.com/OmniSharp/omnisharp-roslyn/pull/1710))\n\n## [1.34.13] - 2020-02-19\n* Fixed a bug where organizing usings clashed with other formatting settings (PR: [#1715](https://github.com/OmniSharp/omnisharp-roslyn/pull/1713))\n\n## [1.34.12] - 2020-02-18\n* Fixed out of bounds exception in line mapping ([omnisharp-vscode#3485](https://github.com/OmniSharp/omnisharp-vscode/issues/3485), PR: [#1707](https://github.com/OmniSharp/omnisharp-roslyn/pull/1707))\n* Added support for aliases in project references ([#1685](https://github.com/OmniSharp/omnisharp-roslyn/issues/1685), PR: [#1701](https://github.com/OmniSharp/omnisharp-roslyn/pull/1701))\n* Raised the lowest discovered VS2019 version to 16.3 ([#1700](https://github.com/OmniSharp/omnisharp-roslyn/issues/1700), PR: [#1713](https://github.com/OmniSharp/omnisharp-roslyn/pull/1713))\n\n## [1.34.11] - 2020-02-05\n* Updated the bundled Mono to 6.8.0 and MSBuild to be copied from Mono 6.8.0 ([#1693](https://github.com/OmniSharp/omnisharp-roslyn/issues/1693), PR: [#1697](https://github.com/OmniSharp/omnisharp-roslyn/pull/1697))\n* Included NugetSDKResolver in the minimal MSBuild, which introduces support for Nuget based project SDKs like Arcade ([#1678](https://github.com/OmniSharp/omnisharp-roslyn/issues/1678), PR: [#1696](https://github.com/OmniSharp/omnisharp-roslyn/pull/1696))\n\n## [1.34.10] - 2020-01-27\n* Update to Roslyn `3.5.0-beta3-20058-03` (PR: [#1680](https://github.com/OmniSharp/omnisharp-roslyn/pull/1680))\n* Fixed a bug where completion items didn't decode symbols corectly (impacted, for example, object initializer completion quality) ([omnisharp-vscode#3465](https://github.com/OmniSharp/omnisharp-vscode/issues/3465), PR: [#1670](https://github.com/OmniSharp/omnisharp-roslyn/pull/1670))\n* Updated to MsBuild 16.4.0 on Linux/MacOS (PR:[#1669](https://github.com/OmniSharp/omnisharp-roslyn/pull/1669))\n* Added support for implement type options - it is now possible to define whether code-fix/refactoring generated properties should be auto- or throwing-properties and at which place in the class should newly generated members be inserted. They can be set via OmniSharp configuration, such as `omnisharp.json` file. (PR: [#1672](https://github.com/OmniSharp/omnisharp-roslyn/pull/1672))\n    ```JSON\n    {\n        \"ImplementTypeOptions\": {\n            \"PropertyGenerationBehavior\": \"PreferAutoProperties\", // or \"PreferThrowingProperties\" which is the default\n            \"InsertionBehavior\": \"AtTheEnd\" // or \"WithOtherMembersOfTheSameKind\" which is default\n        }\n    }\n    ```\n* Added support for organizing usings on format. This can be set via OmniSharp configuration, such as `omnisharp.json` file. (PR: [#1686](https://github.com/OmniSharp/omnisharp-roslyn/pull/1686))\n    ```JSON\n    {\n        \"FormattingOptions\": {\n            \"OrganizeImports\": true\n        }\n    }\n    ```\n\n## [1.34.9] - 2019-12-10\n* Updated to MsBuild 16.4.0 on Windows (PR:[#1662](https://github.com/OmniSharp/omnisharp-roslyn/pull/1662))\n* Line pragma is now respected in find references ([#1649](https://github.com/OmniSharp/omnisharp-roslyn/issues/1649), PR:[#1660](https://github.com/OmniSharp/omnisharp-roslyn/pull/1660))\n* Do not set mono paths when running in standalone mode ([omnisharp-vscode#3410](https://github.com/OmniSharp/omnisharp-vscode/issues/3410), [omnisharp-vscode#3340](https://github.com/OmniSharp/omnisharp-vscode/issues/3340), [#1650](https://github.com/OmniSharp/omnisharp-roslyn/issues/1650), PR:[#1656](https://github.com/OmniSharp/omnisharp-roslyn/pull/1656))\n* Fixed a bug where OmniSharp would crash on startup if the path contained `=` sign ([omnisharp-vscode#3436](https://github.com/OmniSharp/omnisharp-vscode/issues/3436), PR:[#1661](https://github.com/OmniSharp/omnisharp-roslyn/pull/1661))\n* Update to Roslyn `3.5.0-beta2-19606-01` (PR:[#1663](https://github.com/OmniSharp/omnisharp-roslyn/pull/1663))\n\n## [1.34.8] - 2019-11-21\n* Update to Roslyn `3.5.0-beta1-19571-01` (PR:[#1653](https://github.com/OmniSharp/omnisharp-roslyn/pull/1653))\n* Support plugins configuration in omnisharp.json (PR:[#1615](https://github.com/OmniSharp/omnisharp-roslyn/pull/1615))\n\n## [1.34.7] - 2019-11-06\n* Updated the embedded Mono to 6.4.0 (PR:[#1640](https://github.com/OmniSharp/omnisharp-roslyn/pull/1640))\n* Update to Roslyn `3.4.0-beta3-19551-02` to align with the upcoming .NET Core 3.1 Preview 3 (PR:[#1644](https://github.com/OmniSharp/omnisharp-roslyn/pull/1644))\n\n## [1.34.6] - 2019-10-25\n* Update to Roslyn `3.4.0-beta3-19516-01` (PR:[#1634](https://github.com/OmniSharp/omnisharp-roslyn/pull/1634))\n* Fixed a bug that caused CS0019 diagnostic to be erroneously reported when comparing to `default` ([#1619](https://github.com/OmniSharp/omnisharp-roslyn/issues/1619), PR:[#1634](https://github.com/OmniSharp/omnisharp-roslyn/pull/1634))\n* Raised minimum Mono version to 6.4.0 to provide better .NET Core 3.0 support ([#1629](https://github.com/OmniSharp/omnisharp-roslyn/pull/1629))\n* Fixed a concurrency bug in scripting/Cake support ([#1627](https://github.com/OmniSharp/omnisharp-roslyn/pull/1627))\n* Correctly respect request cancellation token in metadata service ([#1631](https://github.com/OmniSharp/omnisharp-roslyn/pull/1631))\n\n## [1.34.5] - 2019-10-08\n* Fixed 1.34.4 regression that caused \"go to metadata\" to not work ([#1624](https://github.com/OmniSharp/omnisharp-roslyn/issues/1624), PR: [#1625](https://github.com/OmniSharp/omnisharp-roslyn/pull/1625))\n* Updated the Dotnet.Script.DependencyModel and Dotnet.Script.DependencyModel.NuGet packages to version 0.50.0 adding support for .NET Core 3.0 based scripts (PR: [#1609](https://github.com/OmniSharp/omnisharp-roslyn/pull/1609))\n\n## [1.34.4] - 2019-09-30\n* Upgraded to MSBuild 16.3 and Mono MSBuild 16.3 (from Mono 6.4.0) to support .NET Core 3.0 RTM (PR: [#1616](https://github.com/OmniSharp/omnisharp-roslyn/pull/1616), [#1612](https://github.com/OmniSharp/omnisharp-roslyn/pull/1612), [#1606](https://github.com/OmniSharp/omnisharp-roslyn/pull/1606))\n* Fixed behavior when there are multiple handlers are defined for a language for a given request (PR: [#1582](https://github.com/OmniSharp/omnisharp-roslyn/pull/1582))\n\n## [1.34.3] - 2019-09-11\n* Added support for `CheckForOverflowUnderflow ` in csproj files (PR: [#1587](https://github.com/OmniSharp/omnisharp-roslyn/pull/1587))\n* Updated LSP libraries to 0.13 which fixes problems with clients not supporting dynamic registrations. ([#1505](https://github.com/OmniSharp/omnisharp-roslyn/issues/1505), [#1525](https://github.com/OmniSharp/omnisharp-roslyn/issues/1525), PR: [#1562](https://github.com/OmniSharp/omnisharp-roslyn/pull/1562))\n* Update to Roslyn `3.4.0-beta1-19460-02` to align with the upcoming .NET Core 3.1 preview 1 (PR:[#1597](https://github.com/OmniSharp/omnisharp-roslyn/pull/1597))\n\n## [1.34.2] - 2019-08-16\n* Update to Roslyn `3.3.0-beta2-19401-05` which fixes a 1.34.1 regression resulting in StackOverflowException on code analysis of partial classes (PR: [#1579](https://github.com/OmniSharp/omnisharp-roslyn/pull/1579))\n* Added support for reading C# 8.0 `Nullable` setting from csproj files (and dropped support for `NullableContextOptions` - based on the LDM decision to [rename the MSBuild property](https://github.com/dotnet/roslyn/issues/35432) ([#1573](https://github.com/OmniSharp/omnisharp-roslyn/pull/1573))\n\n## [1.34.1] - 2019-07-31\n* Added support for \"sync namespace\" refactoring ([#1475](https://github.com/OmniSharp/omnisharp-roslyn/issues/1475), PR: [#1563](https://github.com/OmniSharp/omnisharp-roslyn/pull/1563))\n* Fixed a regression introduced in 1.32.20 which caused `AllowUnsafeCode` in csproj to also enable `TreatWarningsAsErrors` behavior ([#1565](https://github.com/OmniSharp/omnisharp-roslyn/issues/1565), PR: [#1567](https://github.com/OmniSharp/omnisharp-roslyn/pull/1567))\n* Update to Roslyn `3.3.0-beta2-19376-02` (PR: [#1563](https://github.com/OmniSharp/omnisharp-roslyn/pull/1563))\n* Fixed a timeout issue in large analyzer bundles (i.e. FxCop analyzers) ([#1552](https://github.com/OmniSharp/omnisharp-roslyn/issues/1552), PR: [#1566](https://github.com/OmniSharp/omnisharp-roslyn/pull/1566))\n\n## [1.34.0] - 2019-07-15\n* Added support for Roslyn code actions that normally need UI - they used to be explicitly sipped by OmniSharp, now it surfaces them with predefined defaults instead. ([#1220](https://github.com/OmniSharp/omnisharp-roslyn/issues/1220), PR: [#1406](https://github.com/OmniSharp/omnisharp-roslyn/pull/1406)) These are:\n  * extract interface\n  * generate constructor\n  * generate overrides\n  * generate *Equals* and *GetHashCode*\n* Improved analyzers performance by introducing background analysis support ([#1507](https://github.com/OmniSharp/omnisharp-roslyn/pull/1507))\n* According to [official Microsoft .NET Core support policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core), .NET Core 1.0 and 1.1 (`project.json`-based .NET Core flavors) have reached end of life and went out of support on 27 June 2019. OmniSharp features to support that, which have been obsolete and disabled by default since version 1.32.2 (2018-08-07), are now completely removed.\n* Fixed a bug where some internal services didn't respect the disabling of a project system ([#1543](https://github.com/OmniSharp/omnisharp-roslyn/pull/1543))\n* Improved the MSBuild selection logic. The standalone instance inside OmniSharp is now preferred over VS2017, with VS2019 given the highest priority. This ensures that .NET Core 3.0 works correctly. It is also possible manually provide an MSBuild path using OmniSharp configuration, which is then always selected. ([#1541](https://github.com/OmniSharp/omnisharp-roslyn/issues/1541), PR: [#1545](https://github.com/OmniSharp/omnisharp-roslyn/pull/1545))\n    ```JSON\n        {\n            \"MSBuild\": {\n                \"MSBuildOverride\": {\n                    \"MSBuildPath\": \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Enterprise\\\\MSBuild\\\\15.0\\\\Bin\",\n                    \"Name\": \"vs2017 msbuild\"\n                }\n            }\n        }\n    ```\n* Added support for *AdditionalFiles* in csproj files ([#1510](https://github.com/OmniSharp/omnisharp-roslyn/issues/1510), PR: [#1547](https://github.com/OmniSharp/omnisharp-roslyn/pull/1547))\n* Fixed a bug in *.editorconfig* where formatting settings were not correctly passed into external code fixes ([#1558](https://github.com/OmniSharp/omnisharp-roslyn/issues/1558), PR: [#1559](https://github.com/OmniSharp/omnisharp-roslyn/pull/1559))\n\n## [1.33.0] - 2019-07-01\n* Added support for `.editorconfig` files to control formatting settings, analyzers, coding styles and naming conventions. The feature is currently opt-into and needs to be enabled using OmniSharp configuration ([#31](https://github.com/OmniSharp/omnisharp-roslyn/issues/31), PR: [#1526](https://github.com/OmniSharp/omnisharp-roslyn/pull/1526))\n    ```JSON\n        {\n            \"FormattingOptions\": {\n                \"EnableEditorConfigSupport\": true\n            }\n        }\n    ```\n* Analyzers improvements (PR: [#1440](https://github.com/OmniSharp/omnisharp-roslyn/pull/1440))\n\t* Dynamically loaded / modifiable rulesets instead without full restart on omnisharp after every change\n\t* Reanalyze updated projects\n\t* Built-int Roslyn diagnostics can be controlled by rulesets even when analyzers are not enabled\n\t* Faster analysis since project isn't updated every time\n\t* When project is restored it is re-analyzed with correct dependencies\n* Added support for various renaming options - renaming any symbol can now propagate to comments or strings, and renaming a method symbol can also rename its overloads. They can be set via OmniSharp configuration, such as `omnisharp.json` file (they are disabled by default). (PR: [#1495](https://github.com/OmniSharp/omnisharp-roslyn/pull/1495))\n    ```JSON\n    {\n        \"RenameOptions\": {\n            \"RenameInComments\": true,\n            \"RenameOverloads\": true,\n            \"RenameInStrings\": true\n        }\n    }\n    ```\n* Fixed a regression on declaration name completion (PR: [#1520](https://github.com/OmniSharp/omnisharp-roslyn/pull/1520))\n* Update to Roslyn `3.2.0-beta4-19326-12` (PR: [#1534](https://github.com/OmniSharp/omnisharp-roslyn/pull/1534))\n* Added snippets support in LSP mode (PR: [#1422](https://github.com/OmniSharp/omnisharp-roslyn/pull/1422))\n* Fixed renaming in LSP mode (PR: [#1423](https://github.com/OmniSharp/omnisharp-roslyn/pull/1423))\n\n## [1.32.20] - 2019-06-03\n* Added support for `TreatWarningsAsErrors` in csproj files (PR: [#1459](https://github.com/OmniSharp/omnisharp-roslyn/pull/1459))\n* Updated to Roslyn `3.2.0-beta3-19281-01` to match VS dev16.2p2 (PR: [#1511](https://github.com/OmniSharp/omnisharp-roslyn/pull/1511))\n* Updated to `OmniSharp.Extensions.LanguageServer` 0.12.1 ([#1403](https://github.com/OmniSharp/omnisharp-roslyn/issues/1403), PR: [#1503](https://github.com/OmniSharp/omnisharp-roslyn/pull/1503))\n* Fixed assembly redirects when shadow copying analyzers ([#1496](https://github.com/OmniSharp/omnisharp-roslyn/issues/1496), PR: [#1497](https://github.com/OmniSharp/omnisharp-roslyn/pull/1497))\n* Fixed a logical bug in symbol completion (PR: [#1491](https://github.com/OmniSharp/omnisharp-roslyn/pull/1491))\n* Added support for `preview` and `latestmajor` C# language versions ([#1487](https://github.com/OmniSharp/omnisharp-roslyn/issues/1487), PR: [#1488](https://github.com/OmniSharp/omnisharp-roslyn/pull/1488))\n\n## [1.32.19] - 2019-05-01\n* Updated to Roslyn `3.1.0-beta4-19251-02` (PR: [#1479](https://github.com/OmniSharp/omnisharp-roslyn/pull/1479))\n* Shadow copy Roslyn analyzers in order to not lock them ([#1465](https://github.com/OmniSharp/omnisharp-roslyn/issues/1465), PR: [#1474](https://github.com/OmniSharp/omnisharp-roslyn/pull/1474))\n* Fixed logging output for OmniSharp HTTP server ([#1466](https://github.com/OmniSharp/omnisharp-roslyn/issues/1446), PR: [#1456](https://github.com/OmniSharp/omnisharp-roslyn/pull/1456))\n* Fixed OmniSharp hanging on wildcard Nuget package references ([omnisharp-vscode#3009](https://github.com/OmniSharp/omnisharp-vscode/issues/3009), PR: [#1473](https://github.com/OmniSharp/omnisharp-roslyn/pull/1473))\n* OmniSharp now uses correct 4.7.2 framework sku to prompt for installation of .NET 4.7.2 if missing ([#1468](https://github.com/OmniSharp/omnisharp-roslyn/issues/1468), PR: [#1469](https://github.com/OmniSharp/omnisharp-roslyn/pull/1469))\n\n## [1.32.18] - 2019-04-12\n* Renamed `ProjectGuid` to `ProjectId` and no longer hash target framework names on `ProjectConfigurationMessage` (PR: [#1454](https://github.com/OmniSharp/omnisharp-roslyn/pull/1454))\n\n## [1.32.17] - 2019-04-12\n* Fixed a bug in embedded MSBuild 16 path detection (PR: [#1457](https://github.com/OmniSharp/omnisharp-roslyn/pull/1457))\n\n## [1.32.16] - 2019-04-10\n* .NET Core 3.0 support (PR: [#1450](https://github.com/OmniSharp/omnisharp-roslyn/pull/1450))\n* Upgraded to Roslyn `3.1.0-beta2-19205-01` (PR: [#1448](https://github.com/OmniSharp/omnisharp-roslyn/pull/1448))\n* Enabled outline support from LSP (PR: [#1411](https://github.com/OmniSharp/omnisharp-roslyn/pull/1411))\n\n## [1.32.15] - 2019-04-09\n* Startup performance improvements (PR: [#1427](https://github.com/OmniSharp/omnisharp-roslyn/pull/1427))\n\n## [1.32.14] - 2019-04-08\n* OmniSharp now targets **net472**, instead of **net461** (PR: [#1444](https://github.com/OmniSharp/omnisharp-roslyn/pull/1444))\n* Upgraded OmniSharp to use Mono 5.18.1 and MSBuild `16.0.461` (PR: [#1444](https://github.com/OmniSharp/omnisharp-roslyn/pull/1444))\n\n## [1.32.13] - 2019-04-02\n* Added experimental support for Roslyn analyzers and code fixes (PR: [#1076](https://github.com/OmniSharp/omnisharp-roslyn/pull/1076))\n* Included constant values in `/typelookup` responses ([omnisharp-vscode#2857](https://github.com/OmniSharp/omnisharp-vscode/issues/2857), PR: [#1420](https://github.com/OmniSharp/omnisharp-roslyn/pull/1420))\n* Fixed transient documents not disappearing on project update  (PR: [#1159](https://github.com/OmniSharp/omnisharp-roslyn/pull/1159))\n* When fixing usings, return namespaces associated with ambiguous result (PR: [#1169](https://github.com/OmniSharp/omnisharp-roslyn/pull/1169))\n* Fixed refusing HTTP connections ([#1274](https://github.com/OmniSharp/omnisharp-roslyn/issues/1274), PR: [#1361](https://github.com/OmniSharp/omnisharp-roslyn/pull/1361))\n* Fixed find references for indexer properties (PR: [#1399](https://github.com/OmniSharp/omnisharp-roslyn/pull/1399))\n* Added Roslyn 'tags' to diagnostic response (PR: [#1410](https://github.com/OmniSharp/omnisharp-roslyn/pull/1410))\n* Added support for `extern alias` ([omnisharp-vscode#2342](https://github.com/OmniSharp/omnisharp-vscode/issues/2342), PR: [#1409](https://github.com/OmniSharp/omnisharp-roslyn/pull/1409))\n\n## [1.32.11] - 2019-02-27\n* Updated to Roslyn `3.0.0-beta4-19126-05` to match VS 16.0p4 ([#1413](https://github.com/OmniSharp/omnisharp-roslyn/issues/1413), PR: [#1414](https://github.com/OmniSharp/omnisharp-roslyn/pull/1414))\n* Added support for reading C# 8.0 `NullableContextOptions` from csproj files ([#1396](https://github.com/OmniSharp/omnisharp-roslyn/issues/1396), PR: [#1404](https://github.com/OmniSharp/omnisharp-roslyn/pull/1404))\n\n## [1.32.10] - 2019-01-25\n* Updated to Roslyn 3.0 to match [VS 2019](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes-preview#VS2019_Preview2) (PR: [#1391](https://github.com/OmniSharp/omnisharp-roslyn/pull/1391))\n* Fixed shutdown event handling for LSP _(Contributed by [@LoneBoco](https://github.com/LoneBoco))_ ([#1113](https://github.com/OmniSharp/omnisharp-roslyn/issues/1113), PR: [#1345](https://github.com/OmniSharp/omnisharp-roslyn/pull/1345))\n\n## [1.32.9] - 2019-1-22\n* Updated to Roslyn `2.11.0-beta1-final` and initial support for C# 8 (PR: [#1365](https://github.com/OmniSharp/omnisharp-roslyn/pull/1365))\n* Incorporate *IndentSwitchCaseSectionWhenBlock* into OmniSharp's formatting options. This fixes the default formatting behavior, as the setting is set to *true* by default, and still allows users to disable it if needed. ([#1351](https://github.com/OmniSharp/omnisharp-roslyn/issues/1351), PR: [#1353](https://github.com/OmniSharp/omnisharp-roslyn/pull/1353))\n* Removed unused `-stdio` flag from the `StdioCommandLineApplication` (PR: [#1362](https://github.com/OmniSharp/omnisharp-roslyn/pull/1362))\n* Fixed finding references to operator overloads _(Contributed by [@SirIntruder](https://github.com/SirIntruder))_ (PR: [#1371](https://github.com/OmniSharp/omnisharp-roslyn/pull/1371))\n* Fixed a 1.29.0 regression that caused LSP not to work with `StdioCommandLineApplication` ([#1269](https://github.com/OmniSharp/omnisharp-roslyn/issues/1269), PR: [#1346](https://github.com/OmniSharp/omnisharp-roslyn/pull/1346))\n* Improved handling of files moving on disk (PR: [#1368](https://github.com/OmniSharp/omnisharp-roslyn/pull/1368))\n* Improved detection of MSBuild when multiple instances are available _(Contributed by [@johnnyasantoss ](https://github.com/johnnyasantoss))_ (PR: [#1349](https://github.com/OmniSharp/omnisharp-roslyn/pull/1349))\n\n## [1.32.8] - 2018-11-14\n* Fixed MSBuild discovery path (1.32.7 regression) (PR: [#1337](https://github.com/OmniSharp/omnisharp-roslyn/pull/1337))\n\n## [1.32.7] - 2018-11-12\n* It's now possible to override the default location of OmniSharp's global folder (%USERPROFILE%\\.omnisharp or ~/.omnisharp.) with an OMNISHARPHOME environment variable (PR: [#1317](https://github.com/OmniSharp/omnisharp-roslyn/pull/1317))\n* OmniSharp no longer searches for `config.json` in its source directory to load configuration (PR: [#1319](https://github.com/OmniSharp/omnisharp-roslyn/pull/1319))\n* Fixed a regression introduced in 1.32.4, that prevented find symbol endpoint from working for CSX projects (PR: [#1321](https://github.com/OmniSharp/omnisharp-roslyn/pull/1321))\n* Improved MSBuild discovery for future scenarios (PR: [#1328](https://github.com/OmniSharp/omnisharp-roslyn/pull/1328))\n* Enabled setting customer OmniSharp home directory (PR: [#1317](https://github.com/OmniSharp/omnisharp-roslyn/pull/1317))\n* Made detection of .sln files more accurate  _(Contributed by [@itn3000](https://github.com/itn3000))_ (PR: [#1320](https://github.com/OmniSharp/omnisharp-roslyn/pull/1320))\n* Improved reliability of document management subsystem _(Contributed by [@NTaylorMullen](https://github.com/NTaylorMullen))_ (PR: [#1330](https://github.com/OmniSharp/omnisharp-roslyn/pull/1330))\n* Use Roslyn's new `FindSourceDeclarationsWithPatternAsync` API in symbol finder _(Contributed by [@SirIntruder](https://github.com/SirIntruder))_ (PR: [#1304](https://github.com/OmniSharp/omnisharp-roslyn/pull/1304))\n* Fix `FindImplementationService` not finding all implementations of the partial class _(Contributed by [@SirIntruder](https://github.com/SirIntruder))_ (PR: [#1318](https://github.com/OmniSharp/omnisharp-roslyn/pull/1318))\n\n## [1.32.6] - 2018-10-02\n* Fixed a bug where virtual C# documents would not get promoted to be a part of a project. (PR: [#1306](https://github.com/OmniSharp/omnisharp-roslyn/pull/1306)).\n* Added MinFilterLength to configure the number of characters a user must type in for FindSymbolRequest command to return any results (default is 0 to preserve existing behavior). Additionally added MaxItemsToReturn for configuring maximum number of items returned by the FindSymbolsRequestAPI.(PR: [#1284](https://github.com/OmniSharp/omnisharp-roslyn/pull/1284)).\n* Fixed issue where `/codestructure` endpoint did not return enum members. (PR: [#1285](https://github.com/OmniSharp/omnisharp-roslyn/pull/1285))\n* Fixed issue where `/findimplemenations` endpoint did not return overridden members in derived types (PR: [#1302](https://github.com/OmniSharp/omnisharp-roslyn/pull/1302))\n\n## [1.32.3] - 2018-08-28\n* Added support for files without a project. (PR: [#1252](https://github.com/OmniSharp/omnisharp-roslyn/pull/1252))\n* Fixed a bug where `*.rsp`-based scripting references where not exposed in the Workspace information endpoint (PR: [#1272](https://github.com/OmniSharp/omnisharp-roslyn/pull/1272))\n\n## [1.32.2] - 2018-08-07\n* OmniSharp now targets **net461**, instead of **net46** (PR: [#1237](https://github.com/OmniSharp/omnisharp-roslyn/pull/1237))\n* Added new `/codestructure` endpoint which serves a replacement for the `/currentfilemembersastree` endpoint. The new endpoint has a cleaner design, properly supports all C# types and members, and supports more information, such as accessibility, static vs. instance, etc. (PRs: [#1211](https://github.com/OmniSharp/omnisharp-roslyn/pull/1211) [#1217](https://github.com/OmniSharp/omnisharp-roslyn/pull/1217))\n* Fixed a bug where language services for newly created CSX files were not provided if no CSX files existed at the moment OmniSharp was started ([#1199](https://github.com/OmniSharp/omnisharp-roslyn/issues/1199), PR: [#1210](https://github.com/OmniSharp/omnisharp-roslyn/pull/1210))\n* The legacy project.json support is now disabled by default, allowing OmniSharp to start up a bit faster for common scenarios. If you wish to enable project.json support, add the following setting to your `omnisharp.json` file. (PR: [#1194](https://github.com/OmniSharp/omnisharp-roslyn/pull/1194))\n\n    ```JSON\n    {\n        \"dotnet\": {\n            \"enabled\": false\n        }\n    }\n    ```\n* Added support for code actions in `.cake` files. ([#1205](https://github.com/OmniSharp/omnisharp-roslyn/issues/1205), PR: [#1212](https://github.com/OmniSharp/omnisharp-roslyn/pull/1212))\n* Added a new `/blockstructure` endpoint that returns the spans of the C# code blocks (usings, namespaces, methods, etc.) in a file. (PRs: [#1209](https://github.com/OmniSharp/omnisharp-roslyn/pull/1209) [#1231](https://github.com/OmniSharp/omnisharp-roslyn/pull/1231))\n* Fixed bug where find usages returned usages from loaded `.cake` files even though `OnlyThisFile` was set to `true` in the request. ([#1204](https://github.com/OmniSharp/omnisharp-roslyn/issues/1204), PR: [#1213](https://github.com/OmniSharp/omnisharp-roslyn/pull/1213))\n* Performance improvements for line mappings when working with `.cake` files. (PR: [#1226](https://github.com/OmniSharp/omnisharp-roslyn/pull/1226))\n* Fixed a bug where a new debug session could not be started after a previous one failed due to build error. (PR: [#1239](https://github.com/OmniSharp/omnisharp-roslyn/pull/1239))\n* Upgraded dependencies (PR: [#1237](https://github.com/OmniSharp/omnisharp-roslyn/pull/1237))\n  * Upgraded to .NET Core SDK 2.1.505\n  * Upgraded to Microsoft.AspNetCore.* version 2.1.1\n  * Upgraded to Microsoft.Extensions.* version 2.1.1\n  * Upgraded to MSBuild 15.7\n  * Upgraded to Roslyn 2.8.2\n\n## [1.31.1] - 2018-05-28\n* Fixed bug where diagnostics from loaded `.cake` files was shown in the current file. (PR: [#1201](https://github.com/OmniSharp/omnisharp-roslyn/pull/1201))\n\n## [1.31.0] - 2018-05-29\n* Update to Roslyn 2.8.0 packages, adding support for C# 7.3. (PR: [#1182](https://github.com/OmniSharp/omnisharp-roslyn/pull/1182))\n* MSBuild project system no longer stops when a project fails to load. (PR: [#1181](https://github.com/OmniSharp/omnisharp-roslyn/pull/1181))\n* Fixed null-reference exception that could be thrown during MSBuild discovery. ([#1188](https://github.com/OmniSharp/omnisharp-roslyn/issues/1188), PR: [#1189](https://github.com/OmniSharp/omnisharp-roslyn/issues/1188))\n* Fixed an issue where referenced projects outside of OmniSharp's target path/solution would not be evaluated properly if they were multi-targeted (e.g. contained `<TargetFrameworks>`), which could result in downstream failures. ([omnisharp-vscode#2295](https://github.com/OmniSharp/omnisharp-vscode/issues/2295), PR: [#1195](https://github.com/OmniSharp/omnisharp-roslyn/pull/1195))\n* Removed logic that set `MSBuildSDKsPath` environment variable before loading a project. This environment variable overrides normal MSBuild SDK resolution, which breaks resolution for custom MSBuild SDKs (for more information on MSBuild SDKs, see the [documentation](https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-use-project-sdk#how-project-sdks-are-resolved)). ([#1190](https://github.com/OmniSharp/omnisharp-roslyn/issues/1190), PR: [#1192](https://github.com/OmniSharp/omnisharp-roslyn/pull/1192))\n    * **Breaking Change**: Removing this logic means that OmniSharp will no longer load .NET Core projects that target a .NET Core SDK with a version <= 1.0.3 by default. If you need to restore this behavior, you can set the following option in an `omnisharp.json` configuration file:\n\n        ```JSON\n        {\n            \"MSBuild\": {\n                \"UseLegacySdkResolver\": true\n            }\n        }\n        ```\n        See [Configuration Options](https://github.com/OmniSharp/omnisharp-roslyn/wiki/Configuration-Options) for more details on `omnisharp.json`.\n* Support `/rename` endpoint in `.cake` files.\n* Support custom `.rsp` files in scripting. It is now possible to use `omnisharp.json` to define a path to an `.rsp` file, containing predefined namespaces and assembly references, and OmniSharp will respect those as part of its language services for CSX files. For example, given the following `.rsp` file:\n\n    ```\n    /r:bin/FakeLib.dll\n    /r:bin/FSharp.Core.dll\n    /r:bin/FSharpx.Extras.dll\n    /u:Fake\n    /u:FSharpx\n    /u:System.Linq\n    /u:System.IO\n    ```\n    and the following `omnisharp.json`:\n\n    ```\n    {\n        \"Script\": {\n            \"RspFilePath\": \"path/to/my.rsp\"\n        }\n    }\n    ```\n    OmniSharp will automatically include the predefined DLLs and namespaces in the language services for all the scripts in the given folder (in case of a local `omnisharp.json`) or on the machine (in case of a global `omnisharp.json`). Note that the reference to `mscorlib`/`System.Runtime` is always there anyway and doesn't need to be specified again in the `.rsp` file. ([#1024](https://github.com/OmniSharp/omnisharp-roslyn/issues/1024), PR: [#1112](https://github.com/OmniSharp/omnisharp-roslyn/issues/1112))\n    * Note that the reference to `mscorlib`/`System.Runtime` is always there anyway and doesn't need to be specified again in the `.rsp` file\n    * only imports and references are supported as part of the `.rsp` file (scripting doesn't support other compiler settings passed using the `.rsp` file). In the future, depending on whether the [feature is available in Roslyn](https://github.com/dotnet/roslyn/issues/23421), OmniSharp may also support defining a scripting globals type via `.rsp` file.\n* `.cake` files are now parsed using the C# version `Latest` rather than `Default`, to match the runtime behavior of Cake. (PR: [#1201](https://github.com/OmniSharp/omnisharp-roslyn/pull/1201))\n* Updated `DotNetTest` result to include messages from stdout and stderr. (PR: [#1203](https://github.com/OmniSharp/omnisharp-roslyn/pull/1203))\n\n## [1.30.1] - 2018-05-11\n* Fixed a 1.30.0 regression that prevented the script project system from working on Unix-based systems (PR: [#1185](https://github.com/OmniSharp/omnisharp-roslyn/pull/1185))\n\n## [1.30.0] - 2018-4-30\n* Updated to Roslyn 2.7.0 packages (PR: [#1132](https://github.com/OmniSharp/omnisharp-roslyn/pull/1132))\n* Ensure that the lower assembly versions are always superseded in C# scripts (PR: [#1103](https://github.com/OmniSharp/omnisharp-roslyn/pull/1103))\n* Updated OmniSharp.Script to DotNet.Script.DependencyModel 0.6.0 (PR: [#1150](https://github.com/OmniSharp/omnisharp-roslyn/pull/1150))\n* It is now possible to define the default target framework for C# scripts in the OmniSharp configuration (PR: [#1154](https://github.com/OmniSharp/omnisharp-roslyn/pull/1154))\n* Upgraded embedded Mono and MSBuild to 5.10.1.20 (PRs: #[1137](https://github.com/OmniSharp/omnisharp-roslyn/pull/1137), #[1145](https://github.com/OmniSharp/omnisharp-roslyn/pull/1145))\n* Fixed issue where generate type refactoring could not generate new files ([omnisharp-vscode#2112](https://github.com/OmniSharp/omnisharp-vscode/issues/2112), PR: [#1143](https://github.com/OmniSharp/omnisharp-roslyn/pull/1143))\n* Added detailed project information output at debug log level (PR: [#1151](https://github.com/OmniSharp/omnisharp-roslyn/pull/1151))\n* Set MSBuild property to allow the XAML markup compiler task to run (PR: [#1157](https://github.com/OmniSharp/omnisharp-roslyn/pull/1157))\n* Added support for excluding search paths via globbing patterns ([#896](https://github.com/OmniSharp/omnisharp-roslyn/issues/896), PR: [#1161](https://github.com/OmniSharp/omnisharp-roslyn/pull/1161))\n* Improved versioning reporting for VS preview consoles (PR: [#1166](https://github.com/OmniSharp/omnisharp-roslyn/pull/1166))\n\n## [1.29.1] - 2018-2-12\n* Fixed duplicate diagnostics in C# ([omnisharp-vscode#1830](https://github.com/OmniSharp/omnisharp-vscode/issues/1830), PR: [#1107](https://github.com/OmniSharp/omnisharp-roslyn/pull/1107))\n\n## [1.29.0] - 2018-1-29\n* Updated to Roslyn 2.6.1 packages - C# 7.2 support (PR: [#1055](https://github.com/OmniSharp/omnisharp-roslyn/pull/1055))\n* Shipped Language Server Protocol support in box.  (PR: [#969](https://github.com/OmniSharp/omnisharp-roslyn/pull/969))\n  - Additional information and features tracked at [#968](https://github.com/OmniSharp/omnisharp-roslyn/issues/968)\n* Fixed locating Visual Studio with more than one installation (PR: [#1063](https://github.com/OmniSharp/omnisharp-roslyn/pull/1063))\n* Do not crash when encoutering Legacy ASP.NET Website projects ([#1036](https://github.com/OmniSharp/omnisharp-roslyn/issues/1036), PRs: [#1066](https://github.com/OmniSharp/omnisharp-roslyn/pull/1066), [#1084](https://github.com/OmniSharp/omnisharp-roslyn/pull/1084))\n* Improvements to the the structured documentation returned by the /typelookup endpoint ([#1046](https://github.com/OmniSharp/omnisharp-roslyn/issues/1046), [omnisharp-vscode#1057](https://github.com/OmniSharp/omnisharp-vscode/issues/1057),  PRs: [#1062](https://github.com/OmniSharp/omnisharp-roslyn/pull/1062) [#1064](https://github.com/OmniSharp/omnisharp-roslyn/pull/1064))\n* Allowed specifying DLLs file paths for plugin loading (PR: [#1069](https://github.com/OmniSharp/omnisharp-roslyn/pull/1069))\n* Improved http server performance (PR: [#1073](https://github.com/OmniSharp/omnisharp-roslyn/pull/1073))\n* Added attribute span to file ([omnisharp-vscode#429](https://github.com/OmniSharp/omnisharp-vscode/issues/429), PR: [#1075](https://github.com/OmniSharp/omnisharp-roslyn/pull/1075))\n* Order Code Actions according by `ExtensionOrderAttribute` ([omnisharp-roslyn#748](https://github.com/OmniSharp/omnisharp-roslyn/issues/758), PR: [#1078](https://github.com/OmniSharp/omnisharp-roslyn/pull/1078))\n* Disabled Go To Definition on property get/set keywords  ([omnisharp-vscode#1949](https://github.com/OmniSharp/omnisharp-vscode/issues/1949), PR: [#1086](https://github.com/OmniSharp/omnisharp-roslyn/pull/1086/files))\n* Disabled exceptions on assembly load failure (PR: [#1072](https://github.com/OmniSharp/omnisharp-roslyn/pull/1072))\n* Added structured documentation to signature help ([omnisharp-vscode#1940](https://github.com/OmniSharp/omnisharp-vscode/issues/1940), PR: [#1085](https://github.com/OmniSharp/omnisharp-roslyn/pull/1085))\n* Added /runalltests and /debugalltests endpoints to run or debug all the tests in a class ([omnisharp-vscode#1969](https://github.com/OmniSharp/omnisharp-vscode/pull/1961), PR: [#1961](https://github.com/OmniSharp/omnisharp-vscode/pull/1961))\n\n## [1.28.0] - 2017-12-14\n\n* Fixed issue with loading XML documentation for `#r` assembly references in CSX scripts ([#1026](https://github.com/OmniSharp/omnisharp-roslyn/issues/1026), PR: [#1027](https://github.com/OmniSharp/omnisharp-roslyn/pull/1027))\n* Updated the `/v2/runcodeaction` end point to return document \"renames\" and \"opens\" that a code action might perform. (PR: [#1023](https://github.com/OmniSharp/omnisharp-roslyn/pull/1023))\n* Corrected issue where MSBuild discovery would pick instances of Visual Studio 2017 that did not have Roslyn installed. ([#1031](https://github.com/OmniSharp/omnisharp-roslyn/issues/1031), PR: [#1032](https://github.com/OmniSharp/omnisharp-roslyn/pull/1032))\n* Updated `/codecheck` endpoint to return diagnostic IDs. (PR: [#1034](https://github.com/OmniSharp/omnisharp-roslyn/pull/1034))\n* Updated OmniSharp.Script to DotNet.Script.DependencyModel 0.3.0 (PR: [#1035](https://github.com/OmniSharp/omnisharp-roslyn/pull/1035))\n* Fixed scripting suppot to not load the same assembly name multiple times ([dotnet-script#194](https://github.com/filipw/dotnet-script/issues/194), PR: [#1037](https://github.com/OmniSharp/omnisharp-roslyn/pull/1037))\n* STDIO requests and responses are now pretty-printed during logging. (PR: [#1040](https://github.com/OmniSharp/omnisharp-roslyn/pull/1040))\n* Several fixes to the `/signaturehelp` endpoint to return correct signatures in more locations. ([omnisharp-vscode#1440](https://github.com/OmniSharp/omnisharp-vscode/issues/1440), [omnisharp-vscode#1664](https://github.com/OmniSharp/omnisharp-vscode/issues/1664) [omnisharp-vscode#1715](https://github.com/OmniSharp/omnisharp-vscode/issues/1715), PRs: [#1030](https://github.com/OmniSharp/omnisharp-roslyn/pull/1030), [#1052](https://github.com/OmniSharp/omnisharp-roslyn/pull/1052))\n* Updated `/typelookup` endpoint to include structured object representing the various sections of an XML doc comment. ([omnisharp-vscode#1057](https://github.com/OmniSharp/omnisharp-vscode/issues/1057), PR: [#1038](https://github.com/OmniSharp/omnisharp-roslyn/pull/1038))\n* Ensure the correct range is used when formatting a span that includes preceding whitespace. ([omnisharp-vscode#214](https://github.com/OmniSharp/omnisharp-vscode/issues/214), PR: [#1043](https://github.com/OmniSharp/omnisharp-roslyn/pull/1043))\n* Fix issue in Cake project system where it attempted to create MetadataReferences for files that don't exist. (PR: [#1045](https://github.com/OmniSharp/omnisharp-roslyn/pull/1045))\n* Improvements to the Cake bakery resolver to resolve from both OmniSharp options and PATH. (PR: [#1047](https://github.com/OmniSharp/omnisharp-roslyn/pull/1047))\n* Ensure that the Cake.Core assembly is not locked on disk when loading the host object type. (PR: [#1044](https://github.com/OmniSharp/omnisharp-roslyn/pull/1044))\n* Added internal support for watching for changes by file extension. (PR: [#1053](https://github.com/OmniSharp/omnisharp-roslyn/pull/1053))\n* Watch added/removed .cake-files and update workspace accordingly. (PR: [#1054] (https://github.com/OmniSharp/omnisharp-roslyn/pull/1054))\n* Watch added/removed .csx-files and update workspace accordingly. (PR: [#1056] (https://github.com/OmniSharp/omnisharp-roslyn/pull/1056))\n* Updated `Cake.Scripting.Transport` dependencies to 0.2.0 in order to improve performance when working with Cake files. (PR: [#1057](https://github.com/OmniSharp/omnisharp-roslyn/pull/1057))\n\n## [1.27.2] - 2017-11-10\n\n* Addressed problem with Sdk-style projects not being loaded properly in certain cases. ([omnisharp-vscode#1846](https://github.com/OmniSharp/omnisharp-vscode/issues/1846), [omnisharp-vscode#1849](https://github.com/OmniSharp/omnisharp-vscode/issues/1849), PR: [#1021](https://github.com/OmniSharp/omnisharp-roslyn/pull/1021))\n\n## [1.27.1] - 2017-11-09\n\n* Fix to allow signature help return results for attribute constructors. ([omnisharp-vscode#1814](https://github.com/OmniSharp/omnisharp-vscode/issues/1814), PR: [#1007](https://github.com/OmniSharp/omnisharp-roslyn/pull/1007))\n* Make `--zero-based-indices` command line argument work again. (PR: [#1015](https://github.com/OmniSharp/omnisharp-roslyn/pull/1015))\n* Fix serious regression introduced in 1.27.0 that causes projects to fail to load on macOS or Linux. (PR: [#1017](https://github.com/OmniSharp/omnisharp-roslyn/pull/1017)]\n* Fixed issue with discovering MSBuild under Mono even when it is missing. ([#1011](https://github.com/OmniSharp/omnisharp-roslyn/issues/1011), PR: [#1018](https://github.com/OmniSharp/omnisharp-roslyn/pull/1018))\n* Fixed issue to not use Visual Studio 2017 MSBuild if it is from VS 2017 RTM. ([#1014](https://github.com/OmniSharp/omnisharp-roslyn/issues/1014), PR: [#1018](https://github.com/OmniSharp/omnisharp-roslyn/pull/1018))\n\n## [1.27.0] - 2017-11-07\n\n* Significant changes made to the MSBuild project system that fix several issues. (PR: [#1003](https://github.com/OmniSharp/omnisharp-roslyn/pull/1003))\n  * Package restores are now better detected. ([omnisharp-vscode#1583](https://github.com/OmniSharp/omnisharp-vscode/issues/1583), [omnisharp-vscode#1661](https://github.com/OmniSharp/omnisharp-vscode/issues/1661), [omnisharp-vscode#1785](https://github.com/OmniSharp/omnisharp-vscode/issues/1785))\n  * Metadata references are properly removed from projects in the OmniSharpWorkspace when necessary.\n  * File watching/notification now handles paths case-insensitively.\n  * MSBuild project system now loads projects asynchronously after OmniSharp has finished initializing.\n\n## [1.26.3] - 2017-11-10\n\n* Addressed problem with Sdk-style projects not being loaded properly in certain cases. ([omnisharp-vscode#1846](https://github.com/OmniSharp/omnisharp-vscode/issues/1846), [omnisharp-vescode#1849](https://github.com/OmniSharp/omnisharp-vscode/issues/1849), PR: [#1021](https://github.com/OmniSharp/omnisharp-roslyn/pull/1021))\n\n## [1.26.2] - 2017-11-09\n\n* Fixed issue with discovering MSBuild under Mono even when it is missing. ([#1011](https://github.com/OmniSharp/omnisharp-roslyn/issues/1011), PR: [#1016](https://github.com/OmniSharp/omnisharp-roslyn/pull/1016))\n* Fixed issue to not use Visual Studio 2017 MSBuild if it is from VS 2017 RTM. ([#1014](https://github.com/OmniSharp/omnisharp-roslyn/issues/1014), PR: [#1016](https://github.com/OmniSharp/omnisharp-roslyn/pull/1016))\n\n## [1.26.1] - 2017-11-04\n\n* Fixed issue with locating MSBuild when running OmniSharp on Mono on Windows. (PR: [#1001](https://github.com/OmniSharp/omnisharp-roslyn/pull/1001))\n* Fixed problem where the Antlr4.CodeGenerator Nuget package would not generate files during OmniSharp design-time build. ([omnisharp-vscode#1822](https://github.com/OmniSharp/omnisharp-vscode/issues/1822), PR: [#1002](https://github.com/OmniSharp/omnisharp-roslyn/pull/1002))\n* Fixed issue where a C# project referencing a non-C# project would cause the referenced project to be loaded (causing OmniSharp to potentially treat it as C#!). ([omnisharp-vscode#371](https://github.com/OmniSharp/omnisharp-vscode/issues/371), [omnisharp-vscode#1829](https://github.com/OmniSharp/omnisharp-vscode/issues/1829), PR: [#1005](https://github.com/OmniSharp/omnisharp-roslyn/pull/1005))\n\n## [1.26.0] - 2017-10-27\n\n* Cake support added! (PR: [#932](https://github.com/OmniSharp/omnisharp-roslyn/pull/932))\n* csproj-based C# scripts are now supported. (PR: [#980](https://github.com/OmniSharp/omnisharp-roslyn/pull/980))\n* Updated to Roslyn 2.4.0 packages. (PR: [#998](https://github.com/OmniSharp/omnisharp-roslyn/pull/998))\n* MSBuild SdkResolvers now ship with OmniSharp, allowing it to correctly locate the .NET Core SDK for a particular project. (PR: [#974](https://github.com/OmniSharp/omnisharp-roslyn/pull/974))\n* Big improvements in OmniSharp's process for located MSBuild 15.0 and MSBuild toolsets on the machine. (PR: [#988](https://github.com/OmniSharp/omnisharp-roslyn/pull/988)\n* Updated `/filesChanged` endpoint to allow the client to describe the type of file change (create, delete or change). If a client provides this extra information, files are properly removed and added to the workspace. (PR: [#987](https://github.com/OmniSharp/omnisharp-roslyn/pull/987))\n* Improved filtering in `/findsymbols` to include substring matches. (PR: [#990](https://github.com/OmniSharp/omnisharp-roslyn/pull/990))\n* `/autocomplete` end point now takes a `TriggerCharacter` property that can be used to trigger completion after a SPACE character. (PR: [#975](https://github.com/OmniSharp/omnisharp-roslyn/pull/975))\n* Fix issue with port number not being used when passed as command line argument. (PR: [#971](https://github.com/OmniSharp/omnisharp-roslyn/pull/971))\n\n## [1.25.0] - 2017-09-22\n\n* Major refactoring to split OmniSharp into two servers for each supported protocol: one for HTTP, and one for STDIO. (PR: [#854](https://github.com/OmniSharp/omnisharp-roslyn/pull/854))\n* Fixed a bug where language version was not correctly read from .csproj projects. ([#961](https://github.com/OmniSharp/omnisharp-roslyn/issues/961))\n* Fixed issue where signing key file was not propogated to OmniSharpWorkspace correctly.\n\n## [1.24.0] - 2017-08-31\n\n* Fixed a bug where an external code action DLL with missing dependencies would crash OmniSharp.\n* When running a test via 'dotnet vstest' support, pass \"--no-restore\" when building with the .NET CLI to ensure that implicit restore does not run, making build a bit faster. ([#942](https://github.com/OmniSharp/omnisharp-roslyn/issues/942))\n* Add support for specifying the 'TargetFrameworkVersion' to the 'dotnet vstest' endpoints. ([#944](https://github.com/OmniSharp/omnisharp-roslyn/issues/944))\n* Do not throw an exception when attempting to \"go to definition\" on a namespace\n\n## [1.23.2] - 2017-08-14\n\n* Set CscToolExe to 'csc.exe' to address issues with older Mono installations where the MSBuild targets have set it to 'mcs.exe'.\n\n## [1.23.1] - 2017-08-08\n\n* Fixed two regressions with MSBuild projects:\n  1. .NET Core projects were not properly processed if Mono was installed.\n  2. When Mono is installed, don't set `MSBuildExtensionsPath` to `$mono_prefix/xbuild` unless both `$mono_prefix/msbuild` and `$mono_prefix/xbuild/15.0` also exist.\n* Properly set new language version values to support C# 7.1.\n\n## [1.23.0] - 2017-08-07\n\nNote: This release now requires the latest release of Mono 5.2.0 or later to build and run. In addition, there are now six flavors built for every release:\n\n* Windows builds that run on Desktop CLR.\n    * omnisharp-win-x86.zip\n    * omnisharp-win-x64.zip\n* A *Nix build that be run on Mono 5.2.0 or greater. (Note that the `--assembly-loader=strict` flag must be specified when launch this build with Mono).\n    * omnisharp-mono.tar.gz\n* Standalone builds for OSX and Linux that include the Mono bits necessary to run OmniSharp.\n    * omnisharp-osx.tar.gz\n    * omnisharp-linux-x86.tar.gz\n    * omnisharp-linux-x64.tar.gz\n\n#### Detailed Changes\n\n* Updated detection of Mono path to p/invoke into `real_path` in `libc` to properly resolve symlinks. (PR: [#911](https://github.com/OmniSharp/omnisharp-roslyn/pull/911))\n* Fixed a Script project system regression introduced as part of [#898](https://github.com/OmniSharp/omnisharp-roslyn/pull/898), that caused CSX support to break for Desktop CLR scripts on Windows (PR: [#913](https://github.com/OmniSharp/omnisharp-roslyn/pull/913))\n* Set `DOTNET_UI_LANGUAGE` environment variable while running `dotnet --info` to ensure that the output is not localized. (PR: [#914](https://github.com/OmniSharp/omnisharp-roslyn/pull/914))\n* OmniSharp now targets net46 by default. ([#666](https://github.com/OmniSharp/omnisharp-roslyn/pull/666), PR: ([#915](https://github.com/OmniSharp/omnisharp-roslyn/pull/915)))\n* Fixed typo in help output. (PR: [#916](https://github.com/OmniSharp/omnisharp-roslyn/pull/916))\n* xUnit updated to latest 2.3.0 nightly beta, fixing running of xUnit tests inside VS 2017. (PR: [#917](https://github.com/OmniSharp/omnisharp-roslyn/pull/917))\n* Fix solution parsing (again!) by introducing custom solution parsing API. ([omnisharp-vscode#1645](https://github.com/OmniSharp/omnisharp-vscode/issues/1645), PR: [#918](https://github.com/OmniSharp/omnisharp-roslyn/pull/918))\n* Globally set various MSBuild properties to better support Mono-based projects. ([#892](https://github.com/OmniSharp/omnisharp-roslyn/issues/892), [omnisharp-vscode#1597](https://github.com/OmniSharp/omnisharp-vscode/issues/1597), [omnisharp-vscode#1624](https://github.com/OmniSharp/omnisharp-vscode/issues/1624), [omnisharp-vscode#1396](https://github.com/OmniSharp/omnisharp-vscode/issues/1396), PR: [#923](https://github.com/OmniSharp/omnisharp-roslyn/pull/923))\n* Big changes to the build which improve build performance and move OmniSharp to Mono 5.2.0. (PR: [#924](https://github.com/OmniSharp/omnisharp-roslyn/pull/924))\n* Update to Roslyn 2.3.0 packages. (PRs: [#930](https://github.com/OmniSharp/omnisharp-roslyn/pull/930), [#931](https://github.com/OmniSharp/omnisharp-roslyn/pull/931))\n\n## [1.22.0] - 2017-07-07\n\n* Allow go to definition to work from metadata as source. ([#876](https://github.com/OmniSharp/omnisharp-roslyn/issues/876), PR: [#883](https://github.com/OmniSharp/omnisharp-roslyn/pull/883))\n* Support added for referencing NuGet packages in C# scripts. (PR: [#813](https://github.com/OmniSharp/omnisharp-roslyn/pull/813))\n* Use MSBuild solution parsing API which is the official parser for handling weird solution file cases. ([omnisharp-vscode#1580](https://github.com/OmniSharp/omnisharp-vscode/issues/1580), PR: [#897](https://github.com/OmniSharp/omnisharp-roslyn/pull/897))\n* Improvements to logic that computes code fixes and refactorings. (PR: [#877](https://github.com/OmniSharp/omnisharp-roslyn/pull/899))\n* Update to Roslyn 2.3.0-beta2, which brings support for C# 7.1. (PRs: [#900](https://github.com/OmniSharp/omnisharp-roslyn/pull/900) and [#901](https://github.com/OmniSharp/omnisharp-roslyn/pull/901))\n* Ensure that all project systems support an \"Enabled\" property that can be configured in omnisharp.json. (PR: [#902](https://github.com/OmniSharp/omnisharp-roslyn/pull/902))\n* Change MSBuild project system to call the \"Compile\" target rather than the \"ResolveReferences\" target, allowing targets that generate files to run. ([omnisharp-vscode#1531](https://github.com/OmniSharp/omnisharp-vscode/issues/1531))\n* Update MSBuild to latest version ([#904](https://github.com/OmniSharp/omnisharp-roslyn/pull/904), PR: [#907](https://github.com/OmniSharp/omnisharp-roslyn/pull/907))\n* Added binding redirects for MSBuild, fixing issues with custom MSBuild tasks built with different versions of MSBuild. ([#903](https://github.com/OmniSharp/omnisharp-roslyn/issues/903))\n* System.dll is now added correctly for C# scripts targeting .NET Framework ([omnisharp-vscode#1581](https://github.com/OmniSharp/omnisharp-vscode/issues/1581), PR: [#898](https://github.com/OmniSharp/omnisharp-roslyn/pull/898))\n\n## [1.21.0] - 2017-06-07\n\n* Moved back to NuGet 4.0.0 RTM packages. This will help alleviate problems with using OmniSharp with .NET Core 2.0-preview2 builds ([#865](https://github.com/OmniSharp/omnisharp-roslyn/issues/865), PR: [#885](https://github.com/OmniSharp/omnisharp-roslyn/pull/885)).\n\n## [1.20.0] - 2017-06-02\n\n* **Breaking Change**: When using environment variables to configure OmniSharp, they must be prefixed by 'OMNISHARP_', which helps ensure that OmniSharp will not unintentionally consume other environment variables (such as 'msbuild') if they happen to be set. See [Configuration Options](https://github.com/OmniSharp/omnisharp-roslyn/wiki/Configuration-Options) for more details on configuring OmniSharp. ([omnisharp-vscode#1512](https://github.com/OmniSharp/omnisharp-vscode/issues/1512), PR: [#872](https://github.com/OmniSharp/omnisharp-roslyn/pull/872))\n* The `/findimplementations` endpoint now uses the Roslyn [`SymbolFinder.FindDerivedClassesAsync(...)`](http://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/FindSymbols/SymbolFinder_Hierarchy.cs,dbb07fa6e6e5a08c) API and has been updated to work on CSX files. (PR: [#870](https://github.com/OmniSharp/omnisharp-roslyn/pull/870))\n* Better handling when loading assemblies from an external folder, such as when a 'RoslynExtensions' path is specified. (PR: [#866](https://github.com/OmniSharp/omnisharp-roslyn/pull/866))\n* Fix issue with loading Unity projects by allowing the MSBuild project system to assume that any project with the `.csproj` extension is a C# project. (PR: [#873](https://github.com/OmniSharp/omnisharp-roslyn/pull/873))\n* Handle situations where `dotnet` doesn't run properly better. ([omnisharp-vscode#1532](https://github.com/OmniSharp/omnisharp-vscode/issues/1532), PR: [#879](https://github.com/OmniSharp/omnisharp-roslyn/pull/879))\n* `IsSuggestionMode` property added to `/autocomplete` endpoint response to indicate when a completion list should not be committed aggressively. (PR: [#822](https://github.com/OmniSharp/omnisharp-roslyn/pull/882))\n\n## [1.19.0] - 2017-05-19\n\n* Update to latest MSBuild, NuGet and Roslyn packages (PR: [#867](https://github.com/OmniSharp/omnisharp-roslyn/pull/867))\n* Fix a few issues with the `/autocomplete` end point (PR: [#868](https://github.com/OmniSharp/omnisharp-roslyn/pull/868))\n\n## [1.18.1] - 2017-05-18\n\n* Updated github api key to allow travis to publish releases\n\n## [1.18.0] - 2017-05-17\n\n* Use correct host object in CSX files (matching the same object used by CSI.exe). (PR #846)\n* Options can now be set in an omnisharp.json to specify the Configuration (e.g. Debug) and Platform (e.g. AnyCPU) that MSBuild should use. (#202, PR: #858)\n* Support for MSTest in the OmniSharp test endpoints. ([omnisharp-vscode#1482](https://github.com/OmniSharp/omnisharp-vscode/issues/1482), PR: #856)\n* Fix regression introduced in v1.17.0 that could cause an `ArgumentNullException` (PR: #857)\n* Fix issue with package references reporting an 'unresolved dependency' when the reference and dependency differed by case. (PR #861).\n* Clean up unresolved dependency detection and improve logging to help diagnosing of dependency issues. ([omnisharp-vscode#1272](https://github.com/OmniSharp/omnisharp-vscode/issues/1272), PR: #862)\n* Added new `RoslynExtensions` option to allow specifying a set of assemblies that OmniSharp will look in to find Roslyn extensions to load. (PR: #848)\n\n## [1.17.0] - 2017-05-04\n\n* Use Roslyn completion service for `/autocomplete` endpoint. This brings several completion improvements, such as completion for object initializer members, named parameters, CREFs, etc. (PR: #840)\n* OmniSharp no longer deploys MSBuild SDKs for .NET Core projects. Instead, it uses the SDKs from the .NET Core SDK that is installed on the machine.  (#765, PR: #847)\n\n## [1.16.1] - 2017-05-02\n\n* Fix regression that breaks support for multi-project Unity solutions. (#839, PR: #829)\n* Ensure that `/gotodefinition` and `/findsymbols` endpoints prefer the \"body part\" of a partial method. (PR: #838)\n\n## [1.16.0] - 2017-04-28\n\n* Support Metadata as Source for Go To Definition in CSX files. (#755, PR: #829)\n* Cleaned up OmniSharp.Abstractions public surface area. (PR: #830)\n* MSBuild project system can load referenced projects outside of OmniSharp's target directory. ([omnisharp-vscode#963](https://github.com/OmniSharp/omnisharp-vscode/issues/963), PR: #832)\n* Fix 'dotnet test' support when test as \"DisplayName\". ([omnisharp-vscode#1426](https://github.com/OmniSharp/omnisharp-vscode/issues/1426), PR: #833)\n* Fix 'dotnet test' support when multiple tests have similar names. ([omnisharp-vscode#1432](https://github.com/OmniSharp/omnisharp-vscode/issues/1432), PR: #833)\n* Add support for NUnit testing in test endpoints. ([omnisharp-vscode#1434](https://github.com/OmniSharp/omnisharp-vscode/issues/1434), PR: #834)\n* Add support for a few more Linux distros, namely ubuntu16.10, fedora24, and opensuse42.1. (#639, #658, PR: #835)\n\n## [1.15.0] - 2017-04-18\n\n* If VS 2017 is on the current machine, use the MSBuild included with VS 2017 for processing projects. ([omnisharp-vscode#1368](https://github.com/OmniSharp/omnisharp-vscode/issues/1368), PR: #818)\n* Further updates to support debugging and 'dotnet test' (PR: #821, #824)\n\n## [1.14.0] - 2017-04-06\n\n* Properly handle package references with version ranges in .csproj (PR: #814)\n* Fix regression with MSBuild project system where a project reference and a binary reference could be added for the same assembly, causing ambiguity errors (#795, PR: #815)\n* More improvements for 'dotnet test' support, including a TestMessage event for test runner output and debugging support for VS Test (PR: #816)\n\n## [1.13.0] - 2017-04-04\n\n* Fix problem with hitting ulimit when watching for omnisharp.json file changes on OSX/Linux. (PR# 812)\n\n## [1.12.0] - 2017-03-31\n\n* Fix null reference exception in DotNetProjectSystem when project reference is invalid (PR: #797)\n* Stop spamming log from ScriptProjectSystem on ProjectModel requests (PR: #798)\n* Initial work to watch changes in omnisharp.json file while OmniSharp is running. This currently supports changes to formatting options. (PR: #804)\n* Add support for /v2/runtest endpoint with .csproj-based .NET Core projects ([omnisharp-vscode#1100](https://github.com/OmniSharp/omnisharp-vscode/issues/1100), PR: #808)\n* Add support for global omnisharp.json file (#717, PR# 809)\n\n## [1.11.0] - 2017-03-10\n\n- Code Actions now respects the formatting options that were set when OmniSharp was launched. (#759, PR: #770)\n- Unsafe code is now allowed in C# scripts (PR: #781)\n- C# scripting now ignores duplicated CorLibrary types, which can manifest in certain edge scenarios. (#784, PR: #785)\n- Updated to RTM Roslyn and NuGet packages (PR: #791)\n-     Introduce caching for #r to avoid leaking memory in C# scripts. ([omnisharp-vscode/issues/1306](https://github.com/OmniSharp/omnisharp-vscode/issues/1306), PR: #794)\n\n## [1.10.0] - 2017-02-11\n\nNote: This release begins a semantic versioning scheme discussed at https://github.com/OmniSharp/omnisharp-roslyn/issues/757.\n\n- Scripting project system now delegates more work to the Roslyn `ScriptSourceResolver`, greatly simplifying the scripting workspace, and adding support for multiple `#load` directives and live updating of `#r` and `#load` directives. ([#227](https://github.com/OmniSharp/omnisharp-roslyn/issues/227), [#689](https://github.com/OmniSharp/omnisharp-roslyn/issues/689), PR: [#760](https://github.com/OmniSharp/omnisharp-roslyn/pull/760))\n- Ensure that the DotNetProjectSystem is initialized with the Roslyn `DefaultAssemblyIdentityComparer.Default` to allow assembly references to unify properly. ([omnisharp-vscode#1221](https://github.com/OmniSharp/omnisharp-vscode/issues/1221), PR: [#763](https://github.com/OmniSharp/omnisharp-roslyn/pull/763))\n- Also use Roslyn's `DefaultAssemblyIdentityComparer.Default` for scripting as well. (PR: [#764](https://github.com/OmniSharp/omnisharp-roslyn/pull/764))\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.2509765625,
          "content": "# Code of Conduct\n\nThis project has adopted the code of conduct defined by the Contributor Covenant\nto clarify expected behavior in our community.\nFor more information, see the [.NET Foundation Code of Conduct](https://dotnetfoundation.org/code-of-conduct)."
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.48828125,
          "content": "# Contributing\n\nOmniSharp is always thrilled to welcome any contributions!\n\n## Where to find help\n\nBefore contributing any feature, make sure to discuss it upfront with the team - this can be done on Github in an [issue](https://github.com/OmniSharp/omnisharp-roslyn/issues) or on [Slack](https://goo.gl/Ovnqr1).  \n\n## Workflow\n\n* We use the `master` branch for active development. All pull requests should be made to this branch.\n* Tests need to be provided for every bug/feature that is completed.\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.380859375,
          "content": "<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" TreatAsLocalProperty=\"OutDir;Configuration\">\n  <PropertyGroup>\n    <RepositoryRootDirectory>$(MSBuildThisFileDirectory)</RepositoryRootDirectory>\n\n    <RestoreUseStaticGraphEvaluation>true</RestoreUseStaticGraphEvaluation>\n  </PropertyGroup>\n\n  <Import Project=\"build\\Settings.props\" />\n\n</Project>"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 1.18359375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n\n  <ItemGroup Condition=\"'$(SkipHostDlls)' == 'true'\">\n      <PackageReference Include=\"System.Configuration.ConfigurationManager\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n      <PackageReference Include=\"NuGet.Common\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n      <PackageReference Include=\"NuGet.Configuration\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n      <PackageReference Include=\"NuGet.DependencyResolver.Core\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n      <PackageReference Include=\"NuGet.Frameworks\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n      <PackageReference Include=\"NuGet.LibraryModel\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n      <PackageReference Include=\"NuGet.Packaging\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n      <PackageReference Include=\"NuGet.ProjectModel\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n      <PackageReference Include=\"NuGet.Protocol\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n      <PackageReference Include=\"NuGet.Versioning\" ExcludeAssets=\"all\" PrivateAssets=\"all\" />\n  </ItemGroup>\n\n</Project>\n"
        },
        {
          "name": "Directory.Packages.props",
          "type": "blob",
          "size": 7.6318359375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project>\n    <PropertyGroup>\n        <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\n        <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\n\n        <OmniSharpExtensionsPackageVersion>0.19.9</OmniSharpExtensionsPackageVersion>\n        <MicrosoftExtensionPackageVersion>8.0.0</MicrosoftExtensionPackageVersion>\n        <MicrosoftTestPackageVersion>17.8.0</MicrosoftTestPackageVersion>\n        <MSBuildPackageVersion>17.3.2</MSBuildPackageVersion>\n        <NuGetPackageVersion>6.13.0-rc.95</NuGetPackageVersion>\n        <RoslynPackageVersion>4.13.0-3.24620.4</RoslynPackageVersion>\n        <XunitPackageVersion>2.6.1</XunitPackageVersion>\n    </PropertyGroup>\n\n    <ItemGroup>\n        <PackageVersion Include=\"BenchmarkDotNet\" Version=\"0.13.10\" />\n        <PackageVersion Include=\"BenchmarkDotNet.Diagnostics.Windows\" Version=\"0.13.10\" />\n\n        <PackageVersion Include=\"Cake.Scripting.Transport\" Version=\"0.16.0\" />\n\n        <PackageVersion Include=\"DiffPlex\" Version=\"1.7.2\" />\n\n        <PackageVersion Include=\"Dotnet.Script.DependencyModel\" Version=\"1.5.0\" />\n        <PackageVersion Include=\"Dotnet.Script.DependencyModel.NuGet\" Version=\"1.5.0\" />\n\n        <PackageVersion Include=\"ICSharpCode.Decompiler\" Version=\"8.2.0.7535\" />\n\n        <PackageVersion Include=\"McMaster.Extensions.CommandLineUtils\" Version=\"4.1.0\" />\n\n        <PackageVersion Include=\"Microsoft.Build\" Version=\"$(MSBuildPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Build.Framework\" Version=\"$(MSBuildPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Build.Tasks.Core\" Version=\"$(MSBuildPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Build.Utilities.Core\" Version=\"$(MSBuildPackageVersion)\" />\n\n        <PackageVersion Include=\"Microsoft.CodeAnalysis.Common\" Version=\"$(RoslynPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"$(RoslynPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp.Features\" Version=\"$(RoslynPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp.Scripting\" Version=\"$(RoslynPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" Version=\"$(RoslynPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.CodeAnalysis.Workspaces.Common\" Version=\"$(RoslynPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.CodeAnalysis.ExternalAccess.AspNetCore\" Version=\"$(RoslynPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.CodeAnalysis.ExternalAccess.OmniSharp\" Version=\"$(RoslynPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.CodeAnalysis.ExternalAccess.OmniSharp.CSharp\" Version=\"$(RoslynPackageVersion)\" />\n\n        <PackageVersion Include=\"Microsoft.Extensions.Caching.Memory\" Version=\"8.0.1\" />\n        <PackageVersion Include=\"Microsoft.Extensions.Configuration\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.Configuration.CommandLine\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.Configuration.EnvironmentVariables\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.DependencyModel\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.FileProviders.Physical\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.FileSystemGlobbing\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.Logging\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.Logging.Console\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.Extensions.Options\" Version=\"8.0.2\" />\n        <PackageVersion Include=\"Microsoft.Extensions.Options.ConfigurationExtensions\" Version=\"$(MicrosoftExtensionPackageVersion)\" />\n\n        <PackageVersion Include=\"Microsoft.Build.Locator\" Version=\"1.6.10\" />\n\n        <PackageVersion Include=\"Microsoft.NET.Test.Sdk\" Version=\"$(MicrosoftTestPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.TestPlatform.TranslationLayer\" Version=\"$(MicrosoftTestPackageVersion)\" />\n        <PackageVersion Include=\"Microsoft.TestPlatform.ObjectModel\" Version=\"$(MicrosoftTestPackageVersion)\" />\n\n        <PackageVersion Include=\"Newtonsoft.Json\" Version=\"13.0.3\" />\n\n        <PackageVersion Include=\"NuGet.Common\" Version=\"$(NuGetPackageVersion)\" />\n        <PackageVersion Include=\"NuGet.Configuration\" Version=\"$(NuGetPackageVersion)\" />\n        <PackageVersion Include=\"NuGet.DependencyResolver.Core\" Version=\"$(NuGetPackageVersion)\" />\n        <PackageVersion Include=\"NuGet.Frameworks\" Version=\"$(NuGetPackageVersion)\" />\n        <PackageVersion Include=\"NuGet.LibraryModel\" Version=\"$(NuGetPackageVersion)\" />\n        <PackageVersion Include=\"NuGet.Packaging\" Version=\"$(NuGetPackageVersion)\" />\n        <PackageVersion Include=\"NuGet.ProjectModel\" Version=\"$(NuGetPackageVersion)\" />\n        <PackageVersion Include=\"NuGet.Protocol\" Version=\"$(NuGetPackageVersion)\" />\n        <PackageVersion Include=\"NuGet.Versioning\" Version=\"$(NuGetPackageVersion)\" />\n\n        <PackageVersion Include=\"OmniSharp.Extensions.LanguageServer\" Version=\"$(OmniSharpExtensionsPackageVersion)\" />\n        <PackageVersion Include=\"OmniSharp.Extensions.LanguageProtocol.Testing\" Version=\"$(OmniSharpExtensionsPackageVersion)\" />\n        <PackageVersion Include=\"OmniSharp.Extensions.JsonRpc\" Version=\"$(OmniSharpExtensionsPackageVersion)\" />\n\n        <PackageVersion Include=\"SQLitePCLRaw.bundle_green\" Version=\"2.1.8\" />\n\n        <PackageVersion Include=\"System.Collections.Immutable\" Version=\"8.0.0\" />\n        <PackageVersion Include=\"System.ComponentModel.Composition\" Version=\"8.0.0\" />\n        <PackageVersion Include=\"System.Composition\" Version=\"8.0.0\" />\n        <PackageVersion Include=\"System.Configuration.ConfigurationManager\" Version=\"8.0.0\" />\n        <PackageVersion Include=\"System.Memory\" Version=\"4.5.5\" />\n        <PackageVersion Include=\"System.Reflection.Metadata\" Version=\"8.0.0\" />\n        <PackageVersion Include=\"System.Text.Json\" Version=\"8.0.5\" />\n        <PackageVersion Include=\"System.Threading.Tasks.Dataflow\" Version=\"8.0.0\" />\n        <PackageVersion Include=\"System.ValueTuple\" Version=\"4.5.0\" />\n\n        <PackageVersion Include=\"System.Reactive\" Version=\"6.0.0\" />\n\n        <PackageVersion Include=\"xunit.abstractions\" Version=\"2.0.3\" />\n        <PackageVersion Include=\"xunit.runner.visualstudio\" Version=\"2.5.4\" />\n        <PackageVersion Include=\"xunit\" Version=\"$(XunitPackageVersion)\" />\n    </ItemGroup>\n    <ItemGroup>\n        <PackageVersion Include=\"Microsoft.SourceLink.GitHub\" Version=\"8.0.0\" PrivateAssets=\"All\" />\n    </ItemGroup>\n    <ItemGroup Condition=\"'$(TargetFramework)' == 'net472'\">\n        <PackageVersion Include=\"Microsoft.AspNetCore.Diagnostics\" Version=\"2.2.0\" />\n        <PackageVersion Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.2.0\" />\n        <PackageVersion Include=\"Microsoft.AspNetCore.Http.Features\" Version=\"2.2.0\" />\n        <PackageVersion Include=\"Microsoft.AspNetCore.Server.Kestrel\" Version=\"2.2.0\" />\n    </ItemGroup>\n</Project>\n"
        },
        {
          "name": "GitVersion.yml",
          "type": "blob",
          "size": 0.66796875,
          "content": "assembly-versioning-scheme: MajorMinor\nmode: ContinuousDeployment\nbranches:\n  master:\n    prevent-increment-of-merged-branch-version: true\n    track-merge-target: false\nignore:\n  sha:\n    - 4ffabfa8d8279cd5afa17912143cec9612f77020\n    - d1a145118779213e4733da18ff4ec1d199d807e8\n    - 793228fa65a9af2651c17cb6b27502411e128a6e\n    - 7cd49db551a13b831d68b5c7a17e11287aa344cf\n    - 2757c23cab04f3aa8fca810954c9b044d8b3bb5a\n    - f2248467e93b482d39c60b534e74a3dd7796b3e2\n    - 057c77dcbaffabac3c718fedbf151bff002440c2\n    - 49ba7fdb573fcf5f0d26e242267ec97c31176519\n    - 801dae11a8c6f45b23254d0623b9505f894eca91\ncontinuous-delivery-fallback-tag: beta\ncommit-message-incrementing: Disabled\n"
        },
        {
          "name": "NuGet.Config",
          "type": "blob",
          "size": 2.80078125,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n    <packageSources>\n        <clear />\n        <add key=\"NuGet\" value=\"https://api.nuget.org/v3/index.json\" />\n        <add key=\"dotnet-tools\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json\" />\n        <add key=\"dotnet6\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json\" />\n        <add key=\"dotnet6-transport\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6-transport/nuget/v3/index.json\" />\n        <add key=\"vs-impl\" value=\"https://pkgs.dev.azure.com/azure-public/vside/_packaging/vs-impl/nuget/v3/index.json\" />\n        <add key=\"OmniSharp\" value=\"https://www.myget.org/F/omnisharp/api/v3/index.json\" />\n    </packageSources>\n    <packageSourceMapping>\n        <clear />\n        <packageSource key=\"NuGet\">\n            <package pattern=\"Antlr4.*\" />\n            <package pattern=\"BenchmarkDotNet\" />\n            <package pattern=\"BenchmarkDotNet.*\" />\n            <package pattern=\"Cake.*\" />\n            <package pattern=\"DiffPlex\" />\n            <package pattern=\"Dotnet.Script.*\" />\n            <package pattern=\"Gee.External.Capstone\" />\n            <package pattern=\"Humanizer.Core\" />\n            <package pattern=\"ICSharpCode.Decompiler\" />\n            <package pattern=\"McMaster.Extensions.CommandLineUtils\" />\n            <package pattern=\"MediatR\" />\n            <package pattern=\"microsoft.*\" />\n            <package pattern=\"Nerdbank.Streams\" />\n            <package pattern=\"NETStandard.Library\" />\n            <package pattern=\"Newtonsoft.Json\" />\n            <package pattern=\"NuGet.*\" />\n            <package pattern=\"OmniSharp.*\" />\n            <package pattern=\"runtime.*\" />\n            <package pattern=\"SQLitePCLRaw.*\" />\n            <package pattern=\"system.*\" />\n            <package pattern=\"xunit*\" />\n            <package pattern=\"xunit.*\" />\n            <!-- Needed for CI -->\n            <package pattern=\"GitVersion.CommandLine\" />\n            <!-- Needed for benchmarks and test projects -->\n            <package pattern=\"CommandLineParser\" />\n            <package pattern=\"FSharp.Core\" />\n            <package pattern=\"Iced\" />\n            <package pattern=\"MSTest.*\" />\n            <package pattern=\"nunit\" />\n            <package pattern=\"NUnit3TestAdapter\" />\n            <package pattern=\"Perfolizer\" />\n            <package pattern=\"StyleCop.Analyzers\" />\n        </packageSource>\n        <packageSource key=\"dotnet-tools\">\n            <package pattern=\"microsoft.*\" />\n            <package pattern=\"NuGet.*\" />\n        </packageSource>\n        <packageSource key=\"dotnet6\">\n            <package pattern=\"microsoft.*\" />\n        </packageSource>\n    </packageSourceMapping>\n    <disabledPackageSources>\n        <clear />\n    </disabledPackageSources>\n</configuration>\n"
        },
        {
          "name": "OmniSharp.sln",
          "type": "blob",
          "size": 31.3525390625,
          "content": "\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.31129.286\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{2C348365-A9D8-459E-9276-56FC46AAEE31}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{07464F68-2D8E-45E5-B30A-768FCF4CC903}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tbuild.cake = build.cake\n\t\tbuild.json = build.json\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tDirectory.Build.targets = Directory.Build.targets\n\t\tglobal.json = global.json\n\t\tNuGet.Config = NuGet.Config\n\t\ttools\\packages.config = tools\\packages.config\n\t\tbuild\\Settings.props = build\\Settings.props\n\tEndProjectSection\n\tProjectSection(FolderGlobals) = preProject\n\t\tglobal_1json__JSONSchema = http://json.schemastore.org/global\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"tests\", \"tests\", \"{35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Tests\", \"tests\\OmniSharp.Tests\\OmniSharp.Tests.csproj\", \"{9485FB0D-D105-4E11-8689-97613144D165}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Stdio\", \"src\\OmniSharp.Stdio\\OmniSharp.Stdio.csproj\", \"{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Stdio.Tests\", \"tests\\OmniSharp.Stdio.Tests\\OmniSharp.Stdio.Tests.csproj\", \"{AB5A975C-378B-45DC-AD69-50D808338AC2}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Abstractions\", \"src\\OmniSharp.Abstractions\\OmniSharp.Abstractions.csproj\", \"{0C54BE83-EF9E-4419-B654-A0760745BF80}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Roslyn.CSharp\", \"src\\OmniSharp.Roslyn.CSharp\\OmniSharp.Roslyn.CSharp.csproj\", \"{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Roslyn\", \"src\\OmniSharp.Roslyn\\OmniSharp.Roslyn.csproj\", \"{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.MSBuild\", \"src\\OmniSharp.MSBuild\\OmniSharp.MSBuild.csproj\", \"{9AF025CA-3706-401F-8D50-59FAD5AFE725}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Script\", \"src\\OmniSharp.Script\\OmniSharp.Script.csproj\", \"{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.MSBuild.Tests\", \"tests\\OmniSharp.MSBuild.Tests\\OmniSharp.MSBuild.Tests.csproj\", \"{194A88AE-1429-416B-86C1-BF6F7FF47404}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Roslyn.CSharp.Tests\", \"tests\\OmniSharp.Roslyn.CSharp.Tests\\OmniSharp.Roslyn.CSharp.Tests.csproj\", \"{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Host\", \"src\\OmniSharp.Host\\OmniSharp.Host.csproj\", \"{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"TestUtility\", \"tests\\TestUtility\\TestUtility.csproj\", \"{9459D3EB-9D7F-437E-AC7A-245698B4D62F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.DotNetTest\", \"src\\OmniSharp.DotNetTest\\OmniSharp.DotNetTest.csproj\", \"{33A68F57-B234-4481-AEDE-03D51756B35A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.DotNetTest.Tests\", \"tests\\OmniSharp.DotNetTest.Tests\\OmniSharp.DotNetTest.Tests.csproj\", \"{F6195E7B-8002-42AE-BF86-E78DBC769A47}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Http\", \"src\\OmniSharp.Http\\OmniSharp.Http.csproj\", \"{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Http.Tests\", \"tests\\OmniSharp.Http.Tests\\OmniSharp.Http.Tests.csproj\", \"{1217C534-E8EB-454D-B6E1-12BD30E72F8E}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.LanguageServerProtocol\", \"src\\OmniSharp.LanguageServerProtocol\\OmniSharp.LanguageServerProtocol.csproj\", \"{D182B870-72E7-4072-A439-45F4FC148A34}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Cake\", \"src\\OmniSharp.Cake\\OmniSharp.Cake.csproj\", \"{BA0713A6-EF63-419D-B60D-7A84B134531F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Cake.Tests\", \"tests\\OmniSharp.Cake.Tests\\OmniSharp.Cake.Tests.csproj\", \"{17DAECA3-AE28-4B40-AA52-1EF618346A85}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Http.Driver\", \"src\\OmniSharp.Http.Driver\\OmniSharp.Http.Driver.csproj\", \"{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Stdio.Driver\", \"src\\OmniSharp.Stdio.Driver\\OmniSharp.Stdio.Driver.csproj\", \"{D2A78CEE-B278-476F-AF34-A7D6F792F973}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Script.Tests\", \"tests\\OmniSharp.Script.Tests\\OmniSharp.Script.Tests.csproj\", \"{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Shared\", \"src\\OmniSharp.Shared\\OmniSharp.Shared.csproj\", \"{9571E3FE-E742-44AC-9E1F-64156815B8E1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Lsp.Tests\", \"tests\\OmniSharp.Lsp.Tests\\OmniSharp.Lsp.Tests.csproj\", \"{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"OmniSharp.Benchmarks\", \"src\\OmniSharp.Benchmarks\\OmniSharp.Benchmarks.csproj\", \"{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Release|x64.Build.0 = Release|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{9485FB0D-D105-4E11-8689-97613144D165}.Release|x86.Build.0 = Release|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Release|x64.Build.0 = Release|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535}.Release|x86.Build.0 = Release|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Release|x64.Build.0 = Release|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2}.Release|x86.Build.0 = Release|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80}.Release|x86.Build.0 = Release|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Release|x64.Build.0 = Release|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746}.Release|x86.Build.0 = Release|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Release|x64.Build.0 = Release|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97}.Release|x86.Build.0 = Release|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Release|x64.Build.0 = Release|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725}.Release|x86.Build.0 = Release|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Release|x64.Build.0 = Release|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0}.Release|x86.Build.0 = Release|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Release|x64.Build.0 = Release|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404}.Release|x86.Build.0 = Release|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Release|x64.Build.0 = Release|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750}.Release|x86.Build.0 = Release|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Release|x64.Build.0 = Release|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD}.Release|x86.Build.0 = Release|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Release|x64.Build.0 = Release|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F}.Release|x86.Build.0 = Release|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Release|x64.Build.0 = Release|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A}.Release|x86.Build.0 = Release|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Release|x64.Build.0 = Release|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47}.Release|x86.Build.0 = Release|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1}.Release|x86.Build.0 = Release|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Release|x64.Build.0 = Release|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E}.Release|x86.Build.0 = Release|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Release|x64.Build.0 = Release|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34}.Release|x86.Build.0 = Release|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Release|x64.Build.0 = Release|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F}.Release|x86.Build.0 = Release|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Release|x64.Build.0 = Release|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85}.Release|x86.Build.0 = Release|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Release|x64.Build.0 = Release|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44}.Release|x86.Build.0 = Release|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Release|x64.Build.0 = Release|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973}.Release|x86.Build.0 = Release|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Release|x64.Build.0 = Release|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F}.Release|x86.Build.0 = Release|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Release|x64.Build.0 = Release|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1}.Release|x86.Build.0 = Release|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Release|x64.Build.0 = Release|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC}.Release|x86.Build.0 = Release|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Release|x64.Build.0 = Release|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588}.Release|x86.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{9485FB0D-D105-4E11-8689-97613144D165} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{A4F5FE6B-D3B4-4B63-A949-44E12AB8D535} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{AB5A975C-378B-45DC-AD69-50D808338AC2} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{0C54BE83-EF9E-4419-B654-A0760745BF80} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{ED1A82CB-2741-45F5-A28B-7C36EFDF9746} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{4F5FC4AF-3977-4ECB-9B58-D16E8024BC97} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{9AF025CA-3706-401F-8D50-59FAD5AFE725} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{F52F6F60-AB29-414D-A24B-DE8EFFBA34C0} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{194A88AE-1429-416B-86C1-BF6F7FF47404} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{2F4B72DA-FC27-4676-8E89-7BAC2EFDF750} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{A1B54CA5-7F82-4487-8150-B4CB3952A2AD} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{9459D3EB-9D7F-437E-AC7A-245698B4D62F} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{33A68F57-B234-4481-AEDE-03D51756B35A} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{F6195E7B-8002-42AE-BF86-E78DBC769A47} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{0A9BF1CC-2F0D-431C-BAFD-403658E233F1} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{1217C534-E8EB-454D-B6E1-12BD30E72F8E} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{D182B870-72E7-4072-A439-45F4FC148A34} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{BA0713A6-EF63-419D-B60D-7A84B134531F} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{17DAECA3-AE28-4B40-AA52-1EF618346A85} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{BC640CBF-F6E2-42EA-9D61-FB6E515AEA44} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{D2A78CEE-B278-476F-AF34-A7D6F792F973} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{9E4BA68C-7F4B-429A-A0C7-8CE7D41D610F} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{9571E3FE-E742-44AC-9E1F-64156815B8E1} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\t\t{D67AA10B-8DB6-408D-A4C5-0B1DDCF5B3CC} = {35E025BF-BBB2-4FAC-9F4B-37CBA083EE47}\n\t\t{6F5B209E-8DD3-4E90-A1F3-D85E7AF56588} = {2C348365-A9D8-459E-9276-56FC46AAEE31}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {4DD725CE-B49A-4151-8B77-BB33FE88E46E}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6142578125,
          "content": "# omnisharp-roslyn\n\n[![Build Status](https://dev.azure.com/omnisharp/Builds/_apis/build/status/OmniSharp.omnisharp-roslyn?branchName=master)](https://dev.azure.com/omnisharp/Builds/_build/latest?definitionId=2&branchName=master)\n\n## Introduction\n\nOmniSharp is a .NET development platform based on [Roslyn](https://github.com/dotnet/roslyn) workspaces. It provides project dependencies and C# language services to various IDEs and plugins.\n\nOmniSharp is built with the [.NET Core SDK](https://dot.net/) on Windows and [Mono](http://www.mono-project.com/) on OSX/Linux. It targets both the _net6.0_ and _net472_ target frameworks. The _net6.0_ build requires a .NET SDK version _>=6.0_. When using the _net472_ build on OSX/Linux, _Mono_ version _>=6.4.0_ is required and must be globally installed on the system.\n\nFor Arch Linux users, you need package [mono-msbuild](https://archlinux.org/packages/extra/x86_64/mono-msbuild/) (>= 16.3).\n\nIn addition, if you need the HTTP interface and you want to run on Linux, you'll also need to make sure that you have [libuv](http://libuv.org) installed. See also https://github.com/OmniSharp/omnisharp-roslyn/issues/1202#issuecomment-421543905 .\n\n## What's new\n\nSee our [change log](https://github.com/OmniSharp/omnisharp-roslyn/blob/master/CHANGELOG.md) for all of the updates.\n\n## Using OmniSharp\n\nOmniSharp ships in two flavors:\n\n-   Stdio server\n-   HTTP server\n\n### Downloading OmniSharp\n\nWhen using OmniSharp with an editor extension (e.g. VIM, Emacs, VS Code), the extension will download or bundle OmniSharp automatically. If you wish to download OmniSharp manually though, follow the steps below.\n\n#### Stable releases\n\nStable releases are published using [GitHub releases](https://github.com/OmniSharp/omnisharp-roslyn/releases). Each release contains a set of binaries for various operating systems and processing architectures.\n\n#### Pre-releases\n\nPre-release versions are available in Azure Blob Storage, they can be viewed using the following URL `https://roslynomnisharp.blob.core.windows.net/releases?restype=container&comp=list&prefix={version}`, where the `{version}` placeholder can be found in the [changelog](https://github.com/OmniSharp/omnisharp-roslyn/blob/master/CHANGELOG.md). For example, all `1.37.x` versions (including all betas and prereleases such as `1.37.4-beta.5`) can be viewed using `https://roslynomnisharp.blob.core.windows.net/releases?restype=container&comp=list&prefix=1.37`. Please note that the listing is limited to 5000 entries.\n\nEvery merge to `master` is automatically published to this feed and individual release is then available using the following URL convention:\n`https://roslynomnisharp.blob.core.windows.net/releases/{version}/{packagename}-{os/arch}.{ext}`\n\n-   Version is auto incremented and is visible in the travis or appveyor build output\n-   Package Name would be either `omnisharp` or `omnisharp.http`\n-   `os/arch` will be one of the following:\n    -   `win-x64`\n    -   `win-x86`\n    -   `win-arm64`\n    -   `linux-x64`\n    -   `linux-x86`\n    -   `linux-musl-x64`\n    -   `linux-arm64`\n    -   `linux-musl-arm64`\n    -   `osx`\n    -   `mono` (Requires global mono installed)\n-   Extensions are archive specific, windows will be `zip` and all others will be `tar.gz`.\n\n### Building\n\n**On Windows**:\n\n```\n> ./build.ps1\n```\n\n**On Linux / Unix**:\n\n```\n$ ./build.sh\n```\n\nYou can find the output under `artifacts/publish/OmniSharp/<runtime id>/<target framework>/`.\n\nThe executable is either `OmniSharp.exe` or `OmniSharp`.\n\nFor more details, see [Build](https://github.com/OmniSharp/omnisharp-roslyn/blob/master/BUILD.md).\n\n### VS Code\n\nAdd the following setting to your [User Settings](https://code.visualstudio.com/Docs/customization/userandworkspace).\n\n```JSON\n{\n  \"omnisharp.path\": \"<Path to the omnisharp executable>\"\n}\n```\n\nThe above option can also be set to:\n\n-   \"latest\" - To consume the latest build from the master branch\n-   A specific version number like `1.29.2-beta.60`\n\nIn order to be able to attach a debugger, add the following setting to your [User or Workspace settings](https://code.visualstudio.com/Docs/customization/userandworkspace):\n\n```JSON\n{\n  \"omnisharp.waitForDebugger\": true\n}\n```\n\nThis will print the OmniSharp process ID in the VS Code OmniSharp output panel and pause the start of the server until a debugger is attached to this process. This is equivalent to launching OmniSharp from a command line with the `--debug` flag.\n\n### Configuration\n\nOmniSharp provides a rich set of hierarchical configuration options, controlled via startup arguments, environment variables and `omnisharp.json` file. For more details please visit the [Configuration Options](https://github.com/OmniSharp/omnisharp-roslyn/wiki/Configuration-Options) section of the wiki.\n\n## Help wanted!\n\nWe have slack room as well. [Get yourself invited](https://omnisharp.herokuapp.com/): [here](https://omnisharp.herokuapp.com/)\n\n## License\n\nCopyright © .NET Foundation, and contributors.\n\nOmniSharp is provided as-is under the MIT license. For more information see [LICENSE](https://github.com/OmniSharp/omnisharp-roslyn/blob/master/license.md).\n\n## Code of Conduct\n\nThis project has adopted the code of conduct defined by the [Contributor Covenant](http://contributor-covenant.org/)\nto clarify expected behavior in our community.\nFor more information see the [.NET Foundation Code of Conduct](http://www.dotnetfoundation.org/code-of-conduct).\n\n## Contribution License Agreement\n\nBy signing the [CLA](https://cla.dotnetfoundation.org/OmniSharp/omnisharp-roslyn), the community is free to use your contribution to .NET Foundation projects.\n\n## .NET Foundation\n\nThis project is supported by the [.NET Foundation](http://www.dotnetfoundation.org).\n"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 7.283203125,
          "content": "trigger:\n  batch: \"true\"\n  branches:\n    include:\n      - master\n      - refs/tags/*\n\npr: none\n\nresources:\n  repositories:\n    - repository: rsg\n      type: github\n      name: RocketSurgeonsGuild/AzureDevopsTemplates\n      ref: refs/tags/v0.4.5\n      endpoint: github\n\nvariables:\n  Verbosity: Diagnostic\n  DotNetVersion: \"8.0.303\"\n  CakeVersion: \"4.2.0\"\n  NuGetVersion: \"6.5.0\"\n  GitVersionVersion: \"5.0.1\"\n  MonoVersion: \"6.12.0\"\n  Coverage: \"$(Agent.BuildDirectory)/c\"\n  VstsCoverage: \"$(Coverage)\"\n  Artifacts: $(Build.SourcesDirectory)/artifacts/\n  VstsArtifacts: \"$(Artifacts)\"\n  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: \"true\"\n  IsMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]\n  IsRelease: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/v')]\n  IsBetaRelease: $[and(startsWith(variables['Build.SourceBranch'], 'refs/tags/v'), contains(variables['Build.SourceBranch'], '-beta.'))]\n  IsOfficialRelease: $[and(startsWith(variables['Build.SourceBranch'], 'refs/tags/v'), not(contains(variables['Build.SourceBranch'], '-beta.')))]\n\nstages:\n  - stage: CreateBetaReleaseTag\n    displayName: \"Tag Beta Release\"\n    condition: eq(variables.IsMaster, true)\n    jobs:\n      - job: GitVersion\n        pool:\n          vmImage: \"windows-2019\"\n        steps:\n          - template: gitversion/store.yml@rsg\n            parameters:\n              NuGetVersion: $(NuGetVersion)\n              version: $(GitVersionVersion)\n\n      - job: CreateTag\n        pool:\n          vmImage: \"ubuntu-latest\"\n        dependsOn: GitVersion\n        steps:\n          - checkout: self\n            fetchTags: false\n            persistCredentials: true\n          - template: ./.pipelines/init.yml\n            parameters:\n              Verbosity: $(Verbosity)\n              CakeVersion: $(CakeVersion)\n              DotNetVersion: $(DotNetVersion)\n              NuGetVersion: $(NuGetVersion)\n          - script: |\n              git tag v$(Build.BuildNumber)\n              git push --tags\n          - task: GitHubRelease@1\n            displayName: \"GitHub create beta release\"\n            inputs:\n              gitHubConnection: \"OmniSharp Org\"\n              repositoryName: OmniSharp/omnisharp-roslyn\n              action: create\n              tag: \"v$(Build.BuildNumber)\"\n              tagSource: gitTag\n              title: \"v$(Build.BuildNumber)\"\n              isDraft: true\n              isPreRelease: true\n              addChangeLog: true\n\n  - stage: BuildRelease\n    displayName: \"Build Release\"\n    condition: eq(variables.IsRelease, true)\n    jobs:\n      - job: GitVersion\n        pool:\n          vmImage: \"windows-2019\"\n        steps:\n          - template: gitversion/store.yml@rsg\n            parameters:\n              NuGetVersion: $(NuGetVersion)\n              version: $(GitVersionVersion)\n\n      - job: macOS\n        pool:\n          vmImage: \"macos-13\"\n        dependsOn: GitVersion\n        steps:\n          - template: ./.pipelines/init.yml\n            parameters:\n              Verbosity: $(Verbosity)\n              CakeVersion: $(CakeVersion)\n              DotNetVersion: $(DotNetVersion)\n              NuGetVersion: $(NuGetVersion)\n              MonoVersion: $(MonoVersion)\n          - script: |\n              echo $PATH\n              chmod 755 ./build.sh\n              ./build.sh --configuration Release --verbosity Verbose --target CI --publish-all --archive\n            displayName: \"Build\"\n          - template: ./.pipelines/artifacts.yml\n            parameters:\n              Artifacts: $(Artifacts)\n\n      - job: Linux\n        pool:\n          vmImage: \"ubuntu-20.04\"\n        dependsOn: GitVersion\n        steps:\n          - template: ./.pipelines/init.yml\n            parameters:\n              Verbosity: $(Verbosity)\n              CakeVersion: $(CakeVersion)\n              DotNetVersion: $(DotNetVersion)\n              NuGetVersion: $(NuGetVersion)\n              MonoVersion: $(MonoVersion)\n          - script: |\n              chmod 755 ./build.sh\n              ./build.sh --configuration Release --verbosity Verbose --target CI --publish-all --archive\n            displayName: \"Build\"\n          - template: ./.pipelines/artifacts.yml\n            parameters:\n              Artifacts: $(Artifacts)\n\n      - job: Windows\n        pool:\n          vmImage: \"windows-2022\"\n        dependsOn: GitVersion\n        steps:\n          - template: ./.pipelines/init.yml\n            parameters:\n              Verbosity: $(Verbosity)\n              CakeVersion: $(CakeVersion)\n              DotNetVersion: $(DotNetVersion)\n              NuGetVersion: $(NuGetVersion)\n          - powershell: .\\build.ps1 -configuration Release -verbosity Verbose -target CI --publish-all --archive\n            displayName: \"Build\"\n          - template: ./.pipelines/artifacts.yml\n            parameters:\n              Artifacts: $(Artifacts)\n\n      - job: Release\n        pool:\n          vmImage: \"ubuntu-latest\"\n        dependsOn:\n          - macOS\n          - Linux\n          - Windows\n        steps:\n          - template: ./.pipelines/init.yml\n            parameters:\n              Verbosity: $(Verbosity)\n              CakeVersion: $(CakeVersion)\n              DotNetVersion: $(DotNetVersion)\n              NuGetVersion: $(NuGetVersion)\n          - task: DownloadBuildArtifacts@0\n            displayName: Download Packages\n            inputs:\n              downloadType: \"single\"\n              artifactName: \"packages\"\n              buildType: \"current\"\n              downloadPath: \"$(System.ArtifactsDirectory)\"\n          - task: DownloadBuildArtifacts@0\n            displayName: Download Deployment\n            inputs:\n              downloadType: \"single\"\n              artifactName: \"deployment\"\n              buildType: \"current\"\n              downloadPath: \"$(System.ArtifactsDirectory)\"\n          - task: DownloadBuildArtifacts@0\n            displayName: Download NuGet\n            inputs:\n              downloadType: \"single\"\n              artifactName: \"nuget\"\n              buildType: \"current\"\n              downloadPath: \"$(System.ArtifactsDirectory)\"\n          - task: NuGetCommand@2\n            displayName: \"Push NuGet packages to Azure Artifacts\"\n            inputs:\n              command: push\n              nuGetFeedType: internal\n              packagesToPush: \"$(System.ArtifactsDirectory)/nuget/**/*.nupkg\"\n              publishVstsFeed: Builds/omnisharp\n              allowPackageConflicts: true\n          - task: NuGetCommand@2\n            displayName: \"Push NuGet packages to nuget.org\"\n            inputs:\n              command: push\n              nuGetFeedType: external\n              packagesToPush: \"$(System.ArtifactsDirectory)/nuget/**/*.nupkg\"\n              publishFeedCredentials: nuget.org\n              allowPackageConflicts: true\n            condition: and(succeeded(), eq(variables.IsOfficialRelease, true))\n          - task: GitHubRelease@1\n            displayName: \"GitHub release (edit)\"\n            inputs:\n              gitHubConnection: \"OmniSharp Org\"\n              repositoryName: OmniSharp/omnisharp-roslyn\n              action: edit\n              tag: \"$(Build.SourceBranchName)\"\n              title: \"$(Build.SourceBranchName)\"\n              assets: \"$(System.ArtifactsDirectory)/packages/**/*\"\n              assetUploadMode: replace\n              # releaseNotesSource: input\n              # releaseNotes: asdfasdf12\n              # isDraft: true\n              isPreRelease: $(IsBetaRelease)\n              # addChangeLog: false\n"
        },
        {
          "name": "blobstring.txt.enc",
          "type": "blob",
          "size": 0.1875,
          "content": null
        },
        {
          "name": "build.cake",
          "type": "blob",
          "size": 27.794921875,
          "content": "#load \"scripts/common.cake\"\n#load \"scripts/runhelpers.cake\"\n#load \"scripts/archiving.cake\"\n#load \"scripts/artifacts.cake\"\n#load \"scripts/platform.cake\"\n#load \"scripts/validation.cake\"\n\nusing System.ComponentModel;\nusing System.Net;\nusing System.Reflection;\nusing System.Xml;\n\n// Arguments\nvar target = Argument(\"target\", \"Default\");\nvar configuration = Argument(\"configuration\", \"Debug\");\nvar installFolder = Argument(\"install-path\",\n    CombinePaths(Environment.GetEnvironmentVariable(Platform.Current.IsWindows ? \"USERPROFILE\" : \"HOME\"), \".omnisharp\"));\nvar publishAll = HasArgument(\"publish-all\");\nvar useGlobalDotNetSdk = HasArgument(\"use-global-dotnet-sdk\");\nvar testProjectArgument = Argument(\"test-project\", \"\");\nvar useDotNetTest = HasArgument(\"use-dotnet-test\");\n\nLog.Context = Context;\n\nvar env = new BuildEnvironment(useGlobalDotNetSdk, Context);\nvar buildPlan = BuildPlan.Load(env);\n\nInformation(\"\");\nInformation(\"Current platform: {0}\", Platform.Current);\nInformation(\"\");\n\n/// <summary>\n///  Clean artifacts.\n/// </summary>\nTask(\"Cleanup\")\n    .Does(() =>\n{\n    if (DirectoryHelper.Exists(env.Folders.Artifacts))\n    {\n        DirectoryHelper.Delete(env.Folders.Artifacts, recursive: true);\n    }\n\n    DirectoryHelper.Create(env.Folders.Artifacts);\n    DirectoryHelper.Create(env.Folders.ArtifactsLogs);\n    DirectoryHelper.Create(env.Folders.ArtifactsPackage);\n    DirectoryHelper.Create(env.Folders.ArtifactsScripts);\n});\n\nTask(\"GitVersion\")\n    .WithCriteria(!BuildSystem.IsLocalBuild)\n    .WithCriteria(!AzurePipelines.IsRunningOnAzurePipelines)\n    .Does(() =>\n    {\n        GitVersion(new GitVersionSettings\n        {\n            OutputType = GitVersionOutput.BuildServer\n        });\n    });\n\n/// <summary>\n///  Pre-build setup tasks.\n/// </summary>\nTask(\"Setup\")\n    .IsDependentOn(\"ValidateMono\")\n    .IsDependentOn(\"InstallDotNetSdk\");\n\nvoid InstallDotNetSdk(BuildEnvironment env, BuildPlan plan, string version, string installFolder, bool sharedRuntime = false, bool noPath = false)\n{\n    if (!DirectoryHelper.Exists(installFolder))\n    {\n        DirectoryHelper.Create(installFolder);\n    }\n\n    var scriptFileName = $\"dotnet-install.{env.ShellScriptFileExtension}\";\n    var scriptFilePath = CombinePaths(installFolder, scriptFileName);\n    var url = $\"{plan.DotNetInstallScriptURL}/{scriptFileName}\";\n\n    DownloadFile(url, File(scriptFilePath));\n\n    if (!Platform.Current.IsWindows)\n    {\n        Run(\"chmod\", $\"+x \\\"{scriptFilePath}\\\"\");\n    }\n\n    var argList = new List<string>();\n\n    argList.Add(\"-Channel\");\n    argList.Add(plan.DotNetChannel);\n\n    if (!string.IsNullOrEmpty(version))\n    {\n        argList.Add(\"-Version\");\n        argList.Add(version);\n    }\n\n    argList.Add(\"-InstallDir\");\n    argList.Add(installFolder);\n\n    if (sharedRuntime)\n    {\n        argList.Add(\"-SharedRuntime\");\n    }\n\n    if (noPath)\n    {\n        argList.Add(\"-NoPath\");\n    }\n\n    Run(env.ShellCommand, $\"{env.ShellArgument} {scriptFilePath} {string.Join(\" \", argList)}\").ExceptionOnError($\"Failed to Install .NET Core SDK {version}\");\n}\n\nTask(\"InstallDotNetSdk\")\n    .Does(() =>\n{\n    if (!useGlobalDotNetSdk)\n    {\n        foreach (var dotnetVersion in buildPlan.DotNetVersions)\n        {\n            InstallDotNetSdk(env, buildPlan,\n                version: dotnetVersion,\n                installFolder: env.Folders.DotNetSdk);\n        }\n\n        // Add non-legacy .NET SDK to PATH\n        var oldPath = Environment.GetEnvironmentVariable(\"PATH\");\n        var newPath = env.Folders.DotNetSdk + (string.IsNullOrEmpty(oldPath) ? \"\" : System.IO.Path.PathSeparator + oldPath);\n        Environment.SetEnvironmentVariable(\"PATH\", newPath);\n        Information(\"PATH: {0}\", Environment.GetEnvironmentVariable(\"PATH\"));\n    }\n\n    // Disable the first time run experience. We don't need to expand all of .NET Core just to build OmniSharp.\n    Environment.SetEnvironmentVariable(\"DOTNET_SKIP_FIRST_TIME_EXPERIENCE\", \"true\");\n\n    Run(env.DotNetCommand, \"--info\");\n});\n\nTask(\"ValidateMono\")\n    .WithCriteria(() => !Platform.Current.IsWindows)\n    .Does(() =>\n{\n    ValidateMonoVersion(buildPlan);\n});\n\n/// <summary>\n///  Prepare test assets.\n/// </summary>\nTask(\"PrepareTestAssets\")\n    .IsDependentOn(\"Setup\");\n\nTask(\"PrepareTestAssets:CommonTestAssets\")\n    .IsDependeeOf(\"PrepareTestAssets\")\n    .DoesForEach(buildPlan.TestAssets, (project) =>\n    {\n        Information(\"Restoring and building: {0}...\", project);\n\n        var folder = CombinePaths(env.Folders.TestAssets, \"test-projects\", project);\n\n        try\n        {\n            DotNetBuild(folder, new DotNetBuildSettings()\n            {\n                WorkingDirectory = folder,\n                Verbosity = DotNetVerbosity.Minimal,\n            });\n        }\n        catch when (project == \"ExternAlias\")\n        {\n            // ExternalAlias has issues once in a while, try building again to get it working.\n            DotNetBuild(folder, new DotNetBuildSettings()\n            {\n                WorkingDirectory = folder,\n                Verbosity = DotNetVerbosity.Minimal\n            });\n        }\n    });\n\nTask(\"PrepareTestAssets:RestoreOnlyTestAssets\")\n    .IsDependeeOf(\"PrepareTestAssets\")\n    .DoesForEach(buildPlan.RestoreOnlyTestAssets, (project) =>\n    {\n        Information(\"Restoring: {0}...\", project);\n\n        var folder = CombinePaths(env.Folders.TestAssets, \"test-projects\", project);\n\n        DotNetRestore(new DotNetRestoreSettings()\n        {\n            WorkingDirectory = folder,\n            Verbosity = DotNetVerbosity.Minimal\n        });\n    });\n\nTask(\"PrepareTestAssets:WindowsOnlyTestAssets\")\n    .WithCriteria(Platform.Current.IsWindows)\n    .IsDependeeOf(\"PrepareTestAssets\")\n    .DoesForEach(buildPlan.WindowsOnlyTestAssets, (project) =>\n    {\n        Information(\"Restoring and building: {0}...\", project);\n\n        var folder = CombinePaths(env.Folders.TestAssets, \"test-projects\", project);\n\n        DotNetBuild(folder, new DotNetBuildSettings()\n        {\n            WorkingDirectory = folder,\n            Verbosity = DotNetVerbosity.Minimal\n        });\n    });\n\nTask(\"PrepareTestAssets:CakeTestAssets\")\n    .IsDependeeOf(\"PrepareTestAssets\")\n    .DoesForEach(buildPlan.CakeTestAssets, (project) =>\n    {\n        Information(\"Restoring: {0}...\", project);\n\n        var toolsFolder = CombinePaths(env.Folders.TestAssets, \"test-projects\", project, \"tools\");\n        var packagesConfig = CombinePaths(toolsFolder, \"packages.config\");\n\n        NuGetInstallFromConfig(packagesConfig, new NuGetInstallSettings\n        {\n            OutputDirectory = toolsFolder,\n            Prerelease = true,\n            Verbosity = NuGetVerbosity.Quiet,\n            Source = new[] {\n                \"https://api.nuget.org/v3/index.json\"\n            }\n        });\n    });\n\nvoid BuildWithDotNetCli(BuildEnvironment env, string configuration)\n{\n    Information(\"Building OmniSharp.sln with .NET Core CLI...\");\n\n    var logFileNameBase = CombinePaths(env.Folders.ArtifactsLogs, \"OmniSharp-build\");\n    var projectImports = Context.Log.Verbosity == Verbosity.Verbose || Context.Log.Verbosity == Verbosity.Diagnostic\n        ? MSBuildBinaryLogImports.Embed\n        : MSBuildBinaryLogImports.None;\n\n    var settings = new DotNetMSBuildSettings\n    {\n        WorkingDirectory = env.WorkingDirectory,\n\n        ArgumentCustomization = args =>\n            args.Append(\"/restore\")\n                .Append($\"/bl:{logFileNameBase}.binlog;ProjectImports={projectImports}\")\n                .Append($\"/v:{Verbosity.Minimal.GetMSBuildVerbosityName()}\")\n                .Append(\"/tl\")\n                .Append(\"/graphBuild\")\n    };\n\n    settings.AddFileLogger(\n        new MSBuildFileLoggerSettings\n        {\n            AppendToLogFile = false,\n            LogFile = logFileNameBase + \".log\",\n            ShowTimestamp = true,\n\n            // Bug in cake with this\n            // Verbosity = Verbosity.Diagnostic,\n        }\n    );\n\n    settings\n        .SetConfiguration(configuration)\n        .WithProperty(\"PackageVersion\", env.VersionInfo.NuGetVersion)\n        .WithProperty(\"AssemblyVersion\", env.VersionInfo.AssemblySemVer)\n        .WithProperty(\"FileVersion\", env.VersionInfo.AssemblySemVer)\n        .WithProperty(\"InformationalVersion\", env.VersionInfo.InformationalVersion)\n        .WithProperty(\"RuntimeFrameworkVersion\", \"6.0.0-preview.7.21317.1\") // Set the minimum runtime to a .NET 6 prerelease so that prerelease SDKs will be considered during rollForward.\n        .WithProperty(\"RollForward\", \"LatestMajor\");\n\n    DotNetMSBuild(\"OmniSharp.sln\", settings);\n}\n\nTask(\"Build\")\n    .IsDependentOn(\"Setup\")\n    .Does(() =>\n{\n    try\n    {\n        BuildWithDotNetCli(env, configuration);\n    }\n    catch\n    {\n        Error($\"Build failed.\");\n        throw;\n    }\n});\n\n/// <summary>\n///  Run all tests.\n/// </summary>\nTask(\"Test\")\n    .IsDependentOn(\"Setup\")\n    .IsDependentOn(\"Build\")\n    .IsDependentOn(\"PrepareTestAssets\")\n    .Does(() =>\n{\n    var testTargetFramework = useDotNetTest ? \"net8.0\" : \"net472\";\n    var testProjects = string.IsNullOrEmpty(testProjectArgument) ? buildPlan.TestProjects : testProjectArgument.Split(',');\n    foreach (var testProject in testProjects)\n    {\n        PrintBlankLine();\n        var instanceFolder = CombinePaths(env.Folders.Bin, configuration, testProject, testTargetFramework);\n        var targetPath = CombinePaths(instanceFolder, $\"{testProject}.dll\");\n\n        if (useDotNetTest)\n        {\n            var logFile = CombinePaths(env.Folders.ArtifactsLogs, $\"{testProject}-netsdk-result.xml\");\n            var arguments = $\"test \\\"{targetPath}\\\" --logger \\\"console;verbosity=normal\\\" --logger \\\"trx;LogFileName={logFile}\\\" --blame-hang-timeout 60sec\";\n\n            Console.WriteLine($\"Executing: dotnet {arguments}\");\n\n            Run(\"dotnet\", arguments, instanceFolder)\n                .ExceptionOnError($\"Test {testProject} failed for {testTargetFramework}\");\n        }\n        else\n        {\n            var logFile = CombinePaths(env.Folders.ArtifactsLogs, $\"{testProject}-desktop-result.xml\");\n\n            // Copy xunit executable to test folder to solve path errors\n            var xunitToolsFolder = CombinePaths(env.Folders.Tools, \"xunit.runner.console\", \"tools\", \"net452\");\n            var xunitInstancePath = CombinePaths(instanceFolder, \"xunit.console.exe\");\n            FileHelper.Copy(CombinePaths(xunitToolsFolder, \"xunit.console.exe\"), xunitInstancePath, overwrite: true);\n            FileHelper.Copy(CombinePaths(xunitToolsFolder, \"xunit.runner.utility.net452.dll\"), CombinePaths(instanceFolder, \"xunit.runner.utility.net452.dll\"), overwrite: true);\n            var arguments = $\"\\\"{targetPath}\\\" -noshadow -parallel none -xml \\\"{logFile}\\\" -notrait category=failing\";\n\n            if (Platform.Current.IsWindows)\n            {\n                Run(xunitInstancePath, arguments, instanceFolder)\n                    .ExceptionOnError($\"Test {testProject} failed for {testTargetFramework}\");\n            }\n            else\n            {\n                // Copy the Mono-built Microsoft.Build.* binaries to the test folder.\n                // This is necessary to work around a Mono bug that is exasperated by xUnit.\n                CopyMonoMSBuildBinaries(instanceFolder);\n\n                Run(\"mono\", $\"\\\"{xunitInstancePath}\\\" {arguments}\", instanceFolder)\n                    .ExceptionOnError($\"Test {testProject} failed for net472\");\n            }\n        }\n    }\n});\n\nvoid CopyMonoMSBuildBinaries(string outputFolder)\n{\n    var monoBasePath = Platform.Current.IsMacOS\n        ? \"/Library/Frameworks/Mono.framework/Versions/Current/lib/mono\"\n        : \"/usr/lib/mono\";\n    var monoMSBuildPath = $\"{monoBasePath}/msbuild/Current/bin\";\n    DirectoryHelper.Copy(monoMSBuildPath, outputFolder, replaceFiles: false);\n\n    // Copy dependencies of Mono build\n    FileHelper.Copy(\n        source: CombinePaths(env.Folders.Tools, \"SQLitePCLRaw.core\", \"lib\", \"netstandard2.0\", \"SQLitePCLRaw.core.dll\"),\n        destination: CombinePaths(outputFolder, \"SQLitePCLRaw.core.dll\"),\n        overwrite: true);\n    FileHelper.Copy(\n        source: CombinePaths(env.Folders.Tools, \"SQLitePCLRaw.provider.e_sqlite3\", \"lib\", \"netstandard2.0\", \"SQLitePCLRaw.provider.e_sqlite3.dll\"),\n        destination: CombinePaths(outputFolder, \"SQLitePCLRaw.provider.e_sqlite3.dll\"),\n        overwrite: true);\n    FileHelper.Copy(\n        source: CombinePaths(env.Folders.Tools, \"SQLitePCLRaw.bundle_green\", \"lib\", \"netstandard2.0\", \"SQLitePCLRaw.batteries_v2.dll\"),\n        destination: CombinePaths(outputFolder, \"SQLitePCLRaw.batteries_v2.dll\"),\n        overwrite: true);\n}\n\nvoid CopyExtraDependencies(BuildEnvironment env, string outputFolder)\n{\n    // copy license\n    FileHelper.Copy(CombinePaths(env.WorkingDirectory, \"license.md\"), CombinePaths(outputFolder, \"license.md\"), overwrite: true);\n}\n\nvoid UpdateBindingRedirects(string omnisharpFolder)\n{\n    var appConfig = CombinePaths(omnisharpFolder, \"OmniSharp.exe.config\");\n    if (!FileHelper.Exists(appConfig))\n    {\n        appConfig = CombinePaths(omnisharpFolder, \"OmniSharp.dll.config\");\n    }\n\n    // Load app.config\n    var document = new XmlDocument();\n    document.Load(appConfig);\n\n    // Find bindings\n    var runtime = document.GetElementsByTagName(\"runtime\")[0];\n    var assemblyBinding = document.CreateElement(\"assemblyBinding\", \"urn:schemas-microsoft-com:asm.v1\");\n\n    // Find OmniSharp libraries\n    foreach (var filePath in System.IO.Directory.GetFiles(omnisharpFolder, \"OmniSharp.*.dll\"))\n    {\n        // Read assembly name from OmniSharp library\n        var assemblyName = AssemblyName.GetAssemblyName(filePath);\n\n        // Create binding redirect and add to bindings\n        var redirect = CreateBindingRedirect(document, assemblyName);\n        assemblyBinding.AppendChild(redirect);\n    }\n\n    // Find Roslyn libraries\n    foreach (var filePath in System.IO.Directory.GetFiles(omnisharpFolder, \"Microsoft.CodeAnalysis.*.dll\"))\n    {\n        // Read assembly name from Roslyn library\n        var assemblyName = AssemblyName.GetAssemblyName(filePath);\n\n        // Create binding redirect and add to bindings\n        var redirect = CreateBindingRedirect(document, assemblyName);\n        assemblyBinding.AppendChild(redirect);\n    }\n\n    runtime.AppendChild(assemblyBinding);\n\n    // Save updated app.config\n    document.Save(appConfig);\n}\n\nXmlElement CreateBindingRedirect(XmlDocument document, AssemblyName assemblyName)\n{\n    var dependentAssembly = document.CreateElement(\"dependentAssembly\", \"urn:schemas-microsoft-com:asm.v1\");\n\n    var assemblyIdentity = document.CreateElement(\"assemblyIdentity\", \"urn:schemas-microsoft-com:asm.v1\");\n    assemblyIdentity.SetAttribute(\"name\", assemblyName.Name);\n    var publicKeyToken = BitConverter.ToString(assemblyName.GetPublicKeyToken()).Replace(\"-\", string.Empty).ToLower();\n    assemblyIdentity.SetAttribute(\"publicKeyToken\", publicKeyToken);\n    assemblyIdentity.SetAttribute(\"culture\", \"neutral\");\n    dependentAssembly.AppendChild(assemblyIdentity);\n\n    var bindingRedirect = document.CreateElement(\"bindingRedirect\", \"urn:schemas-microsoft-com:asm.v1\");\n    bindingRedirect.SetAttribute(\"oldVersion\", $\"0.0.0.0-{assemblyName.Version}\");\n    bindingRedirect.SetAttribute(\"newVersion\", assemblyName.Version.ToString());\n    dependentAssembly.AppendChild(bindingRedirect);\n\n    return dependentAssembly;\n}\n\nstring PublishMonoBuild(string project, BuildEnvironment env, BuildPlan plan, string configuration)\n{\n    Information($\"Publishing Mono build for {project}...\");\n\n    var outputFolder = CombinePaths(env.Folders.ArtifactsPublish, project, \"mono\");\n\n    var buildFolder = CombinePaths(env.Folders.Bin, configuration, project, \"net472\");\n\n    DirectoryHelper.Copy(buildFolder, outputFolder, copySubDirectories: false);\n\n    CopyExtraDependencies(env, outputFolder);\n    UpdateBindingRedirects(outputFolder);\n\n    // Copy dependencies of Mono build\n    FileHelper.Copy(\n        source: CombinePaths(env.Folders.Tools, \"SQLitePCLRaw.core\", \"lib\", \"netstandard2.0\", \"SQLitePCLRaw.core.dll\"),\n        destination: CombinePaths(outputFolder, \"SQLitePCLRaw.core.dll\"),\n        overwrite: true);\n    FileHelper.Copy(\n        source: CombinePaths(env.Folders.Tools, \"SQLitePCLRaw.provider.e_sqlite3\", \"lib\", \"netstandard2.0\", \"SQLitePCLRaw.provider.e_sqlite3.dll\"),\n        destination: CombinePaths(outputFolder, \"SQLitePCLRaw.provider.e_sqlite3.dll\"),\n        overwrite: true);\n    FileHelper.Copy(\n        source: CombinePaths(env.Folders.Tools, \"SQLitePCLRaw.bundle_green\", \"lib\", \"netstandard2.0\", \"SQLitePCLRaw.batteries_v2.dll\"),\n        destination: CombinePaths(outputFolder, \"SQLitePCLRaw.batteries_v2.dll\"),\n        overwrite: true);\n\n    Package(project, \"mono\", outputFolder, env.Folders.ArtifactsPackage, env.Folders.DeploymentPackage);\n\n    return outputFolder;\n}\n\nstring PublishMonoBuildForPlatform(string project, MonoRuntime monoRuntime, BuildEnvironment env, BuildPlan plan)\n{\n    Information(\"Publishing platform-specific Mono build: {0}\", monoRuntime.PlatformName);\n\n    var outputFolder = CombinePaths(env.Folders.ArtifactsPublish, project, monoRuntime.PlatformName);\n\n    var sourceFolder = CombinePaths(env.Folders.ArtifactsPublish, project, \"mono\");\n    var omnisharpFolder = CombinePaths(outputFolder, \"omnisharp\");\n\n    DirectoryHelper.Copy(sourceFolder, omnisharpFolder, copySubDirectories: false);\n\n    var runScriptFile = CombinePaths(env.Folders.MonoPackaging, \"run\");\n    FileHelper.Copy(runScriptFile, CombinePaths(outputFolder, \"run\"), overwrite: true);\n    Run(\"chmod\", $\"+x \\\"{CombinePaths(outputFolder, \"run\")}\\\"\");\n\n    CopyExtraDependencies(env, outputFolder);\n    UpdateBindingRedirects(omnisharpFolder);\n\n    Package(project, monoRuntime.PlatformName, outputFolder, env.Folders.ArtifactsPackage, env.Folders.DeploymentPackage);\n\n    return outputFolder;\n}\n\nTask(\"PublishMonoBuilds\")\n    .IsDependentOn(\"Setup\")\n    .WithCriteria(() => !Platform.Current.IsWindows)\n    .Does(() =>\n{\n    foreach (var project in buildPlan.HostProjects)\n    {\n        var outputFolder = PublishMonoBuild(project, env, buildPlan, configuration);\n\n        CreateRunScript(project, outputFolder, env.Folders.ArtifactsScripts);\n\n        if (publishAll)\n        {\n            foreach (var monoRuntime in env.BuildMonoRuntimes)\n            {\n                PublishMonoBuildForPlatform(project, monoRuntime, env, buildPlan);\n            }\n        }\n    }\n});\n\nTask(\"PublishNet6Builds\")\n    .IsDependentOn(\"Setup\")\n    .Does(() =>\n{\n    foreach (var project in buildPlan.HostProjects)\n    {\n        if (publishAll)\n        {\n            if (Platform.Current.IsWindows)\n            {\n                PublishBuild(project, env, buildPlan, configuration, \"win7-x86\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"win7-x64\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"win10-arm64\", \"net6.0\");\n            }\n            else if (Platform.Current.IsMacOS)\n            {\n                PublishBuild(project, env, buildPlan, configuration, \"osx-x64\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"osx-arm64\", \"net6.0\");\n            }\n            else\n            {\n                PublishBuild(project, env, buildPlan, configuration, \"linux-x64\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"linux-arm64\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"linux-musl-x64\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"linux-musl-arm64\", \"net6.0\");\n            }\n        }\n        else if (Platform.Current.IsWindows)\n        {\n            if (Platform.Current.IsX86)\n            {\n                PublishBuild(project, env, buildPlan, configuration, \"win7-x86\", \"net6.0\");\n            }\n            else if (Platform.Current.IsX64)\n            {\n                PublishBuild(project, env, buildPlan, configuration, \"win7-x64\", \"net6.0\");\n            }\n            else\n            {\n                PublishBuild(project, env, buildPlan, configuration, \"win10-arm64\", \"net6.0\");\n            }\n        }\n        else\n        {\n            if (Platform.Current.IsMacOS)\n            {\n                PublishBuild(project, env, buildPlan, configuration, \"osx-x64\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"osx-arm64\", \"net6.0\");\n            }\n            else\n            {\n                PublishBuild(project, env, buildPlan, configuration, \"linux-x64\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"linux-arm64\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"linux-musl-x64\", \"net6.0\");\n                PublishBuild(project, env, buildPlan, configuration, \"linux-musl-arm64\", \"net6.0\");\n            }\n        }\n    }\n});\n\nstring PublishBuild(string project, BuildEnvironment env, BuildPlan plan, string configuration, string rid, string framework)\n{\n    var projectName = project + \".csproj\";\n    var projectFileName = CombinePaths(env.Folders.Source, project, projectName);\n    var outputFolder = CombinePaths(env.Folders.ArtifactsPublish, project, rid, framework);\n\n    Information(\"Publishing {0} for {1}...\", projectName, rid);\n\n    try\n    {\n        var publishSettings = new DotNetPublishSettings()\n        {\n            Framework = framework,\n            Runtime = rid, // TODO: With everything today do we need to publish this with a rid?  This appears to be legacy bit when we used to push for all supported dotnet core rids.\n            PublishReadyToRun = true, // Improve startup performance by applying some AOT compilation\n            SelfContained = false, // Since we are specifying a runtime identifier this defaults to true. We don't need to ship a runtime for net6 because we require the .NET SDK to be installed.\n            Configuration = configuration,\n            OutputDirectory = outputFolder,\n            MSBuildSettings = new DotNetMSBuildSettings()\n                .WithProperty(\"PackageVersion\", env.VersionInfo.NuGetVersion)\n                .WithProperty(\"AssemblyVersion\", env.VersionInfo.AssemblySemVer)\n                .WithProperty(\"FileVersion\", env.VersionInfo.AssemblySemVer)\n                .WithProperty(\"InformationalVersion\", env.VersionInfo.InformationalVersion)\n                .WithProperty(\"RuntimeFrameworkVersion\", \"6.0.0-preview.7.21317.1\") // Set the minimum runtime to a .NET 6 prerelease so that prerelease SDKs will be considered during rollForward.\n                .WithProperty(\"RollForward\", \"LatestMajor\"),\n            ToolPath = env.DotNetCommand,\n            WorkingDirectory = env.WorkingDirectory,\n            Verbosity = DotNetVerbosity.Minimal,\n        };\n        DotNetPublish(projectFileName, publishSettings);\n    }\n    catch\n    {\n        Error($\"Failed to publish {project} for {rid}\");\n        throw;\n    }\n\n    CopyExtraDependencies(env, outputFolder);\n    UpdateBindingRedirects(outputFolder);\n\n    var platformFolder = framework != \"net472\" ? $\"{rid}-{framework}\" : rid;\n    Package(project, platformFolder, outputFolder, env.Folders.ArtifactsPackage, env.Folders.DeploymentPackage);\n\n    return outputFolder;\n}\n\nTask(\"PublishWindowsBuilds\")\n    .WithCriteria(() => Platform.Current.IsWindows)\n    .IsDependentOn(\"Setup\")\n    .Does(() =>\n{\n    foreach (var project in buildPlan.HostProjects)\n    {\n        string outputFolder;\n\n        if (publishAll)\n        {\n            var outputFolderX86 = PublishBuild(project, env, buildPlan, configuration, \"win7-x86\", \"net472\");\n            var outputFolderX64 = PublishBuild(project, env, buildPlan, configuration, \"win7-x64\", \"net472\");\n            var outputFolderArm64 = PublishBuild(project, env, buildPlan, configuration, \"win10-arm64\", \"net472\");\n\n            outputFolder = Platform.Current.IsX86\n                ? outputFolderX86\n                : Platform.Current.IsX64\n                    ? outputFolderX64\n                    : outputFolderArm64;\n        }\n        else if (Platform.Current.IsX86)\n        {\n            outputFolder = PublishBuild(project, env, buildPlan, configuration, \"win7-x86\", \"net472\");\n        }\n        else if (Platform.Current.IsX64)\n        {\n            outputFolder = PublishBuild(project, env, buildPlan, configuration, \"win7-x64\", \"net472\");\n        }\n        else\n        {\n            outputFolder = PublishBuild(project, env, buildPlan, configuration, \"win10-arm64\", \"net472\");\n        }\n\n        CreateRunScript(project, outputFolder, env.Folders.ArtifactsScripts);\n    }\n});\n\nTask(\"PublishNuGet\")\n    .IsDependentOn(\"InstallDotNetSdk\")\n    .Does(() =>\n    {\n        DotNetPack(\".\", new DotNetPackSettings()\n        {\n            Configuration = \"Release\",\n            OutputDirectory = \"./artifacts/nuget/\",\n            MSBuildSettings = new DotNetMSBuildSettings()\n                .SetConfiguration(configuration)\n                .WithProperty(\"PackageVersion\", env.VersionInfo.NuGetVersion)\n                .WithProperty(\"AssemblyVersion\", env.VersionInfo.AssemblySemVer)\n                .WithProperty(\"FileVersion\", env.VersionInfo.AssemblySemVer)\n                .WithProperty(\"InformationalVersion\", env.VersionInfo.InformationalVersion),\n        });\n    });\n\nTask(\"Publish\")\n    .IsDependentOn(\"Build\")\n    .IsDependentOn(\"PublishMonoBuilds\")\n    .IsDependentOn(\"PublishNet6Builds\")\n    .IsDependentOn(\"PublishWindowsBuilds\")\n    .IsDependentOn(\"PublishNuGet\");\n\n/// <summary>\n///  Execute the run script.\n/// </summary>\nTask(\"ExecuteRunScript\")\n    .Does(() =>\n{\n    // TODO: Pass configuration into run script to ensure that MSBuild output paths are handled correctly.\n    // Otherwise, we get \"could not resolve output path\" messages when building for release.\n\n    foreach (var project in buildPlan.HostProjects)\n    {\n        var projectFolder = CombinePaths(env.Folders.Source, project);\n\n        var scriptPath = GetScriptPath(env.Folders.ArtifactsScripts, project);\n        var didNotExitWithError = Run(env.ShellCommand, $\"{env.ShellArgument} \\\"{scriptPath}\\\" -s \\\"{projectFolder}\\\"\",\n                                    new RunOptions(waitForIdle: true))\n                                .WasIdle;\n        if (!didNotExitWithError)\n        {\n            throw new Exception($\"Failed to run {scriptPath}\");\n        }\n    }\n});\n\n/// <summary>\n///  Quick build.\n/// </summary>\nTask(\"Quick\")\n    .IsDependentOn(\"Cleanup\")\n    .IsDependentOn(\"Publish\");\n\n/// <summary>\n///  Clean install path.\n/// </summary>\nTask(\"CleanupInstall\")\n    .Does(() =>\n{\n    DirectoryHelper.ForceCreate(installFolder);\n});\n\n/// <summary>\n///  Quick build + install.\n/// </summary>\nTask(\"Install\")\n    .IsDependentOn(\"Cleanup\")\n    .IsDependentOn(\"Publish\")\n    .IsDependentOn(\"CleanupInstall\")\n    .Does(() =>\n{\n    foreach (var project in buildPlan.HostProjects)\n    {\n        string platform;\n        if (Platform.Current.IsWindows)\n        {\n            platform = Platform.Current.IsX86\n                ? \"win7-x86\"\n                : Platform.Current.IsX64\n                    ? \"win7-x64\"\n                    : \"win10-arm64\";\n        }\n        else\n        {\n            platform = \"mono\";\n        }\n\n        var outputFolder = PathHelper.GetFullPath(CombinePaths(env.Folders.ArtifactsPublish, project, platform));\n        var targetFolder = PathHelper.GetFullPath(CombinePaths(installFolder));\n\n        DirectoryHelper.Copy(outputFolder, targetFolder);\n\n        CreateRunScript(project, installFolder, env.Folders.ArtifactsScripts);\n\n        Information($\"OmniSharp is installed locally at {installFolder}\");\n    }\n});\n\n/// <summary>\n///  Full build and execute script at the end.\n/// </summary>\nTask(\"All\")\n    .IsDependentOn(\"Cleanup\")\n    .IsDependentOn(\"Build\")\n    .IsDependentOn(\"Test\")\n    .IsDependentOn(\"Publish\")\n    .IsDependentOn(\"ExecuteRunScript\");\n\n/// <summary>\n///  Default Task aliases to All.\n/// </summary>\nTask(\"Default\")\n    .IsDependentOn(\"All\");\n\n/// <summary>\n///  Task aliases for CI (excluding tests) as they are parallelized\n/// </summary>\nTask(\"CI\")\n    .IsDependentOn(\"Cleanup\")\n    .IsDependentOn(\"Build\")\n    .IsDependentOn(\"Publish\")\n    .IsDependentOn(\"ExecuteRunScript\");\n\nTeardown(context =>\n{\n    // Ensure that we shutdown all build servers used by the CLI during build.\n    Run(env.DotNetCommand, \"build-server shutdown\");\n});\n\n/// <summary>\n///  Default to All.\n/// </summary>\nRunTarget(target);\n"
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 0.078125,
          "content": "@echo off\npowershell.exe -NoProfile -ExecutionPolicy Bypass %~dp0build.ps1 \"%*\"\n"
        },
        {
          "name": "build.json",
          "type": "blob",
          "size": 1.6220703125,
          "content": "{\n    \"DotNetInstallScriptURL\": \"https://dot.net/v1\",\n    \"DotNetChannel\": \"Preview\",\n    \"DotNetVersions\": [\n        \"6.0.203\",\n        \"7.0.410\",\n        \"8.0.303\",\n        \"9.0.101\"\n    ],\n    \"RequiredMonoVersion\": \"6.6.0\",\n    \"DownloadURL\": \"https://roslynomnisharp.blob.core.windows.net/ext\",\n    \"HostProjects\": [\n        \"OmniSharp.Stdio.Driver\",\n        \"OmniSharp.Http.Driver\"\n    ],\n    \"TestProjects\": [\n        \"OmniSharp.MSBuild.Tests\",\n        \"OmniSharp.Roslyn.CSharp.Tests\",\n        \"OmniSharp.Lsp.Tests\",\n        \"OmniSharp.DotNetTest.Tests\",\n        \"OmniSharp.Script.Tests\",\n        \"OmniSharp.Cake.Tests\",\n        \"OmniSharp.Http.Tests\",\n        \"OmniSharp.Stdio.Tests\",\n        \"OmniSharp.Tests\"\n    ],\n    \"TestAssets\": [\n        \"NUnitTestProject\",\n        \"XunitTestProject\",\n        \"MSTestProject\",\n        \"ProjectAndSolution\",\n        \"ProjectAndSolutionWithGlobs\",\n        \"ProjectAndSolutionWithProjectSection\",\n        \"TwoProjectsWithSolution\",\n        \"ProjectWithGeneratedFile\",\n        \"CSharpAndFSharp\",\n        \"ProjectWithMismatchedFileName\",\n        \"SolutionWithSignedProject\",\n        \"ProjectWithMultiTFMLib\",\n        \"ExternAlias\",\n        \"ProjectWithComplexAnalyzers\",\n        \"ProjectWithDisabledAnalyzers\",\n        \"ProjectWithDisabledAnalyzers2\",\n        \"ProjectWithAnalyzers\",\n        \"ProjectWithAnalyzersAndEditorConfig\",\n        \"ProjectWithParentEditorConfig\",\n        \"TwoProjectsWithAnalyzerSuppressor\"\n    ],\n    \"CakeTestAssets\": [\n        \"CakeProject\"\n    ],\n    \"WindowsOnlyTestAssets\": [\n        \"AntlrGeneratedFiles\"\n    ],\n    \"RestoreOnlyTestAssets\": [\n        \"ProjectWithMissingType\"\n    ]\n}\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 5.4833984375,
          "content": "##########################################################################\n# This is the Cake bootstrapper script for PowerShell.\n# This file was downloaded from https://github.com/cake-build/resources\n# Feel free to change this file to fit your needs.\n##########################################################################\n\n<#\n\n.SYNOPSIS\nThis is a Powershell script to bootstrap a Cake build.\n\n.DESCRIPTION\nThis Powershell script will download NuGet if missing, restore NuGet tools (including Cake)\nand execute your Cake build script with the parameters you provide.\n\n.PARAMETER Script\nThe build script to execute.\n.PARAMETER Target\nThe build script target to run.\n.PARAMETER Configuration\nThe build configuration to use.\n.PARAMETER Verbosity\nSpecifies the amount of information to be displayed.\n.PARAMETER UseDotNetTest\nRun tests against the .NET SDK build of OmniSharp\n.PARAMETER ScriptArgs\nRemaining arguments are added here.\n\n.LINK\nhttps://cakebuild.net\n\n#>\n\n[CmdletBinding()]\nParam(\n    [parameter(position = 0)]\n    [string]$Target = \"Default\",\n    [string]$Script = \"build.cake\",\n    [string]$Configuration,\n    [ValidateSet(\"Quiet\", \"Minimal\", \"Normal\", \"Verbose\", \"Diagnostic\")]\n    [string]$Verbosity,\n    [switch]$UseDotNetTest,\n    [Parameter(Position = 0, Mandatory = $false, ValueFromRemainingArguments = $true)]\n    [string[]]$ScriptArgs\n)\n\n[Reflection.Assembly]::LoadWithPartialName(\"System.Security\") | Out-Null\nfunction MD5HashFile([string] $filePath) {\n    if ([string]::IsNullOrEmpty($filePath) -or !(Test-Path $filePath -PathType Leaf)) {\n        return $null\n    }\n\n    [System.IO.Stream] $file = $null;\n    [System.Security.Cryptography.MD5] $md5 = $null;\n    try {\n        $md5 = [System.Security.Cryptography.MD5]::Create()\n        $file = [System.IO.File]::OpenRead($filePath)\n        return [System.BitConverter]::ToString($md5.ComputeHash($file))\n    }\n    finally {\n        if ($file -ne $null) {\n            $file.Dispose()\n        }\n    }\n}\n\nfunction GetProxyEnabledWebClient {\n    $wc = New-Object System.Net.WebClient\n    $proxy = [System.Net.WebRequest]::GetSystemWebProxy()\n    $proxy.Credentials = [System.Net.CredentialCache]::DefaultCredentials\n    $wc.Proxy = $proxy\n    return $wc\n}\n\nWrite-Host \"Preparing to run build script...\"\n\nif (!$PSScriptRoot) {\n    $PSScriptRoot = Split-Path $MyInvocation.MyCommand.Path -Parent\n}\n\n$TOOLS_DIR = Join-Path $PSScriptRoot \"tools\"\n$NUGET_EXE = Join-Path $TOOLS_DIR \"nuget.exe\"\n$NUGET_URL = \"https://dist.nuget.org/win-x86-commandline/latest/nuget.exe\"\n$PACKAGES_CONFIG = Join-Path $TOOLS_DIR \"packages.config\"\n$PACKAGES_CONFIG_MD5 = Join-Path $TOOLS_DIR \"packages.config.md5sum\"\n\n# Make sure tools folder exists\nif ((Test-Path $PSScriptRoot) -and !(Test-Path $TOOLS_DIR)) {\n    Write-Verbose -Message \"Creating tools directory...\"\n    New-Item -Path $TOOLS_DIR -Type directory | out-null\n}\n\n# Make sure that packages.config exist.\nif (!(Test-Path $PACKAGES_CONFIG)) {\n    Write-Verbose -Message \"Downloading packages.config...\"\n    try {\n        $wc = GetProxyEnabledWebClient\n        $wc.DownloadFile(\"https://cakebuild.net/download/bootstrapper/packages\", $PACKAGES_CONFIG)\n    }\n    catch {\n        Throw \"Could not download packages.config.\"\n    }\n}\n\n# Try find NuGet.exe in path if not exists\nif (!(Test-Path $NUGET_EXE)) {\n    Write-Verbose -Message \"Trying to find nuget.exe in PATH...\"\n    $existingPaths = $Env:Path -Split ';' | Where-Object { (![string]::IsNullOrEmpty($_)) -and (Test-Path $_ -PathType Container) }\n    $NUGET_EXE_IN_PATH = Get-ChildItem -Path $existingPaths -Filter \"nuget.exe\" | Select -First 1\n    if ($NUGET_EXE_IN_PATH -ne $null -and (Test-Path $NUGET_EXE_IN_PATH.FullName)) {\n        Write-Verbose -Message \"Found in PATH at $($NUGET_EXE_IN_PATH.FullName).\"\n        $NUGET_EXE = $NUGET_EXE_IN_PATH.FullName\n    }\n}\n\n# Try download NuGet.exe if not exists\nif (!(Test-Path $NUGET_EXE)) {\n    Write-Verbose -Message \"Downloading NuGet.exe...\"\n    try {\n        $wc = GetProxyEnabledWebClient\n        $wc.DownloadFile($NUGET_URL, $NUGET_EXE)\n    }\n    catch {\n        Throw \"Could not download NuGet.exe.\"\n    }\n}\n\n# Save nuget.exe path to environment to be available to child processed\n$ENV:NUGET_EXE = $NUGET_EXE\n\n# Restore tools from NuGet\nif (Test-Path $PACKAGES_CONFIG) {\n    Push-Location\n    Set-Location $TOOLS_DIR\n\n    # Check for changes in packages.config and remove installed tools if true.\n    [string] $md5Hash = MD5HashFile($PACKAGES_CONFIG)\n    if ((!(Test-Path $PACKAGES_CONFIG_MD5)) -Or\n        ($md5Hash -ne (Get-Content $PACKAGES_CONFIG_MD5 ))) {\n        Write-Verbose -Message \"Missing or changed package.config hash...\"\n        Remove-Item * -Recurse -Exclude packages.config, nuget.exe\n    }\n\n    Write-Verbose -Message \"Restoring tools from NuGet...\"\n    $NuGetOutput = Invoke-Expression \"&`\"$NUGET_EXE`\" install -ExcludeVersion -OutputDirectory `\"$TOOLS_DIR`\"\"\n\n    if ($LASTEXITCODE -ne 0) {\n        Throw \"An error occurred while restoring NuGet tools.\"\n    }\n    else {\n        $md5Hash | Out-File $PACKAGES_CONFIG_MD5 -Encoding \"ASCII\"\n    }\n    Write-Verbose -Message ($NuGetOutput | out-string)\n\n    Pop-Location\n}\n\ndotnet tool restore\n\n# Build Cake arguments\n$cakeArguments = @(\"$Script\");\nif ($Target) { $cakeArguments += \"--target=$Target\" }\nif ($Configuration) { $cakeArguments += \"--configuration=$Configuration\" }\nif ($Verbosity) { $cakeArguments += \"--verbosity=$Verbosity\" }\nif ($UseDotNetTest) { $cakeArguments += \"--use-dotnet-test\" }\n$cakeArguments += $ScriptArgs\n\n# Start Cake\nWrite-Host \"Running build script...\"\ndotnet cake $cakeArguments\nexit $LASTEXITCODE\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 2.625,
          "content": "#!/bin/bash\n\n# Define default arguments.\nSCRIPT=\"build.cake\"\nTARGET=\"Default\"\nCONFIGURATION=\"Release\"\nVERBOSITY=\"Verbose\"\nSCRIPT_ARGUMENTS=()\n\n# Parse arguments.\nfor i in \"$@\"; do\n    case $1 in\n        -s|--script) SCRIPT=\"$2\"; shift ;;\n        -t|--target) TARGET=\"$2\"; shift ;;\n        -c|--configuration) CONFIGURATION=\"$2\"; shift ;;\n        -v|--verbosity) VERBOSITY=\"$2\"; shift ;;\n        --) shift; SCRIPT_ARGUMENTS+=(\"$@\"); break ;;\n        *) SCRIPT_ARGUMENTS+=(\"$1\") ;;\n    esac\n    shift\ndone\n\n# Define md5sum or md5 depending on Linux/OSX\nMD5_EXE=\nif [[ \"$(uname -s)\" == \"Darwin\" ]]; then\n    MD5_EXE=\"md5 -r\"\nelse\n    MD5_EXE=\"md5sum\"\nfi\n\necho \"Preparing to run build script...\"\n\n# Define directories.\nROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\nTOOLS_DIR=$ROOT_DIR/tools\nNUGET_EXE=$TOOLS_DIR/nuget.exe\nPACKAGES_CONFIG=$TOOLS_DIR/packages.config\nPACKAGES_CONFIG_MD5=$TOOLS_DIR/packages.config.md5sum\n\n# Make sure the tools folder exist.\nif [ ! -d \"$TOOLS_DIR\" ]; then\n  echo \"Creating tools directory...\"\n  mkdir \"$TOOLS_DIR\"\nfi\n\n# Make sure that packages.config exist.\nif [ ! -f \"$PACKAGES_CONFIG\" ]; then\n    echo \"Downloading packages.config...\"\n    curl -Lsfo \"$PACKAGES_CONFIG\" https://cakebuild.net/download/bootstrapper/packages\n    if [ $? -ne 0 ]; then\n        echo \"An error occurred while downloading packages.config.\"\n        exit 1\n    fi\nfi\n\n# Download NuGet if it does not exist.\nif [ ! -f \"$NUGET_EXE\" ]; then\n    echo \"Downloading NuGet...\"\n    curl -Lsfo \"$NUGET_EXE\" https://dist.nuget.org/win-x86-commandline/latest/nuget.exe\n    if [ $? -ne 0 ]; then\n        echo \"An error occurred while downloading nuget.exe.\"\n        exit 1\n    fi\nfi\n\n# Restore tools from NuGet.\nif [ -f \"$PACKAGES_CONFIG\" ]; then\n    pushd \"$TOOLS_DIR\" >/dev/null\n\n    # Check for changes in packages.config and remove installed tools if true.\n    if [ ! -f \"$PACKAGES_CONFIG_MD5\" ] || [ \"$( cat \"$PACKAGES_CONFIG_MD5\" | sed 's/\\r$//' )\" != \"$( $MD5_EXE \"$PACKAGES_CONFIG\" | awk '{ print $1 }' )\" ]; then\n        find . -type d ! -name . | xargs rm -rf\n    fi\n\n    echo \"Restoring tools from NuGet...\"\n    mono \"$NUGET_EXE\" install -ExcludeVersion\n    if [ $? -ne 0 ]; then\n        echo \"An error occurred while restoring NuGet tools.\"\n        exit 1\n    else\n        $MD5_EXE \"$PACKAGES_CONFIG\" | awk '{ print $1 }' >| \"$PACKAGES_CONFIG_MD5\"\n    fi\n\n    popd >/dev/null\nfi\n\ndotnet tool restore\n\n# Build Cake arguments\nCAKE_ARGUMENTS=($SCRIPT);\nCAKE_ARGUMENTS+=(\"--target=$TARGET\");\nCAKE_ARGUMENTS+=(\"--configuration=$CONFIGURATION\")\nCAKE_ARGUMENTS+=(\"--verbosity=$VERBOSITY\")\nCAKE_ARGUMENTS+=(${SCRIPT_ARGUMENTS[@]})\n\n# Start Cake\ndotnet cake \"${CAKE_ARGUMENTS[@]}\"\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.087890625,
          "content": "{\n    \"sdk\": {\n        \"version\": \"8.0.303\",\n        \"rollForward\": \"latestMinor\"\n    }\n}\n"
        },
        {
          "name": "license.md",
          "type": "blob",
          "size": 1.078125,
          "content": "MIT License\n\nCopyright (c) .NET Foundation and Contributors\nAll Rights Reserved\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "mono-packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "omnisharp.json",
          "type": "blob",
          "size": 0.375,
          "content": "{\r\n    \"script\": {\r\n        \"enableScriptNuGetReferences\": true,\r\n        \"defaultTargetFramework\": \"net6.0\"\r\n    },\r\n    \"FormattingOptions\": {\r\n        \"enableEditorConfigSupport\": true\r\n    },\r\n    \"RoslynExtensionsOptions\": {\r\n        \"enableAnalyzersSupport\": true,\r\n        \"enableDecompilationSupport\": true\r\n    },\r\n    \"SDK\": {\r\n        \"includePrereleases\": true\r\n    }\r\n}\r\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}