{
  "metadata": {
    "timestamp": 1736710887108,
    "page": 461,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "natemcmaster/CommandLineUtils",
      "stars": 2230,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 4.92578125,
          "content": "root = true\n\n[*]\nindent_style             = space\ntrim_trailing_whitespace = true\ninsert_final_newline     = true\n\n[*.{xml,csproj,props,targets,config}]\nindent_size = 2\n\n[*.json]\nindent_size = 2\n\n[*.yml]\nindent_size = 2\n\n[*.cs]\nindent_size                                                            = 4\n\n# Style I care about\ncsharp_style_expression_bodied_constructors                            = false\ncsharp_prefer_braces                                                   = true\ndotnet_sort_system_directives_first                                    = true\ncsharp_using_directive_placement                                       = outside_namespace\n\n# Stuff that is usually best\ncsharp_style_inlined_variable_declaration                              = true\ncsharp_style_var_elsewhere                                             = true\ncsharp_space_after_cast                                                = false\ncsharp_style_pattern_matching_over_as_with_null_check                  = true\ncsharp_style_pattern_matching_over_is_with_cast_check                  = true\ncsharp_style_var_for_built_in_types                                    = true\ncsharp_style_var_when_type_is_apparent                                 = true\ncsharp_new_line_before_catch                                           = true\ncsharp_new_line_before_else                                            = true\ncsharp_new_line_before_finally                                         = true\ncsharp_indent_case_contents                                            = true\ncsharp_new_line_before_open_brace                                      = all\ncsharp_indent_switch_labels                                            = true\ncsharp_indent_labels                                                   = one_less_than_current\ncsharp_prefer_simple_default_expression                                = true\ncsharp_preserve_single_line_blocks                                     = true\ncsharp_preserve_single_line_statements                                 = true\n\n# Good defaults, but not always\ndotnet_style_object_initializer                                        = true\ncsharp_style_expression_bodied_indexers                                = true\ncsharp_style_expression_bodied_accessors                               = true\ncsharp_style_throw_expression                                          = true\n\n# Default severity for analyzer diagnostics with category 'Style' (escalated to build warnings)\n# dotnet_analyzer_diagnostic.category-Style.severity                     = suggestion\n\n# Required naming style\ndotnet_diagnostic.IDE0006.severity = error\n\n# suppress warning aboud unused methods\ndotnet_diagnostic.IDE0051.severity = none\n\n# Missing required header\ndotnet_diagnostic.IDE0073.severity = error\n\n# Remove unnecessary parenthesis\ndotnet_diagnostic.IDE0047.severity = warning\n\n# Parenthesis added for clarity\ndotnet_diagnostic.IDE0048.severity = warning\n\n# Naming styles\n\n## Constants are PascalCase\ndotnet_naming_style.pascal_case.capitalization                         = pascal_case\n\ndotnet_naming_symbols.const.applicable_kinds                       = field, property\ndotnet_naming_symbols.const.applicable_accessibilities             = *\ndotnet_naming_symbols.const.required_modifiers                     = const\n\ndotnet_naming_rule.constants_should_be_pascale_case.symbols            = const\ndotnet_naming_rule.constants_should_be_pascale_case.style              = pascal_case\ndotnet_naming_rule.constants_should_be_pascale_case.severity           = error\n\n## Private static fields start with s_\ndotnet_naming_style.s_underscore_camel_case.required_prefix            = s_\ndotnet_naming_style.s_underscore_camel_case.capitalization             = camel_case\n\ndotnet_naming_symbols.private_static_fields.applicable_kinds           = field\ndotnet_naming_symbols.private_static_fields.applicable_accessibilities = private\ndotnet_naming_symbols.private_static_fields.required_modifiers         = static\n\ndotnet_naming_rule.private_static_fields_should_be_underscore.symbols  = private_static_fields\ndotnet_naming_rule.private_static_fields_should_be_underscore.style    = s_underscore_camel_case\ndotnet_naming_rule.private_static_fields_should_be_underscore.severity = error\n\n## Private fields are _camelCase\ndotnet_naming_style.underscore_camel_case.required_prefix              = _\ndotnet_naming_style.underscore_camel_case.capitalization               = camel_case\n\ndotnet_naming_symbols.private_fields.applicable_kinds                  = field\ndotnet_naming_symbols.private_fields.applicable_accessibilities        = private\n\ndotnet_naming_rule.private_fields_should_be_underscore.symbols         = private_fields\ndotnet_naming_rule.private_fields_should_be_underscore.style           = underscore_camel_case\ndotnet_naming_rule.private_fields_should_be_underscore.severity        = error\n\n# File header\nfile_header_template = Copyright (c) Nate McMaster.\\nLicensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.84375,
          "content": "*.doc  diff=astextplain\n*.DOC\tdiff=astextplain\n*.docx\tdiff=astextplain\n*.DOCX\tdiff=astextplain\n*.dot\tdiff=astextplain\n*.DOT\tdiff=astextplain\n*.pdf\tdiff=astextplain\n*.PDF\tdiff=astextplain\n*.rtf\tdiff=astextplain\n*.RTF\tdiff=astextplain\n\n*.jpg  \tbinary\n*.png \tbinary\n*.gif \tbinary\n\n*.cs text=auto diff=csharp \n*.vb text=auto\n*.resx text=auto\n*.c text=auto\n*.cpp text=auto\n*.cxx text=auto\n*.h text=auto\n*.hxx text=auto\n*.py text=auto\n*.rb text=auto\n*.java text=auto\n*.html text=auto\n*.htm text=auto\n*.css text=auto\n*.scss text=auto\n*.sass text=auto\n*.less text=auto\n*.js text=auto\n*.lisp text=auto\n*.clj text=auto\n*.sql text=auto\n*.php text=auto\n*.lua text=auto\n*.m text=auto\n*.asm text=auto\n*.erl text=auto\n*.fs text=auto\n*.fsx text=auto\n*.hs text=auto\n\n*.csproj text=auto\n*.vbproj text=auto\n*.fsproj text=auto\n*.dbproj text=auto\n*.sln text=auto eol=crlf\n\n*.sh eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4208984375,
          "content": "[Oo]bj/\n[Bb]in/\nTestResults/\n.nuget/\n.testPublish/\n*.sln.ide/\n_ReSharper.*/\npackages/\nartifacts/\nPublishProfiles/\n.vs/\nbower_components/\nnode_modules/\n**/wwwroot/lib/\ndebugSettings.json\nproject.lock.json\n*.user\n*.suo\n*.cache\n*.docstates\n_ReSharper.*\n*.exe\n*.psess\n*.vsp\n*.pidb\n*.userprefs\n*DS_Store\n*.ncrunchsolution\n*.*sdf\n*.ipch\n.settings\n*.sln.ide\nnode_modules/\n**/[Cc]ompiler/[Rr]esources/**/*.js\n.vscode/\n.idea/\n*.iml\n.build/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 26.9345703125,
          "content": "# Changelog\n\n[Unreleased changes](https://github.com/natemcmaster/CommandLineUtils/compare/v4.0.2...HEAD):\n\n## [v4.0.2](https://github.com/natemcmaster/CommandLineUtils/compare/v4.0.1...v4.0.2)\n\n### Fixes\n* @ernstc: bugfix: added check on the model type before it proceeds accessing the property ([#519])\n\n[#519]: https://github.com/natemcmaster/CommandLineUtils/pull/519\n\n## [v4.0.1](https://github.com/natemcmaster/CommandLineUtils/compare/v4.0.0...v4.0.1)\n\n### Fixes\n\n* [@xoofx]: use explicit constructors on validation attributes to workaround .NET 6 runtime trimming error ([#491])\n* [@jakubqwe]: support the Description field of VersionOptionFromMemberAttribute ([#490])\n\n[#490]: https://github.com/natemcmaster/CommandLineUtils/pull/490\n[#491]: https://github.com/natemcmaster/CommandLineUtils/pull/491\n\n## [v4.0.0](https://github.com/natemcmaster/CommandLineUtils/compare/v3.1.0...v4.0.0)\n\n### Features\n* [@scott-xu] and [@natemcmaster]: feature: add API for setting default value on options and arguments, and display them in help text ([#389] and [#420])\n* [@natemcmaster]: cleanup: make .Values read-only on CommandArgument/Option ([#406])\n* [@natemcmaster]: Make options, arguments, and commands read-only collections on CommandLineApplication ([#407])\n\n### Fixes\n* [@natemcmaster]: fix: pass the generic argument version in callback on .Option() and Argument() ([#405])\n* [@natemcmaster]: add .NET Standard 2.1 and fix nullable type references ([#424] and [#425])\n* [@natemcmaster]: fix new CI to correctly publish symbols to nuget.org\n* [@scott-xu]:  show option types in help text when OptionAttribute.Template is set ([#429])\n* [@skirchner989]:  change to not throw when a validator is not of type AttributeValidator ([#431])\n* [@natemcmaster]: don't mask OperationCanceledException triggered by SIGINT ([#483])\n\n[#429]: https://github.com/natemcmaster/CommandLineUtils/pull/429\n[#431]: https://github.com/natemcmaster/CommandLineUtils/pull/431\n[#484]: https://github.com/natemcmaster/CommandLineUtils/pull/484\n\n\n### Other\n* [@natemcmaster]: change from Azure DevOps to GitHub workflows\n\n[#389]: https://github.com/natemcmaster/CommandLineUtils/pull/389\n[#405]: https://github.com/natemcmaster/CommandLineUtils/pull/405\n[#406]: https://github.com/natemcmaster/CommandLineUtils/pull/406\n[#407]: https://github.com/natemcmaster/CommandLineUtils/pull/407\n[#420]: https://github.com/natemcmaster/CommandLineUtils/pull/420\n[#424]: https://github.com/natemcmaster/CommandLineUtils/pull/424\n[#425]: https://github.com/natemcmaster/CommandLineUtils/pull/425\n\n## [v3.1.0](https://github.com/natemcmaster/CommandLineUtils/compare/v3.0.0...v3.1.0)\n\n### Improvements\n\n* [@scott-xu]: Show allowed values in help text ([#369])\n* [@scott-xu]: Generic Hosting: add overload of RunCommandLineApplicationAsync to support configuring of CommandLineApplication<T> ([#363])\n* [@danielmeza]: implement API on host builder to fetch CommandLineContext from non DI contexts ([#368])\n* [@hellfirehd] and [@cbcrouse]: feature: add API to allow calling UseCommandLineApplication&lt;TApp&gt; prior to Run*Async() ([#409] and [#415])\n\n### Bug fixes\n* [@natemcmaster]: ensure clustering options is detected correctly when subcommands added via AddSubcommand ([#393])\n* [@scott-xu]: make UnrecognizedArgumentHandling per command scope ([#371])\n* [@scott-xu]: show allowed values in help text correctly when multiple `AllowedValuesAttribute` are used ([#375])\n* [@scott-xu]: show allowed values in help text for Nullable/ValueTuple<bool,T> option/argument ([#390])\n* [@scott-xu]: update help text to show allowed values from `AllowedValues` attribute instead of Enum values ([#391])\n\n### Docs\n* [@chaami]: Fix Readme.md on Prompt.GetYesNo ([#402])\n* [@cuperman007] docs: added using statements to code sample in index.md ([#384])\n* [@scott-xu]: Fix broken links in docs ([#377])\n* [@scott-xu]: cleanup: add a period to end sentences for built-in descriptions ([#364])\n\n### Other\n\n* [@natemcmaster]: Change default branch to 'main' ([#373])\n* [@natemcmaster]: Stop code signing binaries and packages ([#379])\n* [@natemcmaster]: add dotnet-format to CI, and other code/project file cleanups\n\n\n[#363]: https://github.com/natemcmaster/CommandLineUtils/pull/363\n[#364]: https://github.com/natemcmaster/CommandLineUtils/pull/364\n[#367]: https://github.com/natemcmaster/CommandLineUtils/pull/367\n[#368]: https://github.com/natemcmaster/CommandLineUtils/pull/368\n[#369]: https://github.com/natemcmaster/CommandLineUtils/pull/369\n[#371]: https://github.com/natemcmaster/CommandLineUtils/pull/371\n[#373]: https://github.com/natemcmaster/CommandLineUtils/pull/373\n[#375]: https://github.com/natemcmaster/CommandLineUtils/pull/375\n[#377]: https://github.com/natemcmaster/CommandLineUtils/pull/377\n[#379]: https://github.com/natemcmaster/CommandLineUtils/pull/379\n[#384]: https://github.com/natemcmaster/CommandLineUtils/pull/384\n[#390]: https://github.com/natemcmaster/CommandLineUtils/pull/390\n[#391]: https://github.com/natemcmaster/CommandLineUtils/pull/391\n[#393]: https://github.com/natemcmaster/CommandLineUtils/pull/393\n[#402]: https://github.com/natemcmaster/CommandLineUtils/pull/402\n[#409]: https://github.com/natemcmaster/CommandLineUtils/pull/409\n[#415]: https://github.com/natemcmaster/CommandLineUtils/pull/415\n\n## [v3.0.0](https://github.com/natemcmaster/CommandLineUtils/compare/v2.6.0...v3.0.0)\n\n### Improvements\n\n* [@AlexeyEvlampiev] - implement support for GUID command line options ([#333]) and any other type that TypeConverter supports ([#62])\n* [@vpkopylov] - Added support for using the 'builder API' with generic host ([#351])\n* [@natemcmaster] - Disabled the pager for help text by default. To re-enable, set UsePagerForHelpText = true. ([#346])\n* [@natemcmaster] - Fix PlatformNotSupportedException on Xamarin of macOS ([#344])\n\n### Breaking changes\n\nSee <https://natemcmaster.github.io/CommandLineUtils/v3.0/upgrade-guide.html> for more details.\n\n* Fix [#251] by [@mattnischan] - remove API that was marked as obsolete in 2.x releases\n* Fix [#294] by [@natemcmaster] - change dependencies on McMaster.Extensions.Hosting.CommandLine to just use Microsoft.Extensions.Hosting.Abstractions\n* Fix [#337] by [@natemcmaster] - removed .NET Standard 1.6 target from library\n\n[@AlexeyEvlampiev]: https://github.com/AlexeyEvlampiev\n[@mattnischan]: https://github.com/mattnischan\n[@natemcmaster]: https://github.com/natemcmaster\n\n[#62]: https://github.com/natemcmaster/CommandLineUtils/issues/62\n[#251]: https://github.com/natemcmaster/CommandLineUtils/issues/251\n[#294]: https://github.com/natemcmaster/CommandLineUtils/issues/294\n[#337]: https://github.com/natemcmaster/CommandLineUtils/issues/337\n[#333]: https://github.com/natemcmaster/CommandLineUtils/issues/333\n[#344]: https://github.com/natemcmaster/CommandLineUtils/issues/344\n[#346]: https://github.com/natemcmaster/CommandLineUtils/issues/346\n[#351]: https://github.com/natemcmaster/CommandLineUtils/pull/351\n\n## [v2.6.0](https://github.com/natemcmaster/CommandLineUtils/compare/v2.5.1...v2.6.0)\n\n* Refactor: obsolete throwOnUnexpectedArg in favor of UnrecognizedArgumentHandling. See https://github.com/natemcmaster/CommandLineUtils/issues/339 for details\n\n## [v2.5.1](https://github.com/natemcmaster/CommandLineUtils/compare/v2.5.0...v2.5.1)\n\n* Fix [#320] - lazy load command object types to reduce unnecessary allocations\n\n[#320]: https://github.com/natemcmaster/CommandLineUtils/issues/320\n\n## [v2.5.0](https://github.com/natemcmaster/CommandLineUtils/compare/v2.4.4...v2.5.0)\n\n* Fix [#92] by [@kbilsted] - Show enum names in help text for Options and Arguments stored as enum\n* Fix [#287] by [@Alxandr] - Add support for private base type options\n* Fix [#303] by [@AndreGleichner] - Update generated help to display [command] first then [options]\n* Fix [#307] by [@daveMueller] - Update help text generator to display HelpOption correctly\n\n[@kbilsted]: https://github.com/kbilsted\n[@Alxandr]: https://github.com/Alxandr\n[@AndreGleichner]: https://github.com/AndreGleichner\n[@daveMueller]: https://github.com/daveMueller\n[#92]: https://github.com/natemcmaster/CommandLineUtils/issues/92\n[#287]: https://github.com/natemcmaster/CommandLineUtils/issues/287\n[#303]: https://github.com/natemcmaster/CommandLineUtils/issues/303\n[#307]: https://github.com/natemcmaster/CommandLineUtils/issues/307\n\n## [v2.4.4](https://github.com/natemcmaster/CommandLineUtils/compare/v2.4.3...v2.4.4)\n\n* Fix [#302] - fix regression introduced in 2.4.2 which caused Ctrl+C handling not to terminate the process quickly\n\n[#302]: https://github.com/natemcmaster/CommandLineUtils/issues/302\n\n## [v2.4.3](https://github.com/natemcmaster/CommandLineUtils/compare/v2.4.2...v2.4.3)\n\n* Fix [#292] by [@thomaslevesque] - fix deadlock when `Environment.Exit` is called\n\n[#292]: https://github.com/natemcmaster/CommandLineUtils/issues/292\n[@thomaslevesque]: https://github.com/thomaslevesque\n\n## [v2.4.2](https://github.com/natemcmaster/CommandLineUtils/compare/v2.4.1...v2.4.2)\n\n* Fix [#286] - fix deadlock in CTRL+C handling on Windows\n\n[#286]: https://github.com/natemcmaster/CommandLineUtils/issues/286\n\n## [v2.4.1](https://github.com/natemcmaster/CommandLineUtils/compare/v2.4.0...v2.4.1)\n\n* Fix [#277] - workaround a bug in NuGet's 'deterministic packaging' feature which causes issues based on your timezone\n\n[#277]: https://github.com/natemcmaster/CommandLineUtils/issues/277\n\n## [v2.4.0](https://github.com/natemcmaster/CommandLineUtils/compare/v2.3.4...v2.4.0)\n\n* Fix [#227] by [@ejball] - ArgumentEscaper should escape empty string\n* PR [#230] by [@IanG] - Attributes for files and directories that must not exist\n* Fix [#221] by [@vpkopylov] - Use Pager for help text option only works on top-level help\n* PR [#239] by [@vpkopylov] - Add check for subcommand cycle\n* Support C# 8.0 and nullable reference types - [#245]\n* Add async methods to CommandLineApplication\n* Fix [#208] - make `CommandLineApplication.ExecuteAsync` actually asynchronous\n* Fix [#153] - add async methods that accept cancellation tokens\n* Fix [#111] - Handle CTRL+C by default\n* Fix [#246] by [@kyle-rader] - Multi-line option descriptions do not indent correctly\n* Fix [#253] - support calling CommandLineApplication.Execute multiple times\n\n[#246]: https://github.com/natemcmaster/CommandLineUtils/issues/246\n[#111]: https://github.com/natemcmaster/CommandLineUtils/issues/111\n[#153]: https://github.com/natemcmaster/CommandLineUtils/issues/153\n[#208]: https://github.com/natemcmaster/CommandLineUtils/issues/208\n[#221]: https://github.com/natemcmaster/CommandLineUtils/issues/221\n[#227]: https://github.com/natemcmaster/CommandLineUtils/issues/227\n[#253]: https://github.com/natemcmaster/CommandLineUtils/issues/253\n[#230]: https://github.com/natemcmaster/CommandLineUtils/pull/230\n[#239]: https://github.com/natemcmaster/CommandLineUtils/pull/239\n[#245]: https://github.com/natemcmaster/CommandLineUtils/pull/245\n\n## [v2.3.4]\n\nBugs fixed:\n\n* Fix [#218]: Handle options with multiple characters in the short option name when only specified in a subcommand\n* PR [#224] by [@SteveBenz]: Rearrange the order that commands are listed in the USAGE block and list all the commands on the line\n\n[#218]: https://github.com/natemcmaster/CommandLineUtils/issues/218\n[#224]: https://github.com/natemcmaster/CommandLineUtils/pull/224\n\n## [v2.3.3]\n\nEnhancements:\n* [@mpipo]: add an API to disable the pager for help text (CommandLineApplication.UsePagerForHelpText) ([#216])\n\n[#216]: https://github.com/natemcmaster/CommandLineUtils/pull/216\n\n## [v2.3.2]\n\nEnhancements:\n* Fix [#211] by [@rlvandaveer]: honor attributes on classes which implement ValidationAttribute\n\nBugs fixed:\n* Fix [#207] by [@jcaillon]: Option for the case sensitivity of command names\n\n[#207]: https://github.com/natemcmaster/CommandLineUtils/issues/207\n[#211]: https://github.com/natemcmaster/CommandLineUtils/issues/211\n\n## [v2.3.1]\n\nBugs fixed:\n* Fix [#203] - fix InvalidOperationException thrown during help text generation on Mono\n\n[#203]: https://github.com/natemcmaster/CommandLineUtils/issues/203\n\n## [v2.3.0]\n\n**Dec. 31, 2018**\n\nEnhancements:\n* PR [#192] by [@TheConstructor]: Add IUnhandledExceptionHandler\n\nBugs fixed:\n* Fix [#195]: don't use Task.Run in generic host\n\n[#192]: https://github.com/natemcmaster/CommandLineUtils/pull/192\n[#195]: https://github.com/natemcmaster/CommandLineUtils/issues/195\n\n## [v2.3.0-rc]\n\nBugs fixed:\n* Fix [#189] by [@TheConstructor]: fix inference about clustering options for sub-sub-commands\n\nEnhancements:\n* Fix [#166] by [@TheConstructor]: make CommandLineApplication.GetValidationResult() public\n* PR [#192] by [@TheConstructor]: improve error handling in generic host, and unwrap TargetInvocationException\n\n[#189]: https://github.com/natemcmaster/CommandLineUtils/pull/189\n[#166]: https://github.com/natemcmaster/CommandLineUtils/pull/166\n[#192]: https://github.com/natemcmaster/CommandLineUtils/pull/192\n\n## [v2.3.0-beta]\n\nBugs fixed:\n\n* Fix [#86] by [@handcraftedsource]: handled nested HelpOptions. Fixes InvalidOperationException when multiple help options were defined.([#158])\n* Fix [#163] - Obsolete CommandOption.Template and fix help text generation to accurately list available options\n* [@TheConstructor]: fixed a bug in ConstructorInjectionConvention ([#181])\n\n[#86]: https://github.com/natemcmaster/CommandLineUtils/pull/86\n[#158]: https://github.com/natemcmaster/CommandLineUtils/pull/158\n[#163]: https://github.com/natemcmaster/CommandLineUtils/pull/163\n[#181]: https://github.com/natemcmaster/CommandLineUtils/pull/181\n\nEnhancements:\n\n* [@jcaillon]: Add a new API `UnrecognizedCommandParsingException` which includes suggestions for similar options or\n  commands. ([#164])\n* Add support counting of bool/flag variables using `bool[]`. ([#143])\n* [@EricStG]: Add a new API `MissingParameterlessConstructorException` that includes the type causing the exception in the message. ([#148])\n* [@atifaziz]: Add a new API `ValueParser.Create` which makes it easier to create implementations of `IValueParser`\n    ([#169])\n* [@TheConstructor]: Support injection of IConsole and IConvention in generic host ([#178])\n\n\n[#143]: https://github.com/natemcmaster/CommandLineUtils/pull/143\n[#164]: https://github.com/natemcmaster/CommandLineUtils/pull/164\n[#168]: https://github.com/natemcmaster/CommandLineUtils/pull/168\n[#169]: https://github.com/natemcmaster/CommandLineUtils/pull/169\n[#178]: https://github.com/natemcmaster/CommandLineUtils/pull/178\n\nOther notes:\n* I adjusted some API released in the alpha - primarily, I removed ParserSettings.\n\n### New package: McMaster.Extensions.Hosting.CommandLine\n\nThanks to [@lucastheisen] for writing a new package, McMaster.Extensions.Hosting.CommandLine ([#167]). This new package provides\nintegration with ASP.NET Core's [\"Generic Host\" feature.](https://docs.microsoft.com/aspnet/core/fundamentals/host/generic-host).\n\n[#167]: https://github.com/natemcmaster/CommandLineUtils/pull/167\n\n## [v2.3.0-alpha]\n\nEnhancements:\n\n* Support the POSIX convention for cluster multiple options. For example, `-ixd` is treated the same as `-i -x -d`.\n  Resolved [#93].\n* [@bjorg]: support SingleOrNoValue notation. `--option[:value]`\n* New type: `Pager`. Provides a simple interaction model for displaying console output in a pager.\n* Display help text using the `less` pager on macOS/Linux.\n* Make suggestions when invalid options or commands are used, but there is a valid one that is similar.\n  (Thanks to [@MadbHatter] for doing the initial work on this.)\n* Add support for subcommand aliases. Commands can be given multiple names.\n\n  ```c#\n  [Command(\"organization\", \"org\", \"o\")]\n  public class OrgCommand { }\n  ```\n* Obsolete the constructor of `[Subcommand]` which takes a string.\n* Infer subcommand names from the type name\n  ```c#\n  [Subcommand(typeof(AddCommand))]\n  public class Git { }\n\n  public class AddCommand { } // subcommand name = \"add\"\n  ```\n* [@lvermeulen]: Sort subcommands by name in help text. This can be disabled with `DefaultHelpTextGenerator.SortCommandsByName`.\n\n[#93]: https://github.com/natemcmaster/CommandLineUtils/issues/93\n\nBugs fixed:\n\n* Duplicate subcommand names used to cause undefined behavior. Now, attempting to add a duplicate subcommand name or aliases will\n  cause the library to throw before the app can execute.\n* Fix bug in subcommand name inference. When not specified, the subcommand always matched the entry assembly name.\n  In this update, this convention only applies to the parent command.\n* Fix [#131](https://github.com/natemcmaster/CommandLineUtils/issues/131) - Add generic overloads of `.IsRequired()` for\n `CommandOption<T>` and `CommandArgument<T>`.\n\nDetails:\n\n* **Clustering options:** I've added this behavior as the new default, but only if I think it won't interfere with existing apps.\n  If it causes issues or you don't like clustering, you can disable this by setting\n  `CommandLineApplication.ClusterOptions = false`.\n  To preserve compatibility with existing apps, this behavior is off if you have configured options with short names with\n  multiple characters. In a future version, this will cause an error unless you set `ClusterOptions = false`.\n\n* **Pager:** this is the new default for showing help text. The pager should have graceful fallback to regular stdout\n  when there are issues launching `less`, or when stdout is redirected into a pipe.\n\n## [v2.2.5]\n\n**July 1, 2018**\n\nBug fixes:\n * [@bording] and [@SeanFeldman]: Unable to create new instance of `CommandOption<T>` for type that is already registered\n\nMinor improvements:\n * Started code signing the NuGet package and binaries\n * [@jerriep]: added documentation for response file parsing\n\n## [v2.2.4]\n\n**May 24, 2018**\n\nBug fixes:\n\n* [@liamdawson]: support parsing `System.Uri`\n* Fix #101 - Update `DotNetExe.FullPath` to honor the `DOTNET_ROOT` environment variable as a fallback\n\n## [v2.2.3]\n\n**May 10, 2018**\n\nMinor improvements:\n\n* Make it easier to override the version text shown when `--version` is specified.\n* Make DefaultHelpTextGenerator's constructor protected\n* Fix DebugHelper.HandleDebugSwitch\n\n## [v2.2.2]\n\n**April 28, 2018**\n\nMinor improvement:\n\n - Add conventions from attributes that implement IConvention and IMemberConvention\n - Add a help option by default as long as it doesn't conflict with existing options\n\n## [v2.2.1]\n\n**April 10, 2018**\n\nBug fixes:\n\n - Don't assign option and argument options if no value was provided, preserving the default CLR value unless there is user-input.\n - Fix ShowHint() to use ShortName or SymbolName if OptionHelp.LongName is not set\n - Fix [#85](https://github.com/natemcmaster/CommandLineUtils/issues/85) - lower priority of resolving AdditionalServices after most built-in services\n - Fix [#79](https://github.com/natemcmaster/CommandLineUtils/issues/79) - OnValidate callbacks invoked before property values were assigned\n\nMinor improvements:\n\n - Improve help text generation. Align columns, show top-level command description, and add `protected virtual` API to `DefaultHelpTextGenerator` to make it easier to customize help text\n\n## [v2.2.0]\n\n**March 30, 2018**\n\n - Added support for command validators using `CommandLineApplication.Validators` and added a new OnValidate convention\n - Fix minor bug in `ArgumentEscaper` where some strings were not properly escaped\n - Update to System.ComponentModel.Annotations 4.4.1 (netstandard2.0 only)\n - [@atruskie]: Ensure ValueParsers are inherited in subcommands\n\n## [v2.2.0-rc]\n\n**March 23, 2018**\n\nNew API:\n - [@atruskie]: Added support for user-defined value parsers using `IValueParser` and `CommandLineApplication.ValueParsers`.\n - Added support for `Option<T>` and `Argument<T>`\n - Added `IValidationBuilder<T>`\n - Added `.Accepts().Range(min, max)` for int and double type arguments and options\n\nEnhancements:\n - Parse these values to boolean: T, t, F, f, 0, 1\n\nRemoved:\n - Removed support for mapping `Tuple<bool,T>` to `CommandOptionType.SingleOrNoValue`.\n   `ValueTuple<bool,T>` is still present.\n\n## [v2.2.0-beta]\n\n**March 7, 2018**\n\nNew features:\n  - Add `CommandOptionType.SingleOrNoValue`. Options of this type can be a switch, or have a value but only in the form `--param:value` or `--param=value`.\n  - Support mapping `Tuple<bool,T>` and `ValueTuple<bool,T>` to `CommandOptionType.SingleOrNoValue`\n  - Added `CommandLineApplication<TModel>`. This allows associating an application with a specific .NET type\n  - Convention API. Adds support for writing your own conventions to convert command line arguments into a .NET type\n  - [@sebastienros] - Support for case-insensitive options\n  - Add support for constructor injection and dependency injection by providing a custom service provider\n\n## [v2.2.0-alpha]\n\n**Feb. 15, 2018**\n\nNew features:\n  - Added more validation attributes.\n     - Add the `[FileExists]` attribute\n     - Add the `[FileOrDirectoryExists]` attribute\n     - Add the `[DirectoryExists]` attribute\n     - Add the `[LegalFilePath]` attribute\n     - Add the `[AllowedValues]` attribute\n  - Added a new, fluent API for validation.\n     - Added `Option().Accepts()` and `Argument().Accepts()`\n     - Add `.ExistingFile()`\n     - Add `.ExistingFileOrDirectory()`\n     - Add `.ExistingDirectory()`\n     - Add `.EmailAddress()`\n     - Add `.LegalFilePath()`\n     - Add `.MinLength(length)`\n     - Add `.MaxLength(length)`\n     - Add `.RegularExpression(pattern)`\n     - Add `.Values(string[] allowedValues)`\n\nAPI improvements:\n  - Support parsing enums\n  - [@atruskie] - Support for parsing double and floats\n  - [@rmcc13] - `HelpOption` can be set to be inherited by all subcommands\n  - Add `VersionOptionFromMember` to use a property or method as the source of version information\n\n## [v2.1.1]\n**Dec. 27, 2017**\n\nBug fixes:\n - Do not show validation error messages when --help or --version are specified\n - Fix help text to show correct short option when `OptionAttribute.ShortName` is overriden\n\n## [v2.1.0]\n**Dec. 12, 2017**\n\nNew features:\n - Attributes. Simplify command line argument definitions by adding attributes to a class that represents options and arguments.\n    - Options defined as `[Option]` or `[Argument]`, `[Subcommand]`.\n    - Command parsing options can be defined with `[Command]` and `[Subcmomand]`.\n    - Special options include `[HelpOption]` and `[VersionOption]`.\n    - Validation. You can use `[Required]` and any other ValidationAttribute to validate input on options and arguments.\n - Async from end to end. Using C# 7.1 and attribute binding, your console app can be async from top to bottom.\n - Required options and arguments. Added `CommandOption.IsRequired()` and `CommandArgument.IsRequired()`.\n\nNew API\n - [@demosdemon] - added `Prompt.GetSecureString`\n - `Prompt.GetYesNo`, `Prompt.GetPassword`, and more. Added API for interactively getting responses on the console.\n - Added `OptionAttribute`, `ArgumentAttribute`, `CommandAttribute`, `SubcommandAttribute`, `HelpOptionAttribute`, and `VersionOptionAttribute`.\n - `CommandLineApplication.Execute<TApp>()` - executes an app where `TApp` uses attributes to define its options\n - `CommandLineApplication.ExecuteAsync<TApp>()` - sample thing, but async.\n - `CommandLineApplication.ResponseFileHandling` - the parser can treat arguments that begin with '@' as response files.\n   Response files contain arguments that will be treated as if they were passed on command line.\n - [@couven92] - added overloads for  few new `CommandLineApplication.VersionOptionFromAssemblyAttributes` and `.VerboseOption` extension methods\n\nMinor bug fixes:\n - Add return types to `.VerboseOption()` and ensure `.HasValue()` is true when HelpOption or VerboseOption are matched\n - Fix a NullReferenceException in some edge cases when parsing args\n - Fix bug where `DotNetExe.FullPath` might return the wrong location of the dotnet.exe file\n\nOther:\n - [@kant2002] - added a new sample to demonstrate async usage\n\n## [v2.0.1]\n**Oct. 31, 2017**\n\n - [@couven92] - Add support for .NET Standard 1.6\n\n## [v2.0.0]\n**Sep. 16, 2017**\n\n - Initial version of this library.\n - Forked Microsoft.Extensions.CommandLineUtils\n - Renamed root namespace to McMaster.Extensions.CommandLineUtils\n - Added a handful of new API\n - Updated TFM to support .NET Standard 2.0\n\n\n[@atifaziz]: https://github.com/atifaziz\n[@atruskie]: https://github.com/atruskie\n[@bjorg]: https://github.com/bjorg\n[@bording]: https://github.com/bording\n[@cbcrouse]: https://github.com/cbcrouse\n[@chaami]: https://github.com/chaami\n[@couven92]: https://github.com/couven92\n[@cuperman007]: https://github.com/cuperman007\n[@danielmeza]: https://github.com/danielmeza\n[@demosdemon]: https://github.com/demosdemon\n[@ejball]: https://github.com/ejball\n[@EricStG]: https://github.com/EricStG\n[@handcraftedsource]: https://github.com/handcraftedsource\n[@hellfirehd]: https://github.com/hellfirehd\n[@IanG]: https://github.com/IanG\n[@jakubqwe]: https://github.com/jakubqwe\n[@jcaillon]: https://github.com/jcaillon\n[@jerriep]: https://github.com/jerriep\n[@kant2002]: https://github.com/kant2002\n[@kyle-rader]: https://github.com/kyle-rader\n[@liamdawson]: https://github.com/liamdawson\n[@lucastheisen]: https://github.com/lucastheisen\n[@lvermeulen]: https://github.com/lvermeulen\n[@MadbHatter]: https://github.com/MadbHatter\n[@mpipo]: https://github.com/mpipo\n[@rlvandaveer]: https://github.com/rlvandaveer\n[@rmcc13]: https://github.com/rmcc13\n[@scott-xu]: https://github.com/scott-xu\n[@SeanFeldman]: https://github.com/SeanFeldman\n[@sebastienros]: https://github.com/sebastienros\n[@skirchner989]: https://github.com/skirchner989\n[@SteveBenz]: https://github.com/SteveBenz\n[@TheConstructor]: https://github.com/TheConstructor\n[@vpkopylov]: https://github.com/vpkopylov\n[@xoofx]: https://github.com/xoofx\n\n[v2.3.4]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.3.3...v2.3.4\n[v2.3.3]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.3.2...v2.3.3\n[v2.3.2]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.3.1...v2.3.2\n[v2.3.1]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.3.0...v2.3.1\n[v2.3.0]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.5...v2.3.0\n[v2.3.0-rc]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.5...v2.3.0-rc\n[v2.3.0-beta]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.5...v2.3.0-beta\n[v2.3.0-alpha]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.5...v2.3.0-alpha\n[v2.2.5]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.4...v2.2.5\n[v2.2.4]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.3...v2.2.4\n[v2.2.3]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.3...v2.2.3\n[v2.2.2]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.1...v2.2.2\n[v2.2.1]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.0...v2.2.1\n[v2.2.0]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.0-rc...v2.2.0\n[v2.2.0-rc]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.0-beta...v2.2.0-rc\n[v2.2.0-beta]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.2.0-alpha...v2.2.0-beta\n[v2.2.0-alpha]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.1.1...v2.2.0-alpha\n[v2.1.1]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.1.0...v2.1.1\n[v2.1.0]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.0.1...v2.1.0\n[v2.0.1]: https://github.com/natemcmaster/CommandLineUtils/compare/v2.0.0...v2.0.1\n[v2.0.0]: https://github.com/natemcmaster/CommandLineUtils/compare/b0c662d331c35ccf3145875cdef850df7e896c0f...v2.0.0\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.28125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at open-source@natemcmaster.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.8427734375,
          "content": "Contributing Guide\n==================\n\nContributions are welcome! If you would like to help out, here are some suggestions for how to get involved.\n\n## Get involved\n[Watch][watchers] this repository to get notifications about all conversations. GitHub issues and pull requests are the authoritative\nsource of truth for design reviews, release schedules, and bug fixes.\n\n## You don't have to contribute code\n\nThere are more ways to help that don't involve writing code.\n* Respond to new issues. Users often open an issue to ask a question. You are welcome to offer your answer on the thread.\n* :+1: Up vote features that you think are important.\n* Look through issues labeled [closed-stale][closed-stale] to see if there are feature requests worth reviving.\n* Review pull requests.\n\n## Contributing to the documentation\n\nIf you are contributing to the documentation, you can build and preview the docs by executing `./docs/generate.ps1`. The `/docs` folder contains the source which **DocFX** uses generates the documentation.\nThe results of this are saved to the `gh-pages` branch of the repository.\n\nRun `./docs/generate.ps1 -Serve` to build the docs and serve them on <http://localhost:8080>.\n\n## Contributing code\n\n* Open issues labeled [\"help wanted\"][help-wanted] are issues that I think are worth doing, but no one has volunteered to do the work yet.\n  Make a comment on issues you want assigned to yourself.\n* Pull requests are more likely to be accepted if I have first agreed to accept a feature or bug fix. Open an issue first if you aren't sure.\n\n## Questions?\n\nOpen a GitHub issue if you'd like to help and don't know where to begin.\n\n[watchers]: https://github.com/natemcmaster/CommandLineUtils/watchers\n[closed-stale]: https://github.com/natemcmaster/CommandLineUtils/labels/closed-stale\n[help-wanted]: https://github.com/natemcmaster/CommandLineUtils/labels/help%20wanted\n"
        },
        {
          "name": "CommandLineUtils.sln",
          "type": "blob",
          "size": 3.9677734375,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.0.0\nMinimumVisualStudioVersion = 16.0.0.0\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{95D4B35E-0A21-4D64-8BAF-27DD6C019FC5}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"McMaster.Extensions.CommandLineUtils\", \"src\\CommandLineUtils\\McMaster.Extensions.CommandLineUtils.csproj\", \"{CBCFAFF3-A3B1-4C41-B2D1-092BF7307A4E}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"test\", \"test\", \"{C4842A1B-019E-40FF-A396-CF5AFDE8FA54}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"McMaster.Extensions.CommandLineUtils.Tests\", \"test\\CommandLineUtils.Tests\\McMaster.Extensions.CommandLineUtils.Tests.csproj\", \"{1258544C-1FDE-4810-9A1B-189A925E9B45}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"files\", \"files\", \"{509D6286-77FA-49C1-9EC6-7461DBE79536}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\t.gitattributes = .gitattributes\n\t\t.gitignore = .gitignore\n\t\tbuild.cmd = build.cmd\n\t\tbuild.ps1 = build.ps1\n\t\tCHANGELOG.md = CHANGELOG.md\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tDirectory.Build.targets = Directory.Build.targets\n\t\tLICENSE.txt = LICENSE.txt\n\t\tNOTICE.txt = NOTICE.txt\n\t\tNuGet.config = NuGet.config\n\t\tREADME.md = README.md\n\t\tversion.props = version.props\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"McMaster.Extensions.Hosting.CommandLine\", \"src\\Hosting.CommandLine\\McMaster.Extensions.Hosting.CommandLine.csproj\", \"{407245F7-3F2C-4634-8578-7EFCA9BD26BD}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"McMaster.Extensions.Hosting.CommandLine.Tests\", \"test\\Hosting.CommandLine.Tests\\McMaster.Extensions.Hosting.CommandLine.Tests.csproj\", \"{04A5D2B8-18E4-4C75-AEF9-79D171FAC210}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{CBCFAFF3-A3B1-4C41-B2D1-092BF7307A4E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CBCFAFF3-A3B1-4C41-B2D1-092BF7307A4E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CBCFAFF3-A3B1-4C41-B2D1-092BF7307A4E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CBCFAFF3-A3B1-4C41-B2D1-092BF7307A4E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1258544C-1FDE-4810-9A1B-189A925E9B45}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1258544C-1FDE-4810-9A1B-189A925E9B45}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1258544C-1FDE-4810-9A1B-189A925E9B45}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1258544C-1FDE-4810-9A1B-189A925E9B45}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{407245F7-3F2C-4634-8578-7EFCA9BD26BD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{407245F7-3F2C-4634-8578-7EFCA9BD26BD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{407245F7-3F2C-4634-8578-7EFCA9BD26BD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{407245F7-3F2C-4634-8578-7EFCA9BD26BD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{04A5D2B8-18E4-4C75-AEF9-79D171FAC210}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{04A5D2B8-18E4-4C75-AEF9-79D171FAC210}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{04A5D2B8-18E4-4C75-AEF9-79D171FAC210}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{04A5D2B8-18E4-4C75-AEF9-79D171FAC210}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{CBCFAFF3-A3B1-4C41-B2D1-092BF7307A4E} = {95D4B35E-0A21-4D64-8BAF-27DD6C019FC5}\n\t\t{1258544C-1FDE-4810-9A1B-189A925E9B45} = {C4842A1B-019E-40FF-A396-CF5AFDE8FA54}\n\t\t{407245F7-3F2C-4634-8578-7EFCA9BD26BD} = {95D4B35E-0A21-4D64-8BAF-27DD6C019FC5}\n\t\t{04A5D2B8-18E4-4C75-AEF9-79D171FAC210} = {C4842A1B-019E-40FF-A396-CF5AFDE8FA54}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {55FD25E0-565D-49F9-9370-28DA7196E539}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 2.8564453125,
          "content": "<Project>\n\n  <PropertyGroup>\n    <Authors>Nate McMaster</Authors>\n    <Product>CommandLineUtils</Product>\n    <Copyright>Copyright © Nate McMaster</Copyright>\n    <NeutralLanguage>en-US</NeutralLanguage>\n    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>\n    <PackageProjectUrl>https://github.com/natemcmaster/CommandLineUtils</PackageProjectUrl>\n    <RepositoryUrl>https://github.com/natemcmaster/CommandLineUtils.git</RepositoryUrl>\n    <RepositoryType>git</RepositoryType>\n    <SymbolPackageFormat>snupkg</SymbolPackageFormat>\n    <DebugType>portable</DebugType>\n    <IsPackable>false</IsPackable>\n    <IncludeSymbols>true</IncludeSymbols>\n    <EmbedUntrackedSources>true</EmbedUntrackedSources>\n    <PackageIconUrl>https://natemcmaster.github.io/CommandLineUtils/logo.png</PackageIconUrl>\n    <PackageIcon>icon.png</PackageIcon>\n  </PropertyGroup>\n\n  <ItemGroup Condition=\" '$(IsPackable)' == 'true' \">\n    <None Include=\"$(MSBuildThisFileDirectory)docs\\logo.png\">\n      <Pack>true</Pack>\n      <PackagePath>/$(PackageIcon)</PackagePath>\n      <Visible>false</Visible>\n    </None>\n  </ItemGroup>\n\n  <PropertyGroup>\n    <WarningsNotAsErrors>$(WarningsNotAsErrors);1591</WarningsNotAsErrors>\n    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>\n    <Nullable>enable</Nullable>\n    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)src\\StrongName.snk</AssemblyOriginatorKeyFile>\n    <SignAssembly>true</SignAssembly>\n\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <GenerateFullPaths Condition=\"'$(TERM_PROGRAM)' == 'vscode'\">true</GenerateFullPaths>\n    <BaseIntermediateOutputPath>$(MSBuildThisFileDirectory).build\\obj\\$(MSBuildProjectName)\\</BaseIntermediateOutputPath>\n    <BaseOutputPath>$(MSBuildThisFileDirectory).build\\bin\\$(MSBuildProjectName)\\</BaseOutputPath>\n  </PropertyGroup>\n\n   <PropertyGroup>\n    <VersionPrefix>5.0.0</VersionPrefix>\n    <VersionSuffix>beta</VersionSuffix>\n    <IncludePreReleaseLabelInPackageVersion Condition=\"'$(IS_STABLE_BUILD)' != 'true'\">true</IncludePreReleaseLabelInPackageVersion>\n    <BuildNumber Condition=\" '$(BuildNumber)' == '' \">$(GITHUB_RUN_NUMBER)</BuildNumber>\n    <BuildNumber Condition=\" '$(BuildNumber)' == '' \">0</BuildNumber>\n    <VersionSuffix Condition=\" '$(VersionSuffix)' != '' \">$(VersionSuffix).$(BuildNumber)</VersionSuffix>\n    <RepositoryCommit Condition=\"'$(RepositoryCommit)' == ''\">$(GITHUB_SHA)</RepositoryCommit>\n    <PackageVersion>$(VersionPrefix)</PackageVersion>\n    <PackageVersion Condition=\"'$(IncludePreReleaseLabelInPackageVersion)' == 'true'\">$(PackageVersion)-$(VersionSuffix)</PackageVersion>\n    <InformationalVersion Condition=\"'$(RepositoryCommit)' != ''\">$(PackageVersion)+$(RepositoryCommit)</InformationalVersion>\n  </PropertyGroup>\n\n  <Import Project=\"$(MSBuildProjectDirectory)/releasenotes.props\"\n          Condition=\"Exists('$(MSBuildProjectDirectory)/releasenotes.props')\" />\n\n</Project>\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 9.5546875,
          "content": "Apache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n    \"License\" shall mean the terms and conditions for use, reproduction,\n    and distribution as defined by Sections 1 through 9 of this document.\n\n    \"Licensor\" shall mean the copyright owner or entity authorized by\n    the copyright owner that is granting the License.\n\n    \"Legal Entity\" shall mean the union of the acting entity and all\n    other entities that control, are controlled by, or are under common\n    control with that entity. For the purposes of this definition,\n    \"control\" means (i) the power, direct or indirect, to cause the\n    direction or management of such entity, whether by contract or\n    otherwise, or (ii) ownership of fifty percent (50%) or more of the\n    outstanding shares, or (iii) beneficial ownership of such entity.\n\n    \"You\" (or \"Your\") shall mean an individual or Legal Entity\n    exercising permissions granted by this License.\n\n    \"Source\" form shall mean the preferred form for making modifications,\n    including but not limited to software source code, documentation\n    source, and configuration files.\n\n    \"Object\" form shall mean any form resulting from mechanical\n    transformation or translation of a Source form, including but\n    not limited to compiled object code, generated documentation,\n    and conversions to other media types.\n\n    \"Work\" shall mean the work of authorship, whether in Source or\n    Object form, made available under the License, as indicated by a\n    copyright notice that is included in or attached to the work\n    (an example is provided in the Appendix below).\n\n    \"Derivative Works\" shall mean any work, whether in Source or Object\n    form, that is based on (or derived from) the Work and for which the\n    editorial revisions, annotations, elaborations, or other modifications\n    represent, as a whole, an original work of authorship. For the purposes\n    of this License, Derivative Works shall not include works that remain\n    separable from, or merely link (or bind by name) to the interfaces of,\n    the Work and Derivative Works thereof.\n\n    \"Contribution\" shall mean any work of authorship, including\n    the original version of the Work and any modifications or additions\n    to that Work or Derivative Works thereof, that is intentionally\n    submitted to Licensor for inclusion in the Work by the copyright owner\n    or by an individual or Legal Entity authorized to submit on behalf of\n    the copyright owner. For the purposes of this definition, \"submitted\"\n    means any form of electronic, verbal, or written communication sent\n    to the Licensor or its representatives, including but not limited to\n    communication on electronic mailing lists, source code control systems,\n    and issue tracking systems that are managed by, or on behalf of, the\n    Licensor for the purpose of discussing and improving the Work, but\n    excluding communication that is conspicuously marked or otherwise\n    designated in writing by the copyright owner as \"Not a Contribution.\"\n\n    \"Contributor\" shall mean Licensor and any individual or Legal Entity\n    on behalf of whom a Contribution has been received by Licensor and\n    subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n    this License, each Contributor hereby grants to You a perpetual,\n    worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n    copyright license to reproduce, prepare Derivative Works of,\n    publicly display, publicly perform, sublicense, and distribute the\n    Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n    this License, each Contributor hereby grants to You a perpetual,\n    worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n    (except as stated in this section) patent license to make, have made,\n    use, offer to sell, sell, import, and otherwise transfer the Work,\n    where such license applies only to those patent claims licensable\n    by such Contributor that are necessarily infringed by their\n    Contribution(s) alone or by combination of their Contribution(s)\n    with the Work to which such Contribution(s) was submitted. If You\n    institute patent litigation against any entity (including a\n    cross-claim or counterclaim in a lawsuit) alleging that the Work\n    or a Contribution incorporated within the Work constitutes direct\n    or contributory patent infringement, then any patent licenses\n    granted to You under this License for that Work shall terminate\n    as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n    Work or Derivative Works thereof in any medium, with or without\n    modifications, and in Source or Object form, provided that You\n    meet the following conditions:\n\n    (a) You must give any other recipients of the Work or\n        Derivative Works a copy of this License; and\n\n    (b) You must cause any modified files to carry prominent notices\n        stating that You changed the files; and\n\n    (c) You must retain, in the Source form of any Derivative Works\n        that You distribute, all copyright, patent, trademark, and\n        attribution notices from the Source form of the Work,\n        excluding those notices that do not pertain to any part of\n        the Derivative Works; and\n\n    (d) If the Work includes a \"NOTICE\" text file as part of its\n        distribution, then any Derivative Works that You distribute must\n        include a readable copy of the attribution notices contained\n        within such NOTICE file, excluding those notices that do not\n        pertain to any part of the Derivative Works, in at least one\n        of the following places: within a NOTICE text file distributed\n        as part of the Derivative Works; within the Source form or\n        documentation, if provided along with the Derivative Works; or,\n        within a display generated by the Derivative Works, if and\n        wherever such third-party notices normally appear. The contents\n        of the NOTICE file are for informational purposes only and\n        do not modify the License. You may add Your own attribution\n        notices within Derivative Works that You distribute, alongside\n        or as an addendum to the NOTICE text from the Work, provided\n        that such additional attribution notices cannot be construed\n        as modifying the License.\n\n    You may add Your own copyright statement to Your modifications and\n    may provide additional or different license terms and conditions\n    for use, reproduction, or distribution of Your modifications, or\n    for any such Derivative Works as a whole, provided Your use,\n    reproduction, and distribution of the Work otherwise complies with\n    the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n    any Contribution intentionally submitted for inclusion in the Work\n    by You to the Licensor shall be under the terms and conditions of\n    this License, without any additional terms or conditions.\n    Notwithstanding the above, nothing herein shall supersede or modify\n    the terms of any separate license agreement you may have executed\n    with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n    names, trademarks, service marks, or product names of the Licensor,\n    except as required for reasonable and customary use in describing the\n    origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n    agreed to in writing, Licensor provides the Work (and each\n    Contributor provides its Contributions) on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n    implied, including, without limitation, any warranties or conditions\n    of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n    PARTICULAR PURPOSE. You are solely responsible for determining the\n    appropriateness of using or redistributing the Work and assume any\n    risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n    whether in tort (including negligence), contract, or otherwise,\n    unless required by applicable law (such as deliberate and grossly\n    negligent acts) or agreed to in writing, shall any Contributor be\n    liable to You for damages, including any direct, indirect, special,\n    incidental, or consequential damages of any character arising as a\n    result of this License or out of the use or inability to use the\n    Work (including but not limited to damages for loss of goodwill,\n    work stoppage, computer failure or malfunction, or any and all\n    other commercial damages or losses), even if such Contributor\n    has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n    the Work or Derivative Works thereof, You may choose to offer,\n    and charge a fee for, acceptance of support, warranty, indemnity,\n    or other liability obligations and/or rights consistent with this\n    License. However, in accepting such obligations, You may act only\n    on Your own behalf and on Your sole responsibility, not on behalf\n    of any other Contributor, and only if You agree to indemnify,\n    defend, and hold each Contributor harmless for any liability\n    incurred by, or claims asserted against, such Contributor by reason\n    of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 1.033203125,
          "content": "This project is a fork of https://github.com/aspnet/Common and https://github.com/aspnet/DotNetTools.\nThe modified work is available under the license found in LICENSE.txt in the root of this project.\nAny files that have been modified include a notice stating that they have been modified.\n\nThe unmodified work was originally licensed under the following terms:\n----------------------------------------------------------------------------------------------------\n\nCopyright (c) .NET Foundation and Contributors\n\nAll rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied. See the License for the\nspecific language governing permissions and limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4140625,
          "content": "CommandLineUtils\n================\n\n[![Build Status][ci-badge]][ci] [![Code Coverage][codecov-badge]][codecov]\n[![NuGet][nuget-badge] ![NuGet Downloads][nuget-download-badge]][nuget]\n\n[ci]: https://github.com/natemcmaster/CommandLineUtils/actions?query=workflow%3ACI+branch%3Amain\n[ci-badge]: https://github.com/natemcmaster/CommandLineUtils/workflows/CI/badge.svg\n[codecov]: https://codecov.io/gh/natemcmaster/CommandLineUtils\n[codecov-badge]: https://codecov.io/gh/natemcmaster/CommandLineUtils/branch/main/graph/badge.svg?token=l6uSsHZ8nA\n[nuget]: https://www.nuget.org/packages/McMaster.Extensions.CommandLineUtils/\n[nuget-badge]: https://img.shields.io/nuget/v/McMaster.Extensions.CommandLineUtils.svg?style=flat-square\n[nuget-download-badge]: https://img.shields.io/nuget/dt/McMaster.Extensions.CommandLineUtils?style=flat-square\n\nThis project helps you create command line applications using .NET.\nIt simplifies parsing arguments provided on the command line, validating\nuser inputs, and generating help text.\n\nThe **roadmap** for this project is [pinned to the top of the issue list](https://github.com/natemcmaster/CommandLineUtils/issues/).\n\n## Usage\n\nSee [documentation](https://natemcmaster.github.io/CommandLineUtils/) for API reference, samples, and tutorials.\nSee also [docs/samples/](./docs/samples/) for more examples, such as:\n\n - [Hello world](./docs/samples/helloworld/)\n - [Async console apps](./docs/samples/helloworld-async/)\n - [Structuring an app with subcommands](./docs/samples/subcommands/)\n - [Defining options with attributes](./docs/samples/attributes/)\n - [Interactive console prompts](./docs/samples/interactive-prompts/)\n - [Required options and arguments](./docs/samples/validation/)\n\n\n### Installing the library\n\nThis project is available as a [NuGet package][nuget].\n\n```\n$ dotnet add package McMaster.Extensions.CommandLineUtils\n```\n\n### Code\n`CommandLineApplication` is the main entry point for most console apps parsing. There are two primary ways to use this API, using the builder pattern and attributes.\n\n\n### Attribute API\n\n```c#\nusing System;\nusing McMaster.Extensions.CommandLineUtils;\n\npublic class Program\n{\n    public static int Main(string[] args)\n        => CommandLineApplication.Execute<Program>(args);\n\n    [Option(Description = \"The subject\")]\n    public string Subject { get; } = \"world\";\n\n    [Option(ShortName = \"n\")]\n    public int Count { get; } = 1;\n\n    private void OnExecute()\n    {\n        for (var i = 0; i < Count; i++)\n        {\n            Console.WriteLine($\"Hello {Subject}!\");\n        }\n    }\n}\n```\n\n### Builder API\n\n\n```c#\nusing System;\nusing McMaster.Extensions.CommandLineUtils;\n\nvar app = new CommandLineApplication();\n\napp.HelpOption();\n\nvar subject = app.Option(\"-s|--subject <SUBJECT>\", \"The subject\", CommandOptionType.SingleValue);\nsubject.DefaultValue = \"world\";\n\nvar repeat = app.Option<int>(\"-n|--count <N>\", \"Repeat\", CommandOptionType.SingleValue);\nrepeat.DefaultValue = 1;\n\napp.OnExecute(() =>\n{\n    for (var i = 0; i < repeat.ParsedValue; i++)\n    {\n        Console.WriteLine($\"Hello {subject.Value()}!\");\n    }\n});\n\nreturn app.Execute(args);\n```\n\n### Utilities\n\nThe library also includes other utilities for interaction with the console. These include:\n\n- `ArgumentEscaper` - use to escape arguments when starting a new command line process.\n    ```c#\n     var args = new [] { \"Arg1\", \"arg with space\", \"args ' with \\\" quotes\" };\n     Process.Start(\"echo\", ArgumentEscaper.EscapeAndConcatenate(args));\n    ```\n - `Prompt` - for getting feedback from users with a default answer.\n   A few examples:\n    ```c#\n    // allows y/n responses, will return false by default in this case.\n    // You may optionally change the prompt foreground and background color for\n    // the message.\n    Prompt.GetYesNo(\"Do you want to proceed?\", false);\n\n    // masks input as '*'\n    Prompt.GetPassword(\"Password: \");\n    ```\n - `DotNetExe` - finds the path to the dotnet.exe file used to start a .NET Core process\n    ```c#\n    Process.Start(DotNetExe.FullPathOrDefault(), \"run\");\n    ```\n\nAnd more! See the [documentation](https://natemcmaster.github.io/CommandLineUtils/) for more API, such as `IConsole`, `IReporter`, and others.\n\n## Getting help\n\nIf you need help with this project, please ...\n\n* read the documentation (https://natemcmaster.github.io/CommandLineUtils/),\n* look at the samples (https://github.com/natemcmaster/CommandLineUtils/tree/main/docs/samples),\n* review existing questions (many were answered already) (https://github.com/natemcmaster/CommandLineUtils/issues?q=label%3Aquestion+),\n* or use a programming Q&A forum such as StackOverflow.com\n\n## Project origin and status\n\nThis is a fork of [Microsoft.Extensions.CommandLineUtils](https://github.com/aspnet/Common), which was [completely abandoned by Microsoft](https://github.com/aspnet/Common/issues/257). This project [forked in 2017](https://github.com/natemcmaster/CommandLineUtils/commit/f039360e4e51bbf8b8eb6236894b626ec7944cec) and continued to make improvements. From 2017 to 2021, over 30 contributors added new features and fixed bugs. As of 2022, the project has entered maintenance mode, so no major changes are planned. [See this issue for details on latest project status.](https://github.com/natemcmaster/CommandLineUtils/issues/485) This project is not abandoned -- I believe this library provides a stable API and rich feature set good enough for most developers to create command line apps in .NET -- but only the most critical of bugs will be fixed (such as security issues).\n\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 1.2890625,
          "content": "#!/usr/bin/env pwsh\n[CmdletBinding(PositionalBinding = $false)]\nparam(\n    [ValidateSet('Debug', 'Release')]\n    $Configuration = $null,\n    [switch]\n    $ci\n)\n\nSet-StrictMode -Version 1\n$ErrorActionPreference = 'Stop'\n\nImport-Module -Force -Scope Local \"$PSScriptRoot/src/common.psm1\"\n\nif (!$Configuration) {\n    $Configuration = if ($ci) { 'Release' } else { 'Debug' }\n}\n\nif (-not (Test-Path variable:\\IsCoreCLR)) {\n    $IsWindows = $true\n}\n\n$artifacts = \"$PSScriptRoot/artifacts/\"\n\nRemove-Item -Recurse $artifacts -ErrorAction Ignore\n\nexec dotnet tool restore\n\n[string[]] $formatArgs=@()\nif ($ci) {\n    $formatArgs += '--check'\n}\n\nexec dotnet tool run dotnet-format -- -v detailed @formatArgs \"$PSScriptRoot/CommandLineUtils.sln\"\nexec dotnet tool run dotnet-format -- -v detailed @formatArgs \"$PSScriptRoot/docs/samples/samples.sln\"\nexec dotnet build --configuration $Configuration '-warnaserror:CS1591'\nexec dotnet pack --no-build --configuration $Configuration -o $artifacts\nexec dotnet build --configuration $Configuration \"$PSScriptRoot/docs/samples/samples.sln\"\n\n[string[]] $testArgs=@()\nif (-not $IsWindows) {\n    $testArgs += '-p:TestFullFramework=false'\n}\n\nexec dotnet test --no-build --configuration $Configuration `\n    --collect:\"XPlat Code Coverage\" `\n    @testArgs\n\nwrite-host -f green 'BUILD SUCCEEDED'\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}