{
  "metadata": {
    "timestamp": 1736711037000,
    "page": 773,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Unity-Technologies/2d-extras",
      "stars": 1563,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".buginfo",
          "type": "blob",
          "size": 0.091796875,
          "content": "system: jira\nsystem: jira.unity3d.com\nissuetype: Bug\npackage: 2D Tilemap Extras\nproject: DANB\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.1201171875,
          "content": "artifacts/**\nbuild/**\n.DS_Store\n.npmrc\n.npmignore\n.gitignore\nQAReport.md\nQAReport.md.meta\n.gitlab-ci.yml\nbuild.bat\nbuild.sh"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 8.33203125,
          "content": "# Changelog\nAll notable changes to this package will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\n\n## [2.2.5] - 2023-02-03\n### Fixed\n- [GameObjectBrush] Fix placement of GameObjects for Hexagon Layouts with Anchor\n- [GameObjectBrush] Align rotation and flip to 2D View in Editor\n- [RandomBrush] Use default color and transform when painting over with RandomBrush\n\n## [2.2.4] - 2022-11-03\n### Fixed\n- [GridInformation] Implement IEquatable for GridInformationKey \n- [PrefabRandomBrush] Fix possible NullReferenceException in PrefabRandomBrush\n- [GameObjectBrush] Fix placement of GameObjects when Cell Gap is set\n\n## [2.2.3] - 2022-04-01\n### Fixed\n- [RuleOverrideTile] -Mark RuleOverrideTile InstanceTile as dirty when overriding RuleTile for the RuleOverrideTile changes\n- [RuleOverrideTile] -Fix undo for RuleOverrideTile when overriding RuleTile has changed\n- [RuleTileEditor] -Fix height for ReorderableList when extending the view for marking Rules\n\n## [2.2.2] - 2022-03-03\n### Fixed\n- [AnimatedTileEditor] -Fix undo when setting number of Sprites for Animated Tile\n- [RuleTile] -Fix data for custom container fields not being transferred in RuleOverrideTiles overriding a Custom Rule Tile\n- [RuleTileEditor] -Fix undo when setting number of Rules for Rule Tile\n- [RuleTileEditor] -Use different text color for Extend Neighbors with dark and light skin\n\n## [2.2.1] - 2021-08-24\n### Changed\n- [GameObjectBrush] Add canChangePosition\n- [GameObjectBrush] Use GridLayout from BrushTarget if it has one\n- [HexagonalRuleTile] Fix GetOffsetPositionReverse\n- [RuleOverrideTile] Create instance Tile on override\n- [RuleTile] Add scripting documentation\n- [RuleTileEditor] Add drag and drop rect for Sprites to create initial TilingRules\n- [RuleTileEditor] Add field to change number of TilingRules\n- [RuleTileEditor] Add blank space to the end of the Rule list\n- [RuleTileEditor] Add undo for changes\n- [AnimatedTileEditor] Add undo for changes\n- [TintBrush] Convert cell positions to world positions based on the Grid used\n- [TintBrush] Add k_ScaleFactor for better precision when painting on non-rectangular Tilemaps\n\n### Fixed\n- [RuleTile] Fixed error in RuleTileEditor when removing all Rules and adding a new Rule\n\n## [2.2.0] - 2021-06-01\n- [RuleTileEditor] Add tooltips to fields\n- Add required package dependencies\n\n## [2.1.0] - 2021-05-06\n### Changed\n- [RuleTile] Improve performance of RuleTile caching\n- [RuleTileEditor] Allow non-public fields with the SerializeField attribute as custom fields for RuleTile\n- Make U2DExtrasPlaceholder internal\n\n### Fixed\n- [RuleTileEditor] Fix exception when adding a new Rule when no Rule is selected\n\n## [2.0.0] - 2021-03-17\n- Update version to 2.0.0\n\n## [2.0.0-pre.3] - 2021-02-19\n- [HexagonalRuleTile] Fix issue with mirror rule\n- [RuleTile] Add min and max animation speedup\n- [RuleOverrideTile] Fix import issue when upgrading from a previous version of RuleOverrideTile\n- [RuleTileEditor] Add new rule below selected rule in RuleTileEditor\n- [RuleTileEditor] Add dropdown to duplicate Rule\n\n## [2.0.0-pre.2] - 2020-11-26\n### Changed\n- Update documentation\n- Add contribution notice in README.md\n- Update Third Party Notices.md\n- [PrefabBush] Add pick\n- [PrefabBush] Add tooltip for \"Erase Any Objects\" field\n- [PrefabBrush][GameObjectBrush] Account for Anchor when using GetObjectsInCell in PrefabBrush and GameObjectBrush\n- [CustomRuleTileScript] Allow Custom Rule Tile template script to be created regardless of where template script is installed (from a package or in the project)\n\n## [2.0.0-pre.1] - 2020-10-14\n- Update version to 2.0.0-pre.1\n\n## [1.6.2-preview] - 2020-09-25\n### Changed\n- [RuleTile/RuleOverrideTile/AdvancedRuleOverrideTile] Renamed Game Object to GameObject\n- [RuleTile] Fix menu order for RuleOverrideTile\n- [RuleOverrideTile] Fix menu order for RuleOverrideTile\n- [AdvancedRuleOverrideTile] Fix Rule toggle for AdvancedRuleOverrideTile\n- [GameObjectBrush] Use correct position when ClearSceneCell \n- [GameObjectBrush] Update cells when size changes\n- [GameObjectBrush] Clear cell for Prefabs\n- [LineBrush] Clear previews from base.OnPaintSceneGUI\n- [PrefabBrush] Fix box erase\n\n## [1.6.1-preview] - 2020-08-11\n### Changed\n- Update samples\n\n## [1.6.0-preview] - 2020-05-27\n### Changed\n- Updated for Unity 2020.1\n- [GameObjectBrush] Allow painting, erasing and picking on Tile Palette\n- [GameObjectBrush] Add Paint on Scene view to GameObjectBrush\n- [PrefabBush] Add BoxFill to PrefabBrush\n- [PrefabBush] Add Rotation to PrefabBrush\n- Consolidated menu items\n\n## [1.5.0-preview] - 2020-02-14\n### Added\n- Added CONTRIBUTING.md\n- Updated LICENSE.md\n\n### Added\n- [PrefabRandomBrush] Split functionality of PrefabBrush to PrefabBrush and PrefabRandomBrush\n- [PrefabBrush/PrefabRandomBrush] Add Erase Any Objects toggle to choose between erasing any Objects or Objects in the Brush\n\n### Changed\n- Consolidated menu items\n\n### Fixed\n- [WeightedRandomTile] Fixed WeightedRandomTile messing up Random.seed!\n\n## [1.4.0] - 2020-01-07\n### Added\n- [RuleTile / HexagonalRuleTile / IsometricRuleTile / RuleOverrideTile] Added Asset Preview for TilingRules\n- [RuleTile] Hidden Rule field\n- [CustomRuleTile] Support custom field of Object type\n- [CustomRuleTile] Support HideInInspector, DontOverride attributes\n- [RuleOverrideTile] Move advanced mode to AdvancedRuleOverrideTile\n- [RuleOverrideTile] Add GameObject overrides\n- [RuleOverrideTile] List height lessen\n- [RuleOverrideTile] Don't override null sprite\n- [RuleOverrideTile] Add static preview\n- [AdvancedRuleOverrideTile] List GUI simplify\n- [RuleOverrideTile / AdvancedRuleOverrideTile] Show unused overrides\n- [RuleOverrideTile / AdvancedRuleOverrideTile] Support multiple inheritance\n- [RuleOverrideTile / AdvancedRuleOverrideTile] Prevent circular reference\n- [AnimatedTile] Added Animation Start Frame which helps to calculate the Animation Start Time for a given Tilemap\n\n### Fixed\n- [RuleTile] Fixed RuleTile InstantiatedGameObject rotation/scale\n- [RuleTile] Fixed override tiles have not update when default properties changed\n- [AdvancedRuleOverrideTile] Fix override rule lost reference when source rule reorder\n- [PrefabBrush] Use WorldToCell comparison when getting GameObjects using PrefabBrush\n\n## [1.3.1] - 2019-11-06\n### Changed\n- [RuleTile] Simplified\n- [RuleTile] Caching all RuleTile neighbor positions for Tilemap to speedup refresh affected tiles\n\n### Fixed\n- [RuleTile] Fix remote positions missing of MirrorXY (#148)\n- [HexagonalRuleTile] Fix ApplyRandomTransform() of HexagonalRuleTile missing MirrorXY case\n- [RuleOverrideTile] Fix RuleOverrideTile does not refresh when add/remove rule\n- [RuleTile] Fix random rotation calculation mistake\n- [RuleTile] Fix cache data will not update when rule change\n\n## [1.3.0] - 2019-11-01\n### Changed\n- [RuleTile] changed from using index to using position.\n- [RuleTile] Additional storage rule position.\n- [RuleTile] Delete DontCare rule.\n- [RuleTile] Rule list increased Extend Neighbor toggle. When selected, it will increase the rule range that can be set.\n- [RuleTile] No longer fixed to checking around 8 rules.\n- [RuleTile] RefreshTile() will refresh affected remote Tiles.\n- [RuleTile] Delete GetMatchingNeighboringTiles(), no longer get nearby Tiles in advance, the performance is affected. (may be changed to cache later)\n- [IsometricRuleTile] Rewrite.\n- [HexagonalRuleTile] Rewrite.\n- [LineBrush] Fix for Tiles disappear after selection and drag with LineBrush\n- [RuleTile] Add MirrorXY Transform Rule\n\n## [1.2.0] - 2019-10-17\n### Changed\n- [PrefabBrush] Erase GameObjects at target position before painting\n- [RuleTileEditor] Made RuleTileEditor and children public\n- [RuleTile] Roll back m_Self to this.\n- [RuleOverrideTile] Remove m_OverrideSelf property.\n- [RuleOverrideTile] Inherit custom properties from custom RuleTile.\n- [RuleOverrideTile] Change m_RuntimeTile to m_InstanceTile.\n\n## [1.1.0] - 2019-08-23\n### Changed\n- Validate Gap and Limit for GroupBrush\n- Fix z iterator for RandomBrush\n- Check randomTileSets on addToRandomTiles\n- Add Anchor to GameObjectBrush and PrefabBrush\n\n## [1.1.0] - 2019-03-22\n### Changed\n- Copy GameObject when copying TilingRule in RuleOverrideTile\n\n## [1.1.0] - 2019-03-08\n### Added\n- Added com.unity.2d.tilemap as a dependency of com.unity.2d.tilemap.extras\n\n### Changed\n- Custom Grid Brushes have been updated to the UnityEditor.Tilemaps namespace\n\n## [1.0.0] - 2019-01-02\n### This is the first release of Tilemap Extras, as a Package\n"
        },
        {
          "name": "CHANGELOG.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: e2b8acf174765f141a47de79f2db4b26\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.466796875,
          "content": "# Contributing\n\n## All contributions are subject to the [Unity Contribution Agreement(UCA)](https://unity3d.com/legal/licenses/Unity_Contribution_Agreement)\nBy making a pull request, you are confirming agreement to the terms and conditions of the UCA, including that your Contributions are your original creation and that you have complete right and authority to make your Contributions.\n\n## Once you have a change ready following these ground rules. Simply make a pull request!"
        },
        {
          "name": "CONTRIBUTING.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: 6227377cf86ed2341ba50b1d9889f2f7\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Documentation~",
          "type": "tree",
          "content": null
        },
        {
          "name": "Editor.meta",
          "type": "blob",
          "size": 0.16796875,
          "content": "fileFormatVersion: 2\nguid: 58147b5e82a62ad4aacd2cfa2ef653bc\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.466796875,
          "content": "2D Tilemap Extras copyright © 2020 Unity Technologies ApS\n\nLicensed under the Unity Companion License for Unity-dependent projects--see [Unity Companion License](http://www.unity3d.com/legal/licenses/Unity_Companion_License). \n\nUnless expressly provided otherwise, the Software under this license is made available strictly on an “AS IS” BASIS WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED. Please review the license for details on these and other terms and conditions.\n"
        },
        {
          "name": "LICENSE.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: d096e666129ea0247bb05049143ba33a\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "QAReport.md",
          "type": "blob",
          "size": 0.669921875,
          "content": "# QA Report\nUse this file to outline the test strategy for this package.\n\n## QA Owner: [*Add Name*]\n\n## Test strategy\n*Use this section to describe how this feature was tested.*\n* A link to the Test Plan (Test Rails, other)\n* Results from the package's editor and runtime test suite.\n* Link to automated test results (if any)\n* Manual test Results, [here's an example](https://docs.google.com/spreadsheets/d/12A76U5Gf969w10KL4Ik0wC1oFIBDUoRrqIvQgD18TFo/edit#gid=0)\n* Scenario test week outcome\n* etc.\n\n## Package Status\nUse this section to describe:\n* package stability\n* known bugs, issues\n* performance metrics,\n* etc\n\nIn other words, a general feeling on the health of this package.\n"
        },
        {
          "name": "QAReport.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: 3ddb995fe98f35a44818e802c99f4b1e\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.166015625,
          "content": "# Notice\n\n## No more development on 2d-extras GitHub repository\n\nWe are changing how we develop additional 2D Tiles and Brushes for 2D Tilemap. An important part of this change involves ensuring a single point of entry for users to get the latest tiles and brushes for Tilemap. To this end we created the Tilemap Extras package which is accessible from Package Manager. Moving forward, the 2D-extras GitHub repository will be made read-only. You will still be able to clone and pull the contents of the repository as it is right now.\n\nTilemap Extras already includes Animated Tiles, RuleTile (Rectangular Isometric and Hexagonal), the Rule Override Tiles, Group Brush, Line Brush, Random Brush and GameObject Brush. It also includes 3 samples covering common use-cases of Rule Tiles and Animated Tiles. Read more about Tilemap Extras in the announcement thread.\n\nIf there is functionality in 2d-extras that is important to your team and your product please let us know in this thread or start a discussion in the 2D forums and we will consider adding it to the Tilemap Extras package.\n\nFor issues with the Tilemap Extras please use the standard Unity channels via the Unity Bug Reporter and/or starting a thread in our forums instead of the GitHub Repository Issues tracker.\n\nThank you for all your contributions over the years. As always, let us know about your needs and project plans and we will endeavor to make Tilemap Extras an even better tool for developing 2D games in Unity!\n\n\n# 2d-extras\n\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \n\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\n\nAll items in the repository are grouped by use for a feature and are listed below.\n\n## How to use this\n\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\n\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\n\n### Download\n\n#### Setup\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\n\n### Package Manager Manifest\n\n#### Requirements\n[Git](https://git-scm.com/) must be installed and added to your path.\n\n#### Setup\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\n\n```json\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\n```\n\n### Tilemap\n\nFor use with Unity `2021.1.0f1` onwards. \n\nPlease use the `2020.3` branch for Unity 2020.1-2020.3 versions.\n\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\n\nPlease use the `2019.1` tag for Unity 2019.1 versions. \n\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \n\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \n\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\n\n##### Brushes\n\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \n\n##### Tiles\n\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\n\n##### Other\n\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) or this great [video](https://youtu.be/FwOxLkJTXag) for more information on how to use this!\n\n[![How to make Custom Rule Tiles in Unity Video](http://img.youtube.com/vi/FwOxLkJTXag/0.jpg)](http://www.youtube.com/watch?v=FwOxLkJTXag \"How to make Custom Rule Tiles in Unity\")\n\n"
        },
        {
          "name": "README.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: 8a2cf010fb12d5146a68fb9a7b4d89fe\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Runtime.meta",
          "type": "blob",
          "size": 0.16796875,
          "content": "fileFormatVersion: 2\nguid: bb6e0fae761c98e4babad8a6c2188e8d\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "Samples~",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests.meta",
          "type": "blob",
          "size": 0.16796875,
          "content": "fileFormatVersion: 2\nguid: 7e501fe6c6911484c907a1a3b00692dd\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "Third Party Notices.md",
          "type": "blob",
          "size": 1.4521484375,
          "content": "This package contains third-party software components governed by the license(s) indicated below:\n---------\n\nComponent Name: Line Brush\npublic static IEnumerable<Vector2Int> GetPointsOnLine(Vector2Int p1, Vector2Int p2)\nhttp://ericw.ca/notes/bresenhams-line-algorithm-in-csharp.html\n\nLicense Type: MIT\n\nCopyright (c) 2020 Eric Woroshow\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nericw.ca / Content © 2009-2020 Eric Woroshow. All rights reserved.\nCode under MIT license unless otherwise noted.\n\n---------\n"
        },
        {
          "name": "Third Party Notices.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: d131a2d0c5c33464b90253c59096277f\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.515625,
          "content": "{\n    \"name\": \"com.unity.2d.tilemap.extras\",\n    \"displayName\": \"2D Tilemap Extras\",\n    \"version\": \"2.2.5\",\n    \"unity\": \"2021.1\",\n    \"description\": \"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\\n\\nThe following are included in the package:\\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\\nTiles: Animated Tile, Rule Tile, Rule Override Tile\\nOther: Grid Information, Custom Rules for Rule Tile\",\n    \"keywords\": [\"2d\"],\n    \"category\": \"2D\",\n    \"dependencies\": {\n        \"com.unity.modules.tilemap\": \"1.0.0\",\n        \"com.unity.2d.tilemap\": \"1.0.0\",\n\t\t\"com.unity.ugui\": \"1.0.0\",\n\t\t\"com.unity.modules.jsonserialize\": \"1.0.0\"\n    },\n    \"relatedPackages\": {\n      \"com.unity.2d.tilemap.extras.tests\": \"2.2.5\"\n    },\n    \"samples\": [\n        {\n          \"displayName\": \"Waterfall Animated Tile\",\n          \"description\": \"An example implementation of an Animated Tile.\",\n          \"path\": \"Samples~/WaterfallAnimatedTile\"\n        },\n        {\n          \"displayName\": \"Pipe Rule Tile\",\n          \"description\": \"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.\",\n          \"path\": \"Samples~/PipeRuleTile\"\n        },\n        {\n          \"displayName\": \"Dungeon Rule Tile\",\n          \"description\": \"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.\",\n          \"path\": \"Samples~/DungeonRuleTile\"\n        }\n    ]\n}\n"
        },
        {
          "name": "package.json.meta",
          "type": "blob",
          "size": 0.1591796875,
          "content": "fileFormatVersion: 2\nguid: a9f15b7c9363d9944a7d69248fd279ec\nPackageManifestImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        }
      ]
    }
  ]
}