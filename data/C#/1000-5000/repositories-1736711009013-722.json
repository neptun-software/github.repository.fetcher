{
  "metadata": {
    "timestamp": 1736711009013,
    "page": 722,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "handzlikchris/FastScriptReload",
      "stars": 1658,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2568359375,
          "content": "/Library/\n/Logs/\n/Temp/\n/obj/Debug/\n/UserSettings\n*.csproj\n*.sln\n*.apk\n*.DotSettings\n*.vsconfig\n/.vs/*\n/.vsCode\n/Packages/com.unity.asset-store-tools/\n/Assets/FastScriptReload/Plugins/ImmersiveVrToolsCommon_Debug~/\n/Assets/FastScriptReload/Plugins/Harmony_Debug~/"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "﻿MIT License\n\nCopyright (c) 2020 Chris Handzlik\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.544921875,
          "content": "﻿[![Documentation](https://img.shields.io/badge/docs-blue.svg)](https://fastscriptreload.com/projects/fast-script-reload/documentation)\n[![Video Quick Start](https://img.shields.io/badge/video_tutorial-green.svg)](https://www.youtube.com/watch?v=ElzvL8M-tYw)\n[![Discord](https://img.shields.io/discord/1054303923743227925?label=Chat)](https://discord.gg/wBKuEAsKAq)\n[![License: MIT](https://img.shields.io/badge/Donate-red.svg)](https://www.patreon.com/FastScriptReload)\n\n\n**Are you tired of waiting for full domain-reload and script compilation every time you make a small code change?**\n\nMe too.\n\n[![Fast Script Reload](_github~/fast-script-reload-workflow.gif)](https://immersivevrtools.com/projects/fast-script-reload?action=play_video \"Watch Full Video\")\n[*Watch Full Video*](https://immersivevrtools.com/projects/fast-script-reload?action=play_video)\n\n# Fast Script Reload\n> Iterate on code insanely fast without breaking play session. Supports any editor. 1. Play 2. Make change 3. See results\n\nTool will automatically compile only what you've changed and immediately hot reload that into current play session.\n\nIterate on whatever you're working on without reentering play mode over and over again.\n\nAnd you don't have to adjust your code either, just import.\n\nWorks with any code editor.\n\n## Quickstart\n1) Download [latest FSR version](https://github.com/handzlikchris/FastScriptReload/releases/download/1.4-rc1/Fast.Script.Reload.unitypackage) and import to Unity\n> You can also install via package manager. Window -> Package Manager -> + -> Add package from Git url:\n> https://github.com/handzlikchris/FastScriptReload.git?path=Assets\n\n> Pulling other branches/commits can be done by appending branch name, eg https://github.com/handzlikchris/FastScriptReload.git?path=Assets#features/ai-code-rewrite-fixes\n3) Play\n3) Make Code Change\n4) See results\n\n**It's that simple.**\n\n[Quick start video created by Matt@SpeedTutor](https://www.youtube.com/watch?v=ElzvL8M-tYw)\n\n# Unity Asset Store Best Seller\nI was really chuffed to see FSR selling over 1000 copies on [Asset Store](https://assetstore.unity.com/packages/tools/utilities/fast-script-reload-239351?aid=1100ltZSe&pubref=github) in February - propelling it to #1 best-selling for a few days and keeping on first page for most of the month.\n\nGaining reviews like:\n> **Goosebumps and tears of joy**\n>\n> Felt like I was underwater and that I can breathe again. Just buy this stuff for any serious project. Working around the limitations is just worth it.\n\n## Hot-Reload on device / Live Script Reload\nYou can use same hot reload functionality in actual builds / on device. Iterate quickly on deployed Android APK / standalone windows build (exe).\n\n> It's a standalone, paid extension asset, if you'd like to support the product - [please consider grabbing a copy on Unity Asset Store](https://assetstore.unity.com/packages/tools/utilities/live-script-reload-on-device-hot-reload-239380?aid=1100ltZSe&pubref=fsr-github-lsr)\n\n## One-off custom code executions on Hot-Reload\nWhen you need to set the stage to test your feature out.\n\nAdd following methods to changed script:\n\n```\nvoid OnScriptHotReload()\n{\n    //do whatever you want to do with access to instance via 'this'\n}\n```\n\n```\nstatic void OnScriptHotReloadNoInstance()\n{\n    //do whatever you want to do without instance\n    //useful if you've added brand new type\n    //or want to simply execute some code without |any instance created.\n    //Like reload scene, call test function etc\n}\n```\n\n## Performance\n\nIt's a development tool, you're not supposed to ship with it! :)\nYour app performance won't be affected in any meaningful way though.\nBiggest bit is additional memory used for your re-compiled code.\nWon't be visible unless you make 100s of changes in same play-session.\n\n## Supports (Tested)\n- Windows / Mac (Intel editor version only) / Linux\n- Unity 2019.3\n- Unity 2020.3\n- Unity 2021.3\n- Unity 2022.2\n\n## Documentation\n[Full documentation is available here](https://fastscriptreload.com/projects/fast-script-reload/documentation)\n\n## Few things to have in mind, limitations:\n* most limitations can be overcome with User Defined Script Overrides (see docs for more info)\n\n### Generic methods and classes won't be Hot-Reloaded\nUnfortunately generics will not be Hot-Reloaded, to workaround you'd need to move code to non-generic class / method.\n\n### Creating new public methods\nHot-reload for new methods will only work with private methods (only called by changed code)\n\n### Adding new fields (Experimental support added in 1.3)\nYou can now add new fields and tweak them in editor! Minor limitations:\n- outside classes can not call new fields added at runtime\n- new fields will only show in editor if they were already used (at least once)\n\n### Extensive use of nested classed / structs\nIf your code-base contains lots of nested classes - you may see more compilation errors.\n\n### Mac Silicon Editor version not supported\nOn Mac only Intel Editor version is supported. For Silicon version logs will show that everything is fine but actual change will not happen at runtime\n\n### Other minor limitations\nThere are some other minor limitations, please consult full list\n\n## Roadmap\n> Soon whole roadmap will be published as Github project for better visibility.\n\n- more structured unit-tests, especially around script rewrite\n- add Mac/Linux support - **(DONE, added with 1.1)**\n- add debugger support for hot-reloaded scripts **(DONE, added with 1.2)**\n- allow to add new fields (adjustable in Editor) **(DONE, added with 1.3)**\n- editor mode support **(DONE, added with 1.4)**\n- better compiler support to workaround limitations\n\n\n### FAQ\n- My changes no longer automatically compile / reload\n> You probably allowed tool to change auto-reload to 'disabled' and have forgotten about it.\n>\n> You can reload changes manually with CTRL+R\n>\n> or reenable auto-reload - please go to `Edit -> Preferences -> Asset Pipeline -> Auto Refresh`and set to `Enabled Outside of Playmode`.\n> This way FSR will work in playmode and Unity will do full recompile when you hit 'stop'.\n\n- When importing I'm getting error: 'Unable to update following assemblies: (...)/ImmersiveVRTools.Common.Runtime.dll'\n> This happens occasionally, especially on upgrade between versions. It's harmless error that'll go away on play mode.\n\n- When upgrading between versions, eg 1.1 to 1.2 example scene cubes are pink\n> This is down to reimporting 'Point' prefab. Right now plugin will make sure it's using correct shader eg. URP / Built-in but only on initial import.\n\nTo fix please go to `FastScripReload\\Examples\\Point\\Point.prefab` and search for 'Point' shader.\n\n### Building Hot Reload for Unity - blog posts about technical approach (with code)\nI find FSR approach to hot reload very interesting (taking about being biased :)). I'm breaking down technical approach in a blog post series. You can find all about it here:\n\n[1) Building hot reload functionality](https://immersivevrtools.com/Blog/how-to-build-hot-reload-functionality-for-unity) | [Download Example Project Code](_github~/building-hot-reload-for-unity-blog-posts-example-code/01-simple-approach.zip)\n\n[2) Building hot reload for Unity builds / running directly on device](https://immersivevrtools.com/Blog/how-to-build-unity-hot-reload-on-device) | [Download Example Project Code](_github~/building-hot-reload-for-unity-blog-posts-example-code/02-hot-reload-on-device.zip)\n\n## Credits & Thanks\n- [Mono Mod](https://github.com/MonoMod/MonoMod) and [Harmony](https://github.com/pardeike/Harmony) - which provide runtime code detour that's at the core of hot reload approach.\n- [CatlikeCoding](https://www.youtube.com/c/CatlikeCoding) - example scene code\n\n# Support the project\nIf you got this far there's a good chance you're excited about FSR and want to help make it better.\nThat'd be really cool! There are few things you can do **that make huge difference.**\n\n## Rave about FSR to other game devs!\nSpread the word, let other devs know what it is, why is it cool and how it helps build your game.\nI'm sure once they try it they'll stay with us!\n\n## Help building it\nPing me on [Discord](https://discord.gg/wBKuEAsKAq) if you've got some time on your hands and would like to contribute!\n\nDoesn't have to be coding - there's a ton of stuff that can be done.\nGiving feedback on features, reporting issues, helping others  get started or just chatting and helping build FSR community. All that helps a lot!\n\n## Become a patron\nI'd love to continue spending most of my time making FSR better, as a indie dev however I need to balance that with paid client work. You can chip in to show your appreciation!\n\n**[Support FSR by becoming a patron!](https://www.patreon.com/FastScriptReload)**\n\n"
        },
        {
          "name": "_github~",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}