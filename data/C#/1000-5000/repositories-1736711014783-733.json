{
  "metadata": {
    "timestamp": 1736711014783,
    "page": 733,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "amantinband/clean-architecture",
      "stars": 1642,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 7.8759765625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from `dotnet new gitignore`\n\n# dotenv files\n.env\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# Tye\n.tye/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.tlog\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\n*.vbp\n\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\n*.dsw\n*.dsp\n\n# Visual Studio 6 technical files\n*.ncb\n*.aps\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# Visual Studio History (VSHistory) files\n.vshistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n# VS Code files for those working on multiple tools\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n*.code-workspace\n\n# Local History for Visual Studio Code\n.history/\n\n# Windows Installer files from build outputs\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# JetBrains Rider\n*.sln.iml\n.idea\n\n##\n## Visual studio for Mac\n##\n\n\n# globs\nMakefile.in\n*.userprefs\n*.usertasks\nconfig.make\nconfig.status\naclocal.m4\ninstall-sh\nautom4te.cache/\n*.tar.gz\ntarballs/\ntest-results/\n\n# Mac bundle stuff\n*.dmg\n*.app\n\n# content below from: https://github.com/github/gitignore/blob/master/Global/macOS.gitignore\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# content below from: https://github.com/github/gitignore/blob/master/Global/Windows.gitignore\n# Windows thumbnail cache files\nThumbs.db\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# Vim temporary swap files\n*.swp\n\n# Custom ignores\n\n.template.config\nassets\nrequests\nLICENSE\nREADME.md\n**/*.sqlite\n\n**/Dockerfile*\n**/docker-compose*"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 18.8232421875,
          "content": "root = true\r\n\r\n# All files\r\n[*]\r\nindent_style = space\r\n\r\n# Xml files\r\n[*.xml]\r\nindent_size = 2\r\n\r\n# C# files\r\n[*.cs]\r\n\r\n#### Core EditorConfig Options ####\r\n\r\n# Indentation and spacing\r\nindent_size = 4\r\ntab_width = 4\r\n\r\n# New line preferences\r\nend_of_line = crlf\r\ninsert_final_newline = false\r\n\r\n#### .NET Coding Conventions ####\r\n[*.{cs,vb}]\r\n\r\n# Organize usings\r\ndotnet_separate_import_directive_groups = true\r\ndotnet_sort_system_directives_first = true\r\nfile_header_template = unset\r\n\r\n# this. and Me. preferences\r\ndotnet_style_qualification_for_event = false:silent\r\ndotnet_style_qualification_for_field = false:silent\r\ndotnet_style_qualification_for_method = false:silent\r\ndotnet_style_qualification_for_property = false:silent\r\n\r\n# Language keywords vs BCL types preferences\r\ndotnet_style_predefined_type_for_locals_parameters_members = true:silent\r\ndotnet_style_predefined_type_for_member_access = true:silent\r\n\r\n# Parentheses preferences\r\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent\r\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent\r\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent\r\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent\r\n\r\n# Modifier preferences\r\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:silent\r\n\r\n# Expression-level preferences\r\ndotnet_style_coalesce_expression = true:suggestion\r\ndotnet_style_collection_initializer = true:suggestion\r\ndotnet_style_explicit_tuple_names = true:suggestion\r\ndotnet_style_null_propagation = true:suggestion\r\ndotnet_style_object_initializer = true:suggestion\r\ndotnet_style_operator_placement_when_wrapping = beginning_of_line\r\ndotnet_style_prefer_auto_properties = true:suggestion\r\ndotnet_style_prefer_compound_assignment = true:suggestion\r\ndotnet_style_prefer_conditional_expression_over_assignment = true:suggestion\r\ndotnet_style_prefer_conditional_expression_over_return = true:suggestion\r\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\r\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\r\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion\r\ndotnet_style_prefer_simplified_boolean_expressions = true:suggestion\r\ndotnet_style_prefer_simplified_interpolation = true:suggestion\r\n\r\n# Field preferences\r\ndotnet_style_readonly_field = true:warning\r\n\r\n# Parameter preferences\r\ndotnet_code_quality_unused_parameters = all:suggestion\r\n\r\n# Suppression preferences\r\ndotnet_remove_unnecessary_suppression_exclusions = none\r\n\r\n#### C# Coding Conventions ####\r\n[*.cs]\r\n\r\n# var preferences\r\ncsharp_style_var_elsewhere = false:silent\r\ncsharp_style_var_for_built_in_types = false:silent\r\ncsharp_style_var_when_type_is_apparent = false:silent\r\n\r\n# Expression-bodied members\r\ncsharp_style_expression_bodied_accessors = true:silent\r\ncsharp_style_expression_bodied_constructors = false:silent\r\ncsharp_style_expression_bodied_indexers = true:silent\r\ncsharp_style_expression_bodied_lambdas = true:suggestion\r\ncsharp_style_expression_bodied_local_functions = false:silent\r\ncsharp_style_expression_bodied_methods = false:silent\r\ncsharp_style_expression_bodied_operators = false:silent\r\ncsharp_style_expression_bodied_properties = true:silent\r\n\r\n# Pattern matching preferences\r\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\r\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\r\ncsharp_style_prefer_not_pattern = true:suggestion\r\ncsharp_style_prefer_pattern_matching = true:silent\r\ncsharp_style_prefer_switch_expression = true:suggestion\r\n\r\n# Null-checking preferences\r\ncsharp_style_conditional_delegate_call = true:suggestion\r\n\r\n# Modifier preferences\r\ncsharp_prefer_static_local_function = true:warning\r\ncsharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent\r\n\r\n# Code-block preferences\r\ncsharp_prefer_braces = true:silent\r\ncsharp_prefer_simple_using_statement = true:suggestion\r\n\r\n# Expression-level preferences\r\ncsharp_prefer_simple_default_expression = true:suggestion\r\ncsharp_style_deconstructed_variable_declaration = true:suggestion\r\ncsharp_style_inlined_variable_declaration = true:suggestion\r\ncsharp_style_pattern_local_over_anonymous_function = true:suggestion\r\ncsharp_style_prefer_index_operator = true:suggestion\r\ncsharp_style_prefer_range_operator = true:suggestion\r\ncsharp_style_throw_expression = true:suggestion\r\ncsharp_style_unused_value_assignment_preference = discard_variable:suggestion\r\ncsharp_style_unused_value_expression_statement_preference = discard_variable:silent\r\n\r\n# 'using' directive preferences\r\ncsharp_using_directive_placement = outside_namespace:silent\r\n\r\n#### C# Formatting Rules ####\r\n\r\n# New line preferences\r\ncsharp_new_line_before_catch = true\r\ncsharp_new_line_before_else = true\r\ncsharp_new_line_before_finally = true\r\ncsharp_new_line_before_members_in_anonymous_types = true\r\ncsharp_new_line_before_members_in_object_initializers = true\r\ncsharp_new_line_before_open_brace = all\r\ncsharp_new_line_between_query_expression_clauses = true\r\n\r\n# Indentation preferences\r\ncsharp_indent_block_contents = true\r\ncsharp_indent_braces = false\r\ncsharp_indent_case_contents = true\r\ncsharp_indent_case_contents_when_block = true\r\ncsharp_indent_labels = one_less_than_current\r\ncsharp_indent_switch_labels = true\r\n\r\n# Space preferences\r\ncsharp_space_after_cast = false\r\ncsharp_space_after_colon_in_inheritance_clause = true\r\ncsharp_space_after_comma = true\r\ncsharp_space_after_dot = false\r\ncsharp_space_after_keywords_in_control_flow_statements = true\r\ncsharp_space_after_semicolon_in_for_statement = true\r\ncsharp_space_around_binary_operators = before_and_after\r\ncsharp_space_around_declaration_statements = false\r\ncsharp_space_before_colon_in_inheritance_clause = true\r\ncsharp_space_before_comma = false\r\ncsharp_space_before_dot = false\r\ncsharp_space_before_open_square_brackets = false\r\ncsharp_space_before_semicolon_in_for_statement = false\r\ncsharp_space_between_empty_square_brackets = false\r\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\r\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\r\ncsharp_space_between_method_call_parameter_list_parentheses = false\r\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\r\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\r\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\r\ncsharp_space_between_parentheses = false\r\ncsharp_space_between_square_brackets = false\r\n\r\n# Wrapping preferences\r\ncsharp_preserve_single_line_blocks = true\r\ncsharp_preserve_single_line_statements = true\r\n\r\n#### Naming styles ####\r\n[*.{cs,vb}]\r\n\r\n# Naming rules\r\n\r\ndotnet_naming_rule.types_and_namespaces_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.types_and_namespaces_should_be_pascalcase.symbols = types_and_namespaces\r\ndotnet_naming_rule.types_and_namespaces_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.interfaces_should_be_ipascalcase.severity = suggestion\r\ndotnet_naming_rule.interfaces_should_be_ipascalcase.symbols = interfaces\r\ndotnet_naming_rule.interfaces_should_be_ipascalcase.style = ipascalcase\r\n\r\ndotnet_naming_rule.type_parameters_should_be_tpascalcase.severity = suggestion\r\ndotnet_naming_rule.type_parameters_should_be_tpascalcase.symbols = type_parameters\r\ndotnet_naming_rule.type_parameters_should_be_tpascalcase.style = tpascalcase\r\n\r\ndotnet_naming_rule.methods_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.methods_should_be_pascalcase.symbols = methods\r\ndotnet_naming_rule.methods_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.properties_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.properties_should_be_pascalcase.symbols = properties\r\ndotnet_naming_rule.properties_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.events_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.events_should_be_pascalcase.symbols = events\r\ndotnet_naming_rule.events_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.local_variables_should_be_camelcase.severity = suggestion\r\ndotnet_naming_rule.local_variables_should_be_camelcase.symbols = local_variables\r\ndotnet_naming_rule.local_variables_should_be_camelcase.style = camelcase\r\n\r\ndotnet_naming_rule.local_constants_should_be_camelcase.severity = suggestion\r\ndotnet_naming_rule.local_constants_should_be_camelcase.symbols = local_constants\r\ndotnet_naming_rule.local_constants_should_be_camelcase.style = camelcase\r\n\r\ndotnet_naming_rule.parameters_should_be_camelcase.severity = suggestion\r\ndotnet_naming_rule.parameters_should_be_camelcase.symbols = parameters\r\ndotnet_naming_rule.parameters_should_be_camelcase.style = camelcase\r\n\r\ndotnet_naming_rule.public_fields_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.public_fields_should_be_pascalcase.symbols = public_fields\r\ndotnet_naming_rule.public_fields_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.private_fields_should_be__camelcase.severity = suggestion\r\ndotnet_naming_rule.private_fields_should_be__camelcase.symbols = private_fields\r\ndotnet_naming_rule.private_fields_should_be__camelcase.style = _camelcase\r\n\r\ndotnet_naming_rule.private_static_fields_should_be_s_camelcase.severity = suggestion\r\ndotnet_naming_rule.private_static_fields_should_be_s_camelcase.symbols = private_static_fields\r\ndotnet_naming_rule.private_static_fields_should_be_s_camelcase.style = s_camelcase\r\n\r\ndotnet_naming_rule.public_constant_fields_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.public_constant_fields_should_be_pascalcase.symbols = public_constant_fields\r\ndotnet_naming_rule.public_constant_fields_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.private_constant_fields_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.private_constant_fields_should_be_pascalcase.symbols = private_constant_fields\r\ndotnet_naming_rule.private_constant_fields_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.public_static_readonly_fields_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.public_static_readonly_fields_should_be_pascalcase.symbols = public_static_readonly_fields\r\ndotnet_naming_rule.public_static_readonly_fields_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.private_static_readonly_fields_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.private_static_readonly_fields_should_be_pascalcase.symbols = private_static_readonly_fields\r\ndotnet_naming_rule.private_static_readonly_fields_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.enums_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.enums_should_be_pascalcase.symbols = enums\r\ndotnet_naming_rule.enums_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.local_functions_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.local_functions_should_be_pascalcase.symbols = local_functions\r\ndotnet_naming_rule.local_functions_should_be_pascalcase.style = pascalcase\r\n\r\ndotnet_naming_rule.non_field_members_should_be_pascalcase.severity = suggestion\r\ndotnet_naming_rule.non_field_members_should_be_pascalcase.symbols = non_field_members\r\ndotnet_naming_rule.non_field_members_should_be_pascalcase.style = pascalcase\r\n\r\n# Symbol specifications\r\n\r\ndotnet_naming_symbols.interfaces.applicable_kinds = interface\r\ndotnet_naming_symbols.interfaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.interfaces.required_modifiers = \r\n\r\ndotnet_naming_symbols.enums.applicable_kinds = enum\r\ndotnet_naming_symbols.enums.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.enums.required_modifiers = \r\n\r\ndotnet_naming_symbols.events.applicable_kinds = event\r\ndotnet_naming_symbols.events.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.events.required_modifiers = \r\n\r\ndotnet_naming_symbols.methods.applicable_kinds = method\r\ndotnet_naming_symbols.methods.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.methods.required_modifiers = \r\n\r\ndotnet_naming_symbols.properties.applicable_kinds = property\r\ndotnet_naming_symbols.properties.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.properties.required_modifiers = \r\n\r\ndotnet_naming_symbols.public_fields.applicable_kinds = field\r\ndotnet_naming_symbols.public_fields.applicable_accessibilities = public, internal\r\ndotnet_naming_symbols.public_fields.required_modifiers = \r\n\r\ndotnet_naming_symbols.private_fields.applicable_kinds = field\r\ndotnet_naming_symbols.private_fields.applicable_accessibilities = private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.private_fields.required_modifiers = \r\n\r\ndotnet_naming_symbols.private_static_fields.applicable_kinds = field\r\ndotnet_naming_symbols.private_static_fields.applicable_accessibilities = private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.private_static_fields.required_modifiers = static\r\n\r\ndotnet_naming_symbols.types_and_namespaces.applicable_kinds = namespace, class, struct, interface, enum\r\ndotnet_naming_symbols.types_and_namespaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.types_and_namespaces.required_modifiers = \r\n\r\ndotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method\r\ndotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.non_field_members.required_modifiers = \r\n\r\ndotnet_naming_symbols.type_parameters.applicable_kinds = namespace\r\ndotnet_naming_symbols.type_parameters.applicable_accessibilities = *\r\ndotnet_naming_symbols.type_parameters.required_modifiers = \r\n\r\ndotnet_naming_symbols.private_constant_fields.applicable_kinds = field\r\ndotnet_naming_symbols.private_constant_fields.applicable_accessibilities = private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.private_constant_fields.required_modifiers = const\r\n\r\ndotnet_naming_symbols.local_variables.applicable_kinds = local\r\ndotnet_naming_symbols.local_variables.applicable_accessibilities = local\r\ndotnet_naming_symbols.local_variables.required_modifiers = \r\n\r\ndotnet_naming_symbols.local_constants.applicable_kinds = local\r\ndotnet_naming_symbols.local_constants.applicable_accessibilities = local\r\ndotnet_naming_symbols.local_constants.required_modifiers = const\r\n\r\ndotnet_naming_symbols.parameters.applicable_kinds = parameter\r\ndotnet_naming_symbols.parameters.applicable_accessibilities = *\r\ndotnet_naming_symbols.parameters.required_modifiers = \r\n\r\ndotnet_naming_symbols.public_constant_fields.applicable_kinds = field\r\ndotnet_naming_symbols.public_constant_fields.applicable_accessibilities = public, internal\r\ndotnet_naming_symbols.public_constant_fields.required_modifiers = const\r\n\r\ndotnet_naming_symbols.public_static_readonly_fields.applicable_kinds = field\r\ndotnet_naming_symbols.public_static_readonly_fields.applicable_accessibilities = public, internal\r\ndotnet_naming_symbols.public_static_readonly_fields.required_modifiers = readonly, static\r\n\r\ndotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field\r\ndotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private, protected, protected_internal, private_protected\r\ndotnet_naming_symbols.private_static_readonly_fields.required_modifiers = readonly, static\r\n\r\ndotnet_naming_symbols.local_functions.applicable_kinds = local_function\r\ndotnet_naming_symbols.local_functions.applicable_accessibilities = *\r\ndotnet_naming_symbols.local_functions.required_modifiers = \r\n\r\n# Naming styles\r\n\r\ndotnet_naming_style.pascalcase.required_prefix = \r\ndotnet_naming_style.pascalcase.required_suffix = \r\ndotnet_naming_style.pascalcase.word_separator = \r\ndotnet_naming_style.pascalcase.capitalization = pascal_case\r\n\r\ndotnet_naming_style.ipascalcase.required_prefix = I\r\ndotnet_naming_style.ipascalcase.required_suffix = \r\ndotnet_naming_style.ipascalcase.word_separator = \r\ndotnet_naming_style.ipascalcase.capitalization = pascal_case\r\n\r\ndotnet_naming_style.tpascalcase.required_prefix = T\r\ndotnet_naming_style.tpascalcase.required_suffix = \r\ndotnet_naming_style.tpascalcase.word_separator = \r\ndotnet_naming_style.tpascalcase.capitalization = pascal_case\r\n\r\ndotnet_naming_style._camelcase.required_prefix = _\r\ndotnet_naming_style._camelcase.required_suffix = \r\ndotnet_naming_style._camelcase.word_separator = \r\ndotnet_naming_style._camelcase.capitalization = camel_case\r\n\r\ndotnet_naming_style.camelcase.required_prefix = \r\ndotnet_naming_style.camelcase.required_suffix = \r\ndotnet_naming_style.camelcase.word_separator = \r\ndotnet_naming_style.camelcase.capitalization = camel_case\r\n\r\ndotnet_naming_style.s_camelcase.required_prefix = s_\r\ndotnet_naming_style.s_camelcase.required_suffix = \r\ndotnet_naming_style.s_camelcase.word_separator = \r\ndotnet_naming_style.s_camelcase.capitalization = camel_case\r\n\r\n\r\n# Custom configurations\r\n\r\n# SA1600: Elements should be documented\r\ndotnet_diagnostic.SA1600.severity = none\r\n\r\n# SA1602: Enum Elements should be documented\r\ndotnet_diagnostic.SA1602.severity = none\r\n\r\n# SA1633: File must have header\r\ndotnet_diagnostic.SA1633.severity = none\r\n\r\n# SA1101: Prefix local calls with this\r\ndotnet_diagnostic.SA1101.severity = none\r\n\r\n# SA1309: Field names should not begin with underscore\r\ndotnet_diagnostic.SA1309.severity = none\r\n\r\n# SA1010: Opening square brackets should not be preceded by a space\r\ndotnet_diagnostic.SA1010.severity = none\r\n\r\n# SA1502: Element should not be on a single line\r\ndotnet_diagnostic.SA1502.severity = none\r\n\r\n# SA1201: A constructor should not follow a method\r\ndotnet_diagnostic.SA1201.severity = none\r\n\r\n# SA1516: Elements should be separated by blank line\r\ndotnet_diagnostic.SA1516.severity = none\r\n\r\n# SA0001: XML comment analysis is disabled due to project configuration\r\ndotnet_diagnostic.SA0001.severity = none\r\n\r\n# SA1204: Static members should appear before non-static members\r\ndotnet_diagnostic.SA1204.severity = none\r\n\r\n# SA1401: Field should be private\r\ndotnet_diagnostic.SA1401.severity = none\r\n\r\n# SA1313: Parameter should begin with lower-case letter\r\ndotnet_diagnostic.SA1313.severity = none\r\n\r\n# SA1518: File may not end with a newline character\r\ndotnet_diagnostic.SA1518.severity = none\r\n\r\n# SA1402: File may only contain a single type\r\ndotnet_diagnostic.SA1402.severity = none\r\n\r\n# SA1601: Partial elements should be documented\r\ndotnet_diagnostic.SA1601.severity = none\r\n\r\n# IDE1006: Prefix '_' is not expected\r\ndotnet_diagnostic.IDE1006.severity = none\r\n\r\n# SA1615: Element return value should be documented\r\ndotnet_diagnostic.SA1615.severity = none\r\n\r\n[**/Migrations/*]\r\ngenerated_code = true"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 8.2353515625,
          "content": "## Ignore Visual Studio temporary files, build results, and\r\n## files generated by popular Visual Studio add-ons.\r\n##\r\n## Get latest from `dotnet new gitignore`\r\n\r\n# dotenv files\r\n.env\r\n\r\n# User-specific files\r\n*.rsuser\r\n*.suo\r\n*.user\r\n*.userosscache\r\n*.sln.docstates\r\n\r\n# User-specific files (MonoDevelop/Xamarin Studio)\r\n*.userprefs\r\n\r\n# Mono auto generated files\r\nmono_crash.*\r\n\r\n# Build results\r\n[Dd]ebug/\r\n[Dd]ebugPublic/\r\n[Rr]elease/\r\n[Rr]eleases/\r\nx64/\r\nx86/\r\n[Ww][Ii][Nn]32/\r\n[Aa][Rr][Mm]/\r\n[Aa][Rr][Mm]64/\r\nbld/\r\n[Bb]in/\r\n[Oo]bj/\r\n[Ll]og/\r\n[Ll]ogs/\r\n\r\n# Visual Studio 2015/2017 cache/options directory\r\n.vs/\r\n# Uncomment if you have tasks that create the project's static files in wwwroot\r\n#wwwroot/\r\n\r\n# Visual Studio 2017 auto generated files\r\nGenerated\\ Files/\r\n\r\n# MSTest test Results\r\n[Tt]est[Rr]esult*/\r\n[Bb]uild[Ll]og.*\r\n\r\n# NUnit\r\n*.VisualState.xml\r\nTestResult.xml\r\nnunit-*.xml\r\n\r\n# Build Results of an ATL Project\r\n[Dd]ebugPS/\r\n[Rr]eleasePS/\r\ndlldata.c\r\n\r\n# Benchmark Results\r\nBenchmarkDotNet.Artifacts/\r\n\r\n# .NET\r\nproject.lock.json\r\nproject.fragment.lock.json\r\nartifacts/\r\n\r\n# Tye\r\n.tye/\r\n\r\n# ASP.NET Scaffolding\r\nScaffoldingReadMe.txt\r\n\r\n# StyleCop\r\nStyleCopReport.xml\r\n\r\n# Files built by Visual Studio\r\n*_i.c\r\n*_p.c\r\n*_h.h\r\n*.ilk\r\n*.meta\r\n*.obj\r\n*.iobj\r\n*.pch\r\n*.pdb\r\n*.ipdb\r\n*.pgc\r\n*.pgd\r\n*.rsp\r\n*.sbr\r\n*.tlb\r\n*.tli\r\n*.tlh\r\n*.tmp\r\n*.tmp_proj\r\n*_wpftmp.csproj\r\n*.log\r\n*.tlog\r\n*.vspscc\r\n*.vssscc\r\n.builds\r\n*.pidb\r\n*.svclog\r\n*.scc\r\n\r\n# Chutzpah Test files\r\n_Chutzpah*\r\n\r\n# Visual C++ cache files\r\nipch/\r\n*.aps\r\n*.ncb\r\n*.opendb\r\n*.opensdf\r\n*.sdf\r\n*.cachefile\r\n*.VC.db\r\n*.VC.VC.opendb\r\n\r\n# Visual Studio profiler\r\n*.psess\r\n*.vsp\r\n*.vspx\r\n*.sap\r\n\r\n# Visual Studio Trace Files\r\n*.e2e\r\n\r\n# TFS 2012 Local Workspace\r\n$tf/\r\n\r\n# Guidance Automation Toolkit\r\n*.gpState\r\n\r\n# ReSharper is a .NET coding add-in\r\n_ReSharper*/\r\n*.[Rr]e[Ss]harper\r\n*.DotSettings.user\r\n\r\n# TeamCity is a build add-in\r\n_TeamCity*\r\n\r\n# DotCover is a Code Coverage Tool\r\n*.dotCover\r\n\r\n# AxoCover is a Code Coverage Tool\r\n.axoCover/*\r\n!.axoCover/settings.json\r\n\r\n# Coverlet is a free, cross platform Code Coverage Tool\r\ncoverage*.json\r\ncoverage*.xml\r\ncoverage*.info\r\n\r\n# Visual Studio code coverage results\r\n*.coverage\r\n*.coveragexml\r\n\r\n# NCrunch\r\n_NCrunch_*\r\n.*crunch*.local.xml\r\nnCrunchTemp_*\r\n\r\n# MightyMoose\r\n*.mm.*\r\nAutoTest.Net/\r\n\r\n# Web workbench (sass)\r\n.sass-cache/\r\n\r\n# Installshield output folder\r\n[Ee]xpress/\r\n\r\n# DocProject is a documentation generator add-in\r\nDocProject/buildhelp/\r\nDocProject/Help/*.HxT\r\nDocProject/Help/*.HxC\r\nDocProject/Help/*.hhc\r\nDocProject/Help/*.hhk\r\nDocProject/Help/*.hhp\r\nDocProject/Help/Html2\r\nDocProject/Help/html\r\n\r\n# Click-Once directory\r\npublish/\r\n\r\n# Publish Web Output\r\n*.[Pp]ublish.xml\r\n*.azurePubxml\r\n# Note: Comment the next line if you want to checkin your web deploy settings,\r\n# but database connection strings (with potential passwords) will be unencrypted\r\n*.pubxml\r\n*.publishproj\r\n\r\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\r\n# checkin your Azure Web App publish settings, but sensitive information contained\r\n# in these scripts will be unencrypted\r\nPublishScripts/\r\n\r\n# NuGet Packages\r\n*.nupkg\r\n# NuGet Symbol Packages\r\n*.snupkg\r\n# The packages folder can be ignored because of Package Restore\r\n**/[Pp]ackages/*\r\n# except build/, which is used as an MSBuild target.\r\n!**/[Pp]ackages/build/\r\n# Uncomment if necessary however generally it will be regenerated when needed\r\n#!**/[Pp]ackages/repositories.config\r\n# NuGet v3's project.json files produces more ignorable files\r\n*.nuget.props\r\n*.nuget.targets\r\n\r\n# Microsoft Azure Build Output\r\ncsx/\r\n*.build.csdef\r\n\r\n# Microsoft Azure Emulator\r\necf/\r\nrcf/\r\n\r\n# Windows Store app package directories and files\r\nAppPackages/\r\nBundleArtifacts/\r\nPackage.StoreAssociation.xml\r\n_pkginfo.txt\r\n*.appx\r\n*.appxbundle\r\n*.appxupload\r\n\r\n# Visual Studio cache files\r\n# files ending in .cache can be ignored\r\n*.[Cc]ache\r\n# but keep track of directories ending in .cache\r\n!?*.[Cc]ache/\r\n\r\n# Others\r\nClientBin/\r\n~$*\r\n*~\r\n*.dbmdl\r\n*.dbproj.schemaview\r\n*.jfm\r\n*.pfx\r\n*.publishsettings\r\norleans.codegen.cs\r\n\r\n# Including strong name files can present a security risk\r\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\r\n#*.snk\r\n\r\n# Since there are multiple workflows, uncomment next line to ignore bower_components\r\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\r\n#bower_components/\r\n\r\n# RIA/Silverlight projects\r\nGenerated_Code/\r\n\r\n# Backup & report files from converting an old project file\r\n# to a newer Visual Studio version. Backup files are not needed,\r\n# because we have git ;-)\r\n_UpgradeReport_Files/\r\nBackup*/\r\nUpgradeLog*.XML\r\nUpgradeLog*.htm\r\nServiceFabricBackup/\r\n*.rptproj.bak\r\n\r\n# SQL Server files\r\n*.mdf\r\n*.ldf\r\n*.ndf\r\n\r\n# Business Intelligence projects\r\n*.rdl.data\r\n*.bim.layout\r\n*.bim_*.settings\r\n*.rptproj.rsuser\r\n*- [Bb]ackup.rdl\r\n*- [Bb]ackup ([0-9]).rdl\r\n*- [Bb]ackup ([0-9][0-9]).rdl\r\n\r\n# Microsoft Fakes\r\nFakesAssemblies/\r\n\r\n# GhostDoc plugin setting file\r\n*.GhostDoc.xml\r\n\r\n# Node.js Tools for Visual Studio\r\n.ntvs_analysis.dat\r\nnode_modules/\r\n\r\n# Visual Studio 6 build log\r\n*.plg\r\n\r\n# Visual Studio 6 workspace options file\r\n*.opt\r\n\r\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\r\n*.vbw\r\n\r\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\r\n*.vbp\r\n\r\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\r\n*.dsw\r\n*.dsp\r\n\r\n# Visual Studio 6 technical files\r\n*.ncb\r\n*.aps\r\n\r\n# Visual Studio LightSwitch build output\r\n**/*.HTMLClient/GeneratedArtifacts\r\n**/*.DesktopClient/GeneratedArtifacts\r\n**/*.DesktopClient/ModelManifest.xml\r\n**/*.Server/GeneratedArtifacts\r\n**/*.Server/ModelManifest.xml\r\n_Pvt_Extensions\r\n\r\n# Paket dependency manager\r\n.paket/paket.exe\r\npaket-files/\r\n\r\n# FAKE - F# Make\r\n.fake/\r\n\r\n# CodeRush personal settings\r\n.cr/personal\r\n\r\n# Python Tools for Visual Studio (PTVS)\r\n__pycache__/\r\n*.pyc\r\n\r\n# Cake - Uncomment if you are using it\r\n# tools/**\r\n# !tools/packages.config\r\n\r\n# Tabs Studio\r\n*.tss\r\n\r\n# Telerik's JustMock configuration file\r\n*.jmconfig\r\n\r\n# BizTalk build output\r\n*.btp.cs\r\n*.btm.cs\r\n*.odx.cs\r\n*.xsd.cs\r\n\r\n# OpenCover UI analysis results\r\nOpenCover/\r\n\r\n# Azure Stream Analytics local run output\r\nASALocalRun/\r\n\r\n# MSBuild Binary and Structured Log\r\n*.binlog\r\n\r\n# NVidia Nsight GPU debugger configuration file\r\n*.nvuser\r\n\r\n# MFractors (Xamarin productivity tool) working folder\r\n.mfractor/\r\n\r\n# Local History for Visual Studio\r\n.localhistory/\r\n\r\n# Visual Studio History (VSHistory) files\r\n.vshistory/\r\n\r\n# BeatPulse healthcheck temp database\r\nhealthchecksdb\r\n\r\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\r\nMigrationBackup/\r\n\r\n# Ionide (cross platform F# VS Code tools) working folder\r\n.ionide/\r\n\r\n# Fody - auto-generated XML schema\r\nFodyWeavers.xsd\r\n\r\n# VS Code files for those working on multiple tools\r\n.vscode/*\r\n!.vscode/settings.json\r\n!.vscode/tasks.json\r\n!.vscode/launch.json\r\n!.vscode/extensions.json\r\n*.code-workspace\r\n\r\n# Local History for Visual Studio Code\r\n.history/\r\n\r\n# Windows Installer files from build outputs\r\n*.cab\r\n*.msi\r\n*.msix\r\n*.msm\r\n*.msp\r\n\r\n# JetBrains Rider\r\n*.sln.iml\r\n.idea\r\n\r\n##\r\n## Visual studio for Mac\r\n##\r\n\r\n\r\n# globs\r\nMakefile.in\r\n*.userprefs\r\n*.usertasks\r\nconfig.make\r\nconfig.status\r\naclocal.m4\r\ninstall-sh\r\nautom4te.cache/\r\n*.tar.gz\r\ntarballs/\r\ntest-results/\r\n\r\n# Mac bundle stuff\r\n*.dmg\r\n*.app\r\n\r\n# content below from: https://github.com/github/gitignore/blob/master/Global/macOS.gitignore\r\n# General\r\n.DS_Store\r\n.AppleDouble\r\n.LSOverride\r\n\r\n# Icon must end with two \\r\r\nIcon\r\n\r\n\r\n# Thumbnails\r\n._*\r\n\r\n# Files that might appear in the root of a volume\r\n.DocumentRevisions-V100\r\n.fseventsd\r\n.Spotlight-V100\r\n.TemporaryItems\r\n.Trashes\r\n.VolumeIcon.icns\r\n.com.apple.timemachine.donotpresent\r\n\r\n# Directories potentially created on remote AFP share\r\n.AppleDB\r\n.AppleDesktop\r\nNetwork Trash Folder\r\nTemporary Items\r\n.apdisk\r\n\r\n# content below from: https://github.com/github/gitignore/blob/master/Global/Windows.gitignore\r\n# Windows thumbnail cache files\r\nThumbs.db\r\nehthumbs.db\r\nehthumbs_vista.db\r\n\r\n# Dump file\r\n*.stackdump\r\n\r\n# Folder config file\r\n[Dd]esktop.ini\r\n\r\n# Recycle Bin used on file shares\r\n$RECYCLE.BIN/\r\n\r\n# Windows Installer files\r\n*.cab\r\n*.msi\r\n*.msix\r\n*.msm\r\n*.msp\r\n\r\n# Windows shortcuts\r\n*.lnk\r\n\r\n# Vim temporary swap files\r\n*.swp\r\n"
        },
        {
          "name": ".template.config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Amantinband.CleanArchitecture.Template.nuspec",
          "type": "blob",
          "size": 0.869140625,
          "content": "<?xml version=\"1.0\"?>\n<package xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\n  <metadata>\n    <id>Amantinband.CleanArchitecture.Template</id>\n    <version>1.1.1</version>\n    <authors>amantinband</authors>\n    <description>.NET 8 Clean Architecture Template</description>\n    <projectUrl>https://github.com/amantinband/clean-architecture</projectUrl>\n    <repository type=\"git\" url=\"https://github.com/amantinband/clean-architecture\" branch=\"main\" />\n    <tags>clean-architecture asp-net asp-net-core clean architecture template</tags>\n    <license type=\"expression\">MIT</license>\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\n    <icon>content/assets/icon.png</icon>\n    <readme>content/README.md</readme>\n  </metadata>\n\n  <files>\n    <file src=\"**\" target=\"content\" exclude=\".git\\**;**\\bin\\**;**\\obj\\**;.github\\**;*.nuspec\" />\n  </files>\n\n</package>\n"
        },
        {
          "name": "CleanArchitecture.sln",
          "type": "blob",
          "size": 6.986328125,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 17\r\nVisualStudioVersion = 17.0.31903.59\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{E6C0A80B-5ADC-4138-A79D-C9C128EA163B}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CleanArchitecture.Api\", \"src\\CleanArchitecture.Api\\CleanArchitecture.Api.csproj\", \"{0B9F7D22-2A37-4EB6-A410-32BA01213D2A}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CleanArchitecture.Application\", \"src\\CleanArchitecture.Application\\CleanArchitecture.Application.csproj\", \"{387688C4-17C9-4BDC-A144-4A53CD73C931}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CleanArchitecture.Contracts\", \"src\\CleanArchitecture.Contracts\\CleanArchitecture.Contracts.csproj\", \"{804C9341-86F4-40FD-90A5-BFF6EB7B7BB3}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CleanArchitecture.Domain\", \"src\\CleanArchitecture.Domain\\CleanArchitecture.Domain.csproj\", \"{E1DF54B6-BF5F-43F0-8E52-6398C68FB5E5}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CleanArchitecture.Infrastructure\", \"src\\CleanArchitecture.Infrastructure\\CleanArchitecture.Infrastructure.csproj\", \"{7D84EEE6-905F-4356-B927-60F2686406C9}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"tests\", \"tests\", \"{1DD25606-DF8E-4B91-9335-F916B14BF596}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CleanArchitecture.Domain.UnitTests\", \"tests\\CleanArchitecture.Domain.UnitTests\\CleanArchitecture.Domain.UnitTests.csproj\", \"{D796849D-C8BE-44CB-87E1-5DB49A4B377E}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TestCommon\", \"tests\\TestCommon\\TestCommon.csproj\", \"{39082959-A18B-423A-9E3F-0B9FAD42F697}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CleanArchitecture.Application.UnitTests\", \"tests\\CleanArchitecture.Application.UnitTests\\CleanArchitecture.Application.UnitTests.csproj\", \"{9ED129C8-9C2F-4E19-8CCC-51FBC5CDE0A7}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CleanArchitecture.Application.SubcutaneousTests\", \"tests\\CleanArchitecture.Application.SubcutaneousTests\\CleanArchitecture.Application.SubcutaneousTests.csproj\", \"{EC6267FA-4762-400A-8D7C-0FC0FB167AE8}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CleanArchitecture.Api.IntegrationTests\", \"tests\\CleanArchitecture.Api.IntegrationTests\\CleanArchitecture.Api.IntegrationTests.csproj\", \"{2A315D67-B631-478A-8F67-9EE9DB03D0C5}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{0B9F7D22-2A37-4EB6-A410-32BA01213D2A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{0B9F7D22-2A37-4EB6-A410-32BA01213D2A}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{0B9F7D22-2A37-4EB6-A410-32BA01213D2A}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{0B9F7D22-2A37-4EB6-A410-32BA01213D2A}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{387688C4-17C9-4BDC-A144-4A53CD73C931}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{387688C4-17C9-4BDC-A144-4A53CD73C931}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{387688C4-17C9-4BDC-A144-4A53CD73C931}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{387688C4-17C9-4BDC-A144-4A53CD73C931}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{804C9341-86F4-40FD-90A5-BFF6EB7B7BB3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{804C9341-86F4-40FD-90A5-BFF6EB7B7BB3}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{804C9341-86F4-40FD-90A5-BFF6EB7B7BB3}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{804C9341-86F4-40FD-90A5-BFF6EB7B7BB3}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{E1DF54B6-BF5F-43F0-8E52-6398C68FB5E5}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{E1DF54B6-BF5F-43F0-8E52-6398C68FB5E5}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{E1DF54B6-BF5F-43F0-8E52-6398C68FB5E5}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{E1DF54B6-BF5F-43F0-8E52-6398C68FB5E5}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{7D84EEE6-905F-4356-B927-60F2686406C9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{7D84EEE6-905F-4356-B927-60F2686406C9}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{7D84EEE6-905F-4356-B927-60F2686406C9}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{7D84EEE6-905F-4356-B927-60F2686406C9}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{D796849D-C8BE-44CB-87E1-5DB49A4B377E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{D796849D-C8BE-44CB-87E1-5DB49A4B377E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{D796849D-C8BE-44CB-87E1-5DB49A4B377E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{D796849D-C8BE-44CB-87E1-5DB49A4B377E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{39082959-A18B-423A-9E3F-0B9FAD42F697}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{39082959-A18B-423A-9E3F-0B9FAD42F697}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{39082959-A18B-423A-9E3F-0B9FAD42F697}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{39082959-A18B-423A-9E3F-0B9FAD42F697}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{9ED129C8-9C2F-4E19-8CCC-51FBC5CDE0A7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{9ED129C8-9C2F-4E19-8CCC-51FBC5CDE0A7}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{9ED129C8-9C2F-4E19-8CCC-51FBC5CDE0A7}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{9ED129C8-9C2F-4E19-8CCC-51FBC5CDE0A7}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{EC6267FA-4762-400A-8D7C-0FC0FB167AE8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{EC6267FA-4762-400A-8D7C-0FC0FB167AE8}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{EC6267FA-4762-400A-8D7C-0FC0FB167AE8}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{EC6267FA-4762-400A-8D7C-0FC0FB167AE8}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{2A315D67-B631-478A-8F67-9EE9DB03D0C5}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{2A315D67-B631-478A-8F67-9EE9DB03D0C5}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{2A315D67-B631-478A-8F67-9EE9DB03D0C5}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{2A315D67-B631-478A-8F67-9EE9DB03D0C5}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{0B9F7D22-2A37-4EB6-A410-32BA01213D2A} = {E6C0A80B-5ADC-4138-A79D-C9C128EA163B}\r\n\t\t{387688C4-17C9-4BDC-A144-4A53CD73C931} = {E6C0A80B-5ADC-4138-A79D-C9C128EA163B}\r\n\t\t{804C9341-86F4-40FD-90A5-BFF6EB7B7BB3} = {E6C0A80B-5ADC-4138-A79D-C9C128EA163B}\r\n\t\t{E1DF54B6-BF5F-43F0-8E52-6398C68FB5E5} = {E6C0A80B-5ADC-4138-A79D-C9C128EA163B}\r\n\t\t{7D84EEE6-905F-4356-B927-60F2686406C9} = {E6C0A80B-5ADC-4138-A79D-C9C128EA163B}\r\n\t\t{D796849D-C8BE-44CB-87E1-5DB49A4B377E} = {1DD25606-DF8E-4B91-9335-F916B14BF596}\r\n\t\t{39082959-A18B-423A-9E3F-0B9FAD42F697} = {1DD25606-DF8E-4B91-9335-F916B14BF596}\r\n\t\t{9ED129C8-9C2F-4E19-8CCC-51FBC5CDE0A7} = {1DD25606-DF8E-4B91-9335-F916B14BF596}\r\n\t\t{EC6267FA-4762-400A-8D7C-0FC0FB167AE8} = {1DD25606-DF8E-4B91-9335-F916B14BF596}\r\n\t\t{2A315D67-B631-478A-8F67-9EE9DB03D0C5} = {1DD25606-DF8E-4B91-9335-F916B14BF596}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.5009765625,
          "content": "<Project>\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n    <LangVersion>preview</LangVersion>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"StyleCop.Analyzers\" >\n        <PrivateAssets>all</PrivateAssets>\n        <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\n    </PackageReference>\n  </ItemGroup>\n\n</Project>"
        },
        {
          "name": "Directory.Packages.props",
          "type": "blob",
          "size": 2.623046875,
          "content": "<Project>\n  <PropertyGroup>\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\n  </PropertyGroup>\n  <ItemGroup>\n    <!-- ASP.NET -->\n    <PackageVersion Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.Identity.EntityFrameworkCore\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\n    <PackageVersion Include=\"Microsoft.Extensions.Configuration.Abstractions\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"7.0.0\" />\n    <PackageVersion Include=\"Microsoft.Extensions.DependencyInjection.Abstractions\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.OpenApi\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Swashbuckle.AspNetCore\" Version=\"6.5.0\" />\n    <!-- Entity Framework -->\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore.Sqlite\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"8.0.0\" />\n    <!-- Awesome open-source packages -->\n    <PackageVersion Include=\"Ardalis.SmartEnum\" Version=\"7.0.0\" />\n    <PackageVersion Include=\"ErrorOr\" Version=\"1.6.0\" />\n    <PackageVersion Include=\"MediatR\" Version=\"12.2.0\" />\n    <PackageVersion Include=\"FluentValidation\" Version=\"11.9.0\" />\n    <PackageVersion Include=\"FluentValidation.AspNetCore\" Version=\"11.3.0\" />\n    <PackageVersion Include=\"FluentEmail.Core\" Version=\"3.0.2\" />\n    <PackageVersion Include=\"FluentEmail.Smtp\" Version=\"3.0.2\" />\n    <!-- Analyzers -->\n    <PackageVersion Include=\"StyleCop.Analyzers\" Version=\"1.2.0-beta.556\" />\n    <!-- Tests -->\n    <PackageVersion Include=\"Microsoft.AspNetCore.Mvc.Testing\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"FluentAssertions\" Version=\"6.12.0\" />\n    <PackageVersion Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.8.0\" />\n    <PackageVersion Include=\"throw\" Version=\"1.4.0\" />\n    <PackageVersion Include=\"xunit\" Version=\"2.6.5\" />\n    <PackageVersion Include=\"xunit.runner.visualstudio\" Version=\"2.5.6\" />\n    <PackageVersion Include=\"coverlet.collector\" Version=\"6.0.0\" />\n    <PackageVersion Include=\"NSubstitute\" Version=\"5.1.0\" />\n    <!-- Auth -->\n    <PackageVersion Include=\"Microsoft.Extensions.Identity.Core\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"System.IdentityModel.Tokens.Jwt\" Version=\"7.2.0\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.Authentication\" Version=\"2.2.0\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"8.0.0\" />\n  </ItemGroup>\n</Project>\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.1005859375,
          "content": "FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\nCOPY [\"src/CleanArchitecture.Api/CleanArchitecture.Api.csproj\", \"CleanArchitecture.Api/\"]\nCOPY [\"src/CleanArchitecture.Application/CleanArchitecture.Application.csproj\", \"CleanArchitecture.Application/\"]\nCOPY [\"src/CleanArchitecture.Domain/CleanArchitecture.Domain.csproj\", \"CleanArchitecture.Domain/\"]\nCOPY [\"src/CleanArchitecture.Contracts/CleanArchitecture.Contracts.csproj\", \"CleanArchitecture.Contracts/\"]\nCOPY [\"src/CleanArchitecture.Infrastructure/CleanArchitecture.Infrastructure.csproj\", \"CleanArchitecture.Infrastructure/\"]\nCOPY [\"Directory.Packages.props\", \"./\"]\nCOPY [\"Directory.Build.props\", \"./\"]\nRUN dotnet restore \"CleanArchitecture.Api/CleanArchitecture.Api.csproj\"\nCOPY . ../\nWORKDIR /src/CleanArchitecture.Api\nRUN dotnet build \"CleanArchitecture.Api.csproj\" -c Release -o /app/build\n\nFROM build AS publish\nRUN dotnet publish --no-restore -c Release -o /app/publish\n\nFROM mcr.microsoft.com/dotnet/aspnet:8.0\nENV ASPNETCORE_HTTP_PORTS=5001\nEXPOSE 5001\nWORKDIR /app\nCOPY --from=publish /app/publish .\nENTRYPOINT [\"dotnet\", \"CleanArchitecture.Api.dll\"]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "MIT License\n\nCopyright (c) 2023 Amichai Mantinband\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.369140625,
          "content": "<div align=\"center\">\n\n[![Build](https://github.com/amantinband/clean-architecture/actions/workflows/build.yml/badge.svg)](https://github.com/amantinband/clean-architecture/actions/workflows/build.yml) [![Publish template to NuGet](https://github.com/amantinband/clean-architecture/actions/workflows/publish.yml/badge.svg)](https://github.com/amantinband/clean-architecture/actions/workflows/publish.yml)\n\n[![GitHub contributors](https://img.shields.io/github/contributors/amantinband/clean-architecture)](https://GitHub.com/amantinband/clean-architecture/graphs/contributors/) [![GitHub Stars](https://img.shields.io/github/stars/amantinband/clean-architecture.svg)](https://github.com/amantinband/clean-architecture/stargazers) [![GitHub license](https://img.shields.io/github/license/amantinband/clean-architecture)](https://github.com/amantinband/clean-architecture/blob/main/LICENSE)\n[![codecov](https://codecov.io/gh/amantinband/clean-architecture/branch/main/graph/badge.svg?token=DR2EBIWK7B)](https://codecov.io/gh/amantinband/clean-architecture)\n\n---\n\n![Clean Architecture Template Title](assets/Clean%20Architecture%20Template%20Title.png)\n\n---\n\n</div>\n\n```shell\ndotnet new install Amantinband.CleanArchitecture.Template\n\ndotnet new clean-arch -o CleanArchitecture\n```\n\n- [️Important notice ⚠️](#️important-notice-️)\n- [Give it a star ⭐](#give-it-a-star-)\n- [Domain Overview 🌍](#domain-overview-)\n  - [Basic Subscription](#basic-subscription)\n  - [Pro Subscription](#pro-subscription)\n- [Use Cases / Features 🤓](#use-cases--features-)\n  - [Subscriptions](#subscriptions)\n  - [Reminders](#reminders)\n- [Getting Started 🏃](#getting-started-)\n  - [YouTube Tutorial](#youtube-tutorial)\n  - [Install the template or clone the project](#install-the-template-or-clone-the-project)\n  - [Run the service using Docker or the .NET CLI](#run-the-service-using-docker-or-the-net-cli)\n  - [Generate a token](#generate-a-token)\n  - [Create a subscription](#create-a-subscription)\n  - [Create a reminder](#create-a-reminder)\n- [Folder Structure 📁](#folder-structure-)\n- [Authorization 🔐](#authorization-)\n  - [Authorization Types](#authorization-types)\n    - [Role-Based Authorization](#role-based-authorization)\n    - [Permission-Based Authorization](#permission-based-authorization)\n    - [Policy-Based Authorization](#policy-based-authorization)\n  - [Mixing Authorization Types](#mixing-authorization-types)\n- [Testing 📝](#testing-)\n  - [Test Types](#test-types)\n    - [Domain Layer Unit Tests](#domain-layer-unit-tests)\n    - [Application Layer Unit Tests](#application-layer-unit-tests)\n    - [Application Layer Subcutaneous Tests](#application-layer-subcutaneous-tests)\n    - [Presentation Layer Integration Tests](#presentation-layer-integration-tests)\n- [Fun features 💃🕺](#fun-features-)\n  - [Domain Events \\& Eventual Consistency](#domain-events--eventual-consistency)\n    - [Eventual Consistency Mechanism](#eventual-consistency-mechanism)\n  - [Background service for sending email reminders](#background-service-for-sending-email-reminders)\n    - [Configure Email Settings](#configure-email-settings)\n    - [Configure Email Settings Manually](#configure-email-settings-manually)\n    - [Configure Email Settings via User Secrets](#configure-email-settings-via-user-secrets)\n- [Contribution 🤲](#contribution-)\n- [Credits 🙏](#credits-)\n- [License 🪪](#license-)\n\n# ️Important notice ⚠️\n\nThis template is still under construction 👷.\n\nCheck out my comprehensive [course](https://dometrain.com/bundle/from-zero-to-hero-clean-architecture/?coupon_code=GITHUB) on Dometrain where I cover everything you need to know when building production applications structured following clean architecture. Use the exclusive coupon code `GITHUB` to get 5% off (btw this is the only promo code for a discount on the bundle, which is already 20% off).\n\n<img src=\"assets/Clean%20Architecture%20Template%20Promo%20Code.png\" height=30px >\n\n# Give it a star ⭐\n\nLoving it? Show your support by giving this project a star!\n\n# Domain Overview 🌍\n\nThis is a simple reminder application. It allows users to create and manage their reminders.\n\nTo create reminders, a user must have an active subscription.\n\n## Basic Subscription\n\nUsers with a basic subscription can create up to 3 daily reminders.\n\n## Pro Subscription\n\nUsers with a pro subscription do not have a daily limit on the number of reminders.\n\n# Use Cases / Features 🤓\n\n## Subscriptions\n\n1. Create Subscription\n1. Get Subscription\n1. Cancel Subscription\n\n## Reminders\n\n1. Set Reminder\n1. Get Reminder\n1. Delete Reminder\n1. Dismiss Reminder\n1. List Reminders\n\n# Getting Started 🏃\n\n## YouTube Tutorial\n\n[![Clean Architecture Tutorial](https://img.youtube.com/vi/DTmlhHu8tHA/0.jpg)](https://www.youtube.com/watch?v=DTmlhHu8tHA)\n\n## Install the template or clone the project\n\n```shell\ndotnet new install Amantinband.CleanArchitecture.Template\n\ndotnet new clean-arch -o CleanArchitecture\n```\n\nor\n\n```shell\ngit clone https://github.com/amantinband/clean-architecture\n```\n\n## Run the service using Docker or the .NET CLI\n\n```shell\ndocker compose up\n```\n\nor\n\n```shell\ndotnet run --project src/CleanArchitecture.Api\n```\n\n## Generate a token\n\nNavigate to `requests/Tokens/GenerateToken.http` and generate a token.\n\n> Note: Since most systems use an external identity provider, this project uses a simple token generator endpoint that generates a token based on the details you provide. This is a simple way to generate a token for testing purposes and is closer to how your system will likely be designed when using an external identity provider.\n\n```yaml\nPOST {{host}}/tokens/generate\nContent-Type: application/json\n```\n\n```http\n{\n    \"Id\": \"bae93bf5-9e3c-47b3-aace-3034653b6bb2\",\n    \"FirstName\": \"Amichai\",\n    \"LastName\": \"Mantinband\",\n    \"Email\": \"amichai@mantinband.com\",\n    \"Permissions\": [\n        \"set:reminder\",\n        \"get:reminder\",\n        \"dismiss:reminder\",\n        \"delete:reminder\",\n        \"create:subscription\",\n        \"delete:subscription\",\n        \"get:subscription\"\n    ],\n    \"Roles\": [\n        \"Admin\"\n    ]\n}\n```\n\n> ### NOTE: Replacing http file variables (`{{variableName}}`)\n>\n> #### Option 1 (recommended) - Using the [REST Client](https://marketplace.visualstudio.com/items?itemName=humao.rest-client) extension for VS Code\n>\n> Use the [REST Client](https://marketplace.visualstudio.com/items?itemName=humao.rest-client) extension for VS Code + update the values under [.vscode/settings.json](.vscode/settings.json). This will update the value for all http files.\n>\n> ```json\n> {\n>    \"rest-client.environmentVariables\": {\n>        \"$shared\": { // these will be shared across all http files, regardless of the environment\n>            \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTGlvciIsImZhbWlseV9uYW1lIjoiRGFnYW4iLCJlbWFpbCI6Imxpb3JAZGFnYW4uY29tIiwiaWQiOiJhYWU5M2JmNS05ZTNjLTQ3YjMtYWFjZS0zMDM0NjUzYjZiYjIiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsInBlcm1pc3Npb25zIjpbInNldDpyZW1pbmRlciIsImdldDpyZW1pbmRlciIsImRpc21pc3M6cmVtaW5kZXIiLCJkZWxldGU6cmVtaW5kZXIiLCJjcmVhdGU6c3Vic2NyaXB0aW9uIiwiZGVsZXRlOnN1YnNjcmlwdGlvbiIsImdldDpzdWJzY3JpcHRpb24iXSwiZXhwIjoxNzA0MTM0MTIzLCJpc3MiOiJSZW1pbmRlclNlcnZpY2UiLCJhdWQiOiJSZW1pbmRlclNlcnZpY2UifQ.wyvn9cq3ohp-JPTmbBd3G1cAU1A6COpiQd3C_e_Ng5s\",\n>            \"userId\": \"aae93bf5-9e3c-47b3-aace-3034653b6bb2\",\n>            \"subscriptionId\": \"c8ee11f0-d4bb-4b43-a448-d511924b520e\",\n>            \"reminderId\": \"08233bb1-ce29-49e2-b346-5f8b7cf61593\"\n>        },\n>        \"dev\": { // when the environment is set to dev, these values will be used\n>            \"host\": \"http://localhost:5001\",\n>        },\n>        \"prod\": { // when the environment is set to prod, these values will be used\n>            \"host\": \"http://your-prod-endpoint.com\",\n>        }\n>    }\n>}\n> ```\n>\n> #### Options 2 - Defining the variables in the http file itself\n>\n> Define the variables in the http file itself. This will only update the value for the current http file.\n>\n> ```yaml\n> @host = http://localhost:5001\n>\n> POST {{host}}/tokens/generate\n> ```\n>\n> #### Option 3 - Manually\n>\n> Replace the variables manually.\n>\n> ```yaml\n> POST {{host}}/tokens/generate\n> ```\n>\n> 👇\n>\n> ```yaml\n> POST http://localhost:5001/tokens/generate\n> ```\n>\n\n## Create a subscription\n\n```yaml\nPOST {{host}}/users/{{userId}}/subscriptions\nContent-Type: application/json\nAuthorization: Bearer {{token}}\n```\n\n```http\n{\n    \"SubscriptionType\": \"Basic\"\n}\n```\n\n## Create a reminder\n\n```yaml\nPOST {{host}}/users/{{userId}}/subscriptions/{{subscriptionId}}/reminders\nContent-Type: application/json\nAuthorization: Bearer {{token}}\n```\n\n```http\n{\n    \"text\": \"let's do it\",\n    \"dateTime\": \"2025-2-26\"\n}\n```\n\n# Folder Structure 📁\n\n![Folder structure](assets/Clean%20Architecture%20Template.png)\n\nYou can use the [this](https://www.figma.com/community/file/1334042945934670571/clean-architecture-project-file-system) figma community file to explore or create your own folder structure respresentation.\n\n# Authorization 🔐\n\nThis project puts an emphasis on complex authorization scenarios and supports *role-based*, *permission-based* and *policy-based* authorization.\n\n## Authorization Types\n\n### Role-Based Authorization\n\nTo apply role based authorization, use the `Authorize` attribute with the `Roles` parameter and implement the `IAuthorizeableRequest` interface.\n\nFor example:\n\n```csharp\n[Authorize(Roles = \"Admin\")]\npublic record CancelSubscriptionCommand(Guid UserId, Guid SubscriptionId) : IAuthorizeableRequest<ErrorOr<Success>>;\n```\n\nWill only allow users with the `Admin` role to cancel subscriptions.\n\n### Permission-Based Authorization\n\nTo apply permission based authorization, use the `Authorize` attribute with the `Permissions` parameter and implement the `IAuthorizeableRequest` interface.\n\nFor example:\n\n```csharp\n[Authorize(Permissions = \"get:reminder\")]\npublic record GetReminderQuery(Guid UserId, Guid SubscriptionId, Guid ReminderId) : IAuthorizeableRequest<ErrorOr<Reminder>>;\n```\n\nWill only allow users with the `get:reminder` permission to get a subscription.\n\n### Policy-Based Authorization\n\nTo apply policy based authorization, use the `Authorize` attribute with the `Policy` parameter and implement the `IAuthorizeableRequest` interface.\n\nFor example:\n\n```csharp\n[Authorize(Policies = \"SelfOrAdmin\")]\npublic record GetReminderQuery(Guid UserId, Guid SubscriptionId, Guid ReminderId) : IAuthorizeableRequest<ErrorOr<Reminder>>;\n```\n\nWill only allow users who pass the `SelfOrAdmin` policy to get a subscription.\n\nEach policy is implemented as a simple method in the `PolicyEnforcer` class.\n\nThe policy \"SelfOrAdmin\" for example, can be implemented as follows:\n\n```csharp\npublic class PolicyEnforcer : IPolicyEnforcer\n{\n    public ErrorOr<Success> Authorize<T>(\n        IAuthorizeableRequest<T> request,\n        CurrentUser currentUser,\n        string policy)\n    {\n        return policy switch\n        {\n            \"SelfOrAdmin\" => SelfOrAdminPolicy(request, currentUser),\n            _ => Error.Unexpected(description: \"Unknown policy name\"),\n        };\n    }\n\n    private static ErrorOr<Success> SelfOrAdminPolicy<T>(IAuthorizeableRequest<T> request, CurrentUser currentUser) =>\n        request.UserId == currentUser.Id || currentUser.Roles.Contains(Role.Admin)\n            ? Result.Success\n            : Error.Unauthorized(description: \"Requesting user failed policy requirement\");\n}\n```\n\n## Mixing Authorization Types\n\nYou can mix and match authorization types to create complex authorization scenarios.\n\nFor example:\n\n```csharp\n[Authorize(Permissions = \"get:reminder,list:reminder\", Policies = \"SelfOrAdmin\", Roles = \"ReminderManager\")]\npublic record ListRemindersQuery(Guid UserId, Guid SubscriptionId, Guid ReminderId) : IAuthorizeableRequest<ErrorOr<Reminder>>;\n```\n\nWill only allow users with the `get:reminder` and  `list:reminder` permission, and who pass the `SelfOrAdmin` policy, and who have the `ReminderManager` role to list reminders.\n\nAnother option, is specifying the `Authorize` attribute multiple times:\n\n```csharp\n[Authorize(Permissions = \"get:reminder\")]\n[Authorize(Permissions = \"list:reminder\")]\n[Authorize(Policies = \"SelfOrAdmin\")]\n[Authorize(Roles = \"ReminderManager\")]\npublic record ListRemindersQuery(Guid UserId, Guid SubscriptionId, Guid ReminderId) : IAuthorizeableRequest<ErrorOr<Reminder>>;\n```\n\n# Testing 📝\n\nThis project puts an emphasis on testability and comes with a comprehensive test suite.\n\n![](assets/Clean%20Architecture%20Template%20Testing%20Suite.png)\n\n## Test Types\n\n### Domain Layer Unit Tests\n\nThe domain layer is tested using unit tests.\nBy the bare minimum, each domain entity should have a test that verifies its invariants.\n\n![Domain Layer unit tests](assets/Clean%20Architecture%20Template%20Domain%20Layer%20Unit%20Tests.png)\n\n### Application Layer Unit Tests\n\nThe application layer is tested using both unit tests and subcutaneous tests.\n\nSince each one of the application layer use cases has its corresponding subcutaneous tests, the unit tests are used to test the application layer standalone components, such as the `ValidationBehavior` and the `AuthorizationBehavior`.\n\n![Application Layer unit tests](assets/Clean%20Architecture%20Template%20Application%20Layer%20Unit%20Tests.png)\n\n### Application Layer Subcutaneous Tests\n\nSubcutaneous tests are tests that operate right under the presentation layer.\nThese tests are responsible for testing the core logic of our application, which is the application layer and the domain layer.\n\nThe reason there are so many of these tests, is because each one of the application layer use cases has its corresponding subcutaneous tests.\n\nThis allows us to test the application layer and the domain layer based on the actual expected usage, giving us the confidence that our application works as expected and that the system cannot be manipulated in a way we don't allow.\n\nI recommend spending more effort on these tests than the other tests, since they aren't too expensive to write, and the value they provide is huge.\n\n![](assets/Clean%20Architecture%20Template%20Subcutaneous%20Tests.png)\n\n### Presentation Layer Integration Tests\n\nThe api layer is tested using integration tests. This is where we want to cover the entire system, including the database, external dependencies and the presentation layer.\n\nUnlike the subcutaneous tests, the focus of these tests is to ensure the integration between the various components of our system and other systems.\n\n![Integration Tests](assets/Clean%20Architecture%20Template%20Integration%20Tests.png)\n\n# Fun features 💃🕺\n\n## Domain Events & Eventual Consistency\n\n> Note: Eventual consistency and the domain events pattern add a layer of complexity. If you don't need it, don't use it. If you need it, make sure your system is designed properly and that you have the right tools to manage failures.\n\nThe domain is designed so each use case which manipulates data, updates a single domain object in a single transaction.\n\nFor example, when a user cancels a subscription, the only change that happens atomically is the subscription is marked as canceled:\n\n```csharp\npublic ErrorOr<Success> CancelSubscription(Guid subscriptionId)\n{\n    if (subscriptionId != Subscription.Id)\n    {\n        return Error.NotFound(\"Subscription not found\");\n    }\n\n    Subscription = Subscription.Canceled;\n\n    _domainEvents.Add(new SubscriptionCanceledEvent(this, subscriptionId));\n\n    return Result.Success;\n}\n```\n\nThen, in an eventual consistency manner, the system will update all the relevant data. Which includes:\n\n1. Deleting the subscription from the database and marking all reminders as deleted ([Subscriptions/Events/SubscriptionDeletedEventHandler.cs](src/CleanArchitecture.Application/Subscriptions/Events/SubscriptionCanceledEventHandler.cs)])\n1. Deleting all the reminders marked as deleted from the database ([Reminders/Events/ReminderDeletedEventHandler.cs](src/CleanArchitecture.Application/Reminders/Events/ReminderDeletedEventHandler.cs)]\n\n> Note: Alongside the performance benefits, this allows to reuse reactive behavior. For example, the `ReminderDeletedEventHandler` is invoked both when a subscription is deleted and when a reminder is deleted.\n\n### Eventual Consistency Mechanism\n\n1. Each invariant is encapsulated in a single domain object. This allows performing changes by updating a single domain object in a single transaction.\n1. If `domain object B` needs to react to changes in `domain object A`, a [Domain Event](src/CleanArchitecture.Domain/Common/IDomainEvent.cs) is added to `domain object A` alongside the changes.\n1. Upon persisting `domain object A` changes to the database, the domain events are [extracted and added to a queue](src/CleanArchitecture.Infrastructure/Common/Persistence/AppDbContext.cs) for offline processing:\n    ```csharp\n    private void AddDomainEventsToOfflineProcessingQueue(List<IDomainEvent> domainEvents)\n    {\n        Queue<IDomainEvent> domainEventsQueue = new();\n        domainEvents.ForEach(domainEventsQueue.Enqueue);\n\n        _httpContextAccessor.HttpContext.Items[\"DomainEvents\"] = domainEventsQueue;\n    }\n    ```\n1. After the user receives a response, the [EventualConsistencyMiddleware](src/CleanArchitecture.Infrastructure/Common/Middleware/EventualConsistencyMiddleware.cs) is invoked and processes the domain events:\n    ```csharp\n    public async Task InvokeAsync(HttpContext context, IEventualConsistencyProcessor eventualConsistencyProcessor)\n    {\n        context.Response.OnCompleted(async () =>\n        {\n            if (context.Items.TryGetValue(\"DomainEvents\", out var value) ||\n                value is not Queue<IDomainEvent> domainEvents)\n            {\n                return;\n            }\n\n            while (domainEvents.TryDequeue(out var nextEvent))\n            {\n                await publisher.Publish(nextEvent);\n            }\n        });\n    }\n    ```\n\n> Note: the code snippets above are a simplified version of the actual implementation.\n\n## Background service for sending email reminders\n\nThere is a simple background service that runs every minute and sends email reminders for all reminders that are due ([ReminderEmailBackgroundService](src/CleanArchitecture.Infrastructure/Reminders/BackgroundServices/ReminderEmailBackgroundService.cs)):\n\n```csharp\nprivate async void SendEmailNotifications(object? state)\n{\n    await _fluentEmail\n        .To(user.Email)\n        .Subject($\"{dueReminders.Count} reminders due!\")\n        .Body($\"\"\"\n              Dear {user.FirstName} {user.LastName} from the present.\n\n              I hope this email finds you well.\n\n              I'm writing you this email to remind you about the following reminders:\n              {string.Join('\\n', dueReminders.Select((reminder, i) => $\"{i + 1}. {reminder.Text}\"))}\n\n              Best,\n              {user.FirstName} from the past.\n              \"\"\")\n        .SendAsync();\n}\n```\n\n### Configure Email Settings\n\nTo configure the service to send emails, make sure to update the email settings under the `appsettings.json`/`appsettings.Development.json` file:\n\nYou can use your own SMTP server or use a service like [Brevo](https://brevo.com/).\n\n### Configure Email Settings Manually\n\n```json\n{\n  \"EmailSettings\": {\n    \"EnableEmailNotifications\": false,\n    \"DefaultFromEmail\": \"your-email@gmail.com (also, change EnableEmailNotifications to true 👆)\",\n    \"SmtpSettings\": {\n      \"Server\": \"smtp.gmail.com\",\n      \"Port\": 587,\n      \"Username\": \"your-email@gmail.com\",\n      \"Password\": \"your-password\"\n    }\n  }\n}\n```\n\n> note: you may need to allow less secure apps to access your email account.\n\n### Configure Email Settings via User Secrets\n\n```shell\ndotnet user-secrets --project src/CleanArchitecture.Api set EmailSettings:EnableEmailNotifications true\ndotnet user-secrets --project src/CleanArchitecture.Api set EmailSettings:DefaultFromEmail amantinband@gmail.com\ndotnet user-secrets --project src/CleanArchitecture.Api set EmailSettings:SmtpSettings:Server smtp-relay.brevo.com\ndotnet user-secrets --project src/CleanArchitecture.Api set EmailSettings:SmtpSettings:Port 587\ndotnet user-secrets --project src/CleanArchitecture.Api set EmailSettings:SmtpSettings:Username amantinband@gmail.com\ndotnet user-secrets --project src/CleanArchitecture.Api set EmailSettings:SmtpSettings:Password your-password\n```\n\n# Contribution 🤲\n\nIf you have any questions, comments, or suggestions, please open an issue or create a pull request 🙂\n\n# Credits 🙏\n\n- [CleanArchitecture](https://github.com/jasontaylordev/CleanArchitecture) - An awesome clean architecture solution template by Jason Taylor\n\n# License 🪪\n\nThis project is licensed under the terms of the [MIT](https://github.com/mantinband/clean-architecture/blob/main/LICENSE) license.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.3427734375,
          "content": "version: '3.8'\n\nservices:\n  api:\n    container_name: clean-architecture-api\n    build:\n      context: .\n      dockerfile: Dockerfile\n    ports:\n      - \"5001:5001\"\n    environment:\n      - ASPNETCORE_ENVIRONMENT=Development\n    restart: on-failure\n    volumes:\n      - ./src/CleanArchitecture.Api/CleanArchitecture.sqlite:/app/CleanArchitecture.sqlite"
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.080078125,
          "content": "{\r\n  \"sdk\": {\r\n    \"rollForward\": \"latestMinor\",\r\n    \"version\": \"8.0.100\"\r\n  }\r\n}"
        },
        {
          "name": "requests",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}