{
  "metadata": {
    "timestamp": 1736711094905,
    "page": 901,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoftarchive/cqrs-journey",
      "stars": 1394,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4248046875,
          "content": "[Oo]bj\r\n[Bb]in\r\n*.user\r\n*.suo\r\n*.[Cc]ache\r\n*.bak\r\n*.ncb\r\n*.log \r\n*.DS_Store\r\n*.gpState\r\n*.userprefs\r\n[Tt]humbs.db \r\n_ReSharper.*\r\n*.resharper\r\nTestResults\r\npackages\r\nbuild/temp\r\n.nuget\r\nUpgradeLog*.XML\r\n_UpgradeReport_Files\r\n/fix-line-endings.ps1\r\n/source/Infrastructure/Azure/Settings.xml\r\n/source/Conference.Azure/csx/\r\n/source/Migrations/MigrationToV2.Azure/csx/\r\n/source/Migrations/MigrationToV3.Azure/csx/\r\n*.build.csdef\r\n*crunch*"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.0810546875,
          "content": "# Contributing\nIf you haven't already read through them, we recommend the starting with the [Azure contribution guidelines][azure-oss].\n\nWe will _consider_ any contributions that align with the stated goals of the project.\n\n## Legal\nYou will need to complete a Contributor License Agreement (CLA). Briefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright.\n\nPlease submit a [Contributor License Agreement (CLA)](https://cla.azure.com/) before submitting a pull request. This process is automated and should be painless.\n\n## Housekeeping\nYour pull request should:\n\n* Include a description of what your change intends to do.\n* Be based on a reasonably recent commit in the `master` branch.\n* Include tests covering your changes _as appropriate_.\n\n## Be nice\nWe might be slower than you'd like. We might also ask you to make changes to the pull request. We ask for your patience.  :smiley:\n\n[azure-oss]: http://azure.github.io/guidelines.html#contributing\n"
        },
        {
          "name": "Known Issues.markdown",
          "type": "blob",
          "size": 4.3603515625,
          "content": "## [Microsoft patterns & practices](http://msdn.microsoft.com/practices)\r\n# CQRS Journey - Known Issues\r\n\r\n07/25/2012   \r\n[http://aka.ms/cqrs](http://aka.ms/cqrs)\r\n\r\nThe most up-to-date version of the Release Notes is available [online](http://go.microsoft.com/fwlink/p/?LinkID=258574)\r\n\r\n\r\n\r\n### 1. Error messages by the command processor \r\nWhen running the RI using the steps described in scenario 1 and 2, the worker role command processor console may display the errors below:\r\n\r\n```\r\nLoaded \"Microsoft.WindowsAzure.ServiceRuntime, Version=1.7.0.0, Culture=neutral\r\nPublicKeyToken=31bf3856ad364e35\"\r\nGetting \"DbContext.SqlBus\" from ServiceRuntime: FAIL.\r\nGetting \"DbContext.SqlBus\" from ConfigurationManager: FAIL.\r\n```\r\n\r\nThese errors do not affect the functionality of the application, are handled internally, and can be ignored. \r\n\r\n### 2. No error handling in web front ends\r\n\r\nYou will see an unhandled error in your browser for some error conditions. For example, you will see an unhandled error if the database you are using is offline.\r\n\r\n### 3. It is possible to access an unpublished conference\r\n\r\nIf you create a conference, such as \"myconf,\" publish it, and then subsequently unpublish it, you can access the unpublished conference at the URL it was available at when it was in the published state.\r\n\r\nIn this scenario, the user should be redirected to an error page, but instead is able to register on the unpublished conference.\r\n\r\n### 4. Running the acceptance tests using the xUnit console\r\n\r\nIf you want to run the acceptance tests in the **Conference.AcceptanceTests** solution, you must add the following to the xUnit console configuration file:\r\n\r\n```Xml\r\n<startup useLegacyV2RuntimeActivationPolicy=\"true\">\r\n  <supportedRuntime version=\"v4.0\" />\r\n</startup>\r\n```\r\n\r\n### 5. Acceptance tests browser support\r\n\r\nInternet Explorer 9 is the only supported browser for the SpecFlow acceptance tests.\r\n\r\n### 6. Localizability is not in scope\r\n\r\nThe RI is not designed with localizability in mind. For example, it \r\ncurrently contains hardcoded strings, fixed number formats, and so on. \r\n\r\n### 7. Runtime Activation Error in Debug Mode\r\n\r\nWhen you run the application in debug mode you will see an error in the\r\n**Conference.Web.Public** web application:\r\n\r\n```\r\nActivation error occured while trying to get instance of type IControllerFactory\r\n```\r\n\r\nClick in the **Continue** button and the application will run as\r\nexpected. You may see the error multiple times.\r\n\r\n### 8.\tServer error in '/' application\r\n\r\nWhen you run the application locally and you are using a proxy server you see:\r\n\r\n```\r\nServer Error in '/' Application.\r\nA connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond ...\r\n\r\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.\r\n\r\nException Details: System.Net.Sockets.SocketException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond ...\r\n```\r\n\r\nFor help resolving this issue see [Azure: A connection attempt failed...][connectionerror]\r\n\r\n### 9. Switching between Debug and DebugLocal builds\r\n\r\nIf you run the application after building using the Debug configuration, \r\ncreate some data, and then re-build using the DebugLocal configuration \r\nyou will see errors when you run the application. This scenario is not \r\nsupported. \r\n\r\nThe problem arises because the two build configurations only share some \r\ndata sources, so after the switch there are inconsistencies in the data. \r\nYou should re-create all the data sources if you switch from one build \r\nconfiguration to another.\r\n\r\n### 10. Other Known Issues\r\n\r\n* \tNo security features have been implemented.\r\n*\tOnly basic UI validation is performed.\r\n*\tYou can see the list of all outstanding issues [here](https://github.com/mspnp/cqrs-journey-code/issues?page=1&state=open).\r\n\r\n[connectionerror]: http://blogs.msdn.com/b/narahari/archive/2011/12/21/azure-a-connection-attempt-failed-because-the-connected-party-did-not-properly-respond-after-a-period-of-time-or-established-connection-failed-because-connected-host-has-failed-to-respond-x-x-x-x-x-quot.aspx\r\n\r\n\r\n\r\n\r\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0087890625,
          "content": "==============================================================================================================\r\n   Microsoft patterns & practices (http://msdn.microsoft.com/practices)\r\n   CQRS Journey project\r\n==============================================================================================================\r\n   Â©2012 Microsoft. All rights reserved. Certain content used with permission from contributors\r\n   http://go.microsoft.com/fwlink/p/?LinkID=258575\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License."
        },
        {
          "name": "Migrations.markdown",
          "type": "blob",
          "size": 6.6728515625,
          "content": "## [Microsoft patterns & practices](http://msdn.microsoft.com/practices)\r\n# CQRS Journey - Migrations\r\n\r\n07/25/2012   \r\n[http://aka.ms/cqrs](http://aka.ms/cqrs)\r\n\r\nThe most up-to-date version of the Release Notes is available [online](http://go.microsoft.com/fwlink/p/?LinkID=258574).\r\n\r\n\r\n# Migrating from the V1 to the V2 release\r\n\r\nIf you have been running the V1 release and have data that you would \r\nlike to preserve as you migrate to the V2 release, the following steps \r\ndescribe how you can perform this migration if you are hosting the V1\r\nrelease in Windows Azure. \r\n\r\n> **Note:** You should create a backup of the Conference database before you begin the migration.\r\n\r\n1. Make sure that the V1 release is running in your Windows Azure production environment.\r\n2. Deploy the V2 release to your Windows Azure staging environment. The\r\n   V2 release has a global **MaintenanceMode** property that is\r\n   initially set to **true**. In this mode, the application displays a\r\n   message to the user that the site is currently undergoing maintenance.\r\n3. When you are ready, swap the V2 release (still in maintenance mode)\r\n   into your Windows Azure production environment.\r\n4. Leave the V1 release (now running in the staging environment) to run\r\n   for a few minutes to ensure that all in-flight messages complete\r\n   their processing.\r\n5. Run the migration program to migrate the data (see below).\r\n6. After the data migration completes successfully, change the\r\n   **MaintenanceMode** property to **false**.\r\n7. The V2 release is now live in Windows Azure.\r\n\r\n> **Note:** You can change the value of the **MaintenanceMode** property\r\n> in the Windows Azure Management Portal.\r\n\r\n## Running the migration program to migrate the data\r\n\r\n_Before beginning the data migration process, ensure that you have a \r\nbackup of the data from your SQL Database database._ \r\n\r\nThe **MigrationToV2** utility uses the same **Settings.xml** file as the \r\nother projects in the **Conference** solution in addition to its own \r\n**App.config** file to specify the Windows Azure storage account \r\nand SQL connection strings.\r\n\r\nThe **Settings.xml** file contains the names of the new Windows Azure \r\ntables that the V2 release uses. If you are migrating data from V1 to V2 \r\nensure that the name of the **EventSourcing** table is different from the \r\nname of the table used by the V1 release. The name of the table used by \r\nthe V1 release is hardcoded in the **Program.cs** file in the MigrationToV2 \r\nproject: \r\n\r\n```\r\nvar originalEventStoreName = \"ConferenceEventStore\";\r\n```\r\n\r\nThe name of the new table for V2 is in the **Settings.xml** file:\r\n\r\n```\r\n<EventSourcing>\r\n\t<ConnectionString>...</ConnectionString>\r\n\t<TableName>ConferenceEventStoreApplicationDemoV2</TableName>\r\n</EventSourcing>\r\n```\r\n\r\n> **Note:** The migration utility assumes that the V2 event sourcing\r\n> table is in the same Windows Azure storage account as the V1 event\r\n> sourcing table. If this is not the case, you will need to modify the\r\n> MigrationToV2 application code.\r\n\r\nThe **App.config** file contains the **DbContext.ConferenceManagement** \r\nconnection string. The migration utility uses this connection string to \r\nconnect to the SQL Database instance that contains the SQL tables used by \r\nthe application. Ensure that this connection string points to the Windows Azure SQL \r\nDatabase that contains your production data. You can verify which \r\nSQL Database instance your production environment uses by looking in the \r\nactive **ServiceConfiguration.csfg** file. \r\n\r\n> **Note:** If you are running the application locally using the\r\n> **Debug** configuration, the **DbContext.ConferenceManagement**\r\n> connection string will point to local SQL Express database.\r\n\r\n> **Note:** To avoid data transfer charges, you should run the migration\r\n> utility inside a Windows Azure worker role instead of on-premise. The\r\n> solution includes an empty, configured Windows Azure worker role in the\r\n> **MigrationToV2.Azure** with diagnostics that you\r\n> can use for this purpose. For information about how to run an\r\n> application inside a Windows Azure role instance, see [Using Remote\r\n> Desktop with Windows Azure Roles](http://msdn.microsoft.com/en-us/library/windowsazure/gg443832.aspx). \r\n\r\n> **Note:** Migration from V1 to V2 is not supported if you are using\r\n> the **DebugLocal** configuration.\r\n\r\n### If the data migration fails\r\n\r\nIf the data migration process fails for any reason, then before you retry the migration you should:\r\n\r\n1. Restore the SQL Database back to its state before you ran the\r\n   migration utility.\r\n2. Delete the two new Windows Azure tables defined in **Settings.xml**\r\n   in the **EventSourcing** and **MessageLog** sections.\r\n\r\n# Migrating from the V2 to the V3 release\r\n\r\nIf you have been running the V2 release and have data that you would \r\nlike to preserve as you migrate to the V3 release, the following steps \r\ndescribe how you can perform this migration if you are hosting the V2\r\nrelease in Windows Azure. \r\n\r\n> **Note:** You should create a backup of the Conference database before you begin the migration.\r\n\r\n1.\tMake sure that the V2 release is running in your Windows Azure production environment.\r\n\r\n2. Deploy the V3 release to your Windows Azure staging environment. In the\r\n   V3 release, the command processor worker role has a **MaintenanceMode** property that is\r\n   initially set to **true**.\r\n3. Start the ad hoc MigrationToV3.InHouseProcessor utility to rebuild the read models for the V3 deployment.\r\n4. Change the **MaintenanceMode** property of the command processor worker role in the V2 release (running in the production slot) to **true**.  \r\nAt this point, the application is still running, but the registrations cannot progress. You should wait until the status of the worker role instance shows as **Ready** in the Windows Azure portal (this may take some time).\r\n5. Change the **MaintenanceMode** property of the command processor worker role in the V3 release (running in the staging slot) to **false** and allow the MigrationToV3.InHouseProcessor utility to start handling the V2 events. The migration utility prompts you to start handling these V2 events when you are ready. This change is faster than changing the value of the **MaintenanceMode** property in the V2 release. When this change is complete, the V2 release web roles are using the data processed by the V3 version of the  worker role. This configuration change also triggers the database migration.\r\n6. In the Windows Azure portal, perform a VIP swap to make the V3 web roles visible externally.\r\n7. Shutdown the V2 deployment that is now running in the staging slot.\r\n8. The V3 release is now live in Windows Azure.\r\n\r\n> **Note:** You can change the value of the **MaintenanceMode** property\r\n> in the Windows Azure Management Portal."
        },
        {
          "name": "README.markdown",
          "type": "blob",
          "size": 16.2001953125,
          "content": "## Microsoft patterns & practices\r\n# CQRS Journey Reference Implementation\r\n\r\n## Current Status :exclamation:\r\nThis project is not being actively maintained. The source has not been updated since **July, 2012**.\r\nWe will attempt to provide help and answer questions. However, the source and docs are presented as-is. \r\nThere are currently no plans to update this project.\r\n\r\nhttp://cqrsjourney.github.com\r\n\r\n# Release Notes\r\n\r\nThe most up-to-date version of the release notes issues is available [online][releasenotes].\r\n\r\nThe release notes include information about:\r\n\r\n* How to obtain the source code.\r\n* How to configure the application.\r\n* How to build the application.\r\n* How to run the application.\r\n* How to run the tests.\r\n* Known issues.\r\n\r\n# Contribution Guidelines Overview\r\n\r\nIf you would like to become involved in the development of the CQRS Journey sample application and guidance, you can contribute in many different ways:\r\n\r\n* We strongly value user feedback and appreciate your questions, bug reports and feature requests. For more details how you can submit these, see the section \"[Using the Reference Implementation, Reading the Documentation, and Providing Feedback](#sampleapp)\" below. \r\n* You can also contribute changes to the code, which might include bug fixes and improvements as well as new features. See the section \"[Contributing Changes to the Code](#changecode)\" below.\r\n* You can also revise or propose new content for the guide. See the section \"[Contributing Changes to the Guide](#changeguide)\" below.\r\n* You can provide review comments to the draft guide. See the section \"[Simple Document Review](#simplereview)\" below.\r\n\r\n<a name=\"sampleapp\" />\r\n\r\n## Using the Reference Implementation, Reading the Documentation, and Providing Feedback\r\n\r\nReviewing the CQRS Journey guidance and code, asking and answering questions, reporting bugs and making feature requests are critical activities of the project community: we value your feedback!\r\n\r\nIn order to become familiar with the functionality of the reference implementation you can obtain the source code from GitHub (see \"[Obtaining the source code](#obtainsource)\" below) and compile it locally. While you become familiar with the functionality, you can report bugs or request new features (see \"[Report bugs and request features](#reportbugs)\" below).   You can also download the current draft of the documentation from GitHub.\r\n\r\nWe would love to hear your thoughts, be it comments, suggestions, ideas or anything else. However, in the end we are creating Microsoft guidance. So we'll happily take your feedback but you need to understand that by providing us feedback in any form you are agreeing that (i) we may freely use, disclose, reproduce, modify, license, distribute and otherwise commercialize your feedback in  any Microsoft product, technology, service, specification or other documentation, (ii) others may use, disclose, reproduce, license, distribute and otherwise commercialize your feedback in connection with our products and services, and (iii) you will not be compensated for any of these things. We may incorporate ideas or make changes based on comments you make, or we may make changes to the product that are indirectly influenced by discussions that we have with you and other folks in the community. \r\n\r\n### Repositories overview\r\n\r\nThere are three project repositories:\r\n\r\n1.  Source code repository:  [https://github.com/mspnp/cqrs-journey-code](https://github.com/mspnp/cqrs-journey-code)\r\n2.\tDocument repository: [https://github.com/mspnp/cqrs-journey-doc](https://github.com/mspnp/cqrs-journey-doc)\r\n3.\tWiki: [https://github.com/mspnp/cqrs-journey-wiki](https://github.com/mspnp/cqrs-journey-wiki)\r\n\r\nWe are also hosting our project web site on GitHub  - [http://cqrsjourney.github.com](http://cqrsjourney.github.com)\r\n\r\n<a name=\"askanswer\" />\r\n\r\n### Asking and answering questions\r\n\r\nYou can ask questions via Disqus on the [http://cqrsjourney.github.com](http://cqrsjourney.github.com) web site or by posting them as Issues with the \"question\" prefix in GitHub to the project's **cqrs-journey-code** or **cqrs-journey-doc** repositories.\r\n\r\n<a name=\"obtainsource\" />\r\n\r\n### Obtaining the source code\r\n\r\nIn order to obtain the source code you can either download it as a zip file from the GitHub or clone the repository by using Git. \r\n\r\nFollow these steps to download the source code in a zip file:\r\n\r\n1.\tGo to [https://github.com/mspnp/cqrs-journey-code](https://github.com/mspnp/cqrs-journey-code)\r\n2.\tClick on the ZIP button right below the project description.\r\n\r\nTo clone the source repository using Git, see instructions from the [Checkout the latest code](#checkoutlatest) section.\r\n\r\n### Obtaining the draft content of the guide\r\n\r\nThe draft content of the guide is available in the **cqrs-journey-doc** repository on GitHub. You can read it online. You can also download or clone this repository in the same way that you obtain the source code.\r\n\r\n<a name=\"reportbugs\" />\r\n\r\n### Report bugs and request features\r\n\r\nIssues and feature requests are submitted through the project's Issues section on GitHub. Please use the following guidelines when you submit issues and feature requests:\r\n\r\n* Make sure that you post the issue to the correct repository: either the **cqrs-journey-code** repository for code issues or **cqrs-journey-doc** repository for documentation issues.\r\n* Make sure the issue is not already reported by searching through the list of issues. \r\n* Provide detailed description of the issue including the following information: \r\n\t+ The feature the issue appears in.\r\n\t+ Under what circumstances the issue appears (repro steps).\r\n\t+ Relevant environmental/contextual information.\r\n\t+ The desired behavior.\r\n\t+ The actual behavior (what is breaking).\r\n\t+ The impact (such as loss or corruption of data, compromising security, disruption of service, etc.)\r\n\t+ Any code, screenshots, configuration files that will be helpful to reproduce the issue.\r\n\r\nThe core team regularly reviews issues and updates those with additional information. Sometimes the core team may have questions about particular issue that might need clarifications, so please be ready to provide additional information.  \r\n\r\n<a name=\"changecode\" />\r\n\r\n## Contributing Changes to the Code\r\n\r\n### How to become a contributor?\r\nIn order to become a contributor to the project you must sign the Contributor License Agreement (CLA). Signing the Contributor License Agreement (CLA) does not grant you rights to commit to the source code or doc repositories but it does mean that we will consider your contributions and you will get credit for them if we use them. \r\n\r\nYou can download the Contributor License Agreement (CLA) by clicking the following link: [http://cqrsjourney.github.com/docs/Contribution%20License%20Agreement.pdf](http://cqrsjourney.github.com/docs/Contribution%20License%20Agreement.pdf). Please fill in, sign, scan and email it to [cla@microsoft.com](mailto:cla@microsoft.com) with the \"CQRS Journey Project CLA\" as the subject line.\r\n\r\nYou do not need to sign a separate agreement if you have already submitted one to contribute to the project's documentation or to other Microsoft OSS projects (such as Windows Azure SDK) and if your employer hasn't changed.\r\n\r\n<a name=\"checkoutlatest\" />\r\n\r\n### Checkout the latest code\r\n\r\nIn order to obtain the source code you need to become familiar with Git (see [http://progit.org/book/](http://progit.org/book/)) and GitHub (see [http://help.github.com/](http://help.github.com/)) and you need to have Git installed on your local machine. \r\n\r\nYou can obtain the source code from GitHub by following the following steps on your local machine:\r\n\r\n1.\tGo to https://github.com/mspnp/cqrs-journey-code\r\n2.\tSelect the Fork button and choose your own GitHub account as target \r\n3.\tClone the repository on your local machine with the following Git command  \r\n`git clone git@github.com:[USERNAME]/cqrs-journey-code`\r\n4.\tAdd a remote to your local repository using the following Git commands  \r\n`cd cqrs-journey-code`  \r\n`git remote add upstream git@github.com:mspnp/cqrs-journey-code`\r\n5.\tUpdate your local repository with the changes from the remote repository by using the following Git commands  \r\n`git fetch upstream/dev`  \r\n`git merge upstream/dev`\r\n\r\n### Create bug fixes and features\r\n\r\nWe are using the [Fork+Pull Model](http://help.github.com/send-pull-requests/) of collaborative development.\r\n\r\nYou make modifications of the code and commit them in your local Git repository. Once you are done with your implementation follow the steps below:\r\n\r\n1.\tChange the working branch to dev with the following command  \r\n`git checkout dev `\r\n2.\tSubmit the changes to your own fork in GitHub by using the following command  \r\n`git push`\r\n3.\tIn GitHub create new pull request by clicking on the Pull Request button  \r\n4.\tIn the pull request select your fork as the head and mspnp/cqrs-journey-code as base for the request \r\n5.\tWrite detailed message describing the changes in the pull request \r\n6.\tSubmit the pull request for consideration by the core team \r\n\r\n**Note:** It's a good idea to create a branch before submitting a pull request, just in case there are improvement suggestions to the submitted contribution that need to be incorporated before it's accepted. That way, the pull request points to the entire branch and changes to it can be incorporated using the same pull request sent initially (which will hold discussions and comments about the improvements, etc.).\r\n\r\n**Note:** All changes and pull request should be done against the `dev` branch. Changes will be integrated in the `master` branch by the core team.\r\n\r\nPlease keep in mind that not all requests will be approved. Requests are reviewed by the core team on a regular basis and will be updated with the status at each review. If your request is rejected you will receive information about the reasons why it was rejected.\r\n\r\n### Contribution guidelines\r\n\r\nBefore you start working on bug fixes and features it is good idea to discuss those broadly with the community. You can use the forums as described in [Asking and answering questions](#askanswer) for this purpose.\r\n\r\nBefore submitting your changes make sure you followed the guidelines below:\r\n\r\n* For every new code file, include the file header with license information that is included in all other files (see [https://github.com/mspnp/cqrs-journey-code/blob/dev/source/CQRS-journey.licenseheader](https://github.com/mspnp/cqrs-journey-code/blob/dev/source/CQRS-journey.licenseheader), for example).\r\n* You have properly documented any new functionality using the documentation standards for the language (this includes classes, methods and functions, properties etc.). For any change you make proper inline documentation is included.\r\n* For any new functionality or updates, you have written complete unit tests.\r\n* You have run all unit tests and they pass.\r\n* You have run the Stylecop and most default rules are satisfied.\r\n* Code should fit into the overall structure of the project and style of the existing codebase.\r\n\r\nIn order to speed up the process of accepting your contributions, you should try to make your check-ins as small as possible, avoid any unnecessary deltas and the need to rebase.\r\n\r\n<a name=\"changeguide\" />\r\n\r\n## Contributing Changes to the Guide\r\n\r\n### How to become a contributor?\r\n\r\nIn order to become a contributor to the project you must sign the Contributor License Agreement (CLA). Signing the Contributor License Agreement (CLA) does not grant you rights to commit to the source code or doc repositories but it does mean that we will consider your contributions and you will get credit for them if we use them. \r\n\r\nYou can download the Contributor License Agreement (CLA) by clicking at the following link: [http://cqrsjourney.github.com/docs/Contribution%20License%20Agreement.pdf](http://cqrsjourney.github.com/docs/Contribution%20License%20Agreement.pdf). Please fill in, sign, scan and email it to [cla@microsoft.com](mailto:cla@microsoft.com).\r\n\r\nYou do not need to sign a separate agreement if you have already submitted one to contribute to the project's source code or to other Microsoft OSS projects (such as Windows Azure SDK) and if your employer hasn't changed.\r\n\r\n### Checkout the latest version of the guide\r\n\r\nIn order to obtain the latest docs you need to become familiar with Git (see [http://progit.org/book/](http://progit.org/book/)) and GitHub (see [http://help.github.com/](http://help.github.com/)) and you need to have Git installed on your local machine. \r\n\r\nYou can obtain the docs from GitHub by following the following steps on your local machine:\r\n\r\n1.\tGo to https://github.com/mspnp/cqrs-journey-doc\r\n2.\tSelect the Fork button   and choose your own GitHub account as target \r\n3.\tClone the repository on your local machine with the following Git command  \r\n`git clone git@github.com:[USERNAME]/cqrs-journey-doc`\r\n4.\tAdd remote to your local repository using the following Git commands  \r\n`cd cqrs-journey-doc`  \r\n`git remote add upstream git@github.com:mspnp/cqrs-journey-doc`\r\n5.\tUpdate your local repository with the changes from the remote repository by using the following Git commands  \r\n`git fetch upstream/dev`  \r\n`git merge upstream/dev`\r\n\r\n### Create document updates\r\n\r\nWe are using the [Fork+Pull](http://help.github.com/send-pull-requests/) Model of collaborative development.\r\n\r\nYou make modifications of the docs in your local Git repository. Once you are done with your changes follow the steps below:\r\n\r\n1.\tChange the working branch to `dev` with the following command  \r\n`git checkout dev `\r\n2.\tSubmit the changes to your own fork in GitHub by using the following command  \r\n`git push`\r\n3.\tIn GitHub create new pull request by clicking on the Pull Request button  \r\n4.\tIn the pull request select your fork as source and mspnp/cqrs-journey-doc as destination for the request \r\n5.\tWrite detailed message describing the changes in the pull request \r\n6.\tSubmit the pull request for consideration by the core team \r\n\r\n**Note:** All changes and pull request should be done in the `dev` branch. Changes will be integrated in the `master` branch by the core team.\r\n\r\nPlease keep in mind that not all requests will be approved. Requests are reviewed by the core team on a regular basis and will be updated with the status at each review. If your request is rejected you will receive information about the reasons why it was rejected.\r\n\r\n### Contribution guidelines\r\n\r\nBefore you start working on new document sections or make major revisions to the existing ones it is good idea to discuss those broadly with the community. You can use the forums as described in [Asking and answering](#askanswer) questions for this purpose.\r\n\r\nBefore submitting your revisions to the doc repository, make use you followed the guidelines below:\r\n\r\n* Use [GitHub Flavored Markdown](http://github.github.com/github-flavored-markdown/) for all written documents. \r\n* Ensure that your text is fully spell-checked.\r\n* Avoid using any embedded HTML code in the documents.\r\n* Provide any diagrams in both SVG and PNG formats.\r\n* Link to the PNG image in your markdown code.\r\n* Add all links (including links to images) using reference style links (see [Markdown:syntax](http://daringfireball.net/projects/markdown/syntax) for more details).\r\n* Try to adher to the style/tone of the existing documents in the repository.\r\n\r\nIn order to speed up the process of accepting your contributions, you should try to make your check-ins as small as possible, avoid any unnecessary deltas and the need to rebase.\r\n\r\n<a name=\"simplereview\" />\r\n\r\n## Simple document review\r\n\r\nAn easy way to review the docs and comment on them (without using Git, GitHub, or Markdown) is via the [simple document review site](http://pundit.cloudapp.net/#Journey_00_Preface.doc), which allows you to see the docs with inline comments of others and submit your own commentary. Please note that this site only shows the latest version of the docs. As the new versions of the docs are produced and the comments are acted upon, the comments are removed from the pages but remain visible via the history of check-ins in the main document repository ([https://github.com/mspnp/cqrs-journey-doc](https://github.com/mspnp/cqrs-journey-doc)). \r\n\r\n##Inquiries\r\n\r\nFor any further inquiries, contact the project leader, Grigori Melnik, at _grigori dot melnik at microsoft dot com_\r\n\r\n[releasenotes]: https://github.com/mspnp/cqrs-journey/blob/master/docs/Appendix1_Running.markdown\r\n"
        },
        {
          "name": "Release Notes.markdown",
          "type": "blob",
          "size": 16.9296875,
          "content": "## [Microsoft patterns & practices](http://msdn.microsoft.com/practices)\n# CQRS Journey - Release Notes\n\n07/25/2012   \n[http://aka.ms/cqrs](http://aka.ms/cqrs)\n\nThese release notes apply to the Reference Implementation â Contoso Conference Management System. This RI complements the [âExploring CQRS and Event Sourcingâ guide](http://go.microsoft.com/fwlink/p/?LinkID=258572) and is for learning purposes only.\n\n# System evolution\n\nThe system has gone through three pseudo-production releases and additional improvements after V3. \n> While the team went through actual deployments to Windows Azure and performed migrations,\n> the releases are referred to as âpseudo-productionâ because they lack critical security \n> and other features necessary for a full production releasethat are not the focus of this guidance.\n\nThe notes apply to the latest version (packaged in this self-extractable zip) unless specified otherwise. To follow the project evolution, please check out specific versions of the entire system tagged V1-pseudo-prod, V2-pseudo-prod or V3-pseudo-prod in the git repository history. Also, see the [Migration notes](http://go.microsoft.com/fwlink/?LinkID=259596) and [chapters 5](http://go.microsoft.com/fwlink/p/?LinkID=258555), [6](http://go.microsoft.com/fwlink/p/?LinkID=258556) and [7](http://go.microsoft.com/fwlink/p/?LinkID=258557) of the Guide. \n\n# Building and running the sample code (RI)\n\nThis appendix describes how to obtain, build, and run the RI.\n\nThese instructions describe five different scenarios for running the RI using the **Conference** Visual Studio solution:\n\n1. Running the application on a local web server and using a local\n   message bus and event store.\n2. Running the application on a local web server and using the Windows\n   Azure Service Bus and an event store that uses Windows Azure table\n   storage.\n3. Deploying the application to the local Windows Azure compute emulator\n   and using a local message bus and event store.\n4. Deploying the application to the local Windows Azure compute emulator\n   and using the Windows Azure Service Bus and an event store that uses\n   Windows Azure table storage.\n5. Deploying the application to Windows Azure and using the Windows\n   Azure Service Bus and an event store that uses Windows Azure table\n   storage.\n\n> **Note 1:** The local message bus and event store use SQL Express and\n> are intended to help you run the application locally for demonstration\n> purposes. They are not intended to illustrate a production-ready\n> scenario.\n\n> **Note 2:** Scenarios 1, 2, 3, and 4 use SQL Express for other data\n> storage requirements. Scenario 5 requires you to use Windows Azure SQL Database instead\n> of SQL Express.\n\n> **Note 3:** The source code download for the V3 and later releases also includes a **Conference.NoAzureSDK**\n> solution that enables you to build and run the sample application\n> without installing the Windows Azure SDK. This solution supports\n> scenarios 1 and 2 only.\n\n# Prerequisites\n\nBefore you begin, you should install the following pre-requisites:\n\n* Microsoft Visual Studio 2010 or later\n* SQL Server 2008 Express or later\n* ASP.NET MVC 3 and MVC 4 for the V1 and V2 releases\n* ASP.NET MVC 4 Installer (Visual Studio 2010) for the V3 and later releases\n* Windows Azure SDK for .NET - November 2011 for the V1 and V2 releases\n* Windows Azure SDK for .NET - June 2012 or later for the V3 and later releases\n\n> **Note:** The V1 and V2 releases of the sample application used\n> ASP.NET MVC 3 in addition to ASP.NET MVC 4. As of the V3 release all\n> of the web applications in the project use ASP.NET MVC 4.\n\n> **Note:** The Windows Azure SDK is **not** a prerequisite if you plan to\n> use the **Conference.NoAzureSDK** solution.\n\nYou can download and install all of these except for Visual Studio by\nusing the [Microsoft Web Platform Installer 4.0](http://www.microsoft.com/web/downloads/platform.aspx). \n\nYou can install the remaining dependencies from NuGet by running the\nscript **install-packages.ps1** included with the downloadable source.\n\nIf you plan to deploy any part of the RI to Windows Azure (scenarios 2, 4, 5), you must have a Windows \nAzure subscription. You will need to configure a Windows Azure storage \naccount (for blob storage), a Windows Azure Service Bus namespace, and a SQL Database\ninstance (they do not necessarily need to be in the same Windows Azure \nsubscription). You should be aware, that depending on your Windows Azure \nsubscription type, you may incur usage charges when you use the Windows \nAzure Service Bus, Windows Azure table storage, and when you deploy and \nrun the RI in Windows Azure. \n\nAt the time of writing, you can sign-up for a [Windows Azure free trial \n](http://www.windowsazure.com/en-us/pricing/free-trial/) that enables you to run the RI in Windows Azure. \n\n> **Note:** Scenario 1 enables you to run the RI locally without using\n> the Windows Azure compute and storage emulators. \n\n\n# Obtaining the code\n\n*\tYou can download the source code from the Microsoft Download center as a [self-extractable zip](http://go.microsoft.com/fwlink/p/?LinkID=258571).\n*\tAlternatively, you can get the [source code with the full git history](http://go.microsoft.com/fwlink/p/?LinkID=258576).\n\n\n# Creating the databases\n\n## SQL Express Database\n\nFor scenarios 1, 2, 3, and 4 you can create a local SQL Express database \ncalled **Conference** by running the script **Install-Database.ps1** in \nthe scripts folder. \n\nThe projects in the solution use this database to store application \ndata. The SQL-based message bus and event store also use this database. \n\n## Windows Azure SQL Database instance\n\nFor scenario 5, you must create a SQL Database instance called\n**Conference** by running the script **Install-Database.ps1** in \nthe scripts folder.\n\nThe follow command will populate a SQL Database instance called \n**Conference** with the tables and views required to support the RI\n(this script assumes that you have already created the **Conference**\ndatabase in SQL Database): \n\n```\n.\\Install-Database.ps1 -ServerName [your-sql-azure-server].database.windows.net -DoNotCreateDatabase -DoNotAddNetworkServiceUser -UseSqlServerAuthentication -UserName [your-sql-azure-username]\n```\n\nYou must then modify the **ServiceConfiguration.Cloud.cscfg** file in the Conference.Azure project to use the following connection strings.\n\n**SQL Database Connection String**\n\n```\nServer=tcp:[your-sql-azure-server].database.windows.net;Database=myDataBase;User ID=[your-sql-azure-username]@[your-sql-azure-server];Password=[your-sql-azure-password];Trusted_Connection=False;Encrypt=True; MultipleActiveResultSets=True;\n```\n\n**Windows Azure Connection String**\n\n```\nDefaultEndpointsProtocol=https;AccountName=[your-windows-azure-storage-account-name];AccountKey=[your-windows-azure-storage-account-key]\n```\n\n**Conference.Azure\\ServiceConfiguration.Cloud.cscfg**\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ServiceConfiguration serviceName=\"Conference.Azure\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceConfiguration\" osFamily=\"1\" osVersion=\"*\">\n  <Role name=\"Conference.Web.Admin\">\n    <Instances count=\"1\" />\n    <ConfigurationSettings>\n      <Setting name=\"Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString\" value=\"[your-windows-azure-connection-string]\" />\n      <Setting name=\"Diagnostics.ScheduledTransferPeriod\" value=\"00:02:00\" />\n      <Setting name=\"Diagnostics.LogLevelFilter\" value=\"Warning\" />\n      <Setting name=\"Diagnostics.PerformanceCounterSampleRate\" value=\"00:00:30\" />\n      <Setting name=\"DbContext.ConferenceManagement\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.SqlBus\" value=\"[your-sql-azure-connection-string] />\n    </ConfigurationSettings>\n  </Role>\n  <Role name=\"Conference.Web.Public\">\n    <Instances count=\"1\" />\n    <ConfigurationSettings>\n      <Setting name=\"Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString\" value=\"[your-windows-azure-connection-string]\" />\n      <Setting name=\"Diagnostics.ScheduledTransferPeriod\" value=\"00:02:00\" />\n      <Setting name=\"Diagnostics.LogLevelFilter\" value=\"Warning\" />\n      <Setting name=\"Diagnostics.PerformanceCounterSampleRate\" value=\"00:00:30\" />\n      <Setting name=\"DbContext.Payments\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.ConferenceRegistration\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.SqlBus\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.BlobStorage\" value=\"[your-sql-azure-connection-string]\" />\n    </ConfigurationSettings>\n  </Role>\n  <Role name=\"WorkerRoleCommandProcessor\">\n    <Instances count=\"1\" />\n    <ConfigurationSettings>\n      <Setting name=\"Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString\" value=\"[your-windows-azure-connection-string]\" />\n      <Setting name=\"Diagnostics.ScheduledTransferPeriod\" value=\"00:02:00\" />\n      <Setting name=\"Diagnostics.LogLevelFilter\" value=\"Information\" />\n      <Setting name=\"Diagnostics.PerformanceCounterSampleRate\" value=\"00:00:30\" />\n      <Setting name=\"DbContext.Payments\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.EventStore\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.ConferenceRegistrationProcesses\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.ConferenceRegistration\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.SqlBus\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.BlobStorage\" value=\"[your-sql-azure-connection-string]\" />\n      <Setting name=\"DbContext.ConferenceManagement\" value=\"your-sql-azure-connection-string]\" />\n    </ConfigurationSettings>\n  </Role>\n</ServiceConfiguration>\n```\n\n> **Note:** The **LogLevelFilter** values for these roles is set to\n> either **Warning** or **Information**. If you want to capture logs\n> from the application into the **WADLogsTable**, you should change\n> these values to **Verbose**.\n\n# Creating the Settings.xml file\n\nBefore you can build the solution, you must create a **Settings.xml** \nfile in the **Infrastructure Projects\\Azure** solution folder. You can \ncopy the **Settings.Template.xml** in this solution folder to create a \n**Settings.xml** file. \n\n> **Note:** You only need to create the **Settings.xml** file if you\n> plan to use either the **Debug** or **Release** build configurations.\n\nIf you plan to use the Windows Azure Service Bus and the Windows Azure \ntable storage based event store then you must edit the **Settings.xml** \nfile in the **Infrastructure Projects\\Azure** solution folder to include \ndetails of your Windows Azure storage account and a Windows Azure \nService Bus namespace. \n\n> **Note:** See the contents of the **Settings.Template.xml** for details\n> of the configuration information that is required.\n\n> **Note:** You cannot currently use the Windows Azure storage emulator\n> for the event store. You must use a real Windows Azure storage\n> account.\n\n\n# Building the RI\n\nOpen the **Conference** Visual Studio solution file in the code \nrepository that you downloaded and un-zipped. \n\nYou can use NuGet to download and install all of the dependencies by\nrunning the script **install-packages.ps1** before building the\nsolution.\n\n## Build configurations\n\nThe solution includes a number of build configurations. These are \ndescribed in the following sections: \n\n### Release\n\nUse the **Release** build configuration if you plan to deploy your \napplication to Windows Azure. \n\nThis solution uses the Windows Azure Service Bus to provide the \nmessaging infrastructure. \n\nUse this build configuration if you plan to deploy the RI to Windows \nAzure (scenario 5). \n\n### Debug\n\nUse the **Debug** build configuration if you plan either to deploy your \napplication locally to the Windows Azure  compute emulator or to run as a standalone application locally and without using the Windows Azure compute emulator.\n\nThis solution uses the Windows Azure Service Bus to provide the \nmessaging infrastructure and the event store based on Windows Azure \ntable storage (scenarios 2 and 4). \n\n### DebugLocal\n\nUse the **DebugLocal** build configuration if you plan to either deploy \nyour application locally to the Windows Azure compute emulator or run \nthe application on a local web server without using the Windows \nAzure compute emulator. \n\nThis solution uses a local messaging infrastructure and event store \nbuilt using SQL Server (scenarios 1 and 3). \n\n# Running the RI\n\nWhen you run the RI, you should first create a conference, add at least\none seat type, and then publish the conference using the \n**Conference.Web.Admin** site.\n\nAfter you have published the conference, you will then be able to use \nthe site to order seats and use the simulated  payment process using \nthe **Conference.Web.Public** site. \n\nThe following sections describe how to run the RI using in the different \nscenarios. \n\n## Scenario 1. Local Web Server, SQL Event Bus, SQL Event Store\n\nTo run this scenario you should build the application using the \n**DebugLocal** configuration. \n\nRun the **WorkerRoleCommandProcessor** project as a console application. \n\nRun the **Conference.Web.Public** and **Conference.Web.Admin** (located \nin the **ConferenceManagement** folder) as web applications. \n\n> **Note:** The easiest way is to set multiple startup projects in the Visual Studio solution properties.\n\n## Scenario 2. Local Web Server, Windows Azure Service Bus, Table Storage Event Store\n\nTo run this scenario you should build the application using the \n**Debug** configuration. \n\nRun the **WorkerRoleCommandProcessor** project as a console application. \n\nRun the **Conference.Web.Public** and **Conference.Web.Admin** (located \nin the **ConferenceManagement** folder) as web applications. \n\n## Scenario 3. Compute Emulator, SQL Event Bus, SQL Event Store\n\nTo run this scenario you should build the application using the \n**DebugLocal** configuration. \n\nRun the **Conference.Azure** Windows Azure project. \n\n> **Note:** To use the Windows Azure compute emulator you must launch\n> Visual Studio as an administrator.\n\n## Scenario 4. Compute Emulator, Windows Azure Service Bus, Table Storage Event Store\n\nTo run this scenario you should build the application using the \n**Debug** configuration. \n\nRun the **Conference.Azure** Windows Azure project. \n\n> **Note:** To use the Windows Azure compute emulator you must launch\n> Visual Studio as an administrator.\n\n## Scenario 5. Windows Azure, Windows Azure Service Bus, Table Storage Event Store \n\nDeploy the **Conference.Azure** Windows Azure project to your Windows \nAzure account. \n\n> **Note:** You must also ensure that you have created **Conference**\n> database in SQL Database using the **Install-Database.ps1** in the\n> scripts folder as described above. You must also ensure that you have \n> modified the connection strings in the\n> configuration files in the solution to point to your SQL Database\n> **Conference** database instead of your local SQL Express\n> **Conference** database as described above.\n\n# Running the tests\n\nThe following sections describe how to run the unit, integration, and \nacceptance tests. \n\n## Running the unit and integration Tests\n\nThe unit and integration tests in the **Conference** solution are \ncreated using **xUnit.net**. \n\nFor more information about how you can run these tests, please visit the \n[xUnit.net][xunit] site on Codeplex. \n\n## Running the acceptance tests\n\nThe acceptance tests are located in the Visual Studio solution in the \n**Conference.AcceptanceTests** folder. \n\nYou can use NuGet to download and install all of the dependencies by\nrunning the script **install-packages.ps1** before building this\nsolution.\n\nThe acceptance tests are created using SpecFlow. For more information \nabout SpecFlow, please visit [SpecFlow][specflow]. \n\nThe SpecFlow tests are implemented using **xUnit.net**.\n\nThe **Conference.AcceptanceTests** solution uses the same build \nconfigurations as the **Conference** solution to control whether you run \nthe acceptance tests against either the local SQL-based messaging \ninfrastructure and event store or the Windows Azure Service Bus \nmessaging infrastructure and Windows Azure table storage based event \nstore.\n\nYou can use the xUnit console runner or a third-party tool with Visual Studio integration and xUnit support (for example TDD.net) to run the tests. The xUnit GUI tool is not supported.\n\n# Known issues\nThe list of known issues and is available [online](http://go.microsoft.com/fwlink/?LinkID=259597).\n\n\n\n\n[source]:          https://github.com/mspnp/cqrs-journey-code\n[xunit]:           http://xunit.codeplex.com/\n[specflow]:        http://www.specflow.org/\n[connectionerror]: http://blogs.msdn.com/b/narahari/archive/2011/12/21/azure-a-connection-attempt-failed-because-the-connected-party-did-not-properly-respond-after-a-period-of-time-or-established-connection-failed-because-connected-host-has-failed-to-respond-x-x-x-x-x-quot.aspx\n[v2outstanding]:   https://github.com/mspnp/cqrs-journey-code/issues/search?utf8=%E2%9C%93&q=v2\n[v3outstanding]:   https://github.com/mspnp/cqrs-journey-code/issues?page=1&state=open\n[azurerdp]:        http://msdn.microsoft.com/en-us/library/windowsazure/gg443832.aspx"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-packages.ps1",
          "type": "blob",
          "size": 13.6845703125,
          "content": "# ==============================================================================================================\r\n# Microsoft patterns & practices\r\n# CQRS Journey project\r\n# ==============================================================================================================\r\n# Â©2012 Microsoft. All rights reserved. Certain content used with permission from contributors\r\n# http://go.microsoft.com/fwlink/p/?LinkID=258575\r\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance \r\n# with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n# Unless required by applicable law or agreed to in writing, software distributed under the License is \r\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \r\n# See the License for the specific language governing permissions and limitations under the License.\r\n# ==============================================================================================================\r\n\r\nparam (\r\n    [switch] $autoAcceptTerms\r\n)\r\n\r\n# list all the solution folders where the \"packages\" folder will be placed.\r\n$solutionRelativePaths = @('source', 'source\\Conference.AcceptanceTests')\r\n\r\n\r\n$scriptPath = Split-Path (Get-Variable MyInvocation -Scope 0).Value.MyCommand.Path \r\n\r\n$solutionFolders = New-Object object[] $solutionRelativePaths.Length\r\n$allPackagesFiles = New-Object object[] $solutionRelativePaths.Length\r\nfor($i=0; $i -lt $solutionRelativePaths.Length; $i++)\r\n{\r\n    $solutionFolder = Join-Path $scriptPath $solutionRelativePaths[$i]\r\n    $solutionFolders[$i] = $solutionFolder\r\n    $allPackagesFiles[$i] = Get-ChildItem $solutionFolder -Include \"packages.config\" -Recurse\r\n}\r\n\r\n\r\n# get all the packages to install\r\n$packages = @()\r\nforeach ($packageFilesForSolution in $allPackagesFiles)\r\n{\r\n    $packageFilesForSolution | ForEach-Object { \r\n        $xml = New-Object \"System.Xml.XmlDocument\"\r\n        $xml.Load($_.FullName)\r\n        $xml | Select-Xml -XPath '//packages/package' | \r\n            Foreach { $packages += \" - \"+ $_.Node.id + \" v\" + $_.Node.version }\r\n    }\r\n}\r\n\r\n$packages = $packages | Select -uniq | Sort-Object\r\n$packages = [system.string]::Join(\"`r`n\", $packages)\r\n\r\n# prompt to continue\r\n$caption = \"DOWNLOADING NUGET PACKAGE DEPENDENCIES\";\r\n$packageInformation = \"You are about to automatically download the following NuGet package dependencies required to build the sample application:\r\n\" + $packages + \"\r\n \r\nMicrosoft grants you no rights for third party software.  You are responsible for and must locate and read the license terms for each of the above packages. The owners of the above packages are solely responsible for their content and behavior. Microsoft gives no express warranties, guarantees or conditions.\r\n\";\r\n\r\nif ($autoAcceptTerms)\r\n{\r\n    Write-Host $caption\r\n    Write-Host $packageInformation\r\n}\r\nelse\r\n{\r\n    $message = $packageInformation + \"Do you want to proceed?\";\r\n\r\n    $yes = New-Object System.Management.Automation.Host.ChoiceDescription \"&Yes\",\"I agree to download the NuGet packages dependencies.\";\r\n    $no = New-Object System.Management.Automation.Host.ChoiceDescription \"&No\",\"I do not agree to download the NuGet packages dependencies.\";\r\n    $choices = [System.Management.Automation.Host.ChoiceDescription[]]($yes,$no);\r\n    $answer = $host.ui.PromptForChoice($caption,$message,$choices,1) \r\n\r\n    switch ($answer){\r\n        0 { break }\r\n        1 { exit; break }\r\n    } \r\n}\r\n\r\n# copy NuGet.exe bootstrapper to a temp folder if it's not there (this is to avoid distributing the full version of NuGet, and avoiding source control issues with updates).\r\n$nuget = Join-Path $scriptPath 'build\\temp\\NuGet.exe'\r\n$nugetExists = Test-Path $nuget\r\n\r\nif ($nugetExists -eq 0)\r\n{\r\n\t$tempFolder = Join-Path $scriptPath 'build\\temp\\'\r\n\tmkdir $tempFolder -Force > $null\r\n\t$nugetOriginal = Join-Path $scriptPath 'build\\NuGet.exe'\r\n\tCopy-Item $nugetOriginal -Destination $nuget -Force\r\n}\r\n\r\n$env:EnableNuGetPackageRestore=$true\r\n\r\nfor($i=0; $i -lt $solutionFolders.Length; $i++)\r\n{\r\n    pushd $solutionFolders[$i]\r\n\r\n    # install the packages\r\n    $allPackagesFiles[$i] | ForEach-Object { & $nuget install $_.FullName -o packages }\r\n\r\n    popd\r\n}\r\n\r\n# SIG # Begin signature block\r\n# MIIamAYJKoZIhvcNAQcCoIIaiTCCGoUCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB\r\n# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR\r\n# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUerNJvXS4etIUl4/bLZjjMye4\r\n# QsygghUtMIIEoDCCA4igAwIBAgIKYRnMkwABAAAAZjANBgkqhkiG9w0BAQUFADB5\r\n# MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk\r\n# bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSMwIQYDVQQDExpN\r\n# aWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQTAeFw0xMTEwMTAyMDMyMjVaFw0xMzAx\r\n# MTAyMDMyMjVaMIGDMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQ\r\n# MA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9u\r\n# MQ0wCwYDVQQLEwRNT1BSMR4wHAYDVQQDExVNaWNyb3NvZnQgQ29ycG9yYXRpb24w\r\n# ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDuW759ESTjhgbgZv9ItRe9\r\n# AuS0DDLwcj59LofXTqGxp0Mv92WeMeEyMUWu18EkhCHXLrWEfvo101Mc17ZRHk/O\r\n# ZrnrtwwC/SlcraiH9soitNW/CHX1inCPY9fvih7pj0MkZFrTh32QbTusds1XNn3o\r\n# vBBWrJjwiV0uZMavJgleHmMV8T2/Fo+ZiALDMLfBC2AfD3LM1reoNRKGm6ELCuaT\r\n# W476VJzB8xlfQo0Snx0/kLcnE4MZMoId89mH1CGyPKK2B0/XJKrujfWz2fr5OU+n\r\n# 6fKvWVL03EGbLxFwY93q3qrxbSEEEFMzu7JPxeFTskFlR2439rzpmxZBkWsuWzDD\r\n# AgMBAAGjggEdMIIBGTATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUG1IO\r\n# 8xEqt8CJwxGBPdSWWLmjU24wDgYDVR0PAQH/BAQDAgeAMB8GA1UdIwQYMBaAFMsR\r\n# 6MrStBZYAck3LjMWFrlMmgofMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwu\r\n# bWljcm9zb2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY0NvZFNpZ1BDQV8wOC0z\r\n# MS0yMDEwLmNybDBaBggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0dHA6Ly93\r\n# d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljQ29kU2lnUENBXzA4LTMxLTIw\r\n# MTAuY3J0MA0GCSqGSIb3DQEBBQUAA4IBAQClWzZsrU6baRLjb4oCm2l3w2xkciiI\r\n# 2T1FbSwYe9QoLxPiWWobwgs0t4r96rmU7Acx5mr0dQTTp9peOgaeEP2pDb2cUUNv\r\n# /2eUnOHPfPAksDXMg13u2sBvNknAWgpX9nPhnvPjCEw7Pi/M0s3uTyJw9wQfAqZL\r\n# m7iPXIgONpRsMwe4qa1RoNDC3I4iEr3D34LXVqH33fClIFcQEJ3urIZ0bHGbwfDy\r\n# wnBep9ttTTdYmU15QNA0XVolrmfrG05GBrCMKR+jEI+lM58j1fi1Rn3g7mOYkEs+\r\n# BagvsBizWaSvQVOOCAUQLSrJOgZMHC6pMVFWZKyazKyXmCmKl5CH6p22MIIEujCC\r\n# A6KgAwIBAgIKYQUZlgAAAAAAGzANBgkqhkiG9w0BAQUFADB3MQswCQYDVQQGEwJV\r\n# UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE\r\n# ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSEwHwYDVQQDExhNaWNyb3NvZnQgVGlt\r\n# ZS1TdGFtcCBQQ0EwHhcNMTEwNzI1MjA0MjE5WhcNMTIxMDI1MjA0MjE5WjCBszEL\r\n# MAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v\r\n# bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjENMAsGA1UECxMETU9Q\r\n# UjEnMCUGA1UECxMebkNpcGhlciBEU0UgRVNOOjlFNzgtODY0Qi0wMzlEMSUwIwYD\r\n# VQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNlMIIBIjANBgkqhkiG9w0B\r\n# AQEFAAOCAQ8AMIIBCgKCAQEA08s7U6KfRKN6q01WcVOKd6o3k34BPv2rAqNTqf/R\r\n# sSLFAJDndW7uGOiBDhPF2GEAvh+gdjsEDQTFBKCo/ENTBqEEBLkLkpgCYjjv1DMS\r\n# 9ys9e++tRVeFlSCf12M0nGJGjr6u4NmeOfapVf3P53fmNRPvXOi/SJNPGkMHWDiK\r\n# f4UUbOrJ0Et6gm7L0xVgCBSJlKhbPzrJPyB9bS9YGn3Kiji8w8I5aNgtWBoj7SoQ\r\n# CFogjIKl7dGXRZKFzMM3g98NmHzF07bgmVPYeAj15SMhB2KGWmppGf1w+VM0gfcl\r\n# MRmGh4vAVZr9qkw1Ff1b6ZXJq1OYKV8speElD2TF8rAndQIDAQABo4IBCTCCAQUw\r\n# HQYDVR0OBBYEFHkj56ENvlUsaBgpYoJn1vPhNjhaMB8GA1UdIwQYMBaAFCM0+NlS\r\n# RnAK7UD7dvuzK7DDNbMPMFQGA1UdHwRNMEswSaBHoEWGQ2h0dHA6Ly9jcmwubWlj\r\n# cm9zb2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY3Jvc29mdFRpbWVTdGFtcFBD\r\n# QS5jcmwwWAYIKwYBBQUHAQEETDBKMEgGCCsGAQUFBzAChjxodHRwOi8vd3d3Lm1p\r\n# Y3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY3Jvc29mdFRpbWVTdGFtcFBDQS5jcnQw\r\n# EwYDVR0lBAwwCgYIKwYBBQUHAwgwDQYJKoZIhvcNAQEFBQADggEBAEfCdoFbMd1v\r\n# 0zyZ8npsfpcTUCwFFxsQuEShtYz0Vs+9sCG0ZG1hHNju6Ov1ku5DohhEw/r67622\r\n# XH+XbUu1Q/snYXgIVHyx+a+YCrR0xKroLVDEff59TqGZ1icot67Y37GPgyKOzvN5\r\n# /GEUbb/rzISw36O7WwW36lT1Yh1sJ6ZjS/rjofq734WWZWlTsLZxmGQmZr3F8Vxi\r\n# vJH0PZxLQgANzzgFFCZa3CoFS39qmTjY3XOZos6MUCSepOv1P4p4zFSZXSVmpEEG\r\n# KK9JxLRSlOzeAoNk/k3U/0ui/CmA2+4/qzztM4jKvyJg0Fw7BLAKtJhtPKc6T5rR\r\n# ARYRYopBdqAwggW8MIIDpKADAgECAgphMyYaAAAAAAAxMA0GCSqGSIb3DQEBBQUA\r\n# MF8xEzARBgoJkiaJk/IsZAEZFgNjb20xGTAXBgoJkiaJk/IsZAEZFgltaWNyb3Nv\r\n# ZnQxLTArBgNVBAMTJE1pY3Jvc29mdCBSb290IENlcnRpZmljYXRlIEF1dGhvcml0\r\n# eTAeFw0xMDA4MzEyMjE5MzJaFw0yMDA4MzEyMjI5MzJaMHkxCzAJBgNVBAYTAlVT\r\n# MRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQK\r\n# ExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xIzAhBgNVBAMTGk1pY3Jvc29mdCBDb2Rl\r\n# IFNpZ25pbmcgUENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsnJZ\r\n# XBkwZL8dmmAgIEKZdlNsPhvWb8zL8epr/pcWEODfOnSDGrcvoDLs/97CQk4j1XIA\r\n# 2zVXConKriBJ9PBorE1LjaW9eUtxm0cH2v0l3511iM+qc0R/14Hb873yNqTJXEXc\r\n# r6094CholxqnpXJzVvEXlOT9NZRyoNZ2Xx53RYOFOBbQc1sFumdSjaWyaS/aGQv+\r\n# knQp4nYvVN0UMFn40o1i/cvJX0YxULknE+RAMM9yKRAoIsc3Tj2gMj2QzaE4BoVc\r\n# TlaCKCoFMrdL109j59ItYvFFPeesCAD2RqGe0VuMJlPoeqpK8kbPNzw4nrR3XKUX\r\n# no3LEY9WPMGsCV8D0wIDAQABo4IBXjCCAVowDwYDVR0TAQH/BAUwAwEB/zAdBgNV\r\n# HQ4EFgQUyxHoytK0FlgByTcuMxYWuUyaCh8wCwYDVR0PBAQDAgGGMBIGCSsGAQQB\r\n# gjcVAQQFAgMBAAEwIwYJKwYBBAGCNxUCBBYEFP3RMU7TJoqV4ZhgO6gxb6Y8vNgt\r\n# MBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMB8GA1UdIwQYMBaAFA6sgmBAVieX\r\n# 5SUT/CrhClOVWeSkMFAGA1UdHwRJMEcwRaBDoEGGP2h0dHA6Ly9jcmwubWljcm9z\r\n# b2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL21pY3Jvc29mdHJvb3RjZXJ0LmNybDBU\r\n# BggrBgEFBQcBAQRIMEYwRAYIKwYBBQUHMAKGOGh0dHA6Ly93d3cubWljcm9zb2Z0\r\n# LmNvbS9wa2kvY2VydHMvTWljcm9zb2Z0Um9vdENlcnQuY3J0MA0GCSqGSIb3DQEB\r\n# BQUAA4ICAQBZOT5/Jkav629AsTK1ausOL26oSffrX3XtTDst10OtC/7L6S0xoyPM\r\n# fFCYgCFdrD0vTLqiqFac43C7uLT4ebVJcvc+6kF/yuEMF2nLpZwgLfoLUMRWzS3j\r\n# StK8cOeoDaIDpVbguIpLV/KVQpzx8+/u44YfNDy4VprwUyOFKqSCHJPilAcd8uJO\r\n# +IyhyugTpZFOyBvSj3KVKnFtmxr4HPBT1mfMIv9cHc2ijL0nsnljVkSiUc356aNY\r\n# Vt2bAkVEL1/02q7UgjJu/KSVE+Traeepoiy+yCsQDmWOmdv1ovoSJgllOJTxeh9K\r\n# u9HhVujQeJYYXMk1Fl/dkx1Jji2+rTREHO4QFRoAXd01WyHOmMcJ7oUOjE9tDhNO\r\n# PXwpSJxy0fNsysHscKNXkld9lI2gG0gDWvfPo2cKdKU27S0vF8jmcjcS9G+xPGeC\r\n# +VKyjTMWZR4Oit0Q3mT0b85G1NMX6XnEBLTT+yzfH4qerAr7EydAreT54al/RrsH\r\n# YEdlYEBOsELsTu2zdnnYCjQJbRyAMR/iDlTd5aH75UcQrWSY/1AWLny/BSF64pVB\r\n# J2nDk4+VyY3YmyGuDVyc8KKuhmiDDGotu3ZrAB2WrfIWe/YWgyS5iM9qqEcxL5rc\r\n# 43E91wB+YkfRzojJuBj6DnKNwaM9rwJAav9pm5biEKgQtDdQCNbDPTCCBgcwggPv\r\n# oAMCAQICCmEWaDQAAAAAABwwDQYJKoZIhvcNAQEFBQAwXzETMBEGCgmSJomT8ixk\r\n# ARkWA2NvbTEZMBcGCgmSJomT8ixkARkWCW1pY3Jvc29mdDEtMCsGA1UEAxMkTWlj\r\n# cm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XDTA3MDQwMzEyNTMw\r\n# OVoXDTIxMDQwMzEzMDMwOVowdzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hp\r\n# bmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw\r\n# b3JhdGlvbjEhMB8GA1UEAxMYTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBMIIBIjAN\r\n# BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAn6Fssd/bSJIqfGsuGeG94uPFmVEj\r\n# UK3O3RhOJA/u0afRTK10MCAR6wfVVJUVSZQbQpKumFwwJtoAa+h7veyJBw/3DgSY\r\n# 8InMH8szJIed8vRnHCz8e+eIHernTqOhwSNTyo36Rc8J0F6v0LBCBKL5pmyTZ9co\r\n# 3EZTsIbQ5ShGLieshk9VUgzkAyz7apCQMG6H81kwnfp+1pez6CGXfvjSE/MIt1Nt\r\n# UrRFkJ9IAEpHZhEnKWaol+TTBoFKovmEpxFHFAmCn4TtVXj+AZodUAiFABAwRu23\r\n# 3iNGu8QtVJ+vHnhBMXfMm987g5OhYQK1HQ2x/PebsgHOIktU//kFw8IgCwIDAQAB\r\n# o4IBqzCCAacwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUIzT42VJGcArtQPt2\r\n# +7MrsMM1sw8wCwYDVR0PBAQDAgGGMBAGCSsGAQQBgjcVAQQDAgEAMIGYBgNVHSME\r\n# gZAwgY2AFA6sgmBAVieX5SUT/CrhClOVWeSkoWOkYTBfMRMwEQYKCZImiZPyLGQB\r\n# GRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNy\r\n# b3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHmCEHmtFqFKoKWtTHNY9AcT\r\n# LmUwUAYDVR0fBEkwRzBFoEOgQYY/aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3Br\r\n# aS9jcmwvcHJvZHVjdHMvbWljcm9zb2Z0cm9vdGNlcnQuY3JsMFQGCCsGAQUFBwEB\r\n# BEgwRjBEBggrBgEFBQcwAoY4aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9j\r\n# ZXJ0cy9NaWNyb3NvZnRSb290Q2VydC5jcnQwEwYDVR0lBAwwCgYIKwYBBQUHAwgw\r\n# DQYJKoZIhvcNAQEFBQADggIBABCXisNcA0Q23em0rXfbznlRTQGxLnRxW20ME6vO\r\n# vnuPuC7UEqKMbWK4VwLLTiATUJndekDiV7uvWJoc4R0Bhqy7ePKL0Ow7Ae7ivo8K\r\n# BciNSOLwUxXdT6uS5OeNatWAweaU8gYvhQPpkSokInD79vzkeJkuDfcH4nC8GE6d\r\n# jmsKcpW4oTmcZy3FUQ7qYlw/FpiLID/iBxoy+cwxSnYxPStyC8jqcD3/hQoT38IK\r\n# YY7w17gX606Lf8U1K16jv+u8fQtCe9RTciHuMMq7eGVcWwEXChQO0toUmPU8uWZY\r\n# sy0v5/mFhsxRVuidcJRsrDlM1PZ5v6oYemIp76KbKTQGdxpiyT0ebR+C8AvHLLvP\r\n# Q7Pl+ex9teOkqHQ1uE7FcSMSJnYLPFKMcVpGQxS8s7OwTWfIn0L/gHkhgJ4VMGbo\r\n# QhJeGsieIiHQQ+kr6bv0SMws1NgygEwmKkgkX1rqVu+m3pmdyjpvvYEndAYR7nYh\r\n# v5uCwSdUtrFqPYmhdmG0bqETpr+qR/ASb/2KMmyy/t9RyIwjyWa9nR2HEmQCPS2v\r\n# WY+45CHltbDKY7R4VAXUQS5QrJSwpXirs6CWdRrZkocTdSIvMqgIbqBbjCW/oO+E\r\n# yiHW6x5PyZruSeD3AWVviQt9yGnI5m7qp5fOMSn/DsVbXNhNG6HY+i+ePy5VFmvJ\r\n# E6P9MYIE1TCCBNECAQEwgYcweTELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hp\r\n# bmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw\r\n# b3JhdGlvbjEjMCEGA1UEAxMaTWljcm9zb2Z0IENvZGUgU2lnbmluZyBQQ0ECCmEZ\r\n# zJMAAQAAAGYwCQYFKw4DAhoFAKCCAQEwGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcC\r\n# AQQwHAYKKwYBBAGCNwIBCzEOMAwGCisGAQQBgjcCARUwIwYJKoZIhvcNAQkEMRYE\r\n# FAm5DhTSv66xk+7u/NK0T3WWG36NMIGgBgorBgEEAYI3AgEMMYGRMIGOoHaAdABD\r\n# AFEAUgBTACAASgBvAHUAcgBuAGUAeQAgAFIAZQBmAGUAcgBlAG4AYwBlACAASQBt\r\n# AHAAbABlAG0AZQBuAHQAYQB0AGkAbwBuACAAaQBuAHMAdABhAGwAbABhAHQAaQBv\r\n# AG4AIABzAGMAcgBpAHAAdABzoRSAEmh0dHA6Ly9ha2EubXMvY3FyczANBgkqhkiG\r\n# 9w0BAQEFAASCAQCKyZm8HArQgLSkdtPFTlfuxOfwhY6vwJX3pcWAgRAx0T6KoEXa\r\n# aQCeZSUkU0UvE8NlOfQTU85R8fWJMOjHFbDFlqV/dsi+gJYHgEP6454uqbhHPQpr\r\n# 5T944T4+RTcQuaZ9J8esCJ+IrcFCyOxC26tBP1ro/rVqLdtaKToFeeVoVyB8pCF5\r\n# Eas5tYe5uAnDl3/sU9K4125czUxWXwH6oLy+5nsVYz3kSKzob5tA78AJYOtpiTg6\r\n# 8U/bH8DWdXE23aYLh7eaZgY5dK/wOCIJMyOmNIFzEQgtiLXN6ixQcIqDSCi2hWxh\r\n# tMXk0mRMiwPOuVolL0XOQWB6SPR5W3elkFLJoYICHTCCAhkGCSqGSIb3DQEJBjGC\r\n# AgowggIGAgEBMIGFMHcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9u\r\n# MRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp\r\n# b24xITAfBgNVBAMTGE1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQQIKYQUZlgAAAAAA\r\n# GzAHBgUrDgMCGqBdMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcN\r\n# AQkFMQ8XDTEyMDcyNTE2NDcwNlowIwYJKoZIhvcNAQkEMRYEFJUscDSCECfvFSUd\r\n# K3N2iq7yyftyMA0GCSqGSIb3DQEBBQUABIIBAHGgFAZ9pTcowe4e8vrTSD1n5Eeg\r\n# GMJ+LMJsTAwKX/AbQk6f02X1WraaJHgLc7LONkbdsK99lgLT+Zk9sz9nIuyAb2nz\r\n# lGjKyMH0dnIQNf5YhIzi+P+hus8iguZE4dmMqgv6+JCG/TrEc9H2JTrJuH4Ii8t+\r\n# U6PsyfGv6vWFz3iTTYzVo64ungBHj1xN2d4rNkGMhfYJ/TJpgG4pNAzjsMo1sqnr\r\n# 6aolPdlrsvkwewITgKA51OQmKEQTauwus2xB+o/5ZFjAuslmsjf1CVw5snhVMyGt\r\n# fiVLiVpP9hZrCdnieqvJRV+FWZ9gxci2zXDd8A8Ke3gdKkgfYjAN96CBdZg=\r\n# SIG # End signature block\r\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}