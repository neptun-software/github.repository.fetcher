{
  "metadata": {
    "timestamp": 1736711041140,
    "page": 783,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Giorgi/EntityFramework.Exceptions",
      "stars": 1551,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.265625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n#*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\nEntityFramework.Exceptions.Tests/appsettings.Development.json\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.0966796875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\ngithub@giorgi.dev.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 2.3505859375,
          "content": "<Project>\n  <PropertyGroup>\n    <TargetFrameworks>net8.0</TargetFrameworks>\n  </PropertyGroup>\n  \n  <PropertyGroup Label=\"Configure assembly names and namespaces\">\n    <AssemblyName>$(SolutionName).$(MSBuildProjectName)</AssemblyName>\n    <RootNamespace>$(AssemblyName)</RootNamespace>\n  </PropertyGroup>\n\n  <PropertyGroup Label=\"Common assembly attributes\">\n    <Version>8.1.3</Version>\n    <FileVersion>8.1.3</FileVersion>\n    <AssemblyVersion>8.1.3</AssemblyVersion>\n    <Authors>Giorgi Dalakishvili</Authors>\n    <Copyright>Copyright (c) 2018 - 2024 Giorgi Dalakishvili</Copyright>\n    <IsTrimmable>true</IsTrimmable>\n\n    <PackageId>EntityFrameworkCore.Exceptions.$(MSBuildProjectName)</PackageId>\n    <PackageIcon>Icon.png</PackageIcon>\n    <PackageReadmeFile>README.md</PackageReadmeFile>\n    <PackageLicenseFile>License.md</PackageLicenseFile>\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\n    <PackageReleaseNotes>Add ConstraintName, ConstraintProperties and SchemaQualifiedTableName to UniqueConstraintException and ReferenceConstraintException</PackageReleaseNotes>\n    \n    <Deterministic>true</Deterministic>\n    <ContinuousIntegrationBuild Condition=\"'$(Configuration)'=='Release'\">True</ContinuousIntegrationBuild>\n\n    <RepositoryType>git</RepositoryType>\n    <RepositoryUrl>https://github.com/Giorgi/EntityFramework.Exceptions</RepositoryUrl>\n    <PackageProjectUrl>https://github.com/Giorgi/EntityFramework.Exceptions</PackageProjectUrl>\n    <PublishRepositoryUrl>true</PublishRepositoryUrl>\n    <EmbedUntrackedSources>true</EmbedUntrackedSources>\n    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>\n\n  </PropertyGroup>\n\n  <ItemGroup>\n    <None Include=\"..\\Icon.png\">\n      <Pack>True</Pack>\n      <PackagePath></PackagePath>\n    </None>\n    <None Include=\"..\\License.md\">\n      <Pack>True</Pack>\n      <PackagePath></PackagePath>\n    </None>\n    <None Include=\"..\\README.md\">\n      <Pack>True</Pack>\n      <PackagePath></PackagePath>\n    </None>\n  </ItemGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"Microsoft.SourceLink.GitHub\" Version=\"8.0.0\" PrivateAssets=\"All\" />\n  </ItemGroup>\n\n  <ItemGroup Condition=\"$(MSBuildProjectName) != 'Common'\">\n    <ProjectReference Include=\"..\\EntityFramework.Exceptions.Common\\Common.csproj\" />\n  </ItemGroup>\n</Project>\n"
        },
        {
          "name": "EntityFramework.Exceptions.Common",
          "type": "tree",
          "content": null
        },
        {
          "name": "EntityFramework.Exceptions.MySQL.Pomelo",
          "type": "tree",
          "content": null
        },
        {
          "name": "EntityFramework.Exceptions.MySQL",
          "type": "tree",
          "content": null
        },
        {
          "name": "EntityFramework.Exceptions.Oracle",
          "type": "tree",
          "content": null
        },
        {
          "name": "EntityFramework.Exceptions.PostgreSQL",
          "type": "tree",
          "content": null
        },
        {
          "name": "EntityFramework.Exceptions.SqlServer",
          "type": "tree",
          "content": null
        },
        {
          "name": "EntityFramework.Exceptions.Sqlite",
          "type": "tree",
          "content": null
        },
        {
          "name": "EntityFramework.Exceptions.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "EntityFramework.Exceptions.sln",
          "type": "blob",
          "size": 4.7978515625,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.32014.148\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Common\", \"EntityFramework.Exceptions.Common\\Common.csproj\", \"{CCEF78F9-AADE-4487-9C1D-BF179647094E}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"SqlServer\", \"EntityFramework.Exceptions.SqlServer\\SqlServer.csproj\", \"{4509BB2B-7373-49E3-85A6-40BD79C72FAA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"PostgreSQL\", \"EntityFramework.Exceptions.PostgreSQL\\PostgreSQL.csproj\", \"{5D2A0BDD-6505-418C-BF0A-2741B7BF6564}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MySQL\", \"EntityFramework.Exceptions.MySQL\\MySQL.csproj\", \"{9B0F41DF-0B14-4948-B197-DB77444FD064}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Tests\", \"EntityFramework.Exceptions.Tests\\Tests.csproj\", \"{683A266C-5559-4453-A681-861EA68825BE}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Sqlite\", \"EntityFramework.Exceptions.Sqlite\\Sqlite.csproj\", \"{A46DB793-7671-4919-9DE4-4E64ADEDB38E}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"SolutionItems\", \"SolutionItems\", \"{CD6DB9EE-CD2A-4D87-9F02-BCC1B4239F99}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tappveyor.yml = appveyor.yml\n\t\tIcon.png = Icon.png\n\t\tLicense.md = License.md\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MySQL.Pomelo\", \"EntityFramework.Exceptions.MySQL.Pomelo\\MySQL.Pomelo.csproj\", \"{57B385D8-1BA2-425B-846C-158481BAFEAF}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Oracle\", \"EntityFramework.Exceptions.Oracle\\Oracle.csproj\", \"{98C194EF-D617-4783-95CE-0A656480446F}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{CCEF78F9-AADE-4487-9C1D-BF179647094E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CCEF78F9-AADE-4487-9C1D-BF179647094E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CCEF78F9-AADE-4487-9C1D-BF179647094E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CCEF78F9-AADE-4487-9C1D-BF179647094E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4509BB2B-7373-49E3-85A6-40BD79C72FAA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4509BB2B-7373-49E3-85A6-40BD79C72FAA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4509BB2B-7373-49E3-85A6-40BD79C72FAA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4509BB2B-7373-49E3-85A6-40BD79C72FAA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5D2A0BDD-6505-418C-BF0A-2741B7BF6564}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5D2A0BDD-6505-418C-BF0A-2741B7BF6564}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5D2A0BDD-6505-418C-BF0A-2741B7BF6564}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5D2A0BDD-6505-418C-BF0A-2741B7BF6564}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9B0F41DF-0B14-4948-B197-DB77444FD064}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9B0F41DF-0B14-4948-B197-DB77444FD064}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9B0F41DF-0B14-4948-B197-DB77444FD064}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9B0F41DF-0B14-4948-B197-DB77444FD064}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{683A266C-5559-4453-A681-861EA68825BE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{683A266C-5559-4453-A681-861EA68825BE}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{683A266C-5559-4453-A681-861EA68825BE}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{683A266C-5559-4453-A681-861EA68825BE}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A46DB793-7671-4919-9DE4-4E64ADEDB38E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A46DB793-7671-4919-9DE4-4E64ADEDB38E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A46DB793-7671-4919-9DE4-4E64ADEDB38E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A46DB793-7671-4919-9DE4-4E64ADEDB38E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{57B385D8-1BA2-425B-846C-158481BAFEAF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{57B385D8-1BA2-425B-846C-158481BAFEAF}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{57B385D8-1BA2-425B-846C-158481BAFEAF}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{57B385D8-1BA2-425B-846C-158481BAFEAF}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{98C194EF-D617-4783-95CE-0A656480446F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{98C194EF-D617-4783-95CE-0A656480446F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{98C194EF-D617-4783-95CE-0A656480446F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{98C194EF-D617-4783-95CE-0A656480446F}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {94F8FF35-3F60-4C43-BA52-DE030FF08AD5}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "Icon.png",
          "type": "blob",
          "size": 4.9619140625,
          "content": null
        },
        {
          "name": "License.md",
          "type": "blob",
          "size": 0.5703125,
          "content": "Copyright (c) 2018 Giorgi Dalakishvili. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthese files except in compliance with the License. You may obtain a copy of the\nLicense at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied. See the License for the\nspecific language governing permissions and limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.0576171875,
          "content": "![EntityFramework.Exceptions](https://raw.githubusercontent.com/Giorgi/EntityFramework.Exceptions/main/Icon.png \"EntityFramework.Exceptions\")\n\n# EntityFramework.Exceptions\nHandle database errors easily when working with Entity Framework Core. Supports SQLServer, PostgreSQL, SQLite, Oracle and MySql\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg?style=flat-square&logo=Apache)](License.md)\n[![Target](https://img.shields.io/static/v1?label=target&message=net8.0&color=512bd4&logo=.net&style=flat-square)](https://dotnet.microsoft.com/en-us/)\n![GitHub Actions Workflow Status](https://img.shields.io/github/actions/workflow/status/Giorgi/EntityFramework.Exceptions/dotnet.yml)\n[![Coverage Status](https://img.shields.io/coveralls/github/Giorgi/EntityFramework.Exceptions?logo=coveralls&style=flat-square)](https://coveralls.io/github/Giorgi/EntityFramework.Exceptions)\n[![Ko-Fi](https://img.shields.io/static/v1?style=flat-square&message=Support%20the%20Project&color=success&style=plastic&logo=ko-fi&label=$$)](https://ko-fi.com/U6U81LHU8)\n\n[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=EntityFramework.Exceptions&metric=sqale_rating)](https://sonarcloud.io/dashboard?id=EntityFramework.Exceptions)\n[![Vulnerabilities](https://sonarcloud.io/api/project_badges/measure?project=EntityFramework.Exceptions&metric=vulnerabilities)](https://sonarcloud.io/dashboard?id=EntityFramework.Exceptions)\n[![Bugs](https://sonarcloud.io/api/project_badges/measure?project=EntityFramework.Exceptions&metric=bugs)](https://sonarcloud.io/dashboard?id=EntityFramework.Exceptions)\n[![Code Smells](https://sonarcloud.io/api/project_badges/measure?project=EntityFramework.Exceptions&metric=code_smells)](https://sonarcloud.io/dashboard?id=EntityFramework.Exceptions)\n[![Duplicated Lines (%)](https://sonarcloud.io/api/project_badges/measure?project=EntityFramework.Exceptions&metric=duplicated_lines_density)](https://sonarcloud.io/dashboard?id=EntityFramework.Exceptions)\n[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=EntityFramework.Exceptions&metric=coverage)](https://sonarcloud.io/dashboard?id=EntityFramework.Exceptions)\n\n[![](https://img.shields.io/nuget/dt/EntityFrameworkCore.Exceptions.SqlServer.svg?label=EntityFrameworkCore.Exceptions.SqlServer&style=flat-square&logo=Microsoft-Sql-Server)](https://www.nuget.org/packages/EntityFrameworkCore.Exceptions.SqlServer/)\n[![](https://img.shields.io/nuget/dt/EntityFrameworkCore.Exceptions.PostgreSQL.svg?label=EntityFrameworkCore.Exceptions.PostgreSQL&style=flat-square&logo=PostgreSQL)](https://www.nuget.org/packages/EntityFrameworkCore.Exceptions.PostgreSQL/)\n[![](https://img.shields.io/nuget/dt/EntityFrameworkCore.Exceptions.MySQL.svg?label=EntityFrameworkCore.Exceptions.MySQL&style=flat-square&logo=MySQL&logoColor=white)](https://www.nuget.org/packages/EntityFrameworkCore.Exceptions.MySQL/)\n[![](https://img.shields.io/nuget/dt/EntityFrameworkCore.Exceptions.MySQL.Pomelo.svg?label=EntityFrameworkCore.Exceptions.MySQL.Pomelo&style=flat-square&logo=MySQL&logoColor=white)](https://www.nuget.org/packages/EntityFrameworkCore.Exceptions.MySQL.Pomelo/)\n[![](https://img.shields.io/nuget/dt/EntityFrameworkCore.Exceptions.Sqlite.svg?label=EntityFrameworkCore.Exceptions.Sqlite&style=flat-square&logo=Sqlite)](https://www.nuget.org/packages/EntityFrameworkCore.Exceptions.Sqlite/)\n[![](https://img.shields.io/nuget/dt/EntityFrameworkCore.Exceptions.Oracle.svg?label=EntityFrameworkCore.Exceptions.Oracle&style=flat-square&logo=Oracle)](https://www.nuget.org/packages/EntityFrameworkCore.Exceptions.Oracle/)\n\n### Entity Framework Community Standup Live Show\n\n[![Entity Framework Community Standup - Typed Exceptions for Entity Framework Core](https://img.youtube.com/vi/aUl5QfswNU4/0.jpg)](https://www.youtube.com/watch?v=aUl5QfswNU4)\n\n### Nick Chapsas - The Smart Way to Handle EF Core Exceptions\n\n[![Nick Chapsas - The Smart Way to Handle EF Core Exceptions](https://img.youtube.com/vi/QKwZlWvfh-o/0.jpg)](https://www.youtube.com/watch?v=QKwZlWvfh-o)\n\n### What does EntityFramework.Exceptions do?\n\nWhen using Entity Framework Core for data access all database exceptions are wrapped in `DbUpdateException`. If you need to find \nwhether the exception was caused by a unique constraint, value being too long or value missing for a required column you need to dig into \nthe concrete `DbException` subclass instance and check the error code to determine the exact cause.\n\nEntityFramework.Exceptions simplifies this by handling all the database specific details and throwing different exceptions. All you have\nto do is to configure `DbContext` by calling `UseExceptionProcessor` and handle the exception(s)  you need, such as `UniqueConstraintException`,\n`CannotInsertNullException`, `MaxLengthExceededException`, `NumericOverflowException`, or `ReferenceConstraintException`.\n\nIn case of `UniqueConstraintException` and `ReferenceConstraintException` you can get the name of the associated constraint with **`ConstraintName`** property. The **`ConstraintProperties`** will contain the properties that are part of the constraint. \n\n> [!WARNING]\n> `ConstraintName` and `ConstraintProperties` will be populated only if the index is defined in the Entity Framework Model. These properties will not be populated if the index exists in the database but isn't part of the model or if the index is added with [MigrationBuilder.Sql](https://learn.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.sql?view=efcore-8.0) method.\n\n> [!WARNING]\n> `ConstraintName` and `ConstraintProperties` will not be populated when using SQLite. \n\nAll these exceptions inherit from `DbUpdateException` for backwards compatibility.\n\n### How do I get started?\nFirst, install the package corresponding to your database:\n\n```\ndotnet add package EntityFrameworkCore.Exceptions.SqlServer\n```\n\n```\ndotnet add package EntityFrameworkCore.Exceptions.MySql\n```\n\n```\ndotnet add package EntityFrameworkCore.Exceptions.MySql.Pomelo\n```\n\n```\ndotnet add package EntityFrameworkCore.Exceptions.PostgreSQL\n```\n\n```\ndotnet add package EntityFrameworkCore.Exceptions.Sqlite\n```\n\n```\ndotnet add package EntityFrameworkCore.Exceptions.Oracle\n```\n\nNext, in your DbContext `OnConfiguring` method call `UseExceptionProcessor` extension method:\n\n```csharp\nclass DemoContext : DbContext\n{\n    public DbSet<Product> Products { get; set; }\n    public DbSet<ProductSale> ProductSale { get; set; }\n\n    protected override void OnModelCreating(ModelBuilder builder)\n    {\n        builder.Entity<Product>().HasIndex(u => u.Name).IsUnique();\n    }\n\n    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\n    {\n        optionsBuilder.UseExceptionProcessor();\n    }\n}\n```    \n\nYou will now start getting different exception for different database error. For example, when a unique constraints fails you will get `UniqueConstraintException` exception:\n\n```csharp\nusing (var demoContext = new DemoContext())\n{\n    demoContext.Products.Add(new Product\n    {\n        Name = \"demo\",\n        Price = 10\n    });\n\n    demoContext.Products.Add(new Product\n    {\n        Name = \"demo\",\n        Price = 100\n    });\n\n    try\n    {\n        demoContext.SaveChanges();\n    }\n    catch (UniqueConstraintException e)\n    {\n        //Handle exception here\n        Console.WriteLine($\"Unique constraint {e.ConstraintName} violated. Duplicate value for {e.ConstraintProperties[0]}\");\n    }\n}\n```\n> [!TIP]\n> If you want to use another native SQLite binary instead of `e_sqlite3.dll` use the [EntityFrameworkCore.Exceptions.Sqlite.Core](https://www.nuget.org/packages/EntityFrameworkCore.Exceptions.Sqlite.Core) package. This package depends on Microsoft.Data.Sqlite.Core package, which doesn't include SQLite native binary so you can use any native binary you want.\n\n### Usage with DbContext pooling\n\nInstead of calling `UseExceptionProcessor` in the `OnConfiguring` method, add it where you add your `DbContextPool`:\n\n```csharp\n// Replace UseNpgsql with the sql flavor you're using\nbuilder.Services.AddDbContextPool<DemoContext>(options => options\n    .UseNpgsql(config.GetConnectionString(\"DemoConnection\"))\n    .UseExceptionProcessor());\n```\n"
        }
      ]
    }
  ]
}