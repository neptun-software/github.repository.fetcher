{
  "metadata": {
    "timestamp": 1736710693211,
    "page": 59,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AdminTest0/SharpWxDump",
      "stars": 4267,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CE获取基址.md",
          "type": "blob",
          "size": 1.8408203125,
          "content": "### 如何通过CE附加进程\n\n1. 打开CE >> 选择左上角放大镜按钮 >> 选择微信进程 >> 选择附加到进程\n\n![image](https://user-images.githubusercontent.com/33925462/236711293-b6ab38b1-588c-4c12-988d-efb65978c781.png)\n\n2. 数值类型选择字符串\n\n![image](https://user-images.githubusercontent.com/33925462/236711574-71b26442-ea49-4069-a3e4-57b9143d14eb.png)\n\n3. 搜索手机号\n\n![image](https://user-images.githubusercontent.com/33925462/236711647-320223ce-bd80-4a1b-b3e0-3614bca1f46f.png)\n\n4. 双击数值\n\n显示：WeChatWin.dll+2FFF540\n\n其中**2FFF540**为手机号的基址\n\n![image](https://user-images.githubusercontent.com/33925462/236711702-516d2c73-0c40-4af7-a462-cf6c7e9952c7.png)\n\n### 如何获取KEY的基址？\n\n首先有几种计算方式：\n\n一、偏移地址计算方法：\n偏移地址=内存地址-模块基址\n\n二、模块基址计算方法：\n模块基址=内存地址-偏移地址\n\n三、内存地址计算方法：\n内存地址=模块基址+偏移地址\n\n1. 先获取用户名的基址\n\n![image](https://user-images.githubusercontent.com/33925462/236711818-8d54b562-6250-4a49-935d-024091823c0e.png)\n\n选择第二个基址：WeChatWin.dll+2FFF970\n其中**2FFF970**为用户名的基址\n\n2. KEY的基址可通过用户名的基址计算\n\n计算方式：KEY=用户名-000024\nKEY的基址即：**2FFF970-000024=2FFF94C**\n\n![image](https://user-images.githubusercontent.com/33925462/236711975-db8b891c-68a6-4a72-820e-af53f57a3e39.png)\n\n十进制地址为：50329932\n\n代码块中的五个十进制按顺序代表：微信昵称、微信账号、微信手机号、微信邮箱（高版本失效，这个随便填）、微信KEY\n\n```jsx\n{\n\t\"微信版本号\",\n\tnew List<int>\n\t{\n\t\t50320784,\n\t\t50321712,\n\t\t50320640,\n\t\t38986104,\n\t\t50321676\n\t}\n}\n```\n\n### 目前每个版本都需要自己调，后期会考虑自动化，先忍忍，能用就行\n"
        },
        {
          "name": "Program.cs",
          "type": "blob",
          "size": 13.611328125,
          "content": "using System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Runtime.InteropServices;\r\nusing System.Text;\r\n\r\nnamespace WeChatGetKey\r\n{\r\n\tinternal class Program\r\n\t{\r\n\t\tprivate static void Main(string[] args)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tProgram.ReadTest();\r\n\t\t\t}\r\n\t\t\tcatch (Exception ex)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine(\"Error：\"+ ex.Message);\r\n\t\t\t}\r\n\t\t\tfinally\r\n\t\t\t{\r\n\t\t\t\t//Console.ReadKey();\r\n\t\t\t}\r\n\t\t\tConsole.WriteLine(\"[+] Done\");\r\n\t\t}\r\n\t\tprivate static void ReadTest()\r\n\t\t{\r\n\t\t\tList<int> SupportList = null;\r\n\t\t\tProcess WeChatProcess = null;\r\n\t\t\tforeach (Process ProcessesName in Process.GetProcessesByName(\"WeChat\"))\r\n\t\t\t{\r\n\t\t\t\tWeChatProcess = ProcessesName;\r\n\t\t\t\tConsole.WriteLine(\"[+] WeChatProcessPID: \" + WeChatProcess.Id.ToString());\r\n\t\t\t\tforeach (object obj in WeChatProcess.Modules)\r\n\t\t\t\t{\r\n\t\t\t\t\tProcessModule processModule = (ProcessModule)obj;\r\n\t\t\t\t\tif (processModule.ModuleName == \"WeChatWin.dll\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tProgram.WeChatWinBaseAddress = processModule.BaseAddress;\r\n\t\t\t\t\t\tstring FileVersion = processModule.FileVersionInfo.FileVersion;\r\n\t\t\t\t\t\tConsole.WriteLine(\"[+] WeChatVersion: \" + FileVersion);\r\n\t\t\t\t\t\tif (!Program.VersionList.TryGetValue(FileVersion, out SupportList))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tConsole.WriteLine(\"[-] WeChat Current Version Is: \" + FileVersion + \" Not Support\");\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (SupportList == null)\r\n\t\t\t\t{\r\n\t\t\t\t\tConsole.WriteLine(\"[-] WeChat Base Address Get Faild\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tInt64 WeChatKey = (Int64)Program.WeChatWinBaseAddress + SupportList[4];\r\n\t\t\t\t\tstring HexKey = Program.GetHex(WeChatProcess.Handle, (IntPtr)WeChatKey);\r\n\t\t\t\t\tif (string.IsNullOrWhiteSpace(HexKey))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tConsole.WriteLine(\"[-] WeChat Is Run, But Maybe No Login\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tInt64 WeChatName = (Int64)Program.WeChatWinBaseAddress + SupportList[0];\r\n\t\t\t\t\t\tConsole.WriteLine(\"[+] WeChatName: \" + Program.GetName(WeChatProcess.Handle, (IntPtr)WeChatName, 100));\r\n\t\t\t\t\t\tInt64 WeChatAccount = (Int64)Program.WeChatWinBaseAddress + SupportList[1];\r\n\t\t\t\t\t\tstring Account = Program.GetMobile(WeChatProcess.Handle, (IntPtr)WeChatAccount);\r\n\t\t\t\t\t\tif (string.IsNullOrWhiteSpace(Account))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tConsole.WriteLine(\"[-] WeChatAccount: Maybe User Is No Set Account\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tConsole.WriteLine(\"[+] WeChatAccount: \" + Program.GetAccount(WeChatProcess.Handle, (IntPtr)WeChatAccount, 100));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tInt64 WeChatMobile = (Int64)Program.WeChatWinBaseAddress + SupportList[2];\r\n\t\t\t\t\t\tstring Mobile = Program.GetMobile(WeChatProcess.Handle, (IntPtr)WeChatMobile);\r\n\t\t\t\t\t\tif (string.IsNullOrWhiteSpace(Mobile))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tConsole.WriteLine(\"[-] WeChatMobile: Maybe User Is No Binding Mobile\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tConsole.WriteLine(\"[+] WeChatMobile: \" + Program.GetMobile(WeChatProcess.Handle, (IntPtr)WeChatMobile, 100));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tInt64 WeChatMail = (Int64)Program.WeChatWinBaseAddress + SupportList[3];\r\n\t\t\t\t\t\tstring Mail = Program.GetMail(WeChatProcess.Handle, (IntPtr)WeChatMail);\r\n\t\t\t\t\t\tif (string.IsNullOrWhiteSpace(Mail) != false) { }\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tConsole.WriteLine(\"[+] WeChatMail: \" + Program.GetMail(WeChatProcess.Handle, (IntPtr)WeChatMail, 100));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tConsole.WriteLine(\"[+] WeChatKey: \" + HexKey);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (WeChatProcess == null)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine(\"[-] WeChat No Run\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprivate static string GetName(IntPtr hProcess, IntPtr lpBaseAddress, int nSize = 100)\r\n\t\t{\r\n\t\t\tbyte[] array = new byte[nSize];\r\n\t\t\tif (Program.ReadProcessMemory(hProcess, lpBaseAddress, array, nSize, 0) == 0)\r\n\t\t\t{\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\tstring text = \"\";\r\n\t\t\tforeach (char c in Encoding.UTF8.GetString(array))\r\n\t\t\t{\r\n\t\t\t\tif (c == '\\0')\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\ttext += c.ToString();\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t}\r\n\t\tprivate static string GetAccount(IntPtr hProcess, IntPtr lpBaseAddress, int nSize = 100)\r\n\t\t{\r\n\t\t\tbyte[] array = new byte[nSize];\r\n\t\t\tif (Program.ReadProcessMemory(hProcess, lpBaseAddress, array, nSize, 0) == 0)\r\n\t\t\t{\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\tstring text = \"\";\r\n\t\t\tforeach (char c in Encoding.UTF8.GetString(array))\r\n\t\t\t{\r\n\t\t\t\tif (c == '\\0')\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\ttext += c.ToString();\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t}\r\n\t\tprivate static string GetMobile(IntPtr hProcess, IntPtr lpBaseAddress, int nSize = 100)\r\n\t\t{\r\n\t\t\tbyte[] array = new byte[nSize];\r\n\t\t\tif (Program.ReadProcessMemory(hProcess, lpBaseAddress, array, nSize, 0) == 0)\r\n\t\t\t{\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\tstring text = \"\";\r\n\t\t\tforeach (char c in Encoding.UTF8.GetString(array))\r\n\t\t\t{\r\n\t\t\t\tif (c == '\\0')\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\ttext += c.ToString();\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t}\r\n\t\tprivate static string GetMail(IntPtr hProcess, IntPtr lpBaseAddress, int nSize = 100)\r\n\t\t{\r\n\t\t\tbyte[] array = new byte[nSize];\r\n\t\t\tif (Program.ReadProcessMemory(hProcess, lpBaseAddress, array, nSize, 0) == 0)\r\n\t\t\t{\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\tstring text = \"\";\r\n\t\t\tforeach (char c in Encoding.UTF8.GetString(array))\r\n\t\t\t{\r\n\t\t\t\tif (c == '\\0')\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\ttext += c.ToString();\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t}\r\n        //private static string GetHex(IntPtr hProcess, IntPtr lpBaseAddress)\r\n        //{\r\n        //    byte[] array = new byte[4];\r\n        //    if (Program.ReadProcessMemory(hProcess, lpBaseAddress, array, 4, 0) == 0)\r\n        //    {\r\n        //        return \"\";\r\n        //    }\r\n        //    int num = 32;\r\n        //    byte[] array2 = new byte[num];\r\n        //    IntPtr lpBaseAddress2 = (IntPtr)(((int)array[3] << 24) + ((int)array[2] << 16) + ((int)array[1] << 8) + (int)array[0]);\r\n        //    if (Program.ReadProcessMemory(hProcess, lpBaseAddress2, array2, num, 0) == 0)\r\n        //    {\r\n        //        return \"\";\r\n        //    }\r\n        //    return Program.bytes2hex(array2);\r\n        //}\r\n        private static string GetHex(IntPtr hProcess, IntPtr lpBaseAddress)\r\n        {\r\n            byte[] array = new byte[8];\r\n            if (Program.ReadProcessMemory(hProcess, lpBaseAddress, array, 8, 0) == 0)\r\n            {\r\n                return \"\";\r\n            }\r\n            int num = 32;\r\n            byte[] array2 = new byte[num];\r\n            IntPtr lpBaseAddress2 = (IntPtr)(((long)array[7] << 56) + ((long)array[6] << 48) + ((long)array[5] << 40) + ((long)array[4] << 32) + ((long)array[3] << 24) + ((long)array[2] << 16) + ((long)array[1] << 8) + (long)array[0]);\r\n            if (Program.ReadProcessMemory(hProcess, lpBaseAddress2, array2, num, 0) == 0)\r\n            {\r\n                return \"\";\r\n            }\r\n            return Program.bytes2hex(array2);\r\n        }\r\n\r\n\t\tprivate static string bytes2hex(byte[] bytes)\r\n\t\t{\r\n\t\t\treturn BitConverter.ToString(bytes, 0).Replace(\"-\", string.Empty).ToLower().ToUpper();\r\n\t\t}\r\n\t\t[DllImport(\"kernel32.dll\")]\r\n\t\tpublic static extern int OpenProcess(int dwDesiredAccess, bool bInheritHandle, int dwProcessId);\r\n\t\t[DllImport(\"kernel32.dll\")]\r\n\t\tpublic static extern int GetModuleHandleA(string moduleName);\r\n\t\t[DllImport(\"kernel32.dll\")]\r\n\t\tpublic static extern int ReadProcessMemory(IntPtr hProcess, IntPtr lpBaseAddress, byte[] lpBuffer, int nSize, int lpNumberOfBytesRead);\r\n\t\tpublic static Dictionary<string, List<int>> VersionList = new Dictionary<string, List<int>>\r\n\t\t{\r\n\t\t\t{\r\n\t\t\t\t\"3.2.1.154\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t328121948,\r\n\t\t\t\t\t328122328,\r\n\t\t\t\t\t328123056,\r\n\t\t\t\t\t328121976,\r\n\t\t\t\t\t328123020\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.3.0.115\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t31323364,\r\n\t\t\t\t\t31323744,\r\n\t\t\t\t\t31324472,\r\n\t\t\t\t\t31323392,\r\n\t\t\t\t\t31324436\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.3.0.84\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t31315212,\r\n\t\t\t\t\t31315592,\r\n\t\t\t\t\t31316320,\r\n\t\t\t\t\t31315240,\r\n\t\t\t\t\t31316284\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.3.0.93\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t31323364,\r\n\t\t\t\t\t31323744,\r\n\t\t\t\t\t31324472,\r\n\t\t\t\t\t31323392,\r\n\t\t\t\t\t31324436\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.3.5.34\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t30603028,\r\n\t\t\t\t\t30603408,\r\n\t\t\t\t\t30604120,\r\n\t\t\t\t\t30603056,\r\n\t\t\t\t\t30604100\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.3.5.42\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t30603012,\r\n\t\t\t\t\t30603392,\r\n\t\t\t\t\t30604120,\r\n\t\t\t\t\t30603040,\r\n\t\t\t\t\t30604084\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.3.5.46\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t30578372,\r\n\t\t\t\t\t30578752,\r\n\t\t\t\t\t30579480,\r\n\t\t\t\t\t30578400,\r\n\t\t\t\t\t30579444\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.4.0.37\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t31608116,\r\n\t\t\t\t\t31608496,\r\n\t\t\t\t\t31609224,\r\n\t\t\t\t\t31608144,\r\n\t\t\t\t\t31609188\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.4.0.38\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t31604044,\r\n\t\t\t\t\t31604424,\r\n\t\t\t\t\t31605152,\r\n\t\t\t\t\t31604072,\r\n\t\t\t\t\t31605116\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.4.0.50\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t31688500,\r\n\t\t\t\t\t31688880,\r\n\t\t\t\t\t31689608,\r\n\t\t\t\t\t31688528,\r\n\t\t\t\t\t31689572\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.4.0.54\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t31700852,\r\n\t\t\t\t\t31701248,\r\n\t\t\t\t\t31700920,\r\n\t\t\t\t\t31700880,\r\n\t\t\t\t\t31701924\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.4.5.27\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t32133788,\r\n\t\t\t\t\t32134168,\r\n\t\t\t\t\t32134896,\r\n\t\t\t\t\t32133816,\r\n\t\t\t\t\t32134860\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.4.5.45\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t32147012,\r\n\t\t\t\t\t32147392,\r\n\t\t\t\t\t32147064,\r\n\t\t\t\t\t32147040,\r\n\t\t\t\t\t32148084\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.5.0.20\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35494484,\r\n\t\t\t\t\t35494864,\r\n\t\t\t\t\t35494536,\r\n\t\t\t\t\t35494512,\r\n\t\t\t\t\t35495556\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.5.0.29\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35507980,\r\n\t\t\t\t\t35508360,\r\n\t\t\t\t\t35508032,\r\n\t\t\t\t\t35508008,\r\n\t\t\t\t\t35509052\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.5.0.33\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35512140,\r\n\t\t\t\t\t35512520,\r\n\t\t\t\t\t35512192,\r\n\t\t\t\t\t35512168,\r\n\t\t\t\t\t35513212\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.5.0.39\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35516236,\r\n\t\t\t\t\t35516616,\r\n\t\t\t\t\t35516288,\r\n\t\t\t\t\t35516264,\r\n\t\t\t\t\t35517308\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.5.0.42\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35512140,\r\n\t\t\t\t\t35512520,\r\n\t\t\t\t\t35512192,\r\n\t\t\t\t\t35512168,\r\n\t\t\t\t\t35513212\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.5.0.44\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35510836,\r\n\t\t\t\t\t35511216,\r\n\t\t\t\t\t35510896,\r\n\t\t\t\t\t35510864,\r\n\t\t\t\t\t35511908\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.5.0.46\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35506740,\r\n\t\t\t\t\t35507120,\r\n\t\t\t\t\t35506800,\r\n\t\t\t\t\t35506768,\r\n\t\t\t\t\t35507812\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.6.0.18\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35842996,\r\n\t\t\t\t\t35843376,\r\n\t\t\t\t\t35843048,\r\n\t\t\t\t\t35843024,\r\n\t\t\t\t\t35844068\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.6.5.7\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35864356,\r\n\t\t\t\t\t35864736,\r\n\t\t\t\t\t35864408,\r\n\t\t\t\t\t35864384,\r\n\t\t\t\t\t35865428\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.6.5.16\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t35909428,\r\n\t\t\t\t\t35909808,\r\n\t\t\t\t\t35909480,\r\n\t\t\t\t\t35909456,\r\n\t\t\t\t\t35910500\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.0.26\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t37105908,\r\n\t\t\t\t\t37106288,\r\n\t\t\t\t\t37105960,\r\n\t\t\t\t\t37105936,\r\n\t\t\t\t\t37106980\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.0.29\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t37105908,\r\n\t\t\t\t\t37106288,\r\n\t\t\t\t\t37105960,\r\n\t\t\t\t\t37105936,\r\n\t\t\t\t\t37106980\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.0.30\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t37118196,\r\n\t\t\t\t\t37118576,\r\n\t\t\t\t\t37118248,\r\n\t\t\t\t\t37118224,\r\n\t\t\t\t\t37119268\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.5.11\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t37883280,\r\n\t\t\t\t\t37884088,\r\n\t\t\t\t\t37883136,\r\n\t\t\t\t\t37883008,\r\n\t\t\t\t\t37884052\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.5.23\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t37895736,\r\n\t\t\t\t\t37896544,\r\n\t\t\t\t\t37895592,\r\n\t\t\t\t\t37883008,\r\n\t\t\t\t\t37896508\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.5.27\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t37895736,\r\n\t\t\t\t\t37896544,\r\n\t\t\t\t\t37895592,\r\n\t\t\t\t\t37895464,\r\n\t\t\t\t\t37896508\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.5.31\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t37903928,\r\n\t\t\t\t\t37904736,\r\n\t\t\t\t\t37903784,\r\n\t\t\t\t\t37903656,\r\n\t\t\t\t\t37904700\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.6.24\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t38978840,\r\n\t\t\t\t\t38979648,\r\n\t\t\t\t\t38978696,\r\n\t\t\t\t\t38978604,\r\n\t\t\t\t\t38979612\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.6.29\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t38986376,\r\n\t\t\t\t\t38987184,\r\n\t\t\t\t\t38986232,\r\n\t\t\t\t\t38986104,\r\n\t\t\t\t\t38987148\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.7.6.44\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t39016520,\r\n\t\t\t\t\t39017328,\r\n\t\t\t\t\t39016376,\r\n\t\t\t\t\t38986104,\r\n\t\t\t\t\t39017292\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.8.0.31\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t46064088,\r\n\t\t\t\t\t46064912,\r\n\t\t\t\t\t46063944,\r\n\t\t\t\t\t38986104,\r\n\t\t\t\t\t46064876\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.8.0.33\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t46059992,\r\n\t\t\t\t\t46060816,\r\n\t\t\t\t\t46059848,\r\n\t\t\t\t\t38986104,\r\n\t\t\t\t\t46060780\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.8.0.41\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t46064024,\r\n\t\t\t\t\t46064848,\r\n\t\t\t\t\t46063880,\r\n\t\t\t\t\t38986104,\r\n\t\t\t\t\t46064812\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.8.1.26\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t46409448,\r\n\t\t\t\t\t46410272,\r\n\t\t\t\t\t46409304,\r\n\t\t\t\t\t38986104,\r\n\t\t\t\t\t46410236\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.9.0.28\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t48418376,\r\n\t\t\t\t\t48419280,\r\n\t\t\t\t\t48418232,\r\n\t\t\t\t\t38986104,\r\n\t\t\t\t\t48419244\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.9.2.23\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t50320784,\r\n\t\t\t\t\t50321712,\r\n\t\t\t\t\t50320640,\r\n\t\t\t\t\t38986104,\r\n\t\t\t\t\t50321676\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"3.9.2.26\",\r\n\t\t\t\tnew List<int>\r\n\t\t\t\t{\r\n\t\t\t\t\t50329040,\r\n\t\t\t\t\t50329968,\r\n\t\t\t\t\t50328896,\r\n\t\t\t\t\t38986104,\r\n\t\t\t\t\t50329932\r\n\t\t\t\t}\r\n\t\t\t},\r\n            {\r\n                \"3.9.5.91\",\r\n                new List<int>\r\n                {\r\n                    61654904,\r\n                    61654680,\r\n                    61654712,\r\n                    38986104,\r\n                    61656176\r\n                }\r\n             },\r\n            {\r\n                \"3.9.6.19\",\r\n                new List<int>\r\n                {\r\n                    61997688,\r\n                    61997464,\r\n                    61997496,\r\n                    38986104,\r\n                    61998960\r\n                }\r\n            },\r\n            { \"3.9.6.33\",\r\n                new List<int>\r\n                {\r\n                    62030600,\r\n                    62031936,\r\n                    62030408,\r\n                    38986104,\r\n                    62031872\r\n                }\r\n            \r\n            }\r\n\t\t};\r\n\t\tprivate static IntPtr WeChatWinBaseAddress = IntPtr.Zero;\r\n\t}\r\n}\r\n"
        },
        {
          "name": "Properties",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.1943359375,
          "content": "## SharpWxDump\n如何获取指定版本基址：https://github.com/AdminTest0/SharpWxDump/blob/master/CE%E8%8E%B7%E5%8F%96%E5%9F%BA%E5%9D%80.md\n\n## 3.9.2.26之后的版本请使用x64版本(已更新)\n感谢hallejuyahaha师傅更新x64版本：https://github.com/AdminTest0/SharpWxDump/issues/48\n\n## 3.9.2.26之前的版本请使用x86编译\n\nx86的最后版本代码：https://github.com/AdminTest0/SharpWxDump/commit/bddb843c08f3fc2225df486f81a2bbeed84557e3?diff=split\n\n**2023/05/08 更新内容：新增支持3.9.2.26版本** \n\n**2023/03/26 更新内容：新增支持3.9.2.23版本** \n\n**2023/02/08 更新内容：新增支持3.9.0.28版本** \n\n**2022/12/17 更新内容：新增支持3.8.1.26版本** \n\n**2022/11/18 更新内容：新增支持3.8.0.41版本** \n\n**2022/11/14 更新内容：新增支持3.8.0.33版本** \n\n**2022/11/10 更新内容：新增支持3.8.0.31版本** \n\n**2022/09/19 更新内容：新增支持3.7.6.44版本** \n\n**2022/08/26 更新内容：新增支持3.7.6.29版本** \n\n**2022/08/20 更新内容：新增支持3.7.6.24版本** \n\n**2022/08/08 更新内容**\n\n1. 修改部分代码(未运行、运行未登录、已登录)，方便实战中判断情况\n\n![1](https://user-images.githubusercontent.com/33925462/183328570-af92417f-ffd0-479d-b320-74e64bc71171.png)\n\n\n**2022/08/07 更新内容**\n\n1. 新增支持3.7.5.27版本\n2. 新增支持3.7.5.31版本\n3. 修改获取邮箱功能：低于3.7.0.30版本会直接返回邮箱地址；大于3.7.0.30版本则不显示任何信息\n\n![1](https://user-images.githubusercontent.com/33925462/183289054-05321b52-67b3-4349-98eb-74584e579579.jpg)\n\n**2022/07/23 更新内容**\n\n1. 修复部分场景报错：登录微信后仍然提示：[-] WeChat Base Address Get Faild\n2. 如果还是报错，**请用x86编译**\n\n**支持功能**\n1. 支持微信多开场景，获取多用户信息等\n2. 微信需要登录状态才能获取数据库密钥\n3. 没有动态获取功能，已将偏移地址写入代码内，会不定期更新，**如有需要的版本请提交Issues**\n4. **请用x86编译生成**\n\n![image](https://user-images.githubusercontent.com/33925462/179410099-c0f52c1c-b552-4a51-9822-7440b097bca4.png)\n\n**版本差异**\n1. 版本 < 3.7.0.30 只运行不登录能获取个人信息，登录后可以获取数据库密钥\n2. 版本 > 3.7.0.30 只运行不登录不能获取个人信息，登录后都能获取\n\n**利用场景**\n1. 钓鱼攻击(通过钓鱼控到的机器通常都是登录状态)\n2. 渗透到运维机器(有些运维机器会日常登录自己的微信)\n3. 某些工作需要取证(数据库需要拷贝到本地)\n4. 自行备份(日常备份自己留存)\n5. 等等...............\n\n**数据库解密**\n\n解密后可拖入数据库工具查找敏感信息\n\n![image](https://user-images.githubusercontent.com/33925462/179410883-10deefb3-793d-4e15-8475-a74954fafe19.png)\n\n**参考地址**\n\n数据库解密脚本：https://mp.weixin.qq.com/s/4DbXOS5jDjJzM2PN0Mp2JA\n\n## 免责声明\n本项目仅允许在授权情况下对数据库进行备份，严禁用于非法目的，否则自行承担所有相关责任。使用该工具则代表默认同意该条款;\n\n请勿利用本项目的相关技术从事非法测试，如因此产生的一切不良后果与项目作者无关。\n"
        },
        {
          "name": "SharpWxDump.csproj",
          "type": "blob",
          "size": 2.814453125,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\n  <PropertyGroup>\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\n    <ProjectGuid>{9A708A39-ED10-4D57-B23D-76B1847F7E90}</ProjectGuid>\n    <OutputType>Exe</OutputType>\n    <RootNamespace>SharpWxDump</RootNamespace>\n    <AssemblyName>SharpWxDump</AssemblyName>\n    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>\n    <FileAlignment>512</FileAlignment>\n    <Deterministic>true</Deterministic>\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\n    <PlatformTarget>AnyCPU</PlatformTarget>\n    <DebugSymbols>true</DebugSymbols>\n    <DebugType>full</DebugType>\n    <Optimize>false</Optimize>\n    <OutputPath>bin\\Debug\\</OutputPath>\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\n    <ErrorReport>prompt</ErrorReport>\n    <WarningLevel>4</WarningLevel>\n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\n    <PlatformTarget>AnyCPU</PlatformTarget>\n    <DebugType>pdbonly</DebugType>\n    <Optimize>true</Optimize>\n    <OutputPath>bin\\Release\\</OutputPath>\n    <DefineConstants>TRACE</DefineConstants>\n    <ErrorReport>prompt</ErrorReport>\n    <WarningLevel>4</WarningLevel>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)' == 'Debug|x86'\">\n    <DebugSymbols>true</DebugSymbols>\n    <OutputPath>bin\\x86\\Debug\\</OutputPath>\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\n    <DebugType>full</DebugType>\n    <PlatformTarget>x86</PlatformTarget>\n    <LangVersion>7.3</LangVersion>\n    <ErrorReport>prompt</ErrorReport>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)' == 'Release|x86'\">\n    <OutputPath>bin\\x86\\Release\\</OutputPath>\n    <DefineConstants>TRACE</DefineConstants>\n    <Optimize>true</Optimize>\n    <DebugType>pdbonly</DebugType>\n    <PlatformTarget>x86</PlatformTarget>\n    <LangVersion>7.3</LangVersion>\n    <ErrorReport>prompt</ErrorReport>\n  </PropertyGroup>\n  <ItemGroup>\n    <Reference Include=\"System\" />\n    <Reference Include=\"System.Core\" />\n    <Reference Include=\"System.Xml.Linq\" />\n    <Reference Include=\"System.Data.DataSetExtensions\" />\n    <Reference Include=\"Microsoft.CSharp\" />\n    <Reference Include=\"System.Data\" />\n    <Reference Include=\"System.Xml\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Compile Include=\"Program.cs\" />\n    <Compile Include=\"Properties\\AssemblyInfo.cs\" />\n  </ItemGroup>\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\n</Project>"
        },
        {
          "name": "SharpWxDump.sln",
          "type": "blob",
          "size": 1.416015625,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.32510.428\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"SharpWxDump\", \"SharpWxDump.csproj\", \"{9A708A39-ED10-4D57-B23D-76B1847F7E90}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{9A708A39-ED10-4D57-B23D-76B1847F7E90}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9A708A39-ED10-4D57-B23D-76B1847F7E90}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9A708A39-ED10-4D57-B23D-76B1847F7E90}.Debug|x86.ActiveCfg = Debug|x86\n\t\t{9A708A39-ED10-4D57-B23D-76B1847F7E90}.Debug|x86.Build.0 = Debug|x86\n\t\t{9A708A39-ED10-4D57-B23D-76B1847F7E90}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9A708A39-ED10-4D57-B23D-76B1847F7E90}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9A708A39-ED10-4D57-B23D-76B1847F7E90}.Release|x86.ActiveCfg = Release|x86\n\t\t{9A708A39-ED10-4D57-B23D-76B1847F7E90}.Release|x86.Build.0 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {80DA3A70-3223-4AC2-8227-3138A24B74C6}\n\tEndGlobalSection\nEndGlobal\n"
        }
      ]
    }
  ]
}