{
  "metadata": {
    "timestamp": 1736710819186,
    "page": 319,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fairygui/FairyGUI-unity",
      "stars": 2713,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.0673828125,
          "content": "[*.{cs,vb}]\ndotnet_analyzer_diagnostic.category-Style.severity = none"
        },
        {
          "name": ".gitattribute",
          "type": "blob",
          "size": 0.140625,
          "content": "*.bytes eol=lf\n*.asset eol=lf\n*.shader eol=text\n*.unity eol=text\n*.cs eol=text\n*.meta eol=lf\n*.prefab eol=lf\n.gitattributes text\n.gitignore text"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.53125,
          "content": "/[Ll]ibrary/\n/[Tt]emp/\n/[Oo]bj/\n/[Bb]uild/\n/[Bb]uilds/\n/Assets/AssetStoreTools*\nUIProject/.objs/\n/Logs/\n/UserSettings/\n\n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n\n\n# Unity3D generated meta files\n*.pidb.meta\n\n# Unity3D Generated File On Crash Reports\nsysinfo.txt\n\n# Builds\n*.apk\n*.unitypackage\n.DS_Store\n/.vscode/\n/Packages/packages-lock.json\nTextMesh Pro/\nTextMesh Pro.meta\nAssets/StreamingAssets/\nAssets/StreamingAssets.meta"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0732421875,
          "content": "The MIT License (MIT)\r\n\r\nCopyright (c) 2015 fairygui.com\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n"
        },
        {
          "name": "LuaSupport",
          "type": "tree",
          "content": null
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5458984375,
          "content": " FairyGUI for Unity\r\n====\r\n\r\nFairyGUI is a Cross Platform UI Editor & UI framework.\r\n[Get FairyGUI-Editor](https://en.fairygui.com/product.html)  \r\n\r\nCompared with traditional Unity UI engines such as NGUI and UGUI, FairyGUI uses a way of thinking closer to the designer to redefine the production process of the UI, which greatly reduces the time the programmer needs to invest in making the UI.<br>\r\n\r\nIn terms of running efficiency, FairyGUI uses the unique `FairyBatching` technology for DrawCall optimization, which is more efficient and easier to control than the traditional optimization techniques of NGUI and UGUI. <br>\r\n\r\nIn terms of functionality, FairyGUI has good built-in support for traditional UI production pain points, such as `rich text` (including image and animation), `emoji input` (direct support for keyboard), `virtual list`, `loop list`, `pixel-level hit test`, `curved UI`, `gesture`, `particles and model interspersed UI`, `typing effect`, etc. <br>\r\n\r\nFairyGUI also fully encapsulates all input methods. Whether mouse, single touch, multi-touch, or VR handle input, developers can use the same code to handle interaction.<br>\r\n\r\nThe library was designed to work with Unity 5.6 and above, but is currently only tested with Unity 2018 and above.\r\n\r\n![](images/2015-11-10_000547.png)\r\n\r\n![](images/2015-11-10_001320.png)\r\n\r\n![](images/2015-11-10_001445.png)\r\n\r\n![](images/2015-11-10_001516.png)\r\n\r\n![](images/2016-06-15_010207.png)\r\n\r\n![](images/turn_page.gif)\r\n\r\nLearn\r\n====\r\n\r\n[Guide](https://en.fairygui.com/docs/guide/index.html)\r\n\r\nLicense\r\n====\r\nMIT\r\n"
        },
        {
          "name": "README_zh-CN.md",
          "type": "blob",
          "size": 1.1689453125,
          "content": " FairyGUI for Unity\r\n====\r\n\r\nFairyGUI是一个适用于许多游戏引擎的UI中间件。<br>\r\n[下载编辑器](https://www.fairygui.com/product.html)  \r\n\r\n在运行效率方面，FairyGUI对DrawCall优化使用了特有的`FairyBatching`技术，相比NGUI、UGUI的传统优化技术更加高效而且容易控制，特别是对动静耦合越来越复杂的UI设计更是应付自如。<br>\r\n\r\n在功能方面，FairyGUI对传统UI制作痛点都有很好的内置支持，例如`图文混排`（包括文字和动画混排），`表情输入`（直接支持键盘上的表情），`虚拟列表`、`循环列表`，`像素级点击检测`，`曲面 UI`, `手势`，`粒子和模型穿插UI`，`打字效果`等。<br>\r\n\r\nFairyGUI还对所有输入方式进行了完整的封装，无论是鼠标、单点触摸、多点触摸还是VR手柄输入，开发者都可以使用相同的代码处理交互。<br>\r\n\r\n![](images/2015-11-10_000547.png)\r\n\r\n![](images/2015-11-10_001320.png)\r\n\r\n![](images/2015-11-10_001445.png)\r\n\r\n![](images/2015-11-10_001516.png)\r\n\r\n![](images/2016-06-15_010207.png)\r\n\r\n\r\n学习\r\n====\r\n\r\n[教程](https://www.fairygui.com/docs/guide/index.html)\r\n\r\nLicense\r\n====\r\nMIT"
        },
        {
          "name": "UIProject",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}