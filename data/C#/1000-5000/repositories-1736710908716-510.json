{
  "metadata": {
    "timestamp": 1736710908716,
    "page": 510,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ZiggyCreatures/FusionCache",
      "stars": 2092,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 7.2578125,
          "content": "# To learn more about .editorconfig see https://aka.ms/editorconfigdocs\n###############################\n# Core EditorConfig Options   #\n###############################\n# All files\n[*]\nindent_style = tab\n# Code files\n[*.{cs,csx,vb,vbx}]\nindent_size = 4\ninsert_final_newline = true\ncharset = utf-8-bom\n###############################\n# .NET Coding Conventions     #\n###############################\n[*.{cs,vb}]\n# Organize usings\ndotnet_sort_system_directives_first = true\n# this. preferences\ndotnet_style_qualification_for_field = false:silent\ndotnet_style_qualification_for_property = false:silent\ndotnet_style_qualification_for_method = false:silent\ndotnet_style_qualification_for_event = false:silent\n# Language keywords vs BCL types preferences\ndotnet_style_predefined_type_for_locals_parameters_members = true:silent\ndotnet_style_predefined_type_for_member_access = true:silent\n# Parentheses preferences\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent\n# Modifier preferences\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:silent\ndotnet_style_readonly_field = true:suggestion\n# Expression-level preferences\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_auto_properties = true:silent\ndotnet_style_prefer_conditional_expression_over_assignment = true:silent\ndotnet_style_prefer_conditional_expression_over_return = true:silent\n###############################\n# Naming Conventions          #\n###############################\n# Style Definitions\ndotnet_naming_style.pascal_case_style.capitalization             = pascal_case\n# Use PascalCase for constant fields  \ndotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields\ndotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style\ndotnet_naming_symbols.constant_fields.applicable_kinds            = field\ndotnet_naming_symbols.constant_fields.applicable_accessibilities  = *\ndotnet_naming_symbols.constant_fields.required_modifiers          = const\ndotnet_style_operator_placement_when_wrapping = beginning_of_line\ntab_width = 4\nend_of_line = crlf\ndotnet_style_prefer_simplified_boolean_expressions = true:suggestion\ndotnet_style_prefer_compound_assignment = true:suggestion\ndotnet_style_prefer_simplified_interpolation = true:suggestion\ndotnet_style_namespace_match_folder = true:suggestion\n###############################\n# C# Coding Conventions       #\n###############################\n[*.cs]\n# var preferences\ncsharp_style_var_for_built_in_types = true:silent\ncsharp_style_var_when_type_is_apparent = true:silent\ncsharp_style_var_elsewhere = true:silent\n# Expression-bodied members\ncsharp_style_expression_bodied_methods = false:silent\ncsharp_style_expression_bodied_constructors = false:silent\ncsharp_style_expression_bodied_operators = false:silent\ncsharp_style_expression_bodied_properties = true:silent\ncsharp_style_expression_bodied_indexers = true:silent\ncsharp_style_expression_bodied_accessors = true:silent\n# Pattern matching preferences\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\n# Null-checking preferences\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_conditional_delegate_call = true:suggestion\n# Modifier preferences\ncsharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion\n# Expression-level preferences\ncsharp_prefer_braces = true:silent\ncsharp_style_deconstructed_variable_declaration = true:suggestion\ncsharp_prefer_simple_default_expression = true:suggestion\ncsharp_style_pattern_local_over_anonymous_function = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\n###############################\n# C# Formatting Rules         #\n###############################\n# New line preferences\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n# Indentation preferences\ncsharp_indent_case_contents = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = flush_left\n# Space preferences\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\n# Wrapping preferences\ncsharp_preserve_single_line_statements = true\ncsharp_preserve_single_line_blocks = true\n# CS1998: Async method lacks 'await' operators and will run synchronously\ndotnet_diagnostic.CS1998.severity = suggestion\ncsharp_using_directive_placement = outside_namespace:silent\ncsharp_prefer_simple_using_statement = true:suggestion\ncsharp_style_namespace_declarations = block_scoped:silent\ncsharp_style_prefer_method_group_conversion = true:silent\ncsharp_style_prefer_top_level_statements = true:silent\ncsharp_style_expression_bodied_lambdas = true:silent\ncsharp_style_expression_bodied_local_functions = false:silent\ncsharp_style_prefer_null_check_over_type_check = true:suggestion\ncsharp_style_prefer_local_over_anonymous_function = true:suggestion\ncsharp_style_prefer_index_operator = true:suggestion\ncsharp_style_prefer_range_operator = true:suggestion\ncsharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion\ncsharp_style_prefer_tuple_swap = true:suggestion\ncsharp_style_prefer_utf8_string_literals = true:suggestion\ncsharp_style_unused_value_assignment_preference = discard_variable:suggestion\ncsharp_style_unused_value_expression_statement_preference = discard_variable:silent\n###############################\n# VB Coding Conventions       #\n###############################\n[*.vb]\n# Modifier preferences\nvisual_basic_preferred_modifier_order = Partial,Default,Private,Protected,Public,Friend,NotOverridable,Overridable,MustOverride,Overloads,Overrides,MustInherit,NotInheritable,Static,Shared,Shadows,ReadOnly,WriteOnly,Dim,Const,WithEvents,Widening,Narrowing,Custom,Async:suggestion\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.6103515625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- Backup*.rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 1.490234375,
          "content": "<Project>\n\n\t<PropertyGroup>\n\t\t<Company>Jody Donetti</Company>\n\t\t<Authors>Jody Donetti</Authors>\n\t\t<Product>FusionCache</Product>\n\t\t<Copyright>Copyright © Jody Donetti</Copyright>\n\t\t<PackageLicenseExpression>MIT</PackageLicenseExpression>\n\t\t<PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>\n\n\t\t<RepositoryType>git</RepositoryType>\n\t\t<RepositoryUrl>https://github.com/ZiggyCreatures/FusionCache</RepositoryUrl>\n\t\t<PackageProjectUrl>https://github.com/ZiggyCreatures/FusionCache</PackageProjectUrl>\n\n\t\t<PublishRepositoryUrl>true</PublishRepositoryUrl>\n\t\t<EmbedUntrackedSources>true</EmbedUntrackedSources>\n\t\t<DebugType>embedded</DebugType>\n\t\t<!--\n\t\t<IncludeSymbols>true</IncludeSymbols>\n\t\t<SymbolPackageFormat>snupkg</SymbolPackageFormat>\n\t\t-->\n\t\t<LangVersion>latest</LangVersion>\n\t\t<Nullable>enable</Nullable>\n\t\t<PackageIcon>logo-128x128.png</PackageIcon>\n\t\t<PackageReadmeFile>README.md</PackageReadmeFile>\n\t\t<!--<CheckEolTargetFramework>false</CheckEolTargetFramework>-->\n\t\t<SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>\n\t</PropertyGroup>\n\n\t<ItemGroup>\n\t\t<PackageReference Include=\"Microsoft.SourceLink.GitHub\" Version=\"8.0.0\">\n\t\t\t<PrivateAssets>all</PrivateAssets>\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n\t\t</PackageReference>\n\t</ItemGroup>\n\n\t<PropertyGroup Condition=\"'$(GITHUB_ACTIONS)' == 'true'\">\n\t\t<!--<PropertyGroup>-->\n\t\t<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>\n\t</PropertyGroup>\n\n</Project>"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.052734375,
          "content": "### MIT License\n\nCopyright (c) 2020-2025 Jody Donetti\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.8876953125,
          "content": "<div align=\"center\">\n\n![FusionCache logo](docs/logo-256x256.png)\n\t\n# FusionCache\n\n</div>\n\n<div align=\"center\">\n\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache)\n\n</div>\n\n| 🙋‍♂️ Updating to `v1.0.0` ? please [read here](docs/Update_v1_0_0.md). |\n|:-------|\n\n### FusionCache is an easy to use, fast and robust hybrid cache with advanced resiliency features.\n\nIt was born after years of dealing with all sorts of different types of caches: memory, distributed, hybrid, HTTP caching, CDNs, browser cache, offline cache, you name it. So I've tried to put together these experiences and came up with FusionCache.\n\n<div style=\"text-align:center;\">\n\n![FusionCache diagram](docs/images/diagram.png)\n\n</div>\n\nBeing a hybrid cache means it can transparently work as either a normal memory cache (L1) or as a multi-level cache (L1+L2), where the distributed 2nd level (L2) can be any implementation of the standard `IDistributedCache` interface: this will get us better cold starts, better horizontal scalability, more resiliency and overall better performance.\n\nFusionCache also includes an optional [backplane](docs/Backplane.md) for realtime sync between multiple nodes and advanced resiliency features like [cache stampede](docs/CacheStampede.md) protection, a [fail-safe](docs/FailSafe.md) mechanism, [soft/hard timeouts](docs/Timeouts.md), [eager refresh](docs/EagerRefresh.md), full observability via [logging](docs/Logging.md) and [OpenTelemetry](docs/OpenTelemetry.md) and much more.\n\n## 🏆 Award\n\n<div align=\"center\">\n\n![Google Award](docs/google-award-128x128.png)\n\n</div>\n\nOn August 2021, FusionCache received the [Google Open Source Peer Bonus Award](https://twitter.com/jodydonetti/status/1422550932433350666): here is the [official blogpost](https://opensource.googleblog.com/2021/09/announcing-latest-open-source-peer-bonus-winners.html).\n\n## 📕 Getting Started\n\nWith [🦄 A Gentle Introduction](docs/AGentleIntroduction.md) you'll get yourself comfortable with the overall concepts.\n\nWant to start using it immediately? There's a [⭐ Quick Start](#-quick-start) for you.\n\nCurious about what you can achieve from start to finish? There's a [👩‍🏫 Step By Step ](docs/StepByStep.md) guide.\n\n## 📺 Media\n\nMore into videos?\n\nI've been lucky enough to be invited on some shows and podcasts here and there: you can find them in the [Media](docs/Media.md) section.\n\nA good example is when the fine folks at [On .NET](https://learn.microsoft.com/en-us/shows/on-net/) invited me on the show to allow me to mumbling random caching stuff.\n\n<div align=\"center\">\n\n[![On .NET Talk](docs/images/talks/on-dotnet-small.jpg)](https://www.youtube.com/watch?v=hCswI2goi7s)\n\n</div>\n\n## ✔ Features\nThese are the **key features** of FusionCache:\n\n- [**🛡️ Cache Stampede**](docs/CacheStampede.md): automatic protection from the Cache Stampede problem\n- [**🔀 2nd level**](docs/CacheLevels.md): an optional 2nd level handled transparently, with any implementation of `IDistributedCache`\n- [**💣 Fail-Safe**](docs/FailSafe.md): a mechanism to avoids transient failures, by reusing an expired entry as a temporary fallback\n- [**⏱ Soft/Hard Timeouts**](docs/Timeouts.md): a slow factory (or distributed cache) will not slow down your application, and no data will be wasted\n- [**📢 Backplane**](docs/Backplane.md): in a multi-node scenario, it can notify the other nodes about changes in the cache, so all will be in-sync\n- [**↩️ Auto-Recovery**](docs/AutoRecovery.md): automatic handling of transient issues with retries and sync logic\n- [**🧙‍♂️ Adaptive Caching**](docs/AdaptiveCaching.md): for when you don't know upfront the cache duration, as it depends on the value being cached itself\n- [**🔂 Conditional Refresh**](docs/ConditionalRefresh.md): like HTTP Conditional Requests, but for caching\n- [**🦅 Eager Refresh**](docs/EagerRefresh.md): start a non-blocking background refresh before the expiration occurs\n- [**🔃 Dependency Injection + Builder**](docs/DependencyInjection.md): native support for Dependency Injection, with a nice fluent interface including a Builder support\n- [**📛 Named Caches**](docs/NamedCaches.md): easily work with multiple named caches, even if differently configured\n- [**♊ Auto-Clone**](docs/AutoClone.md): be sure that cached values returned can be safely modified\n- [**🔭 OpenTelemetry**](docs/OpenTelemetry.md): native observability support via OpenTelemetry\n- [**🚀 Background Distributed Operations**](docs/BackgroundDistributedOperations.md): distributed operations can easily be executed in the background, safely, for better performance\n- [**📜 Logging**](docs/Logging.md): comprehensive, structured and customizable, via the standard `ILogger` interface\n- [**💫 Fully sync/async**](docs/CoreMethods.md): native support for both the synchronous and asynchronous programming model\n- [**📞 Events**](docs/Events.md): a comprehensive set of events, both at a high level and at lower levels (memory/distributed)\n- [**🧩 Plugins**](docs/Plugins.md): extend FusionCache with additional behavior like adding support for metrics, statistics, etc...\n\n<details>\n\t<summary>Something more 😏 ?</summary>\n\n<br/>\n\nAlso, FusionCache has some nice **additional features**:\n\n- **✅ Portable**: targets .NET Standard 2.0, so it can run almost everywhere\n- **✅ High Performance**: FusionCache is optimized to minimize CPU usage and memory allocations to get better performance and lower the cost of your infrastructure all while obtaining a more stable, error resilient application\n- **✅ Null caching**: explicitly supports caching of `null` values differently than \"no value\". This creates a less ambiguous usage, and typically leads to better performance because it avoids the classic problem of not being able to differentiate between *\"the value was not in the cache, go check the database\"* and *\"the value was in the cache, and it was `null`\"*\n- **✅ Circuit-breaker**: it is possible to enable a simple circuit-breaker for when the distributed cache or the backplane become temporarily unavailable. This will prevent those components to be hit with an excessive load of requests (that would probably fail anyway) in a problematic moment, so it can gracefully get back on its feet. More advanced scenarios can be covered using a dedicated solution, like <a href=\"https://github.com/App-vNext/Polly\">Polly</a>\n- **✅ Dynamic Jittering**: setting `JitterMaxDuration` will add a small randomized extra duration to a cache entry's normal duration. This is useful to prevent variations of the <a href=\"https://en.wikipedia.org/wiki/Cache_stampede\">Cache Stampede problem</a> in a multi-node scenario\n- **✅ Cancellation**: every method supports cancellation via the standard `CancellationToken`, so it is easy to cancel an entire pipeline of operation gracefully\n- **✅ Code comments**: every property and method is fully documented in code, with useful informations provided via IntelliSense or similar technologies\n- **✅ Fully annotated for [nullability](https://docs.microsoft.com/en-us/dotnet/csharp/nullable-references)**: every usage of nullable references has been annotated for a better flow analysis by the compiler\n\n</details>\n\n\n## 📦 Packages\n\nMain packages:\n\n| Package Name                   | Version | Downloads |\n|--------------------------------|:---------------:|:---------:|\n| [ZiggyCreatures.FusionCache](https://www.nuget.org/packages/ZiggyCreatures.FusionCache/) <br/> The core package | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache) |\n| [ZiggyCreatures.FusionCache.OpenTelemetry](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.OpenTelemetry/) <br/> Adds native support for OpenTelemetry setup | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.OpenTelemetry.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.OpenTelemetry/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.OpenTelemetry) |\n| [ZiggyCreatures.FusionCache.Chaos](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Chaos/) <br/> A package to add some controlled chaos, for testing | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Chaos.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Chaos/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Chaos) |\n\nSerializers:\n\n| Package Name                   | Version | Downloads |\n|--------------------------------|:---------------:|:---------:|\n| [ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson/) <br/> A serializer, based on Newtonsoft Json.NET | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson) |\n| [ZiggyCreatures.FusionCache.Serialization.SystemTextJson](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.SystemTextJson/) <br/> A serializer, based on the new System.Text.Json | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.SystemTextJson.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.SystemTextJson/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.SystemTextJson) |\n| [ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack/) <br/> A MessagePack serializer, based on the most used [MessagePack](https://github.com/neuecc/MessagePack-CSharp) serializer on .NET | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack) |\n| [ZiggyCreatures.FusionCache.Serialization.ProtoBufNet](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.ProtoBufNet/) <br/> A Protobuf serializer, based on one of the most used [protobuf-net](https://github.com/protobuf-net/protobuf-net) serializer on .NET | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.ProtoBufNet.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.ProtoBufNet/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.ProtoBufNet) |\n| [ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack/) <br/> A serializer based on the uber fast new serializer by Neuecc, [MemoryPack](https://github.com/Cysharp/MemoryPack) | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack) |\n| [ZiggyCreatures.FusionCache.Serialization.ServiceStackJson](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.ServiceStackJson/) <br/> A serializer based on the [ServiceStack](https://servicestack.net/) JSON serializer | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.ServiceStackJson.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.ServiceStackJson/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.ServiceStackJson) |\n\nBackplanes:\n\n| Package Name                   | Version | Downloads |\n|--------------------------------|:---------------:|:---------:|\n| [ZiggyCreatures.FusionCache.Backplane.Memory](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Backplane.Memory/) <br/> An in-memory backplane (mainly for testing) | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Backplane.Memory.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Backplane.Memory/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Backplane.Memory) |\n| [ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis/) <br/> A Redis backplane, based on StackExchange.Redis | [![NuGet](https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis.svg)](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis/) | ![Nuget](https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis) |\n\nThird-party packages:\n\n| Package Name                   | Version | Downloads |\n|--------------------------------|:---------------:|:---------:|\n| [JoeShook.ZiggyCreatures.FusionCache.Metrics.Core](https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.Core/)         | [![NuGet](https://img.shields.io/nuget/v/JoeShook.ZiggyCreatures.FusionCache.Metrics.Core.svg)](https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.Core/) | ![Nuget](https://img.shields.io/nuget/dt/JoeShook.ZiggyCreatures.FusionCache.Metrics.Core) |\n| [JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters](https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters/)         | [![NuGet](https://img.shields.io/nuget/v/JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters.svg)](https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters/) | ![Nuget](https://img.shields.io/nuget/dt/JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters) |\n| [JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics](https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics/)         | [![NuGet](https://img.shields.io/nuget/v/JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics.svg)](https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics/) | ![Nuget](https://img.shields.io/nuget/dt/JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics) |\n\n\n## ⭐ Quick Start\n\nFusionCache can be installed via the nuget UI (search for the `ZiggyCreatures.FusionCache` package) or via the nuget package manager console:\n\n```PowerShell\nPM> Install-Package ZiggyCreatures.FusionCache\n```\n\nAs an example, imagine having a method that retrieves a product from your database:\n\n```csharp\nProduct GetProductFromDb(int id) {\n\t// YOUR DATABASE CALL HERE\n}\n```\n\n💡 This is using the **sync** programming model, but it would be equally valid with the newer **async** one for even better performance.\n\nTo start using FusionCache the first thing is create a cache instance:\n\n```csharp\nvar cache = new FusionCache(new FusionCacheOptions());\n```\n\nIf instead you are using [DI (Dependency Injection)](docs/DependencyInjection.md) use this:\n\n```csharp\nservices.AddFusionCache();\n```\n\nWe can also specify some global options, like a default `FusionCacheEntryOptions` object to serve as a default for each call we'll make, with a duration of `2 minutes`:\n\n```csharp\nvar cache = new FusionCache(new FusionCacheOptions() {\n\tDefaultEntryOptions = new FusionCacheEntryOptions {\n\t\tDuration = TimeSpan.FromMinutes(2)\n\t}\n});\n```\n\nOr, using DI, like this:\n\n```csharp\nservices.AddFusionCache()\n\t.WithDefaultEntryOptions(new FusionCacheEntryOptions {\n\t\tDuration = TimeSpan.FromMinutes(2)\n\t})\n;\n```\n\nNow, to get the product from the cache and, if not there, get it from the database in an optimized way and cache it for `30 sec` (overriding the default `2 min` we set above) simply do this:\n\n```csharp\nvar id = 42;\n\ncache.GetOrSet<Product>(\n\t$\"product:{id}\",\n\t_ => GetProductFromDb(id),\n\tTimeSpan.FromSeconds(30)\n);\n```\n\nThat's it 🎉\n\n<details>\n\t<summary>Want a little bit more 😏 ?</summary>\n\nNow, imagine we want to do the same, but also:\n- set the **priority** of the cache item to `High` (mainly used in the underlying memory cache)\n- enable **fail-safe** for `2 hours`, to allow an expired value to be used again in case of problems with the database ([read more](docs/FailSafe.md))\n- set a factory **soft timeout** of `100 ms`, to avoid too slow factories crumbling your application when there's a fallback value readily available ([read more](docs/Timeouts.md))\n- set a factory **hard timeout** of `2 sec`, so that, even if there is no fallback value to use, you will not wait undefinitely but instead an exception will be thrown to let you handle it however you want ([read more](docs/Timeouts.md))\n\nTo do all of that we simply have to change the last line (reformatted for better readability):\n\n```csharp\ncache.GetOrSet<Product>(\n\t$\"product:{id}\",\n\t_ => GetProductFromDb(id),\n\t// THIS IS WHERE THE MAGIC HAPPENS\n\toptions => options\n\t\t.SetDuration(TimeSpan.FromSeconds(30))\n\t\t.SetPriority(CacheItemPriority.High)\n\t\t.SetFailSafe(true, TimeSpan.FromHours(2))\n\t\t.SetFactoryTimeouts(TimeSpan.FromMilliseconds(100), TimeSpan.FromSeconds(2))\n);\n```\n\nBasically, on top of specifying the *cache key* and the *factory*, instead of specifying just a *duration* as a `TimeSpan` we specify a `FusionCacheEntryOptions` object - which contains all the options needed to control the behavior of FusionCache during each operation - in the form of a lambda that automatically duplicates the default entry options defined before (to copy all our defaults) while giving us a chance to modify it as we like for this specific call.\n\nNow let's say we really like these set of options (*priority*, *fail-safe* and *factory timeouts*) and we want them to be the overall defaults, while keeping the ability to change something on a per-call basis (like the *duration*).\n\nTo do that we simply **move** the customization of the entry options where we created the `DefaultEntryOptions`, by changing it to something like this (the same is true for the DI way):\n\n```csharp\nvar cache = new FusionCache(new FusionCacheOptions() {\n\tDefaultEntryOptions = new FusionCacheEntryOptions()\n\t\t.SetDuration(TimeSpan.FromMinutes(2))\n\t\t.SetPriority(CacheItemPriority.High)\n\t\t.SetFailSafe(true, TimeSpan.FromHours(2))\n\t\t.SetFactoryTimeouts(TimeSpan.FromMilliseconds(100), TimeSpan.FromSeconds(2))\n});\n```\n\nNow these options will serve as the **cache-wide default**, usable in every method call as a \"starting point\".\n\nThen, we just change our method call to simply this:\n\n```csharp\nvar id = 42;\n\ncache.GetOrSet<Product>(\n\t$\"product:{id}\",\n\t_ => GetProductFromDb(id),\n\toptions => options.SetDuration(TimeSpan.FromSeconds(30))\n);\n```\n\nThe `DefaultEntryOptions` we did set before will be duplicated and only the duration will be changed for this call.\n\n</details>\n\n## **👩‍🏫 Step By Step**\nIf you are in for a ride you can read a complete [step by step example](docs/StepByStep.md) of why a cache is useful, why FusionCache could be even more so, how to apply most of the options available and what **results** you can expect to obtain.\n\n<div style=\"text-align:center;\">\n\n![FusionCache diagram](docs/images/stepbystep-intro.png)\n\n</div>\n\n## 🖥️ Simulator\n\nDistributed systems are, in general, quite complex to understand.\n\nWhen using FusionCache with the [distributed cache](docs/CacheLevels.md), the [backplane](docs/Backplane.md) and [auto-recovery](docs/AutoRecovery.md) the Simulator can help us **seeing** the whole picture.\n\n[![FusionCache Simulator](https://img.youtube.com/vi/6jGX6ePgD3Q/maxresdefault.jpg)](docs/Simulator.md)\n\n## 🧰 Supported Platforms\n\nFusionCache targets `.NET Standard 2.0` so any compatible .NET implementation is fine: this means `.NET Framework` (the old one), `.NET Core 2+` and `.NET 5/6/7/8+` (the new ones), `Mono` 5.4+ and more (see [here](https://docs.microsoft.com/en-us/dotnet/standard/net-standard#net-implementation-support) for a complete rundown).\n\n**NOTE**: if you are running on **.NET Framework 4.6.1** and want to use **.NET Standard** packages Microsoft suggests to upgrade to .NET Framework 4.7.2 or higher (see the [.NET Standard Documentation](https://docs.microsoft.com/en-us/dotnet/standard/net-standard#net-implementation-support)) to avoid some known dependency issues.\n\n## 🆎 Comparison\n\nThere are various alternatives out there with different features, different performance characteristics (cpu/memory) and in general a different set of pros/cons.\n\nA [feature comparison](docs/Comparison.md) between existing .NET caching solutions may help you choose which one to use.\n\n## 💰 Support\n\nNothing to do here.\n\nAfter years of using a lot of open source stuff for free, this is just me trying to give something back to the community.\n\nIf you really want to talk about money, please consider making  **❤ a donation to a good cause** of your choosing, and let me know about that.\n\n## 💼 Is it Production Ready :tm: ?\n\nYes!\n\nFusionCache is being used **in production** on **real world projects** for years, happily handling millions and millions of requests.\n\nConsidering that the FusionCache packages have been downloaded more than **10 million times** (thanks everybody!) it may very well be used even more.\n\nOh, and it is being used in products by Microsoft itself, like [Data API Builder](https://devblogs.microsoft.com/azure-sql/data-api-builder-ga/)!\n\n## 😍 Are you using it?\n\nIf you find FusionCache useful please [let me know](https://github.com/ZiggyCreatures/FusionCache/discussions/new?category=show-and-tell&title=I%27m%20using%20FusionCache!&body=%23%23%20Scenario%0ADescribe%20how%20you%20are%20using%20FusionCache:%20commercial%20product,%20oss%20project,%20monolith,%20microservice,%20web,%20mobile%20app,%20CLI,%20etc%0A%0A%23%23%20Liked%0AWhat%20you%20liked,%20features,%20docs%20or%20anything%0A%0A%23%23%20Unliked/Missing%0AThings%20you%20didn%27t%20like%20or%20felt%20was%20missing%0A%0A%23%23%20Closing%20Thoughts%0AAny%20closing%20thoughts), I'm  really interested!\n\nThis is the only way for me to know how it is helping people.\n"
        },
        {
          "name": "ZiggyCreatures.FusionCache.sln",
          "type": "blob",
          "size": 11.7255859375,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.2.32630.192\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{34B53F49-F5C5-4850-B79E-59AD130379C6}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache\", \"src\\ZiggyCreatures.FusionCache\\ZiggyCreatures.FusionCache.csproj\", \"{8EA21069-A6E8-4DAB-8368-796BAA10B40E}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"benchmarks\", \"benchmarks\", \"{407E264A-43D3-4139-BF62-D505EECA36F8}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"tests\", \"tests\", \"{C6F3C570-C68C-4A95-960E-82778306BDBA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson\", \"src\\ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson\\ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson.csproj\", \"{482379B4-2A21-4152-B84E-554006FCAC95}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Serialization.SystemTextJson\", \"src\\ZiggyCreatures.FusionCache.Serialization.SystemTextJson\\ZiggyCreatures.FusionCache.Serialization.SystemTextJson.csproj\", \"{ED5B2080-C706-4150-897D-59482F41BC34}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Benchmarks\", \"benchmarks\\ZiggyCreatures.FusionCache.Benchmarks\\ZiggyCreatures.FusionCache.Benchmarks.csproj\", \"{EA8020A5-B936-415A-8A1B-0DC8CA7914B1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Tests\", \"tests\\ZiggyCreatures.FusionCache.Tests\\ZiggyCreatures.FusionCache.Tests.csproj\", \"{25C0D76C-E7D2-43CC-8D0E-BECB0438527B}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{BDC18C05-F0DF-4B40-90D8-4BE559EA0C23}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\tDirectory.Build.props = Directory.Build.props\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Playground\", \"tests\\ZiggyCreatures.FusionCache.Playground\\ZiggyCreatures.FusionCache.Playground.csproj\", \"{7063CEBE-CE42-4E4D-8EE6-EB719CEF2F2F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Backplane.Memory\", \"src\\ZiggyCreatures.FusionCache.Backplane.Memory\\ZiggyCreatures.FusionCache.Backplane.Memory.csproj\", \"{AEBFD35A-48BF-45ED-8AB4-F9DB1882D12D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis\", \"src\\ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis\\ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis.csproj\", \"{5659A831-8170-4398-A130-D521844BB4C0}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Chaos\", \"src\\ZiggyCreatures.FusionCache.Chaos\\ZiggyCreatures.FusionCache.Chaos.csproj\", \"{6DC66BBC-6B35-4CCC-A48B-6AD28C336C80}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack\", \"src\\ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack\\ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.csproj\", \"{DD0A6164-CE88-49A0-AF4E-7A56ACBB13BB}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Serialization.ProtoBufNet\", \"src\\ZiggyCreatures.FusionCache.Serialization.ProtoBufNet\\ZiggyCreatures.FusionCache.Serialization.ProtoBufNet.csproj\", \"{FC2C7F03-69E0-4CCE-A582-1FB6D8D11560}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack\", \"src\\ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack\\ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack.csproj\", \"{919CDF8C-463A-4E82-AFFD-DF8A6B904600}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Serialization.ServiceStackJson\", \"src\\ZiggyCreatures.FusionCache.Serialization.ServiceStackJson\\ZiggyCreatures.FusionCache.Serialization.ServiceStackJson.csproj\", \"{CE437FB2-510F-4DCE-8A1F-AED747DAA4EB}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"SerializerPayloadGenerator\", \"tests\\SerializerPayloadGenerator\\SerializerPayloadGenerator.csproj\", \"{5B1AF24E-90FC-4C21-AF9C-090FE32027E3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.Simulator\", \"tests\\ZiggyCreatures.FusionCache.Simulator\\ZiggyCreatures.FusionCache.Simulator.csproj\", \"{BDB46997-84D1-4CB5-B967-7F820820CB8E}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ZiggyCreatures.FusionCache.OpenTelemetry\", \"src\\ZiggyCreatures.FusionCache.OpenTelemetry\\ZiggyCreatures.FusionCache.OpenTelemetry.csproj\", \"{DA78EB72-93B1-4A77-8525-79AF3EEC4C8D}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{8EA21069-A6E8-4DAB-8368-796BAA10B40E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{8EA21069-A6E8-4DAB-8368-796BAA10B40E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{8EA21069-A6E8-4DAB-8368-796BAA10B40E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{8EA21069-A6E8-4DAB-8368-796BAA10B40E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{482379B4-2A21-4152-B84E-554006FCAC95}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{482379B4-2A21-4152-B84E-554006FCAC95}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{482379B4-2A21-4152-B84E-554006FCAC95}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{482379B4-2A21-4152-B84E-554006FCAC95}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{ED5B2080-C706-4150-897D-59482F41BC34}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{ED5B2080-C706-4150-897D-59482F41BC34}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{ED5B2080-C706-4150-897D-59482F41BC34}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{ED5B2080-C706-4150-897D-59482F41BC34}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{EA8020A5-B936-415A-8A1B-0DC8CA7914B1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{EA8020A5-B936-415A-8A1B-0DC8CA7914B1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{EA8020A5-B936-415A-8A1B-0DC8CA7914B1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EA8020A5-B936-415A-8A1B-0DC8CA7914B1}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{25C0D76C-E7D2-43CC-8D0E-BECB0438527B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{25C0D76C-E7D2-43CC-8D0E-BECB0438527B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{25C0D76C-E7D2-43CC-8D0E-BECB0438527B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{25C0D76C-E7D2-43CC-8D0E-BECB0438527B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{7063CEBE-CE42-4E4D-8EE6-EB719CEF2F2F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{7063CEBE-CE42-4E4D-8EE6-EB719CEF2F2F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{7063CEBE-CE42-4E4D-8EE6-EB719CEF2F2F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{7063CEBE-CE42-4E4D-8EE6-EB719CEF2F2F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{AEBFD35A-48BF-45ED-8AB4-F9DB1882D12D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AEBFD35A-48BF-45ED-8AB4-F9DB1882D12D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AEBFD35A-48BF-45ED-8AB4-F9DB1882D12D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{AEBFD35A-48BF-45ED-8AB4-F9DB1882D12D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5659A831-8170-4398-A130-D521844BB4C0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5659A831-8170-4398-A130-D521844BB4C0}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5659A831-8170-4398-A130-D521844BB4C0}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5659A831-8170-4398-A130-D521844BB4C0}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6DC66BBC-6B35-4CCC-A48B-6AD28C336C80}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6DC66BBC-6B35-4CCC-A48B-6AD28C336C80}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6DC66BBC-6B35-4CCC-A48B-6AD28C336C80}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6DC66BBC-6B35-4CCC-A48B-6AD28C336C80}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{DD0A6164-CE88-49A0-AF4E-7A56ACBB13BB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{DD0A6164-CE88-49A0-AF4E-7A56ACBB13BB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{DD0A6164-CE88-49A0-AF4E-7A56ACBB13BB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{DD0A6164-CE88-49A0-AF4E-7A56ACBB13BB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{FC2C7F03-69E0-4CCE-A582-1FB6D8D11560}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{FC2C7F03-69E0-4CCE-A582-1FB6D8D11560}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{FC2C7F03-69E0-4CCE-A582-1FB6D8D11560}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{FC2C7F03-69E0-4CCE-A582-1FB6D8D11560}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{919CDF8C-463A-4E82-AFFD-DF8A6B904600}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{919CDF8C-463A-4E82-AFFD-DF8A6B904600}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{919CDF8C-463A-4E82-AFFD-DF8A6B904600}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{919CDF8C-463A-4E82-AFFD-DF8A6B904600}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{CE437FB2-510F-4DCE-8A1F-AED747DAA4EB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CE437FB2-510F-4DCE-8A1F-AED747DAA4EB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CE437FB2-510F-4DCE-8A1F-AED747DAA4EB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CE437FB2-510F-4DCE-8A1F-AED747DAA4EB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5B1AF24E-90FC-4C21-AF9C-090FE32027E3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5B1AF24E-90FC-4C21-AF9C-090FE32027E3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5B1AF24E-90FC-4C21-AF9C-090FE32027E3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5B1AF24E-90FC-4C21-AF9C-090FE32027E3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BDB46997-84D1-4CB5-B967-7F820820CB8E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BDB46997-84D1-4CB5-B967-7F820820CB8E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BDB46997-84D1-4CB5-B967-7F820820CB8E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BDB46997-84D1-4CB5-B967-7F820820CB8E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{DA78EB72-93B1-4A77-8525-79AF3EEC4C8D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{DA78EB72-93B1-4A77-8525-79AF3EEC4C8D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{DA78EB72-93B1-4A77-8525-79AF3EEC4C8D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{DA78EB72-93B1-4A77-8525-79AF3EEC4C8D}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{8EA21069-A6E8-4DAB-8368-796BAA10B40E} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{482379B4-2A21-4152-B84E-554006FCAC95} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{ED5B2080-C706-4150-897D-59482F41BC34} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{EA8020A5-B936-415A-8A1B-0DC8CA7914B1} = {407E264A-43D3-4139-BF62-D505EECA36F8}\n\t\t{25C0D76C-E7D2-43CC-8D0E-BECB0438527B} = {C6F3C570-C68C-4A95-960E-82778306BDBA}\n\t\t{7063CEBE-CE42-4E4D-8EE6-EB719CEF2F2F} = {C6F3C570-C68C-4A95-960E-82778306BDBA}\n\t\t{AEBFD35A-48BF-45ED-8AB4-F9DB1882D12D} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{5659A831-8170-4398-A130-D521844BB4C0} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{6DC66BBC-6B35-4CCC-A48B-6AD28C336C80} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{DD0A6164-CE88-49A0-AF4E-7A56ACBB13BB} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{FC2C7F03-69E0-4CCE-A582-1FB6D8D11560} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{919CDF8C-463A-4E82-AFFD-DF8A6B904600} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{CE437FB2-510F-4DCE-8A1F-AED747DAA4EB} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\t\t{5B1AF24E-90FC-4C21-AF9C-090FE32027E3} = {C6F3C570-C68C-4A95-960E-82778306BDBA}\n\t\t{BDB46997-84D1-4CB5-B967-7F820820CB8E} = {C6F3C570-C68C-4A95-960E-82778306BDBA}\n\t\t{DA78EB72-93B1-4A77-8525-79AF3EEC4C8D} = {34B53F49-F5C5-4850-B79E-59AD130379C6}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {92916FA2-FCAC-406E-BF3F-0A2CE9512EF0}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}