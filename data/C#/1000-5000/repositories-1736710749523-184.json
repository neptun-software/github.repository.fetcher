{
  "metadata": {
    "timestamp": 1736710749523,
    "page": 184,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TelegramBots/Telegram.Bot",
      "stars": 3285,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".azure-pipelines",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 1.3828125,
          "content": "# http://EditorConfig.org\n\n# This file is the top-most EditorConfig file\nroot = true\n\n# All Files\n[*]\ncharset = utf-8\n#end_of_line = lf\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nmax_line_length = 120\n\n# Solution Files\n[*.sln]\nindent_style = tab\n\n# XML Project Files\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n# Configuration Files\n[*.{json,xml,yml,config,props,targets,nuspec,resx,ruleset,vsixmanifest,vsct}]\nindent_size = 2\n\n# Markdown Files\n[*.md]\ntrim_trailing_whitespace = false\nindent_size = 2\n\n# C# Files\n[*.cs]\nindent_style = space\ncsharp_align_multiline_parameter = true\ncsharp_align_multiline_extends_list = true\ncsharp_align_linq_query = true\ncsharp_place_attribute_on_same_line = false\ncsharp_empty_block_style = together\ncsharp_style_namespace_declarations = file_scoped\ncsharp_style_var_when_type_is_apparent = true\ncsharp_prefer_braces = when_multiline\ndotnet_diagnostic.IDE0011.severity = silent\ncsharp_style_expression_bodied_constructors = when_on_single_line\ncsharp_style_expression_bodied_methods = when_on_single_line\ncsharp_style_expression_bodied_operators = when_on_single_line\ndotnet_diagnostic.IDE0046.severity = silent\ncsharp_style_var_for_built_in_types = false\ndotnet_diagnostic.IDE0008.severity = silent\ndotnet_diagnostic.IDE0055.severity = silent\ndotnet_diagnostic.IDE0045.severity = silent\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.140625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n.DS_Store\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Settings for different environments\nappsettings.*.json\n\n# Documentation project\nsrc/Telegram.Bot.Documentation/\n\n# Rider IDE\n.idea\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.0302734375,
          "content": "image: gitpod/workspace-dotnet\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 76.8994140625,
          "content": "## [v21.*] - 2024-06-22\n\nStarting with version 21.x, changes are documented here:  \nhttps://telegrambots.github.io/book/migrate\n\nWe keep this library updated to the latest version of Telegram Bot API.  \nSee the [latest changes to Bot API here](https://core.telegram.org/bots/api#recent-changes)\n\n\n<!--\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/)\nand this project adheres to [Semantic Versioning](https://semver.org/).\n\n\n## [Unreleased]\n\n### Added\n\n### Changed\n\n### Fixed\n\n### Removed\n\n-->\n\n<!-- markdownlint-configure-file { \"MD024\": false } -->\n\n## [v20.0.0] - 2024-06-15\n\n> [Bot API 7.0](https://core.telegram.org/bots/api#december-29-2023) (December 29, 2023)  \n> [Bot API 7.1](https://core.telegram.org/bots/api#february-16-2024) (February 16, 2024)  \n> [Bot API 7.2](https://core.telegram.org/bots/api#march-31-2024) (March 31, 2024)  \n> [Bot API 7.3](https://core.telegram.org/bots/api#may-6-2024) (May 6, 2024)  \n> [Bot Api 7.4](https://core.telegram.org/bots/api#may-28-2024) (May 28, 2024)  \n\n### Added\n\n- API methods on `ITelegramBotClient` that accept request classes with parameters \n- Interface `IBusinessConnectable`\n- Property `string? BusinessConnectionId` to the following requests: \n  - `SendMessageRequest`\n  - `SendPhotoRequest`\n  - `SendVideoRequest`\n  - `SendAnimationRequest`\n  - `SendAudioRequest`\n  - `SendDocumentRequest`\n  - `SendStickerRequest`\n  - `SendVideoNoteRequest`\n  - `SendVoiceRequest`\n  - `SendLocationRequest`\n  - `SendVenueRequest`\n  - `SendContactRequest` \n  - `SendPollRequest` \n  - `SendDiceRequest` \n  - `SendGameRequest`\n  - `SendMediaGroupRequest`\n  - `SendChatActionRequest`\n  - `ReplaceStickerInSetRequest`\n  - `GetUserChatBoostsRequest`\n- The following properties to class `Message`:\n  - `SenderBusinessBot`\n  - `BusinessConnectionId`\n  - `IsFromOffline`\n  - `TextQuote`\n  - `SenderBoostCount`\n  - `ReplyToStory`\n  - `BoostAdded`\n  - `LinkPreviewOptions`\n  - `ExternalReply`\n  - `Giveaway`\n  - `GiveawayCreated`\n  - `GiveawayWinners`\n  - `GiveawayCompleted`\n- The following properties to class `Update`:\n  - `BusinessConnection`\n  - `BusinessMessage`\n  - `EditedBusinessMessage`\n  - `DeletedBusinessMessages`\n  - `MessageReaction`\n  - `MessageReactionCount`\n  - `ChatBoost`\n  - `RemovedChatBoost`\n- Members `MessageReaction`, `MessageReactionCount`, `BusinessConnection`, `BusinessMessage`, `EditedBusinessMessage` and `DeletedBusinessMessages` to enum `UpdateType`\n- The following requests:\n  - `GetBusinessConnectionRequest`\n  - `UnpinAllGeneralForumTopicMessagesRequest`\n  - `SetMessageReactionRequest`\n  - `DeleteMessagesRequest`\n  - `ForwardMessagesRequest`\n  - `CopyMessagesRequest`\n- Properties `RequestTitle`, `RequestUsername` and `RequestPhoto` to class `KeyboardButtonRequestChat`\n- Properties `RequestName`, `RequestUsername` and `RequestPhoto` to class `KeyboardButtonRequestUsers`\n- Property `Format` to class `InputSticker`\n- The classes `BusinessConnection`, `BusinessOpeningHours`, `BusinessOpeningHoursInterval`, `BusinessIntro`, `BusinessLocation`, `BusinessMessagesDeleted` and `SharedUser`\n- A class `Birthday`\n- Required property `StickerFormat Format` to class `SetStickerSetThumbnailRequest`\n- Property `Users` to class `UsersShared`\n- Properties `Title`, `Username` and `Photo` to class `ChatShared`\n- Property `CanConnectToBusiness` to class `User`\n- Type `ChatFullRequest` which includes all the properties from `Chat`\n- The classes `ReactionType`, `ReactionTypeEmoji` and `ReactionTypeCustomEmoji` representing different types of reaction.\n- Enum `ReactionTypeKind`\n- Enum `ChatBoostSourceType`\n- The class `KnownReactionTypeEmoji` containing emojis available for `ReactionTypeEmoji`.\n- The classes `MessageReactionUpdated`, `MessageReactionCountUpdated` and `ReactionCount`.\n- New methods `ITelegramBotClient.SetMessageReactionAsync`, `ITelegramBotClient.GetUserChatBoostsAsync`, `ITelegramBotClient.DeleteMessagesAsync`, `ITelegramBotClient.ForwardMessagesAsync` and `ITelegramBotClient.CopyMessagesAsync`\n- The class `ExternalReplyInfo` containing information about a message that is replied to by the current message, but can be from another chat or forum topic.\n- The class `TextQuote` which contains the part of the replied message text or caption that is quoted in the current message.\n- The classes `ReplyParameters` and `LinkPreviewOptions`.\n- New enum value `Blockquote` for `MessageEntityType`.\n- The classes `ChatBoostAdded`, `ChatBoostUpdated` and `ChatBoostRemoved`, `ChatBoostSourcePremium`, `ChatBoostSourceGiftCode` and `ChatBoostSourceGiveaway`\n- The class `Giveaway`, `GiveawayCreated`, `GiveawayWinners` and `GiveawayCompleted`\n- Members `Giveaway`, `GiveawayCreated`, `GiveawayWinners` and `GiveawayCompleted` to enum `MessageType`\n- The Classes `MaybeInaccessibleMessage` and `InaccessibleMessage`.\n- Classes `MessageOrigin`, `MessageOriginUser`, `MessageOriginHiddenUser` and `MessageOriginChannel`\n- Enum `MessageOriginType`\n- Enum member `MessageType.BoostAdded`\n- Fields `Chat` and `Id` to type `Story`\n- Property `bool? ShowCaptionAboveMedia` to types:\n  - `CopyMessageRequest`\n  - `SendAnimationRequest`\n  - `SendPhotoRequest`\n  - `SendVideoRequest`\n  - `EditMessageCaptionRequest`\n  - `InlineQueryResultCachedGif`\n  - `InlineQueryResultCachedMpeg4Gif`\n  - `InlineQueryResultCachedPhoto`\n  - `InlineQueryResultCachedVideo`\n  - `InlineQueryResultGif`\n  - `InlineQueryResultMpeg4Gif`\n  - `InlineQueryResultPhoto`\n  - `InlineQueryResultVideo`\n  - `InputMediaAnimation`\n  - `InputMediaPhoto`\n  - `InputMediaVideo`\n  - `Message`\n- Property `int? LivePeriod` to types `EditMessageLiveLocationRequest` and `EditInlineMessageLiveLocationRequest`\n- Property `string? MessageEffectId` to types:\n  - `SendLocationRequest`\n  - `SendVenueRequest`\n  - `SendAnimationRequest`\n  - `SendAudioRequest`\n  - `SendContactRequest`\n  - `SendDiceRequest`\n  - `SendDocumentRequest`\n  - `SendMediaGroupRequest`\n  - `SendMessageRequest`\n  - `SendPhotoRequest`\n  - `SendPollRequest`\n  - `SendVideoNoteRequest`\n  - `SendVideoRequest`\n  - `SendVoiceRequest`\n  - `SendGameRequest`\n  - `SendStickerRequest`\n- Properties `ParseMode? QuestionParseMode` and `IEnumerable<MessageEntity>? QuestionEntities` to type `SendPollRequest`\n- Request `RefundStarPaymentRequest` and the corresponding extensions method `ITelegramBotClient.RefundStarPaymentAsync` accepting the request\n- Type `BackgroundFill` and it's inheritors `BackgroundFillSolid`, `BackgroundFillGradient` and `BackgroundFillFreeformGradient`\n- Type `BackgroundType` and it's inheritors `BackgroundTypeFill`, `BackgroundTypeWallpaper`, `BackgroundTypePattern` and `BackgroundTypeChatTheme` \n- Enums `BackgroundFillKind` and ``BackgroundTypeKind`\n- Type `ChatBackground`\n- Property `bool? ViaJoinRequest` to type `ChatMemberUpdated`\n- Enum member `ExpandableBlockquote` to enum `MessageEntityType`\n- Enum member `ChatBackgroundSet` to enum `MessageType`\n- Type `InputPollOption`\n- Property `string? EffectId` to type `Message`\n- Property `MessageEntity[]? QuestionEntities` to type `Poll`\n- Property `MessageEntity[]? TextEntities` to type `PollOptions`\n\n### Changed\n- All required properties without setters marked as required using `required` keyword\n- All non-default ctors are marked as obsolete in favor of the default ctors with object initialization syntax and required properties \n- All API methods with positional parameters on `ITelegramBotClient` are marked obsolete\n- Class `UnpinAllGeneralForumTopicMessages` marked as obsolete\n- Replaced parameters `ReplyToMessageId` and `AllowSendingWithoutReply` with the property `ReplyParameters` of type `ReplyParameters` in the methods \n    - `ITelegramBotClient.CopyMessageAsync`, \n    - `ITelegramBotClient.SendMessageAsync`, \n    - `ITelegramBotClient.SendPhotoAsync`, \n    - `ITelegramBotClient.SendVideoAsync`, \n    - `ITelegramBotClient.SendAnimationAsync`, \n    - `ITelegramBotClient.SendAudioAsync`, \n    - `ITelegramBotClient.SendDocumentAsync`, \n    - `ITelegramBotClient.SendStickerAsync`, \n    - `ITelegramBotClient.SendVideoNoteAsync`, \n    - `ITelegramBotClient.SendVoiceAsync`, \n    - `ITelegramBotClient.SendLocationAsync`, \n    - `ITelegramBotClient.SendVenueAsync`, \n    - `ITelegramBotClient.SendContactAsync`, \n    - `ITelegramBotClient.SendPollAsync`, \n    - `ITelegramBotClient.SendDiceAsync`, \n    - `ITelegramBotClient.SendInvoiceAsync`, \n    - `ITelegramBotClient.SendGameAsync`, \n    - `ITelegramBotClient.SendMediaGroupAsync`\n- Replaced properties `ReplyToMessageId` and `AllowSendingWithoutReply` with the property `ReplyParameters` of type `ReplyParameters` in the request classes\n    - `CopyMessageRequest`,\n    - `SendMessageRequest`,\n    - `SendPhotoRequest`,\n    - `SendVideoRequest`,\n    - `SendAnimationRequest`,\n    - `SendAudioRequest`,\n    - `SendDocumentRequest`,\n    - `SendStickerRequest`,\n    - `SendVideoNoteRequest`,\n    - `SendVoiceRequest`,\n    - `SendLocationRequest`,\n    - `SendVenueRequest`,\n    - `SendContactRequest`,\n    - `SendPollRequest`,\n    - `SendDiceRequest`,\n    - `SendInvoiceRequest`,\n    - `SendGameRequest`,\n    - `SendMediaGroupRequest`\n- Replaced the parameter `DisableWebPagePreview` with `LinkPreviewOptions` in the methods `SendTextMessageAsync` and `EditMessageTextAsync`.\n- Replaced the property `DisableWebPagePreview` with `LinkPreviewOptions` in the request classes `SendMessageRequest`, `EditMessageTextRequest`\n and `EditInlineMessageTextRequest`.\n- Replaced the property disable_web_page_preview with `DisableWebPagePreview` in the class `InputTextMessageContent`.\n- Renamed the class `KeyboardButtonRequestUser` to `KeyboardButtonRequestUsers` and added the property `MaxQuantity` to it.\n- Renamed the property `RequestUser` in the class `KeyboardButton` to `RequestUsers`. The old name will still work for backward compatibility.\n- Renamed the class `UserShared` to `UsersShared` and changed the property `UserId` to `UserIds`.\n- Replaced the property `UserShared` in the class Message with the property `UsersShared`.\n- Replaced enum member `MessageType.UserShared` with `MessageType.UsersShared`\n- Fields `ForwardFrom`, `ForwardFromChat`, `ForwardFromMessageId`, `ForwardSignature`, `ForwardSenderName` \nand `ForwardDate` replaced with the field `ForwardOrigin` of type `MessageOrigin` in the class `Message`.\n- Type of the property `Message` of the class `CallbackQuery` to `MaybeInaccessibleMessage`\n- Type of the property `PinnedMessage` of the class `Message` to `MaybeInaccessibleMessage`.\n- Property `StickerFormat` in the class `CreateNewStickerSetRequest` is marked as obsolete \n- Property `UserIds` in the class `UsersShared` is marked as obsolete\n- `GetChatRequest` and subsequently methods `ITelegramBotClientExtensions.GetChatAsync` return type `ChatFullInfo` instead of `Chat`\n- Property `Options` type changed to `IEnumerable<InputPollOption>` in type `SendPollRequest` and the corresponding extension method `ITelegramBotClient.SendPollAsync` \n- Property `ProviderToken` is made optional, and it's type is made nullable in types `SendInvoiceToken`, `CreateInvoiceLinkRequest` and `InputInvoiceMessageContent`\n- All extension method on `ITelegramBotClient` returning `Task<bool>` now return just `Task` since they will never return `false` in case of an error and throw an exception instead\n\n### Removed\n- Fields `ForwardFrom`, `ForwardFromChat`, `ForwardFromMessageId`, `ForwardSignature`, `ForwardSenderName`\n  and `ForwardDate` from type `Message`\n- Most optional properties are removed from the type `Chat`, all of them are now in `ChatFullInfo` type\n\n## [Unreleased] - 2023-09-23\n\n> [Bot API 6.9](https://core.telegram.org/bots/api#september-22-2023) (September 22, 2023)\n\n### Added\n\n- The new administrator privileges `CanPostStories`, `CanEditStories` and `CanDeleteStories` \nto the classes `ChatMemberAdministrator` and `ChatAdministratorRights`.\n- The parameters `CanPostStories`, `CanEditStories` and `CanDeleteStories` to the method `ITelegramBotClient.PromoteChatMemberAsync` \nand `PromoteChatMemberRequest`.Currently, bots have no use for these privileges besides assigning them to other administrators.\n- The properties `FromRequest` and `FromAttachmentMenu` to the class `WriteAccessAllowed`.\n\n> [Bot API 6.8](https://core.telegram.org/bots/api#august-18-2023) (August 18, 2023)\n\n### Added\n\n- Type `Story`. \n- Member `Story` to the enum `MessageType`\n- Property `Story? Story` to the class `Message`. Currently, it holds no information.\n- Property `Chat? VoterChat` to the `PollAnswer` class. For backward compatibility, the field user in \nsuch objects will contain the user `136817688` (`@Channel_Bot`).\n- Property `DateTime? EmojiStatusExpirationDate` to the `Chat` class.\n- New request related to topics:\n  - `UnpinAllGeneralForumTopicMessages`\n- New method related to topics:\n  - `ITelegramBotClient.UnpinAllGeneralForumTopicMessagesAsync`\n\n### Changed\n\n- Property `User? User` in the `PollAnswer` class is optional now.\n\n## [v19.0.0] - 2023-05-07\n\n> [Bot API 6.7](https://core.telegram.org/bots/api#april-21-2023) (April 21, 2023)\n\n> [Bot API 6.6](https://core.telegram.org/bots/api#march-9-2023) (March 9, 2023)\n\n### Added\n\n- Type `InlineQueryResultsButton`\n- Type `SwitchInlineQueryChosenChat`\n- Type `BotName`\n- Property `WebAppName` to the class `WriteAccessAllowed`\n- Property `SwitchInlineQueryChosenChat` to the class `InlineKeyboardButton`\n- Property `ViaChatFolderInviteLink` to the class `ChatMemberUpdated`\n- Static method `InlineKeyboardButton.WithSwitchInlineQueryChosenChat`\n- Requests related to bot's name:\n  - `SetMyNameRequest`\n  - `GetMyNameRequest`\n- Methods related to bot's name:\n  - `ITelegramBotClient.SetMyNameAsync`\n  - `ITelegramBotClient.GetMyNameAsync`\n- New requests related to description:\n  - `GetMyDescriptionRequest`\n  - `SetMyDescriptionRequest`\n- New requests related to short description:\n  - `GetMyShortDescriptionRequest`\n  - `SetMyShortDescriptionRequest`\n- New requests related to stickers:\n  - `DeleteStickerSetRequest`\n  - `SetCustomEmojiStickerSetThumbnailRequest`\n  - `SetStickerEmojiListRequest`\n  - `SetStickerKeywordsRequest`\n  - `SetStickerMaskPositionRequest`\n  - `SetStickerSetThumbnailRequest`\n  - `SetStickerSetTitleRequest`\n- New methods related to description:\n  - `ITelegramBotClient.SetMyDescriptionAsync`\n  - `ITelegramBotClient.GetMyDescriptionAsync`\n- New methods related to short description:\n  - `ITelegramBotClient.SetMyShortDescriptionAsync`\n  - `ITelegramBotClient.GetMyShortDescriptionAsync`\n- New methods related to stickers:\n  - `ITelegramBotClient.DeleteStickerSetAsync`\n  - `ITelegramBotClient.SetCustomEmojiStickerSetThumbnailAsync`\n  - `ITelegramBotClient.SetStickerEmojiListAsync`\n  - `ITelegramBotClient.SetStickerKeywordsAsync`\n  - `ITelegramBotClient.SetStickerMaskPositionAsync`\n  - `ITelegramBotClient.SetStickerSetThumbnailAsync`\n  - `ITelegramBotClient.SetStickerSetTitleAsync`\n- Enum `StickerFormat`\n- Type `BotDescription`\n- Type `BotShortDescription`\n- Type `InputSticker`\n- Added property `string? Emoji` to class `SendStickerRequest`\n- Added property `bool? NeedsRepainting` to the following classes:\n  - `CreateNewStickerSetRequest`\n  - `Sticker`\n- Added property `IEnumerable<InputSticker> Stickers` to class `CreateNewStickerSetRequest`\n- Added property `StickerFormat` to class `CreateNewStickerSetRequest`\n- Added property `InputSticker Stickers` to class `AddStickerToSetRequest`\n\n### Changed\n\n- Replace the parameters `switchPmText` and `switchPmParameter` of the method `AnswerInlineQueryAsync` with the parameter `button` of type `InlineQueryResultsButton`.\n- Replace the properties `SwitchPmText` and `SwitchPmParameter` of the class `AnswerInlineQueryRequest` with the property `Button` of type `InlineQueryResultsButton`.\n- Class `SetStickerSetThumbRequest` renamed to `SetStickerSetThumbnailRequest`\n- Class `CreateNewStickerSetRequest` is no longer abstract\n- Class `AddStickerToSetRequest` is no longer abstract\n- Method `ITelegramBotClient.SetStickerSetThumbAsync` renamed to `ITelegramBotClient.SetStickerSetThumbnailAsync`\n- Properties `PngSticker`, `TgsSticker`, `WebmSticker`, `Emojis`, `MaskPostion` \n  in class `AddStickerToSetRequest` replaced with `Sticker` on Type `InputSticker`\n- Properties `PngSticker`, `TgsSticker`, `WebmSticker`, `Emojis`, `MaskPostion` \n  in class `CreateNewStickerSetRequest` replaced with `Stickers` on Type `IEnumerable<InputSticker>`\n- Renamed property `Thumb` to `Thumbnail`  to the following Types:\n  - `Animation`\n  - `Audio`\n  - `Document`\n  - `Sticker`\n  - `Video`\n  - `VideoNote`\n  - `InputMediaAnimation`\n  - `InputMediaAudio`\n  - `InputMediaDocument`\n  - `InputMediaVideo`\n  - `StickerSet`\n- Renamed property `Thumb` to `Thumbnail` in the following classes:\n  - `SendAnimationRequest`\n  - `SendAudioRequest`\n  - `SendDocumentRequest`\n  - `SendVideoRequest`\n  - `SendVideoNoteRequest`\n- Renamed properties `ThumbUrl`, `ThumbWidth`, `ThumbHeight` to \n  `ThumbnailUrl`, `ThumbnailWidth`, `ThumbnailHeight` in the following Types:\n  - `InlineQueryResultArticle`\n  - `InlineQueryResultContact`\n  - `InlineQueryResultDocument`\n  - `InlineQueryResultLocation`\n  - `InlineQueryResultVenue`\n- Renamed property `ThumbUrl` to `ThumbnailUrl` in the following Types:\n  - `InlineQueryResultPhoto`\n  - `InlineQueryResultVideo`\n- Renamed properties `ThumbUrl`, `ThumbMimeType` to `ThumbnailUrl`, `ThumbnailMimeType` in the following Types:\n  - `InlineQueryResultGif`\n  - `InlineQueryResultMpeg4Gif`\n- Type of property `Sticker` changed from `string` to `InputFileId` in the following classes:\n  - `SetStickerPositionInSetRequest`\n  - `DeleteStickerFromSetRequest`\n\n### Fixed\n\n- Stickers tests\n\n### Removed\n\n- Class `AddAnimatedStickerToSetRequest`\n- Class `AddStaticStickerToSetRequest`\n- Class `AddVideoStickerToSetRequest`\n- Class `CreateNewAnimatedStickerSetRequest`\n- Class `CreateNewStaticStickerSetRequest`\n- Class `CreateNewVideoStickerSetRequest`\n- Method `ITelegramBotClient.AddAnimatedStickerToSetAsync`\n- Method `ITelegramBotClient.AddStaticStickerToSetAsync`\n- Method `ITelegramBotClient.AddVideoStickerToSetAsync`\n- Method `ITelegramBotClient.CreateNewAnimatedStickerSetAsync`\n- Method `ITelegramBotClient.CreateNewStaticStickerSetAsync`\n- Method `ITelegramBotClient.CreateNewVideoStickerSetAsync`\n- Properties `Emojis`, `MaskPostion` in classes `CreateNewStickerSetRequest`, `AddStickerToSetRequest`\n\n## [v19.0.0-preview.3] - Unreleased\n\n> [Bot API 6.5](https://core.telegram.org/bots/api#february-3-2023) (February 3, 2023)\n\n### Added\n\n- Types `KeyboardButtonRequestUser` and `KeyboardButtonRequestChat`\n- Properties `RequestUser` and `RequestChat` to the type `KeyboardButton`\n- Static methods `KeyboardButton.WithRequestUser` and `KeyboardButton.WithRequestChat`\n- Types `UserShared` and `ChatShared`\n- Properties `UserShared` and `ChatShared` to the type `Message`\n- Members `UserShared` and `ChatShared` to the enum `MessageType`\n- Following properties to the types `ChatMemberRestricted` and `ChatPermissions`:\n  - `CanSendAudios`\n  - `CanSendDocuments`\n  - `CanSendPhotos`\n  - `CanSendVideos`\n  - `CanSendVideoNotes`\n  - `CanSendVoiceNotes`\n- Property `UseIndependentChatPermissions` to the types `RestrictChatMemberRequest` and `SetChatPermissionsRequest`\n- Optional parameter `useIndependentChatPermissions` to the methods `ITelegramBotClient.RestrictChatMemberAsync` and `ITelegramBotClient.SetChatPermissionsAsync`\n- Property `UserChatId` to the type `ChatJoinRequest`\n\n### Removed\n\n- Properties `CanSendMediaMessages` from the types `ChatMemberRestricted` and `ChatPermissions`\n- Obsolete types `GetChatMembersCountRequest`, `KickChatMemberRequest`, `VoiceChatEnded`, `VoiceChatParticipantsInvited`,\n`VoiceChatScheduled`, `VoiceChatStarted`.\n- Obsolete methods `ITelegramBotClient.KickChatMemberAsync`, `ITelegramBotClient.GetChatMembersCountAsync`.\n- Obsolete properties `CanManageVoiceChat` from `PromoteChatMemberRequest`, `CanManageVoiceChats` from `ChatMember`. \n\n## [v19.0.0-preview.2] - 2023-01-02\n\n> [Bot API 6.4](https://core.telegram.org/bots/api#december-30-2022) (December 30, 2022)\n\n### Added\n\n- New requests related to topics:\n  - `CloseGeneralForumTopicRequest`\n  - `EditGeneralForumTopicRequest`\n  - `ReopenGeneralForumTopicRequest`\n  - `HideGeneralForumTopicRequest`\n  - `UnhideGeneralForumTopicRequest`\n- New methods related to topics:\n  - `ITelegramBotClient.CloseGeneralForumTopicAsync`\n  - `ITelegramBotClient.EditGeneralForumTopicAsync`\n  - `ITelegramBotClient.ReopenGeneralForumTopicAsync`\n  - `ITelegramBotClient.HideGeneralForumTopicAsync`\n  - `ITelegramBotClient.UnhideGeneralForumTopicAsync`\n- Following properties to type `Chat`:\n  - `bool? IsForum`\n  - `string[]? ActiveUsernames`\n- Optional property `HasSpoiler`\n- Added property `bool? HasSpoiler` to the following classes:\n  - `SendAnimationRequest`\n  - `SendVideoRequest`\n  - `SendPhotoRequest`\n  - `InputMediaAnimation`\n  - `InputMediaPhoto`\n  - `InputMediaVideo`\n- Added following properties to class `Message`:\n  - `HasMediaSpoiler`\n  - `WriteAccessAllowed`\n  - `ForumTopicEdited`\n  - `GeneralForumTopicHidden`\n  - `GeneralForumTopicUnhidden`\n- Property `IsPersistent` to class `ReplyKeyboardMarkup`\n- Types `ForumTopicEdited`, `GeneralForumTopicHidden`, `GeneralForumTopicUnhidden`, `WriteAccessAllowed`\n- Property `int? MessageThreadId` to class `SendChatActionRequest`\n- Properties `HasAggressiveAntiSpamEnabled` and `HasHiddenMembers` to class `Chat`\n- Enum members `ForumTopicEdited`, `GeneralForumTopicHidden`, `GeneralForumTopicUnhidden`, `WriteAccessAllowed` to enum `MessageType`,\n\n### Changed\n- Properties `EditForumTopicRequest.Name` and `EditForumTopicRequest.IconCustomEmojiId` are made nullable\n- Added setters to properties `EditForumTopicRequest.Name` and `EditForumTopicRequest.IconCustomEmojiId`\n- Parameters `name` and `iconCustomEmojiId` and ctor of `EditForumTopicRequest` are made nullable and optional\n- Added optional parameter `bool? hasSpoiler` to the following methods\n  - `ITelegramBotClient.SendAnimationAsync`\n  - `ITelegramBotClient.SendVideoAsync`\n  - `ITelegramBotClient.SendPhotoAsync`\n- Added optional parameter `int? messageThreadId` to method `ITelegramBotClient.SendAnimationRequest`\n- Parameters `name` and `iconCustomEmojiId` in method `ITelegramBotClient.EditForumTopicAsync` are made nullable and optional\n\n## [v19.0.0-preview.1] - 2022-12-03\n\n> [Bot API 6.1](https://core.telegram.org/bots/api#june-20-2022) (June 20, 2022)  \n> [Bot API 6.2](https://core.telegram.org/bots/api#august-12-2022) (August 12, 2022)  \n> [Bot API 6.3](https://core.telegram.org/bots/api#november-5-2022) (November 5, 2022)  \n\n### Added\n\n- .NET 6 to targeted frameworks\n- Following topic releated types:\n  - `Color` to represent color of topics\n  - `ForumTopic`\n  - `ForumTopicClosed`\n  - `ForumTopicCreated`\n  - `ForumTopicReopened`\n- New requests for managing topics:\n  - `CloseForumTopicRequest`\n  - `CreateForumTopicRequest`\n  - `DeleteForumTopicRequest`\n  - `EditForumTopicRequest`\n  - `ReopenForumTopicRequest`\n  - `UnpinAllForumTopicMessagesRequest`\n- Property `MessageThreadId` to following requests\n  - `SendMessageRequest`\n  - `SendPhotoRequest` \n  - `SendVideoRequest` \n  - `SendAnimationRequest`\n  - `SendAudioRequest`\n  - `SendDocumentRequest`\n  - `SendStickerRequest`\n  - `SendVideoNoteRequest`\n  - `SendVoiceRequest`\n  - `SendLocationRequest`\n  - `SendVenueRequest`\n  - `SendContactRequest`\n  - `SendPollRequest`\n  - `SendDiceRequest`\n  - `SendInvoiceRequest`\n  - `SendGameRequest`\n  - `SendMediaGroupRequest`\n  - `CopyMessageRequest`\n  - `ForwardMessageRequest`\n- Following properties to type `Chat`:\n  - `bool? IsForum`\n  - `string[]? ActiveUsernames`\n  - `string? EmojiStatusCustomEmojiId`\n  - `bool? HasRestrictedVoiceAndVideoMessages`\n- Property `bool? CanManageTopics` to following types:\n  - `ChatAdministratorRights`\n  - `ChatPermissions`\n  - `ChatMemberOwner`\n  - `ChatMemberRestricted`\n  - `PromoteChatMemberRequest`\n- Following enum members to `MessageType`:\n  - `ForumTopicCreated`\n  - `ForumTopicClosed`\n  - `ForumTopicReopened`\n  - `Animation`\n- Following properties to type `Message`:\n  - `int? MessageThreadId`\n  - `bool? IsTopicMessage`\n  - `ForumTopicCreated? ForumTopicCreated`\n  - `ForumTopicClosed? ForumTopicClosed`\n  - `ForumTopicClosed? ForumTopicClosed`\n- Enum member `CustomEmoji` to `MessageEntityType`\n- Property `CustomEmojiId`  to `MessageEntity`\n- Extension method `GetCustomEmojiStickersAsync`\n- Request `GetCustomEmojiStickersRequest`\n- Enum `StickerType`\n- Properties `Type` and `CustomEmojiId` to `Sticker`\n- Property `StickerType` to `StickerSet`\n- Property `StickerType` to `CreateNewStickerSetRequest`\n- Parameter `stickerType` to `CreateNew*StickerSetAsync` extension methods\n- Property `HasRestrictedVoiceAndVideoMessages` to `Chat`\n- Properties `JoinToSendMessages`, `JoinByRequest` to `Chat`\n- Properties `IsPremium`, `AddedToAttachmentMenu` to `User`\n- Property `PremiumAnimation` to `Sticker`\n- Property `SecretToken` to `SetWebhookRequest`\n- Parameter `secretToken` to `SetWebhookAsync`\n- Request `CreateInvoiceLinkRequest`\n- Method `CreateInvoiceLinkAsync`\n\n### Changed\n\n- Constructors in following requests accept `IInputFile` or inheritors instead of\n  - `AddAnimatedStickerToSetRequest`\n  - `AddStaticStickerToSetRequest`\n  - `AddVideoStickerToSetRequest`\n  - `CreateNewAnimatedStickerSetRequest`\n  - `CreateNewStaticStickerSetRequest`\n  - `CreateNewVideoStickerSetRequest`\n- Added optional parameter `int? messageThreadId` to following methods:\n  - `ITelegramBotClient.SendTextMessageAsync`\n  - `ITelegramBotClient.SendPhotoAsync`\n  - `ITelegramBotClient.SendVideoAsync`\n  - `ITelegramBotClient.SendAnimationAsync`\n  - `ITelegramBotClient.SendAudioAsync`\n  - `ITelegramBotClient.SendDocumentAsync`\n  - `ITelegramBotClient.SendStickerAsync`\n  - `ITelegramBotClient.SendVideoNoteAsync`\n  - `ITelegramBotClient.SendVoiceAsync`\n  - `ITelegramBotClient.SendLocationAsync`\n  - `ITelegramBotClient.SendVenueAsync`\n  - `ITelegramBotClient.SendContactAsync`\n  - `ITelegramBotClient.SendPollAsync`\n  - `ITelegramBotClient.SendDiceAsync`\n  - `ITelegramBotClient.SendInvoiceAsync`\n  - `ITelegramBotClient.SendGameAsync`\n  - `ITelegramBotClient.SendMediaGroupAsync`\n  - `ITelegramBotClient.CopyMessageAsync`\n  - `ITelegramBotClient.ForwardMessageAsync`\n- Added optional parameter `bool? canManageTopic` to method `ITelegramBotClient.PromoteChatMemberAsync`\n\n### Fixed\n\n- Property 'Message.Type' returns `MessageType.Animation` when a `message` contains `Animation` \n\n### Removed\n\n- Implicit conversion from `ChatId` to `string`\n- .NET Core 3.1 from targeted frameworks\n- Property `ContainsMasks` from `StickerSet`\n- Property `ContainsMasks` from `CreateNewStickerSetRequest`\n- Parameter `containsMasks` from `CreateNew*StickerSetAsync` extension methods\n\n## [v18.0.0] - 2022-06-16\n\n> [Bot API 6.0](https://core.telegram.org/bots/api#april-16-2022) (April 16, 2022)\n\n### Added\n\n- Package `Telegram.Bot.Extensions.Polling` is merged in the main package\n- Type `TelegramBotClientOptions`\n- Types `WebAppInfo`, `SentWebAppMessage`, `WebAppData`, `MenuButton`, `MenuButtonCommands`, `MenuButtonWebApp`,\n  `MenuButtonDefault`, `ChatAdministratorRights`\n- Requests `AnswerWebAppQueryRequest`, `SetChatMenuButtonRequest`, `GetChatMenuButtonRequest`,\n  `SetMyDefaultAdministratorRightsRequest`, `GetMyDefaultAdministratorRightsRequest`\n- Properties `WebAppInfo KeyboardButton.WebApp`, `WebAppInfo InlineKeyboardButton.WebApp`\n- Property `DateTime? WebHookInfo.LastSynchronizationErrorDate`\n- Static methods `KeyboardButton.WithWebApp`, `InlineKeyboardButton.WithWebApp`\n- Properties `VideoChatScheduled`, `VideoChatStarted`, `VideoChatEnded`, `VideoChatParticipantsInvited` and \n  `WebAppData` in type `Message`\n- Enum members `VideoChatScheduled`, `VideoChatStarted`, `VideoChatEnded`, and `VideoChatParticipantsInvited` \n  in type `MessageType`\n- Property `bool ITelegramBotClient.LocalBotServer`\n- `TelegramBotClient` constructor that accepts an instance `TelegramBotClientOptions` and `HttpClient`\n\n### Changed\n- Renamed properties `ChatMemberAdministrator.CanManageVoiceChats`, `PromoteChatMemberRequest.CanManageVoiceChats` to \n  `ChatMemberAdministrator.CanManageVideoChats ` and `PromoteChatMemberRequest.CanManageVideoChats`\n- Removed `baseUrl` parameter from constructor in `TelegramBotClient` that accepts a token\n- Type of property `FileBase.FileSize` changed from `int?` to `long?`\n\n### Fixed\n- Argument `protectContent` in method `TelegramBotClientExtensions.ForwardMessageAsync` is passed to the\n  corresponding request\n\n### Removed\n- Enum members `VoiceChatScheduled`, `VoiceChatStarted`, `VoiceChatEnded`, and `VoiceChatParticipantsInvited`\n  in type `MessageType`\n- Properties `VoiceChatScheduled`, `VoiceChatStarted`, `VoiceChatEnded` and `VoiceChatParticipantsInvited`\n  in type `Message`\n- Property `PinChatMessageRequest.ProtectedContent`\n\n## [v18.0.0-alpha.1] - 2022-02-13\n\n> [Bot API 5.7](https://core.telegram.org/bots/api#january-31-2022) (January 31, 2022)  \n> [Bot API 5.6](https://core.telegram.org/bots/api#december-30-2021) (December 30, 2021)  \n> [Bot API 5.5](https://core.telegram.org/bots/api#december-7-2021) (December 7, 2021)  \n\n### Changed\n\n- `ApiRequestEventArgs` has full request information\n\n### Added\n\n- Requests `CreateNewVideoStickerSetRequest`, `AddVideoStickerToSetRequest`, `BanChatSenderChatRequest`, `UnbanChatSenderChatRequest`\n- Extension methods `TelegramBotClientExtensions.CreateNewVideoStickerSetAsync`, `TelegramBotClientExtensions.AddVideoStickerToSetAsync`, `TelegramBotClientExtensions.BanChatSenderChatRequestAsync`, `TelegramBotClientExtensions.UnbanChatSenderChatRequestAsync`\n- Property `int? MessageAutoDeleteTime` to class `Chat`\n- Property `bool? HasPrivateForwards` to class `Chat`\n- Property `bool? HasProtectedContent` to class `Chat`\n- Property `int? MessageAutoDeleteTime` to class `Message`\n- Property `bool? IsAutomaticForward` to class `Message`\n- Property `bool? HasProtectedContent` to class `Message`\n- Property `bool? ProtectContent` to following requests:\n  - `SendLocationRequest`\n  - `SendVenueRequest`\n  - `CopyMessageRequest`\n  - `ForwardMessageRequest`\n  - `SendAnimationRequest`\n  - `SendAudioRequest`\n  - `SendContactRequest`\n  - `SendDiceRequest`\n  - `SendDocumentRequest`\n  - `SendMediaGroupRequest`\n  - `SendMessageRequest`\n  - `SendPhotoRequest`\n  - `SendPollRequest`\n  - `SendVideoNoteRequest`\n  - `SendVideoRequest`\n  - `SendVoiceRequest`\n- Property `IsVideo` to class `Sticker`\n- Property `IsVideo` to class `StickerSet`\n- Parameter `bool? protectContent = default` to following methods:\n  - `TelegramBotExtensions.SendLocationRequestAsync`\n  - `TelegramBotExtensions.SendVenueRequestAsync`\n  - `TelegramBotExtensions.CopyMessageRequestAsync`\n  - `TelegramBotExtensions.ForwardMessageRequestAsync`\n  - `TelegramBotExtensions.SendAnimationRequestAsync`\n  - `TelegramBotExtensions.SendAudioRequestAsync`\n  - `TelegramBotExtensions.SendContactRequestAsync`\n  - `TelegramBotExtensions.SendDiceRequestAsync`\n  - `TelegramBotExtensions.SendDocumentRequestAsync`\n  - `TelegramBotExtensions.SendMediaGroupRequestAsync`\n  - `TelegramBotExtensions.SendMessageRequestAsync`\n  - `TelegramBotExtensions.SendPhotoRequestAsync`\n  - `TelegramBotExtensions.SendPollRequestAsync`\n  - `TelegramBotExtensions.SendVideoNoteRequestAsync`\n  - `TelegramBotExtensions.SendVideoRequestAsync`\n  - `TelegramBotExtensions.SendVoiceRequestAsync`\n- Enum member `MessageEntityType.Spoiler`\n\n### Changed\n\n- Method `TelegramBotClient.MakeRequestAsync` is made virtual\n- Class `CreateNewStickerSetRequest` renamed to `CreateNewStaticStickerSetRequest`\n- Class `CreateNewStickerSetRequest` is made abstract\n- Class `AddStickerToSetRequest` renamed to `AddStaticStickerToSetRequest`\n- Class `AddStickerToSetRequest` is made abstract\n- Method `TelegramBotClientExtensions.AddStickerToSetAsync` is renamed to `AddStaticStickerToSetAsync`\n- Method `TelegramBotClientExtensions.CreateNewStaticStickerSetAsync` is renamed to `CreateNewStaticStickerSetAsync`\n\n### Fixed\n\n- `DeleteWebhookRequest` parameters are now properly serializing\n- Added missing json attribute to property `ChatInviteLink.Name`\n\n### Removed\n\n- Parameter `untilDate` is removed from `TelegramBotClientExtensions.BanChatSenderChatAsync`\n- Property `UntilDate` is removed from `BanChatSenderChatRequest`\n\n## [v17.0.0] - 2021-11-17\n\n- v17 release\n\n## [v17.0.0-alpha.5] - 2021-11-12\n\n### Added\n\n- Added missing JSON attributes on types `ApproveChatJoinRequest` and `DeclineChatJoinRequest`\n- Types `ApproveChatJoinRequest` and `DeclineChatJoinRequest` implement `IChatTargetable` interface\n\n## [v17.0.0-alpha.4] - 2021-11-06\n\n> [Bot API 5.4](https://core.telegram.org/bots/api#november-5-2021) (November 5, 2021)\n\n### Added\n\n- Request `ApproveChatJoinRequest`\n- Request `DeclineChatJoinRequest`\n- Property `bool? CreateChatInviteLinkRequest.CreatesJoinRequest`\n- Property `string? CreateChatInviteLinkRequest.Name`\n- Property `bool? EditChatInviteLinkRequest.CreatesJoinRequest`\n- Property `string? EditChatInviteLinkRequest.Name`\n- Property `bool ChatInviteLink.CreatesJoinRequest`\n- Property `int? ChatInviteLink.PendingJoinRequestCount`\n- Type `ChatJoinRequest`\n- Property `ChatJoinRequest Update.ChatJoinRequest`\n- Enum member `ChatAction.ChooseSticker`\n- Extension method `TelegramBotClientExtensions.ApproveChatJoinRequestAsync`\n- Extension method `TelegramBotClientExtensions.DeclineChatJoinRequestAsync`\n\n### Changed\n\n- Extension method `TelegramBotClientExtensions.EditChatInviteLinkAsync`:\n  - Added parameters `string? name` and `bool? createsJoinRequest`\n- Extension method `TelegramBotClientExtensions.CreateChatInviteLinkAsync`:\n  - Added parameters `string? name` and `bool? createsJoinRequest`\n\n### Changed\n\n- Fields `ChatId.Identifier` and `ChatId.Username` changed into get-only properties\n\n## [v17.0.0-alpha.3] - 2021-09-01\n\n### Changed\n\n- Method `GetInfoAndDownloadFileAsync` moved into static class `TelegramBotClientExtensions` as an extension method\n- Symbols are always include in the package\n\n## [v17.0.0-alpha.2] - 2021-09-01\n\n### Added\n\n- Interface `IExceptionsParser`\n- Type `ApiResponse`\n- Property `ITelegramBotClient.ExceptionsParser`\n\n## [v.16.0.2] - 2021-08-16\n\n### Fixed\n\n- Parameter name `ChatLocation.String` replaced with `ChatLocation.Address`\n\n## [v16.0.1] - 2021-07-10\n\n### Fixed\n\n- `ITelegramBotClient.SendDocumentAsync` passed wrong value into `DisableContentTypeDetection` property\n\n## [v17.0.0-alpha.1] - 2021-06-13\n\n> [Bot API 5.3](https://core.telegram.org/bots/api#june-25-2021) (June 25, 2021)\n\n### Added\n\n- Enum `InputMediaType`\n- Type `BanCommandScope`\n- Type `BanCommandScopeDefault`\n- Type `BanCommandScopeAllPrivateChats`\n- Type `BanCommandScopeAllGroupChats`\n- Type `BanCommandScopeAllChatAdministrators`\n- Type `BanCommandScopeChat`\n- Type `BanCommandScopeChatAdministrators`\n- Type `BanCommandScopeChatMember`\n- Enum `BanCommandScopeType`\n- Type `ChatMemberOwner`\n- Type `ChatMemberAdministrator`\n- Type `ChatMemberMember`\n- Type `ChatMemberRestricted`\n- Type `ChatMemberLeft`\n- Type `ChatMemberBanned`\n- Request `BanChatMemberRequest`\n- Request `BanChatMemberRequest`  \n- Request `DeleteMyCommandsRequest`\n- Request `GetChatMemberCountRequest`\n- Method `ITelegramBotClient.DeleteMyCommandsAsync`\n- Method `ITelegramBotClient.BanChatMemberAsync`\n- Method `ITelegramBotClient.GetChatMemberCountAsync`\n- Property `BotCommandScope GetMyCommandsRequest.Scope { get; set; }`\n- Property `string GetMyCommandsRequest.LanguageCode { get; set; }`\n- Property `BotCommandScope SetMyCommandsRequest.Scope { get; set; }`\n- Property `string SetMyCommandsRequest.LanguageCode { get; set; }`\n- Property `IRequest<TResponse>.IsWebhookResponse { get; set; }`\n- Protected constructor `InputMediaBase` that accepts `InputMedia`\n- Protected constructor `InputTelegramFile` that accepts `FileType`\n- Property `string ForceReplyMarkup.InputFieldPlaceholder { get; set; }`\n- Property `string ReplyKeyboardMarkup.InputFieldPlaceholder { get; set; }`\n- Enum `EncryptedPassportElementType`\n- Interface `IChatTargetable`\n- Interface `IUserTargetable`\n\n### Changed\n\n- Type `InlineQueryResultBase` renamed to `InlineQueryResult`\n- Type `ChatMember` is made abstract\n- Property `ChatMember.Status` is made abstract\n- Every use of enum `ParseMode` is made nullable to represent default text mode without any markup\n- Type `KickChatMemberRequest` is marked as obsolete\n- Type `GetChatMembersCountRequest` is marked as obsolete\n- Method `ITelegramBotClient.KickChatMemberAsync` is marked as obsolete\n- Method `ITelegramBotClient.GetChatMembersCountAsync` is marked as obsolete\n- All underlying enum values changed to start from `1` instead of `0`. `0` value are reserved for unknown enum values.\n- Type `ChatMember` is made abstract and it's properties are moved into separate inheriting classes\n- Changed parameters in `ITelegramBotClient.GetMyCommandsAsync`: added parameters `BotCommandScope scope` and `string language`\n- Changed parameters in `ITelegramBotClient.SetMyCommandsAsync`: added parameters `BotCommandScope scope` and `string language`\n- Type of property `IInputMedia.Type` changed from `string` to `InputMediaType`\n- Property `InputFileStream.FileType` is no longer virtual\n- Constructor of type `InputFileStream` that accepts both `Stream content` and `string fileName`: `filename` parameter is made optional\n- Constructor of type `InputOnlineFile` that accepts both `Stream content` and `string fileName`: `filename` parameter is made optional\n- Constructor of type `InputTelegramFile` that accepts both `Stream content` and `string fileName`: `filename` parameter is made optional\n- Property `InputMediaBase.Type` is made abstract\n- Protected setter `InputTelegramFile.FileId` is made private protected\n- Type of property `EncryptedPassportElement.Type` changed from `string` to `EncryptedPassportElementType`\n- All optional types are made nullable be it value or reference types\n\n### Removed\n\n- Public setter `ChatMember.Status`\n- Enum member `ParseMode.Default`\n- Enum members `ChatAction.RecordAudio` and `ChatAction.UploadAudio`\n- Protected setter from property `InputFileStream.Content`\n- Constructor of type `InputFileStream` that accepts only `Stream`\n- Constructor of type `InputOnlineFile` that accepts only `Stream`\n- Constructor of type `InputTelegramFile` that accepts only `Stream`\n- Property setter `InputMediaBase.Media`\n- Protected setter `InputOnlineFile.Url`\n- All obsolete types, methods and properties related to polling events\n- Following interfaces: `ICaptionEntities`, `IEntities`, `IFormattableEntities`, `IInlineMessage`,\n  `IInlineReplyMarkupMessage`, `INotifiableMessage`, `IReplyMarkupMessage`, `IReplyMessage`, `IThumbMediaMessage`,\n  `ICaptionInlineQueryResult`, `ILocationInlineQueryResult`, `IThumbnailInlineQueryResult`,\n  `IThumbnailUrlInlineQueryResult`\n\n## [v16.0.0] - 2021-06-13\n\n### Changed\n\n- `Animation` inherits from `FileBase`\n- All custom exceptions are marked as obsolete\n\n## [v16.0.0-alpha.2] - 2021-05-10\n\n> [Bot API 5.2](https://core.telegram.org/bots/api#april-26-2021) (April 26, 2021)\n\n### Added\n\n- Property `VoiceChatScheduled` to the class `Message`.\n- Types `VoiceChatScheduled`, `InputInvoiceMessageContent`\n- New `MessageType` value: `VoiceChatScheduled`\n- Property `ChatType` to the class `InlineQuery`.\n- New `ChatType` value: `Sender`\n- New `ChatAction` values: `RecordVoice`, `UploadVoice`\n- Optional parameters `maxTipAmount` and `suggestedTipAmounts` to `ITelegramBotClient.SendInvoiceAsync`\n- Properties `MaxTipAmount` and `SuggestedTipAmounts` to `SendInvoiceRequest`\n\n### Changed\n\n- Parameter order in `ITelegramBotClient.UnpinChatMessageAsync`\n- Parameter `startParameter` of the method `ITelegramBotClient.SendInvoiceAsync` became optional\n- `ChatAction` values `RecordAudio` and `UploadAudio` marked as obsolete\n- `ReplyToMessageId` and `AllowSendingWithoutReply` in `IReplyMessage`, `CopyMessageRequest`, `SendLocationRequest`, `SendAnimationRequest`, `SendAudioRequest`, `SendContactRequest`, `SendDiceRequest`, `SendDocumentRequest`, `SendMediaGroupRequest`, `SendMessageRequest`, `SendPhotoRequest`, `SendPollRequest`, `SendVenueRequest`, `SendVideoNoteRequest`, `SendVideoRequest`, `SendVoiceRequest`, `SendGameRequest`, `SendStickerRequest` marked as optional\n\n> ⚠️ WARNING! ⚠️\n> After the next Bot API update (Bot API 5.3) there will be a one-time change of the value of the field `FileUniqueId` in objects of the type `PhotoSize` and of the fields `SmallFileUniqueId` and `BigFileUniqueId` in objects of the type `ChatPhoto`.\n\n<!-- -->\n> ⚠️ WARNING! ⚠️\n> Service messages about non-bot users joining the chat will be soon removed from large groups. We recommend using the “chat_member” update as a replacement.\n\n<!-- -->\n> ⚠️ WARNING! ⚠️\n> After one of the upcoming Bot API updates, user identifiers will become bigger than 2^31 - 1 and it will be no longer possible to store them in a signed 32-bit integer type. User identifiers will have up to 52 significant bits, so a 64-bit integer or double-precision float type would still be safe for storing them. Please make sure that your code can correctly handle such user identifiers.\n\n### Fixed\n\n- Align property order and description with official docs\n\n### Removed\n\n- Parameter `startParameter` from `SendInvoiceRequest` constructor\n\n## [v16.0.0-alpha.1] - 2021-05-01\n\n> [Bot API 5.1](https://core.telegram.org/bots/api#march-9-2021) (March 9, 2021)  \n> [Bot API 5.0](https://core.telegram.org/bots/api#november-4-2020) (November 4, 2020)\n\n### Added\n\n- The method `ITelegramBotClient.CreateChatInviteLinkAsync`\n- The method `ITelegramBotClient.EditChatInviteLinkAsync`\n- The method `ITelegramBotClient.RevokeChatInviteLinkAsync`\n- Optional parameter `revokeMessages` to `ITelegramBotClient.KickChatMemberAsync`\n- Optional parameters `canManageChat`, `canManageVoiceChats` to `ITelegramBotClient.KickChatMemberAsync`\n- Property `RevokeMessages` to `KickChatMemberRequest`\n- Properties `CanManageChat`, `CanManageVoiceChats` to `PromoteChatMemberRequest`\n- Properties `CanManageChat`, `CanManageVoiceChats` to `ChatMember`\n- Properties `MessageAutoDeleteTimerChanged`, `VoiceChatStarted`, `VoiceChatEnded`, `VoiceChatParticipantsInvited` to `Message`\n- Properties `MyChatMember` and `ChatMember` to `Update`\n- Types `CreateChatInviteLinkRequest`, `EditChatInviteLinkRequest`, `RevokeChatInviteLinkRequest`, `ChatInviteLink`, `ChatMemberUpdated`, `MessageAutoDeleteTimerChanged`, `VoiceChatEnded`, `VoiceChatParticipantsInvited`, `VoiceChatStarted`\n- New enum value `Bowling` for `Emoji`\n- New enum values `MessageAutoDeleteTimerChanged`, `ProximityAlertTriggered`, `VoiceChatStarted`, `VoiceChatEnded`, `VoiceChatParticipantsInvited` for `MessageType`\n- New enum values `MyChatMember`, `ChatMember` for `UpdateType`\n- Delegate `AsyncEventHandler<T>`\n- Methods:\n  - `ITelegramBotClient.LogOutAsync`\n  - `ITelegramBotClient.CloseAsync`\n  - `ITelegramBotClient.CopyMessageAsync`\n  - `ITelegramBotClient.UnpinAllChatMessages`\n- Optional parameter `ipAddress` to `ITelegramBotClient.SetWebhookAsync`\n- Optional parameter `dropPendingUpdates` to `ITelegramBotClient.SetWebhookAsync`, `ITelegramBotClient.DeleteWebhookAsync`\n- Optional parameter `allowSendingWithoutReply` to the methods `SendTextMessageAsync`, `SendPhotoAsync`, `SendVideoAsync`, `SendAnimationAsync`, `SendAudioAsync`, `SendDocumentAsync`, `SendStickerAsync`, `SendVideoNoteAsync`, `SendVoiceAsync`, `SendLocationAsync`, `SendVenueAsync`, `SendContactAsync`, `SendPollAsync`, `SendDiceAsync`, `SendInvoiceAsync`, `SendGameAsync`, `SendMediaGroupAsync`\n- Optional parameter `captionEntities` to `SendTextMessageAsync`, `SendPhotoAsync`, `SendVideoAsync`, `SendAnimationAsync`, `SendAudioAsync`, `SendDocumentAsync`, `SendVoiceAsync`, `SendPollAsync`, `EditMessageTextAsync`, `EditMessageCaptionAsync`\n- Optional parameter `isAnonymous` to `ITelegramBotClient.PromoteChatMemberAsync`\n- Optional parameter `messageId` to `ITelegramBotClient.UnpinChatMessageAsync`\n- Optional parameter `onlyIfBanned` to `ITelegramBotClient.UnbanChatMemberAsync`\n- Optional parameter `disableContentTypeDetection` to `ITelegramBotClient.SendDocumentAsync`\n- Optional parameter `heading` to `ITelegramBotClient.SendLocationAsync`, `ITelegramBotClient.EditMessageLiveLocationAsync`\n- Optional parameter `proximityAlertRadius` to `ITelegramBotClient.SendLocationAsync`, `ITelegramBotClient.EditMessageLiveLocationAsync`\n- Optional parameter `horizontalAccuracy` to `ITelegramBotClient.SendLocationAsync`, `ITelegramBotClient.EditMessageLiveLocationAsync`\n- Optional parameters `googlePlaceId`, `googlePlaceType` to `ITelegramBotClient.SendVenueAsync`\n- Property `IpAddress` to `SetWebhookRequest`, `WebhookInfo`\n- Property `DropPendingUpdates` to `SetWebhookRequest`, `DeleteWebhookRequest`\n- Property `AllowSendingWithoutReply` to `SendMessageRequest`, `SendPhotoRequest`, `SendAudioRequest`, `SendDocumentRequest`, `SendStickerRequest`, `SendVideoRequest`, `SendAnimationRequest`, `SendVoiceRequest`, `SendVideoNoteRequest`, `SendMediaGroupRequest`, `SendLocationRequest`, `SendVenueRequest`, `SendContactRequest`, `SendPollRequest`, `SendDiceRequest`, `SendInvoiceRequest`, `SendGameRequest`\n- Property `CaptionEntities` to `InputMediaBase`, `InlineQueryResultPhoto`, `InlineQueryResultGif`, `InlineQueryResultMpeg4Gif`, `InlineQueryResultVideo`, `InlineQueryResultAudio`, `InlineQueryResultVoice`, `InlineQueryResultDocument`, `InlineQueryResultCachedPhoto`, `InlineQueryResultCachedGif`, `InlineQueryResultCachedMpeg4Gif`, `InlineQueryResultCachedVideo`, `InlineQueryResultCachedAudio`, `InlineQueryResultCachedVoice`, `InlineQueryResultCachedDocument`\n- Property `Entities` to `InputTextMessageContent`\n- Properties `SenderChat`, `AuthorSignature`, `ProximityAlertTriggered` to `Message`\n- Properties `Bio`, `LinkedChatId`, `Location` to `Chat`\n- Property `IsAnonymous` to `ChatMember`, `PromoteChatMemberRequest`\n- Property `LivePeriod` to `Location`\n- Property `ProximityAlertRadius` to `Location`, `InlineQueryResultLocation`, `InputLocationMessageContent`, `SendLocationRequest`, `EditMessageLiveLocationRequest`, `EditInlineMessageLiveLocationRequest`\n- Property `HorizontalAccuracy` to `Location`, `InlineQueryResultLocation`, `InputLocationMessageContent`, `SendLocationRequest`, `EditMessageLiveLocationRequest`, `EditInlineMessageLiveLocationRequest`\n- Property `Heading` to `Location`, `InlineQueryResultLocation`, `SendLocationRequest`, `EditMessageLiveLocationRequest`, `EditInlineMessageLiveLocationRequest`\n- Property `MessageId` to `PinChatMessageRequest`\n- Property `OnlyIfBanned` to `UnbanChatMemberRequest`\n- Property `FileName` to `Audio`, `Video`\n- Property `DisableContentTypeDetection` to `MakeRequestAsync`, `InputMediaDocument`\n- Properties `GooglePlaceId`, `GooglePlaceType` to `SendVenueRequest`, `Venue`, `InlineQueryResultVenue`, `InputVenueMessageContent`\n- New enum values `Football`, `SlotMachine` for `Emoji`\n- Type `ChatLocation`\n- Type `ProximityAlertTriggered`\n- Support for sending and receiving audio and document albums in the method `SendMediaGroupAsync`\n\n### Changed\n\n- Constructor in `TelegramBotClient` accepts base url for custom Bot API server as optional third parameter, it accepts only URL's with protocol, host and port parts, everything else is ignored\n- Marked constructor for `TelegramBotClient` accepting `IWebProxy` as obsolete\n- Property `ITelegramBotClient.BotId` to `long?`\n- Event `MakingApiRequest` renamed to `OnMakingApiRequest` and it's type is changed to `AsyncEventHandler<ApiRequestEventArgs>`\n- Event `ApiResponseReceived` renamed to `OnApiResponseReceived` and it's type is changed to `AsyncEventHandler<ApiResponseEventArgs>`\n- Parameters order in following methods (to reflect [official docs](https://core.telegram.org/bots/api#available-methods)):\n  - `SetWebhookAsync`, `DeleteWebhookAsync`, `SendTextMessageAsync`, `SendPhotoAsync`, `SendAudioAsync`, `SendDocumentAsync`, `SendStickerAsync`, `SendVideoAsync`, `SendAnimationAsync`, `SendVoiceAsync`, `SendVideoNoteAsync`, `SendMediaGroupAsync`, `SendLocationAsync`, `SendVenueAsync`, `SendContactAsync`, `SendPollAsync`, `SendDiceAsync`, `KickChatMemberAsync`, `UnbanChatMemberAsync`, `PromoteChatMemberAsync`, `EditMessageTextAsync`, `EditMessageCaptionAsync`, `EditMessageLiveLocationAsync`, `SendInvoiceAsync`, `SendGameAsync`\n- Polling inside the library is now considered obsolete. The code, related to polling will be removed. It is recommended to use [Telegram.Bot.Extensions.Polling](https://github.com/TelegramBots/Telegram.Bot.Extensions.Polling) package instead.\n  - These methods are now obsolete: `StartReceiving`, `StopReceiving`\n  - These events are now obsolete: `OnUpdate`, `OnMessage`, `OnMessageEdited`, `OnInlineQuery`, `OnInlineResultChosen`, `OnCallbackQuery`, `OnReceiveError`, `OnReceiveGeneralError`\n  - These fields are now obsolete: `IsReceiving`, `MessageOffset`\n- Error `429 Too Many Request` is now handled by the client and is thrown as `ApiRequestException`\n\n>⚠️ WARNING! ⚠️\n>\n>After one of the upcoming Bot API updates, _some_ user identifiers will become bigger than 2^31 - 1 and it will be no longer possible to store them in a signed 32-bit integer type. User identifiers will have up to 52 significant bits, so a 64-bit integer or double-precision float type would still be safe for storing them. Please make sure that your code can correctly handle such user identifiers.\n\n### Fixed\n\n- Incorrect property name `ExplanationCaptionEntities` -> `ExplanationEntities` in `SendPollRequest`\n\n### Removed\n\n- Obsolete overload method `ITelegramBotClient.DownloadFileAsync`\n- Obsolete overload method `ITelegramBotClient.SendMediaGroupAsync`\n- Obsolete constructor for `SendMediaGroupRequest`\n- Obsolete constructor for `InputMediaPhoto`\n- Obsolete constructor for `InputMediaVideo`\n- Obsolete property `AllMembersAreAdministrators` from `Chat`\n- Obsolete property `IsForwarded` from `Message`\n- Obsolete value `Animation` from enum `MessageType`\n\n## [15.7.1] - 2020-06-18\n\n### Added\n\n- Source Link support\n- Fully deterministic build\n\n## [15.7.0] - 2020-06-13\n\n### Added\n\n- Enum member `Emoji.Basketball`\n- Property `InlineQueryResultGif.ThumbMimeType`\n- Property `InlineQueryResultMpeg4Gif.ThumbMimeType`\n- Property `Message.ViaBot`\n\n## [15.6.0] - 2020-05-30\n\n### Added\n\n- Enum `Emoji`\n- Property `Poll.Explanation`\n- Property `Poll.ExplanationEntities`\n- Property `Poll.OpenPeriod`\n- Property `Poll.CloseDate`\n- Property `Dice.Emoji`\n- Following optional properties to `SendPollRequest`:\n  - `Explanation`\n  - `ExplanationParseMode`\n  - `OpenPeriod`\n  - `CloseDate`\n- Optional property `Emoji` to `SendDiceRequest`\n\n### Changed\n\n- Following optional parameters to `ITelegramBotClient.SendPollAsync`:\n  - `explanation`\n  - `explanationParseMode`\n  - `openPeriod`\n  - `closeDate`\n- Optional parameter `emoji` to `ITelegramBotClient.SendDiceAsync`\n\n## [15.5.1] - 2020-04-02\n\n### Fixed\n\n- Implementation of `ITelegramBotClient.CreateNewAnimatedStickerSetAsync`\n\n## [15.5.0] - 2020-04-02\n\n### Added\n\n- Requests\n  - `GetMyCommandsRequest`\n  - `SetMyCommandsRequest`\n  - `CreateNewAnimatedStickerSetRequest`\n  - `AddNewAnimatedStickerToSetRequest`\n  - `SendDiceRequest`\n  - `SetStickerSetThumbRequest`\n- Methods:\n  - `ITelegramBotClient.SendDiceAsync`\n  - `ITelegramBotClient.CreateNewAnimatedStickerSetAsync`\n  - `ITelegramBotClient.AddNewAnimatedStickerToSetAsync`\n  - `ITelegramBotClient.SetStickerSetThumbAsync`\n  - `ITelegramBotClient.GetMyCommandsAsync`\n  - `ITelegramBotClient.SetMyCommandsAsync`\n- Type `Dice`\n- Type `BotCommand`\n- Enum member `MessageType.Dice`\n- Property `Message.Dice`\n- Property `StickerSet.Thumb`\n\n## [15.4.0] - 2020-02-22\n\n### Added\n\n- Property `SendInvoiceRequest.SendPhoneNumberToProvider`\n- Property `SendInvoiceRequest.SendEmailToProvider`\n- Optional parameter `sendPhoneNumberToProvider` to method `ITelegramBotClient.SendInvoiceAsync`\n- Optional parameter `sendEmailToProvider` to method `ITelegramBotClient.SendInvoiceAsync`\n\n## [15.3.0] - 2020-01-31\n\n### Added\n\n- Type `KeyboardButtonPollType`\n- Static method `KeyboardButton.WithRequestPoll`\n- Type `PollAnswer`\n- Property `KeyboardButton.RequestPoll`\n- Enum `PollType`\n- Property `MessageEntity.Language`\n- Following properties to type `Poll`:\n  - `bool? IsAnonymous`\n  - `string Type`\n  - `bool? AllowsMultipleAnswers`\n  - `int? CorrectOptionId`\n- Following properties to type `SendPollRequest`:\n  - `bool? IsAnonymous`\n  - `string Type`\n  - `bool? AllowsMultipleAnswers`\n  - `int? CorrectOptionId`\n  - `bool? IsClosed`\n- Property `Update.PollAnswer`\n- Enum member `UpdateType.PollAnswer`\n- Following properties to type `User`:\n  - `bool? CanJoinGroups`\n  - `bool? CanReadAllGroupMessages`\n  - `bool? SupportsInlineQueries`\n\n### Changed\n\n- Method `ITelegramBotClient.SendPollAsync`, added following optional parameters:\n  - `bool? isAnonymous`\n  - `string type`\n  - `bool? allowsMultipleAnswers`\n  - `int? correctOptionId`\n  - `bool? isClosed`\n- Method `User.Equals` takes into account new properties\n\n## [15.2.1] - 2020-01-23\n\n### Changed\n\n- All base request classes use explicit opt-in serialization strategy\n- All non Bot API properties in base request classes are annotated by `JsonIgnoreAttribute`\n- Type `ContactRequestException` is made obsolete due to Telegram changed it's error message\n\n### Fixed\n\n- A bug that prevented requests to be serialized when default `JsonSerializerSettings` were set\n\n## [15.2.0] - 2020-01-03\n\n### Added\n\n- Type `SetChatAdministratorCustomTitleRequest`\n- Method `ITelegramBotClient.SetChatAdministratorCustomTitleAsync`\n- Property `FileBase.FileUniqueId`\n- Property `Animation.FileUniqueId`\n- Property `ChatPhoto.BigFileUniqueId`\n- Property `ChatPhoto.SmallFileUniqueId`\n- Property `Chat.SlowModeDelay`\n- Property `ChatMember.CustomTitle`\n- Enum value `ParseMode.MarkdownV2`\n- Enum value `MessageEntityType.Underline`\n- Enum value `MessageEntityType.Strikethrough`\n\n## [15.1.0] - 2019-11-29\n\n### Added\n\n- Property `RequestBase.IsWebhookResponse`\n- The client outputs `method` property in the resulting HTTP body with the value from `IRequest<T>.MethodName` when `RequestBase.IsWebhookResponse` is set to true\n- Constructor with `Uri` param for `InputOnlineFile` (overloaded)\n\n## [15.0.0] - 2019-08-07\n\n### Added\n\n- Type `ChatPermissions`\n- Type `SetChatPermissionsRequest`\n- Property `Sticker.IsAnimated`\n- Property `StickerSet.IsAnimated`\n- Property `Chat.Permissions`\n- Property `ChatMember.CanSendPolls`\n\n### Changed\n\n- Individual permission properties in `RestrictChatMemberRequest` changed to `Permissions` property of type `ChatPermissions`\n- Individual permission parameters in `ITelegramBotClient.RestrictChatMemberAsync` changed to a single parameter of type `ChatPermissions`\n- Marked `Chat.AllMembersAreAdministrators` as obsolete\n\n### Fixed\n\n- XML doc comments about caption maximum length\n\n## [14.12.0] - 2019-06-10\n\n### Added\n\n- Type `LoginUrl`\n- Property `Message.ReplyMarkup`\n- Property `InlineKeyboardButton.LoginUrl`\n- Method `InlineKeyboardButton.WithLoginUrl`\n\n## [14.11.0] - 2019-04-23\n\n### Added\n\n- Type `Poll`\n- Type `PollOption`\n- Type `SendPollRequest`\n- Type `StopPollRequest`\n- Method `SendPollAsync`\n- Method `StopPollAsync`\n- Property `Update.Poll`\n- Property `Message.Poll`\n- Property `Message.ForwardSenderName`\n- Property `ChatMember.IsMember`\n- Enum value `UpdateType.Poll`\n- Enum value `MessageType.Poll`\n\n### Changed\n\n- Marked `InvalidQueryIdException` as obsolete\n\n## [14.10.0] - 2018-09-04\n\n### Added\n\n- Telegram Passport support\n- Type `EncryptedCredentials`\n- Type `EncryptedPassportElement`\n- Type `PassportData`\n- Type `PassportFile`\n- Property `ITelegramBotClient.BotId`\n- Property `Message.PassportData`\n\n### Changed\n\n- Marked `DownloadFileAsync(string,CancellationToken)` obsolete\n\n## [14.9.0] - 2018-08-06\n\n### Added\n\n- Method `SendAnimationAsync`\n- Parameter `thumb` to method `SendAudioAsync`\n- Parameter `thumb` to method `SendDocumentAsync`\n- Parameter `thumb` to method `SendVideoAsync`\n- Parameter `thumb` to method `SendVideoNoteAsync`\n- Type `IChatMessage`\n- Type `IThumbMediaMessage`\n- Type `SendAnimationRequest`\n- Property `SendAudioRequest.Thumb`\n- Property `SendDocumentRequest.Thumb`\n- Property `SendVideoRequest.Thumb`\n- Property `SendVideoNoteRequest.Thumb`\n- Property `Audio.Thumb`\n\n## [14.8.0] - 2018-07-29\n\n### Added\n\n- Parameter `vCard` to method `SendContactAsync`\n- Parameter `foursquareType` to method `SendVenueAsync`\n- Property `SendContactRequest.Vcard`\n- Property `SendVenueRequest.FoursquareType`\n- Property `InlineQueryResultContact.Vcard`\n- Property `InlineQueryResultVenue.FoursquareType`\n- Property `InputContactMessageContent.Vcard`\n- Property `InputVenueMessageContent.FoursquareType`\n- Property `Contact.Vcard`\n- Property `Venue.FoursquareType`\n- Enum value `MessageEntityType.Cashtag`\n\n### Changed\n\n- Marked `MessageType.Animation` as obsolete\n\n## [14.7.0] - 2018-07-29\n\n### Added\n\n- Partial support for Bot API v4.0\n- Method `SendMediaGroupAsync` (overloaded)\n- Method `EditMessageMediaAsync`\n- Method `EditMessageMediaAsync`\n- Type `EditMessageMediaRequest`\n- Type `EditInlineMessageMediaRequest`\n- Type `InputMediaAudio`\n- Type `InputMediaDocument`\n- Type `InputMediaAnimation`\n- Type `IInputMedia`\n- Type `IAlbumInputMedia`\n- Type `IInputMediaThumb`\n- Property `Animation.Width`\n- Property `Animation.Height`\n- Property `Animation.Duration`\n- Enum member `MessageType.Animation`\n- Property `InputMediaVideo.Thumb`\n- Property `Message.Animation`\n- Constructor with required parameters for `InputMediaPhoto` (overloaded)\n- Constructor with required parameters for `InputMediaVideo` (overloaded)\n- Constructor with required parameters for `SendMediaGroupRequest` (overloaded)\n\n### Fixed\n\n- Serialization error of `InlineQueryResultDocument.Description` being required\n- Incorrect serialization of `InputMediaVideo`\n\n### Changed\n\n- Marked method `SendMediaGroupAsync` as obsolete. An overload is provided.\n- Marked parameterless constructor of `InputMediaPhoto` as obsolete. An overload is provided.\n- Marked parameterless constructor of `InputMediaVideo` as obsolete. An overload is provided.\n\n## [14.6.0] - 2018-06-12\n\n### Added\n\n- Property `ParseMode` to requests with a caption\n  - `EditMessageCaptionRequest`\n  - `EditInlineMessageCaptionRequest`\n- Parameter `parseMode` to method `ITelegramBotClient.EditMessageCaptionAsync`\n\n## [14.5.0] - 2018-06-06\n\n### Added\n\n- New enum member `MessageEntityType.PhoneNumber`\n- New enum member `MessageEntityType.Unknown`\n\n### Fixed\n\n- Exception during deserialization of unknown message entity type\n\n## [14.4.0] - 2018-05-17\n\n### Changed\n\n- `MakeRequestAsync` throws `ApiRequestException` with `ErrorCode = HttpStatusCode.Unauthorized` and `Message = apiResponse.Description` (\"Unauthorized\"), to be consistent with Telegram Bot API\n- `TelegramBotClient` ctor does not check API token format: Telegram Bot API does not provide token format specification\n- `TestApiAsync` return `false` when `ApiRequestException.ErrorCode == 401` (API Token is modified or recalled)\n- Stop catching user exceptions from event handlers\n- Make `Message.IsForward` property obsolete\n\n### Fixed\n\n- `EditMessageTextAsync` pass `ParseMode` to request\n\n## [14.3.0] - 2018-05-05\n\n### Added\n\n- Implicit cast of `IEnumerable<InlineKeyboardButton>[]` to `InlineKeyboardMarkup`\n- Implicit cast of `InlineKeyboardButton[]` to `InlineKeyboardMarkup`\n- Exception `InvalidGameShortNameException`\n- Exception `InvalidQueryIdException`\n\n### Changed\n\n- Made `callbackGame` parameter of `InlineKeyboardButton.WithCallBackGame` optional\n- `Newtonsoft.Json` updated to version `11.0.2`\n\n### Fixed\n\n- Assigning param `foursquareId` of `SendInvoiceAsync` method to its request\n- Access modifier of abstract class `BadRequestException` and `ForbiddenException` ctors to `protected`\n\n### Removed\n\n- Parameterless ctor of `InlineKeyboardMarkup`\n- Exception `BotBlockedException`\n- Exception `BotRestrictedException`\n- Exception `MissingParameterException`\n- Exception `NotEnoughRightsException`\n- Exception `WrongChatTypeException`\n\n## [14.2.0-rc-452] - 2018-02-24\n\n### Added\n\n- Property `Message.MediaGroupId`\n- Property `ICaptionInlineQueryResult.ParseMode`\n- Property `ParseMode` to inline query results with a caption\n  - `InlineQueryResultPhoto`\n  - `InlineQueryResultGif`\n  - `InlineQueryResultCachedMpeg4Gif`\n  - `InlineQueryResultVideo`\n  - `InlineQueryResultAudio`\n  - `InlineQueryResultVoice`\n  - `InlineQueryResultDocument`\n  - `InlineQueryResultCachedPhoto`\n  - `InlineQueryResultCachedGif`\n  - `InlineQueryResultCachedMpeg4Gif`\n  - `InlineQueryResultCachedDocument`\n  - `InlineQueryResultVideo`\n  - `InlineQueryResultCachedVoice`\n  - `InlineQueryResultCachedAudio`\n\n## [14.1.0-rc-424] - 2018-02-24\n\n### Added\n\n- Support for Bot API v3.6\n- Override equality comparison for `User` type\n- Property `ParseMode` to file requests with a caption\n  - `SendVideoRequest`\n  - `SendPhotoRequest`\n  - `SendAudioRequest`\n  - `SendDocumentRequest`\n  - `SendVoiceRequest`\n- Property `InputMediaBase.ParseMode`\n- Property `SendVideoRequest.SupportsStreaming`\n- Property `InputMediaVideo.SupportsStreaming`\n- Property `Message.ConnectedWebsite`\n- Parameter `parseMode` to methods\n  - `ITelegramBotClient.SendVideoAsync`\n  - `ITelegramBotClient.SendAudioAsync`\n  - `ITelegramBotClient.SendPhotoAsync`\n  - `ITelegramBotClient.SendDocumentAsync`\n  - `ITelegramBotClient.SendVoiceAsync`\n- Parameter `supportsStreaming` to method `ITelegramBotClient.SendVideoAsync`\n- New members to enum `MessageType`\n  - `WebsiteConnected`\n  - `ChatMembersAdded`\n  - `ChatMemberLeft`\n  - `ChatTitleChanged`\n  - `ChatPhotoChanged`\n  - `MessagePinned`\n  - `ChatPhotoDeleted`\n  - `GroupCreated`\n  - `SupergroupCreated`\n  - `ChannelCreated`\n  - `MigratedToSupergroup`\n  - `MigratedFromGroup`\n- Exception `MessageIsNotModifiedException`\n\n### Changed\n\n- Changed `InputMessageContent` to abstract class `InputMessageContentBase`\n- Access modifier of parameterless ctors of all `InlineQueryResult` and `InputMessageContent` types to `private`\n\n### Fixed\n\n- Renamed `InputVenueMessageContent.Name` to `InputVenueMessageContent.Title`\n- Property `Message.Type` returns correct value after group chat migration\n\n### Removed\n\n- Enum member `MessageType.Service`\n\n## [14.0.0-rc-367] - 2018-01-04\n\n### Added\n\n- Type `InvalidParameterException`\n- Type `FileBase`\n\n### Changed\n\n- Moved all types in namespace `Telegram.Bot.Types.InputMessageContents` to namespace `Telegram.Bot.Types.InlineQueryResults`\n- Value names of enums `MessageType` and `UpdateType`\n\n### Removed\n\n- Property `File.Stream`\n- Property `FilePath` from Types `Audio`, `Document`, `PhotoSize`, `Sticker`, `Video`, `VideoNote`, and `Voice`\n- Property `Message.NewChatMember`\n\n## [14.0.0-beta-342] - 2018-01-03\n\n### Added\n\n- More `PaymentTests` cases\n- Type `IKeyboardButton`\n- Implicit cast of `string[]` to `ReplyKeyboardMarkup`\n- Implicit cast of `string[][]` to `ReplyKeyboardMarkup`\n- Inline query results\n  - Type `ICaptionInlineQueryResult`\n  - Type `IInputMessageContentResult`\n  - Type `ILocationInlineQueryResult`\n  - Type `IThumbnailInlineQueryResult`\n  - Type `IThumbnailUrlInlineQueryResult`\n  - Type `ITitleInlineQueryResult`\n  - Constructor with required parameters in `InlineQueryResult` and all derived classes\n  - Property `InlineQueryResultVoice.Caption`\n\n### Changed\n\n- All keyboard button classes inherit `IKeyboardButton` interface\n- All keyboard buttons moved to namespace `Telegram.Bot.Types.ReplyMarkups.Buttons`\n- Renamed type `ReplyMarkup` to `ReplyMarkupBase`\n- Renamed type `ForceReply` to `ForceReplyMarkup`\n- `InlineQueryResult` to abstract\n\n### Removed\n\n- All specific `KeyboardButton` types\n- All specific `InlineKeyboardButton` types\n- Implicit cast of `InlineKeyboardButton` to `KeyboardButton`\n- Type `InlineQueryResultNew`\n- Type `InlineQueryResultCached`\n- Property `InlineQueryResult.Title`\n- Property `InlineQueryResult.InputMessageContent`\n- Property `InlineQueryResultAudio.FileId`\n- JSON serialization attribute `Required.Always` of property `InlineQueryResultAudio.Duration`\n\n### Fixed\n\n- Invalid default value for `SwitchInlineQueryCurrentChat` in `InlineKeyboardSwitchInlineQueryCurrentChatButton` constructor\n\n## [14.0.0-alpha0] - 2017-12-31\n\n### Added\n\n- Request classes\n  - Type `GetUpdatesRequest`\n  - Type `SetWebhookRequest`\n  - Type `DeleteWebhookRequest`\n  - Type `GetWebhookInfoRequest`\n  - Type `GetMeRequest`\n  - Type `SendMessageRequest`\n  - Type `ForwardMessageRequest`\n  - Type `SendPhotoRequest`\n  - Type `SendAudioRequest`\n  - Type `SendDocumentRequest`\n  - Type `SendVideoRequest`\n  - Type `SendVoiceRequest`\n  - Type `SendVideoNoteRequest`\n  - Type `SendLocationRequest`\n  - Type `EditMessageLiveLocationRequest`\n  - Type `EditInlineMessageLiveLocationRequest`\n  - Type `StopMessageLiveLocationRequest`\n  - Type `StopInlineMessageLiveLocationRequest`\n  - Type `SendVenueRequest`\n  - Type `SendContactRequest`\n  - Type `SendChatActionRequest`\n  - Type `GetUserProfilePicturesRequest`\n  - Type `KickChatMemberRequest`\n  - Type `UnbanChatMemberRequest`\n  - Type `RestrictChatMemberRequest`\n  - Type `PromoteChatMemberRequest`\n  - Type `ExportChatInviteLinkRequest`\n  - Type `SetChatPhotoRequest`\n  - Type `DeleteChatPhotoRequest`\n  - Type `SetChatTitleRequest`\n  - Type `SetChatDescriptionRequest`\n  - Type `PinChatMessageRequest`\n  - Type `UnpinChatMessageRequest`\n  - Type `LeaveChatRequest`\n  - Type `GetChatRequest`\n  - Type `GetChatAdministratorsRequest`\n  - Type `GetChatMembersCountRequest`\n  - Type `GetChatMemberRequest`\n  - Type `SetChatStickerSetRequest`\n  - Type `DeleteChatStickerSetRequest`\n  - Type `AnswerCallbackQueryRequest`\n  - Type `EditMessageTextRequest`\n  - Type `EditInlineMessageTextRequest`\n  - Type `EditMessageCaptionRequest`\n  - Type `EditInlineMessageCaptionRequest`\n  - Type `EditMessageReplyMarkupRequest`\n  - Type `EditInlineMessageReplyMarkupRequest`\n  - Type `DeleteMessageRequest`\n  - Type `SendStickerRequest`\n  - Type `GetStickerSetRequest`\n  - Type `SetStickerPositionInSetRequest`\n  - Type `AnswerInlineQueryRequest`\n  - Type `DeleteStickerFromSetRequest`\n  - Type `AddStickerToSetRequest`\n  - Type `CreateNewStickerSetRequest`\n  - Type `SendInvoiceRequest`\n  - Type `AnswerShippingQueryRequest`\n  - Type `AnswerPreCheckoutQueryRequest`\n  - Type `SendGameRequest`\n  - Type `SetGameScoreRequest`\n  - Type `SetInlineGameScoreRequest`\n  - Type `GetGameHighScoresRequest`\n  - Type `GetInlineGameHighScoresRequest`\n  - Type `GetFileRequest`\n  - Type `FileRequestBase`\n  - Type `UploadStickerFileRequest`\n  - Type `INotifiableMessage`\n  - Type `IReplyMessage`\n  - Type `IFormattableMessage`\n  - Type `IInlineMessage`\n  - Type `IReplyMarkupMessage`\n  - Type `IInlineReplyMarkupMessage`\n- Type `IInputFile`\n- Type `InputFileStream`\n- Type `InputTelegramFile`\n- Type `InputOnlineFile`\n- Type `InputFileConverter`\n\n### Changed\n\n- Type of parameter `allowedUpdates` in method `SetWebhookAsync` changed to `IEnumerable<UpdateType>`\n- Type of parameter `allowedUpdates` in method `GetUpdatesAsync` changed to `IEnumerable<UpdateType>`\n- Type of parameter `offset` in method `GetUserProfilePhotosAsync` changed to `int`\n- Type of parameter `replyMarkup` in methods `EditMessageLiveLocationAsync` changed to `InlineKeyboardMarkup`\n- Type of parameter `replyMarkup` in methods `StopMessageLiveLocationAsync` changed to `InlineKeyboardMarkup`\n- Type of parameter `replyMarkup` in method `EditMessageTextAsync` changed to `InlineKeyboardMarkup`\n- Type of parameter `replyMarkup` in method `EditMessageCaptionAsync` changed to `InlineKeyboardMarkup`\n- Type of parameter `replyMarkup` in method `EditMessageReplyMarkupAsync` changed to `InlineKeyboardMarkup`\n- Type of parameter `replyMarkup` in method `SendGameAsync` changed to `InlineKeyboardMarkup`\n- Type of parameter `replyMarkup` in method `SendInvoiceAsync` changed to `InlineKeyboardMarkup`\n- Type of parameter `prices` in method `SendInvoiceAsync` changed to `IEnumerable<LabeledPrice>`\n- Type of parameter `shippingOptions` in method `AnswerShippingQueryAsync` changed to `IEnumerable<ShippingOption>`\n- Type of parameter `chatId` in method `SendInvoiceAsync` changed to `int`\n- Type of parameter `chatId` in method `SendGameAsync` changed to `long`\n- Type of parameter `chatId` in methods `SetGameScoreAsync` changed to `long`\n- Type of parameter `chatId` in methods `GetGameHighScoresAsync` changed to `long`\n- Type parameter of type `SendMediaGroupRequest` changed to `Message[]`\n- Return type of method `GetChatIdFromTesterAsync` in `TestFixture` changed to `Task<long>`\n- Type of property `TesterPrivateChatId` on type `PaymentTestsFixture` changed to `long`\n- Replace method `EditInlineMessageTextAsync` with overload for `EditMessageTextAsync`\n- Replace method `EditInlineMessageCaptionAsync` with overload for `EditMessageCaptionAsync`\n- Replace method `EditInlineMessageReplyMarkupAsync` with overload for `EditMessageReplyMarkupAsync`\n- Reorder parameters of method `SendInvoiceAsync`\n- Divide `AnswerShippingQueryAsync` method into two overloads\n- Divide `AnswerPreCheckoutQueryAsync` method into two overloads\n- Method `CreateNewStickerSetAsync` renamed to `CreateNewStickerSetAsync`\n- Method return type changed from `Task<bool>` to `Task`:\n  - Method `DeleteWebhookAsync`\n  - Method `KickChatMemberAsync`\n  - Method `LeaveChatAsync`\n  - Method `UnbanChatMemberAsync`\n  - Method `AnswerCallbackQueryAsync`\n  - Method `RestrictChatMemberAsync`\n  - Method `PromoteChatMemberAsync`\n  - Method `StopMessageLiveLocationAsync`\n  - Method `EditMessageTextAsync`\n  - Method `EditMessageCaptionAsync`\n  - Method `EditMessageReplyMarkupAsync`\n  - Method `EditMessageLiveLocationAsync`\n  - Method `DeleteMessageAsync`\n  - Method `AnswerInlineQueryAsync`\n  - Method `AnswerShippingQueryAsync`\n  - Method `AnswerPreCheckoutQueryAsync`\n  - Method `SetGameScoreAsync`\n  - Method `CreateNewStickerSetAsync`\n  - Method `AddStickerToSetAsync`\n  - Method `SetStickerPositionInSetAsync`\n  - Method `DeleteStickerFromSetAsync`\n  - Method `SetChatPhotoAsync`\n  - Method `DeleteChatPhotoAsync`\n  - Method `SetChatTitleAsync`\n  - Method `SetChatDescriptionAsync`\n  - Method `PinChatMessageAsync`\n  - Method `UnpinChatMessageAsync`\n  - Method `SetChatStickerSetAsync`\n  - Method `DeleteChatStickerSetAsync`\n- Type of `StickerSet.Stickers` from `List<Sticker>` to `Sticker[]`\n- Type of `ChatMember` properties to nullable e.g. `bool` to `bool?`\n- Type of `Message.Entities` from `List<MessageEntity>` to `MessageEntity[]`\n- Type of `Message.CaptionEntities` from `List<MessageEntity>` to `MessageEntity[]`\n- Type of `Message.EntityValues` from `List<string>` to `IEnumerable<string>`\n- Type `InputMediaType` to `InputMedia`\n- Type `InputMediaTypeConverter` to `InputMediaConverter`\n- Changed member type from `FileToSend` to an implementation of `IInputFile`\n  - Parameter `certificate` of method `SetWebhookAsync`\n  - Parameter `photo` of method `SendPhotoAsync`\n  - Parameter `video` of method `SendVideoAsync`\n  - Parameter `videoNote` of method `SendVideoNoteAsync`\n  - Parameter `document` of method `SendDocumentAsync`\n  - Parameter `sticker` of method `SendStickerAsync`\n  - Parameter `pngSticker` of method `UploadStickerFileAsync`\n  - Parameter `pngSticker` of method `CreateNewStickerSetAsync`\n  - Parameter `pngSticker` of method `AddStickerToSetAsync`\n  - Parameter `photo` of method `SetChatPhotoAsync`\n  - Parameter `audio` of method `SendAudioAsync`\n\n### Removed\n\n- Type `FileToSend`\n- Interface `IResponse`\n- Type parameter constraint from interface `IRequest`\n- Redundant parameter `editMessage` in methods `SetGameScoreAsync`\n- Redundant custom converter `ParseModeConverter`\n- Value `All` from `UpdateType` enum\n- Value `Unknown` from `FileType` enum\n- Default value of parameter `url` of method `SetWebhookAsync`\n- Property `Width` of `VideoNote`\n- Property `Height` of `VideoNote`\n- Property `Zoom` of `MaskPosition`\n\n### Fixed\n\n- Method `SetWebhookAsync` interface `ITelegramBotClient` returns `bool` on success\n- Passing wrong `chatId` value in method `GetGameHighScoresAsync`\n- Passing wrong `chatId` value in method `SendGameAsync`\n- Passing wrong `chatId` value in method `SendInvoiceAsync`\n- Passing wrong `replyMarkup` value in method `SendGameAsync`\n- Passing wrong `replyMarkup` value in method `SendInvoiceAsync`\n- Passing wrong `replyMarkup` value in method `EditMessageLiveLocationAsync`\n- Passing wrong `replyMarkup` value in method `EditMessageReplyMarkupAsync`\n- Passing wrong `replyMarkup` value in method `EditMessageCaptionAsync`\n- Passing wrong `replyMarkup` value in method `EditMessageTextAsync`\n- Passing wrong `replyMarkup` value in method `StopMessageLiveLocationAsync`\n- Passing wrong `pngSticker` value in method `UploadStickerFileAsync`\n- Passing wrong `photo` value in method `SetChatPhotoAsync`\n- Passing wrong `certificate` value in method `SetWebhookAsync`\n- Incorrect spelling of the method `CreateNewStickerSetAsync`\n- `TestApiAsync()` throws exception instead of returning `false`\n\n## [13.4.0] - 2017-12-07\n\n### Added\n\n- `Stickers` test cases\n- `StickerOwnerUserId` parameter to Systems Integration Tests settings\n- Exception `ChatNotFoundException`\n- Exception `ContactRequestException`\n- Exception `InvalidUserIdException`\n- Exception `UserNotFoundException`\n- Exception `InvalidStickerSetNameException`\n- Exception `InvalidStickerEmojisException`\n- Exception `InvalidStickerDimensionsException`\n- Exception `StickerSetNameExistsException`\n- Exception `StickerSetNotModifiedException`\n\n### Changed\n\n- Include XML docs in NuGet package\n\n## [13.4.0-rc2] - 2017-11-26\n\n### Fixed\n\n- Default snake-cased property name serialization\n\n## [13.4.0-rc1] - 2017-11-26\n\n### Added\n\n- Support for Bot API 3.5\n- Method `SendMediaGroupAsync`\n- Types `InputFileBase` and `InputMediaBase`\n- Test Collection `AlbumMessageTests`\n- Test Collection `ChannelAdminBotTests`\n\n## [13.3.0-rc1]\n\n> ToDo\n\n## [13.2.2-rc]\n\n> ToDo\n\n## [13.2.1] - 2017-09-04\n\n### Added\n\n- Systems integrations test project\n\n### Changed\n\n- Sandcastle project moved to `docs` branch\n- TravisCI configurations to run systems integrations tests\n\n### Fixed\n\n- Quoting the string containing channel ids\n- Double escaping the escape character in the caption of messages\n- Serialization errors of `PhotoSize`\n- Sending wrong filenames containing non-ASCII characters\n- Deserialization of `PhotoSize`\n\n## [13.1.0] - 2017-07-23\n\n### Added\n\n- Method `KickChatMemberAsync` parameter `untilDate`\n- Method `RestrictChatMemberAsync`\n- Method `PromoteChatMemberAsync`\n- Method `ExportChatInviteLinkAsync`\n- Method `SetChatPhotoAsync`\n- Method `DeleteChatPhotoAsync`\n- Method `SetChatTitleAsync`\n- Method `SetChatDescriptionAsync`\n- Method `PinChatMessageAsync`\n- Method `UnpinChatMessageAsync`\n- Method `SendVideoNoteAsync` parameter `length`\n- Method `GetStickerSetAsync`\n- Method `UploadStickerFileAsync`\n- Method `CreateNewStickerSetAsync`\n- Method `AddStickerToSetAsync`\n- Method `SetStickerPositionInSetAsync`\n- Method `DeleteStickerFromSetAsync`\n- Type `VideoNote` property `Length`\n- Type `Chat`properties `Photo`, `Description`, `InviteLink`\n- Type `ChatMember` properties `UntilDate`, `Can*`\n- Type `Sticker` properties `SetName` and `MaskPosition`\n- Type `MaskPosition`\n- Type `StickerSet`\n- Type `ChatPhoto`\n- Types `InlineKeyboard*Button`\n- Enum `MaskPositionPoint`\n\n### Changed\n\n- User and Chat Ids reverted to base types\n- DateTimes are now in local time zone\n- Split Keyboard buttons to `InlineKeyboardCallbackButton`, `InlineKeyboardCallbackGameButton`, `InlineKeyboardPayButton`, `InlineKeyboardSwitchCallbackQueryCurrentButton`, `InlineKeyboardSwitchInlineQueryButton` and `InlineKeyboardUrlButton`\n\n### Fixed\n\n- Inline message editing\n- InlineQueryResult* `ThumbHight` and `ThumbWidth`\n- Method `SetWebHookAsync` parameter `max_connections`\n- Method `SetGameStoreAsync`\n- Type `CallbackQuery` Property `Data` optimal\n- Type `Message` can now be a `VideoNoteMessage`\n\n## [12.0.0] - Beta only\n\n### Added\n\n- Method `DeleteMessageAsync`\n- Method `SendVideoNoteAsync`\n- Method `SendInvoiceAsync`\n- Method `AnswerShippingQueryAsync`\n- Method `AnswerPreCheckoutQueryAsync`\n- Type `Invoice`\n- Type `LabeledPrice`\n- Type `ShippingAddress`\n- Type `ShippingOption`\n- Type `ShippingQuery`\n- Type `SuccessfulPayment`\n- Type `OrderInfo`\n- Type `PreCheckoutQuery`\n- Type `VideoNote`\n- Type `Message` properties `VideoNote`, `Invoice` and `SuccessfulPayment`\n- Type `User` property `LanguageCode`\n- Type `Update` properties `ShippingQuery` and `PreCheckoutQuery`\n- Type `InlineQueryResultGif` property `Duration`\n- Type `InlineQueryResultMpeg4Gif` property `Duration`\n- Type `InlineKeyboardButton` property `Pay`\n- Enum `ChatAction` members `RecordVideoNote` and `UploadVideoNote`\n- Enum `UpdateType` members `ShippingQuery` and `PreCheckoutQuery`\n\n### Changed\n\n- Property `NewChatMember` replaced with `NewChatMembers` on Type `Message`\n\n## [Past]\n\n### Added\n\n- Method `SetWebHookAsync` parameters `maxConnections`, `allowedUpdates`\n- Method `AnswerCallbackQueryAsync` parameter `cacheTime`\n- Method `StartReceiving` parameter `allowedUpdates`\n- Method `DeleteWebhookAsync`\n- Method `GetWebhookInfoAsync`\n- Type `ApiExceptions` property `Parameters`\n- Type `InlineKeyboardButton` property `SwitchInlineQueryCurrentChat`\n- Type `ResponseParameters`\n- Type `WebhookInfo`\n- Type `ChatId`\n- Type `Chat` property `AllMembersAreAdministrators`\n- Type `Message`property `ForwardFromMessageId`\n- Type `Update` property `ChannelPost`, `EditedChannelPost`\n- Event `OnReceiveGeneralError`\n- Enum `UpdateType` member `ChannelPost`, `EditedChannelPost`\n- Enum `FileType`\n- Game Support\n  - Method `SetGameScoreAsync`\n  - Method `SendGameAsync`\n  - Method `GetGameHighScoresAsync`\n  - Method `AnswerCallbackQueryAsync` parameter `url`\n  - Type `Animation`\n  - Type `CallbackGame`\n  - Type `CallbackQuery` properties `ChatInstance`, `GameShortName`\n  - Type `GameHighScore`\n  - Type `InlineKeyboardButton` property `CallbackGame`\n  - Type `InlineQueryResults`\n  - Type `Message` property `Game`\n  - Enum `InlineQueryResultType` member `Game`\n  - Enum `MessageType` member `Game`\n\n### Changed\n\n- Now the `HttpClient` will be reused\n- Consolidated timeouts\n- To use a proxy, use the constructor\n- Unified the `chatId` parameters\n- Replaced `ReplyKeyboardHide` with `ReplyKeyboardRemove`\n- Replaced all file sending overloads with `FileToSend`\n\n### Removed\n\n- Removed deprecated API class\n- Removed deprecated methods and events\n- Removed `StartReceiving` overload with `timeout` parameter\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.3037109375,
          "content": "# Contribution Guidelines\n\nAny change to the code needs to be proven by passing the Unit or Systems Integration tests. Developers should add accompanying tests (of type either Unit or Systems Integration) to the set of changes in a PR. If a PR lacks the required tests, it should wait till all the tests are written before being merged into `develop` branch.\n\nAppVeyor CI builds PRs and runs Unit tests. This step must be passed for PR before its merge.\n\nSystems Integration tests(on Travi-CI) do not run on PRs and most likely a PR will be retargetted at another branch so maintainers can test the code before merging it into `develop` branch.\n\n## PR Checklist\n\nBefore creating a pull request, make sure that your PR\n\n- Has the HEAD commit from `develop` branch\n- Has a clear message saying why this PR\n- References/Explains any related issues\n\n## Code Style\n\n### Bot API Requests\n\nAll requests to Telegram Bot API are represented by classes derived from `RequestBase<TResult>`.\n\nIf a request class (and its accompanying method on `ITelegramBotClient`) accepts a collection, the type must be `IEnumerable<T>`. Also, return types of JSON array responses will be `TResult[]`.\n\n## Related Documents\n\n- [Systems Integration Tests - How To](https://github.com/TelegramBots/Telegram.Bot/blob/master/test/Telegram.Bot.Tests.Integ/README.md)\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.1005859375,
          "content": "﻿<Project>\n  <PropertyGroup>\n    <PreferredUILang>en</PreferredUILang>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0595703125,
          "content": "MIT License\n\nCopyright (c) 2022 Robin Müller, Telegram Bots\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.525390625,
          "content": "# .NET Client for Telegram Bot API\n\n[![Nuget](https://img.shields.io/nuget/vpre/Telegram.Bot.svg?label=Telegram.Bot&style=flat-square&color=d8b541)](https://www.nuget.org/packages/Telegram.Bot)\n[![Bot API 8.2](https://img.shields.io/badge/Bot_API-8.2-f36caf.svg?style=flat-square)](https://core.telegram.org/bots/api)\n[![Documentations](https://img.shields.io/badge/Documentations-Book-orange.svg?style=flat-square)](https://telegrambots.github.io/book/)\n[![Telegram Chat](https://img.shields.io/badge/Support_Chat-Telegram-blue.svg?style=flat-square)](https://t.me/joinchat/B35YY0QbLfd034CFnvCtCA)  \n[![Master build](https://img.shields.io/azure-devops/build/tgbots/14f9ab3f-313a-4339-8534-e8b96c7763cc/6?style=flat-square&label=master)](https://dev.azure.com/tgbots/Telegram.Bot/_build/latest?definitionId=6&branchName=master)\n[![Develop build](https://img.shields.io/azure-devops/build/tgbots/14f9ab3f-313a-4339-8534-e8b96c7763cc/10/develop?style=flat-square&label=develop)](https://dev.azure.com/tgbots/Telegram.Bot/_build/latest?definitionId=10&branchName=develop)\n[![Downloads](https://img.shields.io/nuget/dt/Telegram.Bot.svg?style=flat-square&label=Package%20Downloads)](https://www.nuget.org/packages/Telegram.Bot)\n[![Contributors](https://img.shields.io/github/contributors/TelegramBots/Telegram.Bot.svg?style=flat-square&label=Contributors)](https://github.com/TelegramBots/Telegram.Bot/graphs/contributors)\n[![License](https://img.shields.io/github/license/TelegramBots/telegram.bot.svg?style=flat-square&maxAge=2592000&label=License)](https://raw.githubusercontent.com/TelegramBots/telegram.bot/master/LICENSE)\n\n**Telegram.Bot** is the most popular .NET Client for [Telegram Bot API].\n\nThe Bot API is an HTTP-based interface created for developers keen on building bots for [Telegram].\n\nCheck 👉 [_Bots: An introduction for developers_] 👈 to understand what a Telegram bot is and what it can do.\n\nWe, the [Telegram Bots team], mainly focus on developing multiple [NuGet packages] for creating chatbots.\n\n> ➡️ If Bot API is too limited for your use cases you can try Telegram Client API implementation written 100% in C#\n> <https://github.com/wiz0u/WTelegramClient>\n\n|Packages|Documentation|News Channel|Team|Group Chat|\n|:-----:|:-----------:|:----------:|:--:|:--------:|\n| [![Packages](docs/logo-nuget.png)](https://www.nuget.org/packages/Telegram.Bot) | [![documentations](docs/logo-docs.png)](https://telegrambots.github.io/book/) | [![News Channel](docs/logo-channel.jpg)](https://t.me/s/tgbots_dotnet) | [![Team](docs/logo-gh.png)](https://github.com/orgs/TelegramBots/people) | [![Group Chat](docs/logo-chat.jpg)](https://t.me/joinchat/B35YY0QbLfd034CFnvCtCA) |\n| nuget.org package feed | Telegram bots book | Subscribe to 📣 [`@tgbots_dotnet`] channel to get our latest news | The team contributing to this work | [Join our chat] 💬 to talk about bots and ask questions |\n\n## 🔨 Getting Started\n\nPlease check ➡️ [the Quickstart guide].\n\n## 🚧 Supported Platforms\n\nProject targets **.NET Standard 2.0** and **.NET 6** at minimum, with **.NET 8** or more recent recommended.\n\n## 📦 Extension Packages\n\nThis project is referred to as the core package and is always required for developing Telegram bots.\nThere are extension packages that you can include in your bot projects for additional functionality:\n\n- [Telegram.Bot.Extensions.LoginWidget]\n- [Telegram.Bot.Extensions.Passport]\n\n## ✅ Correctness & Testing\n\nThis project is fully tested using Unit tests and Systems Integration tests before each release.\nIn fact, our test cases are self-documenting and serve as examples for Bot API methods.\nOnce you learn the basics of Telegram chatbots, you will be able to easily understand the code in examples and\nuse it in your own bot projects.\n\n## 🗂 References\n\n- [Documentation](https://telegrambots.github.io/book/)\n- [Examples](https://github.com/TelegramBots/Telegram.Bot.Examples)\n\n<!-- ---- -->\n\n[Telegram Bot API]: https://core.telegram.org/bots/api\n[Telegram]: https://www.telegram.org/\n[_Bots: An introduction for developers_]: https://core.telegram.org/bots\n[Telegram Bots team]: https://github.com/orgs/TelegramBots/people\n[NuGet packages]: https://www.nuget.org/profiles/TelegramBots\n[`@tgbots_dotnet`]: https://t.me/tgbots_dotnet\n[Join our chat]: https://t.me/joinchat/B35YY0QbLfd034CFnvCtCA\n[the Quickstart guide]: https://telegrambots.github.io/book/1/quickstart.html\n[Telegram.Bot.Extensions.LoginWidget]: https://github.com/TelegramBots/Telegram.Bot.Extensions.LoginWidget\n[Telegram.Bot.Extensions.Passport]: https://github.com/TelegramBots/Telegram.Bot.Extensions.Passport\n"
        },
        {
          "name": "THIRD_PARTY_NOTICES",
          "type": "blob",
          "size": 5.3408203125,
          "content": "Telegram.Bot\n\nTHIRD-PARTY SOFTWARE NOTICES AND INFORMATION\nDo Not Translate or Localize\n\nThis project incorporates components from the projects listed below. The original copyright notices and the licenses under which Telegram.Bot received such components are set forth below.\n\n1. Scriban (https://github.com/scriban/scriban)\n2. Nullable (https://github.com/manuelroemer/Nullable)\n3. JetBrains.Annotations (https://github.com/JetBrains/JetBrains.Annotations)\n4. Meziantou.Analyzer (https://github.com/meziantou/Meziantou.Analyzer)\n\n\nScriban NOTICES AND INFORMATION BEGIN HERE\n==========================================\nCopyright (c) 2016-2020, Alexandre Mutel\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification\n, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nNullable NOTICES AND INFORMATION BEGIN HERE\n===========================================\nMIT License\n\nCopyright (c) Manuel Römer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nJetBrains.Annotations NOTICES AND INFORMATION BEGIN HERE\n========================================================\nMIT License\n\nCopyright (c) 2016 JetBrains http://www.jetbrains.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nMeziantou.Analyzer NOTICES AND INFORMATION BEGIN HERE\n=====================================================\nMIT License\n\nCopyright (c) 2018 Gérald Barré\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Telegram.Bot.sln",
          "type": "blob",
          "size": 5.4560546875,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.2.32422.2\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{838231A4-B081-44B0-AC16-DC4C2FABAE86}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Telegram.Bot\", \"src\\Telegram.Bot\\Telegram.Bot.csproj\", \"{12FD39CD-A6FD-4040-8C8B-8FABEDD5FE0F}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"test\", \"test\", \"{15F0DD71-1D15-4085-AF6F-E3E5D8ACB489}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Telegram.Bot.Tests.Integ\", \"test\\Telegram.Bot.Tests.Integ\\Telegram.Bot.Tests.Integ.csproj\", \"{B662E909-CF8B-47C6-BAA8-FCA595BA53EA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Telegram.Bot.Tests.Unit\", \"test\\Telegram.Bot.Tests.Unit\\Telegram.Bot.Tests.Unit.csproj\", \"{AAB9E3BA-D749-4D38-9021-EBD8D0BC8975}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{C45387C6-C93F-4FD2-84A8-A69CCE93B7EE}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\tCHANGELOG.md = CHANGELOG.md\n\t\tCONTRIBUTING.md = CONTRIBUTING.md\n\t\tglobal.json = global.json\n\t\tREADME.md = README.md\n\t\tTHIRD_PARTY_NOTICES = THIRD_PARTY_NOTICES\n\t\t.gitattributes = .gitattributes\n\t\t.gitignore = .gitignore\n\t\t.gitpod.yml = .gitpod.yml\n\t\tLICENSE = LICENSE\n\t\tDirectory.Build.props = Directory.Build.props\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \".azure-pipelines\", \".azure-pipelines\", \"{71662597-40F2-4192-AC4D-5FB9A1F12642}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.azure-pipelines\\ci.yml = .azure-pipelines\\ci.yml\n\t\t.azure-pipelines\\full-integration-tests.yml = .azure-pipelines\\full-integration-tests.yml\n\t\t.azure-pipelines\\non-interactive-integration-tests.yml = .azure-pipelines\\non-interactive-integration-tests.yml\n\t\t.azure-pipelines\\release-pipeline.yml = .azure-pipelines\\release-pipeline.yml\n\t\t.azure-pipelines\\variables.yml = .azure-pipelines\\variables.yml\n\t\t.azure-pipelines\\external-release-publish.yml = .azure-pipelines\\external-release-publish.yml\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"jobs\", \"jobs\", \"{C20A563E-603B-49E8-A954-DB90D4F351DE}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.azure-pipelines\\jobs\\run-integration-tests.yml = .azure-pipelines\\jobs\\run-integration-tests.yml\n\t\t.azure-pipelines\\jobs\\run-unit-tests.yml = .azure-pipelines\\jobs\\run-unit-tests.yml\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \".devcontainer\", \".devcontainer\", \"{4897F36C-2F57-48A7-B425-D8F695E0AC0D}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.devcontainer\\devcontainer.json = .devcontainer\\devcontainer.json\n\t\t.devcontainer\\docker-compose.yml = .devcontainer\\docker-compose.yml\n\t\t.devcontainer\\Dockerfile = .devcontainer\\Dockerfile\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"EnumSerializer.Generator\", \"src\\EnumSerializer.Generator\\EnumSerializer.Generator.csproj\", \"{C246B54F-018B-4589-B26D-C38D7846FFF2}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{12FD39CD-A6FD-4040-8C8B-8FABEDD5FE0F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{12FD39CD-A6FD-4040-8C8B-8FABEDD5FE0F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{12FD39CD-A6FD-4040-8C8B-8FABEDD5FE0F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{12FD39CD-A6FD-4040-8C8B-8FABEDD5FE0F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{B662E909-CF8B-47C6-BAA8-FCA595BA53EA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{B662E909-CF8B-47C6-BAA8-FCA595BA53EA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{B662E909-CF8B-47C6-BAA8-FCA595BA53EA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{B662E909-CF8B-47C6-BAA8-FCA595BA53EA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{AAB9E3BA-D749-4D38-9021-EBD8D0BC8975}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AAB9E3BA-D749-4D38-9021-EBD8D0BC8975}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AAB9E3BA-D749-4D38-9021-EBD8D0BC8975}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{AAB9E3BA-D749-4D38-9021-EBD8D0BC8975}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C246B54F-018B-4589-B26D-C38D7846FFF2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C246B54F-018B-4589-B26D-C38D7846FFF2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C246B54F-018B-4589-B26D-C38D7846FFF2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C246B54F-018B-4589-B26D-C38D7846FFF2}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{12FD39CD-A6FD-4040-8C8B-8FABEDD5FE0F} = {838231A4-B081-44B0-AC16-DC4C2FABAE86}\n\t\t{B662E909-CF8B-47C6-BAA8-FCA595BA53EA} = {15F0DD71-1D15-4085-AF6F-E3E5D8ACB489}\n\t\t{AAB9E3BA-D749-4D38-9021-EBD8D0BC8975} = {15F0DD71-1D15-4085-AF6F-E3E5D8ACB489}\n\t\t{71662597-40F2-4192-AC4D-5FB9A1F12642} = {C45387C6-C93F-4FD2-84A8-A69CCE93B7EE}\n\t\t{C20A563E-603B-49E8-A954-DB90D4F351DE} = {71662597-40F2-4192-AC4D-5FB9A1F12642}\n\t\t{4897F36C-2F57-48A7-B425-D8F695E0AC0D} = {C45387C6-C93F-4FD2-84A8-A69CCE93B7EE}\n\t\t{C246B54F-018B-4589-B26D-C38D7846FFF2} = {838231A4-B081-44B0-AC16-DC4C2FABAE86}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {F6A9C4CA-DF26-4772-9119-627935D70E7C}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.078125,
          "content": "{\n  \"sdk\": {\n    \"version\": \"8.0.100\",\n    \"rollForward\": \"latestFeature\"\n  }\n}\n"
        },
        {
          "name": "package-icon.png",
          "type": "blob",
          "size": 18.0703125,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}