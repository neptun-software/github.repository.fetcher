{
  "metadata": {
    "timestamp": 1736710897785,
    "page": 484,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "phongnguyend/Practical.CleanArchitecture",
      "stars": 2158,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 7.2470703125,
          "content": "## Ignore the Migrations folder for now since this repo is for learning and testing purposes\n## We don't want to mess things up with lot of migration files anytime we make changes to the database structure.\n/src/IdentityServer/Duende/ClassifiedAds.Migrator/Migrations/\n/src/IdentityServer/IdentityServer4/ClassifiedAds.Migrator/Migrations/\n/src/IdentityServer/OpenIddict/ClassifiedAds.Migrator/Migrations/\n/src/Monolith/ClassifiedAds.Migrator/Migrations/\n/src/ModularMonolith/ClassifiedAds.Migrator/Migrations/\n/src/Microservices/Services.AuditLog/ClassifiedAds.Services.AuditLog.Api/Migrations/\n/src/Microservices/Services.Configuration/ClassifiedAds.Services.Configuration.Api/Migrations/\n/src/Microservices/Services.Identity/ClassifiedAds.Services.Identity.Api/Migrations/\n/src/Microservices/Services.Identity/ClassifiedAds.Services.Identity.AuthServer/Migrations/\n/src/Microservices/Services.Notification/ClassifiedAds.Services.Notification.Api/Migrations/\n/src/Microservices/Services.Product/ClassifiedAds.Services.Product.Api/Migrations/\n/src/Microservices/Services.Storage/ClassifiedAds.Services.Storage.Api/Migrations/\n/src/UIs/reactjs/.eslintcache\n.tye/\n.local-chromium/\n.sonarqube/\n.scannerwork/\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*[.json, .xml, .info]\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n#*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# Terraform\n.terraform/\n.terraform.lock.hcl\nterraform.tfstate\nterraform.tfstate.backup\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2023 Phong Nguyen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 26.7763671875,
          "content": "#\n> :warning: **Warning**\n> \n> The code samples contain multiple ways and patterns to do things and not always be considered best practices or recommended for all situations.\n#\n\n# Database Centric vs Domain Centric Architecture \n![alt text](/docs/imgs/database-centrics-vs-domain-centric-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fdatabase-centrics-vs-domain-centric-architecture.drawio)\n\n# Hexagonal Architecture\n![alt text](/docs/imgs/hexagonal-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fhexagonal-architecture.drawio)\n\n# Onion Architecture\n![alt text](/docs/imgs/onion-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fonion-architecture.drawio)\n\n# The Clean Architecture\n![alt text](/docs/imgs/the-clean-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fthe-clean-architecture.drawio)\n\n# Classic Three-layer Architecture\n![alt text](/docs/imgs/classic-three-layer-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fclassic-three-layer-architecture.drawio)\n\n# Modern Four-layer Architecture\n![alt text](/docs/imgs/modern-four-layer-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fmodern-four-layer-architecture.drawio)\n\n# Layer Dependencies\n![alt text](/docs/imgs/layer-dependencies.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Flayer-dependencies.drawio)\n\n# Layer Examples\n![alt text](/docs/imgs/layer-examples.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Flayer-examples.drawio)\n\n# Testing Pyramid\n![alt text](/docs/imgs/testing-pyramid.png)\n![alt text](/docs/imgs/testing-pyramid-unit-tests.png)\n![alt text](/docs/imgs/testing-pyramid-integration-e2e-tests.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Ftesting-pyramid.drawio)\n\n# Vertical Slice Architecture (Modular Monolith)\n![alt text](/docs/imgs/vertical-slice-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fvertical-slice-architecture.drawio)\n\n# Solution Structure\n![alt text](/docs/imgs/code-solution-structure.png)\n\n![alt text](/docs/imgs/code-solution-structure-modular-monolith.png)\n\n![alt text](/docs/imgs/code-solution-structure-microservices.png)\n\n# How to Run:\n## Update Configuration\n<details>\n  <summary><b>Additional Configuration Sources</b></summary>\n  \n  - Open [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json) and jump to **ConfigurationSources** section.\n    ```js\n    \"ConfigurationSources\": {\n      \"SqlServer\": {\n        \"IsEnabled\": false,\n        \"ConnectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\",\n        \"SqlQuery\": \"select [Key], [Value] from ConfigurationEntries\"\n      },\n      \"AzureKeyVault\": {\n        \"IsEnabled\": false,\n        \"VaultName\": \"https://xxx.vault.azure.net/\"\n      }\n    },\n    ```\n\n  - Get from Sql Server database:\n    ```js\n    \"ConfigurationSources\": {\n      \"SqlServer\": {\n        \"IsEnabled\": true,\n        \"ConnectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\",\n        \"SqlQuery\": \"select [Key], [Value] from ConfigurationEntries\"\n      },\n    },\n    ```\n\n  - Get from Azure Key Vault:\n    ```js\n    \"ConfigurationSources\": {\n      \"AzureKeyVault\": {\n        \"IsEnabled\": true,\n        \"VaultName\": \"https://xxx.vault.azure.net/\"\n      }\n    },\n    ```\n\n  - Use Both:\n    ```js\n    \"ConfigurationSources\": {\n      \"SqlServer\": {\n        \"IsEnabled\": true,\n        \"ConnectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\",\n        \"SqlQuery\": \"select [Key], [Value] from ConfigurationEntries\"\n      },\n      \"AzureKeyVault\": {\n        \"IsEnabled\": true,\n        \"VaultName\": \"https://xxx.vault.azure.net/\"\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Storage</b></summary>\n  \n  - Open [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json), [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json) and jump to **Storage** section.\n    ```js\n    \"Storage\": {\n      \"Provider\": \"Local\",\n    },\n    ```\n\n  - Use Local Files:\n    ```js\n    \"Storage\": {\n      \"Provider\": \"Local\",\n      \"Local\": {\n        \"Path\": \"E:\\\\files\"\n      },\n    },\n    ```\n\n  - Use Azure Blob:\n    ```js\n    \"Storage\": {\n      \"Provider\": \"Azure\",\n      \"Azure\": {\n        \"ConnectionString\": \"xxx\",\n        \"Container\": \"classifiedadds\"\n      },\n    },\n    ```\n\n  - Use Amazon S3:\n    ```js\n    \"Storage\": {\n      \"Provider\": \"Amazon\",\n      \"Amazon\": {\n        \"AccessKeyID\": \"xxx\",\n        \"SecretAccessKey\": \"xxx\",\n        \"BucketName\": \"classifiedadds\",\n        \"RegionEndpoint\": \"ap-southeast-1\"\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Message Broker</b></summary>\n  \n  - Open below files and jump to **MessageBroker** section:\n    + [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json)\n    ```js\n    \"MessageBroker\": {\n      \"Provider\": \"RabbitMQ\",\n    }\n    ```\n\n  - Use RabbitMQ\n    ```js\n    \"MessageBroker\": {\n      \"Provider\": \"RabbitMQ\",\n      \"RabbitMQ\": {\n        \"HostName\": \"localhost\",\n        \"UserName\": \"guest\",\n        \"Password\": \"guest\",\n        \"ExchangeName\": \"amq.direct\",\n        \"RoutingKeys\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        },\n        \"QueueNames\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        }\n      }\n    }\n    ```\n\n  - Use Kafka:\n    ```js\n    \"MessageBroker\": {\n      \"Provider\": \"Kafka\",\n      \"Kafka\": {\n        \"BootstrapServers\": \"localhost:9092\",\n        \"Topics\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        },\n      }\n    }\n    ```\n\n  - Use Azure Queue Storage:\n    ```js\n    \"MessageBroker\": {\n      \"Provider\": \"AzureQueue\",\n      \"AzureQueue\": {\n        \"ConnectionString\": \"xxx\",\n        \"QueueNames\": {\n          \"FileUploadedEvent\": \"classifiedadds-fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds-filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds-emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds-smscreated\"\n        }\n      }\n    }\n    ```\n\n  - Use Azure Service Bus:\n    ```js\n    \"MessageBroker\": {\n      \"Provider\": \"AzureServiceBus\",\n      \"AzureServiceBus\": {\n        \"ConnectionString\": \"xxx\",\n        \"QueueNames\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        }\n      }\n    }\n    ```\n\t\n  - Use Azure Event Grid:\n    ```js\n    \"MessageBroker\": {\n      \"Provider\": \"AzureEventGrid\",\n      \"AzureEventGrid\": {\n        \"DomainEndpoint\": \"https://xxx.xxx-1.eventgrid.azure.net/api/events\",\n        \"DomainKey\": \"xxxx\",\n        \"Topics\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\"\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        }\n      }\n    }\n    ```\n\t\n  - Use Azure Event Hubs:\n    ```js\n    \"MessageBroker\": {\n      \"Provider\": \"AzureEventHub\",\n      \"AzureEventHub\": {\n        \"ConnectionString\": \"Endpoint=sb://xxx.servicebus.windows.net/;SharedAccessKeyName=xxx;SharedAccessKey=xxx\",\n        \"Hubs\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        },\n        \"StorageConnectionString\": \"DefaultEndpointsProtocol=https;AccountName=xxx;AccountKey=xxx;EndpointSuffix=core.windows.net\",\n        \"StorageContainerNames\": {\n          \"FileUploadedEvent\": \"eventhub-fileuploaded\",\n          \"FileDeletedEvent\": \"eventhub-filedeleted\",\n          \"EmailMessageCreatedEvent\": \"eventhub-emailcreated\",\n          \"SmsMessageCreatedEvent\": \"eventhub-smscreated\"\n        }\n      }\n    }\n    ```\n</details>\n\n<details>\n  <summary><b>Logging</b></summary>\n  \n  - Open and jump to **Logging** section of below files:\n    + [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json)\n    + [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json)\n    + [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json)\n    ```js\n    \"Logging\": {\n      \"LogLevel\": {\n        \"Default\": \"Warning\"\n      },\n      \"File\": {\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n      \"Elasticsearch\": {\n        \"IsEnabled\": false,\n        \"Host\": \"http://localhost:9200\",\n        \"IndexFormat\": \"classifiedads\",\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n      \"EventLog\": {\n        \"IsEnabled\": false,\n        \"LogName\": \"Application\",\n        \"SourceName\": \"ClassifiedAds.WebAPI\"\n      }\n    },\n    ```\n  - Write to Local file (./logs/log.txt). Always enabled.\n    ```js\n    \"Logging\": {\n      \"File\": {\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n    },\n    ```\n  - Write to Elasticsearch:\n    ```js\n    \"Logging\": {\n      \"Elasticsearch\": {\n        \"IsEnabled\": true,\n        \"Host\": \"http://localhost:9200\",\n        \"IndexFormat\": \"classifiedads\",\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n    },\n    ```\n  - Write to Windows Event Log (Windows only):\n    ```js\n    \"Logging\": {\n      \"EventLog\": {\n        \"IsEnabled\": true,\n        \"LogName\": \"Application\",\n        \"SourceName\": \"ClassifiedAds.WebAPI\"\n      }\n    },\n    ```\n  - Enable all options:\n    ```js\n    \"Logging\": {\n      \"LogLevel\": {\n        \"Default\": \"Warning\"\n      },\t\n      \"File\": {\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n      \"Elasticsearch\": {\n        \"IsEnabled\": true,\n        \"Host\": \"http://localhost:9200\",\n        \"IndexFormat\": \"classifiedads\",\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n      \"EventLog\": {\n        \"IsEnabled\": true,\n        \"LogName\": \"Application\",\n        \"SourceName\": \"ClassifiedAds.WebAPI\"\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Caching</b></summary>\n  \n  - Open and jump to **Caching** section of below files:\n    + [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json)\n    + [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json)\n    ```js\n    \"Caching\": {\n      \"InMemory\": {\n\n      },\n      \"Distributed\": {\n\n      }\n    },\n    ```\n  - Configure options for In Memory Cache:\n    ```js\n    \"Caching\": {\n      \"InMemory\": {\n        \"SizeLimit\": null\n      },\n    },\n    ```\n  - Use In Memory Distributed Cache (For Local Testing):\n    ```js\n    \"Caching\": {\n      \"Distributed\": {\n        \"Provider\": \"InMemory\",\n        \"InMemory\": {\n          \"SizeLimit\": null\n        }\n      }\n    },\n    ```\n  - Use Redis Distributed Cache:\n    ```js\n    \"Caching\": {\n      \"Distributed\": {\n        \"Provider\": \"Redis\",\n        \"Redis\": {\n          \"Configuration\": \"xxx.redis.cache.windows.net:6380,password=xxx,ssl=True,abortConnect=False\",\n          \"InstanceName\": \"\"\n        }\n      }\n    },\n    ```\n  - Use Sql Server Distributed Cache:\n    ```js\n\tdotnet tool install --global dotnet-sql-cache --version=\"5.0\"\n\tdotnet sql-cache create \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\" dbo CacheEntries\n    ```\n    ```js\n    \"Caching\": {\n      \"Distributed\": {\n        \"Provider\": \"SqlServer\",\n        \"SqlServer\": {\n          \"ConnectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\",\n          \"SchemaName\": \"dbo\",\n          \"TableName\": \"CacheEntries\"\n        }\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Monitoring</b></summary>\n  \n  - Open and jump to **Monitoring** section of below files:\n    + [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json)\n    + [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json)\n    ```js\n    \"Monitoring\": {\n      \"MiniProfiler\": {\n        \n      },\n      \"AzureApplicationInsights\": {\n        \n      }\n    },\n    ```\n  - Use MiniProfiler:\n    ```js\n    \"Monitoring\": {\n      \"MiniProfiler\": {\n        \"IsEnabled\": true,\n        \"SqlServerStorage\": {\n          \"ConectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False\",\n          \"ProfilersTable\": \"MiniProfilers\",\n          \"TimingsTable\": \"MiniProfilerTimings\",\n          \"ClientTimingsTable\": \"MiniProfilerClientTimings\"\n        }\n      },\n    },\n    ```\n  - Use Azure Application Insights:\n    ```js\n\t\"Monitoring\": {\n      \"AzureApplicationInsights\": {\n        \"IsEnabled\": true,\n\t\t\"InstrumentationKey\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t\"EnableSqlCommandTextInstrumentation\": true\n      }\n\t},\n    ```\n  - Use AppMetrics:\n    ```js\n\t\"Monitoring\": {\n      \"AppMetrics\": {\n        \"IsEnabled\": true,\n        \"MetricsOptions\": {\n          \"DefaultContextLabel\": \"ClassifiedAds.WebAPI\",\n          \"Enabled\": true,\n          \"ReportingEnabled\": true\n        },\n        \"MetricsWebTrackingOptions\": {\n          \"ApdexTrackingEnabled\": true,\n          \"ApdexTSeconds\": 0.1,\n          \"IgnoredHttpStatusCodes\": [ 404 ],\n          \"IgnoredRoutesRegexPatterns\": [],\n          \"OAuth2TrackingEnabled\": true\n        },\n        \"MetricEndpointsOptions\": {\n          \"MetricsEndpointEnabled\": true,\n          \"MetricsTextEndpointEnabled\": true,\n          \"EnvironmentInfoEndpointEnabled\": true\n        }\n      }\n\t},\n    ```\n  - Use Both:\n    ```js\n    \"Monitoring\": {\n      \"MiniProfiler\": {\n        \"IsEnabled\": true,\n        \"SqlServerStorage\": {\n          \"ConectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False\",\n          \"ProfilersTable\": \"MiniProfilers\",\n          \"TimingsTable\": \"MiniProfilerTimings\",\n          \"ClientTimingsTable\": \"MiniProfilerClientTimings\"\n        }\n      },\n      \"AzureApplicationInsights\": {\n        \"IsEnabled\": true,\n        \"InstrumentationKey\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        \"EnableSqlCommandTextInstrumentation\": true\n      },\n      \"AppMetrics\": {\n        \"IsEnabled\": true,\n        \"MetricsOptions\": {\n          \"DefaultContextLabel\": \"ClassifiedAds.WebAPI\",\n          \"Enabled\": true,\n          \"ReportingEnabled\": true\n        },\n        \"MetricsWebTrackingOptions\": {\n          \"ApdexTrackingEnabled\": true,\n          \"ApdexTSeconds\": 0.1,\n          \"IgnoredHttpStatusCodes\": [ 404 ],\n          \"IgnoredRoutesRegexPatterns\": [],\n          \"OAuth2TrackingEnabled\": true\n        },\n        \"MetricEndpointsOptions\": {\n          \"MetricsEndpointEnabled\": true,\n          \"MetricsTextEndpointEnabled\": true,\n          \"EnvironmentInfoEndpointEnabled\": true\n        }\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Interceptors</b></summary>\n  \n  - Open and jump to **Interceptors** section of below files:\n    + [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json)\n    + [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json)\n    + [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json)\n    ```js\n    \"Interceptors\": {\n      \"LoggingInterceptor\": true,\n      \"ErrorCatchingInterceptor\": false\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Security Headers</b></summary>\n  \n  - Open [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json) and jump to **SecurityHeaders** section:\n    ```js\n    \"SecurityHeaders\": {\n      \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n      \"Pragma\": \"no-cache\",\n      \"Expires\": \"0\"\n    },\n    ```\n  - Open [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json) and jump to **SecurityHeaders** section:\n    ```js\n    \"SecurityHeaders\": {\n      \"Content-Security-Policy\": \"form-action 'self'; frame-ancestors 'none'\",\n      \"Feature-Policy\": \"camera 'none'\",\n      \"Referrer-Policy\": \"strict-origin-when-cross-origin\",\n      \"X-Content-Type-Options\": \"nosniff\",\n      \"X-Frame-Options\": \"DENY\",\n      \"X-XSS-Protection\": \"1; mode=block\",\n      \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n      \"Pragma\": \"no-cache\",\n      \"Expires\": \"0\"\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Cross-Origin Resource Sharing (CORS)</b></summary>\n  \n  - Open [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json) and jump to **CORS** section:\n    ```js\n    \"CORS\": {\n      \"AllowAnyOrigin\": false,\n      \"AllowedOrigins\": [ \"http://localhost:4200\", \"http://localhost:3000\", \"http://localhost:8080\" ]\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>External Login</b></summary>\n  \n  - Open [ClassifiedAds.IdentityServer/appsettings.json](/src/Monolith/ClassifiedAds.IdentityServer/appsettings.json) and jump to **ExternalLogin** section:\n    ```js\n    \"ExternalLogin\": {\n      \"AzureActiveDirectory\": {\n        \"IsEnabled\": true,\n        \"Authority\": \"https://login.microsoftonline.com/<Directory (tenant) ID>\",\n        \"ClientId\": \"<Application (client) ID\",\n        \"ClientSecret\": \"xxx\"\n      },\n      \"Microsoft\": {\n        \"IsEnabled\": true,\n        \"ClientId\": \"<Application (client) ID\",\n        \"ClientSecret\": \"xxx\"\n      },\n      \"Google\": {\n        \"IsEnabled\": true,\n        \"ClientId\": \"xxx\",\n        \"ClientSecret\": \"xxx\"\n      },\n      \"Facebook\": {\n        \"IsEnabled\": true,\n        \"AppId\": \"xxx\",\n        \"AppSecret\": \"xxx\"\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Sending Email</b></summary>\n  \n  - Open [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json) and jump to **Notification -> Email** section:\n    ```js\n    \"Notification\": {\n      \"Email\": {\n        \"Provider\": \"Fake\",\n      }\n    }\n    ```\n  - Use SmtpClient:\n    ```js\n    \"Notification\": {\n      \"Email\": {\n        \"Provider\": \"SmtpClient\",\n        \"SmtpClient\": {\n          \"Host\": \"localhost\",\n          \"Port\": \"\",\n          \"UserName\": \"\",\n          \"Password\": \"\",\n          \"EnableSsl\": \"\"\n        }\n      }\n    }\n    ```\n</details>\n\n<details>\n  <summary><b>Sending SMS</b></summary>\n  \n  - Open [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json) and jump to **Notification -> Sms** section:\n    ```js\n    \"Notification\": {\n      \"Sms\": {\n        \"Provider\": \"Fake\",\n      }\n    }\n    ```\n  - Use Twilio\n    ```js\n    \"Notification\": {\n      \"Sms\": {\n        \"Provider\": \"Twilio\",\n        \"Twilio\": {\n          \"AccountSId\": \"\",\n          \"AuthToken\": \"\",\n          \"FromNumber\": \"\"\n        }\n      }\n    }\n    ```\n</details>\n\n## Run or Debug the Solution\n- Web MVC Home Page: https://localhost:44364/\n\n  ![alt text](/docs/imgs/web-mvc-home-page.png)\n\n- Navigate to Health Checks UI https://localhost:44364/healthchecks-ui#/healthchecks and make sure everything is green.\n\n  ![alt text](/docs/imgs/health-checks-ui.png)\n\n- Login on Identity Server:\n  + Option 1: Use default created account:\n    + User Name: phong@gmail.com\n    + Password: v*7Un8b4rcN@<-RN\n  + Option 2: Register new account at https://localhost:44367/Account/Register\n  \n  ![alt text](/docs/imgs/identity-server-login-page.png)\n\n- Open Blazor Home Page at: https://localhost:44331\n\n  ![alt text](/docs/imgs/blazor-home-page.png)\n\n## How to Build and Run Single Page Applications:\n- Angular:\n  + Navigate to folder: [UIs/angular/](/src/UIs/angular/)\n    ```\n    npm install\n    ng serve\n    ```\n  + Update [environment.ts](/src/UIs/angular/src/environments/environment.ts) & [environment.prod.ts](/src/UIs/angular/src/environments/environment.prod.ts) \n    ```ts\n    export const environment = {\n      OpenIdConnect: {\n        Authority: \"https://localhost:44367\",\n        ClientId: \"ClassifiedAds.Angular\"\n      },\n      ResourceServer: {\n        Endpoint: \"https://localhost:44312/api/\"\n      },\n      CurrentUrl: \"http://localhost:4200/\"\n    };\n    ```\n  + Go to http://localhost:4200/\n\n    ![alt text](/docs/imgs/angular-home-page.png)\n  \n- React:\n  + Navigate to folder: [UIs/reactjs/](/src/UIs/reactjs/)\n    ```\n    npm install\n    npm run dev\n    ```\n  + Update [environment.dev.tsx](/src/UIs/reactjs/src/environments/environment.dev.tsx) & [environment.tsx](/src/UIs/reactjs/src/environments/environment.tsx) \n    ```js\n    const environment = {\n        OpenIdConnect: {\n            Authority: \"https://localhost:44367\",\n            ClientId: \"ClassifiedAds.React\"\n        },\n        ResourceServer: {\n            Endpoint: \"https://localhost:44312/api/\"\n        },\n        CurrentUrl: \"http://localhost:3000/\"\n    };\n    export default environment;\n    ```\n  + Go to http://localhost:3000/\n  \n    ![alt text](/docs/imgs/react-home-page.png)\n  \n- Vue:\n  + Navigate to folder: [UIs/vuejs/](/src/UIs/vuejs/)\n    ```\n    npm install\n    npm run dev\n    ```\n  + Update [environment.dev.ts](/src/UIs/vuejs/environments/environment.dev.ts) & [environment.dev.ts](/src/UIs/vuejs/environments/environment.ts) \n    ```js\n    const environment = {\n        OpenIdConnect: {\n            Authority: \"https://localhost:44367\",\n            ClientId: \"ClassifiedAds.Vue\"\n        },\n        ResourceServer: {\n            Endpoint: \"https://localhost:44312/api/\"\n        },\n        CurrentUrl: \"http://localhost:8080/\"\n    };\n    export default environment;\n    ```\n+ Go to http://localhost:8080/\n  \n    ![alt text](/docs/imgs/vue-home-page.png)\n\n- Before Login, go to Identity Server https://localhost:44367/Client to make sure application clients have been registered:\n\n  ![alt text](/docs/imgs/identity-server-clients-page.png)\n    \n## How to Run on Docker Containers:\n- Add Migrations if you haven't done on previous steps:\n  + Install **dotnet-ef** cli:\n    ```\n    dotnet tool install --global dotnet-ef --version=\"5.0\"\n    ```\n  + Navigate to [ClassifiedAds.Migrator](/src/Monolith/ClassifiedAds.Migrator/) and run these commands:\n    ```\n    dotnet ef migrations add Init --context AdsDbContext -o Migrations/AdsDb\n    dotnet ef migrations add Init --context ConfigurationDbContext -o Migrations/ConfigurationDb\n    dotnet ef migrations add Init --context PersistedGrantDbContext -o Migrations/PersistedGrantDb\n    ```\n- Navigate to [Monolith](/src/Monolith/) and run:\n  ```\n  docker-compose build\n  docker-compose up\n  ```\n- Open Web MVC Home Page at: http://host.docker.internal:9003\n\n  ![alt text](/docs/imgs/web-mvc-home-page.png)\n\n- Navigate to Health Checks UI http://host.docker.internal:9003/healthchecks-ui#/healthchecks and make sure everything is green.\n\n  ![alt text](/docs/imgs/health-checks-ui-container.png)\n\n- Login on Identity Server:\n  + Use default created account: phong@gmail.com / v*7Un8b4rcN@<-RN\n  + Register new account at http://host.docker.internal:9000/Account/Register\n  \n- Open Blazor Home Page at: http://host.docker.internal:9008\n\n  ![alt text](/docs/imgs/blazor-home-page.png)\n\n## How to Run Integration & End to End Tests:\n- Update [ClassifiedAds.IntegrationTests/appsettings.json](/src/Monolith/ClassifiedAds.IntegrationTests/appsettings.json)\n  ```js\n  {\n    \"OpenIdConnect\": {\n      \"Authority\": \"https://localhost:44367\",\n      \"ClientId\": \"ClassifiedAds.WebMVC\",\n      \"ClientSecret\": \"secret\",\n      \"RequireHttpsMetadata\": \"true\"\n    },\n    \"WebAPI\": {\n      \"Endpoint\": \"https://localhost:44312\"\n    },\n    \"GraphQL\": {\n      \"Endpoint\": \"https://localhost:44392/graphql\"\n    },\n    \"Login\": {\n      \"UserName\": \"phong@gmail.com\",\n      \"Password\": \"v*7Un8b4rcN@<-RN\",\n      \"Scope\": \"ClassifiedAds.WebAPI\"\n    }\n  }\n  ```\n- Download [Chrome Driver](https://chromedriver.chromium.org/downloads)\n\n  ![alt text](/docs/imgs/chrome_driver_path.png)\n\n- Update [ClassifiedAds.EndToEndTests/appsettings.json](/src/Monolith/ClassifiedAds.EndToEndTests/appsettings.json)\n  ```js\n  {\n    \"ChromeDriverPath\": \"D:\\\\Downloads\\\\chromedriver_win32\\\\72\",\n    \"Login\": {\n      \"Url\": \"https://localhost:44364/Home/Login\",\n      \"UserName\": \"phong@gmail.com\",\n      \"Password\": \"v*7Un8b4rcN@<-RN\"\n    }\n  }\n  ```\n  \n  ![alt text](/docs/imgs/run_e2e_tests.gif)\n  \n## Application URLs:\n\nhttps://github.com/phongnguyend/Practical.CleanArchitecture/wiki/Application-URLs\n\n## Roadmap:\n\nhttps://github.com/phongnguyend/Practical.CleanArchitecture/wiki/Roadmap\n\n##\n\n## Licence 🔑\n\nThis repository is licensed under the [MIT](/LICENSE) license.\n\n### Duende.IdentityServer License 🔑\n\n**Duende.IdentityServer** is available under both a **FOSS (RPL) and a commercial** license. \n\nFor the production environment, it is necessary to get a specific license, if you would like more information about the licensing of **Duende.IdentityServer** - please check [this link](https://duendesoftware.com/products/identityserver#pricing).\n\nThe source code under [/src/IdentityServer/Duende](/src/IdentityServer/Duende) folder uses the source code from https://github.com/DuendeSoftware/IdentityServer.Quickstart.UI which is under the terms of the following\n[**license**](https://github.com/DuendeSoftware/IdentityServer.Quickstart.UI/blob/main/LICENSE).\n\n### EPPLus License 🔑\n\n**EPPlus 5** can be used under Polyform Noncommercial license or a commercial license.\n\nFor the production environment, it is necessary to get a specific license, if you would like more information about the licensing of **EPPlus 5** - please check [this link](https://www.epplussoftware.com/en/LicenseOverview).\n\n##\n"
        },
        {
          "name": "azure-pipelines.gitleaks.yml",
          "type": "blob",
          "size": 0.2890625,
          "content": "trigger:\n- master\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n- script: |\n      docker pull zricethezav/gitleaks:latest\n      docker run -v $(Build.SourcesDirectory):/path zricethezav/gitleaks:latest detect --source=\"/path\" --config=\"/path/gitleaks.toml\" --verbose --no-git\n  displayName: 'Gitleaks'\n"
        },
        {
          "name": "deployments",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gitleaks.toml",
          "type": "blob",
          "size": 0.4326171875,
          "content": "title = \"gitleaks config\"\n\n[allowlist]\ndescription = \"global allow lists\"\npaths = ['''gitleaks.toml''']\n\n[[rules]]\n\tid = \"BadWords\"\n\tdescription = \"Bad Words\"\n\tregex = '''.*the\\s+(hell|heck).*'''\n\n[[rules]]\n\tid = \"Storage.Amazon.AccessKeyID\"\n\tdescription = \"Storage.Amazon.AccessKeyID\"\n\tregex = '''AKI.{5,20}3SQ'''\n\n[[rules]]\n\tid = \"Storage.Amazon.SecretAccessKey\"\n\tdescription = \"Storage.Amazon.SecretAccessKey\"\n\tregex = '''TzX.{5,100}NXl'''\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}