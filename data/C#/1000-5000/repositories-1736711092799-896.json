{
  "metadata": {
    "timestamp": 1736711092799,
    "page": 896,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dotnet-outdated/dotnet-outdated",
      "stars": 1405,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0107421875,
          "content": "* text=auto"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.53515625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n**/Properties/launchSettings.json\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk \n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output \nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder \n.mfractor/\n\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n"
        },
        {
          "name": ".gitpod.Dockerfile",
          "type": "blob",
          "size": 0.44921875,
          "content": "FROM gitpod/workspace-full-vnc:latest\n\nUSER root\n# Install .NET runtime dependencies and some dev tools\nRUN apt-get update \\\n    && apt-get install -y \\\n        libc6 \\\n        libgcc1 \\\n        libgssapi-krb5-2 \\\n        libicu66 \\\n        libssl1.1 \\\n        libstdc++6 \\\n        zlib1g \\\n        git-gui \\\n    && rm -rf /var/lib/apt/lists/*\n\nUSER gitpod\n\nENV DOTNET_ROOT=\"/workspace/.dotnet\"\nENV PATH=$PATH:$DOTNET_ROOT\nENV DOTNET_CLI_TELEMETRY_OPTOUT=true\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.7490234375,
          "content": "image:\n  file: .gitpod.Dockerfile\n\ntasks:\n  - name: Restore dependencies and workaround for Gitpod issue 6460\n    init: |\n      mkdir -p \"$DOTNET_ROOT\"\n      wget --output-document=\"$DOTNET_ROOT/dotnet-install.sh\" https://dot.net/v1/dotnet-install.sh\n      chmod +x \"$DOTNET_ROOT/dotnet-install.sh\"\n      \"$DOTNET_ROOT/dotnet-install.sh\" --channel 2.1 --install-dir \"$DOTNET_ROOT\"\n      \"$DOTNET_ROOT/dotnet-install.sh\" --channel 3.1 --install-dir \"$DOTNET_ROOT\"\n      \"$DOTNET_ROOT/dotnet-install.sh\" --channel 5.0 --install-dir \"$DOTNET_ROOT\"\n      \"$DOTNET_ROOT/dotnet-install.sh\" --channel 6.0 --install-dir \"$DOTNET_ROOT\"\n      dotnet tool install --global dotnet-reportgenerator-globaltool\n      dotnet restore\n\nvscode:\n  extensions:\n    - muhammad-sammy.csharp"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 9.4912109375,
          "content": "# Changelog\n\nChangelogs can now be found on the [GitHub Releases page](https://github.com/dotnet-outdated/dotnet-outdated/releases).\n\n## [v4.1.0]\n\n- Add `--ignore-failed-sources` option to treat package source failures as warnings. - Thank you [Tim Heuer](https://github.com/timheuer)\n\n## [v4.0.0]\n\n- Add support for .NET 6 and drop support for .NET Core 2.1 - Thank you [John Smith](https://github.com/solrevdev)\n\n## [v3.2.1]\n\n- Fix incorrect floating version behaviour - Thank you [Martin Costello](https://github.com/martincostello)\n\n## [v3.2.0]\n\n- Adds `-r|--recursive` options - Thank you [David Dahlen](https://github.com/davidda)\n- Adds support for solution filter files (.slnf) - Thank you [Nick Devereaux](https://github.com/nickdevereaux)\n\n## [v3.1.1]\n\n- Dependency maintenance release\n\n## [v3.1.0]\n\n- Add support for .NET 5\n\n## [v3.0.2]\n\n- Dependency maintenance release\n\n## [v3.0.1]\n\n- Add additional output when project dependency graph parsing fails\n\n## [v3.0.0]\n\n- Target .NET Core 2.1 and 3.1 LTS versions\n- Update dependencies\n\n## [v2.11.0]\n\n- Adds `-n|--no-restore` options - Thank you [SeongChan Lee](https://github.com/foriequal0)\n\n## [v2.10.0]\n\n- Massive speed improvements - Thank you [Bastian Schmidt](https://github.com/batzen)\n\n## [v2.9.0]\n\n- Improved error reporting and docs when using NuGet credential providers - Thank you [Travis Illig](https://github.com/tillig)\n\n## [v2.8.0]\n\n- Add a new flag (`-ot`) to only include packages that are older than the specified number of days - Thank you [Boris](https://github.com/bdn-mca)\n\n## [v2.7.0]\n\n- Support for .NET Core SDK 3.0 - Thank you [Anton Hryshchanka](https://github.com/ahryshchanka)\n\n## [v2.6.0]\n\n- Better support for NuGet credential providers - Thank you [Ran Sagy](https://github.com/ransagy)\n\n## [v2.5.0]\n\n- Fix bug where certain private Nuget feeds weren't picked up - Thank you [Abbotware](https://github.com/abbotware)\n\n## [v2.4.0]\n\n- Allow the `--include` and `--exclude` parameters to be passed multiple times - Thank you [Fábio Beirão](https://github.com/fdbeirao)\n\n## [v2.3.0]\n\n- Split core functionality into a stand-alone library (`DotNetOutdated.Core`) which can be used in your own applications or libraries - Thank you [Gianluca Stoob](https://github.com/GStoob)\n\n## [v2.2.0]\n\n- Add ability to filter packages with the `--include` and `--exclude` option (See [#55](https://github.com/jerriep/dotnet-outdated/issues/55)) - Thank you [Jeppe Ravn Christiansen](https://github.com/jepperc)\n- Add ability to save results to a JSON or CSV file (See [#29](https://github.com/jerriep/dotnet-outdated/issues/29) and [#57](https://github.com/jerriep/dotnet-outdated/issues/57)) - Thank you [Patrick Dwyer](https://github.com/coderpatros)\n- Fix some scenarios where current or latest versions for certain packages could not be resolved \n\n## [v2.1.0]\n\n- Excludes unsupported projects (See [#58](https://github.com/jerriep/dotnet-outdated/issues/58)) - Thank you [Thomas Levesque](https://github.com/thomaslevesque)\n- Add option to return non-zero exit code when updates are found (See [#94](https://github.com/jerriep/dotnet-outdated/pull/94)) - Thank you [Patrick Dwyer](https://github.com/coderpatros)\n- Fixed `NullReferenceException` when unable to determine either the current or latest version of a package (See [#96](https://github.com/jerriep/dotnet-outdated/issues/96))\n\n## [v2.0.0]\n\n- Now only displays outdated packages (See [#16](https://github.com/jerriep/dotnet-outdated/issues/16))\n- Supports upgrading package using `-u` option. To prompt for each package, your can use `-p:prompt` (See [#6](https://github.com/jerriep/dotnet-outdated/issues/6))\n- Transitive packages are not displayed in a hierarchical view anymore. Transitive packages are simply indicated with a `[T]` indicator behind the package name.\n- Performance improvements due to caching (See [#43](https://github.com/jerriep/dotnet-outdated/pull/43)) - Thank you [thoemmi](https://github.com/thoemmi)\n- Support for V2 feeds (See [#42](https://github.com/jerriep/dotnet-outdated/issues/42)) - Thank you [thoemmi](https://github.com/thoemmi)\n- Highlights the new latest version of a package according to the severity of the upgrade (See [#45](https://github.com/jerriep/dotnet-outdated/issues/45)) - Thank you [tlycken](https://github.com/tlycken)\n- The `-pr` (pre-release) option has been renamed to `-pre`\n- Supports redirection and piping of output (See [#28](https://github.com/jerriep/dotnet-outdated/issues/28) and [#40](https://github.com/jerriep/dotnet-outdated/issues/40))\n- Supports running tool from Package Manager Console and Git Bash (See [#39](https://github.com/jerriep/dotnet-outdated/issues/39))\n\n## [v1.3.0]\n\nThis is mostly a bug fix release.\n\n- Fixed some typos - Thank you [Scott Hanselman](https://github.com/shanselman)\n- Fixed issue where colors were not displayed correctly on all terminals ([#32](https://github.com/jerriep/dotnet-outdated/issues/32)) - Thank you [Scott Hanselman](https://github.com/shanselman)\n- Fixed issue where project was reported an not being a .NET Core project when user's temp path contained a space character. ([#23](https://github.com/jerriep/dotnet-outdated/issues/23))\n- Fixed issue where current version package was not picked up due to case-sensitive string comparison ([#36](https://github.com/jerriep/dotnet-outdated/issues/36))\n- Fixed issue where latest version of non-library packages was not picked up ([#27](https://github.com/jerriep/dotnet-outdated/issues/27)) and ([#31](https://github.com/jerriep/dotnet-outdated/issues/31))\n\n## [v1.2.0]\n\n- Works with secure feeds. Read more in the _Working with secure feeds_ section of the readme.\n- Excludes auto-references (i.e. the framework packages) by default. Read more in the _Auto-references_ section of the readme.\n- Fixed various unhandled exceptions.\n\n## [v1.1.0]\n\n- Changed the way in which project dependencies are detected. We now run the `dotnet restore` command and make use of the `project.assets.json` file to determine the dependencies. This ensures parity with what the .NET CLI is doing.\n- Support for F# projects ([#17](https://github.com/jerriep/dotnet-outdated/issues/17)) - Thank you [John Ruble](https://github.com/jrr)\n- Support reporting on transitive dependencies ([#13](https://github.com/jerriep/dotnet-outdated/issues/13)) - Thank you [James McCutcheon](https://github.com/jamesmcc)\n- Fixed issue which displayed packages that were unavailable for the TargetFramework ([#20](https://github.com/jerriep/dotnet-outdated/issues/20))\n- Fixed issue with paths that contain spaces ([#23](https://github.com/jerriep/dotnet-outdated/issues/23))\n- Fixed issue which caused unlisted NuGet packages to be shown ([#15](https://github.com/jerriep/dotnet-outdated/issues/15))\n\n## [v1.0.0]\n\n- Updated for RTM of .NET Core 2.1\n\n## [v0.3.0]\n\n- Updated to use MSBuild to generate the dependency graph for the project ([#2](https://github.com/jerriep/dotnet-outdated/issues/2))\n- Scans all NuGet feeds configured for the project ([#7](https://github.com/jerriep/dotnet-outdated/issues/7))\n- Better reporting when running against incompatible project types ([#11](https://github.com/jerriep/dotnet-outdated/issues/11))\n- Allow you to lock to the current major or minor version ([#5](https://github.com/jerriep/dotnet-outdated/issues/5))\n\n## [v0.2.0]\n\n- Display column headers ([#1](https://github.com/jerriep/dotnet-outdated/issues/1))\n- Allow specifying whether to include pre-release versions ([#4](https://github.com/jerriep/dotnet-outdated/issues/4))\n- Fix bug when latest version cannot be found ([#10](https://github.com/jerriep/dotnet-outdated/issues/10))\n\n## [v0.1.0]\n\nInitial release\n\n- A .NET Core global tool to display outdated NuGet packages in a project\n\n[v4.1.0]: https://github.com/dotnet-outdated/dotnet-outdated/releases/tag/v4.1.0\n[v4.0.0]: https://github.com/dotnet-outdated/dotnet-outdated/releases/tag/v4.0.0\n[v3.2.1]: https://github.com/dotnet-outdated/dotnet-outdated/releases/tag/v3.2.1\n[v3.2.0]: https://github.com/dotnet-outdated/dotnet-outdated/releases/tag/v3.2.0\n[v3.1.1]: https://github.com/dotnet-outdated/dotnet-outdated/releases/tag/v3.1.1\n[v3.1.0]: https://github.com/dotnet-outdated/dotnet-outdated/releases/tag/v3.1.0\n[v3.0.2]: https://github.com/dotnet-outdated/dotnet-outdated/releases/tag/v3.0.2\n[v3.0.1]: https://github.com/dotnet-outdated/dotnet-outdated/releases/tag/v3.0.1\n[v3.0.0]: https://github.com/dotnet-outdated/dotnet-outdated/releases/tag/v3.0.0\n[v2.11.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.11.0\n[v2.10.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.10.0\n[v2.9.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.9.0\n[v2.8.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.8.0\n[v2.7.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.7.0\n[v2.6.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.6.0\n[v2.5.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.5.0\n[v2.4.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.4.0\n[v2.3.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.3.0\n[v2.2.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.2.0\n[v2.1.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.1.0\n[v2.0.0]: https://github.com/jerriep/dotnet-outdated/tree/v2.0.0\n[v1.3.0]: https://github.com/jerriep/dotnet-outdated/tree/v1.3.0\n[v1.2.0]: https://github.com/jerriep/dotnet-outdated/tree/v1.2.0\n[v1.1.0]: https://github.com/jerriep/dotnet-outdated/tree/v1.1.0\n[v1.0.0]: https://github.com/jerriep/dotnet-outdated/tree/v1.0.0\n[v0.3.0]: https://github.com/jerriep/dotnet-outdated/tree/v0.3.0\n[v0.2.0]: https://github.com/jerriep/dotnet-outdated/tree/v0.2.0\n[v0.1.0]: https://github.com/jerriep/dotnet-outdated/tree/v0.1.0"
        },
        {
          "name": "DotNetOutdated.sln",
          "type": "blob",
          "size": 4.4990234375,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.26124.0\r\nMinimumVisualStudioVersion = 15.0.26124.0\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{BD4D78F7-32FA-42D2-BF7B-6728F85EF2C6}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"DotNetOutdated\", \"src\\DotNetOutdated\\DotNetOutdated.csproj\", \"{532CD641-5978-43CB-B384-AF137C642323}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"DotNetOutdated.Core\", \"src\\DotNetOutdated.Core\\DotNetOutdated.Core.csproj\", \"{23C0491C-EE39-4ECF-A45E-962C01D50750}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"test\", \"test\", \"{ECC69204-F52B-4967-BDA1-884F70159D36}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"DotNetOutdated.Tests\", \"test\\DotNetOutdated.Tests\\DotNetOutdated.Tests.csproj\", \"{7859E458-8905-4E71-BF74-227888E1403B}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\t\tRelease|x64 = Release|x64\r\n\t\tRelease|x86 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B}.Release|x86.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{532CD641-5978-43CB-B384-AF137C642323} = {BD4D78F7-32FA-42D2-BF7B-6728F85EF2C6}\r\n\t\t{23C0491C-EE39-4ECF-A45E-962C01D50750} = {BD4D78F7-32FA-42D2-BF7B-6728F85EF2C6}\r\n\t\t{7859E458-8905-4E71-BF74-227888E1403B} = {ECC69204-F52B-4967-BDA1-884F70159D36}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2018 Jerrie Pelser\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.9970703125,
          "content": "[![Build Status](https://github.com/dotnet-outdated/dotnet-outdated/workflows/Release/badge.svg)](https://github.com/dotnet-outdated/dotnet-outdated/actions?workflow=Release)\n[![License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](LICENSE)\n[![NuGet Version](https://img.shields.io/nuget/v/dotnet-outdated-tool.svg)](https://www.nuget.org/packages/dotnet-outdated-tool/)\n![Nuget](https://img.shields.io/nuget/dt/dotnet-outdated-tool.svg)\n\n# dotnet-outdated\n\nThis is a continuation of the original `dotnet-outdated` tool created by Jerrie Pelser.\n\nIf you already have the original `dotnet-outdated` tool installed you need to\nrun `dotnet tool uninstall --global dotnet-outdated` before installing this\nversion.\n\n## Overview\n\nWhen using an IDE such as Visual Studio, it is easy to find out whether newer versions of the NuGet packages used by your project is available, by using the NuGet Package Manager. However, the .NET Core command-line tools do not provide a built-in way for you to report on outdated NuGet packages.\n\n**dotnet-outdated** is a .NET Core Global tool that allows you to quickly report on any outdated NuGet packages in your .NET Core and .NET Standard projects.\n\n- [dotnet-outdated](#dotnet-outdated)\n  - [Overview](#overview)\n  - [Installation](#installation)\n  - [Usage](#usage)\n  - [Specifying the path](#specifying-the-path)\n  - [Upgrading packages](#upgrading-packages)\n  - [Working with secure feeds](#working-with-secure-feeds)\n    - [Issues on macOS](#issues-on-macos)\n  - [Handling pre-release versions](#handling-pre-release-versions)\n  - [Locking to the current major or minor release](#locking-to-the-current-major-or-minor-release)\n  - [Reporting on transitive dependencies](#reporting-on-transitive-dependencies)\n  - [Failing when updates are available](#failing-when-updates-are-available)\n  - [Auto-references](#auto-references)\n  - [Saving results to a file](#saving-results-to-a-file)\n  - [Including and excluding packages](#including-and-excluding-packages)\n  - [Only listing new version of packages older than a specified the number of days](#only-listing-new-version-of-packages-older-than-a-specified-the-number-of-days)\n  - [FAQ](#faq)\n    - [Why are unrelated changes made to .csproj files when running with `-u`?](#why-are-unrelated-changes-made-to-csproj-files-when-running-with--u)\n    - [Why I am getting an error about required library hostfxr.dll/libhostfxr.so/libhostfxr.dylib not found?](#why-i-am-getting-an-error-about-required-library-hostfxrdlllibhostfxrsolibhostfxrdylib-not-found)\n\n## Installation\n\nDownload and install the one of the currently supported [.NET SDKs](https://www.microsoft.com/net/download). Once installed, run the following command:\n\n```bash\ndotnet tool install --global dotnet-outdated-tool\n```\n\nIf you already have a previous version of **dotnet-outdated** installed, you can upgrade to the latest version using the following command:\n\n```bash\ndotnet tool update --global dotnet-outdated-tool\n```\n\n## Usage\n\n```text\nUsage: dotnet outdated [options] <Path>\n\nArguments:\n  Path                                       The path to a .sln, .slnf, .csproj or .fsproj file, or to a directory containing a .NET Core solution/project. If none is specified, the current directory will be used.\n\nOptions:\n  --version                                  Show version information.\n  -?|-h|--help                               Show help information.\n  -i|--include-auto-references               Specifies whether to include auto-referenced packages.\n  -pre|--pre-release <PRERELEASE>            Specifies whether to look for pre-release versions of packages. Possible values: Auto (default), Always or Never.\n                                             Allowed values are: Auto, Always, Never.\n                                             Default value is: Auto.\n  -vl|--version-lock <VERSION_LOCK>          Specifies whether the package should be locked to the current Major or Minor version. Possible values: None (default), Major or Minor.\n                                             Allowed values are: None, Major, Minor.\n                                             Default value is: None.\n  -t|--transitive                            Specifies whether it should detect transitive dependencies.\n  -td|--transitive-depth <TRANSITIVE_DEPTH>  Defines how many levels deep transitive dependencies should be analyzed. Integer value (default = 1)\n                                             Default value is: 1.\n  -u|--upgrade[:<TYPE>]                      Specifies whether outdated packages should be upgraded. Possible values for <TYPE> is Auto (default) or Prompt.\n                                             Allowed values are: Auto, Prompt.\n  -f|--fail-on-updates                       Specifies whether it should return a non-zero exit code when updates are found.\n  -inc|--include <FILTER_INCLUDE>            Specifies to only look at packages where the name contains the provided string. Culture and case insensitive. If provided multiple times, a single match is enough to include a package.\n  -exc|--exclude <FILTER_EXCLUDE>            Specifies to only look at packages where the name does not contain the provided string. Culture and case insensitive. If provided multiple times, a single match is enough to exclude a package.\n  -o|--output <OUTPUT_FILENAME>              Specifies the filename for a generated report. (Use the -of|--output-format option to specify the format. JSON by default.)\n  -of|--output-format <OUTPUT_FILE_FORMAT>   Specifies the output format for the generated report. Possible values: json (default) or csv.\n                                             Allowed values are: Json, Csv, Markdown.\n                                             Default value is: Json.\n  -ot|--older-than <OLDER_THAN_DAYS>         Only include package versions that are older than the specified number of days.\n                                             Default value is: 0.\n  -n|--no-restore                            Add the reference without performing restore preview and compatibility check.\n  -r|--recursive                             Recursively search for all projects within the provided directory.\n  -ifs|--ignore-failed-sources               Treat package source failures as warnings.\n  -utd|--include-up-to-date                  Include all dependencies in the report even the ones not outdated.\n```\n\n![Screenshot of dotnet-outdated](screenshot.png)\n\n## Specifying the path\n\nYou can run **dotnet-outdated** without specifying the `Path` argument. In this case, it will look in the current directory for a solution (`.sln`) and if one is found it will analyze that solution. If no solution is found it will look for a project (`.csproj` or `.fsproj`) and if one is found it will analyze that project. If more than one solution or project is found in the current folder, **dotnet-outdated** will report an error.\n\nYou can also pass a directory in the `Path` argument, in which case the same logic described above will be used, but in the directory specified.\n\nLastly, you can specify the path to a solution (`.sln`) or project (`.csproj` or `.fsproj`) which **dotnet-outdated** must analyze.\n\n## Upgrading packages\n\n**dotnet-outdated** can automatically attempt to upgrade any outdated packages to the latest version by passing the `-u|--upgrade` option. You can let **dotnet-outdated** prompt you for each outdated package by using the `-u:prompt` option.\n\n## Working with secure feeds\n\n**dotnet-outdated** supports secure NuGet feeds, such as [MyGet](https://www.myget.org). It is suggested that you add these to your sources using the [source command of the NuGet CLI](https://docs.microsoft.com/en-us/nuget/tools/cli-ref-sources). For secure feeds, you can do one of the following:\n\n- Add a pre-authenticated URL.\n- Specify the username and password for the feed using the `-UserName` and `-Password` options of the `nuget sources` command.\n- Use a credential provider like [the Azure Artifacts credential provider](https://github.com/microsoft/artifacts-credprovider).\n\n**dotnet-outdated** supports computer-level, user-level and project-level configuration files.\n\nUsing credential providers requires an environment variable `DOTNET_HOST_PATH` that is set to the path to the `dotnet` executable (e.g., `/usr/local/share/dotnet/dotnet`). Some versions of the .NET Core SDK do this for you at runtime, some do not. You will get an error message explaining this if the process finds it missing.\n\n### Issues on macOS\n\nIn my testing, I ran into issues on macOS where the location of the user-level configuration file was not detected correctly. If you run into problems where **dotnet-outdated** does not appear to pick up your feeds correctly, please add the source to a project-level configuration file.\n\nAlso, on macOS and Linux, the password needs to be stored in clear text. You can do this by passing the `-StorePasswordInClearText` option to the `nuget sources` command.\n\n## Handling pre-release versions\n\n**dotnet-outdated** allows you to specify whether to use pre-release versions of packages or not by passing the `-pre|--pre-release` option.\n\nThe default value of `Auto` will determine whether to use pre-release versions of a package based on whether the referenced version itself is a pre-release version. If the referenced version is a pre-release version, **dotnet-outdated** will include newer pre-release versions of the package. If the referenced version is not a pre-release version, **dotnet-outdated** will ignore pre-release versions.\n\nYou can also tell **dotnet-outdated** to always include pre-release versions by passing the `Always` value for this option. Conversely, you can tell it to never include pre-release versions by passing the `Never` value.\n\n## Locking to the current major or minor release\n\n**dotnet-outdated** allows you to lock the version to the current major or minor version by passing the `-vl|--version-lock` option.\n\nThe default value of `None` will return the absolute latest package, regardless of whether it is a major or minor version upgrade.\n\nPassing a value of `Major` will only report on later packages in the current major version range. For example, if the current version for a package is `4.1.0`, **dotnet-outdated** will only report on later packages in the `4.x` version range.\n\nPassing a value of `Minor` will only report on later packages in the current minor version range. For example, if the current version for a package is `4.1.0`, **dotnet-outdated** will only report on later packages in the `4.1.x` version range.\n\n## Reporting on transitive dependencies\n\n**dotnet-outdated** supports reporting on transitive dependencies as well. These are NuGet packages on which the NuGet packages directly referenced by your application depends. To enable reporting on transitive dependencies, you can pass the `-t|--transitive` option.\n\n![Screenshot of analysing transitive-dependencies](transitive-screenshot.png)\n\nYou can also specify how many levels deep it should analyze transitive dependencies with the `-td|--transitive-depth` option. You can pass an integer value for this option (the default value is `1`).\n\n**Be careful with these options!**. If you try and analyze dependencies too many levels deep, the analysis can take a very long time.\n\n## Failing when updates are available\n\n**dotnet-outdated** can be easily incorporated into your build process. You can optionally enable a non-zero return code when updates are found to make failing a build easy to configure. To enable this option you can pass the `-f|--fail-on-updates` option.\n\n## Auto-references\n\nBefore version 1.2 of **dotnet-outdated**, it used to include automatically referenced packages in the output. The automatically referenced packages are typically your framework packages, such as `Microsoft.NETCore.App` or `NETStandard.Library`. It does not make sense reporting on these as outdated since you should target a new framework to have these updated.\n\nFrom version 1.2, if you want these packages reported, you can pass the `-i|--include-auto-references` option. These packages will also be denoted with the text **[A]** appearing in the output after the package name.\n\n## Saving results to a file\n\nYou can save the results of **dotnet-outdated** to a file by specifying the name of an output file using the `-o|--output` option. By default, the results will be saved in JSON format. You can specify an alternate format using the `-of|--output-format` option.\n\n## Including and excluding packages\n\nYou can choose to include only specific packages by using the `-inc|--include` option. Only packages whose name contain the specified value will be included. For example, if you only want to analyze packages containing the value \"microsoft\", you can use the command `dotnet outdated --include microsoft`. This option can be passed in multiple times: each package will be evaluated against all the filters. One single match is enough to include that package.\n\nConversely, you can exclude specific packages by using the `-exc|--exclude` option. In this case all packages will be analyzed except packages whose name contain the specified value. For example, if you want to exclude packages containing the value \"microsoft\", you can use the command `dotnet outdated --exclude microsoft`. This option can be passed in multiple times: each package will be evaluated against all filters. One single match is enough to exclude that package.\n\nPlease note that for both include and exclude, the comparison is culture and case insensitive.\n\n## Only listing new version of packages older than a specified the number of days\n\nThere are some packages that have new updates almost on daily basis, and it might slow down development and will break all CI builds if dotnet-outdated is integrated into the CI - so the development team needs to urgently react on every single update.\n\nThis command will let the developers finish their job and update the packages on their own pace.\n\nFor failing CI builds, a proposed protocol is to have another CI build which will be scheduled weekly to inform developers of new packages, and they will react accordingly.\n\nAlso, some companies/users do not feel comfortable jumping directly on the newest versions, as they might contain some bugs, and might want to wait for some time before updating to the newest package.\n\n## FAQ\n\n### Why are unrelated changes made to .csproj files when running with `-u`?\n\n`dotnet-outdated` does not make any changes to .csproj files directly. Instead, it runs `dotnet add package` to update packages, so that command is responsible for all changes made. To track issues related to this command, head over to the [.NET CLI repo](https://github.com/dotnet/cli)\n\n### Why I am getting an error about required library hostfxr.dll/libhostfxr.so/libhostfxr.dylib not found?\n\nIf you download the .NET Core CLI as a .zip/.tar.gz and extract it to a non default location, then you may encounter this error after installing and launching **dotnet-outdated**.\n\nYou can fix this error by setting the `DOTNET_ROOT` environment variable to point to the location of your .NET Core CLI installation. For more information, please refer to [this blog post](https://natemcmaster.com/blog/2018/05/12/dotnet-global-tools/#installing-the-net-core-cli-into-a-non-default-location).\n"
        },
        {
          "name": "screenshot.png",
          "type": "blob",
          "size": 38.93359375,
          "content": null
        },
        {
          "name": "semver.txt",
          "type": "blob",
          "size": 0.005859375,
          "content": "4.6.4\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "transitive-screenshot.png",
          "type": "blob",
          "size": 58.248046875,
          "content": null
        }
      ]
    }
  ]
}