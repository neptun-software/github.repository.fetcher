{
  "metadata": {
    "timestamp": 1736710666738,
    "page": 5,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "VeriorPies/ParrelSync",
      "stars": 4893,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3349609375,
          "content": "# This .gitignore file should be placed at the root of your Unity project directory\n#\n# Get latest from https://github.com/github/gitignore/blob/master/Unity.gitignore\n#\n/[Ll]ibrary/\n/[Tt]emp/\n/[Oo]bj/\n/[Bb]uild/\n/[Bb]uilds/\n/[Ll]ogs/\n/[Uu]ser[Ss]ettings/\n\n# MemoryCaptures can get excessive in size.\n# They also could contain extremely sensitive data\n/[Mm]emoryCaptures/\n\n# Asset meta data should only be ignored when the corresponding asset is also ignored\n!/[Aa]ssets/**/*.meta\n\n# Uncomment this line if you wish to ignore the asset store tools plugin\n# /[Aa]ssets/AssetStoreTools*\n\n# Autogenerated Jetbrains Rider plugin\n/[Aa]ssets/Plugins/Editor/JetBrains*\n\n# Visual Studio cache directory\n.vs/\n\n# JebBrains Idea directory\n.idea/\n\n# Gradle cache directory\n.gradle/\n\n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n*.mdb\n*.opendb\n*.VC.db\n\n# Unity3D generated meta files\n*.pidb.meta\n*.pdb.meta\n*.mdb.meta\n\n# Unity3D generated file on crash reports\nsysinfo.txt\n\n# Builds\n*.apk\n*.aab\n*.unitypackage\n\n# Crashlytics generated file\ncrashlytics-build.properties\n\n# Packed Addressables\n/[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*\n\n# Temporary auto-generated Android Assets\n/[Aa]ssets/[Ss]treamingAssets/aa.meta\n/[Aa]ssets/[Ss]treamingAssets/aa/*"
        },
        {
          "name": "Examples.meta",
          "type": "blob",
          "size": 0.16796875,
          "content": "fileFormatVersion: 2\nguid: 654be33bd44a76a4c8c180d1da6ad066\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "Images.meta",
          "type": "blob",
          "size": 0.16796875,
          "content": "fileFormatVersion: 2\nguid: 48414d84ef850864a8230f75a126e924\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "Images",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0810546875,
          "content": "MIT License\n\nCopyright (c) 2018 Greg M  \nCopyright (c) 2020 Ian and Contributors  \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LICENSE.md.meta",
          "type": "blob",
          "size": 0.1513671875,
          "content": "fileFormatVersion: 2\nguid: f4b327eab8d866e4087e166da8cafc09\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "ParrelSync.meta",
          "type": "blob",
          "size": 0.16796875,
          "content": "fileFormatVersion: 2\nguid: 8f5fec620d3bc9546a41a5b67cb9f8b6\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "ParrelSync",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.3466796875,
          "content": "# ParrelSync \n[![Release](https://img.shields.io/github/v/release/VeriorPies/ParrelSync)](https://github.com/VeriorPies/ParrelSync/releases) [![Documentation](https://img.shields.io/badge/documentation-brightgreen.svg)](https://github.com/VeriorPies/ParrelSync/wiki) [![License](https://img.shields.io/badge/license-MIT-green)](https://github.com/VeriorPies/ParrelSync/blob/master/LICENSE.md) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-blue.svg)](https://github.com/VeriorPies/ParrelSync/pulls) [![Chats](https://img.shields.io/discord/710688100996743200)](https://discord.gg/TmQk2qG)  \n\nParrelSync is a Unity editor extension that allows users to test multiplayer gameplay without building the project by having another Unity editor window opened and mirror the changes from the original project.\n\n<br>\n\n![ShortGif](https://raw.githubusercontent.com/VeriorPies/ParrelSync/master/Images/Showcase%201.gif)\n<p align=\"center\">\n<b>Test project changes on clients and server within seconds - both in editor\n</b>\n<br>\n</p>\n\n## Features\n1. Test multiplayer gameplay without building the project\n2. GUI tools for managing all project clones\n3. Protected assets from being modified by other clone instances\n4. Handy APIs to speed up testing workflows\n## Installation\n\n1. Backup your project folder or use a version control system such as [Git](https://git-scm.com/) or [SVN](https://subversion.apache.org/)\n2. Download .unitypackage from the [latest release](https://github.com/VeriorPies/ParrelSync/releases) and import it to your project. \n3.  ParrelSync should appreared in the menu item bar after imported\n![UpdateButtonInMenu](https://github.com/VeriorPies/ParrelSync/raw/master/Images/AfterImported.png)  \n\nCheck out the [Installation-and-Update](https://github.com/VeriorPies/ParrelSync/wiki/Installation-and-Update) page for more details.\n\n### UPM Package\nParrelSync can also be installed via UPM package.  \nAfter Unity 2019.3.4f1, Unity 2020.1a21, which support path query parameter of git package. You can install ParrelSync by adding the following to Package Manager.\n\n```\nhttps://github.com/VeriorPies/ParrelSync.git?path=/ParrelSync\n```  \n\n  \n![UPM_Image](https://github.com/VeriorPies/ParrelSync/raw/master/Images/UPM_1.png?raw=true) ![UPM_Image2](https://github.com/VeriorPies/ParrelSync/raw/master/Images/UPM_2.png?raw=true)\n  \nor by adding \n\n```\n\"com.veriorpies.parrelsync\": \"https://github.com/VeriorPies/ParrelSync.git?path=/ParrelSync\"\n``` \n\nto the `Packages/manifest.json` file \n\n\n## Supported Platform\nCurrently, ParrelSync supports Windows, macOS and Linux editors.  \n\nParrelSync has been tested with the following Unity version. However, it should also work with other versions as well.\n* *2021.3.29f1 LTS*\n* *2020.3.1f1 LTS*\n* *2019.3.0f6 LTS*\n\n\n## APIs\nThere's some useful APIs for speeding up the multiplayer testing workflow.\nHere's a basic example: \n```\nif (ClonesManager.IsClone()) {\n  // Automatically connect to local host if this is the clone editor\n}else{\n  // Automatically start server if this is the original editor\n}\n```\nCheck out [the doc](https://github.com/VeriorPies/ParrelSync/wiki/List-of-APIs) to view the complete API list.\n\n## How does it work?\nFor each clone instance, ParrelSync will make a copy of the original project folder and reference the ```Asset```, ```Packages``` and ```ProjectSettings``` folder back to the original project with [symbolic link](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mklink). Other folders such as ```Library```, ```Temp```, and ```obj``` will remain independent for each clone project.\n\nAll clones are placed right next to the original project with suffix *```_clone_x```*, which will be something like this in the folder hierarchy. \n```\n/ProjectName\n/ProjectName_clone_0\n/ProjectName_clone_1\n...\n```\n## Discord Server\nWe have a [Discord server](https://discord.gg/TmQk2qG).\n\n## Need Help?\nSome common questions and troubleshooting can be found under the [Troubleshooting & FAQs](https://github.com/VeriorPies/ParrelSync/wiki/Troubleshooting-&-FAQs) page.  \nYou can also [create a question post](https://github.com/VeriorPies/ParrelSync/issues/new/choose), or ask on [Discord](https://discord.gg/TmQk2qG) if you prefer to have a real-time conversation.\n\n## Support this project \nA star will be appreciated :)\n\n## Credits\nThis project is originated from hwaet's [UnityProjectCloner](https://github.com/hwaet/UnityProjectCloner)\n"
        },
        {
          "name": "README.md.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: fa3f2fa6aced9b54b970c8996957df3b\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        },
        {
          "name": "VERSION.txt",
          "type": "blob",
          "size": 0.0048828125,
          "content": "1.5.2"
        },
        {
          "name": "VERSION.txt.meta",
          "type": "blob",
          "size": 0.154296875,
          "content": "fileFormatVersion: 2\nguid: 9833b240625d4e14995c296b87e34b96\nTextScriptImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"
        }
      ]
    }
  ]
}