{
  "metadata": {
    "timestamp": 1736710697718,
    "page": 69,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "inkle/ink",
      "stars": 4183,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.6689453125,
          "content": "#Autosave files\n*~\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n\npackages/\n\n\n# globs\nMakefile.in\n*.DS_Store\n*.sln.cache\n*.suo\n*.cache\n*.pidb\n*.userprefs\n*.usertasks\nconfig.log\nconfig.make\nconfig.status\naclocal.m4\ninstall-sh\nautom4te.cache/\n*.user\n*.tar.gz\ntarballs/\ntest-results/\nThumbs.db\n\n#Mac bundle stuff\n*.dmg\n*.app\n\n#resharper\n*_Resharper.*\n*.Resharper\n\n#dotCover\n*.dotCover\n\nReleaseBinary\nBuildForInky\nPerformanceReports\nRuntimeDLL\n\n\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n.ionide/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.89453125,
          "content": "dist: bionic\naddons:\n  snaps:\n    - name: powershell\n      confinement: classic\nlanguage: csharp\nsolution: ink.sln\nmono: none\ndotnet: 6.0\ncache:\n  directories:\n    - /home/travis/.nuget/packages/\nscript:\n  - dotnet test tests/tests.csproj\n  - pwsh -File ./publish-nuget.ps1\n\n# you can define following variables in the web interface, NOT in this file:\n#   RELEASE_BRANCH to specify what branch should be considered a release branch (optional, default is master)\n#   for nightly builds:\n#     NIGHTLY_FEED_SOURCE_URL and NIGHTLY_FEED_APIKEY (e.g. https://www.myget.org/F/13xforever-inkle-ink-engine/)\n#     PUBLISH_MASTER_BUILDS = true (to also build and push every new commit in master branch)\n#   for release builds:\n#     RELEASE_FEED_SOURCE_URL and RELEASE_FEED_APIKEY (e.g. https://www.nuget.org/)\n# release will be build if commit has version tag, using that version tag\n# see .travis.build_nuget.sh for details"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "Epic_MegaGrants_Recipient_logo_horizontal.png",
          "type": "blob",
          "size": 5.96484375,
          "content": null
        },
        {
          "name": "InkTestBed",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2025 inkle Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.1650390625,
          "content": "# ink\n\n[![CI Status](http://img.shields.io/travis/inkle/ink.svg?style=flat)](https://travis-ci.org/inkle/ink)\n\n[Ink](http://www.inklestudios.com/ink) is [inkle](http://www.inklestudios.com/)'s scripting language for writing interactive narrative, both for text-centric games as well as more graphical games that contain highly branching stories. It's designed to be easy to learn, but with powerful enough features to allow an advanced level of structuring.\n\nHere's a taster [from the tutorial](https://github.com/inkle/ink/blob/master/Documentation/WritingWithInk.md).\n\n    - I looked at Monsieur Fogg \n    *   ... and I could contain myself no longer.\n        'What is the purpose of our journey, Monsieur?'\n        'A wager,' he replied.\n        * *     'A wager!'[] I returned.\n                He nodded. \n                * * *   'But surely that is foolishness!'\n                * * *  'A most serious matter then!'\n                - - -   He nodded again.\n                * * *   'But can we win?'\n                        'That is what we will endeavour to find out,' he answered.\n                * * *   'A modest wager, I trust?'\n                        'Twenty thousand pounds,' he replied, quite flatly.\n                * * *   I asked nothing further of him then[.], and after a final, polite cough, he offered nothing more to me. <>\n        * *     'Ah[.'],' I replied, uncertain what I thought.\n        - -     After that, <>\n    *   ... but I said nothing[] and <> \n    - we passed the day in silence.\n    - -> END\n\n\n\n# Getting started\n\n**Download [Inky, our ink editor](https://github.com/inkle/inky), and the follow either:**\n\n * [The basics tutorial](https://www.inklestudios.com/ink/web-tutorial/) if you're non-technical and/or if you'd like to use ink to make a web-based interactive fiction game\n *  [The full tutorial](https://github.com/inkle/ink/blob/master/Documentation/WritingWithInk.md) if you want to see everything that ink has to offer.\n\n\nFor those who are very technically-minded, you can also use *inklecate* directly, our ink command line compiler (and player).\n\nTo keep up to date with the latest news about ink [sign up for the mailing list](http://www.inklestudios.com/ink#signup).\n\n## Writing with Unity\n\n* Download the latest [ink-unity-integration package](https://github.com/inkle/ink-unity-integration), or grab it from the Unity AssetStore, and place in your project.\n* Create a `.ink` text file such as `myStory.ink`, containing the text `Hello, world!`.\n* Select the file in Unity, and you should see a *Play* button in the file's inspector.\n* Click it, and you should get an Editor window that lets you play (preview) your story.\n* Follow the tutorial: [Writing with Ink](https://github.com/inkle/ink/blob/master/Documentation/WritingWithInk.md).\n\n## Ink, Inky, ink-unity-integration, inkjs, inklecate, inkle oh my!\n\n* [Ink](https://www.inklestudios.com/ink) is the core narrative engine itself, written in C#. It includes the code for the compiler. If you're not technical, you don't need to worry about this.\n* [Inky](https://www.github.com/inkle/inky) is our ink editor, which is a text editor with support for playing as you write. If you're just starting out with ink, this is all you need.\n* [ink-unity-integration](https://www.github.com/inkle/ink-unity-integration) is a plugin to allow you integrate the ink engine with a Unity game. It includes the full Ink engine source.\n* **inklecate** is a command-line compiler for ink. Inky uses it behind the scenes.\n* [inkjs](https://github.com/y-lohse/inkjs) is a JavaScript port of the ink engine, useful for powering web-based game. This is included when you export a story for web within Inky.\n* [inkle](https://www.inklestudios.com) is the game development studio that created ink\n* [inklewriter](https://www.inklewriter.com) is an unrelated interactive story creation tool that designed to be easy to use, but is far less powerful. It's possible to export inklewriter stories to ink, but not vice versa.\n\n### What you need if you are a:\n\n* **Writer**: Inky\n* **Unity game developer**: ink-unity-integration plugin. Optionally, Inky if you're reading/writing the ink too.\n* **Web-game author**: Inky\n\n### Versioning\n\nThe intention is the following:\n\n- Each latest ink/inky/ink-unity-integration release on each Github release page should work together. Ink and Inky version *numbering* are separate though. You can see which version of the ink engine Inky has in the About box.\n- ink / ink-unity-integration should effectively have the same version of the same engine, except that the integration might have additional Unity-specific extra minor releases. Their X.0.0 and 0.Y.0 version numbers should match. The 0.0.Z version number in ink-unity-integration may diverge to reflect Unity-specific changes.\n- inkjs is maintained by the community (primarily @y-lohse and @ephread). It's usually one major version behind the main ink engine, but they work hard to catch up after each release!\n- The ink engine also has story-format and save-format versions that are internal to the code (see Story.cs and StoryState.cs).\n\n\n\n## Advanced: Using inklecate on the command line\n\n * [Download the latest version of **inklecate**](https://github.com/inkle/ink/releases) (or build it yourself, see below.)\n * Create a text file called `myStory.ink`, containing the text `Hello, world!`.\n * On the command line, run the following:\n\n    **Mac or Linux:** `./inklecate -p myStory.ink`\n    \n    **Windows:** `inklecate.exe -p myStory.ink`\n\n    The `-p` option uses play mode so that you can see the result immediately. If you want to get a compiled `.json` file, just remove the `-p` option from the examples above.\n    \n * Follow the tutorial: [Writing with Ink](https://github.com/inkle/ink/blob/master/Documentation/WritingWithInk.md).\n\n## Integrating into your game\n\n*Full article: see [Running Your Ink](https://github.com/inkle/ink/blob/master/Documentation/RunningYourInk.md).*\n\n*For a sample Unity project, see [The Intercept](http://www.inklestudios.com/ink/theintercept).*\n\nInk comes with a C#-based (or [JavaScript-based](https://www.github.com/y-lohse/inkjs) runtime engine that can load and run a compiled ink story in JSON format.\n\nTo compile the ink, either export from Inky (File -> Export to JSON). Or if you're using Unity, you can use the [ink-unity-integration package](https://github.com/inkle/ink-unity-integration) which will automatically compile your ink for you whenever you edit it either in Inky or in an editor of your choice.\n\n*Advanced: You can also use the inklecate command line tool to compile ink stories, or you can call the compiler from C# code yourself.*\n\n**ink** isn't designed as an end-to-end narrative game engine. Rather, it's designed to be flexible, so that it can slot into your own game and UI with ease. Here's a taster of the code you need to get started:\n\n    using Ink.Runtime;\n    \n    // 1) Load story\n    _story = new Story(sourceJsonString);\n    \n    // 2) Game content, line by line\n    while(_story.canContinue)\n        Debug.Log(story.Continue());\n    \n    // 3) Display story.currentChoices list, allow player to choose one\n    Debug.Log(_story.currentChoices[0].text);\n    _story.ChooseChoiceIndex(0);\n    \n    // 4) Back to 2\n    ...\n\n\n\n# The development of ink\n\n## Build Requirements\n\n**All Environments:**\n * [.NET SDK 6.0](https://dotnet.microsoft.com/download) or newer\n * Optionally [Visual Studio Code](https://code.visualstudio.com/)\n\n\n**Windows (Optional):**\n    \n * [Visual Studio](https://www.visualstudio.com/) (e.g. Community edition); required to build nuget package with multi-targeting of .NET Framework 3.5\n * [Xamarin](https://xamarin.com/download), or Unity's own version of MonoDevelop\n   \n**Mac (Optional):**\n    \n * [Visual Studio for Mac](https://www.visualstudio.com/)\n * [Xamarin](https://xamarin.com/download), or Unity's own version of MonoDevelop\n\n### Building with Visual Studio\n\n1. Load up the solution file - `ink.sln`.\n2. Select the *Release* configuration and choose *Build -> Build All* (or *Build Solution* in Visual Studio).\n3. The compiler binary should be built in `inklecate/bin/Release` (or `x86`), while the runtime engine DLL will be built in `ink-engine-dll/bin/Release/ink-engine.dll`\n\n### Building with command-line\n\n1. `cd` to the project you want to build (e.g., `cd inklecate`)\n2. Build using dotnet: `dotnet build -c Release`\n3. To run console apps: `dotnet run -c Release`\n    * To produce self-contained executable: `dotnet publish -r win-x64 -c Release --self-contained`\n    * [Recommended RIDs](https://docs.microsoft.com/en-us/dotnet/core/rid-catalog) for the platform (`-r`) are: `win-x64`, `linux-x64`, and `osx-x64`\n\n\nTo run the binaries, you need to install [.NET Runtime 6.0]((https://dotnet.microsoft.com/download)) or newer (included in SDK).\n\n## Need help?\n\n* [Discord](https://discord.gg/inkle) - we have an active community of ink users who would be happy to help you out. Discord is probably the best place to find the answer to your question.\n* [GitHub Discussions](https://github.com/inkle/ink/discussions) - Or, you can ask a question here on GitHub. (Note: we used to use Issues for general Q&A, but we have now migrated.)\n\n## How to contribute\n\nWe’d of course appreciate any bug fixes you might find - feel free to submit a pull request. However, usually we're actively working on a game, so it might take a little while for us to take a look at a non-trivial pull request. Apologies in advance if it takes a while to get a response!\n\n## Architectural overview\n\nSee the [architectural overview documentation](https://github.com/inkle/ink/blob/master/Documentation/ArchitectureAndDevOverview.md) for information about the pipeline of the **ink** engine, and a birds-eye view of the project's code structure.\n\n# License\n\n**ink** is released under the [MIT license](https://github.com/inkle/ink/blob/master/LICENSE.txt). Although we don't require attribution, we'd love to know if you decide to use **ink** a project! Let us know on [Twitter](http://www.twitter.com/inkleStudios) or [by email](mailto:info@inklestudios.com).\n\n# Support us!\n\n**ink** is free forever, but represents multiple years of thought, design, development and testing. Please consider supporting us via [Patreon](http://www.patreon.com/inkle). Thank you, and have fun!\n\n![](Epic_MegaGrants_Recipient_logo_horizontal.png)\n"
        },
        {
          "name": "Sublime3Syntax",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_for_inky.command",
          "type": "blob",
          "size": 0.861328125,
          "content": "cd \"`dirname \"$0\"`\"\n\n# Build for each platform\ndotnet publish -c Release -r win-x86 --self-contained true /p:PublishTrimmed=false /p:PublishSingleFile=true -o BuildForInky inklecate/inklecate.csproj\nmv BuildForInky/inklecate.exe BuildForInky/inklecate_win.exe\n\ndotnet publish -c Release -r osx-x64 --self-contained true /p:PublishTrimmed=false /p:PublishSingleFile=true -o BuildForInky inklecate/inklecate.csproj\nmv BuildForInky/inklecate BuildForInky/inklecate_mac\n\ndotnet publish -c Release -r linux-x64 --self-contained true /p:PublishTrimmed=false /p:PublishSingleFile=true -o BuildForInky inklecate/inklecate.csproj\nmv BuildForInky/inklecate BuildForInky/inklecate_linux\n\n\n# Copy the runtime and compiler debug symbols in\ncp ink-engine-runtime/bin/Release/netstandard2.0/ink-engine-runtime.pdb BuildForInky/\ncp compiler/bin/Release/netstandard2.0/ink_compiler.pdb BuildForInky/"
        },
        {
          "name": "build_release.command",
          "type": "blob",
          "size": 1.244140625,
          "content": "cd \"`dirname \"$0\"`\"\n\n# Build the release code; this will create self-sufficient single binary\n#dotnet build -c Release inklecate/inklecate.csproj\ndotnet publish -c Release -r win-x86 --self-contained true /p:PublishTrimmed=false /p:PublishSingleFile=true -o ReleaseBinary/inklecate/win32 inklecate/inklecate.csproj\ndotnet publish -c Release -r linux-x64 --self-contained true /p:PublishTrimmed=false /p:PublishSingleFile=true -o ReleaseBinary/inklecate/lin64 inklecate/inklecate.csproj\ndotnet publish -c Release -r osx-x64 --self-contained true /p:PublishTrimmed=false /p:PublishSingleFile=true -o ReleaseBinary/inklecate/osx64 inklecate/inklecate.csproj\n\n# Simply zip up inklecate executable and the DLLs together for each platform\nruntimeAndCompilerDLLs=\"ink-engine-runtime/bin/Release/netstandard2.0/ink-engine-runtime.dll compiler/bin/Release/netstandard2.0/ink_compiler.dll\"\nzip --junk-paths ReleaseBinary/inklecate_windows.zip ReleaseBinary/inklecate/win32/inklecate.exe $runtimeAndCompilerDLLs\nzip --junk-paths ReleaseBinary/inklecate_linux.zip  ReleaseBinary/inklecate/lin64/inklecate $runtimeAndCompilerDLLs\nzip --junk-paths ReleaseBinary/inklecate_mac.zip  ReleaseBinary/inklecate/osx64/inklecate $runtimeAndCompilerDLLs\n\n# Clean up\nrm -rf ReleaseBinary/inklecate\n"
        },
        {
          "name": "cleanup-binobj.ps1",
          "type": "blob",
          "size": 0.21484375,
          "content": "$binobj = @(Get-ChildItem .\\ -Recurse -Depth 3 -Attributes Directory -Include bin, obj)\nforeach ($d in $binobj)\n{\n    Write-Host \"Removing $($d.FullName)\"\n    Remove-Item $d.FullName -Recurse -Force -ErrorAction Ignore\n}"
        },
        {
          "name": "compiler",
          "type": "tree",
          "content": null
        },
        {
          "name": "ink-engine-runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "ink.sln",
          "type": "blob",
          "size": 9.0947265625,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 16\r\nVisualStudioVersion = 16.0.28606.126\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"inklecate\", \"inklecate\\inklecate.csproj\", \"{D10ED1A8-CF83-4E58-B505-3714B3A16215}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"tests\", \"tests\\tests.csproj\", \"{C48016BB-CF8B-4357-B052-E4DC63AED06B}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E} = {F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ink-engine-runtime\", \"ink-engine-runtime\\ink-engine-runtime.csproj\", \"{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ink_compiler\", \"compiler\\ink_compiler.csproj\", \"{52E3F3D0-2702-44E5-82F5-783B82647CA5}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E} = {F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"InkTestBed\", \"InkTestBed\\InkTestBed.csproj\", \"{714B52DE-576A-4760-BA2E-F8483DD2CAAA}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{C5E94A09-51F0-4936-896B-571A1BECDC2C}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\t.travis.yml = .travis.yml\r\n\t\tbuild_for_inky.command = build_for_inky.command\r\n\t\tbuild_release.command = build_release.command\r\n\t\tcleanup-binobj.ps1 = cleanup-binobj.ps1\r\n\t\tprofiler.command = profiler.command\r\n\t\tpublish-nuget.ps1 = publish-nuget.ps1\r\n\t\tREADME.md = README.md\r\n\tEndProjectSection\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tInkTestBed|Any CPU = InkTestBed|Any CPU\r\n\t\tInkTestBed|x86 = InkTestBed|x86\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\t\tRelease|x86 = Release|x86\r\n\t\tTest|Any CPU = Test|Any CPU\r\n\t\tTest|x86 = Test|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.InkTestBed|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.InkTestBed|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.InkTestBed|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.InkTestBed|x86.Build.0 = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Test|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Test|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Test|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{D10ED1A8-CF83-4E58-B505-3714B3A16215}.Test|x86.Build.0 = Debug|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.InkTestBed|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.InkTestBed|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.InkTestBed|x86.ActiveCfg = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.InkTestBed|x86.Build.0 = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Test|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Test|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Test|x86.ActiveCfg = Release|Any CPU\r\n\t\t{C48016BB-CF8B-4357-B052-E4DC63AED06B}.Test|x86.Build.0 = Release|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.InkTestBed|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.InkTestBed|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.InkTestBed|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.InkTestBed|x86.Build.0 = Debug|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Test|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Test|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Test|x86.ActiveCfg = Release|Any CPU\r\n\t\t{F68D0EE2-1831-4A06-8FFA-CBD0315EFD0E}.Test|x86.Build.0 = Release|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.InkTestBed|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.InkTestBed|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.InkTestBed|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.InkTestBed|x86.Build.0 = Debug|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Test|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Test|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Test|x86.ActiveCfg = Release|Any CPU\r\n\t\t{52E3F3D0-2702-44E5-82F5-783B82647CA5}.Test|x86.Build.0 = Release|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.InkTestBed|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.InkTestBed|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.InkTestBed|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.InkTestBed|x86.Build.0 = Debug|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Test|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Test|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Test|x86.ActiveCfg = Release|Any CPU\r\n\t\t{714B52DE-576A-4760-BA2E-F8483DD2CAAA}.Test|x86.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {E8066D74-DC23-4577-8A19-C5FC1AEC1E64}\r\n\tEndGlobalSection\r\n\tGlobalSection(MonoDevelopProperties) = preSolution\r\n\t\tPolicies = $0\r\n\t\t$0.DotNetNamingPolicy = $1\r\n\t\t$1.DirectoryNamespaceAssociation = None\r\n\t\t$1.ResourceNamePolicy = FileFormatDefault\r\n\t\t$0.TextStylePolicy = $2\r\n\t\t$2.FileWidth = 120\r\n\t\t$2.TabsToSpaces = False\r\n\t\t$2.inheritsSet = VisualStudio\r\n\t\t$2.inheritsScope = text/plain\r\n\t\tStartupItem = inklecate\\inklecate.csproj\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "inklecate",
          "type": "tree",
          "content": null
        },
        {
          "name": "profiler.command",
          "type": "blob",
          "size": 0.3544921875,
          "content": "cd \"`dirname \"$0\"`\"\nmono --profile=log:output=output.mlpd inklecate/bin/Release/net6.0/inklecate.dll -s > report-in-progress.txt\necho \"----------------------------\" >> report-in-progress.txt\nmprof-report --verbose output.mlpd >> report-in-progress.txt  # use --time=10.0-20.0 to select a particular time period\nrm output.mlpd\nmv report-in-progress.txt report.txt\n"
        },
        {
          "name": "publish-nuget.ps1",
          "type": "blob",
          "size": 3.6416015625,
          "content": "#!/bin/pwsh\n\n# do not bother with pull requests\nif ($env:TRAVIS_PULL_REQUEST -ne \"false\") {\n    Write-Host \"Skipping NuGet publish on pull request\"\n    exit 0 \n}\n\n# set release branch to master by default\n$releaseBranch = $env:RELEASE_BRANCH\nif (\"$releaseBranch\" -eq \"\") {\n    $releaseBranch = \"master\"\n}\n\n# check if we're building a tagged release build\n$tag = \"$($env:TRAVIS_TAG)\"\nif ((\"$($env:TRAVIS_BRANCH)\" -ne $tag) -and (\"$($env:TRAVIS_BRANCH)\" -ne $releaseBranch)) {\n    Write-Host \"Skipping NuGet publish for the branch $($env:TRAVIS_BRANCH)\"\n    exit 0\n}\n\n# extract version number in case it has prefix (like v1.2.3)\nif (($tag -ne \"\") -and ($tag -match '\\d+(\\.\\d+)+$')) {\n    $tag = $Matches[0]\n}\n\n# delete existing nuget packages, although this should never happen on travis\nif ((Test-Path ink-engine-runtime/bin/Release) -and (@(Get-ChildItem ink-engine-runtime/bin/Release/*.nupkg).Count -gt 0)) {\n    Remove-Item ink-engine-runtime/bin/Release/*.nupkg\n}\n\nif ($tag -eq \"\") {\n    # if it's not a tagged build, then it's either a nightly or a master push\n    $feedUrl = \"$($env:NIGHTLY_FEED_SOURCE_URL)\"\n    $apiKey = \"$($env:NIGHTLY_FEED_APIKEY)\"\n    if (($feedUrl -eq \"\") -or ($apiKey -eq \"\")) {\n        Write-Host \"Nightly feed is not set up, skipping pre-release build\"\n        exit 0\n    }\n\n    # check if it's a scheduled nightly build\n    if ($env:TRAVIS_EVENT_TYPE -eq \"cron\") {\n        # check if there were any commits in the last 24 hours\n        $commits = \"$(git log -1 --since=1.day --pretty=format:\"%h %s\")\"\n        $suffix = \"\"\n        if ($commits -ne \"\") {\n            Write-Host \"Found commit: $commits\"\n            $timestamp = [DateTime]::UtcNow.ToString(\"yyMMddHH\")\n            $suffix = \"nightly-$timestamp\"\n        }\n    }\n    elseif (\"$($env:PUBLISH_MASTER_BUILDS)\" -eq \"true\") {\n        $timestamp = [DateTime]::UtcNow.ToString(\"yyMMddHHmmss\")\n        $suffix = \"master-$timestamp\"\n    }\n    if (\"$suffix\" -eq \"\") {\n        Write-Host \"Skipping publishing the pre-release build\"\n        exit 0\n    }\n\n    # get the latest tag in the branch history\n    $tag = \"$(git describe --tags $(git rev-list --tags --max-count=1))\"\n    # extract version number in case it has prefix (like v1.2.3)\n    if (($tag -ne \"\") -and ($tag -match '\\d+(\\.\\d+)+$')) {\n        $tag = $Matches[0]\n    }\n    if ($tag -ne \"\") {\n        Write-Host \"Building a pre-release build $tag-$suffix...\"\n        dotnet pack -c Release /p:VersionPrefix=$tag --version-suffix \"$suffix\" ink-engine-runtime/ink-engine-runtime.csproj\n    } else {\n        Write-Host \"Building a pre-release build $suffix...\"\n        dotnet pack -c Release --version-suffix \"$suffix\" ink-engine-runtime/ink-engine-runtime.csproj\n    }\n    if ($LASTEXITCODE -ne 0) {\n        exit $LASTEXITCODE\n    }\n\n    Write-Host \"Publishing pre-release build...\"\n    $packageName = @(Get-ChildItem ink-engine-runtime/bin/Release/*.nupkg)[0]\n}\nelse {\n    # tagged build will only happen on a tag push, so this means we're building a release package\n    $feedUrl = \"$($env:RELEASE_FEED_SOURCE_URL)\"\n    $apiKey = \"$($env:RELEASE_FEED_APIKEY)\"\n    if (($feedUrl -eq \"\") -or ($apiKey -eq \"\")) {\n        Write-Host \"Release feed is not set up, skipping release build\"\n        exit 0\n    }\n\n    Write-Host \"Building a release build...\"\n    dotnet pack -c Release /p:VersionPrefix=$tag ink-engine-runtime/ink-engine-runtime.csproj\n    if ($LASTEXITCODE -ne 0) {\n        exit $LASTEXITCODE\n    }\n\n    Write-Host \"Publishing release build...\"\n    $packageName = @(Get-ChildItem ink-engine-runtime/bin/Release/*.nupkg)[0]\n}\nWrite-Host \"Pushing package $($packageName.FullName)...\"\ndotnet nuget push $packageName.FullName --api-key $apiKey --source $feedUrl\nexit $LASTEXITCODE\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "written-in-ink-logos",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}