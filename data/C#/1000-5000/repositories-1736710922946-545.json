{
  "metadata": {
    "timestamp": 1736710922946,
    "page": 545,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jasonhua95/awesome-dotnet-core",
      "stars": 1993,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2019 华营杰\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Program.cs",
          "type": "blob",
          "size": 0.205078125,
          "content": "using System;\n\nnamespace AwesomeDotNetCore\n{\n    internal class Program\n    {\n        private static void Main(string[] args)\n        {\n            Console.WriteLine(\"This is C# repository.\");\n        }\n    }\n}"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 100.57421875,
          "content": "# 说明\n此项目是[awesome-dotnet-core](https://github.com/thangchung/awesome-dotnet-core)中文版，根据个人对项目的理解进行说明，有些是google翻译，有空会继续修改，如有错误，欢迎指正。  \n最后一次同步时间：2021-02-08（每月同步一次）  \n      \n[国内](README_CN.md)  | [中文](README.md)  | [English](README_EN.md) \n    \n> 国内：国内优秀的库，框架，工具，软件，播客，公众号等。  \n> 中文：英文awesome-dotnet-core的翻译版本  \n> English：英文awesome-dotnet-core  \n\n# Awesome .NET Core [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\n灵感来自[awesome](https://github.com/sindresorhus/awesome), [awesome-dotnet](https://github.com/quozd/awesome-dotnet),  [awesome-nodejs](https://github.com/sindresorhus/awesome-nodejs), [frontend-dev-bookmarks](https://github.com/dypsilon/frontend-dev-bookmarks).\n\n永远欢迎贡献! 请先查看[贡献准则](https://github.com/thangchung/awesome-dotnet-core/blob/master/contributing.md). 我们也接受专有和商业软件.\n\n感谢所有的[贡献者](https://github.com/thangchung/awesome-dotnet-core/graphs/contributors), 没有你的参与awesome的创建将不能想象! 此项目的目的是建立一个以社区驱动的知名的资源分类集合。\n\n查看我的[博客](https://medium.com/@thangchung) 或者在[Twitter](https://twitter.com/thangchung)打声招呼!\n\n## 内容\n* [一般](#一般)\n* [框架, 库和工具](#框架-库和工具)\n  * [API](#api)\n  * [应用程序框架](#应用程序框架)\n  * [应用程序模板](#应用程序模板)\n  * [身份认证和授权](#身份认证和授权)\n  * [区块链](#区块链)\n  * [机器人](#机器人)\n  * [自动部署](#自动部署)\n  * [css, js帮助工具](#css-js帮助工具)\n  * [缓存](#缓存)\n  * [内容管理系统CMS](#cms)\n  * [代码分析和指标](#代码分析和指标)  \n  * [压缩](#压缩)\n  * [编译器](#编译器)\n  * [密码](#密码)\n  * [数据库](#数据库)\n  * [数据库驱动程序](#数据库驱动程序)\n  * [数据库工具库](#数据库工具库)\n  * [日期和时间](#日期和时间)\n  * [分布式计算](#分布式计算)\n  * [电子商务与计算](#电子商务与计算)\n  * [异常](#异常)\n  * [响应式编程](#响应式编程)\n  * [图片](#图片)\n  * [图形用户界面GUI](#图形用户界面gui)\n  * [集成开发环境IDE](#集成开发环境ide)\n  * [国际化](#国际化)\n  * [控制反转IOC](#控制反转ioc)\n  * [日志](#日志)\n  * [机器学习和科学研究](#机器学习和科学研究)\n  * [邮件](#邮件)\n  * [数学](#数学)\n  * [网络](#网络)\n  * [大杂烩](#大杂烩)\n  * [办公软件](#办公软件)\n  * [对象关系映射ORM](#对象关系映射orm)\n  * [分析](#分析)\n  * [消息队列](#消息队列)\n  * [sql生成器](#sql生成器)\n  * [任务计划](#任务计划])\n  * [开发工具包SDKs](#开发工具包sdks)\n  * [安全](#安全)\n  * [搜索](#搜索)\n  * [序列化](#序列化)\n  * [模板引擎](#模板引擎)\n  * [测试](#测试)\n  * [工具](#工具)\n  * [Web框架](#Web框架)\n  * [Web Socket](#web-socket)\n  * [Windows服务](#windows服务)\n  * [工作流](#工作流)\n* [线路图](#线路图)\n* [入门套件](#入门套件)\n* [例子](#例子)\n* [文章](#文章)\n* [书籍](#书籍)\n* [备忘录](#备忘录)\n* [视频学习](#视频学习)\n* [视频播客](#视频播客)\n* [社区](#社区)\n* [组织](#组织)\n\n## 一般\n\n* [ASP.NET Core Documentation](https://docs.asp.net/en/latest/) - 官方ASP.NET核心文档站点。\n* [.NET Core Documentation](https://docs.microsoft.com/en-us/dotnet/articles/welcome) - .NET Core，C#，F#和Visual Basic技术文档的主页，包括基本概念，入门说明，教程和示例。\n* [.NET Core SDK](https://www.microsoft.com/net/core) -  .NET Core SDK是由Microsoft和.NET社区在[GitHub](https://github.com/dotnet/core)上维护的通用开发平台。\n* [.NET Platform Standard](https://github.com/dotnet/corefx/blob/1719a3fe2a5c81b67a4909787da4a02fb0d0d419/Documentation/architecture/net-platform-standard.md) - 旧版本和新版本的.NET之间存在差异。\n* [Introducing .NET Standard 2.0](https://blogs.msdn.microsoft.com/dotnet/2016/09/26/introducing-net-standard) - 介绍.NET Standard 2.0的内容和当前.NET标准中某些缺失部分的路线图。\n* [.NET/.NET Core代码整洁](https://github.com/thangchung/clean-code-dotnet) - 适用于.NET / .NET Core的代码整洁。\n* [.NET Framework源码](https://referencesource.microsoft.com/)\n\n## 框架, 库和工具\n\n### API\n\n* [autorest](https://github.com/Azure/autorest) -  Swagger(OpenAPI)规范代码生成器，具有C#和Razor模板。支持C#，Java，Node.js，TypeScript，Python和Ruby。\n* [aspnet-api-versioning](https://github.com/Microsoft/aspnet-api-versioning) - 提供一组库，这些库可将服务API版本添加到ASP.NET Web API，具有ASP.NET Web API的OData和ASP.NET Core。\n* [AspNetCoreRateLimit](https://github.com/stefanprodan/AspNetCoreRateLimit) -  ASP.NET限速中间件。\n* [CondenserDotNet](https://github.com/Drawaes/CondenserDotNet) - 使用Kestrel和Consul的API Condenser / Reverse Proxy，包括轻量级consul库。\n* [Flurl](https://github.com/tmenier/Flurl) - 适用于.NET的Fluent URL构建器和可测试的HTTP。\n* GraphQL\n  * [Dapper.GraphQL](https://github.com/landmarkhw/Dapper.GraphQL) - 一个旨在将Dapper和graphql-dotnet项目集成在一起的库，主要考虑的是易用性和性能。\n  * [graphql-aspnetcore](https://github.com/JuergenGutsch/graphql-aspnetcore) -  ASP.NET Core MiddleWare创建GraphQL端点。\n  * [graphql-convention](https://github.com/graphql-dotnet/conventions) - 该库是GraphQL的补充层，使您可以使用现有的属性和方法作为字段解析器，将.NET类自动包装到GraphQL模式定义中。\n  * [graphiql-dotnet](https://github.com/JosephWoodward/graphiql-dotnet) - 用于ASP.NET Core的GraphiQL中间件。\n  * [graphql-dotnetcore](https://github.com/mkmarek/graphql-dotnetcore) - 基于[graphql-js](https://github.com/graphql/graphql-js)的.NETQL GraphQL。\n  * [graphql-dotnet](https://github.com/graphql-dotnet/graphql-dotnet) - GraphQL for .NET。\n  * [graphql-dotnet-server](https://github.com/graphql-dotnet/server) - GraphQL for .NET - 订阅传输WebSockets。\n  * [Hot Chocolate](https://github.com/ChilliCream/hotchocolate) - .Net Core和.NET Framework的GraphQL服务器。\n  * [FSharp.Data.GraphQL](https://github.com/fsprojects/FSharp.Data.GraphQL) - Facebook GraphQL查询语言的[FSharp]((https://fsprojects.github.io/FSharp.Data.GraphQL))实现。\n  * [parser](https://github.com/graphql-dotnet/parser) - .NET中GraphQL的词法分析器和解析器。\n  * [tanka-graphql](https://github.com/pekkah/tanka-graphql) - GraphQL执行库和服务器库，支持SignalR，Apollo，模式操纵以及Apollo和graphql-js熟悉的其他功能。\n* [halcyon](https://github.com/visualeyes/halcyon) -  ASP.NET的HAL实现。\n* [JSON API .NET Core](https://github.com/Research-Institute/json-api-dotnet-core) - 用于ASP.Net Core的JSON API框架。\n* [LightNode](https://github.com/neuecc/LightNode) - 基于OWIN构建的Micro RPC / REST框架\n* [NetCoreStack.Proxy](https://github.com/NetCoreStack/Proxy) - 适用于.NET Standard 2.0的类型安全的分布式REST库(NetCoreStack Flying Proxy)\n* [NSwag](https://github.com/RSuter/NSwag) - 用于.NET，Web API和TypeScript的Swagger / OpenAPI工具链。\n* [OData](https://github.com/OData/WebApi/tree/feature/netcore) - 开放数据协议(OData)支持创建基于HTTP的数据服务，允许使用统一资源标识符识别资源( URIs)并在抽象数据模型中定义，由Web客户端使用简单的HTTP消息进行发布和编辑。\n* [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) - 可以通过 OpenAPI Generator，在给定 OpenAPI 规范(v2, v3)的情况下自动生成 API 客户端库、server stubs、文档以及配置。\n* [refit](https://github.com/paulcbetts/refit) -  适用于.NET Core，Xamarin和.NET的自动类型安全REST库。\n* [RestClient.Net](https://github.com/MelbourneDeveloper/RestClient.Net) - 适用于所有C#跨平台的REST客户端。\n* [RestEase](https://github.com/canton7/RestEase) - 易于使用的类型安全REST API客户端库，简单且可自定义。\n* [RestLess](https://github.com/letsar/RestLess) -  .Net Standard的自动类型安全无反射REST API客户端库。\n* [Restier](https://github.com/OData/RESTier) -  RESTier是一个RESTful API开发框架，用于在.NET平台上构建基于OData V4的标准化RESTful服务。\n* [Restsharp](https://github.com/restsharp/RestSharp) - 用于.NET的简单REST和HTTP API客户端\n* [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle.AspNetCore) - Swagger工具，生成API文档，包括用于测试的UI。\n  * [MicroElements.Swashbuckle.FluentValidation](https://github.com/micro-elements/MicroElements.Swashbuckle.FluentValidation) - 向Swagger添加FluentValidation规则。\n  * [Swashbuckle.AspNetCore.Filters](https://github.com/mattfrear/Swashbuckle.AspNetCore.Filters) - 一堆有用的Swashbuckle.AspNetCore筛选器。\n * [WebAnchor](https://github.com/mattiasnordqvist/Web-Anchor) - Web Anchor 提供了类型安全，可测试和灵活的，运行时生成的Web资源访问。简单来说提供了Web APi灵活的访问方式。\n* [WebAPIContrib for ASP.NET CORE](https://github.com/WebApiContrib/WebAPIContrib.Core) - ASP.NET Core的附加组件和扩展库。\n\n### 应用程序框架\n* [ASP.NET Boilerplate](https://github.com/aspnetboilerplate/aspnetboilerplate) -  ABP是一个通用的WEB应用程序框架和项目模板。\n* [Abp vNext](https://github.com/abpframework/abp) - 该项目是ABP Web应用程序框架的下一代。\n* [AsyncEx](https://github.com/StephenCleary/AsyncEx) -  async / await的帮助程序库。\n* [Aeron.NET](https://github.com/AdaptiveConsulting/Aeron.NET) - 高效可靠的UDP单播，UDP组播和IPC消息传输。\n* [akka.net](https://github.com/akkadotnet/akka.net) - Akka是一个基于scala语言的Actor模型库，旨在构建一套高并发、分布式、自动容错、消息驱动应用的工具集。\n* [Aggregates.NET](https://github.com/volak/Aggregates.NET) -  Aggregates.NET是一个框架，可以帮助开发人员将优秀的NServiceBus和EventStore库集成在一起。\n* [ASP.NET MVC](https://github.com/dotnet/aspnetcore/tree/master/src/Mvc) - 官方WEB应用程序框架，MVC。\n* [ASP.NET Core](https://github.com/aspnet/AspNetCore) - ASP.NET Core是一个跨平台的.NET框架。\n* [Butterfly Server .NET](https://github.com/firesharkstudios/butterfly-server-dotnet) - 允许用最少的工作量构建实时Web应用程序，分布式追踪的服务器端库。\n* [CAP](https://github.com/dotnetcore/CAP) - CAP是处理分布式事务的解决方案，还具有EventBus功能，它轻巧，易于使用且高效。\n* [Carter](https://github.com/CarterCommunity/Carter) -  Carter是一个路由框架，使代码更加简单明确。\n* [Chromely](https://github.com/mattkol/Chromely) -  Electron.NET的轻量级替代品，构建HTML5桌面应用程序框架。\n* [Cinchoo ETL](https://github.com/Cinchoo/ChoETL) - 用于.NET的ETL框架(用于CSV，Flat，Xml，JSON，键值对格式文件的分析器/写入器)。\n* [CQRSlite](https://github.com/gautema/CQRSlite) - 用于帮助在C#中编写CQRS和Eventsourcing应用程序的轻量级框架。\n* [dataaccess_aspnetcore](https://github.com/digipolisantwerp/dataaccess_aspnetcore) -  EF的UnitOfWork和Repositories的基类。\n* [DNTFrameworkCore](https://github.com/rabbal/DNTFrameworkCore) - DNTFrameworkCore 是一个轻量级且可扩展的基础结构，用于基于ASP.NET Core构建高质量的Web应用程序\n* [DotNetCorePlugins](https://github.com/natemcmaster/DotNetCorePlugins) - 用于动态加载.NET Core程序集，将其作为主应用程序的扩展来执行与Assembly.LoadFrom不同。\n* [DotnetSpider](https://github.com/dotnetcore/DotnetSpider) -  DotnetSpider，一个类似于WebMagic和Scrapy的.NET标准爬虫库。它是轻量级，高效且快速的高级Web爬网和抓取框架。\n* [DotNetty](https://github.com/Azure/DotNetty) -  netty端口，事件驱动的异步网络应用程序框架。\n* [dotvvm](https://github.com/riganti/dotvvm) -  Web应用程序的开源MVVM框架。\n* [ElectronNET](https://github.com/ElectronNET/Electron.NET) - 使用ASP.NET NET Core构建跨平台桌面应用程序。\n* [EmbedIO](https://github.com/unosquare/embedio) - 一个小型的，跨平台，基于模块的Web服务器。\n* [Ether.Network](https://github.com/aloisdg/Ether.Network) - Ether.Network是一个开源网络库，允许开发人员通过sockets创建简单，快速和可扩展的套接字服务器或客户端的基本库。\n* [EventFlow](https://github.com/eventflow/EventFlow) - EventFlow是一个易于使用的基本CQRS + ES框架。\n* [ExcelDataReader](https://github.com/ExcelDataReader/ExcelDataReader) - 用C#编写的轻量级快速库，用于读取Microsoft Excel文件。\n* [ExtCore](https://github.com/ExtCore) - 用于创建模块化和可扩展的Web应用程序框​​架。\n* [Finbuckle.MultiTenant](https://github.com/Finbuckle/Finbuckle.MultiTenant) -  Finbuckle.MultiTenant是ASP.NET Core的多租户库。它提供用于租户解析，每个租户应用程序配置和每个租户数据隔离的功能。\n* [fission](https://github.com/fission/fission) -  Fission 是一个构建在 Kubernetes 之上的 FaaS框架。ission 利用Kubernetes 集群管理、调度、网络管理等，将容器编排功能留给 Kubernetes，而 Fission 就专注于 FaaS 特性。\n* [grpc](https://github.com/grpc/grpc/tree/master/src/csharp) - 远程过程调用(RPC)为构建分布式应用程序和服务提供了有用的抽象，grpc库。\n* [Halibut](https://github.com/OctopusDeploy/Halibut) - 使用基于SSL的JSON-RPC的.NET安全通信框架。\n* [MagicOnion](https://github.com/neuecc/MagicOnion) - MagicOnion是一个实时网络引擎，如SignalR，Socket.io和RPC-Web API框架。\n* [MassTransit](https://github.com/MassTransit/MassTransit) -  .NET分布式应用程序框架。\n* [microdot](https://github.com/gigya/microdot) - 一个开源的.NET微服务框架。\n* [MoreLINQ](https://github.com/morelinq/MoreLINQ) -  LINQ to Objects的扩展。\n* [Nancy](https://github.com/NancyFx/Nancy) - 用于在.NET和Mono上构建基于HTTP的服务的轻量级框架。\n* [opencvsharp](https://github.com/shimat/opencvsharp) -  OpenCV的跨平台库。\n* [orleans](https://github.com/dotnet/orleans) - Orleans是一个跨平台的，用于构建分布式应用程序框架\n* [Prism](https://github.com/PrismLibrary/Prism) - Prism是一个框架，用于在WPF，Windows 10 UWP和Xamarin Forms中构建松耦合，可维护和可测试的XAML应用程序。\n* [protoactor-dotnet](https://github.com/AsynkronIT/protoactor-dotnet) -  Golang和C#的快速分布式Actor。\n* [resin](https://github.com/kreeben/resin) - 面向文档的搜索引擎，具有列索引，多重集合查询，基于JSON的查询语言和HTTP API。\n* [RService.io](https://github.com/Stoom/RService.IO) -  用于ASP.NET Core的轻量级REST服务框架\n* [ServiceStack](https://github.com/ServiceStack/ServiceStack) - ServiceStack是一个简单，快速，通用和高效的全功能Web和 Web服务框架。\n* [Steeltoe OSS](https://github.com/SteelToeOSS) - 用于常见微服务模式的.NET工具包。\n* [Strathweb.TypedRouting.AspNetCore](https://github.com/filipw/Strathweb.TypedRouting.AspNetCore) - 一个在ASP.NET Core MVC项目中启用强类型路由的库。\n* [surging](https://github.com/dotnetcore/surging) - Surging是一种微服务引擎，提供了轻量级，高性能的模块化RPC请求管道。服务引擎支持http，TCP，WS，Mqtt，UDP和DNS协议。它使用ZooKeeper和Consul作为注册表，使用哈希算法，随机，轮询，压力最小优先级作为负载平衡算法，内置服务管理以确保可靠的RPC通信。\n* [Xer.Cqrs](https://github.com/jeyjeyemem/Xer.Cqrs) - 轻巧易用的CQRS + DDD库。\n* [X.PagedList](https://github.com/dncuug/X.PagedList) - 用于轻松分页ASP.NET / ASP.NET Core中任何IEnumerable / IQueryable的库。\n\n### 应用程序模板\n* [.NET Boxed](https://github.com/Dotnet-Boxed/Templates) - .NET项目模板，包裹API，GraphQL，Orleans。\n* [aspnet-core-react-template](https://github.com/bradymholt/aspnet-core-react-template) -  ASP.NET Core/ React SPA应用程序模板。\n* [AspNetCoreSpa](https://github.com/asadsahi/AspNetCoreSpa) - Asp.Net Core和Angular 8 SPA Fullstack应用程序模板。\n* [ASP.NET-MVC-Template](https://github.com/NikolayIT/ASP.NET-MVC-Template) - 带有Angular的ASP.NET MVC 5，ASP.NET Core和ASP.NET Core的现成模板。\n* [AddFeatureFolders](https://github.com/OdeToCode/AddFeatureFolders) - 为ASP.NET Core中的MVC控制器和视图启用功能文件夹。\n* [Angular Visual Studio Webpack Starter](https://github.com/damienbod/AngularWebpackVisualStudio) - 用于Webpack，Visual Studio，ASP.NET Core和Angular的模板。应用程序的客户端和服务器端都在一个ASP.NET Core项目中实现，这使得部署更容易。\n* [CleanArchitecture](https://github.com/ardalis/CleanArchitecture) - 一个高度适配的ASP.NET Core框架。\n* [CleanArchitecture (SPA)](https://github.com/JasonGT/CleanArchitecture) - 遵循Clean Architecture的原理使用Angular 8和ASP.NET Core 3创建单页应用程序（SPA）的解决方案模板\n* [DNTFrameworkCoreTemplate](https://github.com/rabbal/DNTFrameworkCoreTemplate) - 基于[DNTFrameworkCore]的Boilerplate项目模板。\n* [dotnet new caju](https://github.com/ivanpaulovich/dotnet-new-caju) - 代码整洁框架，[clean-architecture-manga](https://github.com/ivanpaulovich/clean-architecture-manga)。\n* [EISK](https://github.com/EISK/eisk.webapi) - 为开发人员资源提供简单的用例，以使用[体系结构最佳实践]在.NET Core之上构建可伸缩的应用程序 (DDD, onion architecture etc)\n* [JavaScriptServices](https://github.com/aspnet/JavaScriptServices) -  Microsoft ASP.NET核心JavaScript服务。\n* [kendo-ui-core](https://github.com/telerik/kendo-ui-core) - 一个基于jQuery的HTML5小部件库，用于构建现代Web应用程序。\n* [QuickApp](https://github.com/emonney/QuickApp) - 具有完整登录，用户和角色管理的ASP.NET Core / Angular4启动项目模板。\n* [Serenity](https://github.com/volkanceylan/Serenity) -  Serenity是一个ASP.NET MVC / TypeScript应用程序框架，旨在通过基于服务的体系结构，简化和缩短以数据为中心的应用程序开发。\n* [Toucan](https://github.com/mrellipse/toucan) - 用于构建单页应用程序的Boilerplate。服务器是围绕SOLID原则设计的多项目.Net Core解决方案。客户端是TypeScript 2，Vuejs 2，Vuex 2。\n\n### 身份认证和授权\n* [AspNet.Security.OpenIdConnect.Server](https://github.com/aspnet-contrib/AspNet.Security.OpenIdConnect.Server) - 用于OWIN / Katana和ASP.NET Core的OpenID Connect / OAuth2服务器框架。\n* [Auth0](https://github.com/auth0/auth0.net) - Auth0身份验证和管理API的.NET客户端。\n* [Casbin.NET](https://github.com/casbin-net/Casbin.NET) - 支持ACL，RBAC，ABAC的授权库。\n* [Identity](https://github.com/aspnet/AspNetCore) -  ASP.NET Core Identity是用于构建ASP.NET Core Web应用程序的身份验证库。\n* [IdentityServer](https://github.com/IdentityServer/IdentityServer4) - IdentityServer4，适用于ASP.NET Core的OpenID Connect和OAuth 2.0框架 。\n  * [IdentityServer4.EntityFramework](https://github.com/IdentityServer/IdentityServer4.EntityFramework) - EF的IdentityServer4库。\n  * [IdentityServer4.MongoDB](https://github.com/diogodamiani/IdentityServer4.MongoDB) - MongoDB 的IdentityServer4库。\n  * [IdentityServer4.EntityFrameworkCore](https://github.com/2020IP/TwentyTwenty.IdentityServer4.EntityFrameworkCore) - EF Core 的IdentityServer4库。\n  * [IdentityServer4.Templates](https://github.com/IdentityServer/IdentityServer4.Templates) - IdentityServer4模板.\n* [openiddict](https://github.com/openiddict/openiddict-core) - 易于使用的OpenID Connect服务器。\n  * [oidc-debugger](https://github.com/nbarbettini/oidc-debugger) - OAuth 2.0和OpenID Connect调试工具\n* [stormpath-sdk](https://github.com/stormpath/stormpath-sdk-dotnet) - Stormpath使开发人员能够将用户身份验证，用户管理和安全工作流程快速构建到其应用程序中。\n* [stuntman](https://github.com/ritterim/stuntman) - 用于在开发过程中利用ASP.NET Identity模仿用户的库\n\n### 区块链\n* [BTCPayServer](https://github.com/btcpayserver/btcpayserver) - BTCPay Server是一个免费的开源加密货币支付处理器，它使您可以直接以比特币和山寨币接收支付，而无需任何费用，交易成本或中间商。\n* [Meadow](https://github.com/MeadowSuite/Meadow) - 一个集成的以太坊实施和工具套件，专注于Solidity测试和开发。\n* [NBitcoin](https://github.com/MetacoSA/NBitcoin) - 用于.NET框架的综合比特币库。\n* [NBlockchain](https://github.com/danielgerlag/NBlockchain) - 用于构建支持区块链的应用程序的.NET标准库\n* [NBXplorer](https://github.com/dgarage/NBXplorer) - 比特币和NBitcoin资源管理器客户端。\n* [NEO](https://github.com/neo-project/neo) - 为智能经济打造的开放网络，Neo利用区块链技术。\n* [Nethereum](https://github.com/Nethereum) - 将以太坊的热爱带到.NET。\n* [Nethermind](https://github.com/NethermindEth/nethermind) -  .NET Core以太坊客户端\n* [StratisBitcoinFullNode](https://github.com/stratisproject/StratisBitcoinFullNode) - 简单且经济实惠的端到端解决方案，用于在.Net框架上开发，测试和部署本机C#区块链应用程序。\n* [Trezor.Net](https://github.com/MelbourneDeveloper/Trezor.Net) - Trezor加密货币硬件钱包的跨平台C＃库。\n* [WalletWasabi](https://github.com/zkSNACKs/WalletWasabi) - 注重隐私的比特币钱包。内置Tor，CoinJoin和硬币控制功能。\n\n### 机器人\n* [BotSharp](https://github.com/SciSharp/BotSharp) - BotSharp是AI Bot平台构建者的开源机器学习框架。\n* [NadekoBot](https://github.com/Kwoth/NadekoBot) - 用C#编写的开源，通用的Discord聊天机器人。\n* [Telegram.Bot](https://github.com/TelegramBots/Telegram.Bot) -  Telegram Bot API客户端。\n* [Funogram](https://github.com/Dolfik1/Funogram) -  F#Telegram Bot Api库。\n\n### 自动部署\n* [cake-build](https://github.com/cake-build/cake) - 跨平台构建自动化系统。\n* [Colorful.Console](https://github.com/tomakita/Colorful.Console) - 设置您的C#控制台输出样式！\n* [dotnet-docker](https://github.com/dotnet/dotnet-docker) - 用于.NET Core和.NET Core Tools的基本Docker镜像。\n* [Dockerize.NET](https://github.com/brthor/Dockerize.NET) - .NET Cli工具，用于将.NET Core应用程序打包到Docker映像中：“ dotnet dockerize”\n* [FlubuCore](https://github.com/dotnetcore/FlubuCore) - 跨平台构建和自动化部署系统，用C#代码构建项目，执行，部署脚本。\n* [GitInfo](https://github.com/kzu/GitInfo) - 来自MSBuild，C#和VB的Git和SemVer信息，一种MSBuild编译工具。\n* [GitVersioning](https://github.com/AArnott/Nerdbank.GitVersioning) - 使用version.json文件生成的唯一版本标记程序集和程序包等，并包括用于非官方构建的git commit ID。\n* [go-dotnet](https://github.com/matiasinsaurralde/go-dotnet) - .NET Core Runtime的PoC Go包装器。\n* [Image2Docker](https://github.com/docker/communitytools-image2docker-win) - 将现有Windows应用程序工作，移植到Docker的PowerShell模块。\n* [LocalAppVeyor](https://github.com/joaope/LocalAppVeyor) - .NET Core全局工具，可将appveyor.yml部署AppVeyor到本地。\n* [msbuild](https://github.com/Microsoft/msbuild) -  Microsoft Build Engine是一个用于构建应用程序的平台。\n* [Nuke](https://github.com/nuke-build/nuke) - 跨平台构建自动化系统。\n* [Opserver](https://github.com/opserver/Opserver) -  Stack Exchange的监控系统。\n* [vsts-agent](https://github.com/Microsoft/vsts-agent/blob/master/README.md) -  Visual Studio Team Services构建和发布代理。\n\n### css, js帮助工具\n* [BundlerMinifier](https://github.com/madskristensen/BundlerMinifier) -  Visual Studio扩展，让您可以配置JS，CSS和HTML文件的捆绑和缩小。\n* [JavaScriptViewEngine](https://github.com/pauldotknopf/JavaScriptViewEngine) - 用于在JavaScript环境中呈现标记的ASP.NET MVC ViewEngine。适用于React和Angular服务器端呈现。\n* [Smidge](https://github.com/Shazwazza/Smidge/) - 用于ASP.NET Core的轻量级运行时CSS / JavaScript文件缩小，组合，压缩和管理库。\n* [Web Markup Minifier](https://github.com/Taritsyn/WebMarkupMin) - 包含一组标记最小化器的.NET库。该项目的目标是通过减少HTML，XHTML和XML代码的大小来提高Web应用程序的性能。\n\n### 缓存\n* [CacheManager](https://github.com/MichaCo/CacheManager) - 用C#编写的.NET的开源缓存抽象层。它支持各种缓存提供程序并实现许多高级功能。\n* [EasyCaching](https://github.com/dotnetcore/EasyCaching) - 开源缓存库，包含基本用法和缓存的一些高级用法，可以帮助我们更轻松地处理缓存。\n* [Faster](https://github.com/Microsoft/FASTER/tree/master/cs) - Microsoft的快速key，value存储库。\n* [Foundatio](https://github.com/exceptionless/Foundatio) - 用于构建分布式应用程序的可插入基础库。\n* [Microsoft Caching](https://github.com/aspnet/Caching) - 用于内存缓存和分布式缓存的库。\n* [Stack Exchange Redis](https://github.com/StackExchange/StackExchange.Redis) - 用于.NET语言的高性能通用redis客户端(C#等)。\n\n### 内容管理系统CMS\n* [Awesome-CMS-Core](https://github.com/SaiGonSoftware/Awesome-CMS-Core) - Awesome-CMS-Core是一个使用ASP.Net Core和ReactJS构建的开源CMS，考虑到模块分离问题并提供最新的技术趋势，如.Net Core，React，Webpack，SASS，后台作业，Message Queue。\n* [Blogifier.Core](https://github.com/blogifierdotnet/Blogifier.Core) - Blogifier是用ASP.NET Core编写的简单，美观，轻巧的开源博客。\n* [Cofoundry](https://github.com/cofoundry-cms/cofoundry) - Cofoundry是一个可扩展且灵活的.NET Core CMS和应用程序框架，专注于代码优先开发。\n* [CoreWiki](https://github.com/csharpfritz/CoreWiki) - 一个简单的ASP.NET core wiki。\n* [dasblog-core](https://github.com/poppastring/dasblog-core) - DasBlog博客项目。\n* [Lynicon](https://github.com/jamesej/lyniconanc) - Lynicon CMS系统。\n* [Miniblog](https://github.com/madskristensen/Miniblog.Core) - ASP.NET Core博客引擎。\n* [Mixcore CMS](https://github.com/mixcore/mix.core) - 由DotNet Core支持的开源CMS。 Mixcore CMS是一个可扩展的开放平台，用于Web内容管理和数字体验。 Mixcore CMS在网络上提供了强大的功能和无限的灵活性。\n* [NetCoreCMS](https://github.com/OnnoRokomSoftware/NetCoreCMS) - NetCoreCMS是使用ASP.Net Core 2.0 MVC开发的模块化主题支持的内容管理系统。\n* [Orchard Core CMS](https://github.com/OrchardCMS/OrchardCore) - 在模块化和可扩展的应用程序框架之上使用ASP.NET Core构建的开源内容管理系统。\n* [Piranha CMS](https://github.com/piranhacms/piranha.core) - 用于ASP.NET核心和实体框架核心的轻量级且不显眼的开源CMS。\n* [Platformus](https://github.com/Platformus) - 基于ASP.NET Core 1.0和ExtCore框架的免费，开源和跨平台的CMS。\n* [SimpleContent](https://github.com/joeaudette/cloudscribe.SimpleContent) - 用于ASP.NET Core的简单而灵活的内容和博客引擎，可以使用或不使用数据库。\n* [Squidex](https://github.com/Squidex/squidex) - Squidex是一个开源的CMS，基于MongoDB，CQRS和事件。\n* [Swastika I/O Core CMS](https://github.com/Swastika-IO/Swastika-IO-Core) - 基于SIOH框架的ASP.NET Core / Dotnet核心系统（例如CMS，电子商务，论坛，问题解答，CRM ...）\n* [Weapsy](https://github.com/Weapsy/Weapsy) - 基于DDD和CQRS的开源ASP.NET核心CMS。它支持开箱即用的MSSQL，MySQL，SQLite和PostgreSQL。\n* [Wyam](https://github.com/Wyamio/Wyam) - 模块化静态内容和静态站点生成器。\n* [ZKEACMS](https://github.com/SeriaWei/ZKEACMS.Core) - 视觉设计，通过拖放构建网站。\n\n### 代码分析和指标\n* [awesome-static-analysis](https://github.com/mre/awesome-static-analysis) - 针对各种编程语言的静态分析工具，链接和代码质量检查器的精选列表。\n* Code Analysis\n  * [CodeFormatter](https://github.com/dotnet/codeformatter) - CodeFormatter是使用Roslyn来自动重写我们的代码格式。\n  * [DevSkim](https://github.com/Microsoft/DevSkim) - DevSkim是IDE扩展和语言分析器的框架，可在开发人员编写代码时在开发环境中提供内联安全性分析。\n  * [RefactoringEssentials](https://github.com/icsharpcode/RefactoringEssentials) - Visual Studio扩展工具，支持分析和重构代码。\n  * [roslyn-analyzers](https://github.com/dotnet/roslyn-analyzers) - Roslyn分析器分析您的代码的样式，质量和可维护性，设计和其他问题。\n  * [StyleCopAnalyzers](https://github.com/DotNetAnalyzers/StyleCopAnalyzers) - StyleCop规则实现的.NET编译器平台。\n* Metrics\n  * [AppMetrics](https://github.com/alhardy/AppMetrics) - 用于记录和报告应用程序中的指标。\n  * [Audit.NET](https://github.com/thepirat000/Audit.NET) - 一个可扩展的框架，用于审核.NET和.NET Core中的执行操作。\n  * [BenchmarkDotNet](https://github.com/dotnet/BenchmarkDotNet) - 用于基准测试的强大.NET库。\n  * [coverlet](https://github.com/tonerdo/coverlet) - Coverlet是.NET的跨平台代码覆盖框架。\n  * [MiniCover](https://github.com/lucaslorentz/minicover) - 跨平台代码覆盖工具\n  * [NBench](https://github.com/petabridge/NBench) - .NET应用程序的性能基准测试框架\n  * [Nexogen.Libraries.Metrics](https://github.com/nexogen-international/Nexogen.Libraries.Metrics) - 用于在.NET中收集应用程序指标并将其导出到Prometheus的库。\n  * [OpenCover](https://github.com/OpenCover/opencover) - 代码覆盖工具（仅适用于WINDOWS OS）\n  * [PerformanceMonitor](https://github.com/dotnet-architecture/PerformanceMonitor) - .NET应用程序性能监视器。\n  * [prometheus-net](https://github.com/prometheus-net/prometheus-net) - .NET指标,监视系统,检测应用程序的prometheus库。\n  * [Prometheus.Client](https://github.com/PrometheusClientNet/Prometheus.Client) - Prometheus客户端。\n\n### 压缩\n* [lz4net](https://github.com/MiloszKrajewski/K4os.Compression.LZ4) - 适用于所有.NET平台的超快速压缩算法。\n* [sharpcompress](https://github.com/adamhathcock/sharpcompress) - 完全管理的C#库，用于处理许多压缩类型和格式。\n\n### 编译器\n* [Fable](https://github.com/fable-compiler/Fable) -  F#到JavaScript编译器。\n* [fparsec](https://github.com/stephan-tolksdorf/fparsec) -  F#和C#的解析器组合库。\n* [IL2C](https://github.com/kekyo/IL2C) - IL2C-ECMA-335 CIL / MSIL到C语言的翻译器。\n* [Mond](https://github.com/Rohansi/Mond) - 用C#编写的动态类型脚本语言，带有REPL，调试器和简单的嵌入API。\n* [peachpie](https://github.com/peachpiecompiler/peachpie) -  .NET的开源PHP编译器。\n* [Pidgin](https://github.com/benjamin-hodgson/Pidgin) - 用于C#的轻量级，快速且灵活的解析库，由Stack Overflow开发。\n* [roslyn](https://github.com/dotnet/roslyn) -  Roslyn .NET编译器提供具有丰富代码分析API的C＃和Visual Basic语言。 \n* [Sprache](https://github.com/sprache/Sprache) -  小型，友好的C＃解析器框架。\n\n### 密码\n* [BCrypt.Net](https://github.com/BcryptNet/bcrypt.net) - BCrypt密码库。\n* [BCrypt.NET-Core](https://github.com/neoKushan/BCrypt.Net-Core) - 用于安全存储密码的BCrypt.NET库。\n* [BouncyCastle PCL](https://github.com/onovotny/BouncyCastle-PCL) -  Bouncy Castle Crypto包是加密算法和协议的库。\n* [multiformats](https://github.com/multiformats/cs-multihash) - 用于编码/解码Multihashes的库，它是一个“容器”，用于描述计算摘要的散列算法。\n* [nsec](https://github.com/ektrah/nsec) -  NSec是基于libsodium的.NET Core新加密库。\n* [SecurityDriven.Inferno](https://github.com/sdrapkin/SecurityDriven.Inferno) - 专业的加密库。\n\n### 数据库\n* [DBreeze](https://github.com/hhblaze/DBreeze) -  C#.NET MONO NOSQL(嵌入式键值存储)ACID多范例数据库管理系统。\n* [JsonFlatFileDataStore](https://github.com/ttu/json-flatfile-datastore) - 简单的JSON平面文件数据存储，支持打字和动态数据。\n* [LiteDB](https://github.com/mbdavid/LiteDB) -  LiteDB是一个小型，快速，轻量的NoSQL嵌入式数据库。\n* [NoDb](https://github.com/joeaudette/NoDb) -  文档数据库，个人博客和网站以及小型小册子网站是不使用数据库的不错的选择。\n* [marten](https://github.com/JasperFx/marten) -  Postgresql作为.NET应用程序的文档数据库和事件存储的库。\n* [StringDB](https://github.com/SirJosh3917/StringDB) - StringDB是一个模块化的键/值对档案数据库，旨在消耗少量的ram并生成少量的数据库。\n* [yessql](https://github.com/sebastienros/yessql) - 适用于任何RDBMS的.NET文档数据库。\n\n### 数据库驱动程序\n* [cassandra-csharp-driver](https://github.com/datastax/csharp-driver) - 用于Apache Cassandra的DataStax C#驱动程序。\n* [confluent-kafka-dotnet](https://github.com/confluentinc/confluent-kafka-dotnet) -  Confluent的Apache Kafka .NET客户端。\n* [couchbase-lite-net](https://github.com/couchbase/couchbase-lite-net) - 一个轻量级，面向文档(NoSQL)，可同步的.NET数据库引擎。\n* [MongoDB.Driver](https://github.com/mongodb/mongo-csharp-driver) -  MongoDB的.NET驱动程序。\n* [MongoDB.Entities](https://github.com/dj-nitehawk/MongoDB.Entities) - MongoDB的数据访问库，具有精美的API，LINQ支持和内置实体关系管理\n* MySQL\n  * [mysql-connector-net](https://github.com/mysql/mysql-connector-net/tree/8.0) - ADO.NET驱动和MySQL的链接库。\n  * [MySqlConnector](https://github.com/mysql-net/MySqlConnector) - 异步MySQL连接库。\n* Neo4j\n  * [neo4j-dotnet-driver](https://github.com/neo4j/neo4j-dotnet-driver) - Neo4j .NET驱动程序。\n  * [Neo4jClient](https://github.com/Readify/Neo4jClient) - Neo4j客户端。\n* [npgsql](https://github.com/npgsql/npgsql) -  它允许为.NET框架开发的任何程序访问PostgreSQL数据库服务器的库。\n* [ravendb](https://github.com/ayende/ravendb/tree/v4.0) - 支持Linq的.NET文档数据库。\n* [RethinkDb.Driver](https://github.com/bchavez/RethinkDb.Driver) - RethinkDB 数据库的驱动程序。\n* [progaudi.tarantool](https://github.com/progaudi/progaudi.tarantool) -  Tarantool NoSql数据库的.NET客户端。\n\n### 数据库工具库\n* [DbUp](https://github.com/DbUp/DbUp) -  可帮助您将更改部署到SQL Server数据库，跟踪已经运行的SQL脚本，并运行使数据库更新所需的更改脚本。\n* [Evolve](https://github.com/lecaillon/Evolve) - 使用纯SQL脚本的简单数据库迁移工具。受到Flyway的启发。\n* [EFCorePowerTools](https://github.com/ErikEJ/EFCorePowerTools) - EF工具库 - reverse engineering, migrations and model。\n* [fluentmigrator](https://github.com/fluentmigrator/fluentmigrator) -  .NET的迁移框架，就像Ruby on Rails Migrations一样。\n* [monitor-table-change-with-sqltabledependency](https://github.com/christiandelbianco/monitor-table-change-with-sqltabledependency) - 获取有关记录表更改的SQL Server通知。\n* [roundhouse](https://github.com/chucknorris/roundhouse) - RoundhousE是用于.NET的数据库迁移实用程序，它使用sql文件和基于源代码控制的版本控制。\n* [SapphireDb](https://github.com/SapphireDb/SapphireDb) - SapphireDb的服务器实现，这是一个通过实时数据同步轻松开发应用程序的框架，并且是asp.net核心和ef核心的Firebase实时数据库/ firestore的自托管替代方案。\n* [SharpRepository](https://github.com/SharpRepository/SharpRepository) -  SharpRepository是一个用C#编写的通用存储库，它包括对各种关系，文档和对象数据库的支持，包括Entity Framework，RavenDB，MongoDb和Db4o。 SharpRepository还包括Xml和InMemory存储库实现。\n* [TrackableEntities.Core](https://github.com/TrackableEntities/TrackableEntities.Core) - 使用.NET Core跨服务边界进行更改跟踪。\n* [Mongo.Migration](https://github.com/SRoddis/Mongo.Migration) - MongoDB的即时迁移库。\n* [EntityFrameworkCore.DataEncryption](https://github.com/Eastrall/EntityFrameworkCore.DataEncryption) - Microsoft.EntityFrameworkCore的插件，可以使用内置或自定义加密提供程序添加对加密字段的支持。\n\n### 日期和时间\n* [Exceptionless.DateTimeExtensions](https://github.com/exceptionless/Exceptionless.DateTimeExtensions) -  DateTimeRange，工作日和各种DateTime，DateTimeOffset，TimeSpan扩展方法。\n* [FluentDateTime](https://github.com/FluentDateTime/FluentDateTime) - 允许您编写更清晰的DateTime表达式和操作。部分灵感来自Ruby DateTime Extensions。\n* [nodatime](https://github.com/nodatime/nodatime) - 日期和时间API库。\n\n### 分布式计算\n* [AspNetCore.Diagnostics.HealthChecks](https://github.com/xabaril/AspNetCore.Diagnostics.HealthChecks) - HealthChecks企业级核心诊断程序。\n  - [BeatPulse](https://github.com/Xabaril/BeatPulse) - ASP.NET Core应用程序的活动状况，健康检查库。\n* [Foundatio](https://github.com/exceptionless/Foundatio) - 可插拔的，用于构建松耦合的分布式应用程序库。\n* [jasper](https://github.com/JasperFx/jasper) - .NET的下一代应用程序开发框架\n* [Rafty](https://github.com/ThreeMammals/Rafty) - RAFT 的实现库。\n* [Obvs](https://github.com/christopherread/Obvs) - 一个可观察微服务总线的库，基于Rx的接口。\n* [Ocelot](https://github.com/ThreeMammals/Ocelot) - Ocelot创建的API网关。\n* [OpenTracing](https://github.com/opentracing/opentracing-csharp) -API和分布式跟踪工具。\n* [Polly](https://github.com/App-vNext/Polly) -  Polly是一个.NET弹性和瞬态故障处理库，允许开发人员以流畅和线程安全的方式表达诸如重试，断路器，超时，隔离头和回退之类的策略。\n* [ProxyKit](https://github.com/damianh/ProxyKit) - HTTP反向代理的工具包。\n\n### 电子商务与支付\n* [nopCommerce](https://github.com/nopSolutions/nopCommerce) - 免费的开源电子商务购物车(ASP.NET MVC / ASP.NET核心MVC)，拥有庞大的社区和充满新功能的市场，主题和插件。\n* [GrandNode](https://github.com/grandnode/grandnode) - 基于ASP.NET Core 2.1和MongoDB的多平台免费开源电子商务购物车。\n* [PayPal](https://github.com/paypal/PayPal-NET-SDK) - 用于PayPal的RESTful API的.NET SDK。\n* [SimplCommerce](https://github.com/simplcommerce/SimplCommerce) - 基于.NET Core构建的超级简单电子商务系统。\n* [Stripe](https://github.com/ServiceStack/Stripe) - 用于stripe.com REST API的类型.NET客户端。\n\n\n### 异常\n* [Demystifier](https://github.com/benaadams/Ben.Demystifier) - 高性能的堆栈跟踪库。\n* [Exceptionless](https://github.com/exceptionless/Exceptionless.Net) - 异常客户端库。\n* [GlobalExceptionHandlerDotNet](https://github.com/JosephWoodward/GlobalExceptionHandlerDotNet) -  将异常处理为ASP.NET中间件，而不是在每个控制器操作中显式处理它们。\n* [Sentry](https://github.com/getsentry/sentry-dotnet) - .NET SDK for Sentry，一种开源错误跟踪，可帮助开发人员实时监控和修复崩溃。\n\n### 响应式编程\n* [CSharpFunctionalExtensions](https://github.com/vkhorikov/CSharpFunctionalExtensions) -  C#的功能扩展。\n* [DynamicData](https://github.com/RolandPheasant/DynamicData) - 基于Rx.NET的Reactive 集合。\n* [echo-process](https://github.com/louthy/echo-process) -  C#的Actor库，其中包含支持Redis持久性的其他模块，以及JS集成。\n* [FsCheck](https://github.com/fscheck/FsCheck) -  FsCheck是用于自动测试.NET程序的工具。\n* [Giraffe](https://github.com/dustinmoris/Giraffe) - 适用于F#开发人员的本机功能ASP.NET核心Web框架。\n* [language-ext](https://github.com/louthy/language-ext) -  C#功能语言扩展。\n* [LaYumba.Functional](https://github.com/la-yumba/functional-csharp-code) - C＃中的函数式编程的代码示例。\n* [NetMQ.ReactiveExtensions](https://github.com/NetMQ/NetMQ.ReactiveExtensions) - 使用Reactive Extensions(RX)轻松地在网络上的任何位置发送消息。传输协议是ZeroMQ。\n* [Optional](https://github.com/nlkl/Optional) - Optional类型库.\n* [reactive-streams-dotnet](https://github.com/reactive-streams/reactive-streams-dotnet) - Reactive库。\n* [ReactiveUI](https://github.com/reactiveui/ReactiveUI) - 一个MVVM框架，它与Reactive Extensions for .NET集成，以创建在任何移动或桌面平台上运行的优雅，可测试的用户界面。\n* [Rx.NET](https://github.com/Reactive-Extensions/Rx.NET) -  Rx.NET库。\n* [Qactive](https://github.com/RxDave/Qactive) - Reactive 可查询库。\n* [sodium](https://github.com/SodiumFRP/sodium/tree/master/) - Reactive 多语言库。\n\n### 图片\n* [GLFWDotNet](https://github.com/smack0007/GLFWDotNet) -  GLFW的.NET绑定。\n* [ImageProcessor](https://github.com/JimBobSquarePants/ImageProcessor) - 一个流畅的System.Drawing包装器，用于处理图像文件。\n* [ImageSharp](https://github.com/SixLabors/ImageSharp) - 图像文件处理库。\n* [LibVLCSharp](https://github.com/videolan/libvlcsharp) - LibVLCSharp是基于VideoLAN的LibVLC库的.NET平台的跨平台音频和视频API。\n* [Magick.NET](https://github.com/dlemstra/Magick.NET) -  功能强大的图像处理库，支持超过100种主要文件格式（不包括子格式）。\n* [MagicScaler](https://github.com/saucecontrol/PhotoSauce) - 适用于.NET的MagicScaler高性能，高质量图像处理管道\n* [QRCoder](https://github.com/codebude/QRCoder) - 二维码实现库\n* [SharpBgfx](https://github.com/MikePopoloski/SharpBgfx) -  bgfx图形库的C#绑定。\n* [Structure.Sketching](https://github.com/JaCraig/Structure.Sketching) - 用于支持.NET Core的.NET应用程序的图像处理库。\n* [veldrid](https://github.com/mellinoe/veldrid) - 一个用于.NET的低级硬件加速3D图形库。\n* [ZXing.Net](https://github.com/micjahn/ZXing.Net/) 二维码、条形码的生成和读取\n\n### 图形用户界面GUI\n* [AdonisUI](https://github.com/benruehl/adonis-ui) - 用于WPF应用程序的轻量级UI工具包，提供经典但增强的Windows视觉效果。\n* [Avalonia](https://github.com/AvaloniaUI/Avalonia) - 跨平台UI框架。\n* [AvaloniaEdit](https://github.com/AvaloniaUI/AvaloniaEdit/) - 基于Avalonia的文本编辑器组件。\n* [HandyControls](https://github.com/ghost1372/HandyControls) - 包含一些简单且常用的WPF控件。\n* [Lara](https://github.com/integrativesoft/lara) - Lara Web Engine是用于使用C＃开发Web用户界面的库\n* [ShellProgressBar](https://github.com/Mpdreamz/shellprogressbar) - 可视化（并行）控制台应用程序库。\n* [Qml.Net](https://github.com/pauldotknopf/Qml.Net) - 使用Qml.Net在.NET中构建跨平台的桌面应用程序。\n* [WinApi](https://github.com/prasannavl/WinApi) - 一个简单，直接，超薄的CLR库，用于高性能Win32 Native Interop，具有自动化，窗口，DirectX，OpenGL和Skia助手。\n\n### 集成开发环境IDE\n* [Mono](https://github.com/mono/monodevelop) -  MonoDevelop使开发人员能够在Linux，Windows和Mac OS X上快速编写桌面和Web应用程序。\n* [rider](https://www.jetbrains.com/rider/) - 基于IntelliJ平台和ReSharper的跨平台C#IDE。\n* [Omnisharp](http://www.omnisharp.net/) - 开源项目系列，每个项目都有一个目标：在您选择的编辑器中实现出色的.NET体验。\n* [SharpDevelop](https://github.com/icsharpcode/SharpDevelop) -  SharpDevelop是一个免费的集成开发环境(IDE)，适用于Microsoft.NET平台上的C#，VB.NET，Boo，IronPython，IronRuby和F#项目。它(几乎)完全用C#编写，并带有您期望在IDE中使用的功能以及更多功能。\n* [Visual Studio Code](https://github.com/Microsoft/vscode) - 它结合了代码编辑器的简单性和开发人员的核心编辑 - 构建 - 调试周期所需的工具。VS Code提供全面的编辑和调试支持，可扩展性模型以及与现有工具的轻量级集成。\n* [Visual Studio Community](https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx) - 功能完备且可扩展的免费 IDE，可用于创建新式 Android、iOS、Windows 应用以及 Web 应用和云服务。\n\n### 国际化\n* [Localization](https://github.com/aspnet/Localization) -  ASP.NET Core应用程序的本地化抽象和实现库。\n* [NetCoreStack.Localization](https://github.com/NetCoreStack/Localization) - 具带有实体框架和内存缓存中的.NET Core的数据库资源本地化库。\n* [Westwind.Globalization](https://github.com/RickStrahl/Westwind.Globalization) -  数据库驱动资源本地化库。\n\n### 控制反转IOC\n* [AutoDI](https://github.com/Keboo/AutoDI) - 使用IL编译的超快依赖注入库。\n* [Autofac](https://github.com/autofac/Autofac) - IoC容器。\n* [Castle.Windsor](https://github.com/castleproject/Windsor) -  IoC容器。\n* [DryIoc](https://github.com/dadhi/DryIoc) - 快速，小巧，功能齐全的IoC。\n* [Grace](https://github.com/ipjohnson/Grace) -  Grace是一款功能丰富的依赖注入容器，其设计考虑了易用性和性能。\n* [Inyector](https://github.com/davidrevoledo/Inyector) -  AspNetCore的依赖注入自动化。\n* [Lamar](https://github.com/JasperFx/lamar) - 快速的IOC工具库。\n* [LightInject](https://github.com/seesharper/LightInject) - 超轻量级IoC容器。\n* [SimpleInjector](https://github.com/simpleinjector/SimpleInjector) - 简单，灵活，快速的依赖注入库。\n* [Stashbox](https://github.com/z4kn4fein/stashbox) - 基于.NET的解决方案的轻量级，可移植依赖注入框架。\n* [Unity](https://github.com/unitycontainer/unity) - 轻量级，可扩展的依赖项注入容器。\n\n### 日志\n* [common-logging](https://github.com/net-commons/common-logging) -  抽象的日志记录库。\n* [dnxcore-logging-logstash](https://github.com/jvandevelde/dnxcore-logging-logstash) - 具有UDP和Redis传输的.NET Core应用程序的Logstash日志记录扩展库。\n* [ElmahCore](https://github.com/ElmahCore/ElmahCore) - 错误日志库。\n* [Exceptionless](https://github.com/exceptionless/Exceptionless.Net) - 异常客户端。\n* [Foundatio](https://github.com/exceptionless/Foundatio#logging) - 日志记录API库。\n* [Karambolo.Extensions.Logging.File](https://github.com/adams85/filelogger) - 轻量级但功能丰富的文件记录库。\n* [log4net](https://github.com/apache/logging-log4net) -  log4net日志记录。\n* [NLog](https://github.com/NLog/NLog) - Nlog日志记录。\n * [NLog for ASP.NET and ASP.NET Core](https://github.com/NLog/NLog.Web) - 用于ASP.NET和ASP.NET Core 1-3的NLog集成\n  * [NLog.Extensions.Logging](https://github.com/NLog/NLog.Extensions.Logging) - 用于.NET标准库和.NET Core应用程序的Microsoft.Extensions.Logging的NLog提供程序\n  * [NLog.Windows.Forms](https://github.com/NLog/NLog.Windows.Forms) - 特定于Windows.Forms的日志目标\n  * [NLog.MailKit](https://github.com/NLog/NLog.MailKit) - 使用using MailKit库的替代邮件目标\n* [Q42.Logging.ApplicationInsights](https://github.com/Q42/Q42.Logging.ApplicationInsights) - 用于在ASP.NET Core日志中构建的日志附加程序，以将所有日志发送到Application Insights。\n* [serilog](https://github.com/serilog/serilog) - 具有完全结构化事件的简单.NET日志记录。\n  * [serilog-aspnetcore](https://github.com/serilog/serilog-aspnetcore) - Serilog集成库。\n  * [Serilog.Exceptions](https://github.com/RehanSaeed/Serilog.Exceptions) - Serilog异常库。\n  * [Serilog.Settings.Configuration](https://github.com/serilog/serilog-settings-configuration) - Serilog设置库。\n* [SEQ](https://getseq.net) - Seq是收集，搜索，分析和警报结构化日志数据服务器。\n\n### 机器学习和科学研究\n* [Accord](https://github.com/accord-net/framework) -  Accord.NET项目为.NET提供了机器学习，统计，人工智能，计算机视觉和图像处理方法。\n* [Catalyst](https://github.com/curiosity-ai/catalyst) 受spaCy启发的跨平台自然语言处理（NLP）库，具有预训练的模型，对单词和文档嵌入进行训练的现成支持以及灵活的实体识别模型\n* [ML.NET](https://github.com/dotnet/machinelearning) - ML.NET是.NET的开源和跨平台机器学习框架。\n* [Spreads](https://github.com/Spreads/Spreads/) - 用于数据流实时探索和分析的库。\n* [TensorFlowSharp](https://github.com/migueldeicaza/TensorFlowSharp) - 适用于.NET语言的TensorFlow API。\n* [WaveFunctionCollapse](https://github.com/mxgmn/WaveFunctionCollapse) - 借助量子力学的思想，从单个例子​​生成itmap和tilemap。\n* [SiaNet](https://github.com/SciSharp/SiaNet) - 具有CUDA / OpenCL支持的易于使用的C＃深度学习。\n\n### 邮件\n* [FluentEmail](https://github.com/lukencode/FluentEmail) -  电子邮件发送库。\n* [MailBody](https://github.com/doxakis/MailBody) - 使用流畅的界面(.NET)创建电子邮件。\n* [MailKit](https://github.com/jstedfast/MailKit) - 用于IMAP，POP3和SMTP的跨平台.NET库。\n* [MailMergeLib](https://github.com/axuno/MailMergeLib) -  SMTP邮件客户端库，为文本，内嵌图像和附件提供邮件合并功能，以及发送邮件的良好吞吐量和容错能力。\n* [MimeKit](https://github.com/jstedfast/MimeKit) - 跨平台.NET MIME创建和解析器库，支持S/MIME, PGP, DKIM, TNEF and Unix mbox。\n* [netDumbster](https://github.com/cmendible/netDumbster) - 用于测试的.Net假SMTP服务器。克隆流行的Dumbster。\n* [Papercut](https://github.com/ChangemakerStudios/Papercut) - 简单桌面SMTP服务器。\n* [PreMailer.Net](https://github.com/milkshakesoftware/PreMailer.Net) - css和样式结合的邮件库。\n* [SendGrid Client](https://github.com/0xdeafcafe/sendgrid-dotnet) - C# library for the SendGrid v3 mail endpoint.\n* [SmtpServer](https://github.com/cosullivan/SmtpServer) - 用于创建自己的SMTP服务器的库。\n* [StrongGrid](https://github.com/Jericho/StrongGrid) -  SendGrid的v3 API客户端。不仅允许您发送电子邮件，还允许您批量导入联系人，管理列表和段，为列表创建自定义字段等。还包括SendGrid Webhooks的解析器。\n\n### 数学\n* [UnitConversion](https://github.com/Stratajet/UnitConversion) - 用于.NET Core和.NET Framework的可扩展单元转换库。\n* [AutoDiff](https://github.com/alexshtf/autodiff) - 一个库，提供快速，准确和自动的数学函数微分(计算导数/梯度)。\n\n### Media\n* [MetadataExtractor](https://github.com/drewnoakes/metadata-extractor-dotnet) - 使用简单易用的API从媒体（图像，视频，音频）中提取元数据。\n\n### 大杂烩\n* [AdvanceDLSupport](https://github.com/Firwood-Software/AdvanceDLSupport) - 基于P/Invoke的库。\n* [AngleSharp](https://github.com/AngleSharp/AngleSharp) - 尖括号解析器库。它解析HTML5，MathML，SVG和CSS，以构建基于官方W3C规范的DOM。可与python的beautifulsoup4相媲美。\n* [AgileMapper](https://github.com/agileobjects/AgileMapper) -  AgileMapper是一个零配置，高度可配置的对象 - 对象映射库，具有可查看的执行计划。\n* [AspNetCore Extension Library](https://github.com/sgjsakura/AspNetCore) - ASP.NET Core扩展库。\n* [AutoMapper](https://github.com/AutoMapper/AutoMapper) -  .NET中基于约定的对象关系映射库。\n* [Baget](https://github.com/loic-sharma/BaGet) - 轻量级NuGet服务器。\n* [Bleak](https://github.com/Akaion/Bleak) -  Windows本机DLL注入库。\n* [Bullseye](https://github.com/adamralph/bullseye/) - 用于描述和运行目标及其依赖项的.NET包。\n* [Castle.Core](https://github.com/castleproject/Core) -  Castle Core提供常见的Castle Project抽象，包括日志记录服务。\n* [Chessie](https://github.com/fsprojects/Chessie) - Railway-oriented编程库。\n* [CliWrap](https://github.com/Tyrrrz/CliWrap) - 命令行界面的包装库。\n* [commanddotnet](https://github.com/bilal-fazlani/commanddotnet) - 在类中为您的命令行应用程序接口建模。\n* [CommonMark.NET](https://github.com/Knagis/CommonMark.NET) - 在C#中实现CommonMark规范，用于将Markdown文档转换为HTML。\n* [ConsoleTableExt](https://github.com/minhhungit/ConsoleTableExt) - 用于为.NET控制台应用程序创建表的Fluent库。\n* [CoordinateSharp](https://github.com/Tronald/CoordinateSharp) - 一个可以快速格式化和转换地理坐标以及提供基于位置的太阳和月亮信息(日落，日出，月亮照明等)的库。 )。\n* [datatables](https://github.com/ALMMa/datatables.aspnet/tree/dev) -  jQuery DataTables的帮助程序。\n* [DinkToPdf](https://github.com/rdvojmoc/DinkToPdf) - 用于wkhtmltopdf库的C#.NET包装库，它使用Webkit引擎将HTML页面转换为PDF。\n* [dotnet-env](https://github.com/tonerdo/dotnet-env) - 用于从.env文件加载环境变量的.NET库。\n* [DotNet.Glob](https://github.com/dazinator/DotNet.Glob) - 快速通配库。优于正则表达式。\n* [Dotnet outdated](https://github.com/jerriep/dotnet-outdated) - 显示过时的NuGet的工具库。\n* [Dotnet Script](https://github.com/filipw/dotnet-script) - 从.NET CLI运行C#脚本。\n* [Dotnet Serve](https://github.com/natemcmaster/dotnet-serve) - 用于.NET Core CLI的简单命令行HTTP服务器。\n* [Eighty](https://github.com/benjamin-hodgson/Eighty) - 一个简单的HTML生成库\n* [Enums.NET](https://github.com/TylerBrinkley/Enums.NET) -  Enums.NET是一个高性能类型安全的.NET枚举实用程序库\n* [FastExpressionCompiler](https://github.com/dadhi/FastExpressionCompiler) - 快速ExpressionTree编译器。\n* [FluentDocker](https://github.com/mariotoffia/FluentDocker) - FluentDocker是一个与docker-machine，docker-compose和docker交互的库。\n* [FluentFTP](https://github.com/robinrodricks/FluentFTP/) -  FTP和FTPS客户端，具有广泛的FTP命令，SSL / TLS连接，散列/校验等。\n* [Fody](https://github.com/Fody/Fody) - 编辑.net程序集的可扩展工具。\n* [HdrHistogram.NET](https://github.com/HdrHistogram/HdrHistogram.NET) - 高动态范围(HDR)直方图。\n* [httpclient-interception](https://github.com/justeat/httpclient-interception) - 用于拦截服务器端HTTP依赖关系的.NET标准库。\n* [Humanizer](https://github.com/Humanizr/Humanizer) -  Humanizer满足您操作和显示字符串，枚举，日期，时间，时间跨度，数字和数量的所有.NET需求。\n* [Humidifier](https://github.com/jakejscott/Humidifier) - Humidifier允许您以编程方式构建AWS CloudFormation模板。\n* [impromptu-interface](https://github.com/ekonbenefits/impromptu-interface) - 将DLR与Reflect.Emit结合使用的库。\n* [JqueryDataTablesServerSide](https://github.com/fingers10/JqueryDataTablesServerSide) - 用于jQuery DataTable的Asp.Net Core服务器端库，具有分页，过滤，排序和Excel导出功能。\n* [LibSass Host](https://github.com/Taritsyn/LibSassHost) - 围绕LibSass库的.NET包装器，能够支持虚拟文件系统。\n* [markdig](https://github.com/lunet-io/markdig) - 可兼容Markdown处理库。\n* [NetCoreBeauty](https://github.com/nulastudio/NetCoreBeauty) - 简单的库，用于将.NET Core应用程序运行时组件和依赖项移动到子目录中，并使其美观。\n* [NFlags](https://github.com/bartoszgolek/NFlags) - 解析CLI和开箱即用功能的库。\n* [NReco.LambdaParser](https://github.com/nreco/lambdaparser) - 将字符串表达式(公式，方法调用，条件)解析为LINQ表达式树，可以编译为lambda并进行求值。\n* [NuGet Trends](https://github.com/NuGetTrends/nuget-trends) - 查看NuGet软件包的采用情况以及NuGet的最新趋势程序。\n* [NYoutubeDL](https://gitlab.com/BrianAllred/NYoutubeDL) - youtube-dl库。\n* [Otp.NET](https://github.com/kspearrin/Otp.NET) - 在C#中实现TOTP RFC 6238和HOTP RFC 4226。\n* [pose](https://github.com/tonerdo/pose) - 用委托替换任何.NET方法(包括静态和非虚拟)\n* [PuppeteerSharp](https://github.com/kblok/puppeteer-sharp) -  Puppeteer Sharp是官方Node.JS Puppeteer API的.NET端口。\n* [readline](https://github.com/tsolarin/readline) - 可以代替内置组件Console.ReadLine()的库。\n* [ReflectionMagic](https://github.com/ReflectionMagic/ReflectionMagic) - Framework to drastically simplify your private reflection code using C# dynamic\n* [Relinq](https://github.com/re-motion/Relinq) - 使用re-linq，现在比以往更容易创建功能齐全的LINQ提供商。\n* [Remote.Linq](https://github.com/6bee/Remote.Linq) - Remote Linq是一个小型且易于使用但功能非常强大的库，可将LINQ表达树转换为强类型可序列化的表达树，反之亦然。\n* [ReverseMarkdown](https://github.com/mysticmind/reversemarkdown-net) -  Html到Markdown转换器库，附带一些unix shell终端优势。\n* [PdfReport.Core](https://github.com/VahidN/PdfReport.Core) -  PdfReport.Core是一个代码优先的报告引擎，它建立在iTextSharp.LGPLv2.Core和EPPlus.Core库之上。\n* [Scientist](https://github.com/github/Scientist.net) - 用于重构关键路径的.NET库。它是GitHub的Ruby Scientist库的一个端口。\n* [Scrutor](https://github.com/khellang/Scrutor) -  Microsoft.Extensions.DependencyInjection的程序集扫描扩展。\n* [Sheller](https://github.com/twitchax/Sheller) - 读取Shell脚本的库。\n* [SmartFormat.NET](https://github.com/scottrippey/SmartFormat.NET) -  string.Format的可扩展替代品。\n* Stocks\n  * [Trady](https://github.com/lppkarl/Trady) - Trady是一个用于计算技术指标的便捷库，它的目标是成为一个自动交易系统，提供股票数据馈送，指标计算，策略建立和自动交易。\n* [System.Linq.Dynamic.Core](https://github.com/StefH/System.Linq.Dynamic.Core) - System Linq Dynamic功能。\n* [UnitsNet](https://github.com/angularsen/UnitsNet) -  Units.NET为您提供所有常用的度量单位和它们之间的转换。\n* Validation\n  * [FluentValidation](https://github.com/JeremySkinner/FluentValidation) - 流行的.NET验证库，用于构建强类型的验证规则。\n  * [FormHelper](https://github.com/SinanBozkus/FormHelper) - ASP.NET Core的表单和验证帮助器。表单助手可帮助您创建Ajax表单和验证，而无需编写任何JavaScript代码。\n  * [Guard](https://github.com/safakgur/guard) - 高性能，可扩展的参数验证库。\n  * [Valit](https://github.com/valit-stack/Valit) - Valit是对.NET Core的简单验证库，减少if的使用。\n* [Vanara](https://github.com/dahall/Vanara) - 一组用于Windows的.NET库，通过支持的包装程序实现了对许多本机Windows API的PInvoke调用。\n* [warden-stack](https://github.com/warden-stack) - 针对您的应用程序，资源和基础架构的“运行状况检查”。让守望者守在手表上。\n* [WebEssentials.AspNetCore.ServiceWorker](https://github.com/madskristensen/WebEssentials.AspNetCore.ServiceWorker) -  ASP.NET核心渐进式Web应用程序。\n* [Xabe.FFmpeg](https://github.com/tomaszzmuda/Xabe.FFmpeg) - 用于FFmpeg的.NET标准包装器。它允许在不知道FFmpeg如何工作的情况下处理媒体，并且可以用于将自定义参数传递给来自C#应用程序的FFmpeg。\n* [YoutubeExplode](https://github.com/Tyrrrz/YoutubeExplode) - 用于提取元数据和下载Youtube视频和播放列表的终极库。\n\n### 网络\n* [AspNetCore.Proxy](https://github.com/twitchax/AspNetCore.Proxy) -  Proxy代理库。\n* [CurlThin](https://github.com/stil/CurlThin) - 轻量级cURL绑定库，支持通过curl_multi接口进行多个同时传输。\n* [NETStandard.HttpListener](https://github.com/StefH/NETStandard.HttpListener) - HttpListener(NETStandard)。\n* [Networker](https://github.com/MarkioE/Networker) - 一个简单易用的.NET TCP和UDP网络库，旨在实现灵活，可扩展和快速。\n\n### 办公软件\n* [EPPlus](https://github.com/EPPlusSoftware/EPPlus) - 使用.NET创建高级Excel电子表格。\n* [npoi](https://github.com/tonyqus/npoi) - 可以读取/写入未安装Microsoft Office的Office格式的.NET库。没有COM +，没有互操作。\n* [Open-XML-SDK](https://github.com/OfficeDev/Open-XML-SDK) -  Open XML SDK提供了使用Office Word，Excel和PowerPoint文档的工具。\n\n### 操作系统\n* [CosmosOS](https://github.com/CosmosOS/Cosmos) - Cosmos是操作系统的“构建工具包”。使用托管语言（例如C＃，VB.NET等）构建自己的OS！\n\n### 对象关系映射ORM\n* [Chloe](https://github.com/shuxinqin/Chloe) - 用于.NET的轻量级高性能对象/关系映射(ORM)库。\n* [Entity Framework Core](https://github.com/aspnet/EntityFramework) - EF，包括LINQ，POCO和Code First支持。\n  * [EFCore.BulkExtensions](https://github.com/borisdj/EFCore.BulkExtensions) - EF的批量操作库\n  * [EntityFramework-Plus](https://github.com/zzzprojects/EntityFramework-Plus) - EF扩展库，包括过滤器，审核，缓存，查询将来，批删除，批更新等。\n  * [EntityFramework.Exceptions](https://github.com/Giorgi/EntityFramework.Exceptions) - 当您的SQL查询违反SqlServer，MySql或PostgreSQL中的数据库约束时，请对EntityFrameworkCore使用类型化的异常处理。\n  * [EntityFramework.Triggers](https://github.com/NickStrupat/EntityFramework.Triggers) - EF触发器.\n  * [EntityFramework.Rx](https://github.com/NickStrupat/EntityFramework.Rx) - EF的Reactive 扩展程序。\n  * [Npgsql.EntityFrameworkCore.PostgreSQL](https://github.com/npgsql/Npgsql.EntityFrameworkCore.PostgreSQL) - PostgreSQL的EF驱动程序\n  * [EntityFramework.PrimaryKey](https://github.com/NickStrupat/EntityFramework.PrimaryKey) - EF的主键库。\n  * [EntityFramework.TypedOriginalValues](https://github.com/NickStrupat/EntityFramework.TypedOriginalValues) - 获取实体属性.\n  * [EntityFramework.VersionedProperties](https://github.com/NickStrupat/EntityFramework.VersionedProperties) -  EF找那个属性库。\n  * [LINQKit](https://github.com/scottksmith95/LINQKit) - LINQKit是LINQ对SQL和Entity Framework的免费扩展集。\n  * [Pomelo.EntityFrameworkCore.MySql](https://github.com/PomeloFoundation/Pomelo.EntityFrameworkCore.MySql) - mysql的EF驱动程序。\n  * [spectre.query](https://github.com/spectresystems/spectre.query) - EF的简单查询库。\n* [Dapper](https://github.com/StackExchange/Dapper) -  .NET的简单对象映射器。\n  * [Dapper-FluentMap](https://github.com/henkmollema/Dapper-FluentMap) - Dapper的扩展。\n  * [Dommel](https://github.com/henkmollema/Dommel) - Dapper的CRUD操作。\n  * [MicroOrm.Dapper.Repositories](https://github.com/phnx47/MicroOrm.Dapper.Repositories) - Dapper的CRUD操作。\n* [FreeSql](https://github.com/2881099/FreeSql) -  ORM支持Mysql, Postgresql, SqlServer, Oracle and Sqlite.\n* [Limebean](https://nick-lucas.github.io/LimeBean/) -  Hybrid-ORM，设计简单易用，不完全隐藏SQL，同时拥有您期望从ORM获得的所有好处。灵感来自RedBeanPHP。\n* [LINQ to DB (linq2db)](https://linq2db.github.io/) - LINQ to DB是最快的LINQ数据库访问库，在POCO对象和数据库之间提供了一个简单，轻便，快速且类型安全的层。\n* [nhibernate-core](https://github.com/nhibernate/nhibernate-core) -  NHibernate对象关系映射器。\n* [NEventStore](https://github.com/NEventStore/NEventStore) - 持久性库，该库的开发特别关注DDD / CQRS应用程序。\n* [NPoco](https://github.com/schotime/NPoco) - 简单的microORM，可将查询结果映射到POCO对象。项目基于Schotime的PetaPoco。\n* [NReco.Data](https://github.com/nreco/data) - 用于SQL命令生成，CRUD操作和简单POCO映射的轻量级的独立DAL。\n* [PetaPoco](https://github.com/CollaboratingPlatypus/PetaPoco) - 对于你的POCO来说，这是一个很小的ORM东西。\n* [querybuilder](https://github.com/sqlkata/querybuilder) -  SqlKata Query Builder是一个用C#编写的功能强大的Sql查询。\n* [RepoDb](https://github.com/mikependon/RepoDb) - 用于.NET的动态，轻量，高效且非常快速的混合ORM库。\n  * [RepoDb.MySql](https://github.com/mikependon/RepoDb/tree/master/RepoDb.MySql) - MySql的ORM库.\n  * [RepoDb.SqLite](https://github.com/mikependon/RepoDb/tree/master/RepoDb.SqLite) - SqLite的ORM库.\n* [ServiceStack.OrmLite](https://github.com/ServiceStack/ServiceStack.OrmLite) - 轻松，简单，快速的基于约定的POCO ORM。\n* [SqlFu](https://github.com/sapiens/SqlFu) - 快速且通用的Micro-ORM。\n* [SmartSql](https://github.com/Ahoo-Wang/SmartSql) -  SmartSql = MyBatis + Cache(Memory | Redis)+ ZooKeeper + R / W Splitting + Dynamic Repository ....\n* [SQLStreamStore](https://github.com/SQLStreamStore/SQLStreamStore) - 针对基于SQL的.NET实现的Stream Store库。\n\n### 分析\n* [Glimpse](https://github.com/Glimpse/Glimpse.Prototype) - 适用于.NET的轻量级，开源，实时诊断和洞察分析器。 `不稳定的版本`\n* [MiniProfiler](https://github.com/MiniProfiler/dotnet) - 一个简单但有效的ASP.NET网站迷你探查器。\n\n### sql生成器\n* [SqlKata](https://github.com/sqlkata/querybuilder) - 优雅的Sql查询生成器，支持复杂查询，连接，子查询，嵌套条件，供应商引擎目标等等\n\n### 消息队列\n* [emitter](https://emitter.io/) - 连接所有设备的免费开源实时消息服务。此发布 - 订阅消息传递API是为了提高速度和安全性而构建的。\n* [EventStore](https://github.com/EventStore/EventStore) - 使用JavaScript中的复杂事件处理的开源，功能数据库。\n* [Foundatio](https://github.com/exceptionless/Foundatio#queues) - 内存，redis和azure实现的通用接口。\n* [MediatR](https://github.com/jbogard/MediatR) -  中介模式库。\n * [MediatR.Extensions.Microsoft.DependencyInjection](https://github.com/jbogard/MediatR.Extensions.Microsoft.DependencyInjection) - MediatR的扩展程序\n* [Mediator.Net](https://github.com/mayuanyang/Mediator.Net) -  .Net的简单中介，用于发送支持管道的命令，发布事件和请求响应。\n* [MicroBus](https://github.com/Lavinski/Enexure.MicroBus) - MicroBus中介模式库。\n* [MQTTnet](https://github.com/chkr1011/MQTTnet) -  MQTTnet是一个用于基于MQTT的通信的高性能.NET库。\n* [netmq](https://github.com/zeromq/netmq) -  NetMQ是轻量级消息传递库。\n* [OpenCQRS](https://github.com/OpenCQRS/OpenCQRS) - 用于DDD，CQRS和事件的.NET核心库，具有Azure Service Bus集成。 Command和Event存储支持的数据库提供程序包括：DocumentDB，MongoDB，SQL Server，MySQL，PostgreSQL和SQLite。\n* [rabbitmq-dotnet-client](https://github.com/rabbitmq/rabbitmq-dotnet-client) -  RabbitMQ .NET客户端。\n* [RawRabbit](https://github.com/pardahlman/RawRabbit) - 用于通过RabbitMq进行通信的现代.NET框架。\n* [Rebus](https://github.com/rebus-org/Rebus) -  .NET的简单和精简服务总线实现。\n* [Restbus](http://restbus.org) -  RabbitMq的消息传递库。\n* [Tossit](https://github.com/turgayozgur/tossit) - 简单易用的库，用于分布式作业/工作人员逻辑。内置RabbitMQ实现处理的分布式消息。\n\n### 报表\n* [FastReport](https://github.com/FastReports/FastReport) -  .NET Core 2.x / .Net Framework 4.x的开源报告生成器。 FastReport可用于MVC，Web API应用程序。\n\n### 任务计划\n* [Chroniton.NetCore](https://github.com/leosperry/Chroniton) - 用于在日程安排上运行任务(作业)的轻量级健壮库。\n* [Coravel](https://github.com/jamesmh/coravel) -  .Net Core符合Laravel：调度，排队等\n* [FluentScheduler](https://github.com/fluentscheduler/FluentScheduler) - 具有流畅界面的自动作业调度程序。\n* [Gofer.NET](https://github.com/brthor/Gofer.NET) - 用于.NET Core的分布式后台任务/作业的简易C#API。\n* [HangfireIO](https://github.com/HangfireIO/Hangfire) - 在ASP.NET应用程序内执行即发即忘，延迟和重复性工作。\n* [LiquidState](https://github.com/prasannavl/LiquidState) - 高效异步和同步状态机。\n* [NCrontab](https://github.com/atifaziz/NCrontab) - 用于.NET的Crontab。\n* [quartznet](https://github.com/quartznet/quartznet/) -  Quartz.NET任务计划程序。\n* [stateless](https://github.com/dotnet-state-machine/stateless) - 用于在C#代码中创建状态机的简单库。\n\n### 开发工具包SDKs\n* [AWS SDK](https://github.com/aws/aws-sdk-net) -  Amazon Web Services(AWS).NET Core SDK组件。每个AWS服务都有自己的NuGet包。\n* [azure-event-hubs-dotnet](https://github.com/azure/azure-event-hubs-dotnet) -  Azure事件中心的.NET标准客户端库。\n* Blockchain clients\n  * [Bittrex.Net](https://github.com/JKorf/Bittrex.Net) - Bittrex web API的库 。\n  * [Binance.Net](https://github.com/JKorf/Binance.Net) - Binance Web的API库。\n* [CakeMail.RestClient](https://github.com/Jericho/CakeMail.RestClient) -  CakeMail API的客户端。允许您发送交易电子邮件，批量电子邮件，管理列表和联系人等。\n* [consuldotnet](https://github.com/PlayFab/consuldotnet/tree/develop) - 面向领事的.NET API。\n* [csharp-nats](https://github.com/nats-io/csharp-nats) - 用于NATS消息传递系统的C#.NET客户端。\n* [DarkSkyCore](https://github.com/amweiss/dark-sky-core) -  .NET标准库，用于使用Dark Sky API\n* [Docker.DotNet](https://github.com/Microsoft/Docker.DotNet) - 用于Docker API的.NET(C#)客户端库。\n* [firebase-admin-dotnet](https://github.com/firebase/firebase-admin-dotnet) -  Firebase Admin .NET SDK\n* [google-cloud-dotnet](https://github.com/GoogleCloudPlatform/google-cloud-dotnet) - 适用于.NET的Google Cloud Client Libraries。\n* [Manatee.Trello](https://github.com/gregsdennis/Manatee.Trello) - 一个完全面向对象的.Net包装器，用于Trello用C#编写的RESTful API。\n* [Microphone](https://github.com/rogeralsing/Microphone) - 使用Consul或ETCD集群的Web Api或NancyFx运行自托管REST服务的轻量级框架。\n* [octokit.net](https://github.com/octokit/octokit.net) - 用于.NET的GitHub API客户端库。\n* [PreStorm](https://github.com/jshirota/PreStorm) -  ArcGIS Server的并行REST客户端。\n* [SendGrid-csharp](https://github.com/sendgrid/sendgrid-csharp) - 用于使用完整SendGrid API的C#客户端库。\n* [statsd-csharp-client](https://github.com/Pereingo/statsd-csharp-client) - 与.NET标准兼容的C#客户端与Etsy的优秀服务器。\n* [tweetinvi](https://github.com/linvi/tweetinvi) - 直观的.NET C#库，用于访问Twitter REST和STREAM API。\n\n### 安全\n* [aspnetcore-security-headers](https://github.com/juunas11/aspnetcore-security-headers) - 用于向ASP.NET Core应用程序添加安全标头的中间件。\n* [HtmlSanitizer](https://github.com/mganss/HtmlSanitizer) - 清除HTML以避免XSS攻击。\n* [jose-jwt](https://github.com/dvsekhvalnov/jose-jwt) - 用于处理JOSE对象的库(JWT，JWA，JWS及相关)。\n* [Jwt.Net](https://github.com/jwt-dotnet/jwt) -  Jwt.Net，一个用于.NET的JWT(JSON Web令牌)实现。\n* [JWT Simple Server](https://github.com/Xabaril/JWTSimpleServer) - 用于ASP.NET Core的轻量级动态jwt服务器。\n* [NWebsec](https://github.com/NWebsec/NWebsec) -  ASP.NET的安全库。\n* [reCAPTCHA](https://github.com/PaulMiami/reCAPTCHA) - 用于ASP.NET Core的reCAPTCHA 2.0。\n* [roslyn-security-guard](https://github.com/dotnet-security-guard/roslyn-security-guard) - 旨在帮助.NET应用程序进行安全审计的Roslyn分析器。\n* [OwaspHeaders](https://github.com/GaProgMan/OwaspHeaders.Core) -  .NET Core中间件，用于注入Owasp推荐的HTTP标头，以提高安全性。\n* [Security](https://github.com/aspnet/Security) - 于Web应用程序的安全性和授权的中间件。\n* [SecurityHeaders](https://github.com/andrewlock/NetEscapades.AspNetCore.SecurityHeaders) - 允许向ASP.NET Core网站添加安全标头的小包。\n\n### 搜索\n* [Algolia.Search](https://github.com/algolia/algoliasearch-client-csharp) - 官方Algolia .NET客户端的存储库。\n* [AutoComplete](https://github.com/omerfarukz/autocomplete) - 持久，简单，强大且可移植的自动完成库。\n* [Elasticsearch.Net & NEST](https://github.com/elastic/elasticsearch-net) - NEST和Elasticsearch.Net的存储库，这是两个官方Elasticsearch .NET客户端。\n* [ElasticsearchCRUD](https://github.com/damienbod/ElasticsearchCRUD) -  Elasticsearch .NET API。\n* [SearchExtensions](https://github.com/ninjanye/SearchExtensions) -  IQueryable接口的高级搜索功能，例如Entity Framework查询。\n* [SimMetrics.Net](https://github.com/StefH/SimMetrics.Net) - 相似度量标准库，例如从编辑距离(Levenshtein，Gotoh，Jaro等)到其他指标，(例如Soundex，Chapman)\n* [SolrExpress](https://github.com/solr-express/solr-express) - 用于Solr的简单轻量级查询.NET库，采用可控，可构建和快速失败的方式。\n\n### 序列化\n* [BinarySerializer](https://github.com/jefffhaynes/BinarySerializer) - 二进制序列化库，用于控制字节和位级别的数据格式。\n* [bond](https://github.com/Microsoft/bond) - 用于处理模式化数据的跨平台框架。它支持跨语言的序列化和强大的通用机制，可以有效地处理数据。 Bond广泛用于Microsoft的高规模服务。\n* [Channels](https://github.com/davidfowl/Channels) - 基于推送的.NET流。\n* [CsvHelper](https://github.com/JoshClose/CsvHelper) - 帮助读写CSV文件的库。\n* [Edi.Net](https://github.com/indice-co/EDI.Net) -  EDI Serializer / Deserializer。支持EDIFact，X12和TRADACOMS格式。\n* [ExtendedXmlSerializer](https://github.com/wojtpl2/ExtendedXmlSerializer) - 用于.NET的扩展Xml序列化程序。\n* [Jil](https://github.com/kevin-montrose/Jil) - 基于Sigil构建的快速.NET JSON(De)串行器。\n* MessagePack \n  * [msgpack-cli](https://github.com/msgpack/msgpack-cli) - 公共语言基础结构的MessagePack实现。\n  * [MessagePack-CSharp](https://github.com/neuecc/MessagePack-CSharp) - MessagePack序列化程序库。\n* [Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json) - 适用于.NET的流行高性能JSON框架。\n* [protobuf-net](https://github.com/mgravell/protobuf-net/) - 用于惯用.NET的协议缓冲库。\n* [Schema.NET](https://github.com/RehanSaeed/Schema.NET) -  Schema.org对象变成了强类型的C#POCO类，用于.NET。所有类都可以序列化为JSON / JSON-LD和XML，通常用于表示html页面头部的结构化数据。\n* [ServiceStack.Text](https://github.com/ServiceStack/ServiceStack.Text) -  JSON，JSV和CSV文本序列化器。\n* [TinyCsvParser](https://github.com/bytefish/TinyCsvParser) - 易于使用，易于扩展和高性能的库，用于使用.NET进行CSV解析。\n* [Wire](https://github.com/rogeralsing/Wire) -  POCO对象的二进制序列化程序。\n* [YamlDotNet](https://github.com/aaubry/YamlDotNet) -  .NET\n* [ZeroFormatter](https://github.com/neuecc/ZeroFormatter) - 用于.NET的快速二进制(de)序列化程序。\n* [Utf8Json](https://github.com/neuecc/Utf8Json) - 用于C#(.NET，.NET Core，Unity，Xamarin)的绝对最快和零分配JSON序列化器。\n* [YAXLib](https://github.com/sinairv/YAXLib) - 用于.NET Framework和.NET Core的XML序列化库。非常灵活和强大。\n\n### 模板引擎\n* [dotliquid](https://github.com/dotliquid/dotliquid) - TobiasLütke的Liquid模板语言的.NET端口。\n* [fluid](https://github.com/sebastienros/fluid) - 开源.NET模板引擎，尽可能接近Liquid模板语言。\n* [Portable.Xaml](https://github.com/cwensley/Portable.Xaml) - 用于读/写xaml文件的可移植.NET库。\n* [Razor](https://github.com/aspnet/Razor) - 用于MVC Web应用程序视图页面的CSHTML文件的分析器和代码生成器。\n* [RazorLight](https://github.com/toddams/RazorLight) - 基于Microsoft针对.NET Core的Razor解析引擎的模板引擎。\n* [Scriban](https://github.com/lunet-io/scriban) - A fast, powerful, safe and lightweight text templating language and engine for .NET.\n\n### 测试\n* [Atata](https://github.com/atata-framework/atata) - 基于Selenium WebDriver的Web UI测试自动化全功能框架。\n* [Bogus](https://github.com/bchavez/Bogus) - 简单而健全的C#假数据生成器。基于并从着名的faker.js移植。\n* [CoreBDD](https://github.com/stevenknox/CoreBDD) -  xUnit.net的BDD框架\n* [FakeItEasy](https://github.com/FakeItEasy/FakeItEasy) -  .NET的简易模拟库。\n* [FluentAssertions](https://github.com/fluentassertions/fluentassertions) - 一组.NET扩展方法，允许您更自然地指定TDD或BDD样式测试的预期结果。\n* [GenFu](https://github.com/MisterJames/GenFu) - 可用于生成实际测试数据的库。\n* [LightBDD](https://github.com/LightBDD/LightBDD) -  BDD框架允许创建易于阅读和维护的测试。\n* [mockhttp](https://github.com/richardszalay/mockhttp) - 为Microsoft的HttpClient库测试图层。\n* [moq.netcore](https://github.com/Moq/moq4) - 最受欢迎且最友好的.NET模拟框架。\n* [MSpec](https://github.com/machine/machine.specifications) - 用于编写BDD样式测试的流行测试框架。\n* [MyTested.AspNetCore.Mvc](https://github.com/ivaylokenov/MyTested.AspNetCore.Mvc) - 流畅的测试\n  framework for ASP.NET Core MVC.\n* [Netling](https://github.com/hallatore/Netling) - 加载测试客户端，以便轻松进行Web测试。\n* [NSpec](https://github.com/nspec/NSpec) - 针对C#的战斗强化测试框架，受Mocha和RSpec的启发。\n* [NSubstitute](https://github.com/nsubstitute/NSubstitute) -  .NET模拟框架的友好替代品。\n* [nunit](https://github.com/nunit/dotnet-test-nunit) - 面向.NET Core的NUnit测试运行器。\n* [shouldly](https://github.com/shouldly/shouldly) - 断言框架*Should* be! \n* [SpecFlow](https://github.com/techtalk/SpecFlow) - SpecFlow是用于.NET的实用BDD解决方案。\n* [Storyteller](https://github.com/storyteller/Storyteller) - 一种制定可执行规范的工具。\n* [Stubbery](https://markvincze.github.io/Stubbery/) - 一个用于在.NET中创建和运行Api存根的简单库。\n* [Testavior](https://github.com/geeklearningio/Testavior) -  Testavior是一个轻量级解决方案，可帮助您开发ASP.NET Core的行为测试。\n* [TestStack.BDDfy](https://github.com/TestStack/TestStack.BDDfy) - 最简单的BDD框架！\n* [xBehave.net](https://github.com/xbehave/xbehave.net) - 一个xUnit.net扩展，用于描述使用自然语言的测试。\n* [xUnit.net](https://github.com/xunit/xunit) - 一个免费的，开源的，以社区为中心的.NET Framework单元测试工具。\n\n### 工具\n* [CliFx](https://github.com/Tyrrrz/CliFx) - 用于构建命令行界面的声明性框架。\n* [CommandLineUtils](https://github.com/natemcmaster/CommandLineUtils) -  .NET Core和.NET Framework的命令行解析和实用程序。\n* [docfx](https://github.com/dotnet/docfx) - 用于构建和发布.NET项目API文档的工具\n* [dotnetfiddle](https://dotnetfiddle.net) -  .NET沙箱，供开发人员快速尝试代码和共享代码片段。\n* [dotnet-tools](https://github.com/natemcmaster/dotnet-tools) -  .NET Core命令行(dotnet CLI)的工具扩展列表。\n  * [LibMan CLI](https://github.com/aspnet/LibraryManager) - 安装第三方库的工具.\n* [EntryPoint](https://github.com/Nick-Lucas/EntryPoint) -  .Net Core和.Net Framework 4.5+的可组合CLI(命令行)参数解析器。\n* [Fake JSON Server](https://github.com/ttu/dotnet-fake-json-server) - 用于原型设计或作为CRUD后端的假REST API。无需定义类型，使用动态类型。数据存储在单个JSON文件中。具有身份验证，WebSocket通知，异步长时间运行操作，错误/延迟的随机生成以及实验性GraphQL支持。\n* [gitignore.io](https://github.com/joeblau/gitignore.io) - 为您的项目创建有用的.gitignore文件。\n* [ICanHasDotnetCore](https://github.com/OctopusDeploy/ICanHasDotnetCore) - 扫描上传的packages.config文件或GitHub存储库，并确定nuget包是否针对.NET Standard。\n* [json2csharp](http://json2csharp.com) - 从JSON生成C#类。\n* [letsencrypt-win-simple](https://github.com/Lone-Coder/letsencrypt-win-simple) - 适用于Windows的简单ACME客户端。\n* [Linq_Faster](https://github.com/jackmott/LinqFaster) - 数组，Span <T>和List <T>的类似于Linq的扩展。\n \n* [mRemoteNG](https://github.com/mRemoteNG/mRemoteNG) - 下一代mRemote，开源，标签，多协议，远程连接管理器\n* [NJsonSchema](https://github.com/RSuter/NJsonSchema) -  NJsonSchema是一个.NET库，用于读取，生成和验证JSON Schema draft v4 + schemas。\n* [NuKeeper](https://github.com/NuKeeperDotNet/NuKeeper) - 自动更新.NET项目中的nuget包。\n* [NuGetPackageExplorer](https://github.com/NuGetPackageExplorer/NuGetPackageExplorer) - 使用GUI创建，更新和部署Nuget软件包。\n* [NugetVisualizer](https://github.com/sepharg/NugetVisualizer) - 为一组给定的git存储库或文件夹可视化所有nuget包及其相应的版本。\n* [OctoLinker](https://github.com/OctoLinker/browser-extension) - 使用适用于GitHub的OctoLinker浏览器扩展，有效地浏览`projects.json`文件。\n* [posh-dotnet](https://github.com/bergmeister/posh-dotnet) -  [dotnet CLI]的“PowerShell”标签完成(https://github.com/dotnet/cli)。\n* [Rin](https://github.com/mayuki/Rin) -  ASP.NET Core的请求/响应Inspector中间件。像Glimpse。\n* [scoop](https://github.com/lukesampson/scoop) -  Windows的命令行安装程序。\n* [SerilogAnalyzer](https://github.com/Suchiman/SerilogAnalyzer) - 使用Serilog日志库对基于Roslyn的代码进行分析。检查常见错误和使用问题。\n* [SharpZipLib](https://github.com/icsharpcode/SharpZipLib) -  #ziplib是一个完全用C#编写的适用于.NET平台的Zip，GZip，Tar和BZip2库。\n* [ShareX](https://github.com/ShareX/ShareX) - 免费的开源程序，可让您捕捉或记录屏幕的任何区域，只需按一下键即可共享。它还允许将图像，文本或其他类型的文件上传到80多个支持的目的地，您可以从中选择。 [https://getsharex.com](https://getsharex.com)\n* [SharpLab](https://github.com/ashmind/SharpLab) -  .NET代码游乐场，显示代码编译的中间步骤和结果。 [https://sharplab.io](https://sharplab.io)\n* [sourcelink](https://github.com/dotnet/sourcelink) -  SourceLink是一个语言和源代码控制不可知系统，用于为二进制文件提供一流的源代码调试体验。\n* [System.CommandLine](https://github.com/dotnet/command-line-api) - System.CommandLine：命令行解析，调用和呈现终端输出。\n* [X.Web.Sitemap](https://github.com/dncuug/X.Web.Sitemap) – 简单站点地图生成器。\n* [X.Web.RSS](https://github.com/dncuug/X.Web.RSS) – 简单站点RSS生成器。\n* [SmartCode](https://github.com/Ahoo-Wang/SmartCode) – SmartCode= IDataSource -> IBuildTask -> IOutput => Build Everything!!! (Including [Code generator])\n* [Common.Utility](https://github.com/Jimmey-Jiang/Common.Utility) - 各种工具类，例如：上传下载，加密解密等\n* [Masuit.Tools](https://github.com/ldqk/Masuit.Tools) - 含一些常用的操作类，加密解密，反射操作，动态编译，权重随机筛选算法，简繁转换，分布式短id，表达式树，linq扩展，文件压缩，多线程下载和FTP客户端，硬件信息，字符串扩展方法，日期时间扩展操作，中国农历，大文件拷贝，图像裁剪，验证码，断点续传，实体映射、集合扩展等常用封装。\n\n### Web框架\n* WebAssembly\n  * [Blazor](https://github.com/aspnet/blazor) - Blazor是使用C＃/ Razor和HTML的.NET Web框架，可在带有WebAssembly的浏览器中运行。 \n    * [Awesome Blazor](https://github.com/AdrienTorris/awesome-blazor) - Blazor的资源，Blazor是使用C＃/ Razor和HTML的.NET Web框架，可在具有WebAssembly的浏览器中运行。\n    * [Blazor Redux](https://github.com/torhovland/blazor-redux) - 将Redux状态存储与Blazor连接。\n  * [Ooui](https://github.com/praeclarum/Ooui) - 是使用Web技术的.NET跨平台的小型UI库。\n* [ReactJS.NET](https://github.com/reactjs/React.NET) - 用于JSX编译和React组件的服务器端呈现的.NET库。\n* [redux.NET](https://github.com/GuillaumeSalles/redux.NET) -  .NET应用程序的可预测状态容器。\n\n### Web Socket\n* [Fleck](https://github.com/statianzo/Fleck) -  Fleck是C#中的WebSocket服务器实现。 Fleck不需要继承，容器或其他引用。\n* [SignalR Server](https://github.com/aspnet/signalr) -  Web应用程序的实时Web功能，包括服务器端推送。\n* [SuperSocket](https://github.com/kerryjiang/SuperSocket) - 轻量级，跨平台和可扩展的套接字服务器应用程序框架。\n* [WampSharp](https://github.com/Code-Sharp/WampSharp) -  [Web应用程序消息传递协议]的C#实现- 提供远程消息传递模式的协议过程通过WebSockets调用和发布/预订。\n* [websocket-manager](https://github.com/radu-matei/websocket-manager) -  ASP .NET Core的实时库。\n\n### Windows服务\n* [dotnet-win32-service](https://github.com/dasMulli/dotnet-win32-service) - 直接从.NET Core设置并运行Windows服务。\n* [Topshelf](https://github.com/Topshelf/Topshelf) - Windows服务框架。\n\n### 工作流\n* [CoreWF](https://github.com/dmetzgar/corewf/) -  Windows Workflow Foundation(WF)到.NET Core的端口。\n* [workflow-core](https://github.com/danielgerlag/workflow-core) -  .NET Standard的轻量级工作流引擎。\n* [WorkflowEngine.NET](https://github.com/optimajet/WorkflowEngine.NET) - 在应用程序中添加工作流程的组件。\n* [Wexflow](https://github.com/aelassas/Wexflow) - 高性能，可扩展，模块化和跨平台的工作流引擎。\n\n## 线路图\n* [ASP.NET Core Developer Roadmap](https://github.com/MoienTajik/AspNetCore-Developer-Roadmap) - 2019年成为ASP.NET Core开发人员的路线图\n\n## 入门套件\n* [Arch](https://github.com/Arch) -  .NET Core库的集合。\n  * [AutoHistory](https://github.com/Arch/AutoHistory) - 自动记录数据更改历史记录的插件。\n* [AspNetCore-Angular2-Universal](https://github.com/MarkPieszak/aspnetcore-angular2-universal) - 跨平台 - 用于SEO，Bootstrap，i18n国际化(ngx-translate)，Webpack的服务器端渲染，TypeScript，带Karma的单元测试，WebAPI REST设置，SignalR，Swagger文档等等！\n* [ASP.NET Core Starter Kit](https://github.com/kriasoft/aspnet-starter-kit) - 使用Visual Studio Code，C＃，F＃，JavaScript，ASP.NET Core，EF Core，React（ReactJS），Redux，Babel进行跨平台的Web开发。单页应用样板。\n* [aspnetcore-spa generator](https://github.com/aspnet/JavaScriptServices) -  Yeoman生成器，用于构建全新的ASP.NET Core单页面应用程序，该应用程序使用Angular 2 / React / React与Redux / Knockout / Aurelia在客户端上。\n* [ASP.Net Core Vue Starter](https://github.com/MarkPieszak/aspnetcore-Vue-starter) -  Asp.NETCore 2.0 Vue 2(ES6)SPA入门套件，包含路由，Vuex等等！\n* [bitwarden-core](https://github.com/bitwarden/core) - 核心基础设施后端(API，数据库等)[https://bitwarden.com](https://bitwarden.com)。\n* [dotNetify](https://github.com/dsuryd/dotNetify) - 构建实时HTML5 / C#.NET Web应用程序的简单，轻量级但功能强大的方法。\n* [generator-aspnet](https://github.com/OmniSharp/generator-aspnet) - 用于ASP.NET Core的yo生成器。\n* [Nucleus](https://github.com/alirizaadiyahsi/Nucleus) - 在后端使用ASP.NET Core API分层架构和基于JWT的身份验证的Vue启动应用程序模板\n* [react-aspnet-boilerplate](https://github.com/pauldotknopf/react-aspnet-boilerplate) - 使用ASP.NET Core 1构建同构React应用程序的起点，利用现有技术。\n* [saaskit](https://github.com/saaskit/saaskit) - 用于构建SaaS应用程序的开发人员工具包。\n* [serverlessDotNetStarter](https://github.com/pharindoko/serverlessDotNetStarter) - .NET Core入门解决方案-通过无服务器框架进行部署，并且可以在VS Code中进行本地调试。\n\n## 例子\n* Microservices & Service Mesh\n  * [coolstore-microservices ](https://github.com/vietnam-devs/coolstore-microservices) -  一个基于Kubernetes的多语言微服务应用程序，带有Istio服务网格\n  * [distributed-playground](https://github.com/jvandevelde/distributed-playground) - 带有Vagrant，Consul，Docker和ASP.NET Core的分布式服务游乐场。\n  * [DNC-DShop](https://github.com/devmentors) - 分布式.NET核心项目和免费课程。 (DDD，CQRS，RabbitMQ，MongoDB，Redis，监控，记录，CI，CD)\n  * [dotnetcore-microservices-poc](https://github.com/asc-lab/dotnetcore-microservices-poc) -   使用.NET Core(EF Core，MediatR，Marten，Eureka)在微服务架构中制作的简化保险销售系统，Ocelot，RabbitMQ，Polly，ElasticSearch，Dapper)与博客文章系列。\n  * [eShopOnContainers](https://github.com/dotnet/eShopOnContainers) - 基于微服务架构和容器的参考应用程序。\n  * [InMemoryCQRSReplication](https://github.com/Aaronontheweb/InMemoryCQRSReplication) - Akka.NET参考架构 - CQRS + Sharding +内存中复制\n  * [magazine-website](https://github.com/thangchung/magazine-website) -  应用DDD，CQRS，微服务，异步编程的杂志网站(使用.NET Core，ASP.NET Core，EF Core)。\n  * [microservices-in-dotnetcore](https://github.com/horsdal/microservices-in-dotnet-book-second-edition) - 我的微服务书中的代码示例\n  * [ReactiveTraderCloud](https://github.com/AdaptiveConsulting/ReactiveTraderCloud) - 实时交易平台演示，展示在整个应用程序堆栈中应用的反应式编程原理。\n* Monoliths\n  * [AlbumViewerVNext](https://github.com/RickStrahl/AlbumViewerVNext) - West Wind Album Viewer ASP.NET 5示例。\n  * [allReady](https://github.com/HTBox/allReady) - 开源解决方案，重点是提高准备活动的意识，效率和影响，因为它们由当地社区的人道主义和灾害响应组织提供。[http://www.htbox.org/projects/allready](http://www.htbox.org/projects/allready)\n  * [AspNet5GeoElasticsearch](https://github.com/damienbod/AspNet5GeoElasticsearch) - ASP.NET核心MVC Geo Elasticsearch Swashbuckle Swagger。\n  * [aspnet-servicediscovery-patterns](https://github.com/cecilphillip/aspnet-servicediscovery-patterns) - 使用ASP.NET Core实现服务发现模式的示例。\n  * [AspNetAuthorizationWorkshop](https://github.com/blowdart/AspNetAuthorizationWorkshop) - 一个研讨会，用于浏览ASP.NET核心授权中的各个新部分。\n  * [BikeSharing360 Suite of Apps from Microsoft](https://blogs.msdn.microsoft.com/visualstudio/2016/12/14/connectdemos-2016-bikesharing360-on-github/) - BikeSharing360应用套件\n    * [Mobile Apps](https://github.com/Microsoft/BikeSharing360_MobileApps), \n    * [Backend Services](https://github.com/Microsoft/BikeSharing360_BackendServices), \n    * [Websites](https://github.com/Microsoft/BikeSharing360_Websites), \n    * [Single Container Apps](https://github.com/Microsoft/BikeSharing360_SingleContainer), \n    * [Multi Container Apps](https://github.com/Microsoft/BikeSharing360_MultiContainer), \n    * [Cognitive Services Kiosk App](https://github.com/Microsoft/BikeSharing360_CognitiveServicesKioskApp),\n\t* [Azure Bot App](https://github.com/Microsoft/BikeSharing360_BotApps).\n  * [Clean Architecture Manga](https://github.com/ivanpaulovich/clean-architecture-manga) - .NET Core的清洁架构原理的示例\n  * [cloudscribe](https://github.com/cloudscribe/cloudscribe) - ASP.NET核心多租户Web应用程序基础。\n  * [CoreCodeCamp](https://github.com/shawnwildermuth/CoreCodeCamp) - 一个开源小型本地开发活动的开源网站。\n  * [DotNetClub](https://github.com/scheshan/DotNetClub) - 用ASP.NET Core编写的小型俱乐部。\n  * [eShopOnWeb](https://github.com/dotnet-architecture/eShopOnWeb) - 具有单一部署模型的分层应用程序架构。\n  * [Entropy](https://github.com/aspnet/Entropy) - 用于新功能和想法的混乱实验游乐场 - 请在此处查看针对各个功能的小型和简单样本。\n  * [EquinoxProject](https://github.com/EduardoPires/EquinoxProject) - 具有DDD，CQRS和事件源的完整ASP.NET Core 2.0应用程序。\n  * [GenVue](https://github.com/herbat73/GenVue) - 如何管理多租户应用中的用户身份Microsoft Azure，使用Azure Active Directory进行身份验证。\n  * [guidance-identity-management-for-multitenant-apps](https://github.com/Azure-Samples/guidance-identity-management-for-multitenant-apps) - Microsoft Azure中多租户应用程序的身份管理例子。\n  * [JustA.ML](https://github.com/mustakimali/JustA.ML) -  一个Web应用程序，允许您在使用ASP.NET Core 2.0编写的设备之间共享文件/ URL /文本。\n  * [MegaMine](https://github.com/Nootus/MegaMine) - 开源挖掘解决方案，帮助矿工提取黄金，石英，花岗岩等。此解决方案使用ASP.NET Core和AngularJS利用多个轻量级组件构建以微服务的方式。\n  * [MusicStore](https://github.com/dotnet/aspnetcore/tree/master/src/MusicStore) - 使用MVC和Entity Framework的示例MusicStore应用程序。\n  * [NLayerAppV3](https://github.com/cesarcastrocuba/nlayerappv3) - 带有.NET Core Preview 2的NLayerAppV3 N层架构。\n  * [NorthwindTraders](https://github.com/JasonGT/NorthwindTraders) - Northwind Traders是使用ASP.NET Core和Entity Framework Core构建的示例应用程序。\n  * [Orchard Core - Modular and Multi-tenant applications](https://github.com/OrchardCMS/OrchardCore.Samples) - 使用Orchard Core Framework创建模块化和多租户应用程序。\n  * [PhotoGallery](https://github.com/chsakell/aspnet5-angular2-typescript) - 使用ASP.NET Core，Angular 2和TypeScript的跨平台单页应用程序\n  * [PokeR](https://github.com/halomademeapc/pokeR) - 在ASP.NET Core的SPA托管中使用SignalR和Angular进行实时Scrum。 包括Docker支持。. [Demo](https://planning.halomademeapc.com)\n  * [Practical ASP.NET Core](https://github.com/dodyg/practical-aspnetcore) - 每日更新的ASP.NET核心功能和设施的微量示例。\n  * [Sample .NET Core CQRS REST API](https://github.com/kgrzybek/sample-dotnet-core-cqrs-api) -  使用Clean Architecture的原始SQL和DDD的.NET Core REST API CQRS实现。\n  * [StarWars](https://github.com/JacekKosciesza/StarWars) - 使用GraphQL for .NET，ASP.NET Core，Entity Framework Core的GraphQL“星球大战”示例。\n \n## 文章\n* 基础知识\n  * [具有相关视频的综合BikeSharing360演示应用程序套件的Microsoft架构概述](https://blogs.msdn.microsoft.com/visualstudio/2016/12/14/connectdemos-2016-bikesharing360-on-github/)\n  * [将.NET Framework库移植到.NET Core](https://www.codeproject.com/Articles/1190475/Porting-a-NET-Framework-library-to-NET-Core)\n  * [在执行一行代码之前CLR执行的68件事](http://mattwarren.org/2017/02/07/The-68-things-the-CLR-does-before-executing-a-single-line-of-your-code/)\n  * .NET核心和Nodejs在[这里]的比较 [here](https://manuel-rauber.com/2016/03/07/node-js-asp-net-core-1-0-a-usage-comparison/), [here](https://gist.github.com/ilyaigpetrov/f6df3e6f825ae1b5c7e2) and [here](https://github.com/thinktecture/nodejs-aspnetcore-webapi)\n  * [了解ASP.NET核心初始化](http://developer.telerik.com/featured/understanding-asp-net-core-initialization/)\n  * [为什么要加入.NET Core和ASP.NET Core列车](https://codingblast.com/why-you-should-join-asp-net-core/)\n* Cloud Development\n  * [在.NET Core中配置AWS开发工具包](https://aws.amazon.com/blogs/developer/configuring-aws-sdk-with-net-core/)\n  * [使用C#和AWS Amazon Gateway Api / Lambda的无服务器架构](https://www.codeproject.com/Articles/1178781/Serverless-Architecture-using-Csharp-and-AWS-Amazo)\n  * [在Amazon Web Services(AWS)Lambda中使用C#和.NET Core *配置和部署](https://aws.amazon.com/blogs/compute/announcing-c-sharp-support-for-aws-lambda/)\n* Configuration and deployment\n  * [.NET项目结构](https://gist.github.com/davidfowl/ed7564297c61fe9ab814)\n  * [将Travis CI构建添加到.NET Core应用程序](http://andrewlock.net/adding-travis-ci-to-a-net-core-app/)\n  * [ASP.NET Core 1.0 - 配置ApplicationInsights](http://social.technet.microsoft.com/wiki/contents/articles/35918.asp-net-core-1-0-configure-applicationinsights.aspx)\n  * [haproxy，nginx，Angular 2，ASP.NET Core，Redis和Docker](http://tattoocoder.azurewebsites.net/legion-of-heroes-haproxy-nginx-angular2-aspnetcore-redis-docker/)\n  * [Project.json到MSBuild转换指南](http://www.natemcmaster.com/blog/2017/01/19/project-json-to-csproj/)\n  * [使用Appveyor和NuGet发布.NET项目](https://few-lines-of-code.blogspot.com/2016/03/publishing-net-project-with-appveyor.html)\n  * [ASP.NET核心中的新配置模型 *实体框架核心](http://developer.telerik.com/featured/new-configuration-model-asp-net-core/)\n* Entity Framework Core\n  * [.NET核心数据访问](https://blogs.msdn.microsoft.com/dotnet/2016/11/09/net-core-data-access/)\n  * [关于EF Core的一个很好的例子](https://github.com/rowanmiller/Demo-EFCore)\n  * [使用EF Core连接到Postgres *神奇](http://en.otomatikmuhendis.com/2017/05/05/connect-to-postgres-with-ef-core/)\n* Miraculous\n  * [Orchard Core作为NuGet包入门](http://www.ideliverable.com/blog/getting-started-with-orchard-core-as-a-nuget-package)\n  * [如何在ASP.NET Core中将HTML导出为PDF](https://code.msdn.microsoft.com/How-to-export-HTML-to-PDF-c5afd0ce)\n  * [使用ASP.NET Core进行Vue.js服务器端渲染 *安全](http://mgyongyosi.com/2016/Vuejs-server-side-rendering-with-aspnet-core/)\n* Security\n  * [.NET持续交付微服务](http://stackshare.io/tomstaijen/net-continuous-delivery-microservices)\n  * [ASP.NET Core 2.0身份验证和授权系统揭秘](https://digitalmccullough.com/posts/aspnetcore-auth-system-demystified.html)\n  * [ASP.NET授权实验室的演练](https://github.com/blowdart/AspNetAuthorizationWorkshop)\n  * [ASP.NET核心中的身份验证 *测试](https://stormpath.com/blog/authentication-asp-net-core)\n* Testing\n  * [使用.NET Core的Selenium](http://www.dotnetcatch.com/2016/11/23/selenium-with-net-core/)\n- [InfoQ .NET articles](https://www.infoq.com/dotnet) -  Collection of best .NET articles on InfoQ site\n\n## 书籍\n* [.NET Core in Action](https://manning.com/books/dotnet-core-in-action)\n* [ASP.NET Core Application Development: Building an application in four sprints (Developer Reference)](https://www.amazon.com/ASP-NET-Core-Application-Development-application/dp/1509304061)\n* [ASP.NET Core in Action](https://www.manning.com/books/asp-net-core-in-action)\n* [ASP.NET Core 1.0 High Performance](https://www.amazon.com/ASP-NET-Core-1-0-High-Performance/dp/1785881892)\n* [Building Microservices with ASP.NET Core: Develop, Test, and Deploy Cross-Platform Services in the Cloud](https://www.amazon.com/Building-Microservices-ASP-NET-Core-Cross-Platform/dp/1491961732)\n* [C# 6 and .NET Core 1.0: Modern Cross-Platform Development](https://www.amazon.com/NET-Core-1-0-Cross-Platform-Development/dp/1785285696)\n* [C# in Depth 4](https://www.amazon.com/C-Depth-Jon-Skeet/dp/1617294535)\n* [Dependency Injection in .NET Core, 2nd edition](https://www.manning.com/books/dependency-injection-in-dot-net-second-edition)\n* [Essencial C# 7.0](https://www.amazon.com/Essential-7-0-Addison-Wesley-Microsoft-Technology/dp/1509303588)\n* [Exploring .NET Core with Microservices, ASP.NET Core, and Entity Framework Core - free eBook sampler](https://www.manning.com/books/exploring-dot-net-core)\n* [Microservices in .NET Core: with C#, the Nancy framework, and OWIN middleware](https://www.amazon.com/Microservices-NET-Core-framework-middleware/dp/1617293377)\n* [Professional C# 6 and .NET Core 1.0](https://www.amazon.com/Professional-NET-Core-Christian-Nagel/dp/111909660X)\n* [The little ASP.NET Core](https://www.recaffeinate.co/book)\n\n## 备忘录\n* [dotnet cli Cheat Sheet](http://en.otomatikmuhendis.com/2018/07/02/cheat-sheet-for-dotnet-cli/)\n\n## 视频学习\n* [Channel9](https://channel9.msdn.com) -  MSDN\n* [Channel9](https://www.youtube.com/channel/UCsMica-v34Irf9KVTh6xx-g) -  YouTube\n * [ASP.NET Monsters](https://channel9.msdn.com/Series/aspnetmonsters)\n* [Visual Studio](https://www.youtube.com/user/VisualStudio/channels)\n\n## 视频播客\n* [.NET Rocks](https://www.dotnetrocks.com)\n* [Merge Conflict](http://www.mergeconflict.fm/)\n* [The sound of .NET](http://thesoundof.net/?q=.NET+Core)\n\n## 社区\n* [.NET Foundation](http://forums.dotnetfoundation.org)\n* [.NET Blog](https://devblogs.microsoft.com/dotnet/)\n* [CoolGithubProjects](https://www.reddit.com/r/coolgithubprojects)\n* [ASP.NET](https://forums.asp.net)\n* [Channel9](https://channel9.msdn.com)\n* [Awesome .NET open source & community resources](https://discoverdot.net)\n* [Slack](http://tattoocoder.com/aspnet-slack-sign-up)\n* [BuiltWithDot.Net](https://builtwithdot.net)\n* Stack Overflow\n  *  [.NET Core](https://stackoverflow.com/questions/tagged/.net-core)\n  *  [CoreCLR](https://stackoverflow.com/questions/tagged/coreclr)\n  *  [ASP.NET Core](https://stackoverflow.com/questions/tagged/asp.net-core)\n  *  [ASP.NET Core MVC](https://stackoverflow.com/questions/tagged/asp.net-core-mvc)\n  *  [ASP.NET Core 1.0](https://stackoverflow.com/questions/tagged/asp.net-core-1.0)\n  *  [Entity Framework Core](https://stackoverflow.com/questions/tagged/entity-framework-core)\n* [Trending .NET repositories on GitHub today](https://github.com/trending?l=csharp)\n\n## 组织\n* [ASP.NET](https://github.com/aspnet) - ASP.NET and Entity Framework\n* [.NET Platform](https://github.com/dotnet) - 开源.NET源码\n* [microsoft](https://github.com/microsoft) - 微软\n* [.NET Core Community](https://github.com/dotnetcore) - .NET中文社区组织\n* [.NET 社区联盟](https://dotnet-china.com/) - 中国.NET社区联盟\n\n\n## License\n\n[![CC0](http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)\n\nTo the extent possible under law, [thangchung](http://weblogs.asp.net/thangchung) has waived all copyright and related or neighboring rights to this work.\n\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 7.8671875,
          "content": "# awesome-dotnet-core\n.NET Core框架、库和软件的中文收录大全。内容包括：库、工具、框架、模板引擎、身份认证、数据库、ORM框架、图片处理、文本处理、机器学习、日志、代码分析、教程等。\n这里记录的大部分可以链接到github上，Nuget上也有对应的包，这里只记录比较牛的项目。\n  \n[国内](README_CN.md)  | [中文](README.md)  | [English](README_EN.md) \n\n## 目录\n* [微软](#微软)\n* [ORM](#ORM)\n* [IOC](#IOC)\n* [日志](#日志)\n* [分布式](#分布式)\n* [测试](#测试)\n* [性能](#性能)\n* [消息队列](#消息队列)\n* [数据库](#数据库)\n* [服务器](#服务器)\n* [缓存](#缓存)\n* [框架](#框架)\n* [项目](#项目)\n* [序列化](#序列化)\n* [定时任务](#定时任务)\n* [Actor模型](#Actor模型)\n* [二维码](#二维码)\n* [异常](#异常)\n* [邮件](#邮件)\n* [Office](#Office)\n* [其他](#其他)\n* [博客](#博客)\n\n### 微软\n* [ASP.NET Core官方文档](https://docs.microsoft.com/zh-cn/aspnet/core/?view=aspnetcore-3.1)\n* [.NET指南](https://docs.microsoft.com/zh-cn/dotnet/welcome)\n* [C#指南](https://docs.microsoft.com/zh-cn/dotnet/csharp/)\n* [.NET Standard 指南](https://docs.microsoft.com/zh-cn/dotnet/standard/)\n* [.NET Core 指南](https://docs.microsoft.com/zh-cn/dotnet/core/)\n* [.NET Core源码](https://github.com/aspnet/AspNetCore)\n* [.NET Framework源码](https://referencesource.microsoft.com/)\n* [.NET Core官方播客](https://devblogs.microsoft.com/dotnet/tag/net-core/)\n* [.NET 官方播客](https://devblogs.microsoft.com/dotnet/)\n* [Visual Studio Code](https://github.com/Microsoft/vscode)\n* [Visual Studio Community](https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx)\n\n### ORM\n> 比较流行的对象关系映射（ORM），支持主流的数据库SQLite, SQL CE, Firebird, Oracle, MySQL, PostgreSQL and SQL Server等。\n* [StackExchange/Dapper](https://github.com/StackExchange/Dapper)\n* [ServiceStack.OrmLite](https://github.com/ServiceStack/ServiceStack.OrmLite)\n* [NHibernate](https://github.com/nhibernate/nhibernate-core)\n* [sqlite-net-pcl](https://github.com/praeclarum/sqlite-net)\n* [NPoco](https://github.com/schotime/NPoco)\n* [SqlSugar](https://github.com/sunkaixuan/SqlSugar) \n* [EF](https://github.com/aspnet/EntityFrameworkCore)\n* [linq2db](https://github.com/linq2db/linq2db)\n* [PetaPoco](https://github.com/CollaboratingPlatypus/PetaPoco)\n* [LINQKit](https://github.com/scottksmith95/LINQKit)\n* [FreeSql](https://github.com/2881099/FreeSql)\n* [AutoMapper](https://github.com/AutoMapper/AutoMapper)\n\n### IOC\n> 比较流行的控制反转（IOC），最常见的依赖注入（DI）\n* [Autofac](https://github.com/autofac/Autofac)\n* [DryIoc](https://github.com/dadhi/DryIoc)\n* [structuremap](https://github.com/structuremap/structuremap)\n* [Ninject](https://github.com/ninject/ninject)\n* [CommonServiceLocator](https://github.com/unitycontainer/commonservicelocator)\n* [Unity](https://github.com/unitycontainer/unity)\n* [IoC.Container](https://github.com/DevTeam/IoCContainer/)\n\n### 日志\n* [NLog](https://github.com/NLog/NLog/)\n* [log4net](https://github.com/apache/logging-log4net/)\n\n### 分布式\n* Orleans\n  * [Microsoft.Orleans.OrleansProviders](https://github.com/dotnet/Orleans)\n* HealthChecks\n  * [Microsoft.Extensions.Diagnostics.HealthChecks](https://github.com/aspnet/Extensions)\n  * [Microsoft.AspNetCore.HealthChecks](https://github.com/seven1986/HealthChecks)\n  * [AspNetCore.HealthChecks.SqlServer](https://github.com/xabaril/AspNetCore.Diagnostics.HealthChecks)\n  * [AspNetCore.HealthChecks.Rabbitmq](https://github.com/xabaril/AspNetCore.Diagnostics.HealthChecks)\n* [Ocelot](https://github.com/ThreeMammals/Ocelot)\n* [Polly](https://github.com/App-vNext/Polly)\n* [ElasticSearch]\n  * [Elasticsearch.Net](https://github.com/elastic/elasticsearch-net)\n\n### 测试\n* [XUnit](https://github.com/xunit/xunit)\n* [Moq](https://github.com/moq/moq4)\n* [NUnit](https://github.com/nunit/nunit)\n\n### 性能\n* [BenchmarkDotNet](https://github.com/dotnet/BenchmarkDotNet)\n\n### 消息队列\n* RabbitMQ\n  * [RabbitMQ.Client](https://github.com/rabbitmq/rabbitmq-dotnet-client)\n  * [MassTransit.RabbitMQ](https://github.com/MassTransit/MassTransit)\n\n\n### 数据库\n* EF\n  * [Pomelo.EntityFrameworkCore.MySql](https://github.com/aspnet/EntityFrameworkCore)\n  * [Microsoft.EntityFrameworkCore.SqlServer](https://github.com/aspnet/EntityFrameworkCore)\n  * [Microsoft.EntityFrameworkCore.Sqlite](https://github.com/aspnet/EntityFrameworkCore)\n  * [Microsoft.EntityFrameworkCore.InMemory](https://github.com/aspnet/EntityFrameworkCore)\n  * [Npgsql.EntityFrameworkCore.PostgreSQL](https://github.com/npgsql/efcore.pg)\n* [Npgsql](https://github.com/npgsql/npgsql)\n* MySQL\n  * [mysql-connector-net](https://github.com/mysql/mysql-connector-net/tree/8.0)\n  * [MySqlConnector](https://github.com/mysql-net/MySqlConnector)\n* Neo4j\n  * [neo4j-dotnet-driver](https://github.com/neo4j/neo4j-dotnet-driver)\n  * [Neo4jClient](https://github.com/Readify/Neo4jClient)\n* NoSql\n  * [couchbase-lite-net](https://github.com/couchbase/couchbase-lite-net)\n  * [MongoDB.Driver](https://github.com/mongodb/mongo-csharp-driver)\n  * [LiteDB](https://github.com/mbdavid/LiteDB)\n  * Redis\n    * [StackExchange.Redis](https://github.com/StackExchange/StackExchange.Redis/)\n    * [Microsoft.Extensions.Caching.Redis](https://github.com/aspnet/Extensions)\n    * [ServiceStack.Redis](https://github.com/ServiceStack/ServiceStack.Redis)\n    * [Microsoft.AspNetCore.SignalR.Redis](https://github.com/aspnet/AspNetCore)\n\n### 服务器\n* [Nginx](https://www.nginx.com/)\n* Kestrel\n  * [Microsoft.AspNetCore.Server.Kestrel](https://github.com/aspnet/KestrelHttpServer)\n\n### 缓存\n* [CacheManager](http://cachemanager.michaco.net/)\n  * [CacheManager.Core](https://github.com/MichaCo/CacheManager)\n* [EasyCaching](https://easycaching.readthedocs.io/en/latest/)\n  * [EasyCaching.Core](https://github.com/dotnetcore/EasyCaching)\n* [Memcached](https://memcached.org/)\n  * [EnyimMemcached](https://github.com/enyim/EnyimMemcached)\n  * [CacheManager.Core](https://github.com/MichaCo/CacheManager)\n\n### 框架\n* [Nancy](https://github.com/NancyFx/Nancy)\n* [ASP.NET Boilerplate](https://github.com/aspnetboilerplate/aspnetboilerplate) \n* [Abp vNext](https://github.com/abpframework/abp)\n\n### 项目\n* CMS\n  * [OrchardCore](https://github.com/OrchardCMS/OrchardCore)\n* [Serenity](https://github.com/volkanceylan/Serenity) \n* [eShopOnContainers](https://github.com/dotnet-architecture/eShopOnContainers)\n* [ZKEACMS](https://github.com/SeriaWei/ZKEACMS)\n* [nopCommerce](https://github.com/nopSolutions/nopCommerce)\n* [grandnode](https://github.com/grandnode/grandnode)\n* [SimplCommerce](https://github.com/simplcommerce/SimplCommerce)\n\n### 序列化\n* [Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json)\n* [Json.Net](https://github.com/obarlik/Json.Net)\n\n### 定时任务\n* [FluentScheduler](https://github.com/fluentscheduler/FluentScheduler)\n* [Quartz.NET](https://github.com/quartznet/quartznet)\n\n### Actor模型\n* [Akka.NET](https://github.com/akkadotnet/akka.net)\n* [System.Reactive(Rx.NET)](https://github.com/Reactive-Extensions/Rx.NET) \n\n### 二维码\n* [QRCoder](https://github.com/codebude/QRCoder/)\n\n### 异常\n* [Ben.Demystifier](https://github.com/benaadams/Ben.Demystifier)\n* [Exceptionless](https://github.com/exceptionless/Exceptionless.Net)\n\n### 邮件\n* [MailKit](https://github.com/jstedfast/MailKit)\n* [FluentEmail](https://github.com/lukencode/FluentEmail)\n\n### Office\n* [EPPlus](https://github.com/JanKallman/EPPlus)\n* [npoi](https://github.com/tonyqus/npoi)\n* [Open-XML-SDK](https://github.com/OfficeDev/Open-XML-SDK)\n\n### 其他\n* Swagger - api生成文档\n  * [Swashbuckle.AspNetCore.Swagger](https://github.com/domaindrivendev/Swashbuckle.AspNetCore)\n* [Topshelf](https://github.com/Topshelf/Topshelf) - Windows服务框架。\n* [ML.NET](https://github.com/dotnet/machinelearning) - 机器学习框架。\n\n### 博客\n* [博客园](https://www.cnblogs.com/)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 114.01171875,
          "content": "# Awesome .NET Core [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nInspired by [awesome](https://github.com/sindresorhus/awesome), [awesome-dotnet](https://github.com/quozd/awesome-dotnet),  [awesome-nodejs](https://github.com/sindresorhus/awesome-nodejs), [frontend-dev-bookmarks](https://github.com/dypsilon/frontend-dev-bookmarks).\n\nContributions are always welcome! Please take a look at the [contribution guidelines](https://github.com/thangchung/awesome-dotnet-core/blob/master/contributing.md) pages first. We accept proprietary and commercial software too.\n\nThanks to all [contributors](https://github.com/thangchung/awesome-dotnet-core/graphs/contributors), you're awesome and wouldn't be possible without you! The goal is to build a categorized community-driven collection of very well-known resources.\n\nCheck out my [blog](https://medium.com/@thangchung) or say hi on [Twitter](https://twitter.com/thangchung)!\n\n## Contents\n\n* [General](#general)\n* [Frameworks, Libraries and Tools](#frameworks-libraries-and-tools)\n  * [API](#api)\n  * [Application Frameworks](#application-frameworks)\n  * [Application Templates](#application-templates)\n  * [Authentication and Authorization](#authentication-and-authorization)\n  * [Blockchain](#blockchain)\n  * [Bot](#bot)\n  * [Build Automation](#build-automation)\n  * [Bundling and Minification](#bundling-and-minification)\n  * [Caching](#caching)\n  * [CMS](#cms)\n  * [Code Analysis and Metrics](#code-analysis-and-metrics)  \n  * [Compression](#compression)\n  * [Compilers, Transpilers and Languages](#compilers-transpilers-and-languages)\n  * [Cryptography](#cryptography)\n  * [Database](#database)\n  * [Database Drivers](#database-drivers)\n  * [Database Tools and Utilities](#database-tools-and-utilities)\n  * [Date and Time](#date-and-time)\n  * [Distributed Computing](#distributed-computing)\n  * [E-Commerce and Payments](#e-commerce-and-payments)\n  * [Exceptions](#exceptions)\n  * [Functional Programming](#functional-programming)\n  * [Graphics](#graphics)\n  * [GUI](#gui)\n  * [IDE](#ide)\n  * [Internationalization](#internationalization)\n  * [IOC](#ioc)\n  * [Logging](#logging)\n  * [Machine Learning and Data Science](#machine-learning-and-data-science)\n  * [Mail](#mail)\n  * [Mathematics](#mathematics)\n  * [Media](#media)\n  * [Networking](#networking)\n  * [Misc](#misc)\n  * [Office](#office)\n  * [ORM](#orm)\n  * [Profiling](#profiling)\n  * [Queue and Messaging](#queue-and-messaging)\n  * [Query Builders](#query-builders)\n  * [Scheduler and Job](#scheduler-and-job)\n  * [SDKs](#sdks)\n  * [Security](#security)\n  * [Searching](#searching)\n  * [Serialization](#serialization)\n  * [Template Engine](#template-engine)\n  * [Testing](#testing)\n  * [Tools](#tools)\n  * [Web Framework](#web-framework)\n  * [Web Socket](#web-socket)\n  * [Windows Service](#windows-service)\n  * [Workflow](#workflow)\n* [Roadmaps](#roadmaps)\n* [Starter Kits](#starter-kits)\n* [Sample Projects](#sample-projects)\n* [Articles](#articles)\n* [Books](#books)\n* [Videos](#videos)\n* [Podcasts](#podcasts)\n* [Community](#community)\n\n## General\n\n* [ASP.NET Core Documentation](https://docs.asp.net/en/latest/) - The official ASP.NET Core documentation site.\n* [.NET Core Documentation](https://docs.microsoft.com/en-us/dotnet/articles/welcome) - Home of the technical documentation for .NET Core, C#, F# and Visual Basic, including basic concepts, getting started instructions, tutorials and samples.\n* [.NET Core SDK](https://www.microsoft.com/net/core) - .NET Core SDK is a general purpose development platform maintained by Microsoft and the .NET community on [GitHub](https://github.com/dotnet/core).\n* [.NET Platform Standard](https://github.com/dotnet/corefx/blob/1719a3fe2a5c81b67a4909787da4a02fb0d0d419/Documentation/architecture/net-platform-standard.md) - The differrent between the old version and the new version of .NET.\n* [Introducing .NET Standard 2.0](https://blogs.msdn.microsoft.com/dotnet/2016/09/26/introducing-net-standard) - The description of what will be going on for .NET Standard 2.0 and the roadmap for some missing parts of the current .NET Standard.\n* [Clean Code .NET/.NET Core](https://github.com/thangchung/clean-code-dotnet) - Clean Code concepts adapted for .NET / .NET Core.\n\n## Frameworks, Libraries and Tools\n\n### API\n\n* [autorest](https://github.com/Azure/autorest) - Swagger (OpenAPI) Specification code generator featuring C# and Razor templates. Supports C#, Java, Node.js, TypeScript, Python and Ruby. `4.5.x or above`\n* [aspnet-api-versioning](https://github.com/Microsoft/aspnet-api-versioning) - set of libraries which add service API versioning to ASP.NET Web API, OData with ASP.NET Web API, and ASP.NET Core.\n* [AspNetCoreRateLimit](https://github.com/stefanprodan/AspNetCoreRateLimit) - ASP.NET Core rate limiting middleware.\n* [CondenserDotNet](https://github.com/Drawaes/CondenserDotNet) - API Condenser / Reverse Proxy using Kestrel and Consul, Including light weight consul library.\n* [Flurl](https://github.com/tmenier/Flurl) - Fluent URL builder and testable HTTP for .NET [https://flurl.dev](https://flurl.dev).\n* GraphQL\n  * [Dapper.GraphQL](https://github.com/landmarkhw/Dapper.GraphQL) - A library designed to integrate the Dapper and graphql-dotnet projects with ease-of-use in mind and performance as the primary concern.\n  * [graphql-aspnetcore](https://github.com/JuergenGutsch/graphql-aspnetcore) - ASP.NET Core MiddleWare to create a GraphQL end-point.\n  * [graphql-convention](https://github.com/graphql-dotnet/conventions) - This library is a complementary layer on top that allows you to automatically wrap your .NET classes into GraphQL schema definitions using existing property getters and methods as field resolvers\n  * [graphiql-dotnet](https://github.com/JosephWoodward/graphiql-dotnet) - GraphiQL middleware for ASP.NET Core.\n  * [graphql-dotnetcore](https://github.com/mkmarek/graphql-dotnetcore) - GraphQL for .NET Core based on [https://github.com/graphql/graphql-js](https://github.com/graphql/graphql-js).\n  * [graphql-dotnet](https://github.com/graphql-dotnet/graphql-dotnet) - GraphQL for .NET.\n  * [graphql-dotnet-server](https://github.com/graphql-dotnet/server) - GraphQL for .NET - Subscription Transport WebSockets.\n  * [Hot Chocolate](https://github.com/ChilliCream/hotchocolate) - GraphQL server for .Net Core and .NET Framework.\n  * [FSharp.Data.GraphQL](https://github.com/fsprojects/FSharp.Data.GraphQL) - FSharp implementation of Facebook GraphQL query language [https://fsprojects.github.io/FSharp.Data.GraphQL](https://fsprojects.github.io/FSharp.Data.GraphQL).\n  * [parser](https://github.com/graphql-dotnet/parser) - A lexer and parser for GraphQL in .NET.\n  * [tanka-graphql](https://github.com/pekkah/tanka-graphql) - GraphQL execution and server libraries supporting SignalR, Apollo, schema manipulation and other features familiar from Apollo and graphql-js\n* [halcyon](https://github.com/visualeyes/halcyon) - HAL implementation for ASP.NET.\n* [JSON API .NET Core](https://github.com/Research-Institute/json-api-dotnet-core) - Framework for building json:api compliant APIs with the goal of eliminating RESTful boilerplate.\n* [LightNode](https://github.com/neuecc/LightNode) - Micro RPC/REST Framework built on OWIN [http://neuecc.github.io/LightNode](http://neuecc.github.io/LightNode).\n* [NetCoreStack.Proxy](https://github.com/NetCoreStack/Proxy) - The type-safe, distributed REST library for .NET Standard 2.0 (NetCoreStack Flying Proxy)\n* [NSwag](https://github.com/RSuter/NSwag) - The Swagger/OpenAPI toolchain for .NET, Web API and TypeScript. [http://NSwag.org](http://NSwag.org).\n* [OData](https://github.com/OData/WebApi/tree/feature/netcore) - The Open Data Protocol (OData) enables the creation of HTTP-based data services, which allow resources identified using Uniform Resource Identifiers (URIs) and defined in an abstract data model, to be published and edited by Web clients using simple HTTP messages.\n* [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) - OpenAPI Generator allows generation of API client libraries (e.g. C#, TypeScript, etc), server stubs (ASP.NET Core, NancyFx, etc), documentation and configuration automatically given an OpenAPI Spec (v2, v3).\n* [refit](https://github.com/paulcbetts/refit) - The automatic type-safe REST library for Xamarin and .NET.\n* [RestClient.Net](https://github.com/MelbourneDeveloper/RestClient.Net) - Cross Platform REST Client for all C# platforms\n* [RestEase](https://github.com/canton7/RestEase) - Easy-to-use typesafe REST API client library, which is simple and customisable.\n* [RestLess](https://github.com/letsar/RestLess) - The automatic type-safe-reflectionless REST API client library for .Net Standard.\n* [Restier](https://github.com/OData/RESTier) - RESTier is a RESTful API development framework for building standardized, OData V4 based RESTful services on .NET platform.\n* [Restsharp](https://github.com/restsharp/RestSharp) - Simple REST and HTTP API Client for .NET\n* [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle.AspNetCore) - Seamlessly adds a swagger to WebApi projects.\n  * [MicroElements.Swashbuckle.FluentValidation](https://github.com/micro-elements/MicroElements.Swashbuckle.FluentValidation) - Adds FluentValidation rules to swagger.\n  * [Swashbuckle.AspNetCore.Filters](https://github.com/mattfrear/Swashbuckle.AspNetCore.Filters) - A bunch of useful filters for Swashbuckle.AspNetCore.\n* [WebAnchor](https://github.com/mattiasnordqvist/Web-Anchor) - Web Anchor provides type-safe, testable and flexible, runtime-generated access to web resources.\n* [WebAPIContrib for ASP.NET CORE](https://github.com/WebApiContrib/WebAPIContrib.Core) - Community Contributions for ASP.NET Core.\n\n### Application Frameworks\n* [ASP.NET Boilerplate](https://github.com/aspnetboilerplate/aspnetboilerplate) - ASP.NET Boilerplate is a general purpose application framework especially designed for new modern web applications. It uses already familiar tools and implements best practices around them to provide you a SOLID development experience.\n* [Abp vNext](https://github.com/abpframework/abp) - Abp vNext is the next generation of the open source [ASP.NET Boilerplate](https://github.com/aspnetboilerplate/aspnetboilerplate) framework. It's a complete architecture and strong infrastructure to create modern web applications!\nFollows best practices and conventions to provide you a SOLID development experience.\n* [AsyncEx](https://github.com/StephenCleary/AsyncEx) - A helper library for async/await.\n* [Aeron.NET](https://github.com/AdaptiveConsulting/Aeron.NET) - Efficient reliable UDP unicast, UDP multicast, and IPC message transport - .NET port of Aeron.\n* [akka.net](https://github.com/akkadotnet/akka.net) - Toolkit and runtime for building highly concurrent, distributed, and fault tolerant event-driven applications on .NET & Mono.\n* [Aggregates.NET](https://github.com/volak/Aggregates.NET) - Aggregates.NET is a framework to help developers integrate the excellent NServiceBus and EventStore libraries together.\n* [ASP.NET MVC](https://github.com/dotnet/aspnetcore/tree/master/src/Mvc) - Model view controller framework for building dynamic web sites with clean separation of concerns, including the merged MVC, Web API, and Web Pages w/ Razor.\n* [Butterfly Server .NET](https://github.com/firesharkstudios/butterfly-server-dotnet) - Allows building real-time web apps and native apps with minimal effort. Define a Web API and Subscription API that automatically synchronizes datasets across connected clients.\n* [CAP](https://github.com/dotnetcore/CAP) - An EventBus with local persistent message functionality for system integration in SOA or Microservice architecture.\n* [Carter](https://github.com/CarterCommunity/Carter) - Carter is a library that allows Nancy-esque routing for use with ASP.Net Core.\n* [Chromely](https://github.com/mattkol/Chromely) - Lightweight Alternative to Electron.NET, Electron for .NET/.NET Core.\n* [Cinchoo ETL](https://github.com/Cinchoo/ChoETL) - ETL Framework for .NET (Parser / Writer for CSV, Flat, Xml, JSON, Key-Value formatted files).\n* [CQRSlite](https://github.com/gautema/CQRSlite) - Lightweight framework for helping writing CQRS and Eventsourcing applications in C#.\n* [dataaccess_aspnetcore](https://github.com/digipolisantwerp/dataaccess_aspnetcore) - The DataAccess Toolbox contains the base classes for data access in ASP.NET Core with Entity Framework Core 1.0 using the unit-of-work and repository pattern.\n* [DNTFrameworkCore](https://github.com/rabbal/DNTFrameworkCore) - Lightweight and Extensible Infrastructure for Building High Quality Web Applications Based on ASP.NET Core.\n* [DotNetCorePlugins](https://github.com/natemcmaster/DotNetCorePlugins) - .NET Core library for loading assemblies as a plugin.\n* [DotnetSpider](https://github.com/dotnetcore/DotnetSpider) - DotnetSpider, a .NET Standard web crawling library similar to WebMagic and Scrapy. It is a lightweight ,efficient and fast high-level web crawling & scraping framework for .NET.\n* [DotNetty](https://github.com/Azure/DotNetty) - Port of netty, event-driven asynchronous network application framework.\n* [dotvvm](https://github.com/riganti/dotvvm) - Open source MVVM framework for Web Apps.\n* [ElectronNET](https://github.com/ElectronNET/Electron.NET) - Build cross platform desktop apps with ASP.NET NET Core.\n* [EmbedIO](https://github.com/unosquare/embedio) - A tiny, cross-platform, module based web server for .NET Framework and .NET Core.\n* [Ether.Network](https://github.com/aloisdg/Ether.Network) - Ether.Network is an open source networking library that allow developers to create simple, fast and scalable socket server or client applications over the TCP/IP protocol.\n* [EventFlow](https://github.com/eventflow/EventFlow) - Async/await first CQRS+ES and DDD framework for .NET.\n* [ExcelDataReader](https://github.com/ExcelDataReader/ExcelDataReader) - Lightweight and fast library written in C# for reading Microsoft Excel files.\n* [ExtCore](https://github.com/ExtCore) - Free, open source and cross-platform framework for creating modular and extendable web applications based on ASP.NET Core 1.0.\n* [Finbuckle.MultiTenant](https://github.com/Finbuckle/Finbuckle.MultiTenant) - Finbuckle.MultiTenant is a .NET Standard library for multitenant support designed for ASP.NET 2.0+. It provides functionality for tenant resolution, per-tenant app configuration, and per-tenant data isolation.\n* [fission](https://github.com/fission/fission) - Fast Serverless Functions for Kubernetes.\n* [grpc](https://github.com/grpc/grpc/tree/master/src/csharp) - Remote Procedure Calls (RPCs) provide a useful abstraction for building distributed applications and services. The libraries in this repository provide a concrete implementation of the gRPC protocol, layered over HTTP/2. These libraries enable communication between clients and servers using any combination of the supported languages.\n* [Halibut](https://github.com/OctopusDeploy/Halibut) - A secure communication stack for .NET using JSON-RPC over SSL.\n* [MagicOnion](https://github.com/neuecc/MagicOnion) - gRPC based HTTP/2 RPC Streaming Framework for .NET, .NET Core and Unity.\n* [MassTransit](https://github.com/MassTransit/MassTransit) - Distributed Application Framework for .NET. \n* [microdot](https://github.com/gigya/microdot) - An open source .NET microservices framework.\n* [MoreLINQ](https://github.com/morelinq/MoreLINQ) - Extensions to LINQ to Objects.\n* [Nancy](https://github.com/NancyFx/Nancy) - Lightweight, low-ceremony, framework for building HTTP based services on .NET and Mono.\n* [opencvsharp](https://github.com/shimat/opencvsharp) - .NET Framework wrapper for OpenCV.\n* [orleans](https://github.com/dotnet/orleans) - Framework that provides a straight-forward approach to building distributed high-scale computing applications, without the need to learn and apply complex concurrency or other scaling patterns.\n* [Prism](https://github.com/PrismLibrary/Prism) - Prism is a framework for building loosely coupled, maintainable, and testable XAML applications in WPF, Windows 10 UWP, and Xamarin Forms.\n* [protoactor-dotnet](https://github.com/AsynkronIT/protoactor-dotnet) - Ultra fast distributed actors for Golang and C# [http://proto.actor](http://proto.actor).\n* [resin](https://github.com/kreeben/resin) - 16-bit wide vector space search engine with HTTP API and pluggable read/write pipelines.\n* [RService.io](https://github.com/Stoom/RService.IO) - ASP.Net Core RESTful microservice framework that focusing on speed and ease of use.\n* [ServiceStack](https://github.com/ServiceStack/ServiceStack) - Thoughtfully architected, obscenely fast, thoroughly enjoyable web services for all [https://servicestack.net](https://servicestack.net).\n* [Steeltoe OSS](https://github.com/SteelToeOSS) - .NET toolkit for common microservice patterns.\n* [Strathweb.TypedRouting.AspNetCore](https://github.com/filipw/Strathweb.TypedRouting.AspNetCore) - A library enabling strongly typed routing in ASP.NET Core MVC projects.\n* [surging](https://github.com/dotnetcore/surging) - Surging is a micro-service engine that provides a lightweight, high-performance, modular RPC request pipeline. The service engine supports http, TCP, WS, Mqtt, UDP, and DNS protocols. It uses ZooKeeper and Consul as a registry,  Hash Algorithms, random, polling, pressure minimum priority as a load balancing algorithm, built-in service governance to ensure reliable RPC communication.\n* [Xer.Cqrs](https://github.com/jeyjeyemem/Xer.Cqrs) - A simple library for creating applications based on the CQRS pattern with support for attribute routing and hosted handlers. Developed in C# targeting .NET Standard 1.0.\n* [X.PagedList](https://github.com/dncuug/X.PagedList) - Library for easily paging through any IEnumerable/IQueryable in ASP.NET/ASP.NET Core.\n\n### Application Templates\n* [.NET Boxed](https://github.com/Dotnet-Boxed/Templates) - Project templates with batteries included, providing the minimum amount of code required to get you going. Includes ASP.NET Core API and GraphQL Templates.\n* [aspnet-core-react-template](https://github.com/bradymholt/aspnet-core-react-template) - ASP.NET Core 2.0 / React SPA Template App.\n* [AspNetCoreSpa](https://github.com/asadsahi/AspNetCoreSpa) - Asp.Net Core 2+ & Angular 6 SPA with Angular CLI full featured application.\n* [ASP.NET-MVC-Template](https://github.com/NikolayIT/ASP.NET-MVC-Template) - A ready-to-use templates for ASP.NET MVC 5 and ASP.NET Core with repositories, services, models mapping and DI and StyleCop warnings fixed.\n* [AddFeatureFolders](https://github.com/OdeToCode/AddFeatureFolders) - Enable feature folders for MVC controllers and views in ASP.NET Core.\n* [Angular Visual Studio Webpack Starter](https://github.com/damienbod/AngularWebpackVisualStudio) - Template for Webpack, Visual Studio, ASP.NET Core and Angular. Both the client and the server side of the application are implemented inside one ASP.NET Core project which makes it easier to deploy.\n* [CleanArchitecture](https://github.com/ardalis/CleanArchitecture) - A starting point for Clean Architecture with ASP.NET Core. Clean Architecture is just the latest in a series of names for the same loosely-coupled, dependency-inverted architecture. You will also find it named hexagonal, ports-and-adapters, or onion architecture.\n* [CleanArchitecture (SPA)](https://github.com/JasonGT/CleanArchitecture) - Solution template for creating a Single Page App (SPA) with Angular 8 and ASP.NET Core 3 following the principles of Clean Architecture\n* [DNTFrameworkCoreTemplate](https://github.com/rabbal/DNTFrameworkCoreTemplate) - Boilerplate project templates based on [DNTFrameworkCore](https://github.com/rabbal/DNTFrameworkCore)\n* [dotnet new caju](https://github.com/ivanpaulovich/dotnet-new-caju) - dotnet new templates with awesome architecture styles! Increases productivity to design layered applications based on Hexagonal, Clean or Event Sourcing architectures styles. It supports multiple data access frameworks (MongoDB, EntityFramework, Dapper or Kafka) and it is completely testable.\n* [EISK](https://github.com/EISK/eisk.webapi) - Provides developer resources with simple use cases to build scalable applications on top of .NET Core with [architectural best practices](https://docs.microsoft.com/en-us/dotnet/standard/modern-web-apps-azure-architecture/common-web-application-architectures) (DDD, onion architecture etc)\n* [JavaScriptServices](https://github.com/aspnet/JavaScriptServices) - Microsoft ASP.NET Core JavaScript Services.\n* [kendo-ui-core](https://github.com/telerik/kendo-ui-core) - An HTML5, jQuery-based widget library for building modern web apps. [http://www.telerik.com/kendo-ui](http://www.telerik.com/kendo-ui).\n* [QuickApp](https://github.com/emonney/QuickApp) - ASP.NET Core / Angular4 startup project template with complete login, user and role management.\n* [Serenity](https://github.com/volkanceylan/Serenity) - Serenity is an ASP.NET MVC / TypeScript application platform designed to simplify and shorten development of data-centric business applications with a service based architecture.\n* [Toucan](https://github.com/mrellipse/toucan) - Boilerplate for building single page apps. Server is multi-project .Net Core solution designed around SOLID principles. Client is TypeScript 2, Vuejs 2, Vuex 2.\n\n### Authentication and Authorization\n* [AspNet.Security.OpenIdConnect.Server](https://github.com/aspnet-contrib/AspNet.Security.OpenIdConnect.Server) - OpenID Connect/OAuth2 server framework for OWIN/Katana and ASP.NET Core.\n* [Auth0](https://github.com/auth0/auth0.net) - Hosted, enterprise-grade platform for modern identity.\n* [Casbin.NET](https://github.com/casbin-net/Casbin.NET) - Authorization library that supports access control models like ACL, RBAC, ABAC in C#\n* [Identity](https://github.com/aspnet/Identity) - ASP.NET Core Identity is the membership system for building ASP.NET Core web applications, including membership, login, and user data.\n* [IdentityServer](https://github.com/IdentityServer/IdentityServer4) - IdentityServer for ASP.NET Core 1.0 & 2.0\n  * [IdentityServer4.EntityFramework](https://github.com/IdentityServer/IdentityServer4.EntityFramework) - EntityFramework persistence layer\n  * [IdentityServer4.MongoDB](https://github.com/diogodamiani/IdentityServer4.MongoDB) - MongoDB persistence layer\n  * [IdentityServer4.EntityFrameworkCore](https://github.com/2020IP/TwentyTwenty.IdentityServer4.EntityFrameworkCore) - Entity Framework Core persistence layer\n  * [IdentityServer4.Templates](https://github.com/IdentityServer/IdentityServer4.Templates) - dotnet cli templates for IdentityServer4.\n* [openiddict](https://github.com/openiddict/openiddict-core) - Easy-to-use OpenID Connect server for ASP.NET Core.\n  * [oidc-debugger](https://github.com/nbarbettini/oidc-debugger) - OAuth 2.0 and OpenID Connect debugging tool.\n* [stormpath-sdk](https://github.com/stormpath/stormpath-sdk-dotnet) - Build [simple, secure web applications](https://github.com/stormpath/stormpath-aspnetcore) with Stormpath and ASP.NET Core. \n* [stormpath-sdk](https://github.com/stormpath/stormpath-sdk-dotnet) - Build [simple, secure web applications](https://github.com/stormpath/stormpath-aspnetcore) with Stormpath and ASP.NET Core.(Deprecated: It will longer get updated as of March 2017 after joining OKTA) \n* [stuntman](https://github.com/ritterim/stuntman) - Library for impersonating users during development leveraging ASP.NET Identity.\n\n### Blockchain\n* [BTCPayServer](https://github.com/btcpayserver/btcpayserver) - A cross platform, self-hosted server compatible with Bitpay API.\n* [Meadow](https://github.com/MeadowSuite/Meadow) - An integrated Ethereum implementation and tool suite focused on Solidity testing and development.\n* [NBitcoin](https://github.com/MetacoSA/NBitcoin) - Comprehensive Bitcoin library for the .NET framework.\n* [NBlockchain](https://github.com/danielgerlag/NBlockchain) - .NET standard library for building blockchain enabled applications\n* [NBXplorer](https://github.com/dgarage/NBXplorer) - A Bitcoin and Altcoin lightweight block explorer.\n* [NEO](https://github.com/neo-project/neo) - Open Network For Smart Economy.\n* [Nethereum](https://github.com/Nethereum) - Bringing the love of Ethereum to .NET.\n* [Nethermind](https://github.com/NethermindEth/nethermind) - .NET Core Ethereum client\n* [StratisBitcoinFullNode](https://github.com/stratisproject/StratisBitcoinFullNode) - Simple and affordable end-to-end solutions for development, testing and deployment of native C# blockchain applications on the .Net framework.\n* [Trezor.Net](https://github.com/MelbourneDeveloper/Trezor.Net) - Cross platform C# library for talking to the Trezor Hardwarewallet\n* [WalletWasabi](https://github.com/zkSNACKs/WalletWasabi) - Privacy focused, ZeroLink compliant Bitcoin wallet.\n\n### Bot\n* [BotSharp](https://github.com/SciSharp/BotSharp) - The Open Source AI Chatbot Platform Builder in 100% C# Running in .NET Core with Machine Learning algorithm.\n* [NadekoBot](https://github.com/Kwoth/NadekoBot) - Open source, general-purpose Discord chat bot written in C#.\n* [Telegram.Bot](https://github.com/TelegramBots/Telegram.Bot) - C# Telegram Bot API library.\n* [Funogram](https://github.com/Dolfik1/Funogram) - F# Telegram Bot Api library.\n\n### Build Automation\n* [cake-build](https://github.com/cake-build/cake) - Cross platform build automation system.\n* [CatLight](https://catlight.io) - Status notifier for developers that monitors builds and tasks in the project. Built using .Net Core and Electron.\n* [Colorful.Console](https://github.com/tomakita/Colorful.Console) - Style your C# console output!\n* [dotnet-docker](https://github.com/dotnet/dotnet-docker) - The base Docker images for working with .NET Core and the .NET Core Tools.\n* [Dockerize.NET](https://github.com/brthor/Dockerize.NET) - .NET Cli Tool to package your .NET Core Application into a docker image: 'dotnet dockerize'\n* [FlubuCore](https://github.com/dotnetcore/FlubuCore) - A cross platform build and deployment automation system for building projects and executing deployment scripts using C# code.\n* [GitInfo](https://github.com/kzu/GitInfo) - Git and SemVer Info from MSBuild, C# and VB.\n* [GitVersioning](https://github.com/AArnott/Nerdbank.GitVersioning) - Stamp your assemblies and NuGet packages with a version from a single, simple version.txt file and include git commit IDs for non-official builds.\n* [go-dotnet](https://github.com/matiasinsaurralde/go-dotnet) - Go wrapper for the .NET Core Runtime.\n* [Image2Docker](https://github.com/docker/communitytools-image2docker-win) - PowerShell module which ports existing Windows application workloads to Docker.\n* [LocalAppVeyor](https://github.com/joaope/LocalAppVeyor) - Run your AppVeyor builds, locally.\n* [msbuild](https://github.com/Microsoft/msbuild) - The Microsoft Build Engine is a platform for building applications.\n* [Nuke](https://github.com/nuke-build/nuke) - Cross-platform build automation system.\n* [Opserver](https://github.com/opserver/Opserver) - Stack Exchange's Monitoring System.\n* [vsts-agent](https://github.com/Microsoft/vsts-agent/blob/master/README.md) - Visual Studio Team Services Build and Release Agent.\n\n### Bundling and Minification\n* [BundlerMinifier](https://github.com/madskristensen/BundlerMinifier) - Visual Studio extension that let's you configure bundling and minification of JS, CSS and HTML files.\n* [JavaScriptViewEngine](https://github.com/pauldotknopf/JavaScriptViewEngine) - ASP.NET MVC ViewEngine for rendering markup in a JavaScript environment. Ideal for React and Angular server-side rendering.\n* [Smidge](https://github.com/Shazwazza/Smidge/) - Lightweight runtime CSS/JavaScript file minification, combination, compression & management library for ASP.NET Core.\n* [Web Markup Minifier](https://github.com/Taritsyn/WebMarkupMin) - .NET library that contains a set of markup minifiers. The objective of this project is to improve the performance of web applications by reducing the size of HTML, XHTML and XML code.\n\n### Caching\n* [CacheManager](https://github.com/MichaCo/CacheManager) - Open source caching abstraction layer for .NET written in C#. It supports various cache providers and implements many advanced features. [http://cachemanager.michaco.net](http://cachemanager.michaco.net)\n* [EasyCaching](https://github.com/dotnetcore/EasyCaching) - Open source caching library that contains basic usages and some advanced usages of caching which can help us to handle caching more easier.\n* [Faster](https://github.com/Microsoft/FASTER/tree/master/cs) - Fast key-value store from Microsoft Research.\n* [Foundatio](https://github.com/exceptionless/Foundatio) - Pluggable foundation blocks for building distributed apps.\n* [Microsoft Caching](https://github.com/aspnet/Caching) - Libraries for in-memory caching and distributed caching.\n* [Stack Exchange Redis](https://github.com/StackExchange/StackExchange.Redis) - High performance general purpose redis client for .NET languages (C# etc).\n\n### CMS\n* [Awesome-CMS-Core](https://github.com/SaiGonSoftware/Awesome-CMS-Core) - Awesome CMS Core is an open source CMS built using ASP.Net Core & ReactJS with module separation concern in mind and provide lastest trend of technology like .Net Core, React, Webpack, SASS, Background Job, Message Queue.\n* [Blogifier.Core](https://github.com/blogifierdotnet/Blogifier.Core) - ASP.NET applications to provide common blogging functionality.\n* [Cofoundry](https://github.com/cofoundry-cms/cofoundry) - Open source .NET Core CMS and modular application framework. Code-first, unobtrusive and extensible.\n* [CoreWiki](https://github.com/csharpfritz/CoreWiki) - Simple ASP.NET Core wiki that we are working on during live coding streams.\n* [dasblog-core](https://github.com/poppastring/dasblog-core) - The original DasBlog reimagined with ASP.NET Core\n* [Lynicon](https://github.com/jamesej/lyniconanc) - O/S ASP.Net Core/.Net Core CMS with paid for modules: JSON content, works with variety of data stores, c# content types\n* [Miniblog](https://github.com/madskristensen/Miniblog.Core) - An ASP.NET Core blogging engine.\n* [Mixcore CMS](https://github.com/mixcore/mix.core) - Open Source CMS powered by DotNet Core. Mixcore CMS is a scalable, open platform for web content management and digital experiences. Mixcore CMS provides deep capabilities and endless flexibility on the web.\n* [NetCoreCMS](https://github.com/OnnoRokomSoftware/NetCoreCMS) - An Open source ASP.NET Core 2.0 CMS. It currently supports MySQL and planned to implement MSSQL, SQLite and PostgreSQL. Also it is a modular CMS supports theme, skin, custom layout, widgets, multiple language (En, BN).\n* [Orchard Core CMS](https://github.com/OrchardCMS/OrchardCore) - Open Source Content Management System built with ASP.NET Core on top of a Modular and Extensible Application Framework.\n* [Piranha CMS](https://github.com/piranhacms/piranha.core) - A Lightweight & Unobtrusive Open Source CMS for ASP.NET Core and Entity Framework Core.\n* [Platformus](https://github.com/Platformus) - Free, open source and cross-platform CMS based on ASP.NET Core 1.0 and ExtCore framework.\n* [SimpleContent](https://github.com/joeaudette/cloudscribe.SimpleContent) - Simple, yet flexible content and blog engine for ASP.NET Core that can work with or without a database.\n* [Squidex](https://github.com/Squidex/squidex) - Headless CMS, based on MongoDB, CQRS and Event Sourcing.\n* [Swastika I/O Core CMS](https://github.com/Swastika-IO/Swastika-IO-Core) - Open source ASP.NET Core 2.x CMS. It currently supports MS SQL and planned to implement MSSQL, SQLite in the near future. It has many built-in features out of the box like multilanguage support, theme, template...\n* [Weapsy](https://github.com/Weapsy/Weapsy) - Open source ASP.NET Core CMS based on DDD and CQRS. It supports MSSQL, MySQL, SQLite and PostgreSQL out of the box.\n* [Wyam](https://github.com/Wyamio/Wyam) - Modular static content and static site generator.\n* [ZKEACMS](https://github.com/SeriaWei/ZKEACMS.Core) - Visual design, build site onlie by drag and drop.\n\n### Code Analysis and Metrics\n* [awesome-static-analysis](https://github.com/mre/awesome-static-analysis) - Curated list of static analysis tools, linters and code quality checkers for various programming languages.\n* Code Analysis\n  * [CodeFormatter](https://github.com/dotnet/codeformatter) - Tool that uses Roslyn to automatically rewrite the source to follow netfx coding styles. [Nuget Package](https://www.nuget.org/packages/Dotnet.CodeFormatter.BuildTask.Fork) \n  * [DevSkim](https://github.com/Microsoft/DevSkim) - A set of IDE plugins and rules that provide security \"linting\" capabilities.\n  * [RefactoringEssentials](https://github.com/icsharpcode/RefactoringEssentials) - Refactoring Essentials for Visual Studio.\n  * [roslyn-analyzers](https://github.com/dotnet/roslyn-analyzers) - .NET Compiler Platform (\"Roslyn\") Analyzers.\n  * [StyleCopAnalyzers](https://github.com/DotNetAnalyzers/StyleCopAnalyzers) - StyleCop rules using the .NET Compiler Platform.\n* Metrics\n  * [AppMetrics](https://github.com/alhardy/AppMetrics) - App Metrics is an open-source and cross-platform .NET library used to record and report metrics within an application and reports it's health.\n  * [Audit.NET](https://github.com/thepirat000/Audit.NET) - Small framework to audit .NET object changes.\n  * [BenchmarkDotNet](https://github.com/dotnet/BenchmarkDotNet) - Powerful .NET library for benchmarking.\n  * [coverlet](https://github.com/tonerdo/coverlet) - Cross platform code coverage library for .NET Core.\n  * [Foundatio](https://github.com/exceptionless/Foundatio#metrics) - A common interface with in memory, redis, StatsD, and Metrics.NET implementations.\n  * [MiniCover](https://github.com/lucaslorentz/minicover) - Minimalist Code Coverage Tool for .NET Core.\n  * [NBench](https://github.com/petabridge/NBench) - Performance benchmarking and testing framework for .NET applications.\n  * [Nexogen.Libraries.Metrics](https://github.com/nexogen-international/Nexogen.Libraries.Metrics) - Library for collecting application metrics in .NET and exporting them to Prometheus.\n  * [OpenCover](https://github.com/OpenCover/opencover) - Code coverage tool for .NET 2 and above (WINDOWS OS only), support for 32 and 64 processes with both branch and sequence points.\n  * [PerformanceMonitor](https://github.com/dotnet-architecture/PerformanceMonitor) - .NET Core Application Performance Monitor.\n  * [prometheus-net](https://github.com/prometheus-net/prometheus-net) - .NET Client for [https://prometheus.io](https://prometheus.io).\n  * [Prometheus.Client](https://github.com/PrometheusClientNet/Prometheus.Client) - .NET Client for [Prometheus](https://prometheus.io).\n  \t* [Prometheus.Client.MetricPusher](https://github.com/PrometheusClientNet/Prometheus.Client.MetricPusher) -  Push metrics to a PushGateaway for the Prometheus.Client.\n  \t* [Prometheus.Client.AspNetCore](https://github.com/PrometheusClientNet/Prometheus.Client.AspNetCore) -  Middleware for the Prometheus.Client.\n  \t* [Prometheus.Client.MetricServer](https://github.com/PrometheusClientNet/Prometheus.Client.MetricServer) -  MetricServer for the Prometheus.Client.\n  \t* [Prometheus.Client.HttpRequestDurations](https://github.com/PrometheusClientNet/Prometheus.Client.HttpRequestDurations) -  Metrics logging of request durations for the Prometheus.Client.\n\n### Compression\n* [lz4net](https://github.com/MiloszKrajewski/K4os.Compression.LZ4) - Ultra fast compression algorithm for all .NET platforms.\n* [sharpcompress](https://github.com/adamhathcock/sharpcompress) - Fully managed C# library to deal with many compression types and formats.\n\n### Compilers, Transpilers and Languages\n* [Fable](https://github.com/fable-compiler/Fable) - F# to JavaScript Compiler.\n* [fparsec](https://github.com/stephan-tolksdorf/fparsec) - A parser combinatory library for F# and C#.\n* [IL2C](https://github.com/kekyo/IL2C) - A translator for ECMA-335 CIL/MSIL to C language.\n* [Mond](https://github.com/Rohansi/Mond) - A dynamically typed scripting language written in C# with a REPL, debugger, and simple embedding API.\n* [peachpie](https://github.com/peachpiecompiler/peachpie) - Open-source PHP compiler to .NET.\n* [Pidgin](https://github.com/benjamin-hodgson/Pidgin) - A lightweight, fast and flexible parsing library for C#, developed at Stack Overflow.\n* [roslyn](https://github.com/dotnet/roslyn) - The .NET Compiler Platform (\"Roslyn\") provides open-source C# and Visual Basic compilers with rich code analysis APIs.\n* [Sprache](https://github.com/sprache/Sprache) - Tiny C# Monadic Parser Framework.\n\n### Cryptography\n* [BCrypt.Net](https://github.com/BcryptNet/bcrypt.net) - Bringing updates to the original bcrypt package.\n* [BCrypt.NET-Core](https://github.com/neoKushan/BCrypt.Net-Core) - .NET Core port of BCrypt.NET used to store passwords securely.\n* [BouncyCastle PCL](https://github.com/onovotny/BouncyCastle-PCL) - The Bouncy Castle Crypto package is a C# implementation of cryptographic algorithms and protocols.\n* [multiformats](https://github.com/multiformats/cs-multihash) - A general purpose hashing library, but a library to encode/decode Multihashes which is a \"container\" describing what hash algorithm the digest is calculated with.\n* [nsec](https://github.com/ektrah/nsec) - NSec is a new cryptographic library for .NET Core based on libsodium.\n* [SecurityDriven.Inferno](github.com/sdrapkin/SecurityDriven.Inferno) - Hig level crypto library used .Net primitives, has been professionally audited.\n\n### Database\n* [DBreeze](https://github.com/hhblaze/DBreeze) - C# .NET MONO NOSQL (key value store embedded) ACID multi-paradigm database management system.\n* [JsonFlatFileDataStore](https://github.com/ttu/json-flatfile-datastore) - Simple JSON flat file data store with support for typed and dynamic data.\n* [LiteDB](https://github.com/mbdavid/LiteDB) - .NET NoSQL Document Store in a single data file - [http://www.litedb.org](http://www.litedb.org).\n* [NoDb](https://github.com/joeaudette/NoDb) - \"no database\" file system storage for .NET Core/ASP.NET Core because not every project needs a database.\n* [marten](https://github.com/JasperFx/marten) - Postgresql as a Document Database and Event Store for .NET Applications [http://jasperfx.github.io/marten](http://jasperfx.github.io/marten).\n* [StringDB](https://github.com/SirJosh3917/StringDB) - StringDB is a modular, key/value pair archival DB designed to consume *tiny* amounts of ram & produce *tiny* databases.\n* [yessql](https://github.com/sebastienros/yessql) - .NET document database working on any RDBMS.\n\n### Database Drivers\n* [cassandra-csharp-driver](https://github.com/datastax/csharp-driver) - DataStax C# Driver for Apache Cassandra.\n* [confluent-kafka-dotnet](https://github.com/confluentinc/confluent-kafka-dotnet) - Confluent's Apache Kafka .NET client.\n* [couchbase-lite-net](https://github.com/couchbase/couchbase-lite-net) - A lightweight, document-oriented (NoSQL), syncable database engine for .NET.\n* [MongoDB.Driver](https://github.com/mongodb/mongo-csharp-driver) - .NET Driver for MongoDB.\n* [MongoDB.Entities](https://github.com/dj-nitehawk/MongoDB.Entities) - A data access library for MongoDB with an elegant api, LINQ support and built-in entity relationship management\n* MySQL\n  * [mysql-connector-net](https://github.com/mysql/mysql-connector-net/tree/8.0) - Connector/Net is a fully-managed ADO.NET driver for MySQL.\n  * [MySqlConnector](https://github.com/mysql-net/MySqlConnector) - Async MySQL Connector for .NET and .NET Core.\n* Neo4j\n  * [neo4j-dotnet-driver](https://github.com/neo4j/neo4j-dotnet-driver) - Neo4j Bolt driver for .NET.\n  * [Neo4jClient](https://github.com/Readify/Neo4jClient) - .NET client binding for Neo4j.\n* [npgsql](https://github.com/npgsql/npgsql) - .NET data provider for PostgreSQL. It allows any program developed for .NET framework to access a PostgreSQL database server. It is implemented in 100% C# code. PostgreSQL versions since 9.1 are officially supported, others may work. [http://www.npgsql.org](http://www.npgsql.org)\n* [ravendb](https://github.com/ayende/ravendb/tree/v4.0) - Linq enabled document database for .NET.\n* [RethinkDb.Driver](https://github.com/bchavez/RethinkDb.Driver) - C#/.NET RethinkDB driver with 100% ReQL API coverage.\n* [progaudi.tarantool](https://github.com/progaudi/progaudi.tarantool) - .NET client for Tarantool NoSql database.\n\n### Database Tools and Utilities\n* [DbUp](https://github.com/DbUp/DbUp) - .NET library that helps you to deploy changes to SQL Server databases. It tracks which SQL scripts have been run already, and runs the change scripts that are needed to get your database up to date.\n* [Evolve](https://github.com/lecaillon/Evolve) - Simple database migration tool that uses plain SQL scripts. Inspired by Flyway.\n* [EFCorePowerTools](https://github.com/ErikEJ/EFCorePowerTools) - Entity Framework Core Power Tools - reverse engineering, migrations and model visualization for EF Core.\n* [fluentmigrator](https://github.com/fluentmigrator/fluentmigrator) - Migration framework for .NET much like Ruby on Rails Migrations.\n* [monitor-table-change-with-sqltabledependency](https://github.com/christiandelbianco/monitor-table-change-with-sqltabledependency) - Get SQL Server notification on record table change.\n* [NReco.PivotData](https://www.nuget.org/packages/NReco.PivotData) - In-memory data cube with OLAP operations and PivotTable data model.\n* [roundhouse](https://github.com/chucknorris/roundhouse) - Database Migration Utility for .NET using sql files and versioning based on source control.\n* [SapphireDb](https://github.com/SapphireDb/SapphireDb) - Server implementation of SapphireDb, a framework for easy development of applications with realtime data synchronization and a self hosted alternative to firebase realtime database/firestore for asp.net core and ef core. Check out the documentation for more details: [Documentation](https://sapphire-db.com)\n* [SharpRepository](https://github.com/SharpRepository/SharpRepository) - SharpRepository is a generic repository written in C# which includes support for various relational, document and object databases including Entity Framework, RavenDB, MongoDb and Db4o. SharpRepository includes Xml and InMemory repository implementations as well.\n* [TrackableEntities.Core](https://github.com/TrackableEntities/TrackableEntities.Core) - Change-tracking across service boundaries with .NET Core.\n* [Mongo.Migration](https://github.com/SRoddis/Mongo.Migration) - Mongo.Migration is designed for the [MongoDB C# Driver]( https://github.com/mongodb/mongo-csharp-driver) to migrate your documents easily and on-the-fly. No more downtime for schema-migrations. Just write small and simple migrations. [Link]( https://github.com/SRoddis/Mongo.Migration)\n* [EntityFrameworkCore.DataEncryption](https://github.com/Eastrall/EntityFrameworkCore.DataEncryption) - A plugin for Microsoft.EntityFrameworkCore to add support of encrypted fields using built-in or custom encryption providers.\n\n### Date and Time\n* [Exceptionless.DateTimeExtensions](https://github.com/exceptionless/Exceptionless.DateTimeExtensions) - DateTimeRange, Business Day and various DateTime, DateTimeOffset, TimeSpan extension methods.\n* [FluentDateTime](https://github.com/FluentDateTime/FluentDateTime) - Allows you to write cleaner DateTime expressions and operation. Partially inspired by Ruby DateTime Extensions.\n* [nodatime](https://github.com/nodatime/nodatime) - Better date and time API for .NET [http://nodatime.org](http://nodatime.org).\n\n### Distributed Computing\n* [AspNetCore.Diagnostics.HealthChecks](https://github.com/xabaril/AspNetCore.Diagnostics.HealthChecks) - Enterprise HealthChecks for ASP.NET Core Diagnostics Package\n  - [BeatPulse](https://github.com/Xabaril/BeatPulse) - Enable load balancers to montior the status of deployed Web applications\n* [Foundatio](https://github.com/exceptionless/Foundatio) - Pluggable foundation blocks for building distributed apps\n* [jasper](https://github.com/JasperFx/jasper) - Next generation application development framework for .NET\n* [Rafty](https://github.com/ThreeMammals/Rafty) - RAFT consensus in .NET Core\n* [Obvs](https://github.com/christopherread/Obvs) - An observable microservice bus .NET library that wraps the underlying transport in simple Rx based interfaces\n* [Ocelot](https://github.com/ThreeMammals/Ocelot) - API Gateway created using .NET Core\n* [OpenTracing](https://github.com/opentracing/opentracing-csharp) - Vendor-neutral APIs and instrumentation for distributed tracing\n* [Polly](https://github.com/App-vNext/Polly) - .NET 3.5 / 4.0 / 4.5 / PCL library that allows developers to express transient exception and fault handling policies such as Retry, Retry Forever, Wait and Retry or Circuit Breaker in a fluent manner\n* [ProxyKit](https://github.com/damianh/ProxyKit) - Toolkit to create code-first HTTP reverse proxies on ASP.NET Core\n\n### E-Commerce and Payments\n* [nopCommerce](https://github.com/nopSolutions/nopCommerce) - Free open-source ecommerce shopping cart (ASP.NET MVC / ASP.NET Core MVC ) with a vast community and a market place full of new features, themes and plugins.\n* [GrandNode](https://github.com/grandnode/grandnode) - Multi-platform, free, open source ecommerce shopping cart based on ASP.NET Core 2.1 and MongoDB derived from [nopCommerce](https://github.com/nopSolutions/nopCommerce).\n* [PayPal](https://github.com/paypal/PayPal-NET-SDK) - .NET SDK for PayPal's RESTful APIs.\n* [SimplCommerce](https://github.com/simplcommerce/SimplCommerce) - Super simple ecommerce system built on .NET Core.\n* [Stripe](https://github.com/ServiceStack/Stripe) - Typed .NET clients for stripe.com REST APIs.\n\n\n### Exceptions\n* [Demystifier](https://github.com/benaadams/Ben.Demystifier) - High performance understanding for stack traces (Make error logs more productive).\n* [Exceptionless](https://github.com/exceptionless/Exceptionless.Net) - Exceptionless .NET Client\n* [GlobalExceptionHandlerDotNet](https://github.com/JosephWoodward/GlobalExceptionHandlerDotNet) - GlobalExceptionHandlerDotNet allows you to configure exception handling as a convention with your ASP.NET Core application pipeline as opposed to explicitly handling them within each controller action.\n* [Sentry](https://github.com/getsentry/sentry-dotnet) - .NET SDK for Sentry, an Open-source error tracking that helps developers monitor and fix crashes in real time.\n\n### Functional Programming\n* [CSharpFunctionalExtensions](https://github.com/vkhorikov/CSharpFunctionalExtensions) - Functional Extensions for C#.\n* [DynamicData](https://github.com/RolandPheasant/DynamicData) - Reactive collections based on Rx.NET.\n* [echo-process](https://github.com/louthy/echo-process) - Actor library for C# with additional modules that support persistence to Redis, as well as JS integration.\n* [FsCheck](https://github.com/fscheck/FsCheck) - Random Testing for .NET.\n* [Giraffe](https://github.com/dustinmoris/Giraffe) - A native functional ASP.NET Core web framework for F# developers.\n* [language-ext](https://github.com/louthy/language-ext) - C# functional language extensions and 'Erlang like' concurrency system.\n* [LaYumba.Functional](https://github.com/la-yumba/functional-csharp-code) - Utility library for programming functionally in C#.\n* [NetMQ.ReactiveExtensions](https://github.com/NetMQ/NetMQ.ReactiveExtensions) - Effortlessly send messages anywhere on the network using Reactive Extensions (RX). Transport protocol is ZeroMQ.\n* [Optional](https://github.com/nlkl/Optional) - A robust option type for C#.\n* [reactive-streams-dotnet](https://github.com/reactive-streams/reactive-streams-dotnet) - [Reactive Streams](http://www.reactive-streams.org/) for .NET.\n* [ReactiveUI](https://github.com/reactiveui/ReactiveUI) - A MVVM framework that integrates with the Reactive Extensions for .NET to create elegant, testable User Interfaces that run on any mobile or desktop platform.\n* [Rx.NET](https://github.com/Reactive-Extensions/Rx.NET) - The [Reactive Extensions](http://reactivex.io) for .NET.\n* [Qactive](https://github.com/RxDave/Qactive) - Reactive queryable observable framework. `4.x.x or above`\n* [sodium](https://github.com/SodiumFRP/sodium/tree/master/) - Functional Reactive Programming (FRP) Library. `4.x.x or above`\n\n### Graphics\n* [GLFWDotNet](https://github.com/smack0007/GLFWDotNet) - .NET bindings for GLFW.\n* [ImageProcessor](https://github.com/JimBobSquarePants/ImageProcessor) - A fluent wrapper around System.Drawing for the processing of image files [http://imageprocessor.org](http://imageprocessor.org). `4.5.x or above`\n* [ImageSharp](https://github.com/SixLabors/ImageSharp) - Cross-platform library for processing of image files written in C#.\n* [LibVLCSharp](https://github.com/videolan/libvlcsharp): .NET/Mono bindings for libvlc, the multimedia framework powering the VLC applications made by VideoLAN.\n* [Magick.NET](https://github.com/dlemstra/Magick.NET) - The .NET library for ImageMagick.\n* [MagicScaler](https://github.com/saucecontrol/PhotoSauce) - MagicScaler high-performance, high-quality image processing pipeline for .NET\n* [QRCoder](https://github.com/codebude/QRCoder) - A pure C# Open Source QR Code implementation.\n* [SharpBgfx](https://github.com/MikePopoloski/SharpBgfx) - C# bindings for the bgfx graphics library.\n* [Structure.Sketching](https://github.com/JaCraig/Structure.Sketching) - Image processing library for use in .NET applications that supports .NET Core.\n* [veldrid](https://github.com/mellinoe/veldrid) - A low-level, hardware-accelerated 3D graphics library for .NET.\n* [ZXing.Net](https://github.com/micjahn/ZXing.Net/) - .Net port of the original java-based barcode reader and generator library zxing.\n\n### GUI\n* [AdonisUI](https://github.com/benruehl/adonis-ui) - Lightweight UI toolkit for WPF applications offering classic but enhanced windows visuals.\n* [Avalonia](https://github.com/AvaloniaUI/Avalonia) - A multi-platform .NET UI framework (formerly known as Perspex).\n* [AvaloniaEdit](https://github.com/AvaloniaUI/AvaloniaEdit/) - The Avalonia-based text editor component forked from [AvalonEdit](https://github.com/icsharpcode/AvalonEdit)\n [HandyControls](https://github.com/ghost1372/HandyControls) - Contains some simple and commonly used WPF controls.\n* [Lara](https://github.com/integrativesoft/lara) - Lara Web Engine is a library for developing Web user interfaces in C#\n* [ShellProgressBar](https://github.com/Mpdreamz/shellprogressbar) - library to create progress bars in console programs\n* [Qml.Net](https://github.com/pauldotknopf/Qml.Net) - A cross-platform Qml/.NET integration for Mono/.NET/.NET Core.\n* [WinApi](https://github.com/prasannavl/WinApi) - A simple, direct, ultra-thin CLR library for high-performance Win32 Native Interop with automation, windowing, DirectX, OpenGL and Skia helpers.\n\n### IDE\n* [Mono](https://github.com/mono/monodevelop) - MonoDevelop enables developers to quickly write desktop and web applications on Linux, Windows and Mac OS X. It also makes it easy for developers to port .NET applications created with Visual Studio to Linux and Mac OS X maintaining a single code base for all platforms.\n* [rider](https://www.jetbrains.com/rider/) - Cross-platform C# IDE based on the IntelliJ platform and ReSharper.\n* [Omnisharp](http://www.omnisharp.net/) - Family of Open Source projects, each with one goal: To enable a great .NET experience in YOUR editor of choice.\n* [SharpDevelop](https://github.com/icsharpcode/SharpDevelop) - SharpDevelop is a free Integrated Development Environment (IDE) for C#, VB.NET, Boo, IronPython, IronRuby and F# projects on Microsoft's .NET platform. It is written (almost) entirely in C#, and comes with features you would expect in an IDE plus a few more.\n* [Visual Studio Code](https://github.com/Microsoft/vscode) - New type of tool that combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle. Code provides comprehensive editing and debugging support, an extensibility model, and lightweight integration with existing tools.\n* [Visual Studio Community](https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx) - Free editor for individual developers, open source projects, academic research, education, and small professional teams.\n\n### Internationalization\n* [Localization](https://github.com/aspnet/Localization) - Localization abstractions and implementations for ASP.NET Core applications.\n* [NetCoreStack.Localization](https://github.com/NetCoreStack/Localization) - Database Resource Localization for .NET Core with Entity Framework and In Memory Cache\n* [Westwind.Globalization](https://github.com/RickStrahl/Westwind.Globalization) - Database driven resource localization for .NET applications.\n\n### IOC\n* [AutoDI](https://github.com/Keboo/AutoDI) - Super-fast compile-time dependency injection using IL weaving.\n* [Autofac](https://github.com/autofac/Autofac) - Addictive .NET IoC container.\n* [Castle.Windsor](https://github.com/castleproject/Windsor) Castle Windsor is a best of breed, mature Inversion of Control container available for .NET.\n* [DryIoc](https://github.com/dadhi/DryIoc) - Fast, small, full-featured IoC Container for .NET.\n* [Grace](https://github.com/ipjohnson/Grace) - Grace is a feature rich Dependency Injection Container designed with ease of use and performance in mind.\n* [Inyector](https://github.com/davidrevoledo/Inyector) - Dependency Injection Automation for AspNetCore\n* [Lamar](https://github.com/JasperFx/lamar) - Fast Inversion of Control Tool and Sundry Items of Roslyn Chicanery.\n* [LightInject](https://github.com/seesharper/LightInject) - Ultra lightweight IoC container.\n* [SimpleInjector](https://github.com/simpleinjector/SimpleInjector) - Easy, flexible, and fast Dependency Injection library that promotes best practice to steer developers towards the pit of success.\n* [Stashbox](https://github.com/z4kn4fein/stashbox) - A lightweight, portable dependency injection framework for .NET based solutions.\n* [Unity](https://github.com/unitycontainer/unity) - A lightweight, extensible dependency injection container.\n\n### Logging\n* [common-logging](https://github.com/net-commons/common-logging) - Portable logging abstraction for .NET.\n* [dnxcore-logging-logstash](https://github.com/jvandevelde/dnxcore-logging-logstash) - Logstash logging extension for .NET Core applications with UDP and Redis transports.\n* [ElmahCore](https://github.com/ElmahCore/ElmahCore) - Error logging library that includes features like error filtering and the ability to view the error log from a web page.\n* [Exceptionless](https://github.com/exceptionless/Exceptionless.Net) - Exceptionless .NET Client\n* [Foundatio](https://github.com/exceptionless/Foundatio#logging) - A fluent logging api that can be used to log messages throughout your application.\n* [Karambolo.Extensions.Logging.File](https://github.com/adams85/filelogger) - A lightweight library which implements file logging for the built-in .NET Core logging framework (Microsoft.Extensions.Logging).\n* [LibLog](https://github.com/damianh/LibLog) - Single file for you to either copy/paste or install via nuget, into your library/ framework/ application to provide a logging abstraction.\n* [log4net](https://github.com/apache/logging-log4net) - log4net is a port of the excellent Apache log4j™ framework to the Microsoft® .NET runtime.\n* [NLog](https://github.com/NLog/NLog) - Advanced .NET, Silverlight and Xamarin Logging with support for structured and non structured logging.\n  * [NLog for ASP.NET and ASP.NET Core](https://github.com/NLog/NLog.Web) - NLog integration for ASP.NET & ASP.NET Core 1-3\n  * [NLog.Extensions.Logging](https://github.com/NLog/NLog.Extensions.Logging) - NLog Provider for Microsoft.Extensions.Logging for .NET Standard libraries and .NET Core applications\n  * [NLog.Windows.Forms](https://github.com/NLog/NLog.Windows.Forms) - NLog targets specific for Windows.Forms\n  * [NLog.MailKit](https://github.com/NLog/NLog.MailKit) - Alternative Mail target using the using MailKit library\n* [Q42.Logging.ApplicationInsights](https://github.com/Q42/Q42.Logging.ApplicationInsights) - Log appender for the build in ASP.NET Core logging to send all logs to Application Insights.\n* [serilog](https://github.com/serilog/serilog) - Simple .NET logging with fully-structured events.\n  * [serilog-aspnetcore](https://github.com/serilog/serilog-aspnetcore) - Serilog integration for ASP.NET Core 2+.\n  * [Serilog.Exceptions](https://github.com/RehanSaeed/Serilog.Exceptions) - Serilog.Exceptions is an add-on to [Serilog](https://serilog.net/) to log exception details and custom properties that are not output in Exception.ToString().\n  * [Serilog.Settings.Configuration](https://github.com/serilog/serilog-settings-configuration) - A Serilog configuration provider that reads from Microsoft.Extensions.Configuration.\n* [SEQ](https://getseq.net) - Seq collects data over HTTP, while your applications use the best available structured logging APIs for your platform.\n\n### Machine Learning and Data Science\n* [Accord](https://github.com/accord-net/framework) - Machine learning, computer vision, statistics and general scientific computing for .NET.\n* [Catalyst](https://github.com/curiosity-ai/catalyst) Cross-platform Natural Language Processing (NLP) library inspired by spaCy, with pre-trained models, out-of-the box support for training word and document embeddings, and flexible entity recognition models. Part of the [SciSharp Stack](https://scisharp.github.io/SciSharp/)\n* [ML.NET](https://github.com/dotnet/machinelearning) - Cross-platform open-source machine learning framework which makes machine learning accessible to .NET developers [http://dot.net/ml](http://dot.net/ml).\n* [Spreads](https://github.com/Spreads/Spreads/) - Series and Panels for Real-time and Exploratory Analysis of Data Streams.\n* [TensorFlowSharp](https://github.com/migueldeicaza/TensorFlowSharp) - TensorFlow API for .NET languages.\n* [WaveFunctionCollapse](https://github.com/mxgmn/WaveFunctionCollapse) - itmap & tilemap generation from a single example with the help of ideas from quantum mechanics.\n* [SiaNet](https://github.com/SciSharp/SiaNet) - A C# deep learning library, human friendly, CUDA/OpenCL supported, well structured, easy to extend \n\n### Mail\n* [FluentEmail](https://github.com/lukencode/FluentEmail) - All in one email sender for .NET and .NET Core\n* [MailBody](https://github.com/doxakis/MailBody) - Create transactional email with a fluent interface (.NET).\n* [MailKit](https://github.com/jstedfast/MailKit) - Cross-platform .NET library for IMAP, POP3, and SMTP.\n* [MailMergeLib](https://github.com/axuno/MailMergeLib) - SMTP mail client library which provides comfortable mail merge capabilities for text, inline images and attachments, as well as good throughput and fault tolerance for sending mail messages.\n* [MimeKit](https://github.com/jstedfast/MimeKit) - Cross-platform .NET MIME creation and parser library with support for S/MIME, PGP, DKIM, TNEF and Unix mbox spools.\n* [netDumbster](https://github.com/cmendible/netDumbster) - a .Net Fake SMTP Server used for testing. Clone of the popular Dumbster.\n* [Papercut](https://github.com/ChangemakerStudios/Papercut) - Simple Desktop SMTP Server\n* [PreMailer.Net](https://github.com/milkshakesoftware/PreMailer.Net) - C# library that moves your stylesheets to inline style attributes, for maximum compatibility with E-mail clients.\n* [SendGrid Client](https://github.com/0xdeafcafe/sendgrid-dotnet) - C# library for the SendGrid v3 mail endpoint.\n* [SmtpServer](https://github.com/cosullivan/SmtpServer) - Library to create your own SMTP server.\n* [StrongGrid](https://github.com/Jericho/StrongGrid) - Client for SendGrid's v3 API. Not only allows you to send emails, but also allows you to bulk import contacts, manage lists and segments, create custom fields for your lists, etc. Also includes a parser for SendGrid Webhooks.\n\n### Mathematics\n* [UnitConversion](https://github.com/Stratajet/UnitConversion) - Expansible Unit Conversion Library for .NET Core and .NET Framework.\n* [AutoDiff](https://github.com/alexshtf/autodiff) - A library that provides fast, accurate and automatic differentiation (computes derivative / gradient) of mathematical functions.\n\n### Media\n* [MetadataExtractor](https://github.com/drewnoakes/metadata-extractor-dotnet) - Extracts metadata from media (images, video, audio) with a simple to use API.\n\n### Misc\n* [AdvanceDLSupport](https://github.com/Firwood-Software/AdvanceDLSupport) - Library to improve P/Invoke-ing native code. Interact with native objects as if they were first class objects.\n* [AngleSharp](https://github.com/AngleSharp/AngleSharp) - The ultimate angle brackets parser library. It parses HTML5, MathML, SVG and CSS to construct a DOM based on the official W3C specification. Comparable to beautifulsoup4 of python.\n* [AgileMapper](https://github.com/agileobjects/AgileMapper) - AgileMapper is a zero-configuration, highly-configurable object-object mapper with viewable execution plans.\n* [AspNetCore Extension Library](https://github.com/sgjsakura/AspNetCore) - ASP.NET Core Extension Library.\n* [AutoMapper](https://github.com/AutoMapper/AutoMapper) - Convention-based object-object mapper in .NET.\n* [Baget](https://github.com/loic-sharma/BaGet) - A lightweight NuGet server.\n* [Bleak](https://github.com/Akaion/Bleak) - A Windows native DLL injection library.\n* [Bullseye](https://github.com/adamralph/bullseye/) - A .NET package for describing and running targets and their dependencies.\n* [Castle.Core](https://github.com/castleproject/Core) - Castle Core, including Castle DynamicProxy, Logging Services and DictionaryAdapter [http://www.castleproject.org](http://www.castleproject.org).\n* [Chessie](https://github.com/fsprojects/Chessie) - Railway-oriented programming for .NET [http://fsprojects.github.io/Chessie](http://fsprojects.github.io/Chessie).\n* [CliWrap](https://github.com/Tyrrrz/CliWrap) - Wrapper for command line interfaces.\n* [commanddotnet](https://github.com/bilal-fazlani/commanddotnet) - Model your command line application interface in a class.\n* [CommonMark.NET](https://github.com/Knagis/CommonMark.NET) - The implementation of CommonMark specification in C# for converting Markdown documents to HTML.\n* [ConsoleTableExt](https://github.com/minhhungit/ConsoleTableExt) - Fluent library to create table for .NET console application.\n* [CoordinateSharp](https://github.com/Tronald/CoordinateSharp) - A library that can quickly format and convert geographic coordinates as well as provide location based sun and moon information (sunset, sunrise, moon illumination, etc...). \n* [datatables](https://github.com/ALMMa/datatables.aspnet/tree/dev) - Microsoft ASP.NET server-side support and helpers for jQuery DataTables.\n* [DinkToPdf](https://github.com/rdvojmoc/DinkToPdf) - C# .NET Core wrapper for wkhtmltopdf library that uses Webkit engine to convert HTML pages to PDF.\n* [dotnet-env](https://github.com/tonerdo/dotnet-env) - A .NET library to load environment variables from .env files.\n* [DotNet.Glob](https://github.com/dazinator/DotNet.Glob) - A fast globbing library for .NET / .NETStandard applications. Outperforms Regex.\n* [Dotnet outdated](https://github.com/jerriep/dotnet-outdated) - A .NET Core global tool to display outdated NuGet packages in a project.\n* [Dotnet Script](https://github.com/filipw/dotnet-script) - Run C# scripts from the .NET CLI.\n* [Dotnet Serve](https://github.com/natemcmaster/dotnet-serve) - Simple command-line HTTP server for .NET Core CLI.\n* [Eighty](https://github.com/benjamin-hodgson/Eighty) - A simple HTML generation library\n* [Enums.NET](https://github.com/TylerBrinkley/Enums.NET) - Enums.NET is a high-performance type-safe .NET enum utility library\n* [FastExpressionCompiler](https://github.com/dadhi/FastExpressionCompiler) - Fast ExpressionTree compiler to delegate.\n* [FluentDocker](https://github.com/mariotoffia/FluentDocker) - Commands, Services and Fluent API for docker, docker-compose & docker-machine, for win/mac/linux and native docker.\n* [FluentFTP](https://github.com/robinrodricks/FluentFTP/) - FTP and FTPS client, with extensive FTP commands, SSL/TLS connections, hashing/checksums and more.\n* [Fody](https://github.com/Fody/Fody) - Extensible tool for weaving .net assemblies\n* [HdrHistogram.NET](https://github.com/HdrHistogram/HdrHistogram.NET) - High Dynamic Range (HDR) Histogram.\n* [httpclient-interception](https://github.com/justeat/httpclient-interception) - .NET Standard library for intercepting server-side HTTP dependencies.\n* [Humanizer](https://github.com/Humanizr/Humanizer) - Humanizer meets all your .NET needs for manipulating and displaying strings, enums, dates, times, timespans, numbers and quantities.\n* [Humidifier](https://github.com/jakejscott/Humidifier) - Write and maintain AWS Cloudformation templates using C#.\n* [impromptu-interface](https://github.com/ekonbenefits/impromptu-interface) - Static interface to dynamic implementation (duck casting). Uses the DLR combined with Reflect.Emit.\n* [JqueryDataTablesServerSide](https://github.com/fingers10/JqueryDataTablesServerSide) - ASP.NET Core Server Side Processing library for Jquery DataTables with Multiple Column Filtering, Sorting and Pagination at database level with Excel Export and TagHelper support.\n* [LibSass Host](https://github.com/Taritsyn/LibSassHost) - .NET wrapper around the [libSass](http://sass-lang.com/libsass) library with the ability to support a virtual file system.\n* [markdig](https://github.com/lunet-io/markdig) - Fast, powerfull, CommonMark compliant, extensible Markdown processor for .NET.\n* [NetCoreBeauty](https://github.com/nulastudio/NetCoreBeauty) - Simple library to move a .NET Core app runtime components and dependencies into a sub-directory and make it beauty.\n* [NFlags](https://github.com/bartoszgolek/NFlags) - Simple library to made parsing CLI arguments easy. Library also allow to print usage help \"out of box\".\n* [NReco.LambdaParser](https://github.com/nreco/lambdaparser) - Parses string expressions (formulas, methods calls, conditions) to LINQ expression tree that can be compiled to lambda and evaluated.\n* [NuGet Trends](https://github.com/NuGetTrends/nuget-trends) - Website with statistics of NuGet packages download count.\n* [NYoutubeDL](https://gitlab.com/BrianAllred/NYoutubeDL) - A simple youtube-dl library for C#/.NET.\n* [Otp.NET](https://github.com/kspearrin/Otp.NET) - An implementation TOTP RFC 6238 and HOTP RFC 4226 in C#.\n* [pose](https://github.com/tonerdo/pose) - Replace any .NET method (including static and non-virtual) with a delegate\n* [PuppeteerSharp](https://github.com/kblok/puppeteer-sharp) - Puppeteer Sharp is a .NET port of the official Node.JS Puppeteer API.\n* [readline](https://github.com/tsolarin/readline) - Pure C# GNU-Readline like library for .NET/.NET Core.\n* [ReflectionMagic](https://github.com/ReflectionMagic/ReflectionMagic) - Framework to drastically simplify your private reflection code using C# dynamic\n* [Relinq](https://github.com/re-motion/Relinq) - With re-linq, it's now easier than ever to create full-featured LINQ providers.\n* [Remote.Linq](https://github.com/6bee/Remote.Linq) - Remote Linq is a small and easy to use - yet very powerful - library to translate LINQ expression trees to strongly typed, serializable expression trees and vice versa.\n* [ReverseMarkdown](https://github.com/mysticmind/reversemarkdown-net) - Html to Markdown converter library.\n* [PdfReport.Core](https://github.com/VahidN/PdfReport.Core) - PdfReport.Core is a code first reporting engine, which is built on top of the iTextSharp.LGPLv2.Core and EPPlus.Core libraries.\n* [Scientist](https://github.com/github/Scientist.net) - .NET library for carefully refactoring critical paths. It's a port of GitHub's Ruby Scientist library.\n* [Scrutor](https://github.com/khellang/Scrutor) - Assembly scanning extensions for Microsoft.Extensions.DependencyInjection.\n* [Sheller](https://github.com/twitchax/Sheller) - A .NET library that makes shelling out commands super easy and fluent.\n* [SmartFormat.NET](https://github.com/scottrippey/SmartFormat.NET) - An extensible replacement for string.Format.\n* Stocks\n  * [Trady](https://github.com/lppkarl/Trady) - Handy library for computing technical indicators, and it targets to be an automated trading system that provides stock data feeding, indicator computing, strategy building and automatic trading.\n* [System.Linq.Dynamic.Core](https://github.com/StefH/System.Linq.Dynamic.Core) - The .NET Standard (.NET Core) version from the System Linq Dynamic functionality.\n* [UnitsNet](https://github.com/angularsen/UnitsNet) - Units.NET gives you all the common units of measurement and the conversions between them.\n* Validation\n  * [FluentValidation](https://github.com/JeremySkinner/FluentValidation) - Small validation library for .NET that uses a fluent interface and lambda expressions for building validation rules.\n  * [FormHelper](https://github.com/SinanBozkus/FormHelper) - Form & Validation Helper for ASP.NET Core. Form Helper helps you to create ajax forms and validations without writing any javascript code. (Compatible with Fluent Validation).\n  * [Guard](https://github.com/safakgur/guard) - A high-performance, extensible argument validation library.\n  * [Valit](https://github.com/valit-stack/Valit) - A dead simple validation for .NET Core. No more if-statements all around your code. Write nice and clean fluent validators instead!\n* [Vanara](https://github.com/dahall/Vanara) - A set of .NET libraries for Windows implementing PInvoke calls to many native Windows APIs with supporting wrappers.\n* [warden-stack](https://github.com/warden-stack) - \"health checks\" for your applications, resources and infrastructure. Keep your Warden on the watch.\n* [WebEssentials.AspNetCore.ServiceWorker](https://github.com/madskristensen/WebEssentials.AspNetCore.ServiceWorker) - ASP.NET Core Progressive Web Apps.\n* [Xabe.FFmpeg](https://github.com/tomaszzmuda/Xabe.FFmpeg) - .NET Standard wrapper for FFmpeg. It allows to process media without know how FFmpeg works, and can be used to pass customized arguments to FFmpeg from C# application.\n* [YoutubeExplode](https://github.com/Tyrrrz/YoutubeExplode) - Ultimate library for extracting metadata and downloading Youtube videos and playlists.\n\n### Networking\n* [AspNetCore.Proxy](https://github.com/twitchax/AspNetCore.Proxy) - ASP.NET Core Proxies made easy.\n* [CurlThin](https://github.com/stil/CurlThin) - Lightweight cURL binding library for C# with support for multiple simultaneous transfers through curl_multi interface.\n* [NETStandard.HttpListener](https://github.com/StefH/NETStandard.HttpListener) - HttpListener for .NET Core (NETStandard).\n* [Networker](https://github.com/MarkioE/Networker) - A simple to use TCP and UDP networking library for .NET, designed to be flexible, scalable and FAST.\n\n### Office\n* [EPPlus](https://github.com/EPPlusSoftware/EPPlus) - Create advanced Excel spreadsheets using .NET.\n* [npoi](https://github.com/tonyqus/npoi) - .NET library that can read/write Office formats without Microsoft Office installed. No COM+, no interop.\n* [Open-XML-SDK](https://github.com/OfficeDev/Open-XML-SDK) - The Open XML SDK provides tools for working with Office Word, Excel, and PowerPoint documents.\n\n### Operating System\n* [CosmosOS](https://github.com/CosmosOS/Cosmos) - Cosmos is an operating system \"construction kit\". Build your own OS using managed languages such as C#, VB.NET, and more!\n\n### ORM\n* [Chloe](https://github.com/shuxinqin/Chloe) - A lightweight and high-performance Object/Relational Mapping(ORM) library for .NET.\n* [Entity Framework Core](https://github.com/aspnet/EntityFramework) - Familiar developer experience to previous versions of EF, including LINQ, POCO, and Code First support.\n  * [EFCore.BulkExtensions](https://github.com/borisdj/EFCore.BulkExtensions) - EntityFrameworkCore Bulk Batch Extensions for Insert Update Delete Read (CRUD) ops\n  * [EntityFramework-Plus](https://github.com/zzzprojects/EntityFramework-Plus) - Entity Framework Utilities | Bulk Operations | Batch Delete | Batch Update | Query Cache | Query Filter | Query Future | Query Include | Audit.\n  * [EntityFramework.Exceptions](https://github.com/Giorgi/EntityFramework.Exceptions) - Use typed Exceptions for EntityFrameworkCore when your SQL query violates database constraints in SqlServer, MySql, or PostgreSQL.\n  * [EntityFramework.Triggers](https://github.com/NickStrupat/EntityFramework.Triggers) - Trigger events for EF.\n  * [EntityFramework.Rx](https://github.com/NickStrupat/EntityFramework.Rx) - Reactive **hot** observables of your EF operations.\n  * [Npgsql.EntityFrameworkCore.PostgreSQL](https://github.com/npgsql/Npgsql.EntityFrameworkCore.PostgreSQL) - Entity Framework Core provider for PostgreSQL.\n  * [EntityFramework.PrimaryKey](https://github.com/NickStrupat/EntityFramework.PrimaryKey) - Easily get the primary key of any entity (including composite keys).\n  * [EntityFramework.TypedOriginalValues](https://github.com/NickStrupat/EntityFramework.TypedOriginalValues) - Get a proxy object of the original values of your entity (typed access to Property(\"...\").OriginalValue).\n  * [EntityFramework.VersionedProperties](https://github.com/NickStrupat/EntityFramework.VersionedProperties) - Classes which auto-magically keep an audit history of the changes to the specified property.\n  * [LINQKit](https://github.com/scottksmith95/LINQKit) - A free set of extensions for LINQ to SQL and Entity Framework power users.\n  * [Pomelo.EntityFrameworkCore.MySql](https://github.com/PomeloFoundation/Pomelo.EntityFrameworkCore.MySql) - Entity Framework Core provider for MySql built on top of mysql-net/MySqlConnector.\n  * [spectre.query](https://github.com/spectresystems/spectre.query) - A simple query language for Entity Framework Core.\n* [Dapper](https://github.com/StackExchange/Dapper) - Simple object mapper for .NET.\n  * [Dapper-FluentMap](https://github.com/henkmollema/Dapper-FluentMap) - Provides a simple API to fluently map POCO properties to database columns when using Dapper.\n  * [Dommel](https://github.com/henkmollema/Dommel) - Simple CRUD operations for Dapper.\n  * [MicroOrm.Dapper.Repositories](https://github.com/phnx47/MicroOrm.Dapper.Repositories) - CRUD for Dapper.\n* [FreeSql](https://github.com/2881099/FreeSql) - a convenient ORM in dotnet,supports Mysql, Postgresql, SqlServer, Oracle and Sqlite.\n* [Limebean](https://nick-lucas.github.io/LimeBean/) - Hybrid-ORM, designed to be simple to use and not totally hide SQL, while having all the nice things you expect from an ORM. Inspired by RedBeanPHP.\n* [LINQ to DB (linq2db)](https://linq2db.github.io/) - The fastest LINQ database access library offering a simple, lightweight, fast, and type-safe layer between your POCO objects and your database for more than 10 database engines with full SQL support.\n* [nhibernate-core](https://github.com/nhibernate/nhibernate-core) - NHibernate Object Relational Mapper.\n* [NEventStore](https://github.com/NEventStore/NEventStore) - Persistence library used to abstract different storage implementations when using event sourcing as storage mechanism. This library is developed with a specific focus on DDD/CQRS applications.\n* [NPoco](https://github.com/schotime/NPoco) - Simple microORM that maps the results of a query onto a POCO object. Project based on Schotime's branch of PetaPoco.\n* [NReco.Data](https://github.com/nreco/data) - Lightweight provider-independent DAL for SQL commands generation, CRUD operations and simple POCO mapping.\n* [PetaPoco](https://github.com/CollaboratingPlatypus/PetaPoco) - A tiny ORM-ish thing for your POCO's.\n* [querybuilder](https://github.com/sqlkata/querybuilder) - SqlKata Query Builder is a powerful Sql Query Builder written in C#.\n* [RepoDb](https://github.com/mikependon/RepoDb) - A hybrid ORM library for .NET.\n  * [RepoDb.MySql](https://github.com/mikependon/RepoDb/tree/master/RepoDb.MySql) - A hybrid .NET ORM library for MySql.\n  * [RepoDb.SqLite](https://github.com/mikependon/RepoDb/tree/master/RepoDb.SqLite) - A hybrid .NET ORM library for SqLite.\n* [ServiceStack.OrmLite](https://github.com/ServiceStack/ServiceStack.OrmLite) - Light, simple and fast convention-based POCO ORM.\n* [SqlFu](https://github.com/sapiens/SqlFu) - Fast and versatile Micro-ORM.\n* [SmartSql](https://github.com/Ahoo-Wang/SmartSql) - SmartSql = MyBatis + Cache(Memory | Redis) + ZooKeeper + R/W Splitting +Dynamic Repository ....\n* [SQLStreamStore](https://github.com/SQLStreamStore/SQLStreamStore) - Stream Store library targeting SQL based implementations for .NET.\n\n### Profiling\n* [Glimpse](https://github.com/Glimpse/Glimpse.Prototype) - Lightweight, open-source, real-time diagnostics and insights profiler for .NET. `Unstable version`\n* [MiniProfiler](https://github.com/MiniProfiler/dotnet) - A simple but effective mini-profiler for ASP.NET websites.\n\n### Query Builders\n* [SqlKata](https://github.com/sqlkata/querybuilder) - Elegant Sql Query Builder, that supports complex queries, joins, sub queries, nested where conditions, vendor engine targets and more\n\n### Queue and Messaging\n* [emitter](https://emitter.io/) - Free open source real-time messaging service that connects all devices. This publish-subscribe messaging API is built for speed and security.\n* [EventStore](https://github.com/EventStore/EventStore) - The open-source, functional database with Complex Event Processing in JavaScript.\n* [Foundatio](https://github.com/exceptionless/Foundatio#queues) - A common interface with in memory, redis and azure implementations.\n* [MediatR](https://github.com/jbogard/MediatR) - Simple, unambitious mediator implementation in .NET.\n * [MediatR.Extensions.Microsoft.DependencyInjection](https://github.com/jbogard/MediatR.Extensions.Microsoft.DependencyInjection) - MediatR extensions for Microsoft.Extensions.DependencyInjection.\n* [Mediator.Net](https://github.com/mayuanyang/Mediator.Net) - A simple mediator for .Net for sending command, publishing event and request response with pipelines supported.\n* [MicroBus](https://github.com/Lavinski/Enexure.MicroBus) - Simple in process mediator for .NET.\n* [MQTTnet](https://github.com/chkr1011/MQTTnet) - MQTTnet is a high performance .NET library for MQTT based communication.\n* [netmq](https://github.com/zeromq/netmq) - 100% native C# implementation of ZeroMQ for .NET.\n* [OpenCQRS](https://github.com/OpenCQRS/OpenCQRS) - .NET Core library for DDD, CQRS and Event Sourcing with Azure Service Bus integration. Supported database providers for the Command and the Event stores are: DocumentDB, MongoDB, SQL Server, MySQL, PostgreSQL and SQLite.\n* [rabbitmq-dotnet-client](https://github.com/rabbitmq/rabbitmq-dotnet-client) - RabbitMQ .NET client [https://www.rabbitmq.com](https://www.rabbitmq.com).\n* [RawRabbit](https://github.com/pardahlman/RawRabbit) - Modern .NET framework for communication over RabbitMq.\n* [Rebus](https://github.com/rebus-org/Rebus) - Simple and lean service bus implementation for .NET.\n* [Restbus](http://restbus.org) - Messaging library for RabbitMq.\n* [Tossit](https://github.com/turgayozgur/tossit) - Simple, easy to use library for distributed job/worker logic. Distributed messages handled by built in RabbitMQ implementation.\n\n### Reporting\n* [FastReport](https://github.com/FastReports/FastReport) - The open source report generator for .NET Core 2.x/.Net Framework 4.x. FastReport can be used in MVC, Web API applications.\n\n### Scheduler and Job\n* [Chroniton.NetCore](https://github.com/leosperry/Chroniton) - Lightweight robust library for running tasks(jobs) on schedules.\n* [Coravel](https://github.com/jamesmh/coravel) - .Net Core meets Laravel: Scheduling, Queuing, etc.\n* [FluentScheduler](https://github.com/fluentscheduler/FluentScheduler) - Automated job scheduler with fluent interface.\n* [Gofer.NET](https://github.com/brthor/Gofer.NET) - Easy C# API for Distributed Background Tasks/Jobs for .NET Core. Inspired by celery for python.\n* [HangfireIO](https://github.com/HangfireIO/Hangfire) - Easy way to perform fire-and-forget, delayed and recurring tasks inside ASP.NET apps [http://hangfire.io](http://hangfire.io).\n* [LiquidState](https://github.com/prasannavl/LiquidState) - Efficient asynchronous and synchronous state machines for .NET.\n* [NCrontab](https://github.com/atifaziz/NCrontab) - Crontab for .NET.\n* [quartznet](https://github.com/quartznet/quartznet/) - Quartz Enterprise Scheduler .NET [http://www.quartz-scheduler.net](http://www.quartz-scheduler.net).\n* [stateless](https://github.com/dotnet-state-machine/stateless) - Simple library for creating state machines in C# code.\n\n### SDKs\n* [AWS SDK](https://github.com/aws/aws-sdk-net) - The Amazon Web Services (AWS) .NET Core SDK components. Each AWS service has its own NuGet package.\n* [azure-event-hubs-dotnet](https://github.com/azure/azure-event-hubs-dotnet) - .NET Standard client library for Azure Event Hubs.\n* Blockchain clients\n  * [Bittrex.Net](https://github.com/JKorf/Bittrex.Net) - C# .Net wrapper for the Bittrex web API including all features easily accessible and usable.\n  * [Binance.Net](https://github.com/JKorf/Binance.Net) - .Net API wrapper for the Binance web API.\n* [CakeMail.RestClient](https://github.com/Jericho/CakeMail.RestClient) - Client for CakeMail's API. Allows you to send transactional emails, bulk emails, manage lists and contacts, etc.\n* [consuldotnet](https://github.com/PlayFab/consuldotnet/tree/develop) - .NET API for Consul.\n* [csharp-nats](https://github.com/nats-io/csharp-nats) - C# .NET client for the NATS messaging system.\n* [DarkSkyCore](https://github.com/amweiss/dark-sky-core) - A .NET Standard wrapper for the [Dark Sky API](https://darksky.net/dev/docs).\n* [Docker.DotNet](https://github.com/Microsoft/Docker.DotNet) - .NET (C#) Client Library for Docker API.\n* [firebase-admin-dotnet](https://github.com/firebase/firebase-admin-dotnet) - Firebase Admin .NET SDK\n* [google-cloud-dotnet](https://github.com/GoogleCloudPlatform/google-cloud-dotnet) - Google Cloud Client Libraries for .NET.\n* [Manatee.Trello](https://github.com/gregsdennis/Manatee.Trello) - A fully object-oriented .Net wrapper for Trello's RESTful API written in C#.\n* [Microphone](https://github.com/rogeralsing/Microphone) - Lightweight framework to run self hosting REST services using Web Api or NancyFx ontop of a Consul or ETCD cluster.\n* [octokit.net](https://github.com/octokit/octokit.net) - GitHub API client library for .NET.\n* [PreStorm](https://github.com/jshirota/PreStorm) - Parallel REST Client for ArcGIS Server.\n* [SendGrid-csharp](https://github.com/sendgrid/sendgrid-csharp) - C# client library for using the full SendGrid API.\n* [statsd-csharp-client](https://github.com/Pereingo/statsd-csharp-client) - .NET Standard compatible C# client to interface with Etsy's excellent [statsd](https://github.com/etsy/statsd) server.\n* [tweetinvi](https://github.com/linvi/tweetinvi) - Intuitive .NET C# library to access the Twitter REST and STREAM API.\n\n### Security\n* [aspnetcore-security-headers](https://github.com/juunas11/aspnetcore-security-headers) - Middleware for adding security headers to an ASP.NET Core application.\n* [HtmlSanitizer](https://github.com/mganss/HtmlSanitizer) - Cleans HTML to avoid XSS attacks.\n* [jose-jwt](https://github.com/dvsekhvalnov/jose-jwt) - Library for processing JOSE objects (JWT, JWA, JWS and related).\n* [Jwt.Net](https://github.com/jwt-dotnet/jwt) - Jwt.Net, a JWT (JSON Web Token) implementation for .NET.\n* [JWT Simple Server](https://github.com/Xabaril/JWTSimpleServer) - A lightweight, dynamic jwt server for ASP.NET Core.\n* [NWebsec](https://github.com/NWebsec/NWebsec) - Security libraries for ASP.NET [http://www.nwebsec.com](http://www.nwebsec.com).\n* [reCAPTCHA](https://github.com/PaulMiami/reCAPTCHA) - reCAPTCHA 2.0 for ASP.NET Core.\n* [roslyn-security-guard](https://github.com/dotnet-security-guard/roslyn-security-guard) - Roslyn analyzers that aim to help security audit on .NET applications.\n* [OwaspHeaders](https://github.com/GaProgMan/OwaspHeaders.Core) - .NET Core middleware for injecting the Owasp recommended HTTP Headers for increased security.\n* [Security](https://github.com/aspnet/Security) - Middleware for security and authorization of web apps.\n* [SecurityHeaders](https://github.com/andrewlock/NetEscapades.AspNetCore.SecurityHeaders) - Small package to allow adding security headers to ASP.NET Core websites.\n\n### Searching\n* [Algolia.Search](https://github.com/algolia/algoliasearch-client-csharp) - Repository for the official Algolia .NET client.\n* [AutoComplete](https://github.com/omerfarukz/autocomplete) - Persistent, simple, powerful and portable autocomplete library.\n* [Elasticsearch.Net & NEST](https://github.com/elastic/elasticsearch-net) - Repository for both NEST and Elasticsearch.NET, the two official elasticsearch .NET clients.\n* [ElasticsearchCRUD](https://github.com/damienbod/ElasticsearchCRUD) - Elasticsearch .NET API.\n* [SearchExtensions](https://github.com/ninjanye/SearchExtensions) - Advanced search capabilities for IQueryable interfaces, such as Entity Framework queries.\n* [SimMetrics.Net](https://github.com/StefH/SimMetrics.Net) - A Similarity Metric Library, e.g. from edit distance's (Levenshtein, Gotoh, Jaro etc) to other metrics, (e.g Soundex, Chapman)\n* [SolrExpress](https://github.com/solr-express/solr-express) - Simple and lightweight query .NET library for Solr, in a controlled, buildable and fail fast way.\n\n### Serialization\n* [BinarySerializer](https://github.com/jefffhaynes/BinarySerializer) - Serialization for custom packet and protocol formats, supports bit-twiddling.\n* [bond](https://github.com/Microsoft/bond) - Cross-platform framework for working with schematized data. It supports cross-language de/serialization and powerful generic mechanisms for efficiently manipulating data. Bond is broadly used at Microsoft in high scale services.\n* [Channels](https://github.com/davidfowl/Channels) - Push based .NET Streams.\n* [CsvHelper](https://github.com/JoshClose/CsvHelper) - Library to help reading and writing CSV files.\n* [Edi.Net](https://github.com/indice-co/EDI.Net) - EDI Serializer/Deserializer. Supports EDIFact, X12 and TRADACOMS format.\n* [ExtendedXmlSerializer](https://github.com/wojtpl2/ExtendedXmlSerializer) - Extended Xml Serializer for .NET.\n* [Jil](https://github.com/kevin-montrose/Jil) - Fast .NET JSON (De)Serializer, Built On Sigil.\n* MessagePack \n  * [msgpack-cli](https://github.com/msgpack/msgpack-cli) - MessagePack implementation for Common Language Infrastructure / [msgpack.org](http://msgpack.org).\n  * [MessagePack-CSharp](https://github.com/neuecc/MessagePack-CSharp) - Extremely Fast MessagePack Serializer for C#(.NET, .NET Core, Unity, Xamarin).\n* [Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json) - Popular high-performance JSON framework for .NET.\n* [protobuf-net](https://github.com/mgravell/protobuf-net/) - Protocol Buffers library for idiomatic .NET.\n* [Schema.NET](https://github.com/RehanSaeed/Schema.NET) - Schema.org objects turned into strongly typed C# POCO classes for use in .NET. All classes can be serialized into JSON/JSON-LD and XML, typically used to represent structured data in the head section of html page.\n* [ServiceStack.Text](https://github.com/ServiceStack/ServiceStack.Text) - JSON, JSV and CSV Text Serializers.\n* [TinyCsvParser](https://github.com/bytefish/TinyCsvParser) - Easy to use, easy to extend and high-performance library for CSV parsing with .NET.\n* [Wire](https://github.com/rogeralsing/Wire) - Binary serializer for POCO objects.\n* [YamlDotNet](https://github.com/aaubry/YamlDotNet) - .NET\n* [ZeroFormatter](https://github.com/neuecc/ZeroFormatter) - Fast binary (de)serializer for .NET.\n* [Utf8Json](https://github.com/neuecc/Utf8Json) - Definitely Fastest and Zero Allocation JSON Serializer for C#(NET, .NET Core, Unity, Xamarin).\n* [YAXLib](https://github.com/sinairv/YAXLib) - XML Serialization Library for the .NET Framework and .NET Core. Extremely flexible and powerful.\n\n### Template Engine\n* [dotliquid](https://github.com/dotliquid/dotliquid) - .NET Port of Tobias Lütke's Liquid template language.\n* [fluid](https://github.com/sebastienros/fluid) - Open-source .NET template engine that is as close as possible to the Liquid template language.\n* [Portable.Xaml](https://github.com/cwensley/Portable.Xaml) - Portable .NET library for reading/writing xaml files.\n* [Razor](https://github.com/aspnet/Razor) - Parser and code generator for CSHTML files used in view pages for MVC web apps.\n* [RazorLight](https://github.com/toddams/RazorLight) - Template engine based on Microsoft's Razor parsing engine for .NET Core.\n* [Scriban](https://github.com/lunet-io/scriban) - A fast, powerful, safe and lightweight text templating language and engine for .NET.\n\n### Testing\n* [Atata](https://github.com/atata-framework/atata) - Web UI test automation full-featured framework based on Selenium WebDriver. [https://atata.io](https://atata.io)\n* [Bogus](https://github.com/bchavez/Bogus) - Simple and sane fake data generator for C#. Based on and ported from the famed faker.js.\n* [CoreBDD](https://github.com/stevenknox/CoreBDD) - BDD framework for xUnit.net\n* [FakeItEasy](https://github.com/FakeItEasy/FakeItEasy) - The easy mocking library for .NET.\n* [FluentAssertions](https://github.com/fluentassertions/fluentassertions) - Set of .NET extension methods that allow you to more naturally specify the expected outcome of a TDD or BDD-style test.\n* [GenFu](https://github.com/MisterJames/GenFu) - Library you can use to generate realistic test data.\n* [LightBDD](https://github.com/LightBDD/LightBDD) - BDD framework allowing to create easy to read and maintain tests.\n* [mockhttp](https://github.com/richardszalay/mockhttp) - Testing layer for Microsoft's HttpClient library.\n* [moq.netcore](https://github.com/Moq/moq4) - Most popular and friendly mocking framework for .NET.\n* [MSpec](https://github.com/machine/machine.specifications) - Popular testing framework for writing BDD-style tests.\n* [MyTested.AspNetCore.Mvc](https://github.com/ivaylokenov/MyTested.AspNetCore.Mvc) - Fluent testing\n  framework for ASP.NET Core MVC.\n* [Netling](https://github.com/hallatore/Netling) - Load tester client for easy web testing.\n* [NSpec](https://github.com/nspec/NSpec) - Battle hardened testing framework for C# that's heavily inspired by Mocha and RSpec.\n* [NSubstitute](https://github.com/nsubstitute/NSubstitute) - A friendly substitute for .NET mocking frameworks.\n* [nunit](https://github.com/nunit/dotnet-test-nunit) - NUnit test runner for .NET Core.\n* [shouldly](https://github.com/shouldly/shouldly) - Should testing for .NET - the way Asserting *Should* be! [http://shouldly.readthedocs.org/en/latest](http://shouldly.readthedocs.org/en/latest)\n* [SpecFlow](https://github.com/techtalk/SpecFlow) - Pragmatic BDD solution for .NET. It uses the Gherkin specification language and integrates to Visual Studio.\n* [Storyteller](https://github.com/storyteller/Storyteller) - Executable Specifications for .NET [http://storyteller.github.io](http://storyteller.github.io).\n* [Stubbery](https://markvincze.github.io/Stubbery/) - A simple library for creating and running Api stubs in .NET.\n* [Testavior](https://github.com/geeklearningio/Testavior) - Testavior is a lightweight solution to help you develop Behavior Tests for ASP.NET Core.\n* [TestStack.BDDfy](https://github.com/TestStack/TestStack.BDDfy) - The simplest BDD framework EVER!\n* [xBehave.net](https://github.com/xbehave/xbehave.net) - An xUnit.net extension for describing your tests using natural language. [http://xbehave.github.io](http://xbehave.github.io)\n* [xUnit.net](https://github.com/xunit/xunit) - A free, open source, community-focused unit testing tool for the .NET Framework.\n\n### Tools\n* [CliFx](https://github.com/Tyrrrz/CliFx) - Declarative framework for building command line interfaces.\n* [CommandLineUtils](https://github.com/natemcmaster/CommandLineUtils) - Command line parsing and utilities for .NET Core and .NET Framework.\n* [docfx](https://github.com/dotnet/docfx) - Tools for building and publishing API documentation for .NET projects [http://dotnet.github.io/docfx](http://dotnet.github.io/docfx)\n* [dotnetfiddle](https://dotnetfiddle.net) - .NET sandbox for developers to quickly try out code and share code snippets.\n* [dotnet-tools](https://github.com/natemcmaster/dotnet-tools) - A list of tool extensions for .NET Core Command Line (dotnet CLI).\n  * [LibMan CLI](https://github.com/aspnet/LibraryManager) - Client-side content manager for web apps.\n* [EntryPoint](https://github.com/Nick-Lucas/EntryPoint) - Composable CLI (Command Line) Argument Parser for .Net Core & .Net Framework 4.5+.\n* [Fake JSON Server](https://github.com/ttu/dotnet-fake-json-server) - Fake REST API for prototyping or as a CRUD Back End. No need to define types, uses dynamic typing. Data is stored to a single JSON file. Has authentication, WebSocket notifications, async long running operations, random generation for errors/delays and experimental GraphQL support.\n* [gitignore.io](https://github.com/joeblau/gitignore.io) - Create useful .gitignore files for your project [https://www.gitignore.io](https://www.gitignore.io).\n* [ICanHasDotnetCore](https://github.com/OctopusDeploy/ICanHasDotnetCore) - Scans uploaded packages.config files or GitHub repository and determines whether the nuget packages target .NET Standard.\n* [json2csharp](http://json2csharp.com) - Generate C# classes from JSON.\n* [letsencrypt-win-simple](https://github.com/Lone-Coder/letsencrypt-win-simple) - A Simple ACME Client for Windows.\n* [Linq_Faster](https://github.com/jackmott/LinqFaster) - Linq-like extension functions for Arrays, Span<T>, and List<T> that are faster and allocate less.\n \n* [mRemoteNG](https://github.com/mRemoteNG/mRemoteNG) - The next generation of mRemote, open source, tabbed, multi-protocol, remote connections manager\n* [NJsonSchema](https://github.com/RSuter/NJsonSchema) - NJsonSchema is a .NET library to read, generate and validate JSON Schema draft v4+ schemas.\n* [NuKeeper](https://github.com/NuKeeperDotNet/NuKeeper) - Automagically update nuget packages in .NET projects.\n* [NuGetPackageExplorer](https://github.com/NuGetPackageExplorer/NuGetPackageExplorer) - Create, update and deploy Nuget Packages with a GUI.\n* [NugetVisualizer](https://github.com/sepharg/NugetVisualizer) - Visualize all of the nuget packages and their corresponding versions for a set of given git repositories or folders.\n* [OctoLinker](https://github.com/OctoLinker/browser-extension) - Navigate through `projects.json` files efficiently with the OctoLinker browser extension for GitHub.\n* [posh-dotnet](https://github.com/bergmeister/posh-dotnet) - `PowerShell` tab completion for the [dotnet CLI](https://github.com/dotnet/cli).\n* [Rin](https://github.com/mayuki/Rin) - Request/response Inspector middleware for ASP.NET Core. like Glimpse.\n* [scoop](https://github.com/lukesampson/scoop) - A command-line installer for Windows.\n* [SerilogAnalyzer](https://github.com/Suchiman/SerilogAnalyzer) - Roslyn-based analysis for code using the Serilog logging library. Checks for common mistakes and usage problems.\n* [SharpZipLib](https://github.com/icsharpcode/SharpZipLib) - #ziplib is a Zip, GZip, Tar and BZip2 library written entirely in C# for the .NET platform.\n* [ShareX](https://github.com/ShareX/ShareX) - Free and open source program that lets you capture or record any area of your screen and share it with a single press of a key. It also allows uploading images, text or other types of files to over 80 supported destinations you can choose from. [https://getsharex.com](https://getsharex.com)\n* [SharpLab](https://github.com/ashmind/SharpLab) - .NET code playground that shows intermediate steps and results of code compilation. [https://sharplab.io](https://sharplab.io)\n* [sourcelink](https://github.com/dotnet/sourcelink) - SourceLink is a language- and source-control agnostic system for providing first-class source debugging experiences for binaries.\n* [System.CommandLine](https://github.com/dotnet/command-line-api) - System.CommandLine, a set of libraries for command line parsing, invocation, and rendering of terminal output.\n* [X.Web.Sitemap](https://github.com/dncuug/X.Web.Sitemap) – Simple sitemap generator for .NET and .NET Core\n* [X.Web.RSS](https://github.com/dncuug/X.Web.RSS) – Simple RSS Feed generator for .NET and .NET Core\n* [SmartCode](https://github.com/Ahoo-Wang/SmartCode) – SmartCode= IDataSource -> IBuildTask -> IOutput => Build Everything!!! (Including [Code generator])\n\n### Web Framework\n* WebAssembly\n  * [Blazor](https://github.com/SteveSanderson/Blazor) - UI framework running .NET in the browser via WebAssembly.\n    * [Awesome Blazor](https://github.com/AdrienTorris/awesome-blazor) - Collection of awesome resources (samples, components, articles, videos and others) about Blazor.\n    * [Blazor Redux](https://github.com/torhovland/blazor-redux) - Connecting a Redux state store with Blazor.\n  * [Ooui](https://github.com/praeclarum/Ooui) - Small cross-platform UI library that brings the simplicity of native UI development to the web.\n* [ReactJS.NET](https://github.com/reactjs/React.NET) - .NET library for JSX compilation and server-side rendering of React components.\n* [redux.NET](https://github.com/GuillaumeSalles/redux.NET) - Predictable state container for .NET apps. Inspired by [https://github.com/reactjs/redux](https://github.com/reactjs/redux).\n\n### Web Socket\n* [Fleck](https://github.com/statianzo/Fleck) - Fleck is a WebSocket server implementation in C#. Fleck requires no inheritance, container, or additional references.\n* [SignalR Server](https://github.com/aspnet/signalr) - Real-time web functionality for web apps, including server-side push.\n* [SuperSocket](https://github.com/kerryjiang/SuperSocket) - Light weight, cross platform and extensible socket server application framework.\n* [WampSharp](https://github.com/Code-Sharp/WampSharp) - C# implementation of [The Web Application Messaging Protocol](http://wamp-proto.org/) - Protocol that provides messaging patterns of Remote Procedure Calls and Publish/Subscribe over WebSockets.\n* [websocket-manager](https://github.com/radu-matei/websocket-manager) - Real-Time library for ASP .NET Core.\n\n### Windows Service\n* [dotnet-win32-service](https://github.com/dasMulli/dotnet-win32-service) - Set up and run as Windows Service directly from .NET Core.\n* [Topshelf](https://github.com/Topshelf/Topshelf) - Easy service hosting framework for building Windows services using .NET.\n\n### Workflow\n* [CoreWF](https://github.com/dmetzgar/corewf/) - Port of Windows Workflow Foundation (WF) to .NET Core.\n* [workflow-core](https://github.com/danielgerlag/workflow-core) - Lightweight workflow engine for .NET Standard.\n* [WorkflowEngine.NET](https://github.com/optimajet/WorkflowEngine.NET) - Component that adds workflow in your application.\n* [Wexflow](https://github.com/aelassas/Wexflow) - A high performance, extensible, modular and cross-platform workflow engine.\n\n## Roadmaps\n* [ASP.NET Core Developer Roadmap](https://github.com/MoienTajik/AspNetCore-Developer-Roadmap) - Roadmap to becoming an ASP.NET Core developer in 2019.\n\n## Starter Kits\n* [Arch](https://github.com/Arch) - The collection of .NET Core libraries that are created by software architects who embrace all the new stuff in .NET Core.\n  * [AutoHistory](https://github.com/Arch/AutoHistory) - A plugin for Microsoft.EntityFrameworkCore to support automatically recording data changes history.\n* [AspNetCore-Angular2-Universal](https://github.com/MarkPieszak/aspnetcore-angular2-universal) - Cross-platform - w/ server-side rendering for SEO, Bootstrap, i18n internationalization (ngx-translate), Webpack, TypeScript, unit testing w/ Karma, WebAPI REST setup, SignalR, Swagger docs, and more!\n* [ASP.NET Core Starter Kit](https://github.com/kriasoft/aspnet-starter-kit) - Opinionated boilerplate for web development based on .NET Core, Kestrel, GraphQL on the backend and Babel, Webpack, React and Redux on the frontend. This boilerplate comes in both C# and F# flavors.\n* [aspnetcore-spa generator](https://github.com/aspnet/JavaScriptServices) - Yeoman generator to build a brand-new ASP.NET Core single page application that uses Angular 2 / React / React With Redux / Knockout / Aurelia on the client.\n* [ASP.Net Core Vue Starter](https://github.com/MarkPieszak/aspnetcore-Vue-starter) - Asp.NETCore 2.0 Vue 2 (ES6) SPA Starter kit, contains routing, Vuex, and more!.\n* [bitwarden-core](https://github.com/bitwarden/core) - The core infrastructure backend (API, database, etc) [https://bitwarden.com](https://bitwarden.com).\n* [dotNetify](https://github.com/dsuryd/dotNetify) - Simple, lightweight, yet powerful way to build real-time HTML5/C# .NET web apps.\n* [generator-aspnet](https://github.com/OmniSharp/generator-aspnet) - yo generator for ASP.NET Core.\n* [Nucleus](https://github.com/alirizaadiyahsi/Nucleus) - Vue startup application template that uses ASP.NET Core API layered architecture at the back-end and JWT based authentication\n* [react-aspnet-boilerplate](https://github.com/pauldotknopf/react-aspnet-boilerplate) - Starting point for building isomorphic React applications with ASP.NET Core 1, leveraging existing techniques.\n* [saaskit](https://github.com/saaskit/saaskit) - Developer toolkit for building SaaS applications.\n* [serverlessDotNetStarter](https://github.com/pharindoko/serverlessDotNetStarter) starter kit for development and deployment of lambda functions in the AWS cloud based on serverless framework.\n\n## Sample Projects\n* Microservices & Service Mesh\n  * [coolstore-microservices ](https://github.com/vietnam-devs/coolstore-microservices) - A Kubernetes-based polyglot microservices application with Istio service mesh\n  * [distributed-playground](https://github.com/jvandevelde/distributed-playground) - Distributed service playground with Vagrant, Consul, Docker & ASP.NET Core.\n  * [DNC-DShop](https://github.com/devmentors) - Distributed .NET Core project and free course. (DDD, CQRS, RabbitMQ, MongoDB, Redis, Monitoring, Logging, CI, CD)\n  * [dotnetcore-microservices-poc](https://github.com/asc-lab/dotnetcore-microservices-poc) -  simplified insurance sales system made in a microservices architecture using .NET Core (EF Core, MediatR, Marten, Eureka, Ocelot, RabbitMQ, Polly, ElasticSearch, Dapper) with blog post series.\n  * [eShopOnContainers](https://github.com/dotnet/eShopOnContainers) - Microservices Architecture and Containers based Reference Application.\n  * [InMemoryCQRSReplication](https://github.com/Aaronontheweb/InMemoryCQRSReplication) - Akka.NET Reference Architecture - CQRS + Sharding + In-Memory Replication\n  * [magazine-website](https://github.com/thangchung/magazine-website) - Magazine website (using .NET Core, ASP.NET Core, EF Core) with DDD, CQRS, microservices, asynchronous programming applied.\n  * [microservices-in-dotnetcore](https://github.com/horsdal/microservices-in-dotnet-book-second-edition) - The code sample from the second edition of [Microservices in .NET Core](https://www.manning.com/books/microservices-in-net-core-second-edition).\n  * [practical-dapr](https://github.com/thangchung/practical-dapr) - Full-stack .NET microservices build on Dapr and Tye.\n  * [ReactiveTraderCloud](https://github.com/AdaptiveConsulting/ReactiveTraderCloud) - Real-time trading platform demo showcasing reactive programming principles applied across the full application stack.   \n* Monoliths\n  * [AlbumViewerVNext](https://github.com/RickStrahl/AlbumViewerVNext) - West Wind Album Viewer ASP.NET 5 Sample.\n  * [allReady](https://github.com/HTBox/allReady) - Open-source solution focused on increasing awareness, efficiency and impact of preparedness campaigns as they are delivered by humanitarian and disaster response organizations in local communities. [http://www.htbox.org/projects/allready](http://www.htbox.org/projects/allready)\n  * [AspNet5GeoElasticsearch](https://github.com/damienbod/AspNet5GeoElasticsearch) - ASP.NET Core MVC Geo Elasticsearch Swashbuckle Swagger.\n  * [aspnet-servicediscovery-patterns](https://github.com/cecilphillip/aspnet-servicediscovery-patterns) - Samples of implementing Service Discovery patterns with ASP.NET Core.\n  * [AspNetAuthorizationWorkshop](https://github.com/blowdart/AspNetAuthorizationWorkshop) - A workshop for moving through the various new pieces in ASP.NET Core Authorization\n  * [BikeSharing360 Suite of Apps from Microsoft](https://blogs.msdn.microsoft.com/visualstudio/2016/12/14/connectdemos-2016-bikesharing360-on-github/) Presented December Connect 2016 Conference, a compreshsive set of interworking apps for both enterprise users and the consumers (bike riders): [Mobile Apps](https://github.com/Microsoft/BikeSharing360_MobileApps), [Backend Services](https://github.com/Microsoft/BikeSharing360_BackendServices), [Websites](https://github.com/Microsoft/BikeSharing360_Websites), [Single Container Apps](https://github.com/Microsoft/BikeSharing360_SingleContainer), [Multi Container Apps](https://github.com/Microsoft/BikeSharing360_MultiContainer), [Cognitive Services Kiosk App](https://github.com/Microsoft/BikeSharing360_CognitiveServicesKioskApp),\n [Azure Bot App](https://github.com/Microsoft/BikeSharing360_BotApps).\n  * [Clean Architecture Manga](https://github.com/ivanpaulovich/clean-architecture-manga) - Clean Architecture sample with .NET Core 3.0 and C# 8. Use cases as central organising structure, completely testable, decoupled from frameworks.\n  * [cloudscribe](https://github.com/cloudscribe/cloudscribe) - ASP.NET Core Multi-tenant web application foundation.\n  * [CoreCodeCamp](https://github.com/shawnwildermuth/CoreCodeCamp) - An Open Source Website for running small, local development events.\n  * [DotNetClub](https://github.com/scheshan/DotNetClub) - Tiny club written in ASP.NET Core.\n  * [eShopOnWeb](https://github.com/dotnet-architecture/eShopOnWeb) - A layered application architecture with monolithic deployment model.\n  * [Entropy](https://github.com/aspnet/Entropy) - Chaotic experimental playground for new features and ideas - check here for small and simple samples for individual features.\n  * [EquinoxProject](https://github.com/EduardoPires/EquinoxProject) - Full ASP.NET Core 2.0 application with DDD, CQRS and Event Sourcing.\n  * [GenVue](https://github.com/herbat73/GenVue) - a hostable, web application that lets confidential users upload and share private files build on Vue.js, Vuetifyjs and NetCore WebAPI stack\n  * [guidance-identity-management-for-multitenant-apps](https://github.com/Azure-Samples/guidance-identity-management-for-multitenant-apps) - How to manage user identities in a multitenant app on Microsoft Azure, using Azure Active Directory for authentication.\n  * [JustA.ML](https://github.com/mustakimali/JustA.ML) - A web application that lets you share files/URL/text between your devices written in ASP.NET Core 2.0. Open source, live at [https://justa.ml](https://justa.ml)\n  * [MegaMine](https://github.com/Nootus/MegaMine) - Open source mining solution that helps miners in extracting Gold, Quartz, Granite etc. This solution is built using ASP.NET Core and AngularJS utilizing multiple light weight components in a Microservices way.\n  * [MusicStore](https://github.com/dotnet/aspnetcore/tree/master/src/MusicStore) - Sample MusicStore application that uses MVC and Entity Framework.\n  * [NLayerAppV3](https://github.com/cesarcastrocuba/nlayerappv3) - NLayerAppV3 N-Layered Architecture with .NET Core Preview 2.\n  * [NorthwindTraders](https://github.com/JasonGT/NorthwindTraders) - Northwind Traders is a sample application built using ASP.NET Core and Entity Framework Core.\n  * [Orchard Core - Modular and Multi-tenant applications](https://github.com/OrchardCMS/OrchardCore.Samples) - Use Orchard Core Framework to create Modular and Multi-tenant applications.\n  * [PhotoGallery](https://github.com/chsakell/aspnet5-angular2-typescript) - Cross-platform Single Page Applications with ASP.NET Core, Angular 2 & TypeScript [http://wp.me/p3mRWu-11L](http://wp.me/p3mRWu-11L).\n  * [PokeR](https://github.com/halomademeapc/pokeR) - Realtime scrum poker using SignalR and Angular in ASP.NET Core's SPA hosting.  Includes Docker support. [Demo](https://planning.halomademeapc.com)\n  * [Practical ASP.NET Core](https://github.com/dodyg/practical-aspnetcore) - A daily updated micro samples of ASP.NET Core features and facilities.\n  * [Sample .NET Core CQRS REST API](https://github.com/kgrzybek/sample-dotnet-core-cqrs-api) - .NET Core REST API CQRS implementation with raw SQL and DDD using Clean Architecture.\n  * [StarWars](https://github.com/JacekKosciesza/StarWars) - GraphQL 'Star Wars' example using GraphQL for .NET, ASP.NET Core, Entity Framework Core.\n \n## Articles\n* Basic knowledge\n  * [Microsoft architectural overview of comprehensive BikeSharing360 suite of demo apps with related videos](https://blogs.msdn.microsoft.com/visualstudio/2016/12/14/connectdemos-2016-bikesharing360-on-github/)\n  * [Porting a .NET Framework library to .NET Core](https://www.codeproject.com/Articles/1190475/Porting-a-NET-Framework-library-to-NET-Core)\n  * [The 68 things the CLR does before executing a single line of your code](http://mattwarren.org/2017/02/07/The-68-things-the-CLR-does-before-executing-a-single-line-of-your-code/)\n  * The comparison between .NET Core and Nodejs at [here](https://manuel-rauber.com/2016/03/07/node-js-asp-net-core-1-0-a-usage-comparison/), [here](https://gist.github.com/ilyaigpetrov/f6df3e6f825ae1b5c7e2) and [here](https://github.com/thinktecture/nodejs-aspnetcore-webapi)\n  * [Understanding ASP.NET Core Initialization](http://developer.telerik.com/featured/understanding-asp-net-core-initialization/)\n  * [Why you should join .NET Core and ASP.NET Core train](https://codingblast.com/why-you-should-join-asp-net-core/)\n* Cloud Development\n  * [Configuring the AWS SDK in .NET Core](https://aws.amazon.com/blogs/developer/configuring-aws-sdk-with-net-core/)\n  * [Serverless Architecture using C# and AWS Amazon Gateway Api/Lambda](https://www.codeproject.com/Articles/1178781/Serverless-Architecture-using-Csharp-and-AWS-Amazo)\n  * [Using C# and .NET Core in Amazon Web Services (AWS) Lambda](https://aws.amazon.com/blogs/compute/announcing-c-sharp-support-for-aws-lambda/)\n* Configuration and deployment\n  * [.NET project structure](https://gist.github.com/davidfowl/ed7564297c61fe9ab814)\n  * [Adding Travis CI builds to a .NET Core app](http://andrewlock.net/adding-travis-ci-to-a-net-core-app/)\n  * [ASP.NET Core 1.0 - Configure ApplicationInsights](http://social.technet.microsoft.com/wiki/contents/articles/35918.asp-net-core-1-0-configure-applicationinsights.aspx)\n  * [haproxy, nginx, Angular 2, ASP.NET Core, Redis and Docker](http://tattoocoder.azurewebsites.net/legion-of-heroes-haproxy-nginx-angular2-aspnetcore-redis-docker/)\n  * [Project.json to MSBuild conversion guide](http://www.natemcmaster.com/blog/2017/01/19/project-json-to-csproj/)\n  * [Publishing a .NET project with Appveyor and NuGet](https://few-lines-of-code.blogspot.com/2016/03/publishing-net-project-with-appveyor.html)\n  * [The New Configuration Model in ASP.NET Core](http://developer.telerik.com/featured/new-configuration-model-asp-net-core/)\n* Entity Framework Core\n  * [.NET Core Data Access](https://blogs.msdn.microsoft.com/dotnet/2016/11/09/net-core-data-access/)\n  * [A very good example about EF Core](https://github.com/rowanmiller/Demo-EFCore)\n  * [Connect to Postgres with EF Core](http://en.otomatikmuhendis.com/2017/05/05/connect-to-postgres-with-ef-core/)\n* Miraculous\n  * [Getting started with Orchard Core as a NuGet package](http://www.ideliverable.com/blog/getting-started-with-orchard-core-as-a-nuget-package)\n  * [How to export HTML to PDF in ASP.NET Core](https://code.msdn.microsoft.com/How-to-export-HTML-to-PDF-c5afd0ce)\n  * [Vue.js server side rendering with ASP.NET Core](http://mgyongyosi.com/2016/Vuejs-server-side-rendering-with-aspnet-core/)\n* Security\n  * [.NET Continuous Delivery Microservices](http://stackshare.io/tomstaijen/net-continuous-delivery-microservices)\n  * [ASP.NET Core 2.0 Authentication and Authorization System Demystified](https://digitalmccullough.com/posts/aspnetcore-auth-system-demystified.html)\n  * [A walk-through for an ASP.NET Authorization Lab](https://github.com/blowdart/AspNetAuthorizationWorkshop)\n  * [Authentication in ASP.NET Core](https://stormpath.com/blog/authentication-asp-net-core)\n* Testing\n  * [Selenium with .NET Core](http://www.dotnetcatch.com/2016/11/23/selenium-with-net-core/)\n- [InfoQ .NET articles](https://www.infoq.com/dotnet) -  Collection of best .NET articles on InfoQ site\n\n## Books\n* [.NET Core in Action](https://manning.com/books/dotnet-core-in-action)\n* [ASP.NET Core Application Development: Building an application in four sprints (Developer Reference)](https://www.amazon.com/ASP-NET-Core-Application-Development-application/dp/1509304061)\n* [ASP.NET Core in Action](https://www.manning.com/books/asp-net-core-in-action)\n* [ASP.NET Core 1.0 High Performance](https://www.amazon.com/ASP-NET-Core-1-0-High-Performance/dp/1785881892)\n* [Building Microservices with ASP.NET Core: Develop, Test, and Deploy Cross-Platform Services in the Cloud](https://www.amazon.com/Building-Microservices-ASP-NET-Core-Cross-Platform/dp/1491961732)\n* [C# 6 and .NET Core 1.0: Modern Cross-Platform Development](https://www.amazon.com/NET-Core-1-0-Cross-Platform-Development/dp/1785285696)\n* [C# in Depth 4](https://www.amazon.com/C-Depth-Jon-Skeet/dp/1617294535)\n* [Dependency Injection in .NET Core, 2nd edition](https://www.manning.com/books/dependency-injection-in-dot-net-second-edition)\n* [Essencial C# 7.0](https://www.amazon.com/Essential-7-0-Addison-Wesley-Microsoft-Technology/dp/1509303588)\n* [Exploring .NET Core with Microservices, ASP.NET Core, and Entity Framework Core - free eBook sampler](https://www.manning.com/books/exploring-dot-net-core)\n* [Microservices in .NET Core: with C#, the Nancy framework, and OWIN middleware](https://www.amazon.com/Microservices-NET-Core-framework-middleware/dp/1617293377)\n* [Professional C# 6 and .NET Core 1.0](https://www.amazon.com/Professional-NET-Core-Christian-Nagel/dp/111909660X)\n* [The little ASP.NET Core](https://www.recaffeinate.co/book)\n\n\n## Videos\n* [Channel9](https://channel9.msdn.com) - MSDN\n* [Channel9](https://www.youtube.com/channel/UCsMica-v34Irf9KVTh6xx-g) - YouTube\n* [Microsoft Learning Center](https://dotnet.microsoft.com/learn/aspnet)\n * [ASP.NET Monsters](https://channel9.msdn.com/Series/aspnetmonsters)\n* [Visual Studio](https://www.youtube.com/user/VisualStudio/channels)\n\n## Podcasts\n* [.NET Rocks](https://www.dotnetrocks.com)\n* [Merge Conflict](http://www.mergeconflict.fm/)\n* [The sound of .NET](http://thesoundof.net/?q=.NET+Core)\n\n## Community\n* [.NET Foundation](http://forums.dotnetfoundation.org)\n* [.NET Blog](https://devblogs.microsoft.com/dotnet/)\n* [/r/CoolGithubProjects](https://www.reddit.com/r/coolgithubprojects)\n* [ASP.NET](https://forums.asp.net)\n* [Channel9](https://channel9.msdn.com)\n* [Awesome .NET open source & community resources](https://discoverdot.net)\n* [Slack](http://tattoocoder.com/aspnet-slack-sign-up)\n* [BuiltWithDot.Net](https://builtwithdot.net)\n* Stack Overflow\n  *  [.NET Core](https://stackoverflow.com/questions/tagged/.net-core)\n  *  [CoreCLR](https://stackoverflow.com/questions/tagged/coreclr)\n  *  [ASP.NET Core](https://stackoverflow.com/questions/tagged/asp.net-core)\n  *  [ASP.NET Core MVC](https://stackoverflow.com/questions/tagged/asp.net-core-mvc)\n  *  [ASP.NET Core 1.0](https://stackoverflow.com/questions/tagged/asp.net-core-1.0)\n  *  [Entity Framework Core](https://stackoverflow.com/questions/tagged/entity-framework-core)\n* [Trending .NET repositories on GitHub today](https://github.com/trending?l=csharp)\n\n## License\n\n[![CC0](http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)\n\nTo the extent possible under law, [thangchung](http://weblogs.asp.net/thangchung) has waived all copyright and related or neighboring rights to this work.\n\n"
        }
      ]
    }
  ]
}