{
  "metadata": {
    "timestamp": 1736710934897,
    "page": 570,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dotnet/format",
      "stars": 1938,
      "defaultBranch": "archive",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 11.041015625,
          "content": "# EditorConfig is awesome:http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Don't use tabs for indentation.\n[*]\nindent_style = space\n# (Please don't specify an indent_size here; that has too many unintended consequences.)\n\n# Code files\n[*.{cs,csx,vb,vbx}]\nindent_size = 4\ninsert_final_newline = true\ncharset = utf-8-bom\n\n# Xml project files\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n# Xml config files\n[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]\nindent_size = 2\n\n# JSON files\n[*.json]\nindent_size = 2\n\n[*.{sh}]\nend_of_line = lf\nindent_size = 2\n\n# Dotnet code style settings:\n[*.{cs,vb}]\n\n# Sort using and Import directives with System.* appearing first\ndotnet_sort_system_directives_first = true\ndotnet_separate_import_directive_groups = false\n\n# Avoid \"this.\" and \"Me.\" if not necessary\ndotnet_style_qualification_for_field = false:error\ndotnet_style_qualification_for_property = false:error\ndotnet_style_qualification_for_method = false:error\ndotnet_style_qualification_for_event = false:error\n\n# Use language keywords instead of framework type names for type references\ndotnet_style_predefined_type_for_locals_parameters_members = true:error\ndotnet_style_predefined_type_for_member_access = true:error\n\n# Suggest more modern language features when available\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\n\n# Whitespace options\ndotnet_style_allow_multiple_blank_lines_experimental = false\ndotnet_style_allow_statement_immediately_after_block_experimental = false\n\n# Non-private static fields are PascalCase\ndotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields\ndotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style\n\ndotnet_naming_symbols.non_private_static_fields.applicable_kinds = field\ndotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected\ndotnet_naming_symbols.non_private_static_fields.required_modifiers = static\n\ndotnet_naming_style.non_private_static_field_style.capitalization = pascal_case\n\n# Non-private readonly fields are PascalCase\ndotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields\ndotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style\n\ndotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field\ndotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected\ndotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly\n\ndotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case\n\n# Constants are PascalCase\ndotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.constants_should_be_pascal_case.symbols = constants\ndotnet_naming_rule.constants_should_be_pascal_case.style = constant_style\n\ndotnet_naming_symbols.constants.applicable_kinds = field, local\ndotnet_naming_symbols.constants.required_modifiers = const\n\ndotnet_naming_style.constant_style.capitalization = pascal_case\n\n# Static fields are camelCase and start with s_\ndotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields\ndotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style\n\ndotnet_naming_symbols.static_fields.applicable_kinds = field\ndotnet_naming_symbols.static_fields.required_modifiers = static\n\ndotnet_naming_style.static_field_style.capitalization = camel_case\ndotnet_naming_style.static_field_style.required_prefix = s_\n\n# Instance fields are camelCase and start with _\ndotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields\ndotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style\n\ndotnet_naming_symbols.instance_fields.applicable_kinds = field\n\ndotnet_naming_style.instance_field_style.capitalization = camel_case\ndotnet_naming_style.instance_field_style.required_prefix = _\n\n# Locals and parameters are camelCase\ndotnet_naming_rule.locals_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters\ndotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style\n\ndotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local\n\ndotnet_naming_style.camel_case_style.capitalization = camel_case\n\n# Local functions are PascalCase\ndotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions\ndotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style\n\ndotnet_naming_symbols.local_functions.applicable_kinds = local_function\n\ndotnet_naming_style.local_function_style.capitalization = pascal_case\n\n# By default, name items with PascalCase\ndotnet_naming_rule.members_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.members_should_be_pascal_case.symbols = all_members\ndotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style\n\ndotnet_naming_symbols.all_members.applicable_kinds = *\n\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\n\n# IDE0073: File header\ndotnet_diagnostic.IDE0073.severity = warning\nfile_header_template = Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the MIT license.  See License.txt in the project root for license information.\n\n# IDE0035: Remove unreachable code\ndotnet_diagnostic.IDE0035.severity = warning\n\n# IDE0036: Order modifiers\ndotnet_diagnostic.IDE0036.severity = warning\n\n# IDE0043: Format string contains invalid placeholder\ndotnet_diagnostic.IDE0043.severity = warning\n\n# IDE0044: Make field readonly\ndotnet_diagnostic.IDE0044.severity = warning\n\n# IDE0011: Add braces\ncsharp_prefer_braces = when_multiline:warning\n# NOTE: We need the below severity entry for Add Braces due to https://github.com/dotnet/roslyn/issues/44201\ndotnet_diagnostic.IDE0011.severity = warning\n\n# IDE0040: Add accessibility modifiers\ndotnet_diagnostic.IDE0040.severity = warning\n\n# CONSIDER: Are IDE0051 and IDE0052 too noisy to be warnings for IDE editing scenarios? Should they be made build-only warnings?\n# IDE0051: Remove unused private member\ndotnet_diagnostic.IDE0051.severity = warning\n\n# IDE0052: Remove unread private member\ndotnet_diagnostic.IDE0052.severity = warning\n\n# IDE0059: Unnecessary assignment to a value\ndotnet_diagnostic.IDE0059.severity = warning\n\n# IDE0060: Remove unused parameter\ndotnet_diagnostic.IDE0060.severity = warning\n\n# CA1012: Abstract types should not have public constructors\ndotnet_diagnostic.CA1012.severity = warning\n\n# CA1822: Make member static\ndotnet_diagnostic.CA1822.severity = warning\n\n# IDE0005: Using directive is unnecessary\ndotnet_diagnostic.IDE0005.severity = warning\n\n# dotnet_style_allow_multiple_blank_lines_experimental\ndotnet_diagnostic.IDE2000.severity = warning\n\n# csharp_style_allow_embedded_statements_on_same_line_experimental\ndotnet_diagnostic.IDE2001.severity = warning\n\n# csharp_style_allow_blank_lines_between_consecutive_braces_experimental\ndotnet_diagnostic.IDE2002.severity = warning\n\n# dotnet_style_allow_statement_immediately_after_block_experimental\ndotnet_diagnostic.IDE2003.severity = warning\n\n# csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental\ndotnet_diagnostic.IDE2004.severity = warning\n\n# CSharp code style settings:\n[*.cs]\n# Newline settings\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n\n# Indentation preferences\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents = true\ncsharp_indent_case_contents_when_block = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = flush_left\n\n# Whitespace options\ncsharp_style_allow_embedded_statements_on_same_line_experimental = false\ncsharp_style_allow_blank_lines_between_consecutive_braces_experimental = false\ncsharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false\n\n# Prefer \"var\" everywhere\ndotnet_diagnostic.IDE0007.severity = error\ncsharp_style_var_for_built_in_types = true:error\ncsharp_style_var_when_type_is_apparent = true:error\ncsharp_style_var_elsewhere = true:error\n\n# Prefer method-like constructs to have a block body\ncsharp_style_expression_bodied_methods = false:none\ncsharp_style_expression_bodied_constructors = false:none\ncsharp_style_expression_bodied_operators = false:none\n\n# Prefer property-like constructs to have an expression-body\ncsharp_style_expression_bodied_properties = true:error\ncsharp_style_expression_bodied_indexers = true:error\ncsharp_style_expression_bodied_accessors = true:error\n\n# Suggest more modern language features when available\ncsharp_style_pattern_matching_over_is_with_cast_check = true:error\ncsharp_style_pattern_matching_over_as_with_null_check = true:error\ncsharp_style_inlined_variable_declaration = true:suggestion\ncsharp_style_throw_expression = true:error\ncsharp_style_conditional_delegate_call = true:suggestion\n\n# Spacing\ncsharp_space_after_cast = false\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_around_declaration_statements = do_not_ignore\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_between_square_brackets = false\n\n# Blocks are allowed\ncsharp_prefer_braces = true:silent\ncsharp_preserve_single_line_blocks = true\ncsharp_preserve_single_line_statements = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.6455078125,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto encoding=UTF-8\n*.sh text eol=lf\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n*.cs     diff=csharp text\n*.vb     text"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.517578125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Tt]emp/\n**/packages.lock.json\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n.dotnet/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n.packages/\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# VS Code\n.vscode/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# OS-specific files\n**/.DS_Store\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.12109375,
          "content": "---\n\n- id: dotnet-format\n  name: dotnet format\n  language: dotnet\n  types_or: ['c#', 'vb']\n  entry: dotnet-format --include\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Build.cmd",
          "type": "blob",
          "size": 0.1591796875,
          "content": "@echo off\npowershell -ExecutionPolicy ByPass -NoProfile -command \"& \"\"\"%~dp0eng\\common\\Build.ps1\"\"\" -restore -build -msbuildEngine dotnet %*\"\nexit /b %ErrorLevel%\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 11.6005859375,
          "content": "# Changelog\nAll changes to the project will be documented in this file.\n\n## [5.1.225507] - 2021-05-05\n[View Complete Diff of Changes](https://www.github.com/dotnet/format/compare/b95e1694941ca2595941f1c9cd0d9727b6c53d43...756d5a1c121be3e57e924788af64aa5607dc24e1)\n\n### Breaking Changes\n\n- Implicit restore when fixing code style or 3rd party analyzers (disable with `--no-restore`)\n- Adopt csc style for warnings and errors\n- Warnings and errors are now written to the standard error stream\n\n### Merged PRs:\n- [Add DiagnosticId to the format report (1133)](https://github.com/dotnet/format/pull/1133)\n- [Reenabled .NET Core 2.1 support (1021)](https://github.com/dotnet/format/pull/1021)\n- [Update System.CommandLine to 2.0.0-beta1.21216.1 (1118)](https://www.github.com/dotnet/format/pull/1118)\n- [Support AdditionalDocument changes (1106)](https://www.github.com/dotnet/format/pull/1106)\n- [Fix typo in examples (1082)](https://www.github.com/dotnet/format/pull/1082)\n- [Run CodeStyle formatter before removing unnecessary imports (1071)](https://www.github.com/dotnet/format/pull/1071)\n- [Allow Solution Filter files to be passed as the workspace path (1059)](https://www.github.com/dotnet/format/pull/1059)\n- [Add .pre-commit-hooks.yaml (872)](https://www.github.com/dotnet/format/pull/872)\n- [Add implicit restore when running analysis. Adds `--no-restore` option. (1015)](https://www.github.com/dotnet/format/pull/1015)\n- [Add separate command for binary log (1044)](https://www.github.com/dotnet/format/pull/1044)\n- [Use correct flag for codestyle codefixes (1037)](https://www.github.com/dotnet/format/pull/1037)\n- [Enhance whitespace issue logging with a detailed TextChange message (1017)](https://www.github.com/dotnet/format/pull/1017)\n- [Log all formatter error messages in a csc-style (1016)](https://www.github.com/dotnet/format/pull/1016)\n- [LogDebug each project's applied .editorconfig (1013)](https://www.github.com/dotnet/format/pull/1013)\n- [Add option to filter diagnostics by id (1007)](https://www.github.com/dotnet/format/pull/1007)\n- [Fix pre-commit directory (1004)](https://www.github.com/dotnet/format/pull/1004)\n- [Log warnings and errors to the standard error stream (982)](https://www.github.com/dotnet/format/pull/982)\n- [Only report fixable compiler diagnostics. (981)](https://www.github.com/dotnet/format/pull/981)\n\n## [5.0.211103] - 2021-02-11\n[View Complete Diff of Changes](https://www.github.com/dotnet/format/compare/82a5527cd93d66bffc885c0bb901499f5981db35...b95e1694941ca2595941f1c9cd0d9727b6c53d43)\n\n### Breaking Changes\n- Removed `--dry-run` should use `--check` instead\n- Removed `--files` should use `--include` instead\n- Removed `--workspace` this option is now implied\n\n### Merged PRs:\n- [Isolate each Analyzer assembly into its own LoadContext. (959)](https://www.github.com/dotnet/format/pull/959)\n- [Implement GetDocumentDiagnosticsAsync in CodeFix DiagnosticProvider (958)](https://www.github.com/dotnet/format/pull/958)\n- [Fix missing ` in README.md (914)](https://www.github.com/dotnet/format/pull/914)\n- [Add unit test for 3rd party fixer formatting (896)](https://www.github.com/dotnet/format/pull/896)\n- [Add unit test for code style fixer formatting (893)](https://www.github.com/dotnet/format/pull/893)\n- [Improve FixAll support by using equivalence key when available (884)](https://www.github.com/dotnet/format/pull/884)\n- [Only run analyzers against specified project when workspace is a project (865)](https://www.github.com/dotnet/format/pull/865)\n- [When matching all files don't rely on FileMatcher (864)](https://www.github.com/dotnet/format/pull/864)\n- [Fix markdown formatting in example table (858)](https://www.github.com/dotnet/format/pull/858)\n- [Add ability to read --{in,ex}clude value from stdin (790)](https://www.github.com/dotnet/format/pull/790)\n- [Add test to ensure code containing <auto-generated> comment is treated as generated. (857)](https://www.github.com/dotnet/format/pull/857)\n- [Fixes #834 : error reportfile without directory specified (842)](https://www.github.com/dotnet/format/pull/842)\n- [Log there were warnings loading the workspace if diagnostics are reported (841)](https://www.github.com/dotnet/format/pull/841)\n- [Fix CommandLine_AllArguments_Bind test (818)](https://www.github.com/dotnet/format/pull/818)\n- [Fix Run argument names (817)](https://www.github.com/dotnet/format/pull/817)\n- [Add option for whitespace formatting (774)](https://www.github.com/dotnet/format/pull/774)\n- [Load analyzer assemlbies in their own AssemblyLoadContext (746)](https://www.github.com/dotnet/format/pull/746)\n- [Check that file exists before considering it for formatting (775)](https://www.github.com/dotnet/format/pull/775)\n- [Report formatted files and counts based based on reported issues. (776)](https://www.github.com/dotnet/format/pull/776)\n- [Support generated_code editorconfig setting (780)](https://www.github.com/dotnet/format/pull/780)\n- [Create integrations.md (777)](https://www.github.com/dotnet/format/pull/777)\n- [Fix warnings and apply suggestions. (767)](https://www.github.com/dotnet/format/pull/767)\n- [Improve folder workspace performance (763)](https://www.github.com/dotnet/format/pull/763)\n- [Improve folder performance (760)](https://www.github.com/dotnet/format/pull/760)\n- [Update --include and --exclude documentation (761)](https://www.github.com/dotnet/format/pull/761)\n- [Remove aliases for the fix style and fix analyzers options (753)](https://www.github.com/dotnet/format/pull/753)\n- [Run analyzers during integration tests (728)](https://www.github.com/dotnet/format/pull/728)\n- [Remove unnecessary imports (749)](https://www.github.com/dotnet/format/pull/749)\n- [Only include compiler diagnostics if a fixer supports them (750)](https://www.github.com/dotnet/format/pull/750)\n- [Added CodeFormatter tests for `--fix-style` (751)](https://www.github.com/dotnet/format/pull/751)\n- [Format one solution per repo during integration tests (739)](https://www.github.com/dotnet/format/pull/739)\n- [Filter analyzers by project language before running (725)](https://www.github.com/dotnet/format/pull/725)\n- [Run all analyzers even when a fixer isn't present (723)](https://www.github.com/dotnet/format/pull/723)\n- [Update documentation for analyzers (722)](https://www.github.com/dotnet/format/pull/722)\n- [Add devcontainer to better support Codespaces (721)](https://www.github.com/dotnet/format/pull/721)\n- [Add validation when specifying --folder and analyzers (715)](https://www.github.com/dotnet/format/pull/715)\n- [Merge in Feature/analyzers (713)](https://www.github.com/dotnet/format/pull/713)\n- [Remove deprecated options and aliases (710)](https://www.github.com/dotnet/format/pull/710)\n- [Added reflection based discovery of analyzers and fixes (698)](https://www.github.com/dotnet/format/pull/698)\n- [Only run Imports formatter when is has configuration in the .editorconfig (701)](https://www.github.com/dotnet/format/pull/701)\n\n## [4.1.131201] - 2020-06-15\n[View Complete Diff of Changes](https://www.github.com/dotnet/format/compare/f772fc306ff4b70cabebbea76beba9cdfd7ecb80...82a5527cd93d66bffc885c0bb901499f5981db35)\n## Merged PRs:\n- [Only run Imports formatter when is has configuration in the .editorconfig (701)](https://www.github.com/dotnet/format/pull/701)\n- [Remove the 255 argument limit for OneOrMany options such as --include and --exclude (700)](https://www.github.com/dotnet/format/pull/700)\n\n## [4.0.130203] - 2020-06-01\n[View Complete Diff of Changes](https://www.github.com/dotnet/format/compare/3f2b20c65d32a59ca6bbc68b788a31ed38576d8e...f772fc306ff4b70cabebbea76beba9cdfd7ecb80)\n### Breaking Changes:\n- Added an imports formatter for sorting imports.\n- Format now runs on the latest installed Runtime.\n- `--check` and `--dry-run` have combined into a single option.\n- `--include` and `--exclude` use space-separated paths instead of comma-separated.\n\n### Deprecations:\n- Added warning to use the default argument instead of `--workspace` option. Use `dotnet format ./format.sln` instead of `dotnet format -w ./format.sln`\n- Added warning to use the default argument to specify the folder path when using the `--folder` option. Use `dotnet format ./src -f` instead of `dotnet format -f ./src`\n- Added warning to use `--include` instead of `--files` alias.\n- Added warning to use `--check` instead of `--dry-run` alias.\n\n### Merged PRs:\n- [Add Imports Formatter (693)](https://www.github.com/dotnet/roslyn/pull/693)\n- [Always run on the latest Runtime (694)](https://www.github.com/dotnet/roslyn/pull/694)\n- [Move to Roslyn's editorconfig support (590)](https://www.github.com/dotnet/roslyn/pull/590)\n- [Command line argument for solution/project as positional argument (681)](https://www.github.com/dotnet/roslyn/pull/681)\n- [Add option to format generated code files. (673)](https://www.github.com/dotnet/roslyn/pull/673)\n- [Produce a binlog when verbosity is set to detailed (605)](https://www.github.com/dotnet/roslyn/pull/605)\n- [Fix #581 - Add final newline false positive (633)](https://www.github.com/dotnet/roslyn/pull/633)\n- [Combine --check and --dry-run into a single option. (541)](https://github.com/dotnet/format/pull/541)\n- [Use space-separated paths instead of comma-separated for --include and --exclude (551)](https://github.com/dotnet/format/pull/551)\n- [Support loading commandline options from response files (552)](https://github.com/dotnet/format/pull/552)\n- [Support file globbing in --include and --exclude options (555)](https://github.com/dotnet/format/pull/555)\n\n## [3.3.111304] - 2020-02-13\n[View Complete Diff of Changes](https://github.com/dotnet/format/compare/3ecea99de4bb82b724bf11134279b5aaf8dd1f2f...7c8f67a570f5fde6a247704733d6742f93c0fa48)\n### Merged PRs:\n- [Enhance --files option to support folder paths. Add --include alias. (533)](https://github.com/dotnet/format/pull/533)\n- [format-500: Add `--exclude` option to ignore given files/folders (529)](https://github.com/dotnet/format/pull/529)\n- [format-379: Add `--report` command line argument to export json format report to given directory (495)](https://github.com/dotnet/format/pull/495)\n- [Update charset formatter to check for equivalent encodings (508)](https://github.com/dotnet/format/pull/508)\n\n## [3.2.107702] - 2020-01-27\n[View Complete Diff of Changes](https://github.com/dotnet/format/compare/256f37159dc60b29f76999749f57f4338324f102...3ecea99de4bb82b724bf11134279b5aaf8dd1f2f)\n### Merged PRs:\n- [Add FolderWorkspace and -f options to load files by folder (335)](https://github.com/dotnet/format/pull/335)\n- [Add formatter for the charset .editorconfig option (330)](https://github.com/dotnet/format/pull/330)\n\n## [3.1.37601] - 2019-07-26\n[View Complete Diff of Changes](https://github.com/dotnet/format/compare/211cab024c37fdffa5955c5855f9d62a14703452...256f37159dc60b29f76999749f57f4338324f102)\n### Merged PRs:\n- [Add end_of_line formatter (169)](https://github.com/dotnet/format/pull/169)\n- [Log formatting change details when in dry-run mode (249)](https://github.com/dotnet/format/pull/249)\n- [Added final newline formatter (133)](https://github.com/dotnet/format/pull/133)\n- [Check that code files excluded by .editorconfig are not formatted (130)](https://github.com/dotnet/format/pull/130)\n\n## [3.0.4] - 2019-04-02\n[View Complete Diff of Changes](https://github.com/dotnet/format/compare/658b525df6382ed33b20345ba5b037c8515c9a71...211cab024c37fdffa5955c5855f9d62a14703452)\n### Merged PRs:\n- [Added --files option (52)](https://github.com/dotnet/format/pull/52)\n- [Add new CLI '--check' option (48)](https://github.com/dotnet/format/pull/48)\n- [Avoiding exception when redirect stdout(#21) (23)](https://github.com/dotnet/format/pull/23)\n\n## [3.0.2] - 2019-02-28\n### Initial Release\n- Partial support for core .editorconfig options\n- Support for .NET whitespace formatting options\n- Support for --dry-run option\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.2509765625,
          "content": "# Code of Conduct\n\nThis project has adopted the code of conduct defined by the Contributor Covenant\nto clarify expected behavior in our community.\nFor more information, see the [.NET Foundation Code of Conduct](https://dotnetfoundation.org/code-of-conduct)."
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.447265625,
          "content": "<Project>\n\n  <Import Project=\"Sdk.props\" Sdk=\"Microsoft.DotNet.Arcade.Sdk\" />\n\n  <PropertyGroup>\n    <Copyright>$(CopyrightMicrosoft)</Copyright>\n    <PackageLicenseExpression>MIT</PackageLicenseExpression>\n    <RepositoryUrl>https://github.com/dotnet/format</RepositoryUrl>\n    <LangVersion>11</LangVersion>\n    <!-- Enables faster restore times -->\n    <RestoreUseStaticGraphEvaluation>true</RestoreUseStaticGraphEvaluation>\n  </PropertyGroup>\n\n</Project>\n"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 0.08984375,
          "content": "<Project>\n\n  <Import Project=\"Sdk.targets\" Sdk=\"Microsoft.DotNet.Arcade.Sdk\" />\n\n</Project>\n"
        },
        {
          "name": "Directory.Packages.props",
          "type": "blob",
          "size": 3.3056640625,
          "content": "<Project>\n\n  <PropertyGroup>\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\n    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\n    <!-- Using multiple feeds isn't supported by Maestro: https://github.com/dotnet/arcade/issues/14155. -->\n    <NoWarn>$(NoWarn);NU1507</NoWarn>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <!-- command-line-api -->\n    <PackageVersion Include=\"System.CommandLine\" Version=\"$(SystemCommandLineVersion)\" />\n    <PackageVersion Include=\"System.CommandLine.Rendering\" Version=\"$(SystemCommandLineRenderingVersion)\" />\n\n    <!-- corefx -->\n    <PackageVersion Include=\"Microsoft.VisualBasic\" Version=\"$(MicrosoftVisualBasicVersion)\" />\n\n    <!-- msbuild -->\n    <PackageVersion Include=\"Microsoft.Build.Framework\" Version=\"$(MicrosoftBuildVersion)\" />\n    <PackageVersion Include=\"Microsoft.Build.Tasks.Core\" Version=\"$(MicrosoftBuildTasksCoreVersion)\" />\n    <PackageVersion Include=\"Microsoft.Build\" Version=\"$(MicrosoftBuildVersion)\" />\n\n    <!-- nuget -->\n    <PackageVersion Include=\"NuGet.Common\" Version=\"$(NuGetVersion)\" />\n    <PackageVersion Include=\"NuGet.Configuration\" Version=\"$(NuGetVersion)\" />\n    <PackageVersion Include=\"NuGet.Frameworks\" Version=\"$(NuGetVersion)\" />\n    <PackageVersion Include=\"NuGet.Packaging\" Version=\"$(NuGetVersion)\" />\n    <PackageVersion Include=\"NuGet.Protocol\" Version=\"$(NuGetVersion)\" />\n    <PackageVersion Include=\"NuGet.Versioning\" Version=\"$(NuGetVersion)\" />\n\n    <!-- roslyn -->\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.Analyzer.Testing\" Version=\"$(MicrosoftCodeAnalysisAnalyzerTestingVersion)\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp.Features\" Version=\"$(MicrosoftCodeAnalysisVersion)\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"$(MicrosoftCodeAnalysisVersion)\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.Features\" Version=\"$(MicrosoftCodeAnalysisVersion)\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.VisualBasic.Features\" Version=\"$(MicrosoftCodeAnalysisVersion)\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.VisualBasic.Workspaces\" Version=\"$(MicrosoftCodeAnalysisVersion)\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.VisualBasic\" Version=\"$(MicrosoftCodeAnalysisVersion)\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.Workspaces.MSBuild\" Version=\"$(MicrosoftCodeAnalysisVersion)\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis\" Version=\"$(MicrosoftCodeAnalysisVersion)\" />\n\n    <!-- runtime -->\n    <PackageVersion Include=\"Microsoft.Extensions.FileSystemGlobbing\" Version=\"$(MicrosoftExtensionsFileSystemGlobbingVersion)\" />\n    <PackageVersion Include=\"Microsoft.Extensions.Logging\" Version=\"$(MicrosoftExtensionsLoggingVersion)\" />\n\n    <!-- symreader -->\n    <PackageVersion Include=\"Microsoft.DiaSymReader\" Version=\"$(MicrosoftDiaSymReaderVersion)\" />\n  </ItemGroup>\n\n  <!-- Not updated via dependency flow. -->\n  <ItemGroup>\n    <PackageVersion Include=\"BenchmarkDotNet.Annotations\" Version=\"0.13.5\" />\n    <PackageVersion Include=\"BenchmarkDotNet\" Version=\"0.13.5\" />\n    <PackageVersion Include=\"DiffPlex\" Version=\"1.6.3\" />\n    <PackageVersion Include=\"Microsoft.Build.Locator\" Version=\"1.6.10\" />\n    <PackageVersion Include=\"Microsoft.VisualStudio.Composition\" Version=\"17.4.16\" />\n  </ItemGroup>\n\n</Project>\n"
        },
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 1.0888671875,
          "content": "The MIT License (MIT)\n\nCopyright (c) .NET Foundation and Contributors\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "NuGet.config",
          "type": "blob",
          "size": 1.03125,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"dotnet-eng\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json\" />\n    <add key=\"dotnet-libraries\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-libraries/nuget/v3/index.json\" />\n    <add key=\"dotnet-libraries-transport\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-libraries-transport/nuget/v3/index.json\" />\n    <add key=\"dotnet9\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet9/nuget/v3/index.json\" />\n    <add key=\"dotnet9-transport\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet9-transport/nuget/v3/index.json\" />\n    <add key=\"dotnet-tools\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json\" />\n    <add key=\"dotnet-public\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json\" />\n  </packageSources>\n  <disabledPackageSources />\n</configuration>\n"
        },
        {
          "name": "Perf.cmd",
          "type": "blob",
          "size": 0.1142578125,
          "content": "@echo off\npowershell -ExecutionPolicy ByPass -NoProfile -command \"& \"\"\"%~dp0eng\\Perf.ps1\"\"\" %*\"\nexit /b %ErrorLevel%\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.3271484375,
          "content": "## Repository Consolidation\n\nGoing forward, the .NET format team is using the [dotnet/sdk](https://github.com/dotnet/sdk) repository for further development and respond to issues formerly in that repository.\n\nFor finding the dotnet format usage, check the [SDK repo](https://github.com/dotnet/sdk/tree/main/documentation/format/docs).\n"
        },
        {
          "name": "Restore.cmd",
          "type": "blob",
          "size": 0.15234375,
          "content": "@echo off\npowershell -ExecutionPolicy ByPass -NoProfile -command \"& \"\"\"%~dp0eng\\common\\Build.ps1\"\"\" -restore -msbuildEngine dotnet %*\"\nexit /b %ErrorLevel%\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.0322265625,
          "content": "# Security Policy\r\n\r\n## Supported Versions\r\n\r\nThe .NET Core and ASP.NET Core support policy, including supported versions can be found at the [.NET Core Support Policy Page](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\n## Reporting a Vulnerability\r\n\r\nSecurity issues and bugs should be reported privately to the Microsoft Security Response Center (MSRC), either by emailing secure@microsoft.com or via the portal at https://msrc.microsoft.com. \r\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your \r\noriginal message. Further information, including the MSRC PGP key, can be found in the [MSRC Report an Issue FAQ](https://www.microsoft.com/en-us/msrc/faqs-report-an-issue).\r\n\r\nReports via MSRC may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\nPlease do not open issues for anything you think might have a security implication."
        },
        {
          "name": "THIRD-PARTY-NOTICES.TXT",
          "type": "blob",
          "size": 0.3828125,
          "content": ".NET Core uses third-party libraries or other resources that may be\ndistributed under licenses different than the .NET Core software.\n\nIn the event that we accidentally failed to list a required notice, please\nbring it to our attention. Post an issue or email us:\n\n           dotnet@microsoft.com\n\nThe attached notices are provided for information only.\n\nNo notices are provided at this time."
        },
        {
          "name": "Test.cmd",
          "type": "blob",
          "size": 0.1494140625,
          "content": "@echo off\npowershell -ExecutionPolicy ByPass -NoProfile -command \"& \"\"\"%~dp0eng\\common\\Build.ps1\"\"\" -test -msbuildEngine dotnet %*\"\nexit /b %ErrorLevel%\n"
        },
        {
          "name": "azure-pipelines-integration.yml",
          "type": "blob",
          "size": 3.119140625,
          "content": "# Branches that trigger a build on commit\ntrigger:\n- main\n- feature/*\n- release/*\n\n# Branches that trigger builds on PR\npr:\n- main\n- feature/*\n- release/*\n\njobs:\n\n- job: Format\n  pool:\n    vmImage: 'windows-latest'\n  strategy:\n    maxParallel: 8\n    matrix:\n      format:\n        _repo: \"https://github.com/dotnet/format\"\n        _repoName: \"dotnet/format\"\n        _targetSolution: \"format.sln\"\n        _branchName: \"main\"\n        _sha: \"c3b6ef4e4a480cae887bbf47fd674bfab380ef4e\"\n        _useParentSdk: 0\n      roslyn:\n        _repo: \"https://github.com/dotnet/roslyn\"\n        _repoName: \"dotnet/roslyn\"\n        _targetSolution: \"Compilers.slnf\"\n        _branchName: \"main\"\n        _sha: \"a3bb37003aeccad012a6e7dd220977599e8b8e65\"\n        _useParentSdk: 0\n      sdk:\n        _repo: \"https://github.com/dotnet/sdk\"\n        _repoName: \"dotnet/sdk\"\n        _targetSolution: \"sdk.sln\"\n        _branchName: \"main\"\n        _sha: \"be25db95c376bffd508a023399ddd34392fe6458\"\n        _useParentSdk: 0\n      project-system:\n        _repo: \"https://github.com/dotnet/project-system\"\n        _repoName: \"dotnet/project-system\"\n        _targetSolution: \"ProjectSystem.sln\"\n        _branchName: \"main\"\n        _sha: \"e660d54d6b3198751bd0502fe270e1657f32a913\"\n        _useParentSdk: 1\n      msbuild:\n        _repo: \"https://github.com/dotnet/msbuild\"\n        _repoName: \"dotnet/msbuild\"\n        _targetSolution: \"MSBuild.sln\"\n        _branchName: \"main\"\n        _sha: \"f4fa6bde775a3f7cbb2bb90a349ee5fc759114f3\"\n        _useParentSdk: 0\n      aspnetcore:\n        _repo: \"https://github.com/dotnet/aspnetcore\"\n        _repoName: \"dotnet/aspnetcore\"\n        _targetSolution: \"AspNetCore.sln\"\n        _branchName: \"main\"\n        _sha: \"d765d7ba4871a8c2cb38d4134553d3be9a7370d7\"\n        _useParentSdk: 0\n      efcore:\n        _repo: \"https://github.com/dotnet/efcore\"\n        _repoName: \"dotnet/efcore\"\n        _targetSolution: \"All.sln\"\n        _branchName: \"main\"\n        _sha: \"1b2ff365399ab6736a9ea4c98ab1b60acda5d917\"\n        _useParentSdk: 0\n      razor-tooling:\n        _repo: \"https://github.com/dotnet/razor\"\n        _repoName: \"dotnet/razor\"\n        _targetSolution: \"Razor.sln\"\n        _branchName: \"main\"\n        _sha: \"ecb4b595e3322a18c240f50a763868540f51eaaa\"\n        _useParentSdk: 0\n  timeoutInMinutes: 60\n  steps:\n    - script: eng\\integration-test.cmd -repo '$(_repo)' -branchName '$(_branchName)' -sha '$(_sha)' -targetSolution '$(_targetSolution)' -useParentSdk $(_useParentSdk) -testPath '$(Agent.TempDirectory)\\temp' -stage 'prepare'\n      displayName: Prepare $(_repoName) for formatting\n\n    - script: eng\\integration-test.cmd -repo '$(_repo)' -branchName '$(_branchName)' -sha '$(_sha)' -targetSolution '$(_targetSolution)' -useParentSdk $(_useParentSdk) -testPath '$(Agent.TempDirectory)\\temp' -stage 'format-workspace'\n      displayName: Run dotnet-format on $(_repoName) $(_targetSolution)\n\n    - script: eng\\integration-test.cmd -repo '$(_repo)' -branchName '$(_branchName)' -sha '$(_sha)' -targetSolution '$(_targetSolution)' -useParentSdk $(_useParentSdk) -testPath '$(Agent.TempDirectory)\\temp' -stage 'format-folder'\n      displayName: Run dotnet-format on $(_repoName) repo folder\n"
        },
        {
          "name": "azure-pipelines-official.yml",
          "type": "blob",
          "size": 4.9873046875,
          "content": "resources:\n  repositories:\n  - repository: MicroBuildTemplate\n    type: git\n    name: 1ESPipelineTemplates/MicroBuildTemplate\n    ref: refs/tags/release\n\n# Branches that trigger a build on commit\ntrigger:\n- main\n- release/*\n- internal/release/*\nvariables:\n- group: AzureDevOps-Artifact-Feeds-Pats\nextends:\n  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate\n  parameters:\n    sdl:\n      sourceAnalysisPool:\n        name: NetCore1ESPool-Svc-Internal\n        image: 1es-windows-2022\n        os: windows\n    pool:\n      name: netcore1espool-internal\n      image: windows.vs2022preview.amd64\n      os: windows\n    customBuildTags:\n    - ES365AIMigrationTooling\n    stages:\n    - stage: build\n      displayName: Build and Test\n      pool:\n        name: NetCore1ESPool-Svc-Internal\n        demands: ImageOverride -equals windows.vs2022preview.amd64\n      jobs:\n      - job: OfficialBuild\n        displayName: Official Build\n        templateContext:\n          mb:\n            signing:\n              enabled: true\n              feedSource: https://dnceng.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json\n              signType: $(SignType)\n          outputs:\n          - output: pipelineArtifact\n            displayName: 'Publish Logs'\n            condition: not(succeeded())\n            targetPath: '$(Build.SourcesDirectory)\\artifacts\\log\\$(BuildConfiguration)'\n            artifactName: 'Logs'\n            publishLocation: Container\n          - output: pipelineArtifact\n            displayName: 'Publish Logs'\n            condition: not(succeeded())\n            targetPath: '$(Build.SourcesDirectory)\\artifacts\\TestResults\\$(BuildConfiguration)'\n            artifactName: 'TestResults'\n            publishLocation: Container\n          - output: buildArtifacts\n            displayName: 'Publish Packages'\n            condition: succeeded()\n            PathtoPublish: '$(Build.SourcesDirectory)\\artifacts\\packages\\$(BuildConfiguration)'\n            ArtifactName: 'PackageArtifacts'\n          - output: buildArtifacts\n            displayName: 'Publish Asset Manifests'\n            condition: succeeded()\n            PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(BuildConfiguration)/AssetManifest'\n            ArtifactName: AssetManifests\n          - output: pipelineArtifact\n            displayName: 'Publish MicroBuild Artifacts'\n            condition: succeededOrFailed()\n            targetPath: '$(Build.ArtifactStagingDirectory)\\MicroBuild\\Output'\n            artifactName: MicroBuildOutputs\n            publishLocation: Container\n        steps:\n        - task: PowerShell@2\n          displayName: Setup Private Feeds Credentials\n          inputs:\n            filePath: $(Build.SourcesDirectory)/eng/common/SetupNugetSources.ps1\n            arguments: -ConfigFile $(Build.SourcesDirectory)/NuGet.config -Password $Env:Token\n          env:\n            Token: $(dn-bot-dnceng-artifact-feeds-rw)\n        - script: eng\\common\\CIBuild.cmd -configuration $(BuildConfiguration) /p:OfficialBuildId=$(Build.BuildNumber) /p:VisualStudioDropName=$(VisualStudioDropName) /p:DotNetSignType=$(SignType) /p:DotNetFinalVersionKind=$(_additionalBuildArgs) /p:DotnetPublishUsingPipelines=true\n          displayName: Build\n        - template: /eng/common/templates-official/steps/generate-sbom.yml@self\n        - task: PublishTestResults@2\n          displayName: Publish XUnit Test Results\n          inputs:\n            testRunner: XUnit\n            testResultsFiles: '$(Build.SourcesDirectory)\\artifacts\\TestResults\\$(BuildConfiguration)\\*.trx'\n            mergeTestResults: true\n            testRunTitle: 'Unit Tests'\n          condition: always()\n      - job: codeql\n        displayName: CodeQL\n        variables:\n        - name: skipComponentGovernanceDetection\n          value: true\n        - name: Codeql.Enabled\n          value: true\n        - name: Codeql.Cadence\n          value: 0\n        - name: Codeql.TSAEnabled\n          value: true\n        steps:\n        - task: PowerShell@2\n          displayName: Setup Private Feeds Credentials\n          inputs:\n            filePath: $(Build.SourcesDirectory)/eng/common/SetupNugetSources.ps1\n            arguments: -ConfigFile $(Build.SourcesDirectory)/NuGet.config -Password $Env:Token\n          env:\n            Token: $(dn-bot-dnceng-artifact-feeds-rw)\n        - script: eng\\common\\cibuild.cmd -configuration Release -prepareMachine /p:Test=false\n          displayName: Windows Build\n      - template: /eng/common/templates-official/jobs/source-build.yml@self\n      - template: /eng/common/templates-official/job/publish-build-assets.yml@self\n        parameters:\n          publishUsingPipelines: true\n          dependsOn:\n          - OfficialBuild\n          - Source_Build_Managed\n    - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:\n      - template: /eng/common/templates-official/post-build/post-build.yml@self\n        parameters:\n          publishingInfraVersion: 3\n          enableSymbolValidation: false\n          enableSourceLinkValidation: false"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 4.81640625,
          "content": "# Branches that trigger a build on commit\ntrigger:\n- main\n- feature/*\n- release/*\n\n# Branches that trigger builds on PR\npr:\n- main\n- feature/*\n- release/*\n\njobs:\n\n- job: Windows\n  pool:\n    vmImage: 'windows-latest'\n  variables:\n    _os: Windows\n  strategy:\n    maxParallel: 4\n    matrix:\n      Debug:\n        _configuration: Debug\n      Release:\n        _configuration: Release\n  timeoutInMinutes: 30\n  steps:\n    - script: eng\\common\\cibuild.cmd -msbuildEngine dotnet -configuration $(_configuration) -prepareMachine /p:TestTimeout=360000\n      displayName: Build and Test\n    - task: PublishTestResults@2\n      inputs:\n        testRunner: XUnit\n        testResultsFiles: '$(Build.SourcesDirectory)\\artifacts\\TestResults\\$(_configuration)\\*.trx'\n        mergeTestResults: true\n        testRunTitle: '$(_os) $(_configuration)'\n      condition: always()\n    - task: PublishBuildArtifacts@1\n      displayName: Publish Workspace Loader Projects\n      inputs:\n        PathtoPublish: '$(Build.SourcesDirectory)/tests/projects/for_workspace_loader'\n        ArtifactName: '$(_os) $(_configuration) - Workspace Loader Projects'\n      continueOnError: true\n      condition: not(succeeded())\n    - task: PublishBuildArtifacts@1\n      displayName: Publish Logs\n      inputs:\n        PathtoPublish: '$(Build.SourcesDirectory)\\artifacts\\log\\$(_configuration)'\n        ArtifactName: '$(_os) $(_configuration)'\n      continueOnError: true\n      condition: not(succeeded())\n\n- job: Linux\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    _os: Linux\n  strategy:\n    maxParallel: 4\n    matrix:\n      Debug:\n        _configuration: Debug\n      Release:\n        _configuration: Release\n  timeoutInMinutes: 30\n  steps:\n    - script: ./eng/common/cibuild.sh --configuration $(_configuration) --prepareMachine /p:TestTimeout=240000\n      displayName: Build and Test\n    - task: PublishTestResults@2\n      displayName: Publish xUnit Test Results\n      inputs:\n        testRunner: XUnit\n        testResultsFiles: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_configuration)/*.trx'\n        mergeTestResults: true\n        testRunTitle: '$(_os) $(_configuration)'\n      condition: always()\n    - task: PublishBuildArtifacts@1\n      displayName: Publish Workspace Loader Projects\n      inputs:\n        PathtoPublish: '$(Build.SourcesDirectory)/tests/projects/for_workspace_loader'\n        ArtifactName: '$(_os) $(_configuration) - Workspace Loader Projects'\n      continueOnError: true\n      condition: not(succeeded())\n    - task: PublishBuildArtifacts@1\n      displayName: Publish Logs\n      inputs:\n        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_configuration)'\n        ArtifactName: '$(_os) $(_configuration)'\n      continueOnError: true\n      condition: not(succeeded())\n\n- job: Linux_Spanish\n  pool:\n    vmImage: 'ubuntu-latest'\n  variables:\n    _os: Linux\n    LC_ALL: es_ES.UTF-8\n  strategy:\n    maxParallel: 4\n    matrix:\n      Debug:\n        _configuration: Debug\n      Release:\n        _configuration: Release\n  timeoutInMinutes: 30\n  steps:\n    - script: ./eng/common/cibuild.sh --configuration $(_configuration) --prepareMachine /p:TestTimeout=360000\n      displayName: Build and Test\n    - task: PublishTestResults@2\n      displayName: Publish xUnit Test Results\n      inputs:\n        testRunner: XUnit\n        testResultsFiles: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_configuration)/*.trx'\n        mergeTestResults: true\n        testRunTitle: 'Spanish $(_os) $(_configuration)'\n      condition: always()\n    - task: PublishBuildArtifacts@1\n      displayName: Publish Workspace Loader Projects\n      inputs:\n        PathtoPublish: '$(Build.SourcesDirectory)/tests/projects/for_workspace_loader'\n        ArtifactName: 'Spanish $(_os) $(_configuration) - Workspace Loader Projects'\n      continueOnError: true\n      condition: not(succeeded())\n    - task: PublishBuildArtifacts@1\n      displayName: Publish Logs\n      inputs:\n        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_configuration)'\n        ArtifactName: 'Spanish $(_os) $(_configuration)'\n      continueOnError: true\n      condition: not(succeeded())\n\n- job: Formatting_Check\n  pool:\n    vmImage: 'ubuntu-latest'\n  timeoutInMinutes: 10\n  steps:\n    - script: ./restore.sh && echo \"##vso[task.setvariable variable=PATH]$(Build.SourcesDirectory)/.dotnet:${PATH}\" && echo \"##vso[task.setvariable variable=DOTNET_ROOT]$(Build.SourcesDirectory)/.dotnet\"\n      displayName: Restore dependencies\n    - script: dotnet run --project ./src/dotnet-format.csproj -c Release -- @validate.rsp\n      displayName: Run dotnet-format\n    - task: PublishBuildArtifacts@1\n      displayName: Publish Logs\n      inputs:\n        PathtoPublish: '$(Build.SourcesDirectory)\\artifacts\\log\\'\n        ArtifactName: 'Formatting Check'\n      continueOnError: true\n      condition: not(succeeded())\n      \n- template: /eng/common/templates/jobs/source-build.yml\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.50390625,
          "content": "#!/usr/bin/env bash\n\nsource=\"${BASH_SOURCE[0]}\"\n\n# resolve $SOURCE until the file is no longer a symlink\nwhile [[ -h $source ]]; do\n  scriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n  source=\"$(readlink \"$source\")\"\n\n  # if $source was a relative symlink, we need to resolve it relative to the path where the\n  # symlink file was located\n  [[ $source != /* ]] && source=\"$scriptroot/$source\"\ndone\n\nscriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n\"$scriptroot/eng/common/build.sh\" --build --restore $@\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "eng",
          "type": "tree",
          "content": null
        },
        {
          "name": "format.sln",
          "type": "blob",
          "size": 3.86328125,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 15\nVisualStudioVersion = 15.0.26124.0\nMinimumVisualStudioVersion = 15.0.26124.0\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"dotnet-format\", \"src\\dotnet-format.csproj\", \"{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"dotnet-format.UnitTests\", \"tests\\dotnet-format.UnitTests.csproj\", \"{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"dotnet-format.Performance\", \"perf\\dotnet-format.PerformanceTests.csproj\", \"{9E6BD2C1-9E04-428A-B960-BE1B786CA910}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Release|x64.Build.0 = Release|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{7DFBB9BC-E3A9-46EB-B225-9DFD4E57D344}.Release|x86.Build.0 = Release|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Release|x64.Build.0 = Release|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{4F181F8B-534F-48A6-A28B-0D11F5AEFF55}.Release|x86.Build.0 = Release|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Release|x64.Build.0 = Release|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{9E6BD2C1-9E04-428A-B960-BE1B786CA910}.Release|x86.Build.0 = Release|Any CPU\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.25390625,
          "content": "{\n  \"sdk\": {\n    \"version\": \"9.0.100-preview.1.24101.2\",\n    \"allowPrerelease\": true,\n    \"rollForward\": \"major\"\n  },\n  \"tools\": {\n    \"dotnet\": \"9.0.100-preview.1.24101.2\"\n  },\n  \"msbuild-sdks\": {\n    \"Microsoft.DotNet.Arcade.Sdk\": \"9.0.0-beta.24156.2\"\n  }\n}\n"
        },
        {
          "name": "omnisharp.json",
          "type": "blob",
          "size": 0.0478515625,
          "content": "{\n  \"SDK\": {\n    \"includePrereleases\": true\n  }\n}"
        },
        {
          "name": "perf",
          "type": "tree",
          "content": null
        },
        {
          "name": "restore.sh",
          "type": "blob",
          "size": 0.49609375,
          "content": "#!/usr/bin/env bash\n\nsource=\"${BASH_SOURCE[0]}\"\n\n# resolve $SOURCE until the file is no longer a symlink\nwhile [[ -h $source ]]; do\n  scriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n  source=\"$(readlink \"$source\")\"\n\n  # if $source was a relative symlink, we need to resolve it relative to the path where the\n  # symlink file was located\n  [[ $source != /* ]] && source=\"$scriptroot/$source\"\ndone\n\nscriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n\"$scriptroot/eng/common/build.sh\" --restore $@\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-plan.md",
          "type": "blob",
          "size": 0.9072265625,
          "content": "# Validating dotnet-format\n\ndotnet-format includes project loading tests which validate clean project loading for all the common C# & VB project templates. To validate new SDKs, we can simply must remove the SDK pinned in the global.json and run `Test.cmd`.\n\n## Steps:\n1. Install the SDK being validated against.\n2. Checkout the dotnet-format repo. `git clone https://github.com/dotnet/format.git`\n3. Update the gobal.json by removing the \"sdk\" configuration.\nBefore:\n```json\n{\n  \"tools\": {\n    \"dotnet\": \"6.0.103\"\n  },\n  \"sdk\": {\n    \"version\": \"6.0.103\"\n  },\n  \"msbuild-sdks\": {\n    \"Microsoft.DotNet.Arcade.Sdk\": \"6.0.0-beta.22166.2\"\n  }\n}\n```\nAfter:\n```json\n{\n  \"tools\": {\n    \"dotnet\": \"6.0.103\"\n  },\n  \"msbuild-sdks\": {\n    \"Microsoft.DotNet.Arcade.Sdk\": \"6.0.0-beta.22166.2\"\n  }\n}\n```\n4. Run `Restore.cmd`.\n5. Run `Build.cmd`.\n6. Run `Test.cmd`.\n\nYou can report test failures here: https://github.com/dotnet/format/issues\n"
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.4931640625,
          "content": "#!/usr/bin/env bash\n\nsource=\"${BASH_SOURCE[0]}\"\n\n# resolve $SOURCE until the file is no longer a symlink\nwhile [[ -h $source ]]; do\n  scriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n  source=\"$(readlink \"$source\")\"\n\n  # if $source was a relative symlink, we need to resolve it relative to the path where the\n  # symlink file was located\n  [[ $source != /* ]] && source=\"$scriptroot/$source\"\ndone\n\nscriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n\"$scriptroot/eng/common/build.sh\" --test $@\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "validate.rsp",
          "type": "blob",
          "size": 0.0927734375,
          "content": "./format.sln\n--exclude\n./tests/projects/\n--verify-no-changes\n--report\n./artifacts/log/\n-v\ndiag\n"
        }
      ]
    }
  ]
}