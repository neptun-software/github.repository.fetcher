{
  "metadata": {
    "timestamp": 1736710911451,
    "page": 518,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "m969/EGamePlay",
      "stars": 2071,
      "defaultBranch": "2.0",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.119140625,
          "content": "# This .gitignore file should be placed at the root of your Unity project directory\n#\n# Get latest from https://github.com/github/gitignore/blob/master/Unity.gitignore\n#\n/[Ll]ibrary/\n/[Tt]emp/\n/[Oo]bj/\n/[Bb]uild/\n/[Bb]uilds/\n/[Ll]ogs/\n/[Mm]emoryCaptures/\n/[Uu]serSettings/\n\n# Asset meta data should only be ignored when the corresponding asset is also ignored\n!/[Aa]ssets/**/*.meta\n\n# Uncomment this line if you wish to ignore the asset store tools plugin\n# /[Aa]ssets/AssetStoreTools*\n\n# Autogenerated Jetbrains Rider plugin\n[Aa]ssets/Plugins/Editor/JetBrains*\n\n# Visual Studio cache directory\n.vs/\n\n# Gradle cache directory\n.gradle/\n\n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n*.mdb\n*.opendb\n*.VC.db\n\n# Unity3D generated meta files\n*.pidb.meta\n*.pdb.meta\n*.mdb.meta\n\n# Unity3D generated file on crash reports\nsysinfo.txt\n\n# Builds\n*.apk\n*.unitypackage\n\n# Crashlytics generated file\ncrashlytics-build.properties\n\n# /ProjectSettings/ProjectVersion.txt\n/.idea\n.vsconfig\n/Assets/Plugins/Sirenix\n/Assets/Plugins/Sirenix.meta\n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "Excel",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0361328125,
          "content": "MIT License\n\nCopyright (c) 2024 m969\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.1591796875,
          "content": "# ***EGamePlay***\n\n<img src=\"Readme/EGamePaly_logo.png\" width=\"60%\">\n\n---\n# 这个是2.0的版本，之前的版本在1.0分支\n\n2.0版本的改动主要有以下几个地方\n\n1、将SkillAbility和StatusAbility统一为Ability，实体类和配置表都统一，通过配置表里的Type字段区分Skill和Buff\n\n2、不再分Excel流程和ScriptableObject流程，2.0的效果结构更复杂，Excel不好表达，统一为Excel做技能信息配置，SO做效果配置AbilityConfigObject\n\n3、AbilityConfigObject的效果配置拆分为```触发点```和```效果列表```分开配置，通过触发点去触发效果，触发点分为主动触发和被动触发，主动触发通过技能执行体触发，其余的都是被动触发，比如大多数的buff触发机制\n\n4、执行体里的碰撞体配置改为更方便扩展的效果列表配置\n\n---\n[![Unity Version: 2023.2.20f1](https://img.shields.io/badge/Unity-2023.2.20f1-333333.svg?logo=unity)](https://unity3d.com/get-unity/download/archive) [![Status: Work-in-progress](https://img.shields.io/badge/status-work--in--progress-orange)](https://github.com/m969/EGamePlay/projects/1)\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/m969/EGamePlay.svg)](https://starchart.cc/m969/EGamePlay)\n\n---\n# 文档：\n- [EGamePlay文档(wiki)](https://github.com/m969/EGamePlay/wiki)\n\n# 商业项目\n- [暗黑之地](https://www.taptap.cn/app/227372) https://www.taptap.cn/app/227372 一个人开发，用EGP重写了整个战斗后重新上线\n\n---\n## 知乎文章：\n\n- [0、如何实现一个灵活、通用的战斗（技能）系统——序章](https://zhuanlan.zhihu.com/p/272216809)\n- [1、如何实现一个灵活、通用的战斗（技能）系统——数值系统](https://zhuanlan.zhihu.com/p/269901872)\n- [2、如何实现一个灵活、通用的战斗（技能）系统——数值系统（升级版）](https://zhuanlan.zhihu.com/p/274795206)\n- [3、如何实现一个灵活、通用的战斗（技能）系统——战斗行动机制](https://zhuanlan.zhihu.com/p/272865602)\n- [4、如何实现一个灵活、通用的战斗（技能）系统——战斗实体](https://zhuanlan.zhihu.com/p/284192989)\n- [5、如何实现一个灵活、通用的战斗（技能）系统——能力Ability](https://zhuanlan.zhihu.com/p/292590253)\n- [6、如何实现一个灵活、通用的战斗（技能）系统——Status状态效果](https://zhuanlan.zhihu.com/p/334825494)\n- [7、如何实现一个灵活、通用的战斗（技能）系统——Skill技能](https://zhuanlan.zhihu.com/p/340447052)\n- [8、如何实现一个灵活、通用的战斗（技能）系统——技能效果](https://zhuanlan.zhihu.com/p/341431038)\n- [9、如何实现一个灵活、通用的战斗（技能）系统——Entity-Component模式](https://zhuanlan.zhihu.com/p/343624199)\n---\n\n## demo运行\n- rpg demo，运行RpgExample Scene场景\n- 回合制demo，运行TurnBaseExample Scene场景\n- 技能调试编辑，运行ExecutionLinkScene场景\n\n---\n## 如何制作一个简单的技能\n- 首先在AbilityConfig.xlsx表里添加一个技能，给定技能id，配置参数\n- 然后右键选择 ```能力/能力配置``` 创建对应id的技能配置，配置效果\n- 然后右键选择 ```能力/Execution``` 创建对应id的技能执行体，配置片段表现\n- 最后就是运行时将技能挂载到CombatEntity上，再通过施法组件SpellComponent释放技能即可\n\n---\n\n## 该项目使用了以下收费插件：\n- [DOTween Pro](https://assetstore.unity.com/packages/tools/visual-scripting/dotween-pro-32416) （简单易用强大的动画插件）\n- [Odin Inspector](https://assetstore.unity.com/packages/tools/utilities/odin-inspector-and-serializer-89041) （编辑器扩展、工作流改善）\n- [Animancer Pro](https://assetstore.unity.com/packages/tools/animation/animancer-pro-116514) （基于Playable的简单强大的Animation解决方案）\n---\n\n## 如何将EGamePlay移植到别的Unity工程\n如果要将EGamePlay移植到自己的Unity工程里，首先要确保Odin Inspector插件已经在工程中，并加上UNITY条件编译，最后将以下目录复制过去即可：\n- EGamePlay/Assets/Editor\n- EGamePlay/Assets/EGamePlay\n- EGamePlay/Assets/EGamePlay.Unity\n- EGamePlay/Assets/Plugins/Editor/npoi\n- EGamePlay/Excel\n\n---\n## 如何将EGamePlay移植到ET框架里\n- 把EGamePlay/Assets/Editor移到ET.Editor程序集下\n- 把EGamePlay/Assets/EGamePlay移到Model程序集下 \n- 把EGamePlay/Assets/EGamePlay.Unity移到ModelView程序集下 \n- 最后要添加条件编译EGAMEPLAY_ET\n\n可以参考这个联网同步demo https://github.com/m969/AOGame\n\n## EGamePlay demo示意图\n---\n\n<img src=\"Readme/EGamePlay.gif\" width=\"60%\">\n<img src=\"Readme/EGamePlayTurn.gif\" width=\"60%\">\n<img src=\"Readme/EGamePlayExecutionLink2.gif\" width=\"90%\">\n\n***\n\n---\n## 基于Odin和ScriptableObject实现的灵活的技能、buff配置工具\n\n<img src=\"Readme/AbilityObjectSkill2.png\" width=\"50%\">\n<img src=\"Readme/SkillEditorWindow.png\" width=\"100%\">\n\n### 技能Excel配置\n![AbilityConfigExcel.png](Readme/AbilityConfigExcel.png)\n\n---\n## EGamePlay战斗框架技术讨论交流qq群：763696367\n对战斗感兴趣的同学可以进群一起探讨更合适、高效的战斗框架实现\n<br>对EGamePlay有任何疑问或建议可以进群反馈，或是提在[Discussions](https://github.com/m969/EGamePlay/discussions)\n\n---\n## 其他类似项目\n- https://github.com/KrazyL/SkillSystem-3 (Dota2 alike Skill System Implementation for KnightPhone)\n- https://github.com/weichx/AbilitySystem\n- https://github.com/dongweiPeng/SkillSystem (丰富的接口可便于使用扩展 完整的技能效果流程【如流程图】 配套的技能管理器 自定义的技能数据表)\n- https://github.com/sjai013/UnityGameplayAbilitySystem (The approach for this is taken from that used by Unreal's Gameplay Ability System, but implemented in Unity using the Data-Oriented Technology Stack (DOTS) where possible.)\n- https://github.com/dx50075/SkillSystem (skill system for unity ， 思路 http://blog.csdn.net/qq18052887/article/details/50358463\n技能描述文件如下 skill(1000) //技能1 { FaceToTarget(0) PlayAnimation(1,Skill_1) Bullet(1.3,Bullet,7) PlayEffect(0,Explode8,3) })\n\n---\n## 参考\n- https://github.com/egametang/ET\n"
        },
        {
          "name": "Readme",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}