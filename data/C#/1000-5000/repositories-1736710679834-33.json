{
  "metadata": {
    "timestamp": 1736710679834,
    "page": 33,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xoofx/markdig",
      "stars": 4517,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.642578125,
          "content": "# EditorConfig is awesome:http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# All Files\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 4\ninsert_final_newline = false\ntrim_trailing_whitespace = true\n\n# Solution Files\n[*.sln]\nindent_style = tab\n\n# XML Project Files\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n# Configuration Files\n[*.{json,xml,yml,config,props,targets,nuspec,resx,ruleset}]\nindent_size = 2\n\n# Markdown Files\n[*.md]\ntrim_trailing_whitespace = false\n\n# Web Files\n[*.{htm,html,js,ts,css,scss,less}]\nindent_size = 2\ninsert_final_newline = true\n\n# Bash Files\n[*.sh]\nend_of_line = lf\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0615234375,
          "content": "* text=auto\n*.cs text=auto diff=csharp\n*.sln text=auto eol=crlf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.9189453125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n*.nuget.props\n*.nuget.targets\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Common IntelliJ Platform excludes\n\n# User specific\n**/.idea/**/workspace.xml\n**/.idea/**/tasks.xml\n**/.idea/shelf/*\n**/.idea/dictionaries\n**/.idea/httpRequests/\n\n# Sensitive or high-churn files\n**/.idea/**/dataSources/\n**/.idea/**/dataSources.ids\n**/.idea/**/dataSources.xml\n**/.idea/**/dataSources.local.xml\n**/.idea/**/sqlDataSources.xml\n**/.idea/**/dynamic.xml\n\n# Rider\n# Rider auto-generates .iml files, and contentModel.xml\n**/.idea/**/*.iml\n**/.idea/**/contentModel.xml\n**/.idea/**/modules.xml\n\n# Remove artifacts produced by dotnet-releaser\nartifacts-dotnet-releaser/\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 14.7353515625,
          "content": "# Changelog\n\n## 0.27.0 (23 Jan 2022)\n- Fix link reference definition parse bug with title and CRLF ([PR #590](https://github.com/lunet-io/markdig/pull/590))\n- Move tests to net6.0 ([PR #560](https://github.com/lunet-io/markdig/pull/560))\n\n## 0.26.0 (27 Aug 2021)\n- Fix rendering diff between line endings ([PR #560](https://github.com/lunet-io/markdig/pull/560))\n- Make Mathematics extension respect EnableHtml* options ([PR #570](https://github.com/lunet-io/markdig/pull/570))\n\n## 0.25.0 (10 June 2021)\n- Fix regression when parsing link reference definitions (#543)\n- Make digits in JiraKey's posible ([PR #548](https://github.com/lunet-io/markdig/pull/548))\n\n## 0.24.0 (20 Mar 2021)\n- Add support for roundtrip Markdown ([PR #481](https://github.com/lunet-io/markdig/pull/481))\n- Introduction of nullability ([PR #522](https://github.com/lunet-io/markdig/pull/522) [PR #524](https://github.com/lunet-io/markdig/pull/524) [PR #525](https://github.com/lunet-io/markdig/pull/525) [PR #526](https://github.com/lunet-io/markdig/pull/526) [PR #527](https://github.com/lunet-io/markdig/pull/527))\n- Various internal cleanup and small performance improvements ([PR #521](https://github.com/lunet-io/markdig/pull/521) [PR #524](https://github.com/lunet-io/markdig/pull/524) [PR #525](https://github.com/lunet-io/markdig/pull/525) [PR #529](https://github.com/lunet-io/markdig/pull/529) [PR #531](https://github.com/lunet-io/markdig/pull/531) [PR #532](https://github.com/lunet-io/markdig/pull/532))\n\n## 0.23.0 (16 Jan 2021)\n- Add depth limits to avoid pathological-case parsing times/StackOverflows (#500)\n- Breaking change: rename AutolineInlineParser to AutolinkInlineParser\n\n## 0.22.1 (2 Dec 2020)\n- Update logo for NuGet package\n\n## 0.22.0 (05 Oct 2020)\n- Fix Setext headings in block quotes.\n- Fix tel: treated as autolink ([PR #478](https://github.com/lunet-io/markdig/pull/478))\n- Make Inline.FirstParentOfType public ([PR #474](https://github.com/lunet-io/markdig/pull/474))\n- Fix `&` to be parsed as a punctuation while it was detected as a html entity in certain cases ([PR #471](https://github.com/lunet-io/markdig/pull/471))\n- Add ParentBlock property to ContainerInline ([PR #468](https://github.com/lunet-io/markdig/pull/468))\n\n## 0.21.1 (17 Aug 2020)\n- Fix Markdig.Signed on GitHub Actions\n\n## 0.21.0 (17 Aug 2020)\n- Restore support for .NET 4.5 (#)\n- Add IReadonlyList interface to ContainerBlock to unify and simplify enumeration (#425)\n- Fix relative uri detection to be cross-platform compatible (#430)\n- Escape URLs scheme (#431)\n- Fix media links (#435)\n- Fix parsing math blocks with no leading or trailing whitespace (#452)\n- Add support for autolink `tel:` uri (#453)\n- Fallback to non-punycode encoding for invalid IDN urls (#449)\n- Pipe Tables: Normalize using header column count (#455)\n- Expose IndentCount of FencedCodeBlock (#464)\n\n## 0.20.0 (18 Apr 2020)\n- Markdig is now compatible only with `NETStandard 2.0`, `NETStandard 2.1`, `NETCoreApp 2.1` and `NETCoreApp 3.1`.\n- Many performance improvements from [PR #416](https://github.com/lunet-io/markdig/pull/416) \n[PR #417](https://github.com/lunet-io/markdig/pull/417)\n[PR #418](https://github.com/lunet-io/markdig/pull/418) \n[PR #421](https://github.com/lunet-io/markdig/pull/421) \n[PR #422](https://github.com/lunet-io/markdig/pull/422) \n[PR #410](https://github.com/lunet-io/markdig/pull/410)\n\n## 0.18.3 (8 Mar 2020)\n- Publish NuGet Symbol packages\n\n## 0.18.2 (8 Mar 2020)\n- Optimize LineReader.ReadLine in [PR #393](https://github.com/lunet-io/markdig/pull/393)\n- Use HashSet<T> instead of Dictionary<TKey, TValue> in CharacterMap<T> in [PR #394](https://github.com/lunet-io/markdig/pull/394)\n- Use BitVector128 in CharacterMap<T> in [PR #396](https://github.com/lunet-io/markdig/pull/396)\n- Optimizations in StringLineGroup in [PR #399](https://github.com/lunet-io/markdig/pull/399)\n- Fixed a bug in HeadingRenderer in [PR #402](https://github.com/lunet-io/markdig/pull/402)\n- Fixes issue #303 in [PR #404](https://github.com/lunet-io/markdig/pull/404)\n- Make output of HtmlTableRenderer XML wellformed in [PR #406](https://github.com/lunet-io/markdig/pull/406)\n\n## 0.18.1 (21 Jan 2020)\n- Re-allow emojis and smileys customization, that was broken in [PR #308](https://github.com/lunet-io/markdig/pull/308) ([PR #386](https://github.com/lunet-io/markdig/pull/386))\n- Add `IHostProvider` for medialink customization (#337), support protocol-less url (#135) ([(PR #341)](https://github.com/lunet-io/markdig/pull/341))\n- Add missing Descendants<T> overload ([(PR #387)](https://github.com/lunet-io/markdig/pull/387))\n\n## 0.18.0 (24 Oct 2019)\n- Ignore backslashes in GFM AutoLinks ([(PR #357)](https://github.com/lunet-io/markdig/pull/357))\n- Fix SmartyPants quote matching ([(PR #360)](https://github.com/lunet-io/markdig/pull/360))\n- Fix generic attributes with values of length 1 ([(PR #361)](https://github.com/lunet-io/markdig/pull/361))\n- Fix link text balanced bracket matching ([(PR #375)](https://github.com/lunet-io/markdig/pull/375))\n- Improve overall performance and substantially reduce allocations ([(PR #377)](https://github.com/lunet-io/markdig/pull/377))\n\n## 0.17.1 (04 July 2019)\n- Fix regression when escaping HTML characters ([(PR #340)](https://github.com/lunet-io/markdig/pull/340))\n- Update Emoji Dictionary ([(PR #346)](https://github.com/lunet-io/markdig/pull/346))\n\n## 0.17.0 (10 May 2019)\n- Update to latest CommonMark specs 0.29 ([(PR #327)](https://github.com/lunet-io/markdig/pull/327))\n- Add `AutoLinkOptions` with `OpenInNewWindow`, `UseHttpsForWWWLinks` ([(PR #327)](https://github.com/lunet-io/markdig/pull/327))\n- Add `DisableHeadings` extension method to `MarkdownPipelineBuilder` ([(PR #327)](https://github.com/lunet-io/markdig/pull/327))\n- Drop support for netstandard1.1 and Portable Class Libraries ([(PR #319)](https://github.com/lunet-io/markdig/pull/319))\n- Allow non-ASCII characters in url domain names ([(PR #319)](https://github.com/lunet-io/markdig/pull/319))\n- Add better support for youtu.be link ([(PR #336)](https://github.com/lunet-io/markdig/pull/336))\n- Fix backsticks in Markdown.Normalize ([(PR #334)](https://github.com/lunet-io/markdig/pull/334))\n\n## 0.16.0 (25 Feb 2019)\n- Improve performance of emoji-abbreviation parser ([(PR #305)](https://github.com/lunet-io/markdig/pull/305))\n- Change output for math extension to use a rendering more compatible with existing Math JS libraries ([(PR #311)](https://github.com/lunet-io/markdig/pull/311))\n- Improve emphasis parser to allow to match more than 2 characters ([(PR #301)](https://github.com/lunet-io/markdig/pull/301))\n- Output attached attributes to a `<tr>` from a table row ([(PR #300)](https://github.com/lunet-io/markdig/pull/300))\n- Improve MarkdownObject.Descendants() search ([(PR #288)](https://github.com/lunet-io/markdig/pull/288))\n- Allow to pass a `MarkdownParserContext` ([(PR #285)](https://github.com/lunet-io/markdig/pull/285))\n\n## 0.15.7 (11 Jan 2019)\n- Add configurable leading count for ATX headers ([(PR #282)](https://github.com/lunet-io/markdig/pull/282))\n- Render XML well-formed boolean attribute ([(PR #281)](https://github.com/lunet-io/markdig/pull/281))\n\n## 0.15.6 (28 Dec 2018)\n- Fix potential hang when parsing LinkReferenceDefinition #278\n- Fix parsing of an invalid html entity (#277)\n- Fix IndexOutOfRangeException while parsing fenced code block with a single trailing space (#276)\n- Add tests for checking that ArgumentOutOfRangeException doesn't occur on invalid input md string (#275)\n\n## 0.15.5 (11 Dec 2018)\n- Empty image alt text for link reference definitions ([(PR #254)](https://github.com/lunet-io/markdig/pull/254))\n- Fix AutoLink Match links without slash after domain ([(PR #260)](https://github.com/lunet-io/markdig/pull/260))\n- Make AutoLink ValidPreviousCharacters configurable ([(PR #264)](https://github.com/lunet-io/markdig/pull/264))\n- Ensuring line breaks when renderer does not have html enabled ([(PR #270)](https://github.com/lunet-io/markdig/pull/270))\n\n## 0.15.4 (07 Oct 2018)\n- Add autolink domain GFM validation ([(PR #253)](https://github.com/lunet-io/markdig/pull/253))\n\n## 0.15.3 (15 Sep 2018)\n- Add support for RTL ([(PR #239)](https://github.com/lunet-io/markdig/pull/239))\n- Add MarkdownDocument.LineCount ([(PR #241)](https://github.com/lunet-io/markdig/pull/241))\n- Fix source positions for link definitions ([(PR #243)](https://github.com/lunet-io/markdig/pull/243))\n- Add ListItemBlock.Order ([(PR #244)](https://github.com/lunet-io/markdig/pull/244))\n- Add MarkdownDocument.LineStartIndexes ([(PR #247)](https://github.com/lunet-io/markdig/pull/247))\n\n## 0.15.2 (21 Aug 2018)\n- Fix footnotes parsing when they are defined after a container that has been closed in the meantime (#223)\n\n## 0.15.1 (10 July 2018)\n- Add support for `netstandard2.0`\n- Make AutoIdentifierExtension thread safe\n\n## 0.15.0 (4 Apr 2018)\n- Add `ConfigureNewLine` extension method to `MarkdownPipelineBuilder` ([(PR #214)](https://github.com/lunet-io/markdig/pull/214))\n- Add alternative `Use` extension method to `MarkdownPipelineBuilder` that receives an object instance ([(PR #213)](https://github.com/lunet-io/markdig/pull/213))\n- Added class attribute to media link extension ([(PR #203)](https://github.com/lunet-io/markdig/pull/203))\n- Optional link rewriter func for HtmlRenderer #143 ([(PR #201)](https://github.com/lunet-io/markdig/pull/201))\n- Upgrade NUnit3TestAdapter from 3.2 to 3.9 to address Resharper test runner problems ([(PR #199)](https://github.com/lunet-io/markdig/pull/199))\n- HTML renderer supports converting relative URLs on links and images to absolute #143 ([(PR #197)](https://github.com/lunet-io/markdig/pull/197))\n\n## 0.14.9 (15 Jan 2018)\n- AutoLinkParser should to remove mailto: in outputted text ([(PR #195)](https://github.com/lunet-io/markdig/pull/195))\n- Add support for `music.yandex.ru` and `ok.ru` for MediaLinks extension ([(PR #193)](https://github.com/lunet-io/markdig/pull/193))\n## 0.14.8 (05 Dec 2017)\n- Fix potential StackOverflow exception when processing deep nested `|` delimiters (#179)\n## 0.14.7 (25 Nov 2017)\n- Fix autolink attached attributes not being displayed properly (#175)\n## 0.14.6 (21 Nov 2017)\n- Fix yaml frontmatter issue when ending with a empty line (#170)\n## 0.14.5 (18 Nov 2017)\n- Fix changelog link from nuget package\n## 0.14.4 (18 Nov 2017)\n- Add changelog.md\n- Fix bug when a thematic break is inside a fenced code block inside a pending list (#164)\n- Add support for GFM autolinks (#165, #169)\n- Better handle YAML frontmatter in case the opening `---` is never actually closed (#160)\n- Fix link conflict between a link to an image definition and heading auto-identifiers (#159)\n## 0.14.3\n- Make EmojiExtension.EnableSmiley public\n## 0.14.2\n- Fix issue with emphasis preceded/followed by an HTML entity (#157)\n- Add support for link reference definitions for Normalize renderer (#155)   \n- Add option to disable smiley parsing in EmojiAndSmiley extension\n## 0.14.1\n- Fix crash in Markdown.Normalize to handle HtmlBlock correctly        \n- Add better handling of bullet character for lists in Markdown.Normalize\n## 0.14.0\n- Add Markdown.ToPlainText, Add option HtmlRenderer.EnableHtmlForBlock.\n- Add Markdown.Normalize, to allow to normalize a markdown document. Add NormalizeRenderer, to render a MarkdownDocument back to markdown.\n## 0.13.4\n- Add support for single table header row without a table body rows (#141)\n- ADd support for `nomnoml` diagrams\n## 0.13.3\n- Add support for Pandoc YAML frontmatter (#138)\n## 0.13.2\n- Add support for UAP10.0 (#137)\n## 0.13.1\n- Fix indenting issue after a double digit list block using a tab (#134)\n## 0.13.0\n- Update to latest CommonMark specs 0.28\n## 0.12.3\n - Fix issue with HTML blocks for heading h2,h3,h4,h5,h6 that were not correctly identified as HTML blocks as per CommonMark spec\n## 0.12.2\n - Fix issue with generic attributes used just before a pipe table (issue #121)\n## 0.12.1\n - Fix issue with media links extension when a URL to video is used, an unexpected closing `&lt;/iframe&gt;` was inserted (issue #119)\n## 0.12.0\n - Add new extension JiraLink support (thanks to @clarkd)\n - Fix issue in html attributes not parsing correctly properties (thanks to @meziantou)\n - Fix issues detected by an automatic static code analysis tool\n## 0.11.0\n - Fix issue with math extension and $$ block parsing not handling correctly beginning of a $$ as a inline math instead (issue #107)\n - Fix issue with custom attributes for emphasis\n - Add support for new special custom arrows emoji (`->` `<-` `<->` `<=` `=>` `<==>`)\n## 0.10.7\n - Fix issue when an url ends by a dot `.`\n## 0.10.6\n - Fix emphasis with HTML entities\n## 0.10.5\n - Several minor fixes\n## 0.10.4\n - Fix issue with autolinks\n - Normalize number of columns for tables\n## 0.10.3\n - Fix issue with pipetables shifting a cell to a new column (issue #73)\n## 0.10.2\n - Fix exception when trying to urlize an url with an unicode character outside the supported range by NormD (issue #75)\n## 0.10.1\n- Update to latest CommonMark specs\n- Fix source span for LinkReferenceDefinition\n## 0.10.0\n- Breaking change of the IMarkdownExtension to allow to receive the MarkdownPipeline for the renderers setup\n## 0.9.1\n- Fix regression bug with conflicts between autolink extension and html inline/regular links\n## 0.9.0\n- Add new Autolink extension\n## 0.8.5\n- Allow to force table column alignment to left\n## 0.8.4\n- Fix issue when calculating the span of an indented code block within a list. Make sure to include first whitespace on the line\n## 0.8.3\n- fix NullReferenceException with Gridtables extension when a single `+` is entered on a line\n## 0.8.2\n- fix potential cast exception with Abbreviation extension and empty literals\n## 0.8.1\n- new extension to disable URI escaping for non-US-ASCII characters to workaround a bug in Edge/IE\n- Fix an issue with abbreviations with left/right multiple non-punctuation/space characters\n## 0.8.0\n- Update to latest CommonMark specs\n- Fix empty literal\n- Add YAML frontmatter extension\n## 0.7.5\n- several bug fixes (pipe tables, disable HTML, special attributes, inline maths, abbreviations...)\n- add support for rowspan in grid tables\n## 0.7.4\n- Fix bug with strong emphasis starting at the beginning of a line\n## 0.7.3\n- Fix threading issue with pipeline\n## 0.7.2\n- Fix rendering of table colspan with non english locale\n- Fix grid table colspan parsing\n- Add nofollow extension for links\n## 0.7.1\n- Fix issue in smarty pants which could lead to an InvalidCastException\n- Update parsers to latest CommonMark specs\n## 0.7.0\n- Update to latest NETStandard.Library 1.6.0\n- Fix issue with digits in auto-identifier extension\n- Fix incorrect start of span calculated for code indented blocks\n## 0.6.2\n- Handle latest CommonMark specs for corner cases for emphasis (See https://talk.commonmark.org/t/emphasis-strong-emphasis-corner-cases/2123/1 )\n## 0.6.1:\n- Fix issue with autoidentifier extension overriding manual HTML attributes id on headings\n## 0.6.0\n- Fix conflicts between PipeTables and SmartyPants extensions\n- Add SelfPipeline extension\n"
        },
        {
          "name": "contributing.md",
          "type": "blob",
          "size": 1.71484375,
          "content": "# How to Contribute\n\nThanks for your interest in contributing to `Markdig`! Here are a few general guidelines on contributing and\nreporting bugs that we ask you to review. Following these guidelines helps to communicate that you respect the time of\nthe contributors managing and developing this open source project.\n\n## Reporting Issues\n\nBefore reporting a new issue, please ensure that the issue was not already reported or fixed by searching through our\n[issues list](https://github.com/xoofx/markdig/issues).\n\nWhen creating a new issue, please be sure to include a **title and clear description**, as much relevant information as\npossible, and, if possible, a test case.\n\n## Sending Pull Requests\n\nBefore sending a new pull request, take a look at existing pull requests and issues to see if the proposed change or fix\nhas been discussed in the past, or if the change was already implemented but not yet released.\n\nWe expect new pull requests to include tests for any affected behavior, and, as we follow semantic versioning, we may\nreserve breaking changes until the next major version release.\n\n## Other Ways to Contribute\n\nWe welcome anyone that wants to contribute to `Markdig` to triage and reply to open issues to help troubleshoot\nand fix existing bugs. Here is what you can do:\n\n- Help ensure that existing issues follows the recommendations from the _[Reporting Issues](#reporting-issues)_ section,\n  providing feedback to the issue's author on what might be missing.\n  instructions and code samples.\n- Review existing pull requests, and testing patches against real existing applications that use `Markdig`.\n- Write a test, or add a missing test case to an existing test.\n\nThanks again for your interest on contributing to `Markdig`!\n\n:heart:\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 1.287109375,
          "content": "Copyright (c) 2018-2019, Alexandre Mutel\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification\n, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this \n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, \n   this list of conditions and the following disclaimer in the documentation \n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 12.4833984375,
          "content": "# Markdig [![ci](https://github.com/xoofx/markdig/actions/workflows/ci.yml/badge.svg)](https://github.com/xoofx/markdig/actions/workflows/ci.yml) [![Coverage Status](https://coveralls.io/repos/github/xoofx/markdig/badge.svg?branch=master)](https://coveralls.io/github/xoofx/markdig?branch=master) [![NuGet](https://img.shields.io/nuget/v/Markdig.svg)](https://www.nuget.org/packages/Markdig/) [![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=FRGHXBTP442JL)\n\n<img align=\"right\" width=\"160px\" height=\"160px\" src=\"img/markdig.png\">\n\nMarkdig is a fast, powerful, [CommonMark](http://commonmark.org/) compliant, extensible Markdown processor for .NET.\n\n> NOTE: The repository is under construction. There will be a dedicated website and proper documentation at some point!\n\nYou can **try Markdig online** and compare it to other implementations on [babelmark3](https://babelmark.github.io/?text=Hello+**Markdig**!)\n\n## Features\n\n- **Very fast parser and html renderer** (no-regexp), very lightweight in terms of GC pressure. See benchmarks\n- **Abstract Syntax Tree** with precise source code location for syntax tree, useful when building a Markdown editor.\n  - Checkout [Markdown Editor v2 for Visual Studio 2022](https://marketplace.visualstudio.com/items?itemName=MadsKristensen.MarkdownEditor2) powered by Markdig!\n- Converter to **HTML**\n- Passing more than **600+ tests** from the latest [CommonMark specs (0.30)](http://spec.commonmark.org/)\n- Includes all the core elements of CommonMark:\n  - including **GFM fenced code blocks**.  \n- **Extensible** architecture\n  - Even the core Markdown/CommonMark parsing is pluggable, so it allows to disable builtin Markdown/Commonmark parsing (e.g [Disable HTML parsing](https://github.com/lunet-io/markdig/blob/7964bd0160d4c18e4155127a4c863d61ebd8944a/src/Markdig/MarkdownExtensions.cs#L306)) or change behaviour (e.g change matching `#` of a headers with `@`)   \n- [**Roundtrip support**](./src/Markdig/Roundtrip.md): Parses trivia (whitespace, newlines and other characters) to support lossless parse ⭢ render roundtrip. This enables changing markdown documents without introducing undesired trivia changes.\n- Built-in with **20+ extensions**, including:\n  - 2 kind of tables:\n    - [**Pipe tables**](src/Markdig.Tests/Specs/PipeTableSpecs.md) (inspired from GitHub tables and [PanDoc - Pipe Tables](http://pandoc.org/README.html#extension-pipe_tables))\n    - [**Grid tables**](src/Markdig.Tests/Specs/GridTableSpecs.md) (inspired from [Pandoc - Grid Tables](http://pandoc.org/README.html#extension-grid_tables)) \n  - [**Extra emphasis**](src/Markdig.Tests/Specs/EmphasisExtraSpecs.md) (inspired from [Pandoc - Emphasis](http://pandoc.org/README.html#strikeout) and [Markdown-it](https://markdown-it.github.io/)) \n    - strike through `~~`,\n    - Subscript `~`\n    - Superscript `^` \n    - Inserted `++`\n    - Marked `==`\n  - [**Special attributes**](src/Markdig.Tests/Specs/GenericAttributesSpecs.md) or attached HTML attributes (inspired from [PHP Markdown Extra - Special Attributes](https://michelf.ca/projects/php-markdown/extra/#spe-attr))\n  - [**Definition lists**](src/Markdig.Tests/Specs/DefinitionListSpecs.md) (inspired from [PHP Markdown Extra - Definitions Lists](https://michelf.ca/projects/php-markdown/extra/#def-list))\n  - [**Footnotes**](src/Markdig.Tests/Specs/FootnotesSpecs.md) (inspired from [PHP Markdown Extra - Footnotes](https://michelf.ca/projects/php-markdown/extra/#footnotes))\n  - [**Auto-identifiers**](src/Markdig.Tests/Specs/AutoIdentifierSpecs.md) for headings (similar to [Pandoc - Auto Identifiers](http://pandoc.org/README.html#extension-auto_identifiers))\n  - [**Auto-links**](src/Markdig.Tests/Specs/AutoLinks.md) generates links if a text starts with `http://` or `https://` or `ftp://` or `mailto:` or `www.xxx.yyy`\n  - [**Task Lists**](src/Markdig.Tests/Specs/TaskListSpecs.md)  inspired from [Github Task lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments).\n  - [**Extra bullet lists**](src/Markdig.Tests/Specs/ListExtraSpecs.md), supporting alpha bullet `a.` `b.` and roman bullet (`i`, `ii`...etc.)\n  - [**Media support**](src/Markdig.Tests/Specs/MediaSpecs.md) for media url (youtube, vimeo, mp4...etc.) (inspired from this [CommonMark discussion](https://talk.commonmark.org/t/embedded-audio-and-video/441))\n  - [**Abbreviations**](src/Markdig.Tests/Specs/AbbreviationSpecs.md) (inspired from [PHP Markdown Extra - Abbreviations](https://michelf.ca/projects/php-markdown/extra/#abbr))\n  - [**Citation**](src/Markdig.Tests/Specs/FigureFooterAndCiteSpecs.md) text by enclosing `\"\"...\"\"` (inspired by this [CommonMark discussion ](https://talk.commonmark.org/t/referencing-creative-works-with-cite/892))\n  - [**Custom containers**](src/Markdig.Tests/Specs/CustomContainerSpecs.md) similar to fenced code block `:::` for generating a proper `<div>...</div>` instead (inspired by this [CommonMark discussion ](https://talk.commonmark.org/t/custom-container-for-block-and-inline/2051))\n  - [**Figures**](src/Markdig.Tests/Specs/FigureFooterAndCiteSpecs.md) (inspired from this [CommonMark discussion](https://talk.commonmark.org/t/image-tag-should-expand-to-figure-when-used-with-title/265/5))\n  - [**Footers**](src/Markdig.Tests/Specs/FigureFooterAndCiteSpecs.md) (inspired from this [CommonMark discussion](https://talk.commonmark.org/t/syntax-for-footer/2070))\n  - [**Mathematics**](src/Markdig.Tests/Specs/MathSpecs.md)/Latex extension by enclosing `$$` for block and `$` for inline math (inspired from this [CommonMark discussion](https://talk.commonmark.org/t/mathematics-extension/457/31))\n  - [**Soft lines as hard lines**](src/Markdig.Tests/Specs/HardlineBreakSpecs.md)\n  - [**Emoji**](src/Markdig.Tests/Specs/EmojiSpecs.md) support (inspired from [Markdown-it](https://markdown-it.github.io/))\n  - [**SmartyPants**](src/Markdig.Tests/Specs/SmartyPantsSpecs.md) (inspired from [Daring Fireball - SmartyPants](https://daringfireball.net/projects/smartypants/))\n  - [**Bootstrap**](src/Markdig.Tests/Specs/BootstrapSpecs.md) class (to output bootstrap class)\n  - [**Diagrams**](src/Markdig.Tests/Specs/DiagramsSpecs.md) extension whenever a fenced code block contains a special keyword, it will be converted to a div block with the content as-is (currently, supports [`mermaid`](https://mermaid.js.org) and [`nomnoml`](https://github.com/skanaar/nomnoml) diagrams)\n  - [**YAML Front Matter**](src/Markdig.Tests/Specs/YamlSpecs.md) to parse without evaluating the front matter and to discard it from the HTML output (typically used for previewing without the front matter in MarkdownEditor)\n  - [**JIRA links**](src/Markdig.Tests/Specs/JiraLinks.md) to automatically generate links for JIRA project references (Thanks to @clarkd: https://github.com/clarkd/MarkdigJiraLinker)\n- Starting with Markdig version `0.20.0+`, Markdig is compatible only with `NETStandard 2.0`, `NETStandard 2.1`, `NETCoreApp 2.1` and `NETCoreApp 3.1`.\n\nIf you are looking for support for an old .NET Framework 3.5 or 4.0, you can download Markdig `0.18.3`.\n\t\n### Third Party Extensions\n\n- [**WPF/XAML Markdown Renderer**: `markdig.wpf`](https://github.com/Kryptos-FR/markdig.wpf)\n- [**WPF/XAML Markdown Renderer**: `Neo.Markdig.Xaml`](https://github.com/neolithos/NeoMarkdigXaml)\n- [**Syntax highlighting**: `Markdig.SyntaxHighlighting`](https://github.com/RichardSlater/Markdig.SyntaxHighlighting)\n- [**Syntax highlighting using ColorCode-Universal**: `Markdown.ColorCode`](https://github.com/wbaldoumas/markdown-colorcode)\n- [**Syntax highlighting using Prism.js**: `WebStoating.Markdig.Prism`](https://github.com/ilich/Markdig.Prism)\n- [**Embedded C# scripting**: `Markdig.Extensions.ScriptCs`](https://github.com/macaba/Markdig.Extensions.ScriptCs)\n\n## Documentation\n\n> The repository is under construction. There will be a dedicated website and proper documentation at some point!\n\nWhile there is not yet a dedicated documentation, you can find from the [specs documentation](src/Markdig.Tests/Specs/readme.md) how to use these extensions.\n\nIn the meantime, you can have a \"behind the scene\" article about Markdig in my blog post [\"Implementing a Markdown Engine for .NET\"](http://xoofx.github.io/blog/2016/06/13/implementing-a-markdown-processor-for-dotnet/)\n\n## Download\n\nMarkdig is available as a NuGet package: [![NuGet](https://img.shields.io/nuget/v/Markdig.svg)](https://www.nuget.org/packages/Markdig/)\n\nAlso [Markdig.Signed](https://www.nuget.org/packages/Markdig.Signed/) NuGet package provides signed assemblies.\n\n## Usage\n\nThe main entry point for the API is the `Markdig.Markdown` class:\n\nBy default, without any options, Markdig is using the plain CommonMark parser:\n\n```csharp\nvar result = Markdown.ToHtml(\"This is a text with some *emphasis*\");\nConsole.WriteLine(result);   // prints: <p>This is a text with some <em>emphasis</em></p>\n```\n\nIn order to activate most of all advanced extensions (except Emoji, SoftLine as HardLine, Bootstrap, YAML Front Matter, JiraLinks and SmartyPants)\n\n```csharp\n// Configure the pipeline with all advanced extensions active\nvar pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();\nvar result = Markdown.ToHtml(\"This is a text with some *emphasis*\", pipeline);\n```\n\n[Try it online!](https://dotnetfiddle.net/GoZXyI)\n\nYou can have a look at the [MarkdownExtensions](https://github.com/lunet-io/markdig/blob/master/src/Markdig/MarkdownExtensions.cs) that describes all actionable extensions (by modifying the MarkdownPipeline)\n\n## Contributing\n\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated. For detailed contributing guidelines, please see [contributing.md](contributing.md).\n\n## Build\n\nIn order to build Markdig, you need to install [.NET 6.0](https://dotnet.microsoft.com/en-us/download)\n\n## License\n\nThis software is released under the [BSD-Clause 2 license](https://github.com/lunet-io/markdig/blob/master/license.txt).\n\n\n## Benchmarking\n\nThe latest benchmark was collected on April 23 2022, against the following implementations:\n\n- [Markdig](https://github.com/lunet-io/markdig) (version: 0.30.2): itself\n- [cmark](https://github.com/commonmark/cmark) (version: 0.30.2): Reference C implementation of CommonMark, no support for extensions\n- [CommonMark.NET(master)](https://github.com/Knagis/CommonMark.NET) (version: 0.15.1): CommonMark implementation for .NET, no support for extensions, port of cmark, deprecated.\n- [MarkdownSharp](https://github.com/Kiri-rin/markdownsharp) (version: 2.0.5): Open source C# implementation of Markdown processor, as featured previously on Stack Overflow, regexp based.\n\n```\n// * Summary *\n\nBenchmarkDotNet=v0.13.1, OS=Windows 10.0.22000\nAMD Ryzen 9 5950X, 1 CPU, 32 logical and 16 physical cores\n.NET SDK=6.0.202\n  [Host]     : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT\n  DefaultJob : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT\n\n\n|            Method |       Mean |     Error |    StdDev |\n|------------------ |-----------:|----------:|----------:|\n|           markdig |   1.979 ms | 0.0221 ms | 0.0185 ms |\n|             cmark |   2.571 ms | 0.0081 ms | 0.0076 ms |\n|    CommonMark.NET |   2.016 ms | 0.0169 ms | 0.0158 ms |\n|     MarkdownSharp | 221.455 ms | 1.4442 ms | 1.3509 ms |\n```\n\n- Markdig is roughly **x100 times faster than MarkdownSharp**\n- **20% faster than the reference cmark C implementation** \n\n## Sponsors\n\nSupports this project with a monthly donation and help me continue improving it. \\[[Become a sponsor](https://github.com/sponsors/xoofx)\\]\n\n[<img src=\"https://github.com/lilith.png?size=200\" width=\"64px;\" style=\"border-radius: 50%\" alt=\"lilith\"/>](https://github.com/lilith) Lilith River, author of [Imageflow Server, an easy on-demand\nimage editing, optimization, and delivery server](https://github.com/imazen/imageflow-server)\n\n## Credits\n\nThanks to the fantastic work done by [John Mac Farlane](http://johnmacfarlane.net/) for the CommonMark specs and all the people involved in making Markdown a better standard!\n\nThis project would not have been possible without this huge foundation.\n\nThanks also to the project [BenchmarkDotNet](https://github.com/PerfDotNet/BenchmarkDotNet) that makes benchmarking so easy to setup!\n\nSome decoding part (e.g HTML [EntityHelper.cs](https://github.com/lunet-io/markdig/blob/master/src/Markdig/Helpers/EntityHelper.cs)) have been re-used from [CommonMark.NET](https://github.com/Knagis/CommonMark.NET)\n\nThanks to the work done by @clarkd on the JIRA Link extension (https://github.com/clarkd/MarkdigJiraLinker), now included with this project!\n## Author\n\nAlexandre MUTEL aka [xoofx](http://xoofx.github.io)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}