{
  "metadata": {
    "timestamp": 1736710801332,
    "page": 281,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "skydevil88/XboxDownload",
      "stars": 2875,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.0771484375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Oo]ut/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd"
        },
        {
          "name": "IP",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3818359375,
          "content": "# Xbox下载助手\n[English](https://github.com/skydevil88/XboxDownload-EN)\n\n[OpenWrt 安装 Lighttpd 或者 Nginx，使用URL重写跳转国内CDN服务器加速下载](./README_OpenWrt.md)\n\n获取微软商店应用游戏下载链接\n---\n![图0](doc/pm00.gif)\n网页版商店：https://xbox.skydevil.xyz\n\n使用PC下载Xbox主机游戏：https://www.bilibili.com/video/BV1CN4y197Js\n\n一键解决EA下载速度慢：https://www.bilibili.com/video/BV1KC4y1i7ZK\n\n使用说明\n---\nXbox主机是根据使用者IP分配游戏下载域名，国内IP使用assets1.xboxlive.cn，有国内CDN服务器，下载速度快（冷门游戏没有缓存除外）。国外IP使用assets1.xboxlive.com，没有国内CDN服务器，需要连接到国外，下载速度慢。国内用户使用了加速器或者代理软件，会被微软判断为国外用户并被分配使用com下载域名。\n\n\n本软件提速原理，把 Xbox 下载链接 assets1.xboxlive.com 跳转到 assets1.xboxlive.cn 上，锁定在国内服务器下载，解决使用国际域名下载速度过慢问题，并且能同时支持 PC微软商店、PS、NS、EA Desktop & Origi、战网国际服、Epic游戏下载加速。\n\n下载链接\n```\n百度网盘: https://pan.baidu.com/s/1ZqBvWjpGYZXBL8WaitMLCQ?pwd=q3cp 提取码：q3cp\n源码：https://github.com/skydevil88/XboxDownload\n```\n![图1](doc/pm01.png)\n\n1.使用设置（Nintendo Switch、PlayStation 使用方法同理）\n---\nXbox正在下载，请先暂停，完成设置后再继续。\n\n一、启动下载助手，选中测速-在线导入IP，找你家附近IP测试速度（可以使用查找功能），右键使用指定IP。\n\n![图2](doc/pm02.png)\n\n二、本机IP选择跟Xbox同一IP段，一般是192.168.x.x，我这里是192.168.50.5，请自行判断选择。确认勾选 1.启用DNS服务，2.启用HTTP服务 这两项，然后点击 开始监听。\n\n![图3](doc/pm03.png)\n\n\n三、打开XBOX 设置->常规->网络设置->高级设置->DNS 设置->手动 把 主DNS 设为PC电脑IP（Xbox下载助手左下角 本机IP），辅助DNS留空。(PC微软商店此步骤省略，勾上加速微软商店)\n\n![图4](doc/pm04.png)\n\n注意，如果你的Xbox正在使用IPv6联网， 需要在路由器中关闭IPv6功能。\n\n![图5](doc/pm05.png)\n\n现在可以开始愉快地下载了。\n\n下载完成后记得把Xbox DNS改回自动获取，否则Xbox下载助手关闭后没法联网。\n\n\n其它问题：\n\n一、\t没有日志，第一种情况本机IP没有选择正确，请重新选择；第二种情况被电脑网络防火墙阻止，请关闭电脑网络防火墙，还有各种电脑管家之类软件。\n\n二、\t检测端口被占用，通常按是强制结束就能正常启动，不能结束可以用命令“netstat -an”查看占用端口程序，如何停止请自行上网搜索。\n\n三、\t下载没有HTTP 301日志，Xbox直接使用了cn域名下载，省去HTTP服务跳转这一步骤，所以就没有HTTP日志。\n\n四、\tXbox通过电脑WiFi热点连接网络需要以下设置，1、取消启用DNS 服务，2、勾选加速微软商店(PC)，3、本机IP选择热点IP。\n\nXbox主机DNS可以不用设置，直接自动获取。\n\n![图6](doc/pm06.png)\n\n\n2.PC下载回传（PC XGP、PlayStatio、EA同样适用）\n---\n有两种方法回传Xbox，首先使用下载助手监听到游戏下载地址（勾选显示下载链接），暂停下载，右键复制下载地址，然后使用PC下载工具把文件下载回来。\n\nPC XGP游戏也可以用此方法监听到下载地址，然后使用下载工具下载，完成后在 工具->离线安装微软商店应用软件 中安装。\n\n![图7](doc/pm07.png)\n\n方法一：本地上传\n\n把本地上传文件夹指向下载文件夹位置，勾选本地上传后启动监听，Xbox重新下载，就可以直接从PC上传Xbox。\n\n![图8](doc/pm08.png)\n\n方法二：硬盘导入\n\nXbox外置移动硬盘接到PC上，然后在下载助手转换成PC模式，可能需要关闭杀毒软件，接着把下载游戏文件复制进去重命名为Content ID（也可以直接把游戏下载到移动硬盘根目录，省去复制这一步），完成后转换回Xbox模式。把刚才Xbox暂停下载的游戏删除，外置移动硬盘接回Xbox，开机联网（必须联网），设置-系统-存储，选择移动硬盘，把游戏移动到内部硬盘。注意不要在移动硬盘中启动游戏，否则游戏会重新下载，应用不支持硬盘方法导入。 \n\n重命名Content ID方法：硬盘-文件信息-本地文件-浏览，选择文件，然后点击重命名本地文件。\n\n![图9](doc/pm09.png)\n\n![图10](doc/pm10.png)\n\n![图11](doc/pm11.png)\n\n\n3.不想开电脑下载\n---\nOpenWrt 安装 Lighttpd 或者 Nginx，使用URL重写跳转国内CDN服务器加速下载\nhttps://github.com/skydevil88/XboxDownload/blob/master/README_OpenWrt.md\n\n\n其它路由器如果支持改Hosts，可以分别把 com 和cn 下载域名测速后找出最快IP写进Hosts 中，不管Xbox使用那个域名下载都能加速。\n\nCN域名（可以使用Akamai IP，对于CDN没有缓存的老游戏、冷门游戏可能效果更佳）\n```\n#第一组，主下载域名（PC主机共用）\naddress=/assets1.xboxlive.cn/cn IP 或者 Akamai IP \naddress=/assets2.xboxlive.cn/cn IP 或者 Akamai IP \naddress=/d1.xboxlive.cn/cn IP 或者 Akamai IP \naddress=/d2.xboxlive.cn/cn IP 或者 Akamai IP \n\n#第二组，XboxOne部分老游戏下载域名，PC、主机新游戏都不再使用此域名。\naddress=/dlassets.xboxlive.cn/cn IP 或者 Akamai IP \naddress=/dlassets2.xboxlive.cn/cn IP 或者 Akamai IP \n\n#第三组，应用和部分PC游戏使用此域名下载\n#Xbox APP提示“此游戏不支持安装到特定文件夹。它将与其他Windows应用一起安装。”, 这些都是使用应用下载域名\naddress=/dl.delivery.mp.microsoft.com/cn IP 或者 Akamai IP \naddress=/tlu.dl.delivery.mp.microsoft.com /cn IP 或者 Akamai IP\n```\nCOM域名（不能使用cn IP）\n```\naddress=/assets1.xboxlive.com/Akamai IP\naddress=/assets2.xboxlive.com/Akamai IP\naddress=/xvcf1.xboxlive.com/Akamai IP\naddress=/xvcf2.xboxlive.com/Akamai IP\naddress=/d1.xboxlive.com/Akamai IP\naddress=/d2.xboxlive.com/Akamai IP\naddress=/dlassets.xboxlive.com/Akamai IP\naddress=/dlassets2.xboxlive.com/Akamai IP\n```\n注意：不少人直接把 com 域名指定到 cn ip、或者使用 CNAME 解释到 cn IP，这两种方法都是错误的，服务器会返回403错误。 com域名不能使用cn IP，反过来cn域名可以使用Akamai IP.\n\n关于\n---\n![About](doc/About.png)\n"
        },
        {
          "name": "README_OpenWrt.md",
          "type": "blob",
          "size": 7.4365234375,
          "content": "# OpenWrt 安装 Lighttpd、Nginx、Caddy，使用URL重写跳转国内CDN服务器加速下载\n\n注意：不少人直接把 com 域名指定到 cn ip、或者使用 CNAME 解释到 cn IP，这两种方法都是错误的，服务器会返回403错误。\ncom域名不能使用cn IP，反过来cn域名可以使用部分com IP(Akamai). \n\n提速原理请参考PC [Xbox下载助手](https://github.com/skydevil88/XboxDownload \"Xbox下载助手\")，同时支持PC微软商店加速。\n支持Docker路由器(小米、TP-LINK等部分型号)、NAS也可以通过Docker使用macvlan创建独立ip安装Nginx实现跳转国内下载。\n\nXbox使用此方法需要关闭路由器IPv6功能，如果有其它设备需要用到IPv6，可以在 网络->防火墙->自定义规则 中添加以下两条规则屏蔽掉Xbox的IPv6地址。（XBOX_MAC替换成Xbox Mac地址，地址之间要用“:”号分隔，不能用“-”，用有线网络就两个都填有线mac, 用无线网络就两个都填无线mac）\n```bash\nip6tables -I INPUT -p icmpv6 -m mac --mac-source XBOX_MAC -j DROP \nip6tables -I INPUT -p udp -m mac --mac-source XBOX_MAC --dport 547 -j DROP\n```\n\n注意：以下教程里面的 192.168.1.1 替换为您的Openwrt路由器的ip地址\n\n## 方法一：Lighttpd \nB站视频教程：https://www.bilibili.com/video/BV1wP4y1G7zf\n\n1. 修改uhttpd端口（修改后进入OpenWrt管理页面要用 192.168.1.1:8080，修改端口目的是要让出80端口给Lighttpd或者Nginx使用）\n```bash\nvi /etc/config/uhttpd\n#按 i 进入编辑模式，\nlist listen_http '0.0.0.0:80' --> list listen_http '0.0.0.0:8080\nlist listen_http '[::]:80' --> list listen_http '[::]:8080'\n#按ESC键 跳到命令模式，然后输入 :wq 保存文件并退出vi, 重启uhttpd\n/etc/init.d/uhttpd restart\n```\n![图1](doc/Op1.png)\n\n2.安装 lighttpd\n```bash\nopkg update\nopkg install lighttpd lighttpd-mod-redirect lighttpd-mod-proxy\n```\n\n3.配置 lighttpd\n```bash\nvi /etc/lighttpd/lighttpd.conf\n#按 i 进入编辑模式，然后复制下面代码，Shift+Inset 粘贴，按ESC键 跳到命令模式，然后输入 :wq 保存文件并退出vi\n\nserver.modules = ( \"mod_redirect\" )\n$HTTP[\"host\"] =~ \"^(assets1|assets2|d1|d2|xvcf1|xvcf2)\\.xboxlive\\.com$\" {\n\turl.redirect = ( \"(.*)\" => \"http://assets1.xboxlive.cn$1\" )\n}\n$HTTP[\"host\"] =~ \"^(dlassets|dlassets2)\\.xboxlive\\.com$\" {\n\turl.redirect = ( \"(.*)\" => \"http://dlassets.xboxlive.cn$1\" )\n}\n#其它访问转发到8080端口，进入管理页面不需要加端口(可选)\nserver.modules +=( \"mod_proxy\")\nproxy.server = ( \"\" => (( \"host\" => \"127.0.0.1\", \"port\" => 8080\t)))\n\n#启动lighttpd服务以及设置其开机自启\n/etc/init.d/lighttpd start\n/etc/init.d/lighttpd enable\n#重启lighttpd\n/etc/init.d/lighttpd restart\n```\n![图2](doc/Op2.png)\n\n4.打开OpenWrt管理页 网络-》主机名 ，添加 主机名：\n```bash\nxvcf1.xboxlive.com\t\t\t192.168.1.1\nxvcf2.xboxlive.com\t\t\t192.168.1.1\nassets1.xboxlive.com\t\t\t192.168.1.1\nassets2.xboxlive.com\t\t\t192.168.1.1\nd1.xboxlive.com\t\t\t\t192.168.1.1\nd2.xboxlive.com\t\t\t\t192.168.1.1\ndlassets.xboxlive.com\t\t\t192.168.1.1\ndlassets2.xboxlive.com\t\t\t192.168.1.1\n\n#xxx.xxx.xxx.xxx 可以使用Xbox下载助手测速找出最快IP，分三组IP，目前国内IP大部分不通用，需要分别测速(Akamai IP可以通用)\n#第一组，主下载域名（PC主机共用）\nassets1.xboxlive.cn\t\t\txxx.xxx.xxx.xxx\nassets2.xboxlive.cn\t\t\txxx.xxx.xxx.xxx\nd1.xboxlive.cn\t\t\t\txxx.xxx.xxx.xxx\nd2.xboxlive.cn\t\t\t\txxx.xxx.xxx.xxx\n\n#第二组，XboxOne部分老游戏下载域名，PC、主机新游戏都不再使用此域名。\ndlassets.xboxlive.cn\t\t\txxx.xxx.xxx.xxx\ndlassets2.xboxlive.cn\t\t\txxx.xxx.xxx.xxx\n\n#第三组，应用和部分PC游戏使用此域名下载\ndl.delivery.mp.microsoft.com\t\txxx.xxx.xxx.xxx\ntlu.dl.delivery.mp.microsoft.com\txxx.xxx.xxx.xxx\n```\n\n![图2](doc/Op3.png)\n![图3](doc/pm02.png)\n\n\n最后在浏览器中输入(电脑需要关闭IPv6，建议在 InPrivate 窗口中打开链接，避免浏览器缓存) http://xvcf1.xboxlive.com/Z/routing/extraextralarge.txt, 看到地址变成 http://assets1.xboxlive.cn/Z/routing/extraextralarge.txt 表示成功跳转到cn，接着打开你的Xbox又能愉快地下载。\n\n\n\n\n\n## 方法二：Nginx\t\n注：部分使用了Nginx替换Uhttpd固件可以省略步骤 1、2 \n1. 修改uhttpd端口, 这次用管理页面直接修改(系统->Web管理)，端口改为8080保存重启。\n没有此页面可以参考上面Lighttpd修改uhttpd端口\n![图2.1](doc/Op2.1.png)\n\n2. 重启后选择 系统->软件包，刷新列表，过滤器中输入 nginx 查找，找到后安装 nginx。\n![图2.2](doc/Op2.2.png)\n![图2.3](doc/Op2.3.png)\n\n3. SSH连进路由器\n```bash\nvi /etc/nginx/conf.d/xbox.conf\n#按 i 进入编辑模式，然后复制下面代码，Shift+Inset 粘贴，按ESC键 跳到命令模式，然后输入 :wq 保存文件并退出vi\n#启动报错可以增加以下一句，server_names_hash_bucket_size 64; 不够就按32倍数往上加(128、256)\n\nserver_names_hash_bucket_size 64;\nserver {\n        listen 80;\n        server_name assets1.xboxlive.com assets2.xboxlive.com d1.xboxlive.com d2.xboxlive.com xvcf1.xboxlive.com xvcf2.xboxlive.com dlassets.xboxlive.com dlassets2.xboxlive.com;\n        if ($host !~* \"^dlassets2?\\.xboxlive\\.com$\") {\n                return 302 http://assets1.xboxlive.cn$request_uri;\n        }\n        if ($host ~* \"^dlassets2?\\.xboxlive\\.com$\") {\n                return 302 http://dlassets.xboxlive.cn$request_uri;\n        }\n}\n\n#启动 nginx 服务以及设置其开机自启。\n/etc/init.d/nginx start\n/etc/init.d/nginx enable\n#重启nginx\n/etc/init.d/nginx restart\n```\n![图2.4](doc/Op2.4.png)\n![图2.5](doc/Op2.5.png)\n\n4.打开OpenWrt管理页(http://192.168.1.1:8080) 网络-》主机名 ，添加 主机名：\n```bash\nxvcf1.xboxlive.com\t\t\t192.168.1.1\nxvcf2.xboxlive.com\t\t\t192.168.1.1\nassets1.xboxlive.com\t\t\t192.168.1.1\nassets2.xboxlive.com\t\t\t192.168.1.1\nd1.xboxlive.com\t\t\t\t192.168.1.1\nd2.xboxlive.com\t\t\t\t192.168.1.1\ndlassets.xboxlive.com\t\t\t192.168.1.1\ndlassets2.xboxlive.com\t\t\t192.168.1.1\n\n#xxx.xxx.xxx.xxx 可以使用Xbox下载助手测速找出最快IP，分 三组IP，目前国内IP大部分不通用，需要分别测速(Akamai IP可以通用)\n#第一组，主下载域名（PC主机共用）\nassets1.xboxlive.cn\t\t\txxx.xxx.xxx.xxx\nassets2.xboxlive.cn\t\t\txxx.xxx.xxx.xxx\nd1.xboxlive.cn\t\t\t\txxx.xxx.xxx.xxx\nd2.xboxlive.cn\t\t\t\txxx.xxx.xxx.xxx\n\n#第二组，XboxOne部分老游戏下载域名，PC、主机新游戏都不再使用此域名。\ndlassets.xboxlive.cn\t\t\txxx.xxx.xxx.xxx\ndlassets2.xboxlive.cn\t\t\txxx.xxx.xxx.xxx\n\n#第二组，应用和部分PC游戏使用此域名下载\ndl.delivery.mp.microsoft.com\t\txxx.xxx.xxx.xxx\ntlu.dl.delivery.mp.microsoft.com\txxx.xxx.xxx.xxx\n```\n\n![图2](doc/Op3.png)\n![图3](doc/pm02.png)\n\n\n最后在浏览器中输入(电脑需要关闭IPv6，建议在 InPrivate 窗口中打开链接，避免浏览器缓存) http://xvcf1.xboxlive.com/Z/routing/extraextralarge.txt, 看到地址变成 http://assets1.xboxlive.cn/Z/routing/extraextralarge.txt 表示成功跳转到cn，接着打开你的Xbox又能愉快地下载。\n\n## 方法三：Caddy\n\nCaddyfile:\n\n```\nhttp://assets1.xboxlive.com, http://assets1.xboxlive.com, http://d1.xboxlive.com, http://d2.xboxlive.com, http://xvcf1.xboxlive.com, http://xvcf2.xboxlive.com {\n        redir http://assets1.xboxlive.cn{uri}\n}\nhttp://dlassets.xboxlive.com, http://dlassets2.xboxlive.com {\n        redir http://dlassets.xboxlive.cn{uri}\n}\n```\n\n与方法一、二相同，在路由器中把 *.xboxlive.com 域名劫持到 Caddy 服务器 IP.\n\n## 其它：IIS\t\nhttps://tieba.baidu.com/p/7151558145\n\n\n"
        },
        {
          "name": "XboxDownload.sln",
          "type": "blob",
          "size": 1.0908203125,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.3.32929.385\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"XboxDownload\", \"XboxDownload\\XboxDownload.csproj\", \"{30A5B67E-9E5A-4A4E-92F6-3091A36D6E86}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{30A5B67E-9E5A-4A4E-92F6-3091A36D6E86}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{30A5B67E-9E5A-4A4E-92F6-3091A36D6E86}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{30A5B67E-9E5A-4A4E-92F6-3091A36D6E86}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{30A5B67E-9E5A-4A4E-92F6-3091A36D6E86}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {C53F76EA-D34E-42BA-A35B-0FCAC1CCCADF}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "XboxDownload",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}