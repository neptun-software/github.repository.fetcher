{
  "metadata": {
    "timestamp": 1736711126156,
    "page": 968,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nkc3g4/wtg-assistant",
      "stars": 1318,
      "defaultBranch": "mainline",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.7431640625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\n[Xx]64/\n[Xx]86/\n[Bb]uild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# TODO: Un-comment the next line if you do not want to checkin \n# your web deploy settings because they may include unencrypted\n# passwords\n#*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Microsoft Azure ApplicationInsights config file\nApplicationInsights.config\n\n# Windows Store app package directory\nAppPackages/\nBundleArtifacts/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# LightSwitch generated files\nGeneratedArtifacts/\nModelManifest.xml\n\n# Paket dependency manager\n.paket/paket.exe\n\n# FAKE - F# Make\n.fake/"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.134765625,
          "content": "<h1>Windows To Go Assistant</h1>\n<h2>Description of Windows To Go(WTG)</h2>\n\n\"Windows To Go(WTG)\" is a technology originally provided by Microsoft.\nIt allows you to fully install Windows on portable devices such as USB flash drives, portable hard drives, etc.,\n and can run directly on different computer hardware, so that the system can be carried with you!\nIt's not a WinPE, nor a simplified version, but a complete Windows operating system, which is almost the same\nas a normal installation.\n\n<h2>About Windows To Go Assistant(WTGA)</h2>\nThe Windows To Go Assistant(WTGA) provides a convenient and quick method to deploy Windows To Go on USB devices. Meanwhile, our community forum \ncan provide effective technical support.\n\n<h3>Motivation:  </h3>\nInitially, there is no GUI tool to deploy WTG, the only way is to use Command Line until the the official WTG creation tool was built in the Enterprise edition of Windows.\nThe official tool is simpliy and stable enough, but it lacks some custom settings. Also, there are some portable devices that do not compatible with it.\n\n<h2>Community Forum:</h2>\nLuobotou IT Forum(Chinese) : https://bbs.luobotou.org/\n\n\n\n\n"
        },
        {
          "name": "WTGA.ico",
          "type": "blob",
          "size": 67.8486328125,
          "content": null
        },
        {
          "name": "iTuner",
          "type": "tree",
          "content": null
        },
        {
          "name": "wintogo.sln",
          "type": "blob",
          "size": 3.3583984375,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.30320.27\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"wintogo\", \"wintogo\\wintogo.csproj\", \"{15037473-35DC-4AC6-8FC5-B2B3C14D382C}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"iTuner\", \"iTuner\\iTuner.csproj\", \"{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|Mixed Platforms = Debug|Mixed Platforms\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|Mixed Platforms = Release|Mixed Platforms\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Debug|Any CPU.ActiveCfg = Debug|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Debug|Mixed Platforms.ActiveCfg = Debug|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Debug|Mixed Platforms.Build.0 = Debug|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Debug|x64.Build.0 = Debug|x64\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Debug|x86.ActiveCfg = Debug|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Debug|x86.Build.0 = Debug|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Debug|x86.Deploy.0 = Debug|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Release|Any CPU.ActiveCfg = Release|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Release|Mixed Platforms.ActiveCfg = Release|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Release|Mixed Platforms.Build.0 = Release|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Release|x64.ActiveCfg = Release|x64\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Release|x64.Build.0 = Release|x64\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Release|x86.ActiveCfg = Release|x86\n\t\t{15037473-35DC-4AC6-8FC5-B2B3C14D382C}.Release|x86.Build.0 = Release|x86\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Release|Mixed Platforms.Build.0 = Release|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Release|x64.Build.0 = Release|Any CPU\n\t\t{2EBFB74E-FF39-4BB0-96F7-3AF1A99B1A15}.Release|x86.ActiveCfg = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {DF8A3E71-9295-49C6-A06B-B395565E745A}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "wintogo",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}