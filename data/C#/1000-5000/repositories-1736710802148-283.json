{
  "metadata": {
    "timestamp": 1736710802148,
    "page": 283,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lay295/TwitchDownloader",
      "stars": 2857,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 7.146484375,
          "content": "\n[*.{appxmanifest,asax,ascx,aspx,axaml,build,c,c++,c++m,cc,ccm,cginc,compute,cp,cpp,cppm,cs,cshtml,cu,cuh,cxx,cxxm,dtd,fs,fsi,fsscript,fsx,fx,fxh,h,hh,hlsl,hlsli,hlslinc,hpp,hxx,inc,inl,ino,ipp,ixx,master,ml,mli,mpp,mq4,mq5,mqh,mxx,nuspec,paml,razor,resw,shader,skin,tpp,usf,ush,uxml,vb,xaml,xamlx,xoml,xsd}]\nindent_style = space\nindent_size = 4\ntab_width = 4\n\n[*.resx]\nindent_style = space\nindent_size = 2\ntab_width = 4\n\n[*.cs]\n\n# Microsoft .NET properties\ncsharp_new_line_before_members_in_object_initializers = false\ncsharp_preferred_modifier_order = public, private, protected, internal, file, new, static, abstract, virtual, sealed, readonly, override, extern, unsafe, volatile, async, required:suggestion\ncsharp_style_namespace_declarations = block_scoped:warning\ncsharp_style_prefer_utf8_string_literals = true:suggestion\n# csharp_style_var_elsewhere = true:suggestion\n# csharp_style_var_for_built_in_types = true:suggestion\n# csharp_style_var_when_type_is_apparent = true:suggestion\ndotnet_naming_rule.constants_rule.import_to_resharper = True\ndotnet_naming_rule.constants_rule.resharper_description = Constant fields (not private)\ndotnet_naming_rule.constants_rule.resharper_guid = 669e5282-fb4b-4e90-91e7-07d269d04b60\ndotnet_naming_rule.constants_rule.severity = warning\ndotnet_naming_rule.constants_rule.style = all_upper_style\ndotnet_naming_rule.constants_rule.symbols = constants_symbols\ndotnet_naming_rule.local_constants_rule.import_to_resharper = True\ndotnet_naming_rule.local_constants_rule.resharper_description = Local constants\ndotnet_naming_rule.local_constants_rule.resharper_guid = a4f433b8-abcd-4e55-a08f-82e78cef0f0c\ndotnet_naming_rule.local_constants_rule.severity = warning\ndotnet_naming_rule.local_constants_rule.style = all_upper_style\ndotnet_naming_rule.local_constants_rule.symbols = local_constants_symbols\ndotnet_naming_rule.private_constants_rule.import_to_resharper = True\ndotnet_naming_rule.private_constants_rule.resharper_description = Constant fields (private)\ndotnet_naming_rule.private_constants_rule.resharper_guid = 236f7aa5-7b06-43ca-bf2a-9b31bfcff09a\ndotnet_naming_rule.private_constants_rule.resharper_style = AA_BB, FLASHW_ + AA_BB\ndotnet_naming_rule.private_constants_rule.severity = warning\ndotnet_naming_rule.private_constants_rule.style = all_upper_style\ndotnet_naming_rule.private_constants_rule.symbols = private_constants_symbols\ndotnet_naming_rule.public_static_fields_rule.import_to_resharper = True\ndotnet_naming_rule.public_static_fields_rule.resharper_description = Static fields (not private)\ndotnet_naming_rule.public_static_fields_rule.resharper_guid = 70345118-4b40-4ece-937c-bbeb7a0b2e70\ndotnet_naming_rule.public_static_fields_rule.resharper_style = aaBb, AaBb\ndotnet_naming_rule.public_static_fields_rule.severity = warning\ndotnet_naming_rule.public_static_fields_rule.style = lower_camel_case_style\ndotnet_naming_rule.public_static_fields_rule.symbols = public_static_fields_symbols\ndotnet_naming_rule.static_readonly_rule.import_to_resharper = True\ndotnet_naming_rule.static_readonly_rule.resharper_description = Static readonly fields (not private)\ndotnet_naming_rule.static_readonly_rule.resharper_guid = c873eafb-d57f-481d-8c93-77f6863c2f88\ndotnet_naming_rule.static_readonly_rule.severity = warning\ndotnet_naming_rule.static_readonly_rule.style = upper_camel_case_style\ndotnet_naming_rule.static_readonly_rule.symbols = static_readonly_symbols\ndotnet_naming_style.all_upper_style.capitalization = all_upper\ndotnet_naming_style.all_upper_style.word_separator = _\ndotnet_naming_style.lower_camel_case_style.capitalization = camel_case\ndotnet_naming_style.upper_camel_case_style.capitalization = pascal_case\ndotnet_naming_symbols.constants_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected\ndotnet_naming_symbols.constants_symbols.applicable_kinds = field\ndotnet_naming_symbols.constants_symbols.required_modifiers = const\ndotnet_naming_symbols.constants_symbols.resharper_applicable_kinds = constant_field\ndotnet_naming_symbols.constants_symbols.resharper_required_modifiers = any\ndotnet_naming_symbols.local_constants_symbols.applicable_accessibilities = *\ndotnet_naming_symbols.local_constants_symbols.applicable_kinds = local\ndotnet_naming_symbols.local_constants_symbols.required_modifiers = const\ndotnet_naming_symbols.local_constants_symbols.resharper_applicable_kinds = local_constant\ndotnet_naming_symbols.local_constants_symbols.resharper_required_modifiers = any\ndotnet_naming_symbols.private_constants_symbols.applicable_accessibilities = private\ndotnet_naming_symbols.private_constants_symbols.applicable_kinds = field\ndotnet_naming_symbols.private_constants_symbols.required_modifiers = const\ndotnet_naming_symbols.private_constants_symbols.resharper_applicable_kinds = constant_field\ndotnet_naming_symbols.private_constants_symbols.resharper_required_modifiers = any\ndotnet_naming_symbols.public_static_fields_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected\ndotnet_naming_symbols.public_static_fields_symbols.applicable_kinds = field\ndotnet_naming_symbols.public_static_fields_symbols.required_modifiers = static\ndotnet_naming_symbols.public_static_fields_symbols.resharper_applicable_kinds = field\ndotnet_naming_symbols.public_static_fields_symbols.resharper_required_modifiers = static\ndotnet_naming_symbols.static_readonly_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected\ndotnet_naming_symbols.static_readonly_symbols.applicable_kinds = field\ndotnet_naming_symbols.static_readonly_symbols.required_modifiers = readonly,static\ndotnet_naming_symbols.static_readonly_symbols.resharper_applicable_kinds = readonly_field\ndotnet_naming_symbols.static_readonly_symbols.resharper_required_modifiers = static\ndotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:suggestion\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion\ndotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:suggestion\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\ndotnet_style_predefined_type_for_member_access = true:suggestion\ndotnet_style_qualification_for_event = false:suggestion\ndotnet_style_qualification_for_field = false:suggestion\ndotnet_style_qualification_for_method = false:suggestion\ndotnet_style_qualification_for_property = false:suggestion\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:warning\n\n# ReSharper properties\nresharper_autodetect_indent_settings = true\nresharper_blank_lines_after_control_transfer_statements = 1\nresharper_braces_redundant = false\nresharper_builtin_type_apply_to_native_integer = true\nresharper_csharp_empty_block_style = together_same_line\nresharper_csharp_wrap_before_binary_opsign = true\nresharper_formatter_off_tag = @formatter:off\nresharper_formatter_on_tag = @formatter:on\nresharper_formatter_tags_enabled = true\nresharper_indent_preprocessor_region = no_indent\nresharper_place_accessorholder_attribute_on_same_line = false\nresharper_place_field_attribute_on_same_line = false\nresharper_place_simple_anonymousmethod_on_single_line = false\nresharper_trailing_comma_in_multiline_lists = true\nresharper_use_indent_from_vs = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.498046875,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n*.cs text eol=crlf\n*.xaml text eol=crlf\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.6142578125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n# *.pubxml\n# *.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- Backup*.rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.037109375,
          "content": "The MIT License\n\nCopyright (c) lay295\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.71875,
          "content": "<div align=\"center\">\n  <a href=\"https://github.com/lay295/TwitchDownloader\">\n    <img src=\"TwitchDownloaderWPF/Images/Logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n  </a>\n  <h3 align=\"center\">Twitch Downloader</h3>\n  <div align=\"center\">\n    Twitch VOD/Clip/Chat Downloader and Chat Renderer\n    <br />\n    <br />\n    <a href=\"https://github.com/lay295/TwitchDownloader/issues\">Report Bug</a>\n  </div>\n</div>\n\nThis document is also available in:\n\n- [**Italian / Italiano**](README_it.md)\n- [**Japanese / 日本語**](README_ja.md)\n- [**Portuguese (Brazil) / Português (Brasil)**](README_pt-br.md)\n- [**Russian / Русский**](README_ru.md)\n- [**Spanish / Español**](README_es.md)\n- [**Turkish / Türkçe**](README_tr.md)\n- [**Simplified Chinese / 简体中文（中国大陆）**](README_zh-cn.md)\n- [**Traditonal Chinese / 繁體中文（台灣）**](README_zh-tw.md)\n\n## Chat Render Example\n\n<https://user-images.githubusercontent.com/1060681/197653099-c3fd12c2-f03a-4580-84e4-63ce3f36be8d.mp4>\n\n## What can it do?\n\n- Download Twitch VODs\n- Download Twitch Clips\n- Download chat for VODs and Clips, in either a [JSON with all the original information](https://github.com/lay295/TwitchDownloader/files/13495494/ExampleMoonMoonJsonFile.json), a browser HTML file, or a [plain text file](https://github.com/lay295/TwitchDownloader/files/13495523/ExampleMoonMoonTextFile.txt)\n- Update the contents of a previously generated JSON chat file with an option to save as another format\n- Use a previously generated JSON chat file to render the chat with Twitter Twemoji or Google Noto Color emojis and BTTV, FFZ, 7TV static and animated emotes\n\n# GUI\n\n## Windows WPF\n\n![](https://i.imgur.com/bLegxGX.gif)\n\n### [See the full WPF documentation here](TwitchDownloaderWPF/README.md)\n\n### Functionality\n\nThe Windows WPF GUI implements all of the main functions of the program along with some extra quality of life functions:\n\n- Queue up multiple download/render jobs to run simultaneously\n- Create a list of download jobs from a list of vod/clip links\n- Search for and download multiple VODs/clips from any streamer without leaving the app\n\n### Multi-language Support\n\nThe Windows WPF GUI is available in multiple languages thanks to community translations. See the [Localization section](TwitchDownloaderWPF/README.md#localization) of the [WPF README](TwitchDownloaderWPF/README.md) for more details.\n\n### Theming\n\nThe Windows WPF GUI comes bundled with both light and dark themes, along with an option to update live according the current Windows theme. It also supports user created themes! See the [Theming section](TwitchDownloaderWPF/README.md#theming) of the [WPF README](TwitchDownloaderWPF/README.md) for more details.\n\n### Video Demonstration\n\n<https://www.youtube.com/watch?v=0W3MhfhnYjk>\n(older version, same concept)\n\n## Linux?\n\nCheck twitch-downloader-gui on [github](https://github.com/mohad12211/twitch-downloader-gui) or on the [AUR](https://aur.archlinux.org/packages/twitch-downloader-gui) for a Linux GUI wrapper for the CLI.\n\n## MacOS?\n\nNo GUI is available for MacOS yet :(\n\n# CLI\n\n### [See the full CLI documentation here](TwitchDownloaderCLI/README.md)\n\nThe CLI is cross-platform and implements the main functions of the program. It works on Windows, Linux, and MacOS<sup>*</sup>.\n\n<sup>*Only Intel Macs have been tested</sup>\n\nWith the CLI, it is possible to automate video processing using external scripts. For example, you could copy-paste the following code into a `.bat` file on Windows to download a VOD and its chat, and then render the chat, all from a single input.\n\n```bat\n@echo off\nset /p vodid=\"Enter VOD ID: \"\nTwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path \"ffmpeg.exe\" -o %vodid%.mp4\nTwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E\nTwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4\n```\n\n## Windows - Getting started\n\n1. Go to [Releases](https://github.com/lay295/TwitchDownloader/releases/) and download the latest version for Windows or [build from source](#building-from-source).\n2. Extract `TwitchDownloaderCLI.exe`.\n3. Browse to where you extracted the executable:\n\n```\ncd C:\\folder\\containing\\TwitchDownloaderCLI\n```\n\n4. If you do not have FFmpeg, you can install it via [Chocolatey package manager](https://community.chocolatey.org/), or you can get it as a standalone file from [ffmpeg.org](https://ffmpeg.org/download.html) or by using TwitchDownloaderCLI:\n\n```\nTwitchDownloaderCLI.exe ffmpeg --download\n```\n\n5. You can now start using TwitchDownloaderCLI, for example:\n\n```\nTwitchDownloaderCLI.exe videodownload --id <vod-id-here> -o out.mp4\n```\n\nYou can find more example commands in the [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n## Linux – Getting started\n\n1. Some distros, like Linux Alpine, lack fonts for some languages (Arabic, Persian, Thai, etc.) If this is the case for you, install additional fonts families such as [Noto](https://fonts.google.com/noto/specimen/Noto+Sans) or check your distro's wiki page on fonts as it may have an install command for this specific scenario, such as the [Linux Alpine](https://wiki.alpinelinux.org/wiki/Fonts) font page.\n2. Ensure both `fontconfig` and `libfontconfig1` are installed. `apt-get install fontconfig libfontconfig1` on Ubuntu.\n3. Go to [Releases](https://github.com/lay295/TwitchDownloader/releases/) and download the latest binary for Linux, grab the [AUR Package](https://aur.archlinux.org/packages/twitch-downloader-bin/) for Arch Linux, or [build from source](#building-from-source).\n4. Extract `TwitchDownloaderCLI`.\n5. Browse to where you extracted the binary:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n6. Give the binary executable rights:\n\n```\nsudo chmod +x TwitchDownloaderCLI\n```\n\n7. a) If you do not have FFmpeg, you should install it system-wide via your distro package manager, however you can also get it as a standalone file from [ffmpeg.org](https://ffmpeg.org/download.html) or by using TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n7. b) If downloaded as a standalone file, you must also give it executable rights with:\n\n```\nsudo chmod +x ffmpeg\n```\n\n8. You can now start using TwitchDownloaderCLI, for example:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nYou can find more example commands in the [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n## MacOS – Getting started\n\n1. If your device has an Apple Silicon M-series processor, ensure that you download the arm64 binary, however if you would like to use the x64 binary on Apple Silicon it must be run via a terminal session running under Rosetta 2:\n\n```\narch -x86_64 zsh\n```\n\n2. Go to [Releases](https://github.com/lay295/TwitchDownloader/releases/) and download the latest binary for MacOS or [build from source](#building-from-source).\n3. Extract `TwitchDownloaderCLI`.\n4. Browse to where you extracted the binary:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n5. Give the binary executable rights in the terminal:\n\n```\nchmod +x TwitchDownloaderCLI\n```\n\n6. a) If you do not have FFmpeg, you can install it system-wide via the [Homebrew package manager](https://brew.sh/), or you can get it as a standalone file from [ffmpeg.org](https://ffmpeg.org/download.html) or by using TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n6. b) If downloaded as a standalone file, you must also give it executable rights with:\n\n```\nchmod +x ffmpeg\n```\n\n7. You can now start using TwitchDownloaderCLI, for example:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nYou can find more example commands in the [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n# Building from source\n\n## Requirements\n\n- [.NET 6.0.x SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n- About 1GB of disk space\n\n## Build Instructions\n\n1. Clone the repository:\n\n```\ngit clone https://github.com/lay295/TwitchDownloader.git\n```\n\n2. Navigate to the solution folder:\n\n```\ncd TwitchDownloader\n```\n\n3. Restore the solution:\n\n```\ndotnet restore\n```\n\n- Non-Windows devices may need to explicitly specify a project to restore, i.e. `dotnet restore TwitchDownloaderCLI`\n\n4. a) Build the GUI:\n\n```\ndotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows\n```\n\n4. b) Build the CLI:\n\n```\ndotnet publish TwitchDownloaderCLI -p:PublishProfile=<Profile>\n```\n\n- Applicable Profiles: `Windows`, `Linux`, `LinuxAlpine`, `LinuxArm`, `LinuxArm64`, `MacOS`, `MacOSArm64`\n\n5. a) Navigate to the GUI build folder:\n\n```\ncd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64\n```\n\n5. b) Navigate to the CLI build folder:\n\n```\ncd TwitchDownloaderCLI/bin/Release/net6.0/publish\n```\n\n# Third Party Credits\n\nChat Renders are rendered with [SkiaSharp](https://github.com/mono/SkiaSharp) and [HarfBuzzSharp](https://github.com/mono/SkiaSharp) © Microsoft Corporation.\n\nChat Renders are encoded and Video Downloads are finalized with [FFmpeg](https://ffmpeg.org/) © The FFmpeg developers.\n\nChat Renders may use [Noto Color Emoji](https://github.com/googlefonts/noto-emoji) © Google and contributors.\n\nChat Renders may use [Twemoji](https://github.com/twitter/twemoji) © Twitter and contributors.\n\nBundled FFmpeg binaries are fetched from [gyan.dev](https://www.gyan.dev/ffmpeg/) © Gyan Doshi.\n\nFFmpeg binaries fetched are runtime are downloaded using [Xabe.FFmpeg.Downloader](https://github.com/tomaszzmuda/Xabe.FFmpeg) © Xabe.\n\nChat Html exports utilize the _Inter_ typeface hosted by the [Google Fonts API](https://fonts.google.com/) © Google.\n\nFor a full list of utilized external libraries, see [THIRD-PARTY-LICENSES.txt](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt).\n\n# License\n\n[MIT](./LICENSE.txt)\n\nTwitchDownloader is in no way associated with Twitch Interactive, Inc. or its affiliates.\n"
        },
        {
          "name": "README_es.md",
          "type": "blob",
          "size": 9.3173828125,
          "content": "<div align=\"center\">\n  <a href=\"https://github.com/lay295/TwitchDownloader\">\n    <img src=\"TwitchDownloaderWPF/Images/Logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n  </a>\n  <h3 align=\"center\">Twitch Downloader</h3>\n  <div align=\"center\">\n    Descargador de Twitch VOD/Clip/Chat y Renderizador de Chat\n    <br />\n    <br />\n    <a href=\"https://github.com/lay295/TwitchDownloader/issues\">Reportar un error</a>\n  </div>\n</div>\n\n**Este archivo Readme podría no estar actualizado, considere revisar el Readme en [**ingles**](README.md)**\n\n## Ejemplo de Renderizado de Chat\n\n<https://user-images.githubusercontent.com/1060681/197653099-c3fd12c2-f03a-4580-84e4-63ce3f36be8d.mp4>\n\n## ¿Qué puede hacer?\n\n- Descargar VODs de Twitch\n- Descargar Clips de Twitch\n- Descargar el chat de VODs y Clips, ya sea en un archivo JSON con toda la información original, en un archivo HTML del navegador o en un archivo de texto sin formato\n- Actualizar el contenido de un archivo JSON de chat generado previamente con la opción de guardarlo en otro formato\n- Usar un archivo JSON de chat generado previamente para renderizar el chat con emojis de Twitter Twemoji o Google Noto Color, y con emotes estáticos y animados de BTTV, FFZ y 7TV\n\n# Interfaz Gráfica de Usuario (GUI)\n\n## Windows WPF\n\n![](https://i.imgur.com/bLegxGX.gif)\n\n### [Ver toda la documentación de WPF aquí](TwitchDownloaderWPF/README.md)\n\n### Funcionalidad\n\nLa interfaz gráfica de usuario Windows WPF implementa todas las funciones principales del programa junto con algunas funciones adicionales para mejorar la comodidad de uso:\n\n- Agregar múltiples tareas de descarga/renderizado a la cola para ejecutarlas simultáneamente\n- Crear una lista de tareas de descarga a partir de una lista de enlaces de VODs/Clips\n- Buscar y descargar múltiples VODs/Clips de cualquier streamer sin salir de la aplicación\n\n### Soporte Multilingüe\n\nLa interfaz gráfica de usuario Windows WPF está disponible en varios idiomas gracias a las traducciones de la comunidad. Consulta la [sección de Localización](TwitchDownloaderWPF/README.md#localization) del [README de WPF](TwitchDownloaderWPF/README.md) para obtener más detalles.\n\n### Temas\n\nLa interfaz gráfica de usuario Windows WPF incluye temas claros y oscuros, junto con una opción para actualizar automáticamente el tema según el tema actual de Windows. ¡También admite temas creados por los usuarios! Consulta la [sección de Temas](TwitchDownloaderWPF/README.md#theming) del [README de WPF](TwitchDownloaderWPF/README.md) para obtener más detalles.\n\n### Demostración en Video\n\n<https://www.youtube.com/watch?v=0W3MhfhnYjk>\n(versión anterior, mismo concepto)\n\n## ¿Linux?\n\nConsulta twitch-downloader-gui en [github](https://github.com/mohad12211/twitch-downloader-gui) o en el [AUR](https://aur.archlinux.org/packages/twitch-downloader-gui) para obtener una interfaz gráfica de usuario (GUI) para Linux que envuelve la CLI.\n\n## ¿MacOS?\n\nPor ahora, no hay una GUI disponible para MacOS :(\n\n# Interfaz de Línea de Comandos (CLI)\n\n### [Ver toda la documentación de la CLI aquí](TwitchDownloaderCLI/README.md)\n\nLa interfaz de línea de comandos (CLI) es multiplataforma e implementa las funciones principales del programa. Funciona en Windows, Linux y MacOS<sup>*</sup>.\n\n<sup>*Solo se han probado las Mac con procesador Intel</sup>\n\nCon la CLI, es posible automatizar el procesamiento de videos mediante scripts externos. Por ejemplo, podrías copiar y pegar el siguiente código en un archivo `.bat` en Windows para descargar un VOD y su chat, y luego renderizar el chat, todo desde una única entrada.\n\n```bat\n@echo off\nset /p vodid=\"Ingresa el ID del VOD: \"\nTwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path \"ffmpeg.exe\" -o %vodid%.mp4\nTwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E\nTwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4\n```\n\n## Windows - Primeros Pasos\n\n1. Ve a [Releases](https://github.com/lay295/TwitchDownloader/releases/) y descarga la última versión para Windows o [compila desde el código fuente](#building-from-source).\n2. Extrae `TwitchDownloaderCLI.exe`.\n3. Navega hasta el lugar donde extrajiste el archivo en la terminal.\n4. Si no tienes FFmpeg, puedes instalarlo a través del [administrador de paquetes Chocolatey](https://community.chocolatey.org/), o puedes obtenerlo como un archivo independiente desde [ffmpeg.org](https://ffmpeg.org/download.html) o utilizando TwitchDownloaderCLI:\n\n```\nTwitchDownloaderCLI.exe ffmpeg --download\n```\n\n5. Ahora puedes empezar a usar el descargador, por ejemplo:\n\n```\nTwitchDownloaderCLI.exe videodownload --id <id-del-vod-aquí> -o out.mp4\n```\n\n## Linux – Primeros Pasos\n\n1. Algunas distribuciones, como Linux Alpine, carecen de fuentes para algunos idiomas (árabe, persa, tailandés, etc.). Si este es tu caso, instala familias adicionales de fuentes como [Noto](https://fonts.google.com/noto/specimen/Noto+Sans) o consulta la página de la wiki de tu distribución sobre fuentes, ya que puede tener un comando de instalación para este escenario específico, como la página de fuentes de [Linux Alpine](https://wiki.alpinelinux.org/wiki/Fonts).\n2. Asegúrate de que tanto `fontconfig` como `libfontconfig1` estén instalados. Por ejemplo, en Ubuntu, puedes instalarlos con el comando `apt-get install fontconfig libfontconfig1`.\n3. Ve a [Releases](https://github.com/lay295/TwitchDownloader/releases/) y descarga el archivo binario más reciente para Linux, toma el [Paquete AUR](https://aur.archlinux.org/packages/twitch-downloader-bin/) para Arch Linux o [compila desde el código fuente](#\n\nbuilding-from-source).\n4. Extrae `TwitchDownloaderCLI`.\n5. Navega hasta el lugar donde extrajiste el archivo y dale permisos de ejecución en la terminal:\n\n```\nsudo chmod +x TwitchDownloaderCLI\n```\n\n6. a) Si no tienes FFmpeg, debes instalarlo a través del administrador de paquetes de tu distribución, aunque también puedes obtenerlo como un archivo independiente desde [ffmpeg.org](https://ffmpeg.org/download.html) o usando TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n6. b) Si lo descargaste como un archivo independiente, también debes darle permisos de ejecución con:\n\n```\nsudo chmod +x ffmpeg\n```\n\n7. Ahora puedes empezar a usar el descargador, por ejemplo:\n\n```\n./TwitchDownloaderCLI videodownload --id <id-del-vod-aquí> -o out.mp4\n```\n\n## MacOS – Primeros Pasos\n\n1. Ve a [Releases](https://github.com/lay295/TwitchDownloader/releases/) y descarga el archivo binario más reciente para MacOS o [compila desde el código fuente](#building-from-source).\n2. Extrae `TwitchDownloaderCLI`.\n3. Navega hasta el lugar donde extrajiste el archivo y dale permisos de ejecución en la terminal:\n\n```\nchmod +x TwitchDownloaderCLI\n```\n\n4. a) Si no tienes FFmpeg, puedes instalarlo a través del [administrador de paquetes Homebrew](https://brew.sh/), o puedes obtenerlo como un archivo independiente desde [ffmpeg.org](https://ffmpeg.org/download.html) o utilizando TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n4. b) Si lo descargaste como un archivo independiente, también debes darle permisos de ejecución con:\n\n```\nchmod +x ffmpeg\n```\n\n5. Ahora puedes empezar a usar el descargador, por ejemplo:\n\n```\n./TwitchDownloaderCLI videodownload --id <id-del-vod-aquí> -o out.mp4\n```\n\n# Compilación desde el Código Fuente\n\n## Requisitos\n\n- [.NET 6.0.x SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n\n## Instrucciones de Compilación\n\n1. Clona el repositorio:\n\n```\ngit clone https://github.com/lay295/TwitchDownloader.git\n```\n\n2. Navega hasta la carpeta de la solución:\n\n```\ncd TwitchDownloader\n```\n\n3. Restaura la solución:\n\n```\ndotnet restore\n```\n\n4. a) Compila la GUI:\n\n```\ndotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows\n```\n\n4. b) Compila la CLI:\n\n```\ndotnet publish TwitchDownloaderCLI -p:PublishProfile=<Perfil>\n```\n\n- Perfiles aplicables: `Windows`, `Linux`, `LinuxAlpine`, `LinuxArm`, `LinuxArm64`, `MacOS`, `MacOSArm64`\n\n5. a) Navega hasta la carpeta de la compilación de la GUI:\n\n```\ncd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64\n```\n\n5. b) Navega hasta la carpeta de la compilación de la CLI:\n\n```\ncd TwitchDownloaderCLI/bin/Release/net6.0/publish\n```\n\n# Licencia\n\n[MIT](./LICENSE.txt)\n\n# Créditos de Terceros\n\nLos renderizados de chat se realizan con [SkiaSharp y HarfBuzzSharp](https://github.com/mono/SkiaSharp) © Microsoft Corporation.\n\nLos renderizados de chat se codifican y las descargas de video se finalizan con [FFmpeg](https://ffmpeg.org/) © Los desarrolladores de FFmpeg.\n\nLos renderizados de chat pueden utilizar [Noto Color Emoji](https://github.com/googlefonts/noto-emoji) © Google y colaboradores.\n\nLos renderizados de chat pueden utilizar [Twemoji](https://github.com/twitter/twemoji) © Twitter y colaboradores.\n\nLos binarios de FFmpeg incluidos se obtienen de [gyan.dev](https://www.gyan.dev/ffmpeg/) © Gyan Doshi.\n\nLos binarios de FFmpeg descargados en tiempo de ejecución son descargados utilizando [Xabe.FFmpeg.Downloader](https://github.com/tomaszzmuda/Xabe.FFmpeg) © Xabe.\n\nLas exportaciones de HTML de chat utilizan la tipografía _Inter_ alojada en la [API de Google Fonts](https://fonts.google.com/) © Google.\n\nPara obtener una lista completa de las bibliotecas externas utilizadas, consulta [THIRD-PARTY-LICENSES.txt](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt).\n"
        },
        {
          "name": "README_it.md",
          "type": "blob",
          "size": 9.6142578125,
          "content": "<div align=\"center\">\n  <a href=\"https://github.com/lay295/TwitchDownloader\">\n    <img src=\"TwitchDownloaderWPF/Images/Logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n  </a>\n  <h3 align=\"center\">Twitch Downloader</h3>\n  <div align=\"center\">\n    Twitch VOD/Clip/Chat Downloader and Chat Renderer\n    <br />\n    <br />\n    <a href=\"https://github.com/lay295/TwitchDownloader/issues\">Report Bug</a>\n  </div>\n</div>\n\nQuesto archivio Readme potrebbe non essere aggiornato, considera la visioone del [**Readme in Inglese**](README.md)\n\n## Esempio di rendering della Chat\n\n<https://user-images.githubusercontent.com/1060681/197653099-c3fd12c2-f03a-4580-84e4-63ce3f36be8d.mp4>\n\n## Cosa può fare?\n\n- Scaricare i VODs di Twitch\n- Scaricare le Clips di Twitch\n- Scaricare la chat per i VOD e le clip, sia in un formato [JSON with all the original information](https://github.com/lay295/TwitchDownloader/files/13495494/ExampleMoonMoonJsonFile.json), un file HTML, o un [file di testo](https://github.com/lay295/TwitchDownloader/files/13495523/ExampleMoonMoonTextFile.txt)\n- Aggiornare il contenuto di un file di chat JSON generato in precedenza con un'opzione di salvataggio in un altro formato.\n- Utilizzare un file di chat JSON generato in precedenza per renderizzare la chat con le emoji di Twitter Twemoji o Google Noto Color e le emotes statiche e animate di BTTV, FFZ, 7TV.\n\n# GUI\n\n## Windows WPF\n\n![](https://i.imgur.com/bLegxGX.gif)\n\n### [Guarda la documentazione di WPF qui](TwitchDownloaderWPF/README.md)\n\n### Funzionalità\n\nLa GUI di Windows WPF implementa tutte le funzioni base del programma e alcune funzioni aggiuntive per la qualità delle stesse:\n\n- Accodare più lavori di download/rendering da eseguire simultaneamente\n- Creare un elenco di lavori di download da un elenco di link a vod/clip\n- Cercate e scaricate più VOD/clip da qualsiasi streamer senza chiudere l'app.\n\n### Supporto al multi linguaggio\n\nLa GUI di Windows WPF è disponibile in molteplici linguaggio grazie alle traduzioni della community. Guarda la [sezione localizzazione](TwitchDownloaderWPF/README.md#localization) o il [WPF README](TwitchDownloaderWPF/README.md) per più dettagli.\n\n### Temi\n\nL'interfaccia grafica WPF di Windows viene fornita con temi chiari e scuri e con l'opzione di aggiornamento live in base al tema corrente di Windows. Supporta anche temi creati dall'utente! Guarda la [sezione temi](TwitchDownloaderWPF/README.md#theming) di [WPF README](TwitchDownloaderWPF/README.md) per più dettagli.\n\n### Dimostrazione Video\n\n<https://www.youtube.com/watch?v=0W3MhfhnYjk>\n(versione più vecchia, stesso concetto)\n\n## Linux?\n\nControlla twitch-downloader-gui su [github](https://github.com/mohad12211/twitch-downloader-gui) o la [AUR](https://aur.archlinux.org/packages/twitch-downloader-gui) per un wrapper Linux GUI per la CLI.\n\n## MacOS?\n\nNon è ancora disponibile nessuna GUI per MacOS :(\n\n# CLI\n\n### [Guarda la documentazione completa del CLI qui](TwitchDownloaderCLI/README.md)\n\nIl CLI è cross-platform ed implementa le funzioni principali del programma. Funzione su Windows, Linux, e MacOS<sup>*</sup>.\n\n<sup>*Solo i Mac con Intel sono stati testati</sup>\n\nCon il Cli, è possibile automatizzare l'elaborazione video utilizzando script esterni. Per esempio, puoi copiare il seguente codice in un file `.bat`  su Windows per scaricare un VOD e la sua chat, renderizzandola, tutto in un singolo input.\n\n```bat\n@echo off\nset /p vodid=\"Enter VOD ID: \"\nTwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path \"ffmpeg.exe\" -o %vodid%.mp4\nTwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E\nTwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4\n```\n\n## Windows - Come iniziare\n\n1. Vai a [Releases](https://github.com/lay295/TwitchDownloader/releases/) e scarica l'ultima versione per Windows o [compilala dal sorgente](#building-from-source).\n2. Estrai `TwitchDownloaderCLI.exe`.\n3. Vai a adove hai estratto l'eseguibile:\n\n```\ncd C:\\folder\\containing\\TwitchDownloaderCLI\n```\n\n4. Se non hai FFmpeg, puoi installarlo con [Chocolatey package manager](https://community.chocolatey.org/), o puoi averlo standalone da [ffmpeg.org](https://ffmpeg.org/download.html) o usando TwitchDownloaderCLI:\n\n```\nTwitchDownloaderCLI.exe ffmpeg --download\n```\n\n5. Puoi ora iniziare ad usare TwitchDownloaderCLI, per esempio:\n\n```\nTwitchDownloaderCLI.exe videodownload --id <vod-id-here> -o out.mp4\n```\n\nPuoi trovare più esempi di comandi in [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n## Linux – Come iniziare\n\n1. Alcune distro, come Linux Alpine, mancano di font per alcune lingue (Arabo, Persiano, Thai, etc.) Se è il tuo caso, installa font addizionali come [Noto](https://fonts.google.com/noto/specimen/Noto+Sans) o controlla la wiki della tua distro sui font visto che potrebbe avere un comando specifico per l'installazione, come la pagina [Linux Alpine](https://wiki.alpinelinux.org/wiki/Fonts) per i font.\n2. Assicurati che `fontconfig` e `libfontconfig1` siano installati. `apt-get install fontconfig libfontconfig1` su Ubuntu.\n3. Vai a [Releases](https://github.com/lay295/TwitchDownloader/releases/) e scarica l'ultimo file binario per Linux, prendi il [pacchetto AUR](https://aur.archlinux.org/packages/twitch-downloader-bin/) per Arch Linux, o [compila dal sorgente](#building-from-source).\n5. Estrai `TwitchDownloaderCLI`.\n6. Naviga dove hai estratto il binario:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n6. Dai al binario i diritti di eseguibile:\n\n```\nsudo chmod +x TwitchDownloaderCLI\n```\n\n7. a) Se non hai FFmpeg, dovresti installarlo a livello di sistema tramite il gestore di pacchetti, tuttavia si può anche ottenere come un file standalone da [ffmpeg.org](https://ffmpeg.org/download.html) o usando TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n7. b) Se scaricato come file standalone, devi eseguirlo con diritti di eseguibile con:\n\n```\nsudo chmod +x ffmpeg\n```\n\n8. Puoi ora iniziare ad usare TwitchDownloaderCLI, per esempio:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nPuoi trovare più esempio in [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n## MacOS – Come iniziare\n\n1. Se il tuo dispositivo ha un processore Apple Silicon M-series, assicurati di scaricare il binario per arm64, però se si desidera utilizzare il binario x64 su Apple Silicon deve essere eseguito tramite una sessione terminale in esecuzione sotto Rosetta 2:\n\n```\narch -x86_64 zsh\n```\n\n2. Vai a [Releases](https://github.com/lay295/TwitchDownloader/releases/) e scarica l'ultimo binario per MacOS o [compilalo dal sorgente](#building-from-source).\n3. Estrai `TwitchDownloaderCLI`.\n4. Naviga nella cartella dove hai estratto il binario:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n5. Dai i diritti eseguibili binari nel terminale:\n\n```\nchmod +x TwitchDownloaderCLI\n```\n\n6. a) Se non si dispone di FFmpeg, è possibile installarlo a livello di sistema tramite [Homebrew package manager](https://brew.sh/), o puoi ottenerlo come un file standalone da [ffmpeg.org](https://ffmpeg.org/download.html) o usando TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n6. b) Se scaricato come un file standalone, si deve anche dare diritti eseguibili con:\n\n```\nchmod +x ffmpeg\n```\n\n7. Puoi ora utilizzare TwitchDownloaderCLI, per esempio:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nPuoi trovare altri esempi nel [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n# Compilare il sorgente\n\n## Requisiti\n\n- [.NET 6.0.x SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n- Circa 1GB di spazio su disco\n\n## Istruzioni\n\n1. Clona la repository:\n\n```\ngit clone https://github.com/lay295/TwitchDownloader.git\n```\n\n2. Naviga nella cartella:\n\n```\ncd TwitchDownloader\n```\n\n3. Ripristina:\n\n```\ndotnet restore\n```\n\n- Dispositivi diversi da Windows potrebbero necessitare di specificare esplicitamente un progetto da ripristinare, i.e. `dotnet restore TwitchDownloaderCLI`\n\n4. a) Costruisci la GUI:\n\n```\ndotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows\n```\n\n4. b) Costruisci il CLI:\n\n```\ndotnet publish TwitchDownloaderCLI -p:PublishProfile=<Profile>\n```\n\n- Profili Applicabili: `Windows`, `Linux`, `LinuxAlpine`, `LinuxArm`, `LinuxArm64`, `MacOS`, `MacOSArm64`\n\n5. a) Naviga nella cartella della GUI:\n\n```\ncd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64\n```\n\n5. b) Naviga nella cartella del CLI:\n\n```\ncd TwitchDownloaderCLI/bin/Release/net6.0/publish\n```\n\n# Crediti di Terze Parti\n\nI rendering di chat sono resi con [SkiaSharp](https://github.com/mono/SkiaSharp) e [HarfBuzzSharp](https://github.com/mono/SkiaSharp) © Microsoft Corporation.\n\nI rendering di chat sono codificati e i download video sono finalizzati con [FFmpeg](https://ffmpeg.org/) © The FFmpeg developers.\n\nI rendering di chat potrebbero usare [Noto Color Emoji](https://github.com/googlefonts/noto-emoji) © Google e collaboratori.\n\nI rendering di chat potrebbero usare [Twemoji](https://github.com/twitter/twemoji) © Twitter e collaboratori.\n\nI binari FFmpeg in bundle sono recuperati da [gyan.dev](https://www.gyan.dev/ffmpeg/) © Gyan Doshi.\n\nI binari FFmpeg recuperati vengono scaricati usando [Xabe.FFmpeg.Downloader](https://github.com/tomaszzmuda/Xabe.FFmpeg) © Xabe.\n\nLe esportazioni di Chat Html utilizzano il carattere _Inter_ ospitato dal [Google Fonts API](https://fonts.google.com/) © Google.\n\nPer un elenco completo delle librerie esterne utilizzate, vedere [THIRD-PARTY-LICENSES.txt](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt).\n\n# Licenza\n\n[MIT](./LICENSE.txt)\n\nTwitchDownloader non è in nessuna maniera assiociata con Twitch Interactive, Inc. o i suoi affiliati.\n"
        },
        {
          "name": "README_ja.md",
          "type": "blob",
          "size": 11.2685546875,
          "content": "<div align=\"center\">\n  <a href=\"https://github.com/lay295/TwitchDownloader\">\n    <img src=\"TwitchDownloaderWPF/Images/Logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n  </a>\n  <h3 align=\"center\">Twitch Downloader</h3>\n  <div align=\"center\">\n    Twitch VOD/Clip/Chat Downloader and Chat Renderer\n    <br />\n    <br />\n    <a href=\"https://github.com/lay295/TwitchDownloader/issues\">バグを報告する</a>\n  </div>\n</div>\n\n## チャットレンダリングの例\n\n<https://user-images.githubusercontent.com/1060681/197653099-c3fd12c2-f03a-4580-84e4-63ce3f36be8d.mp4>\n\n## なにができる？\n\n- Twitchのアーカイブをダウンロードする\n- Twitchのクリップをダウンロードする\n- アーカイブ、クリップのチャットを[全ての情報を含んだJSON](https://github.com/lay295/TwitchDownloader/files/13495494/ExampleMoonMoonJsonFile.json)、ブラウザ用のHTMLファイル、[プレーンテキスト](https://github.com/lay295/TwitchDownloader/files/13495523/ExampleMoonMoonTextFile.txt)でダウンロードする\n- 以前に生成されたJSOn形式のチャットファイルを別の形式で保存し、内容を変更する\n- 生成されたJSON形式のチャットファイルから、Twitter Twemoji・Google Noto Color emoji・BTTV・FFZ・7TV・スタンプ・GIFスタンプと一緒にチャットをレンダリングします\n\n# GUI\n\n## Windows WPF\n\n![](https://i.imgur.com/bLegxGX.gif)\n\n### [完全なWPFのドキュメントを見る](TwitchDownloaderWPF/README.md)\n\n### 機能性\n\nWindows WPF GUIは、プログラムのすべての主要機能といくつかのQOL機能を実装しています:\n\n- 複数のダウンロード・レンダリングジョブを同時にキューに追加する\n- アーカイブ・クリップのリンクからダウンロードジョブのリストを作成する\n- ストリーマーから複数のアーカイブ・クリップを検索してダウンロードする\n\n### 複数言語サポート\n\nWindows WPF GUIは、コミュニティの翻訳により複数の言語で利用可能です。[WPF README](TwitchDownloaderWPF/README.md) の [Localization section](TwitchDownloaderWPF/README.md#localization) で詳細を確認できます。\n\n### テーマ\n\nWindows WPF GUI では、ライトテーマとダークテーマの両方が実装されており、現在のWindowsテーマに同期する設定もあります。また、ユーザーが作成したテーマもサポートされています！[WPF README](TwitchDownloaderWPF/README.md) の [Theming section](TwitchDownloaderWPF/README.md#theming) で詳細を確認できます。\n\n### ビデオデモンストレーション\n\n<https://www.youtube.com/watch?v=0W3MhfhnYjk>\n(古いバージョンでも同様です)\n\n## Linux?\n\ntwitch-downloader-gui を [GitHub](https://github.com/mohad12211/twitch-downloader-gui) や [AUR](https://aur.archlinux.org/packages/twitch-downloader-gui) でチェックしてください\n\n## MacOS?\n\nMacOS用のGUIはまだありません。:(\n\n# CLI\n\n### [完全なCLIのドキュメントを見る](TwitchDownloaderCLI/README.md)\n\nCLIはクロスプラットフォームであり、プログラムの主要な機能を実装しています。Windows, Linux, MacOSで動作します<sup>*</sup>。\n\n<sup>*Intel Macのみでテストされています。</sup>\n\nCLIを使用すると、外部スクリプトを使用してビデオ処理を自動化することができます。  \n例えば、以下のコードをWindowsの`.bat`ファイルにコピーペーストすると、アーカイブとそのチャットをダウンロードし、チャットをレンダリングすることができます。\n\n```bat\n@echo off\nset /p vodid=\"Enter VOD ID: \"\nTwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path \"ffmpeg.exe\" -o %vodid%.mp4\nTwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E\nTwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4\n```\n\n## Windows - はじめに\n\n1. [Releases](https://github.com/lay295/TwitchDownloader/releases/)に行き、Windows用の最新バージョンをダウンロードするか[ソースコードからビルドする](#ソースコードからビルドする)\n2. `TwitchDownloaderCLI.exe`を展開する。\n3. 実行ファイルを展開した場所に移動する:\n\n```\ncd C:\\folder\\containing\\TwitchDownloaderCLI\n```\n\n4. FFmpegを持っていない場合は、[Chocolatey package manager](https://community.chocolatey.org/) でインストールするか、[ffmpeg.org](https://ffmpeg.org/download.html) からスタンドアロンファイルとして入手するか、TwitchDownloaderCLIを使用してください:\n\n```\nTwitchDownloaderCLI.exe ffmpeg --download\n```\n\n1. これで、TwitchDownloaderCLIを使用する準備は整いました。例:\n\n```\nTwitchDownloaderCLI.exe videodownload --id <vod-id-here> -o out.mp4\n```\n\nその他のコマンド例は [CLI README](TwitchDownloaderCLI/README.md#example-commands) で見つけることができます。\n\n## Linux – はじめに\n\n1. いくつかのディストリビューション（例えば、Alpine Linuxなど）には、一部の言語（アラビア語、ペルシャ語、タイ語など）のフォントが含まれていません。  \n   このような場合は、[Noto](https://fonts.google.com/noto/specimen/Noto+Sans) のような追加のフォントファミリーをインストールするか、特定のシナリオに対応したインストールコマンドが記載されているディストリビューションのフォントに関するWiki（例えば、[Linux Alpine](https://wiki.alpinelinux.org/wiki/Fonts) のフォントページ）を確認してください。\n2. `fontconfig` と `libfontconfig1` の両方がインストールされていることを確認してください。Ubuntuでは、`apt-get install fontconfig libfontconfig1`\n3. [Releases](https://github.com/lay295/TwitchDownloader/releases/) で、Linux用の最新バイナリをダウンロードする。または Arch Linux の場合は [AUR Package](https://aur.archlinux.org/packages/twitch-downloader-bin/) から入手するか、[ソースコードからビルドする](#ソースコードからビルドする)。\n4. `TwitchDownloaderCLI`を展開する。\n5. バイナリを展開した場所に移動する:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n1. バイナリの実行権限を与える:\n\n```\nsudo chmod +x TwitchDownloaderCLI\n```\n\n7. a) FFmpegを持っていない場合は、使用しているディストリビューションのパッケージマネージャーからシステム全体にインストールする必要がありますが、[ffmpeg.org](https://ffmpeg.org/download.html) からスタンドアロンファイルとして入手するか、TwitchDownloaderCLIを使用して入手することもできます:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n1. b) スタンドアロンファイルとしてダウンロードした場合は、実行権限を与える必要があります。:\n\n```\nsudo chmod +x ffmpeg\n```\n\n9. これで、TwitchDownloaderCLIを使用する準備は整いました。例:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nその他のコマンド例は [CLI README](TwitchDownloaderCLI/README.md#example-commands) で見つけることができます。\n\n## MacOS – Getting started\n\n1. あなたのデバイスが Apple Silicon M シリーズプロセッサを搭載している場合は、arm64 バイナリをダウンロードしてください。ただし、Apple Silicon で x64 バイナリを使用する場合は、Rosetta 2 で実行されたターミナルセッションから実行する必要があります。:\n\n```\narch -x86_64 zsh\n```\n\n1. [Releases](https://github.com/lay295/TwitchDownloader/releases/) で、Mac用の最新バイナリをダウンロードする。または [ソースコードからビルドする](#ソースコードからビルドする)。\n2. `TwitchDownloaderCLI`を展開する。\n3. バイナリを展開した場所に移動する:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n5. ターミナルでバイナリの実行権限を与える:\n```\nchmod +x TwitchDownloaderCLI\n```\n\n1. a) FFmpegを持っていない場合は [Homebrew package manager](https://brew.sh/) からシステム全体にインストールするか、[ffmpeg.org](https://ffmpeg.org/download.html) からスタンドアロンファイルとして入手するか、TwitchDownloaderCLIを使用してください:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n6. b) スタンドアロンファイルとしてダウンロードした場合は、実行権限を与える必要があります:\n\n```\nchmod +x ffmpeg\n```\n\n7. これで、TwitchDownloaderCLIを使用する準備は整いました。例:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nその他のコマンド例は [CLI README](TwitchDownloaderCLI/README.md#example-commands) で見つけることができます。\n\n# ソースコードからビルドする\n\n## 必要条件\n\n- [.NET 6.0.x SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n- 約1GBのディスク空き容量\n\n## ビルド手順\n\n1. リポジトリをクローン:\n\n```\ngit clone https://github.com/lay295/TwitchDownloader.git\n```\n\n2. ソルーションフォルダに移動する:\n\n```\ncd TwitchDownloader\n```\n\n3. ソリューションをリストアする:\n\n```\ndotnet restore\n```\n\n- Windows以外のデバイスでは、リストアするプロジェクトを明示的に指定する必要があります。`dotnet restore TwitchDownloaderCLI`\n\n1. a) GUIをビルドする:\n\n```\ndotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows\n```\n\n4. b) CLIをビルドする:\n\n```\ndotnet publish TwitchDownloaderCLI -p:PublishProfile=<Profile>\n```\n\n- 適用可能なProfile: `Windows`, `Linux`, `LinuxAlpine`, `LinuxArm`, `LinuxArm64`, `MacOS`, `MacOSArm64`\n\n5. a) GUIのビルドフォルダに移動する:\n\n```\ncd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64\n```\n\n1. b) CLIのビルドフォルダに移動する:\n\n```\ncd TwitchDownloaderCLI/bin/Release/net6.0/publish\n```\n\n# Third Party Credits\n\nChat Renders are rendered with [SkiaSharp](https://github.com/mono/SkiaSharp) and [HarfBuzzSharp](https://github.com/mono/SkiaSharp) © Microsoft Corporation.\n\nChat Renders are encoded and Video Downloads are finalized with [FFmpeg](https://ffmpeg.org/) © The FFmpeg developers.\n\nChat Renders may use [Noto Color Emoji](https://github.com/googlefonts/noto-emoji) © Google and contributors.\n\nChat Renders may use [Twemoji](https://github.com/twitter/twemoji) © Twitter and contributors.\n\nBundled FFmpeg binaries are fetched from [gyan.dev](https://www.gyan.dev/ffmpeg/) © Gyan Doshi.\n\nFFmpeg binaries fetched are runtime are downloaded using [Xabe.FFmpeg.Downloader](https://github.com/tomaszzmuda/Xabe.FFmpeg) © Xabe.\n\nChat Html exports utilize the _Inter_ typeface hosted by the [Google Fonts API](https://fonts.google.com/) © Google.\n\nFor a full list of utilized external libraries, see [THIRD-PARTY-LICENSES.txt](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt).\n\n# License\n\n[MIT](./LICENSE.txt)\n\nTwitchDownloaderは、Twitch Interactive, Inc. およびその関連会社とは一切関係ありません。  \n(TwitchDownloader is in no way associated with Twitch Interactive, Inc. or its affiliates.)\n"
        },
        {
          "name": "README_pt-br.md",
          "type": "blob",
          "size": 9.841796875,
          "content": "<div align=\"center\">\n  <a href=\"https://github.com/lay295/TwitchDownloader\">\n    <img src=\"TwitchDownloaderWPF/Images/Logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n  </a>\n  <h3 align=\"center\">Twitch Downloader</h3>\n  <div align=\"center\">\n Baixador de VOD/Clip/Chat da Twitch e Renderizador de Chat\n    <br />\n    <br />\n    <a href=\"https://github.com/lay295/TwitchDownloader/issues\">Report Bug</a>\n  </div>\n</div>\n\n**Este arquivo Readme pode estar desatualizado, considere lê-lo em [**inglês**](README.md)**\n\n## Exemplo do Chat Renderizado\n\n<https://user-images.githubusercontent.com/1060681/197653099-c3fd12c2-f03a-4580-84e4-63ce3f36be8d.mp4>\n\n## O quê ele pode fazer?\n\n- Baixar VODs da Twitch\n- Baixar Clips da Twitch\n- Baixar o chat para VODs e Clips, seja em um arquivo [JSON com todas as informações originais](https://github.com/lay295/TwitchDownloader/files/13495494/ExampleMoonMoonJsonFile.json), um arquivo de browser HTML, ou um [arquivo de texto normal](https://github.com/lay295/TwitchDownloader/files/13495523/ExampleMoonMoonTextFile.txt)\n- Atualizar os conteúdos de um arquivo do chat em JSON gerado préviamente com uma opção para salvar em outro formato\n- Usar um arquivo do chat em JSON gerado préviamente para renderizar o chat com o Twitter Twemoji ou Google Noto Color emojis e emotes BTTV, FFZ, 7TV estáticos e animados\n\n# GUI\n\n## Windows WPF\n\n![](https://i.imgur.com/bLegxGX.gif)\n\n### [Veja a documentação completa do WPF aqui](TwitchDownloaderWPF/README.md)\n\n### Funcionalidade\n\nO GUI do Windows WPF implementa todas as principais funcionalidades do programa acompanhado com umas funcionalidades extras de conveniência:\n\n- Programe múltiplos trabalhos de baixar/renderizar para que funcionem simultâneamente\n- Criar uma lista de arquivos para baixar por uma lista de links de vods/clips\n- Buscar e baixar múltiplos VODs/clips de qualquer streamer sem sair do aplicativo\n\n### Suporte à Múltiplas línguas\n\nO GUI do Windows WPF está disponível em múltiplas linguagens graças à traduções da comunidade. Veja a [Sessão de localização](TwitchDownloaderWPF/README.md#localization) do [WPF README](TwitchDownloaderWPF/README.md) para mais detalhes.\n\n### Tema\n\nO GUI do Windows WPF vêm com tanto o tema claro como o escuro, junto de uma opção para atualizar automaticamente de acordo com o tema do Windows. Ele também suporta temas criados pelo usuário! Veja a [Sessão de Tema](TwitchDownloaderWPF/README.md#theming) dos [WPF README](TwitchDownloaderWPF/README.md) para mais detalhes.\n\n### Demonstração em Vídeo\n\n<https://www.youtube.com/watch?v=0W3MhfhnYjk>\n(versão mais antiga, mesmo conceito)\n\n## Linux?\n\nVeja twitch-downloader-gui no [github](https://github.com/mohad12211/twitch-downloader-gui) ou no [AUR](https://aur.archlinux.org/packages/twitch-downloader-gui) para um GUI wrapper para o CLI Linux .\n\n## MacOS?\n\nNenhum GUI disponível pro MacOS até o momento :(\n\n# CLI\n\n### [Veja a documentação completa do CLI aqui](TwitchDownloaderCLI/README.md)\n\nO CLI é cross-platform e implementa as principais funcionalidades do programa. Funciona no  Windows, Linux, e MacOS<sup>*</sup>.\n\n<sup>*Somente Macs com Intel foram testadas</sup>\n\nCom o CLI, é possível automatizar processamento de vídeo processing com scripts externos. Por exemplo, você poderia copiar e colar o código a seguir num arquivo `.bat` no Windows para baixar um VOD e seu chat, e depois renderizar o chat, tudo de um único valor.\n\n```bat\n@echo off\nset /p vodid=\"Insira a ID da VOD: \"\nTwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path \"ffmpeg.exe\" -o %vodid%.mp4\nTwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E\nTwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4\n```\n\n## Windows - Instalação\n\n1. Vá para [Releases](https://github.com/lay295/TwitchDownloader/releases/) e baixe a versão mais recente para Windows ou [construa do código-fonte](#building-from-source).\n2. Extraia o `TwitchDownloaderCLI.exe`.\n3. Navegue para onde você extraiu o executável:\n\n```\ncd C:\\folder\\containing\\TwitchDownloaderCLI\n```\n\n4. Se você não tem o FFmpeg, você pode instalar-lo via o [gerenciador de pacotes Chocolatey](https://community.chocolatey.org/), todavia também podes obter-lo como um arquivo separado no [ffmpeg.org](https://ffmpeg.org/download.html) ou usando o TwitchDownloaderCLI:\n\n```\nTwitchDownloaderCLI.exe ffmpeg --download\n```\n\n5. Você pode começar a usar o TwitchDownloaderCLI, por exemplo:\n\n```\nTwitchDownloaderCLI.exe videodownload --id <vod-id-here> -o out.mp4\n```\n\nVocê pode encontrar mais comandos no [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n## Linux – Instalação\n\n1. Algumas distros, como o Alpine Linux, não têm fontes para algumas linguagens (Árabe, Persa, Tailandês, etc.) Se este for seu caso, instale fontes familiares adicionais como [Noto](https://fonts.google.com/noto/specimen/Noto+Sans) ou leia a página da wiki de sua distro em fontes, tendo que deve haver um comando de instalação para essa situação específica, como a página de fontes do [Alpine Linux](https://wiki.alpinelinux.org/wiki/Fonts).\n2. Verifique que ambos `fontconfig` e `libfontconfig1` estão instalados. `apt-get install fontconfig libfontconfig1` no Ubuntu.\n3. Vá para [Releases](https://github.com/lay295/TwitchDownloader/releases/) e baixe o binário mais recente pro Linux, pegue o [Pacote AUR](https://aur.archlinux.org/packages/twitch-downloader-bin/) pro Arch Linux, ou [construa do código-fonte](#building-from-source).\n4. Extraia o `TwitchDownloaderCLI`.\n5. Navegue para onde você extraiu o binário:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n6. Dê ao binário direitos de execução:\n\n```\nsudo chmod +x TwitchDownloaderCLI\n```\n\n7. a) Se você não tem o FFmpeg, você deve instalar-lo no sistema todo pelo gerenciador de pacotes da sua distro, todavia também podes obter-lo como um arquivo separado no [ffmpeg.org](https://ffmpeg.org/download.html) ou usando o TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n7. b) Se baixado como um arquivo separado, também deve dar-lo direitos de execução com:\n\n```\nsudo chmod +x ffmpeg\n```\n\n8. Você pode começar usando o TwitchDownloaderCLI, por exemplo:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nVocê pode encontrar mais comandos no [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n## MacOS – Instalação\n\n1. Se seu dispositivo tem um processador série-M Apple Silicon, certifique-se que baixaste o binário do arm64, todavia se você prefere usar o binário em x64 no Apple Silicon deve ser rodado por uma sessão do terminal rodando dentro do Rosetta 2:\n\n```\narch -x86_64 zsh\n```\n\n2. Vá para [Releases](https://github.com/lay295/TwitchDownloader/releases/) e baixe a versão mais recente para MacOS ou [construa do código-fonte](#building-from-source).\n3. Extraia o `TwitchDownloaderCLI`.\n4. Navegue para onde você extraiu o binário:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n5. Dê ao binário direitos de execução:\n\n```\nchmod +x TwitchDownloaderCLI\n```\n\n6. a) Se você não tem o FFmpeg, você deve instalar-lo no sistema todo pelo [gerenciador de pacotes Homebrew](https://brew.sh/), todavia também podes obter-lo como um arquivo separado no [ffmpeg.org](https://ffmpeg.org/download.html) ou usando o TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n6. b) Se baixado como um arquivo separado, também deve dar-lo direitos de execução com:\n\n```\nchmod +x ffmpeg\n```\n\n7. Você pode começar a usar o TwitchDownloaderCLI, por exemplo:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nVocê pode encontrar mais comandos no [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n# Construíndo do código-fonte\n\n## Requerimentos\n\n- [.NET 6.0.x SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n- Mais ou menos 1GB de espaço de disco.\n\n## Instruções para construção\n\n1. Clone o repositório:\n\n```\ngit clone https://github.com/lay295/TwitchDownloader.git\n```\n\n2. Navegue até a pasta da solução:\n\n```\ncd TwitchDownloader\n```\n\n3. Restaure a solução:\n\n```\ndotnet restore\n```\n\n- Dispositivos que não usam Windows devem especificar explicitamente um projeto para restaurar, i.e. `dotnet restore TwitchDownloaderCLI`\n\n4. a) Construa o GUI:\n\n```\ndotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows\n```\n\n- Perfis Aplicáveis: `Windows`, `Linux`, `LinuxAlpine`, `LinuxArm`, `LinuxArm64`, `MacOS`, `MacOSArm64`\n\n5. a) Navegue para a pasta do GUI:\n\n```\ncd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64\n```\n\n5. b) Navegue para a pasta do CLI:\n\n```\ncd TwitchDownloaderCLI/bin/Release/net6.0/publish\n```\n\n# Créditos de terçeiros\n\nRenderizações do Chat são renderizadas com [SkiaSharp](https://github.com/mono/SkiaSharp) e [HarfBuzzSharp](https://github.com/mono/SkiaSharp) © Microsoft Corporation.\n\nRenderizações do Chat são codificados e Downloads do Vídeo são finalizados com [FFmpeg](https://ffmpeg.org/) © The FFmpeg developers.\n\nRenderizações do Chat devem usar [Noto Color Emoji](https://github.com/googlefonts/noto-emoji) © Google e contributors.\n\nRenderizações do Chat devem usar [Twemoji](https://github.com/twitter/twemoji) © Twitter e contributors.\n\nBinários pré-instalados do FFmpeg são pegos do [gyan.dev](https://www.gyan.dev/ffmpeg/) © Gyan Doshi.\n\nBinários do FFmpeg pegos são runtime são baixados usando [Xabe.FFmpeg.Downloader](https://github.com/tomaszzmuda/Xabe.FFmpeg) © Xabe.\n\nExportações do Chat em Html utilizam o typeface _Inter_ hosteados pelo [Google Fonts API](https://fonts.google.com/) © Google.\n\nPara uma lista completa de bibliotecas externas, veja [THIRD-PARTY-LICENSES.txt](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt).\n\n# Licença\n\n[MIT](./LICENSE.txt)\n\nTwitchDownloader não é de modo algum associado com a Twitch Interactive, Inc. ou suas filiais.\n"
        },
        {
          "name": "README_ru.md",
          "type": "blob",
          "size": 13.05859375,
          "content": "<div align=\"center\">\n  <a href=\"https://github.com/lay295/TwitchDownloader\">\n    <img src=\"TwitchDownloaderWPF/Images/Logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n  </a>\n  <h3 align=\"center\">Twitch Downloader</h3>\n  <div align=\"center\">\n    Twitch VOD/Клип/Чат скачиватель и Чат рендер\n    <br />\n    <br />\n    <a href=\"https://github.com/lay295/TwitchDownloader/issues\">Сообщить об ошибке</a>\n  </div>\n</div>\n\n## Пример рендера чата\n\n<https://user-images.githubusercontent.com/1060681/197653099-c3fd12c2-f03a-4580-84e4-63ce3f36be8d.mp4>\n\n## Что эта программа может делать?\n\n- Скачивать Twitch VODs (записи)\n- Скачивать клипы с Twitch`а\n- Скачивать чат для VODs и клипов, в [JSON со всей оригинальной информацией](https://github.com/lay295/TwitchDownloader/files/13495494/ExampleMoonMoonJsonFile.json), a также в браузерный HTML файл, или [обычный txt файл](https://github.com/lay295/TwitchDownloader/files/13495523/ExampleMoonMoonTextFile.txt)\n- Обновить содержание сгенерированного JSON чат файла с опцией сохранить в другом формате\n- Использовать сгенерированный JSON чат файл для рендера чата с смайликами Twitter Twemoji или Google Noto Color Emojis и BTTV, FFZ, 7TV статичныими и анимированными смайликами\n\n# Интерфейс\n\n## Windows WPF\n\n![](https://i.imgur.com/bLegxGX.gif)\n\n### [Полная документация по WPF здесь](TwitchDownloaderWPF/README.md)\n\n### Функциональность\n\n Windows WPF GUI имеет все основные а также жизненно необходимые функции:\n\n- Поставить в очередь несколько задач на скачивание/рендер для одновременного выполнения\n- Создать список задач для скачивания из списка ссылок vod/клипов\n- Поиск и загрузка нескольких VODs/клипов любого стримера не выходя из приложения\n\n### Поддержка нескольких языков\n\nWindows WPF GUI доступен в нескольких языках благодаря сообществу переводчиков. Посмотрите [Раздел локализации](TwitchDownloaderWPF/README.md#localization) из [WPF README](TwitchDownloaderWPF/README.md) для получения более подробной информации.\n\n### Темы\n\nWindows WPF GUI поставляется с светлой и тёмной темой вместе с возможностью подстраиванием под системную тему. Программа также поддерживает пользовательские темы! Посмотрите [Раздел тем](TwitchDownloaderWPF/README.md#theming) из [WPF README](TwitchDownloaderWPF/README.md) для получения более подробной информации.\n\n### Видео демонстрация\n\n<https://www.youtube.com/watch?v=0W3MhfhnYjk>\n(старая версия, концепт тот же)\n\n## Linux?\n\nПосмотрите twitch-downloader-gui на [Гитхабе](https://github.com/mohad12211/twitch-downloader-gui) или на [AUR](https://aur.archlinux.org/packages/twitch-downloader-gui) для GUI оболочки для CLI под Linux.\n\n## MacOS?\n\nGUI не доступен для MacOS пока что :(\n\n# CLI\n\n### [Посмотрите полную документацию по CLI здесь](TwitchDownloaderCLI/README.md)\n\nCLI кросс-платформенная и имеет основные функции программы. Она работает на Windows, Linux, и MacOs*.\n\n<sup>*Протестированы были только Macs с процессором Intel</sup>\n\nС помощью CLI, возможна автоматизация процесса с помощью внешних скриптов. Для примера ниже предоставлен `.bat` код который может быть открыт на Windows. Этот код скачивает VOD и его чат, затем рендерит его, всё от одной команды.\n\n```bat\n@echo off\nset /p vodid=\"Напишите айди VOD: \"\nTwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path \"ffmpeg.exe\" -o %vodid%.mp4\nTwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E\nTwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4\n```\n\n## Windows - Введение\n\n1. Зайдите в [Releases](https://github.com/lay295/TwitchDownloader/releases/) и скачайте последнюю версию для Windows или [сделайте сборку сами](#делаем-свою-сборку).\n2. Достаньте `TwitchDownloaderCLI.exe`.\n3. Закиньте его в папку которую вы хотите:\n\n```\ncd C:\\folder\\containing\\TwitchDownloaderCLI\n```\n\n4. Если у вас нету FFmpeg, вы можете установить его через [Chocolatey package manager](https://community.chocolatey.org/), или вы можете скачать его как standalone файл с [ffmpeg.org](https://ffmpeg.org/download.html) или используя TwitchDownloaderCLI:\n\n```\nTwitchDownloaderCLI.exe ffmpeg --download\n```\n\n5. Теперь вы можете начать использовать TwitchDownloaderCLI, например:\n\n```\nTwitchDownloaderCLI.exe videodownload --id <vod-id-here> -o out.mp4\n```\n\nВы можете найти больше примеров комманд в [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n## Linux – Введение\n\n1. У некоторых дистрибутивов, таких как like Linux Alpine, отсутствуют шрифты для некоторых языков (Арабский, Персидский, Тайский и др.). Если у вас отсутствуют шрифты вам нужно установить семейство шрифтов такие как [Noto](https://fonts.google.com/noto/specimen/Noto+Sans) или проверьте wiki страницу вашего дистрибутива про шрифты, там может быть есть команда установки для этого сценария, например такая есть у [Linux Alpine](https://wiki.alpinelinux.org/wiki/Fonts).\n2. Убедитесь что `fontconfig` и `libfontconfig1` установлены. `apt-get install fontconfig libfontconfig1` напишите эту команда на Ubuntu чтобы установить.\n3. Зайдите в [Releases](https://github.com/lay295/TwitchDownloader/releases/) и скачайте последнюю версию бинарного файла для Linux, получите [AUR Package](https://aur.archlinux.org/packages/twitch-downloader-bin/) для Arch Linux, или [сделайте сборку сами](#делаем-свою-сборку).\n4. Достаньте `TwitchDownloaderCLI`.\n5. Закиньте его в папку которую вы хотите:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n6. Дайте бинарному файлу права:\n\n```\nsudo chmod +x TwitchDownloaderCLI\n```\n\n7. a) Если у вас нет FFmpeg, вам надо установить его через пакетный менеджер вашего дистрибутива или через [ffmpeg.org](https://ffmpeg.org/download.html) как standalone файл, также вы можете скачать его через TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n7. b) Если вы скачали его как standalone файл, вам также нужно дать ему права:\n\n```\nsudo chmod +x ffmpeg\n```\n\n8. Теперь вы можете начать использовать TwitchDownloaderCLI, например:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nВы можете найти больше примеров комманд в [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n## MacOS – Введение\n\n1. Если у вас Apple Silicon M-series процессор, удостоверьтесь что вы скачали arm64 бинарный файл, если же вы хотите использовать x64 бинарный файл на Apple Silicon он должен быть запущен через сессию терминала под Rosetta 2:\n\n```\narch -x86_64 zsh\n```\n\n2. Зайдите в [Releases](https://github.com/lay295/TwitchDownloader/releases/) и скачайте последнюю версию бинарного файла для MacOS или [сделайте сборку сами](#делаем-свою-сборку).\n3. Достаньте TwitchDownloaderCLI.\n4. Закиньте его в папку которую вы хотите:\n\n```\ncd directory/containing/TwitchDownloaderCLI\n```\n\n5. Дайте бинарному файлу права:\n\n```\nchmod +x TwitchDownloaderCLI\n```\n\n6. a) Если у вас нет FFmpeg, вам надо установить его через [Homebrew package manager](https://brew.sh/), или через ffmpeg.org как standalone файл, также вы можете скачать его через TwitchDownloaderCLI:\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n6. b) Если вы скачали его как standalone файл, вам также нужно дать ему права:\n\n```\nchmod +x ffmpeg\n```\n\n7. Теперь вы можете начать использовать TwitchDownloaderCLI, например:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\nВы можете найти больше примеров комманд в [CLI README](TwitchDownloaderCLI/README.md#example-commands).\n\n# Делаем свою сборку\n\n## Требования\n\n- [.NET 6.0.x SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n- Примерно 1GB свободного места\n\n## Инструкции сборки\n\n1. Клонируйте репозиторий:\n\n```\ngit clone https://github.com/lay295/TwitchDownloader.git\n```\n\n2. Откройте папку клонированного репозитория:\n\n```\ncd TwitchDownloader\n```\n\n3. Восстановите решение:\n\n```\ndotnet restore\n```\n\n- Non-Windows устройствам может понадобится указать проект для восстановления тоесть `dotnet restore TwitchDownloaderCLI`\n\n4. a) Собираем GUI версию:\n\n```\ndotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows\n```\n\n4. b) Собираем CLI версию:\n\n```\ndotnet publish TwitchDownloaderCLI -p:PublishProfile=<Профили>\n```\n\n- Существующие профили: `Windows`, `Linux`, `LinuxAlpine`, `LinuxArm`, `LinuxArm64`, `MacOS`, `MacOSArm64`\n\n5. a) Зайдите в папку с GUI сборкой:\n\n```\ncd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64\n```\n\n5. b) Зайдите в папку с CLI сборкой:\n\n```\ncd TwitchDownloaderCLI/bin/Release/net6.0/publish\n```\n\n# Благодарности третьим лицам\n\nРендер чата рендерится с помощью [SkiaSharp](https://github.com/mono/SkiaSharp) и [HarfBuzzSharp](https://github.com/mono/SkiaSharp) © Microsoft Corporation.\n\nКодирование рендера чата и завершение загрузки видео выполнены с помощью [FFmpeg](https://ffmpeg.org/) © The FFmpeg developers.\n\nРендер чата может использовать [Noto Color Emoji](https://github.com/googlefonts/noto-emoji) © Google and contributors.\n\nРендер чата может использовать [Twemoji](https://github.com/twitter/twemoji) © Twitter and contributors.\n\nПоставляемые FFmpeg бинарные файлы загружаются с  [gyan.dev](https://www.gyan.dev/ffmpeg/) © Gyan Doshi.\n\nБинарные файлы FFmpeg загружаемые во время работы приложения, скачиваются с помощью  [Xabe.FFmpeg.Downloader](https://github.com/tomaszzmuda/Xabe.FFmpeg) © Xabe.\n\nЧат формата Html экспортируется используя шрифт _Inter_ размещённый на [Google Fonts API](https://fonts.google.com/) © Google.\n\nЧтобы посмотреть полный список используемых внешних библиотек, посмотрите [THIRD-PARTY-LICENSES.txt](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt).\n\n# License\n\n[MIT](./LICENSE.txt)\n\nTwitchDownloader никак не связан с Twitch Interactive, Inc. или его аффилированным компаниям.\n"
        },
        {
          "name": "README_tr.md",
          "type": "blob",
          "size": 9.029296875,
          "content": "<div align=\"center\">\n  <a href=\"https://github.com/lay295/TwitchDownloader\">\n    <img src=\"TwitchDownloaderWPF/Images/Logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n  </a>\n  <h3 align=\"center\">Twitch İndirici</h3>\n  <div align=\"center\">\n    Twitch VOD/Clip/Chat İndirici ve Chat Oynatıcı\n    <br />\n    <br />\n    <a href=\"https://github.com/lay295/TwitchDownloader/issues\">Hata Bildir</a>\n  </div>\n</div>\n\n## Chat Oynatma Örneği\n\n<https://user-images.githubusercontent.com/1060681/197653099-c3fd12c2-f03a-4580-84e4-63ce3f36be8d.mp4>\n\n## Neler Yapabilir?\n\n- Twitch VOD'larını İndir\n- Twitch Kliplerini İndir\n- VOD'lar ve Klipler için sohbeti, ya [tüm orijinal bilgileri içeren bir JSON olarak](https://pastebin.com/raw/YDgRe6X4), bir tarayıcı HTML dosyası olarak ya da [düz metin dosyası olarak](https://pastebin.com/raw/016azeQX) indirin.\n- Daha önce oluşturulmuş bir JSON sohbet dosyasının içeriğini güncelleyin ve başka bir biçimde kaydetme seçeneğiyle kaydedin.\n- Daha önce oluşturulmuş bir JSON sohbet dosyasını kullanarak sohbeti Twitter Twemoji veya Google Noto Color emojileri ve BTTV, FFZ, 7TV statik ve animasyonlu emojilerle oynatmak için kullanın.\n\n# GUI\n\n## Windows WPF\n\n![](https://i.imgur.com/bLegxGX.gif)\n\n### [Full WPF belgelerini buradan görüntüleyin](TwitchDownloaderWPF/README.md)\n\n### İşlevsellik\n\nWindows WPF GUI, programın tüm ana işlevlerini ve bazı ek yaşam kalitesi işlevlerini uygular:\n\n- Aynı anda çalıştırılacak birden fazla indirme/oynatma işini sıraya alın.\n- VOD/Klip bağlantıları listesinden indirme işlerinin bir listesini oluşturun.\n- Uygulamayı terk etmeden herhangi bir yayıcıdan birden fazla VOD/klip arayın ve indirin.\n\n### Çoklu Dil Desteği\n\nWindows WPF GUI, topluluk çevirileri sayesinde birçok dilde kullanılabilir. Daha fazla ayrıntı için [WPF README](TwitchDownloaderWPF/README.md)'nin [Yerelleştirme bölümüne](TwitchDownloaderWPF/README.md#localization) bakın.\n\n### Temalar\n\nWindows WPF GUI, hem açık hem de karanlık temalar ile gelir ve mevcut Windows temasına göre canlı olarak güncelleme seçeneği sunar. Ayrıca kullanıcı tarafından oluşturulan temaları destekler! Daha fazla ayrıntı için [WPF README](TwitchDownloaderWPF/README.md)'nin [Tema bölümüne](TwitchDownloaderWPF/README.md#theming) bakın.\n\n### Video Gösterimi\n\n<https://www.youtube.com/watch?v=0W3MhfhnYjk>\n(eski sürüm, aynı konsept)\n\n## Linux?\n\n***Nasıl cevireceğimi bilemedim terminal versionu var [githubda](https://github.com/mohad12211/twitch-downloader-gui) gidin ona bakın diyor kısaca birde [AUR'da](https://aur.archlinux.org/packages/twitch-downloader-gui) terminalin biraz süslü gui hali var ona bakabilirsniiz diyor.\n\n## MacOS?\n\nMalesef MacOS için henüz bir GUI mevcut değil :(\n\n# CLI\n\n### [Tüm CLI belgelerini buradan inceleyin](TwitchDownloaderCLI/README.md)\n\nCLI, ana program işlevlerini uygulayan ve Windows, Linux ve MacOS<sup>*</sup> üzerinde çalışan çapraz platformlu bir araçtır.\n\n<sup>*Sadece Intel Mac'ler test edilmiştir</sup>\n\nCLI ile, harici komut dosyalarını kullanarak video işleme işlemini otomatikleştirmek mümkündür. Örneğin, Windows'ta bir `.bat` dosyasına aşağıdaki kodu kopyalayarak bir VOD'u ve onun sohbetini indirebilir ve ardından sohbeti renderlayabilirsiniz.\n\n```bat\n@echo off\nset /p vodid=\"VOD Kimliğini Girin: \"\nTwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path \"ffmpeg.exe\" -o %vodid%.mp4\nTwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E\nTwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4\n```\n\n## Windows - Başlangıç\n\n1. [Releases-Sürümler](https://github.com/lay295/TwitchDownloader/releases/) sayfasına gidin ve en son Windows sürümünü indirin veya [kaynaktan derleyin.](#building-from-source).\n2. `TwitchDownloaderCLI.exe`'yi çıkartın.\n3. Dosyayı çıkardığınız yerde terminal açın.\n4. FFmpeg'e sahip değilseniz,[Chocolatey package manager](https://community.chocolatey.org/) aracılığı ile indirebilir veya bağımsız bir dosya olarak [ffmpeg.org](https://ffmpeg.org/download.html) adresinden alabilir veya TwitchDownloaderCLI kullanarak alabilirsiniz. Şu komutu kullanarak indirebilirsiniz:\n\n```\nTwitchDownloaderCLI.exe ffmpeg --download\n```\n\n5. Artık indirme işlemine başlayabilirsiniz, örneğin:\n\n```\nTwitchDownloaderCLI.exe videodownload --id <vod-id-here> -o out.mp4\n```\n\n## Linux – Başlangıç\n\n1. Bazı dağıtımlar, Linux Alpine gibi, bazı diller için (Arapça, Farsça, Tayca vb.) yazı tiplerini eksik bulabilir. Bu durum sizin için geçerliyse, [Noto](https://fonts.google.com/noto/specimen/Noto+Sans) gibi ek yazı tipleri ailesi yükleyin veya dağıtımınızın yazı tipleri hakkındaki wiki sayfasını kontrol edin, çünkü bu özel senaryo için bir kurulum komutuna sahip olabilir, örneğin [Linux Alpine](https://wiki.alpinelinux.org/wiki/Fonts) yazı tipi sayfası gibi.\n2. `fontconfig` ve `libfontconfig1`'in yüklü olduğundan emin olun. Ubuntu'da `apt-get install fontconfig libfontconfig1` kullanabilirsiniz.\n3. [Sürümler](https://github.com/lay295/TwitchDownloader/releases/) sayfasına gidin ve Linux için en son ikili sürümü indirin, Arch Linux için [AUR Paketi](https://aur.archlinux.org/packages/twitch-downloader-bin/)ni alın veya [kaynaktan derleyin](#building-from-source).\n4. `TwitchDownloaderCLI`'yi çıkarın.\n5. Dosyayı çıkardığınız yere gidin ve terminalde çalıştırılabilir izinleri verin:\n\n```\nsudo chmod +x TwitchDownloaderCLI\n```\n\n6. a) Eğer FFmpeg'e sahip değilseniz, bunu dağıtım paket yöneticiniz aracılığıyla kurmalısınız. Ayrıca, [ffmpeg.org](https://ffmpeg.org/download.html) adresinden bağımsız bir dosya olarak veya TwitchDownloaderCLI kullanarak da edinebilirsiniz.\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n6. b) Bağımsız bir dosya olarak indirildiyse, ona çalıştırılabilir izinler vermelisiniz:\n\n```\nsudo chmod +x ffmpeg\n```\n\n7. Şimdi indiriciyi kullanmaya başlayabilirsiniz, örneğin:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\n## MacOS – Başlangıç\n\n1. [Releases](https://github.com/lay295/TwitchDownloader/releases/) sayfasına gidin ve MacOS için en son sürümü indirin veya kaynaktan derleyin.\n2. `TwitchDownloaderCLI` dosyasını çıkarın.\n3. Dosyayı çıkardığınız yere terminalde çalıştırılabilir izinler verin.\n\n```\nchmod +x TwitchDownloaderCLI\n```\n\n4. a) Eğer FFmpeg'e sahip değilseniz, [Homebrew paket yöneticisi](https://brew.sh/) aracılığıyla kurabilirsiniz veya bağımsız bir dosya olarak [ffmpeg.org](https://ffmpeg.org/download.html) adresinden veya TwitchDownloaderCLI kullanarak edinebilirsiniz.\n\n```\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n4. b) Bağımsız bir dosya olarak indirildiyse, ona çalıştırılabilir izinler vermelisiniz.\n\n```\nchmod +x ffmpeg\n```\n\n5. Şimdi indiriciyi kullanmaya başlayabilirsiniz, örneğin:\n\n```\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\n# Kaynaktan derleme\n\n## Gereksinimler\n\n- [.NET 6.0.x SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n\n## Derleme Talimatları\n\n1. Depoyu klonlayın:\n\n```\ngit clone https://github.com/lay295/TwitchDownloader.git\n```\n\n2. Çözüm klasörüne gidin:\n\n```\ncd TwitchDownloader\n```\n\n3. Çözümü geri yükleyin:\n\n```\ndotnet restore\n```\n\n4. a) GUI'yi oluşturun:\n\n```\ndotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows\n```\n\n4. b) CLI'yi oluşturun:\n\n```\ndotnet publish TwitchDownloaderCLI -p:PublishProfile=<Profile>\n```\n\n- Uygulanabilir Profiller: `Windows`, `Linux`, `LinuxAlpine`, `LinuxArm`, `LinuxArm64`, `MacOS`, `MacOSArm64`\n\n5. a) GUI derleme klasörüne gidin:\n\n```\ncd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64\n```\n\n5. b) CLI derleme klasörüne gidin:\n\n```\ncd TwitchDownloaderCLI/bin/Release/net6.0/publish\n```\n\n# Lisans\n\n[MIT](./LICENSE.txt)\n\n# Üçüncü Taraf Kredileri\n\nSohbet Görüntülemeleri, [SkiaSharp ve HarfBuzzSharp](https://github.com/mono/SkiaSharp) tarafından oluşturulmuştur © Microsoft Corporation.\n\nSohbet Görüntülemeleri işlenmesi ve Video İndirmeleri [FFmpeg](https://ffmpeg.org/) ile sonlandırılır © FFmpeg geliştiricileri.\n\nSohbet Görüntülemeleri, [Noto Renkli Emoji](https://github.com/googlefonts/noto-emoji) tarafından kullanılabilir © Google ve katkıda bulunanlar.\n\nSohbet Görüntülemeleri, [Twemoji](https://github.com/twitter/twemoji) tarafından kullanılabilir © Twitter ve katkıda bulunanlar.\n\nPaketlenmiş FFmpeg ikili dosyaları [gyan.dev](https://www.gyan.dev/ffmpeg/) adresinden alınmıştır © Gyan Doshi.\n\nAlınan FFmpeg ikili dosyaları çalışma zamanında [Xabe.FFmpeg.Downloader](https://github.com/tomaszzmuda/Xabe.FFmpeg) kullanılarak indirilir © Xabe.\n\nSohbet HTML dışa aktarmaları, [Google Fonts API](https://fonts.google.com/) tarafından barındırılan _Inter_ yazı tipini kullanır © Google.\n\nKullanılan tüm harici kütüphanelerin tam listesi için [THIRD-PARTY-LICENSES.txt](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt) dosyasına bakınız.\n"
        },
        {
          "name": "README_zh-cn.md",
          "type": "blob",
          "size": 9.3623046875,
          "content": "<div align=\"center\">\n    <a href=\"https://github.com/lay295/TwitchDownloader\">\n        <img src=\"TwitchDownloaderWPF/Images/Logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n    </a>\n    <h3 align=\"center\">Twitch Downloader</h3>\n    <div align=\"center\">\n        Twitch 点播 / 剪辑 / 聊天下载及聊天渲染\n        <br />\n        <br />\n        <a href=\"https://github.com/lay295/TwitchDownloader/issues\">\n            反馈漏洞\n        </a>\n    </div>\n</div>\n\n## 聊天渲染示例\n\n<https://user-images.githubusercontent.com/1060681/197653099-c3fd12c2-f03a-4580-84e4-63ce3f36be8d.mp4>\n\n## 它能做什么？\n\n- 下载 Twitch 点播\n- 下载 Twitch 剪辑\n- 以 [包含所有原始信息的 JSON](https://github.com/lay295/TwitchDownloader/files/13495494/ExampleMoonMoonJsonFile.json)、浏览器 HTML 文件或 [纯文本文件](https://github.com/lay295/TwitchDownloader/files/13495523/ExampleMoonMoonTextFile.txt) 的形式下载点播和剪辑的聊天内容\n- 更新之前生成的 JSON 聊天文件的内容，并提供另一种格式的保存选项\n- 使用之前生成的 JSON 聊天文件，用 Twitter Twemoji 或 Google Noto Color 表情符号以及 BTTV、FFZ、7TV 静态和动画表情来呈现聊天内容\n\n# GUI\n\n## Windows 呈现基础 (WPF)\n\n![WindowsWPF](https://i.imgur.com/bLegxGX.gif)\n\n### [点击此处查看完整的 WPF 文档（英语）](TwitchDownloaderWPF/README.md)\n\n### 功能介绍\n\nWindows WPF GUI 实现了程序的所有主要功能以及一些额外的提升效率的功能：\n\n- 排队同时运行多个下载 / 渲染任务\n- 从点播 / 剪辑链接列表中创建下载任务列表\n- 搜索并下载来自任何流媒体的多个点播 / 剪辑，无需离开应用程序\n\n### 多语言支持\n\n通过社区翻译，Windows WPF GUI 有多种语言版本。请参阅 [WPF 自述文件（英语）](TwitchDownloaderWPF/README.md)的 [本地化部分](TwitchDownloaderWPF/README.md#localization)。\n\n### 主题\n\nWindows WPF GUI 内置了浅色和深色主题，以及根据当前 Windows 主题进行实时更新的选项。它还支持用户创建主题！更多详情，请参阅 [WPF 自述文件（英语）](TwitchDownloaderWPF/README.md)的 [主题部分](TwitchDownloaderWPF/README.md#theming)。\n\n### 视频演示\n\n<https://www.youtube.com/watch?v=0W3MhfhnYjk>\n（旧版，概念相同）\n\n## Linux?\n\n请查看 [Github](https://github.com/mohad12211/twitch-downloader-gui) 上的 twitch-downloader-gui 或 [AUR](https://aur.archlinux.org/packages/twitch-downloader-gui) 上的 CLI 的 Linux GUI 封装程序。\n\n## MacOS?\n\n目前还没有适用于 MacOS 的 GUI 版本 :(\n\n# CLI\n\n### [点击此处查看完整的 CLI 文档](TwitchDownloaderCLI/README.md)\n\nCLI 是跨平台的，可以实现程序的主要功能。它可在 Windows、Linux 和 MacOS<sup>*</sup> 上运行。\n\n<sup>*仅对 Intel Mac 进行了测试</sup>\n\n通过 CLI，可以使用外部脚本自动处理视频。例如，你可以在 Windows 上将以下代码复制粘贴到 `.bat` 文件中，下载点播及其聊天内容，然后渲染聊天内容，所有这些都只需一次输入。\n\n```bat\n@echo off\nset /p vodid=\"输入点播 ID：\"\nTwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path \"ffmpeg.exe\" -o %vodid%.mp4\nTwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E\nTwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4\n```\n\n## Windows - 开始\n\n1. 前往 [发行版页面](https://github.com/lay295/TwitchDownloader/releases/) 并下载最新的 Windows 版本或 [从源代码构建](#building-from-source)。\n2. 提取 `TwitchDownloaderCLI.exe`。\n3. 打开可执行文件放置的位置：\n\n```命令\ncd C:\\folder\\containing\\TwitchDownloaderCLI\n```\n\n4. 如果没有 FFmpeg，可以通过 [Chocolatey 程序包管理器](https://community.chocolatey.org/) 安装，也可以从 [ffmpeg.org](https://ffmpeg.org/download.html) 或使用 TwitchDownloaderCLI 以独立文件的形式获取：\n\n```命令\nTwitchDownloaderCLI.exe ffmpeg --download\n```\n\n5. 你现在可以开始使用 TwitchDownloaderCLI 了，例如：\n\n```命令\nTwitchDownloaderCLI.exe videodownload --id <点播 ID> -o out.mp4\n```\n\n更多命令示例请参阅 [CLI 自述文件](TwitchDownloaderCLI/README.md#example-commands)。\n\n## Linux – 开始\n\n1. 有些发行版，如 Linux Alpine，缺少某些语言（阿拉伯语、波斯语、泰语等）的字体。如果是这种情况，请安装额外的字体系列，如 [Noto Sans](https://fonts.google.com/noto/specimen/Noto+Sans)，或者查看发行版的字体 Wiki 页面，因为它可能有针对这种特定情况的安装命令，如 [Linux Alpine](https://wiki.alpinelinux.org/wiki/Fonts) 字体页面。\n2. 确保 `fontconfig` 和 `libfontconfig1` 都已安装。在 Ubuntu 上运行 `apt-get install fontconfig libfontconfig1`。\n3. 前往 [发行版页面](https://github.com/lay295/TwitchDownloader/releases/) 并下载最新的 Linux 版本抓取适用于 Arch Linux 的 [AUR 软件包](https://aur.archlinux.org/packages/twitch-downloader-bin/)，或 [从源代码构建](#building-from-source)。\n4. 提取 `TwitchDownloaderCLI`。\n5. 打开二进制可执行文件放置的目录：\n\n```命令\ncd directory/containing/TwitchDownloaderCLI\n```\n\n6. 授予二进制可执行文件权限：\n\n```命令\nsudo chmod +x TwitchDownloaderCLI\n```\n\n7. a) 如果没有 FFmpeg，可以通过 [Chocolatey 程序包管理器](https://community.chocolatey.org/) 安装，也可以从 [ffmpeg.org](https://ffmpeg.org/download.html) 或使用 TwitchDownloaderCLI 以独立文件的形式获取：\n\n```命令\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n7. b) 如果下载的是独立文件，还必须授予其可执行权限：\n\n```命令\nsudo chmod +x ffmpeg\n```\n\n8. 你现在可以开始使用 TwitchDownloaderCLI 了，例如：\n\n```命令\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\n更多命令示例请参阅 [CLI 自述文件](TwitchDownloaderCLI/README.md#example-commands)。\n\n## MacOS – 开始\n\n1. 如果你的设备使用的是 Apple Silicon M 系列处理器，请确保下载了 arm64 二进制文件，但如果你想在 Apple Silicon 上使用 x64 二进制文件，则必须在 Rosetta 2 下通过终端会话运行：\n\n```命令\narch -x86_64 zsh\n```\n\n2. 前往 [发行版页面](https://github.com/lay295/TwitchDownloader/releases/) 并下载最新的 MacOS 版本或 [从源代码构建](#building-from-source)。\n3. 提取 `TwitchDownloaderCLI`。\n4. 打开二进制可执行文件放置的目录：\n\n```命令\ncd directory/containing/TwitchDownloaderCLI\n```\n\n5. 授予二进制可执行文件在终端中的权限：\n\n```命令\nchmod +x TwitchDownloaderCLI\n```\n\n6. a) 如果没有 FFmpeg，可以通过 [Homebrew 程序包管理器](https://brew.sh/) 在整个系统中安装，也可以从 [ffmpeg.org](https://ffmpeg.org/download.html) 或使用 TwitchDownloaderCLI 以独立文件的形式获取：\n\n```命令\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n6. b) 如果下载的是独立文件，还必须授予其可执行权限：\n\n```命令\nchmod +x ffmpeg\n```\n\n7. 你现在可以开始使用 TwitchDownloaderCLI 了，例如：\n\n```命令\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\n更多命令示例请参阅 [CLI 自述文件](TwitchDownloaderCLI/README.md#example-commands)。\n\n# 从源代码构建\n\n## 要求\n\n- [.NET 6.0.x SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n- 约 1GB 磁盘空间\n\n## 构建说明\n\n1. 克隆此仓库：\n\n```命令\ngit clone https://github.com/lay295/TwitchDownloader.git\n```\n\n2. 定位至 solution 文件夹：\n\n```命令\ncd TwitchDownloader\n```\n\n3. 还原 solution：\n\n```命令\ndotnet restore\n```\n\n- 非 Windows 设备可能需要明确指定要还原的项目，即 `dotnet restore TwitchDownloaderCLI`\n\n4. a) 构建 GUI：\n\n```命令\ndotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows\n```\n\n4. b) 构建 CLI：\n\n```命令\ndotnet publish TwitchDownloaderCLI -p:PublishProfile=<Profile>\n```\n\n- 可接受的配置文件：`Windows`、`Linux`、`LinuxAlpine`、`LinuxArm`、`LinuxArm64`、`MacOS`、`MacOSArm64`\n\n5. a) 定位至 GUI 构建文件夹：\n\n```命令\ncd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64\n```\n\n5. b) 定位至 CLI 构建文件夹：\n\n```命令\ncd TwitchDownloaderCLI/bin/Release/net6.0/publish\n```\n\n# 第三方贡献\n\n聊天渲染使用 [SkiaSharp](https://github.com/mono/SkiaSharp) 和 [HarfBuzzSharp](https://github.com/mono/SkiaSharp) © Microsoft 公司。\n\n对聊天渲染进行编码，并最终完成视频下载使用 [FFmpeg](https://ffmpeg.org/) © FFmpeg 开发者。\n\n聊天渲染可能会使用 [Noto Color 表情符号](https://github.com/googlefonts/noto-emoji) © Google 及其贡献者。\n\n聊天渲染可能会使用 [Twemoji](https://github.com/twitter/twemoji) © Twitter 及其贡献者。\n\n内置的 FFmpeg 二进制文件取自 [gyan.dev](https://www.gyan.dev/ffmpeg/) © Gyan Doshi。\n\nFFmpeg 二进制文件和运行时的下载使用 [Xabe.FFmpeg.Downloader](https://github.com/tomaszzmuda/Xabe.FFmpeg) © Xabe。\n\n聊天 Html 导出使用的 _Inter_ 字体由 [Google Fonts API](https://fonts.google.com/) 托管 © Google。\n\n有关使用的外部库的完整列表，请参阅 [THIRD-PARTY-LICENSES.txt（英文）](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt)。\n\n# 开源许可协议\n\n[MIT](./LICENSE.txt)\n\nTwitchDownloader 与 Twitch Interactive, Inc. 及其附属公司没有任何关联。\n"
        },
        {
          "name": "README_zh-tw.md",
          "type": "blob",
          "size": 9.3916015625,
          "content": "<div align=\"center\">\n    <a href=\"https://github.com/lay295/TwitchDownloader\">\n        <img src=\"TwitchDownloaderWPF/Images/Logo.png\" alt=\"Logo\" width=\"80\" height=\"80\">\n    </a>\n    <h3 align=\"center\">Twitch Downloader</h3>\n    <div align=\"center\">\n        Twitch 點播 / 剪輯 / 聊天下載及聊天渲染\n        <br />\n        <br />\n        <a href=\"https://github.com/lay295/TwitchDownloader/issues\">\n            反饋漏洞\n        </a>\n    </div>\n</div>\n\n## 聊天渲染示例\n\n<https://user-images.githubusercontent.com/1060681/197653099-c3fd12c2-f03a-4580-84e4-63ce3f36be8d.mp4>\n\n## 它能做什麼？\n\n- 下載 Twitch 點播\n- 下載 Twitch 剪輯\n- 以 [包含所有原始資訊的 JSON](https://github.com/lay295/TwitchDownloader/files/13495494/ExampleMoonMoonJsonFile.json)、瀏覽器 HTML 檔案或 [純文字檔案](https://github.com/lay295/TwitchDownloader/files/13495523/ExampleMoonMoonTextFile.txt) 的形式下載點播和剪輯的聊天內容\n- 更新之前生成的 JSON 聊天檔案的內容，並提供另一種格式的儲存選項\n- 使用之前生成的 JSON 聊天檔案，用 Twitter Twemoji 或 Google Noto Color 表情符號以及 BTTV、FFZ、7TV 靜態和動畫表情來呈現聊天內容\n\n# GUI\n\n## Windows 呈現基礎 (WPF)\n\n![WindowsWPF](https://i.imgur.com/bLegxGX.gif)\n\n### [點選此處檢視完整的 WPF 文件（英語）](TwitchDownloaderWPF/README.md)\n\n### 功能介紹\n\nWindows WPF GUI 實現了程式的所有主要功能以及一些額外的提升效率的功能：\n\n- 排隊同時執行多個下載 / 渲染任務\n- 從點播 / 剪輯連結列表中建立下載任務列表\n- 搜尋並下載來自任何流媒體的多個點播 / 剪輯，無需離開應用程式\n\n### 多語言支援\n\n透過社群翻譯，Windows WPF GUI 有多種語言版本。請參閱 [WPF 自述檔案（英語）](TwitchDownloaderWPF/README.md)的 [本地化部分](TwitchDownloaderWPF/README.md#localization)。\n\n### 主題\n\nWindows WPF GUI 內建了淺色和深色主題，以及根據當前 Windows 主題進行實時更新的選項。它還支援使用者建立主題！更多詳情，請參閱 [WPF 自述檔案（英語）](TwitchDownloaderWPF/README.md)的 [主題部分](TwitchDownloaderWPF/README.md#theming)。\n\n### 影片演示\n\n<https://www.youtube.com/watch?v=0W3MhfhnYjk>\n（舊版，概念相同）\n\n## Linux?\n\n請檢視 [Github](https://github.com/mohad12211/twitch-downloader-gui) 上的 twitch-downloader-gui 或 [AUR](https://aur.archlinux.org/packages/twitch-downloader-gui) 上的 CLI 的 Linux GUI 封裝程式。\n\n## MacOS?\n\n目前還沒有適用於 MacOS 的 GUI 版本 :(\n\n# CLI\n\n### [點選此處檢視完整的 CLI 文件](TwitchDownloaderCLI/README.md)\n\nCLI 是跨平臺的，可以實現程式的主要功能。它可在 Windows、Linux 和 MacOS<sup>*</sup> 上執行。\n\n<sup>*僅對 Intel Mac 進行了測試</sup>\n\n透過 CLI，可以使用外部指令碼自動處理影片。例如，你可以在 Windows 上將以下程式碼複製貼上到 `.bat` 檔案中，下載點播及其聊天內容，然後渲染聊天內容，所有這些都只需一次輸入。\n\n```bat\n@echo off\nset /p vodid=\"輸入點播 ID：\"\nTwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path \"ffmpeg.exe\" -o %vodid%.mp4\nTwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E\nTwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4\n```\n\n## Windows - 開始\n\n1. 前往 [Release 頁面](https://github.com/lay295/TwitchDownloader/releases/) 並下載最新的 Windows 版本或 [從原始碼構建](#building-from-source)。\n2. 提取 `TwitchDownloaderCLI.exe`。\n3. 開啟可執行檔案放置的位置：\n\n```命令\ncd C:\\folder\\containing\\TwitchDownloaderCLI\n```\n\n4. 如果沒有 FFmpeg，可以透過 [Chocolatey 程式包管理器](https://community.chocolatey.org/) 安裝，也可以從 [ffmpeg.org](https://ffmpeg.org/download.html) 或使用 TwitchDownloaderCLI 以獨立檔案的形式獲取：\n\n```命令\nTwitchDownloaderCLI.exe ffmpeg --download\n```\n\n5. 你現在可以開始使用 TwitchDownloaderCLI 了，例如：\n\n```命令\nTwitchDownloaderCLI.exe videodownload --id <點播 ID> -o out.mp4\n```\n\n更多命令示例請參閱 [CLI 自述檔案](TwitchDownloaderCLI/README.md#example-commands)。\n\n## Linux – 開始\n\n1. 有些發行版，如 Linux Alpine，缺少某些語言（阿拉伯語、波斯語、泰語等）的字型。如果是這種情況，請安裝額外的字體系列，如 [Noto Sans](https://fonts.google.com/noto/specimen/Noto+Sans)，或者檢視發行版的字型 Wiki 頁面，因為它可能有針對這種特定情況的安裝命令，如 [Linux Alpine](https://wiki.alpinelinux.org/wiki/Fonts) 字型頁面。\n2. 確保 `fontconfig` 和 `libfontconfig1` 都已安裝。在 Ubuntu 上執行 `apt-get install fontconfig libfontconfig1`。\n3. 前往 [Release 頁面](https://github.com/lay295/TwitchDownloader/releases/) 並下載最新的 Linux 版本抓取適用於 Arch Linux 的 [AUR 軟體包](https://aur.archlinux.org/packages/twitch-downloader-bin/)，或 [從原始碼構建](#building-from-source)。\n4. 提取 `TwitchDownloaderCLI`。\n5. 開啟二進位制可執行檔案放置的目錄：\n\n```命令\ncd directory/containing/TwitchDownloaderCLI\n```\n\n6. 授予二進位制可執行檔案權限：\n\n```命令\nsudo chmod +x TwitchDownloaderCLI\n```\n\n7. a) 如果沒有 FFmpeg，可以透過 [Chocolatey 程式包管理器](https://community.chocolatey.org/) 安裝，也可以從 [ffmpeg.org](https://ffmpeg.org/download.html) 或使用 TwitchDownloaderCLI 以獨立檔案的形式獲取：\n\n```命令\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n7. b) 如果下載的是獨立檔案，還必須授予其可執行權限：\n\n```命令\nsudo chmod +x ffmpeg\n```\n\n8. 你現在可以開始使用 TwitchDownloaderCLI 了，例如：\n\n```命令\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\n更多命令示例請參閱 [CLI 自述檔案](TwitchDownloaderCLI/README.md#example-commands)。\n\n## MacOS – 開始\n\n1. 如果你的裝置使用的是 Apple Silicon M 系列處理器，請確保下載了 arm64 二進位制檔案，但如果你想在 Apple Silicon 上使用 x64 二進位制檔案，則必須在 Rosetta 2 下透過終端會話執行：\n\n```命令\narch -x86_64 zsh\n```\n\n2. 前往 [Release 頁面](https://github.com/lay295/TwitchDownloader/releases/) 並下載最新的 MacOS 版本或 [從原始碼構建](#building-from-source)。\n3. 提取 `TwitchDownloaderCLI`。\n4. 開啟二進位制可執行檔案放置的目錄：\n\n```命令\ncd directory/containing/TwitchDownloaderCLI\n```\n\n5. 授予二進位制可執行檔案在終端中的權限：\n\n```命令\nchmod +x TwitchDownloaderCLI\n```\n\n6. a) 如果沒有 FFmpeg，可以透過 [Homebrew 程式包管理器](https://brew.sh/) 在整個系統中安裝，也可以從 [ffmpeg.org](https://ffmpeg.org/download.html) 或使用 TwitchDownloaderCLI 以獨立檔案的形式獲取：\n\n```命令\n./TwitchDownloaderCLI ffmpeg --download\n```\n\n6. b) 如果下載的是獨立檔案，還必須授予其可執行權限：\n\n```命令\nchmod +x ffmpeg\n```\n\n7. 你現在可以開始使用 TwitchDownloaderCLI 了，例如：\n\n```命令\n./TwitchDownloaderCLI videodownload --id <vod-id-here> -o out.mp4\n```\n\n更多命令示例請參閱 [CLI 自述檔案](TwitchDownloaderCLI/README.md#example-commands)。\n\n# 從原始碼構建\n\n## 要求\n\n- [.NET 6.0.x SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n- 約 1GB 磁碟空間\n\n## 構建說明\n\n1. 克隆此倉庫：\n\n```命令\ngit clone https://github.com/lay295/TwitchDownloader.git\n```\n\n2. 定位至 solution 資料夾：\n\n```命令\ncd TwitchDownloader\n```\n\n3. 還原 solution：\n\n```命令\ndotnet restore\n```\n\n- 非 Windows 裝置可能需要明確指定要還原的專案，即 `dotnet restore TwitchDownloaderCLI`\n\n4. a) 構建 GUI：\n\n```命令\ndotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows\n```\n\n4. b) 構建 CLI：\n\n```命令\ndotnet publish TwitchDownloaderCLI -p:PublishProfile=<Profile>\n```\n\n- 可接受的配置檔案：`Windows`、`Linux`、`LinuxAlpine`、`LinuxArm`、`LinuxArm64`、`MacOS`、`MacOSArm64`\n\n5. a) 定位至 GUI 構建資料夾：\n\n```命令\ncd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64\n```\n\n5. b) 定位至 CLI 構建資料夾：\n\n```命令\ncd TwitchDownloaderCLI/bin/Release/net6.0/publish\n```\n\n# 第三方貢獻\n\n聊天渲染使用 [SkiaSharp](https://github.com/mono/SkiaSharp) 和 [HarfBuzzSharp](https://github.com/mono/SkiaSharp) © Microsoft 公司。\n\n對聊天渲染進行編碼，並最終完成影片下載使用 [FFmpeg](https://ffmpeg.org/) © FFmpeg 開發者。\n\n聊天渲染可能會使用 [Noto Color 表情符號](https://github.com/googlefonts/noto-emoji) © Google 及其貢獻者。\n\n聊天渲染可能會使用 [Twemoji](https://github.com/twitter/twemoji) © Twitter 及其貢獻者。\n\n內建的 FFmpeg 二進位制檔案取自 [gyan.dev](https://www.gyan.dev/ffmpeg/) © Gyan Doshi。\n\nFFmpeg 二進位制檔案和執行時的下載使用 [Xabe.FFmpeg.Downloader](https://github.com/tomaszzmuda/Xabe.FFmpeg) © Xabe。\n\n聊天 Html 匯出使用的 _Inter_ 字型由 [Google Fonts API](https://fonts.google.com/) 託管 © Google。\n\n有關使用的外部庫的完整列表，請參閱 [THIRD-PARTY-LICENSES.txt（英文）](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt)。\n\n# 開源許可協議\n\n[MIT](./LICENSE.txt)\n\nTwitchDownloader 與 Twitch Interactive, Inc. 及其附屬公司沒有任何關聯。\n"
        },
        {
          "name": "TwitchDownloaderCLI.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TwitchDownloaderCLI",
          "type": "tree",
          "content": null
        },
        {
          "name": "TwitchDownloaderCore.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TwitchDownloaderCore",
          "type": "tree",
          "content": null
        },
        {
          "name": "TwitchDownloaderWPF.sln",
          "type": "blob",
          "size": 4.6513671875,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.31903.59\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"TwitchDownloaderWPF\", \"TwitchDownloaderWPF\\TwitchDownloaderWPF.csproj\", \"{A5940F4D-027D-4F9E-9F65-C0D842807BE1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"TwitchDownloaderCore\", \"TwitchDownloaderCore\\TwitchDownloaderCore.csproj\", \"{3984E19D-EAA0-4D85-95CF-88DCD0D9316B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"TwitchDownloaderCLI\", \"TwitchDownloaderCLI\\TwitchDownloaderCLI.csproj\", \"{F14A9B02-36A4-4FFF-9AD0-7475E2CF2D5C}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TwitchDownloaderCore.Tests\", \"TwitchDownloaderCore.Tests\\TwitchDownloaderCore.Tests.csproj\", \"{FE8F0DC2-6750-4956-9208-9CEE9B524184}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TwitchDownloaderCLI.Tests\", \"TwitchDownloaderCLI.Tests\\TwitchDownloaderCLI.Tests.csproj\", \"{2AC32E05-56EE-41E2-BAFD-94C3FE900057}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{A5940F4D-027D-4F9E-9F65-C0D842807BE1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A5940F4D-027D-4F9E-9F65-C0D842807BE1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A5940F4D-027D-4F9E-9F65-C0D842807BE1}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{A5940F4D-027D-4F9E-9F65-C0D842807BE1}.Debug|x64.Build.0 = Debug|x64\n\t\t{A5940F4D-027D-4F9E-9F65-C0D842807BE1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A5940F4D-027D-4F9E-9F65-C0D842807BE1}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A5940F4D-027D-4F9E-9F65-C0D842807BE1}.Release|x64.ActiveCfg = Release|x64\n\t\t{A5940F4D-027D-4F9E-9F65-C0D842807BE1}.Release|x64.Build.0 = Release|x64\n\t\t{3984E19D-EAA0-4D85-95CF-88DCD0D9316B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{3984E19D-EAA0-4D85-95CF-88DCD0D9316B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{3984E19D-EAA0-4D85-95CF-88DCD0D9316B}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{3984E19D-EAA0-4D85-95CF-88DCD0D9316B}.Debug|x64.Build.0 = Debug|x64\n\t\t{3984E19D-EAA0-4D85-95CF-88DCD0D9316B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{3984E19D-EAA0-4D85-95CF-88DCD0D9316B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{3984E19D-EAA0-4D85-95CF-88DCD0D9316B}.Release|x64.ActiveCfg = Release|x64\n\t\t{3984E19D-EAA0-4D85-95CF-88DCD0D9316B}.Release|x64.Build.0 = Release|x64\n\t\t{F14A9B02-36A4-4FFF-9AD0-7475E2CF2D5C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F14A9B02-36A4-4FFF-9AD0-7475E2CF2D5C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F14A9B02-36A4-4FFF-9AD0-7475E2CF2D5C}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{F14A9B02-36A4-4FFF-9AD0-7475E2CF2D5C}.Debug|x64.Build.0 = Debug|x64\n\t\t{F14A9B02-36A4-4FFF-9AD0-7475E2CF2D5C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F14A9B02-36A4-4FFF-9AD0-7475E2CF2D5C}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F14A9B02-36A4-4FFF-9AD0-7475E2CF2D5C}.Release|x64.ActiveCfg = Release|x64\n\t\t{F14A9B02-36A4-4FFF-9AD0-7475E2CF2D5C}.Release|x64.Build.0 = Release|x64\n\t\t{FE8F0DC2-6750-4956-9208-9CEE9B524184}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{FE8F0DC2-6750-4956-9208-9CEE9B524184}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{FE8F0DC2-6750-4956-9208-9CEE9B524184}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{FE8F0DC2-6750-4956-9208-9CEE9B524184}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{FE8F0DC2-6750-4956-9208-9CEE9B524184}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{FE8F0DC2-6750-4956-9208-9CEE9B524184}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{FE8F0DC2-6750-4956-9208-9CEE9B524184}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{FE8F0DC2-6750-4956-9208-9CEE9B524184}.Release|x64.Build.0 = Release|Any CPU\n\t\t{2AC32E05-56EE-41E2-BAFD-94C3FE900057}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2AC32E05-56EE-41E2-BAFD-94C3FE900057}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2AC32E05-56EE-41E2-BAFD-94C3FE900057}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{2AC32E05-56EE-41E2-BAFD-94C3FE900057}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{2AC32E05-56EE-41E2-BAFD-94C3FE900057}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2AC32E05-56EE-41E2-BAFD-94C3FE900057}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2AC32E05-56EE-41E2-BAFD-94C3FE900057}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{2AC32E05-56EE-41E2-BAFD-94C3FE900057}.Release|x64.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {02B42040-EA74-42BA-B12E-4308284E432A}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "TwitchDownloaderWPF",
          "type": "tree",
          "content": null
        },
        {
          "name": "WHERE IS THE EXE.txt",
          "type": "blob",
          "size": 0.23046875,
          "content": "Hello friend :) you've accidentally downloaded the program's source code, not a binary which you can run.\n\nYou can go here and download the newest release to get something you can run.\nhttps://github.com/lay295/TwitchDownloader/releases"
        }
      ]
    }
  ]
}