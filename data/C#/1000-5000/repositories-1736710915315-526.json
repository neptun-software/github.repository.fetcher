{
  "metadata": {
    "timestamp": 1736710915315,
    "page": 526,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Cenmrev/V2RayW",
      "stars": 2047,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.693359375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# macOS feature\n.DS_Store\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\n[Xx]64/\n[Xx]86/\n[Bb]uild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# TODO: Un-comment the next line if you do not want to checkin\n# your web deploy settings because they may include unencrypted\n# passwords\n#*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directory\nAppPackages/\nBundleArtifacts/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# LightSwitch generated files\nGeneratedArtifacts/\nModelManifest.xml\n\n# Paket dependency manager\n.paket/paket.exe\n\n# FAKE - F# Make\n.fake/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "MIT License\n\nCopyright (c) 2016 Cenmrev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.92578125,
          "content": "# V2RayW: A simple GUI for V2Ray on Windows\n\n## What is V2Ray?\n\n[Project V2Ray](https://www.v2ray.com).\n\n## Download V2RayW\n\n[Releases](https://github.com/Cenmrev/V2RayW/releases)\n\n## How deos V2RayW work\n\nV2RayW.exe provides a GUI to generate the config file for v2ray-core (v2ray.exe). It also allow users to change Windows proxy settings and switch proxy servers on the system tray.\n\n### Add V2RayW to startup\n\n[English](http://tunecomp.net/add-app-to-startup/) \n[中文](http://jingyan.baidu.com/article/90895e0ff3a41f64ec6b0bc3.html)\n\n### Reset V2RayW\n\nDelete `settings.json` in the same folder as `V2RayW.exe`.\n\n## Disclaimer\n\nThe developer does not major in CS nor Software Engineer and currently is busy with grad school courses. So V2rayW will not be updated frequently. The developer may not have enough time to add more features to V2RayW, nor to merge pull requests. However, forking and releasing your own version are always welcome.\n\n"
        },
        {
          "name": "V2RayW.sln",
          "type": "blob",
          "size": 1.0654296875,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 15\nVisualStudioVersion = 15.0.28307.271\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"V2RayW\", \"V2RayW\\V2RayW.csproj\", \"{BCEE16B7-8717-4A17-9F4A-AD36E8BBCAA8}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{BCEE16B7-8717-4A17-9F4A-AD36E8BBCAA8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BCEE16B7-8717-4A17-9F4A-AD36E8BBCAA8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BCEE16B7-8717-4A17-9F4A-AD36E8BBCAA8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BCEE16B7-8717-4A17-9F4A-AD36E8BBCAA8}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {428B4D4C-9552-4212-9B8A-4CB0A0E62551}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "V2RayW",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.2724609375,
          "content": "# version format\nversion: 1.0.{build}\n\n# branches to build\nbranches:\n  only:\n    - master\n\n# Maximum number of concurrent jobs for the project\nmax_jobs: 1\n\n#---------------------------------#\n#    environment configuration    #\n#---------------------------------#\n\n# Build worker image (VM template)\nimage: Visual Studio 2017\n\n#---------------------------------#\n#       build configuration       #\n#---------------------------------#\n\nplatform: Any CPU\nconfiguration: Release\n\n# scripts to run before build\nbefore_build:\n  - cmd: nuget restore\n\nbuild:\n  project: V2RayW.sln      # path to Visual Studio solution or project\n  verbosity: minimal\n\nafter_build:\n  - cmd: 7z a V2RayW.zip %APPVEYOR_BUILD_FOLDER%\\V2RayW\\bin\\Release\\V2RayW.exe %APPVEYOR_BUILD_FOLDER%\\V2RayW\\bin\\Release\\zh-CN\n  - ps: $env:istagged = (git describe --exact-match HEAD | Select-String -Pattern \"fatal\").length -eq 0\n  - ps: $env:isbeta = (git describe --exact-match HEAD |  Select-String -Pattern \"beta\").length -ne 0\n  - ps: echo $env:istagged $env:isbeta\n\n#---------------------------------#\n#      artifacts configuration    #\n#---------------------------------#\n \nartifacts:\n  - path: V2RayW.zip\n\n\n#---------------------------------#\n#     deployment configuration    #\n#---------------------------------#\n\nbefore_deploy:\n  - ps: $env:tagname = (git describe --exact-match HEAD)\n  - ps: $env:releasenote = (git tag -l --format='%(contents)' $env:tagname) | select -Skip 2 | Out-String\n  - ps: echo $env:tagname $env:releasenote\n\ndeploy:\n\n  - provider: GitHub\n    name: release\n    release: $(tagname)\n    description: \"\"\n    auth_token: \n      secure: RsMjUapfJ/SjOmZ/WO8LGnyM1Xxr11QoY4QQbQQW+Utdgmw39sAx9EjmC1vhEkji\n    artifact: V2RayW.zip           \n    draft: false\n    prerelease: false\n    on:\n      branch: master                # release from master branch only\n      istagged: true       # deploy on tag push only\n      isbeta: false\n\n  - provider: GitHub\n    name: prerelease\n    release: $(tagname)\n    description: \"\"\n    auth_token: \n      secure: RsMjUapfJ/SjOmZ/WO8LGnyM1Xxr11QoY4QQbQQW+Utdgmw39sAx9EjmC1vhEkji\n    artifact: V2RayW.zip         \n    draft: false\n    prerelease: true\n    on:\n      branch: master                # release from master branch only\n      istagged: true       # deploy on tag push only\n      isbeta: true\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "vw.ggb",
          "type": "blob",
          "size": 8.8916015625,
          "content": null
        }
      ]
    }
  ]
}