{
  "metadata": {
    "timestamp": 1736710971599,
    "page": 649,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MahApps/MahApps.Metro.IconPacks",
      "stars": 1789,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2265625,
          "content": "; Top-most http://editorconfig.org/ file\nroot = true\n\n[*]\nend_of_line = CRLF\n\n; 4-column tab indentation\n[*.{cs,csproj,xaml,xml,props,targets}]\nindent_style = space\nindent_size = 4\n\n[*.{md,yml}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.70703125,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# These files are text and should be normalized (convert crlf => lf)\n# Custom for Visual Studio\n*.cs      diff=csharp\n*.xaml    merge=union\n*.sln     merge=union\n*.csproj  merge=union\n*.vbproj  merge=union\n*.fsproj  merge=union\n*.dbproj  merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n\n# Images should be treated as binary\n# (binary is a macro for -text -diff)\n*.png     binary\n*.jepg    binary\n*.jpg     binary\n\n*.sdf     binary"
        },
        {
          "name": ".gitbugtraq",
          "type": "blob",
          "size": 0.5302734375,
          "content": "[bugtraq \"issues\"]\n    url = https://github.com/MahApps/MahApps.Metro/issues/%BUGID%\n    logfilterregex = \"([^C](#\\\\d+)+)\"\n    logregex = \\\\d+\n    \n[bugtraq \"users\"]\n    url = https://github.com/%BUGID%\n    loglinkregex = @\\\\w+\n    logregex = \\\\w+\n    \n[bugtraq \"commitId\"]\n    url = https://github.com/MahApps/MahApps.Metro/commit/%BUGID%\n    logregex = [0-9a-f]{6,32}\n    \n[bugtraq \"version\"]\n    url = https://github.com/MahApps/MahApps.Metro/releases/tag/%BUGID%\n    loglinkregex = v[0-9]+.[0-9]+.[0-9]+\n    logregex = [0-9]+.[0-9]+.[0-9]+"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.2470703125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n#build/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.binlog\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# scriptcs\n**/scriptcs_packages/*\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n#.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# Generated files\n*_wpftmp.csproj\n\n# cake\ntools/*\n!tools/packages.config\n\n# XamlStyler\n!XamlStyler/\n"
        },
        {
          "name": "GitReleaseManager.yaml",
          "type": "blob",
          "size": 0.9697265625,
          "content": "create:\n  include-footer: true\n  footer-heading: Where to get it\n  footer-content: You can download this release from [MahApps.Metro.IconPacks](https://github.com/MahApps/MahApps.Metro.IconPacks/releases/{milestone})\n  footer-includes-milestone: true\n  milestone-replace-text: '{milestone}'\nexport:\n  include-created-date-in-title: true\n  created-date-string-format: MMMM dd, yyyy\n  perform-regex-removal: true\n  regex-text: '### Where to get it(\\r\\n)*You can .*\\)'\n  multiline-regex: true\nissue-labels-include:\n- Breaking Change\n- Bug\n- Bug Fix\n- Enhancement\n- Feature\n- Feature Request\n- Icon Update\n- Improvement\n- Hacktoberfest\nissue-labels-exclude:\n- Internal Refactoring\n- Build\n- Question\n- WontFix\n- Duplicate\nissue-labels-alias:\n    - name:    Documentation\n      header:  Documentation\n      plural:  Documentation\n    - name:    Hacktoberfest\n      header:  Hacktoberfest\n      plural:  Hacktoberfest\n    - name:    Icon Update\n      header:  Icon Update\n      plural:  Icon Updates"
        },
        {
          "name": "GitVersion.yml",
          "type": "blob",
          "size": 0.513671875,
          "content": "assembly-versioning-scheme: Major\nassembly-file-versioning-scheme: MajorMinorPatchTag\nnext-version: 5.2.0\nmode: ContinuousDeployment\nbranches:\n  master:\n    regex: ^main\n    mode: ContinuousDeployment\n    tag: rc\n    prevent-increment-of-merged-branch-version: true\n    track-merge-target: false\n    is-release-branch: true\n  develop:\n    mode: ContinuousDeployment\n    tag: alpha\n    prevent-increment-of-merged-branch-version: true\n    track-merge-target: true\n  pull-request:\n    mode: ContinuousDelivery\nignore:\n  sha: []\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0458984375,
          "content": "MIT License\n\nCopyright (c) MahApps, Jan Karger\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "NuGet.Config",
          "type": "blob",
          "size": 0.5712890625,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <solution>\n    <add key=\"disableSourceControlIntegration\" value=\"true\" />\n  </solution>  \n  <packageRestore>\n    <add key=\"enabled\" value=\"True\" />\n    <add key=\"automatic\" value=\"True\" />\n  </packageRestore>\n  <packageSources>\n    <clear />\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\n  </packageSources>\n  <activePackageSource>\n    <clear />\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\n  </activePackageSource>\n</configuration>"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.0078125,
          "content": "﻿<!-- [![Stand With Ukraine](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg)](https://vshymanskyy.github.io/StandWithUkraine) -->\n\n<div align=\"center\">\n  <br />\n\n  <a href=\"https://github.com/MahApps/MahApps.Metro.IconPacks\">\n    <img alt=\"MahApps.Metro.IconPacks\" src=\"./resources/Icon.svg\">\n  </a>\n  <h1>MahApps.Metro<br />IconPacks</h1>\n  <p>\n    Awesome icon packs for <code>WPF</code> and <code>UWP</code> in one library\n  </p>\n  <p>\n    Supporting .NET Framework >= 4.6.2, >= .NET 6 (on Windows) and UWP (uap10.0.18362)\n  </p>\n  <a href=\"https://discord.gg/VrNeD7z48s\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"Bluesky\" src=\"https://img.shields.io/badge/Bluesky-0285FF?logo=bluesky&logoColor=fff&style=flat-square&label=follow%20%40punker76\"></a>\n  <a href=\"https://twitter.com/punker76\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"X (formerly Twitter) Follow\" src=\"https://img.shields.io/twitter/follow/punker76?logo=X&logoColor=white&style=flat-square&label=follow%20%40punker76\"></a>\n  <a href=\"https://nrw.social/@punker76\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"Mastodon Follow\" src=\"https://img.shields.io/mastodon/follow/109291587306394177?domain=https%3A%2F%2Fnrw.social&style=flat-square&label=follow%20%40punker76&logo=Mastodon\"></a>\n  <a href=\"https://discord.gg/VrNeD7z48s\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/411850591334301703?style=flat-square&label=Discord\"></a>\n  <br />\n  <a href=\"https://github.com/MahApps/MahApps.Metro.IconPacks/releases\"><img src=\"https://img.shields.io/github/release/MahApps/MahApps.Metro.IconPacks.svg?style=flat-square&label=latest%20release\"></a>\n  <a href=\"https://ci.appveyor.com/project/punker76/mahapps-metro-iconpacks/branch/main\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"AppVeyor Build (with branch)\" src=\"https://img.shields.io/appveyor/build/punker76/mahapps-metro-iconpacks/main?style=flat-square&logo=appveyor&label=main\"></a>\n  <a href=\"https://ci.appveyor.com/project/punker76/mahapps-metro-iconpacks/branch/develop\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"AppVeyor Build (with branch)\" src=\"https://img.shields.io/appveyor/build/punker76/mahapps-metro-iconpacks/develop?style=flat-square&logo=appveyor&label=dev\"></a>\n  <a href=\"https://github.com/MahApps/MahApps.Metro.IconPacks/actions\"><img alt=\"GitHub Actions Workflow Status\" src=\"https://img.shields.io/github/actions/workflow/status/MahApps/MahApps.Metro.IconPacks/ci.yml?branch=develop&style=flat-square&logo=github&label=dev\"></a>\n  <br />\n  <br />\n\n</div>\n\nThis `IconPacks` library contains controls, markup extensions and converters to use these awesome icons in a simple way.\n\n| Icon collection | Version | &#8721; | NuGet |\n|---|--:|--:|:--|\n| Complete IconPacks collection with all Icons in one package | | 55507 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.svg?style=flat-square&&label=IconPacks\"></a> |\n| [Bootstrap Icons](https://icons.getbootstrap.com/) | 1.11.3 | 2050 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.BootstrapIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.BootstrapIcons.svg?style=flat-square&&label=BootstrapIcons\"></a> |\n| [Boxicons](https://boxicons.com/) | 2.1.4 | 1634 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.BoxIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.BoxIcons.svg?style=flat-square&&label=BoxIcons\"></a> |\n| [Circum Icons Free](https://github.com/Klarr-Agency/Circum-Icons) | 2.0.2 | 288 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.CircumIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.CircumIcons.svg?style=flat-square&&label=CircumIcons\"></a> |\n| [Codicons](https://github.com/microsoft/vscode-codicons) | 0.0.36 | 461 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Codicons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Codicons.svg?style=flat-square&&label=Codicons\"></a> |\n| [Coolicons](https://github.com/krystonschwarze/coolicons) | 4.1 | 442 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Coolicons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Coolicons.svg?style=flat-square&&label=Coolicons\"></a> |\n| [Entypo+](http://www.entypo.com/) |  | 411 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Entypo/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Entypo.svg?style=flat-square&&label=Entypo\"></a> |\n| [Eva Icons](https://akveo.github.io/eva-icons/) | 1.1.3 | 490 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.EvaIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.EvaIcons.svg?style=flat-square&&label=EvaIcons\"></a> |\n| [Feather Icons](https://feathericons.com/) | 4.29.1 | 287 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.FeatherIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.FeatherIcons.svg?style=flat-square&&label=FeatherIcons\"></a> |\n| [File Icons](https://github.com/file-icons/icons) | 2.1.47 | 920 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.FileIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.FileIcons.svg?style=flat-square&&label=FileIcons\"></a> |\n| [Fontaudio](https://github.com/fefanto/fontaudio) | 1.1.0 | 155 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Fontaudio/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Fontaudio.svg?style=flat-square&&label=Fontaudio\"></a> |\n| [Font Awesome Free](https://fontawesome.com/) | 6.6.0 | 2050 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.FontAwesome/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.FontAwesome.svg?style=flat-square&&label=FontAwesome\"></a> |\n| [Fontisto](https://github.com/kenangundogan/fontisto) | 3.0.4 | 616 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Fontisto/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Fontisto.svg?style=flat-square&&label=Fontisto\"></a> |\n| [Fork Awesome](https://forkaweso.me/) | 1.2.0 | 794 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.ForkAwesome/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.ForkAwesome.svg?style=flat-square&&label=ForkAwesome\"></a> |\n| [Game Icons](https://github.com/game-icons/icons) | Apr 7, 2024 | 4149 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.GameIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.GameIcons.svg?style=flat-square&&label=GameIcons\"></a> |\n| [Ionicons](https://ionicons.com/) | 4.6.4.1 | 696 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Ionicons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Ionicons.svg?style=flat-square&&label=Ionicons\"></a> |\n| [Jam Icons](https://jam-icons.com/) | 3.1.0 | 940 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.JamIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.JamIcons.svg?style=flat-square&&label=JamIcons\"></a> |\n| [Lucide Icons](https://github.com/lucide-icons/lucide) | 0.460.0 | 1539 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Lucide/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Lucide.svg?style=flat-square&&label=Lucide\"></a> |\n| [Material Design Icons](https://pictogrammers.com/library/mdi/) | 7.4.47 | 7447 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Material/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Material.svg?style=flat-square&&label=Material\"></a> |\n| [Material Design Icons Light](https://github.com/Templarian/MaterialDesignLight) | 0.2.63 | 257 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.MaterialLight/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.MaterialLight.svg?style=flat-square&&label=MaterialLight\"></a> |\n| [Material Icons (Google)](https://github.com/google/material-design-icons) | 4.0.0 | 8413 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.MaterialDesign/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.MaterialDesign.svg?style=flat-square&&label=MaterialDesign\"></a> |\n| [Memory Icons](https://pictogrammers.com/library/memory/) | 1.5.0 | 651 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.MemoryIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.MemoryIcons.svg?style=flat-square&&label=MemoryIcons\"></a> |\n| [Microns](https://github.com/stephenhutchings/microns) | 1.1.4 | 164 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Microns/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Microns.svg?style=flat-square&&label=Microns\"></a> |\n| [Modern UI Icons](https://github.com/Templarian/WindowsIcons) | Feb 12, 2015 | 1260 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Modern/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Modern.svg?style=flat-square&&label=Modern\"></a> |\n| [Primer Octicons (GitHub)](https://github.com/primer/octicons) | 19.12.0 | 643 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Octicons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Octicons.svg?style=flat-square&&label=Octicons\"></a> |\n| [Phosphor Icons](https://phosphoricons.com/) | 2.1.1 | 7560 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.PhosphorIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.PhosphorIcons.svg?style=flat-square&&label=PhosphorIcons\"></a> |\n| [PICOL Icons](https://github.com/PicolSigns/Icons) | 1.1.0 | 549 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.PicolIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.PicolIcons.svg?style=flat-square&&label=PicolIcons\"></a> |\n| [Pixelarticons](https://pixelarticons.com/) | 1.8.1 | 486 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.PixelartIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.PixelartIcons.svg?style=flat-square&&label=PixelartIcons\"></a> |\n| [Radix Icons](https://github.com/radix-ui/icons) | 1.3.0 | 324 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.RadixIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.RadixIcons.svg?style=flat-square&&label=RadixIcons\"></a> |\n| [Remix Icon](https://remixicon.com/) | 4.5.0 | 3020 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.RemixIcon/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.RemixIcon.svg?style=flat-square&&label=RemixIcon\"></a> |\n| [RPG Awesome](http://nagoshiashumari.github.io/Rpg-Awesome/) | 0.2.0 | 495 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.RPGAwesome/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.RPGAwesome.svg?style=flat-square&&label=RPGAwesome\"></a> |\n| [Simple Icons](https://github.com/simple-icons/simple-icons) | 13.16.0 | 3221 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.SimpleIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.SimpleIcons.svg?style=flat-square&&label=SimpleIcons\"></a> |\n| [Typicons](https://www.s-ings.com/typicons/) | 2.1.2 | 336 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Typicons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Typicons.svg?style=flat-square&&label=Typicons\"></a> |\n| [Unicons](https://github.com/Iconscout/unicons) | 4.0.8 | 1607 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Unicons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Unicons.svg?style=flat-square&&label=Unicons\"></a> |\n| [Vaadin Icons](https://vaadin.com/icons) | 24.5.3 | 636 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.VaadinIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.VaadinIcons.svg?style=flat-square&&label=VaadinIcons\"></a> |\n| [Weather Icons](https://github.com/erikflowers/weather-icons) | 2.0.12 | 219 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.WeatherIcons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.WeatherIcons.svg?style=flat-square&&label=WeatherIcons\"></a> |\n| [Zondicons](https://www.zondicons.com/) | July 12, 2017 | 297 | <a href=\"https://www.nuget.org/packages/MahApps.Metro.IconPacks.Zondicons/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.IconPacks.Zondicons.svg?style=flat-square&&label=Zondicons\"></a> |\n\n## Note\n\nIt's not necessary, but you can use these Icons together with [MahApps.Metro](https://github.com/MahApps/MahApps.Metro) which makes your `WPF` application nicer.\n\n## Let's get started\n\n- [Install](../../wiki/Install)\n- [Wiki](../../wiki)\n\n## Want to say thanks?\n\nThis library is free and can be used in open source and commercial applications.\n\nIt's tested, contributed and used by me and many other people... So mainly hit the :star: button, that's all. :heart: :chipmunk: ( :dollar: or :euro: or :coffee: or :beer: or some other gifts are also being accepted...).\n\n## Icons\n\nPlease don't forget to give also a :star: to all used icon repositories!!!\n\n<!-- [Become a sponsor](https://github.com/sponsors/punker76) and show your support to this open source project. -->\n\n## IconPacks Browser\n\nThe Browser for all available Icon packages can be found [here](https://github.com/MahApps/IconPacks.Browser).\n\n![iconbrowserfinal](./resources/iconpacks_browser_new.gif)"
        },
        {
          "name": "Settings.XAMLStyler",
          "type": "blob",
          "size": 2.0029296875,
          "content": "{\n    \"IndentSize\": 4,\n    \"AttributesTolerance\": 2,\n    \"KeepFirstAttributeOnSameLine\": true,\n    \"MaxAttributeCharactersPerLine\": 0,\n    \"MaxAttributesPerLine\": 1,\n    \"NewlineExemptionElements\": \"RadialGradientBrush, GradientStop, LinearGradientBrush, ScaleTransform, SkewTransform, RotateTransform, TranslateTransform, Trigger, MultiTrigger, DataTrigger, MultiDataTrigger, Condition, Setter, SolidColorBrush, Pen\",\n    \"SeparateByGroups\": false,\n    \"AttributeIndentation\": 0,\n    \"AttributeIndentationStyle\": 1,\n    \"RemoveDesignTimeReferences\":  false,\n    \"EnableAttributeReordering\": true,\n    \"AttributeOrderingRuleGroups\": [\n        \"x:Class\",\n        \"xmlns, xmlns:x\",\n        \"xmlns:*\",\n        \"x:Key, Key, x:Name, Name, x:Uid, Uid, Title\",\n        \"TargetType, BasedOn\",\n        \"Grid.Row, Grid.RowSpan, Grid.Column, Grid.ColumnSpan, Canvas.Left, Canvas.Top, Canvas.Right, Canvas.Bottom\",\n        \"Width, Height, MinWidth, MinHeight, MaxWidth, MaxHeight\",\n        \"Margin, Padding, HorizontalAlignment, VerticalAlignment, HorizontalContentAlignment, VerticalContentAlignment, Panel.ZIndex\",\n        \"*:*, *\",\n        \"PageSource, PageIndex, Offset, Color, TargetName, Property, Value, StartPoint, EndPoint\",\n        \"*:Freeze, mc:Ignorable, d:IsDataSource, d:LayoutOverrides, d:IsStaticText\",\n        \"Storyboard.*, From, To, Duration\"\n    ],\n    \"FirstLineAttributes\": \"\",\n    \"OrderAttributesByName\": true,\n    \"PutEndingBracketOnNewLine\": false,\n    \"RemoveEndingTagOfEmptyElement\": true,\n    \"SpaceBeforeClosingSlash\": true,\n    \"RootElementLineBreakRule\": 1,\n    \"ReorderVSM\": 2,\n    \"ReorderGridChildren\": false,\n    \"ReorderCanvasChildren\": false,\n    \"ReorderSetters\": 3,\n    \"FormatMarkupExtension\": true,\n    \"NoNewLineMarkupExtensions\": \"x:Bind, Binding, TemplateBinding, x:Static, DynamicResource, ComponentResourceKey, iconPacks:Modern, iconPacks:Material\",\n    \"ThicknessSeparator\": 1,\n    \"ThicknessAttributes\": \"Margin, Padding, BorderThickness, ThumbnailClipMargin\",\n    \"FormatOnSave\": false,\n    \"CommentPadding\": 2,\n}"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.2080078125,
          "content": "# http://www.appveyor.com/docs/appveyor-yml\n\nbranches:\n  only:\n    - develop\n    - main\n\nenvironment:\n  # bad, but without this, gitversion doesn't work anymore\n  IGNORE_NORMALISATION_GIT_HEAD_MOVE: 1\n  azure-key-vault-url:\n    secure: 1mKS/HfCVq+iYNRVSrrN8NEowOkKt3knrpMzw+SOy3g=\n  azure-key-vault-client-id:\n    secure: JfSqzmsJdXB6uIxttCRoQw1NygwxqXHDj9uIqQnWOb9VCnQYlRPlAnxgW0yTSX4b\n  azure-key-vault-tenant-id:\n    secure: FxjkcqtpulfpDpfSAu4onaLVP/H1S1ORRCQCqsZkDC6YhCSmFoMxYNsWv5uGe3ah\n  azure-key-vault-client-secret:\n    secure: CUpRJxMLeUZwNPMcqI0wECaWfy5AMnWn1UZhBd9WnQ3Z16lJP1Vzrkf24mccbhUD\n  azure-key-vault-certificate:\n    secure: BSPdW2TgnQtoQXXbeDECug==\n\nimage: Visual Studio 2022\ntest: false\n\ninstall:\n  - ps: Invoke-WebRequest 'https://dot.net/v1/dotnet-install.ps1' -OutFile 'dotnet-install.ps1'\n  - ps: ./dotnet-install.ps1 -Version 8.0.403 -InstallDir \"C:\\Program Files\\dotnet\"\n# Install Windows SDK 10.0.18362\n# - ps: .\\build\\Install-WindowsSDK.ps1\n\npull_requests:\n  do_not_increment_build_number: false\n\nbuild_script:\n  - ps: dotnet --info\n  - ps: gitversion /version\n  - ps: .\\build.ps1 --target=ci\n\nartifacts:\n  - path: \\Publish\\*.*\n\nnuget:\n  disable_publish_on_pr: true\n\nskip_commits:\n  files:\n    - \"**/*.md\"\n"
        },
        {
          "name": "build.cake",
          "type": "blob",
          "size": 13.771484375,
          "content": "///////////////////////////////////////////////////////////////////////////////\n// TOOLS / ADDINS\n///////////////////////////////////////////////////////////////////////////////\n\n#tool dotnet:?package=NuGetKeyVaultSignTool&version=3.2.3\n#tool dotnet:?package=AzureSignTool&version=4.0.1\n#tool dotnet:?package=GitReleaseManager.Tool&version=0.17.0\n#tool dotnet:?package=XamlStyler.Console&version=3.2404.2\n\n#tool vswhere&version=2.8.4\n\n#tool nuget:?package=GitVersion.CommandLine&version=5.12.0\n\n///////////////////////////////////////////////////////////////////////////////\n// ARGUMENTS\n///////////////////////////////////////////////////////////////////////////////\n\nvar target = Argument(\"target\", \"Default\");\nvar configuration = Argument(\"configuration\", \"Release\");\nvar verbosity = Argument(\"verbosity\", Verbosity.Minimal);\n\nvar PROJECT_DIR = Context.Environment.WorkingDirectory.FullPath + \"/\";\nvar PACKAGE_DIR = Directory(Argument(\"artifact-dir\", PROJECT_DIR + \"Publish\") + \"/\");\n\n///////////////////////////////////////////////////////////////////////////////\n// PREPARATION\n///////////////////////////////////////////////////////////////////////////////\n\nvar repoName = \"MahApps.Metro.IconPacks\";\nvar baseDir = MakeAbsolute(Directory(\".\")).ToString();\nvar srcDir = baseDir + \"/src\";\nvar solution = srcDir + \"/MahApps.Metro.IconPacks.sln\";\n\nvar styler = Context.Tools.Resolve(\"xstyler.exe\");\nvar stylerFile = baseDir + \"/Settings.XAMLStyler\";\n\nvar isLocal = BuildSystem.IsLocalBuild;\nvar isAppVeyorBuild = AppVeyor.IsRunningOnAppVeyor;\nvar isGitHubActionsBuild = GitHubActions.IsRunningOnGitHubActions;\n\n// Set build version\nif (isLocal == false || verbosity == Verbosity.Verbose)\n{\n    GitVersion(new GitVersionSettings { OutputType = GitVersionOutput.BuildServer });\n}\n\nGitVersion gitVersion = GitVersion(new GitVersionSettings { OutputType = GitVersionOutput.Json });\n\nvar isPrerelease = gitVersion.NuGetVersion.Contains(\"-\");\nvar branchName = gitVersion.BranchName;\n\nvar isPullRequest = (isAppVeyorBuild && AppVeyor.Environment.PullRequest.IsPullRequest) || (isGitHubActionsBuild && GitHubActions.Environment.PullRequest.IsPullRequest);\n\nvar latestInstallationPath = VSWhereLatest(new VSWhereLatestSettings { IncludePrerelease = false });\nvar msBuildPath = latestInstallationPath.Combine(\"./MSBuild/Current/Bin\");\nvar msBuildPathExe = msBuildPath.CombineWithFilePath(\"./MSBuild.exe\");\n\nif (FileExists(msBuildPathExe) == false)\n{\n    throw new NotImplementedException(\"You need at least Visual Studio 2019 to build this project.\");\n}\n\n// Define global marcos.\nAction Abort = () => { throw new Exception(\"a non-recoverable fatal error occurred.\"); };\n\n///////////////////////////////////////////////////////////////////////////////\n// SETUP / TEARDOWN\n///////////////////////////////////////////////////////////////////////////////\n\nSetup(ctx =>\n{\n    if (!IsRunningOnWindows())\n    {\n        throw new NotImplementedException($\"{repoName} will only build on Windows because it's not possible to target WPF and Windows Forms from UNIX.\");\n    }\n    \n    Spectre.Console.AnsiConsole.Write(new Spectre.Console.FigletText(\"MahApps.Metro\"));\n    Spectre.Console.AnsiConsole.Write(new Spectre.Console.FigletText(\"IconPacks\"));\n\n    Information(\"Informational   Version: {0}\", gitVersion.InformationalVersion);\n    Information(\"SemVer          Version: {0}\", gitVersion.SemVer);\n    Information(\"AssemblySemVer  Version: {0}\", gitVersion.AssemblySemVer);\n    Information(\"MajorMinorPatch Version: {0}\", gitVersion.MajorMinorPatch);\n    Information(\"NuGet           Version: {0}\", gitVersion.NuGetVersion);\n    Information(\"IsLocalBuild           : {0}\", isLocal);\n    Information(\"IsPrerelease           : {0}\", isPrerelease);\n    Information(\"Branch                 : {0}\", branchName);\n    Information(\"Configuration          : {0}\", configuration);\n    Information(\"MSBuildPath            : {0}\", msBuildPath);\n    Information(\"Publish to             : {0}\", PACKAGE_DIR);\n});\n\nTeardown(ctx =>\n{\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// TASKS\n///////////////////////////////////////////////////////////////////////////////\n\nTask(\"Clean\")\n    .ContinueOnError()\n    .Does(() =>\n{\n    var directoriesToDelete = GetDirectories(\"./**/obj\")\n        .Concat(GetDirectories(\"./**/bin\"))\n        .Concat(GetDirectories(\"./**/Publish\"))\n        .Concat(GetDirectories(\"./**/output\"));\n    DeleteDirectories(directoriesToDelete, new DeleteDirectorySettings { Recursive = true, Force = true });\n});\n\nTask(\"Restore\")\n    .Does(() =>\n{\n    NuGetRestore(solution, new NuGetRestoreSettings { MSBuildPath = msBuildPath.ToString() });\n    //DotNetCoreRestore(solution);\n});\n\nTask(\"Build\")\n    .Does(() =>\n{\n    EnsureDirectoryExists(PACKAGE_DIR);\n\n    var msBuildSettings = new MSBuildSettings {\n        Verbosity = verbosity\n        , ToolPath = msBuildPathExe\n        , Configuration = configuration\n        , ArgumentCustomization = args => args.Append(\"/m\").Append(\"/nr:false\") // The /nr switch tells msbuild to quite once it�s done\n        , BinaryLogger = new MSBuildBinaryLogSettings() { Enabled = isLocal }\n    };\n    MSBuild(solution, msBuildSettings\n            .SetMaxCpuCount(0)\n            .WithProperty(\"GeneratePackageOnBuild\", \"true\")\n            .WithProperty(\"PackageOutputPath\", MakeAbsolute(PACKAGE_DIR).ToString())\n            .WithProperty(\"RepositoryBranch\", branchName)\n            .WithProperty(\"RepositoryCommit\", gitVersion.Sha)\n            .WithProperty(\"Version\", gitVersion.NuGetVersion)\n            .WithProperty(\"AssemblyVersion\", gitVersion.AssemblySemVer)\n            .WithProperty(\"FileVersion\", gitVersion.AssemblySemFileVer)\n            .WithProperty(\"InformationalVersion\", gitVersion.InformationalVersion)\n            .WithProperty(\"ContinuousIntegrationBuild\", isLocal ? \"false\": \"true\")\n            );\n});\n\nvoid SignFiles(IEnumerable<FilePath> files, string description, string repoUrl)\n{\n    var vurl = EnvironmentVariable(\"azure-key-vault-url\");\n    if(string.IsNullOrWhiteSpace(vurl)) {\n        Error(\"Could not resolve signing url.\");\n        return;\n    }\n\n    var vcid = EnvironmentVariable(\"azure-key-vault-client-id\");\n    if(string.IsNullOrWhiteSpace(vcid)) {\n        Error(\"Could not resolve signing client id.\");\n        return;\n    }\n\n    var vctid = EnvironmentVariable(\"azure-key-vault-tenant-id\");\n    if(string.IsNullOrWhiteSpace(vctid)) {\n        Error(\"Could not resolve signing client tenant id.\");\n        return;\n    }\n\n    var vcs = EnvironmentVariable(\"azure-key-vault-client-secret\");\n    if(string.IsNullOrWhiteSpace(vcs)) {\n        Error(\"Could not resolve signing client secret.\");\n        return;\n    }\n\n    var vc = EnvironmentVariable(\"azure-key-vault-certificate\");\n    if(string.IsNullOrWhiteSpace(vc)) {\n        Error(\"Could not resolve signing certificate.\");\n        return;\n    }\n\n    var filesToSign = string.Join(\" \", files.Select(f => MakeAbsolute(f).FullPath));\n\n    var processSettings = new ProcessSettings {\n        RedirectStandardOutput = true,\n        RedirectStandardError = true,\n        Arguments = new ProcessArgumentBuilder()\n            .Append(\"sign\")\n            .Append(filesToSign)\n            .AppendSwitchQuoted(\"--file-digest\", \"sha256\")\n            .AppendSwitchQuoted(\"--description\", description)\n            .AppendSwitchQuoted(\"--description-url\", repoUrl)\n            .Append(\"--no-page-hashing\")\n            .AppendSwitchQuoted(\"--timestamp-rfc3161\", \"http://timestamp.digicert.com\")\n            .AppendSwitchQuoted(\"--timestamp-digest\", \"sha256\")\n            .AppendSwitchQuoted(\"--azure-key-vault-url\", vurl)\n            .AppendSwitchQuotedSecret(\"--azure-key-vault-client-id\", vcid)\n            .AppendSwitchQuotedSecret(\"--azure-key-vault-tenant-id\", vctid)\n            .AppendSwitchQuotedSecret(\"--azure-key-vault-client-secret\", vcs)\n            .AppendSwitchQuotedSecret(\"--azure-key-vault-certificate\", vc)\n    };\n\n    using(var process = StartAndReturnProcess(\"tools/AzureSignTool\", processSettings))\n    {\n        process.WaitForExit();\n\n        if (process.GetStandardOutput().Any())\n        {\n            Information($\"Output:{Environment.NewLine}{string.Join(Environment.NewLine, process.GetStandardOutput())}\");\n        }\n\n        if (process.GetStandardError().Any())\n        {\n            Information($\"Errors occurred:{Environment.NewLine}{string.Join(Environment.NewLine, process.GetStandardError())}\");\n        }\n\n        // This should output 0 as valid arguments supplied\n        Information(\"Exit code: {0}\", process.GetExitCode());\n    }\n}\n\nvoid SignNuGet(string publishDir)\n{\n    if (!DirectoryExists(Directory(publishDir)))\n    {\n        return;\n    }\n\n    var vurl = EnvironmentVariable(\"azure-key-vault-url\");\n    if(string.IsNullOrWhiteSpace(vurl)) {\n        Error(\"Could not resolve signing url.\");\n        return;\n    }\n\n    var vcid = EnvironmentVariable(\"azure-key-vault-client-id\");\n    if(string.IsNullOrWhiteSpace(vcid)) {\n        Error(\"Could not resolve signing client id.\");\n        return;\n    }\n\n    var vctid = EnvironmentVariable(\"azure-key-vault-tenant-id\");\n    if(string.IsNullOrWhiteSpace(vctid)) {\n        Error(\"Could not resolve signing client tenant id.\");\n        return;\n    }\n\n    var vcs = EnvironmentVariable(\"azure-key-vault-client-secret\");\n    if(string.IsNullOrWhiteSpace(vcs)) {\n        Error(\"Could not resolve signing client secret.\");\n        return;\n    }\n\n    var vc = EnvironmentVariable(\"azure-key-vault-certificate\");\n    if(string.IsNullOrWhiteSpace(vc)) {\n        Error(\"Could not resolve signing certificate.\");\n        return;\n    }\n\n    var nugetFiles = GetFiles(publishDir + \"/*.nupkg\");\n    var signTool = Context.Tools.Resolve(\"NuGetKeyVaultSignTool.exe\");\n\n    foreach(var file in nugetFiles)\n    {\n        Information($\"Sign file: {file}\");\n\n        ExecuteProcess(signTool,\n                        new ProcessArgumentBuilder()\n                            .Append(\"sign\")\n                            .Append(MakeAbsolute(file).FullPath)\n                            .Append(\"--force\")\n                            .AppendSwitchQuoted(\"--file-digest\", \"sha256\")\n                            .AppendSwitchQuoted(\"--timestamp-rfc3161\", \"http://timestamp.digicert.com\")\n                            .AppendSwitchQuoted(\"--timestamp-digest\", \"sha256\")\n                            .AppendSwitchQuoted(\"--azure-key-vault-url\", vurl)\n                            .AppendSwitchQuotedSecret(\"--azure-key-vault-client-id\", vcid)\n                            .AppendSwitchQuotedSecret(\"--azure-key-vault-tenant-id\", vctid)\n                            .AppendSwitchQuotedSecret(\"--azure-key-vault-client-secret\", vcs)\n                            .AppendSwitchQuotedSecret(\"--azure-key-vault-certificate\", vc)\n                        );\n    }\n}\n\nTask(\"Sign\")\n    .WithCriteria(() => !isPullRequest)\n    .ContinueOnError()\n    .Does(() =>\n{\n    SignNuGet(MakeAbsolute(PACKAGE_DIR).ToString());\n});\n\nTask(\"StyleXaml\")\n    .Description(\"Ensures XAML Formatting is Clean\")\n    .Does(() =>\n{\n    Func<IFileSystemInfo, bool> exclude_Dir =\n        fileSystemInfo => !fileSystemInfo.Path.Segments.Contains(\"obj\");\n\n    var files = GetFiles(srcDir + \"/**/*.xaml\", new GlobberSettings { Predicate = exclude_Dir });\n    Information(\"\\nChecking \" + files.Count() + \" file(s) for XAML Structure\");\n    StartProcess(styler, \"-f \\\"\" + string.Join(\",\", files.Select(f => f.ToString())) + \"\\\" -c \\\"\" + stylerFile + \"\\\"\");\n});\n\nTask(\"CreateRelease\")\n    .WithCriteria(() => !isPullRequest)\n    .Does(() =>\n{\n    var token = EnvironmentVariable(\"GITHUB_TOKEN\");\n    if (string.IsNullOrEmpty(token))\n    {\n        throw new Exception(\"The GITHUB_TOKEN environment variable is not defined.\");\n    }\n\n    GitReleaseManagerCreate(token, \"MahApps\", repoName, new GitReleaseManagerCreateSettings {\n        Milestone         = gitVersion.MajorMinorPatch,\n        Name              = gitVersion.AssemblySemFileVer,\n        Prerelease        = isPrerelease,\n        TargetCommitish   = branchName,\n        WorkingDirectory  = \".\"\n    });\n});\n\nvoid ExecuteProcess(FilePath fileName, ProcessArgumentBuilder arguments, string workingDirectory = null)\n{\n  if (!FileExists(fileName))\n  {\n    throw new Exception($\"File not found: {fileName}\");\n  }\n\n  var processSettings = new ProcessSettings\n  {\n    RedirectStandardOutput = true,\n    RedirectStandardError = true,\n    Arguments = arguments\n  };\n\n  if (!string.IsNullOrEmpty(workingDirectory))\n  {\n    processSettings.WorkingDirectory = workingDirectory;\n  }\n\n  Information($\"Arguments: {arguments.RenderSafe()}\");\n\n  using(var process = StartAndReturnProcess(fileName, processSettings))\n  {\n    process.WaitForExit();\n\n    if (process.GetStandardOutput().Any())\n    {\n      Information($\"Output:{Environment.NewLine} {string.Join(Environment.NewLine, process.GetStandardOutput())}\");\n    }\n\n    if (process.GetStandardError().Any())\n    {\n      // Information($\"Errors occurred:{Environment.NewLine} {string.Join(Environment.NewLine, process.GetStandardError())}\");\n      throw new Exception($\"Errors occurred:{Environment.NewLine} {string.Join(Environment.NewLine, process.GetStandardError())}\");\n    }\n\n    // This should output 0 as valid arguments supplied\n    var exitCode = process.GetExitCode();\n    Information($\"Exit code: {exitCode}\");\n\n    if (exitCode > 0)\n    {\n      throw new Exception($\"Exit code: {exitCode}\");\n    }\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// TASK TARGETS\n///////////////////////////////////////////////////////////////////////////////\n\nTask(\"Default\")\n    .IsDependentOn(\"Clean\")\n    .IsDependentOn(\"Restore\")\n    .IsDependentOn(\"StyleXaml\")\n    .IsDependentOn(\"Build\")\n    ;\n\nTask(\"ci\")\n    .IsDependentOn(\"Default\")\n    .IsDependentOn(\"Sign\")\n    ;\n\nTask(\"azure\")\n    .IsDependentOn(\"Default\")\n    ;\n\n///////////////////////////////////////////////////////////////////////////////\n// EXECUTION\n///////////////////////////////////////////////////////////////////////////////\n\nRunTarget(target);\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 0.3115234375,
          "content": "$ErrorActionPreference = 'Stop'\n\nSet-Location -LiteralPath $PSScriptRoot\n\n$env:DOTNET_SKIP_FIRST_TIME_EXPERIENCE = '1'\n$env:DOTNET_CLI_TELEMETRY_OPTOUT = '1'\n$env:DOTNET_NOLOGO = '1'\n\ndotnet tool restore\nif ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }\n\ndotnet cake @args\nif ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cake.config",
          "type": "blob",
          "size": 0.3740234375,
          "content": "; This is the default configuration file for Cake.\n; This file was downloaded from https://github.com/cake-build/resources\n\n[Nuget]\nSource=https://api.nuget.org/v3/index.json\nUseInProcessClient=true\nLoadDependencies=false\n\n[Paths]\nTools=./tools\nAddins=./tools/Addins\nModules=./tools/Modules\n\n[Settings]\nSkipVerification=false\nSkipPackageVersionCheck=true\nShowProcessCommandLine=true\n"
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.1494140625,
          "content": "{\n    \"sdk\": {\n        \"version\": \"8.0.403\",\n        \"rollForward\": \"feature\"\n    },\n    \"msbuild-sdks\": {\n        \"MSBuild.Sdk.Extras\": \"3.0.44\"\n    }\n}"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}