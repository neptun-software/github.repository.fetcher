{
  "metadata": {
    "timestamp": 1736710844003,
    "page": 369,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xamarin/xamarin-macios",
      "stars": 2506,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 9.5126953125,
          "content": "# EditorConfig is awesome: https://editorconfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*.{props,targets}]\nindent_style = tab\nindent_size = 4\ncharset = utf-8\n\n[*.{csproj}]\nindent_style = space\nindent_size = 2\ncharset = utf-8\n\n# C# files\n[*.cs]\nmax_line_length = 120\ncharset = utf-8\n\n#### Core EditorConfig Options ####\n\n# Indentation and spacing\nindent_style = tab\nindent_size = 4\ntab_width = 4\n\n# New line preferences\nend_of_line = lf\ninsert_final_newline = true\n\n#### .NET Coding Conventions ####\n\n# Organize usings\ndotnet_separate_import_directive_groups = false\ndotnet_sort_system_directives_first = true\n\n# this. and Me. preferences\ndotnet_style_qualification_for_event = false:silent\ndotnet_style_qualification_for_field = false:silent\ndotnet_style_qualification_for_method = false:silent\ndotnet_style_qualification_for_property = false:silent\n\n# Language keywords vs BCL types preferences\ndotnet_style_predefined_type_for_locals_parameters_members = true:silent\ndotnet_style_predefined_type_for_member_access = true:silent\n\n# Parentheses preferences\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent\n\n# Modifier preferences\ndotnet_style_require_accessibility_modifiers = omit_if_default:warning\n\n# Expression-level preferences\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_prefer_auto_properties = true:silent\ndotnet_style_prefer_compound_assignment = true:suggestion\ndotnet_style_prefer_conditional_expression_over_assignment = true:silent\ndotnet_style_prefer_conditional_expression_over_return = true:silent\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion\ndotnet_style_prefer_simplified_interpolation = true:suggestion\n\n# Field preferences\ndotnet_style_readonly_field = true:suggestion\n\n# Parameter preferences\ndotnet_code_quality_unused_parameters = all:suggestion\n\n#### C# Coding Conventions ####\n\n# var preferences\ncsharp_style_var_elsewhere = false:none\ncsharp_style_var_for_built_in_types = false:none\ncsharp_style_var_when_type_is_apparent = true:warning\n\n# Expression-bodied members\ncsharp_style_expression_bodied_accessors = true:none\ncsharp_style_expression_bodied_constructors = false:none\ncsharp_style_expression_bodied_indexers = true:none\ncsharp_style_expression_bodied_lambdas = true:none\ncsharp_style_expression_bodied_local_functions = false:none\ncsharp_style_expression_bodied_methods = false:none\ncsharp_style_expression_bodied_operators = false:none\ncsharp_style_expression_bodied_properties = true:none\n\n# Pattern matching preferences\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_prefer_switch_expression = true:silent\n\n# Null-checking preferences\ncsharp_style_conditional_delegate_call = true:suggestion\n\n# Modifier preferences\ncsharp_prefer_static_local_function = true:suggestion\ncsharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent\n\n# Code-block preferences\ncsharp_prefer_braces = when_multiline:suggestion\ncsharp_prefer_simple_using_statement = true:suggestion\n\n# Expression-level preferences\ncsharp_prefer_simple_default_expression = true:suggestion\ncsharp_style_deconstructed_variable_declaration = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\ncsharp_style_pattern_local_over_anonymous_function = true:suggestion\ncsharp_style_prefer_index_operator = true:suggestion\ncsharp_style_prefer_range_operator = true:suggestion\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_unused_value_assignment_preference = discard_variable:suggestion\ncsharp_style_unused_value_expression_statement_preference = discard_variable:silent\n\n# 'using' directive preferences\ncsharp_using_directive_placement = outside_namespace:suggestion\n\n# nullability checks\n\ndotnet_style_coalesce_expression = true\ndotnet_style_null_propagation = true\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true\n\n#### C# Formatting Rules ####\n\n# New line preferences\ncsharp_new_line_before_catch = false\ncsharp_new_line_before_else = false\ncsharp_new_line_before_finally = false\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_open_brace = anonymous_methods,methods\ncsharp_new_line_between_query_expression_clauses = true\n\n# Indentation preferences\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents = true\ncsharp_indent_case_contents_when_block = false\ncsharp_indent_labels = one_less_than_current\ncsharp_indent_switch_labels = false\n\n# Space preferences\ncsharp_space_after_cast = true\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_around_declaration_statements = false\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = true\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = true\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = true\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_between_square_brackets = false\n\n# Wrapping preferences\ncsharp_preserve_single_line_blocks = true\ncsharp_preserve_single_line_statements = true\n\n#### Naming styles ####\n\n# Naming rules\n\ndotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion\ndotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface\ndotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i\n\ndotnet_naming_rule.types_should_be_pascalcase.severity = suggestion\ndotnet_naming_rule.types_should_be_pascalcase.symbols = types\ndotnet_naming_rule.types_should_be_pascalcase.style = pascalcase\n\ndotnet_naming_rule.non_field_members_should_be_pascalcase.severity = suggestion\ndotnet_naming_rule.non_field_members_should_be_pascalcase.symbols = non_field_members\ndotnet_naming_rule.non_field_members_should_be_pascalcase.style = pascalcase\n\ndotnet_naming_rule.private_or_internal_field_should_be_camelcase.severity = suggestion\ndotnet_naming_rule.private_or_internal_field_should_be_camelcase.symbols = private_or_internal_field\ndotnet_naming_rule.private_or_internal_field_should_be_camelcase.style = camelcase\n\n# Symbol specifications\n\ndotnet_naming_symbols.interface.applicable_kinds = interface\ndotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\ndotnet_naming_symbols.interface.required_modifiers = \n\ndotnet_naming_symbols.private_or_internal_field.applicable_kinds = field\ndotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected\ndotnet_naming_symbols.private_or_internal_field.required_modifiers = \n\ndotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum\ndotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\ndotnet_naming_symbols.types.required_modifiers = \n\ndotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method\ndotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\ndotnet_naming_symbols.non_field_members.required_modifiers = \n\n# Naming styles\n\ndotnet_naming_style.pascalcase.required_prefix = \ndotnet_naming_style.pascalcase.required_suffix = \ndotnet_naming_style.pascalcase.word_separator = \ndotnet_naming_style.pascalcase.capitalization = pascal_case\n\ndotnet_naming_style.begins_with_i.required_prefix = I\ndotnet_naming_style.begins_with_i.required_suffix = \ndotnet_naming_style.begins_with_i.word_separator = \ndotnet_naming_style.begins_with_i.capitalization = pascal_case\n\ndotnet_naming_style.camelcase.required_prefix = \ndotnet_naming_style.camelcase.required_suffix = \ndotnet_naming_style.camelcase.word_separator = \ndotnet_naming_style.camelcase.capitalization = camel_case\n\n# specify StringComparison for correctness\ndotnet_diagnostic.CA1309.severity = error\n\n# generated code from the project\n[*.g.cs]\ngenerated_code = true\ndotnet_diagnostic.BI1234.severity = silent\n\n# Visual Basic files\n[*.vb]\nmax_line_length = 120\ncharset = utf-8\n\n# Indentation and spacing\nindent_style = tab\nindent_size = 4\ntab_width = 4\n\n# New line preferences\nend_of_line = lf\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.447265625,
          "content": "# By default to the default thing\n\n* text=auto\n\n# The automatic translation apparently runs on windows, creates files with\n# crlf, and will check in the corresponding files as such. During the local\n# build these files will be read and written out again, but now with lf\n# endings. So set the 'text' git attribute for these files, so that they're\n# stored as 'lf' and converted to 'crlf' on Windows.\n\n**/.template.config/localize/templatestrings.*.json text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6982421875,
          "content": "Build.props\nMake.config.inc\nMake.config.local\nconfigure.inc\ndotnet.config\n_ios-build\n_mac-build\n_build\n*.userprefs\n*.user\n*.suo\n*.exe\n*.dll\n*.mdb\n*.pdb\nbin\nobj\npackages\n~.pmcs*\n.DS_Store\njenkins-results\n.vs\n*.raw\nbcl-test-importer\ntests/xharness/System.ValueTuple.xml\nprovisionator.msbuild.props\n# bcl auto-generated tests to be ignored until 6680 is completed\ntests/bcl-test/BCLTests/generated\ntests/bcl-test/generated\ntests/bcl-test/BCL\\ tests\\ group*.csproj\ntests/bcl-test/Mac\\ OS\\ X\\ BCL\\ \\tests*.csproj\ntests/bcl-test/mscorlib*.csproj\ntests/bcl-test/SystemCoreXunit*.csproj\ntests/bcl-test/SystemXunit.csproj\nglobal.json\n.idea\nprovision-shared.csx\nmono_crash.*.json\n*.binlog\n.vscode\n# Xcode\nxcuserdata/\n.build/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1279296875,
          "content": "[submodule \"external/Xamarin.MacDev\"]\n    path = external/Xamarin.MacDev\n    url = ../../xamarin/Xamarin.MacDev\n    branch = main\n\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 5.1015625,
          "content": "# Xamarin.iOS/Mac Code Owners File\n#\n# GitHub uses this file to determine who to assign for reviews\n# on pull requests. Please keep this file alphabetically sorted.\n#\n# References:\n#\n# https://github.com/blog/2392-introducing-code-owners\n# https://help.github.com/articles/about-codeowners\n\n/builds @rolfbjarne\n\n/docs\n\n/mk @rolfbjarne\n\n/msbuild @emaf @mauroa @rolfbjarne\n\n/runtime @rolfbjarne\n\n/src/AddressBook @dalexsoto\n/src/addressbook.cs @dalexsoto\n/src/AppKit @dalexsoto\n/src/appkit.cs @dalexsoto\n/src/ARKit\n/src/arkit.cs\n/src/AudioToolbox @dalexsoto\n/src/audiotoolbox.cs @dalexsoto\n/src/AudioUnit @dalexsoto\n/src/audiounit.cs @dalexsoto\n/src/authenticationservices.cs\n/src/AVFoundation @mandel-macaque @dalexsoto\n/src/avfoundation.cs @mandel-macaque @dalexsoto\n/src/AVKit @dalexsoto\n/src/avkit.cs @dalexsoto\n/src/CallKit @dalexsoto\n/src/callkit.cs @dalexsoto\n/src/CarPlay @dalexsoto\n/src/carplay.cs @dalexsoto\n/src/CFNetwork @mandel-macaque\n/src/cfnetwork.cs @mandel-macaque\n/src/CloudKit @mandel-macaque\n/src/cloudkit.cs @mandel-macaque\n/src/Compression @mandel-macaque\n/src/Contacts @dalexsoto\n/src/contacts.cs @dalexsoto\n/src/CoreAudio @dalexsoto\n/src/coreaudio.cs @dalexsoto\n/src/CoreBluetooth @dalexsoto\n/src/corebluetooth.cs @dalexsoto\n/src/CoreData @mandel-macaque\n/src/coredata.cs @mandel-macaque\n/src/CoreFoundation @rolfbjarne\n/src/corefoundation.cs @rolfbjarne\n/src/CoreGraphics\n/src/coregraphics.cs\n/src/CoreImage\n/src/coreimage.cs\n/src/CoreLocation @dalexsoto\n/src/corelocation.cs @dalexsoto\n/src/CoreMedia @dalexsoto\n/src/coremedia.cs @dalexsoto\n/src/CoreMIDI @dalexsoto\n/src/coremidi.cs @dalexsoto\n/src/CoreML @dalexsoto\n/src/coreml.cs @dalexsoto\n/src/CoreMotion\n/src/coremotion.cs\n/src/CoreSpotlight @dalexsoto\n/src/corespotlight.cs @dalexsoto\n/src/CoreTelephony\n/src/coretelephony.cs\n/src/CoreText\n/src/coretext.cs\n/src/CoreVideo @dalexsoto @rolfbjarne\n/src/corevideo.cs @dalexsoto @rolfbjarne\n/src/EventKit @dalexsoto\n/src/eventkit.cs @dalexsoto\n/src/ExternalAccessory @dalexsoto\n/src/externalaccessory.cs @dalexsoto\n/src/Foundation @rolfbjarne\n/src/Foundation/NSUrl* @mandel-macaque\n/src/foundation.cs @rolfbjarne\n/src/GameController\n/src/gamecontroller.cs\n/src/GameKit\n/src/gamekit.cs\n/src/GameplayKit @dalexsoto\n/src/gameplaykit.cs @dalexsoto\n/src/generator* @dalexsoto @rolfbjarne\n/src/GLKit @dalexsoto\n/src/glkit.cs @dalexsoto\n/src/HealthKit\n/src/healthkit.cs\n/src/HomeKit\n/src/homekit.cs\n/src/iad.cs\n/src/identitylookup.cs @dalexsoto\n/src/identitylookupui.cs @dalexsoto\n/src/ituneslibrary.cs @mandel-macaque\n/src/iTunesLibrary @mandel-macaque\n/src/ImageIO\n/src/imageio.cs\n/src/ImageKit\n/src/imagekit.cs\n/src/Intents @dalexsoto\n/src/intents.cs @dalexsoto\n/src/IntentsUI @dalexsoto\n/src/intentsui.cs @dalexsoto\n/src/JavaScriptCore @rolfbjarne\n/src/javascriptcore.cs @rolfbjarne\n/src/LocalAuthentication\n/src/localauthentication.cs\n/src/MapKit\n/src/mapkit.cs\n/src/MediaPlayer @mandel-macaque\n/src/mediaplayer.cs @mandel-macaque\n/src/Messages\n/src/messages.cs\n/src/MessageUI\n/src/messageui.cs\n/src/Metal @mandel-macaque\n/src/metal.cs @mandel-macaque\n/src/MetalKit\n/src/metalkit.cs\n/src/MetalPerformanceShaders\n/src/metalperformanceshaders.cs\n/src/MetalPerformanceShadersGraph @praeclarum\n/src/metalperformanceshadersgraph.cs @praeclarum\n/src/MobileCoreServices\n/src/mobilecoreservices.cs\n/src/ModelIO\n/src/modelio.cs\n/src/MultipeerConnectivity\n/src/multipeerconnectivity.cs\n/src/naturallanguage.cs @mandel-macaque\n/src/NaturalLanguage @mandel-macaque\n/src/Network @mandel-macaque\n/src/NetworkExtension\n/src/networkextension.cs\n/src/NotificationCenter\n/src/notificationcenter.cs\n/src/OpenGLES\n/src/opengles.cs\n/src/PassKit\n/src/passkit.cs\n/src/Photos @dalexsoto\n/src/photos.cs @dalexsoto\n/src/PhotosUI @dalexsoto\n/src/photosui.cs @dalexsoto\n/src/PushKit @dalexsoto\n/src/pushkit.cs @dalexsoto\n/src/QuartzCore\n/src/quartzcore.cs\n/src/QuickLook\n/src/quicklook.cs\n/src/ReplayKit @dalexsoto\n/src/replaykit.cs @dalexsoto\n/src/SafariServices\n/src/safariservices.cs\n/src/SceneKit @dalexsoto\n/src/scenekit.cs @dalexsoto\n/src/Security @dalexsoto\n/src/security.cs @dalexsoto\n/src/Speech @dalexsoto\n/src/speech.cs @dalexsoto\n/src/SpriteKit\n/src/spritekit.cs\n/src/SystemConfiguration\n/src/systemconfiguration.cs\n/src/System.Net.Http @mandel-macaque\n/src/UIKit @dalexsoto @rolfbjarne\n/src/uikit.cs @dalexsoto @rolfbjarne\n/src/UserNotifications @dalexsoto\n/src/usernotifications.cs @dalexsoto\n/src/UserNotificationsUI @dalexsoto\n/src/usernotificationsui.cs @dalexsoto\n/src/VideoSubscriberAccount @dalexsoto\n/src/videosubscriberaccount.cs @dalexsoto\n/src/VideoToolbox @dalexsoto\n/src/videotoolbox.cs @dalexsoto\n/src/Vision @dalexsoto\n/src/vision.cs @dalexsoto\n/src/WatchConnectivity @rolfbjarne\n/src/watchconnectivity.cs @rolfbjarne\n/src/WebKit\n/src/webkit.cs\n\n/tests/xharness @rolfbjarne @mandel-macaque\n/tests/xtro-sharpie\n/tests/mmptest @rolfbjarne\n/tests/common/mac @rolfbjarne\n/tests/bcl-tests @mandel-macaque\n\n/tools/common @rolfbjarne\n/tools/common/StaticRegistrar.cs @rolfbjarne\n/tools/tools/devops/device-tests @mandel-macaque\n/tools/linker\n/tools/mmp\n/tools/mtouch @rolfbjarne\n/tools/nnyeah @stephen-hawley\n\nconfigure @rolfbjarne\nMake.* @rolfbjarne\nMakefile @rolfbjarne\nsystem-dependencies.sh @rolfbjarne\n"
        },
        {
          "name": "DOWNLOADS.md",
          "type": "blob",
          "size": 47.6064453125,
          "content": "> [!NOTE]\n> This page lists Xamarin.iOS and Xamarin.Mac downloads, which are both discontinued.\n> \n> If you're looking for how to install a specific version of the iOS, tvOS, Mac Catalyst or macOS workloads (for .NET),\n> please [file an issue](https://github.com/xamarin/xamarin-macios/issues/new/choose) explaining what you need\n> (they're shipped as .NET workloads, and not installable from packages).\n\n# Xamarin.iOS\n\n| Date | Version | Package | Release Notes |\n|------|---------|---------|---------------|\n|2023/11/14|16.4.0.23|[xamarin.ios-16.4.0.23.pkg](https://download.visualstudio.microsoft.com/download/pr/ceb0ea3f-4db8-46b4-8dc3-8049d27c0107/3960868aa9b1946a6c77668c3f3334ee/xamarin.ios-16.4.0.23.pkg)||\n|2023/10/10|16.4.0.18|[xamarin.ios-16.4.0.18.pkg](https://download.visualstudio.microsoft.com/download/pr/8cbf56b1-ef0d-466f-8cfe-fae4ba8c5080/1174a6a7f61a32d94e267e3bc8c1942f/xamarin.ios-16.4.0.18.pkg)||\n|2023/05/17|16.4.0.6|[xamarin.ios-16.4.0.6.pkg](https://download.visualstudio.microsoft.com/download/pr/b4928191-de3d-42cb-a24f-709e5d71626c/ac849f1f644aee58ed4e7a79cb35a14e/xamarin.ios-16.4.0.6.pkg)||\n|2023/02/21|16.2.0.5|[xamarin.ios-16.2.0.5.pkg](https://download.visualstudio.microsoft.com/download/pr/5f9ea8f6-0afe-46b3-b8e8-5dee4c2dd14c/b357a2b833ba86598aaff58fc013f06c/xamarin.ios-16.2.0.5.pkg)||\n|2023/02/14|16.2.0.2|[xamarin.ios-16.2.0.2.pkg](https://download.visualstudio.microsoft.com/download/pr/91371293-2fe3-4392-b5ca-d4f73b07ce0a/d9eab6784e5e3e8557d2b509645e2b7e/xamarin.ios-16.2.0.2.pkg)||\n|2022/12/15|16.1.1.27|[xamarin.ios-16.1.1.27.pkg](https://download.visualstudio.microsoft.com/download/pr/c8bc547f-869e-4d64-a271-f8b3a29ee545/3d8cfa414fa3e4005dd5b9b9d3817aa4/xamarin.ios-16.1.1.27.pkg)||\n|2022/10/11|16.0.0.72|[xamarin.ios-16.0.0.72.pkg](https://download.visualstudio.microsoft.com/download/pr/81c41aaa-a3d7-4875-8416-d04b472379b7/21d9f6c5ad3a6bc2479b2ec4b0685b6c/xamarin.ios-16.0.0.72.pkg)||\n|2022/08/09|15.12.0.2|[xamarin.ios-15.12.0.2.pkg](https://download.visualstudio.microsoft.com/download/pr/e81e04d3-768a-4310-9c9b-f32e8ba00eaa/0e27caf0877adb5c6fe6d634d26da40a/xamarin.ios-15.12.0.2.pkg)||\n|2022/06/14|15.10.0.5|[xamarin.ios-15.10.0.5.pkg](https://download.visualstudio.microsoft.com/download/pr/09e9572f-1c2a-4d79-a1e8-5469de9410e8/3c7be8df7e8249f2c3142e4c10ae5523/xamarin.ios-15.10.0.5.pkg)||\n|2022/05/23|15.10.0.1|[xamarin.ios-15.10.0.1.pkg](https://download.visualstudio.microsoft.com/download/pr/afed6f32-67b3-4684-b0a4-e2b74d751bce/efaa7d62658b8285baafc2d6fc8f930a/xamarin.ios-15.10.0.1.pkg)||\n|2022/04/12|15.8.0.3|[xamarin.ios-15.8.0.3.pkg](https://download.visualstudio.microsoft.com/download/pr/d4e328bd-3f10-41f1-9b22-6bc556d1ffc2/4b781228697bd21157454ac6a956205b/xamarin.ios-15.8.0.3.pkg)||\n|2022/03/31|15.8.0.0|[xamarin.ios-15.8.0.0.pkg](https://download.visualstudio.microsoft.com/download/pr/88bcf6a9-7ea5-417b-9a3e-e5bcc397758c/942fbb058c64add3a9f81b65a9a9e25e/xamarin.ios-15.8.0.0.pkg)||\n|2022/02/16|15.6.0.3|[xamarin.ios-15.6.0.3.pkg](https://download.visualstudio.microsoft.com/download/pr/6fe2c21c-668d-4922-895c-75504140383f/9f18cd157a52dad6d611b400064dd22f/xamarin.ios-15.6.0.3.pkg)||\n|2021/12/16|15.4.0.0|[xamarin.ios-15.4.0.0.pkg](https://download.visualstudio.microsoft.com/download/pr/f4f0db99-f0b3-41c5-a57d-b94bbe1226f3/356747008500789dc25d3b8653df5617/xamarin.ios-15.4.0.0.pkg)||\n|2021/12/15|15.2.0.17|[xamarin.ios-15.2.0.17.pkg](https://download.visualstudio.microsoft.com/download/pr/8a886e9c-7ade-4d57-870b-c8534c453b14/dff94880de47045395f94af7f8ffb1f3/xamarin.ios-15.2.0.17.pkg)||\n|2021/11/08|15.2.0.1|[xamarin.ios-15.2.0.1.pkg](https://download.visualstudio.microsoft.com/download/pr/f4dcfae1-0b78-4572-9e82-7bfc37db4965/b840deeb242c9cab9e68f8acb14a9b46/xamarin.ios-15.2.0.1.pkg)||\n|2021/09/29|15.0.0.6|[xamarin.ios-15.0.0.6.pkg](https://download.visualstudio.microsoft.com/download/pr/cddb0c4f-a69c-42a3-bb23-085e48d17af4/a8fb52485eb5e99aeb4edcaf35182231/xamarin.ios-15.0.0.6.pkg)||\n|2021/07/14|14.20.0.24|[xamarin.ios-14.20.0.24.pkg](https://download.visualstudio.microsoft.com/download/pr/4725e1ed-6254-4880-a410-c120d95a814c/70aa4394b2bf0636c8bd2bb9db73d759/xamarin.ios-14.20.0.24.pkg)||\n|2021/06/09|14.20.0.3|[xamarin.ios-14.20.0.3.pkg](https://download.visualstudio.microsoft.com/download/pr/31b0e19f-e253-4a53-b384-22e389a91e83/dbd3547922dab9d23664dedf2ffb301d/xamarin.ios-14.20.0.3.pkg)||\n|2021/06/02|14.20.0.1|[xamarin.ios-14.20.0.1.pkg](https://download.visualstudio.microsoft.com/download/pr/414d1675-ca0b-4b5b-8a4e-26b693883581/5e50228d1498caf85151b6d6cfec6fd9/xamarin.ios-14.20.0.1.pkg)||\n|2021/05/03|14.16.0.5|[xamarin.ios-14.16.0.5.pkg](https://download.visualstudio.microsoft.com/download/pr/e12e515d-da12-410b-acac-dd564a090b60/d0df6c6cfb219ebc3584bccc30e25bc5/xamarin.ios-14.16.0.5.pkg)||\n|2021/03/02|14.14.2.5|[xamarin.ios-14.14.2.5.pkg](https://download.visualstudio.microsoft.com/download/pr/03bd1f2d-5b2a-4b65-8a7b-91da84bd241c/711a9ef9243e5765ed38b2312da39724/xamarin.ios-14.14.2.5.pkg)||\n|2021/02/09|14.10.0.4|[xamarin.ios-14.10.0.4.pkg](https://download.visualstudio.microsoft.com/download/pr/5cbc9033-e1da-4b8b-91ea-503356b2a52a/88941ab25ab54cb9f26df34d1f07f01e/xamarin.ios-14.10.0.4.pkg)||\n|2021/01/12|14.8.0.3|[xamarin.ios-14.8.0.3.pkg](https://download.visualstudio.microsoft.com/download/pr/573004d1-39a9-4cf7-87b0-e0eea351cd00/4ab0eae8f20e3d59c08393aa77c8c123/xamarin.ios-14.8.0.3.pkg)||\n|2020/11/19|14.6.0.15|[xamarin.ios-14.6.0.15.pkg](https://download.visualstudio.microsoft.com/download/pr/2d952143-6407-42dc-a589-f62cebff0634/645a2544f66c775fb3b66f8998499e98/xamarin.ios-14.6.0.15.pkg)||\n|2020/11/10|14.4.1.3|[xamarin.ios-14.4.1.3.pkg](https://download.visualstudio.microsoft.com/download/pr/68caeaf6-39d4-4b9b-85e3-d20c0a123d1e/4eea211b090c0fbef23b565939aad625/xamarin.ios-14.4.1.3.pkg)||\n|2020/10/27|14.2.0.12|[xamarin.ios-14.2.0.12.pkg](https://download.visualstudio.microsoft.com/download/pr/7b60a920-c8b1-4798-b660-ae1a7294eb6d/bbdc2a9c6705520fd0a6d04f71e5ed3e/xamarin.ios-14.2.0.12.pkg)||\n|2020/09/21|14.0.0.0|[xamarin.ios-14.0.0.0.pkg](https://download.visualstudio.microsoft.com/download/pr/c939bb72-556b-4e8a-a9b4-0f90e9b5e336/f906a6ce183fb73f1bcd945ac32f984b/xamarin.ios-14.0.0.0.pkg)||\n|2020/08/05|13.20.2.2|[xamarin.ios-13.20.2.2.pkg](https://download.visualstudio.microsoft.com/download/pr/b089be2f-932a-40ab-904b-b626f9e6427b/186357848bab70642927eaf17410a051/xamarin.ios-13.20.2.2.pkg)||\n|2020/07/21|13.18.3.2|[xamarin.ios-13.18.3.2.pkg](https://download.visualstudio.microsoft.com/download/pr/f42979a0-52fb-454d-bc96-0916cf4450f9/f166874ceb133d80f48b38e4e7bdc2ee/xamarin.ios-13.18.3.2.pkg)||\n|2020/06/02|13.18.2.1|[xamarin.ios-13.18.2.1.pkg](https://download.visualstudio.microsoft.com/download/pr/68ffa29a-6a5b-41f7-af7b-506ddcf4bbfc/35159cac3be1910e87309c0094a8ec8a/xamarin.ios-13.18.2.1.pkg)||\n|2020/05/19|13.18.1.31|[xamarin.ios-13.18.1.31.pkg](https://download.visualstudio.microsoft.com/download/pr/15b48a0a-f363-47d8-9687-b7b59dbafd10/807a0eed1ab90172204134d590c03395/xamarin.ios-13.18.1.31.pkg)||\n|2020/04/07|13.16.0.13|[xamarin.ios-13.16.0.13.pkg](https://download.visualstudio.microsoft.com/download/pr/fb168f8a-b44e-4582-8147-eefdf1562110/0a25988a5b9f502f4facd875c1b2072b/xamarin.ios-13.16.0.13.pkg)||\n|2020/04/01|13.16.0.11|[xamarin.ios-13.16.0.11.pkg](https://download.visualstudio.microsoft.com/download/pr/6e56949e-1beb-4550-abf9-ff404868de82/cf7090bee19401076987a57cd12f11e5/xamarin.ios-13.16.0.11.pkg)||\n|2020/03/23|13.14.1.39|[xamarin.ios-13.14.1.39.pkg](https://download.visualstudio.microsoft.com/download/pr/8f94ca38-039a-4c9f-a51a-a6cb33c76a8c/21e09d8084eb7c15eaa07c970e0eccdc/xamarin.ios-13.14.1.39.pkg)||\n|2020/02/25|13.10.0.21|[xamarin.ios-13.10.0.21.pkg](https://download.visualstudio.microsoft.com/download/pr/16ae715b-ae37-47be-a5dc-c7abd236fbef/185ba3460c06e3fa2e7aa4609e63d57a/xamarin.ios-13.10.0.21.pkg)||\n|2020/01/28|13.10.0.17|[xamarin.ios-13.10.0.17.pkg](https://download.visualstudio.microsoft.com/download/pr/9d3de04b-f20a-42fd-8b9f-9e9132950e43/3372944c79e1a78de3c224149e8ac8bf/xamarin.ios-13.10.0.17.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/13/13.10|\n|2020/01/08|13.8.3.0|[xamarin.ios-13.8.3.0.pkg](https://download.visualstudio.microsoft.com/download/pr/d468bb4d-8a1d-4993-9087-3d44e54b3cc1/d0adf404348a0ff0f789e9657754dfb6/xamarin.ios-13.8.3.0.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/13/13.8|\n|2019/11/05|13.6.0.12|[xamarin.ios-13.6.0.12.pkg](https://download.visualstudio.microsoft.com/download/pr/ae8e9044-57e0-4500-bc58-6fe41d5f711d/71a1316dcca8c4cbcfb070aff9f738d2/xamarin.ios-13.6.0.12.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/13/13.6|\n|2019/10/10|13.4.0.2|[xamarin.ios-13.4.0.2.pkg](https://download.visualstudio.microsoft.com/download/pr/d11a42ff-dd11-4005-b5a8-799856a96aad/2893a2da0df8a2e2d45ea17e2be2ccce/xamarin.ios-13.4.0.2.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/13/13.4|\n|2019/10/07|13.2.0.47|[xamarin.ios-13.2.0.47.pkg](https://download.visualstudio.microsoft.com/download/pr/b88b1836-713c-4fa6-ad9e-eb399bcb5ff7/93667155440140a73c702aed97746c58/xamarin.ios-13.2.0.47.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/13/13.2|\n|2019/09/23|13.2.0.42|[xamarin.ios-13.2.0.42.pkg](https://download.visualstudio.microsoft.com/download/pr/dd629809-0f45-4218-88fa-eccd117c0934/cfe95142c870732b75197e7dcb086b55/xamarin.ios-13.2.0.42.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/13/13.2|\n|2019/08/05|12.14.0.114|[xamarin.ios-12.14.0.114.pkg](https://download.visualstudio.microsoft.com/download/pr/cce6ebe1-dd65-472c-9d01-d83561f341bd/a6ab5d414cdb3e85c9283a954e182b9d/xamarin.ios-12.14.0.114.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/12/12.14|\n|2019/07/24|12.14.0.110|[xamarin.ios-12.14.0.110.pkg](https://download.visualstudio.microsoft.com/download/pr/87a0582e-09b0-499a-852a-6d963e614afb/b101ede139bd8ad0a5d4c2f0077c3ca4/xamarin.ios-12.14.0.110.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/12/12.14|\n|2019/06/20|12.10.0.157|[xamarin.ios-12.10.0.157.pkg](https://download.visualstudio.microsoft.com/download/pr/87d63fb1-c713-4c5f-b2c8-ae309a3b829c/91c05c2d5587f8f7efc5f7959f55eddf/xamarin.ios-12.10.0.157.pkg)|https://docs.microsoft.com/xamarin/ios/release-notes/12/12.10|\n|2019/06/15|12.10.0.153|[xamarin.ios-12.10.0.153.pkg](https://download.visualstudio.microsoft.com/download/pr/56ddce05-4495-4ebd-ad86-2b67f7225688/0e6386dcb6ecde36c4162d73eb5a1040/xamarin.ios-12.10.0.153.pkg)|https://docs.microsoft.com/xamarin/ios/release-notes/12/12.10|\n|2019/05/02|12.8.0.2|[xamarin.ios-12.8.0.2.pkg](https://download.visualstudio.microsoft.com/download/pr/1fdd2124-10f8-40f3-9d9a-101c7953aa9d/5aa052be7fd1de213a6b7a8a96bea72b/xamarin.ios-12.8.0.2.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/12/12.8|\n|2019/04/09|12.8.0.0|[xamarin.ios-12.8.0.0.pkg](https://download.visualstudio.microsoft.com/download/pr/570bd597-0bc1-4fd2-b629-eaa6055f365b/3b046415b714bb55f3ca0f907ad72287/xamarin.ios-12.8.0.0.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/12/12.8|\n|2019/04/02|12.6.0.25|[xamarin.ios-12.6.0.25.pkg](https://download.visualstudio.microsoft.com/download/pr/1bb99d1b-81da-41b1-a0f5-72630b9c47cb/07230d21640a55f58533d03c6441e2e1/xamarin.ios-12.6.0.25.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/12/12.6|\n|2019/03/20|12.2.1.16|[xamarin.ios-12.2.1.16.pkg](https://download.visualstudio.microsoft.com/download/pr/b6fc6efa-447f-4299-8304-297e9ddb9d0e/0ccdb03bebebcf46afe6f30a952cecd3/xamarin.ios-12.2.1.16.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/12/12.2|\n|2019/02/13|12.2.1.15|[xamarin.ios-12.2.1.15.pkg](https://download.visualstudio.microsoft.com/download/pr/92a1bbe3-d887-442d-adca-b77a2dd17e10/a9d51b2c2bc42e1e00fbd5e63c964a65/xamarin.ios-12.2.1.15.pkg)|https://github.com/mono/mono/issues/10488|\n|2019/01/16|12.2.1.13|[xamarin.ios-12.2.1.13.pkg](https://download.visualstudio.microsoft.com/download/pr/6e83f5d0-a2c9-4bdc-9ac0-dc10cf8d154a/be7f05a02622ad003daf6825171816b7/xamarin.ios-12.2.1.13.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/12/12.2|\n|2018/12/12|12.2.1.12|[xamarin.ios-12.2.1.12.pkg](https://download.visualstudio.microsoft.com/download/pr/ae5c9ea8-ff17-448b-ae5f-24c69c2d2a9b/d9d62c813492e750e999699aa8904e40/xamarin.ios-12.2.1.12.pkg)|https://developer.xamarin.com/releases/ios/xamarin.ios_12/xamarin.ios_12.2/|\n|2018/11/28|12.2.1.11|[xamarin.ios-12.2.1.11.pkg](https://download.visualstudio.microsoft.com/download/pr/b491f333-4f77-4dc6-b326-5cbd52c1feb8/b0026a0bae0dc7e832697900faf88405/xamarin.ios-12.2.1.11.pkg)|https://developer.xamarin.com/releases/ios/xamarin.ios_12/xamarin.ios_12.2/|\n|2018/11/13|12.2.1.10|[xamarin.ios-12.2.1.10.pkg](https://download.visualstudio.microsoft.com/download/pr/7fb68d98-fea8-4b68-b792-d6770dff46b0/6ae3e18c3eb46a9c7f890129d235e027/xamarin.ios-12.2.1.10.pkg)|https://developer.xamarin.com/releases/ios/xamarin.ios_12/xamarin.ios_12.2/|\n|2018/11/02|12.1.0.15|[xamarin.ios-12.1.0.15.pkg](https://download.visualstudio.microsoft.com/download/pr/87c37317-519f-41cc-851d-9690784bb375/2c67088e33a30432a729a6a512916c89/xamarin.ios-12.1.0.15.pkg)||\n|2018/09/19|12.0.0.15|[xamarin.ios-12.0.0.15.pkg](https://download.visualstudio.microsoft.com/download/pr/28396824-ecde-429e-9693-0da9382e1474/debd3c099bf5a516b964675c2628e601/xamarin.ios-12.0.0.15.pkg)|https://developer.xamarin.com/releases/ios/xamarin.ios_12/xamarin.ios_12.0/|\n|2018/08/29|11.14.0.14|[xamarin.ios-11.14.0.14.pkg](https://download.visualstudio.microsoft.com/download/pr/6f87ca81-a0db-45f1-8887-9a0c5836a9f2/90f5445c99f16bcb9d0281fdd67fbea5/xamarin.ios-11.14.0.14.pkg)|https://developer.xamarin.com/releases/ios/xamarin.ios_11/xamarin.ios_11.14/|\n|2018/08/22|11.14.0.13|[xamarin.ios-11.14.0.13.pkg](https://download.visualstudio.microsoft.com/download/pr/e0f4304b-8544-4fc0-9017-69cc691d2f2d/d1af1c2617bf73f31b15e5f14b7c92d2/xamarin.ios-11.14.0.13.pkg)|https://developer.xamarin.com/releases/ios/xamarin.ios_11/xamarin.ios_11.14/|\n|2018/05/31|11.12.0.4|[xamarin.ios-11.12.0.4.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.12.0.4.pkg)|https://developer.xamarin.com/releases/ios/xamarin.ios_11/xamarin.ios_11.12/|\n|2018/05/15|11.10.1.178|[xamarin.ios-11.10.1.178.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.10.1.178.pkg)|https://developer.xamarin.com/releases/ios/xamarin.ios_11/xamarin.ios_11.10/|\n|2018/05/07|11.10.1.177|[xamarin.ios-11.10.1.177.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.10.1.177.pkg)|https://developer.xamarin.com/releases/ios/xamarin.ios_11/xamarin.ios_11.10/|\n|2018/04/03|11.9.1.24|[xamarin.ios-11.9.1.24.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.9.1.24.pkg)|https://developer.xamarin.com/releases/current/.|\n|2018/03/26|11.8.1.28|[xamarin.ios-11.8.1.28.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.8.1.28.pkg)|https://developer.xamarin.com/releases/current/.|\n|2018/03/05|11.8.0.20|[xamarin.ios-11.8.0.20.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.8.0.20.pkg)|https://developer.xamarin.com/releases/current/.|\n|2018/01/26|11.6.1.4|[xamarin.ios-11.6.1.4.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.6.1.4.pkg)|https://developer.xamarin.com/releases/current/.|\n|2018/01/09|11.6.1.3|[xamarin.ios-11.6.1.3.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.6.1.3.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/12/07|11.6.1.2|[xamarin.ios-11.6.1.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.6.1.2.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/12/04|11.4.0.214|[xamarin.ios-11.4.0.214.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.4.0.214.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/11/08|11.3.0.47|[xamarin.ios-11.3.0.47.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.3.0.47.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/10/30|11.2.1.0|[xamarin.ios-11.2.1.0.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.2.1.0.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/09/19|11.0.0.0|[xamarin.ios-11.0.0.0.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-11.0.0.0.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/09/13|10.12.3.3|[xamarin.ios-10.12.3.3.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.12.3.3.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/08/22|10.12.0.20|[xamarin.ios-10.12.0.20.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.12.0.20.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/08/14|10.12.0.18|[xamarin.ios-10.12.0.18.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.12.0.18.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/05/24|10.10.0.36|[xamarin.ios-10.10.0.36.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.10.0.36.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/05/10|10.10.0.33|[xamarin.ios-10.10.0.33.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.10.0.33.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/04/05|10.8.0.175|[xamarin.ios-10.8.0.175.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.8.0.175.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/03/29|10.6.0.10|[xamarin.ios-10.6.0.10.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.6.0.10.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/03/14|10.4.0.128|[xamarin.ios-10.4.0.128.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.4.0.128.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/02/22|10.4.0.123|[xamarin.ios-10.4.0.123.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.4.0.123.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/01/11|10.3.1.8|[xamarin.ios-10.3.1.8.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.3.1.8.pkg)|https://developer.xamarin.com/releases/current/|\n|2016/12/22|10.3.1.7|[xamarin.ios-10.3.1.7.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.3.1.7.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/12/14|10.3.0.0|[xamarin.ios-10.3.0.0.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.3.0.0.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/11/15|10.2.1.5|[xamarin.ios-10.2.1.5.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.2.1.5.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/10/27|10.2.0.4|[xamarin.ios-10.2.0.4.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.2.0.4.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/10/04|10.0.1.10|[xamarin.ios-10.0.1.10.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.0.1.10.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/09/26|10.0.1.8|[xamarin.ios-10.0.1.8.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.0.1.8.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/09/13|10.0.0.6|[xamarin.ios-10.0.0.6.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-10.0.0.6.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/07/29|9.8.2.22|[xamarin.ios-9.8.2.22.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-9.8.2.22.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/06/21|9.8.1.4|[xamarin.ios-9.8.1.4.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-9.8.1.4.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/06/06|9.8.0.323|[xamarin.ios-9.8.0.323.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-9.8.0.323.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/05/16|9.6.2.4|[xamarin.ios-9.6.2.4.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-9.6.2.4.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/03/31|9.6.1.9|[xamarin.ios-9.6.1.9.pkg](https://dl.xamarin.com/MonoTouch/Mac/xamarin.ios-9.6.1.9.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/03/22|9.6.0.0|[monotouch-9.6.0.0.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.6.0.0.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/03/04|9.4.2.27|[monotouch-9.4.2.27.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.4.2.27.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/01/29|9.4.1.25|[monotouch-9.4.1.25.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.4.1.25.pkg)|http://developer.xamarin.com/releases/current.|\n|2016/01/21|9.4.1.24|[monotouch-9.4.1.24.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.4.1.24.pkg)|http://developer.xamarin.com/releases/current.|\n|2015/12/09|9.4.0.0|[monotouch-9.4.0.0.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.4.0.0.pkg)|http://developer.xamarin.com/releases/current.|\n|2015/12/01|9.2.1.54|[monotouch-9.2.1.54.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.2.1.54.pkg)|http://developer.xamarin.com/releases/current.|\n|2015/11/13|9.2.1.51|[monotouch-9.2.1.51.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.2.1.51.pkg)|http://developer.xamarin.com/releases/current.|\n|2015/11/10|9.1.0.31|[monotouch-9.1.0.31.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.1.0.31.pkg)|http://developer.xamarin.com/releases/current.|\n|2015/10/28|9.1.0.27|[monotouch-9.1.0.27.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.1.0.27.pkg)|http://developer.xamarin.com/releases/current/.|\n|2015/09/29|9.0.1.29|[monotouch-9.0.1.29.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.0.1.29.pkg)|https://releases.xamarin.com/stable-release-ios-9-support-service-release-1 for more information.|\n|2015/09/21|9.0.1.20|[monotouch-9.0.1.20.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.0.1.20.pkg)|https://releases.xamarin.com/xamarin-ios-stable-hotfix-for-linker-error-issue for more information.|\n|2015/09/17|9.0.1.18|[monotouch-9.0.1.18.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-9.0.1.18.pkg)|https://blog.xamarin.com/xamarin-for-ios-9-search-deeper/ for more information.|\n|2015/08/25|8.10.5.26|[monotouch-8.10.5.26.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.10.5.26.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.10/|\n|2015/08/07|8.10.4.46|[monotouch-8.10.4.46.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.10.4.46.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.10/|\n|2015/07/01|8.10.3.2|[monotouch-8.10.3.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.10.3.2.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.10/#Xamarin.iOS_8.10.3|\n|2015/06/25|8.10.2.37|[monotouch-8.10.2.37.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.10.2.37.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.10/#Xamarin.iOS_8.10.2|\n|2015/06/23|8.10.1.74|[monotouch-8.10.1.74.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.10.1.74.pkg)||\n|2015/05/27|8.10.1.64|[monotouch-8.10.1.64.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.10.1.64.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.10/#1|\n|2015/05/21|8.10.0.303|[monotouch-8.10.0.303.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.10.0.303.pkg)||\n|2015/04/09|8.9.1.3|[monotouch-8.9.1.3.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.9.1.3.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.9/|\n|2015/03/30|8.8.2.4|[monotouch-8.8.2.4.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.8.2.4.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.8/|\n|2015/03/18|8.8.1.9|[monotouch-8.8.1.9.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.8.1.9.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.8/|\n|2015/03/10|8.8.0.2|[monotouch-8.8.0.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.8.0.2.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.8/|\n|2015/03/06|8.6.3.3|[monotouch-8.6.3.3.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.6.3.3.pkg)||\n|2015/02/26|8.6.2.26|[monotouch-8.6.2.26.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.6.2.26.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.6/#2|\n|2015/02/13|8.6.1.26|[monotouch-8.6.1.26.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.6.1.26.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.6/#6|\n|2015/01/28|8.6.1.20|[monotouch-8.6.1.20.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.6.1.20.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.6/#6|\n|2015/01/09|8.6.0.51|[monotouch-8.6.0.51.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.6.0.51.pkg)||\n|2014/12/12|8.4.0.47|[monotouch-8.4.0.47.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.4.0.47.pkg)||\n|2014/11/17|8.4.0.43|[monotouch-8.4.0.43.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.4.0.43.pkg)||\n|2014/10/31|8.4.0.16|[monotouch-8.4.0.16.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.4.0.16.pkg)||\n|2014/10/22|8.4.0.15|[monotouch-8.4.0.15.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.4.0.15.pkg)||\n|2014/10/20|8.4.0.14|[monotouch-8.4.0.14.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.4.0.14.pkg)||\n|2014/10/16|8.2.0.207|[monotouch-8.2.0.207.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.2.0.207.pkg)||\n|2014/10/03|8.2.0.193|[monotouch-8.2.0.193.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.2.0.193.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.2/|\n|2014/09/25|8.0.0.63|[monotouch-8.0.0.63.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.0.0.63.pkg)||\n|2014/09/18|8.0.0.62|[monotouch-8.0.0.62.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-8.0.0.62.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_8/xamarin.ios_8.0/|\n|2014/09/03|7.4.0.108|[monotouch-7.4.0.108.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.4.0.108.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.4/|\n|2014/08/04|7.2.6.28|[monotouch-7.2.6.28.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.2.6.28.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.2/#6|\n|2014/07/03|7.2.5.5|[monotouch-7.2.5.5.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.2.5.5.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.2/#5|\n|2014/06/20|7.2.5|[monotouch-7.2.5.4.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.2.5.4.pkg)|http://developer.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.2/#5|\n|2014/06/17|7.2.4|[monotouch-7.2.4.4.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.2.4.4.pkg)||\n|2014/05/23|7.2.3.39|[monotouch-7.2.3.39.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.2.3.39.pkg)||\n|2014/04/24|7.2.2.2|[monotouch-7.2.2.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.2.2.2.pkg)||\n|2014/04/21|7.2.1.42|[monotouch-7.2.1.42.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.2.1.42.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.2/#1|\n|2014/03/10|7.2.0|[monotouch-7.2.0.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.2.0.2.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.2/|\n|2014/02/24|7.0.7|[monotouch-7.0.7.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.0.7.2.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.0/#7|\n|2014/01/24|7.0.6|[monotouch-7.0.6.168.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.0.6.168.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.0/#6|\n|2013/12/04|7.0.5|[monotouch-7.0.5.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.0.5.2.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.0/#5|\n|2013/11/12|7.0.4|[monotouch-7.0.4.209.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.0.4.209.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.0/#4|\n|2013/10/07|7.0.2|[monotouch-7.0.2.7.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.0.2.7.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.0#2|\n|2013/09/25|7.0.1.4|[monotouch-7.0.1.4.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.0.1.4.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.0#1|\n|2013/09/18|7.0.0|[monotouch-7.0.0.11.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-7.0.0.11.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.0.html|\n|2013/09/10|6.4.5|[monotouch-6.4.5.0.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.4.5.0.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.4#5|\n|2013/08/28|6.4.4.12|[monotouch-6.4.4.12.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.4.4.12.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.4|\n|2013/08/13|6.4.3|[monotouch-6.4.3.0.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.4.3.0.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.4#3|\n|2013/07/31|6.4.1|[monotouch-6.4.1.1.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.4.1.1.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.4#1|\n|2013/07/22|6.4.0|[monotouch-6.4.0.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.4.0.2.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.4|\n|2013/06/03|6.2.7|[monotouch-6.2.7.1.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.2.7.1.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.2#Xamarin.iOS_6.2.7|\n|2013/05/29|6.2.6|[monotouch-6.2.6.6.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.2.6.6.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.2#Xamarin.iOS_6.2.6|\n|2013/05/15|6.2.5|[monotouch-6.2.5.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.2.5.2.pkg)||\n|2013/04/23|6.2.4|[monotouch-6.2.4.2.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.2.4.2.pkg)||\n|2013/04/10|6.2.3|[monotouch-6.2.3.0.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.2.3.0.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.2|\n|2013/04/09|6.2.2|[monotouch-6.2.2.8.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.2.2.8.pkg)||\n|2013/03/19|6.2.1|[monotouch-6.2.1.201.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.2.1.201.pkg)||\n|2013/03/12|6.2.1|[monotouch-6.2.1.199.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.2.1.199.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.2|\n|2013/02/19|6.2.0|[monotouch-6.2.0.65.pkg](https://dl.xamarin.com/MonoTouch/Mac/monotouch-6.2.0.65.pkg)|http://docs.xamarin.com/releases/ios/xamarin.ios_6/xamarin.ios_6.2|\n|2013/01/29|6.0.10|[monotouch-6.0.10.pkg](https://dl.xamarin.com/priv/9bed89583a4a3f1e5c4e4021583942/MonoTouch/Mac/monotouch-6.0.10.pkg)||\n|2012/12/18|6.0.8|[monotouch-6.0.8.pkg](https://dl.xamarin.com/priv/3dffcec72ccef960d641578f2fcf185/MonoTouch/Mac/monotouch-6.0.8.pkg)|http://docs.xamarin.com/ios/releases/MonoTouch_6/MonoTouch_6.0#MonoTouch_6.0.8|\n|2012/11/03|6.0.6|[monotouch-6.0.6.pkg](https://dl.xamarin.com/priv/1edf75dc763a09195fbdfb81cf367/MonoTouch/Mac/monotouch-6.0.6.pkg)|http://docs.xamarin.com/ios/releases/MonoTouch_6/MonoTouch_6.0#MonoTouch_6.0.6|\n|2012/10/04|6.0.4|[monotouch-6.0.4.pkg](https://dl.xamarin.com/priv/77b2294e38cbaf8d73aec3379875b9b8/MonoTouch/Mac/monotouch-6.0.4.pkg)||\n|2012/09/28|6.0.2|[monotouch-6.0.2.pkg](https://dl.xamarin.com/priv/547553bb491f13bb82178cee70e99925/MonoTouch/Mac/monotouch-6.0.2.pkg)|http://docs.xamarin.com/ios/releases/MonoTouch_6/MonoTouch_6.0#MonoTouch_6.0.2|\n|2012/09/25|6.0.1|[monotouch-6.0.1.pkg](https://dl.xamarin.com/priv/9a5ba721b79e4a5b246e27917ca4e/MonoTouch/Mac/monotouch-6.0.1.pkg)|http://docs.xamarin.com/ios/releases/MonoTouch_6/MonoTouch_6.0#MonoTouch_6.0.1|\n|2012/09/19|6.0|[monotouch-6.0.0.pkg](https://dl.xamarin.com/priv/96caf18ade7810abb6db631f8466/MonoTouch/Mac/monotouch-6.0.0.pkg)|http://docs.xamarin.com/ios/releases/MonoTouch_6/MonoTouch_6.0|\n\n# Xamarin.Mac\n\n| Date | Version | Package | Release Notes |\n|------|---------|---------|---------------|\n|2023/11/14|9.3.0.23|[xamarin.mac-9.3.0.23.pkg](https://download.visualstudio.microsoft.com/download/pr/ceb0ea3f-4db8-46b4-8dc3-8049d27c0107/7b04843d469aae253519989fcb8e750f/xamarin.mac-9.3.0.23.pkg)||\n|2023/10/10|9.3.0.18|[xamarin.mac-9.3.0.18.pkg](https://download.visualstudio.microsoft.com/download/pr/8cbf56b1-ef0d-466f-8cfe-fae4ba8c5080/afd720a8aaa6ec1d4d27ddf0c653a9c1/xamarin.mac-9.3.0.18.pkg)||\n|2023/05/17|9.3.0.6|[xamarin.mac-9.3.0.6.pkg](https://download.visualstudio.microsoft.com/download/pr/b4928191-de3d-42cb-a24f-709e5d71626c/586143733de41c62d8b6179d7eeaf3e5/xamarin.mac-9.3.0.6.pkg)||\n|2023/02/21|9.1.0.5|[xamarin.mac-9.1.0.5.pkg](https://download.visualstudio.microsoft.com/download/pr/5f9ea8f6-0afe-46b3-b8e8-5dee4c2dd14c/c5c4f99a992a8cc51b2bad3d31ef6b96/xamarin.mac-9.1.0.5.pkg)||\n|2023/02/14|9.1.0.2|[xamarin.mac-9.1.0.2.pkg](https://download.visualstudio.microsoft.com/download/pr/91371293-2fe3-4392-b5ca-d4f73b07ce0a/dbf22c9b27f23d1a8b408ae7d93d4b76/xamarin.mac-9.1.0.2.pkg)||\n|2022/12/15|9.0.0.27|[xamarin.mac-9.0.0.27.pkg](https://download.visualstudio.microsoft.com/download/pr/c8bc547f-869e-4d64-a271-f8b3a29ee545/4fbfc55453fe36fe5bf4128d6d495911/xamarin.mac-9.0.0.27.pkg)||\n|2022/08/09|8.12.0.2|[xamarin.mac-8.12.0.2.pkg](https://download.visualstudio.microsoft.com/download/pr/e81e04d3-768a-4310-9c9b-f32e8ba00eaa/bcff5cca8701bc5871b8892fd32fb3e6/xamarin.mac-8.12.0.2.pkg)||\n|2022/06/14|8.10.0.5|[xamarin.mac-8.10.0.5.pkg](https://download.visualstudio.microsoft.com/download/pr/09e9572f-1c2a-4d79-a1e8-5469de9410e8/f4ee484851ac275ccd51fcee70451fb0/xamarin.mac-8.10.0.5.pkg)||\n|2022/05/23|8.10.0.1|[xamarin.mac-8.10.0.1.pkg](https://download.visualstudio.microsoft.com/download/pr/afed6f32-67b3-4684-b0a4-e2b74d751bce/7a6059ca429d778d1e1a3525a337eb66/xamarin.mac-8.10.0.1.pkg)||\n|2022/04/12|8.8.0.3|[xamarin.mac-8.8.0.3.pkg](https://download.visualstudio.microsoft.com/download/pr/d4e328bd-3f10-41f1-9b22-6bc556d1ffc2/778eeb3d773a776c97efbfa84b6fefd8/xamarin.mac-8.8.0.3.pkg)||\n|2022/03/31|8.8.0.0|[xamarin.mac-8.8.0.0.pkg](https://download.visualstudio.microsoft.com/download/pr/88bcf6a9-7ea5-417b-9a3e-e5bcc397758c/ced97c130a63c34fa1ff820d9de111b1/xamarin.mac-8.8.0.0.pkg)||\n|2022/02/16|8.6.0.3|[xamarin.mac-8.6.0.3.pkg](https://download.visualstudio.microsoft.com/download/pr/6fe2c21c-668d-4922-895c-75504140383f/37ac3465bcd77c4a85857f469fc42bb5/xamarin.mac-8.6.0.3.pkg)||\n|2021/12/16|8.4.0.0|[xamarin.mac-8.4.0.0.pkg](https://download.visualstudio.microsoft.com/download/pr/f4f0db99-f0b3-41c5-a57d-b94bbe1226f3/e7c016f4fa32015b625112a27008663a/xamarin.mac-8.4.0.0.pkg)||\n|2021/12/15|8.2.0.17|[xamarin.mac-8.2.0.17.pkg](https://download.visualstudio.microsoft.com/download/pr/8a886e9c-7ade-4d57-870b-c8534c453b14/dff03fbc7810f431c76b4f7d5aa489fc/xamarin.mac-8.2.0.17.pkg)|https://aka.ms/vsmac-release-notes.|\n|2021/11/08|8.2.0.1|[xamarin.mac-8.2.0.1.pkg](https://download.visualstudio.microsoft.com/download/pr/f4dcfae1-0b78-4572-9e82-7bfc37db4965/27d48e655ddc2bcfd5e23a1fd8bfdcbc/xamarin.mac-8.2.0.1.pkg)||\n|2021/09/29|7.14.0.27|[xamarin.mac-7.14.0.27.pkg](https://download.visualstudio.microsoft.com/download/pr/cddb0c4f-a69c-42a3-bb23-085e48d17af4/ca7547ae1b83548823e23a06d9960f47/xamarin.mac-7.14.0.27.pkg)||\n|2021/07/14|7.14.0.24|[xamarin.mac-7.14.0.24.pkg](https://download.visualstudio.microsoft.com/download/pr/4725e1ed-6254-4880-a410-c120d95a814c/f540d6e1491fab7f3fec6cf296cb5eb9/xamarin.mac-7.14.0.24.pkg)||\n|2021/06/09|7.14.0.3|[xamarin.mac-7.14.0.3.pkg](https://download.visualstudio.microsoft.com/download/pr/31b0e19f-e253-4a53-b384-22e389a91e83/c55612b75c6fe84148d87eb0aeb5b48d/xamarin.mac-7.14.0.3.pkg)||\n|2021/06/02|7.14.0.1|[xamarin.mac-7.14.0.1.pkg](https://download.visualstudio.microsoft.com/download/pr/414d1675-ca0b-4b5b-8a4e-26b693883581/57d20fb843680ddd86e0570ccbcdb3fe/xamarin.mac-7.14.0.1.pkg)||\n|2021/05/03|7.10.0.5|[xamarin.mac-7.10.0.5.pkg](https://download.visualstudio.microsoft.com/download/pr/e12e515d-da12-410b-acac-dd564a090b60/7537c3cefef02568099b29c1aa7e88a9/xamarin.mac-7.10.0.5.pkg)||\n|2021/03/02|7.8.2.5|[xamarin.mac-7.8.2.5.pkg](https://download.visualstudio.microsoft.com/download/pr/03bd1f2d-5b2a-4b65-8a7b-91da84bd241c/ed062e57143e80070fee1366105a30a6/xamarin.mac-7.8.2.5.pkg)||\n|2021/02/19|7.4.0.10|[xamarin.mac-7.4.0.10.pkg](https://download.visualstudio.microsoft.com/download/pr/65083286-ba60-4d43-a5bc-d8243c1823ea/acb7614cda0884db9ea09812c99e679b/xamarin.mac-7.4.0.10.pkg)||\n|2021/02/09|7.4.0.4|[xamarin.mac-7.4.0.4.pkg](https://download.visualstudio.microsoft.com/download/pr/5cbc9033-e1da-4b8b-91ea-503356b2a52a/112c7acfca01eddeaa86a5b8390e182c/xamarin.mac-7.4.0.4.pkg)||\n|2021/01/12|7.2.0.3|[xamarin.mac-7.2.0.3.pkg](https://download.visualstudio.microsoft.com/download/pr/573004d1-39a9-4cf7-87b0-e0eea351cd00/b9b9a8e129dafd7cc8dc23a6d6b09185/xamarin.mac-7.2.0.3.pkg)||\n|2020/11/19|7.0.0.15|[xamarin.mac-7.0.0.15.pkg](https://download.visualstudio.microsoft.com/download/pr/2d952143-6407-42dc-a589-f62cebff0634/6a061cf93f0dea18b27f65d697897b9e/xamarin.mac-7.0.0.15.pkg)||\n|2020/11/10|6.22.1.26|[xamarin.mac-6.22.1.26.pkg](https://download.visualstudio.microsoft.com/download/pr/68caeaf6-39d4-4b9b-85e3-d20c0a123d1e/3fd74515e676be1f528bd4bec104ca6c/xamarin.mac-6.22.1.26.pkg)||\n|2020/08/05|6.20.2.2|[xamarin.mac-6.20.2.2.pkg](https://download.visualstudio.microsoft.com/download/pr/b089be2f-932a-40ab-904b-b626f9e6427b/6aad9f3ea4fbfb92ce267e0f60b34797/xamarin.mac-6.20.2.2.pkg)||\n|2020/07/21|6.18.3.2|[xamarin.mac-6.18.3.2.pkg](https://download.visualstudio.microsoft.com/download/pr/f42979a0-52fb-454d-bc96-0916cf4450f9/40dd78214c7790f18517b19d914d0bee/xamarin.mac-6.18.3.2.pkg)||\n|2020/06/02|6.18.2.1|[xamarin.mac-6.18.2.1.pkg](https://download.visualstudio.microsoft.com/download/pr/68ffa29a-6a5b-41f7-af7b-506ddcf4bbfc/9e1be52d9bff3599b796cfbab3f3d463/xamarin.mac-6.18.2.1.pkg)||\n|2020/05/19|6.18.1.31|[xamarin.mac-6.18.1.31.pkg](https://download.visualstudio.microsoft.com/download/pr/15b48a0a-f363-47d8-9687-b7b59dbafd10/fc940b37a3b83bb2ed334f87ce11ac2d/xamarin.mac-6.18.1.31.pkg)||\n|2020/04/07|6.16.0.13|[xamarin.mac-6.16.0.13.pkg](https://download.visualstudio.microsoft.com/download/pr/fb168f8a-b44e-4582-8147-eefdf1562110/30f09915995da752f30f432760e4ddbe/xamarin.mac-6.16.0.13.pkg)||\n|2020/04/01|6.16.0.11|[xamarin.mac-6.16.0.11.pkg](https://download.visualstudio.microsoft.com/download/pr/6e56949e-1beb-4550-abf9-ff404868de82/547895e66c0543faccb25933d8691371/xamarin.mac-6.16.0.11.pkg)||\n|2020/03/23|6.14.1.39|[xamarin.mac-6.14.1.39.pkg](https://download.visualstudio.microsoft.com/download/pr/8f94ca38-039a-4c9f-a51a-a6cb33c76a8c/979144aead55378df75482d35957cdc9/xamarin.mac-6.14.1.39.pkg)||\n|2020/02/25|6.10.0.21|[xamarin.mac-6.10.0.21.pkg](https://download.visualstudio.microsoft.com/download/pr/16ae715b-ae37-47be-a5dc-c7abd236fbef/90d9e8f056c51a45d9e649ec81b38126/xamarin.mac-6.10.0.21.pkg)||\n|2020/01/28|6.10.0.17|[xamarin.mac-6.10.0.17.pkg](https://download.visualstudio.microsoft.com/download/pr/9d3de04b-f20a-42fd-8b9f-9e9132950e43/fa8827ef17450ea2857d91fa398b3cfc/xamarin.mac-6.10.0.17.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/6/6.10|\n|2020/01/08|6.8.3.0|[xamarin.mac-6.8.3.0.pkg](https://download.visualstudio.microsoft.com/download/pr/3f968dbb-f1e3-4dbf-9e2f-b7337a99f3a2/b732451c7088213b2bfe7151f753ffac/xamarin.mac-6.8.3.0.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/6/6.8|\n|2019/11/05|6.6.0.12|[xamarin.mac-6.6.0.12.pkg](https://download.visualstudio.microsoft.com/download/pr/c66cc733-8129-4551-8f59-4483f636931b/52194acdeb070158d49fe14cd1453062/xamarin.mac-6.6.0.12.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/6/6.6|\n|2019/10/10|6.4.0.2|[xamarin.mac-6.4.0.2.pkg](https://download.visualstudio.microsoft.com/download/pr/6a9f2134-313e-4d48-ac3e-4b14ecb3e311/4dd2ac187f85b54c672bb55304003b43/xamarin.mac-6.4.0.2.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/6/6.4|\n|2019/10/07|6.2.0.47|[xamarin.mac-6.2.0.47.pkg](https://download.visualstudio.microsoft.com/download/pr/336d5c3a-3c2f-4b7d-bfad-747e5e685f58/f812b77be77cb9acc728e97e49dce1dd/xamarin.mac-6.2.0.47.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/6/6.2|\n|2019/09/23|6.2.0.42|[xamarin.mac-6.2.0.42.pkg](https://download.visualstudio.microsoft.com/download/pr/54b422d1-7448-4c23-a8dd-f6db04641531/b83dc3119d4c49f3922ff286128b4874/xamarin.mac-6.2.0.42.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/6/6.2|\n|2019/08/05|5.14.0.114|[xamarin.mac-5.14.0.114.pkg](https://download.visualstudio.microsoft.com/download/pr/9753ad10-d060-4427-880b-b4e0288878e1/140f9d84b62b3c57f00279f2b32360ce/xamarin.mac-5.14.0.114.pkg)|https://docs.microsoft.com/en-us/xamarin/ios/release-notes/5/5.14|\n|2019/07/24|5.14.0.110|[xamarin.mac-5.14.0.110.pkg](https://download.visualstudio.microsoft.com/download/pr/f5337763-a4c8-4af9-8471-88fce5b1443f/65b2bcda47cf1d707a39f334edb0203c/xamarin.mac-5.14.0.110.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/5/5.14|\n|2019/06/20|5.10.0.157|[xamarin.mac-5.10.0.157.pkg](https://download.visualstudio.microsoft.com/download/pr/fdaee266-06e3-46f0-bd67-5081279dd1cf/577697f6fbddd9542d1c862a8603d362/xamarin.mac-5.10.0.157.pkg)|https://docs.microsoft.com/xamarin/mac/release-notes/5/5.10|\n|2019/06/15|5.10.0.153|[xamarin.mac-5.10.0.153.pkg](https://download.visualstudio.microsoft.com/download/pr/b67e7ed9-9258-48e6-ae1a-4315741c920b/04bf1d96f7d633254254d00667146491/xamarin.mac-5.10.0.153.pkg)|https://docs.microsoft.com/xamarin/mac/release-notes/5/5.10|\n|2019/04/09|5.8.0.0|[xamarin.mac-5.8.0.0.pkg](https://download.visualstudio.microsoft.com/download/pr/a5bac460-0a54-4fea-9010-464b1ef8ee6f/9ccfa18c4ed093ee879c02a321965521/xamarin.mac-5.8.0.0.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/5/5.8|\n|2019/04/02|5.6.0.25|[xamarin.mac-5.6.0.25.pkg](https://download.visualstudio.microsoft.com/download/pr/0174da02-9f57-4527-9273-5cc5946cc4bd/33d246d2e5108df8c3190c5b50203a67/xamarin.mac-5.6.0.25.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/5/5.6|\n|2019/03/20|5.2.1.16|[xamarin.mac-5.2.1.16.pkg](https://download.visualstudio.microsoft.com/download/pr/b4e72dff-9996-486d-9dea-3d5cb44c6789/d73a391a98ff7c6e5b404e292abda85b/xamarin.mac-5.2.1.16.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/5/5.2|\n|2019/02/13|5.2.1.15|[xamarin.mac-5.2.1.15.pkg](https://download.visualstudio.microsoft.com/download/pr/aff4604c-493d-472f-8bd3-74113a034fbf/b1abb711ae94f1f54f8259bb3a2dc4ca/xamarin.mac-5.2.1.15.pkg)|https://github.com/mono/mono/issues/10488|\n|2019/01/16|5.2.1.13|[xamarin.mac-5.2.1.13.pkg](https://download.visualstudio.microsoft.com/download/pr/59f8404a-29e9-4bb9-aeba-3692ff4ccd0a/3e7c731b299235a9493e68d4595162ae/xamarin.mac-5.2.1.13.pkg)|https://docs.microsoft.com/en-us/xamarin/mac/release-notes/5/5.2|\n|2018/12/12|5.2.1.12|[xamarin.mac-5.2.1.12.pkg](https://download.visualstudio.microsoft.com/download/pr/f9f9988e-d20f-4a3f-afb0-ac331c87013c/e3b67ed938dbfd32811529e6670301ff/xamarin.mac-5.2.1.12.pkg)|https://developer.xamarin.com/releases/mac/xamarin.mac_5/xamarin.mac_5.2/|\n|2018/11/28|5.2.1.11|[xamarin.mac-5.2.1.11.pkg](https://download.visualstudio.microsoft.com/download/pr/d2a47a0b-e746-4a71-a929-0304443b4e3f/5211f469a274932ec16891b3e57d71f3/xamarin.mac-5.2.1.11.pkg)|https://developer.xamarin.com/releases/mac/xamarin.mac_5/xamarin.mac_5.2/|\n|2018/10/01|5.0.0.0|[xamarin.mac-5.0.0.0.pkg](https://download.visualstudio.microsoft.com/download/pr/3849ffa9-0763-4727-8ae1-d67da9a6e60c/5c02d563ef9568fa79ba6dcf0cfeabd0/xamarin.mac-5.0.0.0.pkg)|https://developer.xamarin.com/releases/mac/xamarin.mac_5/xamarin.mac_5.0/|\n|2018/08/29|4.6.0.14|[xamarin.mac-4.6.0.14.pkg](https://download.visualstudio.microsoft.com/download/pr/db56f4ed-4902-4bee-b4a0-11b2477ad3df/a7d1d4c6625b8918133d218211555b1c/xamarin.mac-4.6.0.14.pkg)|https://developer.xamarin.com/releases/mac/xamarin.mac_4/xamarin.mac_4.6/|\n|2018/08/22|4.6.0.13|[xamarin.mac-4.6.0.13.pkg](https://download.visualstudio.microsoft.com/download/pr/257e3b11-5bb5-46f4-80d9-dc2f1170fba0/11cc109b6cbe50cee9e7685fff2326e8/xamarin.mac-4.6.0.13.pkg)|https://developer.xamarin.com/releases/mac/xamarin.mac_4/xamarin.mac_4.6/|\n|2018/05/31|4.4.1.193|[xamarin.mac-4.4.1.193.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-4.4.1.193.pkg)|https://developer.xamarin.com/releases/mac/xamarin.mac_4/xamarin.mac_4.4/|\n|2018/05/15|4.4.1.178|[xamarin.mac-4.4.1.178.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-4.4.1.178.pkg)|https://developer.xamarin.com/releases/mac/xamarin.mac_4/xamarin.mac_4.4/|\n|2018/05/07|4.4.1.176|[xamarin.mac-4.4.1.176.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-4.4.1.176.pkg)|https://developer.xamarin.com/releases/mac/xamarin.mac_4/xamarin.mac_4.4/|\n|2018/04/17|4.2.1.29|[xamarin.mac-4.2.1.29.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-4.2.1.29.pkg)|https://developer.xamarin.com/releases/mac/xamarin.mac_4/xamarin.mac_4.2/|\n|2018/04/03|4.2.1.28|[xamarin.mac-4.2.1.28.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-4.2.1.28.pkg)|https://developer.xamarin.com/releases/current/.|\n|2018/03/05|4.2.0.20|[xamarin.mac-4.2.0.20.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-4.2.0.20.pkg)|https://developer.xamarin.com/releases/current/.|\n|2018/01/26|4.0.0.216|[xamarin.mac-4.0.0.216.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-4.0.0.216.pkg)|https://developer.xamarin.com/releases/current/.|\n|2018/01/09|4.0.0.215|[xamarin.mac-4.0.0.215.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-4.0.0.215.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/12/04|4.0.0.214|[xamarin.mac-4.0.0.214.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-4.0.0.214.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/10/30|3.8.1.0|[xamarin.mac-3.8.1.0.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.8.1.0.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/10/10|3.8.0.49|[xamarin.mac-3.8.0.49.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.8.0.49.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/09/13|3.6.3.3|[xamarin.mac-3.6.3.3.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.6.3.3.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/08/22|3.6.0.19|[xamarin.mac-3.6.0.19.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.6.0.19.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/08/14|3.6.0.17|[xamarin.mac-3.6.0.17.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.6.0.17.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/05/24|3.4.0.36|[xamarin.mac-3.4.0.36.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.4.0.36.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/05/10|3.4.0.33|[xamarin.mac-3.4.0.33.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.4.0.33.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/04/05|3.2.0.175|[xamarin.mac-3.2.0.175.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.2.0.175.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/03/14|3.0.0.398|[xamarin.mac-3.0.0.398.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.0.0.398.pkg)|https://developer.xamarin.com/releases/current/.|\n|2017/02/22|3.0.0.393|[xamarin.mac-3.0.0.393.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-3.0.0.393.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/12/22|2.10.0.120|[xamarin.mac-2.10.0.120.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-2.10.0.120.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/11/15|2.10.0.113|[xamarin.mac-2.10.0.113.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-2.10.0.113.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/10/04|2.10.0.105|[xamarin.mac-2.10.0.105.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-2.10.0.105.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/09/26|2.10.0.103|[xamarin.mac-2.10.0.103.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-2.10.0.103.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/09/08|2.10.0.99|[xamarin.mac-2.10.0.99.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-2.10.0.99.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/07/29|2.8.2.22|[xamarin.mac-2.8.2.22.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-2.8.2.22.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/06/21|2.8.1.4|[xamarin.mac-2.8.1.4.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-2.8.1.4.pkg)|https://developer.xamarin.com/releases/current/.|\n|2016/06/06|2.8.0.323|[xamarin.mac-2.8.0.323.pkg](https://dl.xamarin.com/XamarinforMac/Mac/xamarin.mac-2.8.0.323.pkg)|https://developer.xamarin.com/releases/current/.|\n\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.96875,
          "content": "<Project>\n\t<PropertyGroup>\n\t\t<!-- Disables the transitive restore of packages like Microsoft.AspNetCore.App.Ref, Microsoft.WindowsDesktop.App.Ref -->\n\t\t<DisableTransitiveFrameworkReferenceDownloads>true</DisableTransitiveFrameworkReferenceDownloads>\n\t\t<MonoCecilPackageVersion>0.11.5</MonoCecilPackageVersion>\n\t\t<MSBuildStructuredLoggerPackageVersion>2.2.158</MSBuildStructuredLoggerPackageVersion>\n\t\t<MicrosoftBuildPackageVersion>16.10.0</MicrosoftBuildPackageVersion>\n\t\t<MicrosoftBuildFrameworkPackageVersion>$(MicrosoftBuildPackageVersion)</MicrosoftBuildFrameworkPackageVersion>\n\t\t<MicrosoftBuildTasksCorePackageVersion>$(MicrosoftBuildPackageVersion)</MicrosoftBuildTasksCorePackageVersion>\n\t\t<MicrosoftBuildUtilitiesCorePackageVersion>$(MicrosoftBuildPackageVersion)</MicrosoftBuildUtilitiesCorePackageVersion>\n\t\t<NUnitXmlTestLoggerPackageVersion>3.1.15</NUnitXmlTestLoggerPackageVersion>\n\t</PropertyGroup>\n\t<Import Project=\"Build.props\" Condition=\"Exists('Build.props')\" />\n</Project>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.283203125,
          "content": "Xamarin SDK\n\nThe MIT License (MIT)\n\nCopyright (c) .NET Foundation Contributors\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n### OpenTK\n\nThe Open Toolkit library license\n\nCopyright (c) 2006 - 2009 The Open Toolkit library.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\nThird parties\n\n\nOpenTK.Platform.Windows and OpenTK.Platform.X11 include portions of the Mono class library. These portions are covered by the following license:\n\nCopyright (c) 2004 Novell, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nOpenTK.Compatibility offers the Tao namespace, which includes portions of the Tao Framework library. These portions are covered by the following license:\n\nCopyright ©2003-2007 Tao Framework Team\nhttp://www.taoframework.com\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: \n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nOpenTK.Half offers Half-to-Single and Single-to-Half conversions based on OpenEXR source code, which is covered by the following license:\n\nCopyright (c) 2002, Industrial Light & Magic, a division of Lucas Digital Ltd. LLC. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n*       Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n*       Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n*       Neither the name of Industrial Light & Magic nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Localize",
          "type": "tree",
          "content": null
        },
        {
          "name": "Make.config",
          "type": "blob",
          "size": 31.30078125,
          "content": "include $(TOP)/mk/subdirs.mk\n\n# Common cURL command:\n# --fail: return an exit code if the connection succeeded, but returned an HTTP error code.\n# --location: follow redirects\n# --connect-timeout: if a connection doesn't happen within 15 seconds, then fail (and potentially retry). This is lower than the default to not get stuck waiting for a long time in case something goes wrong (but instead retry).\n# --verbose / --silent: no explanation needed.\n# --show-error: show an error to the terminal even if asked to be --silent.\nCURL = curl --fail --location --connect-timeout 15 $(if $(V),--verbose,--silent) --show-error\n# --retry: retry download 20 times\n# --retry-delay: wait 2 seconds between each retry attempt\n# --retry-all-errors: ignore the definition of insanity and retry even for errors that seem like you'd get the same result (such as 404). This isn't the real purpose, because this will also retry errors that will get a different result (such as connection failures / resets), which apparently --retry doesn't cover.\nCURL_RETRY = $(CURL) --retry 20 --retry-delay 2 --retry-all-errors\n\nDOTNET_TFM=net9.0\nDOTNET_MAJOR_VERSION:=$(firstword $(subst ., ,$(subst net,,$(DOTNET_TFM))))\n# calculate commit distance and store it in a file so that we don't have to re-calculate it every time make is executed.\n\n# Support for hardcoding a commit distance start offset.\n#\n# The default is to add X000, where X is the major .NET version: we need to\n# publish different versions of our NuGets for different .NET version\n# (example: we need to publish one NuGet with support for Xcode 14.3 for .NET\n# 6, and another one for .NET 7) - and these need to have different versions,\n# and ordered correctly (the .NET 7 version must have a higher version than\n# the .NET 6 version), and ideally it would be possible to just look at the\n# version to see which .NET version it's targeting. Adding X000 to the commit\n# distance accomplishes all these goals (as long as the commit distance itself\n# doesn't need more than 3 digits).\nNUGET_VERSION_COMMIT_DISTANCE_START=$(DOTNET_MAJOR_VERSION)000\nNUGET_VERSION_STABLE_COMMIT_DISTANCE_START=$(DOTNET_MAJOR_VERSION)000\n\n-include $(TOP)/Make.config.inc\n$(TOP)/Make.config.inc: $(TOP)/Make.config $(TOP)/mk/mono.mk\n\t$(Q) cd $(TOP) && \\\n\t\tALL_DOTNET_PLATFORMS=\"$(ALL_DOTNET_PLATFORMS)\" \\\n\t\tNUGET_VERSION_COMMIT_DISTANCE_START=$(NUGET_VERSION_COMMIT_DISTANCE_START) \\\n\t\tNUGET_VERSION_STABLE_COMMIT_DISTANCE_START=$(NUGET_VERSION_STABLE_COMMIT_DISTANCE_START) \\\n\t\t./create-make-config.sh\n\ninclude $(TOP)/Make.versions\n\n# These versions are used to compute the API diff between the current commit and our current stable release.\n# The value is taken from the name + version of the Ref pack.\n# Example: given the Ref pack \"Microsoft.iOS.Ref.net8.0_17.5\" with the version \"17.5.8030\", the value\n# to write here would be the part after \"Microsoft.iOS.Ref.\" + \"/\" + version: \"net8.0_17.5/17.5.8030\"\nSTABLE_NUGET_VERSION_iOS=net9.0_18.2/18.2.9170\nSTABLE_NUGET_VERSION_tvOS=net9.0_18.2/18.2.9170\nSTABLE_NUGET_VERSION_MacCatalyst=net9.0_18.2/18.2.9170\nSTABLE_NUGET_VERSION_macOS=net9.0_15.2/15.2.9170\n\nPACKAGE_HEAD_REV=$(shell git rev-parse HEAD)\n\n#\n# /!\\ README /!\\\n#\n# A release branch requires updating some variables.\n# This is done in Make.versions, not here.\n#\n\nifneq ($(BUILD_SOURCEBRANCH),)\n# BUILD_SOURCEBRANCH is set in Azure DevOps, so use that value if it exists\n# it seems to always start with refs/heads/, so strip off that first.\nCURRENT_BRANCH:=$(subst refs/heads/,,${BUILD_SOURCEBRANCH})\nelse ifeq ($(BRANCH_NAME),)\n# BRANCH_NAME is set in Jenkins, so this is for local builds.\nCURRENT_BRANCH:=$(shell git rev-parse --abbrev-ref HEAD)\nelse\nCURRENT_BRANCH:=$(BRANCH_NAME)\nendif\nCURRENT_BRANCH_SED_ESCAPED:=$(subst |,\\|,$(subst &,\\&,$(subst $$,\\$$,$(subst /,\\/,$(CURRENT_BRANCH)))))\n# The branch name in the nuget version has to be alphanumeric, and we follow the semantic versioning spec,\n# which defines \"alphanumeric\" as the letters, numbers and the dash character (and nothing else).\n# So here we replace all non-alphanumeric characters in the branch name with a dash.\nCURRENT_BRANCH_ALPHANUMERIC:=$(shell export LANG=C; printf \"%s\" \"$(CURRENT_BRANCH)\" | tr -c '[a-zA-Z0-9-]' '-')\n\n# Set proper path for git directory\n# If the repo is checked out as a worktree, the default .git/ does not exist,\n# instead there is a .git file containing the path to the correct .git/\nGIT_DIRECTORY:=$(TOP)/.git\nALTERNATIVE_GIT:=$(shell sed -n 's/^ *gitdir: //p' $(GIT_DIRECTORY))\nifneq ($(ALTERNATIVE_GIT),)\nGIT_DIRECTORY:=$(ALTERNATIVE_GIT)\nendif\n\n# Get the current hash\nCURRENT_HASH:=$(shell git log -1 --pretty=%h)\nCURRENT_HASH_LONG:=$(shell git log -1 --pretty=%H)\n\n# Get the pull request number, if this is a pull request\n# Jenkins may set either CHANGE_ID or ghprbPullId\n# Azure Devops sets SYSTEM_PULLREQUEST_PULLREQUESTNUMBER\nifneq ($(CHANGE_ID),)\nPULL_REQUEST_ID=$(CHANGE_ID)\nelse ifneq ($(ghprbPullId),)\nPULL_REQUEST_ID=$(ghprbPullId)\nelse ifneq ($(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER),)\nPULL_REQUEST_ID=$(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)\nendif\n\n# We have three types of branches:\n#\n# 1. Release (stable) branches. These have stable versioning (no prerelease identifiers).\n# 2. Pre-release branches. These have stable versioning + prerelease identifiers.\n# 3. Any other branches, These have CI/PR versioning.\n#\n# * A PR branch (case 3 above) is identified by the PULL_REQUEST_ID variable\n#   (set in the environment). This takes precedence over any other variable.\n# * Otherwise a release branch (case 1 above) is identified by setting the\n#   NUGET_RELEASE_BRANCH variable to the name of the release branch (this\n#   seems redundant: why should a branch name itself? but it's important if\n#   another branch is created from the release branch: that other branch might\n#   be any other random branch for whatever purpose, and shouldn't be\n#   considered a release branch just because someone forgot to unset a\n#   variable).\n# * Otherwise a prerelease branch (case 2 above) is identified by the\n#   NUGET_HARDCODED_PRERELEASE_IDENTIFIER variable, which is used to hardcode\n#   a prerelease version. Note that NUGET_HARDCODED_PRERELEASE_BRANCH must\n#   also be set to the name of the current branch, otherwise\n#   NUGET_HARDCODED_PRERELEASE_IDENTIFIER will be ignored.\n# * Otherwise we're a CI branch (case 3 above).\n\n## If this branch is a release branch, set NUGET_RELEASE_BRANCH to the exact branch name (so that any other branches won't become release branches just by branching off from a release branch).\n## Example: release/6.0.3xx\n# NUGET_RELEASE_BRANCH=\n\n## If this is a pre-release (alpha, beta, rc, xcode, etc.) branch, set NUGET_HARDCODED_PRERELASE_BRANCH to the exact branch name. Also set NUGET_HARDCODED_PRELEASE_IDENTIFIER to the prerelease identifier to use.\n## Example:\n##   NUGET_HARDCODED_PRERELEASE_BRANCH=release/6.0.3xx-rc3\n##   NUGET_HARDCODED_PRERELEASE_IDENTIFIER=rc.3\n## Example 2: we might sometimes make 'main' a prerelease branch:\n##   NUGET_HARDCODED_PRERELEASE_BRANCH=main\n##   NUGET_HARDCODED_PRERELEASE_IDENTIFIER=rc.4\n## In this case, when we create an actual rc4 branch, the value for\n## NUGET_HARDCODED_PRERELEASE_IDENTIFIER in main must be changed to \"rc.5\" (or\n## anything else), while the value for NUGET_HARDCODED_PRERELEASE_BRANCH in\n## the rc4 branch will become the rc4 branch name. The value in main must\n## change *first*, otherwise we'll produce builds with the same version from\n## two different branches (which is very, very bad).\n##\n## Note that the prerelease identifier should be as short as possible, because otherwise\n## the resulting package name can become too long for MSIs.\nNUGET_HARDCODED_PRERELEASE_IDENTIFIER=net9-rtm\nNUGET_HARDCODED_PRERELEASE_BRANCH=net9.0\n\n# compute the alphanumeric version of branch names\nNUGET_RELEASE_BRANCH_ALPHANUMERIC:=$(shell export LANG=C; printf \"%s\" \"$(NUGET_RELEASE_BRANCH)\" | tr -c '[a-zA-Z0-9-]' '-')\nNUGET_HARDCODED_PRERELEASE_BRANCH_ALPHANUMERIC:=$(shell export LANG=C; printf \"%s\" \"$(NUGET_HARDCODED_PRERELEASE_BRANCH)\" | tr -c '[a-zA-Z0-9-]' '-')\n\n# Compute the prerelease identifier based on the variables above\n# DO NOT MODIFY THE BELOW CONDITIONS TO HARDCODE A VERSION NUMBER FOR (PRE)RELEASE BRANCHES.\n# READ INSTRUCTIONS ABOVE INSTEAD.\nifneq ($(PULL_REQUEST_ID),)\n# we're a PR, so PR versioning\nNUGET_PRERELEASE_IDENTIFIER=-ci.pr.gh$(PULL_REQUEST_ID)\nelse ifeq ($(NUGET_RELEASE_BRANCH_ALPHANUMERIC),$(CURRENT_BRANCH_ALPHANUMERIC))\n# this is a release branch, so no prerelease identifier\nNUGET_PRERELEASE_IDENTIFIER=\nelse ifeq ($(NUGET_HARDCODED_PRERELEASE_BRANCH_ALPHANUMERIC),$(CURRENT_BRANCH_ALPHANUMERIC))\n# this is a prerelease branch!\nNUGET_PRERELEASE_IDENTIFIER=-$(NUGET_HARDCODED_PRERELEASE_IDENTIFIER)\nelse ifeq (release-test/rt/,$(patsubst release-test/rt/%,release-test/rt/,$(CURRENT_BRANCH)))\n# this is a release-testing branch!\nNUGET_PRERELEASE_IDENTIFIER=-rt\nelse\n# this is a CI branch!\nNUGET_PRERELEASE_IDENTIFIER=-ci.$(CURRENT_BRANCH_ALPHANUMERIC)\nendif\n\nNUGET_BUILD_METADATA=\n\nIOS_NUGET=Microsoft.iOS\nIOS_NUGET_VERSION=$(IOS_NUGET_OS_VERSION).$(IOS_NUGET_COMMIT_DISTANCE)\nIOS_NUGET_VERSION_MAJOR=$(word 1, $(subst ., ,$(IOS_NUGET_VERSION)))\nIOS_NUGET_VERSION_MINOR=$(word 2, $(subst ., ,$(IOS_NUGET_VERSION)))\nIOS_NUGET_VERSION_PATCH=$(word 3, $(subst ., ,$(IOS_NUGET_VERSION)))\nIOS_NUGET_VERSION_NO_METADATA=$(IOS_NUGET_VERSION)$(NUGET_PRERELEASE_IDENTIFIER)\nIOS_NUGET_VERSION_FULL=$(IOS_NUGET_VERSION_NO_METADATA)$(NUGET_BUILD_METADATA)\n\nIOS_WINDOWS_NUGET=Microsoft.iOS.Windows\nIOS_WINDOWS_NUGET_VERSION_MAJOR=$(IOS_NUGET_VERSION_MAJOR)\nIOS_WINDOWS_NUGET_VERSION_MINOR=$(IOS_NUGET_VERSION_MINOR)\nIOS_WINDOWS_NUGET_VERSION_PATCH=$(IOS_NUGET_VERSION_PATCH)\nIOS_WINDOWS_NUGET_VERSION_NO_METADATA=$(IOS_NUGET_VERSION_NO_METADATA)\nIOS_WINDOWS_NUGET_VERSION_FULL=$(IOS_NUGET_VERSION_FULL)\n\nTVOS_NUGET=Microsoft.tvOS\nTVOS_NUGET_VERSION=$(TVOS_NUGET_OS_VERSION).$(TVOS_NUGET_COMMIT_DISTANCE)\nTVOS_NUGET_VERSION_MAJOR=$(word 1, $(subst ., ,$(TVOS_NUGET_VERSION)))\nTVOS_NUGET_VERSION_MINOR=$(word 2, $(subst ., ,$(TVOS_NUGET_VERSION)))\nTVOS_NUGET_VERSION_PATCH=$(word 3, $(subst ., ,$(TVOS_NUGET_VERSION)))\nTVOS_NUGET_VERSION_NO_METADATA=$(TVOS_NUGET_VERSION)$(NUGET_PRERELEASE_IDENTIFIER)\nTVOS_NUGET_VERSION_FULL=$(TVOS_NUGET_VERSION_NO_METADATA)$(NUGET_BUILD_METADATA)\n\nMACCATALYST_NUGET=Microsoft.MacCatalyst\nMACCATALYST_NUGET_VERSION=$(MACCATALYST_NUGET_OS_VERSION).$(MACCATALYST_NUGET_COMMIT_DISTANCE)\nMACCATALYST_NUGET_VERSION_MAJOR=$(word 1, $(subst ., ,$(MACCATALYST_NUGET_VERSION)))\nMACCATALYST_NUGET_VERSION_MINOR=$(word 2, $(subst ., ,$(MACCATALYST_NUGET_VERSION)))\nMACCATALYST_NUGET_VERSION_PATCH=$(word 3, $(subst ., ,$(MACCATALYST_NUGET_VERSION)))\nMACCATALYST_NUGET_VERSION_NO_METADATA=$(MACCATALYST_NUGET_VERSION)$(NUGET_PRERELEASE_IDENTIFIER)\nMACCATALYST_NUGET_VERSION_FULL=$(MACCATALYST_NUGET_VERSION_NO_METADATA)$(NUGET_BUILD_METADATA)\n\n# Xcode version should have both a major and a minor version (even if the minor version is 0)\nXCODE_VERSION=16.2\nXCODE_URL=https://dl.internalx.com/internal-files/xcodes/Xcode_16.2.xip\nXCODE_DEVELOPER_ROOT=/Applications/Xcode_16.2.0.app/Contents/Developer\nXCODE_PRODUCT_BUILD_VERSION:=$(shell /usr/libexec/PlistBuddy -c 'Print :ProductBuildVersion' $(XCODE_DEVELOPER_ROOT)/../version.plist 2>/dev/null || echo \"    $(shell tput setaf 1 2>/dev/null)The required Xcode ($(XCODE_VERSION)) is not installed in $(basename $(basename $(XCODE_DEVELOPER_ROOT)))$(shell tput sgr0 2>/dev/null)\" >&2)\n\n# We define stable Xcode as the Xcode app being named like \"Xcode_#.#[.#].app\"\n# and any other naming is deemed to be a beta. This is the safer approach: any\n# errors are likely to be Xcode classified as a beta, when it's not, and in that\n# case we'll accidentally release a prerelease version. This is not a problem:\n# we fix it, and release the fixed version to stable. The opposite scenario is\n# worse: when we release something as stable when it shouldn't be, so let's\n# try to avoid that.\nifeq (OK,$(shell echo $(notdir $(abspath $(dir $(abspath $(dir $(XCODE_DEVELOPER_ROOT)))))) | sed -e 's/^Xcode[_0-9.]*[.]app$$/OK/'))\nXCODE_IS_STABLE=true\nXCODE_IS_PREVIEW=false\nelse\nXCODE_IS_STABLE=false\nXCODE_IS_PREVIEW=true\nendif\n\n# Tell both Xcode and our build logic which Xcode we're using.\nexport DEVELOPER_DIR=$(XCODE_DEVELOPER_ROOT)\nexport MD_APPLE_SDK_ROOT=$(abspath $(XCODE_DEVELOPER_ROOT)/../..)\n\n# We don't need to be told there are workload updates\nexport DOTNET_CLI_WORKLOAD_UPDATE_NOTIFY_DISABLE=true\n# We don't need to be told we're using preview packages (we pretty much always are).\nexport SuppressNETCoreSdkPreviewMessage=true\n\n# Mono version embedded in XI/XM (NEEDED_MONO_VERSION/BRANCH) are specified in mk/mono.mk\ninclude $(TOP)/mk/mono.mk\nMONO_HASH := $(NEEDED_MONO_VERSION)\n\n# Minimum Mono version for building XI/XM\nMIN_MONO_VERSION=6.12.0.179\nMAX_MONO_VERSION=6.12.99\nMIN_MONO_URL=https://download.mono-project.com/archive/6.12.0/macos-10-universal/MonoFramework-MDK-6.12.0.179.macos10.xamarin.universal.pkg\n\n# Minimum Mono version for Xamarin.Mac apps using the system mono\nMIN_XM_MONO_VERSION=6.4.0.94\n\n# ObjectiveSharpie min/max versions\nMIN_SHARPIE_VERSION=3.5.116\nMAX_SHARPIE_VERSION=3.5.999\nMIN_SHARPIE_URL=https://download.visualstudio.microsoft.com/download/pr/3a748cc2-780d-403c-88ba-700aa9a2d299/88cbfd86e85f56b4c61e092d0f0b9ad9/objectivesharpie-3.5.116.pkg\n\n# Minimum OSX versions for building XI/XM\nMIN_OSX_BUILD_VERSION=13.0\n# Minimum OSX version for executing XI/XM tooling.\nMIN_OSX_VERSION_FOR_IOS=10.15\nMIN_OSX_VERSION_FOR_MAC=10.15\n\n# Bump the *_NUGET_VERSION variables in Make.versions instead, because that makes sure the computed commit distance for the version is correct.\nIOS_SDK_VERSION=$(word 1, $(subst ., ,$(IOS_NUGET_VERSION))).$(word 2, $(subst ., ,$(IOS_NUGET_VERSION)))\nMACOS_SDK_VERSION=$(word 1, $(subst ., ,$(MACOS_NUGET_VERSION))).$(word 2, $(subst ., ,$(MACOS_NUGET_VERSION)))\nTVOS_SDK_VERSION=$(word 1, $(subst ., ,$(TVOS_NUGET_VERSION))).$(word 2, $(subst ., ,$(TVOS_NUGET_VERSION)))\nMACCATALYST_SDK_VERSION=$(word 1, $(subst ., ,$(MACCATALYST_NUGET_VERSION))).$(word 2, $(subst ., ,$(MACCATALYST_NUGET_VERSION)))\n\nMAX_IOS_DEPLOYMENT_TARGET=$(IOS_SDK_VERSION)\nMAX_TVOS_DEPLOYMENT_TARGET=$(TVOS_SDK_VERSION)\n\nMAX_IOS_SIMULATOR_VERSION=$(IOS_SDK_VERSION)\nMAX_TVOS_SIMULATOR_VERSION=$(TVOS_SDK_VERSION)\n\n# Minimum OS versions for running XI/XM apps.\nMIN_IOS_SDK_VERSION=12.2\nMIN_MACOS_SDK_VERSION=12.0\nMIN_TVOS_SDK_VERSION=12.2\nMIN_MACCATALYST_SDK_VERSION=15.0\n\n# Minimum OS versions for .NET 9 support\nDOTNET_MIN_IOS_SDK_VERSION=12.2\nDOTNET_MIN_TVOS_SDK_VERSION=12.2\nDOTNET_MIN_MACCATALYST_SDK_VERSION=15.0\nDOTNET_MIN_MACOS_SDK_VERSION=12.0\n\n# The min simulator version available in the Xcode we're using\nMIN_IOS_SIMULATOR_VERSION=15.0\nMIN_TVOS_SIMULATOR_VERSION=15.0\n# These are the simulator package ids for the versions above\nEXTRA_SIMULATORS=com.apple.pkg.iPhoneSimulatorSDK15_0 com.apple.pkg.AppleTVSimulatorSDK15_0\n\nINCLUDE_IOS=1\nINCLUDE_MAC=1\nINCLUDE_TVOS=1\nINCLUDE_MACCATALYST=1\nINCLUDE_DEVICE=1\nINCLUDE_HOTRESTART=1\n\n-include $(TOP)/Make.config.local\n-include $(TOP)/configure.inc\n\n# misc Xcode tool\nCLANG=$(CCACHE)$(XCODE_DEVELOPER_ROOT)/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang\nSWIFTC=$(XCODE_DEVELOPER_ROOT)/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc\nLIPO=$(XCODE_DEVELOPER_ROOT)/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo\nAR=$(XCODE_DEVELOPER_ROOT)/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar\nRANLIB=$(XCODE_DEVELOPER_ROOT)/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib\n\n# paths to the modules we depend on, as variables, so people can put\n# things in other places if they absolutely must.\nMONO_PATH=$(TOP)/external/mono\nXAMARIN_MACDEV_PATH=$(TOP)/external/Xamarin.MacDev\nMONOTOUCH_DIALOG_PATH=$(TOP)/external/MonoTouch.Dialog\nAPI_TOOLS_PATH=$(TOP)/external/api-tools\nMACCORE_PATH=$(TOP)/../maccore\nADR_PATH:=$(abspath $(TOP)/../macios-adr)\n\nMONO_PREFIX ?= /Library/Frameworks/Mono.framework/Versions/Current\nSYSTEM_MONO=$(MONO_PREFIX)/bin/mono\nSYSTEM_MSBUILD=unset MSBuildExtensionsPath && $(MONO_PREFIX)/bin/msbuild /p:Features=strict /m\n\nPKG_CONFIG=$(MONO_PREFIX)/bin/pkg-config\n\nMACOS_NUGET=Microsoft.macOS\nMACOS_NUGET_VERSION=$(MACOS_NUGET_OS_VERSION).$(MACOS_NUGET_COMMIT_DISTANCE)\nMACOS_NUGET_VERSION_MAJOR=$(word 1, $(subst ., ,$(MACOS_NUGET_VERSION)))\nMACOS_NUGET_VERSION_MINOR=$(word 2, $(subst ., ,$(MACOS_NUGET_VERSION)))\nMACOS_NUGET_VERSION_PATCH=$(word 3, $(subst ., ,$(MACOS_NUGET_VERSION)))\nMACOS_NUGET_VERSION_NO_METADATA=$(MACOS_NUGET_VERSION)$(NUGET_PRERELEASE_IDENTIFIER)\nMACOS_NUGET_VERSION_FULL=$(MACOS_NUGET_VERSION_NO_METADATA)$(NUGET_BUILD_METADATA)\n\nTT = $(DOTNET) tool restore && $(DOTNET) t4\n\nPRODUCT_KEY_PATH?=$(TOP)/product.snk\n\ninclude $(TOP)/mk/quiet.mk\n\nifdef ENABLE_XAMARIN\n-include $(MACCORE_PATH)/Make.config\nendif\n\nJENKINS_RESULTS_DIRECTORY ?= $(abspath $(TOP)/jenkins-results)\n\n# Clone files instead of copying them on APFS file systems. Much faster.\nCP:=$(shell df -t apfs / >/dev/null 2>&1 && echo \"cp -c\" || echo \"cp\")\n\nMONO_IOS_SDK_DESTDIR:=$(abspath $(TOP)/builds/downloads/mono-ios-sdk-destdir)\n\n# This variable includes all the platforms we support, even those that might be disabled in this build.\nALL_DOTNET_PLATFORMS=iOS macOS tvOS MacCatalyst\n\n# Set this to 1 if the Microsoft.NETCore.App.Ref dependency in eng/Version.Details.xml does *not* specify a CoherentParentDependency on Microsoft.Dotnet.Sdk.Internal.\nTRACKING_DOTNET_RUNTIME_SEPARATELY=\n\n-include $(TOP)/dotnet.config\n$(TOP)/dotnet.config: $(TOP)/eng/Versions.props $(TOP)/Build.props\n\t$(Q) rm -f $@.tmp\n\t$(Q) grep '<MicrosoftNETSdkPackageVersion>' $(TOP)/eng/Versions.props | sed -e 's/<*\\/*MicrosoftNETSdkPackageVersion>//g' -e 's/[ \\t]*/DOTNET_VERSION=/' >> $@.tmp\n\t$(Q) grep MicrosoftNETCoreAppRefPackageVersion $(TOP)/eng/Versions.props | sed -e 's/<*\\/*MicrosoftNETCoreAppRefPackageVersion>//g' -e 's/[ \\t]*/BUNDLED_NETCORE_PLATFORMS_PACKAGE_VERSION=/' >> $@.tmp\n\t$(Q) grep \"<$$(grep EmscriptenWorkloadVersion $(TOP)/eng/Versions.props | sed -e 's_.*>$$[\\(]\\(.*\\)[\\)]<.*_\\1_')>\" $(TOP)/eng/Versions.props | sed -e 's/.*>\\(.*\\)<.*/EMSCRIPTEN_MANIFEST_PACKAGE_VERSION=\\1/' >> $@.tmp\n\t$(Q) $(foreach platform,$(ALL_DOTNET_PLATFORMS),grep '<Microsoft$(platform)SdkPackageVersion>' $(TOP)/eng/Versions.props | sed -e 's/<*\\/*Microsoft$(platform)SdkPackageVersion>//g' -e 's/[ \\t]*/NET8_$(shell echo $(platform) | tr '[:lower:]' '[:upper:]')_NUGET_VERSION_NO_METADATA=/' >> $@.tmp &&) true\n\t$(Q) grep '<MicrosoftDotNetArcadeSdkPackageVersion>' $(TOP)/eng/Versions.props | sed -e 's/<*\\/*MicrosoftDotNetArcadeSdkPackageVersion>//g' -e 's/[ \\t]*/ARCADE_VERSION=/' >> $@.tmp\n\t$(Q) mv $@.tmp $@\n\n$(TOP)/Build.props: Make.config\n\t$(Q) rm -f $@.tmp\n\t$(Q) printf \"<Project>\\n\" >> $@.tmp\n\t$(Q) printf \"\\t<PropertyGroup>\\n\" >> $@.tmp\nifeq ($(XCODE_IS_STABLE),true)\n\t# do nothing\nelse ifeq ($(XCODE_IS_STABLE),false)\n\t$(Q) printf '\\t\\t<NoWarn>$$(NoWarn);XCODE_$(subst .,_,$(XCODE_VERSION))_PREVIEW</NoWarn>\\n' >> $@.tmp\nelse\n\t$(error \"The variable XCODE_IS_STABLE is not set!\")\nendif\n\t$(Q) printf \"\\t\\t<TRACKING_DOTNET_RUNTIME_SEPARATELY>$(TRACKING_DOTNET_RUNTIME_SEPARATELY)</TRACKING_DOTNET_RUNTIME_SEPARATELY>\\n\" >> $@.tmp\n\t$(Q) printf \"\\t</PropertyGroup>\\n\" >> $@.tmp\n\t$(Q) printf \"</Project>\\n\" >> $@.tmp\n\t$(Q) mv $@.tmp $@\n\nDOTNET_DESTDIR ?= $(TOP)/_build\nDOTNET_NUPKG_DIR ?= $(DOTNET_DESTDIR)/nupkgs\nDOTNET_PKG_DIR ?= $(DOTNET_DESTDIR)/pkgs\n\n# Configuration for .NET 6.\n# We're using preview versions, and there will probably be many of them, so install locally (into builds/downloads) if there's no system version to\n# avoid consuming a lot of disk space (since they're never automatically deleted). The system-dependencies.sh script will install locally as long\n# as there's a TARBALL url.\n\n# If you build dotnet/runtime locally, \"*-dev\" is the version the built artifacts will use (and which we must reference)\nCUSTOM_DOTNET_VERSION=6.0.0-dev\n\nifdef CUSTOM_DOTNET\nDOTNET_BCL_VERSION=$(CUSTOM_DOTNET_VERSION)\nexport CUSTOM_DOTNET_VERSION\nelse\nDOTNET_BCL_VERSION=$(BUNDLED_NETCORE_PLATFORMS_PACKAGE_VERSION)\nendif\n\n\nDOTNET_VERSION_BAND=$(firstword $(subst -, ,$(DOTNET_VERSION)))\nDOTNET_VERSION_PRERELEASE_COMPONENT=$(subst $(DOTNET_VERSION_BAND),,$(DOTNET_VERSION))\nDOTNET_INSTALL_NAME=dotnet-sdk-$(DOTNET_VERSION)\nDOTNET_DIR=$(abspath $(TOP)/builds/downloads/$(DOTNET_INSTALL_NAME))\n# DOTNET_ROOT is no longer considered to find dotnet as seen here dotnet/roslyn@f454d69\n# but it seems that some tools like csc still needs it so let's export it.\nexport DOTNET_ROOT=$(DOTNET_DIR)\n# dotnet now is being looked up in the PATH\nexport PATH := $(DOTNET_DIR):$(PATH)\nDOTNET=$(DOTNET_DIR)/dotnet\nDOTNET_BCL_DIR:=$(abspath $(TOP)/packages/microsoft.netcore.app.ref/$(DOTNET_BCL_VERSION)/ref/$(DOTNET_TFM))\nifneq ($(DOTNET_BCL_DIR),$(shell ls -1d $(DOTNET_BCL_DIR) 2>/dev/null))\nDOTNET_BCL_DIR:=$(abspath $(TOP)/packages/microsoft.netcore.app.ref/$(DOTNET_BCL_VERSION)/ref/net8.0)\nendif\n\n# The sdk version band has the last two digits set to 0: https://github.com/dotnet/sdk/blob/22c4860dcb2cf6b123dd641cc4a87a50380759d5/src/Resolvers/Microsoft.NET.Sdk.WorkloadManifestReader/SdkDirectoryWorkloadManifestProvider.cs#L52-L53\nDOTNET_MANIFEST_VERSION_BAND=$(shell echo $(DOTNET_VERSION_BAND) | sed 's/..$$/00/')\nifeq ($(DOTNET_VERSION_PRERELEASE_COMPONENT),)\nDOTNET_MANIFEST_VERSION_BAND_WITH_PRERELEASE_COMPONENT=$(DOTNET_MANIFEST_VERSION_BAND)\nelse ifeq ($(word 1,$(subst ., ,$(DOTNET_VERSION_PRERELEASE_COMPONENT))),-rtm)\nDOTNET_MANIFEST_VERSION_BAND_WITH_PRERELEASE_COMPONENT=$(DOTNET_MANIFEST_VERSION_BAND)\nelse ifeq ($(word 1,$(subst ., ,$(DOTNET_VERSION_PRERELEASE_COMPONENT))),-servicing)\nDOTNET_MANIFEST_VERSION_BAND_WITH_PRERELEASE_COMPONENT=$(DOTNET_MANIFEST_VERSION_BAND)\nelse\nDOTNET_MANIFEST_VERSION_BAND_WITH_PRERELEASE_COMPONENT=$(DOTNET_MANIFEST_VERSION_BAND)$(word 1,$(subst ., ,$(DOTNET_VERSION_PRERELEASE_COMPONENT))).$(word 2,$(subst ., ,$(DOTNET_VERSION_PRERELEASE_COMPONENT)))\nendif\n\n# These are the manifest version band used for Mono and Emscripten.\n# It will typically be $(DOTNET_MANIFEST_VERSION_BAND_WITH_PRERELEASE_COMPONENT), unless the corresponding teams decided to hardcode something else.\nMONO_TOOLCHAIN_MANIFEST_VERSION_BAND=$(DOTNET_MANIFEST_VERSION_BAND_WITH_PRERELEASE_COMPONENT)\nEMSCRIPTEN_MANIFEST_VERSION_BAND=$(DOTNET_MANIFEST_VERSION_BAND_WITH_PRERELEASE_COMPONENT)\n\n# This is the manifest version band we use for our .Manifest-$(VERSION_BAND) packages.\n# It should typically be $(DOTNET_MANIFEST_VERSION_BAND_WITH_PRERELEASE_COMPONENT), unless we decide to hardcode it to something else\nMACIOS_MANIFEST_VERSION_BAND=$(DOTNET_MANIFEST_VERSION_BAND_WITH_PRERELEASE_COMPONENT)\n\n# The location of csc changes depending on whether we're using a preview or a stable/service release :/\nDOTNET_CSC_PATH_PREVIEW=$(DOTNET_DIR)/sdk/$(DOTNET_VERSION)/Roslyn/bincore/csc.dll\nDOTNET_CSC_PATH_STABLE=$(DOTNET_DIR)/sdk/$(DOTNET_VERSION_BAND)/Roslyn/bincore/csc.dll\n\n# Attempt to detect where csc is based. This may fail in the future: feel free to fix/hardcode whatever's necessary to find csc.dll.\nifneq (\"$(wildcard $(DOTNET_CSC_PATH_STABLE))\",\"\")\nDOTNET_CSC=$(DOTNET) exec $(DOTNET_CSC_PATH_STABLE)\nelse\nDOTNET_CSC=$(DOTNET) exec $(DOTNET_CSC_PATH_PREVIEW)\nendif\n\n# How are our assemblies named?\nDOTNET_IOS_ASSEMBLY_NAME=Microsoft.iOS\nDOTNET_TVOS_ASSEMBLY_NAME=Microsoft.tvOS\nDOTNET_MACCATALYST_ASSEMBLY_NAME=Microsoft.MacCatalyst\nDOTNET_MACOS_ASSEMBLY_NAME=Microsoft.macOS\n\nDOTNET_PLATFORMS=\nifdef INCLUDE_IOS\nDOTNET_PLATFORMS+=iOS\nDOTNET_MONOVM_PLATFORMS+=iOS\nDOTNET_IOS_BITNESSES+=64\nDOTNET_NATIVEAOT_PLATFORMS+=iOS\nXCFRAMEWORK_PLATFORMS+=iossimulator\nXCFRAMEWORK_iossimulator_RUNTIME_IDENTIFIERS=iossimulator-x64 iossimulator-arm64\n\n# 64-bit architectures\nifdef INCLUDE_DEVICE\nDOTNET_IOS_RUNTIME_IDENTIFIERS_64=ios-arm64\nXCFRAMEWORK_PLATFORMS+=ios\nXCFRAMEWORK_ios_RUNTIME_IDENTIFIERS=ios-arm64\nendif # INCLUDE_DEVICE\nDOTNET_IOS_RUNTIME_IDENTIFIERS_64+=iossimulator-x64 iossimulator-arm64\n\n# All of them\nDOTNET_IOS_RUNTIME_IDENTIFIERS=$(DOTNET_IOS_RUNTIME_IDENTIFIERS_32) $(DOTNET_IOS_RUNTIME_IDENTIFIERS_64)\nendif # INCLUDE_IOS\n\nifdef INCLUDE_TVOS\nDOTNET_PLATFORMS+=tvOS\nDOTNET_MONOVM_PLATFORMS+=tvOS\nDOTNET_TVOS_BITNESSES+=64\nDOTNET_NATIVEAOT_PLATFORMS+=tvOS\nXCFRAMEWORK_PLATFORMS+=tvossimulator\nXCFRAMEWORK_tvossimulator_RUNTIME_IDENTIFIERS=tvossimulator-x64 tvossimulator-arm64\n\nifdef INCLUDE_DEVICE\nDOTNET_TVOS_RUNTIME_IDENTIFIERS=tvos-arm64 tvossimulator-x64 tvossimulator-arm64\nXCFRAMEWORK_PLATFORMS+=tvos\nXCFRAMEWORK_tvos_RUNTIME_IDENTIFIERS=tvos-arm64\nelse\nDOTNET_TVOS_RUNTIME_IDENTIFIERS=tvossimulator-x64 tvossimulator-arm64\nendif\nDOTNET_TVOS_RUNTIME_IDENTIFIERS_64+=$(DOTNET_TVOS_RUNTIME_IDENTIFIERS)\nendif\n\nifdef INCLUDE_MACCATALYST\nDOTNET_PLATFORMS+=MacCatalyst\nDOTNET_MONOVM_PLATFORMS+=MacCatalyst\nDOTNET_MACCATALYST_BITNESSES+=64\nDOTNET_NATIVEAOT_PLATFORMS+=MacCatalyst\nDOTNET_MACCATALYST_RUNTIME_IDENTIFIERS=maccatalyst-x64 maccatalyst-arm64\nDOTNET_MACCATALYST_RUNTIME_IDENTIFIERS_64+=$(DOTNET_MACCATALYST_RUNTIME_IDENTIFIERS)\nXCFRAMEWORK_PLATFORMS+=maccatalyst\nXCFRAMEWORK_DESKTOP_PLATFORMS+=maccatalyst\nXCFRAMEWORK_maccatalyst_RUNTIME_IDENTIFIERS=$(DOTNET_MACCATALYST_RUNTIME_IDENTIFIERS)\nendif\n\nifdef INCLUDE_MAC\nDOTNET_PLATFORMS+=macOS\nDOTNET_CORECLR_PLATFORMS+=macOS\nDOTNET_MACOS_BITNESSES+=64\nDOTNET_NATIVEAOT_PLATFORMS+=macOS\nDOTNET_MACOS_RUNTIME_IDENTIFIERS=osx-x64 osx-arm64\nDOTNET_MACOS_RUNTIME_IDENTIFIERS_64=$(DOTNET_MACOS_RUNTIME_IDENTIFIERS)\nXCFRAMEWORK_PLATFORMS+=macos\nXCFRAMEWORK_DESKTOP_PLATFORMS+=macos\nXCFRAMEWORK_macos_RUNTIME_IDENTIFIERS=$(DOTNET_MACOS_RUNTIME_IDENTIFIERS)\nendif\n\nifdef INCLUDE_IOS\nDOTNET_WINDOWS_PLATFORMS = iOS\nendif\n\n# Create variables prefixed with the correctly cased platform name from the upper-cased platform name. This simplifies code in a few areas (whenever we foreach over DOTNET_PLATFORMS).\n$(foreach platform,$(DOTNET_PLATFORMS),$(eval DOTNET_$(platform)_RUNTIME_IDENTIFIERS:=$(DOTNET_$(shell echo $(platform) | tr a-z A-Z)_RUNTIME_IDENTIFIERS)))\n$(foreach platform,$(DOTNET_PLATFORMS),$(eval $(platform)_NUGET_OS_VERSION:=$($(shell echo $(platform) | tr a-z A-Z)_NUGET_OS_VERSION)))\n\n# Create a variable with all the runtime identifiers\nDOTNET_RUNTIME_IDENTIFIERS=$(foreach platform,$(DOTNET_PLATFORMS),$(DOTNET_$(platform)_RUNTIME_IDENTIFIERS))\n\n# Create a variable with all the MonoVM runtime identifiers\nDOTNET_MONOVM_RUNTIME_IDENTIFIERS=$(foreach platform,$(DOTNET_MONOVM_PLATFORMS),$(DOTNET_$(platform)_RUNTIME_IDENTIFIERS))\n\n# Create a variable with all the CoreCLR runtime identifiers\nDOTNET_CORECLR_RUNTIME_IDENTIFIERS=$(foreach platform,$(DOTNET_CORECLR_PLATFORMS),$(DOTNET_$(platform)_RUNTIME_IDENTIFIERS))\n\n# Create a variable with the platform in uppercase\nDOTNET_PLATFORMS_UPPERCASE:=$(shell echo $(DOTNET_PLATFORMS) | tr a-z A-Z)\n\n# All desktop platforms we're building for\nDOTNET_DESKTOP_PLATFORMS:=$(filter macOS MacCatalyst,$(DOTNET_PLATFORMS))\n\n# a few lookup tables, because the data we have is not always in the format we need it\n\n# RUNTIMEIDENTIFIER -> architecture\nDOTNET_iossimulator-x64_ARCHITECTURES=x86_64\nDOTNET_iossimulator-arm64_ARCHITECTURES=arm64\nDOTNET_iossimulator-x86_ARCHITECTURES=x86\nDOTNET_ios-arm64_ARCHITECTURES=arm64\nDOTNET_tvossimulator-x64_ARCHITECTURES=x86_64\nDOTNET_tvossimulator-arm64_ARCHITECTURES=arm64\nDOTNET_tvos-arm64_ARCHITECTURES=arm64\nDOTNET_osx-x64_ARCHITECTURES=x86_64\nDOTNET_osx-arm64_ARCHITECTURES=arm64\nDOTNET_maccatalyst-x64_ARCHITECTURES=x86_64\nDOTNET_maccatalyst-arm64_ARCHITECTURES=arm64\n\nDOTNET_iossimulator-x64_SDK_PLATFORM=iphonesimulator\nDOTNET_iossimulator-arm64_SDK_PLATFORM=iphonesimulator\nDOTNET_iossimulator-x86_SDK_PLATFORM=iphonesimulator\nDOTNET_ios-arm_SDK_PLATFORM=iphoneos\nDOTNET_ios-arm64_SDK_PLATFORM=iphoneos\nDOTNET_tvossimulator-x64_SDK_PLATFORM=tvsimulator\nDOTNET_tvossimulator-arm64_SDK_PLATFORM=tvsimulator\nDOTNET_tvos-arm64_SDK_PLATFORM=tvos\nDOTNET_osx-x64_SDK_PLATFORM=mac\nDOTNET_osx-arm64_SDK_PLATFORM=mac\nDOTNET_maccatalyst-x64_SDK_PLATFORM=maccatalyst\nDOTNET_maccatalyst-arm64_SDK_PLATFORM=maccatalyst\n\nDOTNET_iOS_SDK_PLATFORMS=iphonesimulator iphoneos\nDOTNET_tvOS_SDK_PLATFORMS=tvsimulator tvos\nDOTNET_macOS_SDK_PLATFORMS=mac\nDOTNET_MacCatalyst_SDK_PLATFORMS=maccatalyst\n\n# XCFRAMEWORK_PLATFORM -> PLATFORM\nDOTNET_iossimulator_PLATFORM=ios\nDOTNET_ios_PLATFORM=ios\nDOTNET_tvossimulator_PLATFORM=tvos\nDOTNET_tvos_PLATFORM=tvos\nDOTNET_maccatalyst_PLATFORM=maccatalyst\nDOTNET_macos_PLATFORM=macos\n\n# XCFRAMEWORK -> clang argument for min OS version\nCLANG_iossimulator-x64_VERSION_MIN=-mios-simulator-version-min=$(DOTNET_MIN_IOS_SDK_VERSION)\nCLANG_iossimulator-arm64_VERSION_MIN=-mios-simulator-version-min=$(DOTNET_MIN_IOS_SDK_VERSION)\nCLANG_ios-arm64_VERSION_MIN=-miphoneos-version-min=$(DOTNET_MIN_IOS_SDK_VERSION)\nCLANG_tvossimulator-x64_VERSION_MIN=-mtvos-simulator-version-min=$(DOTNET_MIN_TVOS_SDK_VERSION)\nCLANG_tvossimulator-arm64_VERSION_MIN=-mtvos-simulator-version-min=$(DOTNET_MIN_TVOS_SDK_VERSION)\nCLANG_tvos-arm64_VERSION_MIN=-mtvos-version-min=$(DOTNET_MIN_TVOS_SDK_VERSION)\nCLANG_maccatalyst-x64_VERSION_MIN=-target x86_64-apple-ios$(DOTNET_MIN_MACCATALYST_SDK_VERSION)-macabi -arch x86_64\nCLANG_maccatalyst-arm64_VERSION_MIN=-target arm64-apple-ios$(DOTNET_MIN_MACCATALYST_SDK_VERSION)-macabi -arch arm64\nCLANG_osx-x64_VERSION_MIN=-mmacosx-version-min=$(DOTNET_MIN_MACOS_SDK_VERSION)\nCLANG_osx-arm64_VERSION_MIN=-mmacosx-version-min=$(DOTNET_MIN_MACOS_SDK_VERSION)\n\n# RUNTIMEIDENTIFIER -> swiftc argument(s) for min OS version\nSWIFTC_iossimulator-arm64_VERSION_MIN=-target arm64-apple-ios$(DOTNET_MIN_IOS_SDK_VERSION)-simulator\nSWIFTC_iossimulator-x64_VERSION_MIN=-target x86_64-apple-ios$(DOTNET_MIN_IOS_SDK_VERSION)-simulator\nSWIFTC_ios-arm64_VERSION_MIN=-target arm64-apple-ios$(DOTNET_MIN_IOS_SDK_VERSION)\nSWIFTC_tvossimulator-x64_VERSION_MIN=-target x86_64-apple-tvos$(DOTNET_MIN_TVOS_SDK_VERSION)-simulator\nSWIFTC_tvossimulator-arm64_VERSION_MIN=-target arm64-apple-tvos$(DOTNET_MIN_TVOS_SDK_VERSION)-simulator\nSWIFTC_tvos-arm64_VERSION_MIN=-target arm64-apple-tvos$(DOTNET_MIN_TVOS_SDK_VERSION)\nSWIFTC_maccatalyst-x64_VERSION_MIN=-target x86_64-apple-ios$(DOTNET_MIN_MACCATALYST_SDK_VERSION)-macabi\nSWIFTC_maccatalyst-arm64_VERSION_MIN=-target arm64-apple-ios$(DOTNET_MIN_MACCATALYST_SDK_VERSION)-macabi\nSWIFTC_osx-x64_VERSION_MIN=-target x86_64-apple-macos$(DOTNET_MIN_MACOS_SDK_VERSION)\nSWIFTC_osx-arm64_VERSION_MIN=-target arm64-apple-macos$(DOTNET_MIN_MACOS_SDK_VERSION)\n\n\n# Misc other computed variables\n$(foreach platform,$(DOTNET_PLATFORMS),$(eval $(shell echo $(platform) | tr a-z A-Z)_NUGET_SDK_NAME=Microsoft.$(platform).Sdk.$(DOTNET_TFM)_$($(platform)_NUGET_OS_VERSION)))\n$(foreach platform,$(DOTNET_PLATFORMS),$(eval $(shell echo $(platform) | tr a-z A-Z)_NUGET_REF_NAME=Microsoft.$(platform).Ref.$(DOTNET_TFM)_$($(platform)_NUGET_OS_VERSION)))\n$(foreach platform,$(DOTNET_PLATFORMS),$(foreach rid,$(DOTNET_$(shell echo $(platform) | tr a-z A-Z)_RUNTIME_IDENTIFIERS),$(eval $(rid)_NUGET_RUNTIME_NAME=Microsoft.$(platform).Runtime.$(rid).$(DOTNET_TFM)_$($(platform)_NUGET_OS_VERSION))))\n$(foreach platform,$(DOTNET_WINDOWS_PLATFORMS),$(eval $(shell echo $(platform) | tr a-z A-Z)_NUGET_WINDOWS_SDK_NAME=Microsoft.$(platform).Windows.Sdk.$(DOTNET_TFM)_$($(platform)_NUGET_OS_VERSION)))\n\n# Create variables prefixed with the correctly cased platform name from the upper-cased platform name. This simplifies code in a few areas (whenever we foreach over DOTNET_PLATFORMS).\n$(foreach platform,$(DOTNET_PLATFORMS),$(eval $(platform)_NUGET_SDK_NAME:=$($(shell echo $(platform) | tr a-z A-Z)_NUGET_SDK_NAME)))\n$(foreach platform,$(DOTNET_PLATFORMS),$(eval $(platform)_NUGET_REF_NAME:=$($(shell echo $(platform) | tr a-z A-Z)_NUGET_REF_NAME)))\n$(foreach platform,$(DOTNET_WINDOWS_PLATFORMS),$(eval $(platform)_NUGET_WINDOWS_SDK_NAME:=$($(shell echo $(platform) | tr a-z A-Z)_NUGET_WINDOWS_SDK_NAME)))\n\n# A local feed to place test nugets.\nNUGET_TEST_FEED=$(abspath $(TOP)/tests/.nuget/packages)\n\n.SUFFIXES:\nMAKEFLAGS += --no-builtin-rules\n"
        },
        {
          "name": "Make.versions",
          "type": "blob",
          "size": 5.5224609375,
          "content": "#\n# A release branch requires updating the following four variables further down in this file:\n#\n# IOS_NUGET_VERSION (major/minor/patch #)\n# TVOS_NUGET_VERSION (major/minor/patch #)\n# MACOS_NUGET_VERSION (major/minor/patch #)\n# MACCATALYST_NUGET_VERSION (major/minor/patch #)\n#\n# Update version numbers on main as well, to the next version\n#\n\n#\n# ** NuGet package version numbers **\n#\n# See dotnet/VERSIONS.md.\n#\n# Rules:\n# * The first two numbers represent the major and minor version of the corresponding OS.\n# * A third number will be added later (the commit distance).\n#\n# IMPORTANT: There must be *no* managed API differences unless the two first\n# numbers (major.minor) changes.\n\nIOS_NUGET_OS_VERSION=18.2\nTVOS_NUGET_OS_VERSION=18.2\nMACOS_NUGET_OS_VERSION=15.2\nMACCATALYST_NUGET_OS_VERSION=18.2\n\n# The following are the OS versions we first supported with the current .NET version.\n# These versions must *not* change with minor .NET updates, only major .NET releases.\nIOS_TARGET_PLATFORM_VERSION_LIBRARY=18.0\nTVOS_TARGET_PLATFORM_VERSION_LIBRARY=18.0\nMACOS_TARGET_PLATFORM_VERSION_LIBRARY=15.0\nMACCATALYST_TARGET_PLATFORM_VERSION_LIBRARY=18.0\n\n# In theory we should define the default platform version if it's not specified in the TFM. The default should not change for a given .NET version:\n# * We release support for iOS 14.5 with .NET 6\n# * Apple releases iOS 15.0, we're still using .NET 6. This default continues to be iOS 14.5\n# * .NET 7 is shipped, and at this point we bump the default to iOS 15.0\n# Basically: this should be the last OS version of the platform in question when the current major .NET version is first released to stable.\n# Ref: https://github.com/dotnet/designs/blob/8e6394406d44f75f30ea2259a425cb9e38d75b69/accepted/2020/net5/net5.md#os-versions\n\n# However, this doesn't work well for Apple platforms: Whenever Apple releases\n# new Xcode versions, our existing workloads might not be compatible with the\n# new Xcode. We'll of course ship updateds workload with support for the new\n# Xcode, but defaulting to an older target platform version would mean that\n# developers wouldn't get the new workload, they'd get the old one. This is\n# exacerbated by the fact that Apple aggressively auto-updates Xcode on\n# developers' machines: they might wake up one day to a broken build - the\n# obvious fix (\"dotnet workload update\") doesn't fix anything - even if we've\n# shipped updated workloads - because the default is to use the old one.\n# They'd have to manually specify the target platform version in the target\n# platform to get the updated workload (\"net8.0-ios17.2\" to use the iOS 17.2\n# workload instead of \"net8.0-ios\", which would use the default\n# (old/initial/17.0) .NET 8 workload) - and then update _again_ when the next\n# Xcode comes around. At this point the point of having a sane default value\n# is totally out the window, because everybody would have to specify (and\n# continuously update) a platform version in their project files to keep their\n# projects building.\n\n# So we've made the decision that the default target platform version is\n# always the latest target platform version.\n\n# However, this turns out to be somewhat of a complication for library developers,\n# because they typically don't need Xcode to build their projects, and if we auto-\n# update their TargetPlatformVersion to the latest, then all their customers\n# have to also update their workloads, which for some people end up being a rather\n# nasty surprise (because with the above algorithm it happens without developer\n# action). Thus we follow .NET's default platform version scheme for library projects:\n# it won't change in minor .NET releases.\n\n#\n# Here we list all the releases we support for each platform.\n#\n# Format: space-separated list of TargetFramework-OSVersion\n#\n# Example:\n#\n#    SUPPORTED_API_VERSIONS_IOS=net8.0-17.0 net8.0-17.2\n#\n# This means the iOS workload shipped from the current branch supports projects with:\n#    <TargetFramework>net8.0-17.0</TargetFramework>\n# and\n#    <TargetFramework>net8.0-17.2</TargetFramework>\n# and even:\n#    <TargetFrameworks>net8.0-17.0;net8.0-17.2</TargetFrameworks>\n#\n# When shipping support for a preview Xcode, we might add entries here for a preview release into a stable release.\n#\n# Example:\n#\n#     SUPPORTED_API_VERSIONS_IOS=net9.0-18.0\n#\n# If the current branch is stable .NET 8 using Xcode 15.0 (aka iOS 17.0), this\n# would add support for trying the preview release by doing:\n#\n#     <TargetFramework>net9.0-18.0</TargetFramework>\n#     <NoWarn>XCODE_16_0_PREVIEW;$(NoWarn)</NoWarn>\n#\n# Note that any SUPPORTED_API_VERSIONS entry below for older OS versions need a corresponding entry in\n# the eng/Version.Details.xml and eng/Versions.props files.\n#\n\n# First add the versions for the current branch. DO NOT TOUCH THIS. Add older branches below.\n\nSUPPORTED_API_VERSIONS_IOS=$(DOTNET_TFM)-$(IOS_NUGET_OS_VERSION)\nSUPPORTED_API_VERSIONS_TVOS=$(DOTNET_TFM)-$(TVOS_NUGET_OS_VERSION)\nSUPPORTED_API_VERSIONS_MACOS=$(DOTNET_TFM)-$(MACOS_NUGET_OS_VERSION)\nSUPPORTED_API_VERSIONS_MACCATALYST=$(DOTNET_TFM)-$(MACCATALYST_NUGET_OS_VERSION)\n\n# Add older versions here!\n\nSUPPORTED_API_VERSIONS_IOS+=net8.0-17.0\nSUPPORTED_API_VERSIONS_TVOS+=net8.0-17.0\nSUPPORTED_API_VERSIONS_MACOS+=net8.0-14.0\nSUPPORTED_API_VERSIONS_MACCATALYST+=net8.0-17.0\n\nSUPPORTED_API_VERSIONS_IOS+=net8.0-18.0\nSUPPORTED_API_VERSIONS_TVOS+=net8.0-18.0\nSUPPORTED_API_VERSIONS_MACOS+=net8.0-15.0\nSUPPORTED_API_VERSIONS_MACCATALYST+=net8.0-18.0\n\nSUPPORTED_API_VERSIONS_IOS+=net9.0-18.0\nSUPPORTED_API_VERSIONS_TVOS+=net9.0-18.0\nSUPPORTED_API_VERSIONS_MACOS+=net9.0-15.0\nSUPPORTED_API_VERSIONS_MACCATALYST+=net9.0-18.0\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.638671875,
          "content": "TOP=.\nSUBDIRS=builds runtime src msbuild tools\ninclude $(TOP)/Make.config\ninclude $(TOP)/mk/versions.mk\n\nSUBDIRS += dotnet\n\n#\n# Common\n#\n\nall-local:: check-system\ninstall-local::\n\n.PHONY: world\nworld: check-system\n\t@$(MAKE) reset-versions\n\t@$(MAKE) all -j8\n\t@$(MAKE) install -j8\n\n.PHONY: check-system\ncheck-system:\n\t@./system-dependencies.sh\n\t$(Q) $(MAKE) show-versions\n\nshow-versions:\n\t@echo \"Building:\"\n\t@echo \"    The .NET NuGet(s):\"\n\t@$(foreach platform,$(DOTNET_PLATFORMS),echo \"        Microsoft.$(platform) $($(shell echo $(platform) | tr 'a-z' 'A-Z')_NUGET_VERSION_FULL)\";)\n\nall-local:: global.json\n\n# This tells NuGet to use the exact same dotnet version we've configured in Make.config\nglobal.json: $(TOP)/dotnet.config Makefile $(GIT_DIRECTORY)/HEAD $(GIT_DIRECTORY)/index\n\t$(Q_GEN) \\\n\t\tprintf \"{\\n\" > $@; \\\n\t\tprintf \"  \\\"sdk\\\": {\\n    \\\"version\\\": \\\"$(DOTNET_VERSION)\\\"\\n  },\\n\" >> $@; \\\n\t\tprintf \"  \\\"tools\\\": {\\n    \\\"dotnet\\\": \\\"$(DOTNET_VERSION)\\\"\\n  },\\n\" >> $@; \\\n\t\tprintf \"  \\\"msbuild-sdks\\\": {\\n    \\\"Microsoft.DotNet.Arcade.Sdk\\\": \\\"$(ARCADE_VERSION)\\\"\\n  }\\n\" >> $@; \\\n\t\tprintf \"}\\n\" >> $@\n\ninstall-hook::\n\t$(Q) if ! git diff --exit-code global.json; then \\\n\t\techo \"Error: global.json has changed: please commit the changes.\"; \\\n\t\texit 1; \\\n\tfi\n\ninstall-hook::\n\t$(Q) $(MAKE) -C dotnet shutdown-build-server\n\n.PHONY: package release\npackage release:\n\t$(Q) $(MAKE) -C $(TOP)/release release\n\t# copy .pkg, .zip and *updateinfo to the packages directory to be uploaded to storage\n\t$(Q) mkdir -p ../package\n\t$(Q) echo \"Output from 'make release':\"\n\t$(Q) ls -la $(TOP)/release | sed 's/^/    /'\n\t$(Q) if test -n \"$$(shopt -s nullglob; echo $(TOP)/release/*.pkg)\"; then $(CP) $(TOP)/release/*.pkg ../package; fi\n\t$(Q) if test -n \"$$(shopt -s nullglob; echo $(TOP)/release/*.zip)\"; then $(CP) $(TOP)/release/*.zip ../package; fi\n\t$(Q) if test -n \"$$(shopt -s nullglob; echo $(TOP)/release/*updateinfo)\"; then $(CP) $(TOP)/release/*updateinfo ../package; fi\n\t$(Q) echo \"Packages:\"\n\t$(Q) ls -la ../package | sed 's/^/    /'\n\ndotnet-install-system:\n\t$(Q) $(MAKE) -C dotnet install-system\n\nfix-xcode-select:\n\tsudo xcode-select -s $(XCODE_DEVELOPER_ROOT)\n\nfix-xcode-first-run:\n\t$(XCODE_DEVELOPER_ROOT)/usr/bin/xcodebuild -runFirstLaunch\n\ninstall-dotnet:\n\t@echo \"Figuring out package link...\"\n\t@export PKG=$$(make -C builds print-dotnet-pkg-urls); \\\n\techo \"Downloading $$(basename $$PKG)...\"; \\\n\tcurl -LO \"$$PKG\"; \\\n\techo \"Installing $$(basename $$PKG)...\"; \\\n\ttime sudo installer -pkg \"$$(basename $$PKG)\" -target / -verbose -dumplog\n\ngit-clean-all:\n\t@echo \"$(COLOR_RED)Cleaning and resetting all dependencies. This is a destructive operation.$(COLOR_CLEAR)\"\n\t@echo \"$(COLOR_RED)You have 5 seconds to cancel (Ctrl-C) if you wish.$(COLOR_CLEAR)\"\n\t@sleep 5\n\t@echo \"Cleaning xamarin-macios...\"\n\t@git clean -xffdq -e external/mono\n\t@test -d external/mono && echo \"Cleaning mono...\" && cd external/mono && git clean -xffdq && git submodule foreach -q --recursive 'git clean -xffdq && git reset --hard -q' || true\n\t@git submodule foreach -q --recursive 'git clean -xffdq && git reset --hard -q'\n\t@for dir in $(DEPENDENCY_DIRECTORIES); do if test -d $(CURDIR)/$$dir; then echo \"Cleaning $$dir\" && cd $(CURDIR)/$$dir && git clean -xffdq && git reset --hard -q && git submodule foreach -q --recursive 'git clean -xffdq'; else echo \"Skipped  $$dir (does not exist)\"; fi; done\n\n\t@if [ -n \"$(ENABLE_XAMARIN)\" ]; then \\\n\t\tCONFIGURE_FLAGS=\"\"; \\\n\t\tif [ -n \"$(ENABLE_XAMARIN)\" ]; then \\\n\t\t\techo \"Xamarin-specific build has been re-enabled\"; \\\n\t\t\tCONFIGURE_FLAGS=\"$$CONFIGURE_FLAGS --enable-xamarin\"; \\\n\t\tfi; \\\n\t\t./configure \"$$CONFIGURE_FLAGS\"; \\\n\t\t$(MAKE) reset; \\\n\t\techo \"Done\"; \\\n\telse \\\n\t\techo \"Done\"; \\\n\tfi; \\\n\nSUBDIRS += tests\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 33.0537109375,
          "content": "NOTICES AND INFORMATION\r\nDo Not Translate or Localize\r\n\r\nThis software incorporates material from third parties.\r\nMicrosoft makes certain open source code available at https://3rdpartysource.microsoft.com,\r\nor you may send a check or money order for US $5.00, including the product name,\r\nthe open source component name, platform, and version number, to:\r\n\r\nSource Code Compliance Team\r\nMicrosoft Corporation\r\nOne Microsoft Way\r\nRedmond, WA 98052\r\nUSA\r\n\r\nNotwithstanding any other terms, you may reverse engineer this software to the extent\r\nrequired to debug changes to any libraries licensed under the GNU Lesser General Public License.\r\n\r\n---------------------------------------------------------\r\n\r\nMicrosoft.Bcl.AsyncInterfaces 1.1.0 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\n(c) Microsoft Corporation.\r\nCopyright (c) .NET Foundation.\r\nCopyright (c) 2011, Google Inc.\r\n(c) 1997-2005 Sean Eron Anderson.\r\nCopyright (c) 2007 James Newton-King\r\nCopyright (c) 1991-2017 Unicode, Inc.\r\nCopyright (c) 2013-2017, Alfred Klomp\r\nCopyright (c) 2015-2017, Wojciech Mula\r\nCopyright (c) 2005-2007, Nick Galbreath\r\nPortions (c) International Organization\r\nCopyright (c) 2015 The Chromium Authors.\r\nCopyright (c) 2004-2006 Intel Corporation\r\nCopyright (c) 2016-2017, Matthieu Darbois\r\nCopyright (c) .NET Foundation Contributors\r\nCopyright (c) .NET Foundation and Contributors\r\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\r\nCopyright (c) 1995-2017 Jean-loup Gailly and Mark Adler\r\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\r\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\r\nCopyright (c) YEAR W3C(r) (MIT, ERCIM, Keio, Beihang). Disclaimers THIS WORK IS PROVIDED AS\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nMono.Cecil 0.10.3 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\nCopyright 2008 - 2018 Jb Evain\r\n\r\nMIT License\n\nCopyright (c) <year> <copyright holders>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nNUnitLite 0.9.0 - MIT\r\n\r\n\r\n\r\nCopyright (c) 2004-2013 Charlie Poole\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Buffers 4.5.0 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\n(c) Microsoft Corporation.\r\nCopyright (c) 2011, Google Inc.\r\n(c) 1997-2005 Sean Eron Anderson.\r\nCopyright (c) 1991-2017 Unicode, Inc.\r\nPortions (c) International Organization\r\nCopyright (c) 2015 The Chromium Authors.\r\nCopyright (c) 2004-2006 Intel Corporation\r\nCopyright (c) .NET Foundation Contributors\r\nCopyright (c) .NET Foundation and Contributors\r\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\r\nCopyright (c) 1995-2017 Jean-loup Gailly and Mark Adler\r\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\r\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\r\nCopyright (c) YEAR W3C(r) (MIT, ERCIM, Keio, Beihang). Disclaimers THIS WORK IS PROVIDED AS\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.CodeDom 4.4.0 - MIT\r\n\r\n\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Collections.Immutable 1.5.0 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\n(c) Microsoft Corporation.\r\nCopyright (c) 2011, Google Inc.\r\n(c) 1997-2005 Sean Eron Anderson.\r\nCopyright (c) 1991-2017 Unicode, Inc.\r\nPortions (c) International Organization\r\nCopyright (c) 2015 The Chromium Authors.\r\nCopyright (c) 2004-2006 Intel Corporation\r\nCopyright (c) .NET Foundation Contributors\r\nCopyright (c) .NET Foundation and Contributors\r\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\r\nCopyright (c) 1995-2017 Jean-loup Gailly and Mark Adler\r\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\r\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\r\nCopyright (c) YEAR W3C(r) (MIT, ERCIM, Keio, Beihang). Disclaimers THIS WORK IS PROVIDED AS\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Memory 4.5.3 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\nCopyright (c) 2011, Google Inc.\r\n(c) 1997-2005 Sean Eron Anderson.\r\nCopyright (c) 1991-2017 Unicode, Inc.\r\nPortions (c) International Organization\r\nCopyright (c) 2015 The Chromium Authors.\r\nCopyright (c) 2004-2006 Intel Corporation\r\nCopyright (c) .NET Foundation Contributors\r\nCopyright (c) .NET Foundation and Contributors\r\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\r\nCopyright (c) 1995-2017 Jean-loup Gailly and Mark Adler\r\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\r\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\r\nCopyright (c) YEAR W3C(r) (MIT, ERCIM, Keio, Beihang). Disclaimers THIS WORK IS PROVIDED AS\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Numerics.Vectors 4.5.0 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\n(c) Microsoft Corporation.\r\nCopyright (c) 2011, Google Inc.\r\n(c) 1997-2005 Sean Eron Anderson.\r\nCopyright (c) 1991-2017 Unicode, Inc.\r\nPortions (c) International Organization\r\nCopyright (c) 2015 The Chromium Authors.\r\nCopyright (c) 2004-2006 Intel Corporation\r\nCopyright (c) .NET Foundation Contributors\r\nCopyright (c) .NET Foundation and Contributors\r\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\r\nCopyright (c) 1995-2017 Jean-loup Gailly and Mark Adler\r\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\r\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\r\nCopyright (c) YEAR W3C(r) (MIT, ERCIM, Keio, Beihang). Disclaimers THIS WORK IS PROVIDED AS\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Reflection.Metadata 1.6.0 - MIT\r\n\r\n\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Runtime.CompilerServices.Unsafe 4.7.0 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\n(c) Microsoft Corporation.\r\nCopyright (c) .NET Foundation.\r\nCopyright (c) 2011, Google Inc.\r\n(c) 1997-2005 Sean Eron Anderson.\r\nCopyright (c) 2007 James Newton-King\r\nCopyright (c) 1991-2017 Unicode, Inc.\r\nCopyright (c) 2013-2017, Alfred Klomp\r\nCopyright (c) 2015-2017, Wojciech Mula\r\nCopyright (c) 2005-2007, Nick Galbreath\r\nPortions (c) International Organization\r\nCopyright (c) 2015 The Chromium Authors.\r\nCopyright (c) 2004-2006 Intel Corporation\r\nCopyright (c) 2016-2017, Matthieu Darbois\r\nCopyright (c) .NET Foundation Contributors\r\nCopyright (c) .NET Foundation and Contributors\r\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\r\nCopyright (c) 1995-2017 Jean-loup Gailly and Mark Adler\r\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\r\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\r\nCopyright (c) YEAR W3C(r) (MIT, ERCIM, Keio, Beihang). Disclaimers THIS WORK IS PROVIDED AS\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Text.Encoding.CodePages 4.4.0 - MIT\r\n\r\n\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Text.Encodings.Web 4.7.0 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\n(c) Microsoft Corporation.\r\nCopyright (c) .NET Foundation.\r\nCopyright (c) 2011, Google Inc.\r\n(c) 1997-2005 Sean Eron Anderson.\r\nCopyright (c) 2007 James Newton-King\r\nCopyright (c) 1991-2017 Unicode, Inc.\r\nCopyright (c) 2013-2017, Alfred Klomp\r\nCopyright (c) 2015-2017, Wojciech Mula\r\nCopyright (c) 2005-2007, Nick Galbreath\r\nPortions (c) International Organization\r\nCopyright (c) 2015 The Chromium Authors.\r\nCopyright (c) 2004-2006 Intel Corporation\r\nCopyright (c) 2016-2017, Matthieu Darbois\r\nCopyright (c) .NET Foundation Contributors\r\nCopyright (c) .NET Foundation and Contributors\r\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\r\nCopyright (c) 1995-2017 Jean-loup Gailly and Mark Adler\r\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\r\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\r\nCopyright (c) YEAR W3C(r) (MIT, ERCIM, Keio, Beihang). Disclaimers THIS WORK IS PROVIDED AS\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Text.Json 4.7.0 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\n(c) Microsoft Corporation.\r\nCopyright (c) .NET Foundation.\r\nCopyright (c) 2011, Google Inc.\r\n(c) 1997-2005 Sean Eron Anderson.\r\nCopyright (c) 2007 James Newton-King\r\nCopyright (c) 1991-2017 Unicode, Inc.\r\nCopyright (c) 2013-2017, Alfred Klomp\r\nCopyright (c) 2015-2017, Wojciech Mula\r\nCopyright (c) 2005-2007, Nick Galbreath\r\nPortions (c) International Organization\r\nCopyright (c) 2015 The Chromium Authors.\r\nCopyright (c) 2004-2006 Intel Corporation\r\nCopyright (c) 2016-2017, Matthieu Darbois\r\nCopyright (c) .NET Foundation Contributors\r\nCopyright (c) .NET Foundation and Contributors\r\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\r\nCopyright (c) 1995-2017 Jean-loup Gailly and Mark Adler\r\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\r\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\r\nCopyright (c) YEAR W3C(r) (MIT, ERCIM, Keio, Beihang). Disclaimers THIS WORK IS PROVIDED AS\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nSystem.Threading.Tasks.Extensions 4.5.2 - MIT\r\n\r\n\r\n(c) 2008 VeriSign, Inc.\r\n(c) Microsoft Corporation.\r\nCopyright (c) 2011, Google Inc.\r\n(c) 1997-2005 Sean Eron Anderson.\r\nCopyright (c) 1991-2017 Unicode, Inc.\r\nPortions (c) International Organization\r\nCopyright (c) 2015 The Chromium Authors.\r\nCopyright (c) 2004-2006 Intel Corporation\r\nCopyright (c) .NET Foundation Contributors\r\nCopyright (c) .NET Foundation and Contributors\r\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\r\nCopyright (c) 1995-2017 Jean-loup Gailly and Mark Adler\r\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\r\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\r\nCopyright (c) YEAR W3C(r) (MIT, ERCIM, Keio, Beihang). Disclaimers THIS WORK IS PROVIDED AS\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) .NET Foundation and Contributors\r\n\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n---------------------------------------------------------\r\n\r\n---------------------------------------------------------\r\n\r\nxamarin/xamarin.macdev 45c5a680e20a209ac846a32e0f2f0f83e843ab76 - MIT\r\n\r\n\r\nCopyright 2014 Xamarin Inc.\r\nCopyright (c) 2014 Xamarin Inc\r\nCopyright (c) 2010 Novell, Inc.\r\nCopyright (c) 2011 Xamarin Inc.\r\nCopyright (c) 2012 Xamarin Inc.\r\nCopyright (c) 2013 Xamarin Inc.\r\nCopyright (c) 2015 Xamarin Inc.\r\nCopyright 2012-2014 Xamarin Inc.\r\nCopyright (c) 2017 Microsoft Corp.\r\nCopyright (c) 2011-2013 Xamarin Inc.\r\nCopyright (c) 2011-2013, 2015 Xamarin Inc.\r\nCopyright (c) .NET Foundation Contributors.\r\nCopyright (c) 2009-2012 Krueger Systems, Inc.\r\nCopyright (c) 2011 Xamarin <http://xamarin.com>\r\nCopyright (c) 2014 Xamarin Inc. (www.xamarin.com)\r\nCopyright (c) 2015 Xamarin Inc. (www.xamarin.com)\r\nCopyright (c) 2016 Xamarin Inc. (www.xamarin.com)\r\nCopyright (c) 2011 Xamarin Inc. (http://xamarin.com)\r\nCopyright (c) 2012 Xamarin Inc. (http://xamarin.com)\r\nCopyright (c) 2016 Microsoft Corp. (www.microsoft.com)\r\nCopyright (c) 2009 Novell, Inc. (http://www.novell.com)\r\nCopyright (c) 2010 Novell, Inc. (http://www.novell.com)\r\nCopyright (c) 2012 Xamarin Inc. (http://www.xamarin.com)\r\nCopyright (c) 2013 Xamarin Inc. (http://www.xamarin.com)\r\nCopyright (c) 2011-2013 Xamarin Inc. (http://www.xamarin.com)\r\n\r\nXamarin SDK\n\nThe MIT License (MIT)\n\nCopyright (c) .NET Foundation Contributors\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\r\n\r\n---------------------------------------------------------\r\n\r\n### OpenTK\n\nThe Open Toolkit library license\n\nCopyright (c) 2006 - 2009 The Open Toolkit library.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\nThird parties\n\n\nOpenTK.Platform.Windows and OpenTK.Platform.X11 include portions of the Mono class library. These portions are covered by the following license:\n\nCopyright (c) 2004 Novell, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nOpenTK.Compatibility offers the Tao namespace, which includes portions of the Tao Framework library. These portions are covered by the following license:\n\nCopyright ©2003-2007 Tao Framework Team\nhttp://www.taoframework.com\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: \n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nOpenTK.Half offers Half-to-Single and Single-to-Half conversions based on OpenEXR source code, which is covered by the following license:\n\nCopyright (c) 2002, Industrial Light & Magic, a division of Lucas Digital Ltd. LLC. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n*       Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n*       Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n*       Neither the name of Industrial Light & Magic nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "NuGet.config",
          "type": "blob",
          "size": 3.2216796875,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <config>\n    <!-- use a local package folder because we produce nuget packages which may end up having to be cleaned,\n         and it's much easier to clean a local repository than the global nuget cache (in particular on bots) -->\n    <add key=\"repositorypath\" value=\"packages\" />\n    <add key=\"globalPackagesFolder\" value=\"packages\" />\n  </config>\n  <packageSources>\n    <clear />\n    <!--Begin: Package sources managed by Dependency Flow automation. Do not edit the sources below.-->\n    <!--  Begin: Package sources from xamarin-xamarin-macios -->\n    <!--  End: Package sources from xamarin-xamarin-macios -->\n    <!--  Begin: Package sources from dotnet-emsdk -->\n    <!--  End: Package sources from dotnet-emsdk -->\n    <!--  Begin: Package sources from dotnet-aspnetcore -->\n    <!--  End: Package sources from dotnet-aspnetcore -->\n    <!--  Begin: Package sources from dotnet-runtime -->\n    <!--  End: Package sources from dotnet-runtime -->\n    <!--End: Package sources managed by Dependency Flow automation. Do not edit the sources above.-->\n    <add key=\"dotnet-public\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json\" protocolVersion=\"3\" />\n    <add key=\"Dotnet arcade\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json\" />\n    <add key=\"dotnet-tools\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json\" />\n    <add key=\"dotnet8\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8/nuget/v3/index.json\" />\n    <add key=\"dotnet9\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet9/nuget/v3/index.json\" />\n    <!-- dotnet8-transport is required for Microsoft.DotNet.Cecil -->\n    <add key=\"dotnet8-transport\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8-transport/nuget/v3/index.json\" />\n    <add key=\"dotnet9-transport\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet9-transport/nuget/v3/index.json\" />\n    <add key=\"macios-dependencies\" value=\"https://pkgs.dev.azure.com/xamarin/public/_packaging/macios-dependencies/nuget/v3/index.json\" />\n    <add key=\"xamarin-impl\" value=\"https://pkgs.dev.azure.com/azure-public/vside/_packaging/xamarin-impl/nuget/v3/index.json\" />\n    <add key=\"local-tests-feed\" value=\"tests/.nuget/packages\" />\n    <!-- Add a 8.0.12 feed -->\n    <add key=\"darc-pub-dotnet-emsdk-0218136\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/darc-pub-dotnet-emsdk-0218136c/nuget/v3/index.json\" />\n    <add key=\"darc-pub-dotnet-runtime-c1ae962\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/darc-pub-dotnet-runtime-c1ae9626/nuget/v3/index.json\" />\n  </packageSources>\n  <disabledPackageSources>\n    <clear />\n    <!--Begin: Package sources managed by Dependency Flow automation. Do not edit the sources below.-->\n    <!--  Begin: Package sources from dotnet-runtime -->\n    <!--  End: Package sources from dotnet-runtime -->\n    <!--  Begin: Package sources from dotnet-aspnetcore -->\n    <!--  End: Package sources from dotnet-aspnetcore -->\n    <!--End: Package sources managed by Dependency Flow automation. Do not edit the sources above.-->\n  </disabledPackageSources>\n</configuration>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.478515625,
          "content": "# .NET for iOS, Mac Catalyst, macOS, tvOS #\n\n## Welcome!\n\nThis module is the main repository for:\n- **.NET for iOS**\n- **.NET for Mac Catalyst**\n- **.NET for macOS**\n- **.NET for tvOS**\n\nThese SDKs allow us to create native iOS, Mac Catalyst, macOS and tvOS applications using the same UI controls we would in Objective-C and Xcode, except with the flexibility and elegance of a modern language (C#), the power of the .NET Base Class Library (BCL), and first-class IDEs and editors&mdash;Visual Studio and Visual Studio Code&mdash;at our fingertips.\n\nThis repository is where we do development for the .NET for iOS, Mac Catalyst, macOS, and tvOS SDKs. .NET for iOS, Mac Catalyst, macOS, and tvOS are part of [.NET MAUI][maui-intro], and may also be used independently for native iOS and macOS development with .NET.\n\nThere are a few ways that you can contribute, for example:\n\n- [Submit bugs and feature requests](https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions)\n- [Review source code changes](https://github.com/xamarin/xamarin-macios/pulls)\n- [Submit pull requests](https://github.com/xamarin/xamarin-macios/wiki/How-to-Contribute#pull-requests) to resolve issues and fix bugs\n\n[maui-intro]: https://learn.microsoft.com/en-us/dotnet/maui/what-is-maui\n\n## Support\n\n.NET for iOS, Mac Catalyst, macOS, and tvOS are part of .NET MAUI, since it was introduced in May 2022 as part of .NET 6, and is currently supported as described on the [.NET MAUI Support Policy][maui-support-policy].\n\nSupport for Xamarin.iOS and Xamarin.Mac ended on **May 1, 2024** as per the [Xamarin Support Policy][xamarin-support-policy]:\n\n> Xamarin support ended on May 1, 2024 for all Xamarin SDKs including Xamarin.Forms. Android API 34 and Xcode 15 SDKs (iOS and iPadOS 17, macOS 14) are the final versions Xamarin targets from existing Xamarin SDKs (i.e. no new APIs are planned).\n\n[maui-support-policy]: https://dotnet.microsoft.com/en-us/platform/support/policy/maui\n[xamarin-support-policy]: https://dotnet.microsoft.com/en-us/platform/support/policy/xamarin\n\n## Contributing\n\nIf you are interested in fixing issues and contributing directly to the code base, please see the document [How to Contribute](https://github.com/xamarin/xamarin-macios/wiki/How-to-Contribute), which covers the following:\n\n- How to [build and run](https://github.com/xamarin/xamarin-macios/wiki/Build-&-Run) from source\n- The [development workflow](https://github.com/xamarin/xamarin-macios/wiki/How-to-Contribute#work-branches), including [debugging](https://github.com/xamarin/xamarin-macios/wiki/Build-&-Run#debugging-applications-from-source) and [running tests](https://github.com/xamarin/xamarin-macios/blob/main/tests/README.md)\n- [Coding Guidelines](https://github.com/xamarin/xamarin-macios/wiki/How-to-Contribute#coding-guidelines)\n- [Submitting pull requests](https://github.com/xamarin/xamarin-macios/wiki/How-to-Contribute#pull-requests)\n\n## Downloads\n\nThe preferred method for installing Xamarin.iOS and Mac is to use the Visual Studio installers ([Windows](https://docs.microsoft.com/xamarin/ios/get-started/installation/windows/?pivots=windows), [Mac](https://docs.microsoft.com/visualstudio/mac/installation?view=vsmac-2019)).\n\nThe team also [strongly recommends](https://docs.microsoft.com/xamarin/ios/troubleshooting/questions/old-version-xcode) using the latest Xamarin SDK and Xcode whenever possible.\n\nHowever, we provide links to older Xamarin.iOS and Mac packages for macOS downgrades and build machine configuration, see [Downloads](DOWNLOADS.md).\n\n## Feedback\n\n- Ask a question on [Stack Overflow](https://stackoverflow.com/questions/tagged/xamarin.ios) or the [Xamarin Forums](https://learn.microsoft.com/en-us/answers/tags/18/xamarin)\n- [Request a new feature](https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions#writing-good-bug-reports-and-feature-requests) on GitHub\n- [Vote on existing feature requests](https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions#before-submitting-an-issue)\n- [Submit bugs to GitHub Issues](https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions)\n- Discuss development and design on [Discord](https://discord.gg/Gw6cvsq)\n\n[![Discord](https://img.shields.io/discord/732297728826277939.svg?label=Join%20chat&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/Gw6cvsq)\n\n## License\n\nCopyright (c) .NET Foundation Contributors. All rights reserved.\nLicensed under the [MIT](https://github.com/xamarin/xamarin-macios/blob/main/LICENSE) License.\n"
        },
        {
          "name": "SECURITY.MD",
          "type": "blob",
          "size": 2.705078125,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.2 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [many more](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets Microsoft's [definition](https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc751383(v=technet.10)) of a security vulnerability, please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/en-us/msrc/pgp-key-msrc).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/en-us/msrc/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "banner.png",
          "type": "blob",
          "size": 156.3857421875,
          "content": null
        },
        {
          "name": "builds",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 6.69140625,
          "content": "#!/bin/bash -e\n\nfunction show_help () {\ncat <<EOL\nUsage: configure [options]\n    -h, --help              Displays this help\n\n    --disable-mac           Disable most of the Mac-related parts.\n    --disable-ios           Disable most of the iOS-related parts.\n                            The iOS build depend on some parts of the Mac build, so\n                            a complete separation is not possible (neither desirable,\n                            some parts will always be enabled to catch common programmer\n                            errors causing build breaks).\n                            The main reasons for disabling either part is to have faster\n                            builds and disable the non-relevant tests.\n\n    --disable-ios-device    Disables all device-related parts from the iOS build.\n                            This can be used to speed up the build.\n\n    --disable-strip:        If executables should be stripped or not.\n                            Disable to make it easier to debug executables using lldb.\n\n    --enable-ccache\n    --disable-ccache        Enable/disable ccache. Default: enabled if detected.\n\n    --enable-xamarin\n    --disable-xamarin       Enable/disable additional Xamarin-specific parts of the build.\n\n    --disable-packaged-llvm Compile LLVM instead of downloading a precompiled version.\n\n    --enable-packaged-mono\n    --disable-packaged-mono Enable/disable using the precompiled version of mono. If disabled mono will be compiled from source.\n\n    --enable-dotnet         Enable building .NET 6 bits.\n    --disable-dotnet        Disable building .NET 6 bits.\n\n    --enable-documentation  Enable building of API documentation\n    --disable-documentation Disable building of API documentation.\n\n    --enable-legacy-xamarin  Enable building the legacy version of Xamarin.iOS/Xamarin.Mac.\n    --disable-legacy-xamarin Disable building the legacy version of Xamarin.iOS/Xamarin.Mac.\n\n    --custom-dotnet=[artifacts] Use a locally built version of dotnet/runtime. See docs/CORECLR.md for detailed instructions about how to build dotnet/runtime from source.\n\n    --ignore-unknown-params  alters the default behavior to not return an non-zero exit code when an unknown parameter is provided.\nEOL\n}\n\ncd \"$(dirname \"${BASH_SOURCE[0]}\")\"\nCONFIGURED_FILE=configure.inc\nIGNORE_UNKNOWN_PARAMS=false\nUNKNOWN_PARAMETERS=\n\nrm -f $CONFIGURED_FILE\n\nif test -z \"$1\"; then\n    echo \"configure: all default values assumed.\"\n    exit 0\nfi\n\necho \"# Configure arguments: $*\" >> $CONFIGURED_FILE\n\nwhile test \"x$1\" != x; do\n    case $1 in\n    --disable-all-platforms)\n        echo \"INCLUDE_MAC=\" >> $CONFIGURED_FILE\n        echo \"INCLUDE_IOS=\" >> $CONFIGURED_FILE\n        echo \"INCLUDE_TVOS=\" >> $CONFIGURED_FILE\n        echo \"INCLUDE_MACCATALYST=\" >> $CONFIGURED_FILE\n        echo \"Disabled all platforms\"\n        shift\n        ;;\n    --disable-mac | --disable-macos)\n        echo \"INCLUDE_MAC=\" >> $CONFIGURED_FILE\n        echo \"Mac Build disabled\"\n        shift\n        ;;\n    --enable-mac | --enable-macos)\n        echo \"INCLUDE_MAC=1\" >> $CONFIGURED_FILE\n        echo \"Mac Build enabled\"\n        shift\n        ;;\n    --disable-ios-device)\n        echo \"INCLUDE_DEVICE=\" >> $CONFIGURED_FILE\n        shift\n        ;;\n    --disable-ios)\n        echo \"INCLUDE_IOS=\" >> $CONFIGURED_FILE\n        echo \"iOS Build disabled\"\n        shift\n        ;;\n    --enable-ios)\n        echo \"INCLUDE_IOS=1\" >> $CONFIGURED_FILE\n        echo \"iOS Build enabled\"\n        shift\n        ;;\n    --disable-tvos)\n        echo \"INCLUDE_TVOS=\" >> $CONFIGURED_FILE\n        echo \"tvOS Build disabled\"\n        shift\n        ;;\n    --enable-tvos)\n        echo \"INCLUDE_TVOS=1\" >> $CONFIGURED_FILE\n        echo \"tvOS Build enabled\"\n        shift\n        ;;\n    --disable-maccatalyst)\n        echo \"INCLUDE_MACCATALYST=\" >> $CONFIGURED_FILE\n        echo \"Mac Catalyst Build disabled\"\n        shift\n        ;;\n    --enable-maccatalyst)\n        echo \"INCLUDE_MACCATALYST=1\" >> $CONFIGURED_FILE\n        echo \"Mac Catalyst Build enabled\"\n        shift\n        ;;\n    --disable-strip)\n        echo \"DISABLE_STRIP=1\" >> $CONFIGURED_FILE\n        shift\n        ;;\n    --disable-ccache)\n        echo \"ENABLE_CCACHE=\" >> $CONFIGURED_FILE\n        shift\n        ;;\n    --enable-ccache)\n        if ! command -v ccache >/dev/null; then\n            echo \"Could not find ccache\"\n        else\n            echo \"ENABLE_CCACHE=1\" >> $CONFIGURED_FILE\n            echo \"cache enabled\"\n        fi\n        shift\n        ;;\n    --enable-xamarin)\n        echo \"ENABLE_XAMARIN=1\" >> $CONFIGURED_FILE\n        shift\n        ;;\n    --disable-xamarin)\n        echo \"ENABLE_XAMARIN=\" >> $CONFIGURED_FILE\n        shift\n        ;;\n    --disable-packaged-llvm)\n        echo \"DISABLE_DOWNLOAD_LLVM=1\" >> $CONFIGURED_FILE\n        shift\n        ;;\n    --enable-packaged-mono)\n        echo \"MONO_BUILD_FROM_SOURCE=\" >> \"$CONFIGURED_FILE\"\n        shift\n        ;;\n    --disable-packaged-mono)\n        echo \"MONO_BUILD_FROM_SOURCE=1\" >> \"$CONFIGURED_FILE\"\n        shift\n        ;;\n    --disable-packaged-mono=no | --disable-packaged-mono=false)\n        echo \"MONO_BUILD_FROM_SOURCE=\" >> \"$CONFIGURED_FILE\"\n        shift\n        ;;\n    --enable-dotnet)\n        # This is the default, and there's no way do enable it, so ignore this argument\n        shift\n        ;;\n    --disable-dotnet)\n        echo \"It's not possible to disable .NET anymore.\"\n        exit 1\n        ;;\n    --enable-dotnet-windows)\n        echo \"$1 is ignored. Use --enable-dotnet instead\"\n        shift\n        ;;\n    --disable-dotnet-windows)\n        echo \"$1 is ignored. Use --disable-dotnet instead\"\n        shift\n        ;;\n    --enable-legacy-xamarin)\n        echo \"It's not possible to enable legacy Xamarin anymore.\"\n        exit 1\n        ;;\n    --disable-legacy-xamarin)\n        # This is the default, and there's no way do enable it, so ignore this argument\n        shift\n        ;;\n    --custom-dotnet=*)\n        echo \"CUSTOM_DOTNET=1\" >> \"$CONFIGURED_FILE\"\n        echo \"DOTNET_RUNTIME_PATH=${1:16}\" >> \"$CONFIGURED_FILE\"\n        shift\n        ;;\n    --custom-dotnet)\n        echo \"CUSTOM_DOTNET=1\" >> \"$CONFIGURED_FILE\"\n        echo \"DOTNET_RUNTIME_PATH=$2\" >> \"$CONFIGURED_FILE\"\n        shift 2\n        ;;\n    --ignore-unknown-params)\n        echo \"ignoring unknown parameters\"\n        IGNORE_UNKNOWN_PARAMS=true\n        shift\n        ;;\n    --help|-h)\n        show_help\n        exit 0\n        ;;\n    *)\n        echo \"Unknown configure argument $1\" >&2\n        UNKNOWN_PARAMETERS=\"$UNKNOWN_PARAMETERS $1\"\n        shift\n        ;;\n    esac\ndone\n\nif [[ \"$IGNORE_UNKNOWN_PARAMS\" = false ]] && [[ -n \"$UNKNOWN_PARAMETERS\" ]]; then\n    exit 1\nfi\n\nif [[ \"$IGNORE_UNKNOWN_PARAMS\" = true ]] && [[ -n \"$UNKNOWN_PARAMETERS\" ]]; then\n    echo \"The following parameters were ignored: $UNKNOWN_PARAMETERS\"\nfi\n\nexit 0\n"
        },
        {
          "name": "create-make-config.sh",
          "type": "blob",
          "size": 1.408203125,
          "content": "#!/bin/bash -eu\n\nset -o pipefail\nIFS=$'\\n\\t '\n\nOUTPUT=Make.config.inc\nOUTPUT_FILE=Make.config.inc.tmp\n\nrm -f \"$OUTPUT_FILE\" \"$OUTPUT\"\n\nLANG=C\nexport LANG\n\n# Compute commit distances\nfor platform in $ALL_DOTNET_PLATFORMS; do\n\tPLATFORM=$(echo \"$platform\" | tr '[:lower:]' '[:upper:]')\n\tCOMMIT=$(git blame -- ./Make.versions HEAD | grep \"${PLATFORM}_NUGET_OS_VERSION=\" | sed 's/ .*//')\n\tCOMMIT_DISTANCE=$(git log \"$COMMIT..HEAD\" --oneline | wc -l | sed -e 's/ //g')\n\tTOTAL_DISTANCE=$((NUGET_VERSION_COMMIT_DISTANCE_START+COMMIT_DISTANCE))\n\tprintf \"${PLATFORM}_NUGET_COMMIT_DISTANCE:=$TOTAL_DISTANCE\\\\n\" >> \"$OUTPUT_FILE\"\ndone\n\nSTABLE_COMMIT=$(git blame -L '/^[#[:blank:]]*NUGET_RELEASE_BRANCH=/,+1' -- ./Make.config HEAD | sed 's/ .*//')\nSTABLE_COMMIT_DISTANCE=$(git log \"$STABLE_COMMIT..HEAD\" --oneline | wc -l | sed -e 's/ //g')\nSTABLE_TOTAL_DISTANCE=$((STABLE_COMMIT_DISTANCE+NUGET_VERSION_STABLE_COMMIT_DISTANCE_START))\n\nprintf \"NUGET_STABLE_COMMIT_DISTANCE:=$STABLE_TOTAL_DISTANCE\\\\n\" >> \"$OUTPUT_FILE\"\n\n# Detect ccache\nif which ccache > /dev/null 2>&1; then\n\tprintf \"ENABLE_CCACHE=1\\n\" >> \"$OUTPUT_FILE\"\n\tprintf \"export CCACHE_BASEDIR=$(cd .. && pwd)\\n\" >> \"$OUTPUT_FILE\"\n\techo \"Found ccache on the system, enabling it\"\nfi\n\n# Detect maccore / xamarin\nif test -d ../maccore; then\n\tprintf \"ENABLE_XAMARIN=1\\n\" >> \"$OUTPUT_FILE\"\n\techo \"Detected the maccore repository, automatically enabled the Xamarin build\"\nfi\n\nmv \"$OUTPUT_FILE\" \"$OUTPUT\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dotnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "eng",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.1982421875,
          "content": "{\n  \"sdk\": {\n    \"version\": \"9.0.102-servicing.24610.2\"\n  },\n  \"tools\": {\n    \"dotnet\": \"9.0.102-servicing.24610.2\"\n  },\n  \"msbuild-sdks\": {\n    \"Microsoft.DotNet.Arcade.Sdk\": \"9.0.0-beta.24572.2\"\n  }\n}\n"
        },
        {
          "name": "jenkins",
          "type": "tree",
          "content": null
        },
        {
          "name": "mk",
          "type": "tree",
          "content": null
        },
        {
          "name": "msbuild",
          "type": "tree",
          "content": null
        },
        {
          "name": "product.snk",
          "type": "blob",
          "size": 0.58203125,
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "system-dependencies.sh",
          "type": "blob",
          "size": 31.2900390625,
          "content": "#!/bin/bash -e\n\nset -o pipefail\n\ncd $(dirname $0)\n\nFAIL=\nPROVISION_DOWNLOAD_DIR=/tmp/x-provisioning\nSUDO=sudo\nVERBOSE=\n\nOPTIONAL_SHARPIE=1\nOPTIONAL_SIMULATORS=1\nOPTIONAL_OLD_SIMULATORS=1\n\n# parse command-line arguments\nwhile ! test -z $1; do\n\tcase $1 in\n\t\t--no-sudo)\n\t\t\tSUDO=\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-xcode)\n\t\t\tPROVISION_XCODE=1\n\t\t\tunset IGNORE_XCODE\n\t\t\tshift\n\t\t\t;;\n\t\t--provision)\n\t\t\t# historical reasons :(\n\t\t\tPROVISION_XCODE=1\n\t\t\tPROVISION_VS=1\n\t\t\tunset IGNORE_XCODE\n\t\t\tunset IGNORE_VISUAL_STUDIO\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-*-studio)\n\t\t\tPROVISION_VS=1\n\t\t\tunset IGNORE_VISUAL_STUDIO\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-mono)\n\t\t\tPROVISION_MONO=1\n\t\t\tunset IGNORE_MONO\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-7z)\n\t\t\tPROVISION_7Z=1\n\t\t\tunset IGNORE_7Z\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-autotools)\n\t\t\t# this is an old argument, just ignore it\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-python3)\n\t\t\t# building mono from source requires having python3 installed\n\t\t\tPROVISION_PYTHON3=1\n\t\t\tunset IGNORE_PYTHON3\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-sharpie)\n\t\t\tPROVISION_SHARPIE=1\n\t\t\tunset OPTIONAL_SHARPIE\n\t\t\tunset IGNORE_SHARPIE\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-simulators)\n\t\t\tPROVISION_SIMULATORS=1\n\t\t\tunset OPTIONAL_SIMULATORS\n\t\t\tunset IGNORE_SIMULATORS\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-old-simulators)\n\t\t\tPROVISION_OLD_SIMULATORS=1\n\t\t\tunset OPTIONAL_OLD_SIMULATORS\n\t\t\tunset IGNORE_OLD_SIMULATORS\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-dotnet)\n\t\t\tPROVISION_DOTNET=1\n\t\t\tunset IGNORE_DOTNET\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-shellcheck)\n\t\t\tPROVISION_SHELLCHECK=1\n\t\t\tunset IGNORE_SHELLCHECK\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-yamllint)\n\t\t\tPROVISION_YAMLLINT=1\n\t\t\tunset IGNORE_YAMLLINT\n\t\t\tshift\n\t\t\t;;\n\t\t--provision-all)\n\t\t\tPROVISION_MONO=1\n\t\t\tunset IGNORE_MONO\n\t\t\tPROVISION_VS=1\n\t\t\tunset IGNORE_VISUAL_STUDIO\n\t\t\tPROVISION_XCODE=1\n\t\t\tunset IGNORE_XCODE\n\t\t\tPROVISION_7Z=1\n\t\t\tunset IGNORE_7Z\n\t\t\tPROVISION_HOMEBREW=1\n\t\t\tunset IGNORE_HOMEBREW\n\t\t\tPROVISION_SHARPIE=1\n\t\t\tunset IGNORE_SHARPIE\n\t\t\tPROVISION_SIMULATORS=1\n\t\t\tunset IGNORE_SIMULATORS\n\t\t\tPROVISION_OLD_SIMULATORS=1\n\t\t\tunset IGNORE_OLD_SIMULATORS\n\t\t\tPROVISION_PYTHON3=1\n\t\t\tunset IGNORE_PYTHON3\n\t\t\tPROVISION_DOTNET=1\n\t\t\tunset IGNORE_DOTNET\n\t\t\tPROVISION_SHELLCHECK=1\n\t\t\tunset IGNORE_SHELLCHECK\n\t\t\tPROVISION_YAMLLINT=1\n\t\t\tunset IGNORE_YAMLLINT\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-all)\n\t\t\tIGNORE_OSX=1\n\t\t\tIGNORE_MONO=1\n\t\t\tIGNORE_VISUAL_STUDIO=1\n\t\t\tIGNORE_XCODE=1\n\t\t\tIGNORE_7Z=1\n\t\t\tIGNORE_HOMEBREW=1\n\t\t\tIGNORE_SHARPIE=1\n\t\t\tIGNORE_SIMULATORS=1\n\t\t\tIGNORE_PYTHON3=1\n\t\t\tIGNORE_DOTNET=1\n\t\t\tIGNORE_SHELLCHECK=1\n\t\t\tIGNORE_YAMLLINT=1\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-osx)\n\t\t\tIGNORE_OSX=1\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-xcode)\n\t\t\tIGNORE_XCODE=1\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-*-studio)\n\t\t\tIGNORE_VISUAL_STUDIO=1\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-mono)\n\t\t\tIGNORE_MONO=1\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-autotools)\n\t\t\t# this is an old argument, just ignore it\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-python3)\n\t\t\tIGNORE_PYTHON3=1\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-7z)\n\t\t\tIGNORE_7Z=1\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-sharpie)\n\t\t\tIGNORE_SHARPIE=1\n\t\t\tshift\n\t\t\t;;\n\t\t--enforce-sharpie)\n\t\t\tunset IGNORE_SHARPIE\n\t\t\tunset OPTIONAL_SHARPIE\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-simulators)\n\t\t\tIGNORE_SIMULATORS=1\n\t\t\tshift\n\t\t\t;;\n\t\t--enforce-simulators)\n\t\t\tunset IGNORE_SIMULATORS\n\t\t\tunset OPTIONAL_SIMULATORS\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-dotnet)\n\t\t\tIGNORE_DOTNET=1\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-shellcheck)\n\t\t\tIGNORE_SHELLCHECK=1\n\t\t\tshift\n\t\t\t;;\n\t\t--ignore-yamllint)\n\t\t\tIGNORE_YAMLLINT=1\n\t\t\tshift\n\t\t\t;;\n\t\t-v | --verbose)\n\t\t\tset -x\n\t\t\tshift\n\t\t\tVERBOSE=1\n\t\t\t;;\n\t\t*)\n\t\t\techo \"Unknown argument: $1\"\n\t\t\texit 1\n\t\t\t;;\n\tesac\ndone\n\n# reporting functions\nCOLOR_RED=$(tput setaf 1 2>/dev/null || true)\nCOLOR_ORANGE=$(tput setaf 3 2>/dev/null || true)\nCOLOR_MAGENTA=$(tput setaf 5 2>/dev/null || true)\nCOLOR_BLUE=$(tput setaf 6 2>/dev/null || true)\nCOLOR_CLEAR=$(tput sgr0 2>/dev/null || true)\nCOLOR_RESET=uniquesearchablestring\nFAILURE_PREFIX=\nif test -z \"$COLOR_RED\"; then FAILURE_PREFIX=\"** failure ** \"; fi\n\nfunction fail () {\n\techo \"    $FAILURE_PREFIX${COLOR_RED}${1//${COLOR_RESET}/${COLOR_RED}}${COLOR_CLEAR}\"\n\tFAIL=1\n}\n\nfunction warn () {\n\techo \"    ${COLOR_ORANGE}${1//${COLOR_RESET}/${COLOR_ORANGE}}${COLOR_CLEAR}\"\n}\n\nfunction ok () {\n\techo \"    ${1//${COLOR_RESET}/${COLOR_CLEAR}}\"\n}\n\nfunction log () {\n\techo \"        ${1//${COLOR_RESET}/${COLOR_CLEAR}}\"\n}\n\n# $1: the version to check\n# $2: the minimum version to check against\nfunction is_at_least_version () {\n\tACT_V=$1\n\tMIN_V=$2\n\n\tif [[ \"$ACT_V\" == \"$MIN_V\" ]]; then\n\t\treturn 0\n\tfi\n\n\tIFS=. read -a V_ACT <<< \"$ACT_V\"\n\tIFS=. read -a V_MIN <<< \"$MIN_V\"\n\t\n\t# get the minimum # of elements\n\tAC=${#V_ACT[@]}\n\tMC=${#V_MIN[@]}\n\tCOUNT=$(($AC>$MC?$MC:$AC))\n\n\tC=0\n\twhile (( $C < $COUNT )); do\n\t\tACT=${V_ACT[$C]}\n\t\tMIN=${V_MIN[$C]}\n\t\tif (( $ACT > $MIN )); then\n\t\t\treturn 0\n\t\telif (( \"$MIN\" > \"$ACT\" )); then\n\t\t\treturn 1\n\t\tfi\n\t\tlet C++\n\tdone\n\n\tif (( $AC == $MC )); then\n\t\t# identical?\n\t\treturn 0\n\tfi\n\n\tif (( $AC > $MC )); then\n\t\t# more version fields in actual than min: OK\n\t\treturn 0\n\telif (( $AC == $MC )); then\n\t\t# entire strings aren't equal (first check in function), but each individual field is?\n\t\treturn 0\n\telse\n\t\t# more version fields in min than actual (1.0 vs 1.0.1 for instance): not OK\n\t\treturn 1\n\tfi\n}\n\nfunction install_mono () {\n\tlocal MONO_URL=`grep MIN_MONO_URL= Make.config | sed 's/.*=//'`\n\tlocal MIN_MONO_VERSION=`grep MIN_MONO_VERSION= Make.config | sed 's/.*=//'`\n\n\tif test -z $MONO_URL; then\n\t\tfail \"No MIN_MONO_URL set in Make.config, cannot provision\"\n\t\treturn\n\tfi\n\n\tmkdir -p $PROVISION_DOWNLOAD_DIR\n\tlog \"Downloading Mono $MIN_MONO_VERSION from $MONO_URL to $PROVISION_DOWNLOAD_DIR...\"\n\tlocal MONO_NAME=`basename $MONO_URL`\n\tlocal MONO_PKG=$PROVISION_DOWNLOAD_DIR/$MONO_NAME\n\tcurl -L $MONO_URL > $MONO_PKG\n\n\tlog \"Installing Mono $MIN_MONO_VERSION from $MONO_URL...\"\n\t$SUDO installer -pkg $MONO_PKG -target /\n\n\trm -f $MONO_PKG\n}\n\nfunction xcodebuild_download_selected_platforms ()\n{\n\tlog \"Executing '$XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild -downloadPlatform iOS' $1\"\n\t\"$XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild\" -downloadPlatform iOS\n\tlog \"Executing '$XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild -downloadPlatform tvOS' $1\"\n\t\"$XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild\" -downloadPlatform tvOS\n}\n\nfunction download_xcode_platforms ()\n{\n\tif test -n \"$IGNORE_SIMULATORS\"; then return; fi\n\n\tlocal XCODE_VERSION\n\tlocal XCODE_DEVELOPER_ROOT=\"$1\"\n\n\tXCODE_VERSION=$(grep ^XCODE_VERSION= Make.config | sed 's/.*=//')\n\n\tif ! is_at_least_version \"$XCODE_VERSION\" 14.0; then\n\t\t# Nothing to do here\n\t\tlog \"This version of Xcode ($XCODE_VERSION) does not have any additional platforms to download\"\n\t\treturn\n\tfi\n\n\tif test -z \"$PROVISION_SIMULATORS\"; then\n\t\twarn \"    Xcode may have additional platforms that must be downloaded. Execute './system-dependencies.sh --provision-simulators' to install those platforms (or alternatively ${COLOR_MAGENTA}export IGNORE_SIMULATORS=1${COLOR_RESET} to skip this check)\"\n\t\treturn\n\tfi\n\n\tlog \"Xcode has additional platforms that must be downloaded ($MUST_INSTALL_RUNTIMES), so installing those.\"\n\n\tlog \"Executing '$SUDO pkill -9 -f CoreSimulator.framework'\"\n\t$SUDO pkill -9 -f \"CoreSimulator.framework\" || true\n\tif ! xcodebuild_download_selected_platforms; then\n\t\tlog \"Executing '$XCODE_DEVELOPER_ROOT/usr/bin/simctl runtime list -v\"\n\t\t\"$XCODE_DEVELOPER_ROOT/usr/bin/simctl\" runtime list -v\n\t\t# Don't exit here, just hope for the best instead.\n\t\tset +x\n\t\techo \"##vso[task.logissue type=warning;sourcepath=system-dependencies.sh]Failed to download all simulator platforms, this may result in problems executing tests in the simulator.\"\n\t\tset -x\n\telse\n\t\tlog \"Executing '$XCODE_DEVELOPER_ROOT/usr/bin/simctl runtime list -v\"\n\t\t\"$XCODE_DEVELOPER_ROOT/usr/bin/simctl\" runtime list -v\n\t\tlog \"Executing '$XCODE_DEVELOPER_ROOT/usr/bin/simctl list -v\"\n\t\t\"$XCODE_DEVELOPER_ROOT/usr/bin/simctl\" list -v\n\tfi\n\n\txcodebuild_download_selected_platforms \"(second time)\" || true\n\txcodebuild_download_selected_platforms \"(third time)\" || true\n\txcodebuild_download_selected_platforms \"(fourth time)\" || true\n\n\tlog \"Executing '$SUDO $XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild -runFirstLaunch'\"\n\t$SUDO \"$XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild\" -runFirstLaunch\n\tlog \"Executed '$SUDO $XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild -runFirstLaunch'\"\n\n\t# This is a workaround for a bug in Xcode 15 where we need to open the platforms panel for it to register the simulators.\n\tlog \"Executing 'open xcpref://Xcode.PreferencePane.Platforms'\"\n\tlog \"Killing Xcode\"\n\tpkill -9 \"Xcode\" || log \"Xcode was not running.\"\n\tlog \"Opening Xcode preferences panel\"\n\topen xcpref://Xcode.PreferencePane.Platforms\n\tlog \"waiting 10 secs for Xcode to open the preferences panel\"\n\tsleep 10\n\tlog \"Killing Xcode\"\n\tpkill -9 \"Xcode\" || log \"Xcode was not running.\"\n\tlog \"Executed 'open xcpref://Xcode.PreferencePane.Platforms'\"\n\n\tlog \"Finished installing Xcode platforms\"\n}\n\nfunction run_xcode_first_launch ()\n{\n\tlocal XCODE_VERSION=\"$1\"\n\tlocal XCODE_DEVELOPER_ROOT=\"$2\"\n\n\t# xcodebuild -runFirstLaunch seems to have been introduced in Xcode 9\n\tif ! is_at_least_version \"$XCODE_VERSION\" 9.0; then\n\t\treturn\n\tfi\n\n\tif ! \"$XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild\" -checkFirstLaunchStatus; then\n\t\tif ! test -z \"$PROVISION_XCODE\"; then\n\t\t\t# Run the first launch tasks\n\t\t\tlog \"Executing '$SUDO $XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild -runFirstLaunch'\"\n\t\t\t$SUDO \"$XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild\" -runFirstLaunch\n\t\t\tlog \"Executed '$SUDO $XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild -runFirstLaunch'\"\n\t\telse\n\t\t\tfail \"Xcode has pending first launch tasks. Execute 'make fix-xcode-first-run' to execute those tasks.\"\n\t\t\treturn\n\t\tfi\n\tfi\n}\n\nfunction install_specific_xcode () {\n\tlocal XCODE_URL=`grep XCODE$1_URL= Make.config | sed 's/.*=//'`\n\tlocal XCODE_VERSION=`grep XCODE$1_VERSION= Make.config | sed 's/.*=//'`\n\tlocal XCODE_DEVELOPER_ROOT=\"$2\"\n\tlocal XCODE_ROOT=\"$(dirname \"$(dirname \"$XCODE_DEVELOPER_ROOT\")\")\"\n\n\tif test -z $XCODE_URL; then\n\t\tfail \"No XCODE$1_URL set in Make.config, cannot provision\"\n\t\treturn\n\tfi\n\n\tmkdir -p $PROVISION_DOWNLOAD_DIR\n\tlog \"Downloading Xcode $XCODE_VERSION from $XCODE_URL to $PROVISION_DOWNLOAD_DIR...\"\n\tlocal XCODE_NAME=`basename $XCODE_URL`\n\tlocal XCODE_DMG=$PROVISION_DOWNLOAD_DIR/$XCODE_NAME\n\n\t# To test this script with new Xcode versions, copy the downloaded file to $XCODE_DMG,\n\t# uncomment the following curl line, and run ./system-dependencies.sh --provision-xcode\n\tif test -f \"$HOME/Downloads/$XCODE_NAME\"; then\n\t\tlog \"Found $XCODE_NAME in your ~/Downloads folder, copying that version to $XCODE_DMG instead of re-downloading it.\"\n\t\tcp \"$HOME/Downloads/$XCODE_NAME\" \"$XCODE_DMG\"\n\telse\n\t\tcurl -L $XCODE_URL > $XCODE_DMG\n\tfi\n\n\tif [[ ${XCODE_DMG: -4} == \".dmg\" ]]; then\n\t\tlocal XCODE_MOUNTPOINT=$PROVISION_DOWNLOAD_DIR/$XCODE_NAME-mount\n\t\tlog \"Mounting $XCODE_DMG into $XCODE_MOUNTPOINT...\"\n\t\thdiutil attach $XCODE_DMG -mountpoint $XCODE_MOUNTPOINT -quiet -nobrowse\n\t\tlog \"Removing previous Xcode from $XCODE_ROOT\"\n\t\trm -Rf $XCODE_ROOT\n\t\tlog \"Installing Xcode $XCODE_VERSION to $XCODE_ROOT...\"\n\t\tcp -R $XCODE_MOUNTPOINT/*.app $XCODE_ROOT\n\t\tlog \"Unmounting $XCODE_DMG...\"\n\t\thdiutil detach $XCODE_MOUNTPOINT -quiet\n\telif [[ ${XCODE_DMG: -4} == \".xip\" ]]; then\n\t\tlog \"Extracting $XCODE_DMG...\"\n\t\tpushd . > /dev/null\n\t\tcd $PROVISION_DOWNLOAD_DIR\n\t\t# make sure there's nothing interfering\n\t\trm -Rf *.app\n\t\trm -Rf $XCODE_ROOT\n\t\t# extract\n\t\txip --expand \"$XCODE_DMG\"\n\t\tlog \"Installing Xcode $XCODE_VERSION to $XCODE_ROOT...\"\n\t\tmv *.app $XCODE_ROOT\n\t\tpopd > /dev/null\n\telse\n\t\tfail \"Don't know how to install $XCODE_DMG\"\n\tfi\n\trm -f $XCODE_DMG\n\n\tlog \"Removing any com.apple.quarantine attributes from the installed Xcode\"\n\t$SUDO xattr -s -d -r com.apple.quarantine $XCODE_ROOT\n\n\tif is_at_least_version $XCODE_VERSION 5.0; then\n\t\tlog \"Accepting Xcode license\"\n\t\t$SUDO $XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild -license accept\n\tfi\n\n\tif is_at_least_version \"$XCODE_VERSION\" 9.0; then\n\t\trun_xcode_first_launch \"$XCODE_VERSION\" \"$XCODE_DEVELOPER_ROOT\"\n\telif is_at_least_version $XCODE_VERSION 8.0; then\n\t\tPKGS=\"MobileDevice.pkg MobileDeviceDevelopment.pkg XcodeSystemResources.pkg\"\n\t\tfor pkg in $PKGS; do\n\t\t\tif test -f \"$XCODE_DEVELOPER_ROOT/../Resources/Packages/$pkg\"; then\n\t\t\t\tlog \"Installing $pkg\"\n\t\t\t\t$SUDO /usr/sbin/installer -dumplog -verbose -pkg \"$XCODE_DEVELOPER_ROOT/../Resources/Packages/$pkg\" -target /\n\t\t\t\tlog \"Installed $pkg\"\n\t\t\telse\n\t\t\t\tlog \"Not installing $pkg because it doesn't exist.\"\n\t\t\tfi\n\t\tdone\n\tfi\n\n\tlog \"Clearing xcrun cache...\"\n\txcrun -k\n\n\tok \"Xcode $XCODE_VERSION provisioned\"\n}\n\nfunction install_coresimulator ()\n{\n\tlocal XCODE_DEVELOPER_ROOT\n\tlocal CORESIMULATOR_PKG\n\tlocal CORESIMULATOR_PKG_DIR\n\tlocal XCODE_ROOT\n\tlocal TARGET_CORESIMULATOR_VERSION\n\tlocal CURRENT_CORESIMULATOR_VERSION\n\n\tXCODE_DEVELOPER_ROOT=$(grep XCODE_DEVELOPER_ROOT= Make.config | sed 's/.*=//')\n\tXCODE_ROOT=$(dirname \"$(dirname \"$XCODE_DEVELOPER_ROOT\")\")\n\tCORESIMULATOR_PKG=$XCODE_ROOT/Contents/Resources/Packages/XcodeSystemResources.pkg\n\n\tif ! test -f \"$CORESIMULATOR_PKG\"; then\n\t\twarn \"Could not find XcodeSystemResources.pkg (which contains CoreSimulator.framework) in $XCODE_DEVELOPER_ROOT ($CORESIMULATOR_PKG doesn't exist).\"\n\t\treturn\n\tfi\n\n\t# Get the CoreSimulator.framework version from our Xcode\n\t# Extract the .pkg to get the pkg's PackageInfo file, which contains the CoreSimulator.framework version.\n\tCORESIMULATOR_PKG_DIR=$(mktemp -d)\n\tpkgutil --expand \"$CORESIMULATOR_PKG\" \"$CORESIMULATOR_PKG_DIR/extracted\"\n\n\tif ! TARGET_CORESIMULATOR_VERSION=$(xmllint --xpath 'string(/pkg-info/bundle-version/bundle[@id=\"com.apple.CoreSimulator\"]/@CFBundleShortVersionString)' \"$CORESIMULATOR_PKG_DIR/extracted/PackageInfo\"); then\n\t\trm -rf \"$CORESIMULATOR_PKG_DIR\"\n\t\twarn \"Failed to look up the CoreSimulator version of $XCODE_DEVELOPER_ROOT\"\n\t\treturn\n\tfi\n\trm -rf \"$CORESIMULATOR_PKG_DIR\"\n\n\t# Get the CoreSimulator.framework currently installed\n\tlocal CURRENT_CORESIMULATOR_PATH=/Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n\tlocal CURRENT_CORESIMULATOR_VERSION=0.0\n\tif test -f \"$CURRENT_CORESIMULATOR_PATH\"; then\n\t\tCURRENT_CORESIMULATOR_VERSION=$(otool -L $CURRENT_CORESIMULATOR_PATH | grep \"$CURRENT_CORESIMULATOR_PATH.*current version\" | sed -e 's/.*current version//' -e 's/)//' -e 's/[[:space:]]//g' | uniq)\n\tfi\n\n\t# Either version may be composed of either 2 or 3 numbers.\n\t# We only care about the first two, so strip off the 3rd number if it exists.\n\t# shellcheck disable=SC2001\n\tCURRENT_CORESIMULATOR_VERSION=$(echo \"$CURRENT_CORESIMULATOR_VERSION\" | sed 's/\\([0-9]*[.][0-9]*\\).*/\\1/')\n\t# shellcheck disable=SC2001\n\tTARGET_CORESIMULATOR_VERSION=$(echo \"$TARGET_CORESIMULATOR_VERSION\" | sed 's/\\([0-9]*[.][0-9]*\\).*/\\1/')\n\n\t# Compare versions to see if we got what we need\n\tif [[ x\"$TARGET_CORESIMULATOR_VERSION\" == x\"$CURRENT_CORESIMULATOR_VERSION\" ]]; then\n\t\tlog \"Found CoreSimulator.framework $CURRENT_CORESIMULATOR_VERSION (exactly $TARGET_CORESIMULATOR_VERSION is recommended)\"\n\t\treturn\n\tfi\n\n\tif test -z $PROVISION_XCODE; then\n\t\t# This is not a failure for now, until this logic has been tested thoroughly\n\t\twarn \"You should have exactly CoreSimulator.framework version $TARGET_CORESIMULATOR_VERSION (found $CURRENT_CORESIMULATOR_VERSION). Execute './system-dependencies.sh --provision-xcode' to install the expected version.\"\n\t\treturn\n\tfi\n\n\t# Just installing the package won't work, because there's a version check somewhere\n\t# that prevents the macOS installer from downgrading, so remove the existing\n\t# CoreSimulator.framework manually first.\n\tlog \"Installing CoreSimulator.framework $CURRENT_CORESIMULATOR_VERSION...\"\n\t$SUDO rm -Rf /Library/Developer/PrivateFrameworks/CoreSimulator.framework\n\t$SUDO installer -pkg \"$CORESIMULATOR_PKG\" -target /\n\n\tCURRENT_CORESIMULATOR_VERSION=$(otool -L $CURRENT_CORESIMULATOR_PATH | grep \"$CURRENT_CORESIMULATOR_PATH.*current version\" | sed -e 's/.*current version//' -e 's/)//' -e 's/[[:space:]]//g')\n\tlog \"Installed CoreSimulator.framework $CURRENT_CORESIMULATOR_VERSION successfully.\"\n}\n\nfunction check_specific_xcode () {\n\tlocal XCODE_DEVELOPER_ROOT=`grep XCODE$1_DEVELOPER_ROOT= Make.config | sed 's/.*=//'`\n\tlocal XCODE_VERSION=`grep XCODE$1_VERSION= Make.config | sed 's/.*=//'`\n\tlocal XCODE_ROOT=$(dirname `dirname $XCODE_DEVELOPER_ROOT`)\n\t\n\tif ! test -d $XCODE_DEVELOPER_ROOT; then\n\t\tif ! test -z $PROVISION_XCODE; then\n\t\t\tinstall_specific_xcode \"$1\" \"$XCODE_DEVELOPER_ROOT\"\n\t\telse\n\t\t\tfail \"You must install Xcode ($XCODE_VERSION) in $XCODE_ROOT. You can download Xcode $XCODE_VERSION here: https://developer.apple.com/downloads/index.action?name=Xcode\"\n\t\tfi\n\t\treturn\n\telse\n\t\tif is_at_least_version $XCODE_VERSION 5.0; then\n\t\t\tif ! $XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild -license check >/dev/null 2>&1; then\n\t\t\t\tif ! test -z $PROVISION_XCODE; then\n\t\t\t\t\t$SUDO $XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild -license accept\n\t\t\t\telse\n\t\t\t\t\tfail \"The license for Xcode $XCODE_VERSION has not been accepted. Execute '$SUDO $XCODE_DEVELOPER_ROOT/usr/bin/xcodebuild' to review the license and accept it.\"\n\t\t\t\t\treturn\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\n\t\trun_xcode_first_launch \"$XCODE_VERSION\" \"$XCODE_DEVELOPER_ROOT\"\n\tfi\n\n\tlocal XCODE_ACTUAL_VERSION=`/usr/libexec/PlistBuddy -c 'Print :CFBundleShortVersionString' \"$XCODE_DEVELOPER_ROOT/../version.plist\"`\n\t# this is a hard match, having 4.5 when requesting 4.4 is not OK (but 4.4.1 is OK)\n\tif [[ ! \"x$XCODE_ACTUAL_VERSION\" =~ \"x$XCODE_VERSION\" ]]; then\n\t\tfail \"You must install Xcode $XCODE_VERSION in $XCODE_ROOT (found $XCODE_ACTUAL_VERSION).  You can download Xcode $XCODE_VERSION here: https://developer.apple.com/downloads/index.action?name=Xcode\";\n\t\treturn\n\tfi\n\n\tok \"Found Xcode $XCODE_ACTUAL_VERSION in $XCODE_ROOT\"\n}\n\nfunction check_xcode () {\n\tif ! test -z $IGNORE_XCODE; then return; fi\n\n\t# must have latest Xcode in /Applications/Xcode<version>.app\n\tcheck_specific_xcode\n\tinstall_coresimulator\n\n\tlocal IOS_SDK_VERSION MACOS_SDK_VERSION WATCH_SDK_VERSION TVOS_SDK_VERSION\n\tlocal XCODE_DEVELOPER_ROOT=`grep ^XCODE_DEVELOPER_ROOT= Make.config | sed 's/.*=//'`\n\tIOS_SDK_VERSION=$(grep ^IOS_NUGET_OS_VERSION= Make.versions | sed -e 's/.*=//')\n\tMACOS_SDK_VERSION=$(grep ^MACOS_NUGET_OS_VERSION= Make.versions | sed -e 's/.*=//')\n\tTVOS_SDK_VERSION=$(grep ^TVOS_NUGET_OS_VERSION= Make.versions | sed -e 's/.*=//')\n\n\tdownload_xcode_platforms \"$XCODE_DEVELOPER_ROOT\" \"$TVOS_SDK_VERSION\"\n\n\tlocal D=$XCODE_DEVELOPER_ROOT/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator${IOS_SDK_VERSION}.sdk\n\tif test ! -d $D -a -z \"$FAIL\"; then\n\t\tfail \"The directory $D does not exist. If you've updated the Xcode location it means you also need to update IOS_SDK_VERSION in Make.config.\"\n\tfi\n\n\tlocal D=$XCODE_DEVELOPER_ROOT/Platforms/MacOSX.platform/Developer/SDKs/MacOSX${MACOS_SDK_VERSION}.sdk\n\tif test ! -d $D -a -z \"$FAIL\"; then\n\t\tfail \"The directory $D does not exist. If you've updated the Xcode location it means you also need to update MACOS_SDK_VERSION in Make.config.\"\n\tfi\n\n\tlocal D=$XCODE_DEVELOPER_ROOT/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS${TVOS_SDK_VERSION}.sdk\n\tif test ! -d $D -a -z \"$FAIL\"; then\n\t\tfail \"The directory $D does not exist. If you've updated the Xcode location it means you also need to update TVOS_SDK_VERSION in Make.config.\"\n\tfi\n}\n\nfunction check_mono () {\n\tif ! test -z $IGNORE_MONO; then return; fi\n\n\tMONO_VERSION_FILE=/Library/Frameworks/Mono.framework/Versions/Current/VERSION\n\tif ! /Library/Frameworks/Mono.framework/Commands/mono --version 2>/dev/null >/dev/null; then\n\t\tif ! test -z $PROVISION_MONO; then\n\t\t\tinstall_mono\n\t\telse\n\t\t\tfail \"You must install the Mono MDK. Download URL: $MIN_MONO_URL\"\n\t\t\treturn\n\t\tfi\n\telif ! test -e $MONO_VERSION_FILE; then\n\t\tif ! test -z $PROVISION_MONO; then\n\t\t\tinstall_mono\n\t\telse\n\t\t\tfail \"Could not find Mono's VERSION file, you must install the Mono MDK. Download URL: $MIN_MONO_URL\"\n\t\t\treturn\n\t\tfi\n\tfi\n\n\tMIN_MONO_VERSION=`grep MIN_MONO_VERSION= Make.config | sed 's/.*=//'`\n\tMAX_MONO_VERSION=`grep MAX_MONO_VERSION= Make.config | sed 's/.*=//'`\n\n\tACTUAL_MONO_VERSION=`cat $MONO_VERSION_FILE`\n\tif ! is_at_least_version $ACTUAL_MONO_VERSION $MIN_MONO_VERSION; then\n\t\tif ! test -z $PROVISION_MONO; then\n\t\t\tinstall_mono\n\t\t\tACTUAL_MONO_VERSION=`cat $MONO_VERSION_FILE`\n\t\telse\n\t\t\tMIN_MONO_URL=$(grep ^MIN_MONO_URL= Make.config | sed 's/.*=//')\n\t\t\tfail \"You must have at least Mono $MIN_MONO_VERSION, found $ACTUAL_MONO_VERSION. Download URL: $MIN_MONO_URL\"\n\t\t\treturn\n\t\tfi\n\telif [[ \"$ACTUAL_MONO_VERSION\" == \"$MAX_MONO_VERSION\" ]]; then\n\t\t: # this is ok\n\telif is_at_least_version $ACTUAL_MONO_VERSION $MAX_MONO_VERSION; then\n\t\tif ! test -z $PROVISION_MONO; then\n\t\t\tinstall_mono\n\t\t\tACTUAL_MONO_VERSION=`cat $MONO_VERSION_FILE`\n\t\telse\n\t\t\tfail \"Your mono version is too new, max version is $MAX_MONO_VERSION, found $ACTUAL_MONO_VERSION.\"\n\t\t\tfail \"You may edit Make.config and change MAX_MONO_VERSION to your actual version to continue the\"\n\t\t\tfail \"build (unless you're on a release branch). Once the build completes successfully, please\"\n\t\t\tfail \"commit the new MAX_MONO_VERSION value.\"\n\t\t\tfail \"Alternatively you can ${COLOR_MAGENTA}export IGNORE_MONO=1${COLOR_RED} to skip this check.\"\n\t\t\treturn\n\t\tfi\n\tfi\n\n\tif ! which mono > /dev/null 2>&1; then\n\t\tfail \"Mono is not in PATH. You must add '/Library/Frameworks/Mono.framework/Versions/Current/Commands' to PATH. Current PATH is: $PATH\".\n\t\treturn\n\tfi\n\n\tok \"Found Mono $ACTUAL_MONO_VERSION (at least $MIN_MONO_VERSION and not more than $MAX_MONO_VERSION is required)\"\n}\n\nfunction install_shellcheck () {\n\tif ! brew --version >& /dev/null; then\n\t\tfail \"Asked to install shellcheck, but brew is not installed.\"\n\t\treturn\n\tfi\n\n\tok \"Installing ${COLOR_BLUE}shellcheck${COLOR_RESET}...\"\n\tbrew install shellcheck\n}\n\nfunction install_yamllint () {\n\tif ! brew --version >& /dev/null; then\n\t\tfail \"Asked to install yamllint, but brew is not installed.\"\n\t\treturn\n\tfi\n\n\tok \"Installing ${COLOR_BLUE}yamllint${COLOR_RESET}...\"\n\tbrew install yamllint\n}\n\nfunction install_python3 () {\n\tif ! brew --version >& /dev/null; then\n\t\tfail \"Asked to install python3, but brew is not installed.\"\n\t\treturn\n\tfi\n\n\tok \"Installing ${COLOR_BLUE}python3${COLOR_RESET}...\"\n\tbrew install python3\n}\n\nfunction check_shellcheck () {\n\tif ! test -z $IGNORE_SHELLCHECK; then return; fi\n\nIFStmp=$IFS\nIFS='\n'\n\tif SHELLCHECK_VERSION=($(shellcheck --version 2>/dev/null)); then\n\t\tok \"Found shellcheck ${SHELLCHECK_VERSION[1]} (no specific version is required)\"\n\telif ! test -z $PROVISION_SHELLCHECK; then\n\t\tinstall_shellcheck\n\telse\n\t\tfail \"You must install shellcheck. The easiest way is to use homebrew, and execute ${COLOR_MAGENTA}brew install shellcheck${COLOR_RESET}.\"\n\tfi\n\nIFS=$IFS_tmp\n}\n\nfunction check_yamllint () {\n\tif ! test -z $IGNORE_YAMLLINT; then return; fi\n\nIFStmp=$IFS\nIFS='\n'\n\tif YAMLLINT_VERSION=($(yamllint --version 2>/dev/null)); then\n\t\tok \"Found ${YAMLLINT_VERSION[0]} (no specific version is required)\"\n\telif ! test -z $PROVISION_YAMLLINT; then\n\t\tinstall_yamllint\n\telse\n\t\tfail \"You must install yamllint. The easiest way is to use homebrew, and execute ${COLOR_MAGENTA}brew install yamllint${COLOR_RESET}.\"\n\tfi\n\nIFS=$IFS_tmp\n}\n\nfunction check_python3 () {\n\tif ! test -z $IGNORE_PYTHON3; then return; fi\n\nIFStmp=$IFS\nIFS='\n'\n\tif PYTHON3_VERSION=$(python3 --version 2>/dev/null); then\n\t\tok \"Found $PYTHON3_VERSION (no specific version is required)\"\n\telif ! test -z $PROVISION_PYTHON3; then\n\t\tinstall_python3\n\telse\n\t\tfail \"You must install python3. The easiest way is to use homebrew, and execute ${COLOR_MAGENTA}brew install python3${COLOR_RESET}.\"\n\tfi\n\nIFS=$IFS_tmp\n}\n\nfunction check_osx_version () {\n\tif ! test -z $IGNORE_OSX; then return; fi\n\n\tMIN_OSX_BUILD_VERSION=`grep MIN_OSX_BUILD_VERSION= Make.config | sed 's/.*=//'`\n\n\tACTUAL_OSX_VERSION=$(sw_vers -productVersion)\n\tif ! is_at_least_version $ACTUAL_OSX_VERSION $MIN_OSX_BUILD_VERSION; then\n\t\tfail \"You must have at least OSX $MIN_OSX_BUILD_VERSION (found $ACTUAL_OSX_VERSION)\"\n\t\treturn\n\tfi\n\n\tok \"Found OSX $ACTUAL_OSX_VERSION (at least $MIN_OSX_BUILD_VERSION is required)\"\n}\n\nfunction check_checkout_dir () {\n\t# use apple script to get the possibly translated special folders and check that we are not a subdir\n\tfor special in documents downloads desktop; do\n\t\tpath=$(osascript -e \"set result to POSIX path of (path to $special folder as string)\")\n\t\tif [[ $PWD == $path* ]]; then\n\t\t\tfail \"Your checkout is under $path which is a special path. This can result in problems running the tests.\"\n\t\tfi\n\tdone\n\tok \"Checkout location will not result in test problems.\"\n}\n\nfunction install_7z () {\n\tif ! brew --version >& /dev/null; then\n\t\tfail \"Asked to install 7z, but brew is not installed.\"\n\t\treturn\n\tfi\n\n\tbrew install p7zip\n}\n\nfunction check_7z () {\n\tif ! test -z $IGNORE_7Z; then return; fi\n\n\n\tif ! 7z &> /dev/null; then\n\t\tif ! test -z $PROVISION_7Z; then\n\t\t\tinstall_7z\n\t\telse\n\t\t\tfail \"You must install 7z (no specific version is required)\"\n\t\tfi\n\t\treturn\n\tfi\n\n\tok \"Found 7z (no specific version is required)\"\n}\n\nfunction check_homebrew ()\n{\n\tif ! test -z $IGNORE_HOMEBREW; then return; fi\n\nIFStmp=$IFS\nIFS='\n'\n\tif HOMEBREW_VERSION=($(brew --version 2>/dev/null)); then\n\t\tok \"Found Homebrew ($HOMEBREW_VERSION)\"\n\telif ! test -z $PROVISION_HOMEBREW; then\n\t\tlog \"Installing Homebrew...\"\n\t\t/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\t\n\t\tHOMEBREW_VERSION=($(brew --version 2>/dev/null))\n\t\tlog \"Installed Homebrew ($HOMEBREW_VERSION)\"\n\telse\n\t\twarn \"Could not find Homebrew. Homebrew is required to auto-provision some dependencies (p7zip), but not required otherwise.\"\n\tfi\nIFS=$IFS_tmp\n}\n\nfunction install_objective_sharpie () {\n\tlocal SHARPIE_URL=$(grep MIN_SHARPIE_URL= Make.config | sed 's/.*=//')\n\tlocal MIN_SHARPIE_VERSION=$(grep MIN_SHARPIE_VERSION= Make.config | sed 's/.*=//')\n\n\tif test -z \"$SHARPIE_URL\"; then\n\t\tfail \"No MIN_SHARPIE_URL set in Make.config, cannot provision Objective Sharpie\"\n\t\treturn\n\tfi\n\n\tmkdir -p \"$PROVISION_DOWNLOAD_DIR\"\n\tlog \"Downloading Objective Sharpie $MIN_SHARPIE_VERSION from $SHARPIE_URL to $PROVISION_DOWNLOAD_DIR...\"\n\tlocal SHARPIE_NAME=$(basename \"$SHARPIE_URL\")\n\tlocal SHARPIE_PKG=$PROVISION_DOWNLOAD_DIR/$SHARPIE_NAME\n\tcurl -L \"$SHARPIE_URL\" > \"$SHARPIE_PKG\"\n\n\tlog \"Installing Objective-Sharpie $MIN_SHARPIE_VERSION from $SHARPIE_URL...\"\n\tsudo installer -pkg \"$SHARPIE_PKG\" -target /\n\n\trm -f \"$SHARPIE_PKG\"\n}\n\nfunction check_objective_sharpie () {\n\tif ! test -z $IGNORE_SHARPIE; then return; fi\n\n\tSHARPIE_URL=$(grep MIN_SHARPIE_URL= Make.config | sed 's/.*=//')\n\tMIN_SHARPIE_VERSION=$(grep MIN_SHARPIE_VERSION= Make.config | sed 's/.*=//')\n\tMAX_SHARPIE_VERSION=$(grep MAX_SHARPIE_VERSION= Make.config | sed 's/.*=//')\n\n\tif ! test -f /Library/Frameworks/ObjectiveSharpie.framework/Versions/Current/Version; then\n\t\tif ! test -z \"$PROVISION_SHARPIE\"; then\n\t\t\tinstall_objective_sharpie\n\t\t\tACTUAL_SHARPIE_VERSION=$(cat /Library/Frameworks/ObjectiveSharpie.framework/Versions/Current/Version)\n\t\telse\n\t\t\tif test -z $OPTIONAL_SHARPIE; then\n\t\t\t\tfail \"You must install Objective Sharpie, at least $MIN_SHARPIE_VERSION (no Objective Sharpie found). You can download it from $SHARPIE_URL\"\n\t\t\t\tfail \"Alternatively you can ${COLOR_MAGENTA}export IGNORE_SHARPIE=1${COLOR_RED} to skip this check.\"\n\t\t\telse\n\t\t\t\twarn \"You do not have Objective Sharpie installed (should be at least $MIN_SHARPIE_VERSION). You can download it from $SHARPIE_URL\"\n\t\t\tfi\n\t\t\treturn\n\t\tfi\n\telse\n\t\tACTUAL_SHARPIE_VERSION=$(cat /Library/Frameworks/ObjectiveSharpie.framework/Versions/Current/Version)\n\t\tif ! is_at_least_version \"$ACTUAL_SHARPIE_VERSION\" \"$MIN_SHARPIE_VERSION\"; then\n\t\t\tif ! test -z \"$PROVISION_SHARPIE\"; then\n\t\t\t\tinstall_objective_sharpie\n\t\t\t\tACTUAL_SHARPIE_VERSION=$(cat /Library/Frameworks/ObjectiveSharpie.framework/Versions/Current/Version)\n\t\t\telse\n\t\t\t\tif test -z $OPTIONAL_SHARPIE; then\n\t\t\t\t\tfail \"You must have at least Objective Sharpie $MIN_SHARPIE_VERSION, found $ACTUAL_SHARPIE_VERSION. You can download it from $SHARPIE_URL\"\n\t\t\t\t\tfail \"Alternatively you can ${COLOR_MAGENTA}export IGNORE_SHARPIE=1${COLOR_RED} to skip this check.\"\n\t\t\t\telse\n\t\t\t\t\twarn \"You do not have have at least Objective Sharpie $MIN_SHARPIE_VERSION (found $ACTUAL_SHARPIE_VERSION). You can download it from $SHARPIE_URL\"\n\t\t\t\tfi\n\t\t\t\treturn\n\t\t\tfi\n\t\telif [[ \"$ACTUAL_SHARPIE_VERSION\" == \"$MAX_SHARPIE_VERSION\" ]]; then\n\t\t\t: # this is ok\n\t\telif is_at_least_version \"$ACTUAL_SHARPIE_VERSION\" \"$MAX_SHARPIE_VERSION\"; then\n\t\t\tif ! test -z \"$PROVISION_SHARPIE\"; then\n\t\t\t\tinstall_objective_sharpie\n\t\t\t\tACTUAL_SHARPIE_VERSION=$(cat /Library/Frameworks/ObjectiveSharpie.framework/Versions/Current/Version)\n\t\t\telse\n\t\t\t\tif test -z $OPTIONAL_SHARPIE; then\n\t\t\t\t\tfail \"Your Objective Sharpie version is too new, max version is $MAX_SHARPIE_VERSION, found $ACTUAL_SHARPIE_VERSION. We recommend you download $SHARPIE_URL\"\n\t\t\t\t\tfail \"Alternatively you can ${COLOR_MAGENTA}export IGNORE_SHARPIE=1${COLOR_RED} to skip this check.\"\n\t\t\t\telse\n\t\t\t\t\twarn \"You do not have have at most Objective Sharpie $MAX_SHARPIE_VERSION (found $ACTUAL_SHARPIE_VERSION). We recommend you download $SHARPIE_URL\"\n\t\t\t\tfi\n\t\t\t\treturn\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif test -z $OPTIONAL_SHARPIE; then\n\t\tok \"Found Objective Sharpie $ACTUAL_SHARPIE_VERSION (at least $MIN_SHARPIE_VERSION and not more than $MAX_SHARPIE_VERSION is required)\"\n\telse\n\t\tok \"Found Objective Sharpie $ACTUAL_SHARPIE_VERSION (at least $MIN_SHARPIE_VERSION and not more than $MAX_SHARPIE_VERSION is recommended)\"\n\tfi\n}\n\nfunction check_old_simulators ()\n{\n\tif test -n \"$IGNORE_OLD_SIMULATORS\"; then return; fi\n\n\tlocal EXTRA_SIMULATORS\n\tlocal XCODE\n\n\tEXTRA_SIMULATORS=$(grep ^EXTRA_SIMULATORS= Make.config | sed 's/.*=//')\n\tXCODE=$(dirname \"$(dirname \"$(grep ^XCODE_DEVELOPER_ROOT= Make.config | sed 's/.*=//')\")\")\n\n\tif ! make -C tools/siminstaller >/dev/null; then\n\t\twarn \"Can't check if simulators are available, because siminstaller failed to build.\"\n\t\treturn\n\tfi\n\n\tif ! test -d \"$XCODE\"; then\n\t\t# can't test unless Xcode is present\n\t\twarn \"Can't check if simulators are available unless Xcode is already installed.\"\n\t\treturn\n\tfi\n\n\tIFS=', ' read -r -a SIMS <<< \"$EXTRA_SIMULATORS\"\n\tarraylength=${#SIMS[@]}\n\tINSTALL_SIMULATORS=\n\tfor (( i=1; i<arraylength+1; i++ ));\tdo\n\t\tINSTALL_SIMULATORS=\"$INSTALL_SIMULATORS --install=${SIMS[$i-1]}\"\n\tdone\n\n\tif ! FAILED_SIMULATORS=$(make -C tools/siminstaller only-check INSTALL_SIMULATORS=\"$INSTALL_SIMULATORS\" 2>/dev/null); then\n\t\tlocal action=warn\n\t\tif test -z $OPTIONAL_OLD_SIMULATORS; then\n\t\t\taction=fail\n\t\tfi\n\t\tif [[ \"$FAILED_SIMULATORS\" =~ \"Unknown simulators:\" ]]; then\n\t\t\t$action \"${FAILED_SIMULATORS}\"\n\t\t\t$action \"    If you just updated the Xcode version, it's possible Apple stopped shipping these simulators with the new version of Xcode.\"\n\t\t\t$action \"    If that's the case, you can list the available simulators with ${COLOR_MAGENTA}make -C tools/siminstaller print-simulators --xcode $XCODE${COLOR_RESET},\"\n\t\t\t$action \"    and then update the ${COLOR_MAGENTA}MIN_<OS>_SIMULATOR_VERSION${COLOR_RESET} and ${COLOR_MAGENTA}EXTRA_SIMULATORS${COLOR_RESET} variables in Make.config to the earliest available simulators.\"\n\t\t\t$action \"    Another possibility is that Apple is not shipping any simulators (yet?) for the new version of Xcode (if the previous list shows no simulators).\"\n\t\telse\n\t\t\tif ! test -z $PROVISION_OLD_SIMULATORS; then\n\t\t\t\tif ! make -C tools/siminstaller install-simulators INSTALL_SIMULATORS=\"$INSTALL_SIMULATORS\"; then\n\t\t\t\t\t$action \"Failed to install extra simulators.\"\n\t\t\t\telse\n\t\t\t\t\tok \"Extra simulators installed successfully: '${FAILED_SIMULATORS//$'\\n'/', '}'\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\t$action \"The simulators '${FAILED_SIMULATORS//$'\\n'/', '}' are not installed or need to be upgraded.\"\n\t\t\tfi\n\t\tfi\n\telse\n\t\tok \"Found all extra simulators: ${EXTRA_SIMULATORS// /, }\"\n\tfi\n}\n\necho \"Checking system...\"\n\ncheck_osx_version\ncheck_checkout_dir\ncheck_xcode\ncheck_homebrew\ncheck_shellcheck\ncheck_yamllint\ncheck_python3\ncheck_mono\ncheck_7z\ncheck_objective_sharpie\ncheck_old_simulators\nif test -z \"$IGNORE_DOTNET\"; then\n\tok \"Installed .NET SDKs:\"\n\t(IFS=$'\\n'; for i in $(/usr/local/share/dotnet/dotnet --list-sdks); do log \"$i\"; done)\nfi\n\nif test -z $FAIL; then\n\techo \"System check succeeded\"\nelse\n\techo \"System check failed\"\n\texit 1\nfi\n\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}