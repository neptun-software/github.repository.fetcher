{
  "metadata": {
    "timestamp": 1736711048764,
    "page": 799,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "starik222/BooruDatasetTagManager",
      "stars": 1535,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.1484375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Oo]ut/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n# Interrogator binaries\n/interrogator_rpc/build\n/interrogator_rpc/dist\n"
        },
        {
          "name": "BooruDatasetTagManager.sln",
          "type": "blob",
          "size": 1.41015625,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.3.32922.545\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"BooruDatasetTagManager\", \"BooruDatasetTagManager\\BooruDatasetTagManager.csproj\", \"{CE86C8BB-F297-44CD-928D-E33FC290F3B4}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Ð­Ð»ÐµÐ¼ÐµÐ½ÑÑ ÑÐµÑÐµÐ½Ð¸Ñ\", \"Ð­Ð»ÐµÐ¼ÐµÐ½ÑÑ ÑÐµÑÐµÐ½Ð¸Ñ\", \"{1AC6D928-D781-45DE-8C5D-567E7821FDF7}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tREADME.md = README.md\n\t\tREADME_zh_CN.md = README_zh_CN.md\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{CE86C8BB-F297-44CD-928D-E33FC290F3B4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CE86C8BB-F297-44CD-928D-E33FC290F3B4}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CE86C8BB-F297-44CD-928D-E33FC290F3B4}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CE86C8BB-F297-44CD-928D-E33FC290F3B4}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {1546C24B-0907-437E-8084-CA0D454C46EE}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "BooruDatasetTagManager",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2024 starik222\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.337890625,
          "content": "<div align=\"center\">\n\n**English** | [ä¸­æç®ä½](./README_zh_CN.md) | [PortuguÃªs do Brasil](./docs/pt-BR/README_pt_BR.md)\n\n</div>\n\n# BooruDatasetTagManager\nA simple tag editor for a dataset created for training hypernetworks, embeddings, lora, etc. You can create a dataset from scratch using only images, or you can use a program to edit a dataset created using automatic tagging ([wd14-tagger](https://github.com/toriato/stable-diffusion-webui-wd14-tagger), [stable-diffusion-webui](https://github.com/AUTOMATIC1111/stable-diffusion-webui), etc.)\nThe editor is primarily intended for booru-style tagged data, but you can adapt it for other datasets as well.\n\n# Using\nYou need a dataset like the following:\n\n*You can also specify a dataset without text files if you want to create tags from scratch. In this case, text files will be created on save.*\n\n![](https://user-images.githubusercontent.com/1236582/198582869-be2938a7-f7b2-4ad9-8e8c-a53604a24c2d.jpg)\n\n\nIn the program, select \"File->Load folder\" and specify the directory with the dataset.\n\n![](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/4d5a1a31-5909-4706-a3d1-980f82d58c6a)\n\nThe left pane displays images from the dataset. The central panel displays tags for the selected images, which you can edit. The right panel has two tabs. The first tab displays all (or common) tags present in the dataset. In the second tab you can generate tags using the built-in service (interrogator_rpc).\n\nAfter editing, you will select \"File->Save all changes\".\n\nYou can select multiple images at once in a dataset. This will allow you to easily edit tags for images of the same type.\n\n![bdtm03](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/72a450dd-93d9-4cef-9a73-8460c77e9b7d)\n\nThrough the \"Setting\" menu, you can open the settings window to customize the application for yourself. Users who have Google Translate blocked can change the translation service to Chinese. On the \"UI\" tab, you can select a color scheme, and on the \"Hotkeys\" tab, configure the key layout that is convenient for you.\n\n![bdtm04](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/2adb081f-b11c-480e-b137-1cb801d0474f)\n\n# Tag translation\n\nBefore using tag translation, you need to select the translation language and translation service in the settings.\nFrom the \"view\" menu, select \"Translate tags\" to display columns with translated values. When displaying columns, all tags will be automatically translated into the language you selected. The translation is saved in the \"Translations\" folder with the name of the selected language. You can manually edit the translation in this file as the translation is taken from this file first. Manual translation is recommended to be marked with the \"*\" symbol.\n\nTranslation file example:\n```bash\n//Translation format: <original>=<translation>\nblack hair=Ã·Ã¥Ã°Ã­Ã»Ã¥ Ã¢Ã®Ã«Ã®Ã±Ã»\n*solo=ÃÃ®Ã«Ã®\n1girl=1 Ã¤Ã¥Ã¢Ã³Ã¸ÃªÃ \n```\n\nCurrently, the manual translation filter can only be used in tag autocompletion (with the option enabled in the settings). But in the future, it can be used somewhere else.\n\n# Tag list for autocomplete\n\nThe application supports loading tags from csv files of the format used in \"[Booru tag autocompletion for A1111](https://github.com/DominikDoom/a1111-sd-webui-tagcomplete)\". You can also create your own txt files with a list of tags (line by line). But since loading data from these files takes a long time, the program converts them to its own format and loads data from it. Therefore, if you change the list of tags, be prepared to wait quite a long time. All files with tags are located in the \"Tags\" folder.\n\n# AutoTagger (interrogator_rpc)\n\nYou can generate tags for images directly in the program. To do this, you need to configure and run the \"interrogator_rpc\" service. Python must be installed for it to work.\nTo configure interrogator_rpc, run the command:\n```bash\npip install -r requirements.txt\n```\nSince the latest version of onnxruntime requires msvc runtime 2015 version, it is recommended to install this package.\nIf you use anaconda:\n```bash\nconda install conda-forge::vs2015_runtime\n```\nIf you install it normally with pip:\n```bash\npip install msvc-runtime\n```\nTo start the service run\n```bash\npython main.py\n```\nIf you have problems running a service in pure python, try using [anaconda](https://www.anaconda.com/download) or [miniconda](https://docs.conda.io/projects/miniconda/en/latest/).\n\nAfter installing anaconda, run the console, create a new conda environment and install the necessary dependencies.\n```bash\n#Creating new environment with python\nconda create -n bdtm python=3.10.13\n#Activating the created environment\nconda activate bdtm\n#Installing the necessary dependencies.\npip install -r requirements.txt\n#Run service\npython main.py\n```\nTo start an already configured service, you need to launch the console and run the following commands\n```bash\nconda activate bdtm\npython main.py\n```\nAfter launching the service, in the editor itself you can generate tags for all images using the \"Tools\" menu, generate tags for selected images using ![](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/230f47f9-5cef-49bc-8b44-a67890433c42) icon, and also generate tags in a separate tab \"AutoTagger preview window\". To configure generation parameters, you can use the corresponding generation menu item, or the \"Settings\" -> \"Auto tagger settings...\" menu.\n\n![bdtm06](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/88c3ab34-b96e-411c-b0b9-2a92729b822c)\n\nThe generator allows you to select several models at once and specify a method for combining the results.\n\n# Weighted tags\n\nThe editor supports working with weighted tags. When loading tags, brackets are automatically converted to weights. To change the weight of a tag, you need to select it and move the \"weight\" track bar to the required number of positions. One position equals one bracket.\n\n# Color scheme\n\nCurrently, the program offers two color schemes (Classic and Dark). You can create or change the color scheme yourself. There is no window-based color scheme editor yet, but you can open the ColorScheme.json file using a text editor and make the necessary changes.\n\n# Interface translation\n\nAll language files are located in the `Languages` ââfolder. You can translate the application interface into the language you are interested in. To do this, you need to copy any `xx-XX.txt` file you like, rename it according to your [language code](https://learn.microsoft.com/en-us/openspecs/office_standards/ms-oe376/6c085406-a698-4e12-9d4d-c3b0ee3dbc4a) and translate the contents after the `=` sign. You can create a topic in Issues or discussions and attach your translation. I will include your translation in the next release.\n\n# Build\n\nThis is a tool designed in C and you will need to run it in Visual Studio (not Visual Studio Code). Steps to achieve this are:\n1. Download [visual Studio](https://visualstudio.microsoft.com/downloads/)\n2. Clone this repo into a folder somewhere on your computer\n3. Open the repo using Visual Studio: `File` > `Open` > `Project/Solution` > select the `BooruDatasetTagManager.sln` file\n4. Build the solution by selecting `Build` > `Build Solution` from the menu (or by pressing Ctrl+Shift+B.\nRun the Application)\n\n# Other\n\nUsing the \"View\" menu you can hide panels you don't need.\nIn the \"Tools\" menu there is a function to automatically replace the transparent background with the color you need.\n"
        },
        {
          "name": "README_zh_CN.md",
          "type": "blob",
          "size": 3.251953125,
          "content": "<div align=\"center\">\n\n[English](./README.md) | **ä¸­æç®ä½** | [PortuguÃªs do Brasil](./docs/pt-BR/README_pt_BR.md)\n\n</div>\n\n# BooruDatasetTagManager ~Booruè³ææ¨æ¨æ©~\néæ¯ä¸åç°¡å®çæ¨ç±¤ç·¨è¼¯å¨ï¼ç¨æ¼ç·¨è¼¯è¨ç·´è¶ç¶²è·¯ãåµå¥ãLoRAå»ºç«çè³æéãtaggerãstable-diffusion-webuiç­æå»ºç«çè³æéã\néåç·¨è¼¯å¨ä¸»è¦ç¨æ¼boorué¢¨æ ¼çæ¨è¨æ¸æï¼ä½æ¨ä¹å¯ä»¥æ ¹æéè¦å°å¶ç¨æ¼å¶ä»é¡åçè³æéã\n\n# Using\næ¨éè¦å¦ä¸æç¤ºçè³æéï¼\n*å¦ææ¨æ³å¾é ­éå§å»ºç«æ¨ç±¤ï¼ä¹å¯ä»¥æå®ä¸åä¸åå«æå­æªæ¡çè³æéã*\n![](https://user-images.githubusercontent.com/1236582/198582869-be2938a7-f7b2-4ad9-8e8c-a53604a24c2d.jpg)\n\nå¨ç¨å¼ä¸­ï¼é¸æâæªæ¡->è¼å¥è³æå¤¾âä¸¦æå®åå«è³æéçç®éã\n![](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/4d5a1a31-5909-4706-a3d1-980f82d58c6a)\n\né¢æ¿é¢æ¿é¡¯ç¤ºè³æéä¸­çååãåæ¨ç±¤é ä¸­,æ¨å¯ä»¥ä½¿ç¨å§å»ºæå(interrogator_rpc)ç¢çæ¨ç±¤ã\nç·¨è¼¯å®æå¾ï¼é¸æâæä»¶->å²å­ææè®æ´âã\næ¨å¯ä»¥å¨éä¸­è³æä¸æ¬¡é¸æå¤å¼µåçã\n\n![bdtm03](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/72a450dd-93d9-4cef-9a73-8460c77e9b7d)\n\nééãè¨­å®ãé¸å®ï¼æ¨å¯ä»¥éåè¨­å®è¦çªä¾èªè¨æç¨ç¨å¼ã \"æ¨ç±¤é ä¸­ï¼å¯ä»¥è¨­å®é©åæ¨çéµä½ä½å±ã\n\n![bdtm04](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/2adb081f-b11c-480e-b137-1cb801d0474f)\n\n# æ¨ç±¤ç¿»è­¯\n\nå¨ä½¿ç¨æ¨ç±¤ç¿»è­¯åè½é¸æä¹åï¼æ¨éè¦å¨è¨­å®ä¸­ç¿»è­¯èªè¨åç¿»è­¯æåãæé¸çèªè¨ãGoogleç¿»è­¯ä¹ã\nç®åï¼æåç¿»è­¯éæ¿¾å¨åªè½ç¨æ¼æ¨ç±¤èªåå®æï¼éè¦å¨è¨­å®ä¸­åç¨è©²é¸é ï¼ã\n\n# ç¨æ¼èªåå®æçæ¨ç±¤åè¡¨\n\næ¬æç¨ç¨å¼æ¯æ´å¾ãA1111çBooruæ¨ç±¤èªåå®æãä½¿ç¨çcsvæ ¼å¼æä»¶è¼å¥æ¨ç±¤ãå¾é·æéï¼ç¨å¼æå®åè½æçºèªå·±çæ ¼å¼ä¸¦å è¼è³æã\n\n# èªåæ¨æ¨æ© (interrogator_rpc)\n\næ¨å¯ä»¥ç´æ¥å¨ç¨å¼ä¸­çºæ åç¢çæ¨ç±¤ã\n```bash\npip install -r requirements.txt\n```\nè¦ååæåï¼éè¡ï¼\n```bash\npython main.py\n```\nå¦ææ¨å¨ç´Pythonç°å¢ä¸­å·è¡æåéå°åé¡ï¼å¯ä»¥åè©¦ä½¿ç¨anacondaæminicondaã\nå®è£ anaconda ä¹å¾ï¼å·è¡æ§å¶å°ï¼å»ºç«ä¸åæ°ç conda ç°å¢ä¸¦å®è£å¿è¦çä¾è³´é ã\n```bash\n#Creating new environment with python\nconda create -n bdtm python=3.10.9\n#Activating the created environment\nconda activate bdtm\n#Installing the necessary dependencies.\npip install -r requirements.txt\n#Run service\npython main.py\n```\næ³ååå·²éç½®çæåï¼æ¨éè¦ååæ§å¶å°ä¸¦å·è¡ä»¥ä¸å½ä»¤ï¼\n```bash\nconda activate bdtm\npython main.py\n```\nååæåå¾ï¼å¨ç·¨è¼¯å¨ä¸­ï¼æ¨å¯ä»¥ä½¿ç¨âå·¥å·âé¸å®ç¢çææååæ¨ç±¤ï¼ä½¿ç¨ ![](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/230f47f9-5cef-49bc-8b44-a67890433c42) åç¤ºçºé¸å®çå½±åç¢çæ¨ç±¤ï¼ä¹å¯ä»¥å®ç¨å¨âèªåæ¨è¨å¨é è¦½è¦çªâæ¨ç±¤é ä¸­ç¢çæ¨ç±¤ãå¨è¨­å®...âé¸å®ã\n\n![bdtm06](https://github.com/starik222/BooruDatasetTagManager/assets/1236582/88c3ab34-b96e-411c-b0b9-2a92729b822c)\n\nçæå¨å¯è®æ¨åæé¸ææ¨¡åï¼ä¸¦æå®å¤åçµæåä½µæ¹æ³ã\n\n###ç¿»è­¯è:ååç³\næç´¯äºï¼ç¿»è­¯å°éæ¨£\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "interrogator_rpc",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}