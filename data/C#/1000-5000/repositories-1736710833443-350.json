{
  "metadata": {
    "timestamp": 1736710833443,
    "page": 350,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Unity-Technologies/Graphics",
      "stars": 2586,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".collabignore",
          "type": "blob",
          "size": 0.46484375,
          "content": "# ===========================\n# Default Collab Ignore Rules\n# ===========================\n\n# OS Generated\n# ============\n.DS_Store\n._*\n.Spotlight-V100\n.Trashes\nIcon?\nehthumbs.db\n[Tt]humbs.db\n[Dd]esktop.ini\n\n# Visual Studio / MonoDevelop generated\n# =====================================\n[Ee]xported[Oo]bj/\n*.userprefs\n*.csproj\n*.pidb\n*.suo\n*.sln\n*.user\n*.unityproj\n*.booproj\n\n# Unity generated\n# ===============\n/[Tt]emp/\n[Oo]bj/\n[Bb]uild\n/[Ll]ibrary/\nsysinfo.txt\n*.stackdump\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 4.349609375,
          "content": "# see http://editorconfig.org/ for docs on this file\n\nroot = true\n\n[*]\n# help with sharing files across os's (i.e. network share or through local vm)\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n# formattable file extensions (keep in sync with format.ini from unity-meta repo)\n#\n# Note: We need to split the formattable files configs into shorter duplicate entries (logically grouped)\n# due to known issue in VS editorconfig extension where there is a limit of 51 characters (empirically determined).\n# see: https://github.com/editorconfig/editorconfig-visualstudio/issues/21\n#\n## uncrustify\n[*.{c,h,cpp,hpp,m,mm,cc,cs}]\nindent_style = space\nindent_size = 4\n\n## generic formatter (shaders)\n[*.{cg,cginc,glslinc,hlsl,shader,y,ypp,yy}]\nindent_style = space\nindent_size = 4\n\n## generic formatter (misc)\n[*.{asm,s,S,pch,pchmm,java,sh,uss}]\nindent_style = space\nindent_size = 4\n\n## perltidy\n[*.{pl,pm,t,it}]\nindent_style = space\nindent_size = 4\n\n## unity special\n[*.{bindings,mem.xml}]\nindent_style = space\nindent_size = 4\n\n# other filetypes we want to overwrite default configuration to preserve the standard\n[{Makefile,makefile}]\n# TAB characters are part of the Makefile format\nindent_style = tab\n\n[*.{md,markdown}]\n# trailing whitespace is significant in markdown (bad choice, bad!)\ntrim_trailing_whitespace = false\n\n[*.{json,asmdef}]\nindent_style = space\n# seems to be more common\nindent_size = 2\n\n# keep these and the VS stuff below in sync with .hgeol's CRLF extensions\n[*.{vcproj,bat,cmd,xaml,tt,t4,ttinclude}]\nend_of_line = crlf\n\n# this VS-specific stuff is based on experiments to see how VS will modify a file after it has been manually edited.\n# the settings are meant to closely match what VS does to minimize unnecessary diffs. this duplicates some settings in *\n# but let's be explicit here to be safe (in case someone wants to copy-paste this out to another .editorconfig).\n[*.{vcxproj,vcxproj.filters,csproj,props,targets}]\nindent_style = space\nindent_size = 2\nend_of_line = crlf\ncharset = utf-8-bom\ntrim_trailing_whitespace = true\ninsert_final_newline = false\n[*.{sln,sln.template}]\nindent_style = tab\nindent_size = 4\nend_of_line = crlf\ntrim_trailing_whitespace = true\ninsert_final_newline = false\n\n# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/formatting-rules\n[*.cs]\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n# indentation options\ncsharp_indent_case_contents = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = one_less_than_current\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents_when_block = false\n# spacing\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\n#csharp_space_between_parentheses = control_flow_statements, type_casts, expressions\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_after_comma = true\ncsharp_space_before_comma = false\ncsharp_space_after_dot = false\ncsharp_space_before_dot = false\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_around_declaration_statements = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_square_brackets = false\n# wrap options\ncsharp_preserve_single_line_statements = true\ncsharp_preserve_single_line_blocks = true\n# using directives\n#csharp_using_directive_placement = outside_namespace\n# dotnet options\n#dotnet_sort_system_directives_first = true\n\n#dotnet_separate_import_directive_groups = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 20.3427734375,
          "content": "* text=auto eol=lf\n\n# EOL\n\n*.py eol=lf\n*.pl eol=lf\n*.pm eol=lf\n*.t eol=lf\n*.it eol=lf\n*.h eol=lf\n*.cpp eol=lf\n*.cs eol=lf\n*.c eol=lf\n*.txt eol=lf\n*.bindings eol=lf\n*.sh eol=lf\n*.jam eol=lf\n*.as eol=lf\n*.boo eol=lf\n*.java eol=lf\n*.js eol=lf\nMakefile eol=lf\n*.shader eol=lf\n*.cginc eol=lf\n*.glslinc eol=lf\n*.meta eol=lf\n*.mm eol=lf\n*.md eol=lf\nRuntime/Export/common_* eol=lf\nRepositories.ini eol=lf\n.hgignore eol=lf\n\n# vs can handle these as lf, but really wants them as crlf\n*.vcproj eol=crlf\n*.vcxproj eol=crlf\n*.vcxproj.filters eol=crlf\n*.csproj eol=crlf\n*.props eol=crlf\n*.targets eol=crlf\n*.sln eol=crlf\n*.sln.template eol=crlf\n*.bat eol=crlf\n*.cmd eol=crlf\n*.xaml eol=crlf\n\n# the templating parser will actually fail on lf, inexplicably setting every #line directive as '1'\n*.tt eol=crlf\n*.t4 eol=crlf\n*.ttinclude eol=crlf\n\n# LFS\n\n# archives and well-known binary formats\n*.[zZ][iI][pP] filter=lfs diff=lfs merge=lfs -text\n*.7[zZ] filter=lfs diff=lfs merge=lfs -text\n*.[zZ]7 filter=lfs diff=lfs merge=lfs -text\n*.[tT][gG][zZ] filter=lfs diff=lfs merge=lfs -text\n*.[tT][aA][rR].[zZ][sS][tT] filter=lfs diff=lfs merge=lfs -text\n*.[gG][zZ] filter=lfs diff=lfs merge=lfs -text\n*.[jJ][aA][rR] filter=lfs diff=lfs merge=lfs -text\n*.[nN][uU][pP][kK][gG] filter=lfs diff=lfs merge=lfs -text\n*.[eE][gG][gG] filter=lfs diff=lfs merge=lfs -text\n*.[aA][pP][kK] filter=lfs diff=lfs merge=lfs -text\n*.[mM][sS][iI] filter=lfs diff=lfs merge=lfs -text\n*.[aA][rR][cC] filter=lfs diff=lfs merge=lfs -text\n\n# executables and libraries\n*.[aA] filter=lfs diff=lfs merge=lfs -text\n*.[oO] filter=lfs diff=lfs merge=lfs -text\n*.[sS][oO] filter=lfs diff=lfs merge=lfs -text\n*.[bB][iI][nN] filter=lfs diff=lfs merge=lfs -text\n*.[dD][lL][lL] filter=lfs diff=lfs merge=lfs -text\n*.[oO][bB][jJ] filter=lfs diff=lfs merge=lfs -text\n*.[dD][yY][lL][iI][bB] filter=lfs diff=lfs merge=lfs -text\n*.[lL][iI][bB] filter=lfs diff=lfs merge=lfs -text\n*.[eE][xX][eE] filter=lfs diff=lfs merge=lfs -text\n\n# specific binaries in the unity codebase\njs filter=lfs diff=lfs merge=lfs -text\np4 filter=lfs diff=lfs merge=lfs -text\np4d filter=lfs diff=lfs merge=lfs -text\nflex filter=lfs diff=lfs merge=lfs -text\nbison filter=lfs diff=lfs merge=lfs -text\ndistcc filter=lfs diff=lfs merge=lfs -text\ndistccd filter=lfs diff=lfs merge=lfs -text\ngdbserver filter=lfs diff=lfs merge=lfs -text\nfastzip_darwin filter=lfs diff=lfs merge=lfs -text\nProxyServer filter=lfs diff=lfs merge=lfs -text\nnode filter=lfs diff=lfs merge=lfs -text\nusymtool filter=lfs diff=lfs merge=lfs -text\nlibtool filter=lfs diff=lfs merge=lfs -text\noptool filter=lfs diff=lfs merge=lfs -text\nCg filter=lfs diff=lfs merge=lfs -text\nPVRTexTool filter=lfs diff=lfs merge=lfs -text\nPVRTexToolCL filter=lfs diff=lfs merge=lfs -text\nPVRTexToolCLI filter=lfs diff=lfs merge=lfs -text\niproxy filter=lfs diff=lfs merge=lfs -text\n7za filter=lfs diff=lfs merge=lfs -text\nyasm filter=lfs diff=lfs merge=lfs -text\nnasm filter=lfs diff=lfs merge=lfs -text\nlzma filter=lfs diff=lfs merge=lfs -text\nlzma-linux32 filter=lfs diff=lfs merge=lfs -text\nunity_web_d3d filter=lfs diff=lfs merge=lfs -text\nunity_web_gl filter=lfs diff=lfs merge=lfs -text\nEveryplay filter=lfs diff=lfs merge=lfs -text\nUnityAds filter=lfs diff=lfs merge=lfs -text\nusym_upload filter=lfs diff=lfs merge=lfs -text\neng.cube.size filter=lfs diff=lfs merge=lfs -text\neng.cube.nn filter=lfs diff=lfs merge=lfs -text\nispc_osx filter=lfs diff=lfs merge=lfs -text\ndump_syms filter=lfs diff=lfs merge=lfs -text\nastcenc_linux filter=lfs diff=lfs merge=lfs -text\nastcenc_osx filter=lfs diff=lfs merge=lfs -text\nconvert filter=lfs diff=lfs merge=lfs -text\nconvert_linux filter=lfs diff=lfs merge=lfs -text\netcpack2_linux filter=lfs diff=lfs merge=lfs -text\narm-eabi-gdb.dist filter=lfs diff=lfs merge=lfs -text\narm-eabi-gdb filter=lfs diff=lfs merge=lfs -text\nbuild-wrapper-linux-x86-64 filter=lfs diff=lfs merge=lfs -text\nbuild-wrapper-linux-x86-32 filter=lfs diff=lfs merge=lfs -text\nbuild-wrapper-macosx-x86 filter=lfs diff=lfs merge=lfs -text\nAudioPluginDemo filter=lfs diff=lfs merge=lfs -text\nre2c filter=lfs diff=lfs merge=lfs -text\nios-deploy filter=lfs diff=lfs merge=lfs -text\nmobiledevice filter=lfs diff=lfs merge=lfs -text\nAssetBundles filter=lfs diff=lfs merge=lfs -text\nUnity4XC filter=lfs diff=lfs merge=lfs -text\nlemon filter=lfs diff=lfs merge=lfs -text\netcpack filter=lfs diff=lfs merge=lfs -text\netcpack2 filter=lfs diff=lfs merge=lfs -text\nenabundle filter=lfs diff=lfs merge=lfs -text\nassetDatabase3 filter=lfs diff=lfs merge=lfs -text\nMasterServer filter=lfs diff=lfs merge=lfs -text\nFacilitator filter=lfs diff=lfs merge=lfs -text\nRenderingPlugin filter=lfs diff=lfs merge=lfs -text\nUnitron filter=lfs diff=lfs merge=lfs -text\nDotMacKit filter=lfs diff=lfs merge=lfs -text\nImageComparer filter=lfs diff=lfs merge=lfs -text\nGameKit filter=lfs diff=lfs merge=lfs -text\nOgreKit filter=lfs diff=lfs merge=lfs -text\n*.test-cache filter=lfs diff=lfs merge=lfs -text\n*.unitypackage filter=lfs diff=lfs merge=lfs -text\nProjects/VisualStudio/ipch/middleman-2afd44a3/unitywebpluginax-eba8f4d1.ipch filter=lfs diff=lfs merge=lfs -text\nEditor/Resources/Common/unity[[:space:]]editor[[:space:]]resources filter=lfs diff=lfs merge=lfs -text\nEditor/Resources/unity[[:space:]]editor[[:space:]]resources filter=lfs diff=lfs merge=lfs -text\n\n#SRP\n**/BatchRendererGroup_HDRP/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_HDRP/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/BatchRendererGroup_URP/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/BuildInGraphicsTest_Foundation/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Foundation/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/BuiltInGraphicsTest_Lighting/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp-upgrade/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.urp/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/com.unity.testing.xr/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/HDRP_DXR_Tests/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/PostProcessing_Tests/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.bytes filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.cube filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.dds filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.exp filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.FBX filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.fbx filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.hdr filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.jpeg filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.jpg filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.png filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.psd filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.tga filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.tif filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.tiff filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.ttf filter=lfs diff=lfs merge=lfs -text\n**/SRP_SmokeTest/**/*.vfx filter=lfs diff=lfs merge=lfs -text\n\n**/com.unity.template-hd/Assets/Scenes/SampleScene/LightingData.asset filter=lfs diff=lfs merge=lfs -text\n**/HDRP_PerformanceTests/Assets/Scenes/Lighting/Cloud.asset filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/Assets/Scenes/002-HDMaterials/cloud2.asset filter=lfs diff=lfs merge=lfs -text\n**/HDRP_RuntimeTests/Assets/Scenes/002-HDMaterials/perlin.asset filter=lfs diff=lfs merge=lfs -text\n\n#GfxTests\n**/GfxTestProjectFolder/**/*.[hH][dD][rR] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[tT][gG][aA] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[pP][nN][gG] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[bB][mM][pP] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[tT][iI][fF] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[tT][tT][fF] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[jJ][pP][gG] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[jJ][pP][eE][gG] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[aA][sS][sS][eE][tT] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[fF][bB][xX] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[pP][sS][dD] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[sS][pP][mM] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[aA][aa][rR] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[cC][uU][bB][eE][mM][aA][pP] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[pP][rR][xX] filter=lfs diff=lfs merge=lfs -text\n**/GfxTestProjectFolder/**/*.[dD][fF][oO][nN][tT] filter=lfs diff=lfs merge=lfs -text\n\n# memoryprofiler test snapshots\n**/com.unity.memoryprofiler.tests/**/*.[sS][nN][aA][pP] filter=lfs diff=lfs merge=lfs -text\n\n\n# buginfo tools\n/Tools/Unity.BugInfo.Coverage/bin/* filter=lfs diff=lfs merge=lfs -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8369140625,
          "content": "\n[Aa]rtifacts/\n[Bb]uild/\n[Ll]ibrary/\n[Oo]bj/\n[Tt]emp/\n[Ss]treaming[Aa]ssets/\n[Aa]ctual[Ii]mages/\n[Ll]og/\n[Ll]ogs/\n[Aa]ctual[Ii]mages.meta\n[Ss]treaming[Aa]ssets.meta\n.vs\n.vscode\n.idea\n.DS_Store\n*.aspx\n*.browser\n*.csproj\n*.exe\n*.ini\n*.log\n*.map\n*.mdb\n*.npmrc\n*.pyc\n*.resS\n*.sdf\n*.sln\n*.sublime-project\n*.sublime-workspace\n*.suo\n*.userprefs\n*.orig\n*.orig.meta\n*.bak\n.npmrc\nShaderGraph/DebugOutput.meta\nShaderGraph/DebugOutput/**\nShaderGraph/Testing/IntegrationTests/.Failed\nTestProjects/*/ProjectSettings/ProjectVersion.txt\nTestProjects/VisualEffectGraph_HDRP/GraphViz/\n\n*/manifest-updater.py\nnode_modules\n\n.yamato/script/path.config\nmanifest-updater.py\nTestProjects/UniversalGraphicsTest_Lighting/UserSettings/EditorUserSettings.asset\nTestProjects/UniversalGraphicsTest_Lighting/Packages/packages-lock.json\ncom.unity.template-hd/InitCodeMarker\ngfx-sdet-tools\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".repoconfig",
          "type": "blob",
          "size": 2.505859375,
          "content": "[version]\nrepoconfig=7\nminimum-unity-meta=47\n\n[format]\npath-ignore=<<EOT\n# specially named folders that will be matched anywhere in a path (e.g. all files under any 'imgs' will be ignored)\n(^|/)(\n .github\n|.yamato\n|artifacts\n|imgs\n|com\\.unity\\.testing\\.graphics-performance\n|com\\.unity\\.testing\\.visualeffectgraph\n)(/|$)\n|\n# rooted folder paths\n^(\n Tools\n |com\\.unity\\.template-hd                                   # Todo: Exclude the Library folder of the checks only (keep checks for C# code files)\n |com\\.unity\\.template-universal\n |Tests\\/SRPTests\\/Projects\\/.*\\/Library\n |Tests\\/SRPTests\\/Projects\\/HDRP_DXR_Tests                              # Ideally all test projects would be included, but doing it wone by one is less overwhelming for teams\n |Tests\\/SRPTests\\/Projects\\/HDRP_PerformanceTests                       # New test projects folder will automatically be included in the formatting checks since they aren't in that list\n |Tests\\/SRPTests\\/Projects\\/HDRP_RuntimeTests\n |Tests\\/SRPTests\\/Projects\\/Shadergraph\n |Tests\\/SRPTests\\/Projects\\/ShadergraphUniversalStereo\n |Tests\\/SRPTests\\/Projects\\/SRP_SmokeTest\n |Tests\\/SRPTests\\/Projects\\/UniversalGfxTestStereo\n |Tests\\/SRPTests\\/Projects\\/VisualEffectGraph_HDRP\n |Tests\\/SRPTests\\/Projects\\/VisualEffectGraph_URP\n)/|\n# rooted file paths\n^(\n)$\nEOT\n\n[verify]\npath=<<EOT\n# general rule\n^[:a-z0-9./_-]+$                                                          # technically ':' not allowed, but let the global rule in format.ini do the more thorough test for c: style abs paths\n# exceptions\n|^com\\.unity\\.[^\\/]*\\/\\w+~\\/[^&]+$                                        # allows editor excluded folders, like Documentation~, for core package\n|^com\\.unity\\.[^\\/]*\\/Packages\\/com\\.unity\\.[^\\/]*\\/\\w+~\\/                # as above but for embedded packages\n|^com\\.unity\\.[^\\/]*\\/[^@]+@\\d+x\\.                                        # industry standard for icons with different resolution\n|^(Packages)\\/com\\.unity\\.[^\\/]*\\/\\w+~\\/\t                                # allows editor excluded folders, like Documentation~, for core package\n|^(Packages)\\/com\\.unity\\.[^\\/]*\\/Packages\\/com\\.unity\\.[^\\/]*\\/\\w+~\\/    # as above but for embedded packages\n|^(Packages)\\/com\\.unity\\.[^\\/]*\\/Third\\sParty\\sNotices\\..*               # allows Spaces in names for Third Party Notices.md\n|^(Packages)\\/com\\.unity\\.[^\\/]*\\/[^@]+@\\d+x\\.                            # industry standard for icons with different resolutions\n|^Tests\\/SRPTests\\/                                                       # allow all names for test files\nEOT\n"
        },
        {
          "name": ".yamato",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.2060546875,
          "content": "# Contributions\n\n## If you are interested in contributing, here are some ground rules:\n* Talk to us before doing the work -- we love contributions, but we might already be working on the same thing, or we might have different opinions on how it should be implemented.\n* Everything must have test coverage. PRs with insufficient test coverage will be rejected.\n* A formatting job will run automatically on your PR, even while in draft. This gives you a chance to fix the formatting before marking your PR as \"Ready for Review\".\n\n## All contributions are subject to the Unity Contribution Agreement\n\nBy making a pull request, you are confirming agreement to the terms and conditions of the [Unity Contribution Agreement](https://unity3d.com/legal/licenses/Unity_Contribution_Agreement), including that your Contributions are your original creation and that you have complete right and authority to make your Contributions.\n\n## Rules for PRs\n\n* If a PR shall not be merged (yet), the author should create a draft PR instead. As soon as the PR is considered ready to land, it should be turned into a usual PR by the author.\n* Things to check while your PR is in draft:\n    * Is your PR pointing at the correct branch?\n    * Have you missed anything? Consider getting a review while the PR is still in draft.\n    * Do you need to add any extra tests?\n\n* Yamato pipelines will start once your PR is marked as \"Ready For Review\". The pipelines that start depend on what changed in your PR.\n    * These jobs will start again on each push. Please keep your PR in draft if you have additional pushes to make to avoid starting too many jobs.\n    * Please add `[cancel old ci]` to your commit message if you want the previous jobs to stop (ie if your new change overrides them)\n\n* Please try to keep your branch as close to master as possible, and merge in master before running tests.\n\n* If there were significant changes to the code after a reviewer approved, a re-review must be requested. For smaller changes (like fixing typos) this is not required.\n\n* The PR author is expected to merge the PR. If the author wants the last approving reviewer to merge it instead, this should be explicitly communicated. There is no guideline on how that communication should happen (on GitHub, Slack or even verbally - whatever makes the most sense in the given situation and scope) but it must always be clear to all reviewers if they are expected to merge.\n\n* A reviewer should not feel nitpicky about requesting (small) changes in a PR, this guideline explicitly encourages this -- also this kind of feedback adds to the quality of our product and it should not be taken personal. Here is a suggestion for a \"fast path\" though: the reviewer should suggest a solution (like a different phrasing, name or hinting a typo). If the author resolves those exactly as the reviewer suggested, he or she can assume the approval of the reviewer without awaiting another explicit re-review/approval.\n\n\n### Adding Reviewers\n\n* Each request needs **at least 1 reviewer**. Each reviewer needs to approve the PR before it is merged. People from the team can add themselves if they would also like to review the changes. Reviewers can be removed if they have not yet started a review, but do not remove people who have added themselves.\n\n* For each reviewer added, **reach out to that person on Slack** so that they are made aware of the request.\n\n* As a Reviewer, please **comment on or approve a PR in a timely manner**. If you’re unable to do so, reach out to the author and let them know.\n\n* As the PR author you are responsible for landing your PR swiftly. Reach out to devs who do not review in a timely manner on slack and remind them.\n\n## Stale PRs\n\nPRs without activity for several days should be **updated with comments or closed**. If the PR is waiting on something (e.g. another merge), close the PR and reopen it later. If the PR has yet to be reviewed by the reviewer(s), double check that they are the best person to review this PR.\n\n## Guidelines\n\n* Aim for not more than 200 to 400 lines of changes in a PR. Beyond that, reviewers often stop trying to fully understand the code.\n* Try to separate large automated-refactoring resulting in massive code changes from actual changes in separate PRs.\n* Release Notes must be updated when behaviour is changed.\n\n### Resolving comments guidelines\n* Comments that were simply fixed exactly as the reviewer requested can be resolved by both author and reviewer\n* Comments that the author has either disagreed with or solved in an unexpected way, should be resolved by the reviewer only (not the the author)\n\n## Merging PRs\n\nIt’s preferred to **squash commits and merge** when completing a PR. To do so, click the dropdown arrow next to the merge button and select \"Squash and merge\". This will allow you to preview the new commit message and edit it.\n\nSelect another merge option if it’s required to preserve valuable information. For more information about the different merge options, see [GitHub’s documentation](https://help.github.com/articles/about-merge-methods-on-github/).\n\n**Replace the merge commit message** with something meaning instead of using the default “merge pull request #123”.\n\nMerged branches will automatically be deleted through GitHub (you can restore them if required).\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.4482421875,
          "content": "Copyright © 2020 Unity Technologies ApS\n\nLicensed under the Unity Companion License for Unity-dependent projects--see [Unity Companion License](http://www.unity3d.com/legal/licenses/Unity_Companion_License).\n\nUnless expressly provided otherwise, the Software under this license is made available strictly on an “AS IS” BASIS WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED. Please review the license for details on these and other terms and conditions.\n"
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "README-FOLDER-CHANGES.md",
          "type": "blob",
          "size": 7.224609375,
          "content": "# Changes introduced by the new structure\n\n\n* The packages were moved from root to Packages/.\n* The testing packages were moved from root to Tests/SRPTests/Packages\n* The test projects were moved from root to Tests/SRPTests/Projects **_except PostProcessing_Tests which stayed in the TestProjects/ folder._**\n\n\nNot all folders listed below are part of every release branch, ie, some folders might not be in your branch.\n\n<table>\n  <tr>\n   <td>\n<strong>Old Path</strong>\n   </td>\n   <td><strong>New Path</strong>\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.render-pipelines.core\n   </td>\n   <td><strong>Packages/</strong>com.unity.render-pipelines.core\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.render-pipelines.high-definition-config\n   </td>\n   <td><strong>Packages/</strong>com.unity.render-pipelines.high-definition-config\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.render-pipelines.high-definition\n   </td>\n   <td><strong>Packages/</strong>com.unity.render-pipelines.high-definition\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.render-pipelines.universal\n   </td>\n   <td><strong>Packages/</strong>com.unity.render-pipelines.universal\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.shaderanalysis\n   </td>\n   <td><strong>Packages/</strong>com.unity.shaderanalysis\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.shadergraph\n   </td>\n   <td><strong>Packages/</strong>com.unity.shadergraph\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.visualeffectgraph\n   </td>\n   <td><strong>Packages/</strong>com.unity.visualeffectgraph\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.testing.graphics-performance\n   </td>\n   <td><strong>Tests/SRPTests/Packages</strong>/com.unity.testing.graphics-performance\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.testing.hdrp\n   </td>\n   <td><strong>Tests/SRPTests/Packages</strong>/com.unity.testing.hdrp\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.testing.urp-upgrade\n   </td>\n   <td><strong>Tests/SRPTests/Packages</strong>/com.unity.testing.urp-upgrade\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.testing.urp\n   </td>\n   <td><strong>Tests/SRPTests/Packages</strong>/com.unity.testing.urp\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.testing.visualeffectgraph\n   </td>\n   <td><strong>Tests/SRPTests/Packages</strong>/com.unity.testing.visualeffectgraph\n   </td>\n  </tr>\n  <tr>\n   <td>com.unity.testing.xr\n   </td>\n   <td><strong>Tests/SRPTests/Packages</strong>/com.unity.testing.xr\n   </td>\n  </tr>\n  <tr>\n   <td>[master+2022.1/staging] TestProjects/BatchRendererGroup_HDRP\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/BatchRendererGroup_HDRP\n   </td>\n  </tr>\n  <tr>\n   <td>[master+2022.1/staging] TestProjects/BatchRendererGroup_URP\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/BatchRendererGroup_URP\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/BuiltInGraphicsTest_Foundation\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/BuiltInGraphicsTest_Foundation\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/BuiltInGraphicsTest_Lighting\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/BuiltInGraphicsTest_Lighting\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/HDRP_DXR_Tests\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/HDRP_DXR_Tests\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/HDRP_PerformanceTests\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/HDRP_PerformanceTests\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/HDRP_RuntimeTests\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/HDRP_RuntimeTests\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/HDRP_Tests\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/HDRP_Tests\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/Lightmapping\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/Lightmapping\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/SRP_SmokeTest\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/SRP_SmokeTest\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/ShaderGraph\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/ShaderGraph\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/ShaderGraphUniversalStereo\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/ShaderGraphUniversalStereo\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/UniversalGfxTestStereo\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/UniversalGfxTestStereo\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/UniversalGraphicsTest_2D\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/UniversalGraphicsTest_2D\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/UniversalGraphicsTest_Foundation\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/UniversalGraphicsTest_Foundation\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/UniversalGraphicsTest_Lighting\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/UniversalGraphicsTest_Lighting\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/UniversalGraphicsTest_PostPro\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/UniversalGraphicsTest_PostPro\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/UniversalGraphicsTest_Terrain\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/UniversalGraphicsTest_Terrain\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/UniversalUpgradeTest\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/UniversalUpgradeTest\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/VisualEffectGraph_HDRP\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/VisualEffectGraph_HDRP\n   </td>\n  </tr>\n  <tr>\n   <td>TestProjects/VisualEffectGraph_URP\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/VisualEffectGraph_URP\n   </td>\n  </tr>\n  <tr>\n   <td>[2021.3/staging] TestProjects/HDRP_HybridTests\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/HDRP_HybridTests\n   </td>\n  </tr>\n  <tr>\n   <td>[2021.3/staging] TestProjects/UniversalHybridTest\n   </td>\n   <td><strong>Tests/SRPTests/Projects</strong>/UniversalHybridTest\n   </td>\n  </tr>\n</table>\n\n\n# Guidelines to merge with your custom changes\n\nBreaking down the merges into 2 steps makes it more manageable:\n\n\n1. First merge <last mainline commit before the restructure>:\n    * Master: [fa006468e96219788e5bf60e8e887e3d3bd7557f](https://github.com/Unity-Technologies/Graphics/commit/fa006468e96219788e5bf60e8e887e3d3bd7557f)\n    * 2022.1: [107fe47144883a35e93f6f2a88ee691d9059bdf3](https://github.com/Unity-Technologies/Graphics/commit/107fe47144883a35e93f6f2a88ee691d9059bdf3)\n    * 2021.3: [ad85b534d7ac336305f8e0d87c02cc23cbcbd6be](https://github.com/Unity-Technologies/Graphics/commit/ad85b534d7ac336305f8e0d87c02cc23cbcbd6be)\n2. Then merge the actual restructured mainline\n\nIn case you want to merge `<branch>` into `<mainline>`, it’s safer to first merge `<mainline>` into `<branch>` than the other way around. ([https://stackoverflow.com/a/57313561/5804755](https://stackoverflow.com/a/57313561/5804755)). Side effect: you now have `<mainline>` into `<branch>`.\n\n\n# Solution\n\n\n1. `git checkout <branch>`\n2. `git merge <last mainline commit before the restructure> // deal with \"regular\" Merge Conflicts`\n3. Manually restructure the repo as was done on the mainline (described above). This can be done via the file explorer or if you feel more adventurous, via script (your mileage may vary depending on your OS - it may just be easier to do it by hand)\n4. `git add .`\n5. `git commit -m \"Apply new structure\"`\n6. `git merge -s ours <mainline>`\n7. // If you want to merge <branch> into the mainline\n\n    ```\n    git checkout <mainline>\n    git merge <branch>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.5244140625,
          "content": "## NOTE: We have migrated reported issues to FogBugz. You can only log further issues via the Unity bug tracker. To see how, read [this](https://unity3d.com/unity/qa/bug-reporting).\n\n## NOTE 2: Development by Unity developers happens in an private repo. Changes are mirrored from that private repo to this public repo every few weeks. [This](https://forum.unity.com/threads/important-upcoming-changes-to-the-graphics-repository.1239826/) forum thread can be used to discuss the mirroring.\n\n# Unity Scriptable Render Pipeline\nThe Scriptable Render Pipeline (SRP) is a Unity feature designed to give artists and developers the tools they need to create modern, high-fidelity graphics in Unity. Unity provides two pre-built Scriptable Render Pipelines:\n\n* The Universal Render Pipeline (URP) for use on all platforms.\n* The High Definition Render Pipeline (HDRP) for use on compute shader compatible platforms.\n\nUnity is committed to an open and transparent development process for SRP and the pre-built Render Pipelines. This means that you can browse this repository to see what features are currently in development.\n\nFor more information about the packages in this repository, see the following:\n\n* [Scriptable Render Pipeline Core](https://docs.unity3d.com/Packages/com.unity.render-pipelines.core@latest/index.html)\n* [High Definition Render Pipeline](https://docs.unity3d.com/Packages/com.unity.render-pipelines.high-definition@latest/index.html)\n* [Universal Render Pipeline](https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@latest/index.html)\n* [Shader Graph](https://docs.unity3d.com/Packages/com.unity.shadergraph@latest/index.html)\n* [Visual Effect Graph](https://docs.unity3d.com/Packages/com.unity.visualeffectgraph@latest/index.html)\n\n## Branches and package releases\n\nThe packages in this repository are distributed as [Core packages](https://docs.unity3d.com/Manual/pack-core.html) in the Unity editor.\nThe package vendoring process happens multiple times in each Unity release. The vendoring happens from the latest changeset of the release branch for each Unity release.\nA tag is generated on the changeset used to vendor a specific Unity release.\n\nRelease branches are defined as follows:\n- **master** branch is used for main developement and it always maps to the latest **Unity Alpha** release.\n- **{unity-version}/staging** maps to beta and released Unity versions. f.ex, **2021.1/staging** maps to Unity 2021.1.\n- **{package-major-version}.x.x/release** is used for Unity 2020.x and below. f.ex, **10.x.x/release** maps to Unity 2020.3 LTS.\n\nIf you need to find if a specific changeset is included in a specific Unity version, you can search tags for the Unity version.\nOn GitHub, you can do that by clicking on the **Branch** drop-down then clicking the **Tags** tab. Typing `2021.2` will list all changesets tagged to each Unity version.\n\n## Modifying package source\n\nYou can download and install the packages of this repositories on your Unity project and modify the package source code.\nYou can do that by one of the following methods:\n\n1. Clone this repository in any folder on your computer. [Install them as local packages](https://docs.unity3d.com/Manual/upm-ui-local.html) into your project.\n2. Clone this repository inside a `Packages` folder in your Unity project.\n\n### Cloning the repository using the GitHub Desktop App:\n\n1. Open the GitHub Desktop App and click **File > Clone repository**.\n2. Click the **URL** tab and enter the following URL: https://github.com/Unity-Technologies/Graphics.\n3. Click the **Choose…** button and navigate to your Unity Project’s base folder.\n4. Click the **Clone** button.\n\nMake sure you have Git LFS extension installed as that's required.\n\nAfter you clone the repository, open your console application of choice in the Graphics folder and run the following console command:\n\n`\\> git checkout 2021.1.16f1.2801 (or the latest tag)`\n\n<a name=\"ConsoleCommands\"></a>\n\n### Cloning the repository using console commands:\n\nOpen your console application of choice and run the following console commands:\n\n```\n\\> cd <Path to your Unity project>\n\n\\> git clone https://github.com/Unity-Technologies/Graphics\n\n\\> cd Graphics\n\n\\>  git checkout 2021.1.16f1.2801 (or the latest tag)\n```\n\n## Sample Scenes in Graphics\n\nUnity provides sample Scenes to use with SRP. You can find these Scenes in the [Graphics GitHub repository](https://github.com/Unity-Technologies/Graphics). To add the Scenes to your Project, clone the repository into your Project's Assets folder.\n\n\n## Package versions on Unity 2020.3 LTS and below\n\nOn Unity 2020.3 LTS and below, the packages in this repository were not Core packages. Instead they were regular packages and different versions could be installed to different versions of Unity.\nThe compatibility of Unity versions and package versions were as follows:\n\n- **Unity 2023.3 is compatible with SRP versions 17.x.x**\n- **Unity 2023.2 is compatible with SRP versions 16.x.x**\n- **Unity 2023.1 is compatible with SRP versions 15.x.x**\n- **Unity 2022.2/3 is compatible with SRP versions 14.x.x**\n- **Unity 2022.1 is compatible with SRP versions 13.x.x**\n- **Unity 2021.2/3 is compatible with SRP versions 12.x.x**\n- **Unity 2021.1 is compatible with SRP versions 11.x.x**\n- **Unity 2020.2 is compatible with SRP versions 10.x.x**\n- **Unity 2020.1 is compatible with SRP versions 8.x.x**\n- **Unity 2019.3 is compatible with SRP versions 7.x.x**\n- **Unity 2019.2 is compatible with SRP versions 6.x.x**\n- **Unity 2019.1 is compatible with SRP versions 5.x.x**\n\nThe above list is a guideline for major versions of SRP, but there are often multiple minor versions that you can use for a certain version of Unity. To determine which minor versions of SRP you can use:\n\n1. In your Unity Project, open the Package Manager window (menu: **Window > Package Manager**).\n2. In the list of packages, find **Core RP Library**. To find this package in older versions of Unity, you may need to expose preview packages. To do this, click the **Advanced** button at the top of the window then, in the context menu, click **Show preview packages**.\n3. Click the drop-down arrow to the left of the package entry then click **See all versions**. This shows a list that contains every package version compatible with your version of Unity.\n\nAfter you decide which version of SRP to use:\n\n1. Go to the [Unity Graphics repository](https://github.com/Unity-Technologies/Graphics).\n2. Click the **Branch** drop-down then click the **Tags** tab.\n3. Find the tag that corresponds to the version of SRP you want to use. When you clone the repository, you use this tag to check out the correct branch.\n"
        },
        {
          "name": "TestProjects",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "com.unity.postprocessing",
          "type": "tree",
          "content": null
        },
        {
          "name": "com.unity.template-hd",
          "type": "tree",
          "content": null
        },
        {
          "name": "com.unity.template-universal",
          "type": "tree",
          "content": null
        },
        {
          "name": "com.unity.template.hdrp-blank",
          "type": "tree",
          "content": null
        },
        {
          "name": "graphics.sublime-project",
          "type": "blob",
          "size": 1.2861328125,
          "content": "{\n    \"folders\" :\n    [\n        {\n            \"name\": \"CoreRP\",\n            \"path\": \"./com.unity.render-pipelines.core\",\n            \"file_exclude_patterns\": [\"*.meta\"]\n        },\n        {\n            \"name\": \"HDRP\",\n            \"path\": \"./com.unity.render-pipelines.high-definition\",\n            \"folder_exclude_patterns\":\n            [\n                \"Documentation~/Images\"\n            ],\n            \"file_exclude_patterns\": [\"*.meta\"]\n        },\n        {\n            \"name\": \"HDRPConfig\",\n            \"path\": \"./com.unity.render-pipelines.high-definition-config\",\n            \"folder_exclude_patterns\":\n            [\n                \"Documentation~/Images\"\n            ],\n            \"file_exclude_patterns\": [\"*.meta\"]\n        },\n        {\n            \"name\": \"URP\",\n            \"path\": \"./com.unity.render-pipelines.universal\",\n            \"folder_exclude_patterns\":\n            [\n                \"Documentation~/Images\"\n            ],\n            \"file_exclude_patterns\": [\"*.meta\"]\n        },\n        {\n            \"name\": \"ShaderGraph\",\n            \"path\": \"./com.unity.shadergraph\",\n            \"file_exclude_patterns\": [\"*.meta\"]\n        },\n        {\n            \"name\": \"VFXGraph\",\n            \"path\": \"./com.unity.visualeffectgraph\",\n            \"file_exclude_patterns\": [\"*.meta\"]\n        }\n    ]\n}\n"
        }
      ]
    }
  ]
}