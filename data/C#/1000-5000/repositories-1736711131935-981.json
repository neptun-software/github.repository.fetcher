{
  "metadata": {
    "timestamp": 1736711131935,
    "page": 981,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "endel/NativeWebSocket",
      "stars": 1298,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1044921875,
          "content": "[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 2\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.95703125,
          "content": ".DS_Store\nnode_modules\n\n# This .gitignore file should be placed at the root of your Unity project directory\n#\n# Get latest from https://github.com/github/gitignore/blob/master/Unity.gitignore\n#\n[Ll]ibrary/\n[Tt]emp/\n[Oo]bj/\n[Bb]uild/\n[Bb]uilds/\n[Ll]ogs/\n[Mm]emoryCaptures/\n\n# Never ignore Asset meta data\n![Aa]ssets/**/*.meta\n\n# Uncomment this line if you wish to ignore the asset store tools plugin\n# /[Aa]ssets/AssetStoreTools*\n\n# Autogenerated Jetbrains Rider plugin\n[Aa]ssets/Plugins/Editor/JetBrains*\n\n# Visual Studio cache directory\n.vs/\n\n# Gradle cache directory\n.gradle/\n\n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n*.mdb\n*.opendb\n*.VC.db\n\n# Unity3D generated meta files\n*.pidb.meta\n*.pdb.meta\n*.mdb.meta\n\n# Unity3D generated file on crash reports\nsysinfo.txt\n\n# Builds\n*.apk\n*.unitypackage\n\n# Crashlytics generated file\ncrashlytics-build.properties\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.6064453125,
          "content": "Copyright 2019 Endel Dreyer <endel.dreyer@gmail.com>\nCopyright 2018 Jiri Hybek <jiri@hybek.cz>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n"
        },
        {
          "name": "Media",
          "type": "tree",
          "content": null
        },
        {
          "name": "NativeWebSocket",
          "type": "tree",
          "content": null
        },
        {
          "name": "NodeServer",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9482421875,
          "content": "<img src=\"Media/header.png?raw=true\" alt=\"Native WebSocket\" />\n\nThis is the simplest and easiest WebSocket library for Unity you can find!\n\n- No external DLL's required (uses built-in `System.Net.WebSockets`)\n- WebGL/HTML5 support\n- Supports all major build targets\n- Very simple API\n- (Used in [Colyseus Unity SDK](https://github.com/colyseus/colyseus-unity-sdk))\n\n### Consider supporting my work on [Patreon](https://patreon.com/endel) | [Ko-fi](https://ko-fi.com/endeld) | [PayPal](https://www.paypal.me/endeld)\n\n[![Support me on Patreon](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Fshieldsio-patreon.vercel.app%2Fapi%3Fusername%3Dendel%26type%3Dpatrons&style=for-the-badge)](https://patreon.com/endel)\n\n## Installation\n\n*Requires Unity 2019.1+ with .NET 4.x+ Runtime*\n\n### Install via UPM (Unity Package Manager)\n1. Open Unity\n2. Open Package Manager Window\n3. Click Add Package From Git URL\n4. Enter URL: ```https://github.com/endel/NativeWebSocket.git#upm```\n\n### Install manually\n1. [Download this project](https://github.com/endel/NativeWebSocket/archive/master.zip)\n2. Copy the sources from `NativeWebSocket/Assets/WebSocket` into your `Assets` directory.\n\n## Usage\n\n```csharp\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\nusing NativeWebSocket;\n\npublic class Connection : MonoBehaviour\n{\n  WebSocket websocket;\n\n  // Start is called before the first frame update\n  async void Start()\n  {\n    websocket = new WebSocket(\"ws://localhost:3000\");\n\n    websocket.OnOpen += () =>\n    {\n      Debug.Log(\"Connection open!\");\n    };\n\n    websocket.OnError += (e) =>\n    {\n      Debug.Log(\"Error! \" + e);\n    };\n\n    websocket.OnClose += (e) =>\n    {\n      Debug.Log(\"Connection closed!\");\n    };\n\n    websocket.OnMessage += (bytes) =>\n    {\n      Debug.Log(\"OnMessage!\");\n      Debug.Log(bytes);\n\n      // getting the message as a string\n      // var message = System.Text.Encoding.UTF8.GetString(bytes);\n      // Debug.Log(\"OnMessage! \" + message);\n    };\n\n    // Keep sending messages at every 0.3s\n    InvokeRepeating(\"SendWebSocketMessage\", 0.0f, 0.3f);\n\n    // waiting for messages\n    await websocket.Connect();\n  }\n\n  void Update()\n  {\n    #if !UNITY_WEBGL || UNITY_EDITOR\n      websocket.DispatchMessageQueue();\n    #endif\n  }\n\n  async void SendWebSocketMessage()\n  {\n    if (websocket.State == WebSocketState.Open)\n    {\n      // Sending bytes\n      await websocket.Send(new byte[] { 10, 20, 30 });\n\n      // Sending plain text\n      await websocket.SendText(\"plain text message\");\n    }\n  }\n\n  private async void OnApplicationQuit()\n  {\n    await websocket.Close();\n  }\n\n}\n```\n\n# Demonstration\n\n**1.** Start the local WebSocket server:\n\n```\ncd Server\nnpm install\nnpm start\n```\n\n**2.** Open the `NativeWebSocket/Assets/WebSocketExample/WebSocketExampleScene.unity` on Unity and Run.\n\n\n## Acknowledgements\n\nBig thanks to [Jiri Hybek](https://github.com/jirihybek/unity-websocket-webgl).\nThis implementation is based on his work.\n\n## License\n\nApache 2.0\n"
        }
      ]
    }
  ]
}