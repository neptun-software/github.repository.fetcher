{
  "metadata": {
    "timestamp": 1736710852575,
    "page": 388,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Fody/Costura",
      "stars": 2419,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 16.9365234375,
          "content": "# EditorConfig is awesome:http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n#=======================================================================================\n# Generic\n#=======================================================================================\n\n# Don't use tabs for indentation\n[*]\nindent_style = space\n# (Please don't specify an indent_size here; that has too many unintended consequences.)\n\n#=======================================================================================\n# Xml files\n#=======================================================================================\n\n[*.{xml,xaml})]\nindent_size = 2\n\n#---------------------------------------------------------------------------------------\n# ReSharper specific\n#---------------------------------------------------------------------------------------\n\nindent_style = space\nindent_size = 2\nblank_line_after_pi = false\n\n#=======================================================================================\n# Code files\n#=======================================================================================\n\n[*.{cs,csx,vb,vbx}]\nindent_size = 4\ninsert_final_newline = true\ncharset = utf-8-bom\n\n#=======================================================================================\n# Psl files\n#=======================================================================================\n\n[*.ps1]\nindent_size = 2\n\n#=======================================================================================\n# Xml project files\n#=======================================================================================\n\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n#=======================================================================================\n# Xml config files\n#=======================================================================================\n\n[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]\nindent_size = 2\n\n#=======================================================================================\n# JSON files\n#=======================================================================================\n\n[*.json]\nindent_size = 2\n\n#=======================================================================================\n# Groovy files\n#=======================================================================================\n\n[*.groovy]\nindent_size = 2\n\n#=======================================================================================\n# .NET (C# / VB) code style settings\n#=======================================================================================\n\n# Dotnet code style settings:\n[*.{cs,vb}]\n\n#---------------------------------------------------------------------------------------\n# Sort using and Import directives with System.* appearing first\n#---------------------------------------------------------------------------------------\n\ndotnet_sort_system_directives_first = true\ndotnet_style_require_accessibility_modifiers = always:warning\n\n#---------------------------------------------------------------------------------------\n# Put a blank line between System.* and Microsoft.*\n#---------------------------------------------------------------------------------------\n\ndotnet_separate_import_directive_groups = false\n\n#---------------------------------------------------------------------------------------\n# Usings inside the namespace\n#---------------------------------------------------------------------------------------\n\ncsharp_using_directive_placement = inside_namespace:error\n\n#---------------------------------------------------------------------------------------\n# Avoid \"this.\" and \"Me.\" if not necessary\n#---------------------------------------------------------------------------------------\n\ndotnet_style_qualification_for_field = false:warning\ndotnet_style_qualification_for_property = false:warning\ndotnet_style_qualification_for_method = false:warning\ndotnet_style_qualification_for_event = false:warning\n\n#---------------------------------------------------------------------------------------\n# Use language keywords instead of framework type names for type references\n#---------------------------------------------------------------------------------------\n\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\ndotnet_style_predefined_type_for_member_access = true:suggestion\n\n#---------------------------------------------------------------------------------------\n# Prefer read-only on fields\n#---------------------------------------------------------------------------------------\n\ndotnet_style_readonly_field = true:error\n\n#---------------------------------------------------------------------------------------\n# Naming Rules\n#---------------------------------------------------------------------------------------\n\ndotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.symbols                        = interface_symbols\ndotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.style                          = pascal_case_and_prefix_with_I_style\ndotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.severity                       = error\n\ndotnet_naming_rule.externally_visible_members_must_be_pascal_cased.symbols                            = externally_visible_symbols\ndotnet_naming_rule.externally_visible_members_must_be_pascal_cased.style                              = pascal_case_style\ndotnet_naming_rule.externally_visible_members_must_be_pascal_cased.severity                           = error\n\ndotnet_naming_rule.parameters_must_be_camel_cased.symbols                                             = parameter_symbols\ndotnet_naming_rule.parameters_must_be_camel_cased.style                                               = camel_case_style\ndotnet_naming_rule.parameters_must_be_camel_cased.severity                                            = error\n\ndotnet_naming_rule.constants_must_be_pascal_cased.symbols                                             = constant_symbols\ndotnet_naming_rule.constants_must_be_pascal_cased.style                                               = pascal_case_style\ndotnet_naming_rule.constants_must_be_pascal_cased.severity                                            = error\n\ndotnet_naming_rule.private_static_fields_must_be_camel_cased_and_prefixed_with_s_underscore.symbols   = private_static_field_symbols\ndotnet_naming_rule.private_static_fields_must_be_camel_cased_and_prefixed_with_s_underscore.style     = pascal_case_style\ndotnet_naming_rule.private_static_fields_must_be_camel_cased_and_prefixed_with_s_underscore.severity  = error\n\ndotnet_naming_rule.protected_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.symbols   = protected_field_symbols\ndotnet_naming_rule.protected_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.style     = camel_case_and_prefix_with_underscore_style\ndotnet_naming_rule.protected_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.severity  = error\n\ndotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.symbols   = private_field_symbols\ndotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.style     = camel_case_and_prefix_with_underscore_style\ndotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.severity  = error\n\n#---------------------------------------------------------------------------------------\n# Symbols\n#---------------------------------------------------------------------------------------\n\ndotnet_naming_symbols.externally_visible_symbols.applicable_kinds                                     = class,struct,interface,enum,property,method,field,event,delegate\ndotnet_naming_symbols.externally_visible_symbols.applicable_accessibilities                           = public,internal,friend,protected,protected_internal,protected_friend,private_protected\n\ndotnet_naming_symbols.interface_symbols.applicable_kinds                                              = interface\ndotnet_naming_symbols.interface_symbols.applicable_accessibilities                                    = *\n\ndotnet_naming_symbols.parameter_symbols.applicable_kinds                                              = parameter\ndotnet_naming_symbols.parameter_symbols.applicable_accessibilities                                    = *\n\ndotnet_naming_symbols.constant_symbols.applicable_kinds                                               = field\ndotnet_naming_symbols.constant_symbols.required_modifiers                                             = const\ndotnet_naming_symbols.constant_symbols.applicable_accessibilities                                     = *\n\ndotnet_naming_symbols.private_static_field_symbols.applicable_kinds                                   = field\ndotnet_naming_symbols.private_static_field_symbols.required_modifiers                                 = static,shared\ndotnet_naming_symbols.private_static_field_symbols.applicable_accessibilities                         = private\n\ndotnet_naming_symbols.private_field_symbols.applicable_kinds                                          = field\ndotnet_naming_symbols.private_field_symbols.applicable_accessibilities                                = private\n\ndotnet_naming_symbols.protected_field_symbols.applicable_kinds                                        = field\ndotnet_naming_symbols.protected_field_symbols.applicable_accessibilities                              = protected\n\n#---------------------------------------------------------------------------------------\n# Styles\n#---------------------------------------------------------------------------------------\n\ndotnet_naming_style.camel_case_style.capitalization                                                   = camel_case\n\ndotnet_naming_style.pascal_case_style.capitalization                                                  = pascal_case\n\ndotnet_naming_style.camel_case_and_prefix_with_s_underscore_style.required_prefix                     = s_\ndotnet_naming_style.camel_case_and_prefix_with_s_underscore_style.capitalization                      = camel_case\n\ndotnet_naming_style.camel_case_and_prefix_with_underscore_style.required_prefix                       = _\ndotnet_naming_style.camel_case_and_prefix_with_underscore_style.capitalization                        = camel_case\n\ndotnet_naming_style.pascal_case_and_prefix_with_I_style.required_prefix                               = I\ndotnet_naming_style.pascal_case_and_prefix_with_I_style.capitalization                                = pascal_case\n\n\n#=======================================================================================\n# CSharp code style settings:\n#=======================================================================================\n\n[*.cs]\n# Prefer \"var\" only when the type is apparent\ncsharp_style_var_for_built_in_types = true:suggestion\ncsharp_style_var_when_type_is_apparent = true:suggestion\ncsharp_style_var_elsewhere = true:suggestion\n\n#---------------------------------------------------------------------------------------\n# Prefer method-like constructs to have a block body\n#---------------------------------------------------------------------------------------\n\ncsharp_style_expression_bodied_methods = false:none\ncsharp_style_expression_bodied_constructors = false:none\ncsharp_style_expression_bodied_operators = false:none\n\n#---------------------------------------------------------------------------------------\n# Prefer property-like constructs to have an expression-body\n#---------------------------------------------------------------------------------------\n\ncsharp_style_expression_bodied_properties = true:none\ncsharp_style_expression_bodied_indexers = true:none\ncsharp_style_expression_bodied_accessors = true:none\n\n#---------------------------------------------------------------------------------------\n# Suggest more modern language features when available\n#---------------------------------------------------------------------------------------\n\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_conditional_delegate_call = true:suggestion\ncsharp_style_deconstructed_variable_declaration = true:suggestion\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion\ndotnet_style_prefer_conditional_expression_over_return = false\ndotnet_style_prefer_conditional_expression_over_assignment = false\ndotnet_style_prefer_auto_properties = false\n\n#---------------------------------------------------------------------------------------\n# Newline settings\n#---------------------------------------------------------------------------------------\n\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n\n#---------------------------------------------------------------------------------------\n# Identation options\n#---------------------------------------------------------------------------------------\n\ncsharp_indent_case_contents = true\ncsharp_indent_case_contents_when_block = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = no_change\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\n\n#---------------------------------------------------------------------------------------\n# Spacing options\n#---------------------------------------------------------------------------------------\n\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_parentheses = false\ncsharp_space_between_square_brackets = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_around_declaration_statements = false\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_after_cast = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_before_dot = false\ncsharp_space_after_dot = false\ncsharp_space_before_comma = false\ncsharp_space_after_comma = true\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_semicolon_in_for_statement = true\n\n#---------------------------------------------------------------------------------------\n# Wrapping\n#---------------------------------------------------------------------------------------\n\ncsharp_preserve_single_line_statements = true\ncsharp_preserve_single_line_blocks = true\n\n#---------------------------------------------------------------------------------------\n# ReSharper specific\n#---------------------------------------------------------------------------------------\n\nadd_imports_to_deepest_scope = true\nblank_lines_inside_region = 0\ncsharp_blank_lines_inside_region = 0\ncsharp_braces_for_ifelse = required\ncsharp_braces_for_for = required\ncsharp_braces_for_foreach = required\ncsharp_braces_for_while = required\ncsharp_braces_for_dowhile = required\ncsharp_keep_existing_declaration_parens_arrangement = true\ncsharp_keep_user_linebreaks = true\ncsharp_max_line_length = 1000\nxml_indent_style = space\nxml_indent_size = 2\nxmldoc_indent_style = space\nxmldoc_indent_size = 2\n\n#=======================================================================================\n# Test projects\n#=======================================================================================\n\n[src/*Tests/**/*.cs]\n# We allow usage of \"var\" inside tests as it reduces churn as we remove/rename types\ncsharp_style_var_for_built_in_types = true:none\ncsharp_style_var_elsewhere = true:none\n\n#=======================================================================================\n# Ignore designer files\n#=======================================================================================\n\n[src/**/*.designer.cs,src/**/GlobalSuppressions.cs,src/**/MethodTimeLogger.cs,src/**/SolutionAssemblyInfo.cs]\ncharset = none\nend_of_line = none\ninsert_final_newline = none\ntrim_trailing_whitespace = none\nindent_style = none\nindent_size = none"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.501953125,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n.editorconfig -text\n*.sln.DotSettings -text\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.0302734375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n.nuget/\ntools/FAKE/\nbuild-log.xml\nNuget.key\nTestResult.xml\n\n# Build results\n[Bb]in/\n[Cc]lientbin/\n[Dd]ebug/\n[Rr]elease/\n[Oo]utput*/\n[Pp]ackages*/\n[Tt]emp/\nbin\nobj\n[Ll]ib/*\n![Ll]ib/repositories.config\n*.ide/\n*_i.c\n*_p.c\n*.ilk\n*.meta\n*.obj\n*.orig\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.vspscc\n*.xap\n.builds\n*.log\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n\n# Visual Studio profiler\n*.psess\n*.vsp\n\n# ReSharper is a .NET coding add-in\n_ReSharper*\n*.resharper.user\n\n# Catel\nCatelLogging.txt\n\n# Dotcover\n*.dotCover\n*.dotsettings.user\n\n# Finalbuilder\n*.fbl7\n*.fb7lck\n*.fbpInf\n\n# Ghostdoc\n*.GhostDoc.xml\n\n# Deployments\ndeployment/FinalBuilder/backup\ndeployment/InnoSetup/template/templates\ndeployment/InnoSetup/template/snippets\ndeployment/InnoSetup/template/libraries\ndeployment/InnoSetup/template/doc\n\n# Installshield output folder \n[Ee]xpress\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish\n\n# Others\n[Bb]in\n[Oo]bj\nsql\nTestResults\n*.Cache\nClientBin\nstylecop.*\n~$*\n*.dbmdl\nGenerated_Code #added for RIA/Silverlight projects\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\n\n# Windows image file caches\nThumbs.db \n\n# Folder config file\nDesktop.ini\n\n# Cake - Uncomment if you are using it\ntools/**\n!tools/packages.config\nbuild.cakeoverrides\n\n# mstest test results\nTestResults\n.vs/\n.sonarqube/\nBundleArtifacts/\n\n# docker / tye\n.tye\n\n# editors\n.idea\n.vscode\n\n# Binaries\n*.dll\n*.exe\n\n# fody\nFodyWeavers.xsd\n\n# Approval tests\n*.received.*\n\n# ANTLR\ndata/dsl/*.class\ndata/dsl/*.java\n\n# Nodejs / NPM\nnode_modules\npackage-lock.json\n"
        },
        {
          "name": "GitReleaseManager.yaml",
          "type": "blob",
          "size": 0.265625,
          "content": "issue-labels-include:\r\n  - Breaking change\r\n  - Feature\r\n  - Bug\r\n  - Improvement\r\n  - Documentation\r\n  - Dependencies\r\nissue-labels-exclude:\r\n  - Build\r\n  - Won't fix\r\nissue-labels-alias:\r\n  - name:    Documentation\r\n    header:  Documentation\r\n    plural:  Documentation"
        },
        {
          "name": "GitVersion.yml",
          "type": "blob",
          "size": 0.0888671875,
          "content": "mode: ContinuousDeployment\nassembly-versioning-scheme: MajorMinorPatch \nnext-version: 6.0.0"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "The MIT License\n\nCopyright (c) 2012 Simon Cropp and contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "build.cake",
          "type": "blob",
          "size": 2.3720703125,
          "content": "//=======================================================\n// DEFINE PARAMETERS\n//=======================================================\n\n// Define the required parameters\nvar Parameters = new Dictionary<string, object>();\nParameters[\"SolutionName\"] = \"Costura.Fody\";\nParameters[\"Company\"] = \"Fody\";\nParameters[\"RepositoryUrl\"] = string.Format(\"https://github.com/{0}/{1}\", GetBuildServerVariable(\"SolutionName\"), GetBuildServerVariable(\"SolutionName\"));\nParameters[\"StartYear\"] = \"2015\";\nParameters[\"UseVisualStudioPrerelease\"] = \"true\";\nParameters[\"SkipComponentsThatAreNotDeployable\"] = \"false\";\nParameters[\"BuildCostura\"] = \"true\";\nParameters[\"DeployCostura\"] = \"false\";\nParameters[\"NuGet_NoDependencies\"] = \"false\";\nParameters[\"TestProcessBit\"] = \"X86\";\n\n// Note: the rest of the variables should be coming from the build server,\n// see `/deployment/cake/*-variables.cake` for customization options\n// \n// If required, more variables can be overridden by specifying them via the \n// Parameters dictionary, but the build server variables will always override\n// them if defined by the build server. For example, to override the code\n// sign wild card, add this to build.cake\n//\n// Parameters[\"CodeSignWildcard\"] = \"Orc.EntityFramework\";\n\n//=======================================================\n// DEFINE COMPONENTS TO BUILD / PACKAGE\n//=======================================================\n\nDependencies.Add(\"Costura\");\nDependencies.Add(\"Costura.Template\");\nDependencies.Add(\"ExeToReference\");\nDependencies.Add(\"AssemblyToReference\");\nDependencies.Add(\"AssemblyToReferenceNative\");\nDependencies.Add(\"AssemblyToReferenceMixed\");\nDependencies.Add(\"AssemblyToReferencePreEmbedded\");\nDependencies.Add(\"AssemblyToReferenceWithRuntimeReferences\");\nDependencies.Add(\"AssemblyWithoutInitialize\");\nDependencies.Add(\"AssemblyToProcess\");\nDependencies.Add(\"ExeToProcess\");\nDependencies.Add(\"ExeToProcessWithNative\");\nDependencies.Add(\"ExeToProcessWithNativeAndEmbeddedMixed\");\nDependencies.Add(\"ExeToProcessWithMultipleNative\");\n\nComponents.Add(\"Costura.Fody\");\nComponents.Add(\"Costura\");\n\nTestProjects.Add(\"Costura.Fody.Tests\");\n\n//=======================================================\n// REQUIRED INITIALIZATION, DO NOT CHANGE\n//=======================================================\n\n// Now all variables are defined, include the tasks, that\n// script will take care of the rest of the magic\n\n#l \"./deployment/cake/tasks.cake\""
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 0.3115234375,
          "content": "$ErrorActionPreference = 'Stop'\n\nSet-Location -LiteralPath $PSScriptRoot\n\n$env:DOTNET_SKIP_FIRST_TIME_EXPERIENCE = '1'\n$env:DOTNET_CLI_TELEMETRY_OPTOUT = '1'\n$env:DOTNET_NOLOGO = '1'\n\ndotnet tool restore\nif ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }\n\ndotnet cake @args\nif ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }\n"
        },
        {
          "name": "cake.config",
          "type": "blob",
          "size": 0.1923828125,
          "content": "; The configuration file for Cake.\n\n[Settings]\nSkipVerification=true\n\n[Settings]\nEnableScriptCache=true\n\n[Paths]\n; Cache=%temp%/cake-build/cache/\n; Note: cache-path is set via environment variables"
        },
        {
          "name": "deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "design",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 10.849609375,
          "content": "### <img src=\"./design/logo/package_icon.png\" height=\"28px\"> Costura is an add-in for [Fody](https://github.com/Fody/Home/)\n\nEmbeds dependencies as resources.\n\n[![Chat on Gitter](https://img.shields.io/gitter/room/fody/fody.svg)](https://gitter.im/Fody/Fody)\n[![NuGet Status](https://img.shields.io/nuget/v/Costura.Fody.svg)](https://www.nuget.org/packages/Costura.Fody/)\n\n**See [Milestones](../../milestones?state=closed) for release notes.**\n\n\n### This is an add-in for [Fody](https://github.com/Fody/Home/)\n\n**It is expected that all developers using Fody [become a Patron on OpenCollective](https://opencollective.com/fody/contribute/patron-3059). [See Licensing/Patron FAQ](https://github.com/Fody/Home/blob/master/pages/licensing-patron-faq.md) for more information.**\n\n\n### !!! READ THIS !!! Package is in maintenance mode !!! READ THIS !!!\n\nIn .NET Core 3 there are two new features:\n\n* [Single-file executables](https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0#single-file-executables)\n* [Assembly linking](https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0#assembly-linking)\n\nWith these features included in the dotnet tool set, the value proposition of Costura is greatly diminished.\n\nTherefore we **strongly recommend** to try out the alternatives mentioned above. \n\n#### Supported use cases\n\n**Costura will be kept in maintenance mode** for the following use-cases because they are used by the maintainers:\n\n* C# projects (we have no experience with VB.NET, nor have any intention supporting this)\n* Library linking (e.g. embed dependencies in library projects)\n* Exe linking (e.g. embed dependencies in exe projects)\n* Windows platforms\n* Any advanced scenario that you are not willing to contribute (money, PR, etc) **after discussing with the core contributors first**\n\n#### Non-supported use cases\n\n* VB.NET (see above)\n* Windows Services\n* Non-Windows platforms\n\n***Note that this list may be updated and will become more strict over time.***\n\n### NuGet installation\n\nInstall the [Costura.Fody NuGet package](https://nuget.org/packages/Costura.Fody/) and update the [Fody NuGet package](https://nuget.org/packages/Fody/):\n\n```powershell\nPM> Install-Package Fody\nPM> Install-Package Costura.Fody\n```\n\nThe `Install-Package Fody` is required since NuGet always defaults to the oldest, and most buggy, version of any dependency.\n\n\n### Add to FodyWeavers.xml\n\nAdd `<Costura/>` to [FodyWeavers.xml](https://github.com/Fody/Home/blob/master/pages/usage.md#add-fodyweaversxml)\n\n```xml\n<Weavers>\n  <Costura/>\n</Weavers>\n```\n\n\n## How it works\n\n\n### Merge assemblies as embedded resources\n\nThis approach uses a combination of two methods\n\n * Jeffrey Richter's suggestion of using [embedded resources as a method of merging assemblies](http://blogs.msdn.com/b/microsoft_press/archive/2010/02/03/jeffrey-richter-excerpt-2-from-clr-via-c-third-edition.aspx)\n * Einar Egilsson's suggestion [using cecil to create module initializers](http://tech.einaregilsson.com/2009/12/16/module-initializers-in-csharp/)\n\n\n### Details\n\nThis Task performs the following changes\n\n * Take all assemblies (and pdbs) that have been marked as \"Copy Local\" and embed them as resources in the target assembly.\n * Injects the following code into the module initializer of the target assembly. This code will be called when the assembly is loaded into memory\n\neg \n\n```csharp\nstatic <Module>()\n{\n    ILTemplate.Attach();\n}\n```\n\n * Injects the following class into the target assembly. This means if an assembly load fails it will be loaded from the embedded resources.\n    * [ILTemplate.cs](https://github.com/Fody/Costura/blob/master/src/Costura.Template/ILTemplate.cs)\n    * [ILTemplateWithTempAssembly.cs](https://github.com/Fody/Costura/blob/master/src/Costura.Template/ILTemplateWithTempAssembly.cs)\n\n\n## Configuration Options\n\nAll config options are accessed by modifying the `Costura` node in FodyWeavers.xml.\n\nDefault FodyWeavers.xml:\n\n```xml\n<Weavers>\n  <Costura />\n</Weavers>\n```\n\n\n### CreateTemporaryAssemblies\n\nThis will copy embedded files to disk before loading them into memory. This is helpful for some scenarios that expected an assembly to be loaded from a physical file.\n\n*Defaults to `false`*\n\n```xml\n<Costura CreateTemporaryAssemblies='true' />\n```\n\n\n### IncludeDebugSymbols\n\nControls if .pdbs for reference assemblies are also embedded.\n\n*Defaults to `true`*\n\n```xml\n<Costura IncludeDebugSymbols='false' />\n```\n\n\n### IncludeRuntimeReferences\n\nControls whether the `runtimes` folder, used by .NET Core, for the embedded dependencies will be embedded.\n\n*Defaults to `true`*\n\n```xml\n<Costura IncludeRuntimeReferences='false' />\n```\n\n\n### UseRuntimeReferencePaths\n\nControls whether the *runtime* assemblies are embedded with their full path or only with their assembly name.\n\nFor example, the reference `system.text.encoding.codepages\\5.0.0\\runtimes\\win\\lib\\net461\\System.Text.Encoding.CodePages.dll` will be embedded as `costura.system.text.encoding.codepages.dll.compressed` when `false`, so Costura will automatically load it.\n\nIt will be embedded as `costura.runtimes.win.lib.net461.system.text.encoding.codepages.dll.compressed` when `true` (given `IncludeRuntimeReferences='true'` and `IncludeRuntimeAssemblies='System.Text.Encoding.CodePages'`), requiring custom user code to load the embedded compressed assembly.\n\n*Defaults to `false` when the weaved assembly targets .NET Framework, `true` when the weaved assembly targets .NET Core*\n\n```xml\n<Costura UseRuntimeReferencePaths='true' />\n```\n\n\n### DisableCompression\n\nEmbedded assemblies are compressed by default, and uncompressed when they are loaded. You can turn compression off with this option.\n\n*Defaults to `false`*\n\n\n```xml\n<Costura DisableCompression='true' />\n```\n\n\n### DisableCleanup\n\nAs part of Costura, embedded assemblies are no longer included as part of the build. This cleanup can be turned off.\n\n*Defaults to `false`*\n\n```xml\n<Costura DisableCleanup='true' />\n```\n\n\n\n### DisableEventSubscription\n\nThe attach method no longer subscribes to the `AppDomain.AssemblyResolve` (.NET 4.x) and `AssemblyLoadContext.Resolving` (.NET 6.0+) events.\n\n**Only use in advanced scenarios (e.g. plugins where only the host should resolve the assemblies).**\n\n*Defaults to `false`*\n\n```xml\n<Costura DisableEventSubscription='true' />\n```\n\n\n### LoadAtModuleInit\n\nCostura by default will load as part of the module initialization. This flag disables that behaviour. Make sure you call `CosturaUtility.Initialize()` somewhere in your code.\n\n*Defaults to `true`*\n\n```xml\n<Costura LoadAtModuleInit='false' />\n```\n\n\n### IgnoreSatelliteAssemblies\n\nCostura will by default use assemblies with a name like 'resources.dll' as a satellite resource and prepend the output path. This flag disables that behavior.\n\nBe advised, that **DLL** project assembly names ending with '.resources' (resulting in `*.resources.dll` will lead to errors when this flag set to `false`.\n\n*Defaults to `false`*\n\n```xml\n<Costura IgnoreSatelliteAssemblies='true' />\n```\n\n\n### ExcludeAssemblies / ExcludeRuntimeAssemblies\n\nA list of assembly names to exclude from the default action of \"embed all Copy Local references\".\n\nDo not include `.exe` or `.dll` in the names.\n\nCan not be defined with `IncludeAssemblies`.\n\nCan use wildcards for partial assembly name matching. For example `System.*` will exclude all assemblies that start with `System.`. Wildcards may only be used at the end of an entry so for example, `System.*.Private.*` would not work.\n\nCan take two forms.\n\nAs an element with items delimited by a newline.\n\n```xml\n<Costura>\n  <ExcludeAssemblies>\n    Foo\n    Bar\n  </ExcludeAssemblies>\n</Costura>\n```\n\nOr as an attribute with items delimited by a pipe `|`.\n\n```xml\n<Costura ExcludeAssemblies='Foo|Bar' />\n```\n\n\n### IncludeAssemblies / IncludeRuntimeAssemblies\n\nA list of assembly names to include from the default action of \"embed all Copy Local references\".\n\nDo not include `.exe` or `.dll` in the names.\n\nCan not be defined with `ExcludeAssemblies` / `IncludeRuntimeAssemblies`.\n\nCan use wildcards at the end of the name for partial matching.\n\nCan take two forms. \n\nAs an element with items delimited by a newline.\n\n```xml\n<Costura>\n  <IncludeAssemblies>\n    Foo\n    Bar\n  </IncludeAssemblies>\n</Costura>\n```\n\nOr as an attribute with items delimited by a pipe `|`.\n\n```xml\n<Costura IncludeAssemblies='Foo|Bar' />\n```\n\n\n### Unmanaged32Assemblies & Unmanaged64Assemblies & UnmanagedArm64Assemblies\n\nMixed-mode assemblies cannot be loaded the same way as managed assemblies.\n\nTherefore, to help Costura identify which assemblies are mixed-mode, and in what environment to load them in you should include their names in one or both of these lists.\n\nDo not include `.exe` or `.dll` in the names.\n\nCan use wildcards at the end of the name for partial matching.\n\nCan take two forms. \n\nAs an element with items delimited by a newline.\n\n```xml\n<Costura>\n  <UnmanagedWinX86Assemblies>\n    Foo32\n    Bar32\n  </UnmanagedWinX86Assemblies>\n  <UnmanagedWinX64Assemblies>\n    Foo64\n    Bar64\n  </UnmanagedWinX64Assemblies>\n  <UnmanagedWinArm64Assemblies>\n    FooArm64\n    BarArm64\n  </UnmanagedWinArm64Assemblies>\n</Costura>\n```\n\nOr as a attribute with items delimited by a pipe `|`.\n\n```xml\n<Costura\n    UnmanagedWinX86Assemblies='Foo32|Bar32' \n    UnmanagedWinX64Assemblies='Foo64|Bar64' \n    UnmanagedWinArm64Assemblies='FooArm64|BarArm64'/>\n```\n\n\n### Native Libraries and PreloadOrder\n\nNative libraries can be loaded by Costura automatically. To include a native library include it in your project as an Embedded Resource in a folder called `costuraX86`, `costuraX64` or `costuraArm64` depending on the runtime platform of the library.\n\nOptionally you can also specify the order that preloaded libraries are loaded. When using temporary assemblies from disk mixed mode assemblies are also preloaded.\n\nTo specify the order of preloaded assemblies add a `PreloadOrder` element to the config.\n\n```xml\n<Costura>\n  <PreloadOrder>\n    Foo\n    Bar\n  </PreloadOrder>\n</Costura>\n```\n\nOr as a attribute with items delimited by a pipe `|`.\n\n```xml\n<Costura PreloadOrder='Foo|Bar' />\n```\n\n\n## CosturaUtility\n\n`CosturaUtility` is a class that gives you access to initialize the Costura system manually in your own code. This is mainly for scenarios where the module initializer doesn't work, such as libraries and Mono.\n\nTo use, call `CosturaUtility.Initialize()` somewhere in your code, as early as possible.\n\n```csharp\nclass Program\n{\n    static Program()\n    {\n        CosturaUtility.Initialize();\n    }\n\n    static void Main(string[] args) { ... }\n}\n```\n\n\n## Unit Testing\n\nMost unit test frameworks need the `.dll`s files in order to discover and perform the unit tests.  You may need to add Costura and a configuration like the below to your testing assembly. \n\n```xml\n<Weavers>\n    <Costura ExcludeAssemblies='TargetExe|TargetExeTest'\n             CreateTemporaryAssemblies='true'\n             DisableCleanup='true'/>\n</Weavers>\n```\n\n\n## Icon\n\n<a href=\"http://thenounproject.com/noun/merge/#icon-No256\" target=\"_blank\">Merge</a> from The Noun Project\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}