{
  "metadata": {
    "timestamp": 1736710746548,
    "page": 178,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mayuki/Cocona",
      "stars": 3314,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".azure-pipelines",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 5.4619140625,
          "content": "ï»¿# To learn more about .editorconfig see https://aka.ms/editorconfigdocs\n###############################\n# Core EditorConfig Options   #\n###############################\nroot = true\n\n# All files\n[*]\nindent_style = space\n\n# Code files\n[*.{cs,csx,vb,vbx}]\nindent_size = 4\ninsert_final_newline = true\ncharset = utf-8\n\n\n###############################\n# .NET Coding Conventions     #\n###############################\n[*.{cs,vb}]\n# Organize usings\ndotnet_sort_system_directives_first = true\n# this. preferences\ndotnet_style_qualification_for_field = false:silent\ndotnet_style_qualification_for_property = false:silent\ndotnet_style_qualification_for_method = false:silent\ndotnet_style_qualification_for_event = false:silent\n# Language keywords vs BCL types preferences\ndotnet_style_predefined_type_for_locals_parameters_members = true:silent\ndotnet_style_predefined_type_for_member_access = true:silent\n# Parentheses preferences\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent\n# Modifier preferences\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:silent\ndotnet_style_readonly_field = true:suggestion\n# Expression-level preferences\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_auto_properties = true:silent\ndotnet_style_prefer_conditional_expression_over_assignment = true:silent\ndotnet_style_prefer_conditional_expression_over_return = true:silent\n###############################\n# Naming Conventions          #\n###############################\n# Style Definitions\ndotnet_naming_style.pascal_case_style.capitalization             = pascal_case\n# Use PascalCase for constant fields  \ndotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields\ndotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style\ndotnet_naming_symbols.constant_fields.applicable_kinds            = field\ndotnet_naming_symbols.constant_fields.applicable_accessibilities  = *\ndotnet_naming_symbols.constant_fields.required_modifiers          = const\n###############################\n# C# Coding Conventions       #\n###############################\n[*.cs]\n# var preferences\ncsharp_style_var_for_built_in_types = true:silent\ncsharp_style_var_when_type_is_apparent = true:silent\ncsharp_style_var_elsewhere = true:silent\n# Expression-bodied members\ncsharp_style_expression_bodied_methods = false:silent\ncsharp_style_expression_bodied_constructors = false:silent\ncsharp_style_expression_bodied_operators = false:silent\ncsharp_style_expression_bodied_properties = true:silent\ncsharp_style_expression_bodied_indexers = true:silent\ncsharp_style_expression_bodied_accessors = true:silent\n# Pattern matching preferences\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\n# Null-checking preferences\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_conditional_delegate_call = true:suggestion\n# Modifier preferences\ncsharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion\n# Expression-level preferences\ncsharp_prefer_braces = true:silent\ncsharp_style_deconstructed_variable_declaration = true:suggestion\ncsharp_prefer_simple_default_expression = true:suggestion\ncsharp_style_pattern_local_over_anonymous_function = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\n###############################\n# C# Formatting Rules         #\n###############################\n# New line preferences\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n# Indentation preferences\ncsharp_indent_case_contents = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = flush_left\n# Space preferences\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\n# Wrapping preferences\ncsharp_preserve_single_line_statements = true\ncsharp_preserve_single_line_blocks = true"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.4765625,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n*.sh text eol=lf\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.6103515625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- Backup*.rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb"
        },
        {
          "name": "Cocona.sln",
          "type": "blob",
          "size": 23.703125,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.31903.59\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cocona\", \"src\\Cocona\\Cocona.csproj\", \"{23C5CF4A-F006-404C-B9D2-EE43D576871E}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cocona.Test\", \"test\\Cocona.Test\\Cocona.Test.csproj\", \"{0B43AAEE-2C97-4D45-A3A9-C761CFBB89B6}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{09F6C99E-D874-4C82-90AA-A37E5BE707C4}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\t\t.gitattributes = .gitattributes\n\t\t.gitignore = .gitignore\n\t\tsrc\\Directory.Build.props = src\\Directory.Build.props\n\t\tglobal.json = global.json\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Samples\", \"Samples\", \"{26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.Advanced.PreventMultipleInstances\", \"samples\\Advanced.PreventMultipleInstances\\CoconaSample.Advanced.PreventMultipleInstances.csproj\", \"{5D129837-6E27-40E4-93A7-87C06E5CF1AB}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.CommandFilter\", \"samples\\InAction.CommandFilter\\CoconaSample.InAction.CommandFilter.csproj\", \"{144EDBA0-838A-4DBA-B882-65C31DF70734}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.ManyArguments\", \"samples\\InAction.ManyArguments\\CoconaSample.InAction.ManyArguments.csproj\", \"{A455C92E-C3C7-4EAB-8C14-9A03834D90C3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.DependencyInjection\", \"samples\\InAction.DependencyInjection\\CoconaSample.InAction.DependencyInjection.csproj\", \"{E415C3D5-DCC4-4876-8122-EEA2FAD69295}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.HandleShutdownSignal\", \"samples\\InAction.HandleShutdownSignal\\CoconaSample.InAction.HandleShutdownSignal.csproj\", \"{433C57D8-B703-46B6-B313-C31405C11BE0}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.ExitCode\", \"samples\\InAction.ExitCode\\CoconaSample.InAction.ExitCode.csproj\", \"{9FCD7EF6-A720-4392-9B5E-E29AE01E06A7}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.GettingStarted.MinimalApp\", \"samples\\GettingStarted.MinimalApp\\CoconaSample.GettingStarted.MinimalApp.csproj\", \"{96E0A0B5-60A8-4BFE-A7EE-09E1A878F1F7}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.GettingStarted.SubCommandApp\", \"samples\\GettingStarted.SubCommandApp\\CoconaSample.GettingStarted.SubCommandApp.csproj\", \"{4B1C04AF-9478-4D79-82BF-140C5446A2FB}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.GettingStarted.TypicalSimpleApp\", \"samples\\GettingStarted.TypicalSimpleApp\\CoconaSample.GettingStarted.TypicalSimpleApp.csproj\", \"{83C8BDA5-6BBC-43F8-A6B6-700184597A48}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.CommandOptionOverload\", \"samples\\InAction.CommandOptionOverload\\CoconaSample.InAction.CommandOptionOverload.csproj\", \"{BD9A8CD2-FC92-41D1-BD52-9495EAE0E557}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.Advanced.HelpTransformer\", \"samples\\Advanced.HelpTransformer\\CoconaSample.Advanced.HelpTransformer.csproj\", \"{53A79BEE-DF6D-4E6F-B5DA-B34E7F6C50DD}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.CommandOptions\", \"samples\\InAction.CommandOptions\\CoconaSample.InAction.CommandOptions.csproj\", \"{528367FE-5A15-471D-B461-5596958E9FB8}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.Advanced.GenericHost\", \"samples\\Advanced.GenericHost\\CoconaSample.Advanced.GenericHost.csproj\", \"{CFC811DE-1C26-433E-AE6D-162F4F38E174}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.Advanced.JsonValueConverter\", \"samples\\Advanced.JsonValueConverter\\CoconaSample.Advanced.JsonValueConverter.csproj\", \"{98AE66A4-0C9D-4ADA-9F8F-CA6D4BAEDC27}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.AppConfiguration\", \"samples\\InAction.AppConfiguration\\CoconaSample.InAction.AppConfiguration.csproj\", \"{55D4B44C-4377-42BB-AAAB-52B42DFA65EA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.MultipleCommandTypes\", \"samples\\InAction.MultipleCommandTypes\\CoconaSample.InAction.MultipleCommandTypes.csproj\", \"{1BFA17E7-748E-420C-9219-E91EF8258032}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.Validation\", \"samples\\InAction.Validation\\CoconaSample.InAction.Validation.csproj\", \"{D16A9914-6434-4FFC-8649-371D2A852322}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cocona.Core\", \"src\\Cocona.Core\\Cocona.Core.csproj\", \"{609ADF08-EE49-412F-B510-F67832B944AD}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Performance\", \"Performance\", \"{57101248-CC0B-4391-80BF-E2BC2C12B29A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cocona.Benchmark.Performance\", \"perf\\Cocona.Benchmark.Performance\\Cocona.Benchmark.Performance.csproj\", \"{A37E0B66-EE72-431D-9857-2E8C05B3F054}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cocona.Lite\", \"src\\Cocona.Lite\\Cocona.Lite.csproj\", \"{5C5E3459-42A8-4A6E-82C9-B69710F06161}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cocona.Benchmark.External\", \"perf\\Cocona.Benchmark.External\\Cocona.Benchmark.External.csproj\", \"{277C869F-BD92-4CFE-9B5D-119D21D9D859}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Tests\", \"Tests\", \"{D154CC2E-568E-45D3-87EB-F0EDF70A763B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cocona.Lite.Test\", \"test\\Cocona.Lite.Test\\Cocona.Lite.Test.csproj\", \"{E3BFD00E-199E-492F-813D-3D8B2A29258F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.Advanced.ShellCompletionCandidates\", \"samples\\Advanced.ShellCompletionCandidates\\CoconaSample.Advanced.ShellCompletionCandidates.csproj\", \"{1951CD16-9CFD-4DF1-A0ED-7F4EC6AE4D72}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.Advanced.OptionLikeCommand\", \"samples\\Advanced.OptionLikeCommand\\CoconaSample.Advanced.OptionLikeCommand.csproj\", \"{974EB617-441F-4DC8-88CE-92C896E0FC58}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.Advanced.CommandMethodForwarding\", \"samples\\Advanced.CommandMethodForwarding\\CoconaSample.Advanced.CommandMethodForwarding.csproj\", \"{2E5BEBF1-FCDE-4DA3-9A06-4EC721E89AFD}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.Advanced.HelpOnDemand\", \"samples\\Advanced.HelpOnDemand\\CoconaSample.Advanced.HelpOnDemand.csproj\", \"{089D815D-2199-4CCA-9BAF-F7386F883063}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"GitHub Actions\", \"GitHub Actions\", \"{F7ED9A50-845E-4A47-9F4E-A0C372082D76}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.github\\workflows\\build.yaml = .github\\workflows\\build.yaml\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Azure Pipelines\", \"Azure Pipelines\", \"{C5099F3C-62C3-45F3-BFB9-194E0CEF55DB}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.azure-pipelines\\build.yml = .azure-pipelines\\build.yml\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.InAction.ParameterSet\", \"samples\\InAction.ParameterSet\\CoconaSample.InAction.ParameterSet.csproj\", \"{A5F06C10-A10C-404D-B7F5-B0C90FAE87C8}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.MinimalApi.QuickStart\", \"samples\\MinimalApi.QuickStart\\CoconaSample.MinimalApi.QuickStart.csproj\", \"{64E7005D-70D2-4CB0-9ACC-835D88031F50}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.MinimalApi.MultipleCommands\", \"samples\\MinimalApi.MultipleCommands\\CoconaSample.MinimalApi.MultipleCommands.csproj\", \"{398FF1CA-CE6E-478A-B2AB-6F3441547352}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.MinimalApi.SubCommand\", \"samples\\MinimalApi.SubCommand\\CoconaSample.MinimalApi.SubCommand.csproj\", \"{A32C73D0-E725-4CBB-81D4-EF81CFC67B14}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.MinimalApi.InAction\", \"samples\\MinimalApi.InAction\\CoconaSample.MinimalApi.InAction.csproj\", \"{51E42619-D33A-4046-A80D-A979591C19D3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CoconaSample.Advanced.Localization\", \"samples\\Advanced.Localization\\CoconaSample.Advanced.Localization.csproj\", \"{7A178909-623C-4788-ADD4-9437091128BA}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution\", \"Solution\", \"{72AC9837-3045-4692-909B-1BD04F408B48}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tDirectory.Build.props = Directory.Build.props\n\tEndProjectSection\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CoconaSample.Advanced.GenericHost.HostApplicationBuilder\", \"samples\\CoconaSample.Advanced.GenericHost.HostApplicationBuilder\\CoconaSample.Advanced.GenericHost.HostApplicationBuilder.csproj\", \"{3ED634C5-7034-4F13-9FD1-BB9717E17791}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{23C5CF4A-F006-404C-B9D2-EE43D576871E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{23C5CF4A-F006-404C-B9D2-EE43D576871E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{23C5CF4A-F006-404C-B9D2-EE43D576871E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{23C5CF4A-F006-404C-B9D2-EE43D576871E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0B43AAEE-2C97-4D45-A3A9-C761CFBB89B6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0B43AAEE-2C97-4D45-A3A9-C761CFBB89B6}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0B43AAEE-2C97-4D45-A3A9-C761CFBB89B6}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0B43AAEE-2C97-4D45-A3A9-C761CFBB89B6}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5D129837-6E27-40E4-93A7-87C06E5CF1AB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5D129837-6E27-40E4-93A7-87C06E5CF1AB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5D129837-6E27-40E4-93A7-87C06E5CF1AB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5D129837-6E27-40E4-93A7-87C06E5CF1AB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{144EDBA0-838A-4DBA-B882-65C31DF70734}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{144EDBA0-838A-4DBA-B882-65C31DF70734}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{144EDBA0-838A-4DBA-B882-65C31DF70734}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{144EDBA0-838A-4DBA-B882-65C31DF70734}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A455C92E-C3C7-4EAB-8C14-9A03834D90C3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A455C92E-C3C7-4EAB-8C14-9A03834D90C3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A455C92E-C3C7-4EAB-8C14-9A03834D90C3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A455C92E-C3C7-4EAB-8C14-9A03834D90C3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E415C3D5-DCC4-4876-8122-EEA2FAD69295}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E415C3D5-DCC4-4876-8122-EEA2FAD69295}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E415C3D5-DCC4-4876-8122-EEA2FAD69295}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E415C3D5-DCC4-4876-8122-EEA2FAD69295}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{433C57D8-B703-46B6-B313-C31405C11BE0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{433C57D8-B703-46B6-B313-C31405C11BE0}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{433C57D8-B703-46B6-B313-C31405C11BE0}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{433C57D8-B703-46B6-B313-C31405C11BE0}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9FCD7EF6-A720-4392-9B5E-E29AE01E06A7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9FCD7EF6-A720-4392-9B5E-E29AE01E06A7}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9FCD7EF6-A720-4392-9B5E-E29AE01E06A7}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9FCD7EF6-A720-4392-9B5E-E29AE01E06A7}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{96E0A0B5-60A8-4BFE-A7EE-09E1A878F1F7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{96E0A0B5-60A8-4BFE-A7EE-09E1A878F1F7}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{96E0A0B5-60A8-4BFE-A7EE-09E1A878F1F7}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{96E0A0B5-60A8-4BFE-A7EE-09E1A878F1F7}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4B1C04AF-9478-4D79-82BF-140C5446A2FB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4B1C04AF-9478-4D79-82BF-140C5446A2FB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4B1C04AF-9478-4D79-82BF-140C5446A2FB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4B1C04AF-9478-4D79-82BF-140C5446A2FB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{83C8BDA5-6BBC-43F8-A6B6-700184597A48}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{83C8BDA5-6BBC-43F8-A6B6-700184597A48}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{83C8BDA5-6BBC-43F8-A6B6-700184597A48}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{83C8BDA5-6BBC-43F8-A6B6-700184597A48}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BD9A8CD2-FC92-41D1-BD52-9495EAE0E557}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BD9A8CD2-FC92-41D1-BD52-9495EAE0E557}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BD9A8CD2-FC92-41D1-BD52-9495EAE0E557}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BD9A8CD2-FC92-41D1-BD52-9495EAE0E557}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{53A79BEE-DF6D-4E6F-B5DA-B34E7F6C50DD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{53A79BEE-DF6D-4E6F-B5DA-B34E7F6C50DD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{53A79BEE-DF6D-4E6F-B5DA-B34E7F6C50DD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{53A79BEE-DF6D-4E6F-B5DA-B34E7F6C50DD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{528367FE-5A15-471D-B461-5596958E9FB8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{528367FE-5A15-471D-B461-5596958E9FB8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{528367FE-5A15-471D-B461-5596958E9FB8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{528367FE-5A15-471D-B461-5596958E9FB8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{CFC811DE-1C26-433E-AE6D-162F4F38E174}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CFC811DE-1C26-433E-AE6D-162F4F38E174}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CFC811DE-1C26-433E-AE6D-162F4F38E174}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CFC811DE-1C26-433E-AE6D-162F4F38E174}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{98AE66A4-0C9D-4ADA-9F8F-CA6D4BAEDC27}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{98AE66A4-0C9D-4ADA-9F8F-CA6D4BAEDC27}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{98AE66A4-0C9D-4ADA-9F8F-CA6D4BAEDC27}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{98AE66A4-0C9D-4ADA-9F8F-CA6D4BAEDC27}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{55D4B44C-4377-42BB-AAAB-52B42DFA65EA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{55D4B44C-4377-42BB-AAAB-52B42DFA65EA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{55D4B44C-4377-42BB-AAAB-52B42DFA65EA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{55D4B44C-4377-42BB-AAAB-52B42DFA65EA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1BFA17E7-748E-420C-9219-E91EF8258032}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1BFA17E7-748E-420C-9219-E91EF8258032}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1BFA17E7-748E-420C-9219-E91EF8258032}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1BFA17E7-748E-420C-9219-E91EF8258032}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D16A9914-6434-4FFC-8649-371D2A852322}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D16A9914-6434-4FFC-8649-371D2A852322}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D16A9914-6434-4FFC-8649-371D2A852322}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D16A9914-6434-4FFC-8649-371D2A852322}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{609ADF08-EE49-412F-B510-F67832B944AD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{609ADF08-EE49-412F-B510-F67832B944AD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{609ADF08-EE49-412F-B510-F67832B944AD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{609ADF08-EE49-412F-B510-F67832B944AD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A37E0B66-EE72-431D-9857-2E8C05B3F054}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A37E0B66-EE72-431D-9857-2E8C05B3F054}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A37E0B66-EE72-431D-9857-2E8C05B3F054}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A37E0B66-EE72-431D-9857-2E8C05B3F054}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5C5E3459-42A8-4A6E-82C9-B69710F06161}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5C5E3459-42A8-4A6E-82C9-B69710F06161}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5C5E3459-42A8-4A6E-82C9-B69710F06161}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5C5E3459-42A8-4A6E-82C9-B69710F06161}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{277C869F-BD92-4CFE-9B5D-119D21D9D859}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{277C869F-BD92-4CFE-9B5D-119D21D9D859}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{277C869F-BD92-4CFE-9B5D-119D21D9D859}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{277C869F-BD92-4CFE-9B5D-119D21D9D859}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E3BFD00E-199E-492F-813D-3D8B2A29258F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E3BFD00E-199E-492F-813D-3D8B2A29258F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E3BFD00E-199E-492F-813D-3D8B2A29258F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E3BFD00E-199E-492F-813D-3D8B2A29258F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1951CD16-9CFD-4DF1-A0ED-7F4EC6AE4D72}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1951CD16-9CFD-4DF1-A0ED-7F4EC6AE4D72}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1951CD16-9CFD-4DF1-A0ED-7F4EC6AE4D72}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1951CD16-9CFD-4DF1-A0ED-7F4EC6AE4D72}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{974EB617-441F-4DC8-88CE-92C896E0FC58}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{974EB617-441F-4DC8-88CE-92C896E0FC58}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{974EB617-441F-4DC8-88CE-92C896E0FC58}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{974EB617-441F-4DC8-88CE-92C896E0FC58}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2E5BEBF1-FCDE-4DA3-9A06-4EC721E89AFD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2E5BEBF1-FCDE-4DA3-9A06-4EC721E89AFD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2E5BEBF1-FCDE-4DA3-9A06-4EC721E89AFD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2E5BEBF1-FCDE-4DA3-9A06-4EC721E89AFD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{089D815D-2199-4CCA-9BAF-F7386F883063}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{089D815D-2199-4CCA-9BAF-F7386F883063}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{089D815D-2199-4CCA-9BAF-F7386F883063}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{089D815D-2199-4CCA-9BAF-F7386F883063}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A5F06C10-A10C-404D-B7F5-B0C90FAE87C8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A5F06C10-A10C-404D-B7F5-B0C90FAE87C8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A5F06C10-A10C-404D-B7F5-B0C90FAE87C8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A5F06C10-A10C-404D-B7F5-B0C90FAE87C8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{64E7005D-70D2-4CB0-9ACC-835D88031F50}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{64E7005D-70D2-4CB0-9ACC-835D88031F50}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{64E7005D-70D2-4CB0-9ACC-835D88031F50}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{64E7005D-70D2-4CB0-9ACC-835D88031F50}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{398FF1CA-CE6E-478A-B2AB-6F3441547352}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{398FF1CA-CE6E-478A-B2AB-6F3441547352}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{398FF1CA-CE6E-478A-B2AB-6F3441547352}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{398FF1CA-CE6E-478A-B2AB-6F3441547352}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A32C73D0-E725-4CBB-81D4-EF81CFC67B14}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A32C73D0-E725-4CBB-81D4-EF81CFC67B14}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A32C73D0-E725-4CBB-81D4-EF81CFC67B14}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A32C73D0-E725-4CBB-81D4-EF81CFC67B14}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{51E42619-D33A-4046-A80D-A979591C19D3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{51E42619-D33A-4046-A80D-A979591C19D3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{51E42619-D33A-4046-A80D-A979591C19D3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{51E42619-D33A-4046-A80D-A979591C19D3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{7A178909-623C-4788-ADD4-9437091128BA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{7A178909-623C-4788-ADD4-9437091128BA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{7A178909-623C-4788-ADD4-9437091128BA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{7A178909-623C-4788-ADD4-9437091128BA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{3ED634C5-7034-4F13-9FD1-BB9717E17791}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{3ED634C5-7034-4F13-9FD1-BB9717E17791}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{3ED634C5-7034-4F13-9FD1-BB9717E17791}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{3ED634C5-7034-4F13-9FD1-BB9717E17791}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{0B43AAEE-2C97-4D45-A3A9-C761CFBB89B6} = {D154CC2E-568E-45D3-87EB-F0EDF70A763B}\n\t\t{5D129837-6E27-40E4-93A7-87C06E5CF1AB} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{144EDBA0-838A-4DBA-B882-65C31DF70734} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{A455C92E-C3C7-4EAB-8C14-9A03834D90C3} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{E415C3D5-DCC4-4876-8122-EEA2FAD69295} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{433C57D8-B703-46B6-B313-C31405C11BE0} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{9FCD7EF6-A720-4392-9B5E-E29AE01E06A7} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{96E0A0B5-60A8-4BFE-A7EE-09E1A878F1F7} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{4B1C04AF-9478-4D79-82BF-140C5446A2FB} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{83C8BDA5-6BBC-43F8-A6B6-700184597A48} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{BD9A8CD2-FC92-41D1-BD52-9495EAE0E557} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{53A79BEE-DF6D-4E6F-B5DA-B34E7F6C50DD} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{528367FE-5A15-471D-B461-5596958E9FB8} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{CFC811DE-1C26-433E-AE6D-162F4F38E174} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{98AE66A4-0C9D-4ADA-9F8F-CA6D4BAEDC27} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{55D4B44C-4377-42BB-AAAB-52B42DFA65EA} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{1BFA17E7-748E-420C-9219-E91EF8258032} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{D16A9914-6434-4FFC-8649-371D2A852322} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{A37E0B66-EE72-431D-9857-2E8C05B3F054} = {57101248-CC0B-4391-80BF-E2BC2C12B29A}\n\t\t{277C869F-BD92-4CFE-9B5D-119D21D9D859} = {57101248-CC0B-4391-80BF-E2BC2C12B29A}\n\t\t{E3BFD00E-199E-492F-813D-3D8B2A29258F} = {D154CC2E-568E-45D3-87EB-F0EDF70A763B}\n\t\t{1951CD16-9CFD-4DF1-A0ED-7F4EC6AE4D72} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{974EB617-441F-4DC8-88CE-92C896E0FC58} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{2E5BEBF1-FCDE-4DA3-9A06-4EC721E89AFD} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{089D815D-2199-4CCA-9BAF-F7386F883063} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{F7ED9A50-845E-4A47-9F4E-A0C372082D76} = {09F6C99E-D874-4C82-90AA-A37E5BE707C4}\n\t\t{C5099F3C-62C3-45F3-BFB9-194E0CEF55DB} = {09F6C99E-D874-4C82-90AA-A37E5BE707C4}\n\t\t{A5F06C10-A10C-404D-B7F5-B0C90FAE87C8} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{64E7005D-70D2-4CB0-9ACC-835D88031F50} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{398FF1CA-CE6E-478A-B2AB-6F3441547352} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{A32C73D0-E725-4CBB-81D4-EF81CFC67B14} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{51E42619-D33A-4046-A80D-A979591C19D3} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{7A178909-623C-4788-ADD4-9437091128BA} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\t\t{72AC9837-3045-4692-909B-1BD04F408B48} = {09F6C99E-D874-4C82-90AA-A37E5BE707C4}\n\t\t{3ED634C5-7034-4F13-9FD1-BB9717E17791} = {26F0BA96-C75C-4BDF-A1CC-3A9F58A16D9E}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {8DBA26EF-235B-4656-A5DD-00C266A42735}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "Cocona.sln.DotSettings",
          "type": "blob",
          "size": 0.3896484375,
          "content": "ï»¿<wpf:ResourceDictionary xml:space=\"preserve\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:s=\"clr-namespace:System;assembly=mscorlib\" xmlns:ss=\"urn:shemas-jetbrains-com:settings-storage-xaml\" xmlns:wpf=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n\t<s:Boolean x:Key=\"/Default/UserDictionary/Words/=Cocona/@EntryIndexedValue\">True</s:Boolean></wpf:ResourceDictionary>"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.212890625,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <PropertyGroup>\n    <LangVersion>latest</LangVersion>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.064453125,
          "content": "MIT License\n\nCopyright (c) Mayuki Sawatari <mayuki@misuzilla.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 32.28515625,
          "content": "# ![Cocona](https://raw.githubusercontent.com/mayuki/Cocona/master/docs/assets/logo.svg)\nMicro-framework for .NET **Co**re **con**sole **a**pplication. Cocona makes it easy and fast to build console applications on .NET.ð\n\n[![Build Status](https://dev.azure.com/misuzilla/Cocona/_apis/build/status/Cocona?branchName=master)](https://dev.azure.com/misuzilla/Cocona/_build/latest?definitionId=18&branchName=master) [![NuGet Package: Cocona](https://img.shields.io/nuget/vpre/Cocona?label=NuGet%3A%20Cocona)](https://www.nuget.org/packages/Cocona) [![NuGet Package: Cocona.Lite](https://img.shields.io/nuget/vpre/Cocona.Lite?label=NuGet%3A%20Cocona.Lite)](https://www.nuget.org/packages/Cocona.Lite)\n\n### â± Create a console application with Cocona in seconds.\n```csharp\nCoconaApp.Run((string? name, bool hey) =>\n    Console.WriteLine($\"{(hey ? \"Hey\" :\"Hello\")} {(name ?? \"Guest\")}!\"));\n```\n![](https://raw.githubusercontent.com/mayuki/Cocona/master/docs/assets/intro-in-seconds.gif)\n\n## Feature\n- ð **Make it easy to build console applications on .NET.**\n    - ASP.NET Core-like Minimal API\n    - `public` method as a command\n    - Provides ASP.NET Core MVC-like development experience to console application development.\n- â¨ **Command-line option semantics like UNIX tools standard. (`getopt`/`getopt_long` like options)**\n    - Your app can handle both `-rf /` and `-r -f /` :-)\n    - Support single command and multiple commands style\n        - `myapp --foo --bar -n arg0 \"arg1\"` (e.g. `dir`, `cp`, `ls` ...)\n        - `myapp server -m \"Hello world!\"` (e.g. `dotnet`, `git`, `kubectl` ...)\n- â **Built-in help documentation support.**\n    - You want to see a help message; you type `-h` or `--help`.\n    - Built-in similar commands suggestion\n    - Shell command-line completion support for `bash` and `zsh`\n- ð  **Highly modulable/customizable CLI framework.**\n    - Cocona built on top of `Microsoft.Extensions.*` framework. Cocona natively supports Logging, DI, Configuration and ConsoleLifetime.\n    - Don't you need `Microsoft.Extensions.*`? [then you can use a lightweight version of Cocona (named Cocona.Lite)](#performance--coconalite).\n\n[You can find sample code for various features.](samples)\n\n## Table of contents\n- [Installing](#installing)\n- [Requirements](#requirements)\n- [Getting Started](#getting-started)\n- [Command-line handling basics](#command-line-handling-basics)\n    - [Command](#command)\n    - [Options](#options)\n    - [Arguments](#arguments)\n    - [Sub-commands](#sub-commands)\n    - [Option-like commands](#option-like-commands)\n- [Cocona in action](#cocona-in-action)\n    - [Parameter set](#parameter-set)\n    - [Exit code](#exit-code)\n    - [Validation](#validation)\n    - [Shutdown event handling](#shutdown-event-handling)\n    - [Command filter](#command-filter)\n    - [Dependency Injection](#dependency-injection)\n    - [Configuration](#configuration)\n    - [Logging](#logging)\n    - [Shell command-line completion](#shell-command-line-completion)\n- [Performance & Cocona.Lite](#performance--coconalite)\n- [Advanced](#advanced)\n    - [Localization](#localization)\n    - [Hide command from help](#hide-command-from-help)\n    - [Help customization](#help-customization)\n    - [CommandMethodForwardedTo attribute](#commandmethodforwardedto-attribute)\n    - [IgnoreUnknownOptions attribute](#ignoreunknownoptions-attribute)\n    - [GenericHost integration](#generichost-integration) \n- [Related projects](#related-projects)\n- [License](#license)\n\n## Installing\nInstall NuGet package from NuGet.org\n\n```sh\n$ dotnet add package Cocona\n\n# A lightweight version is also available if you prefer less dependency.\n$ dotnet add package Cocona.Lite\n```\n\n## Requirements\n- .NET 6 (Required to use Minimal API)\n- .NET 5\n- .NET Standard 2.0, 2.1\n\n## Getting Started\n\n```csharp\nusing Cocona;\nCoconaApp.Run((string name) =>\n{\n    Console.WriteLine($\"Hello {name}\");\n})\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\n```csharp\nusing Cocona;\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Cocona parses command-line and executes a command.\n        CoconaApp.Run<Program>(args);\n    }\n\n    // public method as a command â¢\n    public void Hello(string name)\n    {\n        Console.WriteLine($\"Hello {name}\");\n    }\n}\n```\n</details>\n\n### Try to run!\n```sh\n$ dotnet run\nUsage: ConsoleAppSample [--name <String>]\n\nOptions:\n  --name <String>    (Required)\n  -h, --help         Show help message\n  --version          Show version\n\n$ dotnet run -- --name Cocona\nHello Cocona\n```\n\n### Extra: Publish the application as a single-file executable\nIf your application runs on .NET Core 3.0 or later, you can publish the app as a single-file executable. (see. [What's new in .NET Core 3.0](https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0#single-file-executables))\n```sh\nPS> dotnet publish -r win-x64 -p:PublishSingleFile=true\nPS> app.exe --name Cocona\n\n$ dotnet publish -r linux-x64 -p:PublishSingleFile=true\n$ ./app --name Cocona\n```\n\n## Command-line handling basics\n### Command\n#### Minimal API style\n\nIf your application has a single command, you can easily define and run it with `CoconaApp.Run`.\n\n```csharp\nCoconaApp.Run((string name, int age) => { ... });\n```\n\nThis is equivalent to the following code using the Minimal API Builder.\n\n```csharp\nvar builder = CoconaApp.CreateBuilder();\nvar app = builder.Build();\n\napp.AddCommand((string name, int age) => { ... });\n\napp.Run();\n```\n\nIf you want your application to have more than one command, you can add named commands. See [Sub commands](#sub-commands) for details.\n\n```csharp\nvar app = CoconaApp.Create(); // is a shorthand for `CoconaApp.CreateBuilder().Build()`\n\napp.AddCommand(\"list\", () => { ... });\napp.AddCommand(\"add\", () => { ... });\napp.AddCommand(\"delete\", () => { ... });\n\napp.Run();\n```\n\nYou can add (classic) Class-based style commands with the `AddCommands<T>` method.\n\n```csharp\napp.AddCommands<MyCommand>();\n```\n\n#### Public method as a command (Class-based style)\nBy default, Cocona treats `public` methods as commands.\n\nIf an application has one public method, Cocona calls it on startup. If there are more than one, they are treated as sub-commands. (see also [Sub commands](#sub-commands))\n\n```csharp\n// Treats a method name as a command name. (Below method is named `command`)\npublic void Command() { ... }\n\n// Specify a command name using CommandAttribute.\n[Command(\"commandname\")]\npublic void Command() { ... }\n\n// Cocona will ignore this method.\n[Ignore]\npublic void Ignored() { ... }\n```\n\nIf you want to specify a method as a command manually, set `false` to `TreatPublicMethodsAsCommands` option at startup. All command methods require `CommandAttribute`.\n\n```csharp\nCoconaApp.Run<Program>(args, options =>\n{\n    // If the option value is `false`, All command methods require `CommandAttribute`.\n    options.TreatPublicMethodsAsCommands = false;\n});\n```\n\n### Options\nCocona exposes method parameters as command-line options (also known as flags).\n\n```csharp\n// This command accepts `--name <string>` and `--hey` options.\napp.AddCommand((string name, bool hey) => { ... });\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\n```csharp\n// This command accepts `--name <string>` and `--hey` options.\npublic void Hello(string name, bool hey) { ... }\n```\n</details>\n\nIf the parameter of a method is defined as nullable, Cocona will treat them as non-mandatory option for a command. (That is, the parameters are treated as **required option** by default excepts boolean).\nIf a parameter is boolean, it's assumed that `false` default value is specified.\n\n```csharp\n// `--name` is non-mandatory option.\n// If the user runs the application without this option, the parameter will be `null`.\napp.AddCommand((string? name) => { ... });\n```\n\n<details><summary>Optional with default value (Class-based style)</summary>\n\nIf method parameters are [optional argument](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/named-and-optional-arguments#optional-arguments), Cocona treats those as optional command options. (That is, the parameters are treated as **required option** by default excepts boolean).\nIf a parameter is boolean, it's assumed that `false` default value is specified.\n\n```csharp\n// `--name \"default user\"` is specified implicity.\npublic void Hello(string name = \"default user\") { ... }\n```\n</details>\n\nDo you want to use short-name option `-f` instead of `--force`?\nYou can specify short-name to an option using `OptionAttribute`.\n\n```csharp\n// The command accepts `-f` or `--force` option.\n// Cocona's command-line parser accepts getopt-like styles. See below.\n// $ remove --force --recursive\n// $ remove -r -f\n// $ remove -rf\napp.AddCommand(([Option('f')]bool force, [Option('r')]bool recursive) => { ... });\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5))</summary>\n\n```csharp\n// The command accepts `-f` or `--force` option.\n// Cocona's command-line parser accepts getopt-like styles. See below.\n// $ remove --force --recursive\n// $ remove -r -f\n// $ remove -rf\npublic void Remove([Option('f')]bool force, [Option('r')]bool recursive) { ... }\n```\n</details>\n\nIf a parameter is `T[]` or `IEnumerable<T>`, a command accepts one or more options by the same name.\n\n```csharp\n// $ compile -I../path/to/foo.h -I/usr/include/bar.h -I/usr/include/baz.h nantoka.c\n// include = new [] { \"../path/to/foo.h\", \"/usr/include/bar.h\", \"/usr/include/baz.h\" };\napp.AddCommand(([Option('I')]string[] include, [Argument]string file) => { ... });\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5))</summary>\n\n```csharp\n// $ compile -I../path/to/foo.h -I/usr/include/bar.h -I/usr/include/baz.h nantoka.c\n// include = new [] { \"../path/to/foo.h\", \"/usr/include/bar.h\", \"/usr/include/baz.h\" };\npublic void Compile([Option('I')]string[] include, [Argument]string file) { ... }\n```\n</details>\n\nYou can also specify a description for options that appear in the help.\n\n```csharp\napp.AddCommand((\n    [Option(Description = \"Description of the option\")] int value,\n    [Argument(Description = \"Description of the argument\")]string arg\n) => { ... });\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5))</summary>\n\n```csharp\npublic void HasDescription([Option(Description = \"Description of the option\")] int value, [Argument(Description = \"Description of the argument\")]string arg) { ... }\n```\n</details>\n\n```\nUsage: CoconaSample.InAction.CommandOptions has-description [--value <Int32>] [--help] arg\n\nArguments:\n  0: arg    Description of the argument (Required)\n\nOptions:\n  --value <Int32>    Description of the option (Required)\n  -h, --help         Show help message\n```\n\n- See also: [CoconaSample.InAction.CommandOptions](samples/InAction.CommandOptions)\n\n### Arguments\nCommand-line arguments are defined as method parameters as same as options.\n\n```csharp\n// ./app alice karen\napp.AddCommand(([Argument]string from, [Argument]string to) => { ... });\n```\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\n```csharp\n// ./app alice karen\npublic void Hello([Argument]string from, [Argument]string to) { ... }\n```\n</details>\n\nYou can define a parameter as `T[]`. It allows defining `cp`-like command which accepts many file paths and one destination path (`cp file1 file2 file3 dest`).\n\n```csharp\n// ./copy file1 file2 file3 dest\napp.AddCommand(([Argument]string[] src, [Argument]string dest) => { ... });\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\n```csharp\n// ./copy file1 file2 file3 dest\npublic void Copy([Argument]string[] src, [Argument]string dest) { ... }\n```\n</details>\n\n- See also: [CoconaSample.InAction.ManyArguments](samples/InAction.ManyArguments)\n\n### Sub-commands\n\nYou can add multiple commands with names and expose them as sub-commands. You can implement an application that has sub-commands similar to `dotnet`, `git`, `kubectl` etc...\n\n```csharp\nvar app = CoconaApp.Create();\napp.AddCommand(\"hello\", ([Argument]string name) => Console.WriteLine($\"Hello {name}!\"))\n    .WithDescription(\"Say hello\");\napp.AddCommand(\"bye\", ([Argument]string name) => Console.WriteLine($\"Goodbye {name}!\"))\n    .WithDescription(\"Say goodbye\");\napp.Run();\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\nIf a command type has more than one public method or `[Command]`, those commands are exposed as sub-commands. You can implement an application that has sub-commands similar to `dotnet`, `git`, `kubectl` etc...\n\n```csharp\nstatic void Main(string[] args)\n{\n    CoconaApp.Run<Program>(args);\n}\n\n[Command(Description = \"Say hello\")]\npublic void Hello([Argument]string name)\n{\n    Console.WriteLine($\"Hello {name}!\");\n}\n\n[Command(Description = \"Say goodbye\")]\npublic void Bye([Argument]string name)\n{\n    Console.WriteLine($\"Goodbye {name}!\");\n}\n```\n</details>\n\n```bash\n$ ./SubCommandApp\nUsage: SubCommandApp [command]\nUsage: SubCommandApp [--help] [--version]\n\nSubCommandApp\n\nCommands:\n  hello    Say hello\n  bye      Say goodbye\n\nOptions:\n  -h, --help    Show help message\n  --version     Show version\n```\n\nWhen a user mistypes a command, Cocona prints command autogenerated suggestions.\n\n```bash\n$ ./SubCommandApp hell\nError: 'hell' is not a command. See '--help' for usage.\n\nSimilar commands:\n  hello\n```\n\n- See also: [CoconaSample.GettingStarted.SubCommandApp](samples/GettingStarted.SubCommandApp)\n\n##### Nested sub-commands\n\nCocona also supports nested sub-commands. Specify the class that has nested sub-commands using `AddSubCommand` method.\n\n```csharp\nvar app = CoconaApp.Create();\n// ./myapp info\napp.AddCommand(\"info\", () => Console.WriteLine(\"Show information\"));\n\n// ./myapp server [command]\napp.AddSubCommand(\"server\", x =>\n{\n    x.AddCommand(\"start\", () => Console.WriteLine(\"Start\"));\n    x.AddCommand(\"stop\", () => Console.WriteLine(\"Stop\"));\n})\n.WithDescription(\"Server commands\");\n\n// ./myapp client [command]\napp.AddSubCommand(\"client\", x =>\n{\n    x.AddCommand(\"connect\", () => Console.WriteLine(\"Connect\"));\n    x.AddCommand(\"disconnect\", () => Console.WriteLine(\"Disconnect\"));\n})\n.WithDescription(\"Client commands\");\n\napp.Run();\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\nCocona also supports nested sub-commands. Specify the class that has nested sub-commands using `HasSubCommands` attribute.\n\n```csharp\n[HasSubCommands(typeof(Server), Description = \"Server commands\")]\n[HasSubCommands(typeof(Client), Description = \"Client commands\")]\nclass Program\n{\n    static void Main(string[] args) => CoconaApp.Run<Program>(args);\n\n    // ./myapp info\n    public void Info() => Console.WriteLine(\"Show information\");\n}\n\n// ./myapp server [command]\nclass Server\n{\n    public void Start() => Console.WriteLine(\"Start\");\n    public void Stop() => Console.WriteLine(\"Stop\");\n}\n\n// ./myapp client [command]\nclass Client\n{\n    public void Connect() => Console.WriteLine(\"Connect\");\n    public void Disconnect() => Console.WriteLine(\"Disconnect\");\n}\n```\n</details>\n\n```bash\n$ ./SubCommandApp\nUsage: SubCommandApp [command]\nUsage: SubCommandApp [--help] [--version]\n\nSubCommandApp\n\nCommands:\n  info\n  server    Server commands\n  client    Client commands\n\nOptions:\n  -h, --help    Show help message\n  --version     Show version\n\n$ ./SubCommandApp server\nUsage: SubCommandApp server [command]\nUsage: SubCommandApp server [--help]\n\nSubCommandApp\n\nCommands:\n  start\n  stop\n\nOptions:\n  -h, --help    Show help message\n```\n\n#### PrimaryCommand\n```csharp\nvar app = CoconaApp.Create();\napp.AddCommand((bool foo, string bar) => { ... }); // Primary command\n\napp.AddCommand(\"hello\", () => { ... });\napp.AddCommand(\"goodbye\", () => { ... });\napp.Run();\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\n```csharp\n[PrimaryCommand]\npublic void Primary(bool foo, string bar) { ... }\n\n[Command]\npublic void Hello() { ... }\n\n[Command]\npublic void Goodbye() { ... }\n```\n</details>\n\n### Option-like commands\nThe option-like command is a way to achieve an independent command that at first glance, looks like an option in a command.\n\nFor example, easy to understand examples like `--version` and `--help`.\nThese are the options of a command, but they behave as a command when specified.\n\n```csharp\nvar app = CoconaApp.Create();\napp.AddCommand(() => Console.WriteLine(\"Execute\"))\n    .OptionLikeCommand(x =>\n    {\n        x.AddCommand(\"hello\", ([Argument]string name) => Console.WriteLine($\"Hello {name}!\"))\n            .WithAliases('f');\n    });\napp.Run();\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\n```csharp\n[OptionLikeCommand(\"hello\", new[] {'f'}, typeof(Program), nameof(Hello))]\npublic void Execute()\n    => Console.WriteLine(\"Execute\");\n\nprivate void Hello([Argument]string name)\n    => Console.WriteLine($\"Hello {name}!\");\n```\n</details>\n\n```bash\n$ ./myapp\nExecute\n\n$ ./myapp --hello Alice\nHello Alice!\n```\n\n- See: [samples/Advanced.OptionLikeCommand](samples/Advanced.OptionLikeCommand)\n\n##### Limitations\n- Any previous options or arguments specified by OptionLikeCommand will be ignored.\n    - Example: If `--foo --bar --optionlikecommand --baz arg0` and `--optionlikecommand` is an Option-like command, the command will be passed `--baz arg0`.\n- Arguments are not displayed in help.\n\n## Cocona in action\n\n### Parameter set\nCocona has a mechanism called Parameter set that defines common parameters for multiple commands.\nFor example, if every command receives a user name, host name, etc., it would be annoying to define them in a method for each command.\n\nA class or `record` implements the `ICommandParameterSet` interface and treats it as a Parameter set.\n\n- See: [samples/InAction.ParameterSet](samples/InAction.ParameterSet)\n\n#### By parameterized constructor (includes record class)\nIf a class (or record class) has a parameterized constructor, it is treated as part of the definition of a command method.\n\n```csharp\npublic record CommonParameters(\n    [Option('t', Description = \"Specifies the remote host to connect.\")]\n    string Host,\n    [Option('p', Description = \"Port to connect to on the remote host.\")]\n    int Port,\n    [Option('u', Description = \"Specifies the user to log in as on the remote host.\")]\n    string User = \"root\",\n    [Option('f', Description = \"Perform without user confirmation.\")]\n    bool Force = false\n) : ICommandParameterSet;\n\npublic void Add(CommonParameters commonParams, [Argument] string from, [Argument] string to)\n    => Console.WriteLine($\"Add: {commonParams.User}@{commonParams.Host}:{commonParams.Port} {(commonParams.Force ? \" (Force)\" : \"\")}\");\n\npublic void Update(CommonParameters commonParams, [Option('r', Description = \"Traverse recursively to perform.\")] bool recursive, [Argument] string path)\n    => Console.WriteLine($\"Update: {commonParams.User}@{commonParams.Host}:{commonParams.Port} {(commonParams.Force ? \" (Force)\" : \"\")}\");\n```\n\n#### By properties (parameter-less constructor)\nIf a class has a parameter-less constructor, you can mark the public property as `Option` or `Argument`.\n\n**NOTE: Option defined as a property is treated as required by default. If you want a non-required Option to have a default value, mark it with `HasDefaultValue` attribute.**\n\n```csharp\npublic class CommonParameters : ICommandParameterSet\n{\n    [Option('t', Description = \"Specifies the remote host to connect.\")]\n    public string Host { get; set; }\n\n    [Option('p', Description = \"Port to connect to on the remote host.\")]\n    public int Port { get; set; }\n\n    [Option('u', Description = \"Specifies the user to log in as on the remote host.\")]\n    [HasDefaultValue]\n    public string User  { get; set; } = \"root\";\n\n    [Option('f', Description = \"Perform without user confirmation.\")]\n    public bool Force  { get; set; } = false;\n}\n\npublic void Add(CommonParameters commonParams, [Argument] string from, [Argument] string to)\n    => Console.WriteLine($\"Add: {commonParams.User}@{commonParams.Host}:{commonParams.Port} {(commonParams.Force ? \" (Force)\" : \"\")}\");\n\npublic void Update(CommonParameters commonParams, [Option('r', Description = \"Traverse recursively to perform.\")] bool recursive, [Argument] string path)\n    => Console.WriteLine($\"Update: {commonParams.User}@{commonParams.Host}:{commonParams.Port} {(commonParams.Force ? \" (Force)\" : \"\")}\");\n```\n\n\n### Exit code\n```csharp\n// Exit Code: 0\npublic void NoReturn() { }\n\n// Exit Code: 123\npublic int Return() { return 123; }\n\n// Exit Code: 255\npublic async Task<int> ReturnAsync() { return 255; }\n\n// Exit Code: -1\npublic async ValueTask<int> ReturnValueTaskAsync() { return -1; }\n\n// Exit Code: 128\npublic void Throw() { throw new CommandExitedException(128); }\n```\n\n- See also: [CoconaSample.InAction.ExitCode](samples/InAction.ExitCode)\n\n### Validation\nCocona can use attributes to validate options and arguments. It is similar to ASP.NET Core MVC. \n\n.NET BCL (`System.ComponentModel.DataAnnotations`) has some pre-defined attributes:\n\n- `RangeAttribute`\n- `MaxLengthAttribute`\n- `MinLengthAttribute`\n- ...\n\nIf you want to implement custom validation attribute, it should inherit `System.ComponentModel.DataAnnotations.ValidationAttribute` attribute. \n\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        CoconaApp.Run<Program>(args);\n    }\n\n    public void Run([Range(1, 128)]int width, [Range(1, 128)]int height, [Argument][PathExists]string filePath)\n    {\n        Console.WriteLine($\"Size: {width}x{height}\");\n        Console.WriteLine($\"Path: {filePath}\");\n    }\n}\n\nclass PathExistsAttribute : ValidationAttribute\n{\n    protected override ValidationResult IsValid(object value, ValidationContext validationContext)\n    {\n        if (value is string path && (Directory.Exists(path) || Directory.Exists(path)))\n        {\n            return ValidationResult.Success;\n        }\n        return new ValidationResult($\"The path '{value}' is not found.\");\n    }\n}\n```\n\n- See also: [CoconaSample.InAction.Validation](samples/InAction.Validation)\n\n### Shutdown event handling\n\n```csharp\napp.AddCommand(async (CoconaAppContext ctx) =>\n{\n    while (!ctx.CancellationToken.IsCancellationRequested)\n    {\n        await Task.Delay(100);\n    }\n});\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\n```csharp\nclass Program : CoconaConsoleAppBase\n{\n    ...\n    public async Task RunAsync()\n    {\n        while (!Context.CancellationToken.IsCancellationRequested)\n        {\n            await Task.Delay(100);\n        }\n    }\n}\n```\n\nAlternatively, you can use `ICoconaAppContextAccessor` and `CoconaAppContext` to access `CancellationToken`.\n\n```csharp\npublic async Task RunAsync([FromService]ICoconaAppContextAccessor contextAccessor)\n{\n    var ctx = contextAccessor.Current ?? throw new InvalidOperationException();\n    while (!ctx.CancellationToken.IsCancellationRequested)\n    {\n        await Task.Delay(100);\n    }\n}\n```\n</details>\n\n- See also: [CoconaSample.InAction.HandleShutdownSignal](samples/InAction.HandleShutdownSignal)\n\n### Command filter\nCocona has filter mechanism like ASP.NET Core's action filter. Filters allow custom processing before or after you run a command.\n\n- `ICommandFilter` interface\n- `CommandFilterAttribute` attribute\n- `IFilterProvider` interface\n- `IFilterMetadata` interface\n\n```csharp\nvar app = CoconaApp.Create();\n\n// Add a command with command filters.\napp.AddCommand(() =>\n    {\n        Console.WriteLine($\"Hello Konnichiwa\");\n    })\n    .WithFilter(new SampleCommandFilter())\n    .WithFilter(async (ctx, next) =>\n    {\n        // You can declare and apply a filter using a delegate.\n        return await next(ctx);\n    });\n\n// Add a command filter and apply it to commands after this call.\napp.UseFilter(new MyFilter());\n\nclass SampleCommandFilterAttribute : CommandFilterAttribute\n{\n    public override async ValueTask<int> OnCommandExecutionAsync(CoconaCommandExecutingContext ctx, CommandExecutionDelegate next)\n    {\n        Console.WriteLine($\"Before Command: {ctx.Command.Name}\");\n        try\n        {\n            return await next(ctx);\n        }\n        finally\n        {\n            Console.WriteLine($\"End Command: {ctx.Command.Name}\");\n        }\n    }\n}\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        CoconaApp.Run<Program>(args);\n    }\n\n    [SampleCommandFilter]\n    public void Hello()\n    {\n        Console.WriteLine($\"Hello Konnichiwa\");\n    }\n}\n\nclass SampleCommandFilterAttribute : CommandFilterAttribute\n{\n    public override async ValueTask<int> OnCommandExecutionAsync(CoconaCommandExecutingContext ctx, CommandExecutionDelegate next)\n    {\n        Console.WriteLine($\"Before Command: {ctx.Command.Name}\");\n        try\n        {\n            return await next(ctx);\n        }\n        finally\n        {\n            Console.WriteLine($\"End Command: {ctx.Command.Name}\");\n        }\n    }\n}\n```\n</details>\n\n- See also: [CoconaSample.InAction.CommandFilter](samples/InAction.CommandFilter)\n\n### Dependency Injection\nIf a constructor has parameters, Cocona injects an instance obtained from IServiceProvider into the parameter. \n\n```csharp\nvar builder = CoconaApp.CreateBuilder();\nbuilder.Services.AddTransient<MyService>();\n\nvar app = builder.Build();\napp.AddCommand((MyService myService) =>\n{\n    myService.Hello(\"Hello Konnichiwa!\");\n});\napp.Run();\n\nclass MyService\n{\n    private readonly ILogger _logger;\n\n    public MyService(ILogger<MyService> logger)\n    {\n        _logger = logger;\n    }\n\n    public void Hello(string message)\n    {\n        _logger.LogInformation(message);\n    }\n}\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\nIf a constructor has parameters, Cocona injects an instance obtained from IServiceProvider into the parameter. Cocona will also inject an instance into the parameter if a command method parameter is marked as `[FromService]`.\n\n```csharp\nclass Program\n{\n    public Program(ILogger<Program> logger)\n    {\n        logger.LogInformation(\"Create Instance\");\n    }\n\n    static void Main(string[] args)\n    {\n        CoconaApp.Create()\n            .ConfigureServices(services =>\n            {\n                services.AddTransient<MyService>();\n            })\n            .Run<Program>(args);\n    }\n\n    public void Hello([FromService]MyService myService)\n    {\n        myService.Hello(\"Hello Konnichiwa!\");\n    }\n}\n\nclass MyService\n{\n    private readonly ILogger _logger;\n\n    public MyService(ILogger<MyService> logger)\n    {\n        _logger = logger;\n    }\n\n    public void Hello(string message)\n    {\n        _logger.LogInformation(message);\n    }\n}\n```\n</details>\n\n- See also: [CoconaSample.InAction.DependencyInjection](samples/InAction.DependencyInjection)\n\n### Configuration\n- See also: [CoconaSample.InAction.AppConfiguration](samples/InAction.AppConfiguration)\n\n### Logging\n\n```csharp\nvar builder = CoconaApp.CreateBuilder();\nbuilder.Logging.AddDebug();\n\nvar app = builder.Build();\n\napp.AddCommand((ILogger<Program> logger) => logger.LogInformation(\"Hello Konnichiwa!\"));\n\napp.Run();\n```\n\n<details><summary>Class-based style (for .NET Standard / .NET 5)</summary>\n\n```csharp\nclass Program : CoconaConsoleAppBase\n{\n    static void Main(string[] args)\n    {\n        CoconaApp.Create()\n            .ConfigureLogging(logging =>\n            {\n                logging.AddDebug();\n            })\n            .Run<Program>(args);\n    }\n\n    public async Task RunAsync()\n    {\n        Context.Logger.LogInformation(\"Hello Konnichiwa!\");\n    }\n}\n```\n</details>\n\n### Shell command-line completion\nCocona provides support for shell command-line completion (also known as tab completion).\n\n![Tab shell completion](https://user-images.githubusercontent.com/9012/83354785-effcd400-a395-11ea-8226-c21e114c746f.gif)\n\nCocona generates a shell script for command-line completion from a command definition and allows users to use command-line completion by loading it. The `--completion` built-in option is used to specify the name of a shell to generate a script.\n\n```sh\n$ source <(./myapp --completion bash)\nor\n% ./myapp --completion zsh > ~/.zsh/functions\n```\n\nCurrently, The supported shells are `bash` and `zsh`.\n\nThis feature is **disabled** by default, or you can set the `EnableShellCompletionSupport` option to `true` if you need it.\n\nIt is also possible to dynamically generate command-line completion candidates and to prepare candidates at script generation time. Please see the sample below for more details.\n\n- See: [samples/Advanced.ShellCompletionCandidates](samples/Advanced.ShellCompletionCandidates)\n\n## Performance & Cocona.Lite\n`Microsoft.Extensions.*` are powerful but little heavy libraries. If you don't need`Microsoft.Extensions.*`, you can use a lightweight version of Cocona. (named [Cocona.Lite](https://www.nuget.org/packages/Cocona.Lite/))\n\n### Feature & Limitation\n- Almost the same features and APIs as Cocona (command-line, help, etc.)\n- No `Microsoft.Extensions.*` dependencies\n    - No Logging, DI, Configuration are provided\n- Fewer overheads\n- The minimal Dependency Injection function\n\n### Installing & How to use\nJust install NuGet package `Cocona.Lite` instead of `Cocona`.\n\n```sh\n$ dotnet add package Cocona.Lite\n```\n\nThen in your source code, use `CoconaLiteApp` class instead of `CoconaApp` class.\n\n```csharp\nCoconaLiteApp.Run(() => { ... });\n```\n\n```csharp\nvar app = CoconaLiteApp.Create();\napp.AddCommand(() => { ... });\napp.Run();\n```\n\n```csharp\nstatic void Main(string[] args)\n{\n    CoconaLiteApp.Run<Program>(args);\n}\n```\n\n## Advanced\n\n### Localization\nMicrosoft.Extensions.Localization can be used to localize your application. Please refer to the sample code for details.\n\n```csharp\n// Register Microsoft.Extensions.Localization and ICoconaLocalizer services\n// Cocona uses `ICoconaLocalizer` to localize command descriptions.\nvar builder = CoconaApp.CreateBuilder();\nbuilder.Services.AddLocalization(options =>\n{\n    options.ResourcesPath = \"Resources\";\n});\n\n// `MicrosoftExtensionLocalizationCoconaLocalizer` is not included in Cocona core library.\nbuilder.Services.TryAddTransient<ICoconaLocalizer, MicrosoftExtensionLocalizationCoconaLocalizer>();\n\nvar app = builder.Build();\napp.AddCommand(\"hello\", ([Argument(Description = \"Name\")]string name, IStringLocalizer<Program> localizer) =>\n    {\n        // Get a localized text from Microsoft.Extensions.Localization.IStringLocalizer (same as ASP.NET Core)\n        Console.WriteLine(localizer.GetString(\"Hello {0}!\", name));\n    })\n    .WithDescription(\"Say Hello\");\napp.Run();\n```\n\n- See also: [CoconaSample.Advanced.Localization](samples/Advanced.Localization)\n\n\n### Hide command from help\n\n```csharp\nvar app = CoconaApp.Create();\napp.AddCommand(\"hello\", (string name) =>\n    {\n        Console.WriteLine(\"Hello {0}!\", name);\n    });\napp.AddCommand(\"secret-command\", (string name) =>\n    {\n        Console.WriteLine(\"ð\");\n    })\n    .WithMetadata(new HiddenAttribute());\napp.Run();\n```\n\n### Help customization\n- See also: [CoconaSample.Advanced.HelpTransformer](samples/Advanced.HelpTransformer)\n\n### CommandMethodForwardedTo attribute\nThe `CommandMethodForwardedTo` attribute allows you to specify that the substance of the specified command method is a different method and that the operation should be forwarded.\nIf this attribute is given to a command method, the destination's attribute and its implementation are used. Excepts for the `Command` and `Hidden` attributes specified by the method.\n\nFor example, it can be used if the command implementation is defined in an external assembly or to call a built-in command (such as help) or compatibility purposes.\n\n```csharp\n[CommandMethodForwardedTo(typeof(BuiltInOptionLikeCommands), nameof(BuiltInOptionLikeCommands.ShowHelp))]\npublic void MyHelp()\n    => throw new NotSupportedException(); // NOTE: The method body and parameters used is BuiltInOptionLikeCommands.ShowHelp.\n```\n\n- See: [samples/Advanced.CommandMethodForwarding](samples/Advanced.CommandMethodForwarding)\n\n### IgnoreUnknownOptions attribute\nCocona treats unknown options as errors by default.\nNow, you can set the IgnoreUnknownOptions attribute to ignore unknown options.\n\n### GenericHost integration\n\nCocona can be integrated with GenericHost of Microsoft.Extensions.Hosting.\nYou can register the services with `UseCocona` extension method.\n\n```csharp\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        await Host.CreateDefaultBuilder()\n            .ConfigureCocona(args, new[] { typeof(Program) })\n            .Build()\n            .RunAsync();\n    }\n\n    public void Hello()\n    {\n        Console.WriteLine($\"Hello Konnichiwa!\");\n    }\n}\n```\n\n- See: [samples/Advanced.GenericHost](samples/Advanced.GenericHost)\n\n## Related projects\n- [Cysharp/ConsoleAppFramework](https://github.com/Cysharp/ConsoleAppFramework): ConsoleAppFramework heavily inspired Cocona.\n\n## License\nMIT License\n```\nCopyright Â© 2020-present Mayuki Sawatari <mayuki@misuzilla.org>\n```\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.0771484375,
          "content": "{\n  \"sdk\": {\n    \"version\": \"8.0.100\",\n    \"rollForward\": \"latestFeature\"\n  }\n}"
        },
        {
          "name": "perf",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}