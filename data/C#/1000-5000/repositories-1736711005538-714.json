{
  "metadata": {
    "timestamp": 1736711005538,
    "page": 714,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MichaelGrafnetter/DSInternals",
      "stars": 1672,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.8349609375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Misc\n###############################################################################\n*.psd1 text\n*.rc text eol=crlf\n*.zip filter=lfs diff=lfs merge=lfs -text\n\n###############################################################################\n# Fix GitHub repo statistics\n###############################################################################\n*.h linguist-language=C++\nSrc/Microsoft.Database.Isam/* linguist-vendored\nSrc/Microsoft.Isam.Esent.Interop/* linguist-vendored\nScripts/Modules/* linguist-vendored\ndrsr.* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.080078125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\namd64/\nx86/\n[Bb]uild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studo 2015 cache/options directory\n.vs/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings \n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Private Keys\n*.pfx\n*.Private.snk\n*.key\n\n# Others\n*.[Cc]ache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.publishsettings\nnode_modules/\nbower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual C++ 2015 OpenDB\n*.VC.opendb\n\n# Binary Tools\n*.exe\n\n# MIDL generated code\n/Src/DSInternals.Replication.Interop/drsr.h\n/Src/DSInternals.Replication.Interop/drsr.cpp\n\n# Test Data\n[Tt]est[Dd]ata/\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "Keys",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.064453125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015-2025 Michael Grafnetter\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "Src",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 5.7880859375,
          "content": "# Azure Pipelines Build Configuration\n\ntrigger:\n  batch: true\n  branches:\n    include:\n    - master\n  paths:\n    include:\n    - Src/*\n\npr:\n  branches:\n    include:\n    - master\n  paths:\n      exclude:\n      - '**/*.md'\n\nvariables:\n  solution: '**/*.sln'\n  packagesFolder: 'Build/packages'\n\njobs:\n  - job: Test\n    displayName: 'Test'\n    pool:\n      vmImage: 'windows-2022'\n    variables:\n      buildConfiguration: 'Debug'\n    steps:\n    - task: NuGetToolInstaller@1\n      inputs:\n        versionSpec: '5.x'\n\n    - task: NuGetCommand@2\n      displayName: 'NuGet Restore Packages'\n      inputs:\n        command: 'restore'\n        restoreSolution: '$(solution)'\n\n    - task: VSBuild@1\n      displayName: 'VSBuild ($(buildConfiguration) x86)'\n      inputs:\n        solution: '$(solution)'\n        platform: 'x86'\n        configuration: '$(buildConfiguration)'\n        restoreNugetPackages: false\n\n    - task: VSBuild@1\n      displayName: 'VSBuild ($(buildConfiguration) x64)'\n      inputs:\n        solution: '$(solution)'\n        platform: 'x64'\n        configuration: '$(buildConfiguration)'\n        restoreNugetPackages: false\n\n    - task: VSBuild@1\n      displayName: 'VSBuild ($(buildConfiguration) ARM64)'\n      inputs:\n        solution: '$(solution)'\n        platform: 'ARM64'\n        configuration: '$(buildConfiguration)'\n        restoreNugetPackages: false\n\n    - task: VSTest@2\n      displayName: 'VSTest Unit Tests'\n      inputs:\n        testRunTitle: 'VSTest Unit Tests'\n        testSelector: 'testAssemblies'\n        testAssemblyVer2: 'Build/**/DSInternals/*.Test.dll'\n        codeCoverageEnabled: false\n        configuration: '$(buildConfiguration)'\n\n # Only proceed with the Release build if Test succeeds and the build was requested manually.\n\n  - job: Release\n    displayName: 'Release'\n    dependsOn: Test\n    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))\n    pool:\n      vmImage: 'windows-2022'\n    variables:\n      buildConfiguration: 'Release'\n    steps:\n    - task: NuGetToolInstaller@1\n      inputs:\n        versionSpec: '5.x'\n\n    - task: NuGetCommand@2\n      displayName: 'NuGet Restore Packages'\n      inputs:\n        command: 'restore'\n        restoreSolution: '$(solution)'\n\n    - task: DownloadSecureFile@1\n      displayName: 'Download SNK File'\n      inputs:\n        secureFile: 'DSInternals.Private.snk'\n\n    - task: CopyFiles@2\n      displayName:  'Copy SNK File to Keys'\n      inputs:\n        sourceFolder: '$(Agent.TempDirectory)'\n        contents: '*.snk' \n        targetFolder: 'Keys'\n\n    - task: VSBuild@1\n      displayName: 'VSBuild ($(buildConfiguration) x86)'\n      inputs:\n        solution: '$(solution)'\n        platform: 'x86'\n        configuration: '$(buildConfiguration)'\n        restoreNugetPackages: false\n\n    - task: VSBuild@1\n      displayName: 'VSBuild ($(buildConfiguration) x64)'\n      inputs:\n        solution: '$(solution)'\n        platform: 'x64'\n        configuration: '$(buildConfiguration)'\n        restoreNugetPackages: false\n\n    - task: VSBuild@1\n      displayName: 'VSBuild ($(buildConfiguration) ARM64)'\n      inputs:\n        solution: '$(solution)'\n        platform: 'ARM64'\n        configuration: '$(buildConfiguration)'\n        restoreNugetPackages: false\n\n    - task: PowerShell@2\n      displayName: 'ZIP Pack (PowerShell Module)'\n      inputs:\n        targetType: 'filePath'\n        filePath: 'Scripts/Pack-PSModule.ps1'\n\n    - task: PowerShell@2\n      displayName: 'Chocolatey Pack (PowerShell Module)'\n      inputs:\n        targetType: 'filePath'\n        filePath: 'Scripts/Pack-Chocolatey.ps1'\n\n    - task: NuGetCommand@2\n      displayName: 'NuGet Pack (DSInternals.Common)'\n      inputs:\n        command: 'pack'\n        packagesToPack: '**/DSInternals.Common.csproj'\n        configuration: '$(BuildConfiguration)'\n        packDestination: '$(packagesFolder)/NuGet'\n        includeReferencedProjects: true\n        verbosityPack: 'detailed'\n\n    - task: NuGetCommand@2\n      displayName: 'NuGet Pack (DSInternals.DataStore)'\n      inputs:\n        command: 'pack'\n        packagesToPack: '**/DSInternals.DataStore.csproj'\n        configuration: '$(BuildConfiguration)'\n        packDestination: '$(packagesFolder)/NuGet'\n        includeReferencedProjects: true\n        verbosityPack: 'detailed'\n\n    - task: NuGetCommand@2\n      displayName: 'NuGet Pack (DSInternals.Replication)'\n      inputs:\n        command: 'pack'\n        packagesToPack: '**/DSInternals.Replication.csproj'\n        configuration: '$(BuildConfiguration)'\n        packDestination: '$(packagesFolder)/NuGet'\n        includeReferencedProjects: true\n        verbosityPack: 'detailed'\n\n    - task: NuGetCommand@2\n      displayName: 'NuGet Pack (DSInternals.SAM)'\n      inputs:\n        command: 'pack'\n        packagesToPack: '**/DSInternals.SAM.csproj'\n        configuration: '$(BuildConfiguration)'\n        packDestination: '$(packagesFolder)/NuGet'\n        includeReferencedProjects: true\n        verbosityPack: 'detailed'\n\n    - task: PublishBuildArtifacts@1\n      displayName: 'Publish NuGet Packages'\n      inputs:\n        pathtoPublish: '$(packagesFolder)/NuGet'\n        artifactName: 'NuGet' \n\n    - task: PublishBuildArtifacts@1\n      displayName: 'Publish Chocolatey Package'\n      inputs:\n        pathtoPublish: '$(packagesFolder)/Chocolatey'\n        artifactName: 'Chocolatey' \n\n    - task: PublishBuildArtifacts@1\n      displayName: 'Publish GitHub Package'\n      inputs:\n        pathtoPublish: '$(packagesFolder)/Module'\n        artifactName: 'GitHub' \n\n    - task: PowerShell@2\n      displayName: 'Run Smoke Tests'\n      inputs:\n        targetType: 'filePath'\n        filePath: 'Scripts/Invoke-SmokeTests.ps1'\n\n    - task: PublishTestResults@2\n      displayName: 'Publish Smoke Test Results'\n      inputs:\n        testRunTitle: 'Pester Smoke Tests'\n        testResultsFormat: 'NUnit'\n        testResultsFiles: '**/*.xml'\n        searchFolder: 'TestResults'\n"
        },
        {
          "name": "codeql-analysis.yml",
          "type": "blob",
          "size": 1.666015625,
          "content": "name: \"CodeQL\"\n\non:\n  push:\n    branches: [ master ]\n  pull_request:\n    # The branches below must be a subset of the branches above\n    branches: [ master ]\n  schedule:\n    - cron: '40 17 * * 6'\n\njobs:\n  analyze:\n    name: Analyze\n    runs-on: ubuntu-latest\n    permissions:\n      actions: read\n      contents: read\n      security-events: write\n\n    strategy:\n      fail-fast: false\n      matrix:\n        language: [ 'cpp', 'csharp' ]\n\n    steps:\n    - name: Checkout repository\n      uses: actions/checkout@v3\n\n    # Initializes the CodeQL tools for scanning.\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n      with:\n        languages: ${{ matrix.language }}\n        # If you wish to specify custom queries, you can do so here or in a config file.\n        # By default, queries listed here will override any specified in a config file.\n        # Prefix the list here with \"+\" to use these queries and those in the config file.\n        # queries: ./path/to/local/query, your-org/your-repo/queries@main\n\n    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).\n    # If this step fails, then you should remove it and run the build manually (see below)\n    - name: Autobuild\n      uses: github/codeql-action/autobuild@v2\n\n    # ℹ️ Command-line programs to run using the OS shell.\n    # 📚 https://git.io/JvXDl\n\n    # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines\n    #    and modify them (or add more) to build your code if your project\n    #    uses a compiled language\n\n    #- run: |\n    #   make bootstrap\n    #   make release\n\n    - name: Perform CodeQL Analysis\n      uses: github/codeql-action/analyze@v2\n"
        }
      ]
    }
  ]
}