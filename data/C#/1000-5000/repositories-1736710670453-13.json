{
  "metadata": {
    "timestamp": 1736710670453,
    "page": 13,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "akkadotnet/akka.net",
      "stars": 4759,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".artifactignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "**/*\n!TestResults/*\n!bin/incrementalist.txt\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.6005859375,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc    diff=astextplain\n*.DOC    diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF    diff=astextplain\n*.rtf    diff=astextplain\n*.RTF    diff=astextplain\n\n# Needed for Mono build shell script\n*.sh\t-text eol=lf\n\n# Needed for API Approvals\n*.txt text eol=crlf\n\nbuild.sh eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.3125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Approval test outputs\n*.received.txt\n*.txt.bak\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n.fake/\nTestResults/\nPerfResults/\n*.lock.json\n\n# BenchmarkDotNet files\n[rR]esults/\n\n# dotTrace files\n*.dtp\n*.dtp.*\n\n# Visual Studo 2015 cache/options directory\n.vs/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings \n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\n*.[Cc]ache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\nbower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\ntools/\nbuild/\n.nuget/\n.dotnet/\n/src/core/Akka.API.Tests/CoreAPISpec.ApproveStreams.received.txt\nlaunchSettings.json\n.idea/\n\n# GhostDoc is a C# XML comment helper\n*.[Gg]host[Dd]oc.xml\n*.[Gg]host[Dd]oc.user.dic\n\n# CodeRush\n.cr/\n\n# Visual Studio Code\n.vscode/\n\n# NDepend\n*.ndproj\n/[Nn][Dd]epend[Oo]ut\n.ionide/symbolCache.db\n"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 0.1552734375,
          "content": "{\n    \"default\": true,\n    \"MD024\": false,\n    \"MD013\": false,\n    \"MD026\": false,\n    \"MD046\": false,\n    \"MD025\": false,\n    \"MD004\": {\"style\": \"asterisk\"}\n}"
        },
        {
          "name": ".markdownlintrc",
          "type": "blob",
          "size": 0.1552734375,
          "content": "{\n    \"default\": true,\n    \"MD024\": false,\n    \"MD013\": false,\n    \"MD026\": false,\n    \"MD046\": false,\n    \"MD025\": false,\n    \"MD004\": {\"style\": \"asterisk\"}\n}"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.2333984375,
          "content": "This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community.\nFor more information, see the [.NET Foundation Code of Conduct](https://dotnetfoundation.org/code-of-conduct).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.578125,
          "content": "Copyright (c) .NET Foundation and Contributors\nAll Rights Reserved\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.41796875,
          "content": "# Akka.NET\n\n![Akka.NET logo](https://raw.githubusercontent.com/akkadotnet/akka.net/dev/docs/shfb/icons/AkkaNetLogo.Normal.png)\n\n[![Discord](https://img.shields.io/discord/974500337396375553?style=flat&logo=discord&label=Join%20Akka.NET%20Discord)](https://discord.com/invite/GSCfPwhbWP)\n[![NuGet](https://img.shields.io/nuget/v/Akka.svg?style=flat-square)](https://www.nuget.org/packages/Akka)\n[![Nuget](https://img.shields.io/nuget/dt/Akka)](https://www.nuget.org/packages/Akka)\n\n\n**[Akka.NET](https://getakka.net/)** is a .NET port of the popular [Akka project](https://akka.io/) from the Scala / Java community. We are an idiomatic [.NET implementation of the actor model](https://petabridge.com/blog/akkadotnet-what-is-an-actor/) built on top of the .NET Common Language Runtime.\n\n* **Website**: [https://getakka.net/](https://getakka.net/)\n* **Twitter** üê¶: [AkkaDotNet](https://twitter.com/AkkaDotNet)\n* **Discussions** üì£: [Akka.NET GitHub Discussions](https://github.com/akkadotnet/akka.net/discussions)\n* **Chat** üí¨: [Akka.NET on Discord](https://discord.gg/GSCfPwhbWP)\n* **StackOverflow** ‚úîÔ∏è: [Akka.NET on StackOverflow](https://stackoverflow.com/questions/tagged/akka.net)\n\nAkka.NET is a [.NET Foundation](https://dotnetfoundation.org/) project.\n\n![.NET Foundation Logo](https://raw.githubusercontent.com/akkadotnet/akka.net/dev/docs/images/dotnetfoundationhorizontal.svg)\n\n## How is Akka.NET Used?\n\nAkka.NET can be used in-process or inside large, distributed real-time systems; we support a wide variety of use cases.\n\nAkka.NET can be used to solve the following types of problems:\n\n1. **Concurrency** - Akka.NET actors only process messages one-at-a-time and they do so in first in, first out (FIFO) order; this means that any application state internal to an actor is automatically thread-safe without having to use `lock`s or any other shared-memory synchronization mechanisms.\n2. **Stream Processing** - Akka.NET actors and [Akka.Streams](https://getakka.net/articles/streams/introduction.html) make it easy to build streaming applications, used for processing incoming streams of data or incoming streams of live events such as UI or network events inside native applications.\n3. **Event-Driven Programming** - actors make it easy to build event-driven applications, as actors' message-processing routines naturally express these types of designs.\n4. **Event Sourcing and CQRS** - [Akka.Persistence](https://getakka.net/articles/persistence/architecture.html), used by actors to make their state re-entrant and recoverable across restarts or migrations between nodes, natively supports event sourcing. [Akka.Persistence.Query](https://getakka.net/articles/persistence/persistence-query.html) can be used to compute CQRS-style projections and materialized views from Akka.Persistence data.\n5. **Location Transparency** - [Akka.Remote](https://getakka.net/articles/remoting/index.html) makes it simple for actors in remote processes to transparently communicate with each other.\n6. **Highly Available, Fault-Tolerant Distributed Systems** - [Akka.Cluster](https://getakka.net/articles/clustering/cluster-overview.html), [Akka.Cluster.Sharding](https://getakka.net/articles/clustering/cluster-sharding.html), and other tools built on top of Akka.Cluster make it possible to build highly available and fault-tolerant distributed systems by leveraging peer-to-peer programming models with topology-aware message routing and distribution.\n7. **Low Latency, High Throughput** - Akka.NET aims to be low latency and high throughput, processing 10s millions of messages per second in-memory and hundreds of thousands of messages per second over remote connections.\n\n## Where Can I Learn Akka.NET?\n\nYou can start by taking the [Akka.NET Bootcamp](https://learnakka.net/), but there are many other great [learning resources for Akka.NET Online](https://getakka.net/community/online-resources.html).\n\n* [Petabridge's Akka.NET Videos on YouTube](https://www.youtube.com/c/PetabridgeAcademy)\n* \"[.NET Conf - When and How to Use the Actor Model An Introduction to Akka.NET Actors](https://www.youtube.com/watch?v=0KnIMDoJpZs)\"\n* _[Reactive Applications with Akka.NET](https://www.manning.com/books/reactive-applications-with-akka-net)_\n* _[Akka.NET Succinctly](https://www.syncfusion.com/succinctly-free-ebooks/akka-net-succinctly)_\n\n## Build Status\n\n| Stage                                | Status                                                                                                                                                                                                                                                             |\n|------------------------------------- |------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Build                                | [![Build Status](https://dev.azure.com/dotnet/Akka.NET/_apis/build/status/akka.net/PR%20Validation?branchName=dev&jobName=Windows%20Build)](https://dev.azure.com/dotnet/Akka.NET/_build/latest?definitionId=84&branchName=dev)                                    |\n| NuGet Pack                           | [![Build Status](https://dev.azure.com/dotnet/Akka.NET/_apis/build/status/akka.net/PR%20Validation?branchName=dev&jobName=NuGet%20Pack)](https://dev.azure.com/dotnet/Akka.NET/_build/latest?definitionId=84&branchName=dev)                                       |\n| .NET Framework Unit Tests            | [![Build Status](https://dev.azure.com/dotnet/Akka.NET/_apis/build/status/akka.net/PR%20Validation?branchName=dev&jobName=.NET%20Framework%20Unit%20Tests%20(Windows))](https://dev.azure.com/dotnet/Akka.NET/_build/latest?definitionId=84&branchName=dev)        |\n| .NET Unit Tests (Windows)          | [![Build Status](https://dev.azure.com/dotnet/Akka.NET/_apis/build/status/akka.net/PR%20Validation?branchName=dev&jobName=.NET%20Unit%20Tests%20(Windows))](https://dev.azure.com/dotnet/Akka.NET/_build/latest?definitionId=84&branchName=dev)                |\n| .NET Unit Tests (Linux)            | [![Build Status](https://dev.azure.com/dotnet/Akka.NET/_apis/build/status/akka.net/PR%20Validation?branchName=dev&jobName=.NET%20Unit%20Tests%20(Linux))](https://dev.azure.com/dotnet/Akka.NET/_build/latest?definitionId=84&branchName=dev)                  |\n| .NET MultiNode Tests (Windows)     | [![Build Status](https://dev.azure.com/dotnet/Akka.NET/_apis/build/status/akka.net/PR%20Validation?branchName=dev&jobName=.NET%20Multi-Node%20Tests%20(Windows))](https://dev.azure.com/dotnet/Akka.NET/_build/latest?definitionId=84&branchName=dev)          |\n| .NET MultiNode Tests (Linux)       | [![Build Status](https://dev.azure.com/dotnet/Akka.NET/_apis/build/status/akka.net/PR%20Validation?branchName=dev&jobName=.NET%20Multi-Node%20Tests%20(Windows))](https://dev.azure.com/dotnet/Akka.NET/_build/latest?definitionId=84&branchName=dev)          |                                                                                                                                                                                                                                                                   |\n| Docs                                 | [![Build Status](https://dev.azure.com/petabridge/akkadotnet-tools/_apis/build/status/Akka.NET%20Docs?branchName=dev)](https://dev.azure.com/petabridge/akkadotnet-tools/_build/latest?definitionId=82&branchName=dev)                                             |\n\n\n## Install Akka.NET via NuGet\n\nIf you want to include Akka.NET in your project, you can [install it directly from NuGet](https://www.nuget.org/packages/Akka)\n\nTo install Akka.NET Distributed Actor Framework, run the following command in the Package Manager Console\n\n```\nPM> Install-Package Akka.Hosting\n```\n\n> [Akka.Hosting](https://github.com/akkadotnet/Akka.Hosting) includes the base Akka NuGet package and also provides an easy interface to integrate Akka.NET with the most-used parts of the Microsoft.Extensions ecosystem: Configuration, Logging, Hosting, and DependencyInjection. We encourage developers to adopt it.\n\nAnd if you need F# support:\n\n```\nPM> Install-Package Akka.FSharp\n```\n\n### Akka.NET Project Templates\n\nTo create your own Akka.NET projects using [our templates (Akka.Templates)](https://github.com/akkadotnet/akkadotnet-templates), install them via the `dotnet` CLI:\n\n```\ndotnet new install \"Akka.Templates::*\"\n```\n\nThis will make our templates available via `dotnet new` on the CLI _and_ as new project templates inside any .NET IDE such as Visual Studio or JetBrains Rider. You can view the full list of templates included in our package here: https://github.com/akkadotnet/akkadotnet-templates#available-templates\n\n## Builds\nPlease see [Building Akka.NET](https://getakka.net/community/contributing/build-process.html).\n\nTo access nightly Akka.NET builds, please [see the instructions here](http://getakka.net/community/getting-access-to-nightly-builds.html).\n\n## Support\nIf you need help getting started with Akka.NET, there's a number of great community resources online:\n\n* Subscribe to the Akka.NET project feed on Twitter: https://twitter.com/AkkaDotNet  (@AkkaDotNet)\n* Join the Akka.NET Discord: https://discord.gg/GSCfPwhbWP\n* Ask Akka.NET questions on Stack Overflow: http://stackoverflow.com/questions/tagged/akka.net\n\nIf you and your company are interested in getting professional Akka.NET support, you can [contact Petabridge for dedicated Akka.NET support](https://petabridge.com/).\n"
        },
        {
          "name": "RELEASE_NOTES.md",
          "type": "blob",
          "size": 108.703125,
          "content": "#### 1.5.35 January 7th 2024 ####\n\n*Placeholder for nightlies*\n\n#### 1.5.34 January 7th 2024 ####\n\n* [TestKit: Fix DelegatingSupervisorStrategy KeyNotFoundException](https://github.com/akkadotnet/akka.net/pull/7438)\n* [Core: Improve actor telemetry type name override](https://github.com/akkadotnet/akka.net/pull/7439)\n* [Sharding: Add `IShardingBufferMessageAdapter` to support tracing over sharding](https://github.com/akkadotnet/akka.net/pull/7441)\n\nTo [see the full set of changes in Akka.NET v1.5.34, click here](https://github.com/akkadotnet/akka.net/milestone/117?closed=1).\n\n3 contributors since release 1.5.33\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 2       | 311  | 16   | Gregorius Soedharmo |\n| 2       | 17   | 9    | Aaron Stannard      |\n| 1       | 1    | 1    | jasonmar            |\n\n#### 1.5.33 December 23rd 2024 ####\n\n* [Bump Akka.Analyzers from 0.2.5 to 0.3.0](https://github.com/akkadotnet/akka.net/pull/7415)\n* [Core: Throw better error message when `Stash()` stashes null message](https://github.com/akkadotnet/akka.net/pull/7425)\n* [Core: Fix `IWrappedMessage` and `IDeadLetterSuppression` handling](https://github.com/akkadotnet/akka.net/pull/7414)\n* [Core: Make actor start/stop telemetry descriptors overridable](https://github.com/akkadotnet/akka.net/pull/7434)\n* [Core: Fix `Result.FromTask` edge case handling](https://github.com/akkadotnet/akka.net/pull/7433)\n* [Remote: HandleStashedInbound performance improvement](https://github.com/akkadotnet/akka.net/pull/7409)\n* [TestKit: Make startup timeout configurable](https://github.com/akkadotnet/akka.net/pull/7423)\n* [TestKit: Make InternalTestActor override its SupervisionStrategy](https://github.com/akkadotnet/akka.net/pull/7221)\n* [Streams: Add custom log level argument to `Log` stage](https://github.com/akkadotnet/akka.net/pull/7424)\n\nTo [see the full set of changes in Akka.NET v1.5.33, click here](https://github.com/akkadotnet/akka.net/milestone/116?closed=1).\n\n4 contributors since release 1.5.32\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 9       | 513  | 117  | Aaron Stannard      |\n| 3       | 299  | 49   | Gregorius Soedharmo |\n| 1       | 32   | 1    | Yan Pitangui        |\n| 1       | 3    | 4    | Simon Cropp         |\n\n#### 1.5.32 December 4th 2024 ####\n\nAkka.NET v1.5.32 is a maintenance release that addresses several bugs.\n\n* [Cluster.Tools: Deprecate ClusterSingleton.Init() method](https://github.com/akkadotnet/akka.net/pull/7387)\n* [Remote: Ensure RemoteActorRef are serialized correctly when using multiple transports](https://github.com/akkadotnet/akka.net/pull/7393)\n* [Sharding: Harden event-sourced RememberEntities infrastructure against transient persistence failures](https://github.com/akkadotnet/akka.net/pull/7401)\n\nTo [see the full set of changes in Akka.NET v1.5.32, click here](https://github.com/akkadotnet/akka.net/milestone/115?closed=1).\n\n3 contributors since release 1.5.31\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 8       | 750  | 350  | Aaron Stannard      |\n| 5       | 505  | 15   | Gregorius Soedharmo |\n| 1       | 2    | 2    | Ran Trifon          |\n\n#### 1.5.31 November 11th 2024 ####\n\nAkka.NET v1.5.31 is a maintenance release that addresses several bugs and added new features.\n\n* [Persistence: Add logging for failed DeleteAsync() that was caused by failed SaveSnapshot()](https://github.com/akkadotnet/akka.net/pull/7360)\n* [Persistence: Fix RecoveryTick timer leak](https://github.com/akkadotnet/akka.net/pull/7343)\n* [Serialization.Hyperion: Fix serializer config bug](https://github.com/akkadotnet/akka.net/pull/7364)\n* [Sharding: Fix potential `ArgumentException` during shard re-balancing](https://github.com/akkadotnet/akka.net/pull/7367)\n* [Cluster: Fix multiple `Member` with the same `Address` crashing `ClusterDaemon`](https://github.com/akkadotnet/akka.net/pull/7371)\n* [Core: Fix `Stash` filtering out identical `Envelope`s](https://github.com/akkadotnet/akka.net/pull/7375)\n* [Streams: Fix `ShellRegistered` message deadletter log](https://github.com/akkadotnet/akka.net/pull/7376)\n* [Sharding: Make lease release in `Shard.PostStop` be blocking instead of using detached async task](https://github.com/akkadotnet/akka.net/pull/7383)\n* [Cluster.Tools: Add missing singleton detection feature for easier infrastructure debugging](https://github.com/akkadotnet/akka.net/pull/7363)\n\n**Upgrade Advisory**\n\nThere is a slight change in how actor `Stash` behavior. In previous behavior, `Stash` will filter out any messages that are identical (see explanation below) when it is prepended with another. It will not do so now, which is the actual intended behavior. \n\nThis change will affect `Akka.Persistence` users or users who use the `Stash.Prepend()` method in their code. You will need to add a de-duplication code if your code depends on sending identical messages multiple times to a persistence actor while it is recovering.\n\nMessages are considered as identical if they are sent from the same sender actor and have a payload message that `Equals()` to true against another message. Example payload types would be an object pointing to the same memory address (`ReferenceEquals()` returns true), value types (enum, primitives, structs), and classes that implements the `IEquatable` interface.\n\nTo [see the full set of changes in Akka.NET v1.5.31, click here](https://github.com/akkadotnet/akka.net/milestone/114?closed=1).\n\n2 contributors since release 1.5.30\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 9       | 627  | 154  | Gregorius Soedharmo |\n| 4       | 133  | 40   | Aaron Stannard      |\n\n#### 1.5.30 October 1st 2024 ####\n\nAkka.NET v1.5.29 introduced an interface change on the `IScheduler` that unfortunately caused a lot of other plugins to break due to API compatibility issues. v1.5.30 rolls back that change but still fixes the underlying bug in Akka.Persistence's handling and serialziation of timestamps without any interface changes. v1.5.29 will be deprecated from NuGet.\n\n* [DData: Remove Hyperion dependency](https://github.com/akkadotnet/akka.net/pull/7337)\n* [Streams: Fix SelectAsync race condition bug](https://github.com/akkadotnet/akka.net/pull/7338)\n* [Core: Add new IWithTimers API to allow sender override](https://github.com/akkadotnet/akka.net/pull/7341)\n* [Persistence: Fix SnapshotMetadata default timestamp value (DateTimeKind.Utc bug)](https://github.com/akkadotnet/akka.net/pull/7354)\n* [Core: Fix AskTimeoutException message formatting bug](https://github.com/akkadotnet/akka.net/pull/7350)\n\nTo [see the full set of changes in Akka.NET v1.5.30, click here](https://github.com/akkadotnet/akka.net/milestone/113?closed=1).\n\n3 contributors since release 1.5.28\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 8 | 259 | 104 | Gregorius Soedharmo |\n| 1 | 10 | 10 | Simon Cropp |\n| 1 | 0 | 1 | Aaron Stannard |\n\n#### 1.5.29 October 1st 2024 ####\n\n> [!NOTE]\n> \n> **Deprecated**\n> \n> This version introduced breaking changes that needs to be reverted. Please use 1.5.30 instead.\n\nAkka.NET v1.5.29 is an emergency patch release that addresses a severe bug for persistence users whom also use protobuf serializer.\n\n* [DData: Remove Hyperion dependency](https://github.com/akkadotnet/akka.net/pull/7337)\n* [Streams: Fix SelectAsync race condition bug](https://github.com/akkadotnet/akka.net/pull/7338)\n* [Core: Add new IWithTimers API to allow sender override](https://github.com/akkadotnet/akka.net/pull/7341)\n* [Persistence: Fix SnapshotMetadata default timestamp value (DateTimeKind.Utc bug)](https://github.com/akkadotnet/akka.net/pull/7349)\n* [Core: Fix AskTimeoutException message formatting bug](https://github.com/akkadotnet/akka.net/pull/7350)\n\nTo [see the full set of changes in Akka.NET v1.5.29, click here](https://github.com/akkadotnet/akka.net/milestone/112?closed=1).\n\n3 contributors since release 1.5.28\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 4       | 177  | 14   | Gregorius Soedharmo |\n| 1       | 10   | 10   | Simon Cropp         |\n| 1       | 0    | 1    | Aaron Stannard      |\n\n#### 1.5.28 September 5th 2024 ####\n\nAkka.NET v1.5.28 is a release with several bug fixes and improvements.\n\n* [Singleton: Fix oldest member transition log message](https://github.com/akkadotnet/akka.net/pull/7309)\n* [Core: Make ITimeProvider injectable into consuming classes](https://github.com/akkadotnet/akka.net/pull/7314)\n* [Singleton: Fix ClusterSingletonProxy failed to re-acquire singleton actor](https://github.com/akkadotnet/akka.net/pull/7315)\n* [Persistence: Make DateTime.UtcNow the default SnapshotMetadata timestamp](https://github.com/akkadotnet/akka.net/pull/7313)\n* [Remote.TestKit: Improve diagnostics and code modernization](https://github.com/akkadotnet/akka.net/pull/7321)\n* [Persistence.TestKit: Add new ConnectionInterceptor and improve usability](https://github.com/akkadotnet/akka.net/pull/7324)\n* [Sharding: Disable durable DData if RememberEntity does not use DData storage](https://github.com/akkadotnet/akka.net/pull/7327)\n* [Persistence.Sql.Common: Harden journal and snapshot store initialization](https://github.com/akkadotnet/akka.net/pull/7325)\n* [Streams: Fix missing AlsoTo public API in Flow, SubFlow, and Source](https://github.com/akkadotnet/akka.net/pull/7325)\n* [Streams: Fix StreamRefSerializer NRE bug](https://github.com/akkadotnet/akka.net/pull/7333)\n* [Persistence: Fix SnapshotStore.SaveSnapshot metadata timestamp bug](https://github.com/akkadotnet/akka.net/pull/7334)\n* [Persistence.TCK: Add new optional SnapshotStore save data integrity spec](https://github.com/akkadotnet/akka.net/pull/7335)\n\nTo [see the full set of changes in Akka.NET v1.5.28, click here](https://github.com/akkadotnet/akka.net/milestone/110?closed=1).\n\n2 contributors since release 1.5.27.1\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 10      | 5318 | 5153 | Aaron Stannard      |\n| 8       | 1568 | 158  | Gregorius Soedharmo |\n\n#### 1.5.28-beta1 August 23rd 2024 ####\n\nAkka.NET v1.5.28-beta1 is a patch beta release with several bug fixes and improvements.\n\n* [Singleton: Fix oldest member transition log message](https://github.com/akkadotnet/akka.net/pull/7309)\n* [Core: Make ITimeProvider injectable into consuming classes](https://github.com/akkadotnet/akka.net/pull/7314)\n* [Singleton: Fix ClusterSingletonProxy failed to re-acquire singleton actor](https://github.com/akkadotnet/akka.net/pull/7315)\n* [Persistence: Make DateTime.UtcNow the default SnapshotMetadata timestamp](https://github.com/akkadotnet/akka.net/pull/7313)\n* [Remote.TestKit: Improve diagnostics and code modernization](https://github.com/akkadotnet/akka.net/pull/7321)\n* [Persistence.TestKit: Add new ConnectionInterceptor and improve usability](https://github.com/akkadotnet/akka.net/pull/7324)\n* [Sharding: Disable durable DData if RememberEntity does not use DData storage](https://github.com/akkadotnet/akka.net/pull/7327)\n* [Persistence.Sql.Common: Harden journal and snapshot store initialization](https://github.com/akkadotnet/akka.net/pull/7325)\n* [Streams: Fix missing AlsoTo public API in Flow, SubFlow, and Source](https://github.com/akkadotnet/akka.net/pull/7325)\n\nTo [see the full set of changes in Akka.NET v1.5.28-beta1, click here](https://github.com/akkadotnet/akka.net/milestone/110?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 10      | 5318 | 5153 | Aaron Stannard      |\n| 4       | 1440 | 115  | Gregorius Soedharmo |\n\n#### 1.5.27.1 July 25th 2024 ####\n\nAkka.NET v1.5.27.1 is a minor patch to fix a race condition between the logging and remoting system.\n\n* [Akka: Fix Remoting-Logging DefaultAddress race condition](https://github.com/akkadotnet/akka.net/pull/7305)\n\nTo [see the full set of changes in Akka.NET v1.5.27.1, click here](https://github.com/akkadotnet/akka.net/milestone/110).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 1       | 4    | 0    | Aaron Stannard      |\n| 1       | 10   | 3    | Gregorius Soedharmo |\n\n#### 1.5.27 July 25th 2024 ####\n\nAkka.NET v1.5.27 is a significant release that includes new features, mission-critical bug fixes, and some performance improvements.\n\n**Major Akka.Cluster.Sharding and Akka.Cluster.Tools.Singleton Bug Fixes**\n\nIn _all prior versions_ of Akka.NET, there are two high impact distributed systems bugs:\n\n1. [Akka.Cluster.Tools.Singleton: singleton moves earlier than expected - as soon as new node joins](https://github.com/akkadotnet/akka.net/issues/7196)\n2. [Akka.Cluster.Sharding: duplicate shards / entities](https://github.com/akkadotnet/akka.net/issues/6973)\n\nAs we discovered during the course of our pains-taking bug investigation, these were, in fact, the same issue:\n\n1. The `ClusterSingletonManager` is supposed to _always_ belong on the oldest node of a given role type, but an original design error from the time Akka.Cluster.Tools was first introduced to Akka.NET meant that nodes were always sorted in _descending_ order of `UpNumber`. This is backwards: nodes should always be sorted in _ascending_ order of `UpNumber` - this means that the oldest possible node is always at the front of the \"who is oldest?\" list held by the `ClusterSingletonManager`. This explains why the singleton could appear to move early during deployments and restarts.\n2. The `ClusterSingletonManager` was suspectible to a race condition where if nodes were shutdown and restarted with the same address in under 20 seconds, the default \"down removal margin\" used by the `ClusterSingletonManager` to tolerate dirty exits, it would be possible after _multiple_ successive, fast, restarts for multiple instances of the singleton to be alive at the same time (for a short period.)\n\nBoth of these varieties of problem, duplicate singletons, is what lead to duplicate shards.\n\nAs a result we've made the following fixes:\n\n* [Akka.Cluster.Tools: deprecate ClustersSingletonManagerSettings.ConsiderAppVersion](https://github.com/akkadotnet/akka.net/pull/7302) - `AppVersion` is no longer considered for singleton placement as it could easily result in split brains.\n* [Akka.Cluster.Tools: fix mutability and oldest state bugs with `ClusterSingletonManager`](https://github.com/akkadotnet/akka.net/pull/7298) - resolves the issue with rapid rolling restarts creating duplicates. We've tested this fix in our test lab across thousands of coordinator restarts and haven't been able to reproduce the issue since (we could easily do it before.)\n* [Akka.Cluster.Tools.Singleton / Akka.Cluster.Sharding: fix duplicate shards caused by incorrect `ClusterSingletonManager` `HandOver`](https://github.com/akkadotnet/akka.net/pull/7297) - we fixed the member age problem here, which could cause a second singleton to start at inappropriate times.\n\n**Akka.Discovery and `ClusterClient` Discovery Support**\n\nIn Akka.NET v1.5.27 we've added support for using Akka.Cluster.Tools.ClusterClient alongside with [Akka.Discovery plugins](https://getakka.net/articles/discovery/index.html) to automatically discover the initial contacts you need for `ClusterClientReceptionist` instances in your environment.\n\nYou can read the documentation for how this works here: https://getakka.net/articles/clustering/cluster-client.html#contact-auto-discovery-using-akkadiscovery\n\nRelated PRs and issues:\n\n* [Akka.Discovery: Add multi-config support to config-based discovery](https://github.com/akkadotnet/akka.net/issues/7271)\n* [Cluster.Tools: Fix missing VerboseLogging in ClusterClientSettings.Copy method](https://github.com/akkadotnet/akka.net/issues/7272)\n* [Cluster.Tools: Improve ClusterClientDiscovery to avoid thundering herd problem](https://github.com/akkadotnet/akka.net/issues/7270)\n* [Cluster.Tools: Change ClusterClientDiscovery to use the new Akka.Management \"/cluster-client/receptionist\" endpoint](https://github.com/akkadotnet/akka.net/issues/7274)\n\n**Other Bug Fixes and Improvements**\n\n* [Akka.Cluster: improve gossip serialization performance](https://github.com/akkadotnet/akka.net/pull/7281)\n* [Akka.Streams: Fix `ActorMaterializerImpl` `null` `LogSource`](https://github.com/akkadotnet/akka.net/pull/7300)\n* [Akka.Streams: `AlsoTo` may not be failing graph when its sink throws exception](https://github.com/akkadotnet/akka.net/issues/7269)\n* [Akka.DistributedData: if `lmdb.dir` is null or empty, log a warning and set to default](https://github.com/akkadotnet/akka.net/pull/7292)\n\nTo [see the full set of changes in Akka.NET v1.5.27, click here](https://github.com/akkadotnet/akka.net/milestone/109).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 15 | 835 | 1001 | Aaron Stannard |\n| 12 | 1123 | 207 | Gregorius Soedharmo |\n\n#### 1.5.27-beta2 July 3rd 2024 ####\n\n* [Cluster.Tools: Fix missing port name argument in ClusterClientDiscovery](https://github.com/akkadotnet/akka.net/issues/7276)\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 1       | 1    | 1    | Gregorius Soedharmo |\n\n#### 1.5.27-beta1 July 3rd 2024 ####\n\nAkka.NET v1.5.27-beta1 improves upon the new ClusterClient initial contact auto-discovery feature to make it more robust in implementation.\n\n* [Akka.Discovery: Add multi-config support to config-based discovery](https://github.com/akkadotnet/akka.net/issues/7271)\n* [Cluster.Tools: Fix missing VerboseLogging in ClusterClientSettings.Copy method](https://github.com/akkadotnet/akka.net/issues/7272)\n* [Cluster.Tools: Improve ClusterClientDiscovery to avoid thundering herd problem](https://github.com/akkadotnet/akka.net/issues/7270)\n* [Cluster.Tools: Change ClusterClientDiscovery to use the new Akka.Management \"/cluster-client/receptionist\" endpoint](https://github.com/akkadotnet/akka.net/issues/7274)\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 5       | 422  | 183  | Gregorius Soedharmo |\n| 1       | 4    | 0    | Aaron Stannard      |\n| 1       | 1    | 1    | Sean Killeen        |\n\n#### 1.5.26 June 27th 2024 ####\n\nAkka.NET v1.5.26 introduces a new Akka.Cluster.Tools feature and a logging improvement.\n\n* [Add ClusterClient initial contact auto-discovery feature](https://github.com/akkadotnet/akka.net/issues/7261)\n* [Improve traceability of `ITimerMsg`](https://github.com/akkadotnet/akka.net/issues/7262)\n\n**Preliminary ClusterClient Initial Contact Auto-Discovery Feature**\n\n> To use this feature, you will need to use Akka.Discovery implementation (Kubernetes or Azure) version 1.5.26-beta1 or higher\n\nThis feature allows ClusterClient to use Akka.Discovery to automatically query for cluster client receptionists inside a dynamic environment such as Kubernetes.\n\nThe preliminary documentation for this feature can be read [here](https://getakka.net/articles/clustering/cluster-client.html#contact-auto-discovery-using-akkadiscovery)\n\nYou can [see the full set of changes for Akka.NET v1.5.26 here](https://github.com/akkadotnet/akka.net/milestones/1.5.26).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 3       | 45   | 11   | Aaron Stannard      |\n| 2       | 945  | 15   | Gregorius Soedharmo |\n\n#### 1.5.25 June 14th 2024 ####\n\nAkka.NET v1.5.25 includes a critical bug fix for logging and some other minor fixes.\n\n**Logging Errors Introduced in v1.5.21**\n\nVersions [v1.5.21,v1.5.24] are all affected by [Akka.Logging: v1.5.21 appears to have truncated log source, timestamps, etc from all log messages](https://github.com/akkadotnet/akka.net/issues/7255) - this was a bug introduced when we added [the log-filtering feature we shipped in Akka.NET v1.5.21](https://getakka.net/articles/utilities/logging.html#filtering-log-messages).\n\nThis issue has been resolved in v1.5.25 and we've [added regression tests to ensure that the log format gets version-checked just like our APIs going forward](https://github.com/akkadotnet/akka.net/pull/7256).\n\nOther fixes:\n\n* [Akka.Router: sending a message to a remote actor via `IScheduledTellMsg` results in serialization error](https://github.com/akkadotnet/akka.net/issues/7247)\n* [Akka.Discovery: Make Akka.Discovery less coupled with Akka.Management](https://github.com/akkadotnet/akka.net/issues/7242)\n\nYou can [see the full set of changes for Akka.NET v1.5.25 here](https://github.com/akkadotnet/akka.net/milestones/1.5.25).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 6 | 347 | 44 | Aaron Stannard |\n| 2 | 1197 | 1015 | Gregorius Soedharmo |\n\n#### 1.5.24 June 7th 2024 ####\n\nAkka.NET v1.5.24 is a patch release for Akka.NET that addresses CVE-2018-8292 and also adds a quality of life improvement to IActorRef serialization.\n\n* [Fix invalid serializer was being used when serialize-message is set to true](https://github.com/akkadotnet/akka.net/pull/7236)\n* [Add Serialization.DeserializeActorRef() QoL method](https://github.com/akkadotnet/akka.net/pull/7237)\n* Resolve CVE-2018-8292 in [this PR](https://github.com/akkadotnet/akka.net/pull/7235) and [this PR](https://github.com/akkadotnet/akka.net/pull/7238)\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 3       | 35   | 22   | Gregorius Soedharmo |\n| 1       | 26   | 51   | Mike Perrin         |\n| 1       | 15   | 2    | Aaron Stannard      |\n\nYou can [see the full set of changes for Akka.NET v1.5.24 here](https://github.com/akkadotnet/akka.net/milestones/1.5.24).\n\n#### 1.5.23 June 4th 2024 ####\n\n* [Fix missing `HandOverDone` handler in ClusterSingletonManager](https://github.com/akkadotnet/akka.net/pull/7230)\n* [Add push mode to `ShardedDaemonProcess`](https://github.com/akkadotnet/akka.net/pull/7229)\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 2       | 299  | 44   | Aaron Stannard      |\n| 1       | 47   | 49   | Gregorius Soedharmo |\n| 1       | 1    | 1    | Hassan Abu Bakar    |\n\nYou can [see the full set of changes for Akka.NET v1.5.23 here](https://github.com/akkadotnet/akka.net/milestones/1.5.23).\n\n#### 1.5.22 June 4th 2024 ####\n\nAkka.NET v1.5.22 is a patch release for Akka.NET with a few bug fixes and logging improvement.\n\n* [Streams: Bump Reactive.Streams to 1.0.4](https://github.com/akkadotnet/akka.net/pull/7213)\n* [Remote: Bump DotNetty.Handlers to 0.7.6](https://github.com/akkadotnet/akka.net/pull/7198)\n* [Core: Resolve CVE-2018-8292 for Akka.Streams and Akka.Remote](https://github.com/akkadotnet/akka.net/issues/7191)\n* [Core: Expose `BusLogging` `EventStream` as public API](https://github.com/akkadotnet/akka.net/pull/7210)\n* [Remote: Add cross-platform support to the exception serializer](https://github.com/akkadotnet/akka.net/pull/7222)\n\n**On Resolving CVE-2018-8292**\n\nIn order to resolve this CVE, we had to update `DotNetty.Handlers` to the latest version and unfortunately, this comes with about 10% network throughput performance hit. We are looking into possible replacement for `DotNetty` to improve this performance lost in the future (see [`#7225`](https://github.com/akkadotnet/akka.net/issues/7225) for updates).\n\n**Before**\n\n```\nNum clients, Total [msg], Msgs/sec, Total [ms], Start Threads, End Threads  \n         1,  200000,    125000,    1600.62,            46,              76  \n         5, 1000000,    494072,    2024.04,            84,              95  \n        10, 2000000,    713013,    2805.73,           103,             107  \n        15, 3000000,    724463,    4141.38,           115,             115  \n        20, 4000000,    714669,    5597.66,           123,             123  \n        25, 5000000,    684932,    7300.37,           131,             107  \n        30, 6000000,    694525,    8639.88,           115,              93  \n```\n\n**After**\n\n```\nNum clients, Total [msg], Msgs/sec, Total [ms], Start Threads, End Threads\n         1,  200000,    123763,    1616.32,            46,              73\n         5, 1000000,    386101,    2590.66,            81,              90\n        10, 2000000,    662691,    3018.54,            98,             104\n        15, 3000000,    666223,    4503.86,           112,             113\n        20, 4000000,    669681,    5973.89,           121,             113\n        25, 5000000,    669255,    7471.86,           121,             105\n        30, 6000000,    669121,    8967.61,           113,              92\n```\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 6       | 167  | 188  | Aaron Stannard      |\n| 3       | 93   | 10   | Gregorius Soedharmo |\n\nYou can [see the full set of changes for Akka.NET v1.5.22 here](https://github.com/akkadotnet/akka.net/milestones/1.5.22).\n\n#### 1.5.21 May 28th 2024 ####\n\nAkka.NET v1.5.21 is a significant release for Akka.NET with a major feature additions and bug fixes.\n\n* [Core: Fix error logging bug](https://github.com/akkadotnet/akka.net/pull/7186)\n* [Core: Add log filtering feature](https://github.com/akkadotnet/akka.net/pull/7179)\n* [Pub-Sub: Fix missing SendOneMessageToEachGroup property](https://github.com/akkadotnet/akka.net/pull/7202)\n* [Core: Fix incorrect IWrappedMessage deserialization when serialize-messages setting is on](https://github.com/akkadotnet/akka.net/pull/7200)\n* [Core: Bump Akka.Analyzers to 0.2.5](https://github.com/akkadotnet/akka.net/pull/7206)\n\n**Log Message Filtering**\n\nYou can now filter out unwanted log messages based on either its source or message content. Documentation can be read in the [logging documentation](https://getakka.net/articles/utilities/logging.html#filtering-log-messages).\n\n**New Akka.Analyzers Rule**\n\nAdded AK1006 rule to suggest user to use `PersistAll()` and `PersistAllAsync()` when applicable. Documentation can be read in the [documentation](https://getakka.net/articles/debugging/rules/AK1006.html)\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 7       | 900  | 53   | Aaron Stannard      |\n| 5       | 497  | 1187 | Gregorius Soedharmo |\n| 1       | 1    | 1    | √Ösmund              |\n\nYou can [see the full set of changes for Akka.NET v1.5.21 here](https://github.com/akkadotnet/akka.net/milestones/1.5.21).\n\n#### 1.5.20 April 29th 2024 ####\n\nAkka.NET v1.5.20 is a patch release for Akka.NET with a few bug fixes and Akka.Streams quality of life improvement.\n\n* [Cluster: Fix split brain resolver downing all nodes when failure detector records are unclean/poisoned](https://github.com/akkadotnet/akka.net/pull/7141)\n* [TestKit: Fix `AkkaEqualException` message formatting](https://github.com/akkadotnet/akka.net/pull/7164)\n* [Core: Generate Protobuf code automatically during build](https://github.com/akkadotnet/akka.net/pull/7063)\n* [Streams: `LogSource` quality of life improvement](https://github.com/akkadotnet/akka.net/pull/7168)\n* [Core: Fix `HashedWheelTimer` startup crash](https://github.com/akkadotnet/akka.net/pull/7174)\n\n| COMMITS | LOC+ | LOC-  | AUTHOR              |\n|---------|------|-------|---------------------|\n| 5       | 360  | 93    | Aaron Stannard      |\n| 3       | 187  | 20    | Gregorius Soedharmo |\n| 1       | 81   | 41827 | Yan Pitangui        |\n\nYou can [see the full set of changes for Akka.NET v1.5.20 here](https://github.com/akkadotnet/akka.net/milestones/1.5.20).\n\n#### 1.5.19 April 15th 2024 ####\n\nAkka.NET v1.5.19 is a patch release for Akka.NET with a few bug fixes.\n\n* [Persistence.SQLite: Bump Microsoft.Data.SQLite to 8.0.4](https://github.com/akkadotnet/akka.net/pull/7148)\n* [Core: Bump Google.Protobuf to 3.26.1](https://github.com/akkadotnet/akka.net/pull/7138)\n* [Core: Bump Akka.Analyzer to 0.2.4](https://github.com/akkadotnet/akka.net/pull/7143)\n* [Remote: Improve logging](https://github.com/akkadotnet/akka.net/pull/7149)\n* [Cluster: Improve logging](https://github.com/akkadotnet/akka.net/pull/7149)\n* [Core: Fix resource contention problem with HashedWheelTimerScheduler during start-up](https://github.com/akkadotnet/akka.net/pull/7144)\n* [TestKit: Fix async deadlock by replacing IAsyncQueue with System.Threading.Channel](https://github.com/akkadotnet/akka.net/pull/7157)\n\n**Akka.Analyzers**\n\nWe've added 3 new analyzer rules to `Akka.Analyzers`:\n\n* **AK1004**\n\n  AK1004 warns users to replace any `ScheduleTellOnce()` and `ScheduleTellRepeatedly()` invocation inside an actor to implement `IWithTimers` interface instead. Documentation can be read [here](https://getakka.net/articles/debugging/rules/AK1004.html)\n\n* **AK1005**\n\n  AK1005 warns users about improper `Sender` and `Self` access from inside an async lambda callbacks inside actor implementation. Documentation can be read [here](https://getakka.net/articles/debugging/rules/AK1005.html)\n\n* **AK1007**\n\n  AK1007 is an error message for any `Timers.StartSingleTimer()` and `Timers.StartPeriodicTimer()` invocation from inside the actor `PreRestart()` and `AroundPreRestart()` lifecycle callback methods.  Documentation can be read [here](https://getakka.net/articles/debugging/rules/AK1007.html)\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 9       | 366  | 1951 | Aaron Stannard      |\n| 9       | 14   | 14   | dependabot[bot]     |\n| 2       | 516  | 30   | Gregorius Soedharmo |\n\nYou can [see the full set of changes for Akka.NET v1.5.19 here](https://github.com/akkadotnet/akka.net/milestones/1.5.19).\n\n#### 1.5.18 March 13th 2024 ####\n\nAkka.NET v1.5.18 is a patch release for Akka.NET with a feature addition.\n\n* [Migrate all internal dispatchers to default thread pool dispatcher](https://github.com/akkadotnet/akka.net/pull/7117)\n\n| COMMITS | LOC+ | LOC- | AUTHOR          |\n|---------|------|------|-----------------|\n| 1       | 9    | 9    | Aaron Stannard  |\n| 1       | 1    | 1    | dependabot[bot] |\n\nYou can [see the full set of changes for Akka.NET v1.5.18 here](https://github.com/akkadotnet/akka.net/milestones/1.5.18).\n\n#### 1.5.17.1 March 1st 2024 ####\n\nAkka.NET v1.5.17.1 is a patch release for Akka.NET with a bug fix.\n\n* [Core: Bump Akka.Analyzers to 0.2.3.1](https://github.com/akkadotnet/akka.analyzers/releases/tag/0.2.3.1)\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 1       | 1    | 1    | Gregorius Soedharmo |\n| 1       | 1    | 1    | Aaron Stannard      |\n\n#### 1.5.17 February 29th 2024 ####\n\nAkka.NET v1.5.17 is a patch release for Akka.NET with some feature additions and bug fixes.\n\n* [Core: Fix null ref for `LogSource`](https://github.com/akkadotnet/akka.net/pull/7078)\n* [Persistence.TCK: Make all snapshot tests virtual](https://github.com/akkadotnet/akka.net/pull/7093)\n* [Core: Suppress extremely verbose `TimerScheduler` debug message](https://github.com/akkadotnet/akka.net/pull/7102)\n* [Sharding: Implement reliable delivery custom message bypass feature](https://github.com/akkadotnet/akka.net/pull/7106)\n* Update dependencies\n  * [Persistence: Bump Microsoft.Data.SQLite to 8.0.2](https://github.com/akkadotnet/akka.net/pull/7096)\n  * [Core: Bump Google.Protobuf to 3.25.3](https://github.com/akkadotnet/akka.net/pull/7100)\n  * [Core: Bump Akka.Analyzers to 0.2.3](https://github.com/akkadotnet/akka.analyzers/releases/tag/0.2.3)\n* Documentations\n  * [Actors: Fix typo](https://github.com/akkadotnet/akka.net/pull/7085)\n  * [Remoting: Fix remote deployment typo](https://github.com/akkadotnet/akka.net/pull/7095)\n  * [Analyzers: Add missing TOC links](https://github.com/akkadotnet/akka.net/pull/7098)\n  * [Sharding: Add missing custom sharding handoff stop documentation](https://github.com/akkadotnet/akka.net/pull/7101)\n\n**Akka.Analyzers**\n\n* The AK1001 rule has been removed due to the discussion [here](https://github.com/akkadotnet/akka.analyzers/issues/65).\n* AK1002 has been enhanced with better problem detection.\n\nYou can [see the full set of changes for Akka.NET v1.5.17 here](https://github.com/akkadotnet/akka.net/milestones/1.5.17).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 7       | 1342 | 732  | Gregorius Soedharmo |\n| 4       | 5    | 5    | dependabot[bot]     |\n| 3       | 158  | 4    | Aaron Stannard      |\n| 2       | 3    | 3    | hassan-me           |\n| 1       | 2    | 8    | Massimiliano Donini |\n| 1       | 12   | 12   | Mattias Jakobsson   |\n\n#### 1.5.16 January 29th 2024 ####\n\nAkka.NET v1.5.16 is a patch release for Akka.NET with some feature additions and changes.\n\n* [Core: Bump Google.Protobuf to 3.25.2](https://github.com/akkadotnet/akka.net/pull/7056)\n* [Core: Remove redundant assembly titles](https://github.com/akkadotnet/akka.net/pull/6796)\n* [Akka.Cluster.Sharding: Fix sharding entity ID extractor nullability](https://github.com/akkadotnet/akka.net/pull/7059)\n* [Akka.Cluster.Sharding: Fix cluster sharding benchmark](https://github.com/akkadotnet/akka.net/pull/7061)\n* [Akka.TestKit: Fix Watch and Unwatch bug](https://github.com/akkadotnet/akka.net/pull/7037)\n* [Akka.Cluster.Metrics: Separate business models and wire format models](https://github.com/akkadotnet/akka.net/pull/7067)\n* [Akka.Analyzer: Bump Akka.Analyzer to 0.2.2](https://github.com/akkadotnet/akka.net/pull/7073)\n\n**Akka.Analyzers**\n\nWe have expanded Akka.Analyzer and introduced 2 new rules to the Roslyn analyzer:\n* `AK1002`: Error: Must not await `Self.GracefulStop()` inside `ReceiveAsync<T>()` or `ReceiveAnyAsync`\n* `AK1003`: Warning: `ReceiveAsync<T>()` or `ReceiveAnyAsync()` message handler without async lambda body\n\n[See the full set of supported Akka.Analyzers rules here](https://getakka.net/articles/debugging/akka-analyzers.html)\n\nYou can [see the full set of changes for Akka.NET v1.5.16 here](https://github.com/akkadotnet/akka.net/milestones/1.5.16).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 6       | 1268 | 628  | Gregorius Soedharmo |\n| 5       | 6    | 6    | dependabot[bot]     |\n| 2       | 286  | 224  | Aaron Stannard      |\n| 1       | 2120 | 0    | Yan Pitangui        |\n| 1       | 2    | 2    | Mattias Jakobsson   |\n| 1       | 2    | 0    | Ebere Abanonu       |\n| 1       | 0    | 65   | Simon Cropp         |\n\n#### 1.5.15 January 9th 2024 ####\n\nAkka.NET v1.5.15 is a significant release for Akka.NET with some major feature additions and changes.\n\n* [Introducing `Akka.Analyzers` - Roslyn Analysis for Akka.NET](https://getakka.net/articles/debugging/akka-analyzers.html)\n* [Akka.Cluster.Sharding: perf optimize message extraction, automate `StartEntity` and `ShardEnvelope` handling](https://github.com/akkadotnet/akka.net/pull/6863)\n* [Akka.Cluster.Tools: Make `ClusterClient` messages be serialized using `ClusterClientMessageSerializer`](https://github.com/akkadotnet/akka.net/pull/7032)\n* [Akka.Persistence: Fix `LocalSnapshotStore` Metadata Fetch to ensure persistenceid match.](https://github.com/akkadotnet/akka.net/pull/7040)\n* [Akka.Delivery: Fix `ProducerControllerImpl<T>` state bug](https://github.com/akkadotnet/akka.net/pull/7034)\n* [Change MS.EXT and System package versioning to range](https://github.com/akkadotnet/akka.net/pull/7029) - we now support all Microsoft.Extensions packages from `(6.0,]`.\n* [Akka.Serialization: `INoSerializationVerificationNeeded` does not handle `IWrappedMessage` correctly](https://github.com/akkadotnet/akka.net/pull/7010)\n\n**Akka.Analyzers**\n\nThe core Akka NuGet package now references [Akka.Analyzers](https://github.com/akkadotnet/akka.analyzers), a new set of Roslyn Code Analysis and Code Fix Providers that we distribute via NuGet. You can [see the full set of supported Akka.Analyzers rules here](https://getakka.net/articles/debugging/akka-analyzers.html).\n\n**Akka.Cluster.Sharding Changes**\n\nIn [#6863](https://github.com/akkadotnet/akka.net/pull/6863) we made some major changes to the Akka.Cluster.Sharding API aimed at helping improve Cluster.Sharding's performance _and_ ease of use. However, these changes _may require some effort on the part of the end user_ in order to take full advantage:\n\n* [`ExtractEntityId`](https://getakka.net/api/Akka.Cluster.Sharding.ExtractEntityId.html) and [`ExtractShardId`](https://getakka.net/api/Akka.Cluster.Sharding.ExtractShardId.html) have been deprecated as they _fundamentally can't be extended and can't benefit from the performance improvements introduced into Akka.NET v1.5.15_. It is **imperative** that you migrate to using the [`HashCodeMessageExtractor`](https://getakka.net/api/Akka.Cluster.Sharding.HashCodeMessageExtractor.html) instead.\n* You no longer need to handle [`ShardRegion.StartEntity`](https://getakka.net/api/Akka.Cluster.Sharding.ShardRegion.StartEntity.html) or [`ShardingEnvelope`](https://getakka.net/api/Akka.Cluster.Sharding.ShardingEnvelope.html) inside your `IMessageExtractor` implementations, and in fact [`AK2001`](https://getakka.net/articles/debugging/rules/AK2001.html) (part of Akka.Analyzers) will automatically detect this and remove those handlers for you. Akka.NET automatically handles these two message types internally now.\n\n**ClusterClient Serialization Changes**\n\nIn [#7032](https://github.com/akkadotnet/akka.net/pull/7032) we solved a long-standing serialization problem with the [`ClusterClient`](https://getakka.net/api/Akka.Cluster.Tools.Client.ClusterClient.html) where  `Send`, `SendToAll`, and `Publish` were not handled by the correct internal serializer. This has been fixed by default in Akka.NET v1.5.15, but this can potentially cause wire compatibility problems during upgrades - therefore we have introduced a configuration setting to toggle this:\n\n```hocon\n# re-enable legacy serialization\nakka.cluster.client.use-legacy-serialization = on\n```\n\nThat setting is currently set to `on` by default, so v1.5.15 will still behave like previous versions of Akka.NET. However, if you have been affected by serialization issues with the `ClusterClient` (such as [#6803](https://github.com/akkadotnet/akka.net/issues/6803)) you should toggle this setting to `off`.\n\nSee \"[Akka.NET v1.5.15 Upgrade Advisories](https://getakka.net/community/whats-new/akkadotnet-v1.5-upgrade-advisories.html)\" for full details on some of the things you might need to do while upgrading to this version of Akka.NET.\n\nYou can [see the full set of changes for Akka.NET v1.5.15 here](https://github.com/akkadotnet/akka.net/milestones/1.5.15).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |       \n| --- | --- | --- | --- |                \n| 16 | 2228 | 1490 | Aaron Stannard |    \n| 9 | 9 | 9 | dependabot[bot] |          \n| 2 | 610 | 173 | Gregorius Soedharmo |  \n| 2 | 337 | 0 | Drew |                   \n| 2 | 124 | 118 | Lehonti Ramos |        \n| 1 | 2 | 2 | Sergey Popov |             \n| 1 | 108 | 25 | Yaroslav Paslavskiy |   \n| 1 | 1 | 1 | Bert Lamb |                \n\n#### 1.5.14 September 24th 2023 ####\n\nAkka.NET v1.5.14 is a maintenance release with several bug fixes.\n\n* [Streams: Ensure stream are closed on shutdown](https://github.com/akkadotnet/akka.net/pull/6935)\n* [Akka: Fix PeriodicTimer HashWheelTimerScheduler deadlock during start](https://github.com/akkadotnet/akka.net/pull/6949)\n* [Cluster: Old version of LeastShardAllocationStrategy is now deprecated](https://github.com/akkadotnet/akka.net/pull/6975)\n* [Query: Add a more descriptive ToString() values to Offset types](https://github.com/akkadotnet/akka.net/pull/6978)\n* Package dependency upgrades\n  * [MNTR: Bump Akka.Multinode.TestAdapter to 1.5.13](https://github.com/akkadotnet/akka.net/pull/6926)\n  * [Akka: Bump Polyfill to 1.28](https://github.com/akkadotnet/akka.net/pull/6936)\n  * [Akka: Bump Google.Protobuf to 3.24.4](https://github.com/akkadotnet/akka.net/pull/6951)\n  * [DData: Bump LightningDB to 0.16.0](https://github.com/akkadotnet/akka.net/pull/6960)\n  * [Persistence: Bump Microsoft.Data.SQLite to 7.0.13](https://github.com/akkadotnet/akka.net/pull/6969)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.14, click here](https://github.com/akkadotnet/akka.net/milestone/96?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 11      | 25   | 21   | dependabot[bot]     |\n| 3       | 14   | 2    | Aaron Stannard      |\n| 3       | 114  | 369  | Simon Cropp         |\n| 2       | 36   | 31   | Gregorius Soedharmo |\n| 1       | 41   | 43   | Lehonti Ramos       |\n| 1       | 38   | 0    | Yaroslav Paslavskiy |\n| 1       | 3    | 0    | Sean Killeen        |\n| 1       | 227  | 25   | Drew                |\n| 1       | 1    | 1    | szaliszali          |\n\n#### 1.5.13 August 26th 2023 ####\n\nAkka.NET v1.5.13 is a maintenance release with several bug fixes and also performance and QOL improvements.\n\n* [Akka: Clean up and optimize actor name validation](https://github.com/akkadotnet/akka.net/pull/6919)\n* [Akka: Wrap all scheduler Tell messages in `IScheduledMessage` envelope](https://github.com/akkadotnet/akka.net/pull/6461)\n* [Akka: Fix possible NRE bug in `Dispatchers`](https://github.com/akkadotnet/akka.net/pull/6906)\n* [Akka.Cluster.Sharding: Log shard coordinator remember entities timeout](https://github.com/akkadotnet/akka.net/pull/6885)\n* [Akka.Cluster.Sharding: Fix shard coordinator throwing NullReferenceException](https://github.com/akkadotnet/akka.net/pull/6892)\n* [Akka.Streams: Log errors inside SelectAsync stage](https://github.com/akkadotnet/akka.net/pull/6884)\n* [Akka.Streams: Add supervisor strategy support for Throttle stage](https://github.com/akkadotnet/akka.net/pull/6886)\n* [Akka: Change HashedWheelTimerScheduler implementation to use `PeriodicTimer` for net6.0+ builds](https://github.com/akkadotnet/akka.net/pull/6435)\n* Package dependency upgrades\n  * [Bump Polyfill to 1.27.1](https://github.com/akkadotnet/akka.net/pull/6899) \n  * [Bump Microsoft.Data.SQLite to 7.0.11](https://github.com/akkadotnet/akka.net/pull/6917)\n  * [Bump Google.Protobuf tp 3.24.3](https://github.com/akkadotnet/akka.net/pull/6909)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.13, click here](https://github.com/akkadotnet/akka.net/milestone/95?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 18      | 25   | 25   | dependabot[bot]     |\n| 6       | 435  | 200  | Gregorius Soedharmo |\n| 4       | 512  | 293  | Aaron Stannard      |\n| 2       | 3    | 7    | Simon Cropp         |\n| 1       | 7    | 0    | Sergey Popov        |\n| 1       | 66   | 17   | Ismael Hamed        |\n| 1       | 1    | 1    | HamzaAmjad-RG       |\n\n#### 1.5.13-beta1 August 26th 2023 ####\n\nAkka.NET v1.5.13-beta1 is a maintenance release with several performance and QOL improvements.\n\n* [Akka.Cluster.Sharding: Log shard coordinator remember entities timeout](https://github.com/akkadotnet/akka.net/pull/6885)\n* [Akka.Cluster.Sharding: Fix shard coordinator throwing NullReferenceException](https://github.com/akkadotnet/akka.net/pull/6892)\n* [Akka.Streams: Log errors inside SelectAsync stage](https://github.com/akkadotnet/akka.net/pull/6884)\n* [Akka.Streams: Add supervisor strategy support for Throttle stage](https://github.com/akkadotnet/akka.net/pull/6886)\n* [Akka: Change HashedWheelTimerScheduler implementation to use `PeriodicTimer` for net6.0+ builds](https://github.com/akkadotnet/akka.net/pull/6435)\n* Package dependency upgrades\n  * [Bump Microsoft.Data.SQLite to 7.0.10](https://github.com/akkadotnet/akka.net/pull/6876)\n  * [Bump Google.Protobuf tp 3.24.1](https://github.com/akkadotnet/akka.net/pull/6891)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.13-beta1, click here](https://github.com/akkadotnet/akka.net/milestone/95?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 11      | 15   | 15   | dependabot[bot]     |\n| 3       | 302  | 143  | Aaron Stannard      |\n| 2       | 384  | 195  | Gregorius Soedharmo |\n| 1       | 7    | 0    | Sergey Popov        |\n| 1       | 66   | 17   | Ismael Hamed        |\n| 1       | 3    | 5    | Simon Cropp         |\n| 1       | 1    | 1    | HamzaAmjad-RG       |\n\n#### 1.5.12 August 2nd 2023 ####\n\nAkka.NET v1.5.12 is a maintenance release with a minor API change and a minor bug fix.\n\n* [Persistence.Query: Fix `ReadJournalFor()` thread safety](https://github.com/akkadotnet/akka.net/pull/6859)\n* [Persistence.Query: Expose new `Tags` property in `EventEnvelope`](https://github.com/akkadotnet/akka.net/pull/6862)\n* [Documentation: Fix typo in member-roles.md](https://github.com/akkadotnet/akka.net/pull/6784)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.12, click here](https://github.com/akkadotnet/akka.net/milestone/94?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 5       | 34   | 18   | Aaron Stannard      |\n| 2       | 150  | 51   | Gregorius Soedharmo |\n| 1       | 1    | 1    | dependabot[bot]     |\n| 1       | 1    | 1    | Jim Aho             |\n\n#### 1.5.11 July 27th 2023 ####\n\nAkka.NET v1.5.11 is a maintenance release with a minor API change and internal code modernization/cleanup.\n\n* [Remote: Modernize DotNettyTransportSettings class and add support for a SSL Setup class](https://github.com/akkadotnet/akka.net/pull/6854)\n* [PubSub: Make CountSubscriber query command public](https://github.com/akkadotnet/akka.net/pull/6856)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.11, click here](https://github.com/akkadotnet/akka.net/milestone/93?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 1       | 465  | 321  | Gregorius Soedharmo |\n| 1       | 22   | 2    | Aaron Stannard      |\n\n#### 1.5.10 July 26th 2023 ####\n\nAkka.NET v1.5.10 is a maintenance release with a minor API change.\n\n* [Persistence.TCK: Add constructor overload that takes ActorSystemSetup argument](https://github.com/akkadotnet/akka.net/pull/6850)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.10, click here](https://github.com/akkadotnet/akka.net/milestone/92?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 1       | 70   | 12   | Gregorius Soedharmo |\n\n#### 1.5.9 July 18th 2023 ####\n\nAkka.NET v1.5.9 is a maintenance release that introduces some performance improvements and internal code cleanup/modernization.\n\n__Changes:__\n* [Remoting: Make transport adapter component public](https://github.com/akkadotnet/akka.net/pull/6838)\n\n__Improvements:__\n* [Memory optimization, use `Array.Empty` instead of creating empty arrays](https://github.com/akkadotnet/akka.net/pull/6801)\n* [Remoting: Log all wrapped message layers during errors](https://github.com/akkadotnet/akka.net/pull/6818)\n* [Port #6805 and #6807, Improve Stream and Pattern.Backoff instance creation time performance](https://github.com/akkadotnet/akka.net/pull/6821)\n* [DData: Harden LWWDictionary serialization null check](https://github.com/akkadotnet/akka.net/pull/6837)\n\n__Code modernization:__ \n* [Use C# 9.0 target-typed new()](https://github.com/akkadotnet/akka.net/pull/6798)\n* [Use C# 8.0 null-coalescing operator](https://github.com/akkadotnet/akka.net/pull/6814)\n\n__Update dependency versions:__\n* [Bump Google.Protobuf to 3.23.4](https://github.com/akkadotnet/akka.net/pull/6826)\n* [Bump Akka.MultiNode.TestAdapter to 1.5.8](https://github.com/akkadotnet/akka.net/pull/6802)\n* [Bump Microsoft.Data.SQLite to 7.0.9](https://github.com/akkadotnet/akka.net/pull/6835)\n* [Bump Microsoft.Extensions.ObjectPool to 7.0.8](https://github.com/akkadotnet/akka.net/pull/6813)\n* [Bump Xunit to 2.5.0](https://github.com/akkadotnet/akka.net/pull/6825)\n\n__Akka.TestKit.Xunit Changes__\n\nDue to breaking API change in Xunit 2.5.0, updating to Akka.NET 1.5.9 might break your unit tests. Some of the breaking change that we've noticed are:\n\n* `AkkaEqualException` constructor has been changed due to changes in Xunit API. If you're using this class, please use the `AkkaEqualException.ForMismatchedValues()` static method instead of using the constructor.\n* Testing for exception types by calling async code inside a sync delegate will not unwrap the `AggregateException` thrown. Either use async all the way or manually unwrap the exception.\n* Xunit `Asset.Equal()` does not automatically check for collection item equality anymore, that means doing `Assert.Equal()` between two dictionary or list would not work anymore.\n* Some Xunit classes have been changed from public to private. If you're using these classes, you will need to refactor your code.\n* __FsCheck.Xunit:__ Xunit Roslyn analyzer has become a bit too overzealous and insists that all unit test method can only return either void or Task and will raise a compilation error if you tried to return anything else. If you're using `FsCheck.Xunit`, you will need to use a pragma to disable this check: `#pragma warning disable xUnit1028`.\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.9, click here](https://github.com/akkadotnet/akka.net/milestone/91?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 12      | 171  | 155  | dependabot[bot]     |\n| 7       | 466  | 165  | Aaron Stannard      |\n| 4       | 1648 | 1725 | Simon Cropp         |\n| 1       | 9    | 4    | Gregorius Soedharmo |\n| 1       | 7    | 1    | Michael Buck        |\n\n#### 1.5.8 June 15th 2023 ####\n\nAkka.NET v1.5.8 is a maintenance release that introduces some new features and fixes some bugs with Akka.NET v1.5.7 and earlier.\n\n* [Akka.Streams: Added `Source`/`Flow` `Setup` operator](https://github.com/akkadotnet/akka.net/pull/6788)\n* [Akka.Cluster.Sharding: fixed potential wire format problem when upgrading from v1.4 to v1.5 with `state-store-mode=ddata` and `remember-entities=on`](https://github.com/akkadotnet/akka.net/issues/6704)\n* [Akka.Remote.TestKit: Fix MNTR crashing because it is using PolyFill extension method](https://github.com/akkadotnet/akka.net/pull/6768)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.8, click here](https://github.com/akkadotnet/akka.net/milestone/90?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 9 | 11 | 11 | dependabot[bot] |\n| 2 | 8 | 0 | Aaron Stannard |\n| 2 | 75 | 4 | Gregorius Soedharmo |\n| 2 | 132 | 158 | Simon Cropp |\n| 1 | 431 | 1 | Ismael Hamed |\n| 1 | 1 | 1 | Andrea Di Stefano |\n\n#### 1.5.7 May 17th 2023 ####\n\nAkka.NET v1.5.7 is a significant release that introduces a [major new reliable message delivery feature to Akka.NET and Akka.Cluster.Sharding](https://getakka.net/articles/actors/reliable-delivery.html): `Akka.Delivery`.\n\n**`Akka.Delivery`**\n\nAkka.Delivery is a reliable delivery system that leverages built-in actors, serialization, and persistence to help guarantee that all messages sent from one producer to one consumer will be delivered, in-order, even across process restarts / actor restarts / network outages.\n\nAkka.Delivery's functionality is divded across four libraries:\n\n* Akka - defines the base definitions for all messages, the `ProducerController` type, and the `ConsumerController` type;\n* Akka.Cluster - contains the serialization definitions for Akka.Delivery;\n* Akka.Persistence - contains the `EventSourcedProducerQueue` implementation, an optional feature that can be used to make the `ProducerController`'s outbound delivery queue persisted to the Akka.Persistence Journal and SnapshotStore; and\n* Akka.Cluster.Sharding - contains the definitions for the `ShardingProducerController` and `ShardingConsumerController`.\n\nWe've documented how these features work in the following two detailed articles official website:\n\n* \"[Reliable Message Delivery with Akka.Delivery](https://getakka.net/articles/actors/reliable-delivery.html)\"\n* \"[Reliable Delivery over Akka.Cluster.Sharding](https://getakka.net/articles/clustering/cluster-sharding-delivery.html)\"\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.7, click here](https://github.com/akkadotnet/akka.net/milestone/86?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |   \n| --- | --- | --- | --- |            \n| 9 | 13972 | 135 | Aaron Stannard | \n| 6 | 92 | 88 | Ebere Abanonu |      \n| 4 | 803 | 807 | Simon Cropp |      \n| 3 | 70 | 53 | Gregorius Soedharmo |\n| 3 | 3 | 3 | dependabot[bot] |      \n\n#### 1.5.6 May 8th 2023 ####\n\nVersion 1.5.6 is a patch with a few minor bug fix\n\n* [TestKit: Remove duplicate info log for unhandled messages](https://github.com/akkadotnet/akka.net/pull/6730)\n* [Core: Change logging DateTime formatter from 12 hour to 24 hour format](https://github.com/akkadotnet/akka.net/pull/6734)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.6, click here](https://github.com/akkadotnet/akka.net/milestone/88?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 2       | 4    | 4    | Aaron Stannard      |\n| 2       | 33   | 84   | Simon Cropp         |\n| 2       | 2    | 2    | dependabot[bot]     |\n| 2       | 2    | 2    | Richard Smith       |\n| 1       | 2    | 2    | Gregorius Soedharmo |\n| 1       | 2    | 12   | Sergey Popov        |\n\n#### 1.5.5 May 4th 2023 ####\n\n* [TestKit: Add new variant of `ExpectAll` that accepts predicates](https://github.com/akkadotnet/akka.net/pull/6668)\n* [FSharp: Downgrade FSharp to v6.0.5](https://github.com/akkadotnet/akka.net/pull/6688)\n* [Core: Bump Google.Protobuf from 3.22.1 to 3.22.3](https://github.com/akkadotnet/akka.net/pull/6648)\n* [Core: Fix ByteString to check for index bounds](https://github.com/akkadotnet/akka.net/pull/6709)\n* [Core: Fix ReceiveActor ReceiveAsync ReceiveTimeout bug](https://github.com/akkadotnet/akka.net/pull/6718)\n* [Core: Fix race condition inside FastLazy](https://github.com/akkadotnet/akka.net/pull/6707)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.5, click here](https://github.com/akkadotnet/akka.net/milestone/87?closed=1).\n\n7 contributors since release 1.5.4\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 16      | 68   | 34   | Ebere Abanonu       |\n| 9       | 598  | 1053 | Simon Cropp         |\n| 4       | 4    | 4    | dependabot[bot]     |\n| 2       | 229  | 5    | Gregorius Soedharmo |\n| 1       | 33   | 28   | Aaron Stannard      |\n| 1       | 256  | 3    | Malcolm Learner     |\n| 1       | 148  | 140  | Sergey Popov        |\n\n#### 1.5.4 April 25th 2023 ####\n\n* [Akka: Enhance IStash API and configuration](https://github.com/akkadotnet/akka.net/pull/6660)\n* [Akka: Add bounded IStash configuration](https://github.com/akkadotnet/akka.net/pull/6661)\n\n**IStash Enhancements**\n\n`IStash` API have been improved with metrics API and its bound/capacity can be programatically set. Documentation can be read [here](https://getakka.net/articles/actors/receive-actor-api.html#bounded-stashes)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.4, click here](https://github.com/akkadotnet/akka.net/milestone/86?closed=1).\n\n5 contributors since release 1.5.3\n\n| COMMITS   | LOC+  | LOC-  | AUTHOR              |\n|-----------|-------|-------|---------------------|\n| 7         | 477   | 486   | Ebere Abanonu       |\n| 4         | 627   | 143   | Aaron Stannard      |\n| 2         | 2     | 2     | dependabot[bot]     |\n| 1         | 87    | 0     | Sergey Popov        |\n| 1         | 0     | 1     | Gregorius Soedharmo |\n\n#### 1.5.3 April 20th 2023 ####\n\n* [Persistence.Sqlite: Bump Microsoft.Data.SQLite to 7.0.5](https://github.com/akkadotnet/akka.net/pull/6643)\n* [Serialization.Hyperion: Fix bug: surrogate and known type provider not applied correctly by Setup](https://github.com/akkadotnet/akka.net/pull/6655)\n* [Akka: Bump Microsoft.Extensions.ObjectPool to 7.0.5](https://github.com/akkadotnet/akka.net/pull/6644)\n* [Persistence.Sql.Common: Add transaction isolation level to SQL queries](https://github.com/akkadotnet/akka.net/pull/6654)\n\n**SQL Transaction Isolation Level Setting**\n\nIn 1.5.3, we're introducing fine-grained control over transaction isolation level inside the `Akka.Persistence.Sql.Common` common library. This setting will be propagated to the rest of the SQL persistence plugin ecosystem and the `Akka.Hosting` package in their next release version.\n\nFour new HOCON settings are introduced:\n* `akka.persistence.journal.{plugin-name}.read-isolation-level`\n* `akka.persistence.journal.{plugin-name}.write-isolation-level`\n* `akka.persistence.snapshot-store.{plugin-name}.read-isolation-level`\n* `akka.persistence.snapshot-store.{plugin-name}.write-isolation-level`\n\nyou can go to the [official Microsoft documentation](https://learn.microsoft.com/en-us/dotnet/api/system.data.isolationlevel?#fields) to read more about these isolation level settings.\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.3, click here](https://github.com/akkadotnet/akka.net/milestone/85?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 23      | 1284 | 1248 | Ebere Abanonu       |\n| 4       | 7    | 7    | dependabot[bot]     |\n| 3       | 933  | 267  | Gregorius Soedharmo |\n| 2       | 4498 | 4407 | Aaron Stannard      |\n\n#### 1.5.2 April 5th 2023 ####\n\nThere are some major behavioral changes introduced to Akka.Cluster and Akka.Persistence in Akka.NET v1.5.2 - to learn how these changes might affect your Akka.NET applications, please [see our Akka.NET v1.5.2 Upgrade Advisories on the Akka.NET website](https://getakka.net/community/whats-new/akkadotnet-v1.5-upgrade-advisories.html#upgrading-to-akkanet-v152).\n\n* [Akka.Remote: Remove secure cookie from configuration](https://github.com/akkadotnet/akka.net/pull/6515)\n* [DData: Remove unused _pruningPerformed and _tombstonedNodes variables](https://github.com/akkadotnet/akka.net/pull/6526)\n* [Akka.Persistence: Remove default object serializer in Sql.Common](https://github.com/akkadotnet/akka.net/pull/6528)\n* [Akka.Cluster: Log send time in verbose heartbeat message](https://github.com/akkadotnet/akka.net/pull/6548)\n* [Akka.Streams: Optimize ForEachAsync](https://github.com/akkadotnet/akka.net/pull/6538)\n* [Akka: Implement alternative AtomicState leveraging WaitAsync](https://github.com/akkadotnet/akka.net/pull/6109)\n* [Akka.Streams: Use correct capacity when creating DynamicQueue when FixedQueue is full](https://github.com/akkadotnet/akka.net/pull/6632)\n* [Akka.Cluster: Enable keep majority split brain resolver as default](https://github.com/akkadotnet/akka.net/pull/6628)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.2, click here](https://github.com/akkadotnet/akka.net/milestone/83?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 56      | 2580 | 2913 | Ebere Abanonu       |\n| 5       | 201  | 82   | Aaron Stannard      |\n| 4       | 754  | 558  | Ismael Hamed        |\n| 3       | 4    | 4    | dependabot[bot]     |\n| 2       | 33   | 12   | Sergey Popov        |\n| 1       | 511  | 53   | Gregorius Soedharmo |\n| 1       | 1    | 1    | ondravondra         |\n| 1       | 0    | 2    | Simon Cropp         |\n\n#### 1.5.1 March 15th 2023 ####\n\n* [Akka.Persistence: Improve memory allocation](https://github.com/akkadotnet/akka.net/pull/6487)\n* [Akka.Persistence: Implement persistence query in InMemory journal](https://github.com/akkadotnet/akka.net/pull/6409)\n* [Akka: Fix bugs reported by PVS-Studio static analysis](https://github.com/akkadotnet/akka.net/pull/6497)\n* [Akka: Bump Google.Protobuf to 3.22.1](https://github.com/akkadotnet/akka.net/pull/6500)\n* [Akka.Persistence.Sqlite: Bump Microsoft.Data.SQLite to 7.0.4](https://github.com/akkadotnet/akka.net/pull/6516)\n* [Akka: Fix StackOverflow exception in NewtonSoftSerializer](https://github.com/akkadotnet/akka.net/pull/6503)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.1, click here](https://github.com/akkadotnet/akka.net/milestone/82?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 9       | 425  | 331  | Ebere Abanonu       |\n| 5       | 6    | 6    | dependabot[bot]     |\n| 3       | 2399 | 109  | Sergey Popov        |\n| 1       | 97   | 4    | Gregorius Soedharmo |\n| 1       | 2    | 2    | Aaron Stannard      |\n\n#### 1.5.0 March 2nd 2023 ####\nVersion 1.5.0 is a major new release of Akka.NET that is now marked as stable and ready for production use.\n\nYou can read the [full notes about what's changed in Akka.NET v1.5 here](https://getakka.net/community/whats-new/akkadotnet-v1.5.html). We also encourage you to watch our video: \"[Akka NET v1.5 New Features and Upgrade Guide](https://www.youtube.com/watch?v=-UPestlIw4k)\"\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.0 so far, click here](https://github.com/akkadotnet/akka.net/milestone/7).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 95 | 25041 | 24976 | Gregorius Soedharmo |\n| 85 | 89784 | 18362 | Aaron Stannard |\n| 76 | 95 | 95 | dependabot[bot] |\n| 18 | 3201 | 908 | Ismael Hamed |\n| 5 | 230 | 251 | Sergey Popov |\n| 2 | 77 | 7 | Vagif Abilov |\n| 2 | 38 | 8 | Brah McDude |\n| 1 | 92 | 92 | nabond251 |\n| 1 | 843 | 0 | Drew |\n| 1 | 7 | 6 | Tjaart Blignaut |\n| 1 | 5 | 4 | Sean Killeen |\n| 1 | 32 | 1 | JonnyII |\n| 1 | 26 | 4 | Thomas Stegemann |\n| 1 | 203 | 5 | Ebere Abanonu |\n| 1 | 2 | 2 | Popov Sergey |\n| 1 | 2 | 2 | Denis |\n| 1 | 16 | 0 | Damian |\n| 1 | 11 | 2 | Nicolai Davies |\n| 1 | 101 | 3 | aminchenkov |\n| 1 | 1 | 1 | zbynek001 |\n| 1 | 1 | 1 | Michel van Os |\n| 1 | 1 | 1 | Adrian D. Alvarez |\n\n#### 1.5.0-beta5 February 28th 2023 ####\nVersion 1.5.0-beta5 contains **breaking API changes** and new API changes for Akka.NET.\n\n* [Akka.Cluster: Remove `JoinAsync` and `JoinSeedNodesAsync` default timeout values](https://github.com/akkadotnet/akka.net/pull/6473)\n* [Akka.Event: expose `Args()` on `LogMessage`](https://github.com/akkadotnet/akka.net/pull/6472)\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 2 | 50 | 28 | Aaron Stannard |\n| 1 | 22 | 32 | Gregorius Soedharmo |\n\n#### 1.5.0-beta4 February 28th 2023 ####\nVersion 1.5.0-beta4 contains **breaking API changes** and new API changes for Akka.NET.\n\n* [Akka.Persistence.TCK: remove `IDisposable` from Akka.Persistence.TCK](https://github.com/akkadotnet/akka.net/pull/6465) - this hid methods from the `TestKit` base classes.\n* [Akka.Remote: Make transport adapter messages public](https://github.com/akkadotnet/akka.net/pull/6469) - adds back public APIs from v1.4.\n* [Akka.TestKit: fix accidental breaking changes in v1.5.0-beta3](https://github.com/akkadotnet/akka.net/issues/6466)\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 2 | 110 | 37 | Aaron Stannard |\n| 1 | 253 | 7 | Gregorius Soedharmo |\n\n#### 1.5.0-beta3 February 27th 2023 ####\nVersion 1.5.0-beta3 contains **breaking API changes** and new API changes for Akka.NET.\n\n* Removed a number of `Obsolete` APIs that were generally not used much.\n* [Akka.Actor: `ActorSystem.Create` throws `PlatformNotSupportedException` on net7.0-android](https://github.com/akkadotnet/akka.net/issues/6459)\n* [Akka.Actor: Append message content to `DeadLetter` log messages](https://github.com/akkadotnet/akka.net/pull/6448)\n* [Akka.Streams: Use `ActorSystem` for `Materializer`](https://github.com/akkadotnet/akka.net/pull/6453) - *massive* memory improvements for applications that materialize a large number of streams.\n* [Akka.Persistence.Query.Sql: backpressure control for queries](https://github.com/akkadotnet/akka.net/pull/6436) - full details on this here: https://petabridge.com/blog/largescale-cqrs-akkadotnet-v1.5/\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 14 | 68 | 794 | Gregorius Soedharmo |\n| 5 | 997 | 498 | Aaron Stannard |\n| 3 | 6 | 6 | dependabot[bot] |\n\n#### 1.5.0-beta2 February 20th 2023 ####\nVersion 1.5.0-beta2 contains **breaking API changes** and new API changes for Akka.NET.\n\n* [Akka.Event: Add K to the DateTime format string to include TZ information](https://github.com/akkadotnet/akka.net/pull/6419)\n* [Akka.TestKit: Reintroduce old code and mark them obsolete](https://github.com/akkadotnet/akka.net/pull/6420) - fixes major regression in Akka.TestKit.Xunit2 where we removed `IDipsoable` before. This PR reintroduces it for backwards compat.\n* [Akka.Cluster.Sharding: clean its internal cache if region/proxy died](https://github.com/akkadotnet/akka.net/pull/6424)\n* [Akka.Util: Harden `Option<T>` by disallowing null value](https://github.com/akkadotnet/akka.net/pull/6426)\n* [Akka.Util: move `DateTime` / `TimeSpan` extension APIs out of Akka.Util and into Akka.Cluster.Metrics](https://github.com/akkadotnet/akka.net/pull/6427)\n* [Akka.Util: Remove unsafe `implicit` conversion operators in `AtomicBoolean` and `AtomicReference<T>`](https://github.com/akkadotnet/akka.net/pull/6429)\n* [Akka: Standardize on C# 11.0](https://github.com/akkadotnet/akka.net/pull/6431)\n* [Akka.Persistence: improve `AsyncWriteJournal` and `PersistentActor` performance](https://github.com/akkadotnet/akka.net/pull/6432)\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 8 | 260 | 942 | Aaron Stannard |\n| 5 | 169 | 60 | Gregorius Soedharmo |\n\n#### 1.5.0-beta1 February 20th 2023 ####\nVersion 1.5.0-beta1 contains **breaking API changes** and new API changes for Akka.NET.\n\n**Breaking Changes: Logging**\n\nIn [https://github.com/akkadotnet/akka.net/pull/6408](https://github.com/akkadotnet/akka.net/pull/6408) the entire `ILoggingAdapter` interface was rewritten in order to improve extensibility and performance (logging is now 30-40% faster in all cases and allocates ~50% fewer objects for large format strings).\n\nAll of the changes made here are _source compatible_, but not _binary compatible_ - meaning that users and package authors will need to do the following:\n\n* Add `using Akka.Event` in all files that used the `ILoggingAdapter` and\n* Recompile.\n\n> NOTE: you can use a [`global using Akka.Event` directive](https://devblogs.microsoft.com/dotnet/welcome-to-csharp-10/#global-using-directives) to do this solution / project-wide if your project supports C# 10 and / or .NET 6.\n\nIn addition to improving the performance of the `ILoggingAdapter` system, we've also made it more extensible - for instance, you can now globally configure the `ILogMessageFormatter` via the following HOCON:\n\n```\nakka { \n    loglevel=INFO,\n    loggers=[\"Akka.Logger.Serilog.SerilogLogger, Akka.Logger.Serilog\"]\n    logger-formatter=\"Akka.Logger.Serilog.SerilogLogMessageFormatter, Akka.Logger.Serilog\"\n}\n```\n\nThat will allow users to use the `SerilogLogMessageFormatter` globally throughout their applications - no more annoying calls like this inside individual actors that want to use semantic logging:\n\n```csharp\nprivate readonly ILoggingAdapter _logger = Context.GetLogger<SerilogLoggingAdapter>();\n```\n\n**Breaking Changes: Akka.Persistence.Sql.Common**\n\nThis is a breaking change that should effect almost no users, but [we deleted some old, bad ideas from the API surface](https://github.com/akkadotnet/akka.net/pull/6412) and it might require all Akka.Persistence.Sql* plugins to be recompiled.\n\nFor what it's worth, [Akka.Persistence.Sql.Common's performance has been improved significantly](https://github.com/akkadotnet/akka.net/pull/6384) and we'll continue working on that with some additional API changes this week.\n\n**Other Changes and Additions**\n\n* [Akka.Actor: New API - `IActorRef.WatchAsync`](https://github.com/akkadotnet/akka.net/pull/6102) - adds a new extension method to `IActorRef` which allows users to subscribe to actor lifecycle notifications outside of the `ActorSystem`.\n* [Akka.Actor: Suppress `System.Object` warning for serializer configuration changes](https://github.com/akkadotnet/akka.net/issues/6377)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.0 so far, click here](https://github.com/akkadotnet/akka.net/milestone/7?closed=1).\n\n                                        \n| COMMITS | LOC+ | LOC- | AUTHOR |      \n| --- | --- | --- | --- |               \n| 12 | 15 | 15 | dependabot[bot] |      \n| 11 | 1930 | 1278 | Aaron Stannard |   \n| 2 | 143 | 73 | Sergey Popov |         \n| 1 | 26 | 4 | Thomas Stegemann |       \n| 1 | 1 | 1 | Michel van Os |           \n\n#### 1.5.0-alpha4 February 1st 2023 ####\nVersion 1.5.0-alpha3 contains several bug fixes and new features to Akka.NET\n\n* [Akka.TestKit: Remove Akka.Tests.Shared.Internal dependency](https://github.com/akkadotnet/akka.net/pull/6258)\n* [Akka.TestKit: Added ReceiveAsync feature to TestActorRef](https://github.com/akkadotnet/akka.net/pull/6281)\n* [Akka.Stream: Fix `IAsyncEnumerator.DisposeAsync` bug](https://github.com/akkadotnet/akka.net/pull/6296)\n* [Akka: Add `Exception` serialization support for built-in messages](https://github.com/akkadotnet/akka.net/pull/6300)\n* [Akka: Add simple actor telemetry feature](https://github.com/akkadotnet/akka.net/pull/6299)\n* [Akka.Streams: Move Channel stages from Alpakka to Akka.NET repo](https://github.com/akkadotnet/akka.net/pull/6268)\n* [Akka: Set actor stash capacity to actor mailbox or dispatcher size](https://github.com/akkadotnet/akka.net/pull/6323)\n* [Akka: Add `ByteString` support to copy to/from `Memory` and `Span`](https://github.com/akkadotnet/akka.net/pull/6026)\n* [Akka: Add support for `UnrestrictedStash`](https://github.com/akkadotnet/akka.net/pull/6325)\n* [Akka: Add API for `UntypedActorWithStash`](https://github.com/akkadotnet/akka.net/pull/6327)\n* [Akka.Persistence.Sql.Common: Fix unhandled `DbExceptions` that are wrapped inside `AggregateException`](https://github.com/akkadotnet/akka.net/pull/6361)\n* [Akka.Persistence.Sql: Fix persistence id publisher actor hung on failure messages](https://github.com/akkadotnet/akka.net/pull/6374)\n* [Akka: Change default pool router supervisor strategy to `Restart`](https://github.com/akkadotnet/akka.net/pull/6370)\n* NuGet package upgrades:\n  * [Bump Microsoft.Data.SQLite from 6.0.10 to 7.0.2](https://github.com/akkadotnet/akka.net/pull/6339)\n  * [Bump Google.Protobuf from 3.21.9 to 3.21.12](https://github.com/akkadotnet/akka.net/pull/6311)\n  * [Bump Newtonsoft.Json from 9.0.1 to 13.0.1](https://github.com/akkadotnet/akka.net/pull/6303)\n  * [Bump Microsoft.Extensions.ObjectPool from 6.0.10 to 7.0.2](https://github.com/akkadotnet/akka.net/pull/6340)\n  * [Bump Microsoft.Extensions.DependencyInjection from 6.0.1 to 7.0.0](https://github.com/akkadotnet/akka.net/pull/6234)\n\nIf you want to see the [full set of changes made in Akka.NET v1.5.0 so far, click here](https://github.com/akkadotnet/akka.net/milestone/7?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 27      | 30   | 30   | dependabot[bot]     |\n| 11      | 2212 | 165  | Gregorius Soedharmo |\n| 4       | 741  | 208  | Ismael Hamed        |\n| 4       | 680  | 112  | Aaron Stannard      |\n| 3       | 87   | 178  | Sergey Popov        |\n| 1       | 843  | 0    | Drew                |\n| 1       | 2    | 2    | Popov Sergey        |\n\n#### 1.5.0-alpha3 November 15th 2022 ####\nAkka.NET v1.5.0-alpha3 is a security patch for Akka.NET v1.5.0-alpha2 but also includes some other fixes.\n\n**Security Advisory**: Akka.NET v1.5.0-alpha2 and earlier depend on an old System.Configuration.ConfigurationManager version 4.7.0 which transitively depends on System.Common.Drawing v4.7.0. The System.Common.Drawing v4.7.0 is affected by a remote code execution vulnerability [GHSA-ghhp-997w-qr28](https://github.com/advisories/GHSA-ghhp-997w-qr28).\n\nWe have separately created a security advisory for [Akka.NET Versions < 1.4.46 and < 1.5.0-alpha3 to track this issue](https://github.com/akkadotnet/akka.net/security/advisories/GHSA-gpv5-rp6w-58r8).\n\n**Fixes and Updates**\n\n* [Akka: Revert ConfigurationException due to binary incompatibility](https://github.com/akkadotnet/akka.net/pull/6204)\n* [Akka: Upgrade to Newtonsoft.Json 13.0.1 as minimum version](https://github.com/akkadotnet/akka.net/pull/6230) - resolves security issue.\n* [Akka: Upgrade to System.Configuration.ConfigurationManager 6.0.1](https://github.com/akkadotnet/akka.net/pull/6229) - resolves security issue. \n* [Akka: Upgrade to Google.Protobuf 3.21.9](https://github.com/akkadotnet/akka.net/pull/6217)\n* [Akka.Cluster.Tools: Make sure that `DeadLetter`s published by `DistributedPubSubMediator` contain full context of topic](https://github.com/akkadotnet/akka.net/pull/6212)\n* [Akka.Streams: Remove suspicious code fragment in ActorMaterializer](https://github.com/akkadotnet/akka.net/pull/6216)\n* [Akka.IO: Report cause for Akka/IO TCP `CommandFailed` events](https://github.com/akkadotnet/akka.net/pull/6221)\n* [Akka.Cluster.Metrics: Improve CPU/Memory metrics collection at Akka.Cluster.Metrics](https://github.com/akkadotnet/akka.net/pull/6225) - built-in metrics are now much more accurate.\n\nYou can see the [full set of tracked issues for Akka.NET v1.5.0 here](https://github.com/akkadotnet/akka.net/milestone/7).\n\n#### 1.5.0-alpha2 October 17th 2022 ####\nAkka.NET v1.5.0-alpha2 is a maintenance release for Akka.NET v1.5 that contains numerous performance improvements in critical areas, including core actor message processing and Akka.Remote.\n\n**Performance Fixes**\n\n* [remove delegate allocation from `ForkJoinDispatcher` and `DedicatedThreadPool`](https://github.com/akkadotnet/akka.net/pull/6162)\n* [eliminate `Mailbox` delegate allocations](https://github.com/akkadotnet/akka.net/pull/6162)\n* [Reduce `FSM<TState, TData>` allocations](https://github.com/akkadotnet/akka.net/pull/6162)\n* [removed boxing allocations inside `FSM.State.Equals`](https://github.com/akkadotnet/akka.net/pull/6196)\n* [Eliminate `DefaultLogMessageFormatter` allocations](https://github.com/akkadotnet/akka.net/pull/6166)\n\nIn sum you should expect to see total memory consumption, garbage collection, and throughput improve when you upgrade to Akka.NET v1.5.0-alpha2.\n\n**Other Features and Improvements**\n\n* [DData: Suppress gossip message from showing up in debug log unless verbose debug logging is turned on](https://github.com/akkadotnet/akka.net/pull/6089)\n* [TestKit: TestKit automatically injects the default TestKit default configuration if an ActorSystem is passed into its constructor](https://github.com/akkadotnet/akka.net/pull/6092)\n* [Sharding: Added a new `GetEntityLocation` query message to retrieve an entity address location in the shard region](https://github.com/akkadotnet/akka.net/pull/6107)\n* [Sharding: Fixed `GetEntityLocation` uses wrong actor path](https://github.com/akkadotnet/akka.net/pull/6121)\n* [Akka.Cluster and Akka.Cluster.Sharding: should throw human-friendly exception when accessing cluster / sharding plugins when clustering is not running](https://github.com/akkadotnet/akka.net/pull/6169)\n* [Akka.Cluster.Sharding: Add `HashCodeMessageExtractor` factory](https://github.com/akkadotnet/akka.net/pull/6173)\n* [Akka.Persistence.Sql.Common: Fix `DbCommand.CommandTimeout` in `BatchingSqlJournal`](https://github.com/akkadotnet/akka.net/pull/6175)\n\n\n#### 1.5.0-alpha1 August 22 2022 ####\nAkka.NET v1.5.0-alpha1 is a major release that contains a lot of code improvement and rewrites/refactors. **Major upgrades to Akka.Cluster.Sharding in particular**.\n\n__Deprecation__\n\nSome codes and packages are being deprecated in v1.5\n* [Deprecated/removed Akka.DI package](https://github.com/akkadotnet/akka.net/pull/6003)\n  Please use the new `Akka.DependencyInjection` NuGet package as a replacement. Documentation can be read [here](https://getakka.net/articles/actors/dependency-injection.html)\n* [Deprecated/removed Akka.MultiNodeTestRunner package](https://github.com/akkadotnet/akka.net/pull/6002)\n  Please use the new `Akka.MultiNode.TestAdapter` NuGet package as a replacement. Documentation can be read [here](https://getakka.net/articles/testing/multi-node-testing.html).\n* [Streams] [Refactor `SetHandler(Inlet, Outlet, IanAndOutGraphStageLogic)` to `SetHandlers()`](https://github.com/akkadotnet/akka.net/pull/5931)\n\n__Changes__\n\n__Akka__\n\n* [Add dual targetting to support .NET 6.0](https://github.com/akkadotnet/akka.net/pull/5926)\n  All `Akka.NET` packages are now dual targetting netstandard2.0 and net6.0 platforms, we will be integrating .NET 6.0 better performing API and SDK in the future.\n* [Add `IThreadPoolWorkItem` support to `ThreadPoolDispatcher`](https://github.com/akkadotnet/akka.net/pull/5943)\n* [Add `ValueTask` support to `PipeTo` extensions](https://github.com/akkadotnet/akka.net/pull/6025)\n* [Add `CancellationToken` support to `Cancelable`](https://github.com/akkadotnet/akka.net/pull/6032)\n* [Fix long starting loggers crashing `ActorSystem` startup](https://github.com/akkadotnet/akka.net/pull/6053)\n  All loggers are asynchronously started during `ActorSystem` startup. A warning will be logged if a logger does not respond within the prescribed `akka.logger-startup-timeout` period and will be awaited upon in a detached task until the `ActorSystem` is shut down. This have a side effect in that slow starting loggers might not be able to capture all log events emmited by the `EventBus` until it is ready.\n\n__Akka.Cluster__\n\n* [Fix `ChannelTaskScheduler` to work with Akka.Cluster, ported from 1.4](https://github.com/akkadotnet/akka.net/pull/5920)\n* [Harden `Cluster.JoinAsync()` and `Cluster.JoinSeedNodesAsync()` methods](https://github.com/akkadotnet/akka.net/pull/6033)\n* [Fix `ShardedDaemonProcess` should use lease, if configured](https://github.com/akkadotnet/akka.net/pull/6058)\n* [Make `SplitBrainResolver` more tolerant to invalid node records](https://github.com/akkadotnet/akka.net/pull/6064)\n* [Enable `Heartbeat` and `HearbeatRsp` message serialization and deserialization](https://github.com/akkadotnet/akka.net/pull/6063)\n  By default, `Akka.Cluster` will now use the new `Heartbeat` and `HartbeatRsp` message serialization/deserialization that was introduced in version 1.4.19. If you're doing a rolling upgrade from a version older than 1.4.19, you will need to set `akka.cluster.use-legacy-heartbeat-message` to true.\n\n__Akka.Cluster.Sharding__\n\n* [Make Cluster.Sharding recovery more tolerant against corrupted persistence data](https://github.com/akkadotnet/akka.net/pull/5978)\n* [Major reorganization to Akka.Cluster.Sharding](https://github.com/akkadotnet/akka.net/pull/5857)\n\nThe Akka.Cluster.Sharding changes in Akka.NET v1.5 are significant, but backwards compatible with v1.4 and upgrades should happen seamlessly.\n\nAkka.Cluster.Sharding's `state-store-mode` has been split into two parts:\n\n* CoordinatorStore\n* ShardStore\n\nWhich can use different persistent mode configured via `akka.cluster.sharding.state-store-mode` & `akka.cluster.sharding.remember-entities-store`.\n\nPossible combinations:\n\nstate-store-mode | remember-entities-store | CoordinatorStore mode | ShardStore mode\n------------------ | ------------------------- | ------------------------ | ------------------\npersistence (default) | - (ignored) | persistence | persistence\nddata | ddata | ddata | ddata\nddata | eventsourced (new) | ddata | persistence\n\nThere should be no breaking changes from user perspective. Only some internal messages/objects were moved.\nThere should be no change in the `PersistentId` behavior and default persistent configuration (`akka.cluster.sharding.state-store-mode`)\n\nThis change is designed to speed up the performance of Akka.Cluster.Sharding coordinator recovery by moving `remember-entities` recovery into separate actors - this also solves major performance problems with the `ddata` recovery mode overall.\n\nThe recommended settings for maximum ease-of-use for Akka.Cluster.Sharding going forward will be:\n\n```\nakka.cluster.sharding{\n  state-store-mode = ddata\n  remember-entities-store = eventsourced\n}\n```\n\nHowever, for the sake of backwards compatibility the Akka.Cluster.Sharding defaults have been left as-is:\n\n```\nakka.cluster.sharding{\n  state-store-mode = persistence\n  # remember-entities-store (not set - also uses legacy Akka.Persistence)\n}\n```\n\nSwitching over to using `remember-entities-store = eventsourced` will cause an initial migration of data from the `ShardCoordinator`'s journal into separate event journals going forward - __this migration is irreversible__ without taking the cluster offline and deleting all Akka.Cluster.Sharding-related data from Akka.Persistence, so plan accordingly.\n\n__Akka.Cluster.Tools__\n\n* [Add typed `ClusterSingleton` support](https://github.com/akkadotnet/akka.net/pull/6050)\n* [Singleton can use `Member.AppVersion` metadata to decide its host node during hand-over](https://github.com/akkadotnet/akka.net/pull/6065)\n  `Akka.Cluster.Singleton` can use `Member.AppVersion` metadata when it is relocating the singleton instance. When turned on, new singleton instance will be created on the oldest node in the cluster with the highest `AppVersion` number. You can opt-in to this behavior by setting `akka.cluster.singleton.consider-app-version` to true.\n\n__Akka.Persistence.Query__\n\n* [Add `TimeBasedUuid` offset property](https://github.com/akkadotnet/akka.net/pull/5995)\n\n__Akka.Remote__\n\n* [Fix typo in HOCON SSL settings. Backward compatible with the old setting names](https://github.com/akkadotnet/akka.net/pull/5895)\n* [Treat all exceptions thrown inside `EndpointReader` message dispatch as transient, Ported from 1.4](https://github.com/akkadotnet/akka.net/pull/5972)\n* [Fix SSL enable HOCON setting](https://github.com/akkadotnet/akka.net/pull/6038)\n\n__Akka.Streams__\n\n* [Allow GroupBy sub-flow to re-create closed sub-streams, backported to 1.4](https://github.com/akkadotnet/akka.net/pull/5874)\n* [Fix ActorRef source not completing properly, backported to 1.4](https://github.com/akkadotnet/akka.net/pull/5875)\n* [Rewrite `ActorRefSink` as a `GraphStage`](https://github.com/akkadotnet/akka.net/pull/5920)\n* [Add stream cancellation cause upstream propagation, ported from 1.4](https://github.com/akkadotnet/akka.net/pull/5949)\n* [Fix `VirtualProcessor` subscription bug, ported from 1.4](https://github.com/akkadotnet/akka.net/pull/5950)\n* [Refactor `Sink.Ignore` signature from `Task` to `Task<Done>`](https://github.com/akkadotnet/akka.net/pull/5973)\n* [Add `SourceWithContext.FromTuples()` operator`](https://github.com/akkadotnet/akka.net/pull/5987)\n* [Add `GroupedWeightedWithin` operator](https://github.com/akkadotnet/akka.net/pull/6000)\n* [Add `IAsyncEnumerable` source](https://github.com/akkadotnet/akka.net/pull/6044)\n\n__Akka.TestKit__\n\n* [Rewrite Akka.TestKit to work asynchronously from the ground up](https://github.com/akkadotnet/akka.net/pull/5953)\n\n\n\n#### 1.4.37 April 14 2022 ####\nAkka.NET v1.4.37 is a minor release that contains some minor bug fixes.\n\n* [Persistence.Query: Change AllEvents query failure log severity from Debug to Error](https://github.com/akkadotnet/akka.net/pull/5835)\n* [Coordination: Harden LeaseProvider instance Activator exception handling](https://github.com/akkadotnet/akka.net/pull/5838)\n* [Akka: Make ActorSystemImpl.Abort skip the CoordinatedShutdown check](https://github.com/akkadotnet/akka.net/pull/5839)\n\nIf you want to see the [full set of changes made in Akka.NET v1.4.37, click here](https://github.com/akkadotnet/akka.net/milestone/68?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 3       | 15   | 4    | Gregorius Soedharmo |\n| 1       | 2    | 2    | dependabot[bot]     |\n\n#### 1.4.36 April 4 2022 ####\nAkka.NET v1.4.36 is a minor release that contains some bug fixes. Most of the changes have been aimed at improving our web documentation and code cleanup to modernize some of our code.\n\n* [Akka: Bump Hyperion to 0.12.2](https://github.com/akkadotnet/akka.net/pull/5805)\n\n__Bug fixes__:\n* [Akka: Fix CoordinatedShutdown memory leak](https://github.com/akkadotnet/akka.net/pull/5816)\n* [Akka: Fix TcpConnection error handling and death pact de-registration](https://github.com/akkadotnet/akka.net/pull/5817)\n\nIf you want to see the [full set of changes made in Akka.NET v1.4.36, click here](https://github.com/akkadotnet/akka.net/milestone/67?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 5       | 274  | 33   | Gregorius Soedharmo |\n| 4       | 371  | 6    | Ebere Abanonu       |\n| 3       | 9    | 3    | Aaron Stannard      |\n| 1       | 34   | 38   | Ismael Hamed        |\n| 1       | 2    | 3    | Adrian Leonhard     |\n\n#### 1.4.35 March 18 2022 ####\nAkka.NET v1.4.35 is a minor release that contains some bug fixes. Most of the changes have been aimed at improving our web documentation and code cleanup to modernize some of our code.\n\n__Bug fixes__:\n* [Akka: Fixed IActorRef leak inside EventStream](https://github.com/akkadotnet/akka.net/pull/5720)\n* [Akka: Fixed ActorSystemSetup.And forgetting registered types](https://github.com/akkadotnet/akka.net/issues/5728)\n* [Akka.Persistence.Query.Sql: Fixed Query PersistenceIds query bug](https://github.com/akkadotnet/akka.net/pull/5715)\n* [Akka.Streams: Add MapMaterializedValue for SourceWithContext and FlowWithContext](https://github.com/akkadotnet/akka.net/pull/5711)\n\nIf you want to see the [full set of changes made in Akka.NET v1.4.35, click here](https://github.com/akkadotnet/akka.net/milestone/66?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR              |\n|---------|------|------|---------------------|\n| 6       | 2178 | 174  | Aaron Stannard      |\n| 2       | 43   | 33   | Gregorius Soedharmo |\n| 1       | 71   | 19   | Ismael Hamed        |\n| 1       | 1    | 1    | dependabot[bot]     |\n\n#### 1.4.34 March 7 2022 ####\nAkka.NET v1.4.34 is a minor release that contains some bug fixes. Most of the changes have been aimed at improving our web documentation and code cleanup to modernize some of our code. \n\n__Bug fixes__:\n* [Akka: Added support to pass a state object into CircuitBreaker to reduce allocations](https://github.com/akkadotnet/akka.net/pull/5650)\n* [Akka.DistributedData: ORSet merge operation performance improvement](https://github.com/akkadotnet/akka.net/pull/5686)\n* [Akka.Streams: FlowWithContext generic type parameters have been reordered to make them easier to read](https://github.com/akkadotnet/akka.net/pull/5648)\n\n__Improvements__:\n* [Akka: PipeTo can be configured to retain async threading context](https://github.com/akkadotnet/akka.net/pull/5684)\n\nIf you want to see the [full set of changes made in Akka.NET v1.4.34, click here](https://github.com/akkadotnet/akka.net/milestone/65?closed=1).\n\n| COMMITS | LOC+   | LOC-  | AUTHOR              |\n|---------|--------|-------|---------------------|\n| 12      | 1177   | 718   | Ebere Abanonu       |\n| 6       | 192    | 47    | Gregorius Soedharmo |\n| 3       | 255    | 167   | Ismael Hamed        |\n| 1       | 3      | 0     | Aaron Stannard      |\n| 1       | 126    | 10    | Drew                |\n\n#### 1.4.33 February 14 2022 ####\nAkka.NET v1.4.33 is a minor release that contains some bug fixes. Most of the changes have been aimed at improving our web documentation and code cleanup to modernize some of our code. The most important bug fix is the actor Props memory leak when actors are cached inside Akka.Remote. \n\n* [Akka: Fix memory leak bug within actor Props](https://github.com/akkadotnet/akka.net/pull/5556)\n* [Akka: Fix ChannelExecutor configuration backward compatibility bug](https://github.com/akkadotnet/akka.net/pull/5568)\n* [Akka.TestKit: Fix ExpectAsync detached Task bug](https://github.com/akkadotnet/akka.net/pull/5538)\n* [DistributedPubSub: Fix DeadLetter suppression for topics with no subscribers](https://github.com/akkadotnet/akka.net/pull/5561)\n\nIf you want to see the [full set of changes made in Akka.NET v1.4.33, click here](https://github.com/akkadotnet/akka.net/milestone/64?closed=1).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 63 | 1264 | 1052 | Ebere Abanonu |\n| 9 | 221 | 27 | Brah McDude |\n| 8 | 2537 | 24 | Gregorius Soedharmo |\n| 2 | 4 | 1 | Aaron Stannard |\n| 1 | 2 | 2 | ignobilis |\n\n#### 1.4.32 January 19 2022 ####\nAkka.NET v1.4.32 is a minor release that contains some API improvements. Most of the changes have been aimed at improving our web documentation and code cleanup to modernize some of our code. One big improvement in this version release is the Hyperion serialization update. \n\nHyperion 0.12.0 introduces a new deserialization security mechanism to allow users to selectively filter allowed types during deserialization to prevent deserialization of untrusted data described [here](https://cwe.mitre.org/data/definitions/502.html). This new feature is exposed in Akka.NET in HOCON through the new [`akka.actor.serialization-settings.hyperion.allowed-types`](https://github.com/akkadotnet/akka.net/blob/dev/src/contrib/serializers/Akka.Serialization.Hyperion/reference.conf#L33-L35) settings or programmatically through the new `WithTypeFilter` method in the `HyperionSerializerSetup` class.\n\nThe simplest way to programmatically describe the type filter is to use the convenience class `TypeFilterBuilder`:\n\n```c#\nvar typeFilter = TypeFilterBuilder.Create()\n    .Include<AllowedClassA>()\n    .Include<AllowedClassB>()\n    .Build();\nvar setup = HyperionSerializerSetup.Default\n    .WithTypeFilter(typeFilter);\n```\n\nYou can also create your own implementation of `ITypeFilter` and pass an instance of it into the `WithTypeFilter` method.\n\nFor complete documentation, please read the Hyperion [readme on filtering types for secure deserialization.](https://github.com/akkadotnet/Hyperion#whitelisting-types-on-deserialization)\n\n* [Akka.Streams: Added Flow.LazyInitAsync and Sink.LazyInitSink to replace Sink.LazyInit](https://github.com/akkadotnet/akka.net/pull/5476)\n* [Akka.Serialization.Hyperion: Implement the new ITypeFilter security feature](https://github.com/akkadotnet/akka.net/pull/5510)\n\nIf you want to see the [full set of changes made in Akka.NET v1.4.32, click here](https://github.com/akkadotnet/akka.net/milestone/63).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 11 | 1752 | 511 | Aaron Stannard |\n| 8 | 1433 | 534 | Gregorius Soedharmo |\n| 3 | 754 | 222 | Ismael Hamed |\n| 2 | 3 | 6 | Brah McDude |\n| 2 | 227 | 124 | Ebere Abanonu |\n| 1 | 331 | 331 | Sean Killeen |\n| 1 | 1 | 1 | TangkasOka |\n\n#### 1.4.31 December 20 2021 ####\nAkka.NET v1.4.31 is a minor release that contains some bug fixes.\n\nAkka.NET v1.4.30 contained a breaking change that broke binary compatibility with all Akka.DI plugins.\nEven though those plugins are deprecated that change is not compatible with our SemVer standards \nand needed to be reverted. We regret the error.\n\nBug fixes:\n* [Akka: Reverted Props code refactor](https://github.com/akkadotnet/akka.net/pull/5454)\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 1 | 9 | 2 | Gregorius Soedharmo |\n\n#### 1.4.30 December 20 2021 ####\nAkka.NET v1.4.30 is a minor release that contains some enhancements for Akka.Streams and some bug fixes.\n\nNew features:\n* [Akka: Added StringBuilder pooling in NewtonsoftJsonSerializer](https://github.com/akkadotnet/akka.net/pull/4929)\n* [Akka.TestKit: Added InverseFishForMessage](https://github.com/akkadotnet/akka.net/pull/5430)\n* [Akka.Streams: Added custom frame sized Flow to Framing](https://github.com/akkadotnet/akka.net/pull/5444)\n* [Akka.Streams: Allow Stream to be consumed as IAsyncEnumerable](https://github.com/akkadotnet/akka.net/pull/4742) \n\nBug fixes:\n* [Akka.Cluster: Reverted startup sequence change](https://github.com/akkadotnet/akka.net/pull/5437)\n\nIf you want to see the [full set of changes made in Akka.NET v1.4.30, click here](https://github.com/akkadotnet/akka.net/milestone/61).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 6 | 75 | 101 | Aaron Stannard |\n| 2 | 53 | 5 | Brah McDude |\n| 2 | 493 | 12 | Drew |\n| 1 | 289 | 383 | Andreas Dirnberger |\n| 1 | 220 | 188 | Gregorius Soedharmo |\n| 1 | 173 | 28 | Ismael Hamed |\n\n#### 1.4.29 December 13 2021 ####\n**Maintenance Release for Akka.NET 1.4**\nAkka.NET v1.4.29 is a minor release that contains some enhancements for Akka.Streams and some bug fixes.\n\nNew features:\n* [Akka: Added a channel based task scheduler](https://github.com/akkadotnet/akka.net/pull/5403)\n* [Akka.Discovery: Moved Akka.Discovery out of beta](https://github.com/akkadotnet/akka.net/pull/5380)\n\nDocumentation:\n* [Akka: Added a serializer ID troubleshooting table](https://github.com/akkadotnet/akka.net/pull/5418)\n* [Akka.Cluster.Sharding: Added a tutorial section](https://github.com/akkadotnet/akka.net/pull/5421)\n\nBug fixes:\n* [Akka.Cluster: Changed Akka.Cluster startup sequence](https://github.com/akkadotnet/akka.net/pull/5398)\n* [Akka.DistributedData: Fix LightningDB throws MDB_NOTFOUND when data directory already exist](https://github.com/akkadotnet/akka.net/pull/5424)\n* [Akka.IO: Fix memory leak on UDP connector](https://github.com/akkadotnet/akka.net/pull/5404)\n* [Akka.Persistence.Sql: Fix performance issue with highest sequence number query](https://github.com/akkadotnet/akka.net/pull/5420)\n\nIf you want to see the [full set of changes made in Akka.NET v1.4.29, click here](https://github.com/akkadotnet/akka.net/milestone/60).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 7 | 82 | 51 | Aaron Stannard |\n| 6 | 1381 | 483 | Gregorius Soedharmo |\n| 4 | 618 | 85 | Andreas Dirnberger |\n| 1 | 4 | 4 | Luca V |\n| 1 | 1 | 1 | dependabot[bot] |\n\n#### 1.4.28 November 10 2021 ####\n**Maintenance Release for Akka.NET 1.4**\nAkka.NET v1.4.28 is a minor release that contains some enhancements for Akka.Streams and some bug fixes.\n\n**New Akka.Streams Stages**\nAkka.NET v1.4.28 includes two new Akka.Streams stages:\n\n* [`Source.Never`](https://getakka.net/articles/streams/builtinstages.html#never) - a utility stage that never emits any elements, never completes, and never fails. Designed primarily for unit testing.\n* [`Flow.WireTap`](https://getakka.net/articles/streams/builtinstages.html#wiretap) - the `WireTap` stage attaches a given `Sink` to a `Flow` without affecting any of the upstream or downstream elements. This stage is designed for performance monitoring and instrumentation of Akka.Streams graphs.\n\nIn addition to these, here are some other changes introduced Akka.NET v1.4.28:\n\n* [Akka.Streams: `Source` that flattens a `Task` source and keeps the materialized value](https://github.com/akkadotnet/akka.net/pull/5338)\n* [Akka.Streams: made `GraphStageLogic.LogSource` virtual and change default `StageLogic` `LogSource`](https://github.com/akkadotnet/akka.net/pull/5360)\n* [Akka.IO: `UdpListener` Responds IPv6 Bound message with IPv4 Bind message](https://github.com/akkadotnet/akka.net/issues/5344)\n* [Akka.MultiNodeTestRunner: now runs on Linux and as a `dotnet test` package](https://github.com/akkadotnet/Akka.MultiNodeTestRunner/releases/tag/1.0.0) - we will keep you posted on this, as we're still working on getting Rider / VS Code / Visual Studio debugger-attached support to work correctly.\n* [Akka.Persistence.Sql.Common: Cancel `DBCommand` after finish reading events by PersistenceId ](https://github.com/akkadotnet/akka.net/pull/5311) - *massive* performance fix for Akka.Persistence with many log entries on SQL-based journals.\n* [Akka.Actor: `DefaultResizer` does not reisize when `ReceiveAsync` is used](https://github.com/akkadotnet/akka.net/issues/5327)\n\nIf you want to see the [full set of changes made in Akka.NET v1.4.28, click here](https://github.com/akkadotnet/akka.net/milestone/59).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 16 | 2707 | 1911 | Sean Killeen |\n| 8 | 1088 | 28 | Ismael Hamed |\n| 6 | 501 | 261 | Gregorius Soedharmo |\n| 5 | 8 | 8 | dependabot[bot] |\n| 4 | 36 | 86 | Aaron Stannard |\n| 1 | 1 | 0 | Jarl Sveinung Fl√∏ Rasmussen |\n\nSpecial thanks for @SeanKilleen for contributing extensive Markdown linting and automated CI checks for that to our documentation! https://github.com/akkadotnet/akka.net/issues/5312\n\n#### 1.4.27 October 11 2021 ####\n**Maintenance Release for Akka.NET 1.4**\nAkka.NET v1.4.27 is a small release that contains some _major_ performance improvements for Akka.Remote.\n\n**Performance Fixes**\nIn [RemoteActorRefProvider address paring, caching and resolving improvements](https://github.com/akkadotnet/akka.net/pull/5273) Akka.NET contributor @Zetanova introduced some major changes that make the entire `ActorPath` class much more reusable and more parse-efficient.\n\nOur last major round of Akka.NET performance improvements in Akka.NET v1.4.25 produced the following:\n\n```\nOSVersion:                         Microsoft Windows NT 6.2.9200.0\nProcessorCount:                    16\nClockSpeed:                        0 MHZ\nActor Count:                       32\nMessages sent/received per client: 200000  (2e5)\nIs Server GC:                      True\nThread count:                      111\n\nNum clients, Total [msg], Msgs/sec, Total [ms]\n         1,  200000,    130634,    1531.54\n         5, 1000000,    246975,    4049.20\n        10, 2000000,    244499,    8180.16\n        15, 3000000,    244978,   12246.39\n        20, 4000000,    245159,   16316.37\n        25, 5000000,    243333,   20548.09\n        30, 6000000,    241644,   24830.55\n```\n\nIn Akka.NET v1.4.27 those numbers now look like:\n\n```\nOSVersion:                         Microsoft Windows NT 6.2.9200.\nProcessorCount:                    16                            \nClockSpeed:                        0 MHZ                         \nActor Count:                       32                            \nMessages sent/received per client: 200000  (2e5)                 \nIs Server GC:                      True                          \nThread count:                      111                           \n                                                                 \nNum clients, Total [msg], Msgs/sec, Total [ms]                   \n         1,  200000,    105043,    1904.29                       \n         5, 1000000,    255494,    3914.73                       \n        10, 2000000,    291843,    6853.30                       \n        15, 3000000,    291291,   10299.75                       \n        20, 4000000,    286513,   13961.68                       \n        25, 5000000,    292569,   17090.64                       \n        30, 6000000,    281492,   21315.35\n```\n\nTo put these numbers in comparison, here's what Akka.NET's performance looked like as of v1.4.0:\n\n```\nNum clients (actors)    Total [msg] Msgs/sec    Total [ms]\n1   200000  69736   2868.60\n5   1000000 141243  7080.98\n10  2000000 136771  14623.27\n15  3000000 38190   78556.49\n20  4000000 32401   123454.60\n25  5000000 33341   149967.08\n30  6000000 126093  47584.92\n```\n\n\nWe've made Akka.Remote consistently faster, more predictable, and reduced total memory consumption significantly in the process.\n\n\nYou can [see the full set of changes introduced in Akka.NET v1.4.27 here](https://github.com/akkadotnet/akka.net/milestone/57?closed=1)\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 3 | 89 | 8 | Aaron Stannard |\n| 1 | 856 | 519 | Andreas Dirnberger |\n| 1 | 3 | 4 | Vadym Artemchuk |\n| 1 | 261 | 233 | Gregorius Soedharmo |\n| 1 | 1 | 1 | dependabot[bot] |\n\n#### 1.4.26 September 28 2021 ####\n**Maintenance Release for Akka.NET 1.4**\nAkka.NET v1.4.26 is a very small release that addresses one wire format regression introduced in Akka.NET v1.4.20.\n\n**Bug Fixes and Improvements**\n* [Akka.Remote / Akka.Persistence: PrimitiveSerializers manifest backwards compatibility problem](https://github.com/akkadotnet/akka.net/issues/5279) - this could cause regressions when upgrading to Akka.NET v1.4.20 and later. We have resolved this issue in Akka.NET v1.4.26. [Please see our Akka.NET v1.4.26 upgrade advisory for details](https://getakka.net/community/whats-new/akkadotnet-v1.4-upgrade-advisories.html#upgrading-to-akkanet-v1426-from-older-versions).\n* [Akka.DistributedData.LightningDb: Revert #5180, switching back to original LightningDB packages](https://github.com/akkadotnet/akka.net/pull/5286)\n\nYou can [see the full set of changes introduced in Akka.NET v1.4.26 here](https://github.com/akkadotnet/akka.net/milestone/57?closed=1)\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 4 | 99 | 96 | Gregorius Soedharmo |\n| 3 | 79 | 5 | Aaron Stannard |\n| 1 | 1 | 1 | dependabot[bot] |\n\n#### 1.4.25 September 08 2021 ####\n**Maintenance Release for Akka.NET 1.4**\nAkka.NET v1.4.25 includes some _significant_ performance improvements for Akka.Remote and a number of important bug fixes and improvements.\n\n**Bug Fixes and Improvements**\n* [Akka.IO.Tcp: connecting to an unreachable DnsEndpoint never times out](https://github.com/akkadotnet/akka.net/issues/5154)\n* [Akka.Actor: need to enforce `stdout-loglevel = off` all the way through ActorSystem lifecycle](https://github.com/akkadotnet/akka.net/issues/5246)\n* [Akka.Actor: `Ask` should push unhandled answers into deadletter](https://github.com/akkadotnet/akka.net/pull/5259)\n* [Akka.Routing: Make Router.Route` virtual](https://github.com/akkadotnet/akka.net/pull/5238)\n* [Akka.Actor: Improve performance on `IActorRef.Child` API](https://github.com/akkadotnet/akka.net/pull/5242) - _signficantly_ improves performance of many Akka.NET functions, but includes a public API change on `IActorRef` that is source compatible but not necessarily binary-compatible. `IActorRef GetChild(System.Collections.Generic.IEnumerable<string> name)` is now `IActorRef GetChild(System.Collections.Generic.IReadOnlyList<string> name)`. This API is almost never called directly by user code (it's almost always called via the internals of the `ActorSystem` when resolving `ActorSelection`s or remote messages) so this change should be safe.\n* [Akka.Actor: `IsNobody` throws NRE](https://github.com/akkadotnet/akka.net/issues/5213)\n* [Akka.Cluster.Tools: singleton fix cleanup of overdue _removed members](https://github.com/akkadotnet/akka.net/pull/5229)\n* [Akka.DistributedData: ddata exclude `Exiting` members in Read/Write `MajorityPlus`](https://github.com/akkadotnet/akka.net/pull/5227)\n\n**Performance Improvements**\nUsing our standard `RemotePingPong` benchmark, the difference between v1.4.24 and v1.4.24 is significant:\n\n_v1.4.24_\n\n```\nOSVersion:                         Microsoft Windows NT 6.2.9200.0 \nProcessorCount:                    16                              \nClockSpeed:                        0 MHZ                           \nActor Count:                       32                              \nMessages sent/received per client: 200000  (2e5)                   \nIs Server GC:                      True                            \nThread count:                      111                             \n                                                                   \nNum clients, Total [msg], Msgs/sec, Total [ms]                     \n         1,  200000,     96994,    2062.08                         \n         5, 1000000,    194818,    5133.93                         \n        10, 2000000,    198966,   10052.93                         \n        15, 3000000,    199455,   15041.56                         \n        20, 4000000,    198177,   20184.53                         \n        25, 5000000,    197613,   25302.80                         \n        30, 6000000,    197349,   30403.82                         \n```\n\n_v1.4.25_\n\n```\nOSVersion:                         Microsoft Windows NT 6.2.9200.0\nProcessorCount:                    16\nClockSpeed:                        0 MHZ\nActor Count:                       32\nMessages sent/received per client: 200000  (2e5)\nIs Server GC:                      True\nThread count:                      111\n\nNum clients, Total [msg], Msgs/sec, Total [ms]\n         1,  200000,    130634,    1531.54\n         5, 1000000,    246975,    4049.20\n        10, 2000000,    244499,    8180.16\n        15, 3000000,    244978,   12246.39\n        20, 4000000,    245159,   16316.37\n        25, 5000000,    243333,   20548.09\n        30, 6000000,    241644,   24830.55\n```\n\nThis represents a 24% overall throughput improvement in Akka.Remote across the board. We have additional PRs staged that should get aggregate performance improvements above 40% for Akka.Remote over v1.4.24 but they didn't make it into the Akka.NET v1.4.25 release.\n\nYou can [see the full set of changes introduced in Akka.NET v1.4.25 here](https://github.com/akkadotnet/akka.net/milestone/56?closed=1)\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 32 | 1301 | 400 | Aaron Stannard |\n| 4 | 358 | 184 | Andreas Dirnberger |\n| 3 | 414 | 149 | Gregorius Soedharmo |\n| 3 | 3 | 3 | dependabot[bot] |\n| 2 | 43 | 10 | zbynek001 |\n| 1 | 14 | 13 | tometchy |\n| 1 | 139 | 3 | carlcamilleri |\n\n#### 1.4.24 August 17 2021 ####\n**Maintenance Release for Akka.NET 1.4**\n\n**Bug Fixes and Improvements**\n\n* [Akka: Make `Router` open to extensions](https://github.com/akkadotnet/akka.net/pull/5201)\n* [Akka: Allow null response to `Ask<T>`](https://github.com/akkadotnet/akka.net/pull/5205)\n* [Akka.Cluster: Fix cluster startup race condition](https://github.com/akkadotnet/akka.net/pull/5185)\n* [Akka.Streams: Fix RestartFlow bug](https://github.com/akkadotnet/akka.net/pull/5181)\n* [Akka.Persistence.Sql: Implement TimestampProvider in BatchingSqlJournal](https://github.com/akkadotnet/akka.net/pull/5192)\n* [Akka.Serialization.Hyperion: Bump Hyperion version from 0.11.0 to 0.11.1](https://github.com/akkadotnet/akka.net/pull/5206)\n* [Akka.Serialization.Hyperion: Add Hyperion unsafe type filtering security feature](https://github.com/akkadotnet/akka.net/pull/5208)\n\nYou can [see the full set of changes introduced in Akka.NET v1.4.24 here](https://github.com/akkadotnet/akka.net/milestone/55?closed=1)\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 5 | 360 | 200 | Aaron Stannard |\n| 3 | 4 | 4 | dependabot[bot] |\n| 1 | 548 | 333 | Arjen Smits |\n| 1 | 42 | 19 | Martijn Schoemaker |\n| 1 | 26 | 27 | Andreas Dirnberger |\n| 1 | 171 | 27 | Gregorius Soedharmo |\n\n#### 1.4.23 August 09 2021 ####\n**Maintenance Release for Akka.NET 1.4**\n\nAkka.NET v1.4.23 is designed to patch an issue that occurs on Linux machines using Akka.Cluster.Sharding with `akka.cluster.sharding.state-store-mode=ddata` and `akka.cluster.sharding.remember-entities=on`: \"[System.DllNotFoundException: Unable to load shared library 'lmdb' or one of its dependencies](https://github.com/akkadotnet/akka.net/issues/5174)\"\n\nIn [Akka.NET v1.4.21 we added built-in support for Akka.DistributedData.LightningDb](https://github.com/akkadotnet/akka.net/releases/tag/1.4.21) for use with the `remember-entities` setting, but we never received any reports about this issue until shortly after v1.4.22 was released. Fundamentally, the problem was that our downstream dependency, Lightning.NET, doesn't include any of the necessary Linux native binaries in their distributions currently. So in the meantime, we've published our own \"vendored\" distribution of Lightning.NET to NuGet until a new official one is released that includes these binaries.\n\nThere are some other small [fixes included in Akka.NET v1.4.23 and you can read about them here](https://github.com/akkadotnet/akka.net/milestone/54).\n\n| COMMITS | LOC+ | LOC- | AUTHOR |\n| --- | --- | --- | --- |\n| 8 | 136 | 2803 | Aaron Stannard |\n| 2 | 61 | 3 | Gregorius Soedharmo |\n\n#### 1.4.22 August 05 2021 ####\n**Maintenance Release for Akka.NET 1.4**\n\nAkka.NET v1.4.22 is a fairly large release that includes an assortment of performance and bug fixes.\n\n**Performance Fixes**\nAkka.NET v1.4.22 includes a _significant_ performance improvement for `Ask<T>`, which now requires 1 internal `await` operation instead of 3:\n\n*Before*\n\n|                        Method | Iterations |      Mean |     Error |    StdDev |     Gen 0 | Gen 1 | Gen 2 | Allocated |\n|------------------------------ |----------- |----------:|----------:|----------:|----------:|------:|------:|----------:|\n| RequestResponseActorSelection |      10000 | 83.313 ms | 0.7553 ms | 0.7065 ms | 4666.6667 |     - |     - |     19 MB |\n|          CreateActorSelection |      10000 |  5.572 ms | 0.1066 ms | 0.1140 ms |  953.1250 |     - |     - |      4 MB |\n\n\n*After*\n\n|                        Method | Iterations |      Mean |     Error |    StdDev |     Gen 0 | Gen 1 | Gen 2 | Allocated |\n|------------------------------ |----------- |----------:|----------:|----------:|----------:|------:|------:|----------:|\n| RequestResponseActorSelection |      10000 | 71.216 ms | 0.9885 ms | 0.9246 ms | 4285.7143 |     - |     - |     17 MB |\n|          CreateActorSelection |      10000 |  5.462 ms | 0.0495 ms | 0.0439 ms |  953.1250 |     - |     - |      4 MB |\n\n**Bug Fixes and Improvements**\n\n* [Akka: Use ranged nuget versioning for Newtonsoft.Json](https://github.com/akkadotnet/akka.net/pull/5099)\n* [Akka: Pipe of Canceled Tasks](https://github.com/akkadotnet/akka.net/pull/5123)\n* [Akka: CircuitBreaker's Open state should return a faulted Task instead of throwing](https://github.com/akkadotnet/akka.net/issues/5117)\n* [Akka.Remote: Can DotNetty socket exception include information about the address?](https://github.com/akkadotnet/akka.net/issues/5130)\n* [Akka.Remote: log full exception upon deserialization failure](https://github.com/akkadotnet/akka.net/pull/5121)\n* [Akka.Cluster: SBR fix & update](https://github.com/akkadotnet/akka.net/pull/5147)\n* [Akka.Streams: Restart Source|Flow|Sink: Configurable stream restart deadline](https://github.com/akkadotnet/akka.net/pull/5122)\n* [Akka.DistributedData: ddata replicator stops but doesn't look like it can be restarted easily](https://github.com/akkadotnet/akka.net/pull/5145)\n* [Akka.DistributedData: ddata ReadMajorityPlus and WriteMajorityPlus](https://github.com/akkadotnet/akka.net/pull/5146)\n* [Akka.DistributedData: DData Max-Delta-Elements may not be fully honoured](https://github.com/akkadotnet/akka.net/issues/5157)\n\nYou can [see the full set of changes introduced in Akka.NET v1.4.22 here](https://github.com/akkadotnet/akka.net/milestone/52)\n\n**Akka.Cluster.Sharding.RepairTool**\nIn addition to the work done on Akka.NET itself, we've also created a separate tool for cleaning up any left-over data in the event of an Akka.Cluster.Sharding cluster running with `akka.cluster.sharding.state-store-mode=persistence` was terminated abruptly before it had a chance to cleanup.\n\nWe've added documentation to the Akka.NET website that explains how to use this tool here: https://getakka.net/articles/clustering/cluster-sharding.html#cleaning-up-akkapersistence-shard-state\n\nAnd the tool itself has documentation here: https://github.com/petabridge/Akka.Cluster.Sharding.RepairTool\n\n| COMMITS | LOC+ | LOC- | AUTHOR |       \n| --- | --- | --- | --- |                \n| 16 | 1254 | 160 | Gregorius Soedharmo |\n| 7 | 104 | 83 | Aaron Stannard |        \n| 5 | 8 | 8 | dependabot[bot] |          \n| 4 | 876 | 302 | Ismael Hamed |         \n| 2 | 3942 | 716 | zbynek001 |           \n| 2 | 17 | 3 | Andreas Dirnberger |      \n| 1 | 187 | 2 | andyfurnival |           \n| 1 | 110 | 5 | Igor Fedchenko |         \n"
        },
        {
          "name": "build-system",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 0.03515625,
          "content": "PowerShell.exe -file \"build.ps1\" %* "
        },
        {
          "name": "build.fsx",
          "type": "blob",
          "size": 22.009765625,
          "content": "open System.Runtime.ExceptionServices\n\n#I @\"tools/FAKE/tools\"\n#r \"FakeLib.dll\"\n\nopen System\nopen System.IO\nopen System.Text\n\n\nopen Fake\nopen Fake.DotNetCli\nopen Fake.DocFxHelper\nopen Fake.NuGet.Install\n\n// Variables\nlet configuration = \"Release\"\nlet solution = System.IO.Path.GetFullPath(string \"./src/Akka.sln\")\n\n// Directories\nlet toolsDir = __SOURCE_DIRECTORY__ @@ \"tools\"\nlet output = __SOURCE_DIRECTORY__  @@ \"bin\"\nlet outputTests = __SOURCE_DIRECTORY__ @@ \"TestResults\"\nlet outputPerfTests = __SOURCE_DIRECTORY__ @@ \"PerfResults\"\nlet outputBinaries = output @@ \"binaries\"\nlet outputNuGet = output @@ \"nuget\"\nlet outputMultiNode = outputTests @@ \"multinode\"\nlet outputFailedMultiNode = outputTests @@ \"multinode\" @@ \"FAILED_SPECS_LOGS\"\nlet outputBinariesNet45 = outputBinaries @@ \"net45\"\nlet outputBinariesNetStandard = outputBinaries @@ \"netstandard2.0\"\nlet outputBinariesNet = outputBinaries @@ \"net8.0\"\n\nlet buildNumber = environVarOrDefault \"BUILD_NUMBER\" \"0\"\nlet hasTeamCity = (not (buildNumber = \"0\")) // check if we have the TeamCity environment variable for build # set\nlet preReleaseVersionSuffix = \"beta\" + (if (not (buildNumber = \"0\")) then (buildNumber) else DateTime.UtcNow.Ticks.ToString())\n\nlet releaseNotes =\n    File.ReadLines (__SOURCE_DIRECTORY__ @@ \"RELEASE_NOTES.md\")\n    |> ReleaseNotesHelper.parseReleaseNotes\n\nlet versionFromReleaseNotes =\n    match releaseNotes.SemVer.PreRelease with\n    | Some r -> r.Origin\n    | None -> \"\"\n\nlet versionSuffix =\n    match (getBuildParam \"nugetprerelease\") with\n    | \"dev\" -> preReleaseVersionSuffix\n    | \"\" -> versionFromReleaseNotes\n    | str -> str\n\n\n// Incremental builds\nlet runIncrementally = hasBuildParam \"incremental\"\nlet incrementalistReport = output @@ \"incrementalist.txt\"\n\n// Configuration values for tests\nlet testNetFrameworkVersion = \"net48\"\nlet testNetVersion = \"net8.0\"\n\nTarget \"Clean\" (fun _ ->\n    ActivateFinalTarget \"KillCreatedProcesses\"\n\n    CleanDir output\n    CleanDir outputTests\n    CleanDir outputPerfTests\n    CleanDir outputBinaries\n    CleanDir outputNuGet\n    CleanDir outputMultiNode\n    CleanDir outputBinariesNet45\n    CleanDir outputBinariesNetStandard\n    CleanDir outputBinariesNet\n    CleanDir \"docs/_site\"\n\n    CleanDirs !! \"./**/bin\"\n    CleanDirs !! \"./**/obj\"\n)\n\n\n//--------------------------------------------------------------------------------\n// Incrementalist targets\n//--------------------------------------------------------------------------------\n// Pulls the set of all affected projects detected by Incrementalist from the cached file\nlet getAffectedProjectsTopology =\n    lazy(\n        log (sprintf \"Checking inside %s for changes\" incrementalistReport)\n\n        let incrementalistFoundChanges = File.Exists incrementalistReport\n\n        log (sprintf \"Found changes via Incrementalist? %b - searched inside %s\" incrementalistFoundChanges incrementalistReport)\n        if not incrementalistFoundChanges then None\n        else\n            let sortedItems = (File.ReadAllLines incrementalistReport) |> Seq.map (fun x -> (x.Split ','))\n                              |> Seq.map (fun items -> (items.[0], items))\n            let d = dict sortedItems\n            Some(d)\n    )\n\nlet getAffectedProjects =\n    lazy(\n        let finalProjects = getAffectedProjectsTopology.Value\n        match finalProjects with\n        | None -> None\n        | Some p -> Some (p.Values |> Seq.concat)\n    )\n\nTarget \"ComputeIncrementalChanges\" (fun _ ->\n    if runIncrementally then\n        let targetBranch = match getBuildParam \"targetBranch\" with\n                            | \"\" -> \"dev\"\n                            | null -> \"dev\"\n                            | b -> b\n        let incrementalistPath =\n                let incrementalistDir = toolsDir @@ \"incrementalist\"\n                let globalTool = tryFindFileOnPath \"incrementalist.exe\"\n                match globalTool with\n                    | Some t -> t\n                    | None -> if isWindows then findToolInSubPath \"incrementalist.exe\" incrementalistDir\n                              elif isMacOS then incrementalistDir @@ \"incrementalist\"\n                              else incrementalistDir @@ \"incrementalist\"\n\n\n        let args = StringBuilder()\n                |> append \"-b\"\n                |> append targetBranch\n                |> append \"-s\"\n                |> append solution\n                |> append \"-f\"\n                |> append incrementalistReport\n                |> toText\n\n        let result = ExecProcess(fun info ->\n            info.FileName <- incrementalistPath\n            info.WorkingDirectory <- __SOURCE_DIRECTORY__\n            info.Arguments <- args) (System.TimeSpan.FromMinutes 5.0) (* Reasonably long-running task. *)\n\n        if result <> 0 then failwithf \"Incrementalist failed. %s\" args\n    else\n        log \"Skipping Incrementalist - not enabled for this build\"\n)\n\nlet filterProjects selectedProject =\n    if runIncrementally then\n        let affectedProjects = getAffectedProjects.Value\n\n        (*\n        if affectedProjects.IsSome then\n            log (sprintf \"Searching for %s inside [%s]\" selectedProject (String.Join(\",\", affectedProjects.Value)))\n        else\n            log \"No affected projects found\"\n        *)\n\n        match affectedProjects with\n        | None -> None\n        | Some x when x |> Seq.exists (fun n -> n.Contains (System.IO.Path.GetFileName(string selectedProject))) -> Some selectedProject\n        | _ -> None\n    else\n        log \"Not running incrementally\"\n        Some selectedProject\n\n//--------------------------------------------------------------------------------\n// Build targets\n//--------------------------------------------------------------------------------\nlet skipBuild =\n    lazy(\n        match getAffectedProjects.Value with\n        | None when runIncrementally -> true\n        | _ -> false\n    )\n\nlet headProjects =\n    lazy(\n        match getAffectedProjectsTopology.Value with\n        | None when runIncrementally -> [||]\n        | None -> [|solution|]\n        | Some p -> p.Keys |> Seq.toArray\n    )\n\nTarget \"AssemblyInfo\" (fun _ ->\n    XmlPokeInnerText \"./src/Directory.Build.props\" \"//Project/PropertyGroup/VersionPrefix\" releaseNotes.AssemblyVersion\n    XmlPokeInnerText \"./src/Directory.Build.props\" \"//Project/PropertyGroup/PackageReleaseNotes\" (releaseNotes.Notes |> String.concat \"\\n\")\n)\n\nTarget \"Build\" (fun _ ->\n    if not skipBuild.Value then\n        let additionalArgs = if versionSuffix.Length > 0 then [sprintf \"/p:VersionSuffix=%s\" versionSuffix] else []\n        let buildProject proj =\n            DotNetCli.Build\n                (fun p ->\n                    { p with\n                        Project = proj\n                        Configuration = configuration\n                        AdditionalArgs = additionalArgs })\n\n        match getAffectedProjects.Value with\n        | Some p -> p |> Seq.iter buildProject\n        | None -> buildProject solution // build the entire solution if incrementalist is disabled\n)\n\n//--------------------------------------------------------------------------------\n// Tests targets\n//--------------------------------------------------------------------------------\ntype Runtime =\n    | Net\n    | NetFramework\n\nlet getTestAssembly runtime project =\n    let assemblyPath = match runtime with\n                        | NetFramework -> !! (\"src\" @@ \"**\" @@ \"bin\" @@ \"Release\" @@ testNetFrameworkVersion @@ fileNameWithoutExt project + \".dll\")\n                        | Net -> !! (\"src\" @@ \"**\" @@ \"bin\" @@ \"Release\" @@ testNetVersion @@ fileNameWithoutExt project + \".dll\")\n\n    if Seq.isEmpty assemblyPath then\n        None\n    else\n        Some (assemblyPath |> Seq.head)\n\nmodule internal ResultHandling =\n    let (|OK|Failure|) = function\n        | 0 -> OK\n        | x -> Failure x\n\n    let buildErrorMessage = function\n        | OK -> None\n        | Failure errorCode ->\n            Some (sprintf \"xUnit2 reported an error (Error Code %d)\" errorCode)\n\n    let failBuildWithMessage = function\n        | DontFailBuild -> traceError\n        | _ -> (fun m -> raise(FailedTestsException m))\n\n    let failBuildIfXUnitReportedError errorLevel =\n        buildErrorMessage\n        >> Option.iter (failBuildWithMessage errorLevel)\n\nTarget \"RunTests\" (fun _ ->\n    let projects =\n        let rawProjects = match (isWindows) with\n                            | true -> !! \"./src/**/*.Tests.*sproj\"\n                                      ++ \"./src/**/Akka.Streams.Tests.TCK.csproj\"\n                                      -- \"./src/**/*.Tests.MultiNode.csproj\"\n                                      -- \"./src/examples/**\"\n                            | _ -> !! \"./src/**/*.Tests.*sproj\" // if you need to filter specs for Linux vs. Windows, do it here\n                                   -- \"./src/**/*.Tests.MultiNode.csproj\"\n                                   -- \"./src/examples/**\"\n        rawProjects |> Seq.choose filterProjects\n\n    let runSingleProject project =\n        let arguments =\n            match (hasTeamCity) with\n            | true -> (sprintf \"test -c Release --blame-crash --blame-hang-timeout 2m --no-build --logger:trx --logger:\\\"console;verbosity=normal\\\" --framework %s --results-directory \\\"%s\\\" -- -parallel none -teamcity\" testNetFrameworkVersion outputTests)\n            | false -> (sprintf \"test -c Release --blame-crash --blame-hang-timeout 2m --no-build --logger:trx --logger:\\\"console;verbosity=normal\\\" --framework %s --results-directory \\\"%s\\\" -- -parallel none\" testNetFrameworkVersion outputTests)\n\n        let result = ExecProcess(fun info ->\n            info.FileName <- \"dotnet\"\n            info.WorkingDirectory <- (Directory.GetParent project).FullName\n            info.Arguments <- arguments) (TimeSpan.FromMinutes 30.0)\n\n        ResultHandling.failBuildIfXUnitReportedError TestRunnerErrorLevel.Error result\n\n    CreateDir outputTests\n    projects |> Seq.iter (runSingleProject)\n)\n\n\nTarget \"RunTestsNet\" (fun _ ->\n    if not skipBuild.Value then\n        let projects =\n            let rawProjects = match (isWindows) with\n                                | true -> !! \"./src/**/*.Tests.*sproj\"\n                                          ++ \"./src/**/Akka.Streams.Tests.TCK.csproj\"\n                                          -- \"./src/**/*.Tests.MultiNode.csproj\"\n                                          -- \"./src/examples/**\"\n                                | _ -> !! \"./src/**/*.Tests.*sproj\" // if you need to filter specs for Linux vs. Windows, do it here\n                                       -- \"./src/**/*.Tests.MultiNode.csproj\"\n                                       -- \"./src/examples/**\"\n            rawProjects |> Seq.choose filterProjects\n\n        let runSingleProject project =\n            let arguments =\n                match (hasTeamCity) with\n                | true -> (sprintf \"test -c Release --blame-crash --blame-hang-timeout 2m --no-build --logger:trx --logger:\\\"console;verbosity=normal\\\" --framework %s --results-directory \\\"%s\\\" -- -parallel none -teamcity\" testNetVersion outputTests)\n                | false -> (sprintf \"test -c Release --blame-crash --blame-hang-timeout 2m --no-build --logger:trx --logger:\\\"console;verbosity=normal\\\" --framework %s --results-directory \\\"%s\\\" -- -parallel none\" testNetVersion outputTests)\n\n            let result = ExecProcess(fun info ->\n                info.FileName <- \"dotnet\"\n                info.WorkingDirectory <- (Directory.GetParent project).FullName\n                info.Arguments <- arguments) (TimeSpan.FromMinutes 30.0)\n\n            ResultHandling.failBuildIfXUnitReportedError TestRunnerErrorLevel.Error result\n\n        CreateDir outputTests\n        projects |> Seq.iter (runSingleProject)\n)\n\nTarget \"MultiNodeTestsNet\" (fun _ ->\n    if not skipBuild.Value then\n        setEnvironVar \"AKKA_CLUSTER_ASSERT\" \"on\" // needed to enable assert invariants for Akka.Cluster\n\n        let projects =\n            let rawProjects = match (isWindows) with\n                                | true -> !! \"./src/**/*.Tests.MultiNode.csproj\"\n                                | _ -> !! \"./src/**/*.Tests.MultiNode.csproj\" // if you need to filter specs for Linux vs. Windows, do it here\n            rawProjects |> Seq.choose filterProjects\n\n        let projectDlls = projects |> Seq.map ( fun project ->\n                let assemblyName = fileNameWithoutExt project\n                (directory project) @@ \"bin\" @@ \"Release\" @@ testNetVersion @@ assemblyName + \".dll\" \n            )\n        \n        let runSingleProject projectDll =\n            let arguments =\n                match (hasTeamCity) with\n                | true -> (sprintf \"test \\\"%s\\\" -l:\\\"console;verbosity=detailed\\\" --framework %s --results-directory \\\"%s\\\" -- -teamcity\" projectDll testNetVersion outputMultiNode)\n                | false -> (sprintf \"test \\\"%s\\\" -l:\\\"console;verbosity=detailed\\\" --framework %s --results-directory \\\"%s\\\"\" projectDll testNetVersion outputMultiNode)\n\n            let resultPath = (directory projectDll)\n            File.WriteAllText(\n                (resultPath @@ \"xunit.multinode.runner.json\"),\n                (sprintf \"{\\\"outputDirectory\\\":\\\"%s\\\", \\\"useBuiltInTrxReporter\\\":true}\" outputMultiNode).Replace(\"\\\\\", \"\\\\\\\\\"))\n            \n            let result = ExecProcess(fun info ->\n                info.FileName <- \"dotnet\"\n                info.WorkingDirectory <- outputMultiNode\n                info.Arguments <- arguments) (TimeSpan.FromMinutes 90.0)\n\n            ResultHandling.failBuildIfXUnitReportedError TestRunnerErrorLevel.Error result\n\n        CreateDir outputMultiNode\n        projectDlls |> Seq.iter ( fun projectDll -> \n            runSingleProject projectDll\n        )\n)\n\nTarget \"NBench\" (fun _ ->\n    ensureDirectory outputPerfTests\n    let projects =\n        let rawProjects = match (isWindows) with\n                            | true -> !! \"./src/**/*Tests.Performance.csproj\"\n                            | _ -> !! \"./src/**/*Tests.Performance.csproj\" // if you need to filter specs for Linux vs. Windows, do it here\n        rawProjects |> Seq.choose filterProjects\n\n    projects |> Seq.iter(fun project ->\n        let args = new StringBuilder()\n                |> append \"run\"\n                |> append \"--no-build\"\n                |> append \"-c\"\n                |> append configuration\n                |> append \" -- \"\n                |> append \"--output\"\n                |> append outputPerfTests\n                |> append \"--concurrent\"\n                |> append \"true\"\n                |> append \"--trace\"\n                |> append \"true\"\n                |> append \"--diagnostic\"\n                |> toText\n\n        let result = ExecProcess(fun info ->\n            info.FileName <- \"dotnet\"\n            info.WorkingDirectory <- (Directory.GetParent project).FullName\n            info.Arguments <- args) (System.TimeSpan.FromMinutes 15.0) (* Reasonably long-running task. *)\n        if result <> 0 then failwithf \"NBench.Runner failed. %s %s\" \"dotnet\" args\n    )\n)\n\n//--------------------------------------------------------------------------------\n// Nuget targets\n//--------------------------------------------------------------------------------\n\nTarget \"CreateNuget\" (fun _ ->\n    CreateDir outputNuGet // need this to stop Azure pipelines copy stage from error-ing out\n    if not skipBuild.Value then\n        let projects =\n            let rawProjects = !! \"src/**/*.*sproj\"\n                            -- \"src/**/*.Tests*.*sproj\"\n                            -- \"src/benchmark/**/*.*sproj\"\n                            -- \"src/examples/**/*.*sproj\"\n                            -- \"src/**/*.MultiNodeTestRunner.csproj\"\n                            -- \"src/**/*.MultiNodeTestRunner.Shared.csproj\"\n                            -- \"src/**/*.NodeTestRunner.csproj\"\n            rawProjects |> Seq.choose filterProjects\n\n        let runSingleProject project =\n            DotNetCli.Pack\n                (fun p ->\n                    { p with\n                        Project = project\n                        Configuration = configuration\n                        AdditionalArgs = [\"--include-symbols\"]\n                        VersionSuffix = versionSuffix\n                        OutputPath = \"\\\"\" + outputNuGet + \"\\\"\" })\n\n        projects |> Seq.iter (runSingleProject)\n)\n\nTarget \"PublishNuget\" (fun _ ->\n    let nugetExe = FullName @\"./tools/nuget.exe\"\n    let rec publishPackage url apiKey trialsLeft packageFile =\n        let tracing = enableProcessTracing\n        enableProcessTracing <- false\n        let args p =\n            match p with\n            | (pack, key, \"\") -> sprintf \"push \\\"%s\\\" %s\" pack key\n            | (pack, key, url) -> sprintf \"push \\\"%s\\\" %s -source %s\" pack key url\n\n        tracefn \"Pushing %s Attempts left: %d\" (FullName packageFile) trialsLeft\n        try\n            DotNetCli.RunCommand\n                (fun p ->\n                    { p with\n                        TimeOut = TimeSpan.FromMinutes 10. })\n                (sprintf \"nuget push %s --api-key %s --source %s\" packageFile apiKey url)\n        with exn ->\n            if (trialsLeft > 0) then (publishPackage url apiKey (trialsLeft-1) packageFile)\n            else raise exn\n    let shouldPushNugetPackages = hasBuildParam \"nugetkey\"\n\n    if (shouldPushNugetPackages) then\n        printfn \"Pushing nuget packages\"\n        if shouldPushNugetPackages then\n            let normalPackages= !! (outputNuGet @@ \"*.nupkg\") |> Seq.sortBy(fun x -> x.ToLower())\n            for package in normalPackages do\n                try\n                    publishPackage (getBuildParamOrDefault \"nugetpublishurl\" \"https://api.nuget.org/v3/index.json\") (getBuildParam \"nugetkey\") 3 package\n                with exn ->\n                    printfn \"%s\" exn.Message\n)\n\n//--------------------------------------------------------------------------------\n// Documentation\n//--------------------------------------------------------------------------------\nTarget \"DocFx\" (fun _ ->\n    // build the projects with samples\n    let docsTestsProject = \"./src/core/Akka.Docs.Tests/Akka.Docs.Tests.csproj\"\n    DotNetCli.Restore (fun p -> { p with Project = docsTestsProject })\n    DotNetCli.Build (fun p -> { p with Project = docsTestsProject; Configuration = configuration })\n    let docsTutorialsProject = \"./src/core/Akka.Docs.Tutorials/Akka.Docs.Tutorials.csproj\"\n    DotNetCli.Restore (fun p -> { p with Project = docsTutorialsProject })\n    DotNetCli.Build (fun p -> { p with Project = docsTutorialsProject; Configuration = configuration })\n\n    // install MSDN references\n    NugetInstall (fun p ->\n            { p with\n                ExcludeVersion = true\n                Version = \"0.1.0-alpha-1611021200\"\n                OutputDirectory = currentDirectory @@ \"tools\" }) \"msdn.4.5.2\"\n\n    let docsPath = FullName \"./docs\"\n    let docFxPath = FullName(findToolInSubPath \"docfx.exe\" \"tools/docfx.console/tools\")\n    \n    let args = StringBuilder()\n                |> append (docsPath @@ \"docfx.json\" )\n                |> append (\"--warningsAsErrors\")\n                |> toText\n    \n    let result = ExecProcess(fun info ->\n            info.FileName <- docFxPath\n            info.WorkingDirectory <- (Path.GetDirectoryName (FullName docFxPath))\n            info.Arguments <- args) (System.TimeSpan.FromMinutes 45.0) (* Reasonably long-running task. *)\n    if result <> 0 then failwithf \"DocFX failed. %s %s\" docFxPath args\n)\n\nFinalTarget \"KillCreatedProcesses\" (fun _ ->\n    log \"Shutting down dotnet build-server\"\n    let result = ExecProcess(fun info ->\n            info.FileName <- \"dotnet\"\n            info.WorkingDirectory <- __SOURCE_DIRECTORY__\n            info.Arguments <- \"build-server shutdown\") (System.TimeSpan.FromMinutes 2.0)\n    if result <> 0 then failwithf \"dotnet build-server shutdown failed\"\n)\n\n//--------------------------------------------------------------------------------\n// Help\n//--------------------------------------------------------------------------------\n\nTarget \"Help\" <| fun _ ->\n    List.iter printfn [\n      \"usage:\"\n      \"/build [target]\"\n      \"\"\n      \" Targets for building:\"\n      \" * Build      Builds\"\n      \" * Nuget      Create and optionally publish nugets packages\"\n      \" * RunTests   Runs tests\"\n      \" * All        Builds, run tests, creates and optionally publish nuget packages\"\n      \"\"\n      \" Other Targets\"\n      \" * Help       Display this help\"\n      \"\"]\n\nTarget \"HelpNuget\" <| fun _ ->\n    List.iter printfn [\n      \"usage: \"\n      \"build Nuget [nugetkey=<key> [nugetpublishurl=<url>]] [symbolskey=<key> symbolspublishurl=<url>]\"\n      \"\"\n      \"In order to publish a nuget package, keys must be specified.\"\n      \"If a key is not specified the nuget packages will only be created on disk\"\n      \"After a build you can find them in build/nuget\"\n      \"\"\n      \"For pushing nuget packages and symbols to nuget.org\"\n      \"you need to specify nugetkey=<key>\"\n      \"   build Nuget nugetKey=<key for nuget.org>\"\n      \"\"\n      \"For pushing the ordinary nuget packages to another place than nuget.org specify the url\"\n      \"  nugetkey=<key>  nugetpublishurl=<url>  \"\n      \"\"\n      \"For pushing symbols packages specify:\"\n      \"  symbolskey=<key>  symbolspublishurl=<url> \"\n      \"\"\n      \"Examples:\"\n      \"  build Nuget                      Build nuget packages to the build/nuget folder\"\n      \"\"\n      \"  build Nuget versionsuffix=beta1  Build nuget packages with the custom version suffix\"\n      \"\"\n      \"  build Nuget nugetkey=123         Build and publish to nuget.org and symbolsource.org\"\n      \"\"\n      \"  build Nuget nugetprerelease=dev nugetkey=123 nugetpublishurl=http://abcsymbolspublishurl=http://xyz\"\n      \"\"]\n\n//--------------------------------------------------------------------------------\n//  Target dependencies\n//--------------------------------------------------------------------------------\n\nTarget \"BuildRelease\" DoNothing\nTarget \"All\" DoNothing\nTarget \"Nuget\" DoNothing\nTarget \"RunTestsFull\" DoNothing\n\n// build dependencies\n\"Clean\" ==> \"AssemblyInfo\" ==> \"Build\"\n\"Build\" ==> \"BuildRelease\"\n\"ComputeIncrementalChanges\" ==> \"Build\" // compute incremental changes\n\n// tests dependencies\n\"Build\" ==> \"RunTests\"\n\"Build\" ==> \"RunTestsNet\"\n\"Build\" ==> \"NBench\"\n\n\"BuildRelease\" ==> \"MultiNodeTestsNet\"\n\n// nuget dependencies\n\"BuildRelease\" ==> \"CreateNuget\" ==> \"PublishNuget\" ==> \"Nuget\"\n\n// docs\n\"BuildRelease\" ==> \"Docfx\"\n\n// all\n\"BuildRelease\" ==> \"All\"\n\"RunTests\" ==> \"All\"\n\"RunTestsNet\" ==> \"All\"\n\"MultiNodeTestsNet\" ==> \"All\"\n\"NBench\" ==> \"All\"\n\nRunTargetOrDefault \"Help\"\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 4.013671875,
          "content": "<#\n.SYNOPSIS\nThis is a Powershell script to bootstrap a Fake build.\n.DESCRIPTION\nThis Powershell script will download NuGet if missing, restore NuGet tools (including Fake)\nand execute your Fake build script with the parameters you provide.\n.PARAMETER Target\nThe build script target to run.\n.PARAMETER Configuration\nThe build configuration to use.\n.PARAMETER Verbosity\nSpecifies the amount of information to be displayed.\n.PARAMETER WhatIf\nPerforms a dry run of the build script.\nNo tasks will be executed.\n.PARAMETER ScriptArgs\nRemaining arguments are added here.\n#>\n\n[CmdletBinding()]\nParam(\n    [string]$Target = \"Default\",\n    [ValidateSet(\"Release\", \"Debug\")]\n    [string]$Configuration = \"Release\",\n    [ValidateSet(\"Quiet\", \"Minimal\", \"Normal\", \"Verbose\", \"Diagnostic\")]\n    [string]$Verbosity = \"Verbose\",\n    [switch]$WhatIf,\n    [Parameter(Position=0,Mandatory=$false,ValueFromRemainingArguments=$true)]\n    [string[]]$ScriptArgs\n)\n\n$FakeVersion = \"4.63.0\"\n$NugetVersion = \"5.8.0\";\n$NugetUrl = \"https://dist.nuget.org/win-x86-commandline/v$NugetVersion/nuget.exe\"\n$DocfxVersion = \"2.59.4\"\n\n$IncrementalistVersion = \"0.9.0\";\n\n# Make sure tools folder exists\n$PSScriptRoot = Split-Path $MyInvocation.MyCommand.Path -Parent\n$ToolPath = Join-Path $PSScriptRoot \"tools\"\nif (!(Test-Path $ToolPath)) {\n    Write-Verbose \"Creating tools directory...\"\n    New-Item -Path $ToolPath -Type directory | out-null\n}\n\n###########################################################################\n# INSTALL NUGET\n###########################################################################\n\n# Make sure nuget.exe exists.\n$NugetPath = Join-Path $ToolPath \"nuget.exe\"\nif (!(Test-Path $NugetPath)) {\n    Write-Host \"Downloading NuGet.exe...\"\n    (New-Object System.Net.WebClient).DownloadFile($NugetUrl, $NugetPath);\n}\n\n###########################################################################\n# INSTALL FAKE\n###########################################################################\n# Make sure Fake has been installed.\n\n$FakeExePath = Join-Path $ToolPath \"FAKE/tools/FAKE.exe\"\nif (!(Test-Path $FakeExePath)) {\n    Write-Host \"Installing Fake...\"\n    Invoke-Expression \"&`\"$NugetPath`\" install Fake -ExcludeVersion -Version $FakeVersion -OutputDirectory `\"$ToolPath`\"\" | Out-Null;\n    if ($LASTEXITCODE -ne 0) {\n        Throw \"An error occured while restoring Fake from NuGet.\"\n    }\n}\n\n###########################################################################\n# Docfx\n###########################################################################\n\n# Make sure Docfx has been installed.\n$DocfxExePath = Join-Path $ToolPath \"docfx.console/tools/docfx.exe\"\nif (!(Test-Path $DocfxExePath)) {\n    Write-Host \"Installing Docfx...\"\n    Invoke-Expression \"&`\"$NugetPath`\" install docfx.console -ExcludeVersion -Version $DocfxVersion -OutputDirectory `\"$ToolPath`\"\" | Out-Null;\n    if ($LASTEXITCODE -ne 0) {\n        Throw \"An error occured while restoring docfx.console from NuGet.\"\n    }\n}\n\n###########################################################################\n# Incrementalist\n###########################################################################\n\n# Make sure the Incrementalist has been installed\nif (Get-Command incrementalist -ErrorAction SilentlyContinue) {\n    Write-Host \"Found Incrementalist. Skipping install.\"\n}\nelse{\n    $IncrementalistFolder = Join-Path $ToolPath \"incrementalist\"\n    Write-Host \"Incrementalist not found. Installing to ... $IncrementalistFolder\"\n    dotnet tool install Incrementalist.Cmd --version $IncrementalistVersion --tool-path \"$IncrementalistFolder\"\n}\n\n###########################################################################\n# RUN BUILD SCRIPT\n###########################################################################\n\n# Build the argument list.\n$Arguments = @{\n    target=$Target;\n    configuration=$Configuration;\n    verbosity=$Verbosity;\n    dryrun=$WhatIf;\n}.GetEnumerator() | %{\"--{0}=`\"{1}`\"\" -f $_.key, $_.value };\n\n# Start Fake\nWrite-Host \"Running build script...\"\nInvoke-Expression \"& `\"$FakeExePath`\" `\"build.fsx`\" $ScriptArgs $Arguments\"\n \nexit $LASTEXITCODE"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 3.248046875,
          "content": "#!/usr/bin/env bash\n##########################################################################\n# This is the Fake bootstrapper script for Linux and OS X.\n##########################################################################\n\n# Define directories.\nSCRIPT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\nTOOLS_DIR=$SCRIPT_DIR/tools\nINCREMENTALIST_DIR=$TOOLS_DIR/incrementalist\nINCREMENTALIST_EXE=$INCREMENTALIST_DIR/Incrementalist.Cmd.exe\nNUGET_EXE=$TOOLS_DIR/nuget.exe\nNUGET_URL=https://dist.nuget.org/win-x86-commandline/v5.8.0/nuget.exe\nFAKE_VERSION=4.63.0\nFAKE_EXE=$TOOLS_DIR/FAKE/tools/FAKE.exe\nDOTNET_EXE=$SCRIPT_DIR/.dotnet/dotnet\nDOTNETCORE_VERSION=3.1.105\nDOTNET_VERSION=5.0.101\nDOTNET_INSTALLER_URL=https://dot.net/v1/dotnet-install.sh\nDOTNET_CHANNEL=LTS\nPROTOBUF_VERSION=3.21.5\nINCREMENTALIST_VERSION=0.9.0\n\n# Define default arguments.\nTARGET=\"Default\"\nCONFIGURATION=\"Release\"\nVERBOSITY=\"verbose\"\nDRYRUN=\nSCRIPT_ARGUMENTS=()\n\n# Parse arguments.\nfor i in \"$@\"; do\n    case $1 in\n        -t|--target) TARGET=\"$2\"; shift ;;\n        -c|--configuration) CONFIGURATION=\"$2\"; shift ;;\n        -v|--verbosity) VERBOSITY=\"$2\"; shift ;;\n        -d|--dryrun) DRYRUN=\"-dryrun\" ;;\n        --) shift; SCRIPT_ARGUMENTS+=(\"$@\"); break ;;\n        *) SCRIPT_ARGUMENTS+=(\"$1\") ;;\n    esac\n    shift\ndone\n\n# Make sure the tools folder exist.\nif [ ! -d \"$TOOLS_DIR\" ]; then\n  mkdir \"$TOOLS_DIR\"\nfi\n\n###########################################################################\n# INSTALL NUGET\n###########################################################################\n\n# Download NuGet if it does not exist.\nif [ ! -f \"$NUGET_EXE\" ]; then\n    echo \"Downloading NuGet...\"\n    curl -Lsfo \"$NUGET_EXE\" $NUGET_URL\n    if [ $? -ne 0 ]; then\n        echo \"An error occured while downloading nuget.exe.\"\n        exit 1\n    fi\nfi\n\n###########################################################################\n# INSTALL FAKE\n###########################################################################\n\nif [ ! -f \"$FAKE_EXE\" ]; then\n    mono \"$NUGET_EXE\" install Fake -ExcludeVersion -Version $FAKE_VERSION -OutputDirectory \"$TOOLS_DIR\"\n    if [ $? -ne 0 ]; then\n        echo \"An error occured while installing Cake.\"\n        exit 1\n    fi\nfi\n\n# Make sure that Fake has been installed.\nif [ ! -f \"$FAKE_EXE\" ]; then\n    echo \"Could not find Fake.exe at '$FAKE_EXE'.\"\n    exit 1\nfi\n\n###########################################################################\n# INSTALL Incrementalist\n###########################################################################\nif [ ! -f \"$INCREMENTALIST_EXE\" ]; then\n    dotnet tool install Incrementalist.Cmd --version $INCREMENTALIST_VERSION --tool-path \"$INCREMENTALIST_DIR\"\n    if [ $? -ne 0 ]; then\n        echo \"Incrementalist already installed.\"\n    fi\nfi\n\n###########################################################################\n# WORKAROUND FOR MONO\n###########################################################################\nexport FrameworkPathOverride=/usr/lib/mono/4.5/\n\n###########################################################################\n# RUN BUILD SCRIPT\n###########################################################################\n\n# Start Fake\nexec mono \"$FAKE_EXE\" build.fsx \"${SCRIPT_ARGUMENTS[@]}\" --verbosity=$VERBOSITY --configuration=$CONFIGURATION --target=$TARGET $DRYRUN\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "serve-docs.cmd",
          "type": "blob",
          "size": 0.0732421875,
          "content": "PowerShell.exe -file \"serve-docs.ps1\" %*  .\\docs\\docfx.json --serve -p 8100"
        },
        {
          "name": "serve-docs.ps1",
          "type": "blob",
          "size": 0.697265625,
          "content": "# docfx.ps1\n$VisualStudioVersion = \"15.0\";\n$DotnetSDKVersion = \"2.0.0\";\n\n# Get dotnet paths\n$MSBuildExtensionsPath = \"C:\\Program Files\\dotnet\\sdk\\\" + $DotnetSDKVersion;\n$MSBuildSDKsPath = $MSBuildExtensionsPath + \"\\SDKs\";\n\n# Get Visual Studio install path\n$VSINSTALLDIR =  $(Get-ItemProperty \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\VisualStudio\\SxS\\VS7\").$VisualStudioVersion;\n\n# Add Visual Studio environment variables\n$env:VisualStudioVersion = $VisualStudioVersion;\n$env:VSINSTALLDIR = $VSINSTALLDIR;\n\n# Add dotnet environment variables\n$env:MSBuildExtensionsPath = $MSBuildExtensionsPath;\n$env:MSBuildSDKsPath = $MSBuildSDKsPath;\n\n# Build our docs\n& .\\tools\\docfx.console\\tools\\docfx @args"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}